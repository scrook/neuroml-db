// Cell: bAC217_L6_BTC_9e335e53f6_0_0
/*
{
  "id" : "bAC217_L6_BTC_9e335e53f6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.16881, -12.804, 0.0, 3.44428", "1.99522, -11.5105, 0.0, 5.75363", "1.82164, -10.2169, 0.0, 7.75663", "1.64805, -8.92341, 0.0, 8.89598", "1.47447, -7.62987, 0.0, 9.91596", "1.30088, -6.33633, 0.0, 10.9547", "1.1273, -5.04279, 0.0, 11.8384", "0.953711, -3.74926, 0.0, 12.6846", "0.780126, -2.45572, 0.0, 13.1367", "0.606541, -1.16218, 0.0, 13.4162", "0.432956, 0.13136, 0.0, 13.3909", "0.25937, 1.4249, 0.0, 13.2383", "0.085785, 2.71844, 0.0, 12.8868", "-0.0878002, 4.01197, 0.0, 12.8103", "-0.261385, 5.30551, 0.0, 12.9125", "-0.434971, 6.59905, 0.0, 12.4763", "-0.608556, 7.89259, 0.0, 11.6777", "-0.782141, 9.18613, 0.0, 10.5994", "-0.955726, 10.4797, 0.0, 9.19908", "-1.12931, 11.7732, 0.0, 7.03753", "-1.3029, 13.0667, 0.0, 4.1381" ]
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "3.21969, -13.2049, -4.59, 1.84", "3.21969, -13.2049, -4.59, 1.84", "3.46622, -14.0628, -4.63588, 1.84", "3.9921, -15.8928, -4.73376, 2.14", "4.32872, -17.0642, -4.79641, 1.92", "4.75674, -18.5537, -4.87608, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "0.219697, -13.6879, -1.64, 2.43", "0.219697, -13.6879, -1.64, 2.43", "-0.303923, -14.9973, -1.79716, 1.92", "-0.739644, -16.087, -1.92794, 2.14", "-1.0094, -16.7616, -2.0089, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.5397, 13.1921, 0.0, 3.02", "1.5397, 13.1921, 0.0, 3.02", "1.77914, 14.1345, -0.054341, 2.36", "2.09875, 15.3002, -0.113926, 2.36", "2.6297, 17.1729, -0.199326, 2.29", "3.03837, 18.5609, -0.270555, 2.21", "3.45735, 19.934, -0.344335, 2.29", "3.82512, 21.1168, -0.410183, 2.43", "4.24664, 22.4251, -0.487942, 2.36", "4.60073, 23.448, -0.542384, 2.51", "4.98071, 24.4459, -0.596031, 3.17", "5.22748, 25.0601, -0.620397, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000018730548563
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.3029, 13.0667, 0.0, 0.476408", "-3.29794, 27.9334, 0.0, 0.476408", "-5.29297, 42.8002, 0.0, 0.476408" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "4.75674, -18.5537, -4.87608, 0.88", "4.16872, -18.4296, -5.54604, 0.88", "3.59096, -18.3825, -6.19252, 0.81", "3.0151, -18.4027, -6.85325, 0.81", "2.35065, -18.4936, -7.63902, 0.96", "1.72375, -18.6417, -8.41218, 1.4", "1.12918, -18.8568, -9.20625, 1.77", "0.610336, -19.0961, -9.94075, 0.44", "0.16377, -19.3875, -10.6033, 0.44", "-0.0897729, -19.6228, -10.9766, 0.44", "-0.287361, -19.9197, -11.311, 0.66", "-0.496205, -20.5154, -11.8486, 1.03", "-4.68888, -20.7698, -18.9187, 1.03", "-7.76207, -20.6439, -26.5432, 1.03", "-9.09425, -19.4167, -34.5661, 1.03" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.75674, -18.5537, -4.87608, 1.11", "5.48964, -19.4931, -4.82376, 1.11", "6.13948, -20.373, -4.72591, 1.25", "6.39132, -20.7313, -4.66702, 1.7", "6.83312, -21.3889, -4.54658, 1.77", "7.58645, -22.5152, -4.34059, 1.33", "8.16816, -23.3932, -4.18886, 1.03", "8.6073, -24.0818, -4.04127, 1.03", "9.04417, -24.7966, -3.9061, 1.03", "9.41472, -25.4301, -3.82058, 1.33", "9.95165, -26.4065, -3.75744, 1.33", "10.4413, -27.3635, -3.78361, 0.74", "10.921, -28.3777, -3.89914, 0.74", "11.4179, -29.4172, -4.06165, 0.88", "11.7914, -30.1965, -4.19891, 1.33", "12.0871, -30.7878, -4.27892, 2.06", "12.7136, -32.0174, -4.39193, 0.96", "13.2499, -32.9994, -4.42789, 0.74", "13.6627, -33.7101, -4.41927, 1.18", "13.9511, -34.183, -4.37305, 1.55", "14.7037, -35.3935, -4.2205, 0.88", "15.1494, -36.1217, -4.15295, 0.81", "15.7481, -37.1349, -4.1312, 0.88", "16.0706, -37.7183, -4.16913, 1.4", "16.3367, -38.255, -4.25517, 1.4", "16.7152, -39.1046, -4.45626, 0.81", "17.0577, -39.9485, -4.72001, 0.88", "17.3282, -40.6227, -4.95702, 0.52", "17.4881, -41.0086, -5.10371, 0.96", "17.7857, -41.6448, -5.32963, 1.92", "18.2011, -42.4453, -5.57246, 0.74", "18.6218, -43.1928, -5.76887, 0.74", "19.0609, -43.9011, -5.92607, 0.96", "19.5056, -44.5455, -6.06885, 1.55", "20.3106, -45.5978, -6.33162, 0.81", "21.004, -46.4215, -6.55701, 0.81", "21.6716, -47.1616, -6.77493, 1.25", "22.3329, -47.8722, -6.98839, 1.4", "23.3091, -48.9281, -7.26523, 0.81", "24.143, -49.8739, -7.46231, 0.81", "24.6161, -50.4195, -7.55992, 1.18", "25.1624, -51.0136, -7.65319, 1.55", "25.747, -51.6456, -7.72553, 1.55", "26.4548, -52.4652, -7.78362, 0.59", "27.1366, -53.3336, -7.76568, 0.81", "27.5766, -53.9412, -7.70015, 1.33", "28.2342, -54.891, -7.56498, 0.37", "28.5884, -55.4411, -7.45636, 0.22", "32.8704, -61.3693, -8.00965, 0.22", "37.9259, -66.3271, -9.63659, 0.22", "43.4194, -71.0497, -9.97918, 0.22", "48.5915, -76.0751, -9.0362, 0.22", "54.3028, -80.2705, -7.63551, 0.22", "59.4066, -85.4275, -7.02653, 0.22", "64.2006, -90.9098, -7.55423, 0.22", "68.8217, -96.3854, -8.95157, 0.22", "73.7356, -101.769, -9.25595, 0.22", "78.229, -107.522, -9.81615, 0.22", "82.2572, -113.533, -11.0404, 0.22", "85.8065, -119.52, -13.3542, 0.22", "90.1642, -124.646, -16.1204, 0.22", "93.3542, -130.087, -19.782, 0.22", "97.1077, -135.885, -22.2077, 0.22", "100.229, -142.421, -23.6195, 0.22", "104.149, -148.634, -23.9796, 0.22" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.0094, -16.7616, -2.0089, 0.96", "-2.32291, -17.5622, -2.19199, 0.96", "-3.04023, -18.0253, -2.30109, 0.96", "-3.77314, -18.5274, -2.42179, 1.25", "-4.15943, -18.8118, -2.49014, 1.25", "-4.86896, -19.3604, -2.63081, 0.96", "-5.54017, -19.8914, -2.77993, 0.96", "-6.1313, -20.3759, -2.92513, 1.47", "-6.87606, -20.9354, -3.11574, 1.62", "-7.79736, -21.5284, -3.34376, 0.96", "-8.55218, -21.947, -3.5328, 0.96", "-9.62011, -22.44, -3.79402, 1.11", "-10.3879, -22.7178, -3.97436, 1.4", "-11.7327, -23.0866, -4.28314, 1.33", "-12.8418, -23.3205, -4.54953, 0.96", "-13.9767, -23.5323, -4.83457, 1.18", "-14.5464, -23.636, -4.9813, 1.18", "-15.9975, -23.9295, -5.37454, 0.88", "-16.8263, -24.1581, -5.61718, 0.88", "-17.3883, -24.3807, -5.8087, 1.03", "-18.4222, -24.9432, -6.1824, 1.25", "-19.0826, -25.3868, -6.41941, 0.88", "-19.7183, -25.8909, -6.6443, 0.88", "-20.2867, -26.3939, -6.83944, 1.11", "-20.9289, -26.9475, -7.06248, 1.25", "-21.7597, -27.6316, -7.40603, 0.88", "-22.3804, -28.153, -7.75327, 1.03", "-22.8139, -28.5508, -8.08351, 1.4", "-23.3293, -29.0623, -8.60832, 1.18", "-23.9389, -29.6784, -9.43043, 1.25", "-24.3091, -30.1869, -10.3601, 1.4", "-23.6191, -30.3004, -11.2393, 1.4", "-22.7993, -30.173, -11.6121, 1.47", "-21.1379, -29.7877, -12.0838, 0.52", "-20.2441, -29.5539, -12.1923, 0.52", "-19.3079, -29.2957, -12.1953, 0.59", "-17.7372, -28.883, -12.0209, 0.59", "-16.7855, -28.6556, -11.8233, 0.66", "-15.7737, -28.4729, -11.5211, 0.74", "-14.4257, -28.2897, -11.0477, 0.59", "-13.4165, -28.212, -10.6564, 0.88", "-12.0641, -28.1786, -10.0762, 0.37", "-11.3515, -28.2201, -9.74908, 0.37", "-10.6605, -28.329, -9.38762, 0.37", "-17.0975, -34.138, -12.7408, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-1.0094, -16.7616, -2.0089, 1.4", "-0.976196, -17.9314, -1.80816, 1.4", "-0.928229, -19.1353, -1.61737, 1.03", "-0.876339, -20.306, -1.43142, 1.33", "-0.820225, -21.658, -1.21037, 1.25", "-0.767126, -22.8863, -0.992913, 1.25", "-0.721227, -24.0567, -0.768098, 1.11", "-0.689756, -25.1822, -0.564763, 1.84", "-0.662992, -25.9098, -0.442759, 1.62", "-0.604914, -27.2988, -0.19066, 1.18", "-0.555734, -28.7709, 0.0924616, 1.11", "-0.515833, -30.2515, 0.384388, 1.25", "-0.496127, -31.2303, 0.568825, 1.55", "-0.484036, -32.2949, 0.775029, 2.06" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "5.22748, 25.0601, -0.620397, 2.88", "5.35752, 26.0975, -0.512105, 2.88", "5.52167, 27.407, -0.37541, 2.58", "5.70718, 28.887, -0.220925, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.22748, 25.0601, -0.620397, 1.62", "6.35633, 24.57, -1.40039, 1.62", "7.69265, 23.8204, -2.25608, 0.96", "8.58392, 23.2408, -2.79482, 0.96", "9.56795, 22.5116, -3.37019, 1.11", "10.0969, 22.0853, -3.66952, 1.25", "11.0991, 21.1938, -4.23755, 0.96", "12.2939, 19.9165, -4.88664, 0.81", "12.9583, 19.1642, -5.23865, 0.81", "13.5368, 18.5293, -5.551, 0.81", "14.0733, 17.9683, -5.88232, 0.88", "14.962, 17.125, -6.4815, 0.74", "15.9093, 16.3455, -7.1577, 0.59", "16.7482, 15.7449, -7.75737, 0.74", "17.3435, 15.3506, -8.16833, 0.66", "17.9819, 14.9362, -8.56224, 0.66", "18.9123, 14.3267, -9.0739, 0.96", "19.8901, 13.6997, -9.54174, 1.11", "21.1104, 12.8575, -10.0682, 0.81", "22.0925, 12.1041, -10.4674, 0.81", "23.0373, 11.3225, -10.8567, 0.52", "23.6402, 10.7724, -11.142, 0.52", "24.0691, 10.3189, -11.4269, 0.52", "24.5655, 9.68252, -11.9428, 0.74", "25.0745, 8.89765, -12.7313, 0.96", "25.3667, 8.36407, -13.3196, 1.03", "25.7102, 7.67107, -14.1305, 0.81", "26.1575, 6.83275, -15.1135, 0.52", "26.5226, 6.09019, -15.9728, 0.88", "26.7058, 5.7201, -16.4096, 1.11", "27.1058, 4.98242, -17.2912, 0.81", "27.5689, 4.30669, -18.0777, 0.22", "28.2919, 3.55163, -18.8973, 0.15", "34.6063, -2.67414, -23.5307, 0.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-5.29297, 42.8002, 0.0, 0.15", "-7.28801, 57.6669, 0.0, 0.15", "-9.28305, 72.5336, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-9.09425, -19.4167, -34.5661, 0.15", "-14.4546, -19.5657, -42.9255, 0.15", "-20.3946, -19.0895, -50.8663, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-9.09425, -19.4167, -34.5661, 0.59", "-11.609, -19.5536, -49.2736, 0.15", "-14.0753, -18.1563, -63.9225, 0.15", "-19.8024, -14.5124, -77.2363, 0.15", "-27.7156, -12.4604, -89.7219, 0.15", "-33.7326, -11.7418, -103.355, 0.15", "-39.9463, -14.035, -116.757, 0.15", "-46.7483, -14.9929, -130.012, 0.15", "-53.1331, -17.201, -143.346, 0.15", "-60.0309, -19.5073, -156.407, 0.15", "-68.716, -19.1365, -168.533, 0.15", "-76.1749, -18.6044, -181.444, 0.15" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "104.149, -148.634, -23.9796, 0.15", "109.413, -155.266, -26.0581, 0.15", "114.488, -162.381, -26.8358, 0.15", "119.792, -169.372, -26.2979, 0.15", "125.236, -176.199, -25.29, 0.15", "130.64, -183.113, -25.3676, 0.15", "136.774, -189.323, -25.5332, 0.15", "144.189, -193.714, -25.9134, 0.15", "150.338, -199.74, -27.1644, 0.15", "156.483, -205.922, -27.5404, 0.15", "161.996, -212.492, -29.1421, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "104.149, -148.634, -23.9796, 0.59", "112.378, -159.108, -24.0685, 0.15", "118.586, -170.9, -25.0139, 0.15", "122.326, -183.738, -25.8681, 0.15", "125.506, -196.748, -24.3884, 0.15", "129.489, -209.532, -25.0381, 0.15", "133.922, -222.205, -24.9656, 0.15", "139.912, -233.977, -26.7694, 0.15", "145.497, -245.782, -29.3169, 0.15", "152.243, -257.339, -29.164, 0.15", "157.754, -269.566, -28.4996, 0.15", "163.843, -281.478, -28.8661, 0.15" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-17.0975, -34.138, -12.7408, 0.15", "-23.9293, -39.8126, -13.1669, 0.15", "-29.9447, -46.4068, -13.8356, 0.15", "-34.6911, -54.0414, -13.113, 0.15", "-39.6472, -61.5372, -13.8729, 0.15", "-44.8131, -68.6942, -15.6282, 0.15", "-48.2767, -77.0099, -16.8657, 0.15", "-52.0405, -85.1097, -18.482, 0.15", "-55.292, -93.6037, -18.825, 0.15", "-59.0695, -101.823, -18.1734, 0.15", "-62.4294, -110.039, -16.3547, 0.15", "-64.9275, -118.736, -15.2868, 0.15", "-68.1921, -127.219, -15.7516, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-17.0975, -34.138, -12.7408, 0.59", "-20.3227, -40.3713, -18.6014, 0.15", "-22.6762, -46.9517, -24.5278, 0.15", "-25.7244, -52.9279, -30.7156, 0.15", "-27.3092, -59.1158, -37.2459, 0.15", "-28.052, -65.4259, -43.8168, 0.15", "-29.6259, -72.2019, -49.7973, 0.15", "-29.9533, -79.4452, -55.4658, 0.15", "-30.3511, -87.1651, -60.5282, 0.15", "-29.2991, -94.3461, -66.1745, 0.15", "-29.0334, -101.528, -71.9146, 0.15", "-28.3348, -108.01, -78.3315, 0.15", "-27.0335, -115.106, -84.0228, 0.15" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-0.484036, -32.2949, 0.775029, 0.44", "-1.67073, -33.9552, 1.486, 0.44", "-2.22292, -34.6466, 1.83532, 0.44", "-3.00572, -35.5708, 2.46542, 0.44", "-3.65868, -36.3706, 3.11914, 0.66", "-4.16758, -37.1139, 3.70632, 0.66", "-4.45349, -37.6477, 4.08583, 0.44", "-4.76333, -38.3662, 4.62133, 0.52", "-5.01648, -39.4207, 5.29984, 0.66", "-5.07899, -40.587, 5.87464, 0.66", "-5.02892, -41.9467, 6.44055, 0.88", "-4.9337, -43.3464, 6.9413, 1.11", "-4.84409, -44.6707, 7.33768, 0.74", "-4.78627, -45.6578, 7.52587, 0.29", "-4.75526, -46.6711, 7.59817, 0.22", "-4.75755, -47.2735, 7.59239, 0.22", "-4.81341, -48.0649, 7.5486, 0.22", "-4.89251, -48.8106, 7.47916, 0.22", "-5.0631, -50.4126, 7.31707, 0.29", "-5.15637, -51.6542, 7.21114, 0.52", "-5.17899, -52.5327, 7.15611, 0.52", "-5.12574, -53.7403, 7.12126, 0.44", "-4.93717, -55.531, 7.14383, 0.29", "-4.81215, -56.4055, 7.19123, 0.66", "-4.71667, -57.0179, 7.27744, 1.77", "-4.5486, -58.1255, 7.50487, 1.18", "-4.40462, -59.5354, 7.86272, 0.52", "-4.33118, -60.8459, 8.24397, 0.52", "-4.31045, -61.6927, 8.51834, 0.81", "-4.25614, -62.9589, 8.94889, 0.96", "-4.18323, -64.0633, 9.35967, 0.52", "-4.0741, -65.5563, 9.99025, 0.22", "-4.01525, -66.2556, 10.3248, 0.29", "-3.92545, -67.1713, 10.8184, 0.29", "-3.80653, -68.4746, 11.5381, 0.22", "-3.72985, -69.3274, 12.0271, 0.37", "-3.66421, -70.2073, 12.5381, 0.74", "-3.64049, -71.0515, 13.0151, 1.03", "-3.69779, -72.006, 13.4953, 1.25", "-3.96736, -73.873, 14.3226, 0.37", "-4.17997, -74.9588, 14.7746, 1.18", "-4.37089, -75.9623, 15.1613, 2.65", "-4.62547, -77.6021, 15.7489, 2.21", "-4.80369, -79.1921, 16.3029, 0.96", "-4.88308, -80.5067, 16.7531, 0.29", "-4.90372, -81.4389, 17.0846, 0.29", "-4.92529, -82.3088, 17.3903, 0.66", "-4.97893, -83.3472, 17.7942, 0.44", "-5.04152, -84.2698, 18.1789, 0.22", "-5.07411, -84.7325, 18.3862, 0.22", "-5.12377, -85.2957, 18.6193, 0.22", "-5.27217, -86.4438, 19.03, 0.29", "-5.39074, -87.3118, 19.3117, 0.29", "-5.44993, -87.9083, 19.4885, 0.22", "-5.49353, -88.5972, 19.6636, 0.22", "-5.48866, -89.2029, 19.8165, 0.81", "-5.43232, -89.776, 19.9612, 1.55", "-5.21876, -91.0156, 20.3034, 1.84", "-4.82194, -92.8737, 20.8312, 0.15", "-4.70865, -93.4574, 21.0076, 0.15", "-4.61687, -93.9447, 21.159, 0.15", "-4.52224, -94.534, 21.3399, 0.15", "-4.40106, -95.4072, 21.599, 0.88", "-4.30588, -96.1329, 21.8041, 1.92", "-4.08185, -97.5746, 22.1739, 1.99", "-4.01452, -97.9438, 22.2637, 1.99", "-3.71939, -99.6502, 22.6253, 0.15", "-3.64504, -100.123, 22.7064, 0.15", "-3.57634, -100.61, 22.765, 0.37", "-3.52331, -101.106, 22.8037, 0.37", "-3.42114, -102.28, 22.882, 0.15", "-3.38538, -103.009, 22.9375, 0.15", "-3.35055, -103.867, 23.0187, 0.22", "-3.34686, -104.366, 23.0805, 0.22", "-3.39021, -105.268, 23.2026, 0.15", "-3.45509, -105.956, 23.3008, 0.15", "-3.51974, -106.501, 23.3846, 0.59", "-3.56488, -107.079, 23.4908, 1.03", "-3.57941, -107.975, 23.6576, 0.22", "-3.55042, -108.917, 23.8489, 0.07", "-3.51061, -109.521, 23.989, 0.07", "-3.47378, -109.902, 24.0919, 0.66", "-3.35089, -110.893, 24.425, 0.96", "-3.05829, -112.68, 25.1119, 0.22", "-2.84833, -113.649, 25.5427, 0.22", "-2.68601, -114.273, 25.8761, 0.44", "-2.48906, -114.978, 26.2882, 1.25", "-2.29491, -115.591, 26.6657, 1.92", "-1.98988, -116.363, 27.1843, 1.11", "-1.64659, -117.096, 27.7331, 0.22", "-1.3683, -117.673, 28.1473, 0.22", "-1.06423, -118.354, 28.5934, 0.52", "-0.724552, -119.3, 29.1452, 0.22", "-0.456534, -120.327, 29.7131, 0.22", "-0.305015, -121.155, 30.1661, 0.22", "-0.254634, -121.577, 30.3891, 0.81", "-0.178086, -122.578, 30.9231, 1.77", "-0.107803, -124.478, 31.9732, 0.37", "-0.084581, -125.474, 32.5338, 0.15", "-0.074194, -125.932, 32.7821, 0.15", "-0.049939, -126.502, 33.0808, 0.37", "-0.00866313, -127.197, 33.4479, 1.18", "0.0608518, -128.018, 33.8799, 1.55", "0.199748, -129.281, 34.4939, 0.81", "0.287694, -130.169, 34.8677, 0.15", "0.323958, -130.742, 35.0912, 0.22", "0.371309, -131.605, 35.4098, 0.15", "0.40138, -132.4, 35.6849, 0.96", "0.4371, -133.28, 35.9872, 1.18", "0.508962, -134.636, 36.4432, 0.22", "0.56833, -135.273, 36.6612, 0.22", "0.675621, -136.075, 36.9462, 0.37", "0.715755, -136.297, 37.0249, 0.37", "0.888175, -137.106, 37.3187, 0.22", "0.982856, -137.48, 37.4695, 0.22", "1.20746, -138.12, 37.7305, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-0.484036, -32.2949, 0.775029, 1.84", "-0.594037, -33.4732, 0.314806, 1.84", "-0.675295, -34.8869, -0.179149, 1.55", "-0.718008, -36.4127, -0.650494, 1.55", "-0.761085, -38.0068, -1.08719, 1.55", "-0.820779, -39.588, -1.46421, 1.47", "-0.888373, -40.9722, -1.7647, 0.96", "-0.957136, -42.075, -1.95816, 1.55", "-1.13177, -44.0504, -2.20865, 1.25", "-1.34755, -46.0895, -2.41365, 1.47", "-1.60832, -48.1897, -2.58252, 1.03", "-1.82437, -49.6076, -2.68501, 1.18", "-2.18715, -51.6063, -2.80676, 1.99", "-2.56215, -53.3008, -2.90022, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.70718, 28.887, -0.220925, 2.14", "6.92709, 30.5036, 0.0695568, 2.14" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.70718, 28.887, -0.220925, 1.47", "5.8987, 30.6273, 1.55935, 1.47", "5.91499, 31.6686, 2.69414, 1.18", "5.80263, 32.6174, 3.85559, 1.18", "5.5347, 33.5822, 5.23, 1.47", "5.1712, 34.2732, 6.42389, 1.47", "4.90748, 34.5229, 7.0237, 1.47", "4.06443, 34.6331, 8.17146, 1.47", "2.77809, 34.3102, 9.35036, 1.03", "1.94707, 33.9263, 9.91778, 1.62", "1.1555, 33.4479, 10.3609, 1.77", "0.128102, 32.6797, 10.8763, 1.77" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "34.6063, -2.67414, -23.5307, 0.15", "41.786, -8.40278, -26.9089, 0.15", "49.2812, -13.4497, -30.5723, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "34.6063, -2.67414, -23.5307, 0.59", "41.2861, -8.9112, -28.4516, 0.15", "46.8746, -16.4397, -33.0823, 0.15", "50.7391, -25.1255, -37.6208, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-20.3946, -19.0895, -50.8663, 0.15", "-24.693, -14.4475, -56.9828, 0.15", "-26.7943, -9.58689, -64.068, 0.15", "-27.172, -3.87593, -70.9113, 0.15", "-28.9861, 1.69639, -77.5778, 0.15", "-31.5684, 6.62637, -84.4425, 0.15", "-33.8363, 11.0794, -91.7223, 0.15", "-34.8368, 15.9233, -99.0856, 0.15", "-35.7528, 21.5677, -105.909, 0.15", "-35.9993, 25.774, -113.71, 0.15", "-37.7924, 29.7506, -121.382, 0.15", "-40.7197, 35.1848, -127.717, 0.15", "-43.7685, 40.1657, -134.339, 0.15", "-45.9721, 46.2641, -140.413, 0.15", "-49.3758, 52.2349, -145.988, 0.15", "-53.927, 58.4551, -150.298, 0.15", "-58.0167, 65.7884, -153.165, 0.15", "-61.9362, 72.7785, -156.961, 0.15", "-66.9297, 79.6465, -159.401, 0.15", "-71.7584, 86.6456, -161.827, 0.15", "-75.6348, 93.5516, -165.813, 0.15", "-78.8477, 100.9, -169.673, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-20.3946, -19.0895, -50.8663, 0.59", "-23.0642, -23.1153, -60.573, 0.15", "-26.3043, -25.7396, -70.5469, 0.15", "-29.1441, -29.6248, -80.2604, 0.15", "-31.5759, -33.647, -90.0268, 0.15", "-32.9982, -37.1575, -100.153, 0.15", "-35.3925, -41.2891, -109.886, 0.15", "-36.6154, -45.7644, -119.678, 0.15", "-38.5004, -49.56, -129.638, 0.15", "-39.8992, -56.0707, -138.291, 0.15", "-40.3584, -63.4268, -146.376, 0.15", "-40.8183, -70.9939, -154.278, 0.15", "-42.6527, -78.2212, -162.318, 0.15", "-43.6114, -86.857, -169.107, 0.15", "-46.5987, -95.8218, -174.953, 0.15", "-50.8798, -103.815, -181.327, 0.15", "-54.6793, -111.501, -188.293, 0.15", "-56.4941, -118.949, -196.15, 0.15", "-58.322, -126.394, -204.007, 0.15", "-59.8341, -135.941, -209.479, 0.15" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-76.1749, -18.6044, -181.444, 0.15", "-81.901, -18.8647, -191.911, 0.15", "-88.6802, -18.9018, -201.73, 0.15", "-96.5576, -18.137, -210.66, 0.15", "-102.448, -16.0066, -220.827, 0.15", "-108.592, -12.3454, -230.426, 0.15", "-116.548, -10.9984, -239.221, 0.15", "-124.991, -10.507, -247.637, 0.15", "-132.49, -11.8139, -256.839, 0.15", "-140.167, -15.4111, -265.318, 0.15", "-147.663, -19.3728, -273.812, 0.15", "-155.183, -25.8568, -280.732, 0.15", "-161.795, -32.3411, -288.532, 0.15", "-168.025, -39.0113, -296.506, 0.15", "-174.663, -47.0419, -302.833, 0.15", "-181.269, -56.3788, -307.265, 0.15", "-187.98, -65.043, -312.681, 0.15", "-193.302, -75.4017, -316.776, 0.15", "-196.892, -85.7797, -322.454, 0.15", "-199.224, -97.4887, -326.036, 0.15", "-203.747, -108.292, -330.057, 0.15", "-209.461, -118.939, -332.641, 0.15", "-213.931, -129.819, -336.528, 0.15", "-219.81, -139.513, -341.288, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-76.1749, -18.6044, -181.444, 0.59", "-78.4048, -17.9914, -190.34, 0.15", "-80.2291, -17.7211, -199.346, 0.15", "-83.0054, -18.184, -208.103, 0.15", "-85.1581, -20.0092, -216.881, 0.15", "-86.5779, -20.9195, -225.928, 0.15", "-86.4203, -22.9632, -234.925, 0.15", "-87.1616, -23.199, -244.088, 0.15", "-88.449, -23.0944, -253.191, 0.15", "-89.9405, -23.475, -262.258, 0.15", "-90.0398, -25.1634, -271.321, 0.15", "-90.7514, -28.7076, -279.864, 0.15", "-90.7659, -31.1693, -288.769, 0.15", "-89.9947, -33.1724, -297.743, 0.15", "-89.2549, -35.054, -306.742, 0.15", "-87.6156, -36.2937, -315.72, 0.15", "-87.2234, -36.6027, -324.903, 0.15", "-87.8381, -36.2512, -334.069, 0.15", "-87.0035, -37.378, -343.169, 0.15", "-87.341, -39.4452, -352.156, 0.15", "-88.9694, -41.7486, -360.948, 0.15" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-68.1921, -127.219, -15.7516, 0.15", "-71.8786, -134.05, -15.991, 0.15", "-74.704, -141.316, -15.7577, 0.15", "-76.9739, -148.802, -15.9983, 0.15", "-79.4279, -156.118, -14.8993, 0.15", "-81.6199, -163.482, -13.5808, 0.15", "-82.5079, -171.219, -12.6811, 0.15", "-83.5126, -178.991, -13.3181, 0.15", "-85.0937, -186.444, -15.2046, 0.15", "-87.2741, -193.34, -18.1577, 0.15", "-89.1056, -199.46, -22.581, 0.15", "-91.4375, -204.84, -27.6011, 0.15", "-93.9849, -210.106, -32.6243, 0.15", "-97.3848, -214.746, -37.6927, 0.15", "-100.563, -217.917, -43.8204, 0.15", "-103.687, -221.006, -50.0134, 0.15", "-105.392, -224.654, -56.4909, 0.15", "-106.19, -228.931, -62.8018, 0.15", "-106.967, -233.085, -69.1881, 0.15", "-108.907, -237.135, -75.3769, 0.15", "-111.306, -240.572, -81.7325, 0.15", "-114.87, -243.781, -87.623, 0.15", "-118.656, -246.871, -93.4282, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-68.1921, -127.219, -15.7516, 0.59", "-73.2281, -136.619, -15.9995, 0.15", "-78.1551, -146.041, -16.9946, 0.15", "-84.2486, -154.636, -15.9336, 0.15", "-90.0176, -163.459, -14.7647, 0.15", "-96.4481, -171.668, -13.1213, 0.15" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-27.0335, -115.106, -84.0228, 0.15", "-27.2316, -126.694, -92.4757, 0.15", "-29.6373, -138.735, -99.9843, 0.15", "-30.6327, -150.062, -108.705, 0.15", "-33.7035, -162.566, -115.233, 0.15", "-38.1236, -175.616, -119.741, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-27.0335, -115.106, -84.0228, 0.59", "-29.3891, -122.387, -92.0407, 0.15", "-31.6113, -129.824, -99.9665, 0.15", "-33.5364, -139.22, -105.809, 0.15", "-34.9959, -149.715, -109.804, 0.15", "-34.6357, -160.75, -112.554, 0.15", "-33.48, -171.9, -114.581, 0.15", "-31.002, -182.853, -116.411, 0.15", "-30.2265, -194.232, -116.881, 0.15", "-27.5999, -205.23, -118.192, 0.15", "-26.4238, -216.213, -120.91, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.20746, -138.12, 37.7305, 0.22", "0.872314, -138.868, 37.5925, 0.22", "0.424079, -139.869, 37.408, 0.22", "0.0348209, -140.738, 37.2477, 0.22", "-0.659544, -142.289, 36.9619, 0.22", "-0.972876, -142.989, 36.8329, 0.15", "-1.28535, -143.686, 36.7043, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.20746, -138.12, 37.7305, 1.18", "1.2947, -139.208, 38.3147, 1.18", "1.39314, -140.467, 38.9384, 0.29", "1.46424, -141.626, 39.4942, 0.15", "1.49405, -142.286, 39.7991, 0.15", "1.51427, -142.937, 40.0862, 0.29", "1.51048, -143.862, 40.4805, 0.66", "1.4604, -144.822, 40.8657, 1.4", "1.28012, -146.247, 41.3634, 0.22", "1.10648, -147.238, 41.6725, 0.22", "1.01934, -147.671, 41.7961, 0.22", "0.832418, -148.595, 42.0264, 0.22", "0.66739, -149.393, 42.201, 0.66", "0.446294, -150.39, 42.3855, 0.15", "0.22604, -151.234, 42.5136, 0.15", "-0.071256, -152.264, 42.6545, 0.52", "-0.450811, -153.539, 42.8355, 0.29", "-0.60166, -154.046, 42.9106, 0.15", "-0.75921, -154.559, 42.9962, 0.15", "-1.05618, -155.499, 43.1397, 0.15", "-1.26682, -156.134, 43.2241, 0.29", "-1.55459, -157.003, 43.3519, 1.11", "-1.82997, -157.886, 43.5025, 1.77", "-2.15743, -159.114, 43.7415, 1.77", "-2.45222, -160.398, 44.0231, 1.33", "-2.81707, -162.184, 44.4321, 0.15", "-3.04812, -163.372, 44.7255, 0.22", "-3.21218, -164.227, 44.9475, 0.66", "-3.36907, -165.05, 45.1714, 0.81", "-3.6386, -166.58, 45.6149, 0.15", "-3.75052, -167.479, 45.9088, 0.22", "-3.78869, -168.237, 46.1907, 0.22", "-3.79801, -169.209, 46.5584, 0.22", "-3.78808, -169.778, 46.7724, 0.66", "-3.71082, -170.893, 47.2088, 1.4", "-3.5035, -172.46, 47.8972, 0.88", "-3.35328, -173.437, 48.3472, 0.15", "-3.19762, -174.374, 48.7784, 0.15", "-3.07453, -175.054, 49.0916, 0.22", "-2.89187, -176.119, 49.5867, 0.29", "-2.77675, -176.953, 49.9541, 0.15", "-2.70677, -178.104, 50.3861, 0.15", "-2.71613, -178.504, 50.5157, 0.15", "-2.7904, -179.345, 50.7797, 0.22", "-2.97165, -180.569, 51.1424, 0.22", "-3.07141, -181.099, 51.2911, 0.22", "-3.27949, -182.213, 51.5962, 0.37", "-3.46955, -183.35, 51.9318, 0.22", "-3.5779, -184.114, 52.1578, 0.88", "-3.75262, -185.821, 52.6656, 2.06", "-3.84174, -187.814, 53.2041, 0.59", "-3.8113, -189.166, 53.5239, 0.22", "-3.72471, -190.059, 53.697, 0.22", "-3.62163, -190.85, 53.8284, 0.22", "-3.45166, -191.938, 53.9705, 0.59", "-3.13321, -193.481, 54.0967, 0.07", "-2.86687, -194.417, 54.0904, 0.15", "-2.4964, -195.526, 53.9998, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.56215, -53.3008, -2.90022, 0.74", "-2.65689, -55.1884, -3.22148, 0.74", "-2.74056, -56.8696, -3.53446, 0.74", "-2.81192, -57.82, -3.71953, 0.81", "-2.98417, -59.3865, -4.05112, 0.88", "-3.11528, -60.3926, -4.27155, 0.81", "-3.31533, -61.6912, -4.57048, 1.18", "-3.49067, -62.6562, -4.82111, 1.18", "-3.7762, -63.8367, -5.14874, 1.03", "-4.12797, -65.0886, -5.52412, 1.11", "-4.44999, -66.0662, -5.83229, 0.74", "-4.87444, -67.1643, -6.18026, 1.11", "-5.26525, -68.0976, -6.46652, 0.81", "-5.73337, -69.1977, -6.78284, 0.81", "-5.88035, -69.5995, -6.88163, 0.81", "-6.12258, -70.4487, -7.04786, 0.88", "-6.32355, -71.3902, -7.1715, 0.88", "-6.5658, -72.9461, -7.28235, 1.11", "-6.66253, -73.6881, -7.28909, 1.33", "-6.90501, -75.4806, -7.17271, 0.74", "-7.03001, -76.5441, -7.07834, 0.74", "-7.15864, -78.1087, -6.89793, 0.88", "-7.21214, -79.0295, -6.75706, 1.25", "-7.2786, -79.9784, -6.57398, 1.03", "-7.45598, -81.2428, -6.26477, 0.74", "-7.83057, -91.3537, -6.37766, 0.74", "-9.22489, -101.317, -5.40581, 0.74", "-10.3792, -111.25, -3.95933, 0.74", "-11.5774, -120.712, -0.7481, 0.74", "-11.8955, -130.255, 2.44896, 0.74", "-12.9654, -139.469, 6.29521, 0.74", "-15.388, -148.951, 8.64977, 0.74", "-15.8655, -158.799, 10.8226, 0.74", "-15.8959, -168.573, 13.3259, 0.74", "-15.9624, -178.402, 15.6192, 0.74", "-15.9188, -188.259, 17.8029, 0.74", "-16.6042, -197.789, 20.9793, 0.74", "-19.284, -206.641, 24.8174, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-2.56215, -53.3008, -2.90022, 1.03", "-2.84593, -54.3172, -2.41608, 1.03", "-3.23895, -55.8242, -1.77315, 1.03", "-3.49982, -56.9921, -1.37454, 1.03", "-3.809, -58.7243, -0.866878, 1.03", "-3.99305, -60.191, -0.484943, 0.96", "-4.07655, -61.232, -0.21684, 0.96", "-4.08984, -62.1094, -0.00874043, 0.96", "-3.94018, -64.5042, 0.545404, 0.88", "-3.72562, -65.9259, 0.903584, 0.88", "-3.26687, -67.7755, 1.47578, 0.88", "-2.63415, -69.6063, 2.18357, 0.81", "-2.09314, -70.8444, 2.77762, 0.81", "-1.65514, -71.6838, 3.2767, 0.81", "-0.986106, -72.7629, 4.05561, 0.88", "-0.315238, -73.8731, 4.90398, 1.03", "0.0959892, -74.6926, 5.50229, 1.03", "0.547826, -75.9447, 6.28524, 0.81", "0.808011, -77.1113, 6.87481, 1.4", "0.901796, -77.8391, 7.17626, 1.92", "1.04193, -79.7803, 7.78613, 1.4", "1.18953, -82.0713, 8.315, 0.88", "1.30656, -83.6832, 8.595, 0.88", "1.45828, -85.3666, 8.81257, 1.03", "1.57312, -86.306, 8.9114, 1.03", "1.81627, -87.8387, 9.04886, 0.81", "2.11309, -89.2553, 9.1368, 1.18", "2.20419, -89.6836, 9.14722, 1.18", "2.32501, -90.5202, 9.13696, 0.74", "2.31391, -91.6022, 9.08239, 0.44", "2.2094, -92.2422, 9.03175, 0.44", "1.93906, -93.1776, 8.94114, 0.66", "1.51165, -94.4167, 8.80245, 0.81", "1.1188, -95.5379, 8.67292, 0.96", "0.516052, -97.2924, 8.47168, 1.33", "0.134113, -98.4527, 8.34298, 0.88", "-0.218941, -99.593, 8.2414, 1.11", "-0.615014, -100.929, 8.17135, 1.18", "-0.986916, -102.198, 8.14131, 1.18", "-1.51632, -103.968, 8.13277, 0.52", "-2.07028, -105.802, 8.18288, 0.52", "-2.48758, -107.171, 8.24174, 0.74", "-2.87431, -108.444, 8.31357, 0.96", "-3.21775, -109.637, 8.37811, 1.62", "-3.53329, -110.829, 8.42947, 1.62", "-3.8786, -112.322, 8.46908, 1.33", "-4.10623, -113.551, 8.47543, 0.44", "-4.23572, -114.281, 8.44134, 0.59", "-4.52812, -115.647, 8.32015, 0.59", "-4.92532, -117.11, 8.15015, 0.88", "-5.30544, -118.233, 7.98736, 1.25", "-5.58435, -118.914, 7.87799, 2.21", "-6.31815, -120.498, 7.64117, 1.84", "-7.2116, -122.281, 7.40492, 1.33", "-8.07506, -123.911, 7.24951, 0.66", "-8.513, -124.767, 7.19619, 0.44", "-8.95785, -125.69, 7.16101, 0.44", "-9.39432, -126.678, 7.14469, 0.81", "-9.84986, -127.942, 7.15509, 1.11", "-10.2432, -129.357, 7.1792, 0.74", "-10.6012, -130.891, 7.20826, 0.37", "-10.8536, -132.076, 7.21122, 0.37", "-11.0184, -132.824, 7.20237, 0.74", "-11.2947, -133.955, 7.17771, 0.88", "-11.7525, -135.607, 7.1462, 0.44", "-12.0174, -136.37, 7.14239, 0.44", "-12.3546, -137.096, 7.1746, 0.59", "-12.8338, -137.889, 7.24066, 0.96", "-13.3008, -138.529, 7.32154, 1.25", "-13.85, -139.191, 7.44821, 1.25", "-14.5211, -139.981, 7.65164, 0.81", "-14.9735, -140.615, 7.8432, 1.11", "-15.5002, -141.727, 8.15738, 0.22", "-15.6351, -142.246, 8.26485, 0.22", "-15.7721, -143.074, 8.40434, 0.22", "-15.8737, -143.823, 8.49495, 0.74", "-15.9781, -144.577, 8.56286, 1.18", "-16.2632, -146.294, 8.69097, 0.66", "-16.5841, -147.773, 8.79678, 0.37", "-17.0156, -149.063, 8.85837, 0.66", "-17.4793, -150.134, 8.91973, 0.66", "-17.8836, -150.947, 8.99623, 1.25", "-18.3008, -151.712, 9.11637, 2.06", "-18.9385, -152.835, 9.38097, 2.21", "-20.0927, -154.934, 9.98565, 1.03", "-20.7031, -156.139, 10.3523, 0.59", "-21.2502, -157.4, 10.7093, 0.37", "-21.6009, -158.339, 10.9665, 0.66", "-21.9597, -159.481, 11.2764, 0.37", "-22.2753, -160.722, 11.637, 0.29", "-22.4282, -161.533, 11.8784, 0.52", "-22.7016, -162.942, 12.2782, 0.22", "-22.8633, -163.658, 12.548, 0.22", "-23.0631, -164.433, 12.9607, 0.29", "-23.2791, -165.136, 13.4918, 0.96", "-23.52, -165.81, 14.1005, 1.77", "-23.7573, -166.476, 14.7007, 1.77", "-24.2413, -168.031, 15.9533, 0.29", "-24.3932, -168.72, 16.3824, 0.29", "-24.4886, -169.334, 16.6522, 0.29", "-24.5804, -170.281, 16.9174, 0.29", "-24.6752, -171.536, 17.1023, 0.29", "-24.7983, -173.01, 17.1438, 0.29", "-24.886, -173.738, 17.0997, 0.29", "-25.0891, -174.813, 16.9866, 0.29", "-25.4321, -176.066, 16.8378, 0.29", "-25.8928, -177.363, 16.7092, 0.29", "-26.2245, -178.172, 16.6445, 1.03", "-26.6523, -179.112, 16.5836, 1.92", "-27.3946, -180.692, 16.5046, 3.02", "-28.2377, -182.462, 16.4548, 2.36", "-29.2129, -184.498, 16.4427, 0.22", "-29.565, -185.252, 16.4635, 0.22", "-30.0149, -186.274, 16.5305, 0.22", "-30.2004, -186.73, 16.5744, 0.52", "-30.4811, -187.477, 16.6814, 0.96", "-30.8721, -188.579, 16.8555, 0.44", "-31.3426, -189.955, 17.0645, 0.22", "-31.6329, -190.841, 17.1899, 0.37", "-31.9576, -191.883, 17.3254, 0.81", "-32.2491, -192.794, 17.4269, 0.96", "-32.6592, -194.031, 17.5155, 1.25", "-33.0415, -195.216, 17.5538, 0.66", "-33.201, -195.774, 17.5559, 0.22", "-33.5003, -196.997, 17.5527, 0.22", "-33.6169, -197.578, 17.5645, 0.44", "-33.8776, -199.068, 17.6342, 0.22", "-34.0337, -200.103, 17.7379, 0.22", "-34.2166, -201.348, 17.922, 0.29", "-34.3812, -202.372, 18.0876, 0.52", "-34.5548, -203.434, 18.2612, 0.52", "-34.7632, -204.558, 18.4331, 0.52", "-34.9953, -205.617, 18.5748, 1.18", "-35.2484, -206.595, 18.674, 2.43", "-35.7394, -208.27, 18.8023, 1.33", "-36.1537, -209.624, 18.8708, 0.59", "-36.4912, -210.73, 18.9059, 0.81", "-36.7779, -211.686, 18.9289, 0.15", "-36.9679, -212.322, 18.9382, 0.15", "-37.0552, -212.643, 18.9508, 0.15", "-37.1687, -213.044, 18.9806, 0.22", "-37.423, -213.812, 19.0363, 0.37", "-37.7533, -214.703, 19.0466, 0.37", "-38.1464, -215.655, 18.9649, 0.22", "-38.6241, -216.675, 18.7741, 0.22", "-38.9305, -217.26, 18.6013, 0.22", "-39.2536, -217.802, 18.3907, 0.74", "-39.7574, -218.581, 18.0291, 1.77", "-40.3463, -219.462, 17.58, 2.21", "-40.7969, -220.093, 17.267, 2.21", "-41.8153, -221.448, 16.6294, 0.37", "-42.4793, -222.349, 16.272, 0.37", "-43.018, -223.124, 16.0441, 0.22", "-43.5053, -223.854, 15.9189, 0.22", "-44.1077, -224.752, 15.8433, 0.22", "-44.4711, -225.276, 15.8406, 0.81", "-45.0735, -226.066, 15.9315, 1.25", "-45.8387, -226.954, 16.1168, 0.88", "-46.7472, -227.89, 16.3479, 0.22", "-47.2171, -228.366, 16.4662, 0.22", "-47.7249, -228.946, 16.5869, 0.22", "-48.2498, -229.668, 16.745, 0.22", "-48.7264, -230.632, 16.9483, 0.44", "-49.0304, -231.561, 17.1145, 1.47", "-49.2838, -232.582, 17.2383, 1.47", "-49.574, -233.869, 17.3259, 0.44", "-49.8235, -235.072, 17.3602, 0.96", "-50.195, -236.826, 17.3311, 0.22", "-50.406, -237.755, 17.2967, 0.22", "-50.7821, -239.163, 17.2194, 0.22", "-51.1076, -240.208, 17.1187, 0.22", "-51.3761, -240.973, 17.0133, 0.22", "-51.7304, -241.883, 16.8499, 0.22", "-52.2442, -243.091, 16.6234, 0.22", "-52.5557, -243.85, 16.4996, 0.81", "-53.0141, -245.023, 16.3424, 1.77", "-53.4565, -246.165, 16.2303, 1.18", "-54.2912, -248.364, 16.0869, 0.22", "-54.5615, -249.098, 16.0784, 0.22", "-55.028, -250.358, 16.1363, 0.88", "-55.6109, -251.923, 16.3191, 0.15", "-55.9614, -252.837, 16.52, 0.15", "-56.2719, -253.733, 16.8052, 0.29", "-56.5358, -254.64, 17.1873, 0.74", "-56.717, -255.334, 17.5106, 1.4", "-56.9844, -256.372, 18.0527, 0.59", "-57.3331, -257.75, 18.7851, 0.15", "-57.5905, -258.803, 19.3195, 0.15", "-57.8091, -259.755, 19.7898, 0.15", "-57.961, -260.634, 20.2007, 0.29", "-58.1089, -261.739, 20.7241, 0.96", "-58.2531, -262.954, 21.3049, 0.44", "-58.3717, -263.936, 21.7788, 0.22", "-58.5405, -265.116, 22.3889, 0.22", "-58.688, -266.247, 23.0071, 0.15", "-58.7847, -267.214, 23.537, 0.15", "-58.8431, -267.867, 23.881, 0.15", "-58.9122, -268.519, 24.1823, 0.29", "-59.0725, -269.679, 24.5984, 0.44", "-59.2666, -270.821, 24.8939, 0.44", "-59.5852, -272.4, 25.1979, 0.44", "-59.8472, -273.708, 25.3569, 0.44", "-60.1767, -275.318, 25.4726, 0.88", "-60.4642, -276.571, 25.4922, 1.03", "-60.7921, -277.77, 25.4448, 0.37", "-61.1416, -278.768, 25.3532, 0.15", "-61.5805, -279.727, 25.2232, 0.15", "-62.0363, -280.54, 25.0805, 0.37", "-62.7101, -281.545, 24.8678, 0.22", "-63.2656, -282.254, 24.6858, 0.81", "-64.2547, -283.341, 24.343, 1.25", "-65.4521, -284.46, 23.8985, 0.88", "-66.2508, -285.111, 23.5802, 0.22", "-67.0311, -285.709, 23.2233, 0.22", "-67.7851, -286.292, 22.8283, 0.74", "-68.782, -287.147, 22.2181, 1.47", "-69.5347, -287.905, 21.6717, 0.37", "-70.5486, -289.171, 20.7563, 0.22", "-71.1497, -290.171, 20.0555, 0.29", "-71.5582, -291.159, 19.4142, 0.29", "-71.7657, -292.111, 18.8721, 0.29", "-71.8316, -293.17, 18.3593, 0.37", "-71.798, -294.579, 17.8109, 0.22", "-71.6679, -296.167, 17.3401, 0.22", "-71.5881, -296.942, 17.1647, 0.22", "-71.4866, -298.126, 16.999, 0.37", "-71.4537, -299.016, 16.9392, 0.59", "-71.5088, -301.133, 16.8761, 0.66", "-71.6442, -302.589, 16.8743, 0.88", "-71.8102, -303.562, 16.9245, 0.88", "-72.2023, -305.304, 17.047, 0.52", "-72.6978, -307.189, 17.2088, 0.22", "-73.231, -309.077, 17.4488, 0.22", "-73.4668, -309.849, 17.5783, 0.81", "-74.1339, -311.895, 17.9572, 1.25", "-74.4971, -313.071, 18.1925, 1.03", "-74.7117, -313.831, 18.3504, 1.03", "-75.199, -315.699, 18.7977, 0.22", "-75.5285, -317.08, 19.1498, 0.22", "-75.7529, -318.011, 19.3552, 0.22", "-76.1338, -319.526, 19.6012, 0.22", "-76.3987, -320.388, 19.701, 0.22", "-76.9766, -321.972, 19.7768, 0.22", "-77.4561, -323.026, 19.7164, 0.74", "-77.9732, -324.031, 19.5713, 1.11", "-78.3748, -324.778, 19.3828, 1.11", "-79.1774, -326.194, 18.8478, 0.74", "-79.7287, -327.216, 18.3334, 1.4", "-80.4946, -328.782, 17.3694, 0.66", "-80.963, -329.879, 16.6358, 0.07", "-81.4877, -331.279, 15.6875, 0.07", "-81.8138, -332.232, 15.0438, 0.22", "-82.1499, -333.364, 14.3243, 0.22", "-82.381, -334.167, 13.8557, 0.44", "-82.6764, -335.224, 13.3253, 0.44", "-83.1777, -336.642, 12.7861, 0.44", "-83.5907, -337.561, 12.5665, 0.22", "-84.2587, -338.845, 12.3938, 0.15", "-84.7245, -339.555, 12.356, 0.37", "-85.0936, -339.991, 12.3595, 0.37", "-86.1122, -341.003, 12.4339, 0.15", "-87.1097, -341.862, 12.5408, 0.15", "-87.4398, -342.114, 12.5741, 0.52", "-88.3449, -342.685, 12.6146, 1.03", "-89.5514, -343.381, 12.5991, 0.15", "-90.4114, -343.853, 12.5183, 0.15", "-91.2062, -344.299, 12.3571, 0.15", "-91.7004, -344.616, 12.2117, 0.59", "-92.7413, -345.391, 11.8455, 0.15", "-93.0729, -345.669, 11.708, 0.15", "-93.5775, -346.172, 11.4753, 0.66", "-94.0047, -346.655, 11.2762, 0.81", "-95.1717, -348.156, 10.7349, 0.15", "-96.0825, -349.462, 10.3157, 0.15", "-96.8617, -350.702, 9.95965, 0.29", "-97.9286, -352.485, 9.4716, 0.22", "-98.8457, -354.1, 9.0553, 0.15", "-99.2178, -354.762, 8.88662, 0.66", "-99.8067, -355.781, 8.59134, 0.81", "-100.539, -356.947, 8.18284, 0.44", "-100.987, -357.636, 7.92298, 1.03", "-101.472, -358.295, 7.62779, 1.25", "-102.788, -359.933, 6.78434, 0.52", "-103.81, -361.09, 6.10338, 0.22", "-104.457, -361.736, 5.64574, 0.07" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "6.92709, 30.5036, 0.0695568, 0.96", "9.27187, 32.2481, -0.160304, 0.96", "10.4124, 33.0924, -0.268103, 1.03", "11.8184, 34.1785, -0.2132, 1.03", "13.0643, 35.141, -0.164546, 1.62", "14.2716, 36.0737, -0.117401, 1.33", "15.9667, 37.3832, -0.0512038, 1.03", "17.2353, 38.3853, 0.0392194, 0.96", "19.6283, 40.3022, 0.320699, 1.62" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.92709, 30.5036, 0.0695568, 0.88", "7.51898, 31.8646, -0.0348899, 0.88", "8.23826, 33.2218, -0.138442, 0.81", "8.58961, 33.8545, -0.215886, 0.66", "8.93954, 34.5107, -0.322654, 1.11", "9.36651, 35.398, -0.489219, 0.74", "9.65249, 36.0575, -0.629504, 0.52", "10.0225, 36.9796, -0.920175, 0.22", "10.1635, 37.7173, -1.1736, 0.29", "10.0934, 38.2393, -1.39233, 0.29", "9.85621, 38.7889, -1.68112, 0.66", "9.67197, 39.0663, -1.85862, 0.66", "9.1391, 39.7217, -2.29422, 0.81", "8.45236, 40.5462, -2.84764, 1.18", "7.94393, 41.2371, -3.29316, 1.03", "7.45811, 42.0516, -3.80674, 0.81", "7.06745, 42.9157, -4.33478, 1.11", "6.68015, 44.0983, -5.03441, 0.88", "6.4633, 45.085, -5.6105, 0.66", "6.33968, 45.9953, -6.11722, 0.66", "6.24706, 46.7644, -6.49431, 0.66", "6.15033, 47.4672, -6.797, 0.66", "6.01718, 48.3071, -7.14665, 0.81", "5.89668, 48.9481, -7.43231, 1.18", "5.73812, 49.6545, -7.74224, 1.18", "5.37816, 51.2217, -8.38076, 0.52", "5.15727, 52.0497, -8.71455, 0.52", "4.99071, 52.7051, -8.97121, 0.52", "4.90182, 53.1773, -9.1399, 1.03", "4.83906, 54.0305, -9.42841, 1.03", "4.96052, 55.0659, -9.78001, 0.66", "5.06998, 63.266, -13.6273, 0.66", "4.79692, 71.8178, -16.6874, 0.66", "2.69208, 80.0683, -19.7852, 0.66", "-0.0352846, 88.1463, -22.8075, 0.66", "-2.81877, 95.8352, -26.6048, 0.66", "-7.16519, 102.985, -29.8445, 0.66", "-11.0203, 109.821, -34.1504, 0.66", "-14.1038, 116.923, -38.6832, 0.66", "-17.7281, 124.417, -42.1047, 0.66", "-21.484, 131.165, -46.6194, 0.66", "-23.5763, 138.046, -51.9597, 0.66", "-26.137, 145.052, -56.9339, 0.66", "-28.8335, 151.914, -62.018, 0.66", "-31.4056, 158.423, -67.5672, 0.66", "-34.667, 163.998, -73.6489, 0.66" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "0.128102, 32.6797, 10.8763, 0.96", "-0.673889, 33.264, 11.4863, 0.96", "-1.40236, 33.5948, 12.1043, 0.66", "-2.35877, 33.615, 13.024, 0.52", "-2.68671, 33.2874, 13.4335, 0.52", "-3.03184, 32.266, 14.0313, 0.52", "-3.18937, 31.7058, 14.3449, 0.88", "-3.4748, 30.3816, 15.0392, 1.11", "-3.73134, 29.1719, 15.6892, 1.25", "-3.98145, 28.2472, 16.2253, 1.25", "-4.60297, 26.5772, 17.2845, 0.66", "-5.01212, 25.7373, 17.8647, 0.96", "-5.49604, 24.9418, 18.4963, 1.33", "-6.15745, 24.0527, 19.3192, 1.33", "-7.18302, 22.8708, 20.5854, 1.33", "-8.29768, 21.6589, 22.0135, 0.88", "-8.97955, 20.9789, 22.8702, 0.88", "-9.75816, 20.1977, 23.8372, 1.4", "-10.2546, 19.6724, 24.4714, 1.55", "-10.9963, 18.8138, 25.4811, 2.06", "-11.495, 18.065, 26.3421, 2.06" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "0.128102, 32.6797, 10.8763, 0.74", "-0.323991, 31.3741, 10.6673, 0.74", "-0.931673, 29.7116, 10.4736, 0.52", "-1.46847, 28.2589, 10.3569, 0.88", "-2.02862, 26.7093, 10.332, 0.44", "-2.38841, 25.711, 10.3696, 0.44", "-2.66117, 24.9596, 10.4239, 0.37", "-3.14225, 23.6138, 10.6142, 0.88", "-3.57095, 22.1977, 10.8865, 0.44", "-3.9783, 20.6329, 11.2099, 0.44", "-4.20876, 19.5074, 11.4193, 0.74", "-4.35009, 18.619, 11.5747, 1.11", "-4.57845, 16.6784, 11.917, 0.96", "-4.70172, 14.8693, 12.2668, 1.18", "-4.74872, 13.3184, 12.6144, 1.18", "-4.76995, 11.5494, 13.0631, 0.88", "-4.76474, 10.0825, 13.4894, 0.66", "-4.74704, 8.88698, 13.8982, 0.66", "-4.71793, 7.61305, 14.3698, 0.66", "-4.68239, 6.15633, 14.9348, 0.66", "-4.63526, 4.49272, 15.5582, 0.66", "-4.62088, 2.15452, 16.2986, 0.52", "-4.63061, 0.895604, 16.6009, 0.52", "-4.66105, -1.27536, 16.9505, 0.52", "-4.69507, -2.76808, 17.0665, 0.52", "-4.72889, -4.29031, 17.0832, 0.52", "-4.77285, -6.25776, 17.0364, 0.96", "-4.82657, -7.25602, 16.999, 1.11", "-4.91538, -8.27844, 16.959, 1.11", "-5.21173, -10.8007, 16.9002, 0.44", "-5.39216, -11.9939, 16.8763, 0.44", "-5.81055, -14.1261, 16.8913, 0.66", "-6.15394, -15.5766, 16.9244, 0.52", "-6.36696, -16.3244, 16.9324, 0.88", "-6.57623, -16.9789, 16.9298, 1.33", "-7.04928, -18.4338, 16.8761, 0.96", "-7.67715, -20.5192, 16.7353, 0.59", "-8.07162, -22.0058, 16.5778, 0.59", "-8.27909, -22.9708, 16.4619, 0.96", "-8.5191, -24.3254, 16.2993, 0.52", "-8.77063, -26.164, 16.0972, 0.22", "-8.89494, -27.3471, 15.9936, 0.29", "-9.02047, -28.4038, 15.9251, 0.29", "-9.14925, -29.2138, 15.902, 1.03", "-9.39944, -30.4376, 15.8943, 1.84", "-9.88183, -32.2291, 15.9383, 0.74", "-10.5161, -34.0785, 16.0538, 0.29", "-11.2739, -35.7672, 16.2478, 0.29", "-11.7535, -36.667, 16.3921, 0.29", "-12.0981, -37.2629, 16.5011, 0.88", "-12.5689, -38.0512, 16.6562, 1.47", "-13.0743, -38.9237, 16.8126, 0.88", "-14.209, -41.138, 17.1284, 0.22", "-14.5662, -41.9906, 17.2083, 0.15", "-14.9376, -43.0673, 17.2871, 0.37", "-15.2515, -44.036, 17.3646, 0.22", "-15.7406, -45.4864, 17.51, 0.22", "-16.2009, -46.689, 17.6673, 0.52", "-16.5029, -47.3598, 17.7873, 0.96", "-17.225, -48.5877, 18.102, 1.62", "-18.2448, -49.9787, 18.5616, 0.96", "-19.4039, -51.3739, 19.1091, 0.59", "-20.3156, -52.3955, 19.5631, 0.88", "-21.1866, -53.3637, 19.9975, 1.55", "-21.9477, -54.2214, 20.3713, 1.55", "-23.0803, -55.5923, 20.9012, 0.37", "-23.9929, -56.8592, 21.3486, 0.22", "-24.5009, -57.6498, 21.6083, 0.44", "-25.1997, -58.8512, 21.9731, 1.11", "-25.518, -59.4826, 22.1341, 1.11", "-26.1588, -60.9429, 22.4573, 0.44", "-26.6787, -62.25, 22.6804, 0.22", "-27.114, -63.46, 22.8131, 0.29", "-27.3796, -64.1991, 22.8544, 0.15", "-27.8337, -65.4474, 22.8796, 0.29", "-28.0171, -65.9456, 22.8779, 0.96", "-28.461, -67.1125, 22.852, 1.62", "-29.1966, -69.0874, 22.7717, 2.06", "-29.8876, -71.0213, 22.7052, 1.4", "-30.212, -71.9568, 22.686, 0.59", "-30.7087, -73.4233, 22.6866, 0.22", "-31.007, -74.408, 22.6944, 0.22", "-31.2701, -75.4027, 22.7152, 0.66", "-31.5259, -76.501, 22.7404, 0.74", "-31.7699, -77.6808, 22.7778, 0.22", "-32.0499, -79.0038, 22.8492, 0.15", "-32.2799, -80.0935, 22.946, 0.22", "-32.4251, -80.8579, 23.0279, 0.66", "-32.6033, -81.8154, 23.153, 1.25", "-32.8662, -83.135, 23.355, 1.47", "-33.2302, -84.7173, 23.6299, 0.88", "-33.5976, -86.0609, 23.8852, 0.22", "-33.8971, -86.9854, 24.0723, 0.22", "-34.2246, -87.8741, 24.256, 0.22", "-34.8152, -89.2663, 24.5472, 0.37", "-35.3857, -90.4572, 24.783, 0.37", "-36.0242, -91.7089, 25.0174, 0.52", "-36.4125, -92.4608, 25.1551, 0.22", "-36.7715, -93.1927, 25.2884, 0.37", "-37.0785, -93.937, 25.4073, 0.74", "-37.4767, -95.2652, 25.5771, 0.22", "-37.7704, -96.6978, 25.7128, 0.22", "-37.9522, -97.8503, 25.7874, 0.29", "-38.0912, -98.7074, 25.833, 0.52", "-38.2991, -99.9407, 25.8873, 1.11", "-38.4895, -101.029, 25.9242, 1.7", "-38.7769, -102.533, 25.9594, 1.33", "-39.1111, -104.238, 25.9677, 0.22", "-39.3409, -105.59, 25.9617, 0.22", "-39.4147, -106.057, 25.9579, 0.22", "-39.4955, -106.603, 25.9531, 0.29", "-39.6151, -107.447, 25.9481, 0.52", "-39.7539, -108.537, 25.9451, 0.22", "-39.8944, -109.445, 25.9616, 0.22", "-40.0689, -110.201, 25.9949, 0.22", "-40.3632, -110.98, 26.0673, 0.81", "-40.7144, -111.613, 26.1634, 1.47", "-41.0414, -112.081, 26.2567, 1.47", "-41.903, -113.175, 26.5067, 0.22", "-42.3825, -113.769, 26.6459, 0.22", "-42.9508, -114.525, 26.8081, 0.37", "-43.648, -115.543, 27.0024, 0.44", "-44.1044, -116.26, 27.1277, 0.22", "-44.2859, -116.573, 27.1701, 0.22", "-44.5049, -116.982, 27.2123, 0.22", "-44.9179, -117.79, 27.2831, 0.22", "-45.2511, -118.441, 27.3383, 0.74", "-45.6587, -119.244, 27.4057, 1.47", "-46.2864, -120.383, 27.5366, 1.99", "-46.9133, -121.418, 27.713, 1.77", "-47.9835, -123.009, 28.0721, 0.66", "-48.6101, -123.854, 28.3086, 0.15", "-49.2754, -124.698, 28.5715, 0.15", "-49.9895, -125.594, 28.8555, 0.22", "-50.6168, -126.344, 29.1052, 0.22", "-51.2799, -127.111, 29.3276, 0.29", "-51.8503, -127.775, 29.4758, 0.81", "-52.6243, -128.737, 29.6082, 1.47", "-53.4968, -129.92, 29.6561, 0.52", "-54.2403, -131.134, 29.575, 0.22", "-54.734, -132.116, 29.4398, 0.22", "-55.0528, -132.933, 29.3095, 0.22", "-55.1814, -133.355, 29.2329, 0.22", "-55.3473, -134.052, 29.0985, 0.29", "-55.5666, -135.112, 28.8861, 0.74", "-55.7318, -135.914, 28.7196, 1.03", "-56.1534, -137.609, 28.4068, 0.37", "-56.4953, -138.759, 28.2178, 0.88", "-56.8541, -139.86, 28.055, 1.18", "-57.194, -140.858, 27.9179, 1.18", "-57.8199, -142.699, 27.708, 0.29", "-58.39, -144.284, 27.5771, 0.29", "-58.8015, -145.37, 27.5338, 0.37", "-59.1035, -146.128, 27.5488, 0.88", "-59.4089, -146.902, 27.6018, 0.66", "-59.7726, -147.964, 27.7113, 0.22", "-60.012, -148.833, 27.8249, 0.22", "-60.2151, -149.798, 27.9409, 0.37", "-60.3272, -150.486, 28.0206, 0.66", "-60.4811, -151.575, 28.1533, 1.11", "-60.6649, -152.87, 28.3204, 0.66", "-60.8015, -153.686, 28.434, 0.29", "-61.0034, -154.818, 28.6107, 0.22", "-61.1569, -155.587, 28.7215, 0.29", "-61.4476, -156.933, 28.8601, 0.96", "-61.6748, -157.89, 28.915, 1.03", "-62.0743, -159.534, 28.9296, 0.81", "-62.3834, -160.854, 28.8735, 0.29", "-62.6588, -161.945, 28.7905, 0.22", "-62.9643, -163.086, 28.6756, 0.29", "-63.2424, -164.078, 28.5521, 0.74", "-63.4866, -164.952, 28.4384, 0.52", "-64.055, -166.863, 28.211, 0.29", "-64.6482, -168.638, 28.0765, 0.29", "-65.2555, -170.253, 28.0786, 0.29", "-65.6168, -171.126, 28.1278, 0.29", "-65.9944, -171.971, 28.2003, 1.03", "-66.3792, -172.787, 28.2793, 1.7", "-67.055, -174.214, 28.4269, 1.4", "-68.0648, -176.358, 28.6677, 0.44", "-68.6529, -177.575, 28.838, 0.15", "-68.915, -178.109, 28.9194, 0.37", "-69.3398, -178.961, 29.0406, 0.59", "-69.7494, -179.798, 29.1343, 0.59", "-70.5169, -181.372, 29.2528, 0.22", "-71.1191, -182.54, 29.3114, 0.22", "-71.5768, -183.402, 29.3562, 0.22", "-71.9388, -184.094, 29.385, 0.88", "-72.2781, -184.796, 29.4331, 1.47", "-72.7484, -185.836, 29.5116, 1.84", "-74.0444, -188.905, 29.7663, 0.22", "-74.2369, -189.383, 29.8002, 0.22", "-74.4865, -190.023, 29.851, 0.22", "-75.0711, -191.443, 29.9669, 0.22", "-75.4801, -192.334, 30.0458, 0.22", "-75.8333, -193.016, 30.1002, 0.74", "-76.5055, -194.218, 30.1514, 1.33", "-77.3847, -195.657, 30.1977, 0.22", "-77.92, -196.467, 30.2149, 0.22", "-78.5113, -197.377, 30.2423, 0.22", "-78.9168, -198.12, 30.3115, 0.15", "-79.1809, -198.728, 30.4061, 0.15", "-79.5117, -199.614, 30.6276, 0.37", "-79.6532, -200.055, 30.7665, 0.96", "-80.1404, -201.711, 31.3721, 2.14", "-80.7059, -203.639, 32.1572, 0.66", "-81.1337, -204.968, 32.7769, 0.15", "-81.5511, -206.093, 33.386, 0.15", "-81.8236, -206.747, 33.7863, 0.44", "-82.0944, -207.345, 34.1784, 1.03", "-82.5575, -208.317, 34.8264, 1.55", "-83.1239, -209.519, 35.6488, 0.44", "-83.5005, -210.363, 36.1545, 0.22", "-83.7663, -211.034, 36.4871, 0.22", "-84.1668, -212.083, 36.9309, 0.22", "-84.5519, -213.082, 37.2897, 0.29", "-85.0112, -214.231, 37.6215, 0.29", "-85.6161, -215.674, 37.9443, 0.15", "-86.0926, -216.739, 38.1362, 0.22", "-86.632, -217.832, 38.2631, 0.88", "-87.4539, -219.356, 38.3343, 0.74", "-88.0322, -220.33, 38.3167, 0.88", "-88.6538, -221.328, 38.229, 1.77", "-89.371, -222.452, 38.0507, 2.29", "-90.4568, -224.171, 37.6387, 0.07", "-91.1013, -225.216, 37.2923, 0.15", "-91.492, -225.872, 37.0055, 0.15", "-91.6942, -226.236, 36.8239, 0.15", "-92.0151, -226.945, 36.4487, 0.15", "-92.1821, -227.511, 36.1618, 0.15", "-92.3775, -228.532, 35.7465, 0.15", "-92.4353, -228.913, 35.6153, 0.15", "-92.5792, -230.0, 35.2854, 0.66", "-92.8631, -231.98, 34.7517, 0.29", "-93.0715, -233.271, 34.4597, 0.22", "-93.2718, -234.455, 34.2371, 0.22", "-93.4783, -235.484, 34.0935, 0.22", "-93.6281, -236.008, 34.051, 0.59", "-93.8413, -236.505, 34.0503, 0.74", "-94.1399, -236.99, 34.1234, 0.37", "-94.5825, -237.565, 34.2936, 0.15", "-95.4979, -238.636, 34.712, 0.15", "-96.017, -239.197, 34.9691, 0.22", "-96.5467, -239.766, 35.2347, 0.29", "-97.0836, -240.376, 35.5255, 0.22", "-97.7553, -241.222, 35.9116, 0.22", "-98.4758, -242.259, 36.3479, 0.29", "-98.9551, -243.051, 36.6616, 0.29", "-99.5636, -244.037, 37.0525, 0.22", "-100.089, -244.81, 37.3646, 0.37", "-100.62, -245.536, 37.6458, 0.74", "-101.007, -246.056, 37.8417, 1.03", "-101.777, -247.107, 38.229, 0.22", "-102.466, -248.094, 38.5682, 0.22", "-103.068, -248.961, 38.8419, 0.15", "-103.529, -249.647, 39.0266, 0.15", "-103.852, -250.17, 39.1498, 0.15", "-104.353, -251.09, 39.307, 0.22", "-105.032, -252.498, 39.4702, 0.29", "-105.545, -253.753, 39.5705, 0.74", "-106.038, -255.182, 39.6746, 0.74", "-106.39, -256.308, 39.7556, 0.37", "-106.734, -257.515, 39.8396, 0.37", "-106.979, -258.444, 39.9234, 1.4", "-107.33, -259.779, 40.0732, 2.95", "-107.867, -261.646, 40.3453, 1.18", "-108.356, -263.097, 40.612, 0.22", "-108.967, -264.775, 40.987, 0.29", "-109.429, -266.018, 41.2932, 0.74", "-109.781, -266.94, 41.5234, 1.33", "-110.393, -268.328, 41.8828, 0.81", "-110.968, -269.461, 42.126, 1.18", "-111.929, -271.332, 42.427, 0.66", "-112.517, -272.56, 42.5506, 0.29", "-112.734, -273.042, 42.5778, 0.44", "-113.569, -275.05, 42.6375, 0.29", "-114.165, -276.554, 42.6328, 0.81", "-115.055, -278.712, 42.5442, 0.22", "-115.543, -279.686, 42.4507, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "49.2812, -13.4497, -30.5723, 0.15", "54.7512, -18.0872, -34.9469, 0.15", "59.8739, -23.2371, -39.2239, 0.15", "64.8698, -27.6812, -44.3037, 0.15", "70.3901, -32.4117, -48.5195, 0.15", "76.0401, -35.6255, -53.7443, 0.15", "81.5197, -38.8161, -59.1624, 0.15", "86.7044, -43.1523, -64.1334, 0.15", "90.6026, -48.5489, -69.3505, 0.15", "95.8477, -53.5393, -73.6493, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "49.2812, -13.4497, -30.5723, 0.59", "55.8131, -18.6975, -34.4801, 0.15", "62.1202, -24.0309, -38.6523, 0.15", "68.7538, -29.5749, -41.9535, 0.15", "75.5337, -35.1868, -44.8071, 0.15", "82.2438, -40.1197, -48.7846, 0.15", "88.556, -45.3271, -53.0944, 0.15", "94.2143, -51.3761, -57.3202, 0.15", "99.2642, -57.3892, -62.3209, 0.15", "103.544, -63.9855, -67.3857, 0.15", "107.106, -71.7048, -71.4547, 0.15", "111.577, -78.7862, -75.666, 0.15", "115.899, -85.2901, -80.8031, 0.15", "119.712, -91.6837, -86.4608, 0.15", "124.882, -96.9236, -92.0958, 0.15", "132.083, -100.892, -96.1915, 0.15", "139.315, -105.109, -99.9902, 0.15", "147.156, -107.822, -103.823, 0.15", "154.791, -111.216, -107.579, 0.15", "162.758, -112.693, -111.755, 0.15" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "50.7391, -25.1255, -37.6208, 0.15", "55.0201, -31.8946, -41.8786, 0.15", "59.2088, -39.2458, -45.2805, 0.15", "63.3019, -46.1088, -49.5812, 0.15", "66.7025, -54.3611, -51.7868, 0.15", "70.3213, -62.8164, -52.5819, 0.15", "73.6209, -71.296, -54.0751, 0.15", "77.2291, -79.0164, -57.3831, 0.15", "82.2193, -86.1756, -60.0374, 0.15", "86.4291, -94.1522, -61.7822, 0.15", "91.7104, -101.46, -63.3289, 0.15", "96.4697, -109.159, -64.8248, 0.15", "100.485, -117.011, -67.3203, 0.15", "102.848, -125.611, -69.6155, 0.15", "106.0, -134.102, -71.3245, 0.15", "110.907, -141.741, -72.6288, 0.15", "114.798, -149.55, -75.4119, 0.15", "119.869, -156.617, -78.1367, 0.15", "124.905, -164.045, -79.9312, 0.15", "129.235, -171.521, -82.897, 0.15", "133.896, -179.067, -85.154, 0.15", "137.501, -186.846, -88.3401, 0.15", "141.056, -195.027, -90.5531, 0.15", "144.797, -203.383, -91.6485, 0.15", "147.867, -211.751, -93.921, 0.15", "151.426, -219.919, -96.1673, 0.15", "154.294, -228.62, -97.3561, 0.15", "158.019, -237.078, -97.4282, 0.15", "163.34, -244.518, -96.5585, 0.15", "169.639, -250.924, -94.9485, 0.15", "176.67, -256.416, -93.3102, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "50.7391, -25.1255, -37.6208, 0.59", "57.8425, -31.2653, -39.7774, 0.15", "65.6852, -35.8704, -42.6788, 0.15", "73.7493, -40.1495, -45.4304, 0.15", "80.3709, -46.3456, -48.6263, 0.15", "86.2393, -53.2703, -51.8997, 0.15", "92.4939, -59.4365, -55.7725, 0.15", "99.1668, -64.6044, -60.2262, 0.15", "106.401, -68.676, -64.8404, 0.15", "114.319, -72.6394, -68.3135, 0.15", "122.265, -77.3857, -70.7098, 0.15", "130.896, -81.3193, -71.7717, 0.15", "139.135, -86.249, -71.2818, 0.15", "146.773, -91.7466, -69.0678, 0.15", "153.471, -97.1632, -64.6429, 0.15", "160.262, -102.933, -60.8097, 0.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-96.4481, -171.668, -13.1213, 0.15", "-100.012, -177.014, -12.8849, 0.15", "-103.639, -182.243, -13.8104, 0.15", "-107.328, -187.501, -14.0212, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-96.4481, -171.668, -13.1213, 0.59", "-100.999, -179.139, -12.5786, 0.15", "-103.973, -187.42, -11.8002, 0.15", "-107.319, -195.436, -10.3717, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-38.1236, -175.616, -119.741, 0.15", "-40.8025, -185.584, -125.319, 0.15", "-44.4763, -195.928, -129.601, 0.15", "-46.937, -206.248, -134.674, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-38.1236, -175.616, -119.741, 0.59", "-38.9872, -183.355, -124.725, 0.15", "-38.1057, -191.418, -129.219, 0.15", "-38.4326, -199.372, -133.955, 0.15" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.4964, -195.526, 53.9998, 0.15", "-1.82302, -196.183, 54.6485, 0.15", "-1.51269, -196.486, 54.9474, 0.37", "-0.992396, -196.994, 55.4486, 1.18", "-0.613708, -197.363, 55.8134, 0.88", "0.0515507, -198.012, 56.4543, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-2.4964, -195.526, 53.9998, 0.22", "-2.37918, -196.412, 53.8449, 0.22", "-2.29279, -197.072, 53.7022, 0.81", "-2.22722, -197.712, 53.5589, 1.18", "-2.18354, -198.68, 53.3429, 0.22", "-2.21964, -199.5, 53.1598, 0.22", "-2.31208, -200.311, 52.9796, 0.29", "-2.45697, -201.073, 52.8115, 0.66", "-2.67513, -201.839, 52.6516, 0.81", "-2.97939, -202.663, 52.4951, 0.22", "-3.45591, -203.73, 52.3264, 0.22", "-3.70568, -204.253, 52.2684, 0.29", "-3.9535, -204.778, 52.2296, 0.96", "-4.18455, -205.294, 52.2145, 1.7", "-4.63768, -206.429, 52.2359, 0.52", "-4.97997, -207.45, 52.3131, 0.22", "-5.12577, -207.988, 52.3856, 0.15", "-5.3289, -208.847, 52.5459, 0.22", "-5.48436, -209.601, 52.6878, 0.15", "-5.60933, -210.242, 52.8088, 0.15", "-5.69128, -210.678, 52.8876, 0.15", "-5.77317, -211.167, 52.9656, 0.37", "-5.87334, -211.801, 53.0292, 0.59", "-6.05308, -212.973, 53.0594, 0.07", "-6.16062, -213.639, 53.0278, 0.07", "-6.27707, -214.365, 52.964, 0.15", "-6.35017, -214.864, 52.9117, 0.66", "-6.4337, -215.479, 52.8464, 0.74", "-6.56248, -216.515, 52.7571, 0.15", "-6.64378, -217.179, 52.7295, 0.22", "-6.70876, -217.721, 52.7141, 0.15", "-6.77968, -218.19, 52.7035, 0.81", "-6.87598, -218.684, 52.6949, 0.66", "-7.07229, -219.517, 52.6676, 0.15", "-7.2485, -220.182, 52.6259, 0.22", "-7.48594, -221.008, 52.5538, 0.52", "-7.72094, -221.67, 52.4879, 0.59", "-8.05869, -222.535, 52.4316, 0.07", "-8.33593, -223.219, 52.4089, 0.22", "-8.43868, -223.465, 52.4024, 0.22", "-8.67645, -224.028, 52.3941, 0.96", "-9.13966, -225.092, 52.3971, 0.07", "-9.53537, -226.021, 52.4519, 0.07", "-9.72081, -226.446, 52.5181, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-19.284, -206.641, 24.8174, 0.15", "-19.6915, -216.199, 26.7142, 0.15", "-21.0017, -225.749, 28.2026, 0.15", "-22.3386, -235.255, 29.9031, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-19.284, -206.641, 24.8174, 0.59", "-19.7477, -211.379, 25.6955, 0.15", "-20.8417, -216.097, 25.771, 0.15", "-22.0121, -220.637, 26.9222, 0.15" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "19.6283, 40.3022, 0.320699, 0.52", "20.5999, 41.1777, -0.107118, 0.52", "21.6712, 41.5913, -0.63473, 0.37", "22.4477, 41.743, -0.997825, 0.37", "22.8477, 41.8106, -1.18991, 0.52", "23.5926, 41.9758, -1.57296, 0.52", "24.7429, 42.3107, -2.21131, 0.44", "25.3011, 42.4679, -2.56481, 0.44", "25.9203, 42.7012, -2.96618, 0.66", "26.4351, 43.0013, -3.27005, 0.66", "27.0507, 43.5209, -3.58024, 0.88", "27.4219, 43.954, -3.71427, 1.03", "28.1416, 44.9777, -3.83947, 0.52", "28.6716, 45.7785, -3.86604, 0.52", "29.1236, 46.4678, -3.84956, 0.52", "29.5359, 47.0653, -3.8038, 0.52", "30.2329, 48.0149, -3.72781, 0.22", "30.9004, 48.8935, -3.64114, 0.44", "31.5615, 49.7634, -3.5465, 0.74", "32.2607, 50.7391, -3.47143, 1.18", "32.7624, 51.4707, -3.45007, 0.88", "33.5782, 52.6391, -3.46594, 0.29", "40.1912, 60.6344, -3.67211, 0.29", "47.0589, 68.3631, -4.31941, 0.29", "53.0789, 76.8378, -3.72478, 0.29", "58.8948, 85.1936, -1.59084, 0.29", "64.3008, 93.8308, 0.603564, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "19.6283, 40.3022, 0.320699, 0.88", "20.603, 41.0978, 0.99648, 0.88", "21.2833, 41.6141, 1.41099, 0.81", "22.1139, 42.2246, 1.8129, 0.96", "23.0152, 42.8677, 2.15009, 1.33", "24.0883, 43.6531, 2.47817, 1.33", "24.7132, 44.1216, 2.65496, 1.33", "25.4113, 44.6831, 2.81882, 1.33", "26.2942, 45.408, 2.98232, 1.18", "27.1393, 46.1018, 3.1096, 1.03", "27.8911, 46.6997, 3.22775, 0.88", "28.8169, 47.4455, 3.39354, 1.4", "29.9311, 48.3861, 3.63261, 0.74", "30.834, 49.1682, 3.85208, 1.25", "31.808, 49.9989, 4.09996, 1.77", "33.09, 51.0921, 4.39028, 0.96", "34.1672, 52.0197, 4.57204, 0.59", "34.9654, 52.7335, 4.65186, 0.74", "35.5616, 53.2933, 4.67759, 0.96", "36.5911, 54.3248, 4.70083, 1.11", "37.3173, 55.0978, 4.72946, 1.4", "37.9584, 55.8117, 4.78165, 1.4", "39.022, 56.9651, 4.92791, 0.96", "39.4723, 57.4417, 5.03598, 0.96", "40.3987, 58.393, 5.38575, 1.18", "41.1592, 59.1299, 5.78533, 1.18", "41.9612, 59.8359, 6.2547, 1.03", "42.5339, 60.2872, 6.57312, 0.96", "43.3372, 60.8678, 6.95579, 0.81", "44.2485, 61.4929, 7.29811, 0.74", "45.2529, 62.1632, 7.57063, 0.96", "46.3037, 62.8819, 7.78427, 1.25", "47.4686, 63.7089, 7.96615, 1.55", "48.4666, 64.4717, 8.08657, 0.88", "49.5704, 65.4141, 8.1567, 0.59", "50.2177, 66.0515, 8.18076, 0.81", "50.8819, 66.8221, 8.19999, 0.96", "51.5686, 67.6883, 8.23965, 1.33", "52.5623, 69.0835, 8.33745, 1.55", "53.3819, 70.3536, 8.42645, 1.7", "54.128, 71.6282, 8.48572, 1.62", "54.9227, 73.0957, 8.51267, 1.62" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-34.667, 163.998, -73.6489, 0.15", "-37.2832, 173.417, -79.197, 0.15", "-38.4624, 183.405, -84.308, 0.15", "-41.7105, 193.257, -88.7272, 0.15", "-44.7637, 203.379, -92.7077, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-34.667, 163.998, -73.6489, 0.59", "-38.6237, 174.124, -76.9843, 0.15", "-43.4536, 183.82, -80.3081, 0.15", "-45.8998, 194.826, -82.2906, 0.15", "-47.155, 205.819, -85.3009, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-11.495, 18.065, 26.3421, 0.81", "-9.65196, 19.2448, 25.9356, 0.81", "-8.6759, 20.0069, 25.6489, 0.44", "-7.27478, 21.3191, 25.2737, 0.59", "-6.11791, 22.497, 25.0298, 0.59", "-5.14407, 23.5213, 24.8627, 0.88", "-4.39335, 24.3212, 24.756, 1.11", "-3.54296, 25.3242, 24.5085, 1.11", "-2.78172, 26.5147, 24.3025, 0.29", "-2.58721, 27.2257, 24.423, 0.29", "-2.68649, 27.7567, 24.8442, 0.29", "-2.78532, 28.0246, 25.1403, 0.29", "-2.83939, 28.3335, 25.5092, 0.29", "-2.75475, 28.875, 26.1839, 0.59", "-2.48103, 29.3941, 26.7873, 1.11", "-1.87031, 30.2169, 27.7255, 1.84", "-1.25479, 30.8741, 28.5106, 1.84", "-0.387469, 31.6864, 29.5139, 0.96", "0.260613, 32.2178, 30.2133, 0.74", "0.985082, 32.8046, 30.9524, 0.74", "1.76151, 33.5006, 31.8071, 0.74", "2.30275, 34.0771, 32.4959, 1.11", "2.85537, 34.8352, 33.2658, 1.47", "3.36357, 35.6556, 33.9855, 1.47", "4.00069, 36.7813, 34.8612, 0.74", "4.80801, 38.2913, 35.9469, 0.52", "5.24925, 39.1178, 36.5149, 0.52", "5.88406, 40.2519, 37.3281, 0.37", "6.50695, 41.1072, 38.0301, 0.37", "6.84783, 41.3218, 38.3382, 0.37", "7.33841, 41.3818, 38.7369, 0.37", "7.71575, 41.3697, 39.0353, 0.37", "8.56386, 41.3792, 39.8817, 0.37", "9.09522, 41.491, 40.6574, 0.37", "9.71348, 41.9038, 41.8157, 0.37", "10.076, 42.3169, 42.6343, 0.37", "10.3778, 42.8281, 43.5031, 0.59", "10.6274, 43.4413, 44.4164, 0.88", "10.9189, 44.657, 45.9492, 0.88", "11.0481, 45.7085, 47.1664, 0.59", "11.0974, 47.0516, 48.5893, 0.59", "11.1176, 47.9092, 49.3965, 0.29", "11.1506, 48.8542, 50.1611, 0.29", "11.2101, 49.9741, 50.9311, 0.29", "11.2717, 50.8197, 51.4253, 0.96", "11.3828, 51.6572, 51.8748, 1.84", "11.5941, 52.9539, 52.5141, 0.37", "11.7645, 53.9532, 53.0363, 0.81", "11.9465, 55.1234, 53.7598, 1.55", "12.1263, 56.2772, 54.6266, 0.22", "12.2485, 57.1373, 55.3349, 0.22", "12.344, 57.7402, 55.8817, 0.22", "12.513, 58.509, 56.5316, 0.29", "12.7219, 59.2659, 57.0676, 0.29", "13.0155, 60.1601, 57.6016, 0.59", "13.531, 61.4885, 58.3172, 1.77", "13.9296, 62.4366, 58.7924, 2.14", "14.751, 64.2127, 59.5977, 0.29", "15.167, 65.0609, 59.9387, 0.29", "15.5665, 65.8864, 60.2558, 0.29", "15.8042, 66.3543, 60.4296, 0.29", "16.1649, 67.0005, 60.6991, 0.88", "16.6531, 67.7938, 61.0709, 1.62", "17.1096, 68.4351, 61.4098, 1.62", "17.7328, 69.2718, 61.811, 2.21", "19.3037, 71.2747, 62.6339, 0.22", "19.9625, 72.0912, 62.924, 0.22", "20.42, 72.6381, 63.1032, 0.22", "20.8899, 73.192, 63.2636, 0.22", "21.77, 74.2251, 63.5099, 0.44", "22.7804, 75.3717, 63.6918, 0.66", "22.9344, 75.5608, 63.7123, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-11.495, 18.065, 26.3421, 0.96", "-10.8478, 17.3375, 26.4731, 0.96", "-10.168, 16.5795, 26.5889, 0.37", "-9.97957, 16.2861, 26.6383, 0.29", "-9.72245, 15.7232, 26.7293, 0.22", "-9.59443, 15.3365, 26.8116, 0.22", "-9.43793, 14.7253, 26.9642, 0.52", "-9.30092, 13.975, 27.1799, 0.74", "-9.23937, 12.9197, 27.5313, 0.52", "-9.23254, 12.1483, 27.7968, 1.11", "-9.23244, 10.9679, 28.2075, 1.62", "-9.23235, 9.91972, 28.5609, 1.33", "-9.20979, 8.44327, 29.0376, 1.11", "-9.15175, 6.4259, 29.6684, 0.44", "-9.11099, 5.36116, 29.9864, 0.44", "-9.07636, 4.25667, 30.3044, 0.44", "-9.06436, 3.37324, 30.5411, 0.96", "-9.05882, 2.09663, 30.878, 1.47", "-9.08928, 0.616494, 31.2761, 1.7", "-9.16589, -1.02887, 31.7641, 1.7", "-9.31119, -2.49114, 32.2824, 1.7", "-9.51796, -3.85503, 32.8395, 0.59", "-9.74872, -5.11557, 33.4237, 0.44", "-9.97357, -6.23686, 34.0044, 0.44", "-10.0923, -6.88544, 34.3852, 0.44", "-10.2079, -7.8487, 35.0335, 0.44", "-10.2041, -8.18097, 35.2814, 0.44", "-10.1148, -8.60114, 35.5646, 0.44", "-9.89187, -9.25257, 35.9164, 0.44", "-9.74121, -9.68525, 36.1258, 0.88", "-9.4543, -10.7187, 36.5969, 1.4", "-9.31964, -11.4366, 36.9361, 1.4", "-9.22681, -12.6004, 37.5352, 0.66", "-9.23636, -13.4643, 38.0035, 0.22", "-9.28014, -14.311, 38.4893, 0.22", "-9.3049, -14.7966, 38.7786, 1.03", "-9.33348, -15.6289, 39.2819, 2.36", "-9.3202, -16.5972, 39.8664, 2.65", "-9.16998, -18.3158, 40.9106, 0.81", "-8.97035, -19.2679, 41.4076, 0.22", "-8.82355, -19.729, 41.615, 0.22", "-8.64903, -20.1664, 41.7946, 0.66", "-8.39241, -20.7019, 41.9984, 0.66", "-8.20593, -21.0328, 42.1222, 0.66", "-7.61061, -21.9359, 42.4727, 0.22", "-7.34083, -22.4017, 42.6726, 0.22", "-7.23822, -22.619, 42.7889, 0.22", "-7.1112, -22.9866, 43.0291, 0.22", "-7.00073, -23.4923, 43.3888, 0.22", "-6.98404, -23.7085, 43.5508, 0.22", "-7.01744, -24.2261, 43.9492, 0.22", "-7.06661, -24.5327, 44.1606, 0.29", "-7.23606, -25.33, 44.6537, 0.29", "-7.31851, -25.7493, 44.8793, 0.59", "-7.44599, -26.5267, 45.2455, 0.88", "-7.52618, -27.2991, 45.5741, 0.66", "-7.52977, -28.2937, 45.9358, 0.22", "-7.47431, -28.7656, 46.0868, 0.22", "-7.22678, -29.9223, 46.4494, 0.59", "-6.94978, -30.8885, 46.7525, 1.03", "-6.64204, -31.8432, 47.054, 1.62", "-6.21285, -33.1251, 47.4885, 0.59", "-5.81109, -34.4415, 47.9536, 0.22", "-5.57785, -35.3604, 48.3103, 0.52", "-5.47673, -35.907, 48.5573, 1.25", "-5.3724, -36.8074, 49.0354, 2.14", "-5.34958, -37.629, 49.5346, 1.33", "-5.39049, -38.707, 50.2985, 0.52", "-5.41276, -39.31, 50.7566, 0.22", "-5.39706, -39.9848, 51.2792, 0.44", "-5.34089, -40.5228, 51.71, 0.44", "-5.22836, -41.0787, 52.1229, 0.22", "-5.1161, -41.6252, 52.4468, 0.22", "-4.98622, -42.3104, 52.7955, 0.22", "-4.91855, -42.7987, 52.9989, 0.52", "-4.86057, -43.4904, 53.2455, 0.74", "-4.84462, -44.6116, 53.6797, 0.81", "-4.90304, -45.5804, 54.1975, 0.22", "-5.00978, -46.1492, 54.6463, 0.22", "-5.0703, -46.3805, 54.8968, 0.22", "-5.14523, -46.7266, 55.3107, 0.66", "-5.22405, -47.3128, 56.0681, 1.33", "-5.2403, -47.8259, 56.7268, 1.55", "-5.20378, -48.4275, 57.3993, 0.88", "-5.17118, -49.2528, 58.1573, 0.15", "-5.16311, -50.1173, 58.8785, 0.29", "-5.16636, -50.5984, 59.2453, 0.88", "-5.19954, -51.1017, 59.5858, 1.25", "-5.25388, -51.6446, 59.9351, 1.33", "-5.42336, -53.0704, 60.8523, 0.22", "-5.49908, -53.7023, 61.2555, 0.74", "-5.56771, -54.3061, 61.6407, 1.25", "-5.64683, -55.3515, 62.2596, 0.44", "-5.6034, -56.1378, 62.6496, 0.22", "-5.52152, -56.6071, 62.83, 0.22", "-5.34926, -57.2652, 62.9999, 0.96", "-5.22195, -57.6848, 63.0881, 1.55", "-4.94288, -58.5342, 63.2485, 1.33", "-4.27109, -60.4681, 63.6249, 0.15", "-4.12391, -60.9354, 63.7233, 0.37", "-3.87937, -61.8095, 63.9441, 0.15", "-3.69982, -62.549, 64.1903, 0.15", "-3.55908, -63.2251, 64.4714, 0.52", "-3.43667, -63.9501, 64.8286, 1.18", "-3.32523, -64.8268, 65.33, 2.06", "-3.18587, -65.9435, 66.0072, 0.96", "-3.04508, -67.0909, 66.7323, 0.22", "-2.96109, -67.9063, 67.2567, 0.22", "-2.86796, -68.8672, 67.8931, 0.22", "-2.80832, -69.4845, 68.3073, 0.22", "-2.70517, -70.401, 68.9486, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "160.262, -102.933, -60.8097, 0.15", "167.518, -108.791, -62.7223, 0.15", "174.323, -115.425, -63.8817, 0.15", "181.134, -121.893, -65.6367, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "160.262, -102.933, -60.8097, 0.59", "169.444, -108.379, -62.4477, 0.15", "179.07, -113.241, -63.0343, 0.15", "187.625, -119.985, -62.1951, 0.15" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "64.3008, 93.8308, 0.603564, 0.15", "75.2715, 104.651, -2.61859, 0.15", "83.7741, 116.959, -7.87684, 0.15", "89.6656, 129.652, -15.4216, 0.15", "93.5077, 142.888, -23.4351, 0.15", "95.7955, 155.116, -33.2959, 0.15", "100.125, 167.056, -42.7803, 0.15", "104.915, 179.444, -51.4869, 0.15", "109.583, 191.755, -60.3578, 0.15", "113.97, 205.563, -67.1031, 0.15", "115.045, 220.717, -72.3938, 0.15", "117.322, 236.614, -73.8913, 0.15", "120.914, 252.309, -73.8377, 0.15", "121.777, 268.304, -72.0822, 0.15", "123.495, 283.999, -69.0388, 0.15", "126.87, 299.482, -66.402, 0.15", "128.109, 315.565, -66.1251, 0.15", "129.54, 331.591, -67.3844, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "64.3008, 93.8308, 0.603564, 0.59", "68.0929, 99.6174, 4.15515, 0.15", "71.1983, 105.708, 7.90813, 0.15", "74.1582, 110.859, 12.8649, 0.15", "75.8685, 116.632, 17.7904, 0.15", "77.8324, 121.557, 23.4079, 0.15", "79.4509, 126.927, 28.7604, 0.15", "80.4385, 132.629, 33.9521, 0.15", "83.1695, 137.888, 38.9378, 0.15", "85.7697, 143.107, 44.0308, 0.15", "88.0014, 148.997, 48.6095, 0.15", "89.574, 155.554, 52.6011, 0.15", "91.8662, 161.049, 57.5771, 0.15", "94.6816, 164.931, 63.5601, 0.15", "98.0621, 168.237, 69.5623, 0.15", "101.725, 171.758, 75.2812, 0.15", "105.999, 176.268, 79.8263, 0.15", "111.305, 180.106, 83.8044, 0.15", "116.13, 184.617, 87.756, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "54.9227, 73.0957, 8.51267, 0.66", "55.8978, 75.1421, 8.55027, 0.66", "56.4568, 76.1989, 8.54408, 0.66", "57.1452, 77.4675, 8.52645, 0.44", "57.6454, 78.3872, 8.53293, 0.37", "58.2969, 79.6058, 8.58121, 0.37", "58.8675, 80.6887, 8.67725, 0.37", "59.1563, 81.202, 8.74654, 0.59", "59.6531, 82.1508, 8.90572, 1.11", "60.3396, 83.7006, 9.20479, 0.37", "60.789, 84.9384, 9.54888, 0.59", "61.2409, 86.4539, 10.0777, 0.37", "61.6578, 87.942, 10.6789, 0.44", "61.8995, 88.7497, 11.0304, 0.22", "62.1568, 89.4665, 11.3612, 0.22", "62.9695, 91.3291, 12.2429, 0.22", "63.5058, 92.3019, 12.6909, 0.22", "63.8537, 92.7951, 12.9023, 0.44", "64.4912, 93.5144, 13.1751, 0.66", "65.543, 94.5093, 13.4737, 0.22", "66.0238, 94.9096, 13.5581, 0.22", "66.6647, 95.3944, 13.6228, 0.66", "67.2122, 95.7893, 13.6875, 1.03", "68.4613, 96.6977, 13.8504, 0.22", "69.5217, 97.5084, 14.0011, 0.66", "70.1649, 98.0281, 14.11, 0.81", "71.6136, 99.2219, 14.3781, 1.03", "72.7179, 100.136, 14.5965, 0.74", "73.808, 101.029, 14.8284, 0.37", "74.609, 101.642, 14.9995, 0.37", "75.2886, 102.151, 15.1422, 0.29", "75.9987, 102.674, 15.2856, 0.29", "76.5908, 103.11, 15.3932, 0.66", "77.4622, 103.737, 15.5646, 1.25", "79.0196, 104.829, 15.8688, 0.29", "79.4949, 105.164, 15.9559, 0.29", "80.487, 105.905, 16.1246, 0.88", "81.4347, 106.678, 16.2852, 0.52", "82.2052, 107.353, 16.4122, 1.11", "83.2645, 108.339, 16.5778, 0.66", "84.261, 109.299, 16.7512, 0.29", "84.9851, 109.97, 16.8773, 0.59", "86.2936, 111.085, 17.0926, 0.22", "86.9097, 111.559, 17.1885, 0.59", "87.7706, 112.168, 17.3111, 1.18", "88.8479, 112.857, 17.4687, 0.22", "89.5722, 113.29, 17.5749, 0.22", "90.1813, 113.649, 17.6629, 0.22", "90.8392, 114.061, 17.7788, 0.22", "91.2778, 114.4, 17.8695, 0.22", "91.7726, 114.898, 17.9873, 0.37", "92.4927, 115.817, 18.1924, 0.37", "92.9569, 116.505, 18.3531, 0.22", "93.476, 117.352, 18.5689, 0.52", "94.1626, 118.512, 18.9084, 0.52", "94.6303, 119.264, 19.1562, 0.96", "95.1155, 119.96, 19.4131, 1.77", "95.6746, 120.672, 19.7, 1.77", "96.4816, 121.643, 20.0955, 0.22", "97.0668, 122.32, 20.3623, 0.22", "97.6391, 122.923, 20.6125, 0.22", "98.2271, 123.516, 20.8485, 0.22", "98.7765, 124.058, 21.0336, 0.22", "99.4284, 124.74, 21.2237, 0.22", "100.113, 125.504, 21.3792, 0.22", "100.462, 125.926, 21.4526, 0.66", "100.978, 126.569, 21.564, 0.81", "101.736, 127.525, 21.753, 0.22", "102.339, 128.25, 21.9257, 0.22", "102.846, 128.887, 22.0949, 0.74", "103.439, 129.73, 22.3241, 0.88", "103.771, 130.267, 22.4757, 1.11", "104.496, 131.607, 22.8916, 1.11", "105.082, 132.87, 23.303, 0.37", "105.69, 134.294, 23.8025, 0.22", "106.045, 135.187, 24.1441, 0.29", "106.361, 135.998, 24.4866, 0.29", "106.697, 136.803, 24.867, 0.37", "107.087, 137.508, 25.2655, 0.37", "107.461, 137.94, 25.5869, 0.22", "107.969, 138.318, 25.9505, 0.22", "108.745, 138.771, 26.4542, 0.22", "109.519, 139.157, 26.9067, 0.29", "110.673, 139.702, 27.5527, 0.22", "111.364, 140.047, 27.9326, 1.4", "112.09, 140.474, 28.3458, 2.21", "112.587, 140.852, 28.6708, 1.7", "113.204, 141.449, 29.1707, 0.96", "113.881, 142.189, 29.8435, 0.96", "114.261, 142.611, 30.2698, 1.47", "114.669, 143.032, 30.7347, 1.47", "115.493, 143.814, 31.6548, 0.22", "116.03, 144.298, 32.2147, 0.22", "116.601, 144.825, 32.7739, 0.22", "117.178, 145.367, 33.268, 0.22", "117.683, 145.832, 33.6461, 0.22", "118.074, 146.203, 33.8799, 0.88", "118.679, 146.791, 34.1673, 1.99", "119.55, 147.67, 34.5005, 1.55", "120.582, 148.784, 34.8303, 0.22", "121.336, 149.62, 35.0544, 0.22", "122.35, 150.699, 35.3284, 0.29", "122.984, 151.343, 35.4835, 0.59", "123.993, 152.277, 35.658, 0.96", "125.192, 153.271, 35.7861, 0.15", "126.211, 154.044, 35.8666, 1.18", "127.528, 154.988, 35.9538, 1.18", "128.653, 155.755, 36.0248, 1.4", "130.28, 156.817, 36.121, 0.22", "131.02, 157.302, 36.1618, 0.37", "131.799, 157.837, 36.2201, 1.03", "132.149, 158.103, 36.2598, 0.88", "132.632, 158.501, 36.3535, 0.74", "133.303, 159.066, 36.5361, 0.96", "134.207, 159.948, 36.8933, 0.22", "135.016, 160.788, 37.2175, 0.96", "135.451, 161.229, 37.3676, 0.74", "136.215, 161.95, 37.6273, 0.22", "136.979, 162.641, 37.8841, 0.29", "138.115, 163.641, 38.2559, 0.29", "138.909, 164.304, 38.4856, 0.29", "140.155, 165.329, 38.785, 0.22", "140.778, 165.846, 38.9162, 0.66", "141.293, 166.303, 39.0211, 1.55", "141.62, 166.588, 39.0791, 1.55", "142.848, 167.614, 39.2484, 0.15", "143.807, 168.463, 39.3745, 0.15", "144.621, 169.242, 39.4702, 0.15", "145.309, 169.942, 39.511, 0.15", "145.935, 170.617, 39.5384, 0.15", "146.419, 171.189, 39.5762, 0.88", "147.01, 171.951, 39.64, 1.18", "147.709, 172.934, 39.7358, 1.18", "148.711, 174.361, 39.8801, 0.22", "149.779, 175.834, 40.0369, 0.22", "150.437, 176.787, 40.1449, 1.18", "150.752, 177.249, 40.2029, 1.92", "151.267, 178.018, 40.3181, 1.92" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "54.9227, 73.0957, 8.51267, 0.44", "55.873, 73.424, 8.64705, 0.44", "56.8843, 73.7813, 8.80364, 0.44", "57.389, 73.9282, 8.89171, 0.96", "58.5199, 74.1825, 9.10971, 1.7", "59.5237, 74.3815, 9.3081, 1.99", "61.0349, 74.6505, 9.59307, 1.11", "62.0577, 74.8048, 9.75339, 0.37", "63.0087, 74.9352, 9.84591, 0.37", "64.1825, 75.0931, 9.90046, 0.37", "64.9255, 75.2069, 9.87689, 0.37", "65.6368, 75.3291, 9.80767, 0.44", "66.6762, 75.513, 9.64198, 0.96", "67.9894, 75.7539, 9.36372, 1.62", "69.2976, 76.0219, 9.09667, 1.18", "71.0319, 76.4056, 8.80123, 0.29", "71.9273, 76.5942, 8.70205, 0.44", "72.5934, 76.7263, 8.67747, 0.59", "73.6284, 76.9086, 8.70596, 0.29", "75.0172, 77.1545, 8.83049, 0.29", "76.5987, 77.4725, 9.05049, 0.59", "77.6772, 77.7664, 9.24173, 1.03", "78.9631, 78.2279, 9.49293, 1.7", "80.1752, 78.748, 9.74264, 1.7", "81.6308, 79.4007, 10.0493, 0.96", "82.5093, 79.7786, 10.2105, 1.33", "84.1623, 80.4716, 10.5007, 1.62", "85.4823, 81.0289, 10.6992, 0.52", "86.504, 81.4614, 10.8378, 0.22", "87.5998, 81.929, 10.9707, 0.22", "88.9894, 82.5054, 11.0922, 0.22", "90.0503, 82.9788, 11.1481, 0.74", "91.0115, 83.4753, 11.1676, 1.33", "91.8542, 84.0287, 11.158, 1.77", "93.0922, 85.0357, 11.1159, 0.44", "94.2226, 86.1393, 11.0681, 0.22", "95.1095, 87.087, 11.0344, 0.66", "95.8086, 87.8141, 11.0089, 0.29", "96.4232, 88.4081, 10.9946, 0.29", "96.8168, 88.7287, 10.9913, 0.22", "97.3592, 89.0952, 11.0089, 0.22", "98.1648, 89.5454, 11.0682, 0.52", "99.1495, 89.9811, 11.145, 0.88", "100.022, 90.2974, 11.1888, 0.88", "101.029, 90.6448, 11.2214, 0.22", "101.927, 90.9834, 11.2599, 0.22", "102.37, 91.168, 11.2811, 0.52", "103.16, 91.5187, 11.3231, 1.4", "104.226, 91.9747, 11.3588, 1.18", "105.871, 92.6393, 11.3809, 0.22", "107.07, 93.1178, 11.3472, 0.59", "107.959, 93.4652, 11.3111, 0.22", "108.968, 93.8943, 11.2563, 0.88", "110.255, 94.5271, 11.1758, 1.55", "110.741, 94.808, 11.1339, 1.55", "112.376, 95.9049, 10.9197, 0.88", "113.146, 96.4781, 10.7904, 0.44", "113.847, 97.0393, 10.6678, 0.22", "114.556, 97.594, 10.5426, 0.22", "115.302, 98.1647, 10.4152, 0.37", "116.119, 98.7489, 10.2828, 1.11", "117.179, 99.4473, 10.1312, 1.18", "118.164, 100.079, 10.0055, 0.29", "119.523, 100.922, 9.8549, 0.22", "120.268, 101.373, 9.79558, 0.22", "121.027, 101.844, 9.77145, 1.11", "121.565, 102.204, 9.79018, 1.18", "122.641, 103.01, 9.91805, 0.29", "123.635, 103.757, 10.1137, 0.29", "124.259, 104.2, 10.2707, 1.03", "125.099, 104.71, 10.5058, 1.92", "125.694, 105.021, 10.6494, 1.92", "127.626, 105.89, 11.0117, 0.15", "128.648, 106.271, 11.1578, 0.15", "129.254, 106.483, 11.2373, 0.37", "130.115, 106.789, 11.3402, 1.11", "131.565, 107.312, 11.5149, 1.47", "132.975, 107.789, 11.6773, 0.44", "134.464, 108.255, 11.8422, 0.22", "135.645, 108.606, 11.9751, 0.74", "136.588, 108.832, 12.0954, 0.88", "138.21, 109.014, 12.3016, 0.22", "138.966, 108.974, 12.405, 0.22", "139.708, 108.8, 12.4852, 0.44", "140.436, 108.532, 12.5429, 0.81", "141.322, 108.142, 12.5989, 1.03", "142.761, 107.516, 12.6859, 0.81", "143.931, 107.047, 12.7777, 0.22", "144.767, 106.789, 12.8538, 0.22", "145.467, 106.675, 12.9177, 0.22", "146.829, 106.668, 13.0457, 0.37", "148.334, 106.876, 13.1845, 0.22", "148.887, 107.029, 13.2237, 0.96", "149.891, 107.412, 13.2518, 1.84", "151.809, 108.31, 13.2004, 0.22", "152.703, 108.814, 13.1204, 0.22", "153.069, 109.078, 13.0645, 0.22", "153.724, 109.684, 12.9397, 0.22", "154.327, 110.34, 12.8204, 0.44", "155.14, 111.287, 12.6885, 1.18", "155.839, 112.079, 12.6143, 1.62", "156.548, 112.81, 12.5817, 1.7", "157.667, 113.943, 12.6124, 1.25", "159.113, 115.327, 12.7368, 0.29", "160.028, 116.083, 12.8419, 1.03", "160.849, 116.657, 12.9281, 1.47", "162.43, 117.587, 13.0865, 0.22", "163.713, 118.232, 13.1942, 0.88", "164.689, 118.668, 13.2657, 0.44", "166.139, 119.309, 13.3538, 0.22", "167.178, 119.816, 13.4187, 0.22", "167.983, 120.257, 13.475, 1.03", "168.933, 120.844, 13.5633, 1.47", "169.742, 121.434, 13.6489, 1.25", "170.948, 122.497, 13.7756, 0.52", "172.249, 123.811, 13.8988, 0.37", "172.929, 124.513, 13.939, 1.03", "173.327, 124.912, 13.9313, 1.4", "174.569, 126.1, 13.8256, 0.96", "175.428, 126.824, 13.6893, 0.81", "176.735, 127.805, 13.4166, 0.22", "177.548, 128.334, 13.2187, 0.22", "178.245, 128.732, 13.0665, 0.74", "178.769, 129.016, 12.9744, 0.81", "179.768, 129.587, 12.8558, 0.22", "180.253, 129.91, 12.8203, 0.22", "180.964, 130.453, 12.7618, 0.88", "182.045, 131.385, 12.6817, 1.33", "182.915, 132.238, 12.5971, 1.7", "183.994, 133.426, 12.4708, 1.47", "185.144, 134.838, 12.3122, 0.22", "185.824, 135.734, 12.2079, 0.22", "186.579, 136.861, 12.0654, 0.29", "187.054, 137.744, 11.9563, 0.15", "187.339, 138.431, 11.8816, 0.15", "187.657, 139.47, 11.7892, 0.59", "187.907, 140.482, 11.7146, 0.37", "188.235, 141.847, 11.5874, 0.22", "188.606, 143.299, 11.3998, 0.22", "188.817, 144.01, 11.2903, 1.11", "189.281, 145.457, 11.0132, 0.22", "189.641, 146.531, 10.7651, 0.07", "189.966, 147.556, 10.5272, 0.07", "190.155, 148.183, 10.4075, 0.88", "190.287, 148.704, 10.3451, 1.11", "190.444, 149.802, 10.3269, 0.81", "190.489, 150.971, 10.4533, 0.37", "190.452, 152.618, 10.805, 0.15", "190.379, 153.977, 11.2224, 0.15", "190.284, 155.139, 11.6789, 0.15", "190.204, 156.216, 12.1659, 0.59", "190.079, 157.749, 12.9537, 0.29", "189.999, 158.56, 13.4255, 0.66", "189.912, 159.485, 14.023, 1.47", "189.779, 160.921, 15.0019, 0.22", "189.698, 161.949, 15.7108, 0.15", "189.663, 163.05, 16.4737, 0.15", "189.659, 163.823, 17.0083, 0.44", "189.684, 164.543, 17.4758, 0.44", "189.765, 165.643, 18.1643, 0.22", "189.805, 166.135, 18.4498, 0.15", "189.801, 167.172, 19.0178, 0.15", "189.774, 167.579, 19.2203, 0.15", "189.656, 168.196, 19.4967, 0.44", "189.521, 168.671, 19.7037, 0.44", "189.097, 170.052, 20.3368, 0.15", "188.83, 171.023, 20.8183, 0.22", "188.664, 171.68, 21.1571, 0.29", "188.532, 172.756, 21.7212, 0.29", "188.553, 173.601, 22.1443, 0.74", "188.739, 174.617, 22.6219, 0.66", "189.029, 175.521, 23.0119, 1.55", "189.227, 176.014, 23.1978, 1.55", "189.964, 177.553, 23.677, 0.15", "190.566, 178.654, 23.9687, 0.22", "191.172, 179.704, 24.2094, 0.22", "191.572, 180.366, 24.3386, 0.22", "192.147, 181.251, 24.4894, 0.37", "193.32, 182.954, 24.7505, 0.22", "194.352, 184.457, 24.9873, 0.15", "194.815, 185.157, 25.1221, 1.18", "195.347, 186.025, 25.3159, 2.21", "195.531, 186.349, 25.3961, 2.21", "196.43, 188.224, 25.9096, 0.22", "196.946, 189.672, 26.3309, 0.22", "197.366, 191.279, 26.7761, 0.22", "197.478, 191.822, 26.9208, 0.66", "197.542, 192.224, 27.0157, 1.25", "197.729, 193.588, 27.2846, 1.62", "197.908, 195.262, 27.5353, 0.22", "198.104, 196.979, 27.6722, 0.22", "198.177, 197.649, 27.6901, 0.37", "198.303, 198.652, 27.6908, 0.88", "198.396, 199.426, 27.6811, 0.88", "198.497, 200.545, 27.6296, 0.22", "198.535, 201.828, 27.5549, 0.15", "198.502, 202.836, 27.5207, 0.15", "198.462, 203.335, 27.4403, 0.52", "198.354, 204.405, 27.1952, 0.88", "198.218, 205.644, 26.8636, 0.22", "198.131, 206.511, 26.5887, 0.22", "197.898, 208.609, 25.9096, 0.15", "197.592, 212.188, 24.8065, 0.22", "197.534, 213.302, 24.4828, 0.44", "197.531, 214.476, 24.1807, 0.22", "197.595, 215.72, 23.9214, 0.29", "197.687, 216.717, 23.7715, 0.22", "197.894, 218.411, 23.6541, 0.15", "198.006, 219.161, 23.7319, 0.15", "198.217, 220.488, 23.8813, 0.15", "198.349, 221.197, 23.9773, 0.29", "198.502, 221.893, 24.1082, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "22.9344, 75.5608, 63.7123, 0.07", "22.7125, 76.1908, 63.9334, 0.07", "22.543, 76.7829, 64.147, 0.07", "22.3212, 77.9304, 64.5583, 0.07", "22.1706, 78.904, 64.8752, 0.29", "22.0814, 79.6758, 65.104, 0.07", "21.9815, 80.9372, 65.4288, 0.07", "21.9708, 81.5688, 65.569, 0.52", "22.0023, 83.1662, 65.896, 1.03", "22.0894, 84.9047, 66.2562, 0.15", "22.1243, 85.6104, 66.4086, 0.15", "22.1458, 86.4888, 66.6067, 0.15", "22.1286, 87.2855, 66.7786, 0.15", "22.0818, 87.9946, 66.9646, 0.07", "22.0244, 88.544, 67.1429, 0.07", "21.9572, 89.2507, 67.3863, 0.44", "21.9284, 89.6561, 67.5319, 0.74", "21.928, 90.1108, 67.6893, 0.74", "22.0446, 91.6126, 68.1587, 0.15", "22.1644, 92.5306, 68.4153, 0.15", "22.3395, 93.6604, 68.7024, 0.37", "22.5208, 94.7176, 68.9555, 1.7", "22.7058, 95.8831, 69.2181, 1.03", "22.9537, 97.4523, 69.5452, 0.15", "23.1942, 98.8269, 69.813, 0.15", "23.2903, 99.3894, 69.9178, 0.66", "23.4221, 100.102, 70.0502, 1.03", "23.6569, 101.304, 70.2339, 0.15", "23.962, 102.751, 70.4194, 0.15", "24.2194, 103.734, 70.5345, 0.15", "24.4497, 104.524, 70.6106, 0.29", "24.6914, 105.36, 70.6799, 0.29", "24.8744, 106.142, 70.7526, 0.74", "25.0354, 107.064, 70.8756, 0.81", "25.1018, 107.693, 70.9836, 0.81", "25.1659, 109.421, 71.3459, 0.15", "25.1552, 110.295, 71.6073, 0.74", "25.0123, 112.169, 72.3441, 0.15", "24.8722, 113.063, 72.8188, 0.15", "24.6369, 113.824, 73.3765, 0.15", "24.3966, 114.342, 73.8552, 0.29", "23.9121, 115.108, 74.7671, 0.15", "23.7431, 115.318, 75.0648, 0.52", "23.1773, 115.883, 76.0869, 1.4", "22.1453, 116.783, 77.9793, 0.15", "21.8704, 116.978, 78.4938, 0.15", "21.7464, 117.052, 78.7565, 0.15", "21.2636, 117.255, 79.9402, 0.81", "20.8043, 117.335, 81.2608, 0.15", "20.6695, 117.304, 81.7329, 0.15", "20.4881, 117.199, 82.4194, 1.18", "19.9698, 116.841, 84.3586, 0.07", "19.6142, 116.573, 85.6058, 0.07", "19.4329, 116.443, 86.1696, 0.59", "19.2167, 116.331, 86.7311, 1.77", "18.4279, 115.996, 88.5702, 0.07", "18.0506, 115.855, 89.3967, 0.07", "17.7835, 115.754, 89.9185, 0.37", "17.4972, 115.658, 90.4226, 0.52", "16.8459, 115.423, 91.5727, 0.07", "16.2086, 115.198, 92.6461, 0.07", "15.9386, 115.091, 93.073, 0.07", "15.7179, 114.991, 93.4222, 0.29", "15.2324, 114.713, 94.2243, 0.66", "14.7011, 114.297, 95.1724, 0.07", "14.3218, 113.938, 95.8703, 0.29", "13.9881, 113.607, 96.4977, 0.88", "13.3113, 112.938, 97.86, 0.15", "12.984, 112.608, 98.5792, 0.52", "12.3176, 111.928, 100.11, 0.07", "12.1002, 111.716, 100.606, 0.59", "11.8087, 111.431, 101.288, 1.47", "11.1247, 110.783, 102.912, 0.07", "10.8709, 110.543, 103.53, 0.07", "10.4896, 110.182, 104.476, 0.07", "10.3696, 110.071, 104.763, 0.37", "10.0999, 109.843, 105.354, 0.81", "9.56276, 109.433, 106.438, 0.07", "9.09912, 109.122, 107.264, 0.07", "8.84076, 109.003, 107.675, 0.44", "8.55904, 108.917, 108.102, 0.88", "7.73348, 108.774, 109.256, 0.15", "7.26364, 108.744, 109.856, 0.37", "6.9875, 108.746, 110.175, 0.37", "5.80669, 108.742, 111.438, 0.15", "5.41569, 108.733, 111.846, 0.15", "4.81434, 108.725, 112.451, 0.37", "3.71094, 108.693, 113.512, 0.07", "2.99404, 108.682, 114.186, 0.29", "2.34514, 108.682, 114.801, 0.07", "1.69946, 108.698, 115.411, 0.07", "0.310157, 108.752, 116.715, 0.07", "-1.53447, 108.842, 118.448, 0.07", "-2.13069, 108.885, 119.008, 0.07", "-2.98034, 108.966, 119.82, 0.07", "-3.4842, 109.031, 120.318, 0.59", "-4.24049, 109.125, 121.07, 1.18" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "22.9344, 75.5608, 63.7123, 0.37", "24.6343, 74.3113, 64.1503, 0.37", "25.7774, 73.5267, 64.336, 0.37", "26.5805, 73.0221, 64.4104, 0.59", "27.9391, 72.1567, 64.4058, 0.22", "28.9088, 71.498, 64.3416, 0.22", "29.5777, 70.9717, 64.2805, 0.15", "30.2328, 70.445, 64.2444, 0.15", "31.0818, 69.6789, 64.1625, 0.15", "31.8279, 68.8977, 64.0903, 0.59", "32.305, 68.259, 64.0582, 0.88", "33.3615, 66.5154, 64.0563, 0.15", "34.0695, 65.2055, 64.1665, 0.15", "34.4221, 64.4544, 64.2584, 0.44", "34.7208, 63.7209, 64.3722, 0.81", "35.1301, 62.6119, 64.5732, 0.07", "35.5869, 61.2437, 64.8107, 0.22", "36.0244, 59.8002, 65.0357, 0.22", "36.5972, 57.7671, 65.3051, 0.07", "37.0343, 56.0836, 65.5184, 0.07", "37.4433, 54.4863, 65.7016, 0.07", "37.6683, 53.589, 65.7747, 0.29", "38.2088, 51.4099, 65.9217, 0.07", "38.4516, 50.389, 65.9658, 0.88", "38.7653, 49.1049, 66.0229, 1.25", "38.979, 48.2702, 66.0446, 1.25", "39.6906, 45.5739, 66.0716, 0.07", "40.1561, 43.7907, 66.0747, 0.07", "40.4131, 42.787, 66.0615, 0.07", "40.5614, 42.1969, 66.052, 0.52", "40.9392, 40.6152, 66.0207, 0.66", "41.1088, 39.7925, 66.01, 0.22", "41.3014, 38.7071, 65.9912, 0.52", "41.4288, 37.7941, 65.9719, 0.29", "41.6301, 36.0744, 65.967, 0.07", "41.7687, 34.5807, 65.9924, 0.07", "41.8554, 33.485, 66.0394, 0.22", "41.905, 32.7241, 66.09, 0.22", "42.0311, 30.6112, 66.2494, 0.07", "42.0586, 30.0583, 66.2991, 0.37", "42.0874, 29.4156, 66.3663, 0.59", "42.1487, 27.9156, 66.5474, 0.07", "42.1995, 26.6996, 66.7121, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-2.70517, -70.401, 68.9486, 0.15", "-3.90847, -71.1067, 69.646, 0.15", "-5.10323, -71.7813, 70.3012, 0.15", "-6.21204, -72.3908, 70.8689, 0.15", "-7.3565, -73.0123, 71.4372, 0.37", "-8.6279, -73.69, 72.0512, 0.15", "-9.91431, -74.3593, 72.6594, 0.07", "-10.5627, -74.6959, 72.9698, 0.22", "-12.5371, -75.7108, 73.8013, 0.15", "-12.6793, -75.7776, 73.8554, 0.59", "-13.5886, -76.1849, 74.1993, 1.11", "-13.9994, -76.3701, 74.3548, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.70517, -70.401, 68.9486, 0.59", "-2.63922, -71.1744, 69.2664, 0.59", "-2.59732, -71.7363, 69.509, 0.96", "-2.48776, -72.6074, 69.8621, 1.47", "-2.38489, -73.1879, 70.0715, 1.47", "-2.15277, -74.225, 70.4124, 0.22", "-2.07254, -74.6136, 70.5513, 0.15", "-2.01734, -74.9816, 70.7146, 0.15", "-1.93703, -75.6058, 71.0291, 0.15", "-1.8764, -76.1346, 71.3129, 0.37", "-1.81573, -76.6663, 71.646, 0.37", "-1.69846, -77.5983, 72.3409, 0.22", "-1.61782, -78.125, 72.7872, 0.22", "-1.565, -78.4348, 73.0632, 0.96", "-1.41492, -79.2022, 73.7841, 2.06", "-1.24394, -79.9335, 74.5018, 1.11", "-0.984546, -80.9011, 75.4722, 0.22", "-0.746683, -81.6431, 76.2126, 0.22", "-0.647213, -81.974, 76.5396, 0.22", "-0.577862, -82.2387, 76.8006, 0.22", "-0.529199, -82.4668, 77.031, 0.22", "-0.504184, -82.8092, 77.3566, 0.22", "-0.543184, -83.1913, 77.7049, 0.22", "-0.655192, -83.7821, 78.2342, 0.22", "-0.755849, -84.3065, 78.6743, 0.22", "-0.815474, -84.6614, 78.9462, 0.66", "-0.904068, -85.4056, 79.474, 1.11", "-0.998136, -86.5196, 80.2369, 0.29", "-1.08104, -87.4907, 80.8933, 0.22", "-1.15094, -88.3012, 81.4445, 0.22", "-1.19877, -88.6737, 81.6946, 0.29", "-1.33777, -89.6023, 82.3069, 0.22", "-1.40352, -90.0217, 82.5818, 0.96", "-1.52567, -90.7342, 83.0464, 1.84", "-1.75059, -91.9054, 83.8218, 0.29", "-1.95344, -92.8141, 84.4754, 0.22", "-2.08755, -93.3997, 84.9227, 0.22", "-2.16681, -93.768, 85.2088, 0.22", "-2.2183, -94.1342, 85.4787, 0.37", "-2.24694, -94.7772, 85.9062, 0.52", "-2.22739, -95.5631, 86.3327, 0.29", "-2.16741, -96.2679, 86.6694, 0.29", "-2.13041, -96.6893, 86.8413, 0.29", "-2.04591, -97.5244, 87.1525, 0.44", "-1.91495, -98.5063, 87.4908, 0.52", "-1.69853, -99.885, 87.9218, 0.15", "-1.57776, -100.577, 88.1253, 0.59", "-1.38676, -101.705, 88.483, 1.7", "-1.17429, -103.077, 88.9808, 0.15", "-1.08101, -103.714, 89.2565, 0.44", "-1.01036, -104.146, 89.4612, 0.44", "-0.902229, -104.754, 89.7835, 0.07", "-0.816876, -105.279, 90.0781, 0.07", "-0.775779, -105.673, 90.3249, 0.07", "-0.761752, -106.208, 90.6797, 0.29", "-0.789736, -107.092, 91.2765, 0.52", "-0.816919, -107.722, 91.7094, 0.22", "-0.843343, -108.25, 92.0791, 0.22", "-0.874432, -108.83, 92.4976, 0.37", "-0.904484, -109.379, 92.9284, 0.74", "-0.971516, -110.148, 93.5988, 1.33", "-1.08027, -110.89, 94.3204, 0.22", "-1.18348, -111.414, 94.8563, 0.15", "-1.27197, -111.804, 95.2718, 0.29", "-1.39238, -112.331, 95.8502, 0.15", "-1.50237, -112.743, 96.308, 0.59", "-1.63001, -113.149, 96.7988, 0.74", "-1.85442, -113.705, 97.5038, 0.07", "-2.07405, -114.21, 98.1629, 0.15", "-2.23363, -114.565, 98.631, 0.15", "-2.36736, -114.858, 99.0109, 0.15", "-2.53211, -115.19, 99.4298, 0.15", "-2.78142, -115.658, 100.001, 0.29", "-3.00659, -116.027, 100.448, 0.74", "-3.36795, -116.576, 101.087, 1.03", "-3.73767, -117.132, 101.699, 0.29", "-4.24786, -117.923, 102.564, 0.22", "-4.56679, -118.431, 103.089, 0.88", "-4.92781, -118.992, 103.682, 1.33", "-5.25392, -119.47, 104.198, 1.47", "-5.88786, -120.345, 105.184, 0.22", "-6.22665, -120.778, 105.697, 0.22", "-6.61699, -121.27, 106.303, 1.03", "-7.03905, -121.783, 106.95, 1.55", "-7.64156, -122.527, 107.883, 0.74", "-8.1974, -123.298, 108.829, 0.22", "-8.46368, -123.735, 109.32, 0.22", "-8.70046, -124.157, 109.762, 0.22", "-8.95456, -124.681, 110.282, 0.15", "-9.15773, -125.234, 110.764, 0.37", "-9.35111, -126.031, 111.383, 0.15", "-9.4382, -126.666, 111.812, 0.15", "-9.49136, -127.544, 112.374, 0.22", "-9.50186, -127.954, 112.622, 0.15", "-9.49282, -128.59, 112.999, 0.15", "-9.46031, -128.989, 113.23, 0.74", "-9.38391, -129.477, 113.503, 0.88", "-9.11855, -130.495, 114.076, 0.15", "-9.0058, -130.885, 114.298, 0.22", "-8.92281, -131.334, 114.61, 0.22", "-8.86994, -132.047, 115.196, 0.22", "-8.87069, -132.242, 115.376, 0.22", "-8.90571, -132.673, 115.801, 0.88", "-9.04182, -133.338, 116.487, 1.84", "-9.35796, -134.288, 117.513, 0.15", "-9.59007, -134.843, 118.085, 0.15", "-9.7978, -135.253, 118.473, 0.29", "-10.0867, -135.878, 119.039, 0.74", "-10.3166, -136.456, 119.541, 1.11", "-10.4975, -137.038, 120.026, 0.52", "-10.7157, -137.87, 120.712, 0.22", "-11.076, -139.112, 121.832, 0.29", "-11.3572, -140.053, 122.768, 0.15", "-11.5041, -140.553, 123.311, 0.37", "-11.686, -141.162, 124.048, 1.18", "-11.8968, -141.959, 125.116, 0.44", "-12.0596, -142.591, 126.113, 0.29", "-12.1575, -143.014, 126.851, 0.15", "-12.2524, -143.338, 127.437, 0.88", "-12.391, -143.808, 128.306, 1.03", "-12.5585, -144.441, 129.548, 0.22", "-12.6485, -145.027, 130.777, 0.22", "-12.6721, -145.298, 131.381, 0.59", "-12.698, -145.601, 132.091, 0.96", "-12.7493, -145.969, 133.081, 0.37", "-12.8396, -146.371, 134.406, 0.15", "-12.9442, -146.603, 135.468, 0.59", "-13.0172, -146.707, 136.112, 1.77", "-13.2151, -146.907, 137.741, 0.22", "-13.3336, -147.016, 138.775, 0.22", "-13.4371, -147.087, 139.518, 0.37", "-13.5666, -147.175, 140.232, 0.37", "-13.6757, -147.267, 140.784, 0.37", "-13.8069, -147.408, 141.538, 0.81", "-13.877, -147.568, 142.208, 0.81", "-13.8858, -147.96, 143.291, 0.29", "-13.8105, -148.258, 143.954, 0.29", "-13.6481, -148.507, 144.438, 0.29", "-13.5146, -148.627, 144.671, 0.29", "-12.87, -149.037, 145.549, 0.29", "-12.5769, -149.198, 145.892, 0.44", "-12.0201, -149.497, 146.518, 0.44", "-11.294, -149.917, 147.419, 0.81", "-10.736, -150.276, 148.258, 0.81", "-10.3636, -150.567, 148.958, 0.81", "-10.1942, -150.735, 149.396, 0.22", "-9.87947, -151.126, 150.462, 0.22", "-9.63209, -151.574, 151.697, 0.22", "-9.48848, -151.999, 152.814, 0.81", "-9.40573, -152.43, 153.852, 0.52", "-9.36859, -153.147, 155.361, 0.22", "-9.39301, -153.489, 155.987, 0.22", "-9.4587, -153.778, 156.421, 0.52", "-9.68712, -154.339, 157.09, 0.15", "-9.8509, -154.619, 157.351, 0.59", "-10.3844, -155.387, 157.916, 0.15", "-10.8477, -155.968, 158.208, 0.37", "-11.4059, -156.617, 158.471, 0.15", "-11.9535, -157.16, 158.658, 0.37", "-12.3558, -157.445, 158.73, 0.37" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "151.267, 178.018, 40.3181, 0.96", "151.972, 178.717, 40.3917, 0.96", "152.457, 179.247, 40.4427, 1.25", "152.893, 179.777, 40.4888, 0.66", "153.157, 180.125, 40.5171, 0.22", "153.474, 180.555, 40.551, 0.15", "153.679, 180.824, 40.5728, 0.37", "154.093, 181.4, 40.6168, 0.15", "154.393, 181.796, 40.6485, 0.37", "154.624, 182.073, 40.6726, 0.88", "154.91, 182.368, 40.6849, 0.88", "155.584, 182.957, 40.6413, 0.22", "156.052, 183.331, 40.6024, 0.22", "156.532, 183.661, 40.5518, 0.22", "156.866, 183.864, 40.5082, 0.22", "157.583, 184.262, 40.3872, 1.25", "158.337, 184.645, 40.2075, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "151.267, 178.018, 40.3181, 0.29", "151.377, 179.314, 40.7036, 0.29", "151.539, 179.947, 40.8633, 0.22", "151.72, 180.468, 40.9739, 0.66", "152.019, 181.239, 41.1122, 0.22", "152.334, 181.989, 41.2317, 0.15", "152.625, 182.69, 41.3321, 0.15", "153.025, 183.577, 41.4153, 0.15", "153.467, 184.512, 41.463, 0.22", "153.887, 185.36, 41.4763, 0.29", "154.254, 186.063, 41.4687, 0.22", "154.666, 186.77, 41.4442, 0.29", "155.326, 187.702, 41.4, 0.22", "155.966, 188.492, 41.3575, 0.66", "156.355, 188.94, 41.3355, 1.11", "156.844, 189.488, 41.3061, 1.18", "157.523, 190.256, 41.2537, 0.37", "158.264, 191.102, 41.1944, 0.37", "158.845, 191.857, 41.1516, 0.22", "159.332, 192.693, 41.1309, 0.22", "159.623, 193.33, 41.1131, 0.22", "159.822, 193.869, 41.1033, 0.59", "159.942, 194.264, 41.1097, 1.03", "160.179, 195.153, 41.1524, 1.18", "160.637, 196.828, 41.3192, 0.44", "160.848, 197.544, 41.4102, 0.88", "161.085, 198.349, 41.5412, 1.7", "161.359, 199.28, 41.7215, 2.29", "161.608, 200.115, 41.9017, 2.29", "161.797, 200.728, 42.0621, 1.99" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "161.797, 200.728, 42.0621, 0.22", "163.16, 203.021, 42.1987, 0.22", "163.8, 204.097, 42.2629, 0.22", "164.477, 205.236, 42.3308, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "161.797, 200.728, 42.0621, 0.29", "162.757, 201.41, 42.2259, 0.29", "163.395, 201.863, 42.3347, 0.29", "164.038, 202.32, 42.4443, 0.29", "164.581, 202.706, 42.537, 0.52", "165.135, 203.099, 42.6315, 0.52", "166.051, 203.75, 42.7879, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_58", "dend_35", "dend_0", "dend_62", "dend_59", "dend_47", "dend_36", "dend_10", "dend_1", "dend_66", "dend_63", "dend_61", "dend_60", "dend_53", "dend_48", "dend_42", "dend_37", "dend_20", "dend_11", "dend_7", "dend_2", "dend_68", "dend_67", "dend_65", "dend_64", "dend_57", "dend_54", "dend_50", "dend_49", "dend_46", "dend_43", "dend_39", "dend_38", "dend_24", "dend_21", "dend_13", "dend_12", "dend_9", "dend_8", "dend_6", "dend_3", "dend_56", "dend_55", "dend_52", "dend_51", "dend_45", "dend_44", "dend_41", "dend_40", "dend_32", "dend_25", "dend_23", "dend_22", "dend_17", "dend_14", "dend_5", "dend_4", "dend_34", "dend_33", "dend_27", "dend_26", "dend_19", "dend_18", "dend_16", "dend_15", "dend_31", "dend_28", "dend_30", "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_35", "dend_35", "dend_35", "dend_35", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BTC_9e335e53f6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_35
create dend_47
public dend_47
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_47
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_10
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_58(0), soma_0(0.45000018730548563)
    connect dend_35(0), soma_0(0.45000018730548563)
    connect dend_0(0), soma_0(0.45000018730548563)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_53(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_20(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.16881, -12.804, 0.0, 3.44428 ) }
    soma_0 { pt3dadd( 1.99522, -11.5105, 0.0, 5.75363 ) }
    soma_0 { pt3dadd( 1.82164, -10.2169, 0.0, 7.75663 ) }
    soma_0 { pt3dadd( 1.64805, -8.92341, 0.0, 8.89598 ) }
    soma_0 { pt3dadd( 1.47447, -7.62987, 0.0, 9.91596 ) }
    soma_0 { pt3dadd( 1.30088, -6.33633, 0.0, 10.9547 ) }
    soma_0 { pt3dadd( 1.1273, -5.04279, 0.0, 11.8384 ) }
    soma_0 { pt3dadd( 0.953711, -3.74926, 0.0, 12.6846 ) }
    soma_0 { pt3dadd( 0.780126, -2.45572, 0.0, 13.1367 ) }
    soma_0 { pt3dadd( 0.606541, -1.16218, 0.0, 13.4162 ) }
    soma_0 { pt3dadd( 0.432956, 0.13136, 0.0, 13.3909 ) }
    soma_0 { pt3dadd( 0.25937, 1.4249, 0.0, 13.2383 ) }
    soma_0 { pt3dadd( 0.085785, 2.71844, 0.0, 12.8868 ) }
    soma_0 { pt3dadd( -0.0878002, 4.01197, 0.0, 12.8103 ) }
    soma_0 { pt3dadd( -0.261385, 5.30551, 0.0, 12.9125 ) }
    soma_0 { pt3dadd( -0.434971, 6.59905, 0.0, 12.4763 ) }
    soma_0 { pt3dadd( -0.608556, 7.89259, 0.0, 11.6777 ) }
    soma_0 { pt3dadd( -0.782141, 9.18613, 0.0, 10.5994 ) }
    soma_0 { pt3dadd( -0.955726, 10.4797, 0.0, 9.19908 ) }
    soma_0 { pt3dadd( -1.12931, 11.7732, 0.0, 7.03753 ) }
    soma_0 { pt3dadd( -1.3029, 13.0667, 0.0, 4.1381 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 21/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 3.21969, -13.2049, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.21969, -13.2049, -4.59, 1.84 ) }
    dend_58 { pt3dadd( 3.46622, -14.0628, -4.63588, 1.84 ) }
    dend_58 { pt3dadd( 3.9921, -15.8928, -4.73376, 2.14 ) }
    dend_58 { pt3dadd( 4.32872, -17.0642, -4.79641, 1.92 ) }
    dend_58 { pt3dadd( 4.75674, -18.5537, -4.87608, 2.06 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 27/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 0.219697, -13.6879, -1.64, 2.43 ) }
    dend_35 { pt3dadd( 0.219697, -13.6879, -1.64, 2.43 ) }
    dend_35 { pt3dadd( -0.303923, -14.9973, -1.79716, 1.92 ) }
    dend_35 { pt3dadd( -0.739644, -16.087, -1.92794, 2.14 ) }
    dend_35 { pt3dadd( -1.0094, -16.7616, -2.0089, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 32/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.5397, 13.1921, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.5397, 13.1921, 0.0, 3.02 ) }
    dend_0 { pt3dadd( 1.77914, 14.1345, -0.054341, 2.36 ) }
    dend_0 { pt3dadd( 2.09875, 15.3002, -0.113926, 2.36 ) }
    dend_0 { pt3dadd( 2.6297, 17.1729, -0.199326, 2.29 ) }
    dend_0 { pt3dadd( 3.03837, 18.5609, -0.270555, 2.21 ) }
    dend_0 { pt3dadd( 3.45735, 19.934, -0.344335, 2.29 ) }
    dend_0 { pt3dadd( 3.82512, 21.1168, -0.410183, 2.43 ) }
    dend_0 { pt3dadd( 4.24664, 22.4251, -0.487942, 2.36 ) }
    dend_0 { pt3dadd( 4.60073, 23.448, -0.542384, 2.51 ) }
    dend_0 { pt3dadd( 4.98071, 24.4459, -0.596031, 3.17 ) }
    dend_0 { pt3dadd( 5.22748, 25.0601, -0.620397, 3.17 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 44/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.3029, 13.0667, 0.0, 0.476408 ) }
    axon_0 { pt3dadd( -3.29794, 27.9334, 0.0, 0.476408 ) }
    axon_0 { pt3dadd( -5.29297, 42.8002, 0.0, 0.476408 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 4.75674, -18.5537, -4.87608, 0.88 ) }
    dend_62 { pt3dadd( 4.16872, -18.4296, -5.54604, 0.88 ) }
    dend_62 { pt3dadd( 3.59096, -18.3825, -6.19252, 0.81 ) }
    dend_62 { pt3dadd( 3.0151, -18.4027, -6.85325, 0.81 ) }
    dend_62 { pt3dadd( 2.35065, -18.4936, -7.63902, 0.96 ) }
    dend_62 { pt3dadd( 1.72375, -18.6417, -8.41218, 1.4 ) }
    dend_62 { pt3dadd( 1.12918, -18.8568, -9.20625, 1.77 ) }
    dend_62 { pt3dadd( 0.610336, -19.0961, -9.94075, 0.44 ) }
    dend_62 { pt3dadd( 0.16377, -19.3875, -10.6033, 0.44 ) }
    dend_62 { pt3dadd( -0.0897729, -19.6228, -10.9766, 0.44 ) }
    dend_62 { pt3dadd( -0.287361, -19.9197, -11.311, 0.66 ) }
    dend_62 { pt3dadd( -0.496205, -20.5154, -11.8486, 1.03 ) }
    dend_62 { pt3dadd( -4.68888, -20.7698, -18.9187, 1.03 ) }
    dend_62 { pt3dadd( -7.76207, -20.6439, -26.5432, 1.03 ) }
    dend_62 { pt3dadd( -9.09425, -19.4167, -34.5661, 1.03 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 62/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.75674, -18.5537, -4.87608, 1.11 ) }
    dend_59 { pt3dadd( 5.48964, -19.4931, -4.82376, 1.11 ) }
    dend_59 { pt3dadd( 6.13948, -20.373, -4.72591, 1.25 ) }
    dend_59 { pt3dadd( 6.39132, -20.7313, -4.66702, 1.7 ) }
    dend_59 { pt3dadd( 6.83312, -21.3889, -4.54658, 1.77 ) }
    dend_59 { pt3dadd( 7.58645, -22.5152, -4.34059, 1.33 ) }
    dend_59 { pt3dadd( 8.16816, -23.3932, -4.18886, 1.03 ) }
    dend_59 { pt3dadd( 8.6073, -24.0818, -4.04127, 1.03 ) }
    dend_59 { pt3dadd( 9.04417, -24.7966, -3.9061, 1.03 ) }
    dend_59 { pt3dadd( 9.41472, -25.4301, -3.82058, 1.33 ) }
    dend_59 { pt3dadd( 9.95165, -26.4065, -3.75744, 1.33 ) }
    dend_59 { pt3dadd( 10.4413, -27.3635, -3.78361, 0.74 ) }
    dend_59 { pt3dadd( 10.921, -28.3777, -3.89914, 0.74 ) }
    dend_59 { pt3dadd( 11.4179, -29.4172, -4.06165, 0.88 ) }
    dend_59 { pt3dadd( 11.7914, -30.1965, -4.19891, 1.33 ) }
    dend_59 { pt3dadd( 12.0871, -30.7878, -4.27892, 2.06 ) }
    dend_59 { pt3dadd( 12.7136, -32.0174, -4.39193, 0.96 ) }
    dend_59 { pt3dadd( 13.2499, -32.9994, -4.42789, 0.74 ) }
    dend_59 { pt3dadd( 13.6627, -33.7101, -4.41927, 1.18 ) }
    dend_59 { pt3dadd( 13.9511, -34.183, -4.37305, 1.55 ) }
    dend_59 { pt3dadd( 14.7037, -35.3935, -4.2205, 0.88 ) }
    dend_59 { pt3dadd( 15.1494, -36.1217, -4.15295, 0.81 ) }
    dend_59 { pt3dadd( 15.7481, -37.1349, -4.1312, 0.88 ) }
    dend_59 { pt3dadd( 16.0706, -37.7183, -4.16913, 1.4 ) }
    dend_59 { pt3dadd( 16.3367, -38.255, -4.25517, 1.4 ) }
    dend_59 { pt3dadd( 16.7152, -39.1046, -4.45626, 0.81 ) }
    dend_59 { pt3dadd( 17.0577, -39.9485, -4.72001, 0.88 ) }
    dend_59 { pt3dadd( 17.3282, -40.6227, -4.95702, 0.52 ) }
    dend_59 { pt3dadd( 17.4881, -41.0086, -5.10371, 0.96 ) }
    dend_59 { pt3dadd( 17.7857, -41.6448, -5.32963, 1.92 ) }
    dend_59 { pt3dadd( 18.2011, -42.4453, -5.57246, 0.74 ) }
    dend_59 { pt3dadd( 18.6218, -43.1928, -5.76887, 0.74 ) }
    dend_59 { pt3dadd( 19.0609, -43.9011, -5.92607, 0.96 ) }
    dend_59 { pt3dadd( 19.5056, -44.5455, -6.06885, 1.55 ) }
    dend_59 { pt3dadd( 20.3106, -45.5978, -6.33162, 0.81 ) }
    dend_59 { pt3dadd( 21.004, -46.4215, -6.55701, 0.81 ) }
    dend_59 { pt3dadd( 21.6716, -47.1616, -6.77493, 1.25 ) }
    dend_59 { pt3dadd( 22.3329, -47.8722, -6.98839, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( 23.3091, -48.9281, -7.26523, 0.81 ) }
    dend_59 { pt3dadd( 24.143, -49.8739, -7.46231, 0.81 ) }
    dend_59 { pt3dadd( 24.6161, -50.4195, -7.55992, 1.18 ) }
    dend_59 { pt3dadd( 25.1624, -51.0136, -7.65319, 1.55 ) }
    dend_59 { pt3dadd( 25.747, -51.6456, -7.72553, 1.55 ) }
    dend_59 { pt3dadd( 26.4548, -52.4652, -7.78362, 0.59 ) }
    dend_59 { pt3dadd( 27.1366, -53.3336, -7.76568, 0.81 ) }
    dend_59 { pt3dadd( 27.5766, -53.9412, -7.70015, 1.33 ) }
    dend_59 { pt3dadd( 28.2342, -54.891, -7.56498, 0.37 ) }
    dend_59 { pt3dadd( 28.5884, -55.4411, -7.45636, 0.22 ) }
    dend_59 { pt3dadd( 32.8704, -61.3693, -8.00965, 0.22 ) }
    dend_59 { pt3dadd( 37.9259, -66.3271, -9.63659, 0.22 ) }
    dend_59 { pt3dadd( 43.4194, -71.0497, -9.97918, 0.22 ) }
    dend_59 { pt3dadd( 48.5915, -76.0751, -9.0362, 0.22 ) }
    dend_59 { pt3dadd( 54.3028, -80.2705, -7.63551, 0.22 ) }
    dend_59 { pt3dadd( 59.4066, -85.4275, -7.02653, 0.22 ) }
    dend_59 { pt3dadd( 64.2006, -90.9098, -7.55423, 0.22 ) }
    dend_59 { pt3dadd( 68.8217, -96.3854, -8.95157, 0.22 ) }
    dend_59 { pt3dadd( 73.7356, -101.769, -9.25595, 0.22 ) }
    dend_59 { pt3dadd( 78.229, -107.522, -9.81615, 0.22 ) }
    dend_59 { pt3dadd( 82.2572, -113.533, -11.0404, 0.22 ) }
    dend_59 { pt3dadd( 85.8065, -119.52, -13.3542, 0.22 ) }
    dend_59 { pt3dadd( 90.1642, -124.646, -16.1204, 0.22 ) }
    dend_59 { pt3dadd( 93.3542, -130.087, -19.782, 0.22 ) }
    dend_59 { pt3dadd( 97.1077, -135.885, -22.2077, 0.22 ) }
    dend_59 { pt3dadd( 100.229, -142.421, -23.6195, 0.22 ) }
    dend_59 { pt3dadd( 104.149, -148.634, -23.9796, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_35 (entry count 27/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.0094, -16.7616, -2.0089, 0.96 ) }
    dend_47 { pt3dadd( -2.32291, -17.5622, -2.19199, 0.96 ) }
    dend_47 { pt3dadd( -3.04023, -18.0253, -2.30109, 0.96 ) }
    dend_47 { pt3dadd( -3.77314, -18.5274, -2.42179, 1.25 ) }
    dend_47 { pt3dadd( -4.15943, -18.8118, -2.49014, 1.25 ) }
    dend_47 { pt3dadd( -4.86896, -19.3604, -2.63081, 0.96 ) }
    dend_47 { pt3dadd( -5.54017, -19.8914, -2.77993, 0.96 ) }
    dend_47 { pt3dadd( -6.1313, -20.3759, -2.92513, 1.47 ) }
    dend_47 { pt3dadd( -6.87606, -20.9354, -3.11574, 1.62 ) }
    dend_47 { pt3dadd( -7.79736, -21.5284, -3.34376, 0.96 ) }
    dend_47 { pt3dadd( -8.55218, -21.947, -3.5328, 0.96 ) }
    dend_47 { pt3dadd( -9.62011, -22.44, -3.79402, 1.11 ) }
    dend_47 { pt3dadd( -10.3879, -22.7178, -3.97436, 1.4 ) }
    dend_47 { pt3dadd( -11.7327, -23.0866, -4.28314, 1.33 ) }
    dend_47 { pt3dadd( -12.8418, -23.3205, -4.54953, 0.96 ) }
    dend_47 { pt3dadd( -13.9767, -23.5323, -4.83457, 1.18 ) }
    dend_47 { pt3dadd( -14.5464, -23.636, -4.9813, 1.18 ) }
    dend_47 { pt3dadd( -15.9975, -23.9295, -5.37454, 0.88 ) }
    dend_47 { pt3dadd( -16.8263, -24.1581, -5.61718, 0.88 ) }
    dend_47 { pt3dadd( -17.3883, -24.3807, -5.8087, 1.03 ) }
    dend_47 { pt3dadd( -18.4222, -24.9432, -6.1824, 1.25 ) }
    dend_47 { pt3dadd( -19.0826, -25.3868, -6.41941, 0.88 ) }
    dend_47 { pt3dadd( -19.7183, -25.8909, -6.6443, 0.88 ) }
    dend_47 { pt3dadd( -20.2867, -26.3939, -6.83944, 1.11 ) }
    dend_47 { pt3dadd( -20.9289, -26.9475, -7.06248, 1.25 ) }
    dend_47 { pt3dadd( -21.7597, -27.6316, -7.40603, 0.88 ) }
    dend_47 { pt3dadd( -22.3804, -28.153, -7.75327, 1.03 ) }
    dend_47 { pt3dadd( -22.8139, -28.5508, -8.08351, 1.4 ) }
    dend_47 { pt3dadd( -23.3293, -29.0623, -8.60832, 1.18 ) }
    dend_47 { pt3dadd( -23.9389, -29.6784, -9.43043, 1.25 ) }
    dend_47 { pt3dadd( -24.3091, -30.1869, -10.3601, 1.4 ) }
    dend_47 { pt3dadd( -23.6191, -30.3004, -11.2393, 1.4 ) }
    dend_47 { pt3dadd( -22.7993, -30.173, -11.6121, 1.47 ) }
    dend_47 { pt3dadd( -21.1379, -29.7877, -12.0838, 0.52 ) }
    dend_47 { pt3dadd( -20.2441, -29.5539, -12.1923, 0.52 ) }
    dend_47 { pt3dadd( -19.3079, -29.2957, -12.1953, 0.59 ) }
    dend_47 { pt3dadd( -17.7372, -28.883, -12.0209, 0.59 ) }
    dend_47 { pt3dadd( -16.7855, -28.6556, -11.8233, 0.66 ) }
    dend_47 { pt3dadd( -15.7737, -28.4729, -11.5211, 0.74 ) }
    dend_47 { pt3dadd( -14.4257, -28.2897, -11.0477, 0.59 ) }
    dend_47 { pt3dadd( -13.4165, -28.212, -10.6564, 0.88 ) }
    dend_47 { pt3dadd( -12.0641, -28.1786, -10.0762, 0.37 ) }
    dend_47 { pt3dadd( -11.3515, -28.2201, -9.74908, 0.37 ) }
    dend_47 { pt3dadd( -10.6605, -28.329, -9.38762, 0.37 ) }
    dend_47 { pt3dadd( -17.0975, -34.138, -12.7408, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -1.0094, -16.7616, -2.0089, 1.4 ) }
    dend_36 { pt3dadd( -0.976196, -17.9314, -1.80816, 1.4 ) }
    dend_36 { pt3dadd( -0.928229, -19.1353, -1.61737, 1.03 ) }
    dend_36 { pt3dadd( -0.876339, -20.306, -1.43142, 1.33 ) }
    dend_36 { pt3dadd( -0.820225, -21.658, -1.21037, 1.25 ) }
    dend_36 { pt3dadd( -0.767126, -22.8863, -0.992913, 1.25 ) }
    dend_36 { pt3dadd( -0.721227, -24.0567, -0.768098, 1.11 ) }
    dend_36 { pt3dadd( -0.689756, -25.1822, -0.564763, 1.84 ) }
    dend_36 { pt3dadd( -0.662992, -25.9098, -0.442759, 1.62 ) }
    dend_36 { pt3dadd( -0.604914, -27.2988, -0.19066, 1.18 ) }
    dend_36 { pt3dadd( -0.555734, -28.7709, 0.0924616, 1.11 ) }
    dend_36 { pt3dadd( -0.515833, -30.2515, 0.384388, 1.25 ) }
    dend_36 { pt3dadd( -0.496127, -31.2303, 0.568825, 1.55 ) }
    dend_36 { pt3dadd( -0.484036, -32.2949, 0.775029, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 86/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 5.22748, 25.0601, -0.620397, 2.88 ) }
    dend_10 { pt3dadd( 5.35752, 26.0975, -0.512105, 2.88 ) }
    dend_10 { pt3dadd( 5.52167, 27.407, -0.37541, 2.58 ) }
    dend_10 { pt3dadd( 5.70718, 28.887, -0.220925, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.22748, 25.0601, -0.620397, 1.62 ) }
    dend_1 { pt3dadd( 6.35633, 24.57, -1.40039, 1.62 ) }
    dend_1 { pt3dadd( 7.69265, 23.8204, -2.25608, 0.96 ) }
    dend_1 { pt3dadd( 8.58392, 23.2408, -2.79482, 0.96 ) }
    dend_1 { pt3dadd( 9.56795, 22.5116, -3.37019, 1.11 ) }
    dend_1 { pt3dadd( 10.0969, 22.0853, -3.66952, 1.25 ) }
    dend_1 { pt3dadd( 11.0991, 21.1938, -4.23755, 0.96 ) }
    dend_1 { pt3dadd( 12.2939, 19.9165, -4.88664, 0.81 ) }
    dend_1 { pt3dadd( 12.9583, 19.1642, -5.23865, 0.81 ) }
    dend_1 { pt3dadd( 13.5368, 18.5293, -5.551, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_1 { pt3dadd( 14.0733, 17.9683, -5.88232, 0.88 ) }
    dend_1 { pt3dadd( 14.962, 17.125, -6.4815, 0.74 ) }
    dend_1 { pt3dadd( 15.9093, 16.3455, -7.1577, 0.59 ) }
    dend_1 { pt3dadd( 16.7482, 15.7449, -7.75737, 0.74 ) }
    dend_1 { pt3dadd( 17.3435, 15.3506, -8.16833, 0.66 ) }
    dend_1 { pt3dadd( 17.9819, 14.9362, -8.56224, 0.66 ) }
    dend_1 { pt3dadd( 18.9123, 14.3267, -9.0739, 0.96 ) }
    dend_1 { pt3dadd( 19.8901, 13.6997, -9.54174, 1.11 ) }
    dend_1 { pt3dadd( 21.1104, 12.8575, -10.0682, 0.81 ) }
    dend_1 { pt3dadd( 22.0925, 12.1041, -10.4674, 0.81 ) }
    dend_1 { pt3dadd( 23.0373, 11.3225, -10.8567, 0.52 ) }
    dend_1 { pt3dadd( 23.6402, 10.7724, -11.142, 0.52 ) }
    dend_1 { pt3dadd( 24.0691, 10.3189, -11.4269, 0.52 ) }
    dend_1 { pt3dadd( 24.5655, 9.68252, -11.9428, 0.74 ) }
    dend_1 { pt3dadd( 25.0745, 8.89765, -12.7313, 0.96 ) }
    dend_1 { pt3dadd( 25.3667, 8.36407, -13.3196, 1.03 ) }
    dend_1 { pt3dadd( 25.7102, 7.67107, -14.1305, 0.81 ) }
    dend_1 { pt3dadd( 26.1575, 6.83275, -15.1135, 0.52 ) }
    dend_1 { pt3dadd( 26.5226, 6.09019, -15.9728, 0.88 ) }
    dend_1 { pt3dadd( 26.7058, 5.7201, -16.4096, 1.11 ) }
    dend_1 { pt3dadd( 27.1058, 4.98242, -17.2912, 0.81 ) }
    dend_1 { pt3dadd( 27.5689, 4.30669, -18.0777, 0.22 ) }
    dend_1 { pt3dadd( 28.2919, 3.55163, -18.8973, 0.15 ) }
    dend_1 { pt3dadd( 34.6063, -2.67414, -23.5307, 0.15 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -5.29297, 42.8002, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -7.28801, 57.6669, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -9.28305, 72.5336, 0.0, 0.15 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 27/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -9.09425, -19.4167, -34.5661, 0.15 ) }
    dend_66 { pt3dadd( -14.4546, -19.5657, -42.9255, 0.15 ) }
    dend_66 { pt3dadd( -20.3946, -19.0895, -50.8663, 0.15 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 30/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -9.09425, -19.4167, -34.5661, 0.59 ) }
    dend_63 { pt3dadd( -11.609, -19.5536, -49.2736, 0.15 ) }
    dend_63 { pt3dadd( -14.0753, -18.1563, -63.9225, 0.15 ) }
    dend_63 { pt3dadd( -19.8024, -14.5124, -77.2363, 0.15 ) }
    dend_63 { pt3dadd( -27.7156, -12.4604, -89.7219, 0.15 ) }
    dend_63 { pt3dadd( -33.7326, -11.7418, -103.355, 0.15 ) }
    dend_63 { pt3dadd( -39.9463, -14.035, -116.757, 0.15 ) }
    dend_63 { pt3dadd( -46.7483, -14.9929, -130.012, 0.15 ) }
    dend_63 { pt3dadd( -53.1331, -17.201, -143.346, 0.15 ) }
    dend_63 { pt3dadd( -60.0309, -19.5073, -156.407, 0.15 ) }
    dend_63 { pt3dadd( -68.716, -19.1365, -168.533, 0.15 ) }
    dend_63 { pt3dadd( -76.1749, -18.6044, -181.444, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 42/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 104.149, -148.634, -23.9796, 0.15 ) }
    dend_61 { pt3dadd( 109.413, -155.266, -26.0581, 0.15 ) }
    dend_61 { pt3dadd( 114.488, -162.381, -26.8358, 0.15 ) }
    dend_61 { pt3dadd( 119.792, -169.372, -26.2979, 0.15 ) }
    dend_61 { pt3dadd( 125.236, -176.199, -25.29, 0.15 ) }
    dend_61 { pt3dadd( 130.64, -183.113, -25.3676, 0.15 ) }
    dend_61 { pt3dadd( 136.774, -189.323, -25.5332, 0.15 ) }
    dend_61 { pt3dadd( 144.189, -193.714, -25.9134, 0.15 ) }
    dend_61 { pt3dadd( 150.338, -199.74, -27.1644, 0.15 ) }
    dend_61 { pt3dadd( 156.483, -205.922, -27.5404, 0.15 ) }
    dend_61 { pt3dadd( 161.996, -212.492, -29.1421, 0.15 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 53/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 104.149, -148.634, -23.9796, 0.59 ) }
    dend_60 { pt3dadd( 112.378, -159.108, -24.0685, 0.15 ) }
    dend_60 { pt3dadd( 118.586, -170.9, -25.0139, 0.15 ) }
    dend_60 { pt3dadd( 122.326, -183.738, -25.8681, 0.15 ) }
    dend_60 { pt3dadd( 125.506, -196.748, -24.3884, 0.15 ) }
    dend_60 { pt3dadd( 129.489, -209.532, -25.0381, 0.15 ) }
    dend_60 { pt3dadd( 133.922, -222.205, -24.9656, 0.15 ) }
    dend_60 { pt3dadd( 139.912, -233.977, -26.7694, 0.15 ) }
    dend_60 { pt3dadd( 145.497, -245.782, -29.3169, 0.15 ) }
    dend_60 { pt3dadd( 152.243, -257.339, -29.164, 0.15 ) }
    dend_60 { pt3dadd( 157.754, -269.566, -28.4996, 0.15 ) }
    dend_60 { pt3dadd( 163.843, -281.478, -28.8661, 0.15 ) }
    // Section: dend_53, id: dend_53, parent: dend_47 (entry count 65/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -17.0975, -34.138, -12.7408, 0.15 ) }
    dend_53 { pt3dadd( -23.9293, -39.8126, -13.1669, 0.15 ) }
    dend_53 { pt3dadd( -29.9447, -46.4068, -13.8356, 0.15 ) }
    dend_53 { pt3dadd( -34.6911, -54.0414, -13.113, 0.15 ) }
    dend_53 { pt3dadd( -39.6472, -61.5372, -13.8729, 0.15 ) }
    dend_53 { pt3dadd( -44.8131, -68.6942, -15.6282, 0.15 ) }
    dend_53 { pt3dadd( -48.2767, -77.0099, -16.8657, 0.15 ) }
    dend_53 { pt3dadd( -52.0405, -85.1097, -18.482, 0.15 ) }
    dend_53 { pt3dadd( -55.292, -93.6037, -18.825, 0.15 ) }
    dend_53 { pt3dadd( -59.0695, -101.823, -18.1734, 0.15 ) }
    dend_53 { pt3dadd( -62.4294, -110.039, -16.3547, 0.15 ) }
    dend_53 { pt3dadd( -64.9275, -118.736, -15.2868, 0.15 ) }
    dend_53 { pt3dadd( -68.1921, -127.219, -15.7516, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 78/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -17.0975, -34.138, -12.7408, 0.59 ) }
    dend_48 { pt3dadd( -20.3227, -40.3713, -18.6014, 0.15 ) }
    dend_48 { pt3dadd( -22.6762, -46.9517, -24.5278, 0.15 ) }
    dend_48 { pt3dadd( -25.7244, -52.9279, -30.7156, 0.15 ) }
    dend_48 { pt3dadd( -27.3092, -59.1158, -37.2459, 0.15 ) }
    dend_48 { pt3dadd( -28.052, -65.4259, -43.8168, 0.15 ) }
    dend_48 { pt3dadd( -29.6259, -72.2019, -49.7973, 0.15 ) }
    dend_48 { pt3dadd( -29.9533, -79.4452, -55.4658, 0.15 ) }
    dend_48 { pt3dadd( -30.3511, -87.1651, -60.5282, 0.15 ) }
    dend_48 { pt3dadd( -29.2991, -94.3461, -66.1745, 0.15 ) }
    dend_48 { pt3dadd( -29.0334, -101.528, -71.9146, 0.15 ) }
    dend_48 { pt3dadd( -28.3348, -108.01, -78.3315, 0.15 ) }
    dend_48 { pt3dadd( -27.0335, -115.106, -84.0228, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 91/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -0.484036, -32.2949, 0.775029, 0.44 ) }
    dend_42 { pt3dadd( -1.67073, -33.9552, 1.486, 0.44 ) }
    dend_42 { pt3dadd( -2.22292, -34.6466, 1.83532, 0.44 ) }
    dend_42 { pt3dadd( -3.00572, -35.5708, 2.46542, 0.44 ) }
    dend_42 { pt3dadd( -3.65868, -36.3706, 3.11914, 0.66 ) }
    dend_42 { pt3dadd( -4.16758, -37.1139, 3.70632, 0.66 ) }
    dend_42 { pt3dadd( -4.45349, -37.6477, 4.08583, 0.44 ) }
    dend_42 { pt3dadd( -4.76333, -38.3662, 4.62133, 0.52 ) }
    dend_42 { pt3dadd( -5.01648, -39.4207, 5.29984, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -5.07899, -40.587, 5.87464, 0.66 ) }
    dend_42 { pt3dadd( -5.02892, -41.9467, 6.44055, 0.88 ) }
    dend_42 { pt3dadd( -4.9337, -43.3464, 6.9413, 1.11 ) }
    dend_42 { pt3dadd( -4.84409, -44.6707, 7.33768, 0.74 ) }
    dend_42 { pt3dadd( -4.78627, -45.6578, 7.52587, 0.29 ) }
    dend_42 { pt3dadd( -4.75526, -46.6711, 7.59817, 0.22 ) }
    dend_42 { pt3dadd( -4.75755, -47.2735, 7.59239, 0.22 ) }
    dend_42 { pt3dadd( -4.81341, -48.0649, 7.5486, 0.22 ) }
    dend_42 { pt3dadd( -4.89251, -48.8106, 7.47916, 0.22 ) }
    dend_42 { pt3dadd( -5.0631, -50.4126, 7.31707, 0.29 ) }
    dend_42 { pt3dadd( -5.15637, -51.6542, 7.21114, 0.52 ) }
    dend_42 { pt3dadd( -5.17899, -52.5327, 7.15611, 0.52 ) }
    dend_42 { pt3dadd( -5.12574, -53.7403, 7.12126, 0.44 ) }
    dend_42 { pt3dadd( -4.93717, -55.531, 7.14383, 0.29 ) }
    dend_42 { pt3dadd( -4.81215, -56.4055, 7.19123, 0.66 ) }
    dend_42 { pt3dadd( -4.71667, -57.0179, 7.27744, 1.77 ) }
    dend_42 { pt3dadd( -4.5486, -58.1255, 7.50487, 1.18 ) }
    dend_42 { pt3dadd( -4.40462, -59.5354, 7.86272, 0.52 ) }
    dend_42 { pt3dadd( -4.33118, -60.8459, 8.24397, 0.52 ) }
    dend_42 { pt3dadd( -4.31045, -61.6927, 8.51834, 0.81 ) }
    dend_42 { pt3dadd( -4.25614, -62.9589, 8.94889, 0.96 ) }
    dend_42 { pt3dadd( -4.18323, -64.0633, 9.35967, 0.52 ) }
    dend_42 { pt3dadd( -4.0741, -65.5563, 9.99025, 0.22 ) }
    dend_42 { pt3dadd( -4.01525, -66.2556, 10.3248, 0.29 ) }
    dend_42 { pt3dadd( -3.92545, -67.1713, 10.8184, 0.29 ) }
    dend_42 { pt3dadd( -3.80653, -68.4746, 11.5381, 0.22 ) }
    dend_42 { pt3dadd( -3.72985, -69.3274, 12.0271, 0.37 ) }
    dend_42 { pt3dadd( -3.66421, -70.2073, 12.5381, 0.74 ) }
    dend_42 { pt3dadd( -3.64049, -71.0515, 13.0151, 1.03 ) }
    dend_42 { pt3dadd( -3.69779, -72.006, 13.4953, 1.25 ) }
    dend_42 { pt3dadd( -3.96736, -73.873, 14.3226, 0.37 ) }
    dend_42 { pt3dadd( -4.17997, -74.9588, 14.7746, 1.18 ) }
    dend_42 { pt3dadd( -4.37089, -75.9623, 15.1613, 2.65 ) }
    dend_42 { pt3dadd( -4.62547, -77.6021, 15.7489, 2.21 ) }
    dend_42 { pt3dadd( -4.80369, -79.1921, 16.3029, 0.96 ) }
    dend_42 { pt3dadd( -4.88308, -80.5067, 16.7531, 0.29 ) }
    dend_42 { pt3dadd( -4.90372, -81.4389, 17.0846, 0.29 ) }
    dend_42 { pt3dadd( -4.92529, -82.3088, 17.3903, 0.66 ) }
    dend_42 { pt3dadd( -4.97893, -83.3472, 17.7942, 0.44 ) }
    dend_42 { pt3dadd( -5.04152, -84.2698, 18.1789, 0.22 ) }
    dend_42 { pt3dadd( -5.07411, -84.7325, 18.3862, 0.22 ) }
    dend_42 { pt3dadd( -5.12377, -85.2957, 18.6193, 0.22 ) }
    dend_42 { pt3dadd( -5.27217, -86.4438, 19.03, 0.29 ) }
    dend_42 { pt3dadd( -5.39074, -87.3118, 19.3117, 0.29 ) }
    dend_42 { pt3dadd( -5.44993, -87.9083, 19.4885, 0.22 ) }
    dend_42 { pt3dadd( -5.49353, -88.5972, 19.6636, 0.22 ) }
    dend_42 { pt3dadd( -5.48866, -89.2029, 19.8165, 0.81 ) }
    dend_42 { pt3dadd( -5.43232, -89.776, 19.9612, 1.55 ) }
    dend_42 { pt3dadd( -5.21876, -91.0156, 20.3034, 1.84 ) }
    dend_42 { pt3dadd( -4.82194, -92.8737, 20.8312, 0.15 ) }
    dend_42 { pt3dadd( -4.70865, -93.4574, 21.0076, 0.15 ) }
    dend_42 { pt3dadd( -4.61687, -93.9447, 21.159, 0.15 ) }
    dend_42 { pt3dadd( -4.52224, -94.534, 21.3399, 0.15 ) }
    dend_42 { pt3dadd( -4.40106, -95.4072, 21.599, 0.88 ) }
    dend_42 { pt3dadd( -4.30588, -96.1329, 21.8041, 1.92 ) }
    dend_42 { pt3dadd( -4.08185, -97.5746, 22.1739, 1.99 ) }
    dend_42 { pt3dadd( -4.01452, -97.9438, 22.2637, 1.99 ) }
    dend_42 { pt3dadd( -3.71939, -99.6502, 22.6253, 0.15 ) }
    dend_42 { pt3dadd( -3.64504, -100.123, 22.7064, 0.15 ) }
    dend_42 { pt3dadd( -3.57634, -100.61, 22.765, 0.37 ) }
    dend_42 { pt3dadd( -3.52331, -101.106, 22.8037, 0.37 ) }
    dend_42 { pt3dadd( -3.42114, -102.28, 22.882, 0.15 ) }
    dend_42 { pt3dadd( -3.38538, -103.009, 22.9375, 0.15 ) }
    dend_42 { pt3dadd( -3.35055, -103.867, 23.0187, 0.22 ) }
    dend_42 { pt3dadd( -3.34686, -104.366, 23.0805, 0.22 ) }
    dend_42 { pt3dadd( -3.39021, -105.268, 23.2026, 0.15 ) }
    dend_42 { pt3dadd( -3.45509, -105.956, 23.3008, 0.15 ) }
    dend_42 { pt3dadd( -3.51974, -106.501, 23.3846, 0.59 ) }
    dend_42 { pt3dadd( -3.56488, -107.079, 23.4908, 1.03 ) }
    dend_42 { pt3dadd( -3.57941, -107.975, 23.6576, 0.22 ) }
    dend_42 { pt3dadd( -3.55042, -108.917, 23.8489, 0.07 ) }
    dend_42 { pt3dadd( -3.51061, -109.521, 23.989, 0.07 ) }
    dend_42 { pt3dadd( -3.47378, -109.902, 24.0919, 0.66 ) }
    dend_42 { pt3dadd( -3.35089, -110.893, 24.425, 0.96 ) }
    dend_42 { pt3dadd( -3.05829, -112.68, 25.1119, 0.22 ) }
    dend_42 { pt3dadd( -2.84833, -113.649, 25.5427, 0.22 ) }
    dend_42 { pt3dadd( -2.68601, -114.273, 25.8761, 0.44 ) }
    dend_42 { pt3dadd( -2.48906, -114.978, 26.2882, 1.25 ) }
    dend_42 { pt3dadd( -2.29491, -115.591, 26.6657, 1.92 ) }
    dend_42 { pt3dadd( -1.98988, -116.363, 27.1843, 1.11 ) }
    dend_42 { pt3dadd( -1.64659, -117.096, 27.7331, 0.22 ) }
    dend_42 { pt3dadd( -1.3683, -117.673, 28.1473, 0.22 ) }
    dend_42 { pt3dadd( -1.06423, -118.354, 28.5934, 0.52 ) }
    dend_42 { pt3dadd( -0.724552, -119.3, 29.1452, 0.22 ) }
    dend_42 { pt3dadd( -0.456534, -120.327, 29.7131, 0.22 ) }
    dend_42 { pt3dadd( -0.305015, -121.155, 30.1661, 0.22 ) }
    dend_42 { pt3dadd( -0.254634, -121.577, 30.3891, 0.81 ) }
    dend_42 { pt3dadd( -0.178086, -122.578, 30.9231, 1.77 ) }
    dend_42 { pt3dadd( -0.107803, -124.478, 31.9732, 0.37 ) }
    dend_42 { pt3dadd( -0.084581, -125.474, 32.5338, 0.15 ) }
    dend_42 { pt3dadd( -0.074194, -125.932, 32.7821, 0.15 ) }
    dend_42 { pt3dadd( -0.049939, -126.502, 33.0808, 0.37 ) }
    dend_42 { pt3dadd( -0.00866313, -127.197, 33.4479, 1.18 ) }
    dend_42 { pt3dadd( 0.0608518, -128.018, 33.8799, 1.55 ) }
    dend_42 { pt3dadd( 0.199748, -129.281, 34.4939, 0.81 ) }
    dend_42 { pt3dadd( 0.287694, -130.169, 34.8677, 0.15 ) }
    dend_42 { pt3dadd( 0.323958, -130.742, 35.0912, 0.22 ) }
    dend_42 { pt3dadd( 0.371309, -131.605, 35.4098, 0.15 ) }
    dend_42 { pt3dadd( 0.40138, -132.4, 35.6849, 0.96 ) }
    dend_42 { pt3dadd( 0.4371, -133.28, 35.9872, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( 0.508962, -134.636, 36.4432, 0.22 ) }
    dend_42 { pt3dadd( 0.56833, -135.273, 36.6612, 0.22 ) }
    dend_42 { pt3dadd( 0.675621, -136.075, 36.9462, 0.37 ) }
    dend_42 { pt3dadd( 0.715755, -136.297, 37.0249, 0.37 ) }
    dend_42 { pt3dadd( 0.888175, -137.106, 37.3187, 0.22 ) }
    dend_42 { pt3dadd( 0.982856, -137.48, 37.4695, 0.22 ) }
    dend_42 { pt3dadd( 1.20746, -138.12, 37.7305, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 7/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -0.484036, -32.2949, 0.775029, 1.84 ) }
    dend_37 { pt3dadd( -0.594037, -33.4732, 0.314806, 1.84 ) }
    dend_37 { pt3dadd( -0.675295, -34.8869, -0.179149, 1.55 ) }
    dend_37 { pt3dadd( -0.718008, -36.4127, -0.650494, 1.55 ) }
    dend_37 { pt3dadd( -0.761085, -38.0068, -1.08719, 1.55 ) }
    dend_37 { pt3dadd( -0.820779, -39.588, -1.46421, 1.47 ) }
    dend_37 { pt3dadd( -0.888373, -40.9722, -1.7647, 0.96 ) }
    dend_37 { pt3dadd( -0.957136, -42.075, -1.95816, 1.55 ) }
    dend_37 { pt3dadd( -1.13177, -44.0504, -2.20865, 1.25 ) }
    dend_37 { pt3dadd( -1.34755, -46.0895, -2.41365, 1.47 ) }
    dend_37 { pt3dadd( -1.60832, -48.1897, -2.58252, 1.03 ) }
    dend_37 { pt3dadd( -1.82437, -49.6076, -2.68501, 1.18 ) }
    dend_37 { pt3dadd( -2.18715, -51.6063, -2.80676, 1.99 ) }
    dend_37 { pt3dadd( -2.56215, -53.3008, -2.90022, 1.92 ) }
    // Section: dend_20, id: dend_20, parent: dend_10 (entry count 21/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.70718, 28.887, -0.220925, 2.14 ) }
    dend_20 { pt3dadd( 6.92709, 30.5036, 0.0695568, 2.14 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.70718, 28.887, -0.220925, 1.47 ) }
    dend_11 { pt3dadd( 5.8987, 30.6273, 1.55935, 1.47 ) }
    dend_11 { pt3dadd( 5.91499, 31.6686, 2.69414, 1.18 ) }
    dend_11 { pt3dadd( 5.80263, 32.6174, 3.85559, 1.18 ) }
    dend_11 { pt3dadd( 5.5347, 33.5822, 5.23, 1.47 ) }
    dend_11 { pt3dadd( 5.1712, 34.2732, 6.42389, 1.47 ) }
    dend_11 { pt3dadd( 4.90748, 34.5229, 7.0237, 1.47 ) }
    dend_11 { pt3dadd( 4.06443, 34.6331, 8.17146, 1.47 ) }
    dend_11 { pt3dadd( 2.77809, 34.3102, 9.35036, 1.03 ) }
    dend_11 { pt3dadd( 1.94707, 33.9263, 9.91778, 1.62 ) }
    dend_11 { pt3dadd( 1.1555, 33.4479, 10.3609, 1.77 ) }
    dend_11 { pt3dadd( 0.128102, 32.6797, 10.8763, 1.77 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 35/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 34.6063, -2.67414, -23.5307, 0.15 ) }
    dend_7 { pt3dadd( 41.786, -8.40278, -26.9089, 0.15 ) }
    dend_7 { pt3dadd( 49.2812, -13.4497, -30.5723, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 34.6063, -2.67414, -23.5307, 0.59 ) }
    dend_2 { pt3dadd( 41.2861, -8.9112, -28.4516, 0.15 ) }
    dend_2 { pt3dadd( 46.8746, -16.4397, -33.0823, 0.15 ) }
    dend_2 { pt3dadd( 50.7391, -25.1255, -37.6208, 0.15 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 42/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -20.3946, -19.0895, -50.8663, 0.15 ) }
    dend_68 { pt3dadd( -24.693, -14.4475, -56.9828, 0.15 ) }
    dend_68 { pt3dadd( -26.7943, -9.58689, -64.068, 0.15 ) }
    dend_68 { pt3dadd( -27.172, -3.87593, -70.9113, 0.15 ) }
    dend_68 { pt3dadd( -28.9861, 1.69639, -77.5778, 0.15 ) }
    dend_68 { pt3dadd( -31.5684, 6.62637, -84.4425, 0.15 ) }
    dend_68 { pt3dadd( -33.8363, 11.0794, -91.7223, 0.15 ) }
    dend_68 { pt3dadd( -34.8368, 15.9233, -99.0856, 0.15 ) }
    dend_68 { pt3dadd( -35.7528, 21.5677, -105.909, 0.15 ) }
    dend_68 { pt3dadd( -35.9993, 25.774, -113.71, 0.15 ) }
    dend_68 { pt3dadd( -37.7924, 29.7506, -121.382, 0.15 ) }
    dend_68 { pt3dadd( -40.7197, 35.1848, -127.717, 0.15 ) }
    dend_68 { pt3dadd( -43.7685, 40.1657, -134.339, 0.15 ) }
    dend_68 { pt3dadd( -45.9721, 46.2641, -140.413, 0.15 ) }
    dend_68 { pt3dadd( -49.3758, 52.2349, -145.988, 0.15 ) }
    dend_68 { pt3dadd( -53.927, 58.4551, -150.298, 0.15 ) }
    dend_68 { pt3dadd( -58.0167, 65.7884, -153.165, 0.15 ) }
    dend_68 { pt3dadd( -61.9362, 72.7785, -156.961, 0.15 ) }
    dend_68 { pt3dadd( -66.9297, 79.6465, -159.401, 0.15 ) }
    dend_68 { pt3dadd( -71.7584, 86.6456, -161.827, 0.15 ) }
    dend_68 { pt3dadd( -75.6348, 93.5516, -165.813, 0.15 ) }
    dend_68 { pt3dadd( -78.8477, 100.9, -169.673, 0.15 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 64/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -20.3946, -19.0895, -50.8663, 0.59 ) }
    dend_67 { pt3dadd( -23.0642, -23.1153, -60.573, 0.15 ) }
    dend_67 { pt3dadd( -26.3043, -25.7396, -70.5469, 0.15 ) }
    dend_67 { pt3dadd( -29.1441, -29.6248, -80.2604, 0.15 ) }
    dend_67 { pt3dadd( -31.5759, -33.647, -90.0268, 0.15 ) }
    dend_67 { pt3dadd( -32.9982, -37.1575, -100.153, 0.15 ) }
    dend_67 { pt3dadd( -35.3925, -41.2891, -109.886, 0.15 ) }
    dend_67 { pt3dadd( -36.6154, -45.7644, -119.678, 0.15 ) }
    dend_67 { pt3dadd( -38.5004, -49.56, -129.638, 0.15 ) }
    dend_67 { pt3dadd( -39.8992, -56.0707, -138.291, 0.15 ) }
    dend_67 { pt3dadd( -40.3584, -63.4268, -146.376, 0.15 ) }
    dend_67 { pt3dadd( -40.8183, -70.9939, -154.278, 0.15 ) }
    dend_67 { pt3dadd( -42.6527, -78.2212, -162.318, 0.15 ) }
    dend_67 { pt3dadd( -43.6114, -86.857, -169.107, 0.15 ) }
    dend_67 { pt3dadd( -46.5987, -95.8218, -174.953, 0.15 ) }
    dend_67 { pt3dadd( -50.8798, -103.815, -181.327, 0.15 ) }
    dend_67 { pt3dadd( -54.6793, -111.501, -188.293, 0.15 ) }
    dend_67 { pt3dadd( -56.4941, -118.949, -196.15, 0.15 ) }
    dend_67 { pt3dadd( -58.322, -126.394, -204.007, 0.15 ) }
    dend_67 { pt3dadd( -59.8341, -135.941, -209.479, 0.15 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 84/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -76.1749, -18.6044, -181.444, 0.15 ) }
    dend_65 { pt3dadd( -81.901, -18.8647, -191.911, 0.15 ) }
    dend_65 { pt3dadd( -88.6802, -18.9018, -201.73, 0.15 ) }
    dend_65 { pt3dadd( -96.5576, -18.137, -210.66, 0.15 ) }
    dend_65 { pt3dadd( -102.448, -16.0066, -220.827, 0.15 ) }
    dend_65 { pt3dadd( -108.592, -12.3454, -230.426, 0.15 ) }
    dend_65 { pt3dadd( -116.548, -10.9984, -239.221, 0.15 ) }
    dend_65 { pt3dadd( -124.991, -10.507, -247.637, 0.15 ) }
    dend_65 { pt3dadd( -132.49, -11.8139, -256.839, 0.15 ) }
    dend_65 { pt3dadd( -140.167, -15.4111, -265.318, 0.15 ) }
    dend_65 { pt3dadd( -147.663, -19.3728, -273.812, 0.15 ) }
    dend_65 { pt3dadd( -155.183, -25.8568, -280.732, 0.15 ) }
    dend_65 { pt3dadd( -161.795, -32.3411, -288.532, 0.15 ) }
    dend_65 { pt3dadd( -168.025, -39.0113, -296.506, 0.15 ) }
    dend_65 { pt3dadd( -174.663, -47.0419, -302.833, 0.15 ) }
    dend_65 { pt3dadd( -181.269, -56.3788, -307.265, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_65 { pt3dadd( -187.98, -65.043, -312.681, 0.15 ) }
    dend_65 { pt3dadd( -193.302, -75.4017, -316.776, 0.15 ) }
    dend_65 { pt3dadd( -196.892, -85.7797, -322.454, 0.15 ) }
    dend_65 { pt3dadd( -199.224, -97.4887, -326.036, 0.15 ) }
    dend_65 { pt3dadd( -203.747, -108.292, -330.057, 0.15 ) }
    dend_65 { pt3dadd( -209.461, -118.939, -332.641, 0.15 ) }
    dend_65 { pt3dadd( -213.931, -129.819, -336.528, 0.15 ) }
    dend_65 { pt3dadd( -219.81, -139.513, -341.288, 0.15 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 8/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -76.1749, -18.6044, -181.444, 0.59 ) }
    dend_64 { pt3dadd( -78.4048, -17.9914, -190.34, 0.15 ) }
    dend_64 { pt3dadd( -80.2291, -17.7211, -199.346, 0.15 ) }
    dend_64 { pt3dadd( -83.0054, -18.184, -208.103, 0.15 ) }
    dend_64 { pt3dadd( -85.1581, -20.0092, -216.881, 0.15 ) }
    dend_64 { pt3dadd( -86.5779, -20.9195, -225.928, 0.15 ) }
    dend_64 { pt3dadd( -86.4203, -22.9632, -234.925, 0.15 ) }
    dend_64 { pt3dadd( -87.1616, -23.199, -244.088, 0.15 ) }
    dend_64 { pt3dadd( -88.449, -23.0944, -253.191, 0.15 ) }
    dend_64 { pt3dadd( -89.9405, -23.475, -262.258, 0.15 ) }
    dend_64 { pt3dadd( -90.0398, -25.1634, -271.321, 0.15 ) }
    dend_64 { pt3dadd( -90.7514, -28.7076, -279.864, 0.15 ) }
    dend_64 { pt3dadd( -90.7659, -31.1693, -288.769, 0.15 ) }
    dend_64 { pt3dadd( -89.9947, -33.1724, -297.743, 0.15 ) }
    dend_64 { pt3dadd( -89.2549, -35.054, -306.742, 0.15 ) }
    dend_64 { pt3dadd( -87.6156, -36.2937, -315.72, 0.15 ) }
    dend_64 { pt3dadd( -87.2234, -36.6027, -324.903, 0.15 ) }
    dend_64 { pt3dadd( -87.8381, -36.2512, -334.069, 0.15 ) }
    dend_64 { pt3dadd( -87.0035, -37.378, -343.169, 0.15 ) }
    dend_64 { pt3dadd( -87.341, -39.4452, -352.156, 0.15 ) }
    dend_64 { pt3dadd( -88.9694, -41.7486, -360.948, 0.15 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 29/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -68.1921, -127.219, -15.7516, 0.15 ) }
    dend_57 { pt3dadd( -71.8786, -134.05, -15.991, 0.15 ) }
    dend_57 { pt3dadd( -74.704, -141.316, -15.7577, 0.15 ) }
    dend_57 { pt3dadd( -76.9739, -148.802, -15.9983, 0.15 ) }
    dend_57 { pt3dadd( -79.4279, -156.118, -14.8993, 0.15 ) }
    dend_57 { pt3dadd( -81.6199, -163.482, -13.5808, 0.15 ) }
    dend_57 { pt3dadd( -82.5079, -171.219, -12.6811, 0.15 ) }
    dend_57 { pt3dadd( -83.5126, -178.991, -13.3181, 0.15 ) }
    dend_57 { pt3dadd( -85.0937, -186.444, -15.2046, 0.15 ) }
    dend_57 { pt3dadd( -87.2741, -193.34, -18.1577, 0.15 ) }
    dend_57 { pt3dadd( -89.1056, -199.46, -22.581, 0.15 ) }
    dend_57 { pt3dadd( -91.4375, -204.84, -27.6011, 0.15 ) }
    dend_57 { pt3dadd( -93.9849, -210.106, -32.6243, 0.15 ) }
    dend_57 { pt3dadd( -97.3848, -214.746, -37.6927, 0.15 ) }
    dend_57 { pt3dadd( -100.563, -217.917, -43.8204, 0.15 ) }
    dend_57 { pt3dadd( -103.687, -221.006, -50.0134, 0.15 ) }
    dend_57 { pt3dadd( -105.392, -224.654, -56.4909, 0.15 ) }
    dend_57 { pt3dadd( -106.19, -228.931, -62.8018, 0.15 ) }
    dend_57 { pt3dadd( -106.967, -233.085, -69.1881, 0.15 ) }
    dend_57 { pt3dadd( -108.907, -237.135, -75.3769, 0.15 ) }
    dend_57 { pt3dadd( -111.306, -240.572, -81.7325, 0.15 ) }
    dend_57 { pt3dadd( -114.87, -243.781, -87.623, 0.15 ) }
    dend_57 { pt3dadd( -118.656, -246.871, -93.4282, 0.15 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -68.1921, -127.219, -15.7516, 0.59 ) }
    dend_54 { pt3dadd( -73.2281, -136.619, -15.9995, 0.15 ) }
    dend_54 { pt3dadd( -78.1551, -146.041, -16.9946, 0.15 ) }
    dend_54 { pt3dadd( -84.2486, -154.636, -15.9336, 0.15 ) }
    dend_54 { pt3dadd( -90.0176, -163.459, -14.7647, 0.15 ) }
    dend_54 { pt3dadd( -96.4481, -171.668, -13.1213, 0.15 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 58/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -27.0335, -115.106, -84.0228, 0.15 ) }
    dend_50 { pt3dadd( -27.2316, -126.694, -92.4757, 0.15 ) }
    dend_50 { pt3dadd( -29.6373, -138.735, -99.9843, 0.15 ) }
    dend_50 { pt3dadd( -30.6327, -150.062, -108.705, 0.15 ) }
    dend_50 { pt3dadd( -33.7035, -162.566, -115.233, 0.15 ) }
    dend_50 { pt3dadd( -38.1236, -175.616, -119.741, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 64/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -27.0335, -115.106, -84.0228, 0.59 ) }
    dend_49 { pt3dadd( -29.3891, -122.387, -92.0407, 0.15 ) }
    dend_49 { pt3dadd( -31.6113, -129.824, -99.9665, 0.15 ) }
    dend_49 { pt3dadd( -33.5364, -139.22, -105.809, 0.15 ) }
    dend_49 { pt3dadd( -34.9959, -149.715, -109.804, 0.15 ) }
    dend_49 { pt3dadd( -34.6357, -160.75, -112.554, 0.15 ) }
    dend_49 { pt3dadd( -33.48, -171.9, -114.581, 0.15 ) }
    dend_49 { pt3dadd( -31.002, -182.853, -116.411, 0.15 ) }
    dend_49 { pt3dadd( -30.2265, -194.232, -116.881, 0.15 ) }
    dend_49 { pt3dadd( -27.5999, -205.23, -118.192, 0.15 ) }
    dend_49 { pt3dadd( -26.4238, -216.213, -120.91, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 75/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.20746, -138.12, 37.7305, 0.22 ) }
    dend_46 { pt3dadd( 0.872314, -138.868, 37.5925, 0.22 ) }
    dend_46 { pt3dadd( 0.424079, -139.869, 37.408, 0.22 ) }
    dend_46 { pt3dadd( 0.0348209, -140.738, 37.2477, 0.22 ) }
    dend_46 { pt3dadd( -0.659544, -142.289, 36.9619, 0.22 ) }
    dend_46 { pt3dadd( -0.972876, -142.989, 36.8329, 0.15 ) }
    dend_46 { pt3dadd( -1.28535, -143.686, 36.7043, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 82/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.20746, -138.12, 37.7305, 1.18 ) }
    dend_43 { pt3dadd( 1.2947, -139.208, 38.3147, 1.18 ) }
    dend_43 { pt3dadd( 1.39314, -140.467, 38.9384, 0.29 ) }
    dend_43 { pt3dadd( 1.46424, -141.626, 39.4942, 0.15 ) }
    dend_43 { pt3dadd( 1.49405, -142.286, 39.7991, 0.15 ) }
    dend_43 { pt3dadd( 1.51427, -142.937, 40.0862, 0.29 ) }
    dend_43 { pt3dadd( 1.51048, -143.862, 40.4805, 0.66 ) }
    dend_43 { pt3dadd( 1.4604, -144.822, 40.8657, 1.4 ) }
    dend_43 { pt3dadd( 1.28012, -146.247, 41.3634, 0.22 ) }
    dend_43 { pt3dadd( 1.10648, -147.238, 41.6725, 0.22 ) }
    dend_43 { pt3dadd( 1.01934, -147.671, 41.7961, 0.22 ) }
    dend_43 { pt3dadd( 0.832418, -148.595, 42.0264, 0.22 ) }
    dend_43 { pt3dadd( 0.66739, -149.393, 42.201, 0.66 ) }
    dend_43 { pt3dadd( 0.446294, -150.39, 42.3855, 0.15 ) }
    dend_43 { pt3dadd( 0.22604, -151.234, 42.5136, 0.15 ) }
    dend_43 { pt3dadd( -0.071256, -152.264, 42.6545, 0.52 ) }
    dend_43 { pt3dadd( -0.450811, -153.539, 42.8355, 0.29 ) }
    dend_43 { pt3dadd( -0.60166, -154.046, 42.9106, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( -0.75921, -154.559, 42.9962, 0.15 ) }
    dend_43 { pt3dadd( -1.05618, -155.499, 43.1397, 0.15 ) }
    dend_43 { pt3dadd( -1.26682, -156.134, 43.2241, 0.29 ) }
    dend_43 { pt3dadd( -1.55459, -157.003, 43.3519, 1.11 ) }
    dend_43 { pt3dadd( -1.82997, -157.886, 43.5025, 1.77 ) }
    dend_43 { pt3dadd( -2.15743, -159.114, 43.7415, 1.77 ) }
    dend_43 { pt3dadd( -2.45222, -160.398, 44.0231, 1.33 ) }
    dend_43 { pt3dadd( -2.81707, -162.184, 44.4321, 0.15 ) }
    dend_43 { pt3dadd( -3.04812, -163.372, 44.7255, 0.22 ) }
    dend_43 { pt3dadd( -3.21218, -164.227, 44.9475, 0.66 ) }
    dend_43 { pt3dadd( -3.36907, -165.05, 45.1714, 0.81 ) }
    dend_43 { pt3dadd( -3.6386, -166.58, 45.6149, 0.15 ) }
    dend_43 { pt3dadd( -3.75052, -167.479, 45.9088, 0.22 ) }
    dend_43 { pt3dadd( -3.78869, -168.237, 46.1907, 0.22 ) }
    dend_43 { pt3dadd( -3.79801, -169.209, 46.5584, 0.22 ) }
    dend_43 { pt3dadd( -3.78808, -169.778, 46.7724, 0.66 ) }
    dend_43 { pt3dadd( -3.71082, -170.893, 47.2088, 1.4 ) }
    dend_43 { pt3dadd( -3.5035, -172.46, 47.8972, 0.88 ) }
    dend_43 { pt3dadd( -3.35328, -173.437, 48.3472, 0.15 ) }
    dend_43 { pt3dadd( -3.19762, -174.374, 48.7784, 0.15 ) }
    dend_43 { pt3dadd( -3.07453, -175.054, 49.0916, 0.22 ) }
    dend_43 { pt3dadd( -2.89187, -176.119, 49.5867, 0.29 ) }
    dend_43 { pt3dadd( -2.77675, -176.953, 49.9541, 0.15 ) }
    dend_43 { pt3dadd( -2.70677, -178.104, 50.3861, 0.15 ) }
    dend_43 { pt3dadd( -2.71613, -178.504, 50.5157, 0.15 ) }
    dend_43 { pt3dadd( -2.7904, -179.345, 50.7797, 0.22 ) }
    dend_43 { pt3dadd( -2.97165, -180.569, 51.1424, 0.22 ) }
    dend_43 { pt3dadd( -3.07141, -181.099, 51.2911, 0.22 ) }
    dend_43 { pt3dadd( -3.27949, -182.213, 51.5962, 0.37 ) }
    dend_43 { pt3dadd( -3.46955, -183.35, 51.9318, 0.22 ) }
    dend_43 { pt3dadd( -3.5779, -184.114, 52.1578, 0.88 ) }
    dend_43 { pt3dadd( -3.75262, -185.821, 52.6656, 2.06 ) }
    dend_43 { pt3dadd( -3.84174, -187.814, 53.2041, 0.59 ) }
    dend_43 { pt3dadd( -3.8113, -189.166, 53.5239, 0.22 ) }
    dend_43 { pt3dadd( -3.72471, -190.059, 53.697, 0.22 ) }
    dend_43 { pt3dadd( -3.62163, -190.85, 53.8284, 0.22 ) }
    dend_43 { pt3dadd( -3.45166, -191.938, 53.9705, 0.59 ) }
    dend_43 { pt3dadd( -3.13321, -193.481, 54.0967, 0.07 ) }
    dend_43 { pt3dadd( -2.86687, -194.417, 54.0904, 0.15 ) }
    dend_43 { pt3dadd( -2.4964, -195.526, 53.9998, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.56215, -53.3008, -2.90022, 0.74 ) }
    dend_39 { pt3dadd( -2.65689, -55.1884, -3.22148, 0.74 ) }
    dend_39 { pt3dadd( -2.74056, -56.8696, -3.53446, 0.74 ) }
    dend_39 { pt3dadd( -2.81192, -57.82, -3.71953, 0.81 ) }
    dend_39 { pt3dadd( -2.98417, -59.3865, -4.05112, 0.88 ) }
    dend_39 { pt3dadd( -3.11528, -60.3926, -4.27155, 0.81 ) }
    dend_39 { pt3dadd( -3.31533, -61.6912, -4.57048, 1.18 ) }
    dend_39 { pt3dadd( -3.49067, -62.6562, -4.82111, 1.18 ) }
    dend_39 { pt3dadd( -3.7762, -63.8367, -5.14874, 1.03 ) }
    dend_39 { pt3dadd( -4.12797, -65.0886, -5.52412, 1.11 ) }
    dend_39 { pt3dadd( -4.44999, -66.0662, -5.83229, 0.74 ) }
    dend_39 { pt3dadd( -4.87444, -67.1643, -6.18026, 1.11 ) }
    dend_39 { pt3dadd( -5.26525, -68.0976, -6.46652, 0.81 ) }
    dend_39 { pt3dadd( -5.73337, -69.1977, -6.78284, 0.81 ) }
    dend_39 { pt3dadd( -5.88035, -69.5995, -6.88163, 0.81 ) }
    dend_39 { pt3dadd( -6.12258, -70.4487, -7.04786, 0.88 ) }
    dend_39 { pt3dadd( -6.32355, -71.3902, -7.1715, 0.88 ) }
    dend_39 { pt3dadd( -6.5658, -72.9461, -7.28235, 1.11 ) }
    dend_39 { pt3dadd( -6.66253, -73.6881, -7.28909, 1.33 ) }
    dend_39 { pt3dadd( -6.90501, -75.4806, -7.17271, 0.74 ) }
    dend_39 { pt3dadd( -7.03001, -76.5441, -7.07834, 0.74 ) }
    dend_39 { pt3dadd( -7.15864, -78.1087, -6.89793, 0.88 ) }
    dend_39 { pt3dadd( -7.21214, -79.0295, -6.75706, 1.25 ) }
    dend_39 { pt3dadd( -7.2786, -79.9784, -6.57398, 1.03 ) }
    dend_39 { pt3dadd( -7.45598, -81.2428, -6.26477, 0.74 ) }
    dend_39 { pt3dadd( -7.83057, -91.3537, -6.37766, 0.74 ) }
    dend_39 { pt3dadd( -9.22489, -101.317, -5.40581, 0.74 ) }
    dend_39 { pt3dadd( -10.3792, -111.25, -3.95933, 0.74 ) }
    dend_39 { pt3dadd( -11.5774, -120.712, -0.7481, 0.74 ) }
    dend_39 { pt3dadd( -11.8955, -130.255, 2.44896, 0.74 ) }
    dend_39 { pt3dadd( -12.9654, -139.469, 6.29521, 0.74 ) }
    dend_39 { pt3dadd( -15.388, -148.951, 8.64977, 0.74 ) }
    dend_39 { pt3dadd( -15.8655, -158.799, 10.8226, 0.74 ) }
    dend_39 { pt3dadd( -15.8959, -168.573, 13.3259, 0.74 ) }
    dend_39 { pt3dadd( -15.9624, -178.402, 15.6192, 0.74 ) }
    dend_39 { pt3dadd( -15.9188, -188.259, 17.8029, 0.74 ) }
    dend_39 { pt3dadd( -16.6042, -197.789, 20.9793, 0.74 ) }
    dend_39 { pt3dadd( -19.284, -206.641, 24.8174, 0.74 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 78/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -2.56215, -53.3008, -2.90022, 1.03 ) }
    dend_38 { pt3dadd( -2.84593, -54.3172, -2.41608, 1.03 ) }
    dend_38 { pt3dadd( -3.23895, -55.8242, -1.77315, 1.03 ) }
    dend_38 { pt3dadd( -3.49982, -56.9921, -1.37454, 1.03 ) }
    dend_38 { pt3dadd( -3.809, -58.7243, -0.866878, 1.03 ) }
    dend_38 { pt3dadd( -3.99305, -60.191, -0.484943, 0.96 ) }
    dend_38 { pt3dadd( -4.07655, -61.232, -0.21684, 0.96 ) }
    dend_38 { pt3dadd( -4.08984, -62.1094, -0.00874043, 0.96 ) }
    dend_38 { pt3dadd( -3.94018, -64.5042, 0.545404, 0.88 ) }
    dend_38 { pt3dadd( -3.72562, -65.9259, 0.903584, 0.88 ) }
    dend_38 { pt3dadd( -3.26687, -67.7755, 1.47578, 0.88 ) }
    dend_38 { pt3dadd( -2.63415, -69.6063, 2.18357, 0.81 ) }
    dend_38 { pt3dadd( -2.09314, -70.8444, 2.77762, 0.81 ) }
    dend_38 { pt3dadd( -1.65514, -71.6838, 3.2767, 0.81 ) }
    dend_38 { pt3dadd( -0.986106, -72.7629, 4.05561, 0.88 ) }
    dend_38 { pt3dadd( -0.315238, -73.8731, 4.90398, 1.03 ) }
    dend_38 { pt3dadd( 0.0959892, -74.6926, 5.50229, 1.03 ) }
    dend_38 { pt3dadd( 0.547826, -75.9447, 6.28524, 0.81 ) }
    dend_38 { pt3dadd( 0.808011, -77.1113, 6.87481, 1.4 ) }
    dend_38 { pt3dadd( 0.901796, -77.8391, 7.17626, 1.92 ) }
    dend_38 { pt3dadd( 1.04193, -79.7803, 7.78613, 1.4 ) }
    dend_38 { pt3dadd( 1.18953, -82.0713, 8.315, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( 1.30656, -83.6832, 8.595, 0.88 ) }
    dend_38 { pt3dadd( 1.45828, -85.3666, 8.81257, 1.03 ) }
    dend_38 { pt3dadd( 1.57312, -86.306, 8.9114, 1.03 ) }
    dend_38 { pt3dadd( 1.81627, -87.8387, 9.04886, 0.81 ) }
    dend_38 { pt3dadd( 2.11309, -89.2553, 9.1368, 1.18 ) }
    dend_38 { pt3dadd( 2.20419, -89.6836, 9.14722, 1.18 ) }
    dend_38 { pt3dadd( 2.32501, -90.5202, 9.13696, 0.74 ) }
    dend_38 { pt3dadd( 2.31391, -91.6022, 9.08239, 0.44 ) }
    dend_38 { pt3dadd( 2.2094, -92.2422, 9.03175, 0.44 ) }
    dend_38 { pt3dadd( 1.93906, -93.1776, 8.94114, 0.66 ) }
    dend_38 { pt3dadd( 1.51165, -94.4167, 8.80245, 0.81 ) }
    dend_38 { pt3dadd( 1.1188, -95.5379, 8.67292, 0.96 ) }
    dend_38 { pt3dadd( 0.516052, -97.2924, 8.47168, 1.33 ) }
    dend_38 { pt3dadd( 0.134113, -98.4527, 8.34298, 0.88 ) }
    dend_38 { pt3dadd( -0.218941, -99.593, 8.2414, 1.11 ) }
    dend_38 { pt3dadd( -0.615014, -100.929, 8.17135, 1.18 ) }
    dend_38 { pt3dadd( -0.986916, -102.198, 8.14131, 1.18 ) }
    dend_38 { pt3dadd( -1.51632, -103.968, 8.13277, 0.52 ) }
    dend_38 { pt3dadd( -2.07028, -105.802, 8.18288, 0.52 ) }
    dend_38 { pt3dadd( -2.48758, -107.171, 8.24174, 0.74 ) }
    dend_38 { pt3dadd( -2.87431, -108.444, 8.31357, 0.96 ) }
    dend_38 { pt3dadd( -3.21775, -109.637, 8.37811, 1.62 ) }
    dend_38 { pt3dadd( -3.53329, -110.829, 8.42947, 1.62 ) }
    dend_38 { pt3dadd( -3.8786, -112.322, 8.46908, 1.33 ) }
    dend_38 { pt3dadd( -4.10623, -113.551, 8.47543, 0.44 ) }
    dend_38 { pt3dadd( -4.23572, -114.281, 8.44134, 0.59 ) }
    dend_38 { pt3dadd( -4.52812, -115.647, 8.32015, 0.59 ) }
    dend_38 { pt3dadd( -4.92532, -117.11, 8.15015, 0.88 ) }
    dend_38 { pt3dadd( -5.30544, -118.233, 7.98736, 1.25 ) }
    dend_38 { pt3dadd( -5.58435, -118.914, 7.87799, 2.21 ) }
    dend_38 { pt3dadd( -6.31815, -120.498, 7.64117, 1.84 ) }
    dend_38 { pt3dadd( -7.2116, -122.281, 7.40492, 1.33 ) }
    dend_38 { pt3dadd( -8.07506, -123.911, 7.24951, 0.66 ) }
    dend_38 { pt3dadd( -8.513, -124.767, 7.19619, 0.44 ) }
    dend_38 { pt3dadd( -8.95785, -125.69, 7.16101, 0.44 ) }
    dend_38 { pt3dadd( -9.39432, -126.678, 7.14469, 0.81 ) }
    dend_38 { pt3dadd( -9.84986, -127.942, 7.15509, 1.11 ) }
    dend_38 { pt3dadd( -10.2432, -129.357, 7.1792, 0.74 ) }
    dend_38 { pt3dadd( -10.6012, -130.891, 7.20826, 0.37 ) }
    dend_38 { pt3dadd( -10.8536, -132.076, 7.21122, 0.37 ) }
    dend_38 { pt3dadd( -11.0184, -132.824, 7.20237, 0.74 ) }
    dend_38 { pt3dadd( -11.2947, -133.955, 7.17771, 0.88 ) }
    dend_38 { pt3dadd( -11.7525, -135.607, 7.1462, 0.44 ) }
    dend_38 { pt3dadd( -12.0174, -136.37, 7.14239, 0.44 ) }
    dend_38 { pt3dadd( -12.3546, -137.096, 7.1746, 0.59 ) }
    dend_38 { pt3dadd( -12.8338, -137.889, 7.24066, 0.96 ) }
    dend_38 { pt3dadd( -13.3008, -138.529, 7.32154, 1.25 ) }
    dend_38 { pt3dadd( -13.85, -139.191, 7.44821, 1.25 ) }
    dend_38 { pt3dadd( -14.5211, -139.981, 7.65164, 0.81 ) }
    dend_38 { pt3dadd( -14.9735, -140.615, 7.8432, 1.11 ) }
    dend_38 { pt3dadd( -15.5002, -141.727, 8.15738, 0.22 ) }
    dend_38 { pt3dadd( -15.6351, -142.246, 8.26485, 0.22 ) }
    dend_38 { pt3dadd( -15.7721, -143.074, 8.40434, 0.22 ) }
    dend_38 { pt3dadd( -15.8737, -143.823, 8.49495, 0.74 ) }
    dend_38 { pt3dadd( -15.9781, -144.577, 8.56286, 1.18 ) }
    dend_38 { pt3dadd( -16.2632, -146.294, 8.69097, 0.66 ) }
    dend_38 { pt3dadd( -16.5841, -147.773, 8.79678, 0.37 ) }
    dend_38 { pt3dadd( -17.0156, -149.063, 8.85837, 0.66 ) }
    dend_38 { pt3dadd( -17.4793, -150.134, 8.91973, 0.66 ) }
    dend_38 { pt3dadd( -17.8836, -150.947, 8.99623, 1.25 ) }
    dend_38 { pt3dadd( -18.3008, -151.712, 9.11637, 2.06 ) }
    dend_38 { pt3dadd( -18.9385, -152.835, 9.38097, 2.21 ) }
    dend_38 { pt3dadd( -20.0927, -154.934, 9.98565, 1.03 ) }
    dend_38 { pt3dadd( -20.7031, -156.139, 10.3523, 0.59 ) }
    dend_38 { pt3dadd( -21.2502, -157.4, 10.7093, 0.37 ) }
    dend_38 { pt3dadd( -21.6009, -158.339, 10.9665, 0.66 ) }
    dend_38 { pt3dadd( -21.9597, -159.481, 11.2764, 0.37 ) }
    dend_38 { pt3dadd( -22.2753, -160.722, 11.637, 0.29 ) }
    dend_38 { pt3dadd( -22.4282, -161.533, 11.8784, 0.52 ) }
    dend_38 { pt3dadd( -22.7016, -162.942, 12.2782, 0.22 ) }
    dend_38 { pt3dadd( -22.8633, -163.658, 12.548, 0.22 ) }
    dend_38 { pt3dadd( -23.0631, -164.433, 12.9607, 0.29 ) }
    dend_38 { pt3dadd( -23.2791, -165.136, 13.4918, 0.96 ) }
    dend_38 { pt3dadd( -23.52, -165.81, 14.1005, 1.77 ) }
    dend_38 { pt3dadd( -23.7573, -166.476, 14.7007, 1.77 ) }
    dend_38 { pt3dadd( -24.2413, -168.031, 15.9533, 0.29 ) }
    dend_38 { pt3dadd( -24.3932, -168.72, 16.3824, 0.29 ) }
    dend_38 { pt3dadd( -24.4886, -169.334, 16.6522, 0.29 ) }
    dend_38 { pt3dadd( -24.5804, -170.281, 16.9174, 0.29 ) }
    dend_38 { pt3dadd( -24.6752, -171.536, 17.1023, 0.29 ) }
    dend_38 { pt3dadd( -24.7983, -173.01, 17.1438, 0.29 ) }
    dend_38 { pt3dadd( -24.886, -173.738, 17.0997, 0.29 ) }
    dend_38 { pt3dadd( -25.0891, -174.813, 16.9866, 0.29 ) }
    dend_38 { pt3dadd( -25.4321, -176.066, 16.8378, 0.29 ) }
    dend_38 { pt3dadd( -25.8928, -177.363, 16.7092, 0.29 ) }
    dend_38 { pt3dadd( -26.2245, -178.172, 16.6445, 1.03 ) }
    dend_38 { pt3dadd( -26.6523, -179.112, 16.5836, 1.92 ) }
    dend_38 { pt3dadd( -27.3946, -180.692, 16.5046, 3.02 ) }
    dend_38 { pt3dadd( -28.2377, -182.462, 16.4548, 2.36 ) }
    dend_38 { pt3dadd( -29.2129, -184.498, 16.4427, 0.22 ) }
    dend_38 { pt3dadd( -29.565, -185.252, 16.4635, 0.22 ) }
    dend_38 { pt3dadd( -30.0149, -186.274, 16.5305, 0.22 ) }
    dend_38 { pt3dadd( -30.2004, -186.73, 16.5744, 0.52 ) }
    dend_38 { pt3dadd( -30.4811, -187.477, 16.6814, 0.96 ) }
    dend_38 { pt3dadd( -30.8721, -188.579, 16.8555, 0.44 ) }
    dend_38 { pt3dadd( -31.3426, -189.955, 17.0645, 0.22 ) }
    dend_38 { pt3dadd( -31.6329, -190.841, 17.1899, 0.37 ) }
    dend_38 { pt3dadd( -31.9576, -191.883, 17.3254, 0.81 ) }
    dend_38 { pt3dadd( -32.2491, -192.794, 17.4269, 0.96 ) }
    dend_38 { pt3dadd( -32.6592, -194.031, 17.5155, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( -33.0415, -195.216, 17.5538, 0.66 ) }
    dend_38 { pt3dadd( -33.201, -195.774, 17.5559, 0.22 ) }
    dend_38 { pt3dadd( -33.5003, -196.997, 17.5527, 0.22 ) }
    dend_38 { pt3dadd( -33.6169, -197.578, 17.5645, 0.44 ) }
    dend_38 { pt3dadd( -33.8776, -199.068, 17.6342, 0.22 ) }
    dend_38 { pt3dadd( -34.0337, -200.103, 17.7379, 0.22 ) }
    dend_38 { pt3dadd( -34.2166, -201.348, 17.922, 0.29 ) }
    dend_38 { pt3dadd( -34.3812, -202.372, 18.0876, 0.52 ) }
    dend_38 { pt3dadd( -34.5548, -203.434, 18.2612, 0.52 ) }
    dend_38 { pt3dadd( -34.7632, -204.558, 18.4331, 0.52 ) }
    dend_38 { pt3dadd( -34.9953, -205.617, 18.5748, 1.18 ) }
    dend_38 { pt3dadd( -35.2484, -206.595, 18.674, 2.43 ) }
    dend_38 { pt3dadd( -35.7394, -208.27, 18.8023, 1.33 ) }
    dend_38 { pt3dadd( -36.1537, -209.624, 18.8708, 0.59 ) }
    dend_38 { pt3dadd( -36.4912, -210.73, 18.9059, 0.81 ) }
    dend_38 { pt3dadd( -36.7779, -211.686, 18.9289, 0.15 ) }
    dend_38 { pt3dadd( -36.9679, -212.322, 18.9382, 0.15 ) }
    dend_38 { pt3dadd( -37.0552, -212.643, 18.9508, 0.15 ) }
    dend_38 { pt3dadd( -37.1687, -213.044, 18.9806, 0.22 ) }
    dend_38 { pt3dadd( -37.423, -213.812, 19.0363, 0.37 ) }
    dend_38 { pt3dadd( -37.7533, -214.703, 19.0466, 0.37 ) }
    dend_38 { pt3dadd( -38.1464, -215.655, 18.9649, 0.22 ) }
    dend_38 { pt3dadd( -38.6241, -216.675, 18.7741, 0.22 ) }
    dend_38 { pt3dadd( -38.9305, -217.26, 18.6013, 0.22 ) }
    dend_38 { pt3dadd( -39.2536, -217.802, 18.3907, 0.74 ) }
    dend_38 { pt3dadd( -39.7574, -218.581, 18.0291, 1.77 ) }
    dend_38 { pt3dadd( -40.3463, -219.462, 17.58, 2.21 ) }
    dend_38 { pt3dadd( -40.7969, -220.093, 17.267, 2.21 ) }
    dend_38 { pt3dadd( -41.8153, -221.448, 16.6294, 0.37 ) }
    dend_38 { pt3dadd( -42.4793, -222.349, 16.272, 0.37 ) }
    dend_38 { pt3dadd( -43.018, -223.124, 16.0441, 0.22 ) }
    dend_38 { pt3dadd( -43.5053, -223.854, 15.9189, 0.22 ) }
    dend_38 { pt3dadd( -44.1077, -224.752, 15.8433, 0.22 ) }
    dend_38 { pt3dadd( -44.4711, -225.276, 15.8406, 0.81 ) }
    dend_38 { pt3dadd( -45.0735, -226.066, 15.9315, 1.25 ) }
    dend_38 { pt3dadd( -45.8387, -226.954, 16.1168, 0.88 ) }
    dend_38 { pt3dadd( -46.7472, -227.89, 16.3479, 0.22 ) }
    dend_38 { pt3dadd( -47.2171, -228.366, 16.4662, 0.22 ) }
    dend_38 { pt3dadd( -47.7249, -228.946, 16.5869, 0.22 ) }
    dend_38 { pt3dadd( -48.2498, -229.668, 16.745, 0.22 ) }
    dend_38 { pt3dadd( -48.7264, -230.632, 16.9483, 0.44 ) }
    dend_38 { pt3dadd( -49.0304, -231.561, 17.1145, 1.47 ) }
    dend_38 { pt3dadd( -49.2838, -232.582, 17.2383, 1.47 ) }
    dend_38 { pt3dadd( -49.574, -233.869, 17.3259, 0.44 ) }
    dend_38 { pt3dadd( -49.8235, -235.072, 17.3602, 0.96 ) }
    dend_38 { pt3dadd( -50.195, -236.826, 17.3311, 0.22 ) }
    dend_38 { pt3dadd( -50.406, -237.755, 17.2967, 0.22 ) }
    dend_38 { pt3dadd( -50.7821, -239.163, 17.2194, 0.22 ) }
    dend_38 { pt3dadd( -51.1076, -240.208, 17.1187, 0.22 ) }
    dend_38 { pt3dadd( -51.3761, -240.973, 17.0133, 0.22 ) }
    dend_38 { pt3dadd( -51.7304, -241.883, 16.8499, 0.22 ) }
    dend_38 { pt3dadd( -52.2442, -243.091, 16.6234, 0.22 ) }
    dend_38 { pt3dadd( -52.5557, -243.85, 16.4996, 0.81 ) }
    dend_38 { pt3dadd( -53.0141, -245.023, 16.3424, 1.77 ) }
    dend_38 { pt3dadd( -53.4565, -246.165, 16.2303, 1.18 ) }
    dend_38 { pt3dadd( -54.2912, -248.364, 16.0869, 0.22 ) }
    dend_38 { pt3dadd( -54.5615, -249.098, 16.0784, 0.22 ) }
    dend_38 { pt3dadd( -55.028, -250.358, 16.1363, 0.88 ) }
    dend_38 { pt3dadd( -55.6109, -251.923, 16.3191, 0.15 ) }
    dend_38 { pt3dadd( -55.9614, -252.837, 16.52, 0.15 ) }
    dend_38 { pt3dadd( -56.2719, -253.733, 16.8052, 0.29 ) }
    dend_38 { pt3dadd( -56.5358, -254.64, 17.1873, 0.74 ) }
    dend_38 { pt3dadd( -56.717, -255.334, 17.5106, 1.4 ) }
    dend_38 { pt3dadd( -56.9844, -256.372, 18.0527, 0.59 ) }
    dend_38 { pt3dadd( -57.3331, -257.75, 18.7851, 0.15 ) }
    dend_38 { pt3dadd( -57.5905, -258.803, 19.3195, 0.15 ) }
    dend_38 { pt3dadd( -57.8091, -259.755, 19.7898, 0.15 ) }
    dend_38 { pt3dadd( -57.961, -260.634, 20.2007, 0.29 ) }
    dend_38 { pt3dadd( -58.1089, -261.739, 20.7241, 0.96 ) }
    dend_38 { pt3dadd( -58.2531, -262.954, 21.3049, 0.44 ) }
    dend_38 { pt3dadd( -58.3717, -263.936, 21.7788, 0.22 ) }
    dend_38 { pt3dadd( -58.5405, -265.116, 22.3889, 0.22 ) }
    dend_38 { pt3dadd( -58.688, -266.247, 23.0071, 0.15 ) }
    dend_38 { pt3dadd( -58.7847, -267.214, 23.537, 0.15 ) }
    dend_38 { pt3dadd( -58.8431, -267.867, 23.881, 0.15 ) }
    dend_38 { pt3dadd( -58.9122, -268.519, 24.1823, 0.29 ) }
    dend_38 { pt3dadd( -59.0725, -269.679, 24.5984, 0.44 ) }
    dend_38 { pt3dadd( -59.2666, -270.821, 24.8939, 0.44 ) }
    dend_38 { pt3dadd( -59.5852, -272.4, 25.1979, 0.44 ) }
    dend_38 { pt3dadd( -59.8472, -273.708, 25.3569, 0.44 ) }
    dend_38 { pt3dadd( -60.1767, -275.318, 25.4726, 0.88 ) }
    dend_38 { pt3dadd( -60.4642, -276.571, 25.4922, 1.03 ) }
    dend_38 { pt3dadd( -60.7921, -277.77, 25.4448, 0.37 ) }
    dend_38 { pt3dadd( -61.1416, -278.768, 25.3532, 0.15 ) }
    dend_38 { pt3dadd( -61.5805, -279.727, 25.2232, 0.15 ) }
    dend_38 { pt3dadd( -62.0363, -280.54, 25.0805, 0.37 ) }
    dend_38 { pt3dadd( -62.7101, -281.545, 24.8678, 0.22 ) }
    dend_38 { pt3dadd( -63.2656, -282.254, 24.6858, 0.81 ) }
    dend_38 { pt3dadd( -64.2547, -283.341, 24.343, 1.25 ) }
    dend_38 { pt3dadd( -65.4521, -284.46, 23.8985, 0.88 ) }
    dend_38 { pt3dadd( -66.2508, -285.111, 23.5802, 0.22 ) }
    dend_38 { pt3dadd( -67.0311, -285.709, 23.2233, 0.22 ) }
    dend_38 { pt3dadd( -67.7851, -286.292, 22.8283, 0.74 ) }
    dend_38 { pt3dadd( -68.782, -287.147, 22.2181, 1.47 ) }
    dend_38 { pt3dadd( -69.5347, -287.905, 21.6717, 0.37 ) }
    dend_38 { pt3dadd( -70.5486, -289.171, 20.7563, 0.22 ) }
    dend_38 { pt3dadd( -71.1497, -290.171, 20.0555, 0.29 ) }
    dend_38 { pt3dadd( -71.5582, -291.159, 19.4142, 0.29 ) }
    dend_38 { pt3dadd( -71.7657, -292.111, 18.8721, 0.29 ) }
    dend_38 { pt3dadd( -71.8316, -293.17, 18.3593, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_38 { pt3dadd( -71.798, -294.579, 17.8109, 0.22 ) }
    dend_38 { pt3dadd( -71.6679, -296.167, 17.3401, 0.22 ) }
    dend_38 { pt3dadd( -71.5881, -296.942, 17.1647, 0.22 ) }
    dend_38 { pt3dadd( -71.4866, -298.126, 16.999, 0.37 ) }
    dend_38 { pt3dadd( -71.4537, -299.016, 16.9392, 0.59 ) }
    dend_38 { pt3dadd( -71.5088, -301.133, 16.8761, 0.66 ) }
    dend_38 { pt3dadd( -71.6442, -302.589, 16.8743, 0.88 ) }
    dend_38 { pt3dadd( -71.8102, -303.562, 16.9245, 0.88 ) }
    dend_38 { pt3dadd( -72.2023, -305.304, 17.047, 0.52 ) }
    dend_38 { pt3dadd( -72.6978, -307.189, 17.2088, 0.22 ) }
    dend_38 { pt3dadd( -73.231, -309.077, 17.4488, 0.22 ) }
    dend_38 { pt3dadd( -73.4668, -309.849, 17.5783, 0.81 ) }
    dend_38 { pt3dadd( -74.1339, -311.895, 17.9572, 1.25 ) }
    dend_38 { pt3dadd( -74.4971, -313.071, 18.1925, 1.03 ) }
    dend_38 { pt3dadd( -74.7117, -313.831, 18.3504, 1.03 ) }
    dend_38 { pt3dadd( -75.199, -315.699, 18.7977, 0.22 ) }
    dend_38 { pt3dadd( -75.5285, -317.08, 19.1498, 0.22 ) }
    dend_38 { pt3dadd( -75.7529, -318.011, 19.3552, 0.22 ) }
    dend_38 { pt3dadd( -76.1338, -319.526, 19.6012, 0.22 ) }
    dend_38 { pt3dadd( -76.3987, -320.388, 19.701, 0.22 ) }
    dend_38 { pt3dadd( -76.9766, -321.972, 19.7768, 0.22 ) }
    dend_38 { pt3dadd( -77.4561, -323.026, 19.7164, 0.74 ) }
    dend_38 { pt3dadd( -77.9732, -324.031, 19.5713, 1.11 ) }
    dend_38 { pt3dadd( -78.3748, -324.778, 19.3828, 1.11 ) }
    dend_38 { pt3dadd( -79.1774, -326.194, 18.8478, 0.74 ) }
    dend_38 { pt3dadd( -79.7287, -327.216, 18.3334, 1.4 ) }
    dend_38 { pt3dadd( -80.4946, -328.782, 17.3694, 0.66 ) }
    dend_38 { pt3dadd( -80.963, -329.879, 16.6358, 0.07 ) }
    dend_38 { pt3dadd( -81.4877, -331.279, 15.6875, 0.07 ) }
    dend_38 { pt3dadd( -81.8138, -332.232, 15.0438, 0.22 ) }
    dend_38 { pt3dadd( -82.1499, -333.364, 14.3243, 0.22 ) }
    dend_38 { pt3dadd( -82.381, -334.167, 13.8557, 0.44 ) }
    dend_38 { pt3dadd( -82.6764, -335.224, 13.3253, 0.44 ) }
    dend_38 { pt3dadd( -83.1777, -336.642, 12.7861, 0.44 ) }
    dend_38 { pt3dadd( -83.5907, -337.561, 12.5665, 0.22 ) }
    dend_38 { pt3dadd( -84.2587, -338.845, 12.3938, 0.15 ) }
    dend_38 { pt3dadd( -84.7245, -339.555, 12.356, 0.37 ) }
    dend_38 { pt3dadd( -85.0936, -339.991, 12.3595, 0.37 ) }
    dend_38 { pt3dadd( -86.1122, -341.003, 12.4339, 0.15 ) }
    dend_38 { pt3dadd( -87.1097, -341.862, 12.5408, 0.15 ) }
    dend_38 { pt3dadd( -87.4398, -342.114, 12.5741, 0.52 ) }
    dend_38 { pt3dadd( -88.3449, -342.685, 12.6146, 1.03 ) }
    dend_38 { pt3dadd( -89.5514, -343.381, 12.5991, 0.15 ) }
    dend_38 { pt3dadd( -90.4114, -343.853, 12.5183, 0.15 ) }
    dend_38 { pt3dadd( -91.2062, -344.299, 12.3571, 0.15 ) }
    dend_38 { pt3dadd( -91.7004, -344.616, 12.2117, 0.59 ) }
    dend_38 { pt3dadd( -92.7413, -345.391, 11.8455, 0.15 ) }
    dend_38 { pt3dadd( -93.0729, -345.669, 11.708, 0.15 ) }
    dend_38 { pt3dadd( -93.5775, -346.172, 11.4753, 0.66 ) }
    dend_38 { pt3dadd( -94.0047, -346.655, 11.2762, 0.81 ) }
    dend_38 { pt3dadd( -95.1717, -348.156, 10.7349, 0.15 ) }
    dend_38 { pt3dadd( -96.0825, -349.462, 10.3157, 0.15 ) }
    dend_38 { pt3dadd( -96.8617, -350.702, 9.95965, 0.29 ) }
    dend_38 { pt3dadd( -97.9286, -352.485, 9.4716, 0.22 ) }
    dend_38 { pt3dadd( -98.8457, -354.1, 9.0553, 0.15 ) }
    dend_38 { pt3dadd( -99.2178, -354.762, 8.88662, 0.66 ) }
    dend_38 { pt3dadd( -99.8067, -355.781, 8.59134, 0.81 ) }
    dend_38 { pt3dadd( -100.539, -356.947, 8.18284, 0.44 ) }
    dend_38 { pt3dadd( -100.987, -357.636, 7.92298, 1.03 ) }
    dend_38 { pt3dadd( -101.472, -358.295, 7.62779, 1.25 ) }
    dend_38 { pt3dadd( -102.788, -359.933, 6.78434, 0.52 ) }
    dend_38 { pt3dadd( -103.81, -361.09, 6.10338, 0.22 ) }
    dend_38 { pt3dadd( -104.457, -361.736, 5.64574, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 63/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 6.92709, 30.5036, 0.0695568, 0.96 ) }
    dend_24 { pt3dadd( 9.27187, 32.2481, -0.160304, 0.96 ) }
    dend_24 { pt3dadd( 10.4124, 33.0924, -0.268103, 1.03 ) }
    dend_24 { pt3dadd( 11.8184, 34.1785, -0.2132, 1.03 ) }
    dend_24 { pt3dadd( 13.0643, 35.141, -0.164546, 1.62 ) }
    dend_24 { pt3dadd( 14.2716, 36.0737, -0.117401, 1.33 ) }
    dend_24 { pt3dadd( 15.9667, 37.3832, -0.0512038, 1.03 ) }
    dend_24 { pt3dadd( 17.2353, 38.3853, 0.0392194, 0.96 ) }
    dend_24 { pt3dadd( 19.6283, 40.3022, 0.320699, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.92709, 30.5036, 0.0695568, 0.88 ) }
    dend_21 { pt3dadd( 7.51898, 31.8646, -0.0348899, 0.88 ) }
    dend_21 { pt3dadd( 8.23826, 33.2218, -0.138442, 0.81 ) }
    dend_21 { pt3dadd( 8.58961, 33.8545, -0.215886, 0.66 ) }
    dend_21 { pt3dadd( 8.93954, 34.5107, -0.322654, 1.11 ) }
    dend_21 { pt3dadd( 9.36651, 35.398, -0.489219, 0.74 ) }
    dend_21 { pt3dadd( 9.65249, 36.0575, -0.629504, 0.52 ) }
    dend_21 { pt3dadd( 10.0225, 36.9796, -0.920175, 0.22 ) }
    dend_21 { pt3dadd( 10.1635, 37.7173, -1.1736, 0.29 ) }
    dend_21 { pt3dadd( 10.0934, 38.2393, -1.39233, 0.29 ) }
    dend_21 { pt3dadd( 9.85621, 38.7889, -1.68112, 0.66 ) }
    dend_21 { pt3dadd( 9.67197, 39.0663, -1.85862, 0.66 ) }
    dend_21 { pt3dadd( 9.1391, 39.7217, -2.29422, 0.81 ) }
    dend_21 { pt3dadd( 8.45236, 40.5462, -2.84764, 1.18 ) }
    dend_21 { pt3dadd( 7.94393, 41.2371, -3.29316, 1.03 ) }
    dend_21 { pt3dadd( 7.45811, 42.0516, -3.80674, 0.81 ) }
    dend_21 { pt3dadd( 7.06745, 42.9157, -4.33478, 1.11 ) }
    dend_21 { pt3dadd( 6.68015, 44.0983, -5.03441, 0.88 ) }
    dend_21 { pt3dadd( 6.4633, 45.085, -5.6105, 0.66 ) }
    dend_21 { pt3dadd( 6.33968, 45.9953, -6.11722, 0.66 ) }
    dend_21 { pt3dadd( 6.24706, 46.7644, -6.49431, 0.66 ) }
    dend_21 { pt3dadd( 6.15033, 47.4672, -6.797, 0.66 ) }
    dend_21 { pt3dadd( 6.01718, 48.3071, -7.14665, 0.81 ) }
    dend_21 { pt3dadd( 5.89668, 48.9481, -7.43231, 1.18 ) }
    dend_21 { pt3dadd( 5.73812, 49.6545, -7.74224, 1.18 ) }
    dend_21 { pt3dadd( 5.37816, 51.2217, -8.38076, 0.52 ) }
    dend_21 { pt3dadd( 5.15727, 52.0497, -8.71455, 0.52 ) }
    dend_21 { pt3dadd( 4.99071, 52.7051, -8.97121, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_21 { pt3dadd( 4.90182, 53.1773, -9.1399, 1.03 ) }
    dend_21 { pt3dadd( 4.83906, 54.0305, -9.42841, 1.03 ) }
    dend_21 { pt3dadd( 4.96052, 55.0659, -9.78001, 0.66 ) }
    dend_21 { pt3dadd( 5.06998, 63.266, -13.6273, 0.66 ) }
    dend_21 { pt3dadd( 4.79692, 71.8178, -16.6874, 0.66 ) }
    dend_21 { pt3dadd( 2.69208, 80.0683, -19.7852, 0.66 ) }
    dend_21 { pt3dadd( -0.0352846, 88.1463, -22.8075, 0.66 ) }
    dend_21 { pt3dadd( -2.81877, 95.8352, -26.6048, 0.66 ) }
    dend_21 { pt3dadd( -7.16519, 102.985, -29.8445, 0.66 ) }
    dend_21 { pt3dadd( -11.0203, 109.821, -34.1504, 0.66 ) }
    dend_21 { pt3dadd( -14.1038, 116.923, -38.6832, 0.66 ) }
    dend_21 { pt3dadd( -17.7281, 124.417, -42.1047, 0.66 ) }
    dend_21 { pt3dadd( -21.484, 131.165, -46.6194, 0.66 ) }
    dend_21 { pt3dadd( -23.5763, 138.046, -51.9597, 0.66 ) }
    dend_21 { pt3dadd( -26.137, 145.052, -56.9339, 0.66 ) }
    dend_21 { pt3dadd( -28.8335, 151.914, -62.018, 0.66 ) }
    dend_21 { pt3dadd( -31.4056, 158.423, -67.5672, 0.66 ) }
    dend_21 { pt3dadd( -34.667, 163.998, -73.6489, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 18/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 0.128102, 32.6797, 10.8763, 0.96 ) }
    dend_13 { pt3dadd( -0.673889, 33.264, 11.4863, 0.96 ) }
    dend_13 { pt3dadd( -1.40236, 33.5948, 12.1043, 0.66 ) }
    dend_13 { pt3dadd( -2.35877, 33.615, 13.024, 0.52 ) }
    dend_13 { pt3dadd( -2.68671, 33.2874, 13.4335, 0.52 ) }
    dend_13 { pt3dadd( -3.03184, 32.266, 14.0313, 0.52 ) }
    dend_13 { pt3dadd( -3.18937, 31.7058, 14.3449, 0.88 ) }
    dend_13 { pt3dadd( -3.4748, 30.3816, 15.0392, 1.11 ) }
    dend_13 { pt3dadd( -3.73134, 29.1719, 15.6892, 1.25 ) }
    dend_13 { pt3dadd( -3.98145, 28.2472, 16.2253, 1.25 ) }
    dend_13 { pt3dadd( -4.60297, 26.5772, 17.2845, 0.66 ) }
    dend_13 { pt3dadd( -5.01212, 25.7373, 17.8647, 0.96 ) }
    dend_13 { pt3dadd( -5.49604, 24.9418, 18.4963, 1.33 ) }
    dend_13 { pt3dadd( -6.15745, 24.0527, 19.3192, 1.33 ) }
    dend_13 { pt3dadd( -7.18302, 22.8708, 20.5854, 1.33 ) }
    dend_13 { pt3dadd( -8.29768, 21.6589, 22.0135, 0.88 ) }
    dend_13 { pt3dadd( -8.97955, 20.9789, 22.8702, 0.88 ) }
    dend_13 { pt3dadd( -9.75816, 20.1977, 23.8372, 1.4 ) }
    dend_13 { pt3dadd( -10.2546, 19.6724, 24.4714, 1.55 ) }
    dend_13 { pt3dadd( -10.9963, 18.8138, 25.4811, 2.06 ) }
    dend_13 { pt3dadd( -11.495, 18.065, 26.3421, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 39/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 0.128102, 32.6797, 10.8763, 0.74 ) }
    dend_12 { pt3dadd( -0.323991, 31.3741, 10.6673, 0.74 ) }
    dend_12 { pt3dadd( -0.931673, 29.7116, 10.4736, 0.52 ) }
    dend_12 { pt3dadd( -1.46847, 28.2589, 10.3569, 0.88 ) }
    dend_12 { pt3dadd( -2.02862, 26.7093, 10.332, 0.44 ) }
    dend_12 { pt3dadd( -2.38841, 25.711, 10.3696, 0.44 ) }
    dend_12 { pt3dadd( -2.66117, 24.9596, 10.4239, 0.37 ) }
    dend_12 { pt3dadd( -3.14225, 23.6138, 10.6142, 0.88 ) }
    dend_12 { pt3dadd( -3.57095, 22.1977, 10.8865, 0.44 ) }
    dend_12 { pt3dadd( -3.9783, 20.6329, 11.2099, 0.44 ) }
    dend_12 { pt3dadd( -4.20876, 19.5074, 11.4193, 0.74 ) }
    dend_12 { pt3dadd( -4.35009, 18.619, 11.5747, 1.11 ) }
    dend_12 { pt3dadd( -4.57845, 16.6784, 11.917, 0.96 ) }
    dend_12 { pt3dadd( -4.70172, 14.8693, 12.2668, 1.18 ) }
    dend_12 { pt3dadd( -4.74872, 13.3184, 12.6144, 1.18 ) }
    dend_12 { pt3dadd( -4.76995, 11.5494, 13.0631, 0.88 ) }
    dend_12 { pt3dadd( -4.76474, 10.0825, 13.4894, 0.66 ) }
    dend_12 { pt3dadd( -4.74704, 8.88698, 13.8982, 0.66 ) }
    dend_12 { pt3dadd( -4.71793, 7.61305, 14.3698, 0.66 ) }
    dend_12 { pt3dadd( -4.68239, 6.15633, 14.9348, 0.66 ) }
    dend_12 { pt3dadd( -4.63526, 4.49272, 15.5582, 0.66 ) }
    dend_12 { pt3dadd( -4.62088, 2.15452, 16.2986, 0.52 ) }
    dend_12 { pt3dadd( -4.63061, 0.895604, 16.6009, 0.52 ) }
    dend_12 { pt3dadd( -4.66105, -1.27536, 16.9505, 0.52 ) }
    dend_12 { pt3dadd( -4.69507, -2.76808, 17.0665, 0.52 ) }
    dend_12 { pt3dadd( -4.72889, -4.29031, 17.0832, 0.52 ) }
    dend_12 { pt3dadd( -4.77285, -6.25776, 17.0364, 0.96 ) }
    dend_12 { pt3dadd( -4.82657, -7.25602, 16.999, 1.11 ) }
    dend_12 { pt3dadd( -4.91538, -8.27844, 16.959, 1.11 ) }
    dend_12 { pt3dadd( -5.21173, -10.8007, 16.9002, 0.44 ) }
    dend_12 { pt3dadd( -5.39216, -11.9939, 16.8763, 0.44 ) }
    dend_12 { pt3dadd( -5.81055, -14.1261, 16.8913, 0.66 ) }
    dend_12 { pt3dadd( -6.15394, -15.5766, 16.9244, 0.52 ) }
    dend_12 { pt3dadd( -6.36696, -16.3244, 16.9324, 0.88 ) }
    dend_12 { pt3dadd( -6.57623, -16.9789, 16.9298, 1.33 ) }
    dend_12 { pt3dadd( -7.04928, -18.4338, 16.8761, 0.96 ) }
    dend_12 { pt3dadd( -7.67715, -20.5192, 16.7353, 0.59 ) }
    dend_12 { pt3dadd( -8.07162, -22.0058, 16.5778, 0.59 ) }
    dend_12 { pt3dadd( -8.27909, -22.9708, 16.4619, 0.96 ) }
    dend_12 { pt3dadd( -8.5191, -24.3254, 16.2993, 0.52 ) }
    dend_12 { pt3dadd( -8.77063, -26.164, 16.0972, 0.22 ) }
    dend_12 { pt3dadd( -8.89494, -27.3471, 15.9936, 0.29 ) }
    dend_12 { pt3dadd( -9.02047, -28.4038, 15.9251, 0.29 ) }
    dend_12 { pt3dadd( -9.14925, -29.2138, 15.902, 1.03 ) }
    dend_12 { pt3dadd( -9.39944, -30.4376, 15.8943, 1.84 ) }
    dend_12 { pt3dadd( -9.88183, -32.2291, 15.9383, 0.74 ) }
    dend_12 { pt3dadd( -10.5161, -34.0785, 16.0538, 0.29 ) }
    dend_12 { pt3dadd( -11.2739, -35.7672, 16.2478, 0.29 ) }
    dend_12 { pt3dadd( -11.7535, -36.667, 16.3921, 0.29 ) }
    dend_12 { pt3dadd( -12.0981, -37.2629, 16.5011, 0.88 ) }
    dend_12 { pt3dadd( -12.5689, -38.0512, 16.6562, 1.47 ) }
    dend_12 { pt3dadd( -13.0743, -38.9237, 16.8126, 0.88 ) }
    dend_12 { pt3dadd( -14.209, -41.138, 17.1284, 0.22 ) }
    dend_12 { pt3dadd( -14.5662, -41.9906, 17.2083, 0.15 ) }
    dend_12 { pt3dadd( -14.9376, -43.0673, 17.2871, 0.37 ) }
    dend_12 { pt3dadd( -15.2515, -44.036, 17.3646, 0.22 ) }
    dend_12 { pt3dadd( -15.7406, -45.4864, 17.51, 0.22 ) }
    dend_12 { pt3dadd( -16.2009, -46.689, 17.6673, 0.52 ) }
    dend_12 { pt3dadd( -16.5029, -47.3598, 17.7873, 0.96 ) }
    dend_12 { pt3dadd( -17.225, -48.5877, 18.102, 1.62 ) }
    dend_12 { pt3dadd( -18.2448, -49.9787, 18.5616, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_12 { pt3dadd( -19.4039, -51.3739, 19.1091, 0.59 ) }
    dend_12 { pt3dadd( -20.3156, -52.3955, 19.5631, 0.88 ) }
    dend_12 { pt3dadd( -21.1866, -53.3637, 19.9975, 1.55 ) }
    dend_12 { pt3dadd( -21.9477, -54.2214, 20.3713, 1.55 ) }
    dend_12 { pt3dadd( -23.0803, -55.5923, 20.9012, 0.37 ) }
    dend_12 { pt3dadd( -23.9929, -56.8592, 21.3486, 0.22 ) }
    dend_12 { pt3dadd( -24.5009, -57.6498, 21.6083, 0.44 ) }
    dend_12 { pt3dadd( -25.1997, -58.8512, 21.9731, 1.11 ) }
    dend_12 { pt3dadd( -25.518, -59.4826, 22.1341, 1.11 ) }
    dend_12 { pt3dadd( -26.1588, -60.9429, 22.4573, 0.44 ) }
    dend_12 { pt3dadd( -26.6787, -62.25, 22.6804, 0.22 ) }
    dend_12 { pt3dadd( -27.114, -63.46, 22.8131, 0.29 ) }
    dend_12 { pt3dadd( -27.3796, -64.1991, 22.8544, 0.15 ) }
    dend_12 { pt3dadd( -27.8337, -65.4474, 22.8796, 0.29 ) }
    dend_12 { pt3dadd( -28.0171, -65.9456, 22.8779, 0.96 ) }
    dend_12 { pt3dadd( -28.461, -67.1125, 22.852, 1.62 ) }
    dend_12 { pt3dadd( -29.1966, -69.0874, 22.7717, 2.06 ) }
    dend_12 { pt3dadd( -29.8876, -71.0213, 22.7052, 1.4 ) }
    dend_12 { pt3dadd( -30.212, -71.9568, 22.686, 0.59 ) }
    dend_12 { pt3dadd( -30.7087, -73.4233, 22.6866, 0.22 ) }
    dend_12 { pt3dadd( -31.007, -74.408, 22.6944, 0.22 ) }
    dend_12 { pt3dadd( -31.2701, -75.4027, 22.7152, 0.66 ) }
    dend_12 { pt3dadd( -31.5259, -76.501, 22.7404, 0.74 ) }
    dend_12 { pt3dadd( -31.7699, -77.6808, 22.7778, 0.22 ) }
    dend_12 { pt3dadd( -32.0499, -79.0038, 22.8492, 0.15 ) }
    dend_12 { pt3dadd( -32.2799, -80.0935, 22.946, 0.22 ) }
    dend_12 { pt3dadd( -32.4251, -80.8579, 23.0279, 0.66 ) }
    dend_12 { pt3dadd( -32.6033, -81.8154, 23.153, 1.25 ) }
    dend_12 { pt3dadd( -32.8662, -83.135, 23.355, 1.47 ) }
    dend_12 { pt3dadd( -33.2302, -84.7173, 23.6299, 0.88 ) }
    dend_12 { pt3dadd( -33.5976, -86.0609, 23.8852, 0.22 ) }
    dend_12 { pt3dadd( -33.8971, -86.9854, 24.0723, 0.22 ) }
    dend_12 { pt3dadd( -34.2246, -87.8741, 24.256, 0.22 ) }
    dend_12 { pt3dadd( -34.8152, -89.2663, 24.5472, 0.37 ) }
    dend_12 { pt3dadd( -35.3857, -90.4572, 24.783, 0.37 ) }
    dend_12 { pt3dadd( -36.0242, -91.7089, 25.0174, 0.52 ) }
    dend_12 { pt3dadd( -36.4125, -92.4608, 25.1551, 0.22 ) }
    dend_12 { pt3dadd( -36.7715, -93.1927, 25.2884, 0.37 ) }
    dend_12 { pt3dadd( -37.0785, -93.937, 25.4073, 0.74 ) }
    dend_12 { pt3dadd( -37.4767, -95.2652, 25.5771, 0.22 ) }
    dend_12 { pt3dadd( -37.7704, -96.6978, 25.7128, 0.22 ) }
    dend_12 { pt3dadd( -37.9522, -97.8503, 25.7874, 0.29 ) }
    dend_12 { pt3dadd( -38.0912, -98.7074, 25.833, 0.52 ) }
    dend_12 { pt3dadd( -38.2991, -99.9407, 25.8873, 1.11 ) }
    dend_12 { pt3dadd( -38.4895, -101.029, 25.9242, 1.7 ) }
    dend_12 { pt3dadd( -38.7769, -102.533, 25.9594, 1.33 ) }
    dend_12 { pt3dadd( -39.1111, -104.238, 25.9677, 0.22 ) }
    dend_12 { pt3dadd( -39.3409, -105.59, 25.9617, 0.22 ) }
    dend_12 { pt3dadd( -39.4147, -106.057, 25.9579, 0.22 ) }
    dend_12 { pt3dadd( -39.4955, -106.603, 25.9531, 0.29 ) }
    dend_12 { pt3dadd( -39.6151, -107.447, 25.9481, 0.52 ) }
    dend_12 { pt3dadd( -39.7539, -108.537, 25.9451, 0.22 ) }
    dend_12 { pt3dadd( -39.8944, -109.445, 25.9616, 0.22 ) }
    dend_12 { pt3dadd( -40.0689, -110.201, 25.9949, 0.22 ) }
    dend_12 { pt3dadd( -40.3632, -110.98, 26.0673, 0.81 ) }
    dend_12 { pt3dadd( -40.7144, -111.613, 26.1634, 1.47 ) }
    dend_12 { pt3dadd( -41.0414, -112.081, 26.2567, 1.47 ) }
    dend_12 { pt3dadd( -41.903, -113.175, 26.5067, 0.22 ) }
    dend_12 { pt3dadd( -42.3825, -113.769, 26.6459, 0.22 ) }
    dend_12 { pt3dadd( -42.9508, -114.525, 26.8081, 0.37 ) }
    dend_12 { pt3dadd( -43.648, -115.543, 27.0024, 0.44 ) }
    dend_12 { pt3dadd( -44.1044, -116.26, 27.1277, 0.22 ) }
    dend_12 { pt3dadd( -44.2859, -116.573, 27.1701, 0.22 ) }
    dend_12 { pt3dadd( -44.5049, -116.982, 27.2123, 0.22 ) }
    dend_12 { pt3dadd( -44.9179, -117.79, 27.2831, 0.22 ) }
    dend_12 { pt3dadd( -45.2511, -118.441, 27.3383, 0.74 ) }
    dend_12 { pt3dadd( -45.6587, -119.244, 27.4057, 1.47 ) }
    dend_12 { pt3dadd( -46.2864, -120.383, 27.5366, 1.99 ) }
    dend_12 { pt3dadd( -46.9133, -121.418, 27.713, 1.77 ) }
    dend_12 { pt3dadd( -47.9835, -123.009, 28.0721, 0.66 ) }
    dend_12 { pt3dadd( -48.6101, -123.854, 28.3086, 0.15 ) }
    dend_12 { pt3dadd( -49.2754, -124.698, 28.5715, 0.15 ) }
    dend_12 { pt3dadd( -49.9895, -125.594, 28.8555, 0.22 ) }
    dend_12 { pt3dadd( -50.6168, -126.344, 29.1052, 0.22 ) }
    dend_12 { pt3dadd( -51.2799, -127.111, 29.3276, 0.29 ) }
    dend_12 { pt3dadd( -51.8503, -127.775, 29.4758, 0.81 ) }
    dend_12 { pt3dadd( -52.6243, -128.737, 29.6082, 1.47 ) }
    dend_12 { pt3dadd( -53.4968, -129.92, 29.6561, 0.52 ) }
    dend_12 { pt3dadd( -54.2403, -131.134, 29.575, 0.22 ) }
    dend_12 { pt3dadd( -54.734, -132.116, 29.4398, 0.22 ) }
    dend_12 { pt3dadd( -55.0528, -132.933, 29.3095, 0.22 ) }
    dend_12 { pt3dadd( -55.1814, -133.355, 29.2329, 0.22 ) }
    dend_12 { pt3dadd( -55.3473, -134.052, 29.0985, 0.29 ) }
    dend_12 { pt3dadd( -55.5666, -135.112, 28.8861, 0.74 ) }
    dend_12 { pt3dadd( -55.7318, -135.914, 28.7196, 1.03 ) }
    dend_12 { pt3dadd( -56.1534, -137.609, 28.4068, 0.37 ) }
    dend_12 { pt3dadd( -56.4953, -138.759, 28.2178, 0.88 ) }
    dend_12 { pt3dadd( -56.8541, -139.86, 28.055, 1.18 ) }
    dend_12 { pt3dadd( -57.194, -140.858, 27.9179, 1.18 ) }
    dend_12 { pt3dadd( -57.8199, -142.699, 27.708, 0.29 ) }
    dend_12 { pt3dadd( -58.39, -144.284, 27.5771, 0.29 ) }
    dend_12 { pt3dadd( -58.8015, -145.37, 27.5338, 0.37 ) }
    dend_12 { pt3dadd( -59.1035, -146.128, 27.5488, 0.88 ) }
    dend_12 { pt3dadd( -59.4089, -146.902, 27.6018, 0.66 ) }
    dend_12 { pt3dadd( -59.7726, -147.964, 27.7113, 0.22 ) }
    dend_12 { pt3dadd( -60.012, -148.833, 27.8249, 0.22 ) }
    dend_12 { pt3dadd( -60.2151, -149.798, 27.9409, 0.37 ) }
    dend_12 { pt3dadd( -60.3272, -150.486, 28.0206, 0.66 ) }
    dend_12 { pt3dadd( -60.4811, -151.575, 28.1533, 1.11 ) }
    dend_12 { pt3dadd( -60.6649, -152.87, 28.3204, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( -60.8015, -153.686, 28.434, 0.29 ) }
    dend_12 { pt3dadd( -61.0034, -154.818, 28.6107, 0.22 ) }
    dend_12 { pt3dadd( -61.1569, -155.587, 28.7215, 0.29 ) }
    dend_12 { pt3dadd( -61.4476, -156.933, 28.8601, 0.96 ) }
    dend_12 { pt3dadd( -61.6748, -157.89, 28.915, 1.03 ) }
    dend_12 { pt3dadd( -62.0743, -159.534, 28.9296, 0.81 ) }
    dend_12 { pt3dadd( -62.3834, -160.854, 28.8735, 0.29 ) }
    dend_12 { pt3dadd( -62.6588, -161.945, 28.7905, 0.22 ) }
    dend_12 { pt3dadd( -62.9643, -163.086, 28.6756, 0.29 ) }
    dend_12 { pt3dadd( -63.2424, -164.078, 28.5521, 0.74 ) }
    dend_12 { pt3dadd( -63.4866, -164.952, 28.4384, 0.52 ) }
    dend_12 { pt3dadd( -64.055, -166.863, 28.211, 0.29 ) }
    dend_12 { pt3dadd( -64.6482, -168.638, 28.0765, 0.29 ) }
    dend_12 { pt3dadd( -65.2555, -170.253, 28.0786, 0.29 ) }
    dend_12 { pt3dadd( -65.6168, -171.126, 28.1278, 0.29 ) }
    dend_12 { pt3dadd( -65.9944, -171.971, 28.2003, 1.03 ) }
    dend_12 { pt3dadd( -66.3792, -172.787, 28.2793, 1.7 ) }
    dend_12 { pt3dadd( -67.055, -174.214, 28.4269, 1.4 ) }
    dend_12 { pt3dadd( -68.0648, -176.358, 28.6677, 0.44 ) }
    dend_12 { pt3dadd( -68.6529, -177.575, 28.838, 0.15 ) }
    dend_12 { pt3dadd( -68.915, -178.109, 28.9194, 0.37 ) }
    dend_12 { pt3dadd( -69.3398, -178.961, 29.0406, 0.59 ) }
    dend_12 { pt3dadd( -69.7494, -179.798, 29.1343, 0.59 ) }
    dend_12 { pt3dadd( -70.5169, -181.372, 29.2528, 0.22 ) }
    dend_12 { pt3dadd( -71.1191, -182.54, 29.3114, 0.22 ) }
    dend_12 { pt3dadd( -71.5768, -183.402, 29.3562, 0.22 ) }
    dend_12 { pt3dadd( -71.9388, -184.094, 29.385, 0.88 ) }
    dend_12 { pt3dadd( -72.2781, -184.796, 29.4331, 1.47 ) }
    dend_12 { pt3dadd( -72.7484, -185.836, 29.5116, 1.84 ) }
    dend_12 { pt3dadd( -74.0444, -188.905, 29.7663, 0.22 ) }
    dend_12 { pt3dadd( -74.2369, -189.383, 29.8002, 0.22 ) }
    dend_12 { pt3dadd( -74.4865, -190.023, 29.851, 0.22 ) }
    dend_12 { pt3dadd( -75.0711, -191.443, 29.9669, 0.22 ) }
    dend_12 { pt3dadd( -75.4801, -192.334, 30.0458, 0.22 ) }
    dend_12 { pt3dadd( -75.8333, -193.016, 30.1002, 0.74 ) }
    dend_12 { pt3dadd( -76.5055, -194.218, 30.1514, 1.33 ) }
    dend_12 { pt3dadd( -77.3847, -195.657, 30.1977, 0.22 ) }
    dend_12 { pt3dadd( -77.92, -196.467, 30.2149, 0.22 ) }
    dend_12 { pt3dadd( -78.5113, -197.377, 30.2423, 0.22 ) }
    dend_12 { pt3dadd( -78.9168, -198.12, 30.3115, 0.15 ) }
    dend_12 { pt3dadd( -79.1809, -198.728, 30.4061, 0.15 ) }
    dend_12 { pt3dadd( -79.5117, -199.614, 30.6276, 0.37 ) }
    dend_12 { pt3dadd( -79.6532, -200.055, 30.7665, 0.96 ) }
    dend_12 { pt3dadd( -80.1404, -201.711, 31.3721, 2.14 ) }
    dend_12 { pt3dadd( -80.7059, -203.639, 32.1572, 0.66 ) }
    dend_12 { pt3dadd( -81.1337, -204.968, 32.7769, 0.15 ) }
    dend_12 { pt3dadd( -81.5511, -206.093, 33.386, 0.15 ) }
    dend_12 { pt3dadd( -81.8236, -206.747, 33.7863, 0.44 ) }
    dend_12 { pt3dadd( -82.0944, -207.345, 34.1784, 1.03 ) }
    dend_12 { pt3dadd( -82.5575, -208.317, 34.8264, 1.55 ) }
    dend_12 { pt3dadd( -83.1239, -209.519, 35.6488, 0.44 ) }
    dend_12 { pt3dadd( -83.5005, -210.363, 36.1545, 0.22 ) }
    dend_12 { pt3dadd( -83.7663, -211.034, 36.4871, 0.22 ) }
    dend_12 { pt3dadd( -84.1668, -212.083, 36.9309, 0.22 ) }
    dend_12 { pt3dadd( -84.5519, -213.082, 37.2897, 0.29 ) }
    dend_12 { pt3dadd( -85.0112, -214.231, 37.6215, 0.29 ) }
    dend_12 { pt3dadd( -85.6161, -215.674, 37.9443, 0.15 ) }
    dend_12 { pt3dadd( -86.0926, -216.739, 38.1362, 0.22 ) }
    dend_12 { pt3dadd( -86.632, -217.832, 38.2631, 0.88 ) }
    dend_12 { pt3dadd( -87.4539, -219.356, 38.3343, 0.74 ) }
    dend_12 { pt3dadd( -88.0322, -220.33, 38.3167, 0.88 ) }
    dend_12 { pt3dadd( -88.6538, -221.328, 38.229, 1.77 ) }
    dend_12 { pt3dadd( -89.371, -222.452, 38.0507, 2.29 ) }
    dend_12 { pt3dadd( -90.4568, -224.171, 37.6387, 0.07 ) }
    dend_12 { pt3dadd( -91.1013, -225.216, 37.2923, 0.15 ) }
    dend_12 { pt3dadd( -91.492, -225.872, 37.0055, 0.15 ) }
    dend_12 { pt3dadd( -91.6942, -226.236, 36.8239, 0.15 ) }
    dend_12 { pt3dadd( -92.0151, -226.945, 36.4487, 0.15 ) }
    dend_12 { pt3dadd( -92.1821, -227.511, 36.1618, 0.15 ) }
    dend_12 { pt3dadd( -92.3775, -228.532, 35.7465, 0.15 ) }
    dend_12 { pt3dadd( -92.4353, -228.913, 35.6153, 0.15 ) }
    dend_12 { pt3dadd( -92.5792, -230.0, 35.2854, 0.66 ) }
    dend_12 { pt3dadd( -92.8631, -231.98, 34.7517, 0.29 ) }
    dend_12 { pt3dadd( -93.0715, -233.271, 34.4597, 0.22 ) }
    dend_12 { pt3dadd( -93.2718, -234.455, 34.2371, 0.22 ) }
    dend_12 { pt3dadd( -93.4783, -235.484, 34.0935, 0.22 ) }
    dend_12 { pt3dadd( -93.6281, -236.008, 34.051, 0.59 ) }
    dend_12 { pt3dadd( -93.8413, -236.505, 34.0503, 0.74 ) }
    dend_12 { pt3dadd( -94.1399, -236.99, 34.1234, 0.37 ) }
    dend_12 { pt3dadd( -94.5825, -237.565, 34.2936, 0.15 ) }
    dend_12 { pt3dadd( -95.4979, -238.636, 34.712, 0.15 ) }
    dend_12 { pt3dadd( -96.017, -239.197, 34.9691, 0.22 ) }
    dend_12 { pt3dadd( -96.5467, -239.766, 35.2347, 0.29 ) }
    dend_12 { pt3dadd( -97.0836, -240.376, 35.5255, 0.22 ) }
    dend_12 { pt3dadd( -97.7553, -241.222, 35.9116, 0.22 ) }
    dend_12 { pt3dadd( -98.4758, -242.259, 36.3479, 0.29 ) }
    dend_12 { pt3dadd( -98.9551, -243.051, 36.6616, 0.29 ) }
    dend_12 { pt3dadd( -99.5636, -244.037, 37.0525, 0.22 ) }
    dend_12 { pt3dadd( -100.089, -244.81, 37.3646, 0.37 ) }
    dend_12 { pt3dadd( -100.62, -245.536, 37.6458, 0.74 ) }
    dend_12 { pt3dadd( -101.007, -246.056, 37.8417, 1.03 ) }
    dend_12 { pt3dadd( -101.777, -247.107, 38.229, 0.22 ) }
    dend_12 { pt3dadd( -102.466, -248.094, 38.5682, 0.22 ) }
    dend_12 { pt3dadd( -103.068, -248.961, 38.8419, 0.15 ) }
    dend_12 { pt3dadd( -103.529, -249.647, 39.0266, 0.15 ) }
    dend_12 { pt3dadd( -103.852, -250.17, 39.1498, 0.15 ) }
    dend_12 { pt3dadd( -104.353, -251.09, 39.307, 0.22 ) }
    dend_12 { pt3dadd( -105.032, -252.498, 39.4702, 0.29 ) }
    dend_12 { pt3dadd( -105.545, -253.753, 39.5705, 0.74 ) }
    dend_12 { pt3dadd( -106.038, -255.182, 39.6746, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -106.39, -256.308, 39.7556, 0.37 ) }
    dend_12 { pt3dadd( -106.734, -257.515, 39.8396, 0.37 ) }
    dend_12 { pt3dadd( -106.979, -258.444, 39.9234, 1.4 ) }
    dend_12 { pt3dadd( -107.33, -259.779, 40.0732, 2.95 ) }
    dend_12 { pt3dadd( -107.867, -261.646, 40.3453, 1.18 ) }
    dend_12 { pt3dadd( -108.356, -263.097, 40.612, 0.22 ) }
    dend_12 { pt3dadd( -108.967, -264.775, 40.987, 0.29 ) }
    dend_12 { pt3dadd( -109.429, -266.018, 41.2932, 0.74 ) }
    dend_12 { pt3dadd( -109.781, -266.94, 41.5234, 1.33 ) }
    dend_12 { pt3dadd( -110.393, -268.328, 41.8828, 0.81 ) }
    dend_12 { pt3dadd( -110.968, -269.461, 42.126, 1.18 ) }
    dend_12 { pt3dadd( -111.929, -271.332, 42.427, 0.66 ) }
    dend_12 { pt3dadd( -112.517, -272.56, 42.5506, 0.29 ) }
    dend_12 { pt3dadd( -112.734, -273.042, 42.5778, 0.44 ) }
    dend_12 { pt3dadd( -113.569, -275.05, 42.6375, 0.29 ) }
    dend_12 { pt3dadd( -114.165, -276.554, 42.6328, 0.81 ) }
    dend_12 { pt3dadd( -115.055, -278.712, 42.5442, 0.22 ) }
    dend_12 { pt3dadd( -115.543, -279.686, 42.4507, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 49.2812, -13.4497, -30.5723, 0.15 ) }
    dend_9 { pt3dadd( 54.7512, -18.0872, -34.9469, 0.15 ) }
    dend_9 { pt3dadd( 59.8739, -23.2371, -39.2239, 0.15 ) }
    dend_9 { pt3dadd( 64.8698, -27.6812, -44.3037, 0.15 ) }
    dend_9 { pt3dadd( 70.3901, -32.4117, -48.5195, 0.15 ) }
    dend_9 { pt3dadd( 76.0401, -35.6255, -53.7443, 0.15 ) }
    dend_9 { pt3dadd( 81.5197, -38.8161, -59.1624, 0.15 ) }
    dend_9 { pt3dadd( 86.7044, -43.1523, -64.1334, 0.15 ) }
    dend_9 { pt3dadd( 90.6026, -48.5489, -69.3505, 0.15 ) }
    dend_9 { pt3dadd( 95.8477, -53.5393, -73.6493, 0.15 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 49.2812, -13.4497, -30.5723, 0.59 ) }
    dend_8 { pt3dadd( 55.8131, -18.6975, -34.4801, 0.15 ) }
    dend_8 { pt3dadd( 62.1202, -24.0309, -38.6523, 0.15 ) }
    dend_8 { pt3dadd( 68.7538, -29.5749, -41.9535, 0.15 ) }
    dend_8 { pt3dadd( 75.5337, -35.1868, -44.8071, 0.15 ) }
    dend_8 { pt3dadd( 82.2438, -40.1197, -48.7846, 0.15 ) }
    dend_8 { pt3dadd( 88.556, -45.3271, -53.0944, 0.15 ) }
    dend_8 { pt3dadd( 94.2143, -51.3761, -57.3202, 0.15 ) }
    dend_8 { pt3dadd( 99.2642, -57.3892, -62.3209, 0.15 ) }
    dend_8 { pt3dadd( 103.544, -63.9855, -67.3857, 0.15 ) }
    dend_8 { pt3dadd( 107.106, -71.7048, -71.4547, 0.15 ) }
    dend_8 { pt3dadd( 111.577, -78.7862, -75.666, 0.15 ) }
    dend_8 { pt3dadd( 115.899, -85.2901, -80.8031, 0.15 ) }
    dend_8 { pt3dadd( 119.712, -91.6837, -86.4608, 0.15 ) }
    dend_8 { pt3dadd( 124.882, -96.9236, -92.0958, 0.15 ) }
    dend_8 { pt3dadd( 132.083, -100.892, -96.1915, 0.15 ) }
    dend_8 { pt3dadd( 139.315, -105.109, -99.9902, 0.15 ) }
    dend_8 { pt3dadd( 147.156, -107.822, -103.823, 0.15 ) }
    dend_8 { pt3dadd( 154.791, -111.216, -107.579, 0.15 ) }
    dend_8 { pt3dadd( 162.758, -112.693, -111.755, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 48/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 50.7391, -25.1255, -37.6208, 0.15 ) }
    dend_6 { pt3dadd( 55.0201, -31.8946, -41.8786, 0.15 ) }
    dend_6 { pt3dadd( 59.2088, -39.2458, -45.2805, 0.15 ) }
    dend_6 { pt3dadd( 63.3019, -46.1088, -49.5812, 0.15 ) }
    dend_6 { pt3dadd( 66.7025, -54.3611, -51.7868, 0.15 ) }
    dend_6 { pt3dadd( 70.3213, -62.8164, -52.5819, 0.15 ) }
    dend_6 { pt3dadd( 73.6209, -71.296, -54.0751, 0.15 ) }
    dend_6 { pt3dadd( 77.2291, -79.0164, -57.3831, 0.15 ) }
    dend_6 { pt3dadd( 82.2193, -86.1756, -60.0374, 0.15 ) }
    dend_6 { pt3dadd( 86.4291, -94.1522, -61.7822, 0.15 ) }
    dend_6 { pt3dadd( 91.7104, -101.46, -63.3289, 0.15 ) }
    dend_6 { pt3dadd( 96.4697, -109.159, -64.8248, 0.15 ) }
    dend_6 { pt3dadd( 100.485, -117.011, -67.3203, 0.15 ) }
    dend_6 { pt3dadd( 102.848, -125.611, -69.6155, 0.15 ) }
    dend_6 { pt3dadd( 106.0, -134.102, -71.3245, 0.15 ) }
    dend_6 { pt3dadd( 110.907, -141.741, -72.6288, 0.15 ) }
    dend_6 { pt3dadd( 114.798, -149.55, -75.4119, 0.15 ) }
    dend_6 { pt3dadd( 119.869, -156.617, -78.1367, 0.15 ) }
    dend_6 { pt3dadd( 124.905, -164.045, -79.9312, 0.15 ) }
    dend_6 { pt3dadd( 129.235, -171.521, -82.897, 0.15 ) }
    dend_6 { pt3dadd( 133.896, -179.067, -85.154, 0.15 ) }
    dend_6 { pt3dadd( 137.501, -186.846, -88.3401, 0.15 ) }
    dend_6 { pt3dadd( 141.056, -195.027, -90.5531, 0.15 ) }
    dend_6 { pt3dadd( 144.797, -203.383, -91.6485, 0.15 ) }
    dend_6 { pt3dadd( 147.867, -211.751, -93.921, 0.15 ) }
    dend_6 { pt3dadd( 151.426, -219.919, -96.1673, 0.15 ) }
    dend_6 { pt3dadd( 154.294, -228.62, -97.3561, 0.15 ) }
    dend_6 { pt3dadd( 158.019, -237.078, -97.4282, 0.15 ) }
    dend_6 { pt3dadd( 163.34, -244.518, -96.5585, 0.15 ) }
    dend_6 { pt3dadd( 169.639, -250.924, -94.9485, 0.15 ) }
    dend_6 { pt3dadd( 176.67, -256.416, -93.3102, 0.15 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 50.7391, -25.1255, -37.6208, 0.59 ) }
    dend_3 { pt3dadd( 57.8425, -31.2653, -39.7774, 0.15 ) }
    dend_3 { pt3dadd( 65.6852, -35.8704, -42.6788, 0.15 ) }
    dend_3 { pt3dadd( 73.7493, -40.1495, -45.4304, 0.15 ) }
    dend_3 { pt3dadd( 80.3709, -46.3456, -48.6263, 0.15 ) }
    dend_3 { pt3dadd( 86.2393, -53.2703, -51.8997, 0.15 ) }
    dend_3 { pt3dadd( 92.4939, -59.4365, -55.7725, 0.15 ) }
    dend_3 { pt3dadd( 99.1668, -64.6044, -60.2262, 0.15 ) }
    dend_3 { pt3dadd( 106.401, -68.676, -64.8404, 0.15 ) }
    dend_3 { pt3dadd( 114.319, -72.6394, -68.3135, 0.15 ) }
    dend_3 { pt3dadd( 122.265, -77.3857, -70.7098, 0.15 ) }
    dend_3 { pt3dadd( 130.896, -81.3193, -71.7717, 0.15 ) }
    dend_3 { pt3dadd( 139.135, -86.249, -71.2818, 0.15 ) }
    dend_3 { pt3dadd( 146.773, -91.7466, -69.0678, 0.15 ) }
    dend_3 { pt3dadd( 153.471, -97.1632, -64.6429, 0.15 ) }
    dend_3 { pt3dadd( 160.262, -102.933, -60.8097, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 95/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -96.4481, -171.668, -13.1213, 0.15 ) }
    dend_56 { pt3dadd( -100.012, -177.014, -12.8849, 0.15 ) }
    dend_56 { pt3dadd( -103.639, -182.243, -13.8104, 0.15 ) }
    dend_56 { pt3dadd( -107.328, -187.501, -14.0212, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 99/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -96.4481, -171.668, -13.1213, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_55 { pt3dadd( -100.999, -179.139, -12.5786, 0.15 ) }
    dend_55 { pt3dadd( -103.973, -187.42, -11.8002, 0.15 ) }
    dend_55 { pt3dadd( -107.319, -195.436, -10.3717, 0.15 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -38.1236, -175.616, -119.741, 0.15 ) }
    dend_52 { pt3dadd( -40.8025, -185.584, -125.319, 0.15 ) }
    dend_52 { pt3dadd( -44.4763, -195.928, -129.601, 0.15 ) }
    dend_52 { pt3dadd( -46.937, -206.248, -134.674, 0.15 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 7/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -38.1236, -175.616, -119.741, 0.59 ) }
    dend_51 { pt3dadd( -38.9872, -183.355, -124.725, 0.15 ) }
    dend_51 { pt3dadd( -38.1057, -191.418, -129.219, 0.15 ) }
    dend_51 { pt3dadd( -38.4326, -199.372, -133.955, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 11/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.4964, -195.526, 53.9998, 0.15 ) }
    dend_45 { pt3dadd( -1.82302, -196.183, 54.6485, 0.15 ) }
    dend_45 { pt3dadd( -1.51269, -196.486, 54.9474, 0.37 ) }
    dend_45 { pt3dadd( -0.992396, -196.994, 55.4486, 1.18 ) }
    dend_45 { pt3dadd( -0.613708, -197.363, 55.8134, 0.88 ) }
    dend_45 { pt3dadd( 0.0515507, -198.012, 56.4543, 0.22 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -2.4964, -195.526, 53.9998, 0.22 ) }
    dend_44 { pt3dadd( -2.37918, -196.412, 53.8449, 0.22 ) }
    dend_44 { pt3dadd( -2.29279, -197.072, 53.7022, 0.81 ) }
    dend_44 { pt3dadd( -2.22722, -197.712, 53.5589, 1.18 ) }
    dend_44 { pt3dadd( -2.18354, -198.68, 53.3429, 0.22 ) }
    dend_44 { pt3dadd( -2.21964, -199.5, 53.1598, 0.22 ) }
    dend_44 { pt3dadd( -2.31208, -200.311, 52.9796, 0.29 ) }
    dend_44 { pt3dadd( -2.45697, -201.073, 52.8115, 0.66 ) }
    dend_44 { pt3dadd( -2.67513, -201.839, 52.6516, 0.81 ) }
    dend_44 { pt3dadd( -2.97939, -202.663, 52.4951, 0.22 ) }
    dend_44 { pt3dadd( -3.45591, -203.73, 52.3264, 0.22 ) }
    dend_44 { pt3dadd( -3.70568, -204.253, 52.2684, 0.29 ) }
    dend_44 { pt3dadd( -3.9535, -204.778, 52.2296, 0.96 ) }
    dend_44 { pt3dadd( -4.18455, -205.294, 52.2145, 1.7 ) }
    dend_44 { pt3dadd( -4.63768, -206.429, 52.2359, 0.52 ) }
    dend_44 { pt3dadd( -4.97997, -207.45, 52.3131, 0.22 ) }
    dend_44 { pt3dadd( -5.12577, -207.988, 52.3856, 0.15 ) }
    dend_44 { pt3dadd( -5.3289, -208.847, 52.5459, 0.22 ) }
    dend_44 { pt3dadd( -5.48436, -209.601, 52.6878, 0.15 ) }
    dend_44 { pt3dadd( -5.60933, -210.242, 52.8088, 0.15 ) }
    dend_44 { pt3dadd( -5.69128, -210.678, 52.8876, 0.15 ) }
    dend_44 { pt3dadd( -5.77317, -211.167, 52.9656, 0.37 ) }
    dend_44 { pt3dadd( -5.87334, -211.801, 53.0292, 0.59 ) }
    dend_44 { pt3dadd( -6.05308, -212.973, 53.0594, 0.07 ) }
    dend_44 { pt3dadd( -6.16062, -213.639, 53.0278, 0.07 ) }
    dend_44 { pt3dadd( -6.27707, -214.365, 52.964, 0.15 ) }
    dend_44 { pt3dadd( -6.35017, -214.864, 52.9117, 0.66 ) }
    dend_44 { pt3dadd( -6.4337, -215.479, 52.8464, 0.74 ) }
    dend_44 { pt3dadd( -6.56248, -216.515, 52.7571, 0.15 ) }
    dend_44 { pt3dadd( -6.64378, -217.179, 52.7295, 0.22 ) }
    dend_44 { pt3dadd( -6.70876, -217.721, 52.7141, 0.15 ) }
    dend_44 { pt3dadd( -6.77968, -218.19, 52.7035, 0.81 ) }
    dend_44 { pt3dadd( -6.87598, -218.684, 52.6949, 0.66 ) }
    dend_44 { pt3dadd( -7.07229, -219.517, 52.6676, 0.15 ) }
    dend_44 { pt3dadd( -7.2485, -220.182, 52.6259, 0.22 ) }
    dend_44 { pt3dadd( -7.48594, -221.008, 52.5538, 0.52 ) }
    dend_44 { pt3dadd( -7.72094, -221.67, 52.4879, 0.59 ) }
    dend_44 { pt3dadd( -8.05869, -222.535, 52.4316, 0.07 ) }
    dend_44 { pt3dadd( -8.33593, -223.219, 52.4089, 0.22 ) }
    dend_44 { pt3dadd( -8.43868, -223.465, 52.4024, 0.22 ) }
    dend_44 { pt3dadd( -8.67645, -224.028, 52.3941, 0.96 ) }
    dend_44 { pt3dadd( -9.13966, -225.092, 52.3971, 0.07 ) }
    dend_44 { pt3dadd( -9.53537, -226.021, 52.4519, 0.07 ) }
    dend_44 { pt3dadd( -9.72081, -226.446, 52.5181, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 61/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -19.284, -206.641, 24.8174, 0.15 ) }
    dend_41 { pt3dadd( -19.6915, -216.199, 26.7142, 0.15 ) }
    dend_41 { pt3dadd( -21.0017, -225.749, 28.2026, 0.15 ) }
    dend_41 { pt3dadd( -22.3386, -235.255, 29.9031, 0.15 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 65/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -19.284, -206.641, 24.8174, 0.59 ) }
    dend_40 { pt3dadd( -19.7477, -211.379, 25.6955, 0.15 ) }
    dend_40 { pt3dadd( -20.8417, -216.097, 25.771, 0.15 ) }
    dend_40 { pt3dadd( -22.0121, -220.637, 26.9222, 0.15 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 69/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 19.6283, 40.3022, 0.320699, 0.52 ) }
    dend_32 { pt3dadd( 20.5999, 41.1777, -0.107118, 0.52 ) }
    dend_32 { pt3dadd( 21.6712, 41.5913, -0.63473, 0.37 ) }
    dend_32 { pt3dadd( 22.4477, 41.743, -0.997825, 0.37 ) }
    dend_32 { pt3dadd( 22.8477, 41.8106, -1.18991, 0.52 ) }
    dend_32 { pt3dadd( 23.5926, 41.9758, -1.57296, 0.52 ) }
    dend_32 { pt3dadd( 24.7429, 42.3107, -2.21131, 0.44 ) }
    dend_32 { pt3dadd( 25.3011, 42.4679, -2.56481, 0.44 ) }
    dend_32 { pt3dadd( 25.9203, 42.7012, -2.96618, 0.66 ) }
    dend_32 { pt3dadd( 26.4351, 43.0013, -3.27005, 0.66 ) }
    dend_32 { pt3dadd( 27.0507, 43.5209, -3.58024, 0.88 ) }
    dend_32 { pt3dadd( 27.4219, 43.954, -3.71427, 1.03 ) }
    dend_32 { pt3dadd( 28.1416, 44.9777, -3.83947, 0.52 ) }
    dend_32 { pt3dadd( 28.6716, 45.7785, -3.86604, 0.52 ) }
    dend_32 { pt3dadd( 29.1236, 46.4678, -3.84956, 0.52 ) }
    dend_32 { pt3dadd( 29.5359, 47.0653, -3.8038, 0.52 ) }
    dend_32 { pt3dadd( 30.2329, 48.0149, -3.72781, 0.22 ) }
    dend_32 { pt3dadd( 30.9004, 48.8935, -3.64114, 0.44 ) }
    dend_32 { pt3dadd( 31.5615, 49.7634, -3.5465, 0.74 ) }
    dend_32 { pt3dadd( 32.2607, 50.7391, -3.47143, 1.18 ) }
    dend_32 { pt3dadd( 32.7624, 51.4707, -3.45007, 0.88 ) }
    dend_32 { pt3dadd( 33.5782, 52.6391, -3.46594, 0.29 ) }
    dend_32 { pt3dadd( 40.1912, 60.6344, -3.67211, 0.29 ) }
    dend_32 { pt3dadd( 47.0589, 68.3631, -4.31941, 0.29 ) }
    dend_32 { pt3dadd( 53.0789, 76.8378, -3.72478, 0.29 ) }
    dend_32 { pt3dadd( 58.8948, 85.1936, -1.59084, 0.29 ) }
    dend_32 { pt3dadd( 64.3008, 93.8308, 0.603564, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 96/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 19.6283, 40.3022, 0.320699, 0.88 ) }
    dend_25 { pt3dadd( 20.603, 41.0978, 0.99648, 0.88 ) }
    dend_25 { pt3dadd( 21.2833, 41.6141, 1.41099, 0.81 ) }
    dend_25 { pt3dadd( 22.1139, 42.2246, 1.8129, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_25 { pt3dadd( 23.0152, 42.8677, 2.15009, 1.33 ) }
    dend_25 { pt3dadd( 24.0883, 43.6531, 2.47817, 1.33 ) }
    dend_25 { pt3dadd( 24.7132, 44.1216, 2.65496, 1.33 ) }
    dend_25 { pt3dadd( 25.4113, 44.6831, 2.81882, 1.33 ) }
    dend_25 { pt3dadd( 26.2942, 45.408, 2.98232, 1.18 ) }
    dend_25 { pt3dadd( 27.1393, 46.1018, 3.1096, 1.03 ) }
    dend_25 { pt3dadd( 27.8911, 46.6997, 3.22775, 0.88 ) }
    dend_25 { pt3dadd( 28.8169, 47.4455, 3.39354, 1.4 ) }
    dend_25 { pt3dadd( 29.9311, 48.3861, 3.63261, 0.74 ) }
    dend_25 { pt3dadd( 30.834, 49.1682, 3.85208, 1.25 ) }
    dend_25 { pt3dadd( 31.808, 49.9989, 4.09996, 1.77 ) }
    dend_25 { pt3dadd( 33.09, 51.0921, 4.39028, 0.96 ) }
    dend_25 { pt3dadd( 34.1672, 52.0197, 4.57204, 0.59 ) }
    dend_25 { pt3dadd( 34.9654, 52.7335, 4.65186, 0.74 ) }
    dend_25 { pt3dadd( 35.5616, 53.2933, 4.67759, 0.96 ) }
    dend_25 { pt3dadd( 36.5911, 54.3248, 4.70083, 1.11 ) }
    dend_25 { pt3dadd( 37.3173, 55.0978, 4.72946, 1.4 ) }
    dend_25 { pt3dadd( 37.9584, 55.8117, 4.78165, 1.4 ) }
    dend_25 { pt3dadd( 39.022, 56.9651, 4.92791, 0.96 ) }
    dend_25 { pt3dadd( 39.4723, 57.4417, 5.03598, 0.96 ) }
    dend_25 { pt3dadd( 40.3987, 58.393, 5.38575, 1.18 ) }
    dend_25 { pt3dadd( 41.1592, 59.1299, 5.78533, 1.18 ) }
    dend_25 { pt3dadd( 41.9612, 59.8359, 6.2547, 1.03 ) }
    dend_25 { pt3dadd( 42.5339, 60.2872, 6.57312, 0.96 ) }
    dend_25 { pt3dadd( 43.3372, 60.8678, 6.95579, 0.81 ) }
    dend_25 { pt3dadd( 44.2485, 61.4929, 7.29811, 0.74 ) }
    dend_25 { pt3dadd( 45.2529, 62.1632, 7.57063, 0.96 ) }
    dend_25 { pt3dadd( 46.3037, 62.8819, 7.78427, 1.25 ) }
    dend_25 { pt3dadd( 47.4686, 63.7089, 7.96615, 1.55 ) }
    dend_25 { pt3dadd( 48.4666, 64.4717, 8.08657, 0.88 ) }
    dend_25 { pt3dadd( 49.5704, 65.4141, 8.1567, 0.59 ) }
    dend_25 { pt3dadd( 50.2177, 66.0515, 8.18076, 0.81 ) }
    dend_25 { pt3dadd( 50.8819, 66.8221, 8.19999, 0.96 ) }
    dend_25 { pt3dadd( 51.5686, 67.6883, 8.23965, 1.33 ) }
    dend_25 { pt3dadd( 52.5623, 69.0835, 8.33745, 1.55 ) }
    dend_25 { pt3dadd( 53.3819, 70.3536, 8.42645, 1.7 ) }
    dend_25 { pt3dadd( 54.128, 71.6282, 8.48572, 1.62 ) }
    dend_25 { pt3dadd( 54.9227, 73.0957, 8.51267, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -34.667, 163.998, -73.6489, 0.15 ) }
    dend_23 { pt3dadd( -37.2832, 173.417, -79.197, 0.15 ) }
    dend_23 { pt3dadd( -38.4624, 183.405, -84.308, 0.15 ) }
    dend_23 { pt3dadd( -41.7105, 193.257, -88.7272, 0.15 ) }
    dend_23 { pt3dadd( -44.7637, 203.379, -92.7077, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 43/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -34.667, 163.998, -73.6489, 0.59 ) }
    dend_22 { pt3dadd( -38.6237, 174.124, -76.9843, 0.15 ) }
    dend_22 { pt3dadd( -43.4536, 183.82, -80.3081, 0.15 ) }
    dend_22 { pt3dadd( -45.8998, 194.826, -82.2906, 0.15 ) }
    dend_22 { pt3dadd( -47.155, 205.819, -85.3009, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 48/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -11.495, 18.065, 26.3421, 0.81 ) }
    dend_17 { pt3dadd( -9.65196, 19.2448, 25.9356, 0.81 ) }
    dend_17 { pt3dadd( -8.6759, 20.0069, 25.6489, 0.44 ) }
    dend_17 { pt3dadd( -7.27478, 21.3191, 25.2737, 0.59 ) }
    dend_17 { pt3dadd( -6.11791, 22.497, 25.0298, 0.59 ) }
    dend_17 { pt3dadd( -5.14407, 23.5213, 24.8627, 0.88 ) }
    dend_17 { pt3dadd( -4.39335, 24.3212, 24.756, 1.11 ) }
    dend_17 { pt3dadd( -3.54296, 25.3242, 24.5085, 1.11 ) }
    dend_17 { pt3dadd( -2.78172, 26.5147, 24.3025, 0.29 ) }
    dend_17 { pt3dadd( -2.58721, 27.2257, 24.423, 0.29 ) }
    dend_17 { pt3dadd( -2.68649, 27.7567, 24.8442, 0.29 ) }
    dend_17 { pt3dadd( -2.78532, 28.0246, 25.1403, 0.29 ) }
    dend_17 { pt3dadd( -2.83939, 28.3335, 25.5092, 0.29 ) }
    dend_17 { pt3dadd( -2.75475, 28.875, 26.1839, 0.59 ) }
    dend_17 { pt3dadd( -2.48103, 29.3941, 26.7873, 1.11 ) }
    dend_17 { pt3dadd( -1.87031, 30.2169, 27.7255, 1.84 ) }
    dend_17 { pt3dadd( -1.25479, 30.8741, 28.5106, 1.84 ) }
    dend_17 { pt3dadd( -0.387469, 31.6864, 29.5139, 0.96 ) }
    dend_17 { pt3dadd( 0.260613, 32.2178, 30.2133, 0.74 ) }
    dend_17 { pt3dadd( 0.985082, 32.8046, 30.9524, 0.74 ) }
    dend_17 { pt3dadd( 1.76151, 33.5006, 31.8071, 0.74 ) }
    dend_17 { pt3dadd( 2.30275, 34.0771, 32.4959, 1.11 ) }
    dend_17 { pt3dadd( 2.85537, 34.8352, 33.2658, 1.47 ) }
    dend_17 { pt3dadd( 3.36357, 35.6556, 33.9855, 1.47 ) }
    dend_17 { pt3dadd( 4.00069, 36.7813, 34.8612, 0.74 ) }
    dend_17 { pt3dadd( 4.80801, 38.2913, 35.9469, 0.52 ) }
    dend_17 { pt3dadd( 5.24925, 39.1178, 36.5149, 0.52 ) }
    dend_17 { pt3dadd( 5.88406, 40.2519, 37.3281, 0.37 ) }
    dend_17 { pt3dadd( 6.50695, 41.1072, 38.0301, 0.37 ) }
    dend_17 { pt3dadd( 6.84783, 41.3218, 38.3382, 0.37 ) }
    dend_17 { pt3dadd( 7.33841, 41.3818, 38.7369, 0.37 ) }
    dend_17 { pt3dadd( 7.71575, 41.3697, 39.0353, 0.37 ) }
    dend_17 { pt3dadd( 8.56386, 41.3792, 39.8817, 0.37 ) }
    dend_17 { pt3dadd( 9.09522, 41.491, 40.6574, 0.37 ) }
    dend_17 { pt3dadd( 9.71348, 41.9038, 41.8157, 0.37 ) }
    dend_17 { pt3dadd( 10.076, 42.3169, 42.6343, 0.37 ) }
    dend_17 { pt3dadd( 10.3778, 42.8281, 43.5031, 0.59 ) }
    dend_17 { pt3dadd( 10.6274, 43.4413, 44.4164, 0.88 ) }
    dend_17 { pt3dadd( 10.9189, 44.657, 45.9492, 0.88 ) }
    dend_17 { pt3dadd( 11.0481, 45.7085, 47.1664, 0.59 ) }
    dend_17 { pt3dadd( 11.0974, 47.0516, 48.5893, 0.59 ) }
    dend_17 { pt3dadd( 11.1176, 47.9092, 49.3965, 0.29 ) }
    dend_17 { pt3dadd( 11.1506, 48.8542, 50.1611, 0.29 ) }
    dend_17 { pt3dadd( 11.2101, 49.9741, 50.9311, 0.29 ) }
    dend_17 { pt3dadd( 11.2717, 50.8197, 51.4253, 0.96 ) }
    dend_17 { pt3dadd( 11.3828, 51.6572, 51.8748, 1.84 ) }
    dend_17 { pt3dadd( 11.5941, 52.9539, 52.5141, 0.37 ) }
    dend_17 { pt3dadd( 11.7645, 53.9532, 53.0363, 0.81 ) }
    dend_17 { pt3dadd( 11.9465, 55.1234, 53.7598, 1.55 ) }
    dend_17 { pt3dadd( 12.1263, 56.2772, 54.6266, 0.22 ) }
    dend_17 { pt3dadd( 12.2485, 57.1373, 55.3349, 0.22 ) }
    dend_17 { pt3dadd( 12.344, 57.7402, 55.8817, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_17 { pt3dadd( 12.513, 58.509, 56.5316, 0.29 ) }
    dend_17 { pt3dadd( 12.7219, 59.2659, 57.0676, 0.29 ) }
    dend_17 { pt3dadd( 13.0155, 60.1601, 57.6016, 0.59 ) }
    dend_17 { pt3dadd( 13.531, 61.4885, 58.3172, 1.77 ) }
    dend_17 { pt3dadd( 13.9296, 62.4366, 58.7924, 2.14 ) }
    dend_17 { pt3dadd( 14.751, 64.2127, 59.5977, 0.29 ) }
    dend_17 { pt3dadd( 15.167, 65.0609, 59.9387, 0.29 ) }
    dend_17 { pt3dadd( 15.5665, 65.8864, 60.2558, 0.29 ) }
    dend_17 { pt3dadd( 15.8042, 66.3543, 60.4296, 0.29 ) }
    dend_17 { pt3dadd( 16.1649, 67.0005, 60.6991, 0.88 ) }
    dend_17 { pt3dadd( 16.6531, 67.7938, 61.0709, 1.62 ) }
    dend_17 { pt3dadd( 17.1096, 68.4351, 61.4098, 1.62 ) }
    dend_17 { pt3dadd( 17.7328, 69.2718, 61.811, 2.21 ) }
    dend_17 { pt3dadd( 19.3037, 71.2747, 62.6339, 0.22 ) }
    dend_17 { pt3dadd( 19.9625, 72.0912, 62.924, 0.22 ) }
    dend_17 { pt3dadd( 20.42, 72.6381, 63.1032, 0.22 ) }
    dend_17 { pt3dadd( 20.8899, 73.192, 63.2636, 0.22 ) }
    dend_17 { pt3dadd( 21.77, 74.2251, 63.5099, 0.44 ) }
    dend_17 { pt3dadd( 22.7804, 75.3717, 63.6918, 0.66 ) }
    dend_17 { pt3dadd( 22.9344, 75.5608, 63.7123, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -11.495, 18.065, 26.3421, 0.96 ) }
    dend_14 { pt3dadd( -10.8478, 17.3375, 26.4731, 0.96 ) }
    dend_14 { pt3dadd( -10.168, 16.5795, 26.5889, 0.37 ) }
    dend_14 { pt3dadd( -9.97957, 16.2861, 26.6383, 0.29 ) }
    dend_14 { pt3dadd( -9.72245, 15.7232, 26.7293, 0.22 ) }
    dend_14 { pt3dadd( -9.59443, 15.3365, 26.8116, 0.22 ) }
    dend_14 { pt3dadd( -9.43793, 14.7253, 26.9642, 0.52 ) }
    dend_14 { pt3dadd( -9.30092, 13.975, 27.1799, 0.74 ) }
    dend_14 { pt3dadd( -9.23937, 12.9197, 27.5313, 0.52 ) }
    dend_14 { pt3dadd( -9.23254, 12.1483, 27.7968, 1.11 ) }
    dend_14 { pt3dadd( -9.23244, 10.9679, 28.2075, 1.62 ) }
    dend_14 { pt3dadd( -9.23235, 9.91972, 28.5609, 1.33 ) }
    dend_14 { pt3dadd( -9.20979, 8.44327, 29.0376, 1.11 ) }
    dend_14 { pt3dadd( -9.15175, 6.4259, 29.6684, 0.44 ) }
    dend_14 { pt3dadd( -9.11099, 5.36116, 29.9864, 0.44 ) }
    dend_14 { pt3dadd( -9.07636, 4.25667, 30.3044, 0.44 ) }
    dend_14 { pt3dadd( -9.06436, 3.37324, 30.5411, 0.96 ) }
    dend_14 { pt3dadd( -9.05882, 2.09663, 30.878, 1.47 ) }
    dend_14 { pt3dadd( -9.08928, 0.616494, 31.2761, 1.7 ) }
    dend_14 { pt3dadd( -9.16589, -1.02887, 31.7641, 1.7 ) }
    dend_14 { pt3dadd( -9.31119, -2.49114, 32.2824, 1.7 ) }
    dend_14 { pt3dadd( -9.51796, -3.85503, 32.8395, 0.59 ) }
    dend_14 { pt3dadd( -9.74872, -5.11557, 33.4237, 0.44 ) }
    dend_14 { pt3dadd( -9.97357, -6.23686, 34.0044, 0.44 ) }
    dend_14 { pt3dadd( -10.0923, -6.88544, 34.3852, 0.44 ) }
    dend_14 { pt3dadd( -10.2079, -7.8487, 35.0335, 0.44 ) }
    dend_14 { pt3dadd( -10.2041, -8.18097, 35.2814, 0.44 ) }
    dend_14 { pt3dadd( -10.1148, -8.60114, 35.5646, 0.44 ) }
    dend_14 { pt3dadd( -9.89187, -9.25257, 35.9164, 0.44 ) }
    dend_14 { pt3dadd( -9.74121, -9.68525, 36.1258, 0.88 ) }
    dend_14 { pt3dadd( -9.4543, -10.7187, 36.5969, 1.4 ) }
    dend_14 { pt3dadd( -9.31964, -11.4366, 36.9361, 1.4 ) }
    dend_14 { pt3dadd( -9.22681, -12.6004, 37.5352, 0.66 ) }
    dend_14 { pt3dadd( -9.23636, -13.4643, 38.0035, 0.22 ) }
    dend_14 { pt3dadd( -9.28014, -14.311, 38.4893, 0.22 ) }
    dend_14 { pt3dadd( -9.3049, -14.7966, 38.7786, 1.03 ) }
    dend_14 { pt3dadd( -9.33348, -15.6289, 39.2819, 2.36 ) }
    dend_14 { pt3dadd( -9.3202, -16.5972, 39.8664, 2.65 ) }
    dend_14 { pt3dadd( -9.16998, -18.3158, 40.9106, 0.81 ) }
    dend_14 { pt3dadd( -8.97035, -19.2679, 41.4076, 0.22 ) }
    dend_14 { pt3dadd( -8.82355, -19.729, 41.615, 0.22 ) }
    dend_14 { pt3dadd( -8.64903, -20.1664, 41.7946, 0.66 ) }
    dend_14 { pt3dadd( -8.39241, -20.7019, 41.9984, 0.66 ) }
    dend_14 { pt3dadd( -8.20593, -21.0328, 42.1222, 0.66 ) }
    dend_14 { pt3dadd( -7.61061, -21.9359, 42.4727, 0.22 ) }
    dend_14 { pt3dadd( -7.34083, -22.4017, 42.6726, 0.22 ) }
    dend_14 { pt3dadd( -7.23822, -22.619, 42.7889, 0.22 ) }
    dend_14 { pt3dadd( -7.1112, -22.9866, 43.0291, 0.22 ) }
    dend_14 { pt3dadd( -7.00073, -23.4923, 43.3888, 0.22 ) }
    dend_14 { pt3dadd( -6.98404, -23.7085, 43.5508, 0.22 ) }
    dend_14 { pt3dadd( -7.01744, -24.2261, 43.9492, 0.22 ) }
    dend_14 { pt3dadd( -7.06661, -24.5327, 44.1606, 0.29 ) }
    dend_14 { pt3dadd( -7.23606, -25.33, 44.6537, 0.29 ) }
    dend_14 { pt3dadd( -7.31851, -25.7493, 44.8793, 0.59 ) }
    dend_14 { pt3dadd( -7.44599, -26.5267, 45.2455, 0.88 ) }
    dend_14 { pt3dadd( -7.52618, -27.2991, 45.5741, 0.66 ) }
    dend_14 { pt3dadd( -7.52977, -28.2937, 45.9358, 0.22 ) }
    dend_14 { pt3dadd( -7.47431, -28.7656, 46.0868, 0.22 ) }
    dend_14 { pt3dadd( -7.22678, -29.9223, 46.4494, 0.59 ) }
    dend_14 { pt3dadd( -6.94978, -30.8885, 46.7525, 1.03 ) }
    dend_14 { pt3dadd( -6.64204, -31.8432, 47.054, 1.62 ) }
    dend_14 { pt3dadd( -6.21285, -33.1251, 47.4885, 0.59 ) }
    dend_14 { pt3dadd( -5.81109, -34.4415, 47.9536, 0.22 ) }
    dend_14 { pt3dadd( -5.57785, -35.3604, 48.3103, 0.52 ) }
    dend_14 { pt3dadd( -5.47673, -35.907, 48.5573, 1.25 ) }
    dend_14 { pt3dadd( -5.3724, -36.8074, 49.0354, 2.14 ) }
    dend_14 { pt3dadd( -5.34958, -37.629, 49.5346, 1.33 ) }
    dend_14 { pt3dadd( -5.39049, -38.707, 50.2985, 0.52 ) }
    dend_14 { pt3dadd( -5.41276, -39.31, 50.7566, 0.22 ) }
    dend_14 { pt3dadd( -5.39706, -39.9848, 51.2792, 0.44 ) }
    dend_14 { pt3dadd( -5.34089, -40.5228, 51.71, 0.44 ) }
    dend_14 { pt3dadd( -5.22836, -41.0787, 52.1229, 0.22 ) }
    dend_14 { pt3dadd( -5.1161, -41.6252, 52.4468, 0.22 ) }
    dend_14 { pt3dadd( -4.98622, -42.3104, 52.7955, 0.22 ) }
    dend_14 { pt3dadd( -4.91855, -42.7987, 52.9989, 0.52 ) }
    dend_14 { pt3dadd( -4.86057, -43.4904, 53.2455, 0.74 ) }
    dend_14 { pt3dadd( -4.84462, -44.6116, 53.6797, 0.81 ) }
    dend_14 { pt3dadd( -4.90304, -45.5804, 54.1975, 0.22 ) }
    dend_14 { pt3dadd( -5.00978, -46.1492, 54.6463, 0.22 ) }
    dend_14 { pt3dadd( -5.0703, -46.3805, 54.8968, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_14 { pt3dadd( -5.14523, -46.7266, 55.3107, 0.66 ) }
    dend_14 { pt3dadd( -5.22405, -47.3128, 56.0681, 1.33 ) }
    dend_14 { pt3dadd( -5.2403, -47.8259, 56.7268, 1.55 ) }
    dend_14 { pt3dadd( -5.20378, -48.4275, 57.3993, 0.88 ) }
    dend_14 { pt3dadd( -5.17118, -49.2528, 58.1573, 0.15 ) }
    dend_14 { pt3dadd( -5.16311, -50.1173, 58.8785, 0.29 ) }
    dend_14 { pt3dadd( -5.16636, -50.5984, 59.2453, 0.88 ) }
    dend_14 { pt3dadd( -5.19954, -51.1017, 59.5858, 1.25 ) }
    dend_14 { pt3dadd( -5.25388, -51.6446, 59.9351, 1.33 ) }
    dend_14 { pt3dadd( -5.42336, -53.0704, 60.8523, 0.22 ) }
    dend_14 { pt3dadd( -5.49908, -53.7023, 61.2555, 0.74 ) }
    dend_14 { pt3dadd( -5.56771, -54.3061, 61.6407, 1.25 ) }
    dend_14 { pt3dadd( -5.64683, -55.3515, 62.2596, 0.44 ) }
    dend_14 { pt3dadd( -5.6034, -56.1378, 62.6496, 0.22 ) }
    dend_14 { pt3dadd( -5.52152, -56.6071, 62.83, 0.22 ) }
    dend_14 { pt3dadd( -5.34926, -57.2652, 62.9999, 0.96 ) }
    dend_14 { pt3dadd( -5.22195, -57.6848, 63.0881, 1.55 ) }
    dend_14 { pt3dadd( -4.94288, -58.5342, 63.2485, 1.33 ) }
    dend_14 { pt3dadd( -4.27109, -60.4681, 63.6249, 0.15 ) }
    dend_14 { pt3dadd( -4.12391, -60.9354, 63.7233, 0.37 ) }
    dend_14 { pt3dadd( -3.87937, -61.8095, 63.9441, 0.15 ) }
    dend_14 { pt3dadd( -3.69982, -62.549, 64.1903, 0.15 ) }
    dend_14 { pt3dadd( -3.55908, -63.2251, 64.4714, 0.52 ) }
    dend_14 { pt3dadd( -3.43667, -63.9501, 64.8286, 1.18 ) }
    dend_14 { pt3dadd( -3.32523, -64.8268, 65.33, 2.06 ) }
    dend_14 { pt3dadd( -3.18587, -65.9435, 66.0072, 0.96 ) }
    dend_14 { pt3dadd( -3.04508, -67.0909, 66.7323, 0.22 ) }
    dend_14 { pt3dadd( -2.96109, -67.9063, 67.2567, 0.22 ) }
    dend_14 { pt3dadd( -2.86796, -68.8672, 67.8931, 0.22 ) }
    dend_14 { pt3dadd( -2.80832, -69.4845, 68.3073, 0.22 ) }
    dend_14 { pt3dadd( -2.70517, -70.401, 68.9486, 0.22 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 31/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 160.262, -102.933, -60.8097, 0.15 ) }
    dend_5 { pt3dadd( 167.518, -108.791, -62.7223, 0.15 ) }
    dend_5 { pt3dadd( 174.323, -115.425, -63.8817, 0.15 ) }
    dend_5 { pt3dadd( 181.134, -121.893, -65.6367, 0.15 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 35/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 160.262, -102.933, -60.8097, 0.59 ) }
    dend_4 { pt3dadd( 169.444, -108.379, -62.4477, 0.15 ) }
    dend_4 { pt3dadd( 179.07, -113.241, -63.0343, 0.15 ) }
    dend_4 { pt3dadd( 187.625, -119.985, -62.1951, 0.15 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 64.3008, 93.8308, 0.603564, 0.15 ) }
    dend_34 { pt3dadd( 75.2715, 104.651, -2.61859, 0.15 ) }
    dend_34 { pt3dadd( 83.7741, 116.959, -7.87684, 0.15 ) }
    dend_34 { pt3dadd( 89.6656, 129.652, -15.4216, 0.15 ) }
    dend_34 { pt3dadd( 93.5077, 142.888, -23.4351, 0.15 ) }
    dend_34 { pt3dadd( 95.7955, 155.116, -33.2959, 0.15 ) }
    dend_34 { pt3dadd( 100.125, 167.056, -42.7803, 0.15 ) }
    dend_34 { pt3dadd( 104.915, 179.444, -51.4869, 0.15 ) }
    dend_34 { pt3dadd( 109.583, 191.755, -60.3578, 0.15 ) }
    dend_34 { pt3dadd( 113.97, 205.563, -67.1031, 0.15 ) }
    dend_34 { pt3dadd( 115.045, 220.717, -72.3938, 0.15 ) }
    dend_34 { pt3dadd( 117.322, 236.614, -73.8913, 0.15 ) }
    dend_34 { pt3dadd( 120.914, 252.309, -73.8377, 0.15 ) }
    dend_34 { pt3dadd( 121.777, 268.304, -72.0822, 0.15 ) }
    dend_34 { pt3dadd( 123.495, 283.999, -69.0388, 0.15 ) }
    dend_34 { pt3dadd( 126.87, 299.482, -66.402, 0.15 ) }
    dend_34 { pt3dadd( 128.109, 315.565, -66.1251, 0.15 ) }
    dend_34 { pt3dadd( 129.54, 331.591, -67.3844, 0.15 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 57/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 64.3008, 93.8308, 0.603564, 0.59 ) }
    dend_33 { pt3dadd( 68.0929, 99.6174, 4.15515, 0.15 ) }
    dend_33 { pt3dadd( 71.1983, 105.708, 7.90813, 0.15 ) }
    dend_33 { pt3dadd( 74.1582, 110.859, 12.8649, 0.15 ) }
    dend_33 { pt3dadd( 75.8685, 116.632, 17.7904, 0.15 ) }
    dend_33 { pt3dadd( 77.8324, 121.557, 23.4079, 0.15 ) }
    dend_33 { pt3dadd( 79.4509, 126.927, 28.7604, 0.15 ) }
    dend_33 { pt3dadd( 80.4385, 132.629, 33.9521, 0.15 ) }
    dend_33 { pt3dadd( 83.1695, 137.888, 38.9378, 0.15 ) }
    dend_33 { pt3dadd( 85.7697, 143.107, 44.0308, 0.15 ) }
    dend_33 { pt3dadd( 88.0014, 148.997, 48.6095, 0.15 ) }
    dend_33 { pt3dadd( 89.574, 155.554, 52.6011, 0.15 ) }
    dend_33 { pt3dadd( 91.8662, 161.049, 57.5771, 0.15 ) }
    dend_33 { pt3dadd( 94.6816, 164.931, 63.5601, 0.15 ) }
    dend_33 { pt3dadd( 98.0621, 168.237, 69.5623, 0.15 ) }
    dend_33 { pt3dadd( 101.725, 171.758, 75.2812, 0.15 ) }
    dend_33 { pt3dadd( 105.999, 176.268, 79.8263, 0.15 ) }
    dend_33 { pt3dadd( 111.305, 180.106, 83.8044, 0.15 ) }
    dend_33 { pt3dadd( 116.13, 184.617, 87.756, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 54.9227, 73.0957, 8.51267, 0.66 ) }
    dend_27 { pt3dadd( 55.8978, 75.1421, 8.55027, 0.66 ) }
    dend_27 { pt3dadd( 56.4568, 76.1989, 8.54408, 0.66 ) }
    dend_27 { pt3dadd( 57.1452, 77.4675, 8.52645, 0.44 ) }
    dend_27 { pt3dadd( 57.6454, 78.3872, 8.53293, 0.37 ) }
    dend_27 { pt3dadd( 58.2969, 79.6058, 8.58121, 0.37 ) }
    dend_27 { pt3dadd( 58.8675, 80.6887, 8.67725, 0.37 ) }
    dend_27 { pt3dadd( 59.1563, 81.202, 8.74654, 0.59 ) }
    dend_27 { pt3dadd( 59.6531, 82.1508, 8.90572, 1.11 ) }
    dend_27 { pt3dadd( 60.3396, 83.7006, 9.20479, 0.37 ) }
    dend_27 { pt3dadd( 60.789, 84.9384, 9.54888, 0.59 ) }
    dend_27 { pt3dadd( 61.2409, 86.4539, 10.0777, 0.37 ) }
    dend_27 { pt3dadd( 61.6578, 87.942, 10.6789, 0.44 ) }
    dend_27 { pt3dadd( 61.8995, 88.7497, 11.0304, 0.22 ) }
    dend_27 { pt3dadd( 62.1568, 89.4665, 11.3612, 0.22 ) }
    dend_27 { pt3dadd( 62.9695, 91.3291, 12.2429, 0.22 ) }
    dend_27 { pt3dadd( 63.5058, 92.3019, 12.6909, 0.22 ) }
    dend_27 { pt3dadd( 63.8537, 92.7951, 12.9023, 0.44 ) }
    dend_27 { pt3dadd( 64.4912, 93.5144, 13.1751, 0.66 ) }
    dend_27 { pt3dadd( 65.543, 94.5093, 13.4737, 0.22 ) }
    dend_27 { pt3dadd( 66.0238, 94.9096, 13.5581, 0.22 ) }
    dend_27 { pt3dadd( 66.6647, 95.3944, 13.6228, 0.66 ) }
    dend_27 { pt3dadd( 67.2122, 95.7893, 13.6875, 1.03 ) }
    dend_27 { pt3dadd( 68.4613, 96.6977, 13.8504, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_27 { pt3dadd( 69.5217, 97.5084, 14.0011, 0.66 ) }
    dend_27 { pt3dadd( 70.1649, 98.0281, 14.11, 0.81 ) }
    dend_27 { pt3dadd( 71.6136, 99.2219, 14.3781, 1.03 ) }
    dend_27 { pt3dadd( 72.7179, 100.136, 14.5965, 0.74 ) }
    dend_27 { pt3dadd( 73.808, 101.029, 14.8284, 0.37 ) }
    dend_27 { pt3dadd( 74.609, 101.642, 14.9995, 0.37 ) }
    dend_27 { pt3dadd( 75.2886, 102.151, 15.1422, 0.29 ) }
    dend_27 { pt3dadd( 75.9987, 102.674, 15.2856, 0.29 ) }
    dend_27 { pt3dadd( 76.5908, 103.11, 15.3932, 0.66 ) }
    dend_27 { pt3dadd( 77.4622, 103.737, 15.5646, 1.25 ) }
    dend_27 { pt3dadd( 79.0196, 104.829, 15.8688, 0.29 ) }
    dend_27 { pt3dadd( 79.4949, 105.164, 15.9559, 0.29 ) }
    dend_27 { pt3dadd( 80.487, 105.905, 16.1246, 0.88 ) }
    dend_27 { pt3dadd( 81.4347, 106.678, 16.2852, 0.52 ) }
    dend_27 { pt3dadd( 82.2052, 107.353, 16.4122, 1.11 ) }
    dend_27 { pt3dadd( 83.2645, 108.339, 16.5778, 0.66 ) }
    dend_27 { pt3dadd( 84.261, 109.299, 16.7512, 0.29 ) }
    dend_27 { pt3dadd( 84.9851, 109.97, 16.8773, 0.59 ) }
    dend_27 { pt3dadd( 86.2936, 111.085, 17.0926, 0.22 ) }
    dend_27 { pt3dadd( 86.9097, 111.559, 17.1885, 0.59 ) }
    dend_27 { pt3dadd( 87.7706, 112.168, 17.3111, 1.18 ) }
    dend_27 { pt3dadd( 88.8479, 112.857, 17.4687, 0.22 ) }
    dend_27 { pt3dadd( 89.5722, 113.29, 17.5749, 0.22 ) }
    dend_27 { pt3dadd( 90.1813, 113.649, 17.6629, 0.22 ) }
    dend_27 { pt3dadd( 90.8392, 114.061, 17.7788, 0.22 ) }
    dend_27 { pt3dadd( 91.2778, 114.4, 17.8695, 0.22 ) }
    dend_27 { pt3dadd( 91.7726, 114.898, 17.9873, 0.37 ) }
    dend_27 { pt3dadd( 92.4927, 115.817, 18.1924, 0.37 ) }
    dend_27 { pt3dadd( 92.9569, 116.505, 18.3531, 0.22 ) }
    dend_27 { pt3dadd( 93.476, 117.352, 18.5689, 0.52 ) }
    dend_27 { pt3dadd( 94.1626, 118.512, 18.9084, 0.52 ) }
    dend_27 { pt3dadd( 94.6303, 119.264, 19.1562, 0.96 ) }
    dend_27 { pt3dadd( 95.1155, 119.96, 19.4131, 1.77 ) }
    dend_27 { pt3dadd( 95.6746, 120.672, 19.7, 1.77 ) }
    dend_27 { pt3dadd( 96.4816, 121.643, 20.0955, 0.22 ) }
    dend_27 { pt3dadd( 97.0668, 122.32, 20.3623, 0.22 ) }
    dend_27 { pt3dadd( 97.6391, 122.923, 20.6125, 0.22 ) }
    dend_27 { pt3dadd( 98.2271, 123.516, 20.8485, 0.22 ) }
    dend_27 { pt3dadd( 98.7765, 124.058, 21.0336, 0.22 ) }
    dend_27 { pt3dadd( 99.4284, 124.74, 21.2237, 0.22 ) }
    dend_27 { pt3dadd( 100.113, 125.504, 21.3792, 0.22 ) }
    dend_27 { pt3dadd( 100.462, 125.926, 21.4526, 0.66 ) }
    dend_27 { pt3dadd( 100.978, 126.569, 21.564, 0.81 ) }
    dend_27 { pt3dadd( 101.736, 127.525, 21.753, 0.22 ) }
    dend_27 { pt3dadd( 102.339, 128.25, 21.9257, 0.22 ) }
    dend_27 { pt3dadd( 102.846, 128.887, 22.0949, 0.74 ) }
    dend_27 { pt3dadd( 103.439, 129.73, 22.3241, 0.88 ) }
    dend_27 { pt3dadd( 103.771, 130.267, 22.4757, 1.11 ) }
    dend_27 { pt3dadd( 104.496, 131.607, 22.8916, 1.11 ) }
    dend_27 { pt3dadd( 105.082, 132.87, 23.303, 0.37 ) }
    dend_27 { pt3dadd( 105.69, 134.294, 23.8025, 0.22 ) }
    dend_27 { pt3dadd( 106.045, 135.187, 24.1441, 0.29 ) }
    dend_27 { pt3dadd( 106.361, 135.998, 24.4866, 0.29 ) }
    dend_27 { pt3dadd( 106.697, 136.803, 24.867, 0.37 ) }
    dend_27 { pt3dadd( 107.087, 137.508, 25.2655, 0.37 ) }
    dend_27 { pt3dadd( 107.461, 137.94, 25.5869, 0.22 ) }
    dend_27 { pt3dadd( 107.969, 138.318, 25.9505, 0.22 ) }
    dend_27 { pt3dadd( 108.745, 138.771, 26.4542, 0.22 ) }
    dend_27 { pt3dadd( 109.519, 139.157, 26.9067, 0.29 ) }
    dend_27 { pt3dadd( 110.673, 139.702, 27.5527, 0.22 ) }
    dend_27 { pt3dadd( 111.364, 140.047, 27.9326, 1.4 ) }
    dend_27 { pt3dadd( 112.09, 140.474, 28.3458, 2.21 ) }
    dend_27 { pt3dadd( 112.587, 140.852, 28.6708, 1.7 ) }
    dend_27 { pt3dadd( 113.204, 141.449, 29.1707, 0.96 ) }
    dend_27 { pt3dadd( 113.881, 142.189, 29.8435, 0.96 ) }
    dend_27 { pt3dadd( 114.261, 142.611, 30.2698, 1.47 ) }
    dend_27 { pt3dadd( 114.669, 143.032, 30.7347, 1.47 ) }
    dend_27 { pt3dadd( 115.493, 143.814, 31.6548, 0.22 ) }
    dend_27 { pt3dadd( 116.03, 144.298, 32.2147, 0.22 ) }
    dend_27 { pt3dadd( 116.601, 144.825, 32.7739, 0.22 ) }
    dend_27 { pt3dadd( 117.178, 145.367, 33.268, 0.22 ) }
    dend_27 { pt3dadd( 117.683, 145.832, 33.6461, 0.22 ) }
    dend_27 { pt3dadd( 118.074, 146.203, 33.8799, 0.88 ) }
    dend_27 { pt3dadd( 118.679, 146.791, 34.1673, 1.99 ) }
    dend_27 { pt3dadd( 119.55, 147.67, 34.5005, 1.55 ) }
    dend_27 { pt3dadd( 120.582, 148.784, 34.8303, 0.22 ) }
    dend_27 { pt3dadd( 121.336, 149.62, 35.0544, 0.22 ) }
    dend_27 { pt3dadd( 122.35, 150.699, 35.3284, 0.29 ) }
    dend_27 { pt3dadd( 122.984, 151.343, 35.4835, 0.59 ) }
    dend_27 { pt3dadd( 123.993, 152.277, 35.658, 0.96 ) }
    dend_27 { pt3dadd( 125.192, 153.271, 35.7861, 0.15 ) }
    dend_27 { pt3dadd( 126.211, 154.044, 35.8666, 1.18 ) }
    dend_27 { pt3dadd( 127.528, 154.988, 35.9538, 1.18 ) }
    dend_27 { pt3dadd( 128.653, 155.755, 36.0248, 1.4 ) }
    dend_27 { pt3dadd( 130.28, 156.817, 36.121, 0.22 ) }
    dend_27 { pt3dadd( 131.02, 157.302, 36.1618, 0.37 ) }
    dend_27 { pt3dadd( 131.799, 157.837, 36.2201, 1.03 ) }
    dend_27 { pt3dadd( 132.149, 158.103, 36.2598, 0.88 ) }
    dend_27 { pt3dadd( 132.632, 158.501, 36.3535, 0.74 ) }
    dend_27 { pt3dadd( 133.303, 159.066, 36.5361, 0.96 ) }
    dend_27 { pt3dadd( 134.207, 159.948, 36.8933, 0.22 ) }
    dend_27 { pt3dadd( 135.016, 160.788, 37.2175, 0.96 ) }
    dend_27 { pt3dadd( 135.451, 161.229, 37.3676, 0.74 ) }
    dend_27 { pt3dadd( 136.215, 161.95, 37.6273, 0.22 ) }
    dend_27 { pt3dadd( 136.979, 162.641, 37.8841, 0.29 ) }
    dend_27 { pt3dadd( 138.115, 163.641, 38.2559, 0.29 ) }
    dend_27 { pt3dadd( 138.909, 164.304, 38.4856, 0.29 ) }
    dend_27 { pt3dadd( 140.155, 165.329, 38.785, 0.22 ) }
    dend_27 { pt3dadd( 140.778, 165.846, 38.9162, 0.66 ) }
    dend_27 { pt3dadd( 141.293, 166.303, 39.0211, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( 141.62, 166.588, 39.0791, 1.55 ) }
    dend_27 { pt3dadd( 142.848, 167.614, 39.2484, 0.15 ) }
    dend_27 { pt3dadd( 143.807, 168.463, 39.3745, 0.15 ) }
    dend_27 { pt3dadd( 144.621, 169.242, 39.4702, 0.15 ) }
    dend_27 { pt3dadd( 145.309, 169.942, 39.511, 0.15 ) }
    dend_27 { pt3dadd( 145.935, 170.617, 39.5384, 0.15 ) }
    dend_27 { pt3dadd( 146.419, 171.189, 39.5762, 0.88 ) }
    dend_27 { pt3dadd( 147.01, 171.951, 39.64, 1.18 ) }
    dend_27 { pt3dadd( 147.709, 172.934, 39.7358, 1.18 ) }
    dend_27 { pt3dadd( 148.711, 174.361, 39.8801, 0.22 ) }
    dend_27 { pt3dadd( 149.779, 175.834, 40.0369, 0.22 ) }
    dend_27 { pt3dadd( 150.437, 176.787, 40.1449, 1.18 ) }
    dend_27 { pt3dadd( 150.752, 177.249, 40.2029, 1.92 ) }
    dend_27 { pt3dadd( 151.267, 178.018, 40.3181, 1.92 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 54.9227, 73.0957, 8.51267, 0.44 ) }
    dend_26 { pt3dadd( 55.873, 73.424, 8.64705, 0.44 ) }
    dend_26 { pt3dadd( 56.8843, 73.7813, 8.80364, 0.44 ) }
    dend_26 { pt3dadd( 57.389, 73.9282, 8.89171, 0.96 ) }
    dend_26 { pt3dadd( 58.5199, 74.1825, 9.10971, 1.7 ) }
    dend_26 { pt3dadd( 59.5237, 74.3815, 9.3081, 1.99 ) }
    dend_26 { pt3dadd( 61.0349, 74.6505, 9.59307, 1.11 ) }
    dend_26 { pt3dadd( 62.0577, 74.8048, 9.75339, 0.37 ) }
    dend_26 { pt3dadd( 63.0087, 74.9352, 9.84591, 0.37 ) }
    dend_26 { pt3dadd( 64.1825, 75.0931, 9.90046, 0.37 ) }
    dend_26 { pt3dadd( 64.9255, 75.2069, 9.87689, 0.37 ) }
    dend_26 { pt3dadd( 65.6368, 75.3291, 9.80767, 0.44 ) }
    dend_26 { pt3dadd( 66.6762, 75.513, 9.64198, 0.96 ) }
    dend_26 { pt3dadd( 67.9894, 75.7539, 9.36372, 1.62 ) }
    dend_26 { pt3dadd( 69.2976, 76.0219, 9.09667, 1.18 ) }
    dend_26 { pt3dadd( 71.0319, 76.4056, 8.80123, 0.29 ) }
    dend_26 { pt3dadd( 71.9273, 76.5942, 8.70205, 0.44 ) }
    dend_26 { pt3dadd( 72.5934, 76.7263, 8.67747, 0.59 ) }
    dend_26 { pt3dadd( 73.6284, 76.9086, 8.70596, 0.29 ) }
    dend_26 { pt3dadd( 75.0172, 77.1545, 8.83049, 0.29 ) }
    dend_26 { pt3dadd( 76.5987, 77.4725, 9.05049, 0.59 ) }
    dend_26 { pt3dadd( 77.6772, 77.7664, 9.24173, 1.03 ) }
    dend_26 { pt3dadd( 78.9631, 78.2279, 9.49293, 1.7 ) }
    dend_26 { pt3dadd( 80.1752, 78.748, 9.74264, 1.7 ) }
    dend_26 { pt3dadd( 81.6308, 79.4007, 10.0493, 0.96 ) }
    dend_26 { pt3dadd( 82.5093, 79.7786, 10.2105, 1.33 ) }
    dend_26 { pt3dadd( 84.1623, 80.4716, 10.5007, 1.62 ) }
    dend_26 { pt3dadd( 85.4823, 81.0289, 10.6992, 0.52 ) }
    dend_26 { pt3dadd( 86.504, 81.4614, 10.8378, 0.22 ) }
    dend_26 { pt3dadd( 87.5998, 81.929, 10.9707, 0.22 ) }
    dend_26 { pt3dadd( 88.9894, 82.5054, 11.0922, 0.22 ) }
    dend_26 { pt3dadd( 90.0503, 82.9788, 11.1481, 0.74 ) }
    dend_26 { pt3dadd( 91.0115, 83.4753, 11.1676, 1.33 ) }
    dend_26 { pt3dadd( 91.8542, 84.0287, 11.158, 1.77 ) }
    dend_26 { pt3dadd( 93.0922, 85.0357, 11.1159, 0.44 ) }
    dend_26 { pt3dadd( 94.2226, 86.1393, 11.0681, 0.22 ) }
    dend_26 { pt3dadd( 95.1095, 87.087, 11.0344, 0.66 ) }
    dend_26 { pt3dadd( 95.8086, 87.8141, 11.0089, 0.29 ) }
    dend_26 { pt3dadd( 96.4232, 88.4081, 10.9946, 0.29 ) }
    dend_26 { pt3dadd( 96.8168, 88.7287, 10.9913, 0.22 ) }
    dend_26 { pt3dadd( 97.3592, 89.0952, 11.0089, 0.22 ) }
    dend_26 { pt3dadd( 98.1648, 89.5454, 11.0682, 0.52 ) }
    dend_26 { pt3dadd( 99.1495, 89.9811, 11.145, 0.88 ) }
    dend_26 { pt3dadd( 100.022, 90.2974, 11.1888, 0.88 ) }
    dend_26 { pt3dadd( 101.029, 90.6448, 11.2214, 0.22 ) }
    dend_26 { pt3dadd( 101.927, 90.9834, 11.2599, 0.22 ) }
    dend_26 { pt3dadd( 102.37, 91.168, 11.2811, 0.52 ) }
    dend_26 { pt3dadd( 103.16, 91.5187, 11.3231, 1.4 ) }
    dend_26 { pt3dadd( 104.226, 91.9747, 11.3588, 1.18 ) }
    dend_26 { pt3dadd( 105.871, 92.6393, 11.3809, 0.22 ) }
    dend_26 { pt3dadd( 107.07, 93.1178, 11.3472, 0.59 ) }
    dend_26 { pt3dadd( 107.959, 93.4652, 11.3111, 0.22 ) }
    dend_26 { pt3dadd( 108.968, 93.8943, 11.2563, 0.88 ) }
    dend_26 { pt3dadd( 110.255, 94.5271, 11.1758, 1.55 ) }
    dend_26 { pt3dadd( 110.741, 94.808, 11.1339, 1.55 ) }
    dend_26 { pt3dadd( 112.376, 95.9049, 10.9197, 0.88 ) }
    dend_26 { pt3dadd( 113.146, 96.4781, 10.7904, 0.44 ) }
    dend_26 { pt3dadd( 113.847, 97.0393, 10.6678, 0.22 ) }
    dend_26 { pt3dadd( 114.556, 97.594, 10.5426, 0.22 ) }
    dend_26 { pt3dadd( 115.302, 98.1647, 10.4152, 0.37 ) }
    dend_26 { pt3dadd( 116.119, 98.7489, 10.2828, 1.11 ) }
    dend_26 { pt3dadd( 117.179, 99.4473, 10.1312, 1.18 ) }
    dend_26 { pt3dadd( 118.164, 100.079, 10.0055, 0.29 ) }
    dend_26 { pt3dadd( 119.523, 100.922, 9.8549, 0.22 ) }
    dend_26 { pt3dadd( 120.268, 101.373, 9.79558, 0.22 ) }
    dend_26 { pt3dadd( 121.027, 101.844, 9.77145, 1.11 ) }
    dend_26 { pt3dadd( 121.565, 102.204, 9.79018, 1.18 ) }
    dend_26 { pt3dadd( 122.641, 103.01, 9.91805, 0.29 ) }
    dend_26 { pt3dadd( 123.635, 103.757, 10.1137, 0.29 ) }
    dend_26 { pt3dadd( 124.259, 104.2, 10.2707, 1.03 ) }
    dend_26 { pt3dadd( 125.099, 104.71, 10.5058, 1.92 ) }
    dend_26 { pt3dadd( 125.694, 105.021, 10.6494, 1.92 ) }
    dend_26 { pt3dadd( 127.626, 105.89, 11.0117, 0.15 ) }
    dend_26 { pt3dadd( 128.648, 106.271, 11.1578, 0.15 ) }
    dend_26 { pt3dadd( 129.254, 106.483, 11.2373, 0.37 ) }
    dend_26 { pt3dadd( 130.115, 106.789, 11.3402, 1.11 ) }
    dend_26 { pt3dadd( 131.565, 107.312, 11.5149, 1.47 ) }
    dend_26 { pt3dadd( 132.975, 107.789, 11.6773, 0.44 ) }
    dend_26 { pt3dadd( 134.464, 108.255, 11.8422, 0.22 ) }
    dend_26 { pt3dadd( 135.645, 108.606, 11.9751, 0.74 ) }
    dend_26 { pt3dadd( 136.588, 108.832, 12.0954, 0.88 ) }
    dend_26 { pt3dadd( 138.21, 109.014, 12.3016, 0.22 ) }
    dend_26 { pt3dadd( 138.966, 108.974, 12.405, 0.22 ) }
    dend_26 { pt3dadd( 139.708, 108.8, 12.4852, 0.44 ) }
    dend_26 { pt3dadd( 140.436, 108.532, 12.5429, 0.81 ) }
    dend_26 { pt3dadd( 141.322, 108.142, 12.5989, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_26 { pt3dadd( 142.761, 107.516, 12.6859, 0.81 ) }
    dend_26 { pt3dadd( 143.931, 107.047, 12.7777, 0.22 ) }
    dend_26 { pt3dadd( 144.767, 106.789, 12.8538, 0.22 ) }
    dend_26 { pt3dadd( 145.467, 106.675, 12.9177, 0.22 ) }
    dend_26 { pt3dadd( 146.829, 106.668, 13.0457, 0.37 ) }
    dend_26 { pt3dadd( 148.334, 106.876, 13.1845, 0.22 ) }
    dend_26 { pt3dadd( 148.887, 107.029, 13.2237, 0.96 ) }
    dend_26 { pt3dadd( 149.891, 107.412, 13.2518, 1.84 ) }
    dend_26 { pt3dadd( 151.809, 108.31, 13.2004, 0.22 ) }
    dend_26 { pt3dadd( 152.703, 108.814, 13.1204, 0.22 ) }
    dend_26 { pt3dadd( 153.069, 109.078, 13.0645, 0.22 ) }
    dend_26 { pt3dadd( 153.724, 109.684, 12.9397, 0.22 ) }
    dend_26 { pt3dadd( 154.327, 110.34, 12.8204, 0.44 ) }
    dend_26 { pt3dadd( 155.14, 111.287, 12.6885, 1.18 ) }
    dend_26 { pt3dadd( 155.839, 112.079, 12.6143, 1.62 ) }
    dend_26 { pt3dadd( 156.548, 112.81, 12.5817, 1.7 ) }
    dend_26 { pt3dadd( 157.667, 113.943, 12.6124, 1.25 ) }
    dend_26 { pt3dadd( 159.113, 115.327, 12.7368, 0.29 ) }
    dend_26 { pt3dadd( 160.028, 116.083, 12.8419, 1.03 ) }
    dend_26 { pt3dadd( 160.849, 116.657, 12.9281, 1.47 ) }
    dend_26 { pt3dadd( 162.43, 117.587, 13.0865, 0.22 ) }
    dend_26 { pt3dadd( 163.713, 118.232, 13.1942, 0.88 ) }
    dend_26 { pt3dadd( 164.689, 118.668, 13.2657, 0.44 ) }
    dend_26 { pt3dadd( 166.139, 119.309, 13.3538, 0.22 ) }
    dend_26 { pt3dadd( 167.178, 119.816, 13.4187, 0.22 ) }
    dend_26 { pt3dadd( 167.983, 120.257, 13.475, 1.03 ) }
    dend_26 { pt3dadd( 168.933, 120.844, 13.5633, 1.47 ) }
    dend_26 { pt3dadd( 169.742, 121.434, 13.6489, 1.25 ) }
    dend_26 { pt3dadd( 170.948, 122.497, 13.7756, 0.52 ) }
    dend_26 { pt3dadd( 172.249, 123.811, 13.8988, 0.37 ) }
    dend_26 { pt3dadd( 172.929, 124.513, 13.939, 1.03 ) }
    dend_26 { pt3dadd( 173.327, 124.912, 13.9313, 1.4 ) }
    dend_26 { pt3dadd( 174.569, 126.1, 13.8256, 0.96 ) }
    dend_26 { pt3dadd( 175.428, 126.824, 13.6893, 0.81 ) }
    dend_26 { pt3dadd( 176.735, 127.805, 13.4166, 0.22 ) }
    dend_26 { pt3dadd( 177.548, 128.334, 13.2187, 0.22 ) }
    dend_26 { pt3dadd( 178.245, 128.732, 13.0665, 0.74 ) }
    dend_26 { pt3dadd( 178.769, 129.016, 12.9744, 0.81 ) }
    dend_26 { pt3dadd( 179.768, 129.587, 12.8558, 0.22 ) }
    dend_26 { pt3dadd( 180.253, 129.91, 12.8203, 0.22 ) }
    dend_26 { pt3dadd( 180.964, 130.453, 12.7618, 0.88 ) }
    dend_26 { pt3dadd( 182.045, 131.385, 12.6817, 1.33 ) }
    dend_26 { pt3dadd( 182.915, 132.238, 12.5971, 1.7 ) }
    dend_26 { pt3dadd( 183.994, 133.426, 12.4708, 1.47 ) }
    dend_26 { pt3dadd( 185.144, 134.838, 12.3122, 0.22 ) }
    dend_26 { pt3dadd( 185.824, 135.734, 12.2079, 0.22 ) }
    dend_26 { pt3dadd( 186.579, 136.861, 12.0654, 0.29 ) }
    dend_26 { pt3dadd( 187.054, 137.744, 11.9563, 0.15 ) }
    dend_26 { pt3dadd( 187.339, 138.431, 11.8816, 0.15 ) }
    dend_26 { pt3dadd( 187.657, 139.47, 11.7892, 0.59 ) }
    dend_26 { pt3dadd( 187.907, 140.482, 11.7146, 0.37 ) }
    dend_26 { pt3dadd( 188.235, 141.847, 11.5874, 0.22 ) }
    dend_26 { pt3dadd( 188.606, 143.299, 11.3998, 0.22 ) }
    dend_26 { pt3dadd( 188.817, 144.01, 11.2903, 1.11 ) }
    dend_26 { pt3dadd( 189.281, 145.457, 11.0132, 0.22 ) }
    dend_26 { pt3dadd( 189.641, 146.531, 10.7651, 0.07 ) }
    dend_26 { pt3dadd( 189.966, 147.556, 10.5272, 0.07 ) }
    dend_26 { pt3dadd( 190.155, 148.183, 10.4075, 0.88 ) }
    dend_26 { pt3dadd( 190.287, 148.704, 10.3451, 1.11 ) }
    dend_26 { pt3dadd( 190.444, 149.802, 10.3269, 0.81 ) }
    dend_26 { pt3dadd( 190.489, 150.971, 10.4533, 0.37 ) }
    dend_26 { pt3dadd( 190.452, 152.618, 10.805, 0.15 ) }
    dend_26 { pt3dadd( 190.379, 153.977, 11.2224, 0.15 ) }
    dend_26 { pt3dadd( 190.284, 155.139, 11.6789, 0.15 ) }
    dend_26 { pt3dadd( 190.204, 156.216, 12.1659, 0.59 ) }
    dend_26 { pt3dadd( 190.079, 157.749, 12.9537, 0.29 ) }
    dend_26 { pt3dadd( 189.999, 158.56, 13.4255, 0.66 ) }
    dend_26 { pt3dadd( 189.912, 159.485, 14.023, 1.47 ) }
    dend_26 { pt3dadd( 189.779, 160.921, 15.0019, 0.22 ) }
    dend_26 { pt3dadd( 189.698, 161.949, 15.7108, 0.15 ) }
    dend_26 { pt3dadd( 189.663, 163.05, 16.4737, 0.15 ) }
    dend_26 { pt3dadd( 189.659, 163.823, 17.0083, 0.44 ) }
    dend_26 { pt3dadd( 189.684, 164.543, 17.4758, 0.44 ) }
    dend_26 { pt3dadd( 189.765, 165.643, 18.1643, 0.22 ) }
    dend_26 { pt3dadd( 189.805, 166.135, 18.4498, 0.15 ) }
    dend_26 { pt3dadd( 189.801, 167.172, 19.0178, 0.15 ) }
    dend_26 { pt3dadd( 189.774, 167.579, 19.2203, 0.15 ) }
    dend_26 { pt3dadd( 189.656, 168.196, 19.4967, 0.44 ) }
    dend_26 { pt3dadd( 189.521, 168.671, 19.7037, 0.44 ) }
    dend_26 { pt3dadd( 189.097, 170.052, 20.3368, 0.15 ) }
    dend_26 { pt3dadd( 188.83, 171.023, 20.8183, 0.22 ) }
    dend_26 { pt3dadd( 188.664, 171.68, 21.1571, 0.29 ) }
    dend_26 { pt3dadd( 188.532, 172.756, 21.7212, 0.29 ) }
    dend_26 { pt3dadd( 188.553, 173.601, 22.1443, 0.74 ) }
    dend_26 { pt3dadd( 188.739, 174.617, 22.6219, 0.66 ) }
    dend_26 { pt3dadd( 189.029, 175.521, 23.0119, 1.55 ) }
    dend_26 { pt3dadd( 189.227, 176.014, 23.1978, 1.55 ) }
    dend_26 { pt3dadd( 189.964, 177.553, 23.677, 0.15 ) }
    dend_26 { pt3dadd( 190.566, 178.654, 23.9687, 0.22 ) }
    dend_26 { pt3dadd( 191.172, 179.704, 24.2094, 0.22 ) }
    dend_26 { pt3dadd( 191.572, 180.366, 24.3386, 0.22 ) }
    dend_26 { pt3dadd( 192.147, 181.251, 24.4894, 0.37 ) }
    dend_26 { pt3dadd( 193.32, 182.954, 24.7505, 0.22 ) }
    dend_26 { pt3dadd( 194.352, 184.457, 24.9873, 0.15 ) }
    dend_26 { pt3dadd( 194.815, 185.157, 25.1221, 1.18 ) }
    dend_26 { pt3dadd( 195.347, 186.025, 25.3159, 2.21 ) }
    dend_26 { pt3dadd( 195.531, 186.349, 25.3961, 2.21 ) }
    dend_26 { pt3dadd( 196.43, 188.224, 25.9096, 0.22 ) }
    dend_26 { pt3dadd( 196.946, 189.672, 26.3309, 0.22 ) }
    dend_26 { pt3dadd( 197.366, 191.279, 26.7761, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_26 { pt3dadd( 197.478, 191.822, 26.9208, 0.66 ) }
    dend_26 { pt3dadd( 197.542, 192.224, 27.0157, 1.25 ) }
    dend_26 { pt3dadd( 197.729, 193.588, 27.2846, 1.62 ) }
    dend_26 { pt3dadd( 197.908, 195.262, 27.5353, 0.22 ) }
    dend_26 { pt3dadd( 198.104, 196.979, 27.6722, 0.22 ) }
    dend_26 { pt3dadd( 198.177, 197.649, 27.6901, 0.37 ) }
    dend_26 { pt3dadd( 198.303, 198.652, 27.6908, 0.88 ) }
    dend_26 { pt3dadd( 198.396, 199.426, 27.6811, 0.88 ) }
    dend_26 { pt3dadd( 198.497, 200.545, 27.6296, 0.22 ) }
    dend_26 { pt3dadd( 198.535, 201.828, 27.5549, 0.15 ) }
    dend_26 { pt3dadd( 198.502, 202.836, 27.5207, 0.15 ) }
    dend_26 { pt3dadd( 198.462, 203.335, 27.4403, 0.52 ) }
    dend_26 { pt3dadd( 198.354, 204.405, 27.1952, 0.88 ) }
    dend_26 { pt3dadd( 198.218, 205.644, 26.8636, 0.22 ) }
    dend_26 { pt3dadd( 198.131, 206.511, 26.5887, 0.22 ) }
    dend_26 { pt3dadd( 197.898, 208.609, 25.9096, 0.15 ) }
    dend_26 { pt3dadd( 197.592, 212.188, 24.8065, 0.22 ) }
    dend_26 { pt3dadd( 197.534, 213.302, 24.4828, 0.44 ) }
    dend_26 { pt3dadd( 197.531, 214.476, 24.1807, 0.22 ) }
    dend_26 { pt3dadd( 197.595, 215.72, 23.9214, 0.29 ) }
    dend_26 { pt3dadd( 197.687, 216.717, 23.7715, 0.22 ) }
    dend_26 { pt3dadd( 197.894, 218.411, 23.6541, 0.15 ) }
    dend_26 { pt3dadd( 198.006, 219.161, 23.7319, 0.15 ) }
    dend_26 { pt3dadd( 198.217, 220.488, 23.8813, 0.15 ) }
    dend_26 { pt3dadd( 198.349, 221.197, 23.9773, 0.29 ) }
    dend_26 { pt3dadd( 198.502, 221.893, 24.1082, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 26/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 22.9344, 75.5608, 63.7123, 0.07 ) }
    dend_19 { pt3dadd( 22.7125, 76.1908, 63.9334, 0.07 ) }
    dend_19 { pt3dadd( 22.543, 76.7829, 64.147, 0.07 ) }
    dend_19 { pt3dadd( 22.3212, 77.9304, 64.5583, 0.07 ) }
    dend_19 { pt3dadd( 22.1706, 78.904, 64.8752, 0.29 ) }
    dend_19 { pt3dadd( 22.0814, 79.6758, 65.104, 0.07 ) }
    dend_19 { pt3dadd( 21.9815, 80.9372, 65.4288, 0.07 ) }
    dend_19 { pt3dadd( 21.9708, 81.5688, 65.569, 0.52 ) }
    dend_19 { pt3dadd( 22.0023, 83.1662, 65.896, 1.03 ) }
    dend_19 { pt3dadd( 22.0894, 84.9047, 66.2562, 0.15 ) }
    dend_19 { pt3dadd( 22.1243, 85.6104, 66.4086, 0.15 ) }
    dend_19 { pt3dadd( 22.1458, 86.4888, 66.6067, 0.15 ) }
    dend_19 { pt3dadd( 22.1286, 87.2855, 66.7786, 0.15 ) }
    dend_19 { pt3dadd( 22.0818, 87.9946, 66.9646, 0.07 ) }
    dend_19 { pt3dadd( 22.0244, 88.544, 67.1429, 0.07 ) }
    dend_19 { pt3dadd( 21.9572, 89.2507, 67.3863, 0.44 ) }
    dend_19 { pt3dadd( 21.9284, 89.6561, 67.5319, 0.74 ) }
    dend_19 { pt3dadd( 21.928, 90.1108, 67.6893, 0.74 ) }
    dend_19 { pt3dadd( 22.0446, 91.6126, 68.1587, 0.15 ) }
    dend_19 { pt3dadd( 22.1644, 92.5306, 68.4153, 0.15 ) }
    dend_19 { pt3dadd( 22.3395, 93.6604, 68.7024, 0.37 ) }
    dend_19 { pt3dadd( 22.5208, 94.7176, 68.9555, 1.7 ) }
    dend_19 { pt3dadd( 22.7058, 95.8831, 69.2181, 1.03 ) }
    dend_19 { pt3dadd( 22.9537, 97.4523, 69.5452, 0.15 ) }
    dend_19 { pt3dadd( 23.1942, 98.8269, 69.813, 0.15 ) }
    dend_19 { pt3dadd( 23.2903, 99.3894, 69.9178, 0.66 ) }
    dend_19 { pt3dadd( 23.4221, 100.102, 70.0502, 1.03 ) }
    dend_19 { pt3dadd( 23.6569, 101.304, 70.2339, 0.15 ) }
    dend_19 { pt3dadd( 23.962, 102.751, 70.4194, 0.15 ) }
    dend_19 { pt3dadd( 24.2194, 103.734, 70.5345, 0.15 ) }
    dend_19 { pt3dadd( 24.4497, 104.524, 70.6106, 0.29 ) }
    dend_19 { pt3dadd( 24.6914, 105.36, 70.6799, 0.29 ) }
    dend_19 { pt3dadd( 24.8744, 106.142, 70.7526, 0.74 ) }
    dend_19 { pt3dadd( 25.0354, 107.064, 70.8756, 0.81 ) }
    dend_19 { pt3dadd( 25.1018, 107.693, 70.9836, 0.81 ) }
    dend_19 { pt3dadd( 25.1659, 109.421, 71.3459, 0.15 ) }
    dend_19 { pt3dadd( 25.1552, 110.295, 71.6073, 0.74 ) }
    dend_19 { pt3dadd( 25.0123, 112.169, 72.3441, 0.15 ) }
    dend_19 { pt3dadd( 24.8722, 113.063, 72.8188, 0.15 ) }
    dend_19 { pt3dadd( 24.6369, 113.824, 73.3765, 0.15 ) }
    dend_19 { pt3dadd( 24.3966, 114.342, 73.8552, 0.29 ) }
    dend_19 { pt3dadd( 23.9121, 115.108, 74.7671, 0.15 ) }
    dend_19 { pt3dadd( 23.7431, 115.318, 75.0648, 0.52 ) }
    dend_19 { pt3dadd( 23.1773, 115.883, 76.0869, 1.4 ) }
    dend_19 { pt3dadd( 22.1453, 116.783, 77.9793, 0.15 ) }
    dend_19 { pt3dadd( 21.8704, 116.978, 78.4938, 0.15 ) }
    dend_19 { pt3dadd( 21.7464, 117.052, 78.7565, 0.15 ) }
    dend_19 { pt3dadd( 21.2636, 117.255, 79.9402, 0.81 ) }
    dend_19 { pt3dadd( 20.8043, 117.335, 81.2608, 0.15 ) }
    dend_19 { pt3dadd( 20.6695, 117.304, 81.7329, 0.15 ) }
    dend_19 { pt3dadd( 20.4881, 117.199, 82.4194, 1.18 ) }
    dend_19 { pt3dadd( 19.9698, 116.841, 84.3586, 0.07 ) }
    dend_19 { pt3dadd( 19.6142, 116.573, 85.6058, 0.07 ) }
    dend_19 { pt3dadd( 19.4329, 116.443, 86.1696, 0.59 ) }
    dend_19 { pt3dadd( 19.2167, 116.331, 86.7311, 1.77 ) }
    dend_19 { pt3dadd( 18.4279, 115.996, 88.5702, 0.07 ) }
    dend_19 { pt3dadd( 18.0506, 115.855, 89.3967, 0.07 ) }
    dend_19 { pt3dadd( 17.7835, 115.754, 89.9185, 0.37 ) }
    dend_19 { pt3dadd( 17.4972, 115.658, 90.4226, 0.52 ) }
    dend_19 { pt3dadd( 16.8459, 115.423, 91.5727, 0.07 ) }
    dend_19 { pt3dadd( 16.2086, 115.198, 92.6461, 0.07 ) }
    dend_19 { pt3dadd( 15.9386, 115.091, 93.073, 0.07 ) }
    dend_19 { pt3dadd( 15.7179, 114.991, 93.4222, 0.29 ) }
    dend_19 { pt3dadd( 15.2324, 114.713, 94.2243, 0.66 ) }
    dend_19 { pt3dadd( 14.7011, 114.297, 95.1724, 0.07 ) }
    dend_19 { pt3dadd( 14.3218, 113.938, 95.8703, 0.29 ) }
    dend_19 { pt3dadd( 13.9881, 113.607, 96.4977, 0.88 ) }
    dend_19 { pt3dadd( 13.3113, 112.938, 97.86, 0.15 ) }
    dend_19 { pt3dadd( 12.984, 112.608, 98.5792, 0.52 ) }
    dend_19 { pt3dadd( 12.3176, 111.928, 100.11, 0.07 ) }
    dend_19 { pt3dadd( 12.1002, 111.716, 100.606, 0.59 ) }
    dend_19 { pt3dadd( 11.8087, 111.431, 101.288, 1.47 ) }
    dend_19 { pt3dadd( 11.1247, 110.783, 102.912, 0.07 ) }
    dend_19 { pt3dadd( 10.8709, 110.543, 103.53, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( 10.4896, 110.182, 104.476, 0.07 ) }
    dend_19 { pt3dadd( 10.3696, 110.071, 104.763, 0.37 ) }
    dend_19 { pt3dadd( 10.0999, 109.843, 105.354, 0.81 ) }
    dend_19 { pt3dadd( 9.56276, 109.433, 106.438, 0.07 ) }
    dend_19 { pt3dadd( 9.09912, 109.122, 107.264, 0.07 ) }
    dend_19 { pt3dadd( 8.84076, 109.003, 107.675, 0.44 ) }
    dend_19 { pt3dadd( 8.55904, 108.917, 108.102, 0.88 ) }
    dend_19 { pt3dadd( 7.73348, 108.774, 109.256, 0.15 ) }
    dend_19 { pt3dadd( 7.26364, 108.744, 109.856, 0.37 ) }
    dend_19 { pt3dadd( 6.9875, 108.746, 110.175, 0.37 ) }
    dend_19 { pt3dadd( 5.80669, 108.742, 111.438, 0.15 ) }
    dend_19 { pt3dadd( 5.41569, 108.733, 111.846, 0.15 ) }
    dend_19 { pt3dadd( 4.81434, 108.725, 112.451, 0.37 ) }
    dend_19 { pt3dadd( 3.71094, 108.693, 113.512, 0.07 ) }
    dend_19 { pt3dadd( 2.99404, 108.682, 114.186, 0.29 ) }
    dend_19 { pt3dadd( 2.34514, 108.682, 114.801, 0.07 ) }
    dend_19 { pt3dadd( 1.69946, 108.698, 115.411, 0.07 ) }
    dend_19 { pt3dadd( 0.310157, 108.752, 116.715, 0.07 ) }
    dend_19 { pt3dadd( -1.53447, 108.842, 118.448, 0.07 ) }
    dend_19 { pt3dadd( -2.13069, 108.885, 119.008, 0.07 ) }
    dend_19 { pt3dadd( -2.98034, 108.966, 119.82, 0.07 ) }
    dend_19 { pt3dadd( -3.4842, 109.031, 120.318, 0.59 ) }
    dend_19 { pt3dadd( -4.24049, 109.125, 121.07, 1.18 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 23/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 22.9344, 75.5608, 63.7123, 0.37 ) }
    dend_18 { pt3dadd( 24.6343, 74.3113, 64.1503, 0.37 ) }
    dend_18 { pt3dadd( 25.7774, 73.5267, 64.336, 0.37 ) }
    dend_18 { pt3dadd( 26.5805, 73.0221, 64.4104, 0.59 ) }
    dend_18 { pt3dadd( 27.9391, 72.1567, 64.4058, 0.22 ) }
    dend_18 { pt3dadd( 28.9088, 71.498, 64.3416, 0.22 ) }
    dend_18 { pt3dadd( 29.5777, 70.9717, 64.2805, 0.15 ) }
    dend_18 { pt3dadd( 30.2328, 70.445, 64.2444, 0.15 ) }
    dend_18 { pt3dadd( 31.0818, 69.6789, 64.1625, 0.15 ) }
    dend_18 { pt3dadd( 31.8279, 68.8977, 64.0903, 0.59 ) }
    dend_18 { pt3dadd( 32.305, 68.259, 64.0582, 0.88 ) }
    dend_18 { pt3dadd( 33.3615, 66.5154, 64.0563, 0.15 ) }
    dend_18 { pt3dadd( 34.0695, 65.2055, 64.1665, 0.15 ) }
    dend_18 { pt3dadd( 34.4221, 64.4544, 64.2584, 0.44 ) }
    dend_18 { pt3dadd( 34.7208, 63.7209, 64.3722, 0.81 ) }
    dend_18 { pt3dadd( 35.1301, 62.6119, 64.5732, 0.07 ) }
    dend_18 { pt3dadd( 35.5869, 61.2437, 64.8107, 0.22 ) }
    dend_18 { pt3dadd( 36.0244, 59.8002, 65.0357, 0.22 ) }
    dend_18 { pt3dadd( 36.5972, 57.7671, 65.3051, 0.07 ) }
    dend_18 { pt3dadd( 37.0343, 56.0836, 65.5184, 0.07 ) }
    dend_18 { pt3dadd( 37.4433, 54.4863, 65.7016, 0.07 ) }
    dend_18 { pt3dadd( 37.6683, 53.589, 65.7747, 0.29 ) }
    dend_18 { pt3dadd( 38.2088, 51.4099, 65.9217, 0.07 ) }
    dend_18 { pt3dadd( 38.4516, 50.389, 65.9658, 0.88 ) }
    dend_18 { pt3dadd( 38.7653, 49.1049, 66.0229, 1.25 ) }
    dend_18 { pt3dadd( 38.979, 48.2702, 66.0446, 1.25 ) }
    dend_18 { pt3dadd( 39.6906, 45.5739, 66.0716, 0.07 ) }
    dend_18 { pt3dadd( 40.1561, 43.7907, 66.0747, 0.07 ) }
    dend_18 { pt3dadd( 40.4131, 42.787, 66.0615, 0.07 ) }
    dend_18 { pt3dadd( 40.5614, 42.1969, 66.052, 0.52 ) }
    dend_18 { pt3dadd( 40.9392, 40.6152, 66.0207, 0.66 ) }
    dend_18 { pt3dadd( 41.1088, 39.7925, 66.01, 0.22 ) }
    dend_18 { pt3dadd( 41.3014, 38.7071, 65.9912, 0.52 ) }
    dend_18 { pt3dadd( 41.4288, 37.7941, 65.9719, 0.29 ) }
    dend_18 { pt3dadd( 41.6301, 36.0744, 65.967, 0.07 ) }
    dend_18 { pt3dadd( 41.7687, 34.5807, 65.9924, 0.07 ) }
    dend_18 { pt3dadd( 41.8554, 33.485, 66.0394, 0.22 ) }
    dend_18 { pt3dadd( 41.905, 32.7241, 66.09, 0.22 ) }
    dend_18 { pt3dadd( 42.0311, 30.6112, 66.2494, 0.07 ) }
    dend_18 { pt3dadd( 42.0586, 30.0583, 66.2991, 0.37 ) }
    dend_18 { pt3dadd( 42.0874, 29.4156, 66.3663, 0.59 ) }
    dend_18 { pt3dadd( 42.1487, 27.9156, 66.5474, 0.07 ) }
    dend_18 { pt3dadd( 42.1995, 26.6996, 66.7121, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 66/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -2.70517, -70.401, 68.9486, 0.15 ) }
    dend_16 { pt3dadd( -3.90847, -71.1067, 69.646, 0.15 ) }
    dend_16 { pt3dadd( -5.10323, -71.7813, 70.3012, 0.15 ) }
    dend_16 { pt3dadd( -6.21204, -72.3908, 70.8689, 0.15 ) }
    dend_16 { pt3dadd( -7.3565, -73.0123, 71.4372, 0.37 ) }
    dend_16 { pt3dadd( -8.6279, -73.69, 72.0512, 0.15 ) }
    dend_16 { pt3dadd( -9.91431, -74.3593, 72.6594, 0.07 ) }
    dend_16 { pt3dadd( -10.5627, -74.6959, 72.9698, 0.22 ) }
    dend_16 { pt3dadd( -12.5371, -75.7108, 73.8013, 0.15 ) }
    dend_16 { pt3dadd( -12.6793, -75.7776, 73.8554, 0.59 ) }
    dend_16 { pt3dadd( -13.5886, -76.1849, 74.1993, 1.11 ) }
    dend_16 { pt3dadd( -13.9994, -76.3701, 74.3548, 0.81 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 78/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.70517, -70.401, 68.9486, 0.59 ) }
    dend_15 { pt3dadd( -2.63922, -71.1744, 69.2664, 0.59 ) }
    dend_15 { pt3dadd( -2.59732, -71.7363, 69.509, 0.96 ) }
    dend_15 { pt3dadd( -2.48776, -72.6074, 69.8621, 1.47 ) }
    dend_15 { pt3dadd( -2.38489, -73.1879, 70.0715, 1.47 ) }
    dend_15 { pt3dadd( -2.15277, -74.225, 70.4124, 0.22 ) }
    dend_15 { pt3dadd( -2.07254, -74.6136, 70.5513, 0.15 ) }
    dend_15 { pt3dadd( -2.01734, -74.9816, 70.7146, 0.15 ) }
    dend_15 { pt3dadd( -1.93703, -75.6058, 71.0291, 0.15 ) }
    dend_15 { pt3dadd( -1.8764, -76.1346, 71.3129, 0.37 ) }
    dend_15 { pt3dadd( -1.81573, -76.6663, 71.646, 0.37 ) }
    dend_15 { pt3dadd( -1.69846, -77.5983, 72.3409, 0.22 ) }
    dend_15 { pt3dadd( -1.61782, -78.125, 72.7872, 0.22 ) }
    dend_15 { pt3dadd( -1.565, -78.4348, 73.0632, 0.96 ) }
    dend_15 { pt3dadd( -1.41492, -79.2022, 73.7841, 2.06 ) }
    dend_15 { pt3dadd( -1.24394, -79.9335, 74.5018, 1.11 ) }
    dend_15 { pt3dadd( -0.984546, -80.9011, 75.4722, 0.22 ) }
    dend_15 { pt3dadd( -0.746683, -81.6431, 76.2126, 0.22 ) }
    dend_15 { pt3dadd( -0.647213, -81.974, 76.5396, 0.22 ) }
    dend_15 { pt3dadd( -0.577862, -82.2387, 76.8006, 0.22 ) }
    dend_15 { pt3dadd( -0.529199, -82.4668, 77.031, 0.22 ) }
    dend_15 { pt3dadd( -0.504184, -82.8092, 77.3566, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_15 { pt3dadd( -0.543184, -83.1913, 77.7049, 0.22 ) }
    dend_15 { pt3dadd( -0.655192, -83.7821, 78.2342, 0.22 ) }
    dend_15 { pt3dadd( -0.755849, -84.3065, 78.6743, 0.22 ) }
    dend_15 { pt3dadd( -0.815474, -84.6614, 78.9462, 0.66 ) }
    dend_15 { pt3dadd( -0.904068, -85.4056, 79.474, 1.11 ) }
    dend_15 { pt3dadd( -0.998136, -86.5196, 80.2369, 0.29 ) }
    dend_15 { pt3dadd( -1.08104, -87.4907, 80.8933, 0.22 ) }
    dend_15 { pt3dadd( -1.15094, -88.3012, 81.4445, 0.22 ) }
    dend_15 { pt3dadd( -1.19877, -88.6737, 81.6946, 0.29 ) }
    dend_15 { pt3dadd( -1.33777, -89.6023, 82.3069, 0.22 ) }
    dend_15 { pt3dadd( -1.40352, -90.0217, 82.5818, 0.96 ) }
    dend_15 { pt3dadd( -1.52567, -90.7342, 83.0464, 1.84 ) }
    dend_15 { pt3dadd( -1.75059, -91.9054, 83.8218, 0.29 ) }
    dend_15 { pt3dadd( -1.95344, -92.8141, 84.4754, 0.22 ) }
    dend_15 { pt3dadd( -2.08755, -93.3997, 84.9227, 0.22 ) }
    dend_15 { pt3dadd( -2.16681, -93.768, 85.2088, 0.22 ) }
    dend_15 { pt3dadd( -2.2183, -94.1342, 85.4787, 0.37 ) }
    dend_15 { pt3dadd( -2.24694, -94.7772, 85.9062, 0.52 ) }
    dend_15 { pt3dadd( -2.22739, -95.5631, 86.3327, 0.29 ) }
    dend_15 { pt3dadd( -2.16741, -96.2679, 86.6694, 0.29 ) }
    dend_15 { pt3dadd( -2.13041, -96.6893, 86.8413, 0.29 ) }
    dend_15 { pt3dadd( -2.04591, -97.5244, 87.1525, 0.44 ) }
    dend_15 { pt3dadd( -1.91495, -98.5063, 87.4908, 0.52 ) }
    dend_15 { pt3dadd( -1.69853, -99.885, 87.9218, 0.15 ) }
    dend_15 { pt3dadd( -1.57776, -100.577, 88.1253, 0.59 ) }
    dend_15 { pt3dadd( -1.38676, -101.705, 88.483, 1.7 ) }
    dend_15 { pt3dadd( -1.17429, -103.077, 88.9808, 0.15 ) }
    dend_15 { pt3dadd( -1.08101, -103.714, 89.2565, 0.44 ) }
    dend_15 { pt3dadd( -1.01036, -104.146, 89.4612, 0.44 ) }
    dend_15 { pt3dadd( -0.902229, -104.754, 89.7835, 0.07 ) }
    dend_15 { pt3dadd( -0.816876, -105.279, 90.0781, 0.07 ) }
    dend_15 { pt3dadd( -0.775779, -105.673, 90.3249, 0.07 ) }
    dend_15 { pt3dadd( -0.761752, -106.208, 90.6797, 0.29 ) }
    dend_15 { pt3dadd( -0.789736, -107.092, 91.2765, 0.52 ) }
    dend_15 { pt3dadd( -0.816919, -107.722, 91.7094, 0.22 ) }
    dend_15 { pt3dadd( -0.843343, -108.25, 92.0791, 0.22 ) }
    dend_15 { pt3dadd( -0.874432, -108.83, 92.4976, 0.37 ) }
    dend_15 { pt3dadd( -0.904484, -109.379, 92.9284, 0.74 ) }
    dend_15 { pt3dadd( -0.971516, -110.148, 93.5988, 1.33 ) }
    dend_15 { pt3dadd( -1.08027, -110.89, 94.3204, 0.22 ) }
    dend_15 { pt3dadd( -1.18348, -111.414, 94.8563, 0.15 ) }
    dend_15 { pt3dadd( -1.27197, -111.804, 95.2718, 0.29 ) }
    dend_15 { pt3dadd( -1.39238, -112.331, 95.8502, 0.15 ) }
    dend_15 { pt3dadd( -1.50237, -112.743, 96.308, 0.59 ) }
    dend_15 { pt3dadd( -1.63001, -113.149, 96.7988, 0.74 ) }
    dend_15 { pt3dadd( -1.85442, -113.705, 97.5038, 0.07 ) }
    dend_15 { pt3dadd( -2.07405, -114.21, 98.1629, 0.15 ) }
    dend_15 { pt3dadd( -2.23363, -114.565, 98.631, 0.15 ) }
    dend_15 { pt3dadd( -2.36736, -114.858, 99.0109, 0.15 ) }
    dend_15 { pt3dadd( -2.53211, -115.19, 99.4298, 0.15 ) }
    dend_15 { pt3dadd( -2.78142, -115.658, 100.001, 0.29 ) }
    dend_15 { pt3dadd( -3.00659, -116.027, 100.448, 0.74 ) }
    dend_15 { pt3dadd( -3.36795, -116.576, 101.087, 1.03 ) }
    dend_15 { pt3dadd( -3.73767, -117.132, 101.699, 0.29 ) }
    dend_15 { pt3dadd( -4.24786, -117.923, 102.564, 0.22 ) }
    dend_15 { pt3dadd( -4.56679, -118.431, 103.089, 0.88 ) }
    dend_15 { pt3dadd( -4.92781, -118.992, 103.682, 1.33 ) }
    dend_15 { pt3dadd( -5.25392, -119.47, 104.198, 1.47 ) }
    dend_15 { pt3dadd( -5.88786, -120.345, 105.184, 0.22 ) }
    dend_15 { pt3dadd( -6.22665, -120.778, 105.697, 0.22 ) }
    dend_15 { pt3dadd( -6.61699, -121.27, 106.303, 1.03 ) }
    dend_15 { pt3dadd( -7.03905, -121.783, 106.95, 1.55 ) }
    dend_15 { pt3dadd( -7.64156, -122.527, 107.883, 0.74 ) }
    dend_15 { pt3dadd( -8.1974, -123.298, 108.829, 0.22 ) }
    dend_15 { pt3dadd( -8.46368, -123.735, 109.32, 0.22 ) }
    dend_15 { pt3dadd( -8.70046, -124.157, 109.762, 0.22 ) }
    dend_15 { pt3dadd( -8.95456, -124.681, 110.282, 0.15 ) }
    dend_15 { pt3dadd( -9.15773, -125.234, 110.764, 0.37 ) }
    dend_15 { pt3dadd( -9.35111, -126.031, 111.383, 0.15 ) }
    dend_15 { pt3dadd( -9.4382, -126.666, 111.812, 0.15 ) }
    dend_15 { pt3dadd( -9.49136, -127.544, 112.374, 0.22 ) }
    dend_15 { pt3dadd( -9.50186, -127.954, 112.622, 0.15 ) }
    dend_15 { pt3dadd( -9.49282, -128.59, 112.999, 0.15 ) }
    dend_15 { pt3dadd( -9.46031, -128.989, 113.23, 0.74 ) }
    dend_15 { pt3dadd( -9.38391, -129.477, 113.503, 0.88 ) }
    dend_15 { pt3dadd( -9.11855, -130.495, 114.076, 0.15 ) }
    dend_15 { pt3dadd( -9.0058, -130.885, 114.298, 0.22 ) }
    dend_15 { pt3dadd( -8.92281, -131.334, 114.61, 0.22 ) }
    dend_15 { pt3dadd( -8.86994, -132.047, 115.196, 0.22 ) }
    dend_15 { pt3dadd( -8.87069, -132.242, 115.376, 0.22 ) }
    dend_15 { pt3dadd( -8.90571, -132.673, 115.801, 0.88 ) }
    dend_15 { pt3dadd( -9.04182, -133.338, 116.487, 1.84 ) }
    dend_15 { pt3dadd( -9.35796, -134.288, 117.513, 0.15 ) }
    dend_15 { pt3dadd( -9.59007, -134.843, 118.085, 0.15 ) }
    dend_15 { pt3dadd( -9.7978, -135.253, 118.473, 0.29 ) }
    dend_15 { pt3dadd( -10.0867, -135.878, 119.039, 0.74 ) }
    dend_15 { pt3dadd( -10.3166, -136.456, 119.541, 1.11 ) }
    dend_15 { pt3dadd( -10.4975, -137.038, 120.026, 0.52 ) }
    dend_15 { pt3dadd( -10.7157, -137.87, 120.712, 0.22 ) }
    dend_15 { pt3dadd( -11.076, -139.112, 121.832, 0.29 ) }
    dend_15 { pt3dadd( -11.3572, -140.053, 122.768, 0.15 ) }
    dend_15 { pt3dadd( -11.5041, -140.553, 123.311, 0.37 ) }
    dend_15 { pt3dadd( -11.686, -141.162, 124.048, 1.18 ) }
    dend_15 { pt3dadd( -11.8968, -141.959, 125.116, 0.44 ) }
    dend_15 { pt3dadd( -12.0596, -142.591, 126.113, 0.29 ) }
    dend_15 { pt3dadd( -12.1575, -143.014, 126.851, 0.15 ) }
    dend_15 { pt3dadd( -12.2524, -143.338, 127.437, 0.88 ) }
    dend_15 { pt3dadd( -12.391, -143.808, 128.306, 1.03 ) }
    dend_15 { pt3dadd( -12.5585, -144.441, 129.548, 0.22 ) }
    dend_15 { pt3dadd( -12.6485, -145.027, 130.777, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -12.6721, -145.298, 131.381, 0.59 ) }
    dend_15 { pt3dadd( -12.698, -145.601, 132.091, 0.96 ) }
    dend_15 { pt3dadd( -12.7493, -145.969, 133.081, 0.37 ) }
    dend_15 { pt3dadd( -12.8396, -146.371, 134.406, 0.15 ) }
    dend_15 { pt3dadd( -12.9442, -146.603, 135.468, 0.59 ) }
    dend_15 { pt3dadd( -13.0172, -146.707, 136.112, 1.77 ) }
    dend_15 { pt3dadd( -13.2151, -146.907, 137.741, 0.22 ) }
    dend_15 { pt3dadd( -13.3336, -147.016, 138.775, 0.22 ) }
    dend_15 { pt3dadd( -13.4371, -147.087, 139.518, 0.37 ) }
    dend_15 { pt3dadd( -13.5666, -147.175, 140.232, 0.37 ) }
    dend_15 { pt3dadd( -13.6757, -147.267, 140.784, 0.37 ) }
    dend_15 { pt3dadd( -13.8069, -147.408, 141.538, 0.81 ) }
    dend_15 { pt3dadd( -13.877, -147.568, 142.208, 0.81 ) }
    dend_15 { pt3dadd( -13.8858, -147.96, 143.291, 0.29 ) }
    dend_15 { pt3dadd( -13.8105, -148.258, 143.954, 0.29 ) }
    dend_15 { pt3dadd( -13.6481, -148.507, 144.438, 0.29 ) }
    dend_15 { pt3dadd( -13.5146, -148.627, 144.671, 0.29 ) }
    dend_15 { pt3dadd( -12.87, -149.037, 145.549, 0.29 ) }
    dend_15 { pt3dadd( -12.5769, -149.198, 145.892, 0.44 ) }
    dend_15 { pt3dadd( -12.0201, -149.497, 146.518, 0.44 ) }
    dend_15 { pt3dadd( -11.294, -149.917, 147.419, 0.81 ) }
    dend_15 { pt3dadd( -10.736, -150.276, 148.258, 0.81 ) }
    dend_15 { pt3dadd( -10.3636, -150.567, 148.958, 0.81 ) }
    dend_15 { pt3dadd( -10.1942, -150.735, 149.396, 0.22 ) }
    dend_15 { pt3dadd( -9.87947, -151.126, 150.462, 0.22 ) }
    dend_15 { pt3dadd( -9.63209, -151.574, 151.697, 0.22 ) }
    dend_15 { pt3dadd( -9.48848, -151.999, 152.814, 0.81 ) }
    dend_15 { pt3dadd( -9.40573, -152.43, 153.852, 0.52 ) }
    dend_15 { pt3dadd( -9.36859, -153.147, 155.361, 0.22 ) }
    dend_15 { pt3dadd( -9.39301, -153.489, 155.987, 0.22 ) }
    dend_15 { pt3dadd( -9.4587, -153.778, 156.421, 0.52 ) }
    dend_15 { pt3dadd( -9.68712, -154.339, 157.09, 0.15 ) }
    dend_15 { pt3dadd( -9.8509, -154.619, 157.351, 0.59 ) }
    dend_15 { pt3dadd( -10.3844, -155.387, 157.916, 0.15 ) }
    dend_15 { pt3dadd( -10.8477, -155.968, 158.208, 0.37 ) }
    dend_15 { pt3dadd( -11.4059, -156.617, 158.471, 0.15 ) }
    dend_15 { pt3dadd( -11.9535, -157.16, 158.658, 0.37 ) }
    dend_15 { pt3dadd( -12.3558, -157.445, 158.73, 0.37 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 38/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 151.267, 178.018, 40.3181, 0.96 ) }
    dend_31 { pt3dadd( 151.972, 178.717, 40.3917, 0.96 ) }
    dend_31 { pt3dadd( 152.457, 179.247, 40.4427, 1.25 ) }
    dend_31 { pt3dadd( 152.893, 179.777, 40.4888, 0.66 ) }
    dend_31 { pt3dadd( 153.157, 180.125, 40.5171, 0.22 ) }
    dend_31 { pt3dadd( 153.474, 180.555, 40.551, 0.15 ) }
    dend_31 { pt3dadd( 153.679, 180.824, 40.5728, 0.37 ) }
    dend_31 { pt3dadd( 154.093, 181.4, 40.6168, 0.15 ) }
    dend_31 { pt3dadd( 154.393, 181.796, 40.6485, 0.37 ) }
    dend_31 { pt3dadd( 154.624, 182.073, 40.6726, 0.88 ) }
    dend_31 { pt3dadd( 154.91, 182.368, 40.6849, 0.88 ) }
    dend_31 { pt3dadd( 155.584, 182.957, 40.6413, 0.22 ) }
    dend_31 { pt3dadd( 156.052, 183.331, 40.6024, 0.22 ) }
    dend_31 { pt3dadd( 156.532, 183.661, 40.5518, 0.22 ) }
    dend_31 { pt3dadd( 156.866, 183.864, 40.5082, 0.22 ) }
    dend_31 { pt3dadd( 157.583, 184.262, 40.3872, 1.25 ) }
    dend_31 { pt3dadd( 158.337, 184.645, 40.2075, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 55/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 151.267, 178.018, 40.3181, 0.29 ) }
    dend_28 { pt3dadd( 151.377, 179.314, 40.7036, 0.29 ) }
    dend_28 { pt3dadd( 151.539, 179.947, 40.8633, 0.22 ) }
    dend_28 { pt3dadd( 151.72, 180.468, 40.9739, 0.66 ) }
    dend_28 { pt3dadd( 152.019, 181.239, 41.1122, 0.22 ) }
    dend_28 { pt3dadd( 152.334, 181.989, 41.2317, 0.15 ) }
    dend_28 { pt3dadd( 152.625, 182.69, 41.3321, 0.15 ) }
    dend_28 { pt3dadd( 153.025, 183.577, 41.4153, 0.15 ) }
    dend_28 { pt3dadd( 153.467, 184.512, 41.463, 0.22 ) }
    dend_28 { pt3dadd( 153.887, 185.36, 41.4763, 0.29 ) }
    dend_28 { pt3dadd( 154.254, 186.063, 41.4687, 0.22 ) }
    dend_28 { pt3dadd( 154.666, 186.77, 41.4442, 0.29 ) }
    dend_28 { pt3dadd( 155.326, 187.702, 41.4, 0.22 ) }
    dend_28 { pt3dadd( 155.966, 188.492, 41.3575, 0.66 ) }
    dend_28 { pt3dadd( 156.355, 188.94, 41.3355, 1.11 ) }
    dend_28 { pt3dadd( 156.844, 189.488, 41.3061, 1.18 ) }
    dend_28 { pt3dadd( 157.523, 190.256, 41.2537, 0.37 ) }
    dend_28 { pt3dadd( 158.264, 191.102, 41.1944, 0.37 ) }
    dend_28 { pt3dadd( 158.845, 191.857, 41.1516, 0.22 ) }
    dend_28 { pt3dadd( 159.332, 192.693, 41.1309, 0.22 ) }
    dend_28 { pt3dadd( 159.623, 193.33, 41.1131, 0.22 ) }
    dend_28 { pt3dadd( 159.822, 193.869, 41.1033, 0.59 ) }
    dend_28 { pt3dadd( 159.942, 194.264, 41.1097, 1.03 ) }
    dend_28 { pt3dadd( 160.179, 195.153, 41.1524, 1.18 ) }
    dend_28 { pt3dadd( 160.637, 196.828, 41.3192, 0.44 ) }
    dend_28 { pt3dadd( 160.848, 197.544, 41.4102, 0.88 ) }
    dend_28 { pt3dadd( 161.085, 198.349, 41.5412, 1.7 ) }
    dend_28 { pt3dadd( 161.359, 199.28, 41.7215, 2.29 ) }
    dend_28 { pt3dadd( 161.608, 200.115, 41.9017, 2.29 ) }
    dend_28 { pt3dadd( 161.797, 200.728, 42.0621, 1.99 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 85/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 161.797, 200.728, 42.0621, 0.22 ) }
    dend_30 { pt3dadd( 163.16, 203.021, 42.1987, 0.22 ) }
    dend_30 { pt3dadd( 163.8, 204.097, 42.2629, 0.22 ) }
    dend_30 { pt3dadd( 164.477, 205.236, 42.3308, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 161.797, 200.728, 42.0621, 0.29 ) }
    dend_29 { pt3dadd( 162.757, 201.41, 42.2259, 0.29 ) }
    dend_29 { pt3dadd( 163.395, 201.863, 42.3347, 0.29 ) }
    dend_29 { pt3dadd( 164.038, 202.32, 42.4443, 0.29 ) }
    dend_29 { pt3dadd( 164.581, 202.706, 42.537, 0.52 ) }
    dend_29 { pt3dadd( 165.135, 203.099, 42.6315, 0.52 ) }
    dend_29 { pt3dadd( 166.051, 203.75, 42.7879, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_2 = new SectionList()
    dend_58 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_58, dend_35, dend_0, dend_62, dend_59, dend_47, dend_36, dend_10, dend_1, dend_66, dend_63, dend_61, dend_60, dend_53, dend_48, dend_42, dend_37, dend_20, dend_11, dend_7, dend_2, dend_68, dend_67, dend_65, dend_64, dend_57, dend_54, dend_50, dend_49, dend_46, dend_43, dend_39, dend_38, dend_24, dend_21, dend_13, dend_12, dend_9, dend_8, dend_6, dend_3, dend_56, dend_55, dend_52, dend_51, dend_45, dend_44, dend_41, dend_40, dend_32, dend_25, dend_23, dend_22, dend_17, dend_14, dend_5, dend_4, dend_34, dend_33, dend_27, dend_26, dend_19, dend_18, dend_16, dend_15, dend_31, dend_28, dend_30, dend_29]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_47 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_61 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_60 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_42 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_68 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_67 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_65 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_64 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_57 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_54 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_49 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_32 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_25 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_34 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_33 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_27 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_26 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_19 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_18 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_15 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_58 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_36 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_11 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_62 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_37 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_66 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_46 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_16 OneSecGrp_SectionRef_67.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_45 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_56 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_31 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_55 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_28 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_5 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_29 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_51 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_4 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_35, dend_35, dend_35, dend_35, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_28 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_59 nseg = 9
    dend_47 nseg = 3
    dend_1 nseg = 3
    dend_63 nseg = 9
    dend_61 nseg = 5
    dend_60 nseg = 7
    dend_53 nseg = 5
    dend_48 nseg = 5
    dend_42 nseg = 5
    dend_68 nseg = 9
    dend_67 nseg = 11
    dend_65 nseg = 13
    dend_64 nseg = 9
    dend_57 nseg = 9
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_49 nseg = 5
    dend_43 nseg = 3
    dend_39 nseg = 9
    dend_38 nseg = 17
    dend_21 nseg = 9
    dend_12 nseg = 17
    dend_9 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 13
    dend_3 nseg = 7
    dend_32 nseg = 3
    dend_25 nseg = 3
    dend_23 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 5
    dend_14 nseg = 5
    dend_34 nseg = 13
    dend_33 nseg = 7
    dend_27 nseg = 7
    dend_26 nseg = 13
    dend_19 nseg = 5
    dend_18 nseg = 3
    dend_15 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BTC_9e335e53f6_0_0


