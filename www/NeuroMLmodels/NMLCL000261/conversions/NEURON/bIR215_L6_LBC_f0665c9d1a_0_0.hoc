// Cell: bIR215_L6_LBC_f0665c9d1a_0_0
/*
{
  "id" : "bIR215_L6_LBC_f0665c9d1a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.38674, -8.58166, 0.0, 3.0615", "1.23261, -7.73621, 0.0, 5.13448", "1.07848, -6.89077, 0.0, 6.50208", "0.924343, -6.04533, 0.0, 7.8079", "0.770211, -5.19988, 0.0, 9.46525", "0.616078, -4.35444, 0.0, 10.7445", "0.461945, -3.509, 0.0, 11.53", "0.307812, -2.66355, 0.0, 11.964", "0.15368, -1.81811, 0.0, 12.1762", "-4.52973E-4, -0.972666, 0.0, 12.4031", "-0.154586, -0.127223, 0.0, 13.0722", "-0.308718, 0.71822, 0.0, 13.1077", "-0.462851, 1.56366, 0.0, 12.7375", "-0.616984, 2.40911, 0.0, 12.4776", "-0.771117, 3.25455, 0.0, 12.0451", "-0.925249, 4.09999, 0.0, 11.2537", "-1.07938, 4.94544, 0.0, 9.96214", "-1.23351, 5.79088, 0.0, 7.85651", "-1.38765, 6.63632, 0.0, 6.70863", "-1.54178, 7.48177, 0.0, 5.30209", "-1.69591, 8.32721, 0.0, 3.29069" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-2.29925, 8.25877, -7.17, 0.86", "-4.70407, 9.37198, -7.17331, 0.86", "-6.06124, 9.86794, -7.01979, 0.86", "-7.30297, 10.2612, -6.65719, 0.86", "-8.68558, 10.7034, -6.01728, 0.86", "-10.6279, 11.3463, -5.03221, 0.86", "-11.1923, 11.5348, -4.73329, 0.86", "-13.41, 12.1901, -3.41701, 0.86", "-15.6655, 12.9275, -1.94761, 0.86", "-18.0393, 13.8094, -0.250075, 0.86", "-19.4227, 14.3984, 0.867828, 0.86", "-21.0953, 15.1861, 2.32975, 0.86", "-22.2467, 15.734, 3.37578, 0.86", "-23.2772, 16.2235, 4.26747, 0.86", "-23.8533, 16.483, 4.70816, 0.86", "-25.1247, 17.0002, 5.58801, 0.86", "-26.1319, 17.3707, 6.21774, 0.86", "-27.3874, 17.7662, 6.80744, 0.86", "-29.1249, 18.1767, 7.24815, 0.86", "-31.2825, 18.5984, 7.61937, 0.86", "-32.1024, 18.7426, 7.69128, 0.86", "-33.1799, 18.9346, 7.66048, 0.86", "-34.3988, 19.1821, 7.50707, 0.86", "-36.3591, 19.5914, 7.04788, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.18075, 7.60277, -7.84, 0.98", "3.10712, 9.62573, -3.55366, 0.98", "4.45957, 13.279, 3.95098, 1.35", "5.99199, 17.7835, 12.8874, 1.1", "6.86413, 20.3729, 17.9616, 0.86", "8.15706, 24.1194, 25.2547, 0.73", "8.42339, 24.8464, 26.679, 0.73", "8.56787, 25.3245, 27.6919, 0.73", "8.65274, 25.9138, 28.7709, 0.73", "8.62494, 26.3153, 29.9677, 0.73", "8.71444, 26.4307, 30.5957, 0.73", "9.27151, 26.4078, 32.2052, 0.73", "9.77068, 26.2839, 34.1597, 0.73", "9.97873, 26.2479, 35.636, 0.73", "9.98322, 26.3282, 36.5973, 0.73", "9.84496, 26.5977, 37.5039, 0.73", "9.6081, 27.0248, 38.2464, 0.73", "9.13736, 27.806, 39.4777, 0.73", "8.67275, 28.5057, 40.5491, 0.73", "8.26776, 29.0412, 41.3249, 0.73", "7.62739, 29.802, 42.3958, 0.73", "6.50905, 31.0906, 44.0856, 0.73", "3.83665, 34.2635, 47.7663, 0.73", "2.82752, 35.4533, 49.088, 0.73", "1.27941, 37.2721, 51.0273, 0.73", "0.605009, 38.1183, 51.8617, 0.73", "-0.192519, 39.2883, 52.8787, 0.73", "-1.27613, 41.3561, 54.2549, 0.73", "-1.62871, 44.5073, 56.1353, 0.73", "-1.36312, 44.9786, 56.7155, 0.73", "-0.741947, 45.6374, 57.9933, 0.73", "-0.143012, 46.2213, 59.3129, 0.73", "1.47797, 47.776, 63.1756, 0.61", "4.28352, 50.624, 70.4684, 0.86", "7.19256, 53.77, 78.166, 0.86", "9.88414, 56.8935, 85.5364, 0.86", "10.5349, 57.7563, 87.4542, 0.86", "11.407, 59.1663, 90.3603, 0.86", "12.7433, 61.8528, 95.549, 0.86", "13.3495, 63.311, 98.0047, 0.86", "13.6465, 64.0893, 99.1834, 0.86", "14.2618, 65.6549, 101.451, 0.86", "14.8231, 67.1553, 103.695, 0.86", "15.702, 70.1277, 108.404, 0.86", "16.0344, 72.1062, 111.837, 0.86", "16.0486, 73.5662, 114.544, 0.86", "15.8526, 75.1284, 117.421, 0.86", "15.3483, 77.0888, 120.795, 0.86", "14.5759, 79.0835, 123.786, 0.86", "13.646, 81.0263, 126.153, 0.86", "12.3105, 83.5237, 128.844, 0.86", "11.1552, 85.4232, 130.778, 0.86", "9.86097, 87.3598, 132.652, 0.86", "9.14692, 88.4471, 133.559, 0.86", "8.42879, 89.5869, 134.422, 0.86", "7.07771, 91.8082, 136.154, 0.86", "6.16097, 93.2859, 137.466, 0.86", "5.72247, 94.0329, 138.228, 0.86", "4.8343, 95.8911, 140.219, 0.86", "4.25952, 98.1093, 142.342, 0.86", "3.96739, 100.932, 144.954, 0.86", "3.91638, 102.525, 146.345, 0.86", "3.96787, 103.909, 147.529, 0.86", "4.25279, 107.008, 150.147, 0.86", "5.02839, 111.586, 153.953, 0.86", "5.73801, 114.289, 155.906, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-7.01925, 2.52902, -4.51, 1.59", "-11.5917, 3.79084, -4.51, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.22075, 5.05052, -12.12, 1.22", "6.22075, 5.05052, -12.12, 1.22", "8.99668, 6.58052, -12.7193, 1.22", "14.153, 9.42248, -13.8325, 1.47", "17.8796, 11.4764, -14.637, 1.71", "22.4033, 13.9697, -15.6136, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.85075, -9.66848, -0.0100002, 2.32", "2.06843, -10.0978, -0.0196725, 2.32", "8.19512, -22.182, -0.291898, 2.32", "9.09625, -23.9594, -0.331938, 2.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.56925, 6.11652, 0.0, 1.47", "-6.30381, 7.60145, -0.244576, 1.47", "-7.07889, 8.92086, -0.554077, 1.47", "-7.75265, 9.89854, -0.877041, 1.59", "-8.15954, 10.4295, -1.08518, 1.71", "-8.85729, 11.2278, -1.4375, 1.71", "-9.52251, 11.902, -1.72383, 1.59", "-10.1879, 12.429, -2.06559, 1.47", "-10.9971, 12.9364, -2.489, 1.47", "-11.4848, 13.1878, -2.71282, 1.47", "-12.2399, 13.541, -3.02467, 1.47", "-13.2923, 14.0012, -3.34749, 1.35", "-14.9286, 14.7545, -3.77456, 1.1", "-15.995, 15.278, -3.99436, 1.1", "-17.1825, 15.9054, -4.18433, 1.1", "-18.068, 16.5681, -4.27562, 1.1", "-19.0888, 17.5302, -4.30877, 1.1", "-19.6409, 18.105, -4.29835, 0.98", "-19.9955, 18.4886, -4.27426, 0.98", "-20.5126, 19.0664, -4.27625, 0.86", "-23.3344, 22.1073, -4.45829, 1.1", "-24.2417, 23.0808, -4.55663, 0.86", "-26.1148, 25.2166, -4.9674, 1.35", "-27.6986, 27.0621, -5.37568, 1.22", "-29.3843, 28.9946, -5.86898, 1.22", "-30.6143, 30.3846, -6.2749, 0.98", "-32.1612, 32.2382, -6.8722, 1.35", "-34.2296, 34.9605, -7.71159, 1.35", "-35.4639, 36.7182, -8.21057, 0.86", "-36.805, 38.683, -8.70629, 0.98", "-37.2843, 39.3771, -8.85133, 0.49", "-39.7194, 42.8038, -9.49632, 0.24", "-40.5666, 43.8392, -9.66568, 0.24", "-41.2202, 44.5331, -9.73208, 0.61", "-41.7341, 45.0682, -9.7882, 0.61", "-42.4447, 45.7567, -9.84561, 0.61", "-43.1073, 46.3132, -9.82117, 0.61", "-44.6489, 47.5535, -9.6398, 1.22", "-46.7267, 49.4311, -9.19896, 0.86", "-47.6227, 50.3645, -8.93864, 1.35", "-48.6571, 51.3674, -8.52863, 1.35", "-50.9198, 53.4243, -7.57571, 0.73", "-52.4921, 54.6831, -6.95139, 1.1", "-54.0375, 55.7423, -6.35048, 0.73", "-55.748, 56.7308, -5.81519, 1.47", "-60.1224, 59.0222, -4.81687, 0.73", "-61.837, 59.8297, -4.5458, 0.24", "-64.3728, 60.8509, -4.39199, 1.22", "-66.3586, 61.564, -4.408, 0.37", "-69.2834, 62.5959, -4.64827, 1.1", "-70.5096, 63.0538, -4.84104, 0.49", "-72.8184, 64.0854, -5.45262, 1.47", "-75.1122, 65.1645, -6.12282, 0.37", "-77.0239, 66.1304, -6.84973, 1.1", "-78.0783, 66.7026, -7.31299, 0.12", "-80.6327, 68.1681, -8.49309, 1.1", "-81.9547, 68.9734, -9.1332, 0.61", "-83.1615, 69.8035, -9.7641, 1.1", "-84.6956, 71.0198, -10.5439, 0.61", "-85.9763, 72.2693, -11.1799, 0.24", "-86.1994, 72.5281, -11.2913, 0.73", "-86.9812, 73.6356, -11.6242, 0.24", "-87.6611, 74.6878, -11.9022, 0.86", "-88.6458, 76.3937, -12.2835, 0.12", "-90.0422, 78.8908, -12.7466, 0.86", "-90.8337, 80.3961, -13.106, 0.24", "-92.215, 83.1384, -13.8116, 1.22", "-92.9256, 84.5939, -14.2146, 0.61", "-94.3632, 87.5186, -15.0557, 0.49", "-95.1966, 89.189, -15.516, 1.84", "-96.5491, 91.9533, -16.2386, 0.61", "-96.9437, 92.84, -16.4441, 0.98", "-97.3998, 93.9362, -16.6629, 0.12", "-97.8847, 95.1896, -16.8593, 0.49", "-98.6857, 97.436, -17.1602, 0.12", "-99.0642, 98.624, -17.2482, 0.37", "-99.4209, 99.7892, -17.2318, 0.12", "-99.8269, 101.254, -17.1973, 1.1", "-100.2, 102.845, -17.162, 0.24", "-100.307, 103.359, -17.1594, 0.49", "-100.524, 104.46, -17.1786, 0.49", "-100.783, 105.895, -17.2184, 0.12", "-100.855, 106.414, -17.2317, 0.24", "-101.018, 107.717, -17.2412, 0.24", "-101.134, 108.644, -17.2123, 0.24", "-101.265, 109.714, -17.1884, 0.24", "-101.342, 110.588, -17.1772, 0.24", "-101.387, 111.754, -17.174, 0.24", "-105.236, 117.226, -16.4558, 0.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001480306009,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.69591, 8.32721, 0.0, 0.638996", "-4.38621, 23.084, 0.0, 0.638996", "-7.07651, 37.8408, 0.0, 0.638996" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "5.73801, 114.289, 155.906, 0.73", "6.09149, 115.472, 156.655, 0.73", "6.55043, 117.5, 157.905, 0.73", "7.2184, 120.966, 160.077, 0.73", "7.79173, 124.253, 162.116, 0.73", "8.07615, 126.016, 163.195, 0.73", "8.74213, 130.933, 166.117, 0.37", "8.98601, 133.993, 167.976, 0.49", "9.03715, 136.274, 169.389, 0.49", "8.95386, 138.008, 170.443, 0.49", "8.86753, 139.593, 171.302, 0.49", "8.7564, 141.831, 172.393, 0.49", "8.65228, 144.984, 173.683, 0.49", "8.58942, 146.998, 174.407, 0.49", "8.50985, 150.219, 175.273, 0.12", "8.48843, 153.663, 175.967, 0.12", "8.50898, 155.119, 176.203, 0.12", "8.5557, 158.75, 176.805, 0.24", "8.57621, 161.004, 177.225, 0.24", "8.57409, 164.281, 178.031, 0.49", "8.61307, 166.405, 178.788, 0.49", "8.6666, 167.929, 179.576, 0.49", "9.03854, 171.622, 182.264, 0.49", "9.33565, 173.605, 184.146, 0.49", "9.58334, 174.802, 185.586, 0.49", "9.94804, 176.071, 187.57, 0.49", "10.2969, 176.939, 189.203, 0.49", "10.727, 177.544, 190.489, 0.49" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "5.73801, 114.289, 155.906, 0.73", "7.04581, 117.369, 158.262, 0.73", "7.57386, 118.807, 159.358, 0.73", "8.70063, 122.172, 161.952, 0.73", "9.24825, 123.807, 163.213, 0.73", "10.5743, 127.767, 166.265, 0.73", "11.3618, 130.119, 168.078, 0.73", "11.7329, 131.621, 169.227, 0.73", "11.8982, 132.46, 169.924, 0.73" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-11.5917, 3.79084, -4.51, 1.22", "-13.9351, 4.08126, -4.19338, 1.22", "-15.7076, 4.30168, -3.87686, 0.98", "-17.3946, 4.57122, -3.49907, 0.98", "-18.8439, 4.88349, -3.11539, 0.98", "-21.2327, 5.57696, -2.28123, 0.98", "-23.2193, 6.31141, -1.39512, 0.98", "-24.3046, 6.82305, -0.701414, 0.98", "-25.1551, 7.28205, -0.0696848, 0.98", "-25.9189, 7.88382, 0.633043, 0.98", "-27.0447, 9.19597, 2.05612, 0.98", "-27.4393, 9.97914, 2.90211, 1.35", "-28.0661, 12.0715, 5.11069, 1.35" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.5917, 3.79084, -4.51, 1.35", "-14.1563, 2.13872, -3.07767, 1.35", "-16.2557, 0.72802, -2.03577, 1.1", "-19.2304, -1.49236, -0.194054, 1.1", "-21.9827, -3.37024, 1.75673, 1.1", "-23.4855, -4.36018, 2.88073, 1.1", "-25.6996, -5.83302, 4.63122, 1.1", "-26.3881, -6.30857, 5.23279, 1.1", "-30.1159, -8.94407, 8.95466, 1.1", "-33.0176, -10.8063, 12.5432, 1.1", "-34.4126, -11.7651, 14.5968, 1.1", "-35.8473, -12.8664, 17.0484, 1.1", "-36.5962, -13.3702, 18.4674, 1.1", "-38.2777, -14.3819, 21.7842, 0.98", "-41.9086, -16.4046, 29.0632, 0.98", "-43.4423, -17.2123, 32.3297, 0.98", "-46.0207, -18.3737, 37.77, 0.86", "-49.506, -19.6921, 44.7392, 0.86", "-50.0105, -19.8554, 45.6596, 0.86", "-51.6684, -20.3549, 48.3717, 0.86", "-53.4957, -20.928, 51.144, 0.86", "-54.9414, -21.2681, 53.1252, 0.86", "-57.2262, -21.8343, 55.9376, 0.86", "-58.8891, -22.4249, 57.9922, 0.86", "-61.5926, -23.5279, 61.5365, 0.86", "-62.9059, -24.1155, 63.4038, 0.86", "-64.3489, -24.8143, 65.554, 0.86", "-65.3197, -25.2831, 67.156, 0.86", "-67.1735, -26.0821, 70.7303, 0.86", "-68.0504, -26.4022, 72.6172, 0.86", "-69.2164, -26.6714, 75.5176, 0.86", "-70.182, -26.8228, 77.9389, 0.86", "-71.029, -26.9524, 80.0388, 0.86", "-73.0314, -27.2098, 84.6248, 0.86", "-73.513, -27.2478, 85.6791, 0.86", "-76.1938, -27.3622, 91.2972, 0.86", "-77.6015, -27.4576, 94.1456, 0.86", "-78.9477, -27.6141, 96.7483, 0.86", "-80.6984, -27.8083, 99.7919, 0.86", "-83.684, -28.1283, 104.485, 0.86", "-84.803, -28.2146, 106.177, 0.86", "-87.3411, -28.2754, 109.719, 0.86", "-89.3503, -28.2081, 112.59, 0.86", "-92.5846, -27.9442, 117.117, 0.86", "-93.9655, -27.8286, 118.999, 0.86", "-95.1073, -27.7373, 120.475, 0.86", "-97.7332, -27.3715, 123.859, 0.86", "-99.8944, -26.9283, 126.495, 0.86", "-101.258, -26.6081, 128.128, 0.86", "-103.712, -25.9236, 131.049, 0.86", "-105.511, -25.4802, 133.07, 0.86", "-108.457, -24.9229, 136.184, 0.86", "-110.228, -24.6812, 137.982, 0.86", "-112.351, -24.477, 140.05, 0.86", "-116.524, -24.3265, 144.138, 0.86", "-119.407, -24.4743, 147.06, 0.86", "-121.603, -24.826, 149.31, 0.86", "-124.466, -25.6282, 152.238, 0.86", "-126.936, -26.4911, 154.788, 0.86", "-128.382, -27.0411, 156.257, 0.86", "-130.962, -28.0785, 158.964, 0.86", "-133.546, -29.1289, 161.651, 0.86", "-135.743, -30.1283, 163.872, 0.86", "-139.076, -31.7786, 167.166, 0.86", "-140.953, -32.7143, 168.997, 0.86", "-143.537, -33.9223, 171.468, 0.86", "-146.681, -35.3329, 174.397, 0.86", "-148.971, -36.4116, 176.629, 0.86", "-150.851, -37.3528, 178.414, 0.86" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "22.4033, 13.9697, -15.6136, 0.73", "23.0341, 16.8831, -16.0433, 0.73", "23.4339, 18.9002, -16.2776, 0.86", "23.7365, 20.7046, -16.2529, 0.86", "23.9268, 22.016, -16.1787, 0.86", "24.2091, 24.1551, -16.0561, 0.73", "24.6151, 26.6491, -15.9495, 0.73", "24.8297, 27.5814, -15.9157, 0.73", "26.1621, 30.5621, -17.0949, 0.73", "27.0485, 31.8744, -18.1686, 0.73", "27.8749, 32.8852, -19.3493, 0.73", "28.7971, 33.8945, -20.7292, 0.73", "30.5485, 35.6553, -23.3237, 0.73", "34.0699, 39.0578, -28.5157, 0.73", "34.461, 39.4011, -29.0677, 0.73", "36.3034, 40.8928, -31.4593, 0.73", "37.127, 41.5489, -32.4673, 0.73", "37.9513, 42.2707, -33.4265, 0.73", "39.0502, 43.3199, -34.4994, 0.73", "40.7057, 44.9704, -35.8186, 0.73", "42.2544, 46.6738, -37.0461, 0.73", "43.2012, 47.8286, -37.7483, 0.73", "44.2216, 49.2267, -38.5195, 0.73", "45.3686, 51.1578, -39.4325, 0.73", "45.7423, 51.993, -39.747, 0.73", "46.515, 54.1753, -40.4506, 0.73", "46.9895, 55.7273, -40.8745, 0.73", "47.3572, 57.0344, -41.2096, 0.73", "47.7595, 58.56, -41.5989, 0.49", "48.3881, 61.4666, -42.3272, 0.61", "52.4193, 66.1372, -46.8415, 0.61", "58.1847, 69.7468, -50.2781, 0.61", "64.0378, 71.6355, -54.7263, 0.61", "69.5955, 72.4802, -59.8131, 0.61", "75.3792, 74.6972, -64.2073, 0.61" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "22.4033, 13.9697, -15.6136, 1.35", "24.0759, 14.9347, -15.5725, 1.35" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.09625, -23.9594, -0.331938, 1.1", "8.67639, -33.5103, 1.03726, 1.1", "8.65528, -36.4913, 1.48888, 1.1", "8.89182, -41.7337, 2.4452, 1.1", "9.71798, -47.4378, 3.05131, 1.1", "9.88681, -48.3587, 3.11069, 1.1", "10.2781, -50.3012, 3.18179, 1.1", "10.8682, -52.4924, 3.12105, 1.1", "12.1941, -56.5994, 3.03579, 1.1", "15.215, -64.6053, 2.9336, 1.1", "18.0714, -71.363, 2.9113, 1.1", "19.5776, -74.7447, 2.90552, 1.1", "22.2901, -80.7378, 2.8932, 0.86", "25.0368, -87.0638, 2.89535, 0.86", "26.7026, -91.1013, 2.99296, 0.86", "28.9729, -97.1315, 3.41409, 0.86", "30.683, -101.573, 3.65884, 0.86", "31.3144, -103.375, 3.7647, 0.86", "33.0857, -108.963, 4.01496, 0.86", "34.6419, -114.482, 4.20877, 0.61", "35.7807, -118.967, 4.31415, 0.61", "36.568, -122.075, 4.44422, 0.61", "37.8517, -126.684, 4.74703, 0.61", "38.9329, -129.891, 4.99215, 0.61", "39.7158, -131.829, 5.15151, 0.61", "40.9699, -134.738, 5.3717, 0.24", "44.1589, -141.96, 5.94739, 0.37", "45.2541, -144.479, 6.1596, 0.37", "46.4995, -147.443, 6.41133, 0.37", "47.2373, -149.349, 6.54271, 0.37", "48.2312, -152.119, 6.632, 0.37", "48.9562, -154.041, 6.63946, 0.37", "49.9231, -156.541, 6.5277, 0.37", "51.2148, -159.988, 6.34755, 0.12", "52.4717, -163.531, 6.14225, 0.37", "53.217, -165.61, 5.97301, 0.37", "54.7557, -169.875, 5.77379, 0.61", "55.8581, -172.7, 5.73001, 0.61", "57.4235, -176.831, 5.74706, 0.61", "58.3964, -179.281, 5.90278, 0.61", "59.8745, -182.918, 6.31613, 0.12", "63.3287, -191.207, 7.59659, 0.61", "65.1099, -195.48, 8.44629, 0.61", "67.3741, -200.462, 9.6433, 1.22", "70.8982, -208.177, 11.858, 0.49", "72.1402, -211.009, 12.74, 0.49", "74.2117, -216.114, 14.4356, 0.61", "75.8662, -220.369, 15.9383, 0.12", "77.2791, -224.472, 17.5232, 0.49", "79.1956, -230.55, 20.1156, 0.49", "80.2006, -235.092, 22.2223, 0.49", "80.9384, -238.872, 24.0226, 0.37", "81.3805, -241.849, 25.4888, 0.24", "81.8461, -246.442, 27.874, 0.49", "82.0351, -251.063, 30.5528, 0.49", "82.1969, -256.844, 34.3913, 0.49" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "9.09625, -23.9594, -0.331938, 1.71", "9.05269, -29.7773, -3.17355, 1.71", "9.02172, -33.9132, -5.19363, 1.47", "8.98958, -38.2062, -7.29039, 1.71" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.07651, 37.8408, 0.0, 0.49", "-9.76681, 52.5975, 0.0, 0.49", "-12.4571, 67.3543, 0.0, 0.49" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-28.0661, 12.0715, 5.11069, 0.49", "-31.0213, 10.3105, 6.38783, 0.49", "-34.6015, 8.45476, 8.07156, 0.37", "-37.3254, 7.21647, 9.42523, 0.37", "-38.6021, 6.65953, 10.0673, 0.37", "-41.0087, 5.73345, 11.4091, 0.37", "-42.8715, 5.10087, 12.5531, 0.37", "-44.64, 4.68557, 13.765, 0.37", "-46.416, 4.41003, 15.0879, 0.37", "-48.5568, 4.18702, 16.7083, 0.37", "-52.9795, 3.84559, 20.0611, 0.37", "-55.8821, 3.69146, 22.2445, 0.37", "-57.7725, 3.65052, 23.6116, 0.37", "-61.7177, 3.68605, 26.2758, 0.37", "-63.8884, 3.75716, 27.6574, 0.37", "-66.4443, 3.89139, 29.1123, 0.37", "-68.8595, 3.9913, 30.2717, 0.37", "-73.0374, 4.08115, 32.0721, 0.37", "-75.4904, 4.06696, 33.0699, 0.37", "-77.6882, 4.00082, 33.9189, 0.37", "-81.6893, 3.74922, 35.5223, 0.37", "-84.7305, 3.47072, 36.7738, 0.37", "-86.7514, 3.23562, 37.6322, 0.37", "-89.3525, 2.9079, 38.7477, 0.37", "-91.8119, 2.62862, 39.7374, 0.37", "-96.0589, 2.19821, 41.2645, 0.37", "-98.4193, 1.97579, 42.069, 0.37", "-101.299, 1.74046, 43.0321, 0.37", "-104.752, 1.51421, 44.1178, 0.37", "-107.516, 1.3341, 45.0167, 0.37", "-111.656, 0.984174, 46.3332, 0.37", "-117.937, 0.204448, 48.1758, 0.37", "-122.119, -0.587201, 49.343, 0.37", "-125.803, -1.62015, 50.2981, 0.37", "-129.415, -3.03572, 51.2685, 0.37", "-132.648, -4.65783, 52.146, 0.37", "-135.199, -6.30236, 52.8356, 0.37", "-137.654, -8.19382, 53.5315, 0.37", "-140.311, -10.4456, 54.5744, 0.37", "-145.319, -14.6626, 56.7729, 0.37", "-147.743, -16.5453, 57.8242, 0.37", "-150.156, -18.2057, 58.907, 0.37", "-152.671, -19.724, 60.0653, 0.37", "-157.733, -22.5279, 62.5031, 0.37", "-162.768, -25.209, 64.9295, 0.37", "-165.993, -26.915, 66.3253, 0.37", "-170.137, -29.0435, 67.9947, 0.37", "-173.775, -30.8474, 69.2979, 0.37", "-179.15, -33.4768, 70.9468, 0.37" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-28.0661, 12.0715, 5.11069, 1.1", "-28.583, 15.1938, 3.57566, 1.1", "-29.4508, 20.437, 0.998003, 0.86", "-29.8039, 22.5701, -0.050665, 0.61", "-30.5691, 27.1931, -2.32341, 1.35", "-30.7172, 28.0881, -2.76343, 1.35" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "75.3792, 74.6972, -64.2073, 0.61", "81.7047, 81.8992, -70.0454, 0.61" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "75.3792, 74.6972, -64.2073, 0.61", "81.6782, 81.9607, -69.9711, 0.61", "89.1831, 87.6093, -76.0082, 0.61", "95.5986, 95.0797, -81.3792, 0.61", "101.84, 101.87, -87.7245, 0.61", "108.828, 109.761, -91.6054, 0.61" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "24.0759, 14.9347, -15.5725, 0.98", "27.0726, 20.6544, -7.50052, 0.98", "27.5492, 21.8256, -5.97166, 0.98", "28.3735, 24.5461, -2.71647, 0.98", "28.7073, 26.0511, -1.10809, 0.98", "29.175, 28.5857, 1.36452, 0.98", "29.729, 31.9004, 4.46514, 0.98", "29.8202, 32.924, 5.24555, 0.98", "29.9094, 34.5375, 6.41496, 0.98", "29.9669, 36.7794, 7.87784, 0.98", "30.1413, 39.5341, 9.68574, 0.98", "30.5174, 41.9572, 11.2623, 0.98", "30.7662, 42.9996, 11.936, 0.98", "31.2163, 44.8564, 13.2388, 0.98", "31.7774, 47.3118, 15.1287, 0.98", "32.1145, 48.834, 16.3051, 0.98", "32.5207, 50.9914, 17.8169, 0.98", "33.0782, 54.3459, 19.9225, 0.98", "33.5015, 57.3577, 21.7056, 0.98", "34.0326, 61.5262, 24.0649, 0.98", "34.3263, 64.0894, 25.446, 0.61", "34.6435, 67.7399, 27.3096, 0.37", "34.7703, 70.5918, 28.7945, 0.61", "34.8074, 73.6864, 30.4009, 0.73", "34.7976, 73.9964, 30.5664, 0.73", "34.587, 76.1073, 31.8787, 0.73", "34.179, 78.5782, 33.6341, 0.73", "33.4088, 82.5674, 36.5972, 0.73", "33.2148, 83.6801, 37.3985, 0.73", "32.9463, 85.7249, 38.7827, 0.73", "32.677, 88.5599, 40.5745, 0.73", "32.5576, 91.9542, 42.3998, 0.73", "32.6798, 94.9564, 43.7793, 0.73", "33.0977, 98.4121, 45.134, 0.73", "33.648, 101.663, 46.3445, 0.73", "34.0487, 103.512, 47.0145, 0.73", "35.0698, 107.668, 48.426, 0.73", "35.8449, 110.367, 49.367, 0.73", "36.6834, 113.016, 50.2923, 0.73", "37.6528, 115.899, 51.4205, 0.73", "38.5584, 118.646, 52.7887, 0.73", "39.1772, 120.763, 54.0596, 0.73", "39.7222, 123.019, 55.6293, 0.73", "40.1908, 125.742, 57.7283, 0.73", "40.5652, 130.068, 61.3211, 0.73", "40.5431, 134.318, 65.1724, 0.73", "40.3973, 136.064, 66.8416, 0.73", "40.2545, 137.253, 68.0129, 0.73", "39.8007, 140.69, 71.3185, 0.73", "39.4837, 143.926, 74.1283, 0.73", "39.3193, 147.58, 76.8215, 0.73", "39.3623, 148.822, 77.6007, 0.73", "39.7048, 151.714, 79.1994, 0.73", "40.3128, 154.869, 80.6872, 0.73", "41.588, 159.697, 82.5254, 0.73", "42.4673, 162.387, 83.4118, 0.73", "43.66, 165.593, 84.339, 0.73", "45.2904, 169.549, 85.4135, 0.73", "46.59, 172.66, 86.218, 0.73", "47.7872, 175.383, 86.8969, 0.73", "49.4593, 178.844, 87.7048, 0.73", "51.144, 182.022, 88.4718, 0.73", "52.7154, 184.752, 89.181, 0.73" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "24.0759, 14.9347, -15.5725, 0.98", "24.2937, 17.1547, -15.5916, 0.98", "24.8111, 20.5053, -15.8863, 0.86", "25.5195, 25.5063, -16.4607, 0.86", "25.9567, 28.5735, -16.9031, 0.73", "26.3257, 31.2486, -17.3056, 0.73", "26.7388, 34.0975, -17.7427, 0.98", "27.3259, 37.8638, -18.3801, 0.86", "27.7217, 40.148, -18.8707, 0.61", "28.721, 44.9316, -20.1932, 0.49", "29.5973, 48.3052, -21.2378, 0.49", "30.0697, 49.9948, -21.7416, 0.49", "30.2773, 50.7882, -21.9789, 0.49", "31.0399, 53.436, -22.7642, 0.49", "32.111, 56.6813, -23.833, 0.49", "32.6518, 58.1211, -24.357, 0.49", "33.0861, 59.3082, -24.7948, 0.49", "34.0731, 61.9446, -25.799, 0.86", "34.8733, 64.1558, -26.5622, 0.73", "35.7305, 66.5557, -27.2101, 0.73", "37.247, 70.31, -28.0954, 0.73", "38.7741, 73.5281, -28.8391, 0.61", "40.3565, 76.6742, -29.5536, 0.73", "41.8821, 79.3595, -30.0896, 0.73", "44.8052, 84.0949, -30.978, 1.22", "46.9422, 87.3614, -31.4701, 0.98", "48.4366, 89.5226, -31.6035, 0.98", "52.1648, 96.9546, -34.1594, 0.98", "54.5508, 105.14, -36.041, 0.98", "57.6171, 113.239, -37.1291, 0.98" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "24.0759, 14.9347, -15.5725, 1.22", "27.4855, 14.4358, -15.4412, 1.22", "37.2077, 13.2133, -15.3716, 1.1", "42.6547, 12.6812, -15.5365, 0.86", "51.8022, 12.1451, -15.8865, 1.1", "57.7316, 11.9617, -16.214, 1.1", "69.8769, 11.9347, -16.9618, 1.22", "75.9621, 12.1966, -17.4078, 1.1", "81.3134, 12.6588, -17.7549, 0.73", "87.6743, 13.4663, -18.1931, 0.98", "93.5955, 14.3691, -18.6973, 0.98", "99.016, 15.3362, -19.0385, 1.22", "103.554, 16.0316, -19.2941, 0.98", "111.227, 17.226, -19.8014, 1.22", "116.362, 17.9221, -20.1988, 0.86", "125.636, 19.0773, -21.0062, 0.86", "140.394, 20.8575, -22.3206, 1.1", "150.11, 21.9517, -23.3448, 1.1", "157.662, 22.807, -24.2828, 0.98", "163.544, 23.5602, -25.1456, 0.86", "176.783, 27.2346, -26.0417, 0.86", "189.755, 30.3131, -29.4872, 0.86" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "8.98958, -38.2062, -7.29039, 0.61", "13.3682, -38.6193, -7.82707, 0.61", "21.3013, -39.5243, -8.91104, 0.98", "29.4172, -40.745, -10.2165, 0.98", "37.6203, -42.1538, -11.6902, 0.98", "41.9388, -42.9083, -12.5239, 0.86", "42.8191, -43.0575, -12.7242, 0.86", "45.3468, -43.4411, -13.4702, 0.86", "48.2924, -43.7538, -14.5766, 0.86", "50.9081, -43.9554, -15.7073, 1.1", "55.5267, -44.1295, -17.897, 1.1", "59.5782, -43.7658, -19.6099, 0.86", "61.5961, -43.2674, -20.3715, 0.86", "63.6546, -42.2215, -21.0089, 0.86", "64.7628, -41.0775, -21.1313, 0.61", "65.1333, -36.6135, -19.4898, 0.49", "64.854, -33.9989, -18.2041, 0.24", "64.6725, -32.8166, -17.4984, 0.24", "64.3996, -31.1687, -16.5346, 0.24", "64.0669, -29.4828, -15.4849, 0.24", "63.3965, -25.6526, -13.1653, 0.24", "63.2856, -24.5666, -12.6282, 0.24", "63.1819, -23.0211, -11.709, 1.22", "63.2038, -19.8181, -9.59927, 1.35", "73.3193, -17.9802, -12.1753, 1.35", "83.1164, -14.0206, -13.2794, 1.35", "93.3795, -11.4502, -14.0215, 1.35", "103.714, -9.07731, -13.8587, 1.35", "113.883, -6.5874, -12.1555, 1.35", "124.071, -5.28494, -9.54138, 1.35", "134.341, -2.99967, -8.21435, 1.35", "144.385, 0.373891, -7.53069, 1.35", "154.629, 2.65264, -6.00343, 1.35", "164.435, 5.3556, -2.98117, 1.35" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "8.98958, -38.2062, -7.29039, 1.35", "8.60147, -45.0917, -8.3784, 1.35", "8.21678, -51.9168, -9.45685, 1.35" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-30.7172, 28.0881, -2.76343, 0.73", "-31.7182, 31.9166, -1.40364, 0.73", "-32.5836, 34.5094, -0.306787, 0.73", "-33.3639, 36.6892, 0.631231, 0.73", "-33.8915, 38.259, 1.27639, 0.73", "-34.7753, 41.0015, 2.38873, 0.73", "-36.1766, 45.3105, 4.10811, 0.73", "-37.2643, 48.8842, 5.34047, 0.73", "-38.4308, 53.1196, 6.82606, 0.73", "-39.2213, 56.2282, 7.91755, 0.73", "-39.7792, 58.7171, 8.77014, 0.73", "-40.074, 60.0424, 9.21744, 0.73", "-40.9839, 64.8387, 10.6709, 0.73", "-41.5716, 68.4549, 11.8373, 0.73", "-41.9594, 70.9878, 12.7343, 0.73", "-42.3353, 73.709, 13.7635, 0.73", "-42.7911, 77.9478, 15.3745, 0.73", "-43.0156, 80.4475, 16.3136, 0.73", "-43.33, 84.7318, 17.8947, 0.73", "-43.5262, 87.4369, 18.8838, 0.73", "-43.8055, 91.1659, 20.2361, 0.73", "-44.151, 94.7799, 21.6469, 0.73", "-44.5914, 99.3598, 23.5613, 0.73", "-44.9503, 102.545, 24.8178, 0.73", "-45.5716, 106.735, 26.6309, 0.73", "-46.1157, 109.692, 28.0781, 0.73", "-47.2618, 115.026, 30.9723, 0.73", "-48.0424, 117.798, 32.815, 0.73", "-49.5934, 122.422, 36.2952, 0.73", "-51.9641, 128.34, 41.0971, 0.73", "-53.2648, 131.304, 43.535, 0.73", "-54.0299, 132.948, 44.9353, 0.73", "-57.1733, 139.322, 50.359, 0.73", "-58.3038, 141.413, 52.2673, 0.73", "-60.8627, 146.041, 56.5466, 0.73", "-62.0031, 148.191, 58.3265, 0.73", "-63.9742, 151.969, 61.4037, 0.73", "-64.8261, 153.689, 62.8197, 0.73", "-66.6955, 158.0, 66.1992, 0.73", "-67.9153, 160.95, 68.5592, 0.73", "-68.6589, 162.97, 70.2095, 0.73", "-69.7095, 166.206, 72.8855, 0.73", "-70.6104, 169.056, 75.2083, 0.73", "-71.3512, 171.605, 77.2954, 0.37", "-72.1534, 174.759, 79.8028, 0.37", "-72.9037, 177.735, 82.4127, 0.37", "-73.2466, 179.386, 83.7376, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-30.7172, 28.0881, -2.76343, 0.86", "-31.9074, 28.6081, -2.41044, 0.86", "-33.6138, 29.1349, -1.82553, 0.86", "-35.2849, 29.4367, -1.21145, 0.86", "-36.3861, 29.4982, -0.659884, 0.86", "-37.8402, 29.491, 0.155335, 0.86", "-38.7118, 29.4814, 0.675465, 0.86", "-40.0246, 29.4517, 1.63124, 0.86", "-41.0288, 29.4199, 2.4127, 0.86", "-43.4718, 29.406, 4.27394, 0.86", "-44.3577, 29.4701, 4.90209, 0.86", "-45.4879, 29.6272, 5.67206, 0.86", "-47.2015, 30.0366, 6.82318, 0.86", "-48.1509, 30.4339, 7.46148, 0.86", "-49.3936, 31.1972, 8.19073, 0.86", "-50.2502, 31.9486, 8.42917, 0.86" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "57.6171, 113.239, -37.1291, 0.61", "60.8308, 122.421, -39.0402, 0.61", "64.3127, 131.024, -42.4415, 0.61", "66.0423, 139.89, -46.4665, 0.61", "65.9946, 148.661, -51.0158, 0.61", "64.5777, 157.595, -55.0036, 0.61" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "57.6171, 113.239, -37.1291, 0.61", "60.2415, 121.067, -38.9127, 0.61", "62.1374, 129.031, -41.0209, 0.61", "65.6603, 135.934, -44.2801, 0.61", "69.3056, 143.427, -45.5625, 0.61", "72.3436, 151.125, -47.219, 0.61" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "189.755, 30.3131, -29.4872, 0.61", "200.932, 30.9243, -31.2011, 0.61" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "189.755, 30.3131, -29.4872, 0.61", "200.569, 31.0707, -30.7592, 0.61" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "164.435, 5.3556, -2.98117, 1.1", "176.491, 8.61922, -2.26818, 1.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "164.435, 5.3556, -2.98117, 1.35", "172.286, 7.56298, -2.67604, 1.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "8.21678, -51.9168, -9.45685, 1.1", "1.62637, -57.0635, -10.6361, 1.1", "-4.48847, -61.9451, -11.9138, 0.86", "-11.6705, -67.9402, -13.5596, 0.86", "-21.3106, -76.3869, -15.9288, 0.86", "-27.2293, -81.8481, -17.4524, 0.86", "-28.5072, -83.071, -17.7656, 0.86", "-30.9062, -85.5289, -18.4375, 0.86", "-32.6683, -87.5798, -18.9227, 0.86", "-33.9478, -89.4131, -19.3385, 0.86", "-34.9547, -91.2028, -19.5729, 0.86", "-37.6381, -95.457, -19.6317, 0.86", "-38.7234, -96.7427, -19.6371, 0.86", "-41.4464, -99.1535, -19.6794, 0.86", "-43.533, -100.537, -19.7278, 0.86", "-49.6444, -103.601, -19.7483, 0.86", "-52.3141, -104.781, -19.9359, 0.86", "-54.8279, -105.841, -20.3082, 0.86", "-56.6081, -106.607, -20.6455, 0.86", "-60.4352, -108.465, -21.5877, 0.86", "-64.3739, -110.781, -22.6685, 0.86", "-69.2665, -114.75, -24.3684, 0.86", "-71.0989, -116.469, -24.8953, 0.86", "-72.7374, -118.143, -25.2818, 0.86", "-74.5783, -120.111, -25.6783, 0.86", "-78.5528, -124.42, -26.4769, 0.86", "-80.2263, -126.091, -26.7043, 0.86", "-82.6439, -128.165, -26.7736, 0.86", "-84.3791, -129.47, -26.7814, 0.86", "-87.1032, -131.369, -26.9499, 0.86", "-88.9608, -132.589, -27.3259, 0.86", "-91.3764, -134.153, -28.146, 0.86", "-93.4002, -135.411, -28.9459, 0.86", "-96.3021, -137.343, -30.1, 0.86", "-99.5058, -139.643, -31.5668, 0.86", "-104.202, -143.452, -34.0208, 1.35", "-106.513, -145.396, -35.2673, 1.1", "-107.355, -146.188, -35.7514, 1.1", "-113.039, -152.242, -39.1508, 0.73", "-118.472, -158.64, -42.4824, 0.98", "-122.131, -163.009, -44.5963, 1.1", "-126.236, -168.24, -46.9928, 1.22", "-130.264, -173.421, -49.4592, 0.73", "-134.664, -178.817, -52.0393, 0.98", "-137.47, -182.032, -53.5199, 0.61", "-143.556, -188.133, -55.7604, 0.98", "-146.772, -191.008, -56.6914, 0.61", "-149.717, -193.327, -57.3345, 0.37", "-155.86, -197.335, -58.3092, 0.49", "-162.272, -201.126, -59.1621, 0.86", "-169.3, -205.147, -59.9826, 0.86", "-174.678, -208.066, -60.4584, 0.86", "-179.871, -210.832, -60.9408, 0.37", "-184.083, -213.165, -61.352, 0.61", "-186.429, -214.504, -61.6782, 0.37", "-194.883, -219.726, -63.3586, 0.86", "-202.534, -224.782, -65.2545, 0.49", "-206.851, -227.822, -66.5209, 0.24", "-210.298, -230.426, -67.537, 0.49", "-213.435, -232.959, -68.4116, 0.49", "-218.965, -237.622, -69.9056, 0.86", "-222.665, -241.233, -70.9787, 0.12", "-226.56, -245.617, -72.0886, 0.61", "-233.074, -253.348, -73.5311, 0.61", "-234.801, -255.527, -73.8559, 0.61", "-239.171, -261.213, -74.5057, 0.61", "-243.376, -266.884, -75.0271, 0.61", "-248.158, -273.652, -75.6701, 0.86", "-254.709, -282.941, -76.604, 0.12", "-256.391, -285.399, -76.9555, 0.12", "-256.915, -286.116, -77.0631, 0.37", "-258.305, -287.957, -77.3481, 0.37", "-259.731, -289.675, -77.7712, 0.37", "-261.908, -292.188, -78.7243, 0.37", "-264.57, -295.282, -80.2649, 0.37", "-266.721, -297.771, -81.5785, 0.37", "-268.832, -300.215, -82.9122, 0.37", "-272.21, -304.123, -85.1771, 0.37", "-274.377, -306.749, -86.8063, 0.37", "-275.825, -308.69, -88.1535, 0.37", "-279.154, -313.669, -91.951, 0.49" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "8.21678, -51.9168, -9.45685, 1.35", "8.74461, -54.9098, -10.2343, 1.35", "10.1507, -62.8826, -12.3052, 1.35" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-50.2502, 31.9486, 8.42917, 0.61", "-50.8573, 32.4344, 8.92979, 0.61", "-52.5544, 33.9029, 10.2731, 0.61", "-56.7925, 37.7137, 13.7789, 0.61", "-58.4899, 39.2715, 15.128, 0.61", "-60.0738, 40.6804, 16.2988, 0.61", "-61.3812, 41.8024, 17.2599, 0.61", "-63.7385, 43.7906, 18.9066, 0.61", "-65.3746, 45.2184, 19.9457, 0.61", "-67.297, 46.9752, 21.0954, 0.61", "-69.2254, 48.7073, 22.2671, 0.61", "-73.6334, 52.5023, 24.8772, 0.61", "-76.2568, 54.7296, 26.3446, 0.61", "-79.5998, 57.513, 28.1382, 0.61", "-83.6148, 60.9002, 30.1922, 0.61", "-86.388, 63.3241, 31.4856, 0.61", "-87.3959, 64.2395, 31.8808, 0.37", "-89.9239, 66.5559, 32.5355, 0.37", "-92.6017, 68.9869, 33.2259, 0.37", "-95.6013, 71.5578, 34.002, 0.37", "-98.5122, 74.0524, 34.8399, 0.12", "-100.331, 75.6343, 35.7125, 0.12", "-102.002, 77.014, 36.7751, 0.49", "-106.405, 80.3106, 40.5067, 0.49", "-108.912, 82.0883, 43.0086, 0.49", "-110.576, 83.2531, 44.8058, 0.49", "-113.642, 85.4179, 48.1859, 0.49", "-115.115, 86.5061, 49.6915, 0.49", "-118.739, 89.2558, 52.7885, 0.49", "-120.538, 90.666, 53.8629, 0.49", "-123.688, 93.2042, 55.154, 0.49", "-125.314, 94.4367, 55.5511, 0.49", "-128.86, 96.9403, 55.9524, 0.49", "-132.984, 99.7683, 56.203, 0.49", "-135.83, 101.612, 56.2169, 0.49", "-139.409, 103.764, 56.2623, 0.49", "-142.001, 105.199, 56.3697, 0.49", "-144.426, 106.526, 56.5468, 0.49", "-146.75, 107.812, 56.8246, 0.49", "-150.557, 110.152, 57.4691, 0.49", "-153.182, 111.976, 58.0518, 0.49", "-158.7, 116.274, 59.4024, 0.49", "-160.822, 118.07, 59.9486, 0.49", "-163.305, 120.249, 60.6069, 0.49", "-167.411, 123.956, 61.7298, 0.49", "-171.303, 127.703, 62.8853, 0.49", "-173.82, 130.316, 63.6872, 0.49", "-176.814, 133.698, 64.727, 0.49", "-179.088, 136.376, 65.5382, 0.49", "-181.052, 138.78, 66.2185, 0.49", "-183.417, 141.763, 67.1587, 0.49", "-185.286, 144.178, 67.9907, 0.49", "-187.602, 147.135, 69.0512, 0.49", "-192.183, 152.983, 71.1979, 0.49", "-195.254, 156.858, 72.6176, 0.49", "-200.682, 163.593, 74.6742, 0.49", "-203.54, 166.97, 75.4653, 0.49", "-207.246, 171.035, 76.0621, 0.49", "-209.825, 173.656, 76.0337, 0.37", "-213.83, 177.493, 75.6083, 0.12", "-218.878, 182.253, 74.3858, 0.12", "-222.558, 185.808, 72.7786, 0.12", "-225.943, 189.535, 70.4041, 0.12", "-229.469, 194.603, 66.0877, 0.12", "-231.655, 198.982, 61.4962, 0.37", "-232.723, 202.788, 56.7736, 0.37", "-232.991, 205.572, 53.0178, 0.37", "-232.799, 210.89, 45.2339, 0.86", "-232.406, 214.291, 39.773, 0.73", "-232.313, 215.343, 37.9916, 0.73", "-232.405, 217.855, 33.5912, 0.73", "-232.892, 219.642, 30.6663, 0.73", "-233.607, 221.02, 28.6066, 0.73", "-235.536, 223.649, 25.0484, 0.73", "-237.488, 226.092, 21.8536, 0.73", "-238.803, 227.812, 19.5127, 0.73", "-240.258, 229.789, 16.8452, 0.73", "-241.454, 231.506, 14.5645, 0.73", "-243.099, 233.998, 11.3064, 0.73", "-244.648, 236.336, 8.40556, 0.73", "-246.534, 239.256, 4.62992, 0.73" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-50.2502, 31.9486, 8.42917, 0.61", "-52.2279, 31.872, 7.64852, 0.61", "-54.7184, 31.8575, 6.88186, 0.61", "-58.9439, 31.8817, 5.96404, 0.61", "-65.2626, 31.8739, 5.11797, 0.61", "-70.5306, 31.822, 4.74341, 0.61", "-73.5589, 31.7602, 4.47024, 0.61", "-78.0775, 31.6838, 4.03924, 0.61", "-82.339, 31.597, 3.68103, 0.61", "-86.6038, 31.4514, 3.52178, 0.61", "-89.1864, 31.2993, 3.66426, 0.61", "-94.6294, 30.8612, 4.06852, 0.61", "-98.6214, 30.3708, 4.18152, 0.61", "-101.615, 29.9554, 4.07823, 0.61", "-105.206, 29.427, 3.8805, 0.61", "-108.397, 28.9278, 3.70451, 0.61", "-111.957, 28.3156, 3.57577, 0.61", "-115.087, 27.7435, 3.49235, 0.61", "-119.547, 26.8782, 3.1327, 0.61", "-123.35, 26.098, 2.6471, 0.61", "-125.787, 25.5952, 2.26732, 0.61", "-129.197, 24.961, 1.71934, 0.61", "-132.258, 24.3971, 1.2597, 0.61", "-135.735, 23.8037, 0.675045, 0.61", "-139.077, 23.2021, 0.0387826, 0.61", "-141.798, 22.7526, -0.523889, 0.61", "-144.368, 22.3828, -1.06745, 0.61", "-156.938, 20.4612, -1.23122, 0.61", "-169.356, 18.1048, 0.219094, 0.61", "-181.664, 15.6609, 2.32988, 0.61" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "10.1507, -62.8826, -12.3052, 0.61", "12.2845, -69.22, -11.9325, 0.61", "13.523, -72.2288, -11.8058, 0.61", "15.8776, -77.3833, -11.7079, 0.98", "17.0306, -79.9317, -11.6718, 0.12", "18.4519, -82.7158, -11.7266, 0.49", "21.9324, -89.2216, -11.8311, 1.1", "24.2886, -93.2079, -12.0176, 0.49", "28.0508, -99.2724, -12.3321, 0.12", "29.6826, -101.804, -12.4889, 0.12", "33.8857, -108.089, -12.8877, 1.1", "36.6644, -112.214, -13.1851, 0.61", "42.3714, -123.272, -12.7385, 0.61", "47.7206, -134.426, -14.2706, 0.61", "50.2613, -146.671, -14.1408, 0.61", "53.0619, -158.817, -13.2355, 0.61", "56.4813, -170.776, -12.1286, 0.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "10.1507, -62.8826, -12.3052, 1.22", "11.6954, -72.3808, -15.2115, 1.22", "13.0005, -79.6575, -17.4816, 1.22", "14.8715, -88.2747, -20.2477, 1.22", "17.4553, -98.7706, -23.5089, 1.22", "19.9127, -108.133, -26.3074, 0.86", "20.162, -109.055, -26.5752, 0.86", "21.6184, -113.613, -27.8499, 0.86", "23.3486, -119.264, -29.4652, 0.86", "24.697, -123.69, -30.5902, 0.86", "25.3302, -125.871, -31.1244, 0.86", "25.8371, -127.393, -31.4742, 0.86", "26.3156, -129.342, -31.9179, 0.86", "26.5453, -131.608, -32.4025, 0.86", "26.5681, -132.932, -32.7384, 0.86", "26.6214, -135.154, -33.4833, 0.86", "26.8189, -137.211, -34.2719, 0.86", "26.8653, -137.746, -34.4854, 0.86", "27.0272, -139.915, -35.4178, 0.86", "27.2181, -142.57, -36.6249, 0.86", "27.274, -144.171, -37.4076, 1.22", "27.2837, -146.861, -38.755, 1.22", "27.0471, -151.576, -40.9749, 1.35", "26.506, -157.376, -43.5632, 1.35", "26.2443, -159.378, -44.3874, 1.59", "25.5868, -164.759, -46.2838, 1.1", "25.1016, -168.641, -47.5923, 1.1", "24.4407, -173.809, -49.1918, 0.86", "24.1413, -176.639, -49.9668, 1.47", "23.7117, -180.139, -50.7017, 0.86", "23.0945, -185.21, -51.5125, 1.1", "24.8298, -195.282, -56.024, 1.1", "25.8227, -206.286, -57.8152, 1.1", "25.0698, -217.156, -60.3856, 1.1" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-181.664, 15.6609, 2.32988, 0.61", "-191.994, 14.449, 1.7017, 0.61" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-181.664, 15.6609, 2.32988, 0.61", "-190.912, 14.4153, 2.42264, 0.61" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "56.4813, -170.776, -12.1286, 0.61", "62.0592, -180.063, -13.2901, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "56.4813, -170.776, -12.1286, 0.61", "58.5909, -183.831, -9.89751, 0.61" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_26", "dend_14", "dend_1", "dend_0", "dend_39", "dend_38", "dend_28", "dend_27", "dend_23", "dend_15", "dend_13", "dend_2", "dend_36", "dend_29", "dend_25", "dend_24", "dend_22", "dend_19", "dend_16", "dend_10", "dend_3", "dend_35", "dend_30", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_4", "dend_34", "dend_31", "dend_6", "dend_5", "dend_33", "dend_32", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_26", "dend_14", "dend_1", "dend_0", "dend_39", "dend_38", "dend_28", "dend_27", "dend_23", "dend_15", "dend_13", "dend_2", "dend_36", "dend_29", "dend_25", "dend_24", "dend_22", "dend_19", "dend_16", "dend_10", "dend_3", "dend_35", "dend_30", "dend_21", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_4", "dend_34", "dend_31", "dend_6", "dend_5", "dend_33", "dend_32", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_17", "dend_12", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_33", "dend_32", "dend_8", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_LBC_f0665c9d1a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_14
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_15
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_35, id: dend_35, parent: dend_29
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_33
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_33, dend_32, dend_8, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.4500001480306009)
    connect dend_37(0), soma_0(0.4500001480306009)
    connect dend_26(0), soma_0(0.4500001480306009)
    connect dend_14(0), soma_0(0.4500001480306009)
    connect dend_1(0), soma_0(0.4500001480306009)
    connect dend_0(0), soma_0(0.4500001480306009)
    connect axon_0(0), soma_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_15(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_35(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.38674, -8.58166, 0.0, 3.0615 ) }
    soma_0 { pt3dadd( 1.23261, -7.73621, 0.0, 5.13448 ) }
    soma_0 { pt3dadd( 1.07848, -6.89077, 0.0, 6.50208 ) }
    soma_0 { pt3dadd( 0.924343, -6.04533, 0.0, 7.8079 ) }
    soma_0 { pt3dadd( 0.770211, -5.19988, 0.0, 9.46525 ) }
    soma_0 { pt3dadd( 0.616078, -4.35444, 0.0, 10.7445 ) }
    soma_0 { pt3dadd( 0.461945, -3.509, 0.0, 11.53 ) }
    soma_0 { pt3dadd( 0.307812, -2.66355, 0.0, 11.964 ) }
    soma_0 { pt3dadd( 0.15368, -1.81811, 0.0, 12.1762 ) }
    soma_0 { pt3dadd( -4.52973E-4, -0.972666, 0.0, 12.4031 ) }
    soma_0 { pt3dadd( -0.154586, -0.127223, 0.0, 13.0722 ) }
    soma_0 { pt3dadd( -0.308718, 0.71822, 0.0, 13.1077 ) }
    soma_0 { pt3dadd( -0.462851, 1.56366, 0.0, 12.7375 ) }
    soma_0 { pt3dadd( -0.616984, 2.40911, 0.0, 12.4776 ) }
    soma_0 { pt3dadd( -0.771117, 3.25455, 0.0, 12.0451 ) }
    soma_0 { pt3dadd( -0.925249, 4.09999, 0.0, 11.2537 ) }
    soma_0 { pt3dadd( -1.07938, 4.94544, 0.0, 9.96214 ) }
    soma_0 { pt3dadd( -1.23351, 5.79088, 0.0, 7.85651 ) }
    soma_0 { pt3dadd( -1.38765, 6.63632, 0.0, 6.70863 ) }
    soma_0 { pt3dadd( -1.54178, 7.48177, 0.0, 5.30209 ) }
    soma_0 { pt3dadd( -1.69591, 8.32721, 0.0, 3.29069 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -2.29925, 8.25877, -7.17, 0.86 ) }
    dend_40 { pt3dadd( -4.70407, 9.37198, -7.17331, 0.86 ) }
    dend_40 { pt3dadd( -6.06124, 9.86794, -7.01979, 0.86 ) }
    dend_40 { pt3dadd( -7.30297, 10.2612, -6.65719, 0.86 ) }
    dend_40 { pt3dadd( -8.68558, 10.7034, -6.01728, 0.86 ) }
    dend_40 { pt3dadd( -10.6279, 11.3463, -5.03221, 0.86 ) }
    dend_40 { pt3dadd( -11.1923, 11.5348, -4.73329, 0.86 ) }
    dend_40 { pt3dadd( -13.41, 12.1901, -3.41701, 0.86 ) }
    dend_40 { pt3dadd( -15.6655, 12.9275, -1.94761, 0.86 ) }
    dend_40 { pt3dadd( -18.0393, 13.8094, -0.250075, 0.86 ) }
    dend_40 { pt3dadd( -19.4227, 14.3984, 0.867828, 0.86 ) }
    dend_40 { pt3dadd( -21.0953, 15.1861, 2.32975, 0.86 ) }
    dend_40 { pt3dadd( -22.2467, 15.734, 3.37578, 0.86 ) }
    dend_40 { pt3dadd( -23.2772, 16.2235, 4.26747, 0.86 ) }
    dend_40 { pt3dadd( -23.8533, 16.483, 4.70816, 0.86 ) }
    dend_40 { pt3dadd( -25.1247, 17.0002, 5.58801, 0.86 ) }
    dend_40 { pt3dadd( -26.1319, 17.3707, 6.21774, 0.86 ) }
    dend_40 { pt3dadd( -27.3874, 17.7662, 6.80744, 0.86 ) }
    dend_40 { pt3dadd( -29.1249, 18.1767, 7.24815, 0.86 ) }
    dend_40 { pt3dadd( -31.2825, 18.5984, 7.61937, 0.86 ) }
    dend_40 { pt3dadd( -32.1024, 18.7426, 7.69128, 0.86 ) }
    dend_40 { pt3dadd( -33.1799, 18.9346, 7.66048, 0.86 ) }
    dend_40 { pt3dadd( -34.3988, 19.1821, 7.50707, 0.86 ) }
    dend_40 { pt3dadd( -36.3591, 19.5914, 7.04788, 0.86 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 45/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.18075, 7.60277, -7.84, 0.98 ) }
    dend_37 { pt3dadd( 3.10712, 9.62573, -3.55366, 0.98 ) }
    dend_37 { pt3dadd( 4.45957, 13.279, 3.95098, 1.35 ) }
    dend_37 { pt3dadd( 5.99199, 17.7835, 12.8874, 1.1 ) }
    dend_37 { pt3dadd( 6.86413, 20.3729, 17.9616, 0.86 ) }
    dend_37 { pt3dadd( 8.15706, 24.1194, 25.2547, 0.73 ) }
    dend_37 { pt3dadd( 8.42339, 24.8464, 26.679, 0.73 ) }
    dend_37 { pt3dadd( 8.56787, 25.3245, 27.6919, 0.73 ) }
    dend_37 { pt3dadd( 8.65274, 25.9138, 28.7709, 0.73 ) }
    dend_37 { pt3dadd( 8.62494, 26.3153, 29.9677, 0.73 ) }
    dend_37 { pt3dadd( 8.71444, 26.4307, 30.5957, 0.73 ) }
    dend_37 { pt3dadd( 9.27151, 26.4078, 32.2052, 0.73 ) }
    dend_37 { pt3dadd( 9.77068, 26.2839, 34.1597, 0.73 ) }
    dend_37 { pt3dadd( 9.97873, 26.2479, 35.636, 0.73 ) }
    dend_37 { pt3dadd( 9.98322, 26.3282, 36.5973, 0.73 ) }
    dend_37 { pt3dadd( 9.84496, 26.5977, 37.5039, 0.73 ) }
    dend_37 { pt3dadd( 9.6081, 27.0248, 38.2464, 0.73 ) }
    dend_37 { pt3dadd( 9.13736, 27.806, 39.4777, 0.73 ) }
    dend_37 { pt3dadd( 8.67275, 28.5057, 40.5491, 0.73 ) }
    dend_37 { pt3dadd( 8.26776, 29.0412, 41.3249, 0.73 ) }
    dend_37 { pt3dadd( 7.62739, 29.802, 42.3958, 0.73 ) }
    dend_37 { pt3dadd( 6.50905, 31.0906, 44.0856, 0.73 ) }
    dend_37 { pt3dadd( 3.83665, 34.2635, 47.7663, 0.73 ) }
    dend_37 { pt3dadd( 2.82752, 35.4533, 49.088, 0.73 ) }
    dend_37 { pt3dadd( 1.27941, 37.2721, 51.0273, 0.73 ) }
    dend_37 { pt3dadd( 0.605009, 38.1183, 51.8617, 0.73 ) }
    dend_37 { pt3dadd( -0.192519, 39.2883, 52.8787, 0.73 ) }
    dend_37 { pt3dadd( -1.27613, 41.3561, 54.2549, 0.73 ) }
    dend_37 { pt3dadd( -1.62871, 44.5073, 56.1353, 0.73 ) }
    dend_37 { pt3dadd( -1.36312, 44.9786, 56.7155, 0.73 ) }
    dend_37 { pt3dadd( -0.741947, 45.6374, 57.9933, 0.73 ) }
    dend_37 { pt3dadd( -0.143012, 46.2213, 59.3129, 0.73 ) }
    dend_37 { pt3dadd( 1.47797, 47.776, 63.1756, 0.61 ) }
    dend_37 { pt3dadd( 4.28352, 50.624, 70.4684, 0.86 ) }
    dend_37 { pt3dadd( 7.19256, 53.77, 78.166, 0.86 ) }
    dend_37 { pt3dadd( 9.88414, 56.8935, 85.5364, 0.86 ) }
    dend_37 { pt3dadd( 10.5349, 57.7563, 87.4542, 0.86 ) }
    dend_37 { pt3dadd( 11.407, 59.1663, 90.3603, 0.86 ) }
    dend_37 { pt3dadd( 12.7433, 61.8528, 95.549, 0.86 ) }
    dend_37 { pt3dadd( 13.3495, 63.311, 98.0047, 0.86 ) }
    dend_37 { pt3dadd( 13.6465, 64.0893, 99.1834, 0.86 ) }
    dend_37 { pt3dadd( 14.2618, 65.6549, 101.451, 0.86 ) }
    dend_37 { pt3dadd( 14.8231, 67.1553, 103.695, 0.86 ) }
    dend_37 { pt3dadd( 15.702, 70.1277, 108.404, 0.86 ) }
    dend_37 { pt3dadd( 16.0344, 72.1062, 111.837, 0.86 ) }
    dend_37 { pt3dadd( 16.0486, 73.5662, 114.544, 0.86 ) }
    dend_37 { pt3dadd( 15.8526, 75.1284, 117.421, 0.86 ) }
    dend_37 { pt3dadd( 15.3483, 77.0888, 120.795, 0.86 ) }
    dend_37 { pt3dadd( 14.5759, 79.0835, 123.786, 0.86 ) }
    dend_37 { pt3dadd( 13.646, 81.0263, 126.153, 0.86 ) }
    dend_37 { pt3dadd( 12.3105, 83.5237, 128.844, 0.86 ) }
    dend_37 { pt3dadd( 11.1552, 85.4232, 130.778, 0.86 ) }
    dend_37 { pt3dadd( 9.86097, 87.3598, 132.652, 0.86 ) }
    dend_37 { pt3dadd( 9.14692, 88.4471, 133.559, 0.86 ) }
    dend_37 { pt3dadd( 8.42879, 89.5869, 134.422, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( 7.07771, 91.8082, 136.154, 0.86 ) }
    dend_37 { pt3dadd( 6.16097, 93.2859, 137.466, 0.86 ) }
    dend_37 { pt3dadd( 5.72247, 94.0329, 138.228, 0.86 ) }
    dend_37 { pt3dadd( 4.8343, 95.8911, 140.219, 0.86 ) }
    dend_37 { pt3dadd( 4.25952, 98.1093, 142.342, 0.86 ) }
    dend_37 { pt3dadd( 3.96739, 100.932, 144.954, 0.86 ) }
    dend_37 { pt3dadd( 3.91638, 102.525, 146.345, 0.86 ) }
    dend_37 { pt3dadd( 3.96787, 103.909, 147.529, 0.86 ) }
    dend_37 { pt3dadd( 4.25279, 107.008, 150.147, 0.86 ) }
    dend_37 { pt3dadd( 5.02839, 111.586, 153.953, 0.86 ) }
    dend_37 { pt3dadd( 5.73801, 114.289, 155.906, 0.86 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 11/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -7.01925, 2.52902, -4.51, 1.59 ) }
    dend_26 { pt3dadd( -11.5917, 3.79084, -4.51, 1.59 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.22075, 5.05052, -12.12, 1.22 ) }
    dend_14 { pt3dadd( 6.22075, 5.05052, -12.12, 1.22 ) }
    dend_14 { pt3dadd( 8.99668, 6.58052, -12.7193, 1.22 ) }
    dend_14 { pt3dadd( 14.153, 9.42248, -13.8325, 1.47 ) }
    dend_14 { pt3dadd( 17.8796, 11.4764, -14.637, 1.71 ) }
    dend_14 { pt3dadd( 22.4033, 13.9697, -15.6136, 1.35 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.85075, -9.66848, -0.0100002, 2.32 ) }
    dend_1 { pt3dadd( 2.06843, -10.0978, -0.0196725, 2.32 ) }
    dend_1 { pt3dadd( 8.19512, -22.182, -0.291898, 2.32 ) }
    dend_1 { pt3dadd( 9.09625, -23.9594, -0.331938, 2.08 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.56925, 6.11652, 0.0, 1.47 ) }
    dend_0 { pt3dadd( -6.30381, 7.60145, -0.244576, 1.47 ) }
    dend_0 { pt3dadd( -7.07889, 8.92086, -0.554077, 1.47 ) }
    dend_0 { pt3dadd( -7.75265, 9.89854, -0.877041, 1.59 ) }
    dend_0 { pt3dadd( -8.15954, 10.4295, -1.08518, 1.71 ) }
    dend_0 { pt3dadd( -8.85729, 11.2278, -1.4375, 1.71 ) }
    dend_0 { pt3dadd( -9.52251, 11.902, -1.72383, 1.59 ) }
    dend_0 { pt3dadd( -10.1879, 12.429, -2.06559, 1.47 ) }
    dend_0 { pt3dadd( -10.9971, 12.9364, -2.489, 1.47 ) }
    dend_0 { pt3dadd( -11.4848, 13.1878, -2.71282, 1.47 ) }
    dend_0 { pt3dadd( -12.2399, 13.541, -3.02467, 1.47 ) }
    dend_0 { pt3dadd( -13.2923, 14.0012, -3.34749, 1.35 ) }
    dend_0 { pt3dadd( -14.9286, 14.7545, -3.77456, 1.1 ) }
    dend_0 { pt3dadd( -15.995, 15.278, -3.99436, 1.1 ) }
    dend_0 { pt3dadd( -17.1825, 15.9054, -4.18433, 1.1 ) }
    dend_0 { pt3dadd( -18.068, 16.5681, -4.27562, 1.1 ) }
    dend_0 { pt3dadd( -19.0888, 17.5302, -4.30877, 1.1 ) }
    dend_0 { pt3dadd( -19.6409, 18.105, -4.29835, 0.98 ) }
    dend_0 { pt3dadd( -19.9955, 18.4886, -4.27426, 0.98 ) }
    dend_0 { pt3dadd( -20.5126, 19.0664, -4.27625, 0.86 ) }
    dend_0 { pt3dadd( -23.3344, 22.1073, -4.45829, 1.1 ) }
    dend_0 { pt3dadd( -24.2417, 23.0808, -4.55663, 0.86 ) }
    dend_0 { pt3dadd( -26.1148, 25.2166, -4.9674, 1.35 ) }
    dend_0 { pt3dadd( -27.6986, 27.0621, -5.37568, 1.22 ) }
    dend_0 { pt3dadd( -29.3843, 28.9946, -5.86898, 1.22 ) }
    dend_0 { pt3dadd( -30.6143, 30.3846, -6.2749, 0.98 ) }
    dend_0 { pt3dadd( -32.1612, 32.2382, -6.8722, 1.35 ) }
    dend_0 { pt3dadd( -34.2296, 34.9605, -7.71159, 1.35 ) }
    dend_0 { pt3dadd( -35.4639, 36.7182, -8.21057, 0.86 ) }
    dend_0 { pt3dadd( -36.805, 38.683, -8.70629, 0.98 ) }
    dend_0 { pt3dadd( -37.2843, 39.3771, -8.85133, 0.49 ) }
    dend_0 { pt3dadd( -39.7194, 42.8038, -9.49632, 0.24 ) }
    dend_0 { pt3dadd( -40.5666, 43.8392, -9.66568, 0.24 ) }
    dend_0 { pt3dadd( -41.2202, 44.5331, -9.73208, 0.61 ) }
    dend_0 { pt3dadd( -41.7341, 45.0682, -9.7882, 0.61 ) }
    dend_0 { pt3dadd( -42.4447, 45.7567, -9.84561, 0.61 ) }
    dend_0 { pt3dadd( -43.1073, 46.3132, -9.82117, 0.61 ) }
    dend_0 { pt3dadd( -44.6489, 47.5535, -9.6398, 1.22 ) }
    dend_0 { pt3dadd( -46.7267, 49.4311, -9.19896, 0.86 ) }
    dend_0 { pt3dadd( -47.6227, 50.3645, -8.93864, 1.35 ) }
    dend_0 { pt3dadd( -48.6571, 51.3674, -8.52863, 1.35 ) }
    dend_0 { pt3dadd( -50.9198, 53.4243, -7.57571, 0.73 ) }
    dend_0 { pt3dadd( -52.4921, 54.6831, -6.95139, 1.1 ) }
    dend_0 { pt3dadd( -54.0375, 55.7423, -6.35048, 0.73 ) }
    dend_0 { pt3dadd( -55.748, 56.7308, -5.81519, 1.47 ) }
    dend_0 { pt3dadd( -60.1224, 59.0222, -4.81687, 0.73 ) }
    dend_0 { pt3dadd( -61.837, 59.8297, -4.5458, 0.24 ) }
    dend_0 { pt3dadd( -64.3728, 60.8509, -4.39199, 1.22 ) }
    dend_0 { pt3dadd( -66.3586, 61.564, -4.408, 0.37 ) }
    dend_0 { pt3dadd( -69.2834, 62.5959, -4.64827, 1.1 ) }
    dend_0 { pt3dadd( -70.5096, 63.0538, -4.84104, 0.49 ) }
    dend_0 { pt3dadd( -72.8184, 64.0854, -5.45262, 1.47 ) }
    dend_0 { pt3dadd( -75.1122, 65.1645, -6.12282, 0.37 ) }
    dend_0 { pt3dadd( -77.0239, 66.1304, -6.84973, 1.1 ) }
    dend_0 { pt3dadd( -78.0783, 66.7026, -7.31299, 0.12 ) }
    dend_0 { pt3dadd( -80.6327, 68.1681, -8.49309, 1.1 ) }
    dend_0 { pt3dadd( -81.9547, 68.9734, -9.1332, 0.61 ) }
    dend_0 { pt3dadd( -83.1615, 69.8035, -9.7641, 1.1 ) }
    dend_0 { pt3dadd( -84.6956, 71.0198, -10.5439, 0.61 ) }
    dend_0 { pt3dadd( -85.9763, 72.2693, -11.1799, 0.24 ) }
    dend_0 { pt3dadd( -86.1994, 72.5281, -11.2913, 0.73 ) }
    dend_0 { pt3dadd( -86.9812, 73.6356, -11.6242, 0.24 ) }
    dend_0 { pt3dadd( -87.6611, 74.6878, -11.9022, 0.86 ) }
    dend_0 { pt3dadd( -88.6458, 76.3937, -12.2835, 0.12 ) }
    dend_0 { pt3dadd( -90.0422, 78.8908, -12.7466, 0.86 ) }
    dend_0 { pt3dadd( -90.8337, 80.3961, -13.106, 0.24 ) }
    dend_0 { pt3dadd( -92.215, 83.1384, -13.8116, 1.22 ) }
    dend_0 { pt3dadd( -92.9256, 84.5939, -14.2146, 0.61 ) }
    dend_0 { pt3dadd( -94.3632, 87.5186, -15.0557, 0.49 ) }
    dend_0 { pt3dadd( -95.1966, 89.189, -15.516, 1.84 ) }
    dend_0 { pt3dadd( -96.5491, 91.9533, -16.2386, 0.61 ) }
    dend_0 { pt3dadd( -96.9437, 92.84, -16.4441, 0.98 ) }
    dend_0 { pt3dadd( -97.3998, 93.9362, -16.6629, 0.12 ) }
    dend_0 { pt3dadd( -97.8847, 95.1896, -16.8593, 0.49 ) }
    dend_0 { pt3dadd( -98.6857, 97.436, -17.1602, 0.12 ) }
    dend_0 { pt3dadd( -99.0642, 98.624, -17.2482, 0.37 ) }
    dend_0 { pt3dadd( -99.4209, 99.7892, -17.2318, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -99.8269, 101.254, -17.1973, 1.1 ) }
    dend_0 { pt3dadd( -100.2, 102.845, -17.162, 0.24 ) }
    dend_0 { pt3dadd( -100.307, 103.359, -17.1594, 0.49 ) }
    dend_0 { pt3dadd( -100.524, 104.46, -17.1786, 0.49 ) }
    dend_0 { pt3dadd( -100.783, 105.895, -17.2184, 0.12 ) }
    dend_0 { pt3dadd( -100.855, 106.414, -17.2317, 0.24 ) }
    dend_0 { pt3dadd( -101.018, 107.717, -17.2412, 0.24 ) }
    dend_0 { pt3dadd( -101.134, 108.644, -17.2123, 0.24 ) }
    dend_0 { pt3dadd( -101.265, 109.714, -17.1884, 0.24 ) }
    dend_0 { pt3dadd( -101.342, 110.588, -17.1772, 0.24 ) }
    dend_0 { pt3dadd( -101.387, 111.754, -17.174, 0.24 ) }
    dend_0 { pt3dadd( -105.236, 117.226, -16.4558, 0.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.69591, 8.32721, 0.0, 0.638996 ) }
    axon_0 { pt3dadd( -4.38621, 23.084, 0.0, 0.638996 ) }
    axon_0 { pt3dadd( -7.07651, 37.8408, 0.0, 0.638996 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 15/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 5.73801, 114.289, 155.906, 0.73 ) }
    dend_39 { pt3dadd( 6.09149, 115.472, 156.655, 0.73 ) }
    dend_39 { pt3dadd( 6.55043, 117.5, 157.905, 0.73 ) }
    dend_39 { pt3dadd( 7.2184, 120.966, 160.077, 0.73 ) }
    dend_39 { pt3dadd( 7.79173, 124.253, 162.116, 0.73 ) }
    dend_39 { pt3dadd( 8.07615, 126.016, 163.195, 0.73 ) }
    dend_39 { pt3dadd( 8.74213, 130.933, 166.117, 0.37 ) }
    dend_39 { pt3dadd( 8.98601, 133.993, 167.976, 0.49 ) }
    dend_39 { pt3dadd( 9.03715, 136.274, 169.389, 0.49 ) }
    dend_39 { pt3dadd( 8.95386, 138.008, 170.443, 0.49 ) }
    dend_39 { pt3dadd( 8.86753, 139.593, 171.302, 0.49 ) }
    dend_39 { pt3dadd( 8.7564, 141.831, 172.393, 0.49 ) }
    dend_39 { pt3dadd( 8.65228, 144.984, 173.683, 0.49 ) }
    dend_39 { pt3dadd( 8.58942, 146.998, 174.407, 0.49 ) }
    dend_39 { pt3dadd( 8.50985, 150.219, 175.273, 0.12 ) }
    dend_39 { pt3dadd( 8.48843, 153.663, 175.967, 0.12 ) }
    dend_39 { pt3dadd( 8.50898, 155.119, 176.203, 0.12 ) }
    dend_39 { pt3dadd( 8.5557, 158.75, 176.805, 0.24 ) }
    dend_39 { pt3dadd( 8.57621, 161.004, 177.225, 0.24 ) }
    dend_39 { pt3dadd( 8.57409, 164.281, 178.031, 0.49 ) }
    dend_39 { pt3dadd( 8.61307, 166.405, 178.788, 0.49 ) }
    dend_39 { pt3dadd( 8.6666, 167.929, 179.576, 0.49 ) }
    dend_39 { pt3dadd( 9.03854, 171.622, 182.264, 0.49 ) }
    dend_39 { pt3dadd( 9.33565, 173.605, 184.146, 0.49 ) }
    dend_39 { pt3dadd( 9.58334, 174.802, 185.586, 0.49 ) }
    dend_39 { pt3dadd( 9.94804, 176.071, 187.57, 0.49 ) }
    dend_39 { pt3dadd( 10.2969, 176.939, 189.203, 0.49 ) }
    dend_39 { pt3dadd( 10.727, 177.544, 190.489, 0.49 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 43/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 5.73801, 114.289, 155.906, 0.73 ) }
    dend_38 { pt3dadd( 7.04581, 117.369, 158.262, 0.73 ) }
    dend_38 { pt3dadd( 7.57386, 118.807, 159.358, 0.73 ) }
    dend_38 { pt3dadd( 8.70063, 122.172, 161.952, 0.73 ) }
    dend_38 { pt3dadd( 9.24825, 123.807, 163.213, 0.73 ) }
    dend_38 { pt3dadd( 10.5743, 127.767, 166.265, 0.73 ) }
    dend_38 { pt3dadd( 11.3618, 130.119, 168.078, 0.73 ) }
    dend_38 { pt3dadd( 11.7329, 131.621, 169.227, 0.73 ) }
    dend_38 { pt3dadd( 11.8982, 132.46, 169.924, 0.73 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 52/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -11.5917, 3.79084, -4.51, 1.22 ) }
    dend_28 { pt3dadd( -13.9351, 4.08126, -4.19338, 1.22 ) }
    dend_28 { pt3dadd( -15.7076, 4.30168, -3.87686, 0.98 ) }
    dend_28 { pt3dadd( -17.3946, 4.57122, -3.49907, 0.98 ) }
    dend_28 { pt3dadd( -18.8439, 4.88349, -3.11539, 0.98 ) }
    dend_28 { pt3dadd( -21.2327, 5.57696, -2.28123, 0.98 ) }
    dend_28 { pt3dadd( -23.2193, 6.31141, -1.39512, 0.98 ) }
    dend_28 { pt3dadd( -24.3046, 6.82305, -0.701414, 0.98 ) }
    dend_28 { pt3dadd( -25.1551, 7.28205, -0.0696848, 0.98 ) }
    dend_28 { pt3dadd( -25.9189, 7.88382, 0.633043, 0.98 ) }
    dend_28 { pt3dadd( -27.0447, 9.19597, 2.05612, 0.98 ) }
    dend_28 { pt3dadd( -27.4393, 9.97914, 2.90211, 1.35 ) }
    dend_28 { pt3dadd( -28.0661, 12.0715, 5.11069, 1.35 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 65/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.5917, 3.79084, -4.51, 1.35 ) }
    dend_27 { pt3dadd( -14.1563, 2.13872, -3.07767, 1.35 ) }
    dend_27 { pt3dadd( -16.2557, 0.72802, -2.03577, 1.1 ) }
    dend_27 { pt3dadd( -19.2304, -1.49236, -0.194054, 1.1 ) }
    dend_27 { pt3dadd( -21.9827, -3.37024, 1.75673, 1.1 ) }
    dend_27 { pt3dadd( -23.4855, -4.36018, 2.88073, 1.1 ) }
    dend_27 { pt3dadd( -25.6996, -5.83302, 4.63122, 1.1 ) }
    dend_27 { pt3dadd( -26.3881, -6.30857, 5.23279, 1.1 ) }
    dend_27 { pt3dadd( -30.1159, -8.94407, 8.95466, 1.1 ) }
    dend_27 { pt3dadd( -33.0176, -10.8063, 12.5432, 1.1 ) }
    dend_27 { pt3dadd( -34.4126, -11.7651, 14.5968, 1.1 ) }
    dend_27 { pt3dadd( -35.8473, -12.8664, 17.0484, 1.1 ) }
    dend_27 { pt3dadd( -36.5962, -13.3702, 18.4674, 1.1 ) }
    dend_27 { pt3dadd( -38.2777, -14.3819, 21.7842, 0.98 ) }
    dend_27 { pt3dadd( -41.9086, -16.4046, 29.0632, 0.98 ) }
    dend_27 { pt3dadd( -43.4423, -17.2123, 32.3297, 0.98 ) }
    dend_27 { pt3dadd( -46.0207, -18.3737, 37.77, 0.86 ) }
    dend_27 { pt3dadd( -49.506, -19.6921, 44.7392, 0.86 ) }
    dend_27 { pt3dadd( -50.0105, -19.8554, 45.6596, 0.86 ) }
    dend_27 { pt3dadd( -51.6684, -20.3549, 48.3717, 0.86 ) }
    dend_27 { pt3dadd( -53.4957, -20.928, 51.144, 0.86 ) }
    dend_27 { pt3dadd( -54.9414, -21.2681, 53.1252, 0.86 ) }
    dend_27 { pt3dadd( -57.2262, -21.8343, 55.9376, 0.86 ) }
    dend_27 { pt3dadd( -58.8891, -22.4249, 57.9922, 0.86 ) }
    dend_27 { pt3dadd( -61.5926, -23.5279, 61.5365, 0.86 ) }
    dend_27 { pt3dadd( -62.9059, -24.1155, 63.4038, 0.86 ) }
    dend_27 { pt3dadd( -64.3489, -24.8143, 65.554, 0.86 ) }
    dend_27 { pt3dadd( -65.3197, -25.2831, 67.156, 0.86 ) }
    dend_27 { pt3dadd( -67.1735, -26.0821, 70.7303, 0.86 ) }
    dend_27 { pt3dadd( -68.0504, -26.4022, 72.6172, 0.86 ) }
    dend_27 { pt3dadd( -69.2164, -26.6714, 75.5176, 0.86 ) }
    dend_27 { pt3dadd( -70.182, -26.8228, 77.9389, 0.86 ) }
    dend_27 { pt3dadd( -71.029, -26.9524, 80.0388, 0.86 ) }
    dend_27 { pt3dadd( -73.0314, -27.2098, 84.6248, 0.86 ) }
    dend_27 { pt3dadd( -73.513, -27.2478, 85.6791, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_27 { pt3dadd( -76.1938, -27.3622, 91.2972, 0.86 ) }
    dend_27 { pt3dadd( -77.6015, -27.4576, 94.1456, 0.86 ) }
    dend_27 { pt3dadd( -78.9477, -27.6141, 96.7483, 0.86 ) }
    dend_27 { pt3dadd( -80.6984, -27.8083, 99.7919, 0.86 ) }
    dend_27 { pt3dadd( -83.684, -28.1283, 104.485, 0.86 ) }
    dend_27 { pt3dadd( -84.803, -28.2146, 106.177, 0.86 ) }
    dend_27 { pt3dadd( -87.3411, -28.2754, 109.719, 0.86 ) }
    dend_27 { pt3dadd( -89.3503, -28.2081, 112.59, 0.86 ) }
    dend_27 { pt3dadd( -92.5846, -27.9442, 117.117, 0.86 ) }
    dend_27 { pt3dadd( -93.9655, -27.8286, 118.999, 0.86 ) }
    dend_27 { pt3dadd( -95.1073, -27.7373, 120.475, 0.86 ) }
    dend_27 { pt3dadd( -97.7332, -27.3715, 123.859, 0.86 ) }
    dend_27 { pt3dadd( -99.8944, -26.9283, 126.495, 0.86 ) }
    dend_27 { pt3dadd( -101.258, -26.6081, 128.128, 0.86 ) }
    dend_27 { pt3dadd( -103.712, -25.9236, 131.049, 0.86 ) }
    dend_27 { pt3dadd( -105.511, -25.4802, 133.07, 0.86 ) }
    dend_27 { pt3dadd( -108.457, -24.9229, 136.184, 0.86 ) }
    dend_27 { pt3dadd( -110.228, -24.6812, 137.982, 0.86 ) }
    dend_27 { pt3dadd( -112.351, -24.477, 140.05, 0.86 ) }
    dend_27 { pt3dadd( -116.524, -24.3265, 144.138, 0.86 ) }
    dend_27 { pt3dadd( -119.407, -24.4743, 147.06, 0.86 ) }
    dend_27 { pt3dadd( -121.603, -24.826, 149.31, 0.86 ) }
    dend_27 { pt3dadd( -124.466, -25.6282, 152.238, 0.86 ) }
    dend_27 { pt3dadd( -126.936, -26.4911, 154.788, 0.86 ) }
    dend_27 { pt3dadd( -128.382, -27.0411, 156.257, 0.86 ) }
    dend_27 { pt3dadd( -130.962, -28.0785, 158.964, 0.86 ) }
    dend_27 { pt3dadd( -133.546, -29.1289, 161.651, 0.86 ) }
    dend_27 { pt3dadd( -135.743, -30.1283, 163.872, 0.86 ) }
    dend_27 { pt3dadd( -139.076, -31.7786, 167.166, 0.86 ) }
    dend_27 { pt3dadd( -140.953, -32.7143, 168.997, 0.86 ) }
    dend_27 { pt3dadd( -143.537, -33.9223, 171.468, 0.86 ) }
    dend_27 { pt3dadd( -146.681, -35.3329, 174.397, 0.86 ) }
    dend_27 { pt3dadd( -148.971, -36.4116, 176.629, 0.86 ) }
    dend_27 { pt3dadd( -150.851, -37.3528, 178.414, 0.86 ) }
    // Section: dend_23, id: dend_23, parent: dend_14 (entry count 34/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 22.4033, 13.9697, -15.6136, 0.73 ) }
    dend_23 { pt3dadd( 23.0341, 16.8831, -16.0433, 0.73 ) }
    dend_23 { pt3dadd( 23.4339, 18.9002, -16.2776, 0.86 ) }
    dend_23 { pt3dadd( 23.7365, 20.7046, -16.2529, 0.86 ) }
    dend_23 { pt3dadd( 23.9268, 22.016, -16.1787, 0.86 ) }
    dend_23 { pt3dadd( 24.2091, 24.1551, -16.0561, 0.73 ) }
    dend_23 { pt3dadd( 24.6151, 26.6491, -15.9495, 0.73 ) }
    dend_23 { pt3dadd( 24.8297, 27.5814, -15.9157, 0.73 ) }
    dend_23 { pt3dadd( 26.1621, 30.5621, -17.0949, 0.73 ) }
    dend_23 { pt3dadd( 27.0485, 31.8744, -18.1686, 0.73 ) }
    dend_23 { pt3dadd( 27.8749, 32.8852, -19.3493, 0.73 ) }
    dend_23 { pt3dadd( 28.7971, 33.8945, -20.7292, 0.73 ) }
    dend_23 { pt3dadd( 30.5485, 35.6553, -23.3237, 0.73 ) }
    dend_23 { pt3dadd( 34.0699, 39.0578, -28.5157, 0.73 ) }
    dend_23 { pt3dadd( 34.461, 39.4011, -29.0677, 0.73 ) }
    dend_23 { pt3dadd( 36.3034, 40.8928, -31.4593, 0.73 ) }
    dend_23 { pt3dadd( 37.127, 41.5489, -32.4673, 0.73 ) }
    dend_23 { pt3dadd( 37.9513, 42.2707, -33.4265, 0.73 ) }
    dend_23 { pt3dadd( 39.0502, 43.3199, -34.4994, 0.73 ) }
    dend_23 { pt3dadd( 40.7057, 44.9704, -35.8186, 0.73 ) }
    dend_23 { pt3dadd( 42.2544, 46.6738, -37.0461, 0.73 ) }
    dend_23 { pt3dadd( 43.2012, 47.8286, -37.7483, 0.73 ) }
    dend_23 { pt3dadd( 44.2216, 49.2267, -38.5195, 0.73 ) }
    dend_23 { pt3dadd( 45.3686, 51.1578, -39.4325, 0.73 ) }
    dend_23 { pt3dadd( 45.7423, 51.993, -39.747, 0.73 ) }
    dend_23 { pt3dadd( 46.515, 54.1753, -40.4506, 0.73 ) }
    dend_23 { pt3dadd( 46.9895, 55.7273, -40.8745, 0.73 ) }
    dend_23 { pt3dadd( 47.3572, 57.0344, -41.2096, 0.73 ) }
    dend_23 { pt3dadd( 47.7595, 58.56, -41.5989, 0.49 ) }
    dend_23 { pt3dadd( 48.3881, 61.4666, -42.3272, 0.61 ) }
    dend_23 { pt3dadd( 52.4193, 66.1372, -46.8415, 0.61 ) }
    dend_23 { pt3dadd( 58.1847, 69.7468, -50.2781, 0.61 ) }
    dend_23 { pt3dadd( 64.0378, 71.6355, -54.7263, 0.61 ) }
    dend_23 { pt3dadd( 69.5955, 72.4802, -59.8131, 0.61 ) }
    dend_23 { pt3dadd( 75.3792, 74.6972, -64.2073, 0.61 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 22.4033, 13.9697, -15.6136, 1.35 ) }
    dend_15 { pt3dadd( 24.0759, 14.9347, -15.5725, 1.35 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 71/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.09625, -23.9594, -0.331938, 1.1 ) }
    dend_13 { pt3dadd( 8.67639, -33.5103, 1.03726, 1.1 ) }
    dend_13 { pt3dadd( 8.65528, -36.4913, 1.48888, 1.1 ) }
    dend_13 { pt3dadd( 8.89182, -41.7337, 2.4452, 1.1 ) }
    dend_13 { pt3dadd( 9.71798, -47.4378, 3.05131, 1.1 ) }
    dend_13 { pt3dadd( 9.88681, -48.3587, 3.11069, 1.1 ) }
    dend_13 { pt3dadd( 10.2781, -50.3012, 3.18179, 1.1 ) }
    dend_13 { pt3dadd( 10.8682, -52.4924, 3.12105, 1.1 ) }
    dend_13 { pt3dadd( 12.1941, -56.5994, 3.03579, 1.1 ) }
    dend_13 { pt3dadd( 15.215, -64.6053, 2.9336, 1.1 ) }
    dend_13 { pt3dadd( 18.0714, -71.363, 2.9113, 1.1 ) }
    dend_13 { pt3dadd( 19.5776, -74.7447, 2.90552, 1.1 ) }
    dend_13 { pt3dadd( 22.2901, -80.7378, 2.8932, 0.86 ) }
    dend_13 { pt3dadd( 25.0368, -87.0638, 2.89535, 0.86 ) }
    dend_13 { pt3dadd( 26.7026, -91.1013, 2.99296, 0.86 ) }
    dend_13 { pt3dadd( 28.9729, -97.1315, 3.41409, 0.86 ) }
    dend_13 { pt3dadd( 30.683, -101.573, 3.65884, 0.86 ) }
    dend_13 { pt3dadd( 31.3144, -103.375, 3.7647, 0.86 ) }
    dend_13 { pt3dadd( 33.0857, -108.963, 4.01496, 0.86 ) }
    dend_13 { pt3dadd( 34.6419, -114.482, 4.20877, 0.61 ) }
    dend_13 { pt3dadd( 35.7807, -118.967, 4.31415, 0.61 ) }
    dend_13 { pt3dadd( 36.568, -122.075, 4.44422, 0.61 ) }
    dend_13 { pt3dadd( 37.8517, -126.684, 4.74703, 0.61 ) }
    dend_13 { pt3dadd( 38.9329, -129.891, 4.99215, 0.61 ) }
    dend_13 { pt3dadd( 39.7158, -131.829, 5.15151, 0.61 ) }
    dend_13 { pt3dadd( 40.9699, -134.738, 5.3717, 0.24 ) }
    dend_13 { pt3dadd( 44.1589, -141.96, 5.94739, 0.37 ) }
    dend_13 { pt3dadd( 45.2541, -144.479, 6.1596, 0.37 ) }
    dend_13 { pt3dadd( 46.4995, -147.443, 6.41133, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_13 { pt3dadd( 47.2373, -149.349, 6.54271, 0.37 ) }
    dend_13 { pt3dadd( 48.2312, -152.119, 6.632, 0.37 ) }
    dend_13 { pt3dadd( 48.9562, -154.041, 6.63946, 0.37 ) }
    dend_13 { pt3dadd( 49.9231, -156.541, 6.5277, 0.37 ) }
    dend_13 { pt3dadd( 51.2148, -159.988, 6.34755, 0.12 ) }
    dend_13 { pt3dadd( 52.4717, -163.531, 6.14225, 0.37 ) }
    dend_13 { pt3dadd( 53.217, -165.61, 5.97301, 0.37 ) }
    dend_13 { pt3dadd( 54.7557, -169.875, 5.77379, 0.61 ) }
    dend_13 { pt3dadd( 55.8581, -172.7, 5.73001, 0.61 ) }
    dend_13 { pt3dadd( 57.4235, -176.831, 5.74706, 0.61 ) }
    dend_13 { pt3dadd( 58.3964, -179.281, 5.90278, 0.61 ) }
    dend_13 { pt3dadd( 59.8745, -182.918, 6.31613, 0.12 ) }
    dend_13 { pt3dadd( 63.3287, -191.207, 7.59659, 0.61 ) }
    dend_13 { pt3dadd( 65.1099, -195.48, 8.44629, 0.61 ) }
    dend_13 { pt3dadd( 67.3741, -200.462, 9.6433, 1.22 ) }
    dend_13 { pt3dadd( 70.8982, -208.177, 11.858, 0.49 ) }
    dend_13 { pt3dadd( 72.1402, -211.009, 12.74, 0.49 ) }
    dend_13 { pt3dadd( 74.2117, -216.114, 14.4356, 0.61 ) }
    dend_13 { pt3dadd( 75.8662, -220.369, 15.9383, 0.12 ) }
    dend_13 { pt3dadd( 77.2791, -224.472, 17.5232, 0.49 ) }
    dend_13 { pt3dadd( 79.1956, -230.55, 20.1156, 0.49 ) }
    dend_13 { pt3dadd( 80.2006, -235.092, 22.2223, 0.49 ) }
    dend_13 { pt3dadd( 80.9384, -238.872, 24.0226, 0.37 ) }
    dend_13 { pt3dadd( 81.3805, -241.849, 25.4888, 0.24 ) }
    dend_13 { pt3dadd( 81.8461, -246.442, 27.874, 0.49 ) }
    dend_13 { pt3dadd( 82.0351, -251.063, 30.5528, 0.49 ) }
    dend_13 { pt3dadd( 82.1969, -256.844, 34.3913, 0.49 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 27/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 9.09625, -23.9594, -0.331938, 1.71 ) }
    dend_2 { pt3dadd( 9.05269, -29.7773, -3.17355, 1.71 ) }
    dend_2 { pt3dadd( 9.02172, -33.9132, -5.19363, 1.47 ) }
    dend_2 { pt3dadd( 8.98958, -38.2062, -7.29039, 1.71 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 31/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.07651, 37.8408, 0.0, 0.49 ) }
    axon_1 { pt3dadd( -9.76681, 52.5975, 0.0, 0.49 ) }
    axon_1 { pt3dadd( -12.4571, 67.3543, 0.0, 0.49 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 34/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -28.0661, 12.0715, 5.11069, 0.49 ) }
    dend_36 { pt3dadd( -31.0213, 10.3105, 6.38783, 0.49 ) }
    dend_36 { pt3dadd( -34.6015, 8.45476, 8.07156, 0.37 ) }
    dend_36 { pt3dadd( -37.3254, 7.21647, 9.42523, 0.37 ) }
    dend_36 { pt3dadd( -38.6021, 6.65953, 10.0673, 0.37 ) }
    dend_36 { pt3dadd( -41.0087, 5.73345, 11.4091, 0.37 ) }
    dend_36 { pt3dadd( -42.8715, 5.10087, 12.5531, 0.37 ) }
    dend_36 { pt3dadd( -44.64, 4.68557, 13.765, 0.37 ) }
    dend_36 { pt3dadd( -46.416, 4.41003, 15.0879, 0.37 ) }
    dend_36 { pt3dadd( -48.5568, 4.18702, 16.7083, 0.37 ) }
    dend_36 { pt3dadd( -52.9795, 3.84559, 20.0611, 0.37 ) }
    dend_36 { pt3dadd( -55.8821, 3.69146, 22.2445, 0.37 ) }
    dend_36 { pt3dadd( -57.7725, 3.65052, 23.6116, 0.37 ) }
    dend_36 { pt3dadd( -61.7177, 3.68605, 26.2758, 0.37 ) }
    dend_36 { pt3dadd( -63.8884, 3.75716, 27.6574, 0.37 ) }
    dend_36 { pt3dadd( -66.4443, 3.89139, 29.1123, 0.37 ) }
    dend_36 { pt3dadd( -68.8595, 3.9913, 30.2717, 0.37 ) }
    dend_36 { pt3dadd( -73.0374, 4.08115, 32.0721, 0.37 ) }
    dend_36 { pt3dadd( -75.4904, 4.06696, 33.0699, 0.37 ) }
    dend_36 { pt3dadd( -77.6882, 4.00082, 33.9189, 0.37 ) }
    dend_36 { pt3dadd( -81.6893, 3.74922, 35.5223, 0.37 ) }
    dend_36 { pt3dadd( -84.7305, 3.47072, 36.7738, 0.37 ) }
    dend_36 { pt3dadd( -86.7514, 3.23562, 37.6322, 0.37 ) }
    dend_36 { pt3dadd( -89.3525, 2.9079, 38.7477, 0.37 ) }
    dend_36 { pt3dadd( -91.8119, 2.62862, 39.7374, 0.37 ) }
    dend_36 { pt3dadd( -96.0589, 2.19821, 41.2645, 0.37 ) }
    dend_36 { pt3dadd( -98.4193, 1.97579, 42.069, 0.37 ) }
    dend_36 { pt3dadd( -101.299, 1.74046, 43.0321, 0.37 ) }
    dend_36 { pt3dadd( -104.752, 1.51421, 44.1178, 0.37 ) }
    dend_36 { pt3dadd( -107.516, 1.3341, 45.0167, 0.37 ) }
    dend_36 { pt3dadd( -111.656, 0.984174, 46.3332, 0.37 ) }
    dend_36 { pt3dadd( -117.937, 0.204448, 48.1758, 0.37 ) }
    dend_36 { pt3dadd( -122.119, -0.587201, 49.343, 0.37 ) }
    dend_36 { pt3dadd( -125.803, -1.62015, 50.2981, 0.37 ) }
    dend_36 { pt3dadd( -129.415, -3.03572, 51.2685, 0.37 ) }
    dend_36 { pt3dadd( -132.648, -4.65783, 52.146, 0.37 ) }
    dend_36 { pt3dadd( -135.199, -6.30236, 52.8356, 0.37 ) }
    dend_36 { pt3dadd( -137.654, -8.19382, 53.5315, 0.37 ) }
    dend_36 { pt3dadd( -140.311, -10.4456, 54.5744, 0.37 ) }
    dend_36 { pt3dadd( -145.319, -14.6626, 56.7729, 0.37 ) }
    dend_36 { pt3dadd( -147.743, -16.5453, 57.8242, 0.37 ) }
    dend_36 { pt3dadd( -150.156, -18.2057, 58.907, 0.37 ) }
    dend_36 { pt3dadd( -152.671, -19.724, 60.0653, 0.37 ) }
    dend_36 { pt3dadd( -157.733, -22.5279, 62.5031, 0.37 ) }
    dend_36 { pt3dadd( -162.768, -25.209, 64.9295, 0.37 ) }
    dend_36 { pt3dadd( -165.993, -26.915, 66.3253, 0.37 ) }
    dend_36 { pt3dadd( -170.137, -29.0435, 67.9947, 0.37 ) }
    dend_36 { pt3dadd( -173.775, -30.8474, 69.2979, 0.37 ) }
    dend_36 { pt3dadd( -179.15, -33.4768, 70.9468, 0.37 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 83/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -28.0661, 12.0715, 5.11069, 1.1 ) }
    dend_29 { pt3dadd( -28.583, 15.1938, 3.57566, 1.1 ) }
    dend_29 { pt3dadd( -29.4508, 20.437, 0.998003, 0.86 ) }
    dend_29 { pt3dadd( -29.8039, 22.5701, -0.050665, 0.61 ) }
    dend_29 { pt3dadd( -30.5691, 27.1931, -2.32341, 1.35 ) }
    dend_29 { pt3dadd( -30.7172, 28.0881, -2.76343, 1.35 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 75.3792, 74.6972, -64.2073, 0.61 ) }
    dend_25 { pt3dadd( 81.7047, 81.8992, -70.0454, 0.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 75.3792, 74.6972, -64.2073, 0.61 ) }
    dend_24 { pt3dadd( 81.6782, 81.9607, -69.9711, 0.61 ) }
    dend_24 { pt3dadd( 89.1831, 87.6093, -76.0082, 0.61 ) }
    dend_24 { pt3dadd( 95.5986, 95.0797, -81.3792, 0.61 ) }
    dend_24 { pt3dadd( 101.84, 101.87, -87.7245, 0.61 ) }
    dend_24 { pt3dadd( 108.828, 109.761, -91.6054, 0.61 ) }
    // Section: dend_22, id: dend_22, parent: dend_15 (entry count 97/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 24.0759, 14.9347, -15.5725, 0.98 ) }
    dend_22 { pt3dadd( 27.0726, 20.6544, -7.50052, 0.98 ) }
    dend_22 { pt3dadd( 27.5492, 21.8256, -5.97166, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_22 { pt3dadd( 28.3735, 24.5461, -2.71647, 0.98 ) }
    dend_22 { pt3dadd( 28.7073, 26.0511, -1.10809, 0.98 ) }
    dend_22 { pt3dadd( 29.175, 28.5857, 1.36452, 0.98 ) }
    dend_22 { pt3dadd( 29.729, 31.9004, 4.46514, 0.98 ) }
    dend_22 { pt3dadd( 29.8202, 32.924, 5.24555, 0.98 ) }
    dend_22 { pt3dadd( 29.9094, 34.5375, 6.41496, 0.98 ) }
    dend_22 { pt3dadd( 29.9669, 36.7794, 7.87784, 0.98 ) }
    dend_22 { pt3dadd( 30.1413, 39.5341, 9.68574, 0.98 ) }
    dend_22 { pt3dadd( 30.5174, 41.9572, 11.2623, 0.98 ) }
    dend_22 { pt3dadd( 30.7662, 42.9996, 11.936, 0.98 ) }
    dend_22 { pt3dadd( 31.2163, 44.8564, 13.2388, 0.98 ) }
    dend_22 { pt3dadd( 31.7774, 47.3118, 15.1287, 0.98 ) }
    dend_22 { pt3dadd( 32.1145, 48.834, 16.3051, 0.98 ) }
    dend_22 { pt3dadd( 32.5207, 50.9914, 17.8169, 0.98 ) }
    dend_22 { pt3dadd( 33.0782, 54.3459, 19.9225, 0.98 ) }
    dend_22 { pt3dadd( 33.5015, 57.3577, 21.7056, 0.98 ) }
    dend_22 { pt3dadd( 34.0326, 61.5262, 24.0649, 0.98 ) }
    dend_22 { pt3dadd( 34.3263, 64.0894, 25.446, 0.61 ) }
    dend_22 { pt3dadd( 34.6435, 67.7399, 27.3096, 0.37 ) }
    dend_22 { pt3dadd( 34.7703, 70.5918, 28.7945, 0.61 ) }
    dend_22 { pt3dadd( 34.8074, 73.6864, 30.4009, 0.73 ) }
    dend_22 { pt3dadd( 34.7976, 73.9964, 30.5664, 0.73 ) }
    dend_22 { pt3dadd( 34.587, 76.1073, 31.8787, 0.73 ) }
    dend_22 { pt3dadd( 34.179, 78.5782, 33.6341, 0.73 ) }
    dend_22 { pt3dadd( 33.4088, 82.5674, 36.5972, 0.73 ) }
    dend_22 { pt3dadd( 33.2148, 83.6801, 37.3985, 0.73 ) }
    dend_22 { pt3dadd( 32.9463, 85.7249, 38.7827, 0.73 ) }
    dend_22 { pt3dadd( 32.677, 88.5599, 40.5745, 0.73 ) }
    dend_22 { pt3dadd( 32.5576, 91.9542, 42.3998, 0.73 ) }
    dend_22 { pt3dadd( 32.6798, 94.9564, 43.7793, 0.73 ) }
    dend_22 { pt3dadd( 33.0977, 98.4121, 45.134, 0.73 ) }
    dend_22 { pt3dadd( 33.648, 101.663, 46.3445, 0.73 ) }
    dend_22 { pt3dadd( 34.0487, 103.512, 47.0145, 0.73 ) }
    dend_22 { pt3dadd( 35.0698, 107.668, 48.426, 0.73 ) }
    dend_22 { pt3dadd( 35.8449, 110.367, 49.367, 0.73 ) }
    dend_22 { pt3dadd( 36.6834, 113.016, 50.2923, 0.73 ) }
    dend_22 { pt3dadd( 37.6528, 115.899, 51.4205, 0.73 ) }
    dend_22 { pt3dadd( 38.5584, 118.646, 52.7887, 0.73 ) }
    dend_22 { pt3dadd( 39.1772, 120.763, 54.0596, 0.73 ) }
    dend_22 { pt3dadd( 39.7222, 123.019, 55.6293, 0.73 ) }
    dend_22 { pt3dadd( 40.1908, 125.742, 57.7283, 0.73 ) }
    dend_22 { pt3dadd( 40.5652, 130.068, 61.3211, 0.73 ) }
    dend_22 { pt3dadd( 40.5431, 134.318, 65.1724, 0.73 ) }
    dend_22 { pt3dadd( 40.3973, 136.064, 66.8416, 0.73 ) }
    dend_22 { pt3dadd( 40.2545, 137.253, 68.0129, 0.73 ) }
    dend_22 { pt3dadd( 39.8007, 140.69, 71.3185, 0.73 ) }
    dend_22 { pt3dadd( 39.4837, 143.926, 74.1283, 0.73 ) }
    dend_22 { pt3dadd( 39.3193, 147.58, 76.8215, 0.73 ) }
    dend_22 { pt3dadd( 39.3623, 148.822, 77.6007, 0.73 ) }
    dend_22 { pt3dadd( 39.7048, 151.714, 79.1994, 0.73 ) }
    dend_22 { pt3dadd( 40.3128, 154.869, 80.6872, 0.73 ) }
    dend_22 { pt3dadd( 41.588, 159.697, 82.5254, 0.73 ) }
    dend_22 { pt3dadd( 42.4673, 162.387, 83.4118, 0.73 ) }
    dend_22 { pt3dadd( 43.66, 165.593, 84.339, 0.73 ) }
    dend_22 { pt3dadd( 45.2904, 169.549, 85.4135, 0.73 ) }
    dend_22 { pt3dadd( 46.59, 172.66, 86.218, 0.73 ) }
    dend_22 { pt3dadd( 47.7872, 175.383, 86.8969, 0.73 ) }
    dend_22 { pt3dadd( 49.4593, 178.844, 87.7048, 0.73 ) }
    dend_22 { pt3dadd( 51.144, 182.022, 88.4718, 0.73 ) }
    dend_22 { pt3dadd( 52.7154, 184.752, 89.181, 0.73 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 60/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 24.0759, 14.9347, -15.5725, 0.98 ) }
    dend_19 { pt3dadd( 24.2937, 17.1547, -15.5916, 0.98 ) }
    dend_19 { pt3dadd( 24.8111, 20.5053, -15.8863, 0.86 ) }
    dend_19 { pt3dadd( 25.5195, 25.5063, -16.4607, 0.86 ) }
    dend_19 { pt3dadd( 25.9567, 28.5735, -16.9031, 0.73 ) }
    dend_19 { pt3dadd( 26.3257, 31.2486, -17.3056, 0.73 ) }
    dend_19 { pt3dadd( 26.7388, 34.0975, -17.7427, 0.98 ) }
    dend_19 { pt3dadd( 27.3259, 37.8638, -18.3801, 0.86 ) }
    dend_19 { pt3dadd( 27.7217, 40.148, -18.8707, 0.61 ) }
    dend_19 { pt3dadd( 28.721, 44.9316, -20.1932, 0.49 ) }
    dend_19 { pt3dadd( 29.5973, 48.3052, -21.2378, 0.49 ) }
    dend_19 { pt3dadd( 30.0697, 49.9948, -21.7416, 0.49 ) }
    dend_19 { pt3dadd( 30.2773, 50.7882, -21.9789, 0.49 ) }
    dend_19 { pt3dadd( 31.0399, 53.436, -22.7642, 0.49 ) }
    dend_19 { pt3dadd( 32.111, 56.6813, -23.833, 0.49 ) }
    dend_19 { pt3dadd( 32.6518, 58.1211, -24.357, 0.49 ) }
    dend_19 { pt3dadd( 33.0861, 59.3082, -24.7948, 0.49 ) }
    dend_19 { pt3dadd( 34.0731, 61.9446, -25.799, 0.86 ) }
    dend_19 { pt3dadd( 34.8733, 64.1558, -26.5622, 0.73 ) }
    dend_19 { pt3dadd( 35.7305, 66.5557, -27.2101, 0.73 ) }
    dend_19 { pt3dadd( 37.247, 70.31, -28.0954, 0.73 ) }
    dend_19 { pt3dadd( 38.7741, 73.5281, -28.8391, 0.61 ) }
    dend_19 { pt3dadd( 40.3565, 76.6742, -29.5536, 0.73 ) }
    dend_19 { pt3dadd( 41.8821, 79.3595, -30.0896, 0.73 ) }
    dend_19 { pt3dadd( 44.8052, 84.0949, -30.978, 1.22 ) }
    dend_19 { pt3dadd( 46.9422, 87.3614, -31.4701, 0.98 ) }
    dend_19 { pt3dadd( 48.4366, 89.5226, -31.6035, 0.98 ) }
    dend_19 { pt3dadd( 52.1648, 96.9546, -34.1594, 0.98 ) }
    dend_19 { pt3dadd( 54.5508, 105.14, -36.041, 0.98 ) }
    dend_19 { pt3dadd( 57.6171, 113.239, -37.1291, 0.98 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 90/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 24.0759, 14.9347, -15.5725, 1.22 ) }
    dend_16 { pt3dadd( 27.4855, 14.4358, -15.4412, 1.22 ) }
    dend_16 { pt3dadd( 37.2077, 13.2133, -15.3716, 1.1 ) }
    dend_16 { pt3dadd( 42.6547, 12.6812, -15.5365, 0.86 ) }
    dend_16 { pt3dadd( 51.8022, 12.1451, -15.8865, 1.1 ) }
    dend_16 { pt3dadd( 57.7316, 11.9617, -16.214, 1.1 ) }
    dend_16 { pt3dadd( 69.8769, 11.9347, -16.9618, 1.22 ) }
    dend_16 { pt3dadd( 75.9621, 12.1966, -17.4078, 1.1 ) }
    dend_16 { pt3dadd( 81.3134, 12.6588, -17.7549, 0.73 ) }
    dend_16 { pt3dadd( 87.6743, 13.4663, -18.1931, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 93.5955, 14.3691, -18.6973, 0.98 ) }
    dend_16 { pt3dadd( 99.016, 15.3362, -19.0385, 1.22 ) }
    dend_16 { pt3dadd( 103.554, 16.0316, -19.2941, 0.98 ) }
    dend_16 { pt3dadd( 111.227, 17.226, -19.8014, 1.22 ) }
    dend_16 { pt3dadd( 116.362, 17.9221, -20.1988, 0.86 ) }
    dend_16 { pt3dadd( 125.636, 19.0773, -21.0062, 0.86 ) }
    dend_16 { pt3dadd( 140.394, 20.8575, -22.3206, 1.1 ) }
    dend_16 { pt3dadd( 150.11, 21.9517, -23.3448, 1.1 ) }
    dend_16 { pt3dadd( 157.662, 22.807, -24.2828, 0.98 ) }
    dend_16 { pt3dadd( 163.544, 23.5602, -25.1456, 0.86 ) }
    dend_16 { pt3dadd( 176.783, 27.2346, -26.0417, 0.86 ) }
    dend_16 { pt3dadd( 189.755, 30.3131, -29.4872, 0.86 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 12/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 8.98958, -38.2062, -7.29039, 0.61 ) }
    dend_10 { pt3dadd( 13.3682, -38.6193, -7.82707, 0.61 ) }
    dend_10 { pt3dadd( 21.3013, -39.5243, -8.91104, 0.98 ) }
    dend_10 { pt3dadd( 29.4172, -40.745, -10.2165, 0.98 ) }
    dend_10 { pt3dadd( 37.6203, -42.1538, -11.6902, 0.98 ) }
    dend_10 { pt3dadd( 41.9388, -42.9083, -12.5239, 0.86 ) }
    dend_10 { pt3dadd( 42.8191, -43.0575, -12.7242, 0.86 ) }
    dend_10 { pt3dadd( 45.3468, -43.4411, -13.4702, 0.86 ) }
    dend_10 { pt3dadd( 48.2924, -43.7538, -14.5766, 0.86 ) }
    dend_10 { pt3dadd( 50.9081, -43.9554, -15.7073, 1.1 ) }
    dend_10 { pt3dadd( 55.5267, -44.1295, -17.897, 1.1 ) }
    dend_10 { pt3dadd( 59.5782, -43.7658, -19.6099, 0.86 ) }
    dend_10 { pt3dadd( 61.5961, -43.2674, -20.3715, 0.86 ) }
    dend_10 { pt3dadd( 63.6546, -42.2215, -21.0089, 0.86 ) }
    dend_10 { pt3dadd( 64.7628, -41.0775, -21.1313, 0.61 ) }
    dend_10 { pt3dadd( 65.1333, -36.6135, -19.4898, 0.49 ) }
    dend_10 { pt3dadd( 64.854, -33.9989, -18.2041, 0.24 ) }
    dend_10 { pt3dadd( 64.6725, -32.8166, -17.4984, 0.24 ) }
    dend_10 { pt3dadd( 64.3996, -31.1687, -16.5346, 0.24 ) }
    dend_10 { pt3dadd( 64.0669, -29.4828, -15.4849, 0.24 ) }
    dend_10 { pt3dadd( 63.3965, -25.6526, -13.1653, 0.24 ) }
    dend_10 { pt3dadd( 63.2856, -24.5666, -12.6282, 0.24 ) }
    dend_10 { pt3dadd( 63.1819, -23.0211, -11.709, 1.22 ) }
    dend_10 { pt3dadd( 63.2038, -19.8181, -9.59927, 1.35 ) }
    dend_10 { pt3dadd( 73.3193, -17.9802, -12.1753, 1.35 ) }
    dend_10 { pt3dadd( 83.1164, -14.0206, -13.2794, 1.35 ) }
    dend_10 { pt3dadd( 93.3795, -11.4502, -14.0215, 1.35 ) }
    dend_10 { pt3dadd( 103.714, -9.07731, -13.8587, 1.35 ) }
    dend_10 { pt3dadd( 113.883, -6.5874, -12.1555, 1.35 ) }
    dend_10 { pt3dadd( 124.071, -5.28494, -9.54138, 1.35 ) }
    dend_10 { pt3dadd( 134.341, -2.99967, -8.21435, 1.35 ) }
    dend_10 { pt3dadd( 144.385, 0.373891, -7.53069, 1.35 ) }
    dend_10 { pt3dadd( 154.629, 2.65264, -6.00343, 1.35 ) }
    dend_10 { pt3dadd( 164.435, 5.3556, -2.98117, 1.35 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 46/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 8.98958, -38.2062, -7.29039, 1.35 ) }
    dend_3 { pt3dadd( 8.60147, -45.0917, -8.3784, 1.35 ) }
    dend_3 { pt3dadd( 8.21678, -51.9168, -9.45685, 1.35 ) }
    // Section: dend_35, id: dend_35, parent: dend_29 (entry count 49/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -30.7172, 28.0881, -2.76343, 0.73 ) }
    dend_35 { pt3dadd( -31.7182, 31.9166, -1.40364, 0.73 ) }
    dend_35 { pt3dadd( -32.5836, 34.5094, -0.306787, 0.73 ) }
    dend_35 { pt3dadd( -33.3639, 36.6892, 0.631231, 0.73 ) }
    dend_35 { pt3dadd( -33.8915, 38.259, 1.27639, 0.73 ) }
    dend_35 { pt3dadd( -34.7753, 41.0015, 2.38873, 0.73 ) }
    dend_35 { pt3dadd( -36.1766, 45.3105, 4.10811, 0.73 ) }
    dend_35 { pt3dadd( -37.2643, 48.8842, 5.34047, 0.73 ) }
    dend_35 { pt3dadd( -38.4308, 53.1196, 6.82606, 0.73 ) }
    dend_35 { pt3dadd( -39.2213, 56.2282, 7.91755, 0.73 ) }
    dend_35 { pt3dadd( -39.7792, 58.7171, 8.77014, 0.73 ) }
    dend_35 { pt3dadd( -40.074, 60.0424, 9.21744, 0.73 ) }
    dend_35 { pt3dadd( -40.9839, 64.8387, 10.6709, 0.73 ) }
    dend_35 { pt3dadd( -41.5716, 68.4549, 11.8373, 0.73 ) }
    dend_35 { pt3dadd( -41.9594, 70.9878, 12.7343, 0.73 ) }
    dend_35 { pt3dadd( -42.3353, 73.709, 13.7635, 0.73 ) }
    dend_35 { pt3dadd( -42.7911, 77.9478, 15.3745, 0.73 ) }
    dend_35 { pt3dadd( -43.0156, 80.4475, 16.3136, 0.73 ) }
    dend_35 { pt3dadd( -43.33, 84.7318, 17.8947, 0.73 ) }
    dend_35 { pt3dadd( -43.5262, 87.4369, 18.8838, 0.73 ) }
    dend_35 { pt3dadd( -43.8055, 91.1659, 20.2361, 0.73 ) }
    dend_35 { pt3dadd( -44.151, 94.7799, 21.6469, 0.73 ) }
    dend_35 { pt3dadd( -44.5914, 99.3598, 23.5613, 0.73 ) }
    dend_35 { pt3dadd( -44.9503, 102.545, 24.8178, 0.73 ) }
    dend_35 { pt3dadd( -45.5716, 106.735, 26.6309, 0.73 ) }
    dend_35 { pt3dadd( -46.1157, 109.692, 28.0781, 0.73 ) }
    dend_35 { pt3dadd( -47.2618, 115.026, 30.9723, 0.73 ) }
    dend_35 { pt3dadd( -48.0424, 117.798, 32.815, 0.73 ) }
    dend_35 { pt3dadd( -49.5934, 122.422, 36.2952, 0.73 ) }
    dend_35 { pt3dadd( -51.9641, 128.34, 41.0971, 0.73 ) }
    dend_35 { pt3dadd( -53.2648, 131.304, 43.535, 0.73 ) }
    dend_35 { pt3dadd( -54.0299, 132.948, 44.9353, 0.73 ) }
    dend_35 { pt3dadd( -57.1733, 139.322, 50.359, 0.73 ) }
    dend_35 { pt3dadd( -58.3038, 141.413, 52.2673, 0.73 ) }
    dend_35 { pt3dadd( -60.8627, 146.041, 56.5466, 0.73 ) }
    dend_35 { pt3dadd( -62.0031, 148.191, 58.3265, 0.73 ) }
    dend_35 { pt3dadd( -63.9742, 151.969, 61.4037, 0.73 ) }
    dend_35 { pt3dadd( -64.8261, 153.689, 62.8197, 0.73 ) }
    dend_35 { pt3dadd( -66.6955, 158.0, 66.1992, 0.73 ) }
    dend_35 { pt3dadd( -67.9153, 160.95, 68.5592, 0.73 ) }
    dend_35 { pt3dadd( -68.6589, 162.97, 70.2095, 0.73 ) }
    dend_35 { pt3dadd( -69.7095, 166.206, 72.8855, 0.73 ) }
    dend_35 { pt3dadd( -70.6104, 169.056, 75.2083, 0.73 ) }
    dend_35 { pt3dadd( -71.3512, 171.605, 77.2954, 0.37 ) }
    dend_35 { pt3dadd( -72.1534, 174.759, 79.8028, 0.37 ) }
    dend_35 { pt3dadd( -72.9037, 177.735, 82.4127, 0.37 ) }
    dend_35 { pt3dadd( -73.2466, 179.386, 83.7376, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -30.7172, 28.0881, -2.76343, 0.86 ) }
    dend_30 { pt3dadd( -31.9074, 28.6081, -2.41044, 0.86 ) }
    dend_30 { pt3dadd( -33.6138, 29.1349, -1.82553, 0.86 ) }
    dend_30 { pt3dadd( -35.2849, 29.4367, -1.21145, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_30 { pt3dadd( -36.3861, 29.4982, -0.659884, 0.86 ) }
    dend_30 { pt3dadd( -37.8402, 29.491, 0.155335, 0.86 ) }
    dend_30 { pt3dadd( -38.7118, 29.4814, 0.675465, 0.86 ) }
    dend_30 { pt3dadd( -40.0246, 29.4517, 1.63124, 0.86 ) }
    dend_30 { pt3dadd( -41.0288, 29.4199, 2.4127, 0.86 ) }
    dend_30 { pt3dadd( -43.4718, 29.406, 4.27394, 0.86 ) }
    dend_30 { pt3dadd( -44.3577, 29.4701, 4.90209, 0.86 ) }
    dend_30 { pt3dadd( -45.4879, 29.6272, 5.67206, 0.86 ) }
    dend_30 { pt3dadd( -47.2015, 30.0366, 6.82318, 0.86 ) }
    dend_30 { pt3dadd( -48.1509, 30.4339, 7.46148, 0.86 ) }
    dend_30 { pt3dadd( -49.3936, 31.1972, 8.19073, 0.86 ) }
    dend_30 { pt3dadd( -50.2502, 31.9486, 8.42917, 0.86 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 12/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 57.6171, 113.239, -37.1291, 0.61 ) }
    dend_21 { pt3dadd( 60.8308, 122.421, -39.0402, 0.61 ) }
    dend_21 { pt3dadd( 64.3127, 131.024, -42.4415, 0.61 ) }
    dend_21 { pt3dadd( 66.0423, 139.89, -46.4665, 0.61 ) }
    dend_21 { pt3dadd( 65.9946, 148.661, -51.0158, 0.61 ) }
    dend_21 { pt3dadd( 64.5777, 157.595, -55.0036, 0.61 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 57.6171, 113.239, -37.1291, 0.61 ) }
    dend_20 { pt3dadd( 60.2415, 121.067, -38.9127, 0.61 ) }
    dend_20 { pt3dadd( 62.1374, 129.031, -41.0209, 0.61 ) }
    dend_20 { pt3dadd( 65.6603, 135.934, -44.2801, 0.61 ) }
    dend_20 { pt3dadd( 69.3056, 143.427, -45.5625, 0.61 ) }
    dend_20 { pt3dadd( 72.3436, 151.125, -47.219, 0.61 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 24/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 189.755, 30.3131, -29.4872, 0.61 ) }
    dend_18 { pt3dadd( 200.932, 30.9243, -31.2011, 0.61 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 26/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 189.755, 30.3131, -29.4872, 0.61 ) }
    dend_17 { pt3dadd( 200.569, 31.0707, -30.7592, 0.61 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 28/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 164.435, 5.3556, -2.98117, 1.1 ) }
    dend_12 { pt3dadd( 176.491, 8.61922, -2.26818, 1.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 164.435, 5.3556, -2.98117, 1.35 ) }
    dend_11 { pt3dadd( 172.286, 7.56298, -2.67604, 1.1 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 32/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 8.21678, -51.9168, -9.45685, 1.1 ) }
    dend_9 { pt3dadd( 1.62637, -57.0635, -10.6361, 1.1 ) }
    dend_9 { pt3dadd( -4.48847, -61.9451, -11.9138, 0.86 ) }
    dend_9 { pt3dadd( -11.6705, -67.9402, -13.5596, 0.86 ) }
    dend_9 { pt3dadd( -21.3106, -76.3869, -15.9288, 0.86 ) }
    dend_9 { pt3dadd( -27.2293, -81.8481, -17.4524, 0.86 ) }
    dend_9 { pt3dadd( -28.5072, -83.071, -17.7656, 0.86 ) }
    dend_9 { pt3dadd( -30.9062, -85.5289, -18.4375, 0.86 ) }
    dend_9 { pt3dadd( -32.6683, -87.5798, -18.9227, 0.86 ) }
    dend_9 { pt3dadd( -33.9478, -89.4131, -19.3385, 0.86 ) }
    dend_9 { pt3dadd( -34.9547, -91.2028, -19.5729, 0.86 ) }
    dend_9 { pt3dadd( -37.6381, -95.457, -19.6317, 0.86 ) }
    dend_9 { pt3dadd( -38.7234, -96.7427, -19.6371, 0.86 ) }
    dend_9 { pt3dadd( -41.4464, -99.1535, -19.6794, 0.86 ) }
    dend_9 { pt3dadd( -43.533, -100.537, -19.7278, 0.86 ) }
    dend_9 { pt3dadd( -49.6444, -103.601, -19.7483, 0.86 ) }
    dend_9 { pt3dadd( -52.3141, -104.781, -19.9359, 0.86 ) }
    dend_9 { pt3dadd( -54.8279, -105.841, -20.3082, 0.86 ) }
    dend_9 { pt3dadd( -56.6081, -106.607, -20.6455, 0.86 ) }
    dend_9 { pt3dadd( -60.4352, -108.465, -21.5877, 0.86 ) }
    dend_9 { pt3dadd( -64.3739, -110.781, -22.6685, 0.86 ) }
    dend_9 { pt3dadd( -69.2665, -114.75, -24.3684, 0.86 ) }
    dend_9 { pt3dadd( -71.0989, -116.469, -24.8953, 0.86 ) }
    dend_9 { pt3dadd( -72.7374, -118.143, -25.2818, 0.86 ) }
    dend_9 { pt3dadd( -74.5783, -120.111, -25.6783, 0.86 ) }
    dend_9 { pt3dadd( -78.5528, -124.42, -26.4769, 0.86 ) }
    dend_9 { pt3dadd( -80.2263, -126.091, -26.7043, 0.86 ) }
    dend_9 { pt3dadd( -82.6439, -128.165, -26.7736, 0.86 ) }
    dend_9 { pt3dadd( -84.3791, -129.47, -26.7814, 0.86 ) }
    dend_9 { pt3dadd( -87.1032, -131.369, -26.9499, 0.86 ) }
    dend_9 { pt3dadd( -88.9608, -132.589, -27.3259, 0.86 ) }
    dend_9 { pt3dadd( -91.3764, -134.153, -28.146, 0.86 ) }
    dend_9 { pt3dadd( -93.4002, -135.411, -28.9459, 0.86 ) }
    dend_9 { pt3dadd( -96.3021, -137.343, -30.1, 0.86 ) }
    dend_9 { pt3dadd( -99.5058, -139.643, -31.5668, 0.86 ) }
    dend_9 { pt3dadd( -104.202, -143.452, -34.0208, 1.35 ) }
    dend_9 { pt3dadd( -106.513, -145.396, -35.2673, 1.1 ) }
    dend_9 { pt3dadd( -107.355, -146.188, -35.7514, 1.1 ) }
    dend_9 { pt3dadd( -113.039, -152.242, -39.1508, 0.73 ) }
    dend_9 { pt3dadd( -118.472, -158.64, -42.4824, 0.98 ) }
    dend_9 { pt3dadd( -122.131, -163.009, -44.5963, 1.1 ) }
    dend_9 { pt3dadd( -126.236, -168.24, -46.9928, 1.22 ) }
    dend_9 { pt3dadd( -130.264, -173.421, -49.4592, 0.73 ) }
    dend_9 { pt3dadd( -134.664, -178.817, -52.0393, 0.98 ) }
    dend_9 { pt3dadd( -137.47, -182.032, -53.5199, 0.61 ) }
    dend_9 { pt3dadd( -143.556, -188.133, -55.7604, 0.98 ) }
    dend_9 { pt3dadd( -146.772, -191.008, -56.6914, 0.61 ) }
    dend_9 { pt3dadd( -149.717, -193.327, -57.3345, 0.37 ) }
    dend_9 { pt3dadd( -155.86, -197.335, -58.3092, 0.49 ) }
    dend_9 { pt3dadd( -162.272, -201.126, -59.1621, 0.86 ) }
    dend_9 { pt3dadd( -169.3, -205.147, -59.9826, 0.86 ) }
    dend_9 { pt3dadd( -174.678, -208.066, -60.4584, 0.86 ) }
    dend_9 { pt3dadd( -179.871, -210.832, -60.9408, 0.37 ) }
    dend_9 { pt3dadd( -184.083, -213.165, -61.352, 0.61 ) }
    dend_9 { pt3dadd( -186.429, -214.504, -61.6782, 0.37 ) }
    dend_9 { pt3dadd( -194.883, -219.726, -63.3586, 0.86 ) }
    dend_9 { pt3dadd( -202.534, -224.782, -65.2545, 0.49 ) }
    dend_9 { pt3dadd( -206.851, -227.822, -66.5209, 0.24 ) }
    dend_9 { pt3dadd( -210.298, -230.426, -67.537, 0.49 ) }
    dend_9 { pt3dadd( -213.435, -232.959, -68.4116, 0.49 ) }
    dend_9 { pt3dadd( -218.965, -237.622, -69.9056, 0.86 ) }
    dend_9 { pt3dadd( -222.665, -241.233, -70.9787, 0.12 ) }
    dend_9 { pt3dadd( -226.56, -245.617, -72.0886, 0.61 ) }
    dend_9 { pt3dadd( -233.074, -253.348, -73.5311, 0.61 ) }
    dend_9 { pt3dadd( -234.801, -255.527, -73.8559, 0.61 ) }
    dend_9 { pt3dadd( -239.171, -261.213, -74.5057, 0.61 ) }
    dend_9 { pt3dadd( -243.376, -266.884, -75.0271, 0.61 ) }
    dend_9 { pt3dadd( -248.158, -273.652, -75.6701, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_9 { pt3dadd( -254.709, -282.941, -76.604, 0.12 ) }
    dend_9 { pt3dadd( -256.391, -285.399, -76.9555, 0.12 ) }
    dend_9 { pt3dadd( -256.915, -286.116, -77.0631, 0.37 ) }
    dend_9 { pt3dadd( -258.305, -287.957, -77.3481, 0.37 ) }
    dend_9 { pt3dadd( -259.731, -289.675, -77.7712, 0.37 ) }
    dend_9 { pt3dadd( -261.908, -292.188, -78.7243, 0.37 ) }
    dend_9 { pt3dadd( -264.57, -295.282, -80.2649, 0.37 ) }
    dend_9 { pt3dadd( -266.721, -297.771, -81.5785, 0.37 ) }
    dend_9 { pt3dadd( -268.832, -300.215, -82.9122, 0.37 ) }
    dend_9 { pt3dadd( -272.21, -304.123, -85.1771, 0.37 ) }
    dend_9 { pt3dadd( -274.377, -306.749, -86.8063, 0.37 ) }
    dend_9 { pt3dadd( -275.825, -308.69, -88.1535, 0.37 ) }
    dend_9 { pt3dadd( -279.154, -313.669, -91.951, 0.49 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 8.21678, -51.9168, -9.45685, 1.35 ) }
    dend_4 { pt3dadd( 8.74461, -54.9098, -10.2343, 1.35 ) }
    dend_4 { pt3dadd( 10.1507, -62.8826, -12.3052, 1.35 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -50.2502, 31.9486, 8.42917, 0.61 ) }
    dend_34 { pt3dadd( -50.8573, 32.4344, 8.92979, 0.61 ) }
    dend_34 { pt3dadd( -52.5544, 33.9029, 10.2731, 0.61 ) }
    dend_34 { pt3dadd( -56.7925, 37.7137, 13.7789, 0.61 ) }
    dend_34 { pt3dadd( -58.4899, 39.2715, 15.128, 0.61 ) }
    dend_34 { pt3dadd( -60.0738, 40.6804, 16.2988, 0.61 ) }
    dend_34 { pt3dadd( -61.3812, 41.8024, 17.2599, 0.61 ) }
    dend_34 { pt3dadd( -63.7385, 43.7906, 18.9066, 0.61 ) }
    dend_34 { pt3dadd( -65.3746, 45.2184, 19.9457, 0.61 ) }
    dend_34 { pt3dadd( -67.297, 46.9752, 21.0954, 0.61 ) }
    dend_34 { pt3dadd( -69.2254, 48.7073, 22.2671, 0.61 ) }
    dend_34 { pt3dadd( -73.6334, 52.5023, 24.8772, 0.61 ) }
    dend_34 { pt3dadd( -76.2568, 54.7296, 26.3446, 0.61 ) }
    dend_34 { pt3dadd( -79.5998, 57.513, 28.1382, 0.61 ) }
    dend_34 { pt3dadd( -83.6148, 60.9002, 30.1922, 0.61 ) }
    dend_34 { pt3dadd( -86.388, 63.3241, 31.4856, 0.61 ) }
    dend_34 { pt3dadd( -87.3959, 64.2395, 31.8808, 0.37 ) }
    dend_34 { pt3dadd( -89.9239, 66.5559, 32.5355, 0.37 ) }
    dend_34 { pt3dadd( -92.6017, 68.9869, 33.2259, 0.37 ) }
    dend_34 { pt3dadd( -95.6013, 71.5578, 34.002, 0.37 ) }
    dend_34 { pt3dadd( -98.5122, 74.0524, 34.8399, 0.12 ) }
    dend_34 { pt3dadd( -100.331, 75.6343, 35.7125, 0.12 ) }
    dend_34 { pt3dadd( -102.002, 77.014, 36.7751, 0.49 ) }
    dend_34 { pt3dadd( -106.405, 80.3106, 40.5067, 0.49 ) }
    dend_34 { pt3dadd( -108.912, 82.0883, 43.0086, 0.49 ) }
    dend_34 { pt3dadd( -110.576, 83.2531, 44.8058, 0.49 ) }
    dend_34 { pt3dadd( -113.642, 85.4179, 48.1859, 0.49 ) }
    dend_34 { pt3dadd( -115.115, 86.5061, 49.6915, 0.49 ) }
    dend_34 { pt3dadd( -118.739, 89.2558, 52.7885, 0.49 ) }
    dend_34 { pt3dadd( -120.538, 90.666, 53.8629, 0.49 ) }
    dend_34 { pt3dadd( -123.688, 93.2042, 55.154, 0.49 ) }
    dend_34 { pt3dadd( -125.314, 94.4367, 55.5511, 0.49 ) }
    dend_34 { pt3dadd( -128.86, 96.9403, 55.9524, 0.49 ) }
    dend_34 { pt3dadd( -132.984, 99.7683, 56.203, 0.49 ) }
    dend_34 { pt3dadd( -135.83, 101.612, 56.2169, 0.49 ) }
    dend_34 { pt3dadd( -139.409, 103.764, 56.2623, 0.49 ) }
    dend_34 { pt3dadd( -142.001, 105.199, 56.3697, 0.49 ) }
    dend_34 { pt3dadd( -144.426, 106.526, 56.5468, 0.49 ) }
    dend_34 { pt3dadd( -146.75, 107.812, 56.8246, 0.49 ) }
    dend_34 { pt3dadd( -150.557, 110.152, 57.4691, 0.49 ) }
    dend_34 { pt3dadd( -153.182, 111.976, 58.0518, 0.49 ) }
    dend_34 { pt3dadd( -158.7, 116.274, 59.4024, 0.49 ) }
    dend_34 { pt3dadd( -160.822, 118.07, 59.9486, 0.49 ) }
    dend_34 { pt3dadd( -163.305, 120.249, 60.6069, 0.49 ) }
    dend_34 { pt3dadd( -167.411, 123.956, 61.7298, 0.49 ) }
    dend_34 { pt3dadd( -171.303, 127.703, 62.8853, 0.49 ) }
    dend_34 { pt3dadd( -173.82, 130.316, 63.6872, 0.49 ) }
    dend_34 { pt3dadd( -176.814, 133.698, 64.727, 0.49 ) }
    dend_34 { pt3dadd( -179.088, 136.376, 65.5382, 0.49 ) }
    dend_34 { pt3dadd( -181.052, 138.78, 66.2185, 0.49 ) }
    dend_34 { pt3dadd( -183.417, 141.763, 67.1587, 0.49 ) }
    dend_34 { pt3dadd( -185.286, 144.178, 67.9907, 0.49 ) }
    dend_34 { pt3dadd( -187.602, 147.135, 69.0512, 0.49 ) }
    dend_34 { pt3dadd( -192.183, 152.983, 71.1979, 0.49 ) }
    dend_34 { pt3dadd( -195.254, 156.858, 72.6176, 0.49 ) }
    dend_34 { pt3dadd( -200.682, 163.593, 74.6742, 0.49 ) }
    dend_34 { pt3dadd( -203.54, 166.97, 75.4653, 0.49 ) }
    dend_34 { pt3dadd( -207.246, 171.035, 76.0621, 0.49 ) }
    dend_34 { pt3dadd( -209.825, 173.656, 76.0337, 0.37 ) }
    dend_34 { pt3dadd( -213.83, 177.493, 75.6083, 0.12 ) }
    dend_34 { pt3dadd( -218.878, 182.253, 74.3858, 0.12 ) }
    dend_34 { pt3dadd( -222.558, 185.808, 72.7786, 0.12 ) }
    dend_34 { pt3dadd( -225.943, 189.535, 70.4041, 0.12 ) }
    dend_34 { pt3dadd( -229.469, 194.603, 66.0877, 0.12 ) }
    dend_34 { pt3dadd( -231.655, 198.982, 61.4962, 0.37 ) }
    dend_34 { pt3dadd( -232.723, 202.788, 56.7736, 0.37 ) }
    dend_34 { pt3dadd( -232.991, 205.572, 53.0178, 0.37 ) }
    dend_34 { pt3dadd( -232.799, 210.89, 45.2339, 0.86 ) }
    dend_34 { pt3dadd( -232.406, 214.291, 39.773, 0.73 ) }
    dend_34 { pt3dadd( -232.313, 215.343, 37.9916, 0.73 ) }
    dend_34 { pt3dadd( -232.405, 217.855, 33.5912, 0.73 ) }
    dend_34 { pt3dadd( -232.892, 219.642, 30.6663, 0.73 ) }
    dend_34 { pt3dadd( -233.607, 221.02, 28.6066, 0.73 ) }
    dend_34 { pt3dadd( -235.536, 223.649, 25.0484, 0.73 ) }
    dend_34 { pt3dadd( -237.488, 226.092, 21.8536, 0.73 ) }
    dend_34 { pt3dadd( -238.803, 227.812, 19.5127, 0.73 ) }
    dend_34 { pt3dadd( -240.258, 229.789, 16.8452, 0.73 ) }
    dend_34 { pt3dadd( -241.454, 231.506, 14.5645, 0.73 ) }
    dend_34 { pt3dadd( -243.099, 233.998, 11.3064, 0.73 ) }
    dend_34 { pt3dadd( -244.648, 236.336, 8.40556, 0.73 ) }
    dend_34 { pt3dadd( -246.534, 239.256, 4.62992, 0.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 97/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -50.2502, 31.9486, 8.42917, 0.61 ) }
    dend_31 { pt3dadd( -52.2279, 31.872, 7.64852, 0.61 ) }
    dend_31 { pt3dadd( -54.7184, 31.8575, 6.88186, 0.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_31 { pt3dadd( -58.9439, 31.8817, 5.96404, 0.61 ) }
    dend_31 { pt3dadd( -65.2626, 31.8739, 5.11797, 0.61 ) }
    dend_31 { pt3dadd( -70.5306, 31.822, 4.74341, 0.61 ) }
    dend_31 { pt3dadd( -73.5589, 31.7602, 4.47024, 0.61 ) }
    dend_31 { pt3dadd( -78.0775, 31.6838, 4.03924, 0.61 ) }
    dend_31 { pt3dadd( -82.339, 31.597, 3.68103, 0.61 ) }
    dend_31 { pt3dadd( -86.6038, 31.4514, 3.52178, 0.61 ) }
    dend_31 { pt3dadd( -89.1864, 31.2993, 3.66426, 0.61 ) }
    dend_31 { pt3dadd( -94.6294, 30.8612, 4.06852, 0.61 ) }
    dend_31 { pt3dadd( -98.6214, 30.3708, 4.18152, 0.61 ) }
    dend_31 { pt3dadd( -101.615, 29.9554, 4.07823, 0.61 ) }
    dend_31 { pt3dadd( -105.206, 29.427, 3.8805, 0.61 ) }
    dend_31 { pt3dadd( -108.397, 28.9278, 3.70451, 0.61 ) }
    dend_31 { pt3dadd( -111.957, 28.3156, 3.57577, 0.61 ) }
    dend_31 { pt3dadd( -115.087, 27.7435, 3.49235, 0.61 ) }
    dend_31 { pt3dadd( -119.547, 26.8782, 3.1327, 0.61 ) }
    dend_31 { pt3dadd( -123.35, 26.098, 2.6471, 0.61 ) }
    dend_31 { pt3dadd( -125.787, 25.5952, 2.26732, 0.61 ) }
    dend_31 { pt3dadd( -129.197, 24.961, 1.71934, 0.61 ) }
    dend_31 { pt3dadd( -132.258, 24.3971, 1.2597, 0.61 ) }
    dend_31 { pt3dadd( -135.735, 23.8037, 0.675045, 0.61 ) }
    dend_31 { pt3dadd( -139.077, 23.2021, 0.0387826, 0.61 ) }
    dend_31 { pt3dadd( -141.798, 22.7526, -0.523889, 0.61 ) }
    dend_31 { pt3dadd( -144.368, 22.3828, -1.06745, 0.61 ) }
    dend_31 { pt3dadd( -156.938, 20.4612, -1.23122, 0.61 ) }
    dend_31 { pt3dadd( -169.356, 18.1048, 0.219094, 0.61 ) }
    dend_31 { pt3dadd( -181.664, 15.6609, 2.32988, 0.61 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 27/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 10.1507, -62.8826, -12.3052, 0.61 ) }
    dend_6 { pt3dadd( 12.2845, -69.22, -11.9325, 0.61 ) }
    dend_6 { pt3dadd( 13.523, -72.2288, -11.8058, 0.61 ) }
    dend_6 { pt3dadd( 15.8776, -77.3833, -11.7079, 0.98 ) }
    dend_6 { pt3dadd( 17.0306, -79.9317, -11.6718, 0.12 ) }
    dend_6 { pt3dadd( 18.4519, -82.7158, -11.7266, 0.49 ) }
    dend_6 { pt3dadd( 21.9324, -89.2216, -11.8311, 1.1 ) }
    dend_6 { pt3dadd( 24.2886, -93.2079, -12.0176, 0.49 ) }
    dend_6 { pt3dadd( 28.0508, -99.2724, -12.3321, 0.12 ) }
    dend_6 { pt3dadd( 29.6826, -101.804, -12.4889, 0.12 ) }
    dend_6 { pt3dadd( 33.8857, -108.089, -12.8877, 1.1 ) }
    dend_6 { pt3dadd( 36.6644, -112.214, -13.1851, 0.61 ) }
    dend_6 { pt3dadd( 42.3714, -123.272, -12.7385, 0.61 ) }
    dend_6 { pt3dadd( 47.7206, -134.426, -14.2706, 0.61 ) }
    dend_6 { pt3dadd( 50.2613, -146.671, -14.1408, 0.61 ) }
    dend_6 { pt3dadd( 53.0619, -158.817, -13.2355, 0.61 ) }
    dend_6 { pt3dadd( 56.4813, -170.776, -12.1286, 0.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 10.1507, -62.8826, -12.3052, 1.22 ) }
    dend_5 { pt3dadd( 11.6954, -72.3808, -15.2115, 1.22 ) }
    dend_5 { pt3dadd( 13.0005, -79.6575, -17.4816, 1.22 ) }
    dend_5 { pt3dadd( 14.8715, -88.2747, -20.2477, 1.22 ) }
    dend_5 { pt3dadd( 17.4553, -98.7706, -23.5089, 1.22 ) }
    dend_5 { pt3dadd( 19.9127, -108.133, -26.3074, 0.86 ) }
    dend_5 { pt3dadd( 20.162, -109.055, -26.5752, 0.86 ) }
    dend_5 { pt3dadd( 21.6184, -113.613, -27.8499, 0.86 ) }
    dend_5 { pt3dadd( 23.3486, -119.264, -29.4652, 0.86 ) }
    dend_5 { pt3dadd( 24.697, -123.69, -30.5902, 0.86 ) }
    dend_5 { pt3dadd( 25.3302, -125.871, -31.1244, 0.86 ) }
    dend_5 { pt3dadd( 25.8371, -127.393, -31.4742, 0.86 ) }
    dend_5 { pt3dadd( 26.3156, -129.342, -31.9179, 0.86 ) }
    dend_5 { pt3dadd( 26.5453, -131.608, -32.4025, 0.86 ) }
    dend_5 { pt3dadd( 26.5681, -132.932, -32.7384, 0.86 ) }
    dend_5 { pt3dadd( 26.6214, -135.154, -33.4833, 0.86 ) }
    dend_5 { pt3dadd( 26.8189, -137.211, -34.2719, 0.86 ) }
    dend_5 { pt3dadd( 26.8653, -137.746, -34.4854, 0.86 ) }
    dend_5 { pt3dadd( 27.0272, -139.915, -35.4178, 0.86 ) }
    dend_5 { pt3dadd( 27.2181, -142.57, -36.6249, 0.86 ) }
    dend_5 { pt3dadd( 27.274, -144.171, -37.4076, 1.22 ) }
    dend_5 { pt3dadd( 27.2837, -146.861, -38.755, 1.22 ) }
    dend_5 { pt3dadd( 27.0471, -151.576, -40.9749, 1.35 ) }
    dend_5 { pt3dadd( 26.506, -157.376, -43.5632, 1.35 ) }
    dend_5 { pt3dadd( 26.2443, -159.378, -44.3874, 1.59 ) }
    dend_5 { pt3dadd( 25.5868, -164.759, -46.2838, 1.1 ) }
    dend_5 { pt3dadd( 25.1016, -168.641, -47.5923, 1.1 ) }
    dend_5 { pt3dadd( 24.4407, -173.809, -49.1918, 0.86 ) }
    dend_5 { pt3dadd( 24.1413, -176.639, -49.9668, 1.47 ) }
    dend_5 { pt3dadd( 23.7117, -180.139, -50.7017, 0.86 ) }
    dend_5 { pt3dadd( 23.0945, -185.21, -51.5125, 1.1 ) }
    dend_5 { pt3dadd( 24.8298, -195.282, -56.024, 1.1 ) }
    dend_5 { pt3dadd( 25.8227, -206.286, -57.8152, 1.1 ) }
    dend_5 { pt3dadd( 25.0698, -217.156, -60.3856, 1.1 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 78/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -181.664, 15.6609, 2.32988, 0.61 ) }
    dend_33 { pt3dadd( -191.994, 14.449, 1.7017, 0.61 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 80/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -181.664, 15.6609, 2.32988, 0.61 ) }
    dend_32 { pt3dadd( -190.912, 14.4153, 2.42264, 0.61 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 56.4813, -170.776, -12.1286, 0.61 ) }
    dend_8 { pt3dadd( 62.0592, -180.063, -13.2901, 0.61 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 84/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 56.4813, -170.776, -12.1286, 0.61 ) }
    dend_7 { pt3dadd( 58.5909, -183.831, -9.89751, 0.61 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_26, dend_14, dend_1, dend_0, dend_39, dend_38, dend_28, dend_27, dend_23, dend_15, dend_13, dend_2, dend_36, dend_29, dend_25, dend_24, dend_22, dend_19, dend_16, dend_10, dend_3, dend_35, dend_30, dend_21, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_4, dend_34, dend_31, dend_6, dend_5, dend_33, dend_32, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_39 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_27 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_13 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_24 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_22 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_19 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_10 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_35 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_21 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_20 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_34 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_6 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_5 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_15 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_29 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_4 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_30 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_25 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_8 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_17 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_32 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_33 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_11 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_38 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_12 OneSecGrp_SectionRef_33.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_17, dend_12, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_33, dend_32, dend_8, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_8 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_40 nseg = 3
    dend_37 nseg = 11
    dend_0 nseg = 7
    dend_39 nseg = 3
    dend_27 nseg = 13
    dend_23 nseg = 5
    dend_13 nseg = 13
    dend_36 nseg = 9
    dend_24 nseg = 3
    dend_22 nseg = 11
    dend_19 nseg = 5
    dend_16 nseg = 9
    dend_10 nseg = 9
    dend_35 nseg = 9
    dend_21 nseg = 3
    dend_20 nseg = 3
    dend_9 nseg = 21
    dend_34 nseg = 17
    dend_31 nseg = 7
    dend_6 nseg = 5
    dend_5 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_LBC_f0665c9d1a_0_0


