// Cell: cNAC187_L6_MC_6c575906a7_0_0
/*
{
  "id" : "cNAC187_L6_MC_6c575906a7_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.29516, 12.7926, 0.0166014, 3.00072", "-2.11379, 11.556, 0.0144082, 4.89776", "-1.93242, 10.3195, 0.0122149, 5.88759", "-1.75105, 9.08294, 0.0100217, 7.07793", "-1.56968, 7.84638, 0.00782849, 8.02781", "-1.38831, 6.60983, 0.00563526, 9.00197", "-1.20695, 5.37327, 0.00344203, 9.87367", "-1.02558, 4.13672, 0.0012488, 10.431", "-0.844206, 2.90016, -9.44425E-4, 10.9219", "-0.662836, 1.66361, -0.00313765, 11.0248", "-0.481466, 0.427054, -0.00533088, 11.0557", "-0.300096, -0.809501, -0.00752411, 10.707", "-0.118727, -2.04606, -0.00971734, 10.6262", "0.0626432, -3.28261, -0.0119106, 10.4664", "0.244013, -4.51917, -0.0141038, 10.0039", "0.425383, -5.75572, -0.016297, 9.73748", "0.606753, -6.99228, -0.0184903, 9.19784", "0.788122, -8.22883, -0.0206835, 7.97004", "0.969492, -9.46539, -0.0228767, 6.149", "1.15086, -10.7019, -0.0250699, 4.05799", "1.33223, -11.9385, -0.0272632, 2.58608" ]
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "2.14052, -11.6299, 8.57955, 4.49", "2.76486, -13.3132, 8.73806, 4.49", "3.17487, -14.4848, 8.88532, 4.05", "3.20673, -14.5785, 8.88305, 4.05", "3.71085, -16.0637, 8.74186, 3.68", "3.77218, -16.2568, 8.71482, 3.68", "4.11929, -17.4721, 8.52516, 3.24", "4.18268, -17.7603, 8.47108, 3.24", "4.59564, -19.9809, 8.02245, 3.02", "4.62413, -20.1848, 7.98085, 3.02", "4.76792, -21.8353, 7.62628, 2.73", "4.79532, -22.9816, 7.39342, 2.5", "4.73909, -24.4867, 7.11274, 2.21", "4.7229, -24.6341, 7.08976, 2.21", "4.58501, -25.3462, 7.02429, 2.21", "4.56056, -25.4408, 7.0082, 2.21", "4.18763, -26.5054, 6.72712, 2.21", "4.11921, -26.7039, 6.66161, 2.21", "3.67, -28.1294, 6.14691, 2.21", "3.65378, -28.2038, 6.12256, 2.21", "3.42827, -29.7896, 5.63694, 2.21", "3.41385, -30.001, 5.57773, 2.21", "3.39624, -31.5273, 5.17735, 2.21", "3.40231, -31.956, 5.0787, 2.21", "3.50227, -33.7646, 4.77198, 2.21", "3.54031, -34.2927, 4.68847, 2.21", "3.74142, -36.3173, 4.41332, 2.21", "3.75758, -36.4766, 4.39176, 2.21", "3.90046, -37.8523, 4.21206, 2.21", "3.98528, -38.6432, 4.10486, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998358611418
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.95948, 13.2001, 0.0795549, 0.44", "-2.83798, 15.6267, 1.66316, 0.44", "-2.66135, 18.1762, 3.13053, 0.44", "-2.48668, 20.3622, 4.29077, 0.44", "-2.48098, 20.4253, 4.32059, 0.44", "-2.37655, 21.5084, 4.80358, 0.44", "-2.36701, 21.6051, 4.84663, 0.44", "-2.23817, 22.6847, 5.15654, 0.44", "-2.22837, 22.7618, 5.17524, 0.44", "-2.06302, 24.0568, 5.73455, 0.44", "-2.04393, 24.2235, 5.82371, 0.44", "-1.93775, 25.1887, 6.42736, 0.44", "-1.92706, 25.2877, 6.49434, 0.44", "-1.77641, 26.5268, 7.5189, 0.44", "-1.61386, 27.6873, 8.58634, 0.44", "-1.58746, 27.8679, 8.75725, 0.44", "-1.44825, 28.8035, 9.61083, 0.44", "-1.43444, 28.9043, 9.69166, 0.44", "-1.2337, 30.5272, 10.9001, 0.44", "-1.22301, 30.6367, 10.9693, 0.44", "-1.12972, 32.0033, 11.6954, 0.44", "-1.12806, 32.2313, 11.7994, 0.44", "-1.19983, 34.0113, 12.5058, 0.44", "-1.215, 34.3307, 12.6337, 0.44", "-1.30597, 36.0527, 13.2979, 0.44", "-1.3101, 36.2294, 13.3732, 0.44", "-1.31134, 37.541, 14.0062, 0.44", "-1.30403, 37.7017, 14.0864, 0.44", "-1.11657, 39.7044, 15.1541, 0.44", "-1.04833, 40.1659, 15.4009, 0.44", "-0.74033, 41.624, 16.2041, 0.44", "-0.712414, 41.7367, 16.2625, 0.44", "-0.29188, 43.1568, 16.9722, 0.44", "-0.23815, 43.3478, 17.0523, 0.44", "-0.099002, 43.8815, 17.2316, 0.52", "-0.0340688, 44.151, 17.3167, 0.52", "0.496279, 46.5123, 17.9936, 0.52", "0.523834, 46.6441, 18.0277, 0.52", "0.957689, 48.9804, 18.5568, 0.52", "1.06868, 49.6297, 18.6836, 0.52", "1.16751, 50.275, 18.7806, 0.52", "1.33152, 51.5353, 18.8918, 0.52", "1.36211, 51.8236, 18.8937, 0.52", "1.44494, 52.8523, 18.8646, 0.59", "1.45851, 53.1412, 18.8439, 0.59", "1.5226, 54.4689, 18.7321, 0.59", "1.56942, 55.5924, 18.6302, 0.59", "1.56997, 55.6982, 18.62, 0.59", "1.56912, 56.6468, 18.5328, 0.59", "1.57066, 56.7264, 18.5257, 0.59", "1.61925, 57.9808, 18.4243, 0.44", "1.62207, 58.0504, 18.4173, 0.44", "1.66873, 59.0025, 18.3129, 0.44", "1.65622, 59.4932, 18.2816, 0.44", "1.55262, 60.8111, 18.2567, 0.44", "1.53278, 60.9619, 18.2647, 0.44", "1.24554, 62.5787, 18.4572, 0.44", "1.18172, 62.9274, 18.5197, 0.44", "0.8522, 64.6573, 18.9318, 0.44", "0.77609, 65.0179, 19.0358, 0.44", "0.509955, 66.1937, 19.436, 0.44", "0.425887, 66.5539, 19.5664, 0.44", "0.151915, 67.7176, 20.0256, 0.44", "0.088927, 67.9974, 20.1274, 0.44", "-0.179895, 69.3609, 20.5672, 0.44", "-0.251823, 69.7274, 20.7022, 0.44", "-0.543685, 71.2227, 21.3217, 0.44", "-0.577213, 71.4067, 21.4042, 0.44", "-0.765039, 72.5163, 21.9476, 0.44", "-0.783778, 72.6988, 22.0377, 0.44", "-0.807564, 74.1318, 22.7539, 0.44", "-0.785828, 74.3582, 22.8592, 0.44", "-0.514529, 75.6246, 23.403, 0.44", "-0.466641, 75.808, 23.4697, 0.44", "-0.119875, 76.9259, 23.7939, 0.44", "-0.0301552, 77.2398, 23.854, 0.44", "0.222028, 78.2067, 23.9298, 0.44", "0.251241, 78.3431, 23.9419, 0.44", "0.359151, 78.9947, 24.0077, 0.44", "0.380252, 79.2122, 24.0329, 0.44", "0.426778, 80.3906, 24.1957, 0.44", "0.432722, 80.7627, 24.2534, 0.44", "0.422458, 81.9069, 24.4646, 0.44", "0.417108, 82.1309, 24.5072, 0.44", "0.368206, 82.998, 24.6653, 0.44", "0.274154, 84.3107, 24.895, 0.44", "0.266615, 84.3795, 24.9059, 0.44", "0.0360924, 86.017, 25.127, 0.44", "-0.145189, 87.0151, 25.2288, 0.44", "-0.501241, 88.7097, 25.3782, 0.44", "-0.518263, 88.7876, 25.3841, 0.44", "-0.818115, 90.1569, 25.476, 0.44", "-0.868637, 90.5228, 25.4979, 0.44", "-0.933452, 91.7466, 25.5593, 0.44", "-0.917527, 92.0356, 25.5775, 0.44", "-0.672686, 93.7167, 25.7079, 0.44", "-0.623258, 93.9759, 25.7322, 0.44", "-0.214106, 95.5879, 25.9201, 0.44", "-0.161218, 95.7992, 25.9511, 0.44", "0.174848, 97.1333, 26.1883, 0.44", "0.245329, 97.4978, 26.2669, 0.44", "0.347122, 98.3646, 26.4875, 0.44", "0.351176, 98.4795, 26.522, 0.44", "0.302978, 99.2993, 26.8269, 0.44", "0.301807, 99.573, 26.9399, 0.44", "0.383414, 100.59, 27.4018, 0.44", "0.395621, 100.653, 27.4305, 0.44", "0.696103, 101.502, 27.8155, 0.44", "0.78954, 101.67, 27.888, 0.44", "1.52867, 102.663, 28.2968, 0.44", "1.85774, 103.059, 28.4457, 0.44", "2.29513, 103.541, 28.6068, 0.44", "2.78501, 104.101, 28.7691, 0.44", "3.51491, 104.955, 28.975, 0.44", "3.55394, 105.012, 28.9872, 0.44", "3.94949, 105.788, 29.144, 0.44", "4.00886, 106.073, 29.1974, 0.44", "4.01006, 106.728, 29.3028, 0.44", "3.98423, 106.975, 29.3392, 0.44", "3.80246, 108.217, 29.4937, 0.44", "3.77264, 108.434, 29.5178, 0.44", "3.56461, 110.424, 29.7111, 0.44", "3.46912, 111.675, 29.8173, 0.44", "3.46632, 111.745, 29.8224, 0.44", "3.45873, 113.578, 29.9361, 0.44", "3.47492, 113.976, 29.9566, 0.44", "3.65153, 115.825, 30.0478, 0.44", "3.69395, 116.055, 30.058, 0.44", "3.85934, 116.824, 30.0997, 0.44", "3.92175, 117.128, 30.1231, 0.44", "4.06296, 117.847, 30.1913, 0.44", "4.14381, 118.375, 30.2361, 0.44", "4.21814, 119.645, 30.3126, 0.44", "4.21953, 119.873, 30.3217, 0.44", "4.07779, 121.66, 30.3487, 0.44", "4.02827, 122.033, 30.3479, 0.44", "3.69554, 123.978, 30.311, 0.44", "3.36279, 125.644, 30.2545, 0.44", "3.32466, 125.832, 30.2467, 0.44", "2.99633, 127.611, 30.1602, 0.44", "2.96309, 127.828, 30.1498, 0.44", "2.88251, 128.783, 30.0655, 0.44", "2.88791, 129.175, 30.0121, 0.44", "3.03775, 130.224, 29.8237, 0.44", "3.10003, 130.537, 29.7554, 0.44", "3.27998, 131.431, 29.5228, 0.44", "3.47644, 133.107, 29.0406, 0.44", "3.47189, 133.174, 29.0208, 0.44", "3.33006, 133.797, 28.8424, 0.44", "3.30245, 133.86, 28.8277, 0.44", "2.5688, 135.252, 28.5517, 0.44", "2.53503, 135.313, 28.5426, 0.44", "1.84102, 136.598, 28.4353, 0.44", "1.7696, 136.754, 28.4214, 0.44", "0.718199, 139.423, 28.1619, 0.44", "0.699423, 139.49, 28.1554, 0.44", "0.519272, 140.569, 28.0456, 0.44", "0.485672, 141.096, 27.9807, 0.44", "0.535646, 142.285, 27.8095, 0.44", "0.543511, 142.39, 27.7936, 0.44", "0.748838, 143.968, 27.5464, 0.44", "0.75461, 144.037, 27.5358, 0.44", "0.820154, 145.505, 27.309, 0.44", "0.830598, 145.995, 27.2395, 0.44", "0.828556, 147.197, 27.0973, 0.44", "0.851187, 147.855, 27.0518, 0.44", "0.921267, 148.805, 27.0182, 0.44", "0.954688, 149.13, 27.0068, 0.44", "1.08823, 150.168, 26.9818, 0.44", "1.1316, 150.449, 26.9709, 0.44", "1.40632, 152.035, 26.883, 0.44", "1.44624, 152.3, 26.8605, 0.44", "1.72072, 154.435, 26.6258, 0.44", "1.77156, 155.007, 26.5496, 0.44", "1.81772, 155.797, 26.4285, 0.44", "1.81824, 156.022, 26.3917, 0.44", "1.7543, 157.216, 26.1897, 0.44", "1.7406, 157.321, 26.1767, 0.44", "1.57346, 158.139, 26.1053, 0.44", "1.41125, 159.116, 26.027, 0.44", "1.23551, 160.331, 25.9406, 0.44", "1.20015, 160.559, 25.9279, 0.44", "0.953841, 162.177, 25.8682, 0.44", "0.944643, 162.257, 25.8656, 0.44", "0.86214, 163.91, 25.8237, 0.44", "0.861443, 163.98, 25.8171, 0.44", "0.881505, 164.908, 25.6684, 0.44", "0.883097, 165.278, 25.5923, 0.44", "0.905562, 166.281, 25.3051, 0.44", "0.89588, 166.781, 25.1381, 0.44", "0.792234, 168.018, 24.6347, 0.44", "0.730831, 169.068, 24.1787, 0.44", "0.728025, 169.143, 24.151, 0.44", "0.660214, 170.062, 23.8834, 0.44", "0.653427, 170.131, 23.8738, 0.44", "0.580458, 170.928, 23.933, 0.44", "0.55961, 171.482, 24.1015, 0.44", "0.540038, 172.956, 24.6753, 0.44", "0.530504, 173.147, 24.7436, 0.44", "0.459135, 173.84, 24.9587, 0.44", "0.427553, 174.128, 25.0289, 0.44", "0.282401, 174.919, 25.1551, 0.44", "0.202565, 175.206, 25.1603, 0.44", "-0.175378, 176.24, 25.0348, 0.44", "-0.599501, 177.217, 24.8785, 0.44", "-0.630626, 177.279, 24.8668, 0.44", "-1.15173, 178.213, 24.6856, 0.44", "-1.50592, 178.839, 24.5817, 0.44", "-1.75515, 179.3, 24.5227, 0.44", "-1.78724, 179.362, 24.5177, 0.44", "-2.07921, 179.972, 24.485, 0.44", "-2.20241, 180.25, 24.4763, 0.44", "-2.70453, 181.564, 24.4515, 0.44", "-2.76648, 181.722, 24.4417, 0.44", "-3.04643, 182.392, 24.3821, 0.44", "-3.07691, 182.454, 24.3754, 0.44", "-3.50134, 183.179, 24.3525, 0.44", "-3.57701, 183.296, 24.3594, 0.44", "-4.19224, 184.167, 24.4697, 0.44", "-4.42027, 184.507, 24.55, 0.44", "-4.99855, 185.4, 24.7849, 0.44", "-5.80871, 186.656, 25.0705, 0.44", "-6.41078, 187.586, 25.18, 0.44", "-6.44374, 187.636, 25.1818, 0.44", "-7.36488, 188.984, 25.081, 0.44", "-7.81502, 189.644, 24.9471, 0.44", "-8.48412, 190.555, 24.636, 0.44", "-9.62097, 192.036, 23.9794, 0.44", "-9.74589, 192.193, 23.9049, 0.44", "-10.2997, 192.909, 23.5759, 0.44", "-10.5454, 193.233, 23.433, 0.44", "-11.2848, 194.313, 23.1143, 0.44", "-11.7529, 195.106, 22.9764, 0.44", "-11.8262, 195.259, 22.9635, 0.44", "-12.195, 196.168, 22.9064, 0.44", "-12.395, 196.725, 22.8868, 0.44", "-12.607, 197.349, 22.8669, 0.44", "-12.8174, 197.91, 22.8566, 0.44", "-13.3357, 198.998, 22.856, 0.44", "-13.4162, 199.143, 22.8647, 0.44", "-13.8728, 199.849, 22.9423, 0.44", "-13.9535, 199.976, 22.948, 0.44", "-14.6573, 201.082, 22.9319, 0.44", "-14.6844, 201.135, 22.9249, 0.44", "-15.0262, 202.063, 22.6952, 0.44", "-15.0812, 202.335, 22.6042, 0.44", "-15.1724, 203.606, 22.0755, 0.44", "-15.1721, 203.788, 21.9341, 0.44", "-15.1179, 204.598, 21.1128, 0.44", "-15.1117, 204.698, 20.9978, 0.44", "-15.0771, 205.32, 20.1866, 0.44", "-15.069, 205.496, 19.954, 0.44", "-14.9725, 207.424, 17.2386, 0.44", "-14.9571, 207.519, 17.104, 0.44", "-14.831, 207.947, 16.5034, 0.44", "-14.8013, 208.011, 16.4239, 0.44", "-14.548, 208.404, 16.0077, 0.44", "-14.3692, 208.669, 15.8176, 0.44", "-13.4252, 209.993, 15.2753, 0.44", "-13.2243, 210.332, 15.0913, 0.44", "-12.8081, 211.157, 14.5638, 0.44", "-12.7654, 211.278, 14.4822, 0.44", "-12.5814, 212.197, 13.8354, 0.44", "-12.5912, 212.415, 13.695, 0.44", "-12.9709, 213.822, 12.8596, 0.44", "-12.9959, 213.884, 12.8382, 0.44", "-13.4534, 214.791, 12.7246, 0.44", "-13.508, 214.882, 12.7328, 0.44", "-14.4077, 216.205, 13.1193, 0.44", "-14.582, 216.434, 13.2173, 0.44", "-15.7861, 217.888, 14.0406, 0.44", "-15.8657, 217.967, 14.0822, 0.44", "-16.8792, 218.831, 14.5131, 0.44", "-17.0201, 218.945, 14.5697, 0.44", "-17.6569, 219.406, 14.7897, 0.44", "-17.7228, 219.449, 14.8049, 0.44", "-19.7984, 220.573, 14.801, 0.44", "-19.8922, 220.622, 14.7943, 0.44", "-20.6854, 230.265, 17.3199, 0.44", "-21.4294, 240.057, 19.2091, 0.44", "-21.5994, 250.003, 20.2365, 0.44", "-22.5256, 259.724, 22.3909, 0.44", "-22.7525, 268.942, 26.2597, 0.44", "-22.5695, 277.781, 30.9331, 0.44", "-20.7859, 286.646, 35.204, 0.44", "-20.714, 295.024, 40.6633, 0.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998358611418,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.19948, 13.7301, 4.07955, 1.03", "0.174415, 14.3639, 4.09285, 1.03", "0.690381, 15.3181, 4.11927, 1.03", "0.7598, 15.4675, 4.13498, 1.03", "1.23238, 16.5649, 4.28503, 1.03", "1.38093, 16.8921, 4.34302, 1.03", "1.79179, 17.7675, 4.51701, 1.03", "1.94299, 18.0855, 4.59183, 1.03", "2.68122, 19.5276, 4.97828, 1.03", "2.90999, 19.9111, 5.08563, 1.03", "3.65122, 21.021, 5.41493, 1.03", "3.7816, 21.184, 5.46091, 1.03", "4.59173, 22.0107, 5.67973, 1.03", "4.81247, 22.1941, 5.72106, 1.03", "6.05161, 23.0589, 5.8697, 1.03", "6.11044, 23.0965, 5.87497, 1.03", "7.33914, 23.8269, 5.94717, 1.03", "7.88806, 24.1422, 5.97344, 1.03", "9.23603, 24.8948, 6.02498, 1.03", "9.42013, 25.0033, 6.03143, 1.03", "10.4826, 25.6656, 6.06386, 1.03", "11.0292, 26.0386, 6.07835, 1.03", "11.6163, 26.4823, 6.09086, 1.03", "11.8111, 26.6556, 6.08648, 1.03", "12.7198, 27.5772, 6.02781, 1.03", "13.1745, 28.0719, 5.98021, 1.03", "13.7406, 28.7542, 5.89652, 1.03", "13.932, 28.9971, 5.86262, 1.03", "14.7273, 30.0222, 5.70427, 1.03", "14.9162, 30.2538, 5.66985, 1.03", "15.1978, 30.5809, 5.6226, 1.03", "15.3114, 30.7004, 5.60866, 1.03", "15.9488, 31.3018, 5.55675, 1.03", "16.2267, 31.5488, 5.54351, 1.03", "17.6314, 32.7027, 5.52696, 1.03", "17.9657, 32.9658, 5.52487, 1.03", "19.1349, 33.8419, 5.52487, 1.03", "19.7945, 34.3264, 5.52487, 1.03", "20.0948, 34.5461, 5.52487, 1.03", "20.523, 34.861, 5.52487, 1.03", "21.249, 35.4213, 5.52487, 1.03", "21.7394, 35.8298, 5.52487, 1.03", "22.3969, 36.4387, 5.51115, 1.03", "22.6778, 36.7171, 5.50094, 1.03", "22.7973, 36.8313, 5.49435, 1.03", "24.2711, 38.2129, 5.39107, 0.88", "24.3846, 38.3107, 5.38299, 0.88", "25.4329, 39.1202, 5.31314, 0.88", "25.6197, 39.2361, 5.30536, 0.88", "26.7058, 39.8074, 5.28096, 0.88", "26.77, 39.834, 5.27242, 0.88", "27.6376, 40.0975, 5.08449, 0.88", "27.7781, 40.1393, 5.04313, 0.88", "29.0116, 40.5026, 4.60099, 1.03", "29.0822, 40.527, 4.57247, 1.03", "31.3384, 41.421, 3.55366, 1.03", "31.4213, 41.459, 3.51497, 1.03", "32.4272, 41.9877, 3.01507, 1.03", "32.7207, 42.1632, 2.87685, 1.03", "33.2921, 42.5482, 2.61784, 1.03", "33.491, 42.7012, 2.54708, 1.03", "34.4706, 43.5692, 2.33397, 1.03", "34.6955, 43.7909, 2.28983, 1.03", "35.8568, 45.0452, 2.09794, 1.03", "35.9316, 45.1328, 2.08642, 1.03", "36.8453, 46.2899, 1.95354, 1.03", "37.1878, 46.7535, 1.90992, 1.03", "37.8231, 47.6719, 1.84934, 1.03", "38.0512, 48.0124, 1.83373, 1.03", "38.6751, 48.9931, 1.81376, 1.03", "38.8129, 49.1783, 1.81069, 1.03", "39.0657, 49.4511, 1.80555, 1.03", "39.3088, 49.6759, 1.80184, 1.03", "39.7645, 50.0263, 1.80184, 1.03", "39.9004, 50.1209, 1.80184, 1.03", "40.7805, 50.656, 1.80184, 1.03", "40.8995, 50.7294, 1.7956, 1.03", "41.6466, 51.2092, 1.72764, 1.03", "41.9861, 51.4555, 1.68131, 1.03", "42.4534, 51.8364, 1.59723, 1.03", "42.6028, 51.9943, 1.56329, 1.03", "43.2177, 52.7782, 1.396, 1.18", "43.3138, 52.9158, 1.36888, 1.18", "43.8746, 53.7829, 1.20694, 1.18", "44.0535, 54.0699, 1.16607, 1.18", "44.9774, 55.6187, 0.961107, 1.03", "45.014, 55.6777, 0.952549, 1.03", "45.5544, 56.5056, 0.82962, 1.03", "45.7399, 56.7498, 0.777122, 1.03", "47.2688, 58.5177, 0.269804, 0.88", "47.481, 58.7286, 0.188499, 0.88", "48.1544, 59.3165, -0.09889, 0.88", "48.2675, 59.4181, -0.153322, 0.88", "49.5772, 60.6015, -0.85321, 0.88", "49.7027, 60.737, -0.951126, 0.88", "50.8179, 62.244, -2.25674, 0.88", "50.8972, 62.3896, -2.38644, 0.88", "51.2465, 63.2743, -3.19513, 0.81", "51.2663, 63.3243, -3.23988, 0.81", "51.9299, 65.205, -4.91424, 0.81", "51.9919, 65.3582, -5.03124, 0.81", "52.4776, 66.3992, -5.66418, 0.81", "53.5134, 67.9906, -6.07839, 0.81", "54.5877, 69.3004, -5.95501, 0.81", "54.6253, 69.3456, -5.94315, 0.81", "56.3621, 71.3541, -5.07069, 0.81", "56.5722, 71.6427, -4.95082, 0.81", "57.089, 72.5201, -4.55748, 0.81", "57.1444, 72.7571, -4.53577, 0.81", "57.1084, 73.674, -4.95039, 0.81", "57.0834, 73.8708, -5.08913, 0.81", "56.8415, 75.1368, -6.23995, 0.81", "56.8196, 75.2678, -6.37584, 0.81", "56.6755, 76.293, -7.58057, 0.81", "56.6771, 76.4791, -7.8157, 0.81", "56.8423, 77.1772, -8.76391, 0.81", "56.9606, 77.3766, -9.06312, 0.81", "57.5058, 77.792, -9.81063, 0.81", "57.6348, 77.8474, -9.9302, 0.81", "58.7054, 78.0736, -10.6312, 0.81", "59.1505, 78.1376, -10.8817, 0.81", "59.8056, 78.1983, -11.1982, 0.81", "59.9386, 78.2227, -11.2574, 0.81", "60.8481, 78.5076, -11.645, 0.81", "61.0086, 78.5998, -11.7165, 0.81", "61.3641, 78.9504, -11.8943, 0.81", "61.534, 79.2087, -11.9843, 0.81", "62.0391, 80.2769, -12.2653, 0.81", "62.1548, 80.6183, -12.3487, 0.81", "62.3389, 81.397, -12.5389, 0.81", "62.371, 81.5275, -12.5744, 0.81", "62.6025, 82.4075, -12.8472, 0.74", "62.6444, 82.5447, -12.8995, 0.74", "63.0677, 83.556, -13.4079, 0.66", "63.2267, 83.7754, -13.5422, 0.66", "63.7224, 84.2425, -13.8737, 0.66", "63.8857, 84.3783, -13.9568, 0.66", "64.2623, 84.6422, -14.1004, 0.66", "64.7111, 84.9498, -14.111, 0.66", "65.757, 85.6639, -13.7993, 0.66", "65.9203, 85.7883, -13.7202, 0.66", "66.5379, 86.3029, -13.385, 0.66", "66.6729, 86.4192, -13.3397, 0.66", "68.1174, 87.6779, -13.3776, 0.66", "68.1756, 87.7297, -13.4387, 0.66", "68.6632, 88.1643, -14.4052, 0.66", "68.864, 88.4, -15.0375, 0.66", "69.5751, 89.4843, -18.2966, 0.66", "69.5857, 89.5086, -18.3721, 0.66", "69.6346, 89.7356, -19.0677, 0.66", "69.6358, 89.7581, -19.134, 0.66", "69.5862, 90.338, -20.6715, 0.66", "69.5834, 90.3777, -20.7547, 0.66", "69.5894, 90.8378, -21.5203, 0.66", "69.6495, 91.3377, -22.4359, 0.66", "69.6628, 91.3628, -22.4998, 0.66", "70.0546, 91.7194, -23.6447, 0.66", "70.1336, 91.7517, -23.7865, 0.66", "70.5216, 91.8476, -24.3642, 0.66", "70.6791, 91.8739, -24.5565, 0.66", "72.1422, 92.0512, -26.127, 0.66", "72.3929, 92.0897, -26.3735, 0.66", "73.1065, 92.217, -27.0058, 0.66", "73.3083, 92.2848, -27.1679, 0.66", "73.9474, 92.6291, -27.6132, 0.66", "74.0028, 92.6737, -27.6498, 0.66", "74.4163, 93.229, -27.9298, 0.66", "74.4945, 93.4226, -28.0283, 0.66", "74.5355, 94.3235, -28.5241, 0.66", "74.4929, 94.5829, -28.6775, 0.66", "74.2559, 95.3899, -29.1751, 0.66", "74.0864, 95.82, -29.4501, 0.66", "73.5842, 96.7106, -30.0485, 0.66", "73.0819, 97.4094, -30.559, 0.66", "73.0452, 97.4462, -30.5891, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998358611418,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-2.33948, 13.3801, 0.829555, 1.69", "-2.16477, 13.7219, 1.49101, 1.69", "-2.13148, 13.7915, 1.61969, 1.69", "-1.64826, 14.7774, 3.46132, 1.69", "-1.57098, 14.9246, 3.72297, 1.69", "-1.25695, 15.4983, 4.70747, 1.69", "-1.22004, 15.5631, 4.81398, 1.69", "-0.813304, 16.2162, 5.86871, 1.69", "-0.692451, 16.3998, 6.13384, 1.69", "-0.461039, 16.7759, 6.57631, 1.69", "-0.425751, 16.8377, 6.64515, 1.69", "-0.345464, 16.9964, 6.90043, 2.06", "-0.244345, 17.2179, 7.43969, 2.06", "-0.241627, 17.2351, 7.50751, 2.06", "-0.259119, 17.617, 9.34218, 2.06", "-0.260936, 17.6278, 9.40117, 2.06", "-0.367728, 18.0226, 11.8066, 2.06", "-0.439943, 18.1867, 12.983, 2.06", "-0.639264, 18.4739, 15.5624, 2.06", "-0.64434, 18.4796, 15.6219, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998358611418
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.33223, -11.9385, -0.0272632, 1.10069", "3.50904, -26.7797, -0.0272632, 1.10069", "5.68585, -41.6209, -0.0272632, 1.10069" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "3.98528, -38.6432, 4.10486, 2.65", "4.40696, -39.6603, 4.04586, 2.65", "4.99518, -41.0791, 3.96355, 2.65" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "3.98528, -38.6432, 4.10486, 0.74", "3.15366, -39.7055, 5.02507, 0.74", "2.86131, -40.0942, 5.48611, 0.74", "2.78622, -40.1973, 5.58522, 0.74", "2.34689, -40.7886, 6.16353, 0.74", "1.62738, -41.7278, 7.10966, 0.74", "0.834554, -42.6961, 8.14935, 0.74", "0.740861, -42.8123, 8.303, 0.74", "0.209352, -43.4819, 9.24919, 0.74", "-0.340707, -44.1812, 10.2481, 0.74", "-0.44655, -44.3125, 10.4218, 0.74", "-1.06865, -45.1054, 11.2436, 0.74", "-1.24548, -45.335, 11.435, 0.74", "-1.71284, -45.9221, 11.8917, 0.74", "-1.8238, -46.0382, 11.9812, 0.74", "-2.65584, -46.7915, 12.4216, 0.74", "-2.73126, -46.8475, 12.4529, 0.74", "-3.5867, -47.364, 12.7305, 0.74", "-3.97818, -47.554, 12.8451, 0.74", "-5.22276, -48.0368, 13.1911, 0.74", "-5.61153, -48.1542, 13.305, 0.74", "-6.69201, -48.3811, 13.6311, 0.74", "-6.99301, -48.4308, 13.7201, 0.74", "-7.64622, -48.5057, 13.9096, 0.74", "-7.74153, -48.5168, 13.9339, 0.74", "-8.91619, -48.6527, 14.1718, 0.74", "-9.50185, -48.7133, 14.2515, 0.74", "-9.93858, -48.7547, 14.2854, 0.74", "-10.2446, -48.7854, 14.3015, 0.74", "-11.1464, -48.8788, 14.3313, 0.74", "-11.4449, -48.9162, 14.3363, 0.74", "-12.7594, -49.1185, 14.3363, 0.74", "-13.1983, -49.195, 14.3363, 0.74", "-13.7718, -49.3504, 14.3363, 0.74", "-13.9794, -49.4232, 14.3363, 0.74", "-14.6344, -49.8181, 14.3653, 0.74", "-14.8798, -50.0255, 14.3872, 0.74", "-15.2228, -50.4397, 14.4477, 0.74", "-16.0611, -51.6424, 14.6587, 0.74", "-16.1161, -51.7317, 14.6757, 0.74", "-17.1357, -53.5002, 15.0344, 0.74", "-17.2451, -53.6961, 15.075, 0.74", "-17.7478, -54.5907, 15.2614, 0.74", "-17.8688, -54.797, 15.3038, 0.74", "-18.5117, -55.7328, 15.495, 0.74", "-18.6064, -55.8473, 15.5156, 0.74", "-19.4614, -56.5928, 15.6117, 0.74", "-19.6806, -56.7433, 15.6259, 0.74", "-20.384, -57.0799, 15.6386, 0.74", "-20.9377, -57.2837, 15.6413, 0.74", "-21.2181, -57.3578, 15.6399, 0.74", "-21.7939, -57.4861, 15.6332, 0.74", "-22.4433, -57.6035, 15.6218, 0.74", "-23.3866, -57.7804, 15.6016, 0.74", "-23.5325, -57.8151, 15.598, 0.74", "-24.7558, -58.2131, 15.5633, 0.74", "-24.8102, -58.2384, 15.562, 0.74", "-25.6822, -58.7666, 15.5562, 0.74", "-25.8166, -58.8705, 15.5617, 0.74", "-26.369, -59.3682, 15.6127, 0.74", "-26.596, -59.5791, 15.6409, 0.74", "-27.4458, -60.4037, 15.7614, 0.74", "-27.606, -60.5478, 15.7921, 0.74", "-28.6341, -61.421, 16.0391, 0.74", "-28.7969, -61.5406, 16.089, 0.74", "-29.9517, -62.2627, 16.51, 0.74", "-30.118, -62.3587, 16.5744, 0.74", "-31.0441, -62.8287, 16.9485, 0.74", "-31.1528, -62.8893, 16.9861, 0.74", "-31.9074, -63.339, 17.2154, 0.74", "-31.9579, -63.3696, 17.2263, 0.74", "-32.5154, -63.713, 17.3086, 0.74", "-32.6862, -63.8196, 17.3309, 0.74", "-34.0482, -64.7127, 17.4367, 0.74", "-34.2386, -64.8422, 17.4526, 0.74", "-35.0242, -65.3896, 17.5224, 0.74", "-35.2284, -65.5114, 17.5632, 0.74", "-36.1206, -65.9781, 17.7657, 0.74", "-36.1739, -66.0043, 17.7742, 0.74", "-36.9835, -66.3729, 17.847, 0.74", "-37.0768, -66.4238, 17.8462, 0.74", "-38.522, -67.3421, 17.6895, 0.74", "-39.2213, -67.8686, 17.5494, 0.74", "-39.9833, -68.5409, 17.3158, 0.74", "-40.1784, -68.7571, 17.2506, 0.74", "-40.7909, -69.6375, 17.0197, 0.74", "-40.8357, -69.7244, 17.0043, 0.74", "-41.1187, -70.5562, 16.926, 0.74", "-41.1858, -70.7737, 16.9395, 0.74", "-41.4358, -71.6062, 17.0745, 0.74", "-41.4998, -71.832, 17.1172, 0.74", "-41.6491, -72.4277, 17.2563, 0.74", "-41.6874, -72.5642, 17.3119, 0.74", "-41.8104, -72.9341, 17.5304, 0.52", "-41.9595, -73.2166, 17.7172, 0.52", "-42.3348, -73.7442, 18.0872, 0.52", "-42.4557, -73.8833, 18.1713, 0.52", "-43.628, -74.9669, 18.6761, 0.52", "-43.7518, -75.0459, 18.6907, 0.52", "-45.1453, -75.7253, 18.6348, 0.52", "-45.551, -75.8876, 18.5833, 0.52", "-46.2922, -76.1351, 18.4576, 0.52", "-46.6007, -76.2265, 18.4089, 0.52", "-47.964, -76.5766, 18.151, 0.52", "-48.0408, -76.5957, 18.1391, 0.52", "-49.4352, -76.9448, 17.9837, 0.52", "-49.6178, -76.995, 17.9676, 0.52", "-50.975, -77.3934, 17.867, 0.52", "-51.4238, -77.5549, 17.8351, 0.52", "-52.4584, -78.0066, 17.7604, 0.52", "-52.6431, -78.1041, 17.7514, 0.52", "-53.7871, -78.8291, 17.7322, 0.52", "-53.8697, -78.896, 17.7352, 0.52", "-54.7521, -79.8337, 17.8494, 0.52", "-54.9176, -80.0351, 17.8969, 0.52", "-55.4714, -80.8132, 18.1516, 0.52", "-55.6124, -81.017, 18.229, 0.52", "-56.1091, -81.7795, 18.5614, 0.52", "-56.1405, -81.8267, 18.5811, 0.52", "-56.5935, -82.4723, 18.8578, 0.52", "-56.7329, -82.6114, 18.925, 0.52", "-57.0116, -82.8169, 19.0373, 0.52", "-57.1029, -82.8685, 19.055, 0.52", "-57.8328, -83.1828, 19.105, 0.52", "-58.1895, -83.312, 19.0807, 0.52", "-59.5565, -83.7115, 18.8097, 0.52", "-59.6215, -83.7259, 18.788, 0.52", "-60.906, -83.9352, 18.183, 0.52", "-60.9659, -83.9422, 18.1476, 0.52", "-61.6616, -83.9874, 17.651, 0.52", "-61.8904, -84.0052, 17.4726, 0.52", "-62.7006, -84.0748, 16.7865, 0.52", "-63.1661, -84.1222, 16.4471, 0.52", "-63.502, -84.1616, 16.2519, 0.52", "-63.637, -84.188, 16.1864, 0.52", "-64.4278, -84.4247, 15.9019, 0.52", "-64.5557, -84.4735, 15.8723, 0.52", "-65.072, -84.7062, 15.8317, 0.52", "-65.1627, -84.7459, 15.8321, 0.52", "-65.9795, -85.0882, 15.8628, 0.52", "-66.2695, -85.2, 15.8775, 0.52", "-66.6171, -85.3209, 15.9008, 0.52", "-67.113, -85.4975, 15.9438, 0.52", "-67.8092, -85.7482, 16.0137, 0.52", "-68.0143, -85.8258, 16.0318, 0.52", "-68.7248, -86.1035, 16.0862, 0.52", "-68.8945, -86.193, 16.095, 0.52", "-69.469, -86.5931, 16.1044, 0.52", "-69.7373, -86.8506, 16.0951, 0.52", "-70.165, -87.3762, 16.1137, 0.52", "-70.2193, -87.4488, 16.1306, 0.52", "-70.7432, -88.2023, 16.3953, 0.52", "-70.8421, -88.3356, 16.4539, 0.52", "-71.223, -88.8161, 16.7033, 0.52", "-71.8209, -89.4816, 17.008, 0.52", "-73.2934, -90.9406, 17.6016, 0.52", "-73.4768, -91.093, 17.6435, 0.52", "-74.3659, -91.7071, 17.7181, 0.52", "-74.5039, -91.7907, 17.7091, 0.52", "-76.0693, -92.6038, 17.3793, 0.52", "-76.326, -92.7112, 17.311, 0.52", "-77.2533, -92.9927, 17.0282, 0.52", "-77.3939, -93.0296, 17.0022, 0.52", "-78.2572, -93.2273, 16.9657, 0.52", "-78.3841, -93.2554, 16.9656, 0.52", "-80.0418, -93.6036, 17.1179, 0.52", "-80.1003, -93.617, 17.1202, 0.52", "-80.9715, -93.8306, 17.0735, 0.52", "-81.2787, -93.9192, 17.0071, 0.52", "-82.7781, -94.4335, 16.3698, 0.52", "-82.9496, -94.5254, 16.2456, 0.52", "-83.3614, -94.826, 15.81, 0.52", "-83.6102, -95.044, 15.5155, 0.52", "-84.0179, -95.4639, 14.9691, 0.52", "-84.1216, -95.5939, 14.8401, 0.52", "-84.952, -96.7932, 13.945, 0.52", "-85.1326, -97.0531, 13.7729, 0.52", "-85.4854, -97.5488, 13.4865, 0.52", "-85.6015, -97.6872, 13.4213, 0.52", "-86.7143, -98.7964, 13.0637, 0.52", "-86.8368, -98.8997, 13.0433, 0.52", "-87.4198, -99.3228, 13.0146, 0.52", "-87.6186, -99.4579, 13.0113, 0.52", "-88.7532, -100.167, 13.0135, 0.52", "-90.2648, -101.066, 13.1037, 0.52", "-90.7913, -101.349, 13.1588, 0.52", "-90.9879, -101.465, 13.1915, 0.52", "-91.2411, -101.629, 13.2535, 0.52", "-91.3506, -101.709, 13.2887, 0.52", "-92.1798, -102.418, 13.6626, 0.52", "-92.2504, -102.487, 13.702, 0.52", "-92.7212, -103.009, 13.9822, 0.52", "-92.8484, -103.17, 14.0614, 0.52", "-93.5711, -104.157, 14.5119, 0.52", "-93.6318, -104.238, 14.5454, 0.52", "-94.124, -104.86, 14.7691, 0.52", "-94.2855, -105.051, 14.8404, 0.52", "-94.9801, -105.817, 15.1431, 0.52", "-95.1695, -106.024, 15.2253, 0.52", "-95.8688, -106.755, 15.5266, 0.52", "-96.0364, -106.905, 15.577, 0.52", "-96.8168, -107.516, 15.7267, 0.52", "-96.9004, -107.571, 15.7317, 0.52", "-97.6309, -107.972, 15.6938, 0.52", "-97.7805, -108.04, 15.6756, 0.52", "-99.1525, -108.563, 15.5199, 0.52", "-99.3338, -108.619, 15.5146, 0.52", "-100.587, -108.902, 15.6112, 0.52", "-100.782, -108.927, 15.6576, 0.52", "-101.61, -108.926, 16.0006, 0.52", "-102.532, -108.796, 16.5108, 0.52", "-103.346, -108.566, 17.0692, 0.52", "-103.696, -108.448, 17.319, 0.52", "-104.429, -108.161, 17.8589, 0.52", "-104.934, -107.981, 18.1725, 0.52", "-105.896, -107.67, 18.6216, 0.52", "-106.21, -107.608, 18.6882, 0.52", "-106.44, -107.592, 18.7002, 0.52", "-106.955, -107.66, 18.6763, 0.52", "-107.684, -107.942, 18.5684, 0.52", "-107.883, -108.066, 18.5039, 0.52", "-108.727, -108.711, 18.1364, 0.52", "-108.905, -108.854, 18.0724, 0.52", "-109.569, -109.414, 17.8836, 0.52", "-109.775, -109.589, 17.8511, 0.52", "-111.238, -110.766, 17.861, 0.52", "-111.286, -110.8, 17.8746, 0.52", "-112.58, -111.582, 18.602, 0.52", "-112.826, -111.699, 18.7664, 0.52", "-113.378, -111.897, 19.1871, 0.52", "-113.455, -111.923, 19.2432, 0.52", "-114.416, -112.244, 19.9503, 0.52", "-114.546, -112.302, 20.0162, 0.52", "-115.317, -112.702, 20.2442, 0.52", "-115.447, -112.775, 20.273, 0.52", "-116.548, -113.427, 20.4485, 0.52", "-116.83, -113.586, 20.4815, 0.52", "-118.077, -114.268, 20.5727, 0.52", "-118.441, -114.433, 20.5904, 0.52", "-118.852, -114.589, 20.6057, 0.52", "-118.998, -114.62, 20.6125, 0.52", "-120.118, -114.684, 20.6462, 0.52", "-120.187, -114.681, 20.6405, 0.52", "-121.505, -114.519, 20.4182, 0.52", "-121.68, -114.5, 20.3627, 0.52", "-122.929, -114.402, 19.769, 0.52", "-123.246, -114.392, 19.5658, 0.52", "-124.508, -114.413, 18.5152, 0.52", "-124.596, -114.423, 18.4342, 0.52", "-125.505, -114.626, 17.4667, 0.52", "-125.677, -114.675, 17.2786, 0.52", "-126.506, -114.977, 16.3459, 0.52", "-126.597, -115.012, 16.2603, 0.52", "-127.594, -115.416, 15.5211, 0.52", "-127.797, -115.497, 15.4001, 0.52", "-128.465, -115.755, 15.1079, 0.52", "-128.663, -115.84, 15.0338, 0.52", "-129.235, -116.117, 14.8549, 0.52", "-129.522, -116.269, 14.7881, 0.52", "-130.09, -116.589, 14.7051, 0.52", "-130.372, -116.755, 14.7076, 0.52", "-130.723, -116.974, 14.7612, 0.52", "-130.946, -117.11, 14.8118, 0.52", "-131.612, -117.491, 14.9963, 0.52", "-131.68, -117.529, 15.0135, 0.52", "-132.612, -118.02, 15.2213, 0.52", "-132.788, -118.105, 15.2458, 0.52", "-133.815, -118.55, 15.3241, 0.52", "-134.108, -118.652, 15.3473, 0.52", "-134.795, -118.853, 15.4042, 0.52", "-134.952, -118.891, 15.4188, 0.52", "-136.111, -119.122, 15.5238, 0.52", "-136.259, -119.142, 15.543, 0.52", "-138.098, -119.365, 15.8879, 0.52", "-138.281, -119.387, 15.9337, 0.52", "-139.158, -119.496, 16.2078, 0.52", "-139.225, -119.504, 16.2263, 0.52", "-140.17, -119.619, 16.4539, 0.52", "-141.096, -119.733, 16.5735, 0.52", "-142.447, -119.913, 16.6009, 0.52", "-142.565, -119.933, 16.5966, 0.52", "-143.931, -120.225, 16.4791, 0.52", "-145.473, -120.631, 16.2291, 0.52", "-146.674, -121.008, 15.9123, 0.52", "-147.075, -121.129, 15.7816, 0.52", "-147.899, -121.419, 15.4414, 0.52", "-147.984, -121.454, 15.4039, 0.52", "-148.994, -122.065, 14.887, 0.52", "-149.213, -122.293, 14.6828, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "73.0452, 97.4462, -30.5891, 0.59", "72.8252, 97.8862, -29.8991, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "73.0452, 97.4462, -30.5891, 0.66", "72.4715, 97.3412, -29.6298, 0.66", "72.4157, 97.3328, -29.5484, 0.66", "70.9679, 97.1398, -27.5897, 0.52", "70.9241, 97.135, -27.5353, 0.52", "69.9233, 96.9772, -26.3053, 0.52", "69.8856, 96.9699, -26.2592, 0.52", "69.081, 96.7886, -25.421, 0.52", "68.9654, 96.7567, -25.3127, 0.52", "67.98, 96.4161, -24.626, 0.52", "67.0732, 96.0703, -24.0912, 0.52", "66.9469, 96.0133, -24.0338, 0.52", "65.7574, 95.439, -23.6019, 0.52", "65.4927, 95.291, -23.5481, 0.52", "63.9518, 94.38, -23.4037, 0.52", "63.8917, 94.3441, -23.4023, 0.52", "62.7895, 93.73, -23.407, 0.52", "62.0787, 93.3442, -23.3624, 0.52", "60.6818, 92.5807, -23.1379, 0.52", "60.412, 92.4395, -23.039, 0.52", "59.5501, 92.0167, -22.4822, 0.52", "59.3194, 91.9147, -22.2955, 0.52", "58.5955, 91.6529, -21.5993, 0.52", "58.2589, 91.5579, -21.2852, 0.52", "57.5461, 91.4162, -20.6316, 0.52", "56.6882, 91.2469, -19.9388, 0.52", "56.5316, 91.2146, -19.8304, 0.52", "56.0313, 91.0963, -19.5327, 0.52", "54.8482, 90.7951, -18.9674, 0.52", "54.5431, 90.7165, -18.8405, 0.52", "54.2468, 90.6404, -18.7295, 0.52", "54.0042, 90.5858, -18.6344, 0.52", "53.1995, 90.389, -18.3179, 0.52", "53.1046, 90.3662, -18.2756, 0.52", "52.6567, 90.2579, -18.0551, 0.52", "52.5348, 90.228, -17.9956, 0.52", "51.4119, 89.9574, -17.399, 0.52", "51.354, 89.942, -17.3628, 0.52", "50.6719, 89.7457, -16.8451, 0.52", "50.4638, 89.6594, -16.671, 0.52", "49.9576, 89.3907, -16.1975, 0.52", "49.6885, 89.1779, -15.9133, 0.52", "49.2754, 88.7263, -15.4008, 0.52", "49.0144, 88.4266, -15.0974, 0.52", "48.3901, 87.6728, -14.4028, 0.52", "48.2869, 87.5688, -14.2982, 0.52", "47.4533, 86.8599, -13.4928, 0.52", "47.3696, 86.809, -13.4073, 0.52", "46.771, 86.5624, -12.747, 0.52", "46.5779, 86.5309, -12.532, 0.52", "45.7826, 86.5499, -11.5973, 0.52", "45.5639, 86.5805, -11.3551, 0.52", "44.3574, 86.9112, -10.0342, 0.52", "44.2707, 86.9388, -9.9413, 0.52", "43.1617, 87.356, -8.71449, 0.52", "43.0736, 87.3899, -8.62509, 0.52", "42.5501, 87.5977, -8.13855, 0.52", "42.2928, 87.7041, -7.9432, 0.52", "41.4879, 88.0635, -7.4408, 0.52", "41.1914, 88.2182, -7.26776, 0.52", "39.7192, 89.0909, -6.48304, 0.52", "39.5223, 89.2111, -6.38995, 0.52", "38.3241, 89.9341, -5.86071, 0.52", "37.9951, 90.1322, -5.73601, 0.52", "37.2622, 90.5945, -5.49917, 0.52", "36.7233, 90.9434, -5.35779, 0.52", "35.9422, 91.4748, -5.22039, 0.52", "35.2252, 91.9413, -5.10059, 0.52", "35.1739, 91.9711, -5.09158, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.64434, 18.4796, 15.6219, 1.03", "1.81158, 18.458, 15.4661, 1.03", "2.02833, 18.4805, 15.4963, 1.03", "3.1193, 18.7784, 15.9407, 1.03", "3.17881, 18.7985, 15.9717, 1.03", "3.96775, 19.1135, 16.47, 1.03", "5.31873, 19.6764, 17.4032, 1.03", "5.44172, 19.7338, 17.5149, 1.03", "6.46776, 20.1861, 18.604, 1.03", "6.54497, 20.2127, 18.7051, 1.03", "7.13063, 20.3392, 19.5684, 1.03", "7.23512, 20.3378, 19.7483, 1.03", "7.71744, 20.1446, 20.6179, 1.03", "7.84547, 20.0085, 20.9021, 1.03", "8.08958, 19.4118, 21.6824, 1.03", "8.09627, 19.3769, 21.7307, 1.03", "8.09257, 19.0871, 22.1514, 1.03", "8.07812, 19.0212, 22.2625, 1.03", "7.84011, 18.4069, 23.4495, 1.03", "7.8004, 18.2864, 23.676, 1.03", "7.59659, 17.6367, 24.9129, 1.03", "7.55405, 17.4919, 25.1836, 1.03", "7.31336, 16.6527, 26.7733, 1.03", "7.25205, 16.45, 27.1653, 1.03", "7.05204, 15.7831, 28.4866, 1.03", "7.04277, 15.7541, 28.5383, 1.03", "6.77585, 14.9272, 29.8571, 1.03", "6.72368, 14.692, 30.2952, 1.03", "6.66616, 14.142, 31.5561, 1.03", "6.67463, 14.0828, 31.744, 1.03", "6.85498, 13.9226, 32.8621, 1.03", "6.8989, 13.9296, 32.9689, 1.03", "8.41205, 14.6053, 35.1007, 1.03", "8.46165, 14.6306, 35.1581, 1.03", "9.50496, 15.2271, 36.1636, 1.03", "9.63891, 15.3114, 36.2813, 1.03", "10.589, 15.9848, 37.0086, 1.03", "10.6307, 16.0165, 37.038, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.64434, 18.4796, 15.6219, 2.06", "-1.18428, 19.7305, 15.9765, 2.06", "-1.23414, 19.846, 16.0092, 2.06", "-1.38611, 20.198, 16.109, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.68585, -41.6209, -0.0272632, 0.275702", "7.86266, -56.4621, -0.0272632, 0.275702", "10.0395, -71.3033, -0.0272632, 0.275702" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "4.99518, -41.0791, 3.96355, 1.77", "6.0556, -42.5941, 4.67088, 1.77", "6.75742, -43.5967, 5.139, 1.77", "6.81801, -43.6833, 5.17942, 1.77", "7.74551, -45.0084, 5.79807, 2.06" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.99518, -41.0791, 3.96355, 1.47", "4.9098, -42.1143, 3.67778, 1.47", "4.82052, -43.2558, 3.39907, 1.11", "4.69939, -44.6485, 3.09771, 0.74", "4.55871, -45.9397, 2.85465, 0.74", "4.42719, -46.8339, 2.66895, 0.74", "4.28157, -47.6222, 2.48577, 1.03", "4.08932, -48.4221, 2.23803, 1.25", "3.90382, -49.1018, 1.94663, 1.4", "3.69867, -49.7774, 1.52696, 1.4", "3.30672, -51.064, 0.54705, 1.4", "2.98715, -52.2055, -0.412858, 1.4", "2.62396, -53.765, -1.72912, 1.4", "2.39688, -55.1115, -2.85774, 1.25", "2.18978, -57.0305, -4.42522, 1.11", "2.14058, -58.1196, -5.27431, 1.11", "2.1654, -59.0344, -5.9279, 1.25", "2.26808, -60.3394, -6.79267, 1.25", "2.42002, -61.5028, -7.41691, 0.81", "2.53929, -62.1818, -7.69484, 0.96", "2.68009, -62.8254, -7.87057, 1.4", "2.76648, -63.1683, -7.95698, 1.4" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-149.213, -122.293, 14.6828, 0.29", "-150.748, -123.151, 15.2003, 0.29", "-150.811, -123.182, 15.2086, 0.29", "-151.93, -123.657, 15.2372, 0.29", "-152.006, -123.683, 15.2327, 0.29", "-152.484, -123.811, 15.1873, 0.29", "-152.646, -123.847, 15.167, 0.29", "-153.555, -123.965, 14.9599, 0.29", "-153.915, -123.986, 14.8761, 0.29", "-155.072, -123.98, 14.6005, 0.29", "-155.862, -123.95, 14.4144, 0.29", "-156.75, -123.887, 14.2041, 0.29", "-156.936, -123.875, 14.1569, 0.29", "-158.191, -123.794, 13.8059, 0.29", "-158.257, -123.795, 13.7835, 0.29", "-159.254, -123.877, 13.3809, 0.29", "-159.372, -123.899, 13.3303, 0.29", "-160.327, -124.171, 12.9091, 0.29", "-160.656, -124.299, 12.769, 0.29", "-161.594, -124.766, 12.3773, 0.29", "-161.885, -124.923, 12.2597, 0.29", "-162.516, -125.287, 12.0138, 0.29", "-162.728, -125.424, 11.9372, 0.29", "-163.668, -126.111, 11.6147, 0.29", "-163.93, -126.315, 11.5322, 0.29", "-164.842, -127.058, 11.2549, 0.29", "-164.996, -127.186, 11.2123, 0.29", "-166.348, -128.342, 10.8616, 0.29", "-166.684, -128.631, 10.7754, 0.29", "-167.747, -129.536, 10.4959, 0.29", "-168.112, -129.81, 10.4008, 0.29", "-169.027, -130.41, 10.1656, 0.29", "-169.231, -130.515, 10.1153, 0.29", "-170.692, -131.07, 9.75081, 0.29", "-171.106, -131.206, 9.65437, 0.29", "-172.527, -131.619, 9.33292, 0.29", "-172.709, -131.665, 9.29691, 0.29", "-174.416, -132.057, 9.00135, 0.29", "-174.601, -132.099, 8.97315, 0.29", "-176.391, -132.491, 8.76534, 0.29", "-176.536, -132.528, 8.75089, 0.29", "-177.721, -132.905, 8.61243, 0.29", "-177.938, -132.985, 8.5764, 0.29", "-178.63, -133.292, 8.4192, 0.29", "-178.76, -133.359, 8.38434, 0.29", "-179.574, -133.842, 8.11372, 0.29", "-180.46, -134.408, 7.83174, 0.29", "-181.409, -135.072, 7.53239, 0.29", "-181.705, -135.289, 7.44977, 0.29", "-182.164, -135.634, 7.34208, 0.29", "-182.472, -135.881, 7.28046, 0.29", "-183.583, -136.825, 7.11668, 0.29", "-183.699, -136.931, 7.11101, 0.29", "-184.217, -137.437, 7.11101, 0.29", "-184.329, -137.538, 7.11101, 0.29", "-184.826, -138.059, 7.06662, 0.29", "-185.033, -138.32, 7.03103, 0.29", "-185.764, -139.465, 6.83138, 0.29", "-185.805, -139.533, 6.81802, 0.29", "-186.338, -140.483, 6.61302, 0.29", "-187.111, -141.942, 6.29074, 0.29", "-187.158, -142.035, 6.26916, 0.29", "-187.504, -142.652, 6.12869, 0.29", "-187.555, -142.735, 6.11064, 0.29", "-188.07, -143.487, 5.98173, 0.29", "-188.286, -143.776, 5.93972, 0.29", "-188.492, -143.994, 5.91565, 0.29", "-189.394, -144.922, 5.79279, 0.29", "-189.63, -145.159, 5.76907, 0.29", "-190.251, -145.779, 5.72276, 0.29", "-190.62, -146.136, 5.70097, 0.29", "-191.375, -146.861, 5.66069, 0.29", "-191.425, -146.909, 5.65832, 0.29", "-192.507, -147.897, 5.61936, 0.29", "-192.632, -148.005, 5.61567, 0.29", "-193.801, -148.987, 5.59133, 0.29", "-194.046, -149.172, 5.58344, 0.29", "-195.2, -149.965, 5.51237, 0.29", "-195.341, -150.052, 5.50029, 0.29", "-196.321, -150.596, 5.3894, 0.29", "-196.443, -150.664, 5.3772, 0.29", "-197.529, -151.27, 5.28134, 0.29", "-197.738, -151.384, 5.26564, 0.29", "-199.236, -152.165, 5.16567, 0.29", "-199.509, -152.312, 5.15032, 0.29", "-201.082, -153.207, 5.08024, 0.29", "-201.263, -153.317, 5.0753, 0.29", "-202.468, -154.077, 4.9534, 0.29", "-202.527, -154.113, 4.94318, 0.29", "-203.416, -154.601, 4.71486, 0.29", "-203.729, -154.758, 4.61626, 0.29", "-204.777, -155.16, 4.30414, 0.29", "-206.744, -155.795, 3.77924, 0.37", "-206.953, -155.845, 3.73313, 0.37", "-208.216, -156.001, 3.55745, 0.37", "-208.308, -156.003, 3.54914, 0.37", "-210.218, -155.947, 3.44762, 0.37", "-210.397, -155.934, 3.44395, 0.37", "-211.797, -155.803, 3.47623, 0.37", "-213.38, -155.665, 3.47311, 0.37", "-214.268, -155.595, 3.44945, 0.37", "-214.509, -155.581, 3.43399, 0.37", "-216.08, -155.53, 3.22035, 0.37", "-216.184, -155.531, 3.20288, 0.37", "-217.04, -155.594, 3.00793, 0.37", "-217.107, -155.607, 2.98937, 0.37", "-217.626, -155.733, 2.87786, 0.37", "-217.692, -155.751, 2.86592, 0.37", "-218.376, -155.96, 2.79581, 0.37", "-218.672, -156.049, 2.77769, 0.37", "-220.127, -156.408, 2.77891, 0.37", "-221.584, -156.713, 2.81902, 0.37", "-221.752, -156.741, 2.81868, 0.37", "-223.67, -156.986, 2.78451, 0.37", "-223.868, -156.997, 2.77613, 0.37", "-225.776, -157.004, 2.6313, 0.37", "-225.952, -156.991, 2.59761, 0.37", "-227.413, -156.818, 2.13186, 0.37", "-227.552, -156.801, 2.08238, 0.37", "-229.095, -156.589, 1.4352, 0.37", "-229.218, -156.578, 1.39492, 0.37", "-230.697, -156.515, 1.03602, 0.37", "-230.888, -156.515, 1.03104, 0.37", "-232.649, -156.573, 1.26276, 0.37", "-232.838, -156.576, 1.30075, 0.37", "-234.59, -156.604, 1.77323, 0.37", "-234.714, -156.603, 1.81058, 0.37", "-236.931, -156.539, 2.58211, 0.37", "-236.988, -156.535, 2.60015, 0.37", "-238.783, -156.353, 3.07965, 0.37", "-238.841, -156.347, 3.093, 0.37", "-239.715, -156.28, 3.24293, 0.37", "-239.893, -156.273, 3.26995, 0.37", "-241.491, -156.319, 3.48588, 0.37", "-242.235, -156.397, 3.5816, 0.37", "-242.332, -156.416, 3.59335, 0.37", "-243.612, -156.687, 3.7237, 0.37", "-243.67, -156.7, 3.72922, 0.37", "-244.179, -156.852, 3.75501, 0.37", "-245.011, -157.166, 3.76332, 0.37", "-245.546, -157.415, 3.74747, 0.37", "-246.594, -157.958, 3.69917, 0.37", "-246.706, -158.025, 3.69614, 0.37", "-247.877, -158.797, 3.68797, 0.37", "-248.158, -159.0, 3.70007, 0.37", "-249.676, -160.265, 3.85731, 0.37", "-249.77, -160.354, 3.87369, 0.37", "-250.422, -161.046, 4.04054, 0.37", "-250.499, -161.134, 4.06755, 0.37", "-251.16, -161.967, 4.42109, 0.37", "-251.223, -162.061, 4.46164, 0.37", "-251.669, -162.862, 4.81728, 0.37", "-251.712, -162.947, 4.84688, 0.37", "-252.089, -163.723, 5.06857, 0.37", "-252.156, -163.865, 5.10728, 0.37", "-252.665, -164.868, 5.39215, 0.37", "-252.734, -164.989, 5.43026, 0.37", "-253.514, -166.109, 5.83933, 0.37", "-253.96, -166.641, 6.05571, 0.37", "-254.15, -166.818, 6.13308, 0.37", "-255.025, -167.531, 6.45537, 0.37", "-255.127, -167.604, 6.49159, 0.37", "-255.788, -168.036, 6.71696, 0.37", "-256.047, -168.175, 6.80228, 0.37", "-257.511, -168.896, 7.20728, 0.37", "-257.581, -168.931, 7.22269, 0.37", "-266.276, -173.722, 8.41987, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-149.213, -122.293, 14.6828, 0.52", "-150.816, -121.932, 14.7855, 0.52", "-151.395, -121.827, 14.8301, 0.52", "-152.268, -121.754, 14.9381, 0.52", "-153.019, -121.725, 15.0777, 0.37", "-153.234, -121.721, 15.1252, 0.37", "-154.117, -121.738, 15.2372, 0.37", "-154.283, -121.762, 15.247, 0.37", "-155.461, -121.951, 15.0956, 0.37", "-155.928, -122.033, 14.9366, 0.37", "-157.038, -122.18, 14.3269, 0.29", "-158.595, -122.38, 13.2971, 0.29", "-158.834, -122.408, 13.0954, 0.29", "-159.878, -122.503, 12.039, 0.29", "-159.934, -122.506, 11.9657, 0.29", "-160.54, -122.54, 11.0518, 0.29", "-170.217, -121.191, 8.92186, 0.29", "-180.137, -120.637, 7.7914, 0.29", "-189.852, -121.179, 5.48385, 0.29", "-199.167, -122.032, 1.94687, 0.29", "-208.443, -124.22, -1.08082, 0.29", "-217.887, -125.192, -4.22089, 0.29", "-226.861, -126.731, -8.35598, 0.29", "-235.045, -129.129, -13.5793, 0.29", "-242.978, -133.268, -18.0447, 0.29", "-250.389, -139.355, -20.8768, 0.29", "-256.976, -145.987, -24.431, 0.29", "-263.642, -153.108, -26.6349, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "72.8252, 97.8862, -29.8991, 0.59", "72.9151, 99.8862, -31.332, 0.59", "72.9334, 99.9432, -31.3684, 0.59", "73.2237, 100.599, -31.7862, 0.59", "73.617, 101.185, -32.1596, 0.59", "74.1206, 101.845, -32.5827, 0.59", "74.1898, 101.931, -32.6359, 0.59", "75.209, 103.02, -33.2131, 0.59", "75.3264, 103.151, -33.2843, 0.59", "76.3941, 104.345, -33.966, 0.59", "76.647, 104.668, -34.1916, 0.59", "77.207, 105.515, -34.8726, 0.59", "77.2942, 105.696, -35.0372, 0.59", "77.5518, 106.625, -35.9691, 0.52", "77.5624, 106.707, -36.0575, 0.52", "77.4842, 108.179, -37.7892, 0.52", "77.4477, 108.506, -38.1905, 0.52", "77.3277, 109.212, -39.0995, 0.52", "77.2945, 109.433, -39.3767, 0.52", "77.2486, 109.818, -39.8623, 0.52", "77.2401, 109.926, -39.9657, 0.52", "77.2029, 110.604, -40.4281, 0.52", "77.2001, 110.769, -40.5371, 0.52", "77.214, 111.179, -40.7836, 0.59", "77.2303, 111.402, -40.9183, 0.59", "77.3526, 112.018, -41.266, 0.59", "78.0303, 113.701, -42.1211, 0.59", "78.1029, 113.82, -42.1755, 0.59", "78.6651, 114.543, -42.4424, 0.59", "78.765, 114.649, -42.477, 0.59", "79.7913, 115.733, -42.7797, 0.59", "80.925, 116.884, -43.0271, 0.59", "81.2873, 117.268, -43.0595, 0.59", "82.0697, 118.158, -43.1294, 0.59", "82.2778, 118.418, -43.1436, 0.59", "82.9912, 119.495, -43.208, 0.52", "83.0838, 119.69, -43.2477, 0.52", "83.4178, 120.619, -43.5856, 0.52", "83.4459, 120.706, -43.6257, 0.52", "83.8, 121.819, -44.2159, 0.52", "83.9121, 122.21, -44.415, 0.52", "84.4284, 123.991, -45.3463, 0.52", "84.5854, 124.562, -45.6327, 0.52", "85.0083, 126.115, -46.3966, 0.52", "85.0455, 126.248, -46.4552, 0.52", "85.4034, 127.523, -46.9305, 0.52", "85.4237, 127.588, -46.946, 0.52", "85.8291, 128.772, -47.0371, 0.52", "86.0005, 129.242, -47.0468, 0.52", "86.2103, 129.779, -47.1794, 0.52", "86.3088, 130.095, -47.3326, 0.52", "86.4296, 130.622, -47.7109, 0.52", "86.4685, 130.851, -47.8972, 0.52", "86.5963, 131.662, -48.6152, 0.52", "86.9513, 133.872, -50.6346, 0.52", "87.0789, 134.478, -51.1852, 0.52", "87.3212, 135.336, -51.9643, 0.52", "87.4409, 135.623, -52.2147, 0.52", "87.8662, 136.386, -52.8346, 0.52", "87.9168, 136.457, -52.8843, 0.52", "88.5058, 137.168, -53.227, 0.52", "88.6104, 137.283, -53.2954, 0.52", "89.2568, 137.996, -53.7812, 0.52", "89.4405, 138.215, -53.9252, 0.52", "90.176, 139.288, -54.5327, 0.52", "90.2392, 139.39, -54.5827, 0.52", "90.9986, 140.769, -55.2064, 0.52", "91.0545, 140.878, -55.2513, 0.52", "91.6155, 142.038, -55.6684, 0.59", "92.2188, 143.316, -56.0667, 0.59", "92.4571, 143.765, -56.188, 0.59", "93.113, 144.927, -56.4928, 0.59", "93.4213, 145.495, -56.6659, 0.59", "93.7753, 146.156, -56.9196, 0.44", "93.7988, 146.205, -56.9436, 0.44", "94.4187, 147.597, -57.6846, 0.44", "94.4456, 147.675, -57.7244, 0.44", "94.9177, 149.381, -58.5369, 0.44", "95.0079, 149.726, -58.6933, 0.44", "95.3778, 151.227, -59.3665, 0.44", "95.4336, 151.456, -59.4648, 0.44", "95.7082, 152.743, -59.9959, 0.44", "95.7688, 152.996, -60.0876, 0.44", "96.151, 154.393, -60.5137, 0.44", "96.215, 154.629, -60.5771, 0.44", "96.5828, 155.976, -60.906, 0.44", "96.7055, 156.522, -61.0239, 0.44", "96.9552, 158.014, -61.3205, 0.44", "96.9794, 158.297, -61.3808, 0.44", "96.9806, 159.372, -61.6217, 0.44", "96.982, 159.44, -61.6391, 0.44", "97.0224, 160.652, -62.0027, 0.44", "97.0457, 160.914, -62.0953, 0.44", "97.2212, 162.011, -62.5734, 0.44", "97.2635, 162.18, -62.6527, 0.44", "97.7196, 163.469, -63.2969, 0.44", "97.7607, 163.556, -63.3404, 0.44", "98.151, 164.195, -63.6645, 0.44", "98.3172, 164.43, -63.7815, 0.44", "98.8001, 165.039, -64.0774, 0.44", "98.9174, 165.186, -64.1592, 0.44", "99.4095, 165.813, -64.5067, 0.44", "99.5193, 165.946, -64.5858, 0.44", "100.043, 166.723, -65.0413, 0.44", "100.098, 166.825, -65.0994, 0.44", "100.459, 167.976, -65.7338, 0.44", "100.54, 168.548, -66.0339, 0.44", "100.563, 168.873, -66.2273, 0.44", "100.626, 170.568, -67.3141, 0.44", "100.634, 170.673, -67.3912, 0.44", "100.796, 171.838, -68.3383, 0.44", "100.83, 172.014, -68.4799, 0.44", "101.347, 173.987, -70.0047, 0.44", "101.377, 174.082, -70.0717, 0.44", "101.932, 175.513, -71.0643, 0.44", "102.079, 175.967, -71.3658, 0.44", "102.435, 177.214, -72.1791, 0.44", "102.471, 178.059, -72.7125, 0.44", "102.104, 179.45, -73.6437, 0.44", "102.009, 179.684, -73.8235, 0.44", "101.361, 180.841, -74.8263, 0.44", "101.153, 181.219, -75.1893, 0.44", "100.607, 182.202, -76.2351, 0.44", "100.247, 182.884, -76.9624, 0.44", "99.7524, 183.901, -77.9747, 0.44", "99.7039, 184.013, -78.0709, 0.44", "99.3537, 184.996, -78.8029, 0.44", "99.2821, 185.212, -78.9445, 0.44", "98.9543, 186.324, -79.5959, 0.44", "98.8189, 186.756, -79.8119, 0.44", "98.42, 187.89, -80.3665, 0.44", "98.3643, 188.055, -80.448, 0.44", "98.2392, 188.44, -80.6421, 0.44", "98.205, 188.667, -80.7541, 0.44", "98.2442, 189.171, -81.0133, 0.44", "98.2767, 189.338, -81.1159, 0.44", "98.4073, 189.85, -81.4662, 0.44", "98.4421, 190.038, -81.5948, 0.44", "98.526, 190.654, -82.0221, 0.44", "98.5754, 191.311, -82.4519, 0.44", "98.6073, 192.278, -83.0496, 0.44", "98.6219, 192.666, -83.2599, 0.44", "98.649, 193.369, -83.5639, 0.44", "98.6484, 193.425, -83.5839, 0.44", "98.608, 194.133, -83.7722, 0.44", "98.5817, 194.524, -83.8478, 0.44", "98.5299, 195.297, -83.9769, 0.44", "98.4938, 196.231, -84.16, 0.44", "98.4609, 197.662, -84.4788, 0.44", "98.4818, 198.17, -84.6317, 0.44", "98.568, 199.137, -85.0211, 0.44", "98.6071, 199.366, -85.1376, 0.44", "98.8414, 200.33, -85.7147, 0.44", "98.8578, 200.379, -85.7456, 0.44", "99.5593, 202.037, -86.8175, 0.44", "99.779, 202.479, -87.0917, 0.44", "100.498, 203.787, -87.864, 0.44", "100.63, 204.028, -88.003, 0.44", "101.183, 205.036, -88.564, 0.44", "101.211, 205.092, -88.5942, 0.44", "101.828, 206.498, -89.2865, 0.44", "101.946, 206.797, -89.4281, 0.44", "102.345, 207.944, -89.9916, 0.44", "102.456, 208.349, -90.1922, 0.44", "102.703, 209.656, -90.8461, 0.44", "102.709, 209.726, -90.8851, 0.44", "102.666, 210.482, -91.3526, 0.44", "102.642, 210.699, -91.4869, 0.44", "102.433, 212.051, -92.3263, 0.44", "102.384, 212.325, -92.4958, 0.44", "102.071, 213.878, -93.4385, 0.44", "102.001, 214.306, -93.6835, 0.44", "101.928, 214.876, -94.0237, 0.44", "101.925, 215.073, -94.1387, 0.44", "102.004, 216.175, -94.7229, 0.44", "102.012, 216.238, -94.7527, 0.44", "102.197, 217.392, -95.2009, 0.44", "102.359, 218.302, -95.5465, 0.44", "102.807, 220.301, -96.3489, 0.44", "103.086, 221.285, -96.7585, 0.44", "103.107, 221.346, -96.7859, 0.44", "103.328, 221.987, -97.0644, 0.44", "103.349, 222.048, -97.0903, 0.44", "103.787, 223.247, -97.5281, 0.44", "104.175, 224.275, -97.9273, 0.44", "104.251, 224.45, -97.9967, 0.44", "104.83, 225.658, -98.4688, 0.44", "104.924, 225.815, -98.5298, 0.44", "105.355, 226.433, -98.75, 0.44", "105.724, 226.916, -98.884, 0.44", "106.693, 228.046, -99.1648, 0.44", "106.962, 228.361, -99.2341, 0.44", "107.832, 229.35, -99.4389, 0.44", "108.048, 229.636, -99.5047, 0.44", "108.791, 230.754, -99.7877, 0.44", "108.949, 231.03, -99.8651, 0.44", "109.652, 232.549, -100.39, 0.44", "109.739, 232.746, -100.465, 0.44", "110.212, 233.864, -100.963, 0.44", "110.241, 233.92, -100.991, 0.44", "110.79, 234.809, -101.582, 0.44", "110.978, 235.094, -101.805, 0.44", "111.388, 235.674, -102.373, 0.44", "111.612, 235.99, -102.699, 0.44", "112.107, 236.692, -103.456, 0.44", "112.917, 237.964, -104.839, 0.44", "113.341, 238.664, -105.603, 0.44", "113.736, 239.309, -106.297, 0.44", "114.113, 239.928, -106.971, 0.44", "114.206, 240.054, -107.099, 0.44", "114.947, 240.862, -107.775, 0.44", "115.458, 241.326, -108.04, 0.44", "115.859, 241.663, -108.19, 0.44", "115.966, 241.75, -108.217, 0.44", "117.553, 242.977, -108.519, 0.44", "118.741, 243.886, -108.681, 0.44", "118.805, 243.934, -108.684, 0.44" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "72.8252, 97.8862, -29.8991, 0.59", "74.9077, 99.1084, -30.9608, 0.59", "75.0044, 99.1635, -31.0054, 0.59", "76.4716, 99.9804, -31.6565, 0.44", "76.7644, 100.143, -31.7894, 0.44", "78.2801, 100.973, -32.5232, 0.29", "78.4515, 101.065, -32.6078, 0.29", "79.3642, 101.547, -33.0169, 0.29", "79.5272, 101.632, -33.0913, 0.29", "81.2267, 102.507, -33.8994, 0.29", "81.814, 102.839, -34.1914, 0.29", "82.8716, 103.469, -34.7312, 0.29", "83.143, 103.607, -34.8529, 0.29", "84.0156, 103.99, -35.1857, 0.29", "84.2927, 104.107, -35.286, 0.29", "84.9057, 104.338, -35.5272, 0.29", "85.3489, 104.506, -35.732, 0.29", "87.0359, 105.12, -36.6676, 0.29", "87.4126, 105.261, -36.9032, 0.29", "88.3857, 105.626, -37.5863, 0.29", "89.2445, 105.95, -38.2279, 0.29", "90.151, 106.311, -38.9679, 0.29", "90.2529, 106.364, -39.064, 0.29", "91.1703, 107.072, -40.1214, 0.29", "91.3948, 107.225, -40.3582, 0.29" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.6307, 16.0165, 37.038, 0.96", "11.5658, 16.6152, 36.4787, 0.96", "12.0028, 16.9017, 36.1445, 0.96", "12.9929, 17.5564, 35.7537, 0.96", "14.2715, 18.4076, 35.7701, 0.96", "14.4094, 18.5028, 35.8356, 0.96", "15.5941, 19.371, 37.0653, 0.96", "15.639, 19.414, 37.3095, 0.96", "15.149, 19.8625, 41.6145, 0.96", "15.0934, 19.9066, 41.9776, 0.96", "14.8239, 20.0945, 43.4676, 0.96", "14.7897, 20.117, 43.6553, 0.96", "14.5122, 20.2702, 45.1116, 0.96", "14.0481, 20.6027, 48.0108, 0.96", "13.8778, 20.7661, 49.1283, 0.96", "13.8858, 20.8153, 49.3733, 0.96", "14.1422, 21.0921, 50.4107, 0.96", "14.3897, 21.2539, 50.8979, 0.96", "15.4117, 21.7595, 52.0736, 0.96", "15.5374, 21.799, 52.1506, 0.96", "16.7494, 22.1017, 52.6626, 0.96", "16.9025, 22.1247, 52.7077, 0.96", "18.429, 22.1835, 52.9963, 0.96", "19.2194, 22.0863, 53.1917, 0.96", "20.4632, 21.5725, 53.8058, 0.96", "20.5238, 21.5488, 53.8523, 0.96", "21.8454, 21.0793, 55.246, 0.96", "22.4677, 21.0255, 55.875, 0.96", "23.1189, 21.1115, 56.5305, 0.96", "23.3698, 21.1917, 56.7559, 0.96", "24.3709, 21.6392, 57.5849, 0.96", "24.6758, 21.7866, 57.7963, 0.96", "25.7542, 22.3448, 58.3872, 0.96", "26.1671, 22.5319, 58.5336, 0.96", "27.6334, 23.1186, 58.8812, 0.66", "27.73, 23.1443, 58.8824, 0.66", "29.0964, 23.3969, 58.712, 0.66", "29.3603, 23.4398, 58.6573, 0.66", "31.713, 23.7785, 57.993, 0.66", "31.8465, 23.7985, 57.9602, 0.66", "35.0672, 24.3118, 57.1958, 0.66", "35.802, 24.4795, 57.0989, 0.66", "36.4862, 24.7025, 57.0987, 0.66", "36.6084, 24.7617, 57.1326, 0.66", "38.4704, 26.1382, 58.5015, 0.66", "38.5989, 26.2902, 58.6527, 0.66", "39.2756, 27.7462, 59.935, 0.66", "39.3651, 27.9934, 60.1229, 0.66", "39.5571, 28.6725, 60.5453, 0.66", "39.6061, 28.8845, 60.6505, 0.66", "40.0267, 31.1243, 61.1689, 0.66", "40.3377, 32.8463, 61.3148, 0.66", "40.3735, 33.0736, 61.2957, 0.66", "40.5219, 34.0678, 61.123, 0.52", "40.5564, 34.3077, 61.0615, 0.52", "40.9584, 37.2463, 59.9217, 0.52", "40.9822, 37.431, 59.7853, 0.52", "41.118, 38.3088, 58.8848, 0.52", "41.1254, 38.3545, 58.8323, 0.52", "48.6846, 42.1759, 64.1478, 0.52", "56.613, 45.1568, 69.4634, 0.52", "64.4428, 48.372, 74.7885, 0.52", "72.0937, 49.7477, 81.0791, 0.52", "80.2564, 51.3423, 86.6313, 0.52", "89.6771, 50.9097, 89.9575, 0.52" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "10.6307, 16.0165, 37.038, 0.96", "12.1347, 15.1053, 36.5269, 0.96", "12.2218, 15.0565, 36.4905, 0.96", "13.5168, 14.3578, 35.8246, 0.96", "13.5703, 14.3311, 35.7882, 0.96", "14.4514, 13.9054, 35.1136, 0.96", "14.6457, 13.8168, 34.9836, 0.96", "16.132, 13.1708, 34.1047, 0.96", "16.6542, 12.9521, 33.8283, 0.96", "17.9004, 12.4927, 33.3568, 0.96", "17.9651, 12.4713, 33.3409, 0.96", "19.7965, 11.8459, 33.0799, 0.81", "20.6245, 11.5462, 33.0426, 0.81", "20.6996, 11.5193, 33.0487, 0.81", "22.4712, 10.8907, 33.262, 0.81", "23.4416, 10.5606, 33.3915, 0.81", "24.1651, 10.3275, 33.45, 0.81", "24.2742, 10.2992, 33.4396, 0.81", "25.7702, 10.0075, 33.1789, 0.96", "25.9339, 9.98028, 33.1417, 0.96", "27.2251, 9.78564, 32.8068, 0.96", "27.3199, 9.77164, 32.7821, 0.96", "29.6766, 9.45475, 32.1766, 0.96", "31.0376, 9.21117, 31.8659, 0.96", "31.1046, 9.19611, 31.8524, 0.96", "32.5272, 8.78523, 31.5522, 0.96", "32.8578, 8.66439, 31.4778, 0.74", "32.983, 8.60841, 31.4497, 0.74", "34.1806, 7.91075, 31.2236, 0.74", "34.3039, 7.83737, 31.1889, 0.74", "35.7311, 7.02323, 30.7129, 0.74", "35.998, 6.87709, 30.6139, 0.74", "37.0049, 6.35821, 30.2546, 0.74", "37.091, 6.31732, 30.2281, 0.74", "38.0098, 5.91508, 29.9834, 0.74", "38.2104, 5.83047, 29.9489, 0.74", "39.5112, 5.28314, 29.8692, 0.74", "39.6014, 5.24223, 29.8666, 0.74", "40.619, 4.75312, 29.8495, 0.74", "40.9055, 4.60605, 29.8508, 0.74", "41.9955, 4.01159, 29.8992, 0.66", "42.2494, 3.87402, 29.9259, 0.66", "43.9362, 2.95942, 30.2025, 0.66", "44.0994, 2.88125, 30.235, 0.66", "45.6297, 2.21987, 30.5975, 0.66", "46.0845, 2.04646, 30.7117, 0.66", "47.0906, 1.71443, 30.9823, 0.66", "47.183, 1.68774, 31.0058, 0.66", "48.8661, 1.2739, 31.4312, 0.66", "48.9318, 1.26106, 31.4516, 0.66", "49.9534, 1.12693, 31.8104, 0.66", "50.0459, 1.11949, 31.8477, 0.66", "50.8841, 1.08884, 32.2691, 0.66", "51.0019, 1.08477, 32.3426, 0.66", "52.4346, 0.959273, 33.5368, 0.66", "52.5233, 0.949811, 33.6171, 0.66", "53.1663, 0.820766, 34.2032, 0.66", "53.9971, 0.598184, 34.9256, 0.66", "54.1892, 0.530386, 35.08, 0.66", "55.2704, 0.0257644, 35.8308, 0.66", "55.4701, -0.0900621, 35.9317, 0.66", "56.7926, -0.913114, 36.4984, 0.66", "56.8677, -0.96333, 36.5166, 0.66", "57.3915, -1.31103, 36.5591, 0.66", "57.6785, -1.48068, 36.5551, 0.66", "58.8386, -2.10859, 36.4258, 0.66", "59.065, -2.21076, 36.3972, 0.66", "60.765, -2.78129, 36.1696, 0.66", "60.937, -2.81528, 36.1535, 0.66", "62.1365, -2.89918, 36.0865, 0.66", "62.2065, -2.89881, 36.0867, 0.66", "63.0805, -2.83039, 36.1576, 0.66", "63.5935, -2.78483, 36.2257, 0.66", "64.8187, -2.63571, 36.4588, 0.66", "64.8876, -2.63114, 36.47, 0.66", "66.18, -2.62859, 36.6279, 0.66", "66.3433, -2.65022, 36.6446, 0.66", "67.138, -2.85177, 36.7157, 0.66", "67.296, -2.90644, 36.7278, 0.66", "67.9701, -3.20242, 36.7073, 0.66", "68.0537, -3.24033, 36.6983, 0.66", "69.727, -3.97913, 36.4208, 0.66", "69.7901, -4.00665, 36.4079, 0.66", "70.9465, -4.49894, 36.1379, 0.66", "72.2854, -5.06208, 35.8018, 0.66", "72.3943, -5.10422, 35.7742, 0.66", "73.138, -5.35944, 35.5999, 0.66", "73.2724, -5.38493, 35.5753, 0.66", "74.2162, -5.47587, 35.4645, 0.66", "74.542, -5.45938, 35.4513, 0.66", "75.4925, -5.3266, 35.4722, 0.66", "76.0024, -5.22458, 35.4752, 0.66", "77.3457, -4.87709, 35.4707, 0.66", "77.4813, -4.84205, 35.4731, 0.66", "78.3322, -4.59942, 35.5014, 0.66", "78.9304, -4.49584, 35.5463, 0.66", "79.1892, -4.48628, 35.5768, 0.66", "79.635, -4.53183, 35.6493, 0.66", "80.5954, -4.74657, 35.8392, 0.66", "80.6531, -4.7581, 35.8512, 0.66", "82.2579, -5.00334, 36.0376, 0.66", "82.5468, -5.02604, 36.0464, 0.66", "83.7583, -5.01555, 35.9645, 0.66", "83.9834, -4.99654, 35.9333, 0.66", "85.3196, -4.87138, 35.6933, 0.66", "87.1894, -4.72134, 35.2931, 0.66", "87.3377, -4.71726, 35.2569, 0.66", "89.2865, -4.83619, 34.8136, 0.66", "89.3542, -4.84519, 34.7982, 0.66", "91.2737, -5.28407, 34.4129, 0.66", "91.4711, -5.34409, 34.3795, 0.66", "93.0182, -5.80396, 34.2122, 0.66", "94.4349, -6.19147, 34.0607, 0.66", "94.7143, -6.2685, 34.0285, 0.66", "96.6626, -6.7996, 33.8033, 0.66", "96.8821, -6.86581, 33.7765, 0.66", "99.2068, -7.64655, 33.4996, 0.66", "99.2708, -7.67296, 33.4895, 0.66", "100.183, -8.16602, 33.3076, 0.66", "100.424, -8.31681, 33.2504, 0.66", "101.957, -9.4348, 32.805, 0.66", "102.048, -9.51076, 32.7753, 0.66", "103.056, -10.4965, 32.409, 0.66", "103.833, -11.2388, 32.1508, 0.66", "104.006, -11.4027, 32.1073, 0.66", "105.102, -12.4435, 31.9225, 0.66", "105.252, -12.6001, 31.8845, 0.66", "105.794, -13.2201, 31.6997, 0.66", "106.001, -13.4746, 31.6102, 0.66", "106.608, -14.3167, 31.209, 0.66", "106.643, -14.3661, 31.1744, 0.66", "107.92, -16.135, 29.49, 0.66", "108.013, -16.233, 29.3705, 0.66", "108.352, -16.5278, 28.9232, 0.66", "108.457, -16.5908, 28.7861, 0.66", "109.472, -16.9906, 27.4988, 0.66", "109.597, -17.0155, 27.3653, 0.66", "110.592, -17.0315, 26.5094, 0.66", "110.638, -17.0291, 26.4714, 0.66", "111.962, -16.8707, 25.4331, 0.66", "112.279, -16.8096, 25.2175, 0.66", "113.11, -16.5759, 24.7464, 0.66", "113.182, -16.5575, 24.7152, 0.66", "113.731, -16.4273, 24.5828, 0.66", "113.8, -16.4166, 24.5861, 0.66", "114.631, -16.3517, 24.8452, 0.59", "114.706, -16.3499, 24.8731, 0.59", "115.794, -16.3785, 25.3142, 0.59", "116.436, -16.4236, 25.5747, 0.59", "117.636, -16.5579, 26.0665, 0.59", "117.701, -16.5679, 26.0908, 0.59", "119.069, -16.8377, 26.5665, 0.59", "119.136, -16.8503, 26.5839, 0.59", "119.692, -16.9567, 26.6816, 0.59", "119.854, -16.9852, 26.6965, 0.59", "120.812, -17.1433, 26.7346, 0.59", "121.03, -17.1752, 26.7457, 0.59", "122.417, -17.3646, 26.7398, 0.59", "122.556, -17.3814, 26.7344, 0.59", "123.129, -17.4289, 26.6941, 0.59", "123.294, -17.4404, 26.6785, 0.59", "124.692, -17.537, 26.524, 0.59", "126.223, -17.6543, 26.3468, 0.59", "126.386, -17.6682, 26.3256, 0.59", "127.242, -17.749, 26.2022, 0.59", "127.39, -17.7638, 26.1789, 0.59", "129.221, -17.9588, 25.8977, 0.59", "130.391, -18.1007, 25.7282, 0.59", "130.711, -18.1505, 25.6926, 0.59", "131.512, -18.3527, 25.6021, 0.59", "131.651, -18.4079, 25.5884, 0.59", "132.117, -18.6618, 25.5541, 0.59", "132.241, -18.7653, 25.5559, 0.59", "132.642, -19.1773, 25.6133, 0.59", "133.41, -19.9464, 25.7971, 0.59", "133.861, -20.3875, 25.9412, 0.59", "134.013, -20.5179, 25.9924, 0.59", "134.75, -21.0753, 26.2508, 0.59", "134.872, -21.1438, 26.2862, 0.59", "135.983, -21.6332, 26.5855, 0.59", "136.163, -21.6906, 26.6183, 0.59", "137.024, -21.933, 26.7086, 0.59", "137.329, -22.0065, 26.7069, 0.59", "139.079, -22.3959, 26.5567, 0.59", "139.289, -22.4415, 26.5251, 0.59", "141.1, -22.8192, 26.1364, 0.59", "141.462, -22.9065, 26.0343, 0.59", "143.039, -23.325, 25.4954, 0.59", "143.245, -23.3927, 25.4175, 0.59", "145.055, -24.1047, 24.6588, 0.59", "145.339, -24.2249, 24.5459, 0.59", "146.561, -24.809, 24.0961, 0.59", "146.701, -24.8745, 24.0494, 0.59", "147.673, -25.3384, 23.7494, 0.59", "147.808, -25.3939, 23.7139, 0.59", "149.041, -25.8195, 23.454, 0.59", "149.108, -25.838, 23.4446, 0.59", "150.83, -26.1878, 23.2949, 0.59", "150.92, -26.2037, 23.2846, 0.59", "151.925, -26.327, 23.1536, 0.59", "152.441, -26.3911, 23.0861, 0.59", "153.228, -26.4889, 23.0365, 0.59", "153.298, -26.4975, 23.0342, 0.59", "154.916, -26.6929, 23.0228, 0.59", "155.743, -26.8293, 22.9687, 0.59", "155.886, -26.8594, 22.951, 0.59", "157.174, -27.1834, 22.7689, 0.59", "158.499, -27.5725, 22.556, 0.59", "158.676, -27.6308, 22.5161, 0.59", "159.945, -28.1045, 22.1545, 0.59", "160.029, -28.1333, 22.1278, 0.59", "160.804, -28.3762, 21.8634, 0.59", "161.003, -28.4301, 21.8067, 0.59", "162.849, -28.8386, 21.4927, 0.59", "163.008, -28.865, 21.4838, 0.59", "165.349, -29.1262, 21.5971, 0.59", "165.428, -29.1361, 21.6065, 0.59", "167.004, -29.349, 21.9175, 0.59", "167.127, -29.3714, 21.9508, 0.59", "168.261, -29.6458, 22.3674, 0.59", "168.449, -29.7008, 22.434, 0.59", "169.426, -30.0619, 22.7582, 0.59", "169.614, -30.1284, 22.8045, 0.59", "170.729, -30.5193, 22.9799, 0.59", "171.216, -30.6825, 23.0612, 0.59", "171.701, -30.8441, 23.1523, 0.59", "171.978, -30.9395, 23.2127, 0.59", "173.494, -31.4759, 23.6023, 0.59", "173.548, -31.496, 23.6172, 0.59", "174.419, -31.8414, 23.874, 0.59", "174.676, -31.9414, 23.9436, 0.59", "175.875, -32.391, 24.2483, 0.59", "176.275, -32.5041, 24.3401, 0.59", "177.79, -32.8213, 24.6455, 0.59", "178.175, -32.8681, 24.7145, 0.59", "179.927, -32.9302, 25.0013, 0.59", "180.201, -32.9199, 25.0454, 0.59", "181.936, -32.727, 25.3264, 0.59", "182.236, -32.6862, 25.3681, 0.59", "183.831, -32.4391, 25.5674, 0.59", "184.271, -32.3748, 25.6146, 0.59", "185.063, -32.271, 25.6908, 0.59", "185.212, -32.2577, 25.7035, 0.59", "188.592, -32.0952, 25.9557, 0.59", "188.652, -32.0944, 25.9561, 0.59", "190.571, -32.0989, 25.8673, 0.59", "190.669, -32.0955, 25.8578, 0.59", "191.572, -32.0302, 25.7247, 0.59", "191.63, -32.0206, 25.7102, 0.59", "193.83, -31.3225, 24.7554, 0.59", "195.056, -30.686, 23.9759, 0.59", "196.006, -29.9247, 23.0914, 0.59", "196.113, -29.8187, 22.9622, 0.59", "196.979, -28.7271, 21.5968, 0.59", "197.054, -28.6141, 21.4459, 0.59", "197.466, -27.6838, 20.1231, 0.59", "197.513, -27.5762, 19.9024, 0.59", "197.767, -27.1436, 18.6417, 0.59", "197.793, -27.1073, 18.5197, 0.59", "198.087, -26.8425, 17.2968, 0.59", "198.191, -26.7688, 16.8758, 0.59", "198.725, -26.5735, 14.8102, 0.59", "198.796, -26.5439, 14.5099, 0.59", "208.232, -29.848, 14.7344, 0.59", "217.713, -32.9489, 14.0326, 0.59", "227.449, -35.2033, 13.6696, 0.59", "236.892, -38.282, 12.5045, 0.59", "246.101, -41.2168, 9.94149, 0.59", "254.983, -45.679, 8.84494, 0.59", "262.835, -51.7338, 7.54838, 0.59", "270.528, -58.0956, 6.95853, 0.59", "278.018, -64.6656, 6.09749, 0.59", "285.879, -70.7968, 5.31594, 0.59", "292.733, -78.069, 5.6829, 0.59" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.38611, 20.198, 16.109, 1.33", "-1.54078, 21.0906, 16.9838, 1.33", "-1.76224, 21.87, 17.6034, 1.33", "-2.58758, 24.1749, 19.2849, 1.33", "-2.84382, 24.8043, 19.7115, 1.11", "-3.14759, 25.4801, 20.1328, 0.81", "-3.5913, 26.4198, 20.6884, 0.59", "-4.26821, 27.6081, 21.257, 0.59", "-4.74422, 28.3483, 21.5486, 0.59", "-5.06532, 28.8066, 21.6489, 0.81", "-5.55105, 29.4764, 21.7955, 0.81", "-5.59182, 29.5324, 21.8058, 0.81", "-6.11909, 30.3239, 21.8819, 0.81", "-6.15286, 30.3852, 21.8846, 0.81", "-6.50136, 31.1497, 21.8846, 0.81", "-6.71543, 31.696, 21.8846, 0.59", "-6.7416, 31.7716, 21.8846, 0.59", "-7.1769, 33.2135, 21.8846, 0.59", "-7.45636, 34.3595, 21.8846, 0.59", "-7.57273, 34.9319, 21.8753, 0.96", "-7.66033, 35.5552, 21.8569, 1.18", "-7.66656, 35.6248, 21.8543, 1.18", "-7.70488, 36.5032, 21.8161, 1.18", "-7.68427, 37.6812, 21.76, 1.18", "-7.64795, 38.3372, 21.7296, 1.18", "-7.55155, 39.4532, 21.6699, 1.03", "-7.43956, 40.4764, 21.6112, 0.74", "-7.31675, 41.4288, 21.5571, 0.74", "-7.17063, 42.4695, 21.4869, 0.52", "-7.02384, 43.4786, 21.4143, 0.52", "-6.90888, 44.3355, 21.3546, 0.52", "-6.89266, 44.4841, 21.3423, 0.52", "-6.77572, 45.8267, 21.2159, 0.52", "-6.74439, 46.6333, 21.1371, 0.81", "-6.77575, 47.4293, 21.0635, 0.81", "-6.83578, 48.0143, 21.0155, 0.66", "-6.90962, 48.4891, 20.9875, 0.66", "-6.92367, 48.5678, 20.9839, 0.66", "-7.1779, 49.7678, 20.9485, 0.66", "-7.3524, 50.7058, 20.944, 0.66", "-7.36278, 50.775, 20.9419, 0.66", "-7.47048, 51.8685, 20.8894, 0.66", "-7.4973, 52.8863, 20.829, 0.59", "-7.49424, 52.9659, 20.8212, 0.59", "-7.38818, 53.7843, 20.717, 0.59", "-7.20964, 54.7741, 20.5781, 0.59", "-7.07057, 55.4991, 20.4755, 0.74", "-6.92158, 56.2286, 20.3718, 0.74", "-6.75769, 57.0369, 20.2631, 0.66", "-6.50874, 58.3613, 20.0712, 0.66", "-6.38017, 59.1554, 19.9532, 0.88", "-6.26045, 60.012, 19.8359, 0.88", "-6.19411, 60.6671, 19.744, 0.96", "-6.16956, 61.1721, 19.6768, 0.96", "-6.16411, 61.8036, 19.6049, 0.66", "-6.18803, 62.3375, 19.5383, 0.59", "-6.19268, 62.4068, 19.5297, 0.59", "-6.2737, 63.4165, 19.41, 0.59", "-6.31751, 63.9436, 19.3564, 0.74", "-6.32484, 64.093, 19.3461, 0.74", "-6.32239, 64.973, 19.3524, 0.74", "-6.31912, 65.0429, 19.3548, 0.74", "-6.2738, 65.6424, 19.3881, 0.66", "-6.26737, 65.7118, 19.3937, 0.66", "-6.17375, 66.6097, 19.4823, 0.66", "-6.11634, 67.2057, 19.5488, 0.96", "-6.07694, 67.6402, 19.6057, 1.11", "-6.07304, 67.7086, 19.6201, 1.11", "-6.0655, 68.241, 19.7782, 1.11", "-6.07064, 68.3166, 19.8037, 1.11", "-6.12693, 68.6522, 19.9214, 1.11", "-6.14135, 68.7281, 19.9422, 1.11", "-6.28847, 69.5132, 20.1185, 1.11", "-6.33935, 69.7935, 20.1724, 1.11", "-6.4254, 70.2709, 20.2543, 0.59", "-6.5409, 70.9142, 20.3461, 0.59", "-6.70256, 71.7664, 20.4432, 0.52", "-6.87948, 72.6534, 20.5122, 0.52", "-6.96548, 73.0995, 20.5241, 0.88", "-6.9789, 73.1682, 20.526, 0.88", "-7.0708, 73.6697, 20.5392, 0.88", "-7.12168, 74.1012, 20.5491, 0.96", "-7.14177, 74.427, 20.5554, 0.96", "-7.11529, 75.3766, 20.568, 0.96", "-7.06126, 76.0512, 20.5734, 0.52", "-6.93405, 77.0657, 20.5792, 0.52", "-6.75045, 78.2078, 20.5829, 0.52", "-6.70789, 78.4236, 20.5829, 0.52", "-6.4853, 79.4835, 20.5829, 0.52", "-6.46897, 79.5618, 20.5829, 0.52", "-6.33468, 80.5142, 20.5829, 0.52", "-6.32277, 80.748, 20.5829, 0.96", "-6.32947, 80.8176, 20.581, 0.96", "-6.46137, 81.6199, 20.5434, 0.96", "-6.53141, 81.8763, 20.5272, 0.96", "-6.87887, 82.9963, 20.4459, 0.96", "-6.90513, 83.0713, 20.4369, 0.96", "-7.17724, 83.8518, 20.321, 0.66", "-7.37424, 84.4628, 20.2194, 0.66", "-7.58279, 85.1499, 20.0974, 0.59", "-7.60016, 85.2168, 20.0862, 0.59", "-7.80538, 86.1582, 19.9861, 0.59", "-7.82969, 86.3061, 19.9808, 0.59", "-7.91086, 87.1047, 20.0038, 0.59", "-7.93843, 87.5985, 20.0355, 0.74", "-7.94101, 88.3253, 20.1038, 0.74", "-7.92848, 89.1748, 20.2071, 0.52", "-7.91935, 90.0619, 20.3428, 0.52", "-7.92204, 90.4972, 20.4377, 0.74", "-7.92358, 90.5746, 20.4577, 0.74", "-7.93417, 91.3492, 20.6575, 0.74", "-7.93743, 91.4945, 20.6947, 0.74", "-7.94737, 92.6893, 20.9699, 0.74", "-7.96691, 93.8894, 21.2415, 0.59", "-7.98283, 94.9531, 21.4788, 0.59", "-7.98034, 96.0388, 21.7047, 0.59", "-7.97742, 96.1075, 21.7174, 0.59", "-7.90509, 97.0496, 21.8536, 0.59", "-7.81544, 97.8266, 21.9261, 0.96", "-7.73505, 98.4733, 21.9451, 0.96", "-7.62561, 99.3051, 21.9684, 0.96", "-7.50544, 100.273, 21.9907, 0.96", "-7.44402, 100.872, 21.9814, 0.66", "-7.40914, 101.309, 21.957, 0.66", "-7.37178, 101.816, 21.9073, 0.81", "-7.36592, 101.964, 21.8861, 0.81", "-7.37872, 102.754, 21.7613, 0.81", "-7.41935, 103.498, 21.6493, 0.81", "-7.42713, 103.633, 21.6163, 0.81", "-7.49112, 104.542, 21.3477, 0.81", "-7.49697, 104.618, 21.323, 0.81", "-7.58127, 105.375, 21.0784, 0.81", "-7.70137, 106.281, 20.8177, 1.03", "-7.89501, 107.583, 20.5509, 0.29", "-8.05558, 108.68, 20.3779, 0.29", "-8.06453, 108.749, 20.3701, 0.29", "-8.18477, 109.822, 20.2909, 0.29", "-8.31866, 111.208, 20.3131, 0.29", "-8.43414, 112.23, 20.4279, 0.74", "-8.51421, 112.935, 20.57, 1.03", "-8.60613, 113.815, 20.769, 1.03", "-8.61374, 113.893, 20.7875, 1.03", "-8.69961, 114.953, 21.0567, 0.22", "-8.8355, 116.158, 21.354, 0.22", "-8.87696, 116.46, 21.4123, 0.74", "-8.98099, 117.098, 21.5104, 0.96", "-8.99496, 117.176, 21.5171, 0.96", "-9.10151, 117.817, 21.5319, 0.96", "-9.1871, 118.439, 21.4832, 0.66", "-9.26756, 119.16, 21.4038, 0.59", "-9.40102, 120.023, 21.2926, 0.59", "-9.55539, 120.789, 21.1848, 0.29", "-9.57089, 120.856, 21.1748, 0.29", "-9.74137, 121.521, 21.0729, 0.81", "-9.95644, 122.317, 20.9203, 0.96", "-10.0871, 122.758, 20.8216, 0.37", "-10.2809, 123.434, 20.6634, 0.37", "-10.2966, 123.501, 20.6491, 0.37", "-10.4325, 124.144, 20.5558, 0.37", "-10.513, 124.706, 20.5313, 0.88", "-10.5252, 124.855, 20.5325, 0.88", "-10.5566, 125.587, 20.5649, 0.88", "-10.5729, 125.887, 20.5875, 0.88", "-10.6373, 126.673, 20.6464, 0.22", "-10.7651, 127.834, 20.7494, 0.22", "-10.8429, 128.434, 20.8098, 0.66", "-10.864, 128.572, 20.8195, 0.66", "-10.9685, 129.149, 20.8387, 0.66", "-11.048, 129.581, 20.8306, 0.52", "-11.0603, 129.649, 20.8243, 0.52", "-11.1517, 130.068, 20.7431, 0.52", "-11.2678, 130.646, 20.6024, 0.22", "-11.2796, 130.713, 20.5856, 0.22", "-11.3712, 131.348, 20.4333, 0.88", "-11.4397, 131.863, 20.318, 0.88", "-11.5868, 132.918, 20.0836, 0.37", "-11.6781, 133.546, 19.9467, 0.37", "-11.7677, 134.19, 19.8333, 0.37", "-11.8592, 134.838, 19.7473, 0.37", "-11.8688, 134.908, 19.7425, 0.37", "-11.9271, 135.339, 19.7528, 0.66", "-12.0021, 135.837, 19.8326, 0.66", "-12.109, 136.363, 19.9373, 0.22", "-12.1266, 136.429, 19.9511, 0.22", "-12.2428, 136.847, 20.0255, 0.22", "-12.3401, 137.254, 20.0764, 0.22", "-12.375, 137.42, 20.0905, 0.22", "-12.3881, 137.489, 20.0889, 0.22", "-12.5189, 138.303, 19.9971, 0.22", "-12.5843, 138.883, 19.9152, 0.81", "-12.6494, 139.601, 19.7993, 0.81", "-12.6537, 139.67, 19.7874, 0.81", "-12.6885, 140.331, 19.6726, 0.22", "-12.703, 140.616, 19.6191, 0.22", "-12.7869, 141.626, 19.4372, 0.22", "-12.8275, 141.887, 19.3989, 0.59", "-12.8718, 142.101, 19.3792, 0.59", "-12.9842, 142.534, 19.3631, 0.59", "-13.019, 142.649, 19.3652, 0.59", "-13.2353, 143.424, 19.3795, 0.59", "-13.3612, 143.9, 19.3886, 1.11", "-13.5202, 144.612, 19.4011, 1.11", "-13.6652, 145.293, 19.4118, 0.22", "-13.6787, 145.362, 19.4128, 0.22", "-13.9743, 146.875, 19.4317, 0.22", "-13.9866, 146.944, 19.4317, 0.22", "-14.095, 147.595, 19.4317, 0.74", "-14.2099, 148.334, 19.4317, 0.74", "-14.2211, 148.413, 19.4317, 0.74", "-14.3379, 149.161, 19.4317, 0.74", "-14.3897, 149.446, 19.4317, 0.74", "-14.4754, 149.971, 19.4317, 0.44", "-14.5493, 150.48, 19.4317, 0.44", "-14.5775, 150.707, 19.4317, 0.52", "-14.6468, 151.137, 19.4317, 0.52", "-14.7455, 151.571, 19.4317, 0.52", "-14.8515, 151.926, 19.4317, 0.22", "-15.0817, 152.562, 19.4317, 0.22", "-15.1582, 152.753, 19.4317, 0.22", "-15.759, 154.154, 19.4317, 0.22", "-15.9946, 154.667, 19.4454, 0.66", "-16.1387, 154.965, 19.46, 0.88", "-16.3315, 155.376, 19.4888, 0.88", "-16.4518, 155.688, 19.5152, 0.59", "-16.6217, 156.247, 19.5681, 0.15", "-16.7227, 156.714, 19.6497, 0.29", "-16.7326, 156.782, 19.6642, 0.29", "-16.8231, 157.568, 19.8538, 0.29", "-16.917, 158.699, 20.1412, 0.29", "-16.9208, 158.766, 20.1588, 0.29", "-16.9489, 159.658, 20.3817, 0.29", "-16.9615, 160.087, 20.4788, 0.96", "-16.9651, 160.155, 20.4945, 0.96", "-17.0213, 160.658, 20.6152, 1.18", "-17.0351, 160.725, 20.6286, 1.18", "-17.1482, 161.147, 20.6787, 1.18", "-17.1739, 161.212, 20.6787, 1.18", "-17.3374, 161.537, 20.6787, 1.18", "-17.5296, 161.856, 20.6787, 0.66", "-17.8393, 162.279, 20.6787, 0.37", "-17.8823, 162.334, 20.683, 0.37", "-18.2481, 162.833, 20.7467, 0.37", "-18.2922, 162.899, 20.7571, 0.37", "-18.637, 163.524, 20.9294, 0.37", "-18.7255, 163.713, 20.9986, 0.74", "-19.0104, 164.428, 21.2986, 0.74", "-19.2251, 165.014, 21.5351, 0.52", "-19.2487, 165.085, 21.5619, 0.52", "-19.5674, 166.085, 21.8705, 0.52", "-19.5836, 166.141, 21.8844, 0.52", "-19.7087, 166.611, 21.9534, 0.52", "-19.8524, 167.143, 21.9734, 0.37", "-20.0191, 167.739, 22.0158, 0.37", "-20.1619, 168.262, 22.0617, 0.37", "-20.2006, 168.395, 22.0809, 0.37", "-20.4538, 169.145, 22.2552, 0.37", "-20.4802, 169.207, 22.2747, 0.37", "-20.8805, 170.015, 22.4632, 0.66", "-21.3468, 170.759, 22.5395, 0.66", "-21.8211, 171.41, 22.5255, 0.29", "-22.298, 172.022, 22.4487, 0.29", "-22.7205, 172.534, 22.3324, 0.29", "-23.8165, 173.877, 21.9223, 0.29", "-24.3118, 174.502, 21.677, 0.29", "-24.6155, 174.919, 21.4717, 0.29", "-24.8365, 175.259, 21.3014, 0.59", "-25.0195, 175.576, 21.1651, 0.88", "-25.2859, 176.077, 20.9865, 1.25", "-25.5748, 176.613, 20.8676, 1.25", "-26.1984, 177.677, 20.6628, 0.59", "-26.9993, 178.865, 20.4054, 0.37", "-27.3902, 179.381, 20.2899, 0.37", "-27.4336, 179.433, 20.2741, 0.37", "-27.9241, 179.971, 20.0321, 0.81", "-28.6628, 180.692, 19.5922, 0.81", "-29.3301, 181.273, 19.1967, 0.52", "-29.8364, 181.685, 18.874, 0.81", "-30.5899, 182.287, 18.3864, 0.81", "-31.3448, 182.891, 17.91, 0.81", "-31.9053, 183.341, 17.5615, 0.37", "-33.0801, 184.266, 16.9567, 0.37", "-33.6859, 184.713, 16.7514, 0.37", "-33.7714, 184.773, 16.7327, 0.81", "-34.3384, 185.165, 16.6811, 1.11", "-34.6965, 185.411, 16.6776, 0.74", "-35.5465, 185.985, 16.6919, 0.52", "-36.3972, 186.546, 16.7173, 0.59", "-36.9205, 186.897, 16.7376, 0.59", "-36.9857, 186.943, 16.7405, 0.59", "-37.8536, 187.602, 16.7857, 0.59", "-37.9236, 187.661, 16.7898, 0.59", "-38.4969, 188.223, 16.8308, 0.44", "-38.7498, 188.484, 16.8038, 0.44", "-39.018, 188.741, 16.7315, 0.59", "-39.1291, 188.843, 16.6899, 0.59", "-39.5199, 189.175, 16.5169, 0.59", "-39.8835, 189.468, 16.2725, 0.59", "-40.922, 190.243, 15.4481, 0.29", "-41.4496, 190.604, 14.9645, 0.29", "-41.7526, 190.803, 14.6772, 0.52", "-42.2589, 191.12, 14.199, 0.52", "-43.5516, 191.895, 12.9747, 0.81", "-43.9198, 192.124, 12.6273, 0.81", "-44.8969, 192.757, 11.7483, 0.15", "-45.3767, 193.072, 11.3003, 0.44", "-45.6727, 193.27, 11.0298, 0.88", "-45.7271, 193.309, 10.9855, 0.88", "-46.0118, 193.539, 10.8619, 1.11", "-46.0667, 193.594, 10.8438, 1.11", "-46.2739, 193.893, 10.8438, 1.11", "-46.3208, 193.989, 10.8438, 1.11", "-46.4191, 194.236, 10.8438, 1.11", "-46.6096, 194.788, 10.8438, 0.37", "-46.6311, 194.855, 10.8438, 0.37", "-46.8589, 195.639, 10.788, 0.37", "-47.0102, 196.209, 10.719, 0.59", "-47.0434, 196.354, 10.6966, 0.59", "-47.2094, 197.069, 10.5663, 0.59", "-47.2316, 197.144, 10.5515, 0.59", "-47.523, 197.987, 10.4008, 0.22", "-47.5493, 198.051, 10.3903, 0.22", "-47.9296, 198.837, 10.2862, 0.22", "-48.1448, 199.21, 10.2713, 0.22", "-48.6597, 199.987, 10.3181, 0.22", "-48.9162, 200.369, 10.3705, 0.22", "-49.1546, 200.711, 10.4475, 0.22", "-49.4346, 201.104, 10.5432, 0.44", "-49.9028, 201.735, 10.7203, 0.81", "-50.4023, 202.435, 10.9164, 0.22", "-50.628, 202.752, 11.0045, 0.74", "-50.7084, 202.864, 11.0306, 0.74", "-50.9217, 203.162, 11.0918, 0.74", "-50.9554, 203.211, 11.0991, 0.74", "-51.3627, 203.945, 11.1475, 0.74", "-51.6175, 204.461, 11.166, 0.74", "-51.8125, 204.912, 11.1701, 0.74", "-51.8415, 204.987, 11.1674, 0.74", "-52.0106, 205.472, 11.1346, 0.37", "-52.3327, 206.435, 11.0452, 0.37", "-52.5614, 207.115, 10.9679, 0.22", "-52.9489, 208.2, 10.8295, 0.22", "-53.1069, 208.59, 10.7821, 0.59", "-53.1478, 208.679, 10.7717, 0.59", "-53.3999, 209.191, 10.6986, 0.59", "-53.7423, 209.89, 10.5883, 0.59", "-53.9689, 210.422, 10.5032, 0.22", "-54.3725, 211.349, 10.3544, 0.22", "-54.4007, 211.413, 10.3459, 0.22", "-54.6669, 212.008, 10.2988, 0.59", "-54.9979, 212.76, 10.2695, 0.59", "-55.2382, 213.308, 10.2706, 0.22", "-55.7648, 214.439, 10.3202, 0.22", "-56.1987, 215.43, 10.3652, 0.22", "-56.5289, 216.207, 10.4052, 0.81", "-56.5586, 216.282, 10.4102, 0.81", "-56.7359, 216.782, 10.4309, 1.25", "-56.8663, 217.322, 10.4347, 1.25", "-56.9247, 218.204, 10.3836, 0.22", "-56.9311, 218.353, 10.3668, 0.22", "-56.9824, 219.222, 10.2351, 0.22", "-57.0157, 219.544, 10.1956, 0.59", "-57.0249, 219.613, 10.1893, 0.59", "-57.1881, 220.632, 10.1404, 0.59", "-57.3366, 221.303, 10.1404, 0.22", "-57.351, 221.372, 10.1385, 0.22", "-57.4808, 222.016, 10.1067, 0.22", "-57.5264, 222.241, 10.0921, 0.22", "-57.6626, 222.889, 10.0421, 0.22", "-57.7678, 223.337, 10.0008, 0.44", "-57.9525, 224.127, 9.99761, 0.22", "-57.9719, 224.204, 10.0033, 0.22", "-58.2272, 225.138, 10.1536, 0.22", "-58.2575, 225.237, 10.1785, 0.22", "-58.3893, 225.606, 10.2997, 0.59", "-58.7837, 226.631, 10.6931, 0.22", "-58.81, 226.691, 10.7184, 0.22", "-59.3815, 227.912, 11.2191, 0.22", "-59.543, 228.242, 11.3454, 0.59", "-59.7681, 228.689, 11.4968, 0.88", "-59.8568, 228.86, 11.5449, 0.88", "-60.6279, 230.258, 11.8287, 0.22", "-60.8194, 230.589, 11.8954, 0.81", "-61.1184, 231.085, 11.9886, 0.81", "-61.1589, 231.154, 11.9994, 0.81", "-61.2891, 231.383, 12.0348, 0.44", "-61.3227, 231.444, 12.0426, 0.44", "-61.5239, 231.825, 12.0426, 0.44", "-61.8364, 232.52, 12.0426, 0.59", "-63.0833, 242.41, 12.8446, 0.59", "-65.4294, 252.076, 11.8182, 0.59", "-69.2723, 260.969, 9.3387, 0.59", "-73.9571, 269.8, 9.08756, 0.59", "-79.1259, 278.355, 8.76288, 0.59", "-84.6612, 286.683, 8.72864, 0.59", "-88.6161, 295.867, 8.80305, 0.59" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-1.38611, 20.198, 16.109, 2.06", "-1.594, 20.5498, 17.7961, 2.06", "-1.69888, 20.6829, 18.4081, 2.06", "-2.34341, 21.3849, 21.5459, 1.77", "-2.56784, 21.5547, 22.3054, 1.77", "-3.67885, 22.2631, 25.4748, 1.77", "-3.81474, 22.337, 25.8057, 1.77", "-4.76789, 22.7357, 27.551, 1.77", "-4.99425, 22.8063, 27.8521, 1.77", "-6.81036, 23.1975, 29.4756, 1.77", "-6.8686, 23.2054, 29.5136, 1.77", "-7.74825, 23.2513, 29.8953, 1.77", "-8.38, 23.2692, 30.1178, 1.77", "-9.61771, 23.3123, 30.4095, 1.77", "-9.98831, 23.3341, 30.4835, 1.77", "-11.5446, 23.4751, 30.7313, 1.77", "-11.8297, 23.5087, 30.7723, 1.69", "-13.1383, 23.7062, 30.9378, 1.69", "-15.446, 24.0945, 31.1872, 1.69", "-15.9992, 24.2001, 31.2268, 1.69", "-16.5423, 24.3142, 31.2509, 1.69", "-17.0893, 24.4535, 31.264, 1.69", "-17.5633, 24.5847, 31.2747, 1.69" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "7.74551, -45.0084, 5.79807, 1.11", "7.87463, -45.1685, 6.52874, 1.11", "8.12868, -45.4835, 7.96632, 1.11", "8.59577, -46.0628, 10.6094, 1.4", "8.60938, -46.0796, 10.6864, 1.4", "9.6131, -47.3243, 16.3661, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "7.74551, -45.0084, 5.79807, 1.03", "7.09023, -46.1896, 6.17421, 1.03", "6.54166, -47.0793, 6.51344, 0.74", "5.71801, -48.3545, 6.99814, 0.74", "5.22915, -49.1187, 7.26792, 1.03", "4.63843, -50.1014, 7.58143, 1.03", "3.62864, -51.8869, 8.09209, 0.74", "3.5906, -51.9546, 8.11151, 0.74", "2.85714, -53.3123, 8.42508, 0.59", "2.32819, -54.3324, 8.58778, 0.81", "1.84216, -55.3123, 8.70425, 1.18", "1.37127, -56.2591, 8.78395, 1.18", "0.914074, -57.0995, 8.81525, 0.88", "0.0679124, -58.3755, 8.9108, 0.81", "-0.571695, -59.0573, 8.99463, 1.18", "-1.29993, -59.6331, 9.14486, 1.18", "-2.26478, -60.2306, 9.38759, 0.88", "-3.36868, -60.811, 9.69923, 0.74", "-4.55045, -61.3618, 10.1156, 0.74", "-6.45652, -62.169, 10.8931, 0.74", "-7.78742, -62.8108, 11.4841, 0.88", "-7.85201, -62.8472, 11.5141, 0.88", "-8.90889, -63.5494, 12.0202, 0.74", "-10.015, -64.487, 12.5762, 0.74", "-10.4961, -65.0134, 12.8141, 1.33", "-11.557, -66.587, 13.357, 1.03", "-11.9828, -67.355, 13.5367, 1.25", "-12.0112, -67.4175, 13.5501, 1.25", "-12.2415, -68.0985, 13.6774, 1.25", "-12.2583, -68.1657, 13.6873, 1.25", "-12.6358, -70.1351, 14.004, 1.11", "-12.8553, -71.4912, 14.2158, 1.11", "-12.9869, -72.3514, 14.3246, 1.18", "-13.0817, -72.9617, 14.3819, 1.47", "-13.0907, -73.0209, 14.3863, 1.47", "-13.2356, -74.2232, 14.447, 1.47", "-13.3821, -76.3947, 14.6141, 0.96", "-13.4181, -77.1634, 14.7036, 0.96", "-13.4162, -78.534, 14.9797, 0.96", "-13.3708, -79.4158, 15.2318, 0.52", "-13.1995, -80.5761, 15.6643, 0.52", "-12.7384, -82.0764, 16.4247, 0.74", "-12.7105, -82.1298, 16.4603, 0.74", "-11.7997, -83.3856, 17.3614, 0.74", "-11.7567, -83.4309, 17.3929, 0.74", "-11.1325, -84.0106, 17.6792, 0.74", "-10.7472, -84.351, 17.7771, 1.11", "-10.1062, -84.9507, 17.8138, 1.11", "-9.12601, -85.9323, 17.7836, 1.11", "-8.33905, -86.7643, 17.6709, 0.81", "-7.52283, -87.6911, 17.5463, 0.52", "-7.44084, -87.8031, 17.5281, 0.52", "-6.97278, -88.5894, 17.371, 0.52", "-6.62528, -89.3143, 17.2175, 1.11", "-6.59841, -89.3877, 17.2005, 1.11", "-6.35362, -90.2869, 16.9954, 1.11", "-5.90197, -92.3614, 16.5646, 1.11", "-5.60771, -94.0005, 16.2261, 0.74", "-5.464, -95.0078, 15.9948, 0.74", "-5.36651, -95.9992, 15.7699, 0.44", "-5.28789, -97.216, 15.4885, 0.44", "-5.27598, -97.8215, 15.3538, 0.88", "-5.29765, -98.6102, 15.1997, 0.88", "-5.36614, -99.9213, 14.9819, 1.11", "-5.46694, -101.808, 14.7708, 1.11", "-5.55591, -103.639, 14.6545, 0.74", "-5.62647, -105.034, 14.6056, 0.74", "-5.71836, -106.492, 14.6018, 0.74", "-5.80835, -107.887, 14.6768, 0.59", "-5.93568, -109.565, 14.8785, 0.59", "-6.00112, -110.513, 15.022, 1.03", "-6.00546, -110.582, 15.0347, 1.03", "-6.02749, -111.522, 15.1668, 1.03", "-5.96553, -112.857, 15.2164, 0.37", "-5.77413, -114.329, 15.0062, 0.37", "-5.62182, -115.196, 14.7686, 0.88", "-5.60784, -115.271, 14.7446, 0.88", "-5.35742, -116.654, 14.2768, 0.88", "-5.12615, -117.991, 13.8013, 0.88", "-4.77618, -120.088, 13.0774, 0.52", "-4.6838, -120.654, 12.9046, 0.81", "-4.52761, -121.886, 12.6218, 0.81", "-4.42863, -122.899, 12.4615, 1.03", "-4.36733, -123.918, 12.4055, 1.03", "-4.34166, -124.791, 12.4374, 1.03", "-4.33904, -124.861, 12.4454, 1.03", "-4.1982, -126.083, 12.6169, 0.81", "-4.12933, -126.398, 12.6646, 0.81", "-3.99395, -126.891, 12.7358, 0.66", "-3.97488, -126.958, 12.7438, 0.66", "-3.69698, -127.99, 12.8338, 0.66", "-3.42415, -129.021, 12.9187, 0.44", "-3.06088, -130.452, 13.0279, 0.44", "-2.93851, -130.985, 13.0489, 0.96", "-2.72461, -132.067, 13.0573, 0.96", "-2.56278, -132.924, 13.0405, 0.96", "-2.41662, -133.708, 12.9978, 1.11", "-2.25112, -134.643, 12.9172, 1.11", "-2.0617, -135.751, 12.8148, 0.74", "-1.84652, -136.897, 12.7121, 0.74", "-1.603, -138.119, 12.6147, 0.74", "-1.38066, -139.354, 12.5352, 0.74", "-1.27481, -140.009, 12.4949, 1.11", "-1.11306, -141.098, 12.4365, 1.11", "-0.952505, -142.429, 12.4205, 1.11", "-0.810826, -143.891, 12.435, 1.11", "-0.691962, -145.442, 12.4821, 1.11", "-0.622554, -146.537, 12.5365, 1.11", "-0.584865, -147.195, 12.5755, 1.11", "-0.536419, -148.417, 12.6611, 0.59", "-0.496755, -149.524, 12.7455, 0.59", "-0.446211, -150.34, 12.7373, 0.88", "-0.344297, -151.214, 12.7082, 1.03", "-0.148575, -152.439, 12.6458, 1.03", "-0.12222, -152.576, 12.6342, 1.03", "0.220633, -154.224, 12.4969, 1.03", "0.593233, -156.416, 12.4006, 1.03", "0.78988, -158.08, 12.4617, 0.74", "0.890676, -159.505, 12.6294, 0.74", "0.89244, -159.574, 12.6423, 0.74", "0.865375, -160.754, 12.9284, 1.4", "0.755526, -161.947, 13.2987, 1.4", "0.604647, -163.101, 13.6968, 0.29", "0.385912, -164.501, 14.0495, 0.29", "0.326193, -164.928, 14.1335, 0.74", "0.256866, -165.649, 14.2288, 0.74", "0.237559, -166.457, 14.272, 0.88", "0.274817, -167.41, 14.2888, 0.88", "0.382612, -168.494, 14.2449, 0.52", "0.508833, -169.319, 14.2003, 0.52", "0.626395, -169.819, 14.1697, 0.81", "0.980162, -170.906, 14.1038, 0.81", "1.00876, -170.98, 14.0976, 0.81", "1.52731, -172.239, 13.9772, 0.81", "1.60815, -172.426, 13.9583, 0.81", "2.14109, -173.724, 13.8304, 0.81", "2.85063, -175.667, 13.6384, 0.81", "3.13542, -176.646, 13.5447, 0.81", "3.28484, -177.429, 13.4816, 0.81", "3.31376, -177.961, 13.4846, 1.03", "3.27891, -178.62, 13.5348, 1.03", "3.14096, -179.36, 13.6539, 1.03", "2.92839, -180.1, 13.8436, 1.03", "2.51192, -181.43, 14.2776, 1.03", "2.06275, -183.117, 14.8217, 1.03", "2.04646, -183.183, 14.8374, 1.03", "1.83931, -184.168, 15.0054, 1.03", "1.831, -184.227, 15.0106, 1.03", "1.77743, -185.363, 14.9712, 1.03", "1.89313, -187.33, 14.6696, 1.03", "2.08864, -188.901, 14.3079, 1.4", "2.10295, -188.978, 14.2906, 1.4", "2.3765, -190.038, 14.061, 1.4", "2.70869, -191.19, 13.8257, 0.74", "3.10015, -192.421, 13.6045, 0.74", "3.33135, -193.111, 13.5167, 0.74", "3.72095, -194.375, 13.422, 0.74", "3.98054, -195.352, 13.3433, 1.11", "4.09101, -195.88, 13.2998, 1.11", "4.30109, -197.028, 13.2159, 0.74", "4.32701, -197.174, 13.2006, 0.74", "4.58473, -198.681, 12.9727, 0.74", "4.59434, -198.748, 12.9573, 0.74", "4.69884, -199.476, 12.7552, 1.03", "4.86608, -200.664, 12.4128, 1.03", "4.97549, -201.548, 12.2106, 1.03", "5.0738, -202.542, 12.0462, 0.66", "5.16897, -204.036, 12.005, 0.59", "5.16873, -204.116, 12.0117, 0.59", "5.0159, -205.774, 12.3208, 0.59", "4.7508, -207.26, 12.7277, 0.96", "4.65674, -207.676, 12.8583, 1.11", "4.30603, -209.175, 13.3614, 0.52", "4.0402, -210.273, 13.6988, 0.52", "3.85811, -211.028, 13.861, 0.88", "3.58583, -212.047, 13.9685, 0.88", "3.30692, -213.056, 13.9581, 0.74", "3.10375, -213.841, 13.9011, 0.88", "2.93203, -214.594, 13.7891, 1.18", "2.79866, -215.537, 13.6583, 1.18", "2.72938, -216.407, 13.5554, 1.25", "2.72709, -216.506, 13.5469, 1.25", "2.74162, -217.564, 13.4928, 1.11", "2.77062, -218.433, 13.469, 0.44", "2.9039, -220.097, 13.4649, 0.44", "2.95796, -220.543, 13.4643, 1.11", "3.07265, -221.377, 13.4647, 1.11", "3.07936, -221.447, 13.4647, 1.11", "3.14546, -222.476, 13.4808, 0.88", "3.1786, -223.937, 13.5136, 0.88", "3.17645, -224.017, 13.5188, 0.88", "3.10634, -225.19, 13.6246, 0.59", "2.97455, -226.61, 13.8178, 0.81", "2.83371, -227.663, 13.9938, 0.66", "2.60682, -228.896, 14.2297, 0.66", "2.33543, -230.056, 14.4746, 1.18", "2.07925, -230.994, 14.6763, 1.33", "1.69127, -232.22, 14.9127, 1.33", "1.36242, -233.135, 15.0653, 1.18", "0.844816, -234.388, 15.1809, 1.18", "0.819941, -234.454, 15.1808, 1.18", "0.521512, -235.397, 15.0446, 1.03", "0.283529, -236.38, 14.914, 0.74", "0.271251, -236.438, 14.908, 0.74", "0.150463, -237.175, 14.8748, 0.52", "-0.0762753, -238.796, 14.8912, 0.52", "-0.177989, -239.534, 14.9277, 0.88", "-0.426555, -241.499, 15.1078, 0.52", "-0.667904, -243.081, 15.3014, 0.52", "-0.786445, -243.737, 15.3607, 1.18", "-0.973869, -244.667, 15.4252, 1.18", "-1.23352, -245.844, 15.5024, 0.74", "-1.24662, -245.912, 15.5059, 0.74", "-1.49036, -247.563, 15.5183, 0.74", "-1.58086, -248.547, 15.5505, 1.03", "-1.64348, -249.347, 15.595, 1.03", "-1.80074, -251.803, 15.7619, 1.03", "-1.83842, -252.82, 15.8319, 1.03", "-1.84824, -253.482, 15.8767, 0.66", "-1.84162, -254.574, 15.9718, 0.66", "-1.83354, -255.613, 16.0812, 0.66", "-1.83645, -255.683, 16.0869, 0.66", "-1.92831, -256.51, 16.1134, 1.33", "-2.08896, -257.367, 16.1445, 1.33", "-2.30293, -258.211, 16.1758, 0.52", "-2.32651, -258.287, 16.1786, 0.52", "-2.73579, -259.688, 16.2275, 0.52", "-3.03137, -260.827, 16.4081, 0.66", "-3.31899, -262.017, 16.7036, 0.74", "-3.47115, -262.692, 16.9047, 0.96", "-3.50141, -262.842, 16.9541, 0.96", "-3.79158, -264.466, 17.6106, 0.66", "-4.12955, -266.894, 18.8802, 0.66", "-4.13763, -266.953, 18.9162, 0.66", "-4.26593, -267.756, 19.4366, 0.66", "-4.32421, -268.058, 19.6304, 0.88", "-4.53287, -269.001, 20.1736, 1.11", "-4.81606, -270.095, 20.7201, 1.11", "-4.98769, -270.843, 20.9573, 0.29", "-5.11852, -271.583, 21.1659, 0.29", "-5.16057, -272.222, 21.3167, 0.29", "-5.12387, -273.187, 21.4611, 0.29", "-5.08026, -273.503, 21.4677, 0.81", "-4.97136, -273.951, 21.4465, 1.03", "-4.91724, -274.179, 21.4389, 1.03", "-4.74476, -275.094, 21.39, 1.03", "-4.73228, -275.534, 21.3599, 1.03", "-4.73947, -275.613, 21.3545, 1.03", "-4.82364, -276.25, 21.2644, 0.22", "-5.0207, -277.537, 21.0483, 0.22", "-5.11695, -278.175, 20.9102, 0.74", "-5.25179, -278.947, 20.7354, 1.03", "-5.41224, -280.104, 20.5168, 1.03", "-5.48771, -280.999, 20.3735, 0.88", "-5.54136, -282.676, 20.1329, 0.88", "-5.53128, -283.684, 20.0503, 0.59", "-5.48515, -285.333, 20.0256, 0.59", "-5.46844, -286.575, 20.1283, 0.52", "-5.49926, -287.552, 20.3064, 0.52", "-5.51123, -287.696, 20.3461, 0.52", "-5.69593, -288.838, 20.7267, 1.4", "-5.93356, -289.829, 21.0807, 1.69", "-6.35021, -291.263, 21.5443, 0.74", "-6.63731, -292.182, 21.779, 0.66", "-6.9878, -293.379, 22.0798, 0.66", "-7.24343, -294.516, 22.3837, 0.52", "-7.36605, -295.243, 22.5779, 0.52", "-7.47094, -296.422, 22.9774, 0.52", "-7.43068, -297.559, 23.4284, 0.52", "-7.31234, -298.615, 23.9472, 0.88", "-7.09859, -299.988, 24.8582, 0.88", "-7.08254, -300.079, 24.9348, 0.88", "-6.98533, -300.986, 25.9061, 0.66", "-6.98768, -301.02, 25.9554, 0.66", "-7.2738, -301.497, 26.8549, 0.66", "-7.98724, -301.998, 27.8856, 0.96", "-8.0395, -302.027, 27.9387, 0.96", "-8.52927, -302.33, 28.3916, 0.96", "-8.57999, -302.358, 28.4309, 0.96", "-9.34823, -302.843, 29.0419, 0.44", "-10.0855, -303.47, 29.6891, 0.44", "-10.595, -304.069, 30.0847, 0.44", "-10.7179, -304.243, 30.1924, 1.11" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "2.76648, -63.1683, -7.95698, 0.44", "3.31163, -63.9525, -8.37343, 0.44", "4.175, -65.192, -9.03856, 0.44", "4.97228, -66.3419, -9.65517, 0.59", "5.01324, -66.4041, -9.68433, 0.59", "5.66158, -67.4814, -10.114, 0.88", "6.06469, -68.1786, -10.3683, 0.88", "6.40452, -68.8204, -10.5809, 0.59", "6.43854, -68.8797, -10.5957, 0.59", "7.31298, -70.282, -10.8717, 0.59", "7.89416, -71.2022, -11.033, 0.52", "7.9366, -71.2685, -11.0472, 0.52", "8.42393, -72.0274, -11.2912, 0.52", "9.4252, -73.4743, -11.8971, 0.52", "10.2228, -74.5625, -12.4378, 0.52", "10.9655, -75.4992, -13.0518, 0.52", "11.7607, -76.4593, -13.8226, 0.81", "12.5219, -77.3779, -14.6872, 0.81", "12.9944, -77.9645, -15.3835, 0.96", "13.0227, -78.0011, -15.4361, 0.96", "13.7059, -78.905, -16.8428, 0.96", "14.2144, -79.5783, -17.9798, 0.66", "14.5504, -80.0535, -18.7494, 0.29", "15.0791, -80.783, -19.915, 0.66", "15.1054, -80.8165, -19.9705, 0.66", "15.5167, -81.2583, -20.6109, 0.66", "15.5559, -81.2969, -20.6542, 0.66", "15.8515, -81.5661, -20.8913, 0.66", "16.6824, -82.379, -21.5425, 0.66", "17.4894, -83.1544, -22.1214, 0.52", "18.2391, -83.874, -22.6986, 0.52", "18.7631, -84.3767, -23.1026, 0.52", "18.8076, -84.4209, -23.1338, 0.52", "19.919, -85.5895, -23.8831, 0.37", "20.5669, -86.3109, -24.3013, 0.37", "21.1191, -86.8936, -24.6029, 0.66", "21.8014, -87.5759, -24.9894, 0.66", "22.8635, -88.5825, -25.5584, 0.66", "22.9149, -88.6364, -25.5876, 0.66", "23.5717, -89.427, -25.9593, 0.96", "23.6087, -89.4805, -25.9852, 0.96", "24.2971, -90.5513, -26.4983, 0.59", "24.3317, -90.6052, -26.5265, 0.59", "25.1645, -91.8999, -27.2279, 0.59", "25.9903, -93.0395, -27.8376, 0.59", "26.0378, -93.0972, -27.8662, 0.59", "26.5677, -93.6881, -28.1391, 0.81", "27.3766, -94.5034, -28.4552, 0.81", "27.4194, -94.5454, -28.4912, 0.81", "28.1243, -95.2042, -29.3797, 0.96", "28.5105, -95.6354, -30.0563, 1.11", "28.5874, -95.7485, -30.2287, 1.11", "28.8345, -96.2446, -30.9862, 1.11", "29.9754, -98.8241, -35.0508, 0.22", "29.9959, -98.8658, -35.116, 0.22", "30.226, -99.3234, -35.833, 0.22", "30.4602, -99.7672, -36.4863, 0.22", "30.7963, -100.341, -37.2554, 0.81", "31.3076, -101.185, -38.1944, 0.44", "32.0669, -102.431, -39.0194, 0.44", "32.2337, -102.732, -39.2028, 0.88", "32.5876, -103.381, -39.5665, 0.88", "32.6167, -103.438, -39.5944, 0.88", "33.2123, -104.673, -40.1341, 0.44", "33.6603, -105.539, -40.4971, 0.44", "34.1019, -106.274, -40.8312, 1.18", "34.5272, -106.773, -41.0743, 1.47", "34.6344, -106.866, -41.124, 1.47", "36.1274, -107.877, -41.6586, 0.74", "37.1355, -108.386, -42.0082, 0.52", "37.2052, -108.416, -42.034, 0.52", "38.5752, -109.003, -42.5605, 0.52", "39.5398, -109.49, -42.9274, 0.88", "40.6452, -110.148, -43.35, 0.88", "42.1129, -111.152, -43.9017, 0.52", "42.2323, -111.242, -43.9477, 0.52", "43.1023, -111.914, -44.2974, 0.52", "44.7423, -113.22, -44.9476, 0.52", "45.3555, -113.722, -45.1699, 0.88", "45.406, -113.764, -45.1935, 0.88", "46.6554, -114.808, -45.8323, 0.88", "47.2786, -115.284, -46.1879, 1.18", "48.4066, -116.06, -46.9191, 1.18", "48.4573, -116.093, -46.9542, 1.18", "50.4732, -117.408, -48.3502, 0.52", "50.5299, -117.448, -48.3896, 0.52", "51.4412, -118.171, -49.0254, 0.52", "52.0783, -118.666, -49.3862, 0.52", "52.6992, -119.135, -49.6668, 0.88", "52.7825, -119.196, -49.6929, 0.88", "53.6932, -119.831, -49.8251, 0.88", "54.4837, -120.377, -49.9286, 0.44", "55.7153, -121.208, -50.07, 0.44", "56.4846, -121.743, -50.1509, 0.81", "56.6111, -121.834, -50.1666, 0.81", "56.9857, -122.114, -50.2163, 1.03", "57.6284, -122.638, -50.3081, 1.03", "57.678, -122.687, -50.315, 1.03", "58.3452, -123.428, -50.3988, 0.88", "58.393, -123.478, -50.4098, 0.88", "59.1053, -124.175, -50.6129, 0.59", "59.5615, -124.568, -50.753, 0.52", "60.0335, -124.933, -50.9034, 0.74", "60.7824, -125.444, -51.149, 0.74", "61.7381, -125.993, -51.4551, 0.22", "62.2681, -126.27, -51.6343, 0.22", "62.9103, -126.564, -51.8658, 0.22", "62.9809, -126.593, -51.8897, 0.22", "63.4696, -126.788, -52.0447, 0.74", "64.0323, -127.03, -52.1908, 0.88", "64.5509, -127.282, -52.2821, 0.66", "65.7225, -127.906, -52.4705, 0.44", "66.3747, -128.296, -52.5625, 0.44", "66.433, -128.334, -52.5693, 0.44", "67.4082, -129.039, -52.6523, 0.44", "68.3749, -129.805, -52.7483, 0.44", "68.6997, -130.086, -52.7812, 0.66", "69.1597, -130.525, -52.8306, 0.96", "69.5003, -130.863, -52.8847, 0.96", "69.7912, -131.157, -52.9426, 0.96", "70.4183, -131.758, -53.0941, 0.22", "70.4696, -131.803, -53.1106, 0.22", "71.0811, -132.317, -53.3256, 0.22", "71.5145, -132.671, -53.4896, 0.74", "71.9768, -133.048, -53.6661, 1.03", "72.5307, -133.505, -53.86, 1.03", "73.227, -134.088, -54.0795, 0.22", "73.7842, -134.572, -54.2465, 0.15", "74.3883, -135.115, -54.4537, 0.15", "74.6462, -135.355, -54.5433, 1.18", "75.3554, -136.019, -54.7903, 1.18", "75.4062, -136.064, -54.808, 1.18", "76.0598, -136.542, -55.008, 1.18", "77.0325, -137.102, -55.3316, 0.52", "77.6955, -137.437, -55.5695, 0.52", "78.0723, -137.628, -55.7168, 0.52", "78.8944, -138.042, -56.0633, 0.22", "79.5002, -138.366, -56.3222, 0.22", "80.5742, -138.964, -56.7893, 0.22", "80.8457, -139.155, -56.9016, 0.74", "81.3139, -139.697, -57.2569, 0.96", "81.3451, -139.759, -57.2973, 0.96", "81.4641, -140.193, -57.5508, 0.96", "81.4784, -140.251, -57.5871, 0.96", "81.6383, -140.843, -57.9833, 0.96", "82.183, -142.301, -59.0678, 0.22", "82.2104, -142.347, -59.1132, 0.22", "82.7303, -143.069, -59.8989, 0.22", "83.1596, -143.565, -60.5227, 0.22", "83.309, -143.702, -60.7454, 0.81", "83.3452, -143.728, -60.7995, 0.81", "84.3467, -144.363, -62.1759, 1.03", "84.6713, -144.568, -62.6241, 1.03", "85.581, -145.148, -63.857, 0.74", "86.678, -145.891, -65.2214, 1.03", "87.4168, -146.398, -66.0464, 0.29", "88.0834, -146.846, -66.7067, 0.29", "88.6935, -147.24, -67.2064, 0.74", "89.3935, -147.647, -67.671, 0.74", "90.2152, -148.107, -68.0857, 0.59", "90.7246, -148.397, -68.2937, 0.29", "91.5329, -148.812, -68.5941, 0.96", "92.0242, -149.003, -68.7685, 1.11", "92.7703, -149.236, -69.0264, 1.11", "93.5521, -149.444, -69.3021, 1.11", "94.8215, -149.746, -69.7395, 0.22", "96.0801, -150.032, -70.1286, 0.22", "97.388, -150.37, -70.4617, 0.22", "97.8439, -150.505, -70.538, 0.66", "98.3386, -150.672, -70.5726, 0.96", "98.7502, -150.825, -70.5452, 1.11", "99.4386, -151.075, -70.4512, 0.66", "100.306, -151.398, -70.2963, 0.44", "101.602, -151.86, -70.0422, 0.29", "101.667, -151.879, -70.0271, 0.29", "102.525, -152.096, -69.8254, 0.29", "103.96, -152.436, -69.5073, 0.29", "104.687, -152.585, -69.3615, 1.03", "105.334, -152.705, -69.2615, 1.03", "106.346, -152.904, -69.1697, 0.59", "106.414, -152.92, -69.1631, 0.59", "107.462, -153.318, -69.0447, 0.59", "107.523, -153.352, -69.037, 0.59", "107.957, -153.649, -69.0102, 0.15", "108.013, -153.691, -69.009, 0.15", "108.709, -154.263, -69.0667, 0.15", "109.685, -155.099, -69.1793, 0.15", "109.929, -155.313, -69.2132, 0.59", "110.471, -155.793, -69.2927, 0.74", "110.523, -155.838, -69.3005, 0.74", "111.267, -156.418, -69.4826, 0.74", "111.742, -156.712, -69.6239, 0.74", "112.367, -157.011, -69.823, 0.74", "112.438, -157.04, -69.8456, 1.11", "113.036, -157.26, -70.0187, 1.11", "114.382, -157.731, -70.395, 0.81", "115.862, -158.204, -70.7464, 0.81", "115.928, -158.225, -70.7603, 0.81", "117.366, -158.681, -71.0225, 0.81", "118.695, -159.103, -71.2241, 0.81", "119.54, -159.362, -71.3182, 0.88", "120.288, -159.556, -71.3541, 0.66", "121.192, -159.734, -71.384, 0.66", "122.093, -159.835, -71.3664, 0.81", "122.258, -159.829, -71.3519, 0.81", "122.963, -159.706, -71.2668, 0.44", "123.867, -159.48, -71.1473, 0.44", "124.355, -159.319, -71.0947, 0.59", "125.345, -158.984, -71.0062, 0.44", "126.436, -158.631, -70.9241, 0.44", "126.819, -158.522, -70.9009, 1.03", "127.757, -158.308, -70.8598, 0.22", "128.752, -158.136, -70.8374, 0.22", "130.214, -157.987, -70.8469, 0.22", "130.364, -157.984, -70.8549, 0.66", "130.738, -158.014, -70.8761, 0.66", "131.155, -158.119, -70.8972, 0.88", "131.304, -158.191, -70.9076, 0.88", "131.657, -158.42, -70.9388, 0.88", "131.906, -158.585, -70.9611, 0.15", "131.973, -158.628, -70.9724, 0.15", "133.184, -159.386, -71.2349, 0.15", "133.656, -159.674, -71.3474, 0.52", "134.208, -160.007, -71.4859, 0.74", "134.994, -160.477, -71.6799, 0.88", "135.841, -160.969, -71.9192, 0.15", "135.9, -161.003, -71.9372, 0.15", "136.691, -161.443, -72.1911, 0.15", "136.831, -161.525, -72.2421, 0.15", "137.624, -162.008, -72.6181, 0.15", "138.23, -162.358, -72.9679, 0.88", "138.647, -162.585, -73.214, 0.88", "139.224, -162.887, -73.5776, 0.88", "140.131, -163.275, -74.2174, 0.88", "140.753, -163.457, -74.6605, 1.11", "141.519, -163.55, -75.2202, 0.22", "142.17, -163.577, -75.8981, 0.22", "142.214, -163.579, -75.9523, 0.22", "142.897, -163.617, -76.8427, 0.22", "143.498, -163.651, -77.6206, 0.22", "144.1, -163.696, -78.4059, 1.18", "146.132, -163.892, -81.2554, 0.44", "146.804, -163.944, -82.2438, 0.44", "147.097, -163.977, -82.6791, 0.66", "147.813, -164.085, -83.7645, 0.52", "147.858, -164.092, -83.8303, 0.52", "148.76, -164.164, -84.9563, 0.66", "149.314, -164.158, -85.4368, 0.66", "149.366, -164.161, -85.4836, 0.66", "150.358, -164.343, -86.3618, 0.37", "150.946, -164.503, -86.8195, 0.66", "151.364, -164.637, -87.0921, 0.66", "152.371, -164.984, -87.6657, 0.66", "153.372, -165.335, -88.2211, 1.25", "153.719, -165.449, -88.3724, 1.25", "154.438, -165.673, -88.608, 0.74", "155.194, -165.888, -88.8201, 0.74", "156.459, -166.191, -89.1358, 0.74", "157.416, -166.369, -89.3125, 1.11", "158.937, -166.598, -89.5083, 0.81", "159.615, -166.698, -89.5881, 0.52", "160.134, -166.808, -89.6351, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.76648, -63.1683, -7.95698, 0.96", "2.39423, -63.9547, -8.5799, 0.96", "2.06875, -64.7032, -9.19986, 0.81", "1.74999, -65.4938, -9.80773, 0.81", "1.49163, -66.1815, -10.2935, 1.18", "1.03785, -67.5255, -11.1486, 1.18", "0.551106, -69.1951, -12.0954, 0.81", "0.388916, -69.8918, -12.4624, 0.66", "0.206027, -70.9106, -12.9344, 0.66", "0.081003, -71.7374, -13.2417, 1.25", "-0.0625225, -72.7329, -13.4781, 1.25", "-0.248282, -73.9675, -13.6014, 0.74", "-0.383479, -74.6847, -13.618, 0.88", "-0.467297, -74.9637, -13.6251, 0.81", "-0.846059, -75.9387, -13.7292, 0.81", "-1.27251, -76.8813, -13.89, 0.81", "-1.60251, -77.5641, -14.0945, 0.52", "-1.9141, -78.2448, -14.384, 0.52", "-2.47698, -79.6484, -15.1322, 0.52", "-3.05725, -81.2086, -16.0579, 0.52", "-3.2152, -81.6483, -16.3312, 1.11", "-3.673, -82.9605, -17.1443, 1.11", "-3.98294, -83.8875, -17.7002, 1.11", "-4.20543, -84.5995, -18.0898, 0.44", "-4.58299, -85.7291, -18.6165, 0.44", "-4.99692, -86.6487, -18.9241, 0.44", "-5.32038, -87.2002, -19.0568, 0.44", "-5.62089, -87.6285, -19.1017, 0.74", "-5.97132, -88.0708, -19.1198, 0.74", "-6.54718, -88.7608, -19.1221, 0.52", "-6.59943, -88.8214, -19.1223, 0.52", "-7.72258, -90.046, -19.1204, 0.52", "-8.10249, -90.4367, -19.1117, 1.18", "-8.51178, -90.8404, -19.1065, 1.18", "-9.00868, -91.295, -19.1168, 1.18", "-9.40451, -91.653, -19.1582, 1.18", "-9.94535, -92.1262, -19.2442, 0.74", "-9.99748, -92.1717, -19.2547, 0.74", "-10.5941, -92.6998, -19.3994, 0.44", "-11.9082, -93.9035, -19.7588, 0.44", "-12.5413, -94.5292, -19.9429, 0.81", "-13.4842, -95.5394, -20.2166, 0.81", "-14.1445, -96.2968, -20.4043, 0.81", "-14.8452, -97.162, -20.545, 0.81", "-15.6657, -98.2751, -20.6341, 0.81", "-16.2494, -99.14, -20.6444, 0.81", "-16.9621, -100.205, -20.5827, 0.81", "-17.3805, -100.824, -20.5203, 1.11", "-18.2113, -102.041, -20.3509, 1.18", "-18.6462, -102.69, -20.2647, 1.18", "-19.2184, -103.552, -20.1757, 0.59", "-19.8219, -104.468, -20.1611, 0.59", "-20.4037, -105.403, -20.2318, 0.59", "-20.8816, -106.243, -20.3627, 0.59", "-21.3916, -107.255, -20.6039, 0.96", "-21.6896, -107.962, -20.7719, 1.18", "-22.035, -108.968, -20.9948, 1.18", "-22.3015, -109.865, -21.181, 1.18", "-22.5496, -110.696, -21.3402, 1.18", "-23.0177, -111.922, -21.5386, 1.18", "-23.5839, -113.118, -21.6561, 1.18", "-24.1654, -114.118, -21.7464, 1.18", "-24.2111, -114.183, -21.7531, 1.18", "-24.7433, -114.836, -21.8632, 0.66", "-25.7032, -115.853, -22.0931, 0.66", "-26.1876, -116.327, -22.2476, 0.66", "-26.8495, -116.964, -22.547, 0.66", "-27.474, -117.582, -22.9186, 0.66", "-27.9825, -118.143, -23.2962, 0.66", "-28.6265, -118.948, -23.9032, 0.66", "-29.1847, -119.707, -24.6367, 0.66", "-29.7744, -120.522, -25.6123, 1.18", "-30.3054, -121.293, -26.6229, 0.88", "-30.9556, -122.267, -28.0291, 0.88", "-31.3385, -122.861, -28.9212, 1.11", "-32.2807, -124.446, -31.2758, 1.11", "-32.931, -125.567, -32.8824, 1.11", "-33.1497, -125.941, -33.3891, 1.33", "-33.8502, -127.09, -34.8395, 0.52", "-34.2977, -127.726, -35.5589, 0.52", "-35.1132, -128.702, -36.4244, 0.52", "-35.5039, -129.096, -36.6753, 0.96", "-36.2859, -129.776, -37.0341, 1.03", "-36.9458, -130.307, -37.2904, 1.25", "-37.763, -130.983, -37.549, 1.25", "-38.5011, -131.615, -37.8761, 1.25", "-39.231, -132.312, -38.333, 0.66", "-39.6724, -132.823, -38.7371, 0.44", "-40.1665, -133.483, -39.2901, 0.44", "-40.752, -134.327, -39.9914, 0.44", "-41.6384, -135.621, -41.0713, 0.96", "-42.2993, -136.458, -41.7433, 0.96", "-42.9944, -137.192, -42.2953, 0.81", "-43.8946, -138.002, -42.8773, 0.52", "-44.4251, -138.379, -43.1075, 0.88", "-44.995, -138.737, -43.2849, 1.25", "-46.1334, -139.427, -43.4978, 1.25", "-46.5209, -139.673, -43.5541, 1.25", "-47.1915, -140.127, -43.674, 0.29", "-48.7891, -141.286, -44.0464, 0.15", "-49.504, -141.825, -44.2266, 0.96", "-50.0603, -142.279, -44.3858, 1.25", "-51.1561, -143.275, -44.7501, 1.25", "-52.0267, -144.096, -45.0615, 0.74", "-52.6606, -144.73, -45.3373, 0.74" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-263.642, -153.108, -26.6349, 0.59", "-273.017, -155.155, -29.4486, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-263.642, -153.108, -26.6349, 0.66", "-272.201, -156.257, -30.7366, 0.59" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "118.805, 243.934, -108.684, 0.44", "119.491, 244.745, -108.968, 0.44", "119.641, 244.92, -109.031, 0.44", "120.412, 245.804, -109.385, 0.44", "120.702, 246.147, -109.536, 0.44", "121.44, 247.056, -109.78, 0.44", "121.542, 247.185, -109.802, 0.44", "122.077, 247.878, -109.821, 0.44", "122.228, 248.088, -109.812, 0.44", "122.617, 248.695, -109.713, 0.44", "123.572, 250.357, -109.311, 0.44", "123.601, 250.417, -109.289, 0.44", "124.126, 251.564, -108.749, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "118.805, 243.934, -108.684, 0.44", "119.658, 244.484, -108.75, 0.44", "119.917, 244.614, -108.763, 0.44", "120.602, 244.925, -108.792, 0.44", "121.033, 245.112, -108.809, 0.44", "122.004, 245.534, -108.845, 0.44", "122.206, 245.621, -108.853, 0.44", "123.72, 246.235, -108.903, 0.44", "124.089, 246.377, -108.912, 0.44", "124.247, 246.426, -108.912, 0.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "89.6771, 50.9097, 89.9575, 0.44", "97.712, 52.9468, 95.5512, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "89.6771, 50.9097, 89.9575, 0.44", "96.8753, 56.1762, 94.4797, 0.44", "103.391, 62.1061, 99.2107, 0.44", "108.742, 68.3449, 104.906, 0.44", "114.898, 74.9087, 109.267, 0.44", "119.841, 81.2716, 115.19, 0.44", "125.489, 88.5843, 119.015, 0.44", "131.024, 95.4948, 123.663, 0.44", "136.649, 103.083, 126.946, 0.44", "142.251, 110.537, 130.56, 0.44", "147.889, 117.59, 134.857, 0.44", "152.195, 124.753, 140.349, 0.44", "156.282, 131.188, 146.82, 0.44", "161.31, 138.355, 151.653, 0.44", "167.429, 145.448, 155.152, 0.44", "171.452, 153.783, 158.94, 0.44", "175.498, 161.673, 163.563, 0.44", "179.161, 169.159, 169.09, 0.44" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "292.733, -78.069, 5.6829, 0.44", "302.33, -80.5309, 4.32369, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "292.733, -78.069, 5.6829, 0.44", "301.907, -81.9907, 5.00472, 0.44" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-88.6161, 295.867, 8.80305, 0.44", "-91.7019, 305.377, 8.60438, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-88.6161, 295.867, 8.80305, 0.44", "-91.5221, 305.43, 8.466, 0.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.5633, 24.5847, 31.2747, 1.11", "-17.3337, 26.384, 33.8417, 1.11", "-17.3254, 26.4279, 33.8956, 1.11", "-17.1553, 27.2143, 34.7812, 1.11", "-17.1334, 27.3093, 34.8672, 1.11", "-16.7298, 29.0076, 36.1795, 1.11", "-16.7187, 29.0572, 36.2114, 1.11", "-16.3428, 30.3069, 36.6184, 1.11", "-16.3164, 30.422, 36.6396, 1.11", "-16.1236, 31.7546, 36.6726, 1.11", "-16.1226, 31.8244, 36.6666, 1.11", "-16.2003, 32.5512, 36.5215, 1.11", "-16.2178, 32.6185, 36.5139, 1.11", "-16.5851, 33.3827, 36.5256, 1.11", "-16.6417, 33.4643, 36.5369, 1.11", "-17.3542, 34.1574, 36.7444, 1.11", "-17.4284, 34.2107, 36.7563, 1.11", "-18.3358, 34.6934, 36.8216, 1.11", "-18.4288, 34.7299, 36.8269, 1.11", "-19.0676, 34.896, 36.8858, 0.88", "-19.36, 34.9565, 36.9146, 0.88", "-20.661, 35.1858, 37.0793, 0.88", "-20.7292, 35.198, 37.0898, 0.88", "-22.0628, 35.486, 37.325, 0.88", "-23.0612, 35.7391, 37.5514, 0.88", "-23.3843, 35.8496, 37.6851, 0.88", "-24.8363, 36.46, 38.5254, 0.88", "-24.9283, 36.5128, 38.6006, 0.88", "-25.8672, 37.2017, 39.537, 0.81", "-26.1139, 37.4227, 39.8266, 0.81", "-27.3328, 38.7499, 41.5523, 0.81", "-27.4168, 38.8607, 41.7022, 0.81", "-27.8039, 39.6094, 42.7747, 0.81", "-27.8708, 39.7647, 43.0031, 0.81" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-17.5633, 24.5847, 31.2747, 1.55", "-19.7419, 25.3794, 32.4488, 1.55", "-19.874, 25.4414, 32.4835, 1.55", "-21.6049, 26.4023, 32.6137, 1.47", "-21.8277, 26.5522, 32.5992, 1.47", "-23.5483, 27.8199, 32.3734, 1.47", "-23.6186, 27.8776, 32.3584, 1.47", "-24.1405, 28.4077, 32.0831, 1.47", "-24.3377, 28.6181, 31.9664, 1.47", "-25.0518, 29.3067, 31.5975, 1.47", "-25.141, 29.3841, 31.5667, 1.47", "-26.2303, 30.1191, 31.4073, 1.33", "-27.8228, 31.0304, 31.2611, 1.33", "-28.1131, 31.159, 31.2484, 1.33", "-30.1375, 31.8953, 31.2247, 1.33", "-30.3795, 31.9581, 31.2239, 1.33", "-32.7211, 32.4091, 31.2395, 1.33", "-32.9261, 32.4297, 31.2448, 1.33", "-34.6148, 32.4748, 31.2955, 1.33", "-34.6847, 32.4736, 31.2995, 1.33", "-36.49, 32.3212, 31.4068, 1.33", "-36.5493, 32.3132, 31.4107, 1.33", "-37.0656, 32.2159, 31.4521, 1.25", "-37.789, 32.0739, 31.5169, 1.25", "-39.4421, 31.7275, 31.7024, 1.03", "-40.972, 31.444, 31.8881, 1.03", "-42.0951, 31.2564, 32.0448, 1.03", "-42.3213, 31.2427, 32.0838, 1.03", "-43.8372, 31.2836, 32.3781, 1.03", "-43.8952, 31.2927, 32.3903, 1.03", "-45.0338, 31.6395, 32.6347, 1.03", "-45.1646, 31.704, 32.67, 1.03", "-47.4716, 33.2227, 33.3826, 1.03", "-47.5489, 33.2797, 33.4068, 1.03", "-48.5868, 34.1203, 33.6912, 1.03", "-48.7131, 34.2234, 33.72, 1.03", "-49.6603, 34.9717, 33.8724, 1.03", "-50.0152, 35.2303, 33.8999, 1.03", "-51.2176, 35.9416, 33.6615, 1.03", "-52.2434, 36.4516, 33.3389, 1.03", "-52.4258, 36.5141, 33.266, 1.03", "-53.6357, 36.8145, 32.7306, 1.03", "-53.7081, 36.8241, 32.6978, 1.03", "-56.0012, 36.9968, 31.64, 1.03", "-56.1304, 37.0026, 31.5893, 1.03", "-57.2655, 37.0466, 31.3222, 1.03", "-57.3448, 37.0504, 31.3127, 1.03", "-58.7384, 37.1201, 31.4262, 1.03", "-58.8063, 37.1252, 31.4426, 1.03", "-60.3735, 37.3272, 31.9339, 1.03", "-61.3414, 37.5048, 32.1935, 1.03", "-61.3985, 37.5198, 32.2038, 1.03", "-62.7291, 37.9204, 32.3045, 1.03", "-63.0234, 38.0333, 32.2565, 1.03", "-64.5754, 38.7164, 31.6262, 1.03", "-64.6501, 38.753, 31.5725, 1.03", "-65.2649, 39.0908, 31.0577, 1.03", "-65.3744, 39.1563, 30.9586, 1.03", "-66.3659, 39.8061, 30.0617, 1.03", "-66.8874, 40.1449, 29.6741, 1.03", "-67.8577, 40.7722, 29.1319, 1.03", "-68.6778, 41.2351, 28.8378, 1.03", "-68.8453, 41.3194, 28.8071, 1.03", "-69.9816, 41.8171, 28.8024, 1.03", "-70.6846, 42.0794, 28.924, 1.03", "-70.7483, 42.1021, 28.9422, 1.03", "-72.4659, 42.6957, 29.5772, 1.03", "-72.5466, 42.7252, 29.6104, 1.03", "-73.6323, 43.1605, 30.089, 1.03", "-73.7356, 43.2091, 30.1511, 1.03", "-74.7197, 43.7284, 30.9427, 1.03", "-74.8014, 43.7782, 31.015, 1.03", "-75.9039, 44.5589, 32.1199, 1.03", "-76.1029, 44.6977, 32.2961, 1.03", "-77.9575, 45.9775, 33.7982, 1.03", "-78.3661, 46.2525, 34.0765, 1.03", "-79.4267, 46.9566, 34.6299, 1.03", "-79.4754, 46.9883, 34.6452, 1.03", "-81.0969, 48.0101, 34.8789, 1.03", "-81.2242, 48.0888, 34.8888, 1.03", "-82.0719, 48.6031, 34.8754, 1.03", "-83.1396, 49.2103, 34.6919, 1.03", "-84.0652, 49.7043, 34.447, 1.03", "-84.654, 49.9995, 34.2265, 1.03", "-85.9314, 50.5969, 33.5764, 1.03", "-86.0175, 50.6338, 33.5261, 1.03", "-89.0637, 51.7206, 31.6155, 1.03", "-89.1692, 51.7531, 31.5468, 1.03", "-89.9574, 51.9648, 31.0921, 1.03", "-90.0431, 51.9846, 31.0466, 1.03", "-90.8903, 52.0831, 30.7336, 1.03", "-92.08, 52.0909, 30.7419, 1.03", "-92.3665, 52.06, 30.8563, 1.03", "-93.5963, 51.8636, 31.4236, 1.03", "-93.9219, 51.8033, 31.5862, 1.03", "-95.1425, 51.5656, 32.2118, 1.03", "-95.2444, 51.5463, 32.2722, 1.03", "-95.979, 51.4354, 32.7196, 1.03", "-96.1911, 51.4178, 32.8314, 1.03", "-97.5695, 51.4075, 33.4681, 1.03", "-97.6986, 51.4143, 33.5191, 1.03", "-99.0772, 51.555, 34.0072, 1.03", "-99.4969, 51.5984, 34.1501, 1.03", "-100.68, 51.7235, 34.5351, 1.03", "-100.941, 51.75, 34.615, 1.03", "-102.785, 51.9124, 35.0943, 1.03", "-102.854, 51.9179, 35.1069, 1.03" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "9.6131, -47.3243, 16.3661, 0.66", "9.06663, -48.5804, 16.5721, 0.66", "8.81368, -49.3131, 16.718, 0.66", "8.51981, -50.2353, 16.9132, 0.52", "8.29559, -50.9129, 17.0929, 0.37", "7.87958, -52.0177, 17.428, 0.37", "7.43192, -53.0719, 17.7797, 0.37", "6.8826, -54.1087, 18.2372, 0.37", "6.8429, -54.1697, 18.2705, 0.37", "6.21128, -54.6672, 18.6307, 0.22", "5.48312, -54.9427, 18.9671, 0.22", "5.19105, -55.0211, 19.0778, 0.66", "4.12515, -55.2386, 19.3893, 0.66", "4.05884, -55.2486, 19.4094, 0.66", "2.80552, -55.3926, 19.7799, 0.66", "1.41105, -55.493, 20.316, 0.52", "0.503587, -55.5164, 20.7405, 0.52", "-0.617607, -55.4798, 21.3342, 0.52", "-1.60452, -55.4065, 21.9867, 0.66", "-2.39207, -55.3167, 22.5865, 0.66", "-4.00321, -55.0644, 24.0141, 0.52", "-4.53702, -55.0024, 24.5276, 0.52", "-4.58421, -55.0015, 24.5793, 0.52", "-5.58991, -55.218, 25.7563, 0.52", "-5.65225, -55.2453, 25.8185, 0.52", "-6.21397, -55.5103, 26.3022, 0.52", "-6.9914, -55.8652, 26.9507, 0.37", "-7.4326, -56.0409, 27.3642, 0.29", "-7.85734, -56.2236, 27.7601, 0.44", "-8.38804, -56.4436, 28.2451, 0.44", "-9.71572, -57.1079, 29.6328, 0.44", "-10.8277, -57.7289, 30.9522, 0.44", "-10.8628, -57.7494, 30.9963, 0.44", "-11.666, -58.324, 32.0705, 0.44", "-11.7091, -58.3625, 32.1259, 0.44", "-12.4577, -59.1761, 33.0005, 0.22", "-12.5105, -59.2522, 33.0527, 0.22", "-12.9489, -59.8664, 33.3918, 0.22", "-12.987, -59.9172, 33.4214, 0.22", "-13.7746, -60.8363, 34.0546, 0.22", "-13.8145, -60.8854, 34.0846, 0.22", "-14.7135, -62.2401, 34.6634, 0.22", "-22.2696, -65.5752, 40.301, 0.22", "-30.1043, -70.0061, 44.658, 0.22", "-37.5649, -73.6617, 50.2236, 0.22" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "9.6131, -47.3243, 16.3661, 1.4", "10.5749, -47.7604, 16.3661, 1.4", "11.9512, -48.3946, 16.3661, 1.4", "13.2841, -49.0087, 16.3661, 1.03", "13.4203, -49.0714, 16.3661, 1.03", "15.0947, -49.8429, 16.3661, 1.03", "16.9874, -50.715, 16.3661, 1.03", "17.0835, -50.7606, 16.3661, 1.03" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.7179, -304.243, 30.1924, 0.44", "-11.0176, -305.071, 30.1052, 0.44", "-11.4853, -306.365, 29.9691, 0.44", "-11.7306, -307.043, 29.8978, 0.44", "-11.999, -307.786, 29.8197, 0.88", "-12.3034, -308.628, 29.7312, 0.74" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-10.7179, -304.243, 30.1924, 0.52", "-9.85164, -304.286, 30.3565, 0.52", "-8.60464, -304.352, 30.4813, 0.52", "-8.53511, -304.355, 30.4882, 0.52", "-6.94323, -304.439, 30.6475, 0.37", "-5.54524, -304.513, 30.7873, 0.37", "-5.48562, -304.516, 30.7933, 0.37", "-4.07984, -304.632, 30.8816, 0.37", "5.90468, -304.313, 30.4255, 0.37" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "160.134, -166.808, -89.6351, 0.88", "161.018, -167.03, -89.7846, 0.88", "162.071, -167.294, -89.9625, 0.88", "162.282, -167.347, -89.9981, 0.88", "162.712, -167.455, -90.0709, 0.96", "163.608, -167.68, -90.2223, 0.22", "165.004, -168.031, -90.4583, 0.22" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "160.134, -166.808, -89.6351, 0.44", "160.588, -167.989, -89.7771, 0.44", "161.162, -169.481, -89.9566, 0.29", "161.916, -171.441, -90.1923, 0.15", "162.304, -172.449, -90.3135, 0.15" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-52.6606, -144.73, -45.3373, 0.88", "-53.7947, -146.027, -45.3549, 0.88", "-54.5735, -146.877, -45.3178, 0.59", "-54.6284, -146.935, -45.3149, 0.59", "-55.4003, -147.767, -45.2736, 0.59", "-56.5812, -149.07, -45.2569, 0.81", "-57.068, -149.614, -45.263, 0.29", "-57.9131, -150.494, -45.266, 0.29", "-58.3949, -150.98, -45.3125, 0.88", "-58.8348, -151.426, -45.3757, 1.03", "-59.2436, -151.86, -45.456, 1.18", "-59.6579, -152.3, -45.5707, 1.18", "-60.6657, -153.256, -45.8556, 0.66", "-61.3595, -153.862, -46.0446, 0.66", "-62.3095, -154.66, -46.2776, 0.66", "-62.9866, -155.227, -46.4267, 1.33", "-63.7891, -155.903, -46.5816, 0.44", "-65.2287, -157.171, -46.8529, 0.44", "-66.3293, -158.222, -47.0484, 0.66", "-67.0662, -159.006, -47.2236, 1.11", "-67.6226, -159.625, -47.4029, 1.11", "-67.6733, -159.683, -47.4238, 1.11", "-68.169, -160.284, -47.667, 1.33", "-68.5763, -160.773, -47.9483, 1.33", "-69.3263, -161.598, -48.474, 1.33", "-70.2399, -162.539, -49.0338, 0.44", "-70.6324, -162.933, -49.2373, 1.03", "-71.3642, -163.722, -49.5463, 1.03", "-72.0812, -164.519, -49.7772, 1.33", "-73.2179, -165.936, -50.0372, 1.33", "-73.8498, -166.846, -50.1127, 1.33", "-74.2589, -167.592, -50.1299, 1.33", "-74.9532, -169.038, -50.1183, 1.33", "-75.2443, -169.757, -50.1171, 1.11", "-75.6465, -170.858, -50.1104, 0.88", "-75.6701, -170.924, -50.1129, 0.88", "-76.3114, -172.662, -50.3402, 0.88", "-76.341, -172.725, -50.3534, 0.88", "-76.9316, -173.647, -50.766, 0.37", "-77.0162, -173.748, -50.8377, 0.37", "-77.5603, -174.279, -51.3322, 0.37", "-78.1276, -174.804, -51.8556, 0.74", "-78.911, -175.495, -52.5551, 0.74", "-80.1446, -176.696, -53.6662, 0.88", "-80.7537, -177.365, -54.211, 1.25", "-81.4573, -178.345, -54.8727, 1.25", "-81.7954, -179.005, -55.2182, 1.62", "-82.1987, -180.064, -55.6259, 1.62", "-82.4968, -181.237, -55.9672, 0.59", "-82.6773, -182.252, -56.1303, 0.59", "-82.8859, -183.832, -56.2814, 0.59", "-83.0494, -185.382, -56.3437, 0.59", "-83.1145, -186.104, -56.3479, 1.03", "-83.224, -187.321, -56.3113, 1.18", "-83.3594, -188.522, -56.2564, 1.55", "-83.478, -189.394, -56.2236, 1.55", "-83.6755, -190.538, -56.3041, 1.25", "-83.905, -191.752, -56.4158, 1.03", "-84.2218, -193.51, -56.6241, 0.74", "-84.4139, -194.592, -56.8013, 0.96", "-84.4261, -194.668, -56.822, 0.96", "-84.8149, -197.426, -57.8432, 1.69" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-52.6606, -144.73, -45.3373, 0.44", "-53.6231, -145.103, -45.7788, 0.44", "-53.6833, -145.124, -45.8075, 0.44", "-54.7106, -145.417, -46.2315, 0.44", "-55.5124, -145.645, -46.5625, 0.22", "-56.6377, -145.966, -47.027, 0.22", "-57.2534, -146.141, -47.2811, 0.88", "-57.327, -146.157, -47.3082, 0.88", "-58.6846, -146.41, -47.8182, 0.88" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-27.8708, 39.7647, 43.0031, 0.74", "-27.0543, 40.1952, 42.966, 0.74", "-26.7821, 40.3458, 42.97, 0.74", "-25.5021, 41.0869, 43.1, 0.74", "-24.2225, 41.8452, 43.3002, 0.74", "-24.1168, 41.9129, 43.3338, 0.74", "-23.3398, 42.4386, 43.682, 0.74", "-23.2081, 42.5471, 43.7976, 0.74", "-22.6941, 43.0776, 44.5488, 0.74", "-22.651, 43.1327, 44.6463, 0.74", "-22.1421, 43.8522, 46.0741, 0.74", "-22.0404, 43.9829, 46.3567, 0.74", "-21.6062, 44.487, 47.6286, 0.74", "-21.5573, 44.529, 47.7516, 0.74", "-21.2173, 44.7264, 48.5001, 0.74", "-21.0897, 44.7648, 48.6751, 0.74", "-20.7038, 44.7899, 48.9441, 0.74", "-20.4879, 44.794, 49.0393, 0.74", "-19.4903, 44.7739, 49.311, 0.74", "-19.2756, 44.7654, 49.3584, 0.74", "-18.5714, 44.7284, 49.4867, 0.74", "-18.4572, 44.7187, 49.5029, 0.74", "-17.8739, 44.65, 49.5593, 0.74", "-17.7112, 44.6218, 49.5703, 0.74", "-16.8793, 44.4061, 49.6115, 0.59", "-16.7184, 44.3677, 49.6164, 0.59", "-16.0504, 44.2896, 49.6538, 0.59", "-15.7334, 44.2901, 49.6826, 0.59", "-15.5206, 44.3359, 49.7142, 0.59", "-15.2504, 44.4295, 49.7627, 0.59", "-14.4456, 44.7881, 49.9269, 0.59", "-13.2793, 45.3504, 50.1788, 0.59", "-13.2267, 45.3788, 50.1842, 0.59", "-12.0473, 46.0396, 50.1888, 0.59", "-11.929, 46.1132, 50.1754, 0.59", "-10.9801, 46.7556, 49.963, 0.59", "-10.8575, 46.8519, 49.9207, 0.59", "-9.41, 48.1968, 49.2447, 0.59", "-9.10233, 48.4935, 49.119, 0.59", "-8.35183, 49.2731, 48.8266, 0.59", "-8.25392, 49.3838, 48.8008, 0.59", "-7.5276, 50.3057, 48.7269, 0.59", "-7.37644, 50.502, 48.7603, 0.59", "-6.58087, 51.6099, 49.4897, 0.59", "-6.50624, 51.7122, 49.5817, 0.59", "-6.19158, 52.0758, 50.0946, 0.59", "-6.16696, 52.1026, 50.1423, 0.59", "-5.99476, 52.2675, 50.5842, 0.59", "-5.64367, 52.6116, 51.6957, 0.59", "-5.62671, 52.6268, 51.7618, 0.59", "-5.25767, 52.8553, 53.199, 0.59", "-5.19425, 52.869, 53.4405, 0.59", "-4.87681, 52.8692, 54.6068, 0.44", "-4.78826, 52.845, 54.911, 0.44", "-4.52461, 52.739, 55.6874, 0.44", "-4.43738, 52.7059, 55.9194, 0.44", "-4.05826, 52.5591, 56.8324, 0.44", "-4.03129, 52.5513, 56.8854, 0.44", "-3.67484, 52.4788, 57.4556, 0.44", "-3.46586, 52.4497, 57.7426, 0.44", "-3.04323, 52.443, 58.1812, 0.44", "-2.90641, 52.488, 58.2317, 0.44", "-2.49651, 52.7421, 58.2108, 0.44", "-2.34355, 52.8541, 58.2234, 0.44", "-0.69589, 54.2707, 58.4168, 0.44", "-0.558837, 54.3809, 58.4553, 0.44", "0.123213, 54.8898, 58.7815, 0.44", "0.307771, 54.9966, 58.9452, 0.44", "1.01335, 55.3166, 59.8057, 0.44", "1.05253, 55.3293, 59.8623, 0.44", "1.39134, 55.4054, 60.4176, 0.44", "1.49735, 55.4294, 60.5884, 0.44", "2.09066, 55.5597, 61.5352, 0.44", "2.18062, 55.611, 61.6945, 0.44", "2.42102, 55.9383, 62.2289, 0.44", "2.4665, 56.0226, 62.3412, 0.44", "2.63481, 56.5624, 62.8723, 0.44", "2.68182, 56.8031, 63.0383, 0.44", "2.77529, 58.0325, 63.5236, 0.44", "2.78196, 58.2566, 63.5911, 0.44", "10.0704, 63.8998, 67.4683, 0.44", "16.7967, 70.6574, 70.4834, 0.44", "22.7755, 77.9503, 73.8103, 0.44", "29.2427, 85.2493, 76.0241, 0.44", "34.0568, 93.1985, 79.7165, 0.44", "39.3329, 101.062, 82.9317, 0.44" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-27.8708, 39.7647, 43.0031, 0.81", "-28.8953, 40.3333, 44.8153, 0.81", "-29.6765, 40.7516, 46.2396, 0.81", "-29.9151, 40.8329, 46.6556, 0.81", "-30.1566, 40.888, 47.0671, 0.81", "-30.202, 40.8932, 47.1328, 0.81", "-31.4068, 40.9566, 48.7137, 0.81", "-31.4468, 40.951, 48.7581, 0.81", "-32.3511, 40.8435, 49.7192, 0.81", "-32.3909, 40.8403, 49.7639, 0.81", "-33.3533, 40.8396, 50.8774, 0.81", "-33.4795, 40.8513, 51.0282, 0.81", "-34.8025, 41.1868, 52.5194, 0.81", "-35.5992, 41.4908, 53.4311, 0.81", "-35.96, 41.6915, 53.8242, 0.81", "-36.5261, 42.0556, 54.4271, 0.81", "-36.7463, 42.2488, 54.6944, 0.81", "-37.5235, 43.0623, 55.6323, 0.81", "-37.6254, 43.2089, 55.7617, 0.81", "-38.2086, 44.2924, 56.6655, 0.81", "-38.2455, 44.4922, 56.8794, 0.81", "-38.0987, 45.3792, 58.1624, 0.81", "-38.0599, 45.4575, 58.3311, 0.81", "-37.8336, 45.6717, 59.1144, 0.81", "-37.8073, 45.6846, 59.2018, 0.81", "-36.827, 45.7398, 61.6454, 0.81", "-36.6131, 45.7041, 62.1617, 0.81", "-36.058, 45.4851, 62.9793, 0.81", "-35.5808, 45.2917, 63.3912, 0.81", "-35.3243, 45.1932, 63.5324, 0.81", "-33.8204, 44.6649, 64.1305, 0.81", "-33.7127, 44.6321, 64.1574, 0.81", "-30.9396, 43.9356, 64.7237, 0.81", "-30.8713, 43.9244, 64.7343, 0.81", "-29.3567, 43.7627, 64.9359, 0.81", "-29.2101, 43.7583, 64.9528, 0.81", "-28.1012, 43.83, 65.0612, 0.81", "-27.6097, 43.941, 65.0918, 0.81", "-26.4064, 44.5768, 65.0804, 0.81", "-26.1759, 44.749, 65.0446, 0.81", "-25.3905, 45.5638, 64.7788, 0.52", "-25.3483, 45.617, 64.7615, 0.52", "-24.9265, 46.3119, 64.5526, 0.52", "-24.8519, 46.4506, 64.5166, 0.52", "-24.342, 47.6814, 64.192, 0.52", "-24.2294, 47.958, 64.1072, 0.52", "-24.2074, 48.02, 64.0832, 0.52", "-24.1141, 48.281, 63.973, 0.52", "-23.0955, 52.1861, 73.1224, 0.52" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-102.854, 51.9179, 35.1069, 0.88", "-104.212, 52.8388, 34.9716, 0.88", "-105.137, 53.4446, 34.8667, 0.88", "-105.326, 53.5691, 34.8432, 0.88", "-106.809, 54.5444, 34.6556, 0.88", "-106.858, 54.578, 34.6487, 0.88", "-108.138, 55.4683, 34.4559, 0.88", "-108.205, 55.5115, 34.4443, 0.88", "-108.521, 55.7161, 34.4037, 1.03", "-108.96, 56.0078, 34.4091, 1.03", "-109.883, 56.6126, 34.5855, 1.03", "-109.934, 56.642, 34.5991, 1.03", "-111.037, 57.1523, 35.1167, 1.03", "-111.144, 57.1948, 35.1785, 1.03", "-112.247, 57.6282, 35.8839, 0.96", "-112.713, 57.806, 36.2048, 0.96", "-112.776, 57.8286, 36.2481, 0.96", "-114.136, 58.3317, 37.1107, 0.96", "-114.245, 58.3781, 37.1639, 0.96", "-115.727, 59.1049, 37.6587, 0.96", "-115.785, 59.1426, 37.664, 0.96", "-116.511, 59.6788, 37.6327, 0.96", "-116.711, 59.8421, 37.6007, 0.96", "-117.796, 60.8076, 37.2833, 0.96", "-117.959, 60.9613, 37.2269, 0.96", "-119.284, 62.2846, 36.6935, 0.96", "-119.44, 62.4469, 36.629, 0.96", "-120.049, 63.104, 36.3676, 0.96", "-120.167, 63.217, 36.3417, 0.96", "-121.282, 64.167, 36.3042, 0.96", "-121.339, 64.2067, 36.3084, 0.96", "-122.263, 64.7073, 36.461, 0.96", "-122.573, 64.8544, 36.523, 0.96", "-125.009, 65.8808, 37.0651, 0.96", "-125.135, 65.9298, 37.0953, 0.96", "-127.01, 66.5478, 37.6051, 0.96", "-127.908, 66.8234, 37.8447, 0.96", "-128.037, 66.8584, 37.8839, 0.96", "-129.249, 67.1645, 38.3062, 0.96", "-129.339, 67.1857, 38.345, 0.96", "-130.663, 67.5084, 39.133, 0.96", "-130.804, 67.5448, 39.2393, 0.96", "-132.082, 67.8719, 40.1793, 0.96", "-132.946, 68.0902, 40.7716, 0.96", "-134.166, 68.3955, 41.583, 0.96", "-134.542, 68.4989, 41.8039, 0.96", "-136.028, 68.9664, 42.5247, 0.96", "-137.418, 69.4349, 43.0443, 0.96", "-138.177, 69.7275, 43.176, 0.96", "-138.275, 69.768, 43.1809, 0.96", "-139.212, 70.1633, 43.1526, 0.96", "-140.085, 70.5508, 43.0946, 0.96", "-140.617, 70.8219, 43.0307, 0.96", "-142.265, 71.8093, 42.764, 0.96", "-142.315, 71.8412, 42.7544, 0.96" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-102.854, 51.9179, 35.1069, 1.03", "-103.767, 51.7763, 35.2798, 1.03", "-104.051, 51.7556, 35.3367, 1.03", "-105.649, 51.7039, 35.6615, 1.03", "-105.851, 51.7117, 35.7015, 1.03", "-107.197, 51.8195, 35.9619, 1.03", "-107.255, 51.8272, 35.974, 1.03", "-108.179, 52.0501, 36.1954, 1.03", "-108.32, 52.0854, 36.2323, 1.03", "-109.052, 52.2927, 36.4034, 0.88", "-109.121, 52.3063, 36.4081, 0.88", "-110.436, 52.4157, 36.2337, 0.88", "-110.563, 52.4038, 36.2092, 0.88", "-111.449, 52.1601, 36.0038, 0.88", "-112.196, 51.862, 35.884, 0.88", "-113.51, 51.1898, 35.7025, 0.88", "-113.588, 51.1502, 35.6753, 0.88", "-114.532, 50.6674, 35.1893, 0.88", "-114.774, 50.5695, 35.0704, 0.88", "-115.906, 50.2119, 34.5655, 0.88", "-116.028, 50.1822, 34.5304, 0.88", "-118.451, 49.7453, 34.0238, 0.88", "-118.595, 49.7282, 33.9973, 0.88", "-119.709, 49.6652, 33.7713, 0.88", "-119.968, 49.6661, 33.7652, 0.88", "-121.054, 49.7421, 33.9652, 0.88", "-121.111, 49.7437, 33.9842, 0.88", "-121.834, 49.7365, 34.3205, 0.88", "-121.89, 49.7307, 34.3396, 0.88", "-123.583, 49.442, 34.7283, 0.88", "-123.719, 49.414, 34.7421, 0.88", "-125.131, 49.0811, 34.7441, 0.88", "-125.447, 49.0014, 34.7276, 0.88", "-127.299, 48.3921, 34.5196, 0.88", "-127.476, 48.3262, 34.5012, 0.88", "-128.502, 47.8862, 34.4062, 0.88", "-128.906, 47.7122, 34.4201, 0.88", "-128.969, 47.6848, 34.4324, 0.88", "-130.234, 47.188, 34.9444, 0.88", "-131.309, 46.8078, 35.669, 0.88", "-131.741, 46.6871, 36.0134, 0.88", "-132.63, 46.5041, 36.8682, 0.88", "-132.674, 46.5021, 36.9089, 0.88", "-133.492, 46.5968, 37.5858, 0.88", "-133.75, 46.6748, 37.7388, 0.88", "-134.437, 46.9045, 37.8636, 0.88", "-134.583, 46.9237, 37.8529, 0.88", "-135.896, 46.6958, 37.6783, 0.88", "-136.785, 46.4346, 37.5703, 0.88", "-137.898, 46.0302, 37.4633, 0.88", "-138.027, 45.9787, 37.4554, 0.88", "-139.612, 45.3144, 37.4847, 0.88", "-141.776, 44.39, 37.7052, 0.88", "-141.846, 44.3569, 37.7236, 0.88", "-142.701, 43.9654, 38.0634, 0.88", "-142.75, 43.9438, 38.0905, 0.88", "-143.874, 43.4639, 38.8452, 0.88", "-144.067, 43.394, 39.009, 0.88", "-145.137, 43.0038, 40.135, 0.88", "-145.345, 42.9317, 40.3533, 0.88", "-146.257, 42.6186, 41.3231, 0.88", "-146.337, 42.5962, 41.4097, 0.88", "-147.078, 42.4254, 42.2322, 0.88", "-147.121, 42.4183, 42.2731, 0.88", "-148.196, 42.3012, 43.1652, 0.88", "-148.26, 42.2913, 43.212, 0.88", "-150.072, 41.957, 44.3576, 0.88", "-150.123, 41.9441, 44.3862, 0.88", "-151.62, 41.4692, 45.1393, 0.88", "-151.744, 41.4255, 45.1875, 0.88", "-152.823, 41.0087, 45.5123, 0.88", "-153.296, 40.817, 45.6357, 0.88", "-154.264, 40.4048, 45.8408, 0.88", "-154.317, 40.3798, 45.8512, 0.88", "-156.884, 39.0874, 46.3081, 0.88", "-156.937, 39.0605, 46.3166, 0.88", "-158.403, 38.389, 46.5168, 0.88", "-158.522, 38.3374, 46.5306, 0.88", "-160.471, 37.6974, 46.7125, 0.88", "-161.118, 37.5765, 46.7695, 0.88", "-161.209, 37.5768, 46.7777, 0.88", "-162.898, 37.8065, 46.9519, 0.88", "-162.986, 37.8312, 46.9613, 0.88", "-164.673, 38.3431, 47.1964, 0.88", "-165.704, 38.7247, 47.3904, 0.88", "-165.874, 38.7773, 47.4189, 0.88", "-167.123, 39.0573, 47.5969, 0.88", "-167.193, 39.063, 47.6035, 0.88", "-168.436, 39.0045, 47.656, 0.88", "-168.737, 38.9457, 47.6516, 0.88", "-169.683, 38.6683, 47.5434, 0.88", "-169.749, 38.6478, 47.5316, 0.88", "-170.663, 38.4063, 47.3276, 0.88", "-171.47, 38.283, 47.1429, 0.88", "-171.631, 38.2732, 47.1064, 0.88", "-173.486, 38.1883, 46.7716, 0.88", "-173.566, 38.1862, 46.7629, 0.88", "-174.882, 38.1759, 46.6833, 0.88", "-176.192, 38.2023, 46.6402, 0.88", "-176.442, 38.2183, 46.6412, 0.88", "-177.625, 38.3476, 46.7172, 0.88", "-178.68, 38.5661, 46.9115, 0.88", "-178.747, 38.5765, 46.926, 0.88", "-188.007, 35.0616, 48.3078, 0.88", "-197.117, 31.886, 50.9368, 0.88", "-206.461, 28.6473, 52.4249, 0.88", "-215.182, 23.7596, 52.2093, 0.88", "-224.383, 19.881, 52.7537, 0.88", "-233.868, 16.813, 53.5489, 0.88", "-243.167, 13.1354, 53.5758, 0.88", "-252.09, 8.80567, 52.2969, 0.88", "-261.211, 4.81534, 51.3607, 0.88", "-269.12, -0.76587, 48.851, 0.88", "-277.179, -5.70961, 45.594, 0.88", "-285.565, -10.9454, 44.0901, 0.88", "-294.703, -14.9108, 43.2062, 0.88", "-304.346, -17.5372, 42.8683, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "17.0835, -50.7606, 16.3661, 0.74", "18.2611, -51.0958, 16.0665, 0.74", "19.3814, -51.5133, 15.8588, 0.59", "20.3704, -51.9907, 15.7147, 0.59", "21.5573, -52.7524, 15.5815, 0.59", "22.2375, -53.2446, 15.5169, 1.18", "23.7306, -54.4156, 15.344, 1.18", "24.4256, -55.0705, 15.2685, 0.81", "25.2015, -55.8782, 15.1765, 0.66", "26.4192, -57.1879, 14.9317, 0.52", "26.475, -57.2433, 14.9166, 0.52", "27.4565, -58.0836, 14.6092, 0.52", "28.3809, -58.7484, 14.2792, 1.11", "29.1809, -59.199, 13.999, 1.11", "30.339, -59.708, 13.6226, 0.66", "31.4206, -60.098, 13.3176, 0.66", "32.2786, -60.4015, 13.1977, 1.03", "32.3448, -60.4241, 13.201, 1.03", "33.1975, -60.7426, 13.3461, 1.18", "33.2606, -60.7689, 13.3613, 1.18", "34.1129, -61.1375, 13.5935, 1.18", "35.7218, -61.8529, 14.0104, 0.66", "37.1316, -62.4955, 14.3396, 0.66", "38.5717, -63.1523, 14.6475, 0.66", "38.6346, -63.1808, 14.6591, 0.66", "40.5027, -64.0165, 14.8352, 0.66", "40.5676, -64.0427, 14.8345, 0.66", "41.347, -64.3307, 14.7374, 0.96", "41.7678, -64.4608, 14.6707, 0.96", "42.9299, -64.8001, 14.5068, 0.96", "44.3449, -65.2688, 14.3776, 0.52", "45.7476, -65.7849, 14.3062, 0.52", "45.8125, -65.8111, 14.3053, 0.52", "47.0987, -66.4051, 14.3387, 0.52", "48.4854, -67.1553, 14.4513, 0.52", "49.603, -67.8905, 14.6346, 0.52", "50.045, -68.2521, 14.75, 0.52", "50.1507, -68.3549, 14.7778, 0.52", "50.7377, -68.9789, 14.9664, 0.52", "50.7756, -69.0233, 14.9803, 0.52", "51.2195, -69.5171, 15.1275, 0.66", "51.8297, -70.1297, 15.3177, 0.66", "52.4374, -70.707, 15.5116, 0.74", "53.4098, -71.5458, 15.7997, 0.74", "54.277, -72.2133, 15.9729, 0.29", "54.883, -72.6269, 16.0311, 0.52", "55.4038, -72.9374, 16.0393, 0.74", "55.4655, -72.9703, 16.0361, 0.74", "56.398, -73.4353, 15.9341, 0.74", "57.5628, -73.9887, 15.8179, 0.74", "58.8884, -74.6665, 15.7595, 0.74", "59.6399, -75.0853, 15.7706, 0.44", "60.7936, -75.7901, 15.7789, 0.44", "60.8606, -75.8339, 15.7796, 0.44", "62.0335, -76.7402, 15.8082, 1.11", "62.7845, -77.4291, 15.8365, 0.81", "63.6538, -78.3249, 15.8344, 0.81", "64.6364, -79.4059, 15.899, 0.81", "64.6917, -79.4634, 15.9047, 0.81", "66.0751, -80.6881, 16.1657, 0.81", "67.8428, -81.9767, 16.5882, 0.81", "67.9076, -82.0163, 16.6132, 0.81", "69.4286, -82.8807, 17.3506, 0.96", "70.4715, -83.4058, 17.9647, 0.96", "71.9913, -84.0355, 18.9304, 0.44", "72.882, -84.2407, 19.5868, 0.44", "73.776, -84.3194, 20.3233, 1.25" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "17.0835, -50.7606, 16.3661, 0.52", "16.7198, -51.9788, 16.1474, 0.52", "16.4395, -53.1641, 15.9975, 0.52", "16.4089, -53.3101, 15.9822, 0.52", "16.3412, -53.8809, 15.971, 0.88", "16.2692, -54.8279, 15.9944, 0.88", "16.2514, -55.0467, 16.0089, 0.88", "16.1861, -56.2666, 16.2212, 0.66", "16.1942, -56.4018, 16.2857, 0.66", "16.4258, -57.5594, 17.1722, 0.66", "16.4384, -57.6078, 17.221, 0.66", "16.5583, -58.1479, 17.8249, 0.66", "16.5667, -58.193, 17.8778, 0.66", "16.8641, -60.3808, 20.1532, 0.66", "16.9325, -61.0002, 20.6439, 0.81", "17.0407, -62.2338, 21.3867, 0.81", "17.1795, -63.2979, 21.8888, 0.81", "17.1948, -63.3625, 21.9107, 0.81", "17.7673, -65.0745, 22.2833, 0.52", "18.1278, -65.9898, 22.3783, 0.81", "18.2204, -66.2002, 22.4005, 0.81", "18.852, -67.4387, 22.5348, 0.81", "19.7021, -69.0957, 22.7172, 0.81", "20.4626, -70.7947, 22.8888, 0.66", "20.7847, -71.5871, 23.0091, 0.88", "21.0701, -72.3983, 23.1632, 0.88", "21.3236, -73.2254, 23.339, 0.88", "21.5356, -74.0774, 23.5302, 0.59", "21.8714, -75.7367, 23.9981, 0.59", "22.2856, -77.8513, 24.6951, 0.52", "22.4482, -78.5704, 24.948, 0.88", "22.4653, -78.6344, 24.9707, 0.88", "22.7771, -79.7057, 25.3802, 0.66", "23.0748, -80.6745, 25.7676, 0.44", "23.1778, -81.0694, 25.9201, 0.66", "23.3021, -81.9009, 26.18, 0.66", "23.3667, -82.8106, 26.4853, 0.66", "23.3702, -84.3515, 27.0126, 0.44", "23.354, -85.0773, 27.2676, 0.74", "23.3809, -86.1982, 27.7156, 0.74", "23.4794, -87.1205, 28.139, 0.74", "23.6718, -88.1296, 28.6624, 0.59", "23.9072, -88.9867, 29.1848, 0.29", "24.1962, -89.8248, 29.7329, 0.29", "24.7843, -91.382, 30.8781, 0.29", "25.0053, -91.867, 31.2943, 0.29", "25.0331, -91.9469, 31.3695, 0.29", "25.1679, -93.022, 32.3316, 0.44", "25.1166, -93.5261, 32.7753, 0.66", "25.003, -94.0028, 33.1325, 0.66", "24.9883, -94.062, 33.1668, 0.66", "24.7111, -95.5023, 33.929, 0.66", "24.6117, -96.6554, 34.5371, 0.96", "24.6097, -96.7277, 34.5714, 0.96", "24.6178, -97.6126, 34.9804, 0.96", "24.6194, -98.6782, 35.423, 0.96", "24.6139, -98.8331, 35.481, 0.96", "24.4791, -100.303, 35.9382, 0.96", "24.2699, -101.53, 36.2479, 0.96", "24.0259, -102.638, 36.4929, 0.59", "23.7445, -103.76, 36.699, 0.59", "23.5704, -104.502, 36.7884, 0.74", "23.3575, -105.621, 36.8403, 0.74", "23.2493, -106.521, 36.7829, 0.44", "23.2467, -106.627, 36.7687, 0.44", "23.2944, -107.686, 36.5474, 0.44", "23.4094, -108.539, 36.3374, 0.44", "23.4206, -108.596, 36.3227, 0.44", "23.743, -109.924, 36.0274, 0.44", "23.918, -110.667, 35.8954, 0.81", "23.9318, -110.735, 35.8841, 0.81", "24.0443, -111.452, 35.7729, 0.96", "24.1238, -112.196, 35.6712, 0.96", "24.228, -113.311, 35.5347, 0.52", "24.2339, -113.38, 35.5272, 0.52", "24.2754, -113.983, 35.5304, 1.11", "24.2788, -114.053, 35.5351, 1.11", "24.3622, -115.393, 35.7745, 0.88", "24.43, -116.957, 36.1768, 0.59", "24.4297, -117.014, 36.1943, 0.59", "24.3971, -118.654, 36.723, 0.59", "24.3524, -119.891, 37.1575, 0.59", "24.2783, -121.198, 37.6558, 0.96", "24.2345, -121.748, 37.8804, 0.96", "24.0554, -123.131, 38.3615, 0.74", "23.9242, -123.806, 38.4684, 0.74", "23.8992, -123.882, 38.4622, 0.74", "23.6713, -124.379, 38.3633, 0.22", "23.1455, -125.375, 38.0844, 0.22", "22.7051, -126.212, 37.8532, 1.4", "21.891, -127.733, 37.6053, 0.81", "21.3133, -128.907, 37.5381, 0.59", "21.1082, -129.391, 37.5527, 0.81", "20.7556, -130.315, 37.6472, 1.03", "20.4275, -131.282, 37.8339, 0.74", "19.9183, -133.205, 38.332, 0.74", "19.7153, -134.259, 38.6176, 0.74", "19.5415, -135.406, 38.887, 0.59", "19.5331, -135.484, 38.9018, 0.59", "19.4514, -136.58, 39.0671, 0.74", "19.4153, -138.052, 39.1884, 0.74", "19.4583, -139.814, 39.2409, 0.66", "19.4618, -139.884, 39.2448, 0.66", "19.5691, -140.963, 39.3289, 0.37", "19.5891, -141.11, 39.3436, 0.29", "19.8876, -142.6, 39.4785, 0.29", "20.1065, -143.532, 39.5512, 0.29", "20.2499, -144.12, 39.5886, 0.88", "20.5435, -145.398, 39.5934, 0.88", "20.7283, -146.29, 39.5309, 0.66", "20.9534, -147.298, 39.3716, 0.66", "21.1194, -147.989, 39.1872, 1.11", "21.1348, -148.053, 39.1635, 1.11", "21.3827, -149.138, 38.7381, 0.52", "21.5479, -150.047, 38.4008, 0.52", "21.6284, -150.701, 38.1901, 0.52", "21.6326, -150.76, 38.1824, 0.52", "21.6753, -151.583, 38.1815, 0.52", "21.669, -152.479, 38.3144, 0.81", "21.5901, -153.477, 38.6313, 0.52", "21.583, -153.532, 38.6536, 0.52", "21.3305, -154.878, 39.2915, 0.52", "21.2054, -155.462, 39.5848, 1.33", "20.9732, -156.546, 40.18, 0.44", "20.6977, -158.041, 41.0204, 0.44", "20.3354, -160.257, 42.3003, 0.44", "20.1135, -161.92, 43.2341, 0.81", "20.1078, -161.982, 43.2661, 0.81", "20.058, -162.962, 43.7647, 0.37", "20.0712, -164.623, 44.5803, 0.37", "20.0809, -164.809, 44.6641, 0.88", "20.1722, -165.836, 45.0749, 0.88", "20.3323, -167.243, 45.5497, 0.44", "20.439, -168.353, 45.8883, 0.44", "20.5263, -169.511, 46.1827, 0.29", "20.6122, -170.585, 46.445, 0.29", "20.634, -170.812, 46.498, 1.11", "20.7386, -171.746, 46.7049, 0.66", "20.8105, -172.421, 46.8247, 0.81", "20.9156, -173.27, 46.916, 1.11", "21.0215, -174.173, 46.9707, 0.88", "21.115, -174.874, 47.0054, 0.44", "21.269, -175.818, 47.1063, 0.44", "21.5596, -177.111, 47.457, 0.29", "21.7541, -177.707, 47.7353, 0.59", "21.7798, -177.772, 47.7744, 0.59", "22.0896, -178.331, 48.2381, 0.88", "22.826, -179.166, 49.2958, 0.88", "23.8335, -179.853, 50.7208, 0.88", "23.867, -179.867, 50.7686, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-12.3034, -308.628, 29.7312, 0.66", "-12.1573, -309.244, 29.8814, 0.66", "-11.985, -310.482, 30.1561, 0.66", "-11.9352, -311.393, 30.2444, 0.37", "-11.9359, -311.463, 30.2486, 0.37", "-11.9965, -312.73, 30.2963, 0.37", "-12.0413, -313.54, 30.3198, 0.37", "-12.0925, -314.052, 30.3273, 1.25", "-12.2469, -315.307, 30.3329, 1.33", "-12.374, -316.273, 30.3151, 0.66", "-12.4984, -317.218, 30.3056, 0.66", "-12.5996, -317.889, 30.2805, 0.37", "-12.7649, -318.734, 30.2312, 0.37", "-12.9911, -319.571, 30.1534, 0.37", "-13.2294, -320.371, 30.0577, 0.66", "-13.3912, -321.027, 29.9255, 0.88", "-13.6178, -322.096, 29.6526, 0.88", "-13.722, -322.735, 29.4549, 0.88", "-13.786, -323.588, 29.2278, 0.44", "-13.7312, -324.856, 28.9697, 0.44", "-13.4363, -326.408, 28.594, 0.44", "-13.4149, -326.483, 28.5745, 0.44", "-13.2876, -326.856, 28.4525, 0.88", "-12.8998, -328.058, 27.9983, 1.11", "-12.8623, -328.199, 27.9406, 1.11", "-12.6246, -330.064, 26.9557, 0.81", "-12.6234, -330.124, 26.9197, 0.81", "-12.6555, -331.368, 26.1645, 0.59", "-12.7189, -332.171, 25.6608, 0.59", "-12.7378, -332.298, 25.5834, 0.59", "-12.8778, -332.924, 25.295, 0.88", "-13.0181, -333.356, 25.1799, 0.88", "-13.1211, -333.665, 25.117, 0.88", "-13.3581, -334.321, 25.0233, 0.59", "-13.7065, -335.341, 24.8956, 0.59", "-13.94, -336.124, 24.7916, 0.88", "-14.1226, -336.973, 24.6858, 0.88", "-14.2741, -337.989, 24.6027, 0.88", "-14.282, -338.059, 24.5999, 0.88", "-14.3669, -339.03, 24.6117, 0.88", "-14.4366, -340.012, 24.6809, 0.29", "-14.5695, -341.453, 24.8608, 0.29", "-14.6903, -342.343, 24.9997, 0.81", "-14.7933, -342.953, 25.1145, 0.81", "-14.9076, -343.554, 25.2462, 1.03", "-15.0956, -344.34, 25.4748, 0.88", "-15.3476, -345.082, 25.7617, 0.37", "-15.7003, -345.74, 26.0172, 0.37" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-12.3034, -308.628, 29.7312, 0.22", "-12.7783, -309.405, 29.6043, 0.22", "-13.6051, -310.759, 29.3835, 0.22", "-13.6412, -310.818, 29.3739, 0.22", "-14.3135, -311.919, 29.1944, 0.22", "-14.3683, -312.009, 29.1797, 0.22", "-15.5774, -313.989, 28.8568, 0.22", "-21.1892, -322.253, 29.3238, 0.22" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "165.004, -168.031, -90.4583, 0.59", "164.612, -168.399, -90.232, 0.59", "164.077, -168.899, -89.9238, 0.59", "163.749, -169.207, -89.7347, 0.59", "162.716, -170.173, -89.1395, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "165.004, -168.031, -90.4583, 0.66", "165.434, -167.966, -90.5873, 0.66", "165.508, -167.956, -90.6169, 0.66", "166.362, -167.858, -90.9493, 0.66", "167.051, -167.802, -91.2431, 0.66", "167.589, -167.769, -91.4634, 0.37", "168.898, -167.697, -91.9619, 0.37", "169.888, -167.652, -92.3197, 0.88", "170.712, -167.617, -92.6299, 1.11", "171.848, -167.583, -93.0555, 0.74", "172.884, -167.546, -93.4216, 0.74", "173.873, -167.514, -93.7525, 0.44", "174.714, -167.486, -94.0414, 0.44", "176.2, -167.428, -94.4759, 1.18" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-84.8149, -197.426, -57.8432, 0.44", "-84.8916, -198.359, -58.167, 0.44", "-84.8864, -198.789, -58.3014, 0.44", "-84.8445, -199.724, -58.5812, 0.66", "-84.7224, -200.923, -58.9131, 0.22", "-84.6278, -201.866, -59.1243, 0.74", "-84.5373, -203.144, -59.3616, 0.74", "-84.4846, -204.051, -59.4803, 0.74", "-84.4853, -204.121, -59.4843, 0.74", "-84.5715, -204.905, -59.4598, 1.18", "-84.8612, -205.969, -59.392, 1.18", "-85.1802, -206.678, -59.3271, 1.18", "-85.7288, -207.673, -59.389, 0.66", "-86.0854, -208.347, -59.5303, 0.66", "-86.1135, -208.406, -59.5537, 0.66", "-86.5337, -209.4, -60.0561, 0.81", "-86.782, -210.161, -60.4966, 0.81", "-87.2539, -212.041, -61.5911, 0.44", "-87.4772, -213.099, -62.2223, 0.74", "-87.7267, -214.293, -62.9158, 1.11", "-87.9417, -215.277, -63.4729, 1.11", "-88.1756, -216.323, -64.0352, 1.11", "-88.4137, -217.236, -64.4743, 0.66", "-88.7721, -218.281, -64.8575, 1.11", "-89.1433, -219.155, -65.1512, 1.11", "-89.5138, -219.887, -65.3622, 1.11", "-89.7641, -220.331, -65.5025, 0.81", "-90.2834, -221.204, -65.773, 0.59", "-90.8245, -222.11, -66.0484, 0.59", "-91.3055, -222.886, -66.2614, 0.59", "-91.8664, -223.723, -66.515, 0.59", "-92.4442, -224.451, -66.7468, 0.59", "-93.0267, -225.07, -66.9859, 0.59", "-93.44, -225.411, -67.1665, 0.37", "-94.1609, -225.82, -67.4616, 0.81", "-94.7629, -226.024, -67.6723, 0.96", "-95.7214, -226.257, -67.9647, 0.96", "-95.7866, -226.275, -67.9829, 0.96", "-96.4021, -226.515, -68.1632, 0.74", "-97.2144, -227.05, -68.4066, 0.74", "-97.8865, -227.693, -68.6396, 0.96", "-98.5715, -228.435, -68.8767, 0.96", "-99.3822, -229.437, -69.1759, 0.96", "-100.221, -230.568, -69.4913, 0.96", "-101.182, -232.066, -69.862, 0.96", "-101.641, -232.93, -70.0719, 0.96" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-84.8149, -197.426, -57.8432, 0.74", "-85.0259, -198.45, -57.9706, 0.74", "-85.2259, -199.301, -58.0761, 0.37", "-85.3971, -200.03, -58.183, 0.37", "-85.7613, -201.734, -58.4331, 0.37", "-85.9925, -203.075, -58.6109, 0.37", "-86.003, -203.144, -58.6195, 0.37", "-86.1613, -204.231, -58.7483, 0.37", "-86.2504, -205.111, -58.7955, 0.74", "-86.271, -206.351, -58.7732, 0.74", "-86.2229, -207.958, -58.6067, 0.74", "-86.2224, -208.037, -58.593, 0.74", "-86.2154, -208.968, -58.4015, 0.74", "-86.2165, -210.397, -58.0589, 0.15", "-86.371, -212.16, -57.5838, 0.15", "-86.5067, -212.81, -57.4003, 1.03", "-86.8421, -213.791, -57.1245, 1.25", "-87.0635, -214.285, -57.0024, 1.25", "-87.5167, -214.986, -56.8734, 0.44", "-88.3864, -215.97, -56.8113, 0.44", "-88.8751, -216.432, -56.7686, 0.81", "-88.924, -216.482, -56.7661, 0.81", "-89.2118, -216.807, -56.7748, 0.22", "-89.6251, -217.4, -56.822, 0.22", "-90.147, -218.354, -56.9236, 0.22", "-90.506, -219.293, -57.0563, 0.22", "-90.7647, -220.411, -57.2284, 1.4", "-90.8739, -221.695, -57.434, 1.47", "-90.8207, -222.696, -57.6215, 1.47", "-90.809, -222.764, -57.6348, 1.47", "-90.5604, -223.794, -57.8543, 0.59", "-90.2011, -225.118, -58.1372, 0.59", "-89.8577, -226.242, -58.3165, 0.59", "-89.7008, -226.747, -58.3754, 0.15", "-89.3609, -227.952, -58.5136, 0.15", "-89.2269, -228.539, -58.5744, 0.96", "-89.0573, -229.483, -58.6508, 0.96", "-88.9666, -230.289, -58.7201, 0.96", "-88.9303, -230.751, -58.7575, 1.18", "-88.876, -231.335, -58.8139, 0.22", "-88.8191, -232.058, -58.9048, 0.22", "-88.7707, -233.215, -59.0932, 0.22", "-88.7911, -233.9, -59.2341, 0.88", "-88.8643, -234.542, -59.4014, 0.88", "-88.9769, -235.181, -59.588, 0.22", "-89.3034, -236.349, -59.9315, 0.22", "-89.47, -236.791, -60.0658, 0.96", "-89.7187, -237.325, -60.2193, 0.96", "-90.0232, -237.913, -60.3664, 0.22", "-90.4595, -238.659, -60.5503, 0.22", "-91.2985, -239.954, -60.8295, 0.22", "-91.4372, -240.15, -60.8755, 0.88", "-91.9162, -240.77, -61.0128, 1.03", "-92.2772, -241.191, -61.1169, 1.03", "-92.8651, -241.855, -61.2816, 0.66", "-93.4946, -242.528, -61.4622, 0.66", "-94.0029, -243.05, -61.6065, 0.52", "-94.7905, -243.838, -61.8635, 0.52", "-95.387, -244.422, -62.0832, 0.96", "-95.8283, -244.886, -62.2603, 0.96", "-96.2884, -245.404, -62.462, 0.96", "-96.7315, -245.968, -62.691, 0.59", "-97.245, -246.804, -62.9966, 0.44", "-97.4011, -247.17, -63.1354, 0.22", "-97.5247, -248.011, -63.4097, 0.22", "-97.508, -248.329, -63.5071, 1.03", "-97.3929, -249.106, -63.7207, 1.03", "-97.2246, -249.95, -63.9138, 1.03", "-97.0446, -250.706, -64.0452, 0.81", "-96.6238, -252.182, -64.3237, 0.81", "-96.3959, -252.917, -64.4871, 1.25", "-96.2049, -253.555, -64.6339, 1.25", "-95.983, -254.379, -64.8579, 1.25", "-95.8311, -255.127, -65.0637, 1.33", "-95.7367, -256.216, -65.3629, 0.96", "-95.7923, -257.104, -65.633, 0.96", "-95.9216, -257.936, -65.8896, 0.59", "-96.1597, -258.885, -66.1886, 0.59", "-96.4428, -259.694, -66.4211, 0.59", "-96.7949, -260.536, -66.6531, 0.37", "-97.0108, -261.062, -66.8034, 1.03", "-97.2179, -261.631, -66.9748, 1.18", "-97.3312, -262.109, -67.1417, 0.88", "-97.4561, -263.392, -67.6001, 0.88", "-97.4416, -264.057, -67.8865, 1.03", "-97.4129, -265.191, -68.4529, 1.03", "-97.414, -265.251, -68.4886, 1.03", "-97.4691, -266.147, -69.0913, 1.03", "-97.5402, -266.676, -69.4805, 1.03", "-97.7592, -267.607, -70.2065, 0.15", "-98.1178, -268.841, -71.1205, 0.15", "-98.3003, -269.396, -71.5104, 0.81", "-98.3953, -269.696, -71.7024, 0.81", "-98.7081, -270.642, -72.2634, 0.22", "-98.7983, -270.969, -72.4256, 0.96", "-98.8514, -271.253, -72.5209, 0.96", "-98.8994, -271.927, -72.6704, 0.22", "-98.9827, -272.781, -72.8128, 0.22", "-99.0484, -273.228, -72.8817, 1.11", "-99.2165, -273.932, -72.9722, 1.11", "-99.4167, -274.397, -73.0337, 1.11", "-99.8415, -275.07, -73.1192, 0.22", "-100.365, -275.702, -73.1907, 0.22", "-100.587, -275.941, -73.2147, 0.44", "-101.126, -276.544, -73.2579, 0.44", "-101.847, -277.356, -73.3173, 0.44", "-101.887, -277.413, -73.3235, 0.44", "-102.179, -278.155, -73.4824, 0.29", "-102.284, -278.784, -73.652, 1.03", "-102.34, -279.486, -73.8556, 1.25", "-102.342, -279.553, -73.8759, 1.25", "-102.387, -280.612, -74.2379, 1.25", "-102.563, -281.672, -74.636, 0.22", "-102.77, -282.437, -74.963, 0.22", "-102.933, -282.895, -75.1675, 0.81", "-103.183, -283.467, -75.4197, 1.11", "-103.431, -283.969, -75.6471, 1.25", "-104.276, -285.52, -76.2893, 0.22", "-104.609, -286.121, -76.5436, 0.81", "-104.85, -286.579, -76.7456, 0.81", "-105.095, -287.052, -76.9612, 0.81", "-105.541, -287.887, -77.325, 0.22", "-106.314, -289.28, -77.7506, 0.22", "-106.632, -289.831, -77.8388, 0.96", "-107.1, -290.662, -77.8756, 1.18", "-107.605, -291.592, -77.833, 1.33", "-108.201, -292.738, -77.6748, 1.33", "-109.046, -294.463, -77.1831, 0.74", "-109.469, -295.375, -76.8439, 0.22", "-109.781, -296.078, -76.5543, 0.22", "-109.929, -296.422, -76.3911, 0.88", "-110.172, -297.029, -76.078, 0.88", "-110.646, -298.293, -75.4825, 0.88", "-110.954, -299.089, -75.2088, 1.03", "-111.201, -299.68, -75.0012, 1.03", "-111.614, -300.627, -74.6939, 1.03", "-111.641, -300.69, -74.6778, 1.03", "-112.053, -301.715, -74.4876, 0.44", "-112.344, -302.395, -74.4589, 0.44", "-112.368, -302.45, -74.4601, 0.44", "-112.663, -303.037, -74.5193, 0.44", "-112.899, -303.437, -74.5953, 0.15", "-112.932, -303.487, -74.6029, 0.15", "-113.466, -304.189, -74.691, 0.15", "-113.671, -304.452, -74.721, 0.81", "-114.035, -304.919, -74.7875, 0.81", "-114.077, -304.974, -74.795, 0.81", "-114.455, -305.551, -74.886, 0.81", "-114.985, -306.405, -75.0298, 0.74", "-115.243, -306.863, -75.1121, 0.22", "-115.293, -306.955, -75.1294, 0.22", "-116.237, -308.776, -75.483, 0.22", "-116.594, -309.456, -75.6163, 1.18" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "39.3329, 101.062, 82.9317, 0.44", "42.0024, 109.648, 78.5554, 0.44", "43.0165, 118.379, 73.7877, 0.44", "42.7814, 127.571, 69.8565, 0.44", "40.2463, 135.716, 64.6383, 0.44", "36.8058, 144.379, 61.0152, 0.44", "32.883, 153.377, 59.1067, 0.44", "29.1727, 162.646, 58.5397, 0.44", "24.3857, 171.391, 59.3194, 0.44", "20.5375, 180.606, 59.8424, 0.44", "18.1163, 190.195, 61.3229, 0.44", "15.2083, 199.654, 62.7622, 0.44", "13.9915, 209.433, 64.4631, 0.44", "13.9753, 219.253, 66.3534, 0.44", "15.6393, 229.073, 67.2462, 0.44", "17.5179, 238.718, 69.0992, 0.44", "20.7496, 247.88, 71.4711, 0.44", "22.4468, 257.084, 74.9917, 0.44", "24.8069, 265.954, 78.9608, 0.44", "27.8025, 275.143, 81.5278, 0.44", "28.8899, 284.752, 84.0764, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "39.3329, 101.062, 82.9317, 0.44", "42.7182, 97.318, 91.5645, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-142.315, 71.8412, 42.7544, 0.74", "-143.987, 72.1747, 43.4264, 0.74", "-144.137, 72.202, 43.4807, 0.74", "-146.119, 72.5535, 44.1653, 0.74", "-146.575, 72.6435, 44.3063, 0.74", "-147.629, 72.8661, 44.6055, 0.74", "-147.909, 72.9324, 44.675, 0.74", "-148.483, 73.0771, 44.7105, 0.74", "-148.602, 73.1056, 44.7113, 0.74", "-149.597, 73.3411, 44.6584, 0.74", "-149.714, 73.3722, 44.646, 0.74", "-150.438, 73.5797, 44.5424, 0.81", "-151.719, 73.9708, 44.334, 0.81", "-153.272, 74.4576, 44.0552, 0.81", "-153.337, 74.4803, 44.0435, 0.81", "-154.586, 74.9981, 43.7927, 0.81", "-154.648, 75.0289, 43.7806, 0.81", "-155.412, 75.4786, 43.6376, 0.81", "-155.488, 75.5297, 43.6278, 0.81", "-156.787, 76.4922, 43.4862, 0.81", "-157.697, 77.1218, 43.4486, 0.81", "-158.477, 77.5745, 43.485, 0.81", "-158.601, 77.6368, 43.4962, 0.81", "-159.681, 77.9442, 43.5799, 0.81", "-159.772, 77.9557, 43.585, 0.81", "-160.236, 77.9469, 43.6006, 0.81", "-161.133, 77.8312, 43.6086, 0.81", "-161.223, 77.8143, 43.6054, 0.81", "-163.891, 77.2888, 43.4944, 0.81", "-164.615, 77.1401, 43.4578, 0.81", "-164.776, 77.1112, 43.4455, 0.81", "-165.848, 76.9546, 43.3336, 0.81", "-166.155, 76.9292, 43.2957, 0.81", "-167.44, 76.8797, 43.1193, 0.81", "-167.643, 76.8921, 43.0901, 0.81", "-169.125, 77.2498, 42.7745, 0.81", "-169.432, 77.4243, 42.7492, 0.81", "-169.954, 78.0132, 42.8332, 0.81", "-170.049, 78.1347, 42.8935, 0.81", "-170.377, 78.5805, 43.2772, 0.81", "-170.417, 78.6109, 43.3262, 0.81", "-171.574, 79.2341, 44.856, 0.81", "-171.615, 79.2467, 44.8983, 0.81", "-172.243, 79.3733, 45.4529, 0.81", "-172.355, 79.3944, 45.5341, 0.81", "-173.414, 79.5788, 46.1835, 0.81", "-173.634, 79.6224, 46.294, 0.81", "-174.749, 79.8571, 46.614, 0.81", "-174.944, 79.9015, 46.6576, 0.81", "-175.923, 80.091, 46.7836, 0.81", "-175.992, 80.1021, 46.7881, 0.81", "-176.487, 80.1605, 46.7874, 0.81", "-177.77, 80.2655, 46.7649, 0.81", "-177.83, 80.27, 46.7604, 0.81", "-179.46, 80.3694, 46.5434, 0.81", "-179.76, 80.3918, 46.4898, 0.81", "-180.929, 80.5002, 46.3568, 0.81", "-180.989, 80.5074, 46.353, 0.81", "-182.49, 80.7529, 46.369, 0.81", "-182.863, 80.8252, 46.3871, 0.81", "-184.397, 81.1295, 46.4548, 0.81", "-186.118, 81.3756, 46.5172, 0.81", "-186.39, 81.4012, 46.5282, 0.81", "-187.655, 81.4524, 46.6164, 0.81", "-187.784, 81.451, 46.6301, 0.81", "-189.438, 81.4475, 46.7842, 0.81", "-190.373, 81.4422, 46.8263, 0.81", "-190.733, 81.4614, 46.8217, 0.81", "-191.78, 81.5588, 46.8367, 0.81", "-192.178, 81.6193, 46.8834, 0.81", "-193.212, 81.8366, 47.0968, 0.81", "-193.33, 81.8725, 47.1273, 0.81", "-194.536, 82.2943, 47.4356, 0.81", "-194.599, 82.3198, 47.4535, 0.81", "-196.037, 82.9767, 47.9117, 0.81", "-196.088, 83.002, 47.9294, 0.81", "-197.241, 83.559, 48.3445, 0.81", "-197.343, 83.6083, 48.3816, 0.81", "-198.569, 84.1548, 48.8053, 0.81", "-198.843, 84.2521, 48.8797, 0.81", "-200.099, 84.5695, 49.1625, 0.81", "-200.898, 84.7047, 49.3503, 0.81", "-201.112, 84.7132, 49.4024, 0.81", "-202.198, 84.6529, 49.6308, 0.81", "-203.647, 84.3801, 49.9085, 0.81", "-204.477, 84.1594, 50.0908, 0.81", "-204.61, 84.1185, 50.129, 0.81", "-205.513, 83.8669, 50.4352, 0.81", "-205.605, 83.8497, 50.4689, 0.81", "-206.72, 83.8418, 50.8975, 0.81", "-206.984, 83.9038, 51.0065, 0.81", "-208.313, 84.3964, 51.3446, 0.81", "-208.609, 84.5297, 51.3855, 0.81", "-209.712, 85.1265, 51.3736, 0.81", "-210.828, 85.7785, 51.2142, 0.81", "-212.05, 86.5425, 50.8597, 0.81", "-213.923, 87.7005, 50.0955, 0.81", "-214.121, 87.8126, 49.9914, 0.81", "-215.111, 88.3151, 49.4143, 0.81", "-215.219, 88.3519, 49.3513, 0.81", "-216.271, 88.5365, 48.7884, 0.81", "-216.453, 88.5424, 48.7362, 0.81", "-217.219, 88.5187, 48.7199, 0.81", "-217.289, 88.5151, 48.7245, 0.81", "-218.893, 88.3971, 48.9382, 0.81", "-218.952, 88.3969, 48.9464, 0.81", "-221.101, 88.4941, 49.2562, 0.81", "-221.334, 88.52, 49.2817, 0.81", "-222.657, 88.777, 49.3742, 0.81", "-222.773, 88.811, 49.3769, 0.81", "-224.298, 89.4342, 49.2634, 0.81", "-224.353, 89.4583, 49.2595, 0.81", "-225.089, 89.8262, 49.1937, 0.81", "-225.299, 89.9284, 49.1795, 0.81", "-226.35, 90.4261, 49.1051, 0.81", "-227.437, 90.8687, 49.1101, 0.81", "-228.923, 91.3721, 49.2356, 0.81", "-228.989, 91.3931, 49.2448, 0.81", "-230.02, 91.6964, 49.4553, 0.81", "-230.5, 91.7855, 49.562, 0.81", "-232.026, 91.9043, 49.9382, 0.81", "-232.094, 91.905, 49.9548, 0.81", "-232.777, 91.8529, 50.0646, 0.81", "-232.845, 91.8434, 50.0755, 0.81", "-234.361, 91.5014, 50.3099, 0.81", "-234.568, 91.437, 50.3433, 0.81", "-235.264, 91.1574, 50.4296, 0.81", "-235.773, 90.9489, 50.509, 0.81", "-235.925, 90.8889, 50.5375, 0.81", "-236.783, 90.6626, 50.7252, 0.81", "-237.799, 90.5667, 51.0051, 0.81", "-237.913, 90.5834, 51.0395, 0.81", "-238.485, 90.8108, 51.2165, 0.81", "-238.834, 91.0363, 51.2883, 0.81", "-239.84, 91.8468, 51.3935, 0.81", "-240.012, 91.9972, 51.3917, 0.81", "-241.063, 92.9385, 51.2847, 0.81", "-241.224, 93.0594, 51.2593, 0.81", "-242.192, 93.6656, 51.0512, 0.81", "-242.379, 93.7427, 51.0107, 0.81", "-243.375, 93.9467, 50.8087, 0.81", "-243.444, 93.9511, 50.797, 0.81", "-244.46, 93.8447, 50.712, 0.81", "-244.677, 93.8074, 50.7127, 0.81", "-245.687, 93.6138, 50.7756, 0.81", "-246.275, 93.5783, 50.8099, 0.81", "-246.849, 93.6006, 50.8361, 0.81", "-247.884, 93.7666, 50.8455, 0.81", "-248.096, 93.8269, 50.8395, 0.81", "-249.452, 94.3534, 50.7502, 0.81", "-251.159, 95.2423, 50.5583, 0.81", "-251.311, 95.344, 50.5349, 0.81", "-251.895, 95.8154, 50.4045, 0.81", "-251.945, 95.8628, 50.3923, 0.81", "-252.202, 96.1268, 50.3436, 0.81", "-252.249, 96.1788, 50.3421, 0.81", "-253.057, 96.9827, 50.4585, 0.81", "-253.367, 97.1743, 50.5186, 0.81", "-254.394, 97.6452, 50.7602, 0.81", "-254.505, 97.6831, 50.7854, 0.81", "-255.196, 97.8639, 50.9414, 0.81", "-255.474, 97.9195, 51.0044, 0.81", "-257.609, 98.2426, 51.4891, 0.81", "-257.794, 98.2758, 51.5171, 0.81", "-258.953, 98.4928, 51.5982, 0.81", "-259.05, 98.5173, 51.6016, 0.81", "-260.476, 98.9632, 51.6106, 0.81", "-260.666, 99.0409, 51.6096, 0.81", "-262.394, 99.9785, 51.5594, 0.81", "-262.497, 100.04, 51.5566, 0.81", "-263.531, 100.716, 51.5353, 0.81", "-263.662, 100.801, 51.535, 0.81", "-264.325, 101.23, 51.5586, 0.81", "-264.51, 101.332, 51.5818, 0.81", "-265.296, 101.671, 51.7896, 0.81", "-265.644, 101.761, 51.8793, 0.81", "-266.087, 101.738, 51.9836, 0.81", "-266.416, 101.665, 52.0668, 0.81", "-266.89, 101.505, 52.1876, 0.81", "-266.954, 101.481, 52.2042, 0.81", "-267.79, 101.181, 52.5159, 0.81", "-268.712, 100.878, 52.9288, 0.81", "-269.052, 100.79, 53.0937, 0.81", "-270.418, 100.502, 53.7948, 0.81", "-270.645, 100.483, 53.9094, 0.81", "-272.472, 100.503, 54.8265, 0.81", "-272.641, 100.525, 54.9093, 0.81", "-274.286, 100.885, 55.691, 0.81", "-274.401, 100.918, 55.7419, 0.81", "-276.211, 101.584, 56.4997, 0.81", "-276.298, 101.621, 56.5272, 0.81", "-277.177, 102.058, 56.6981, 0.81", "-277.335, 102.142, 56.7179, 0.81", "-278.439, 102.745, 56.7498, 0.81", "-278.534, 102.792, 56.7467, 0.81", "-279.98, 103.375, 56.5806, 0.81", "-280.045, 103.398, 56.5703, 0.81", "-280.649, 103.623, 56.4619, 0.81", "-281.433, 103.943, 56.3082, 0.81", "-281.495, 103.975, 56.2962, 0.81", "-282.957, 104.884, 56.0888, 0.81", "-283.003, 104.922, 56.0877, 0.81", "-283.682, 105.58, 56.1362, 0.81", "-283.962, 105.899, 56.1872, 0.81", "-284.588, 106.707, 56.3605, 0.81", "-284.822, 107.034, 56.4429, 0.81", "-285.5, 108.069, 56.7559, 0.81", "-285.607, 108.235, 56.8082, 0.81", "-286.179, 109.131, 57.235, 0.81", "-286.3, 109.317, 57.3511, 0.81", "-286.976, 110.348, 58.1646, 0.81", "-287.058, 110.476, 58.2782, 0.81", "-287.504, 111.195, 58.9001, 0.81", "-288.448, 112.708, 60.1643, 0.81", "-288.576, 112.918, 60.3105, 0.81", "-289.644, 114.645, 61.3042, 0.81", "-289.69, 114.718, 61.3347, 0.81", "-290.649, 116.208, 61.7296, 0.81", "-290.714, 116.308, 61.7383, 0.81", "-291.783, 118.136, 61.6064, 0.81", "-291.846, 118.248, 61.5882, 0.81", "-292.458, 119.379, 61.2937, 0.81", "-292.492, 119.438, 61.2779, 0.81", "-293.152, 120.654, 60.965, 0.81", "-293.633, 121.482, 60.8147, 0.81", "-294.358, 122.66, 60.7019, 0.81", "-294.428, 122.758, 60.6924, 0.81", "-295.455, 124.081, 60.5554, 0.66", "-296.06, 124.825, 60.4781, 0.66", "-297.108, 125.986, 60.3557, 0.66", "-297.373, 126.257, 60.3313, 0.66", "-299.111, 128.045, 60.2945, 0.66", "-299.291, 128.218, 60.2858, 0.66", "-308.686, 130.128, 63.1309, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-142.315, 71.8412, 42.7544, 0.81", "-142.391, 72.6346, 41.6286, 0.81", "-142.432, 72.7105, 41.5312, 0.81", "-143.446, 73.7599, 40.307, 0.74", "-143.593, 73.8569, 40.2019, 0.74", "-144.255, 74.2577, 39.7717, 0.74", "-144.307, 74.2898, 39.7377, 0.74", "-145.243, 74.7896, 39.2044, 0.74", "-145.643, 75.006, 39.0205, 0.74", "-147.037, 75.7504, 38.5094, 0.74", "-147.153, 75.8271, 38.4589, 0.74", "-147.512, 76.1043, 38.28, 0.74", "-147.887, 76.4494, 38.0896, 0.74", "-148.816, 77.495, 37.5913, 0.74", "-148.974, 77.7008, 37.5061, 0.74", "-149.684, 78.7696, 37.1058, 0.74", "-149.875, 79.0631, 36.9863, 0.74", "-150.477, 80.0144, 36.6045, 0.74", "-150.621, 80.2639, 36.502, 0.74", "-151.154, 81.2496, 36.077, 0.74", "-151.209, 81.3471, 36.0338, 0.74", "-151.748, 82.1759, 35.607, 0.74", "-158.155, 88.2057, 30.8542, 0.74", "-164.104, 93.8672, 25.1489, 0.74", "-170.434, 99.0383, 19.387, 0.74", "-177.023, 105.038, 14.8498, 0.74", "-182.73, 111.155, 9.37056, 0.74", "-187.548, 118.25, 4.22841, 0.74", "-190.857, 124.861, -2.50511, 0.74", "-194.929, 132.13, -8.03481, 0.74", "-198.394, 139.536, -13.7923, 0.74", "-201.451, 146.743, -20.015, 0.74", "-206.347, 153.585, -25.4205, 0.74", "-210.666, 159.792, -31.9633, 0.74", "-214.177, 166.346, -38.6503, 0.74", "-218.379, 173.779, -43.8555, 0.74", "-222.878, 180.36, -49.8935, 0.74", "-225.6, 186.994, -56.863, 0.74", "-229.894, 193.069, -63.546, 0.74" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-304.346, -17.5372, 42.8683, 0.74", "-296.097, -17.3202, 48.5162, 0.74" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-304.346, -17.5372, 42.8683, 0.81", "-296.585, -13.0451, 38.4429, 0.74", "-287.915, -10.0086, 34.4903, 0.74", "-279.64, -6.62887, 30.0081, 0.74" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "73.776, -84.3194, 20.3233, 0.52", "74.4918, -84.377, 20.3459, 0.52", "75.8037, -84.4567, 20.4679, 0.52", "76.6215, -84.4639, 20.5703, 0.59", "77.7451, -84.4061, 20.8216, 0.44", "78.4132, -84.349, 21.0099, 0.44", "80.0028, -84.2055, 21.5069, 0.59", "80.0661, -84.1988, 21.536, 0.59", "80.779, -84.1558, 21.9668, 0.59", "81.9137, -84.1499, 22.7502, 0.59", "81.9889, -84.1551, 22.8033, 0.59", "82.7847, -84.2859, 23.2822, 0.59", "84.0939, -84.5208, 23.7874, 0.29", "84.7808, -84.6466, 23.9943, 0.52", "85.2838, -84.7533, 24.0986, 0.74", "86.2044, -84.9585, 24.2185, 0.96", "87.2156, -85.1787, 24.3162, 0.66", "89.4425, -85.6411, 24.6225, 0.66", "90.778, -85.9063, 24.8287, 0.66", "92.294, -86.2283, 25.1287, 0.66", "93.1315, -86.4267, 25.3572, 0.88", "93.7695, -86.593, 25.5791, 0.88", "95.9129, -87.2565, 26.4886, 0.88", "95.9979, -87.2854, 26.5303, 0.88", "97.2797, -87.7051, 27.151, 0.88", "98.6418, -88.1104, 27.7325, 0.66", "98.7062, -88.1278, 27.7535, 0.66", "99.5511, -88.3374, 27.9414, 0.81", "100.833, -88.6264, 28.0849, 0.81", "101.867, -88.8308, 28.1739, 0.59", "103.806, -89.1607, 28.2768, 0.59", "104.756, -89.3004, 28.2702, 0.59", "105.484, -89.3875, 28.2546, 0.81", "106.152, -89.4267, 28.2177, 0.81", "106.54, -89.4356, 28.1808, 0.81", "106.619, -89.4348, 28.17, 0.81", "107.553, -89.4318, 28.0096, 0.29", "108.268, -89.4652, 27.8644, 0.29", "109.202, -89.5479, 27.6729, 1.03", "109.815, -89.6289, 27.5484, 1.33", "110.534, -89.7719, 27.3835, 1.33", "111.35, -89.9731, 27.1901, 0.96", "112.209, -90.2337, 26.9653, 0.74", "113.156, -90.5421, 26.6936, 0.74", "113.342, -90.6051, 26.6327, 0.74", "114.514, -90.9539, 26.2111, 0.52", "114.985, -91.084, 26.0214, 0.52", "115.642, -91.251, 25.7494, 0.74", "116.392, -91.4213, 25.4863, 0.74", "117.436, -91.6244, 25.1844, 0.96", "118.296, -91.7757, 24.9999, 0.96", "118.957, -91.8876, 24.9689, 0.96", "119.684, -92.0169, 25.0127, 0.96", "120.764, -92.2043, 25.1928, 0.66", "121.618, -92.3552, 25.4069, 0.88", "122.417, -92.5018, 25.6913, 0.88", "124.128, -92.8368, 26.3951, 0.88", "124.217, -92.8549, 26.4356, 0.88", "124.994, -93.0373, 26.8359, 0.88", "125.054, -93.0529, 26.8679, 0.88", "125.964, -93.2782, 27.3477, 1.03", "126.355, -93.3656, 27.5287, 1.03", "126.429, -93.3834, 27.5543, 1.03", "127.558, -93.7061, 27.9198, 0.59", "128.115, -93.8821, 28.0907, 0.59", "128.87, -94.105, 28.2825, 0.59", "129.365, -94.2454, 28.3832, 0.81", "130.331, -94.5049, 28.5604, 0.59", "131.093, -94.692, 28.6765, 0.44", "131.239, -94.7207, 28.6904, 0.44", "132.253, -94.8885, 28.7974, 0.44", "132.332, -94.8982, 28.8062, 0.44", "132.834, -94.9241, 28.8603, 0.52", "132.904, -94.92, 28.866, 0.52", "133.503, -94.8452, 28.9232, 0.52", "133.582, -94.835, 28.9312, 0.52", "134.087, -94.7866, 28.9801, 0.74", "134.166, -94.7849, 28.9934, 0.74", "135.029, -94.8223, 29.1612, 0.74", "135.712, -94.8782, 29.3085, 0.74", "135.78, -94.8875, 29.3238, 0.74", "136.453, -95.0142, 29.4446, 0.88", "137.699, -95.2968, 29.6202, 0.52", "138.633, -95.5377, 29.7249, 0.52", "138.775, -95.5823, 29.7358, 0.52", "139.491, -95.8265, 29.7573, 0.37", "140.379, -96.1276, 29.7493, 0.59", "140.953, -96.2824, 29.7132, 0.59", "141.099, -96.3121, 29.6938, 0.59", "141.668, -96.3717, 29.6305, 0.59", "142.246, -96.379, 29.5836, 0.44", "142.769, -96.3191, 29.5618, 0.22", "143.929, -96.1086, 29.4309, 0.22", "143.997, -96.0954, 29.418, 0.22", "144.797, -95.9302, 29.2239, 0.22", "145.012, -95.8753, 29.1603, 0.66", "145.742, -95.6617, 28.9177, 1.03", "147.055, -95.2543, 28.4393, 1.11", "147.666, -95.0812, 28.2054, 0.52", "147.73, -95.0654, 28.1822, 0.52", "148.306, -94.9399, 27.982, 0.52", "149.12, -94.8315, 27.7531, 0.29", "149.199, -94.8363, 27.742, 0.29", "149.634, -94.9365, 27.7574, 0.29", "150.094, -95.1737, 27.7194, 0.52", "150.158, -95.2203, 27.708, 0.52", "150.704, -95.6948, 27.5737, 0.52", "151.325, -96.2502, 27.4024, 0.66", "151.378, -96.2932, 27.3878, 0.66", "152.278, -96.932, 27.1631, 0.52", "152.336, -96.9686, 27.1496, 0.52", "153.259, -97.507, 26.994, 0.52", "153.779, -97.8006, 26.9436, 1.03", "154.17, -98.0332, 26.9298, 1.25", "155.036, -98.5753, 26.9488, 0.88", "155.095, -98.6133, 26.9537, 0.88", "155.774, -99.0872, 26.9529, 0.29", "156.849, -99.9014, 26.8725, 0.29", "157.542, -100.442, 26.7719, 0.29", "158.055, -100.841, 26.6723, 0.59", "158.11, -100.883, 26.6596, 0.59", "159.324, -101.829, 26.3425, 0.44", "159.385, -101.876, 26.3235, 0.44", "160.037, -102.388, 26.1241, 0.44", "160.625, -102.862, 25.9641, 0.37", "161.408, -103.534, 25.8028, 0.37", "161.723, -103.817, 25.7533, 0.96", "161.774, -103.864, 25.7495, 0.96", "162.405, -104.352, 25.6896, 0.96", "162.521, -104.427, 25.6689, 0.96", "163.105, -104.749, 25.5358, 0.96", "164.065, -105.237, 25.2945, 0.52", "164.816, -105.611, 25.1034, 0.44", "166.173, -106.285, 24.7662, 0.44", "167.07, -106.701, 24.5359, 0.52", "167.395, -106.848, 24.4516, 0.52", "168.053, -107.125, 24.2807, 0.52", "168.623, -107.357, 24.1469, 0.66", "169.143, -107.619, 24.0044, 0.81" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "73.776, -84.3194, 20.3233, 0.88", "73.7814, -85.4318, 21.0312, 0.88", "73.7794, -85.4906, 21.0691, 0.88", "73.7836, -86.3265, 21.5382, 0.66", "73.9188, -87.7943, 22.2221, 0.96", "74.3181, -90.9443, 23.5633, 0.96", "74.6433, -92.4377, 24.1125, 0.66", "74.6646, -92.5105, 24.1379, 0.66", "75.3795, -94.2387, 24.8242, 0.66", "76.2474, -95.9562, 25.5396, 0.66", "76.2813, -96.0123, 25.5642, 0.66", "77.725, -98.0144, 26.372, 0.66", "77.8143, -98.1227, 26.425, 0.66", "79.7626, -100.374, 27.6781, 0.52", "80.5, -101.12, 28.2156, 0.52", "81.3414, -101.899, 28.8902, 1.11", "82.269, -102.629, 29.6103, 1.11", "82.3199, -102.658, 29.6482, 1.11", "83.0338, -102.967, 30.0709, 1.11", "84.3266, -103.237, 30.503, 0.81", "84.3832, -103.244, 30.5217, 0.81", "85.8173, -103.472, 30.9652, 0.52", "86.5284, -103.626, 31.2233, 0.52", "86.8333, -103.745, 31.3728, 0.52", "87.6693, -104.252, 31.9156, 0.52", "88.4182, -105.008, 32.5203, 0.88", "89.0405, -105.804, 33.1106, 0.88", "89.1114, -105.914, 33.1846, 0.88", "89.9622, -107.154, 33.9353, 0.88", "89.9956, -107.198, 33.9599, 0.88", "90.6365, -107.972, 34.3206, 0.59", "90.6897, -108.029, 34.3383, 0.59", "91.4166, -108.724, 34.5021, 0.59", "92.7592, -109.976, 34.5232, 0.59", "92.8693, -110.076, 34.5047, 0.59", "93.6467, -110.782, 34.3508, 0.81", "94.7035, -111.739, 34.0891, 0.88", "95.3297, -112.326, 33.9023, 0.88", "96.7153, -113.717, 33.3167, 0.96", "97.0152, -114.023, 33.123, 0.96" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "23.867, -179.867, 50.7686, 0.29", "23.4941, -180.66, 50.8009, 0.29", "22.9456, -181.575, 50.8852, 0.29", "22.4114, -182.388, 50.9763, 0.29", "22.3739, -182.447, 50.9859, 0.29", "21.8865, -183.256, 51.0932, 0.29", "21.454, -183.991, 51.1802, 0.29", "20.9055, -184.834, 51.3076, 0.29", "20.8685, -184.892, 51.3212, 0.29", "20.265, -185.859, 51.5641, 0.29", "19.7018, -186.86, 51.8119, 0.29", "19.6736, -186.922, 51.8269, 0.29", "19.3719, -187.702, 51.9903, 0.59", "19.0054, -188.725, 52.2566, 0.59", "13.7907, -197.258, 52.2455, 0.59", "8.40447, -205.494, 50.4696, 0.59", "4.98717, -214.89, 50.2617, 0.59", "3.72246, -224.726, 51.5475, 0.59", "0.0513508, -233.847, 53.374, 0.59", "-4.17229, -242.841, 54.4968, 0.59", "-7.09815, -252.311, 55.8218, 0.59", "-10.4634, -261.726, 55.6355, 0.59", "-12.6662, -271.32, 57.3982, 0.59", "-13.4413, -280.976, 59.8815, 0.59", "-13.207, -290.003, 64.1771, 0.59" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "23.867, -179.867, 50.7686, 0.29", "24.7699, -179.435, 50.7034, 0.29", "25.5733, -179.05, 50.6454, 0.29", "26.1333, -178.781, 50.605, 0.29", "26.5564, -178.579, 50.5744, 0.15", "26.6284, -178.544, 50.5692, 0.15", "27.4565, -178.147, 50.5094, 0.29", "35.925, -172.847, 50.952, 0.29", "44.5531, -167.805, 51.3082, 0.29", "52.0236, -161.433, 53.2022, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-15.7003, -345.74, 26.0172, 0.37", "-15.0423, -346.442, 26.325, 0.37", "-14.372, -347.167, 26.5031, 0.37", "-14.1752, -347.384, 26.5402, 0.74", "-13.309, -348.425, 26.5302, 0.44", "-12.9177, -348.933, 26.4075, 0.44", "-12.8707, -348.995, 26.3882, 0.44", "-12.1292, -350.046, 26.0065, 0.44", "-12.088, -350.11, 25.9809, 0.44", "-11.2678, -351.423, 25.385, 0.15", "-10.3335, -352.937, 24.6158, 0.15", "-9.81128, -353.856, 24.1736, 0.15", "-9.67273, -354.127, 24.0562, 0.59", "-9.2772, -355.11, 23.7179, 0.59", "-8.9229, -356.19, 23.4113, 0.15", "-8.91157, -356.268, 23.3982, 0.15", "-8.97467, -357.148, 23.3664, 0.74", "-9.08193, -357.718, 23.367, 0.74", "-9.45303, -358.946, 23.4067, 0.15", "-9.50789, -359.086, 23.4145, 0.15", "-10.2123, -360.743, 23.5282, 0.15", "-11.078, -362.733, 23.6535, 0.15", "-11.1414, -362.868, 23.6613, 0.15", "-12.1251, -364.903, 23.7719, 0.15", "-12.8089, -366.28, 23.8367, 0.15", "-13.6964, -368.075, 23.9134, 0.15", "-13.7409, -368.164, 23.9163, 0.15", "-14.1459, -368.972, 23.9163, 0.52", "-14.3752, -378.918, 22.9066, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-15.7003, -345.74, 26.0172, 0.37", "-16.2623, -346.359, 26.0059, 0.37", "-17.1323, -347.473, 25.9871, 0.29", "-17.1786, -347.538, 25.986, 0.29", "-17.7742, -348.496, 25.972, 0.29", "-17.8027, -348.549, 25.971, 0.29", "-17.9234, -348.813, 25.9658, 0.59", "-18.0528, -349.233, 25.9551, 0.88", "-18.071, -349.301, 25.9537, 0.88", "-18.2094, -349.718, 25.9461, 0.88", "-18.3764, -350.135, 25.9405, 0.29", "-18.9469, -351.434, 25.9199, 0.29", "-19.0959, -351.75, 25.9156, 0.74", "-19.5128, -352.593, 25.9106, 0.74", "-19.6128, -352.789, 25.9107, 1.11", "-19.6459, -352.851, 25.9111, 1.11", "-20.0271, -353.588, 25.9199, 0.59", "-20.4563, -354.594, 25.9322, 0.59", "-20.6939, -355.267, 25.9761, 0.88", "-20.9501, -356.09, 26.0574, 0.88", "-21.1755, -356.836, 26.1467, 0.22", "-21.3901, -357.527, 26.2443, 0.22", "-21.8156, -358.723, 26.4468, 0.22", "-22.3203, -359.844, 26.752, 0.74", "-22.5434, -360.236, 26.9051, 0.96", "-22.8208, -360.548, 27.1029, 0.44", "-23.1657, -360.773, 27.3411, 0.22", "-23.8455, -360.962, 27.7384, 0.22", "-25.2407, -361.054, 28.4465, 0.22", "-25.325, -361.048, 28.4836, 0.22", "-26.3005, -360.94, 28.9156, 0.22", "-26.373, -360.929, 28.9476, 0.22", "-27.4418, -360.758, 29.3958, 0.22", "-27.7377, -360.707, 29.5014, 0.44", "-28.05, -360.645, 29.5739, 0.44", "-29.2408, -360.348, 29.8049, 0.29", "-29.298, -360.333, 29.814, 0.29", "-29.7205, -360.205, 29.8743, 0.44", "-30.5748, -359.876, 29.9809, 0.22", "-31.6333, -359.416, 30.0814, 0.22", "-32.3978, -359.042, 30.1263, 0.52", "-32.8793, -358.801, 30.1282, 0.52", "-33.0722, -358.718, 30.1282, 0.52", "-33.7782, -358.455, 30.1282, 0.22", "-34.4551, -358.272, 30.1609, 0.22", "-34.5239, -358.26, 30.1676, 0.22", "-35.7796, -358.208, 30.3312, 0.22", "-36.4108, -358.22, 30.4248, 0.22", "-36.4797, -358.227, 30.4358, 0.22", "-37.3194, -358.344, 30.5775, 0.22", "-37.485, -358.367, 30.6079, 0.22", "-38.5776, -358.502, 30.8235, 0.22", "-38.6554, -358.508, 30.8415, 0.22", "-38.7237, -358.51, 30.8565, 0.74", "-39.2905, -358.533, 30.9501, 0.74", "-39.3604, -358.536, 30.9501, 0.74" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "176.2, -167.428, -94.4759, 0.66", "176.746, -168.426, -94.2248, 0.66", "177.313, -169.462, -93.9639, 0.29", "177.734, -170.231, -93.7703, 0.29", "178.273, -171.215, -93.5225, 0.29", "179.309, -173.107, -93.0461, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "176.2, -167.428, -94.4759, 1.03", "176.605, -167.154, -94.6217, 1.03", "177.664, -166.436, -95.0247, 0.37", "178.252, -166.047, -95.2501, 0.22", "179.059, -165.532, -95.5457, 0.44", "179.69, -165.192, -95.7603, 0.44", "179.742, -165.17, -95.7809, 0.44", "180.855, -164.779, -96.2878, 0.96", "180.999, -164.734, -96.3674, 0.96", "181.468, -164.629, -96.6625, 0.96", "182.593, -164.468, -97.415, 1.11", "183.82, -164.375, -98.2716, 0.37", "185.026, -164.358, -99.1376, 0.22", "186.012, -164.416, -99.8722, 0.22", "186.814, -164.539, -100.522, 0.22", "187.466, -164.764, -101.137, 1.18", "187.869, -164.974, -101.563, 0.59", "188.246, -165.321, -101.962, 0.29", "188.291, -165.407, -102.02, 0.29", "188.549, -166.422, -102.544, 0.29", "188.597, -167.191, -102.981, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-101.641, -232.93, -70.0719, 0.37", "-102.216, -233.095, -70.2711, 0.37", "-102.286, -233.113, -70.3038, 0.37", "-103.42, -233.44, -70.859, 0.37", "-104.119, -233.707, -71.2068, 0.88", "-104.754, -234.008, -71.5266, 1.18", "-105.586, -234.452, -71.946, 1.18", "-106.545, -235.08, -72.4642, 0.88", "-107.012, -235.494, -72.7529, 0.44", "-107.498, -236.236, -73.126, 0.44", "-107.681, -236.691, -73.2808, 0.66", "-107.717, -236.844, -73.3172, 0.66", "-107.826, -237.705, -73.4694, 0.66", "-107.899, -238.344, -73.5394, 0.22", "-108.037, -239.301, -73.6639, 0.22", "-108.06, -239.397, -73.6774, 0.37", "-108.086, -239.472, -73.688, 0.37", "-108.383, -240.131, -73.7726, 0.37", "-108.799, -240.752, -73.8383, 0.81", "-108.843, -240.806, -73.8451, 0.81", "-109.336, -241.373, -73.9378, 0.81", "-109.381, -241.425, -73.947, 0.81", "-109.729, -241.822, -74.0203, 0.59", "-110.185, -242.331, -74.1187, 0.96", "-110.934, -243.176, -74.2625, 0.44", "-111.305, -243.611, -74.3256, 0.88", "-111.538, -243.888, -74.3596, 0.88", "-111.583, -243.942, -74.3614, 0.88", "-111.859, -244.272, -74.345, 0.22", "-112.659, -245.129, -74.2346, 0.22", "-113.138, -245.574, -74.1422, 0.88", "-113.609, -245.982, -74.0524, 1.18", "-114.343, -246.585, -73.9146, 0.74", "-115.038, -247.149, -73.7877, 0.22", "-115.707, -247.711, -73.6758, 0.22", "-116.228, -248.152, -73.5708, 0.44", "-116.651, -248.53, -73.4768, 0.44", "-116.7, -248.579, -73.4653, 0.44", "-117.069, -248.987, -73.3894, 0.29", "-117.962, -250.063, -73.1821, 0.29", "-118.39, -250.6, -73.0801, 0.81", "-118.643, -250.877, -73.0302, 0.81", "-119.063, -251.281, -72.9616, 0.81", "-119.542, -251.674, -72.903, 0.29", "-120.279, -252.176, -72.8695, 0.37", "-120.622, -252.353, -72.8785, 0.37", "-121.644, -252.829, -72.9517, 0.15", "-121.935, -252.953, -72.9749, 0.96", "-122.642, -253.232, -73.0305, 0.96", "-123.369, -253.526, -73.0818, 0.22", "-124.881, -254.137, -73.19, 0.22", "-124.945, -254.165, -73.1953, 0.22", "-125.332, -254.35, -73.2317, 0.59", "-126.207, -254.793, -73.3159, 0.66", "-127.437, -255.505, -73.4224, 0.66", "-127.56, -255.59, -73.4302, 0.66", "-127.958, -255.931, -73.4629, 1.11", "-128.418, -256.324, -73.5293, 1.11", "-128.523, -256.415, -73.5515, 1.11", "-129.184, -256.879, -73.729, 0.66", "-129.576, -257.032, -73.8577, 0.66", "-129.641, -257.047, -73.879, 0.66", "-130.629, -257.166, -74.172, 0.29", "-130.73, -257.172, -74.2041, 0.29", "-131.824, -257.225, -74.5458, 0.29", "-132.702, -257.29, -74.811, 0.29", "-132.769, -257.298, -74.8298, 0.29", "-133.691, -257.508, -75.0525, 0.29", "-134.145, -257.676, -75.1186, 0.66", "-134.71, -257.937, -75.1639, 0.66", "-135.399, -258.322, -75.1715, 0.81", "-135.459, -258.357, -75.1696, 0.81", "-136.263, -258.83, -75.1392, 0.81", "-136.921, -259.225, -75.1076, 0.15", "-137.818, -259.752, -75.1155, 0.15", "-138.719, -260.271, -75.1826, 0.22", "-139.341, -260.629, -75.2595, 0.81", "-139.702, -260.84, -75.3184, 0.96", "-140.333, -261.198, -75.4428, 0.96", "-141.325, -261.747, -75.654, 0.22", "-142.41, -262.316, -75.9025, 0.22", "-142.792, -262.492, -75.9894, 1.03", "-143.33, -262.718, -76.1017, 1.03", "-144.281, -263.091, -76.311, 0.22", "-145.407, -263.533, -76.5548, 0.22", "-146.155, -263.821, -76.6928, 0.66", "-146.422, -263.913, -76.759, 0.81", "-146.915, -264.056, -76.9, 0.81", "-147.785, -264.231, -77.2891, 0.44", "-148.394, -264.339, -77.6087, 0.44", "-149.284, -264.454, -78.134, 0.37", "-150.15, -264.523, -78.6562, 0.96", "-150.937, -264.522, -79.1683, 0.96", "-152.589, -264.267, -80.3415, 1.18" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-101.641, -232.93, -70.0719, 0.52", "-101.286, -233.644, -70.3188, 0.52", "-100.616, -234.99, -70.785, 0.52", "-99.5542, -237.125, -71.5239, 0.37", "-99.203, -237.831, -71.7682, 0.37" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-116.594, -309.456, -75.6163, 0.74", "-117.037, -309.905, -75.7744, 0.74", "-118.46, -311.14, -76.0939, 0.22", "-118.943, -311.555, -76.1799, 0.74", "-119.553, -312.124, -76.2711, 0.74", "-119.602, -312.173, -76.2752, 0.74", "-119.92, -312.508, -76.2618, 0.22", "-121.007, -314.025, -75.9845, 0.22", "-121.236, -314.419, -75.8943, 0.88", "-121.654, -315.278, -75.6996, 0.88", "-121.963, -316.012, -75.5453, 1.03", "-122.403, -317.121, -75.3291, 0.22", "-123.835, -321.024, -74.6367, 0.22", "-123.976, -321.428, -74.573, 0.44", "-124.504, -322.828, -74.3981, 0.22", "-124.703, -323.314, -74.3553, 0.37", "-124.987, -323.984, -74.327, 0.22", "-125.351, -324.787, -74.3363, 0.22", "-125.993, -326.001, -74.3464, 0.22", "-126.782, -327.377, -74.3464, 0.22", "-127.03, -327.777, -74.3464, 0.81" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-116.594, -309.456, -75.6163, 0.22", "-115.632, -310.445, -75.6057, 0.22", "-113.597, -312.523, -75.5853, 0.22", "-113.541, -312.58, -75.583, 0.22", "-111.471, -314.658, -75.498, 0.22", "-111.372, -314.757, -75.4939, 0.44", "-110.138, -315.996, -75.4432, 0.22", "-110.09, -316.048, -75.4407, 0.22", "-109.527, -316.644, -75.4034, 0.52" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-229.894, 193.069, -63.546, 0.74", "-234.556, 200.34, -68.5859, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-229.894, 193.069, -63.546, 0.81", "-225.262, 185.668, -58.6714, 0.74" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "169.143, -107.619, 24.0044, 0.96", "169.761, -107.679, 24.0275, 0.96", "170.452, -107.727, 24.0951, 0.96", "170.531, -107.735, 24.1048, 0.96", "171.182, -107.8, 24.1916, 0.22", "171.923, -107.903, 24.2891, 0.22", "172.405, -107.983, 24.3479, 0.22", "172.887, -108.071, 24.3868, 0.66", "173.698, -108.23, 24.4277, 0.66", "173.777, -108.246, 24.4296, 0.66", "174.61, -108.425, 24.4037, 0.81", "175.347, -108.579, 24.3488, 1.11", "176.133, -108.733, 24.2673, 0.66", "177.006, -108.871, 24.139, 0.44", "177.658, -108.93, 24.0337, 0.44", "178.445, -108.972, 23.8687, 0.44", "179.303, -108.976, 23.6572, 0.44", "180.008, -108.955, 23.4333, 0.74", "180.734, -108.934, 23.1737, 0.96", "181.415, -108.932, 22.9152, 1.18", "182.435, -108.976, 22.5742, 0.52", "183.355, -109.094, 22.3252, 0.52", "184.461, -109.357, 22.0769, 0.52", "185.356, -109.66, 21.9262, 0.52", "186.345, -110.121, 21.8358, 0.52", "187.36, -110.717, 21.8144, 0.74", "188.182, -111.273, 21.8821, 0.74", "188.766, -111.755, 21.9469, 0.37", "188.813, -111.806, 21.9462, 0.37", "189.161, -112.342, 21.6899, 0.59", "189.15, -112.482, 21.3542, 0.59", "189.146, -112.506, 21.278, 0.59", "189.119, -112.734, 20.4334, 0.88", "189.123, -113.334, 18.31, 0.88", "189.186, -113.741, 16.992, 1.18", "189.536, -114.973, 13.1544, 1.47", "189.878, -115.861, 10.5009, 0.66", "190.179, -116.408, 8.90926, 0.52", "190.566, -116.921, 7.45473, 0.52", "191.098, -117.41, 6.20893, 0.52", "191.525, -117.718, 5.57553, 0.52", "191.584, -117.748, 5.53118, 0.52", "192.526, -118.022, 5.09601, 0.52", "192.592, -118.029, 5.0746, 0.52", "193.367, -117.998, 4.86411, 0.52", "193.981, -117.956, 4.7168, 0.74", "194.693, -117.955, 4.55342, 0.74", "195.484, -118.034, 4.37415, 0.29", "196.489, -118.272, 4.1675, 0.29", "197.142, -118.475, 4.04001, 0.74", "197.804, -118.737, 3.92579, 0.74", "198.243, -118.954, 3.84523, 0.74", "199.347, -119.633, 3.6398, 0.29", "200.39, -120.405, 3.45847, 0.29", "200.682, -120.654, 3.41093, 0.74", "201.14, -121.08, 3.34546, 0.74", "201.354, -121.287, 3.3234, 0.74", "202.073, -121.957, 3.29054, 0.37", "202.632, -122.424, 3.31031, 0.66", "203.131, -122.76, 3.33826, 1.03", "203.219, -122.819, 3.33753, 1.03", "203.884, -123.301, 3.28913, 1.03", "204.406, -123.705, 3.21708, 0.44", "205.318, -124.447, 3.03173, 0.44", "206.097, -125.124, 2.83319, 0.81", "207.134, -126.086, 2.51949, 0.37", "207.935, -126.885, 2.2134, 0.37", "208.145, -127.111, 2.11743, 0.22", "208.248, -127.221, 2.05081, 0.22", "208.914, -127.869, 1.54831, 0.22", "208.961, -127.906, 1.51278, 0.22", "209.641, -128.323, 1.05971, 1.11", "210.335, -128.736, 0.615064, 1.11", "211.828, -129.676, -0.178193, 0.22", "212.186, -129.925, -0.329418, 0.52", "212.505, -130.175, -0.428036, 0.52", "212.864, -130.472, -0.482703, 0.52", "213.646, -131.167, -0.456151, 0.22", "214.571, -132.017, -0.284398, 0.88", "215.17, -132.572, -0.0874486, 1.03", "215.476, -132.846, 0.00694085, 1.03", "215.906, -133.211, 0.0805615, 0.44", "215.968, -133.261, 0.0843775, 0.44", "216.731, -133.782, 0.00928706, 0.44", "217.417, -134.213, -0.155098, 0.29", "217.478, -134.243, -0.17118, 0.29", "219.093, -134.857, -0.597605, 0.29", "219.157, -134.878, -0.617429, 0.29", "220.187, -135.198, -0.989545, 0.29", "220.25, -135.216, -1.01528, 0.29", "221.142, -135.434, -1.4014, 0.59", "221.735, -135.579, -1.64999, 0.59", "222.549, -135.801, -1.98132, 0.22", "223.475, -136.161, -2.36452, 0.22", "223.475, -136.161, -2.36452, 0.44", "223.531, -136.193, -2.3909, 0.44", "224.021, -136.545, -2.65188, 0.44", "224.815, -137.158, -3.0651, 0.44", "225.324, -137.516, -3.25101, 0.44" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "169.143, -107.619, 24.0044, 0.29", "169.783, -108.808, 23.7463, 0.29", "170.206, -109.446, 23.5719, 0.15", "170.492, -109.879, 23.4536, 0.29", "170.895, -110.486, 23.2878, 0.29", "171.358, -111.185, 23.0968, 0.29", "171.401, -111.25, 23.079, 0.29", "171.988, -111.838, 22.8899, 0.81", "177.919, -119.71, 21.2006, 0.81", "184.222, -127.296, 19.5473, 0.81", "191.391, -134.265, 19.345, 0.81", "198.59, -141.198, 19.6738, 0.81", "205.488, -148.437, 19.7194, 0.81", "212.622, -155.368, 18.6807, 0.81", "219.851, -162.244, 19.3654, 0.81", "228.096, -167.882, 19.8416, 0.81", "236.736, -172.756, 21.0986, 0.81" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "97.0152, -114.023, 33.123, 0.22", "98.1731, -114.223, 33.4028, 0.22", "98.8401, -114.421, 34.1117, 0.22", "98.8806, -114.44, 34.1652, 0.22", "99.44, -114.785, 34.8838, 0.22", "100.144, -115.28, 35.7974, 0.74", "100.508, -115.56, 36.2547, 0.74", "101.995, -116.888, 38.3463, 0.29", "102.412, -117.324, 38.9301, 0.29", "102.942, -117.952, 39.5749, 0.29", "103.074, -118.131, 39.7115, 0.66", "103.436, -118.59, 39.9232, 0.96", "103.787, -118.972, 40.0193, 0.96", "104.401, -119.537, 40.0363, 0.96", "105.153, -120.156, 40.0646, 0.22", "105.241, -120.227, 40.0708, 0.22", "106.198, -121.026, 40.1578, 0.22", "107.059, -121.85, 40.2564, 0.22", "108.131, -123.091, 40.5422, 0.22", "108.173, -123.156, 40.562, 0.22", "108.528, -123.929, 40.9044, 0.81", "108.806, -124.682, 41.2921, 0.81", "109.109, -125.724, 41.8923, 0.81", "109.497, -127.324, 42.8983, 0.96", "109.8, -128.483, 43.6958, 0.96", "110.344, -129.922, 44.743, 0.22", "110.753, -130.686, 45.3522, 0.22", "110.975, -130.903, 45.5535, 0.52", "111.06, -130.943, 45.603, 0.52", "111.873, -131.154, 45.904, 0.52", "112.921, -131.337, 46.2309, 0.52", "113.055, -131.361, 46.2619, 0.52", "114.111, -131.613, 46.5016, 0.52", "115.5, -132.034, 46.7984, 0.52", "116.201, -132.3, 46.9186, 0.81", "116.941, -132.658, 47.0108, 0.81", "118.133, -133.322, 47.1121, 0.81", "119.442, -134.125, 47.1635, 0.81", "119.974, -134.496, 47.1527, 0.81", "120.84, -135.157, 47.0735, 0.59", "122.123, -136.224, 46.9439, 0.59", "122.231, -136.327, 46.9328, 0.59", "122.751, -136.894, 46.86, 0.66", "123.25, -137.495, 46.7537, 0.66", "124.072, -138.566, 46.5408, 0.66", "124.129, -138.644, 46.5214, 0.66", "124.918, -139.754, 46.1765, 0.66", "125.534, -140.565, 45.8954, 0.66", "126.184, -141.337, 45.5945, 0.59", "126.664, -141.837, 45.3831, 0.52", "127.366, -142.492, 45.0924, 0.74", "127.989, -142.999, 44.8683, 0.74", "128.595, -143.39, 44.7007, 0.74", "129.386, -143.812, 44.5641, 0.52", "130.117, -144.127, 44.4987, 0.52", "130.42, -144.236, 44.4855, 0.81", "130.495, -144.263, 44.4888, 0.81", "131.342, -144.58, 44.5514, 0.81", "131.414, -144.612, 44.5652, 0.81", "132.483, -145.181, 44.868, 0.81", "133.79, -145.997, 45.3304, 0.81", "134.784, -146.681, 45.7193, 0.59", "134.836, -146.722, 45.7418, 0.59", "136.054, -147.817, 46.3416, 0.29", "136.972, -148.829, 46.836, 0.29", "137.319, -149.33, 47.0448, 0.59", "137.642, -149.941, 47.2498, 0.96", "137.882, -150.501, 47.367, 0.96", "137.906, -150.565, 47.3774, 0.96", "138.409, -151.959, 47.4981, 0.81", "138.672, -152.737, 47.5817, 0.52", "138.699, -152.802, 47.5895, 0.52", "139.218, -153.938, 47.7461, 0.52", "139.668, -154.71, 47.8859, 0.66", "140.348, -155.609, 48.089, 0.29", "140.405, -155.663, 48.1042, 0.29", "141.003, -156.192, 48.2422, 0.29", "141.052, -156.24, 48.2523, 0.29", "141.61, -156.825, 48.3512, 0.44", "142.129, -157.547, 48.4246, 0.44", "142.527, -158.338, 48.4923, 0.29", "142.917, -159.454, 48.5665, 0.29", "143.195, -160.875, 48.6382, 0.29", "143.203, -160.944, 48.6406, 0.29", "143.248, -161.906, 48.6538, 0.29", "143.236, -162.196, 48.6585, 0.59", "143.203, -162.789, 48.6688, 0.59", "143.156, -163.663, 48.6834, 0.22", "143.152, -164.32, 48.6928, 0.22", "143.164, -164.95, 48.7018, 0.22", "143.252, -166.423, 48.7228, 0.22", "143.342, -168.063, 48.744, 0.22", "149.376, -175.615, 51.3032, 0.22", "155.023, -183.045, 54.896, 0.22", "159.935, -190.957, 58.5383, 0.22", "164.254, -199.534, 61.3309, 0.22", "169.992, -207.29, 63.9593, 0.22", "174.656, -216.098, 64.7708, 0.22", "179.754, -224.662, 63.9487, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "97.0152, -114.023, 33.123, 0.22", "97.3716, -114.948, 32.7894, 0.22", "97.764, -115.966, 32.422, 0.22", "98.0219, -116.635, 32.1806, 0.22", "102.091, -124.872, 28.2324, 0.22", "108.038, -132.217, 24.9647, 0.22", "114.406, -139.669, 22.9832, 0.22", "122.108, -145.269, 19.9317, 0.22", "129.799, -151.527, 18.6353, 0.22", "138.03, -157.141, 17.7795, 0.22", "145.331, -163.953, 18.3339, 0.22", "153.282, -169.987, 18.9338, 0.22", "160.974, -176.177, 20.526, 0.22", "168.586, -182.021, 23.3355, 0.22", "175.083, -189.057, 26.2149, 0.22", "180.486, -197.132, 28.5819, 0.22", "186.89, -203.993, 32.0335, 0.22", "193.082, -211.283, 34.9508, 0.22", "199.279, -219.024, 36.2434, 0.22", "204.659, -227.4, 37.1968, 0.22" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-39.3604, -358.536, 30.9501, 0.22", "-40.7082, -359.087, 31.8427, 0.22", "-41.4586, -359.393, 32.3396, 0.22", "-41.8326, -359.546, 32.5873, 0.59", "-48.5411, -363.245, 39.0148, 0.59" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-39.3604, -358.536, 30.9501, 0.22", "-40.2863, -358.413, 30.9334, 0.22", "-40.3656, -358.402, 30.932, 0.22", "-41.9966, -358.184, 30.9026, 0.22", "-42.7994, -358.077, 30.8881, 0.22", "-43.6021, -357.97, 30.8737, 0.22", "-53.5571, -357.597, 30.0018, 0.22" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-152.589, -264.267, -80.3415, 0.15", "-153.393, -264.895, -80.1926, 0.15", "-154.409, -265.688, -80.0046, 0.15", "-155.075, -266.208, -79.8814, 1.03", "-155.486, -266.529, -79.8053, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-152.589, -264.267, -80.3415, 0.66", "-154.133, -264.123, -80.5337, 0.66", "-155.759, -263.972, -80.7361, 0.15" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "225.324, -137.516, -3.25101, 0.22", "226.035, -138.497, -2.28078, 0.22", "226.275, -138.828, -1.95372, 0.22", "226.307, -138.872, -1.90996, 0.22", "229.21, -146.856, 3.36547, 0.22", "231.621, -155.945, 6.76802, 0.22", "235.383, -164.727, 9.72346, 0.22", "239.184, -173.402, 12.9321, 0.22" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "225.324, -137.516, -3.25101, 0.44", "225.557, -137.467, -3.37068, 0.44", "225.784, -137.418, -3.48789, 0.44", "225.995, -137.374, -3.59594, 0.44", "227.052, -137.149, -4.13993, 0.15", "227.254, -137.106, -4.2437, 0.66", "235.25, -133.669, -9.16811, 0.66", "244.241, -130.694, -12.3783, 0.66", "253.543, -127.913, -14.7756, 0.66", "261.954, -123.146, -17.3315, 0.66", "269.911, -117.213, -18.5527, 0.66", "278.103, -112.453, -21.7511, 0.66" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "204.659, -227.4, 37.1968, 0.59", "198.459, -219.562, 37.5656, 0.59" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "204.659, -227.4, 37.1968, 0.66", "210.838, -235.253, 36.8097, 0.59" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-155.486, -266.529, -79.8053, 0.29", "-156.31, -267.17, -79.612, 0.29", "-157.365, -267.86, -79.4226, 0.15", "-158.66, -268.63, -79.2261, 0.15", "-158.86, -268.743, -79.1985, 0.37", "-158.993, -268.811, -79.1838, 0.37", "-159.25, -268.942, -79.1555, 0.37", "-160.457, -269.428, -79.0783, 0.15", "-160.678, -269.493, -79.0783, 0.37", "-160.746, -269.511, -79.0783, 0.37", "-162.226, -269.915, -79.0783, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-155.486, -266.529, -79.8053, 0.44", "-156.279, -266.543, -79.7568, 0.44", "-157.316, -266.6, -79.8319, 0.44", "-158.064, -266.655, -79.9381, 0.66", "-158.142, -266.665, -79.9518, 0.66", "-159.062, -266.841, -80.1622, 0.81", "-159.494, -266.937, -80.2701, 0.81", "-160.543, -267.228, -80.6211, 0.22", "-160.67, -267.265, -80.6672, 0.22", "-161.933, -267.644, -81.1412, 0.22", "-162.663, -267.857, -81.4019, 1.03", "-163.202, -268.01, -81.586, 1.03", "-166.087, -268.802, -82.494, 0.22", "-166.747, -268.974, -82.6727, 0.66", "-166.814, -268.991, -82.6873, 0.66", "-167.597, -269.189, -82.8372, 0.22", "-167.732, -269.222, -82.8576, 0.22", "-168.324, -269.377, -82.9356, 0.59", "-168.685, -269.48, -82.9649, 0.59", "-172.005, -270.439, -83.2431, 0.22", "-172.676, -270.638, -83.2992, 0.96", "-173.029, -270.745, -83.3286, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "278.103, -112.453, -21.7511, 0.59", "270.168, -115.838, -16.6931, 0.59" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "278.103, -112.453, -21.7511, 0.66", "277.486, -114.429, -31.5347, 0.59" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_35", "dend_34", "dend_27", "dend_0", "dend_41", "dend_36", "dend_29", "dend_28", "dend_20", "dend_1", "dend_63", "dend_42", "dend_40", "dend_37", "dend_31", "dend_30", "dend_24", "dend_21", "dend_17", "dend_2", "dend_73", "dend_64", "dend_56", "dend_43", "dend_39", "dend_38", "dend_33", "dend_32", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_3", "dend_91", "dend_74", "dend_66", "dend_65", "dend_58", "dend_57", "dend_45", "dend_44", "dend_14", "dend_13", "dend_7", "dend_4", "dend_78", "dend_75", "dend_68", "dend_67", "dend_62", "dend_59", "dend_49", "dend_46", "dend_16", "dend_15", "dend_11", "dend_8", "dend_6", "dend_5", "dend_84", "dend_79", "dend_77", "dend_76", "dend_72", "dend_69", "dend_61", "dend_60", "dend_51", "dend_50", "dend_48", "dend_47", "dend_10", "dend_9", "dend_86", "dend_85", "dend_83", "dend_80", "dend_71", "dend_70", "dend_53", "dend_52", "dend_90", "dend_87", "dend_82", "dend_81", "dend_55", "dend_54", "dend_89", "dend_88" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_35", "dend_34", "dend_27", "dend_0", "dend_41", "dend_36", "dend_29", "dend_28", "dend_20", "dend_1", "dend_63", "dend_42", "dend_40", "dend_37", "dend_31", "dend_30", "dend_24", "dend_21", "dend_17", "dend_2", "dend_73", "dend_64", "dend_56", "dend_43", "dend_39", "dend_38", "dend_33", "dend_32", "dend_26", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_3", "dend_91", "dend_74", "dend_66", "dend_65", "dend_58", "dend_57", "dend_45", "dend_44", "dend_14", "dend_13", "dend_7", "dend_4", "dend_78", "dend_75", "dend_68", "dend_67", "dend_62", "dend_59", "dend_49", "dend_46", "dend_16", "dend_15", "dend_11", "dend_8", "dend_6", "dend_5", "dend_84", "dend_79", "dend_77", "dend_76", "dend_72", "dend_69", "dend_61", "dend_60", "dend_51", "dend_50", "dend_48", "dend_47", "dend_10", "dend_9", "dend_86", "dend_85", "dend_83", "dend_80", "dend_71", "dend_70", "dend_53", "dend_52", "dend_90", "dend_87", "dend_82", "dend_81", "dend_55", "dend_54", "dend_89", "dend_88" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "dend_89", "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_63", "dend_63", "dend_63", "dend_63", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_19", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_5", "dend_5", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_10", "dend_9", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_82", "dend_81", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_89", "dend_88" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_MC_6c575906a7_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_63, id: dend_63, parent: dend_41
create dend_63
public dend_63
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_1
create dend_17
public dend_17
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_73, id: dend_73, parent: dend_63
create dend_73
public dend_73
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_42
create dend_56
public dend_56
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_91, id: dend_91, parent: dend_73
create dend_91
public dend_91
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_78, id: dend_78, parent: dend_74
create dend_78
public dend_78
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_58
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_84, id: dend_84, parent: dend_78
create dend_84
public dend_84
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_86, id: dend_86, parent: dend_84
create dend_86
public dend_86
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_83, id: dend_83, parent: dend_79
create dend_83
public dend_83
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_90, id: dend_90, parent: dend_86
create dend_90
public dend_90
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_35, dend_34, dend_27, dend_0, dend_41, dend_36, dend_29, dend_28, dend_20, dend_1, dend_63, dend_42, dend_40, dend_37, dend_31, dend_30, dend_24, dend_21, dend_17, dend_2, dend_73, dend_64, dend_56, dend_43, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_3, dend_91, dend_74, dend_66, dend_65, dend_58, dend_57, dend_45, dend_44, dend_14, dend_13, dend_7, dend_4, dend_78, dend_75, dend_68, dend_67, dend_62, dend_59, dend_49, dend_46, dend_16, dend_15, dend_11, dend_8, dend_6, dend_5, dend_84, dend_79, dend_77, dend_76, dend_72, dend_69, dend_61, dend_60, dend_51, dend_50, dend_48, dend_47, dend_10, dend_9, dend_86, dend_85, dend_83, dend_80, dend_71, dend_70, dend_53, dend_52, dend_90, dend_87, dend_82, dend_81, dend_55, dend_54, dend_89, dend_88]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_35, dend_34, dend_27, dend_0, dend_41, dend_36, dend_29, dend_28, dend_20, dend_1, dend_63, dend_42, dend_40, dend_37, dend_31, dend_30, dend_24, dend_21, dend_17, dend_2, dend_73, dend_64, dend_56, dend_43, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_3, dend_91, dend_74, dend_66, dend_65, dend_58, dend_57, dend_45, dend_44, dend_14, dend_13, dend_7, dend_4, dend_78, dend_75, dend_68, dend_67, dend_62, dend_59, dend_49, dend_46, dend_16, dend_15, dend_11, dend_8, dend_6, dend_5, dend_84, dend_79, dend_77, dend_76, dend_72, dend_69, dend_61, dend_60, dend_51, dend_50, dend_48, dend_47, dend_10, dend_9, dend_86, dend_85, dend_83, dend_80, dend_71, dend_70, dend_53, dend_52, dend_90, dend_87, dend_82, dend_81, dend_55, dend_54, dend_89, dend_88]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_19, dend_18]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_39, dend_38]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[dend_89, dend_88]}
objref ModelViewParmSubset_7
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_85
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_73, dend_73, dend_73, dend_73, dend_73, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_5, dend_5, dend_5, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_10, dend_9, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_82, dend_81, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_89, dend_88]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_35(0), soma_0(0.4999998358611418)
    connect dend_34(0), soma_0(0.4999998358611418)
    connect dend_27(0), soma_0(0.4999998358611418)
    connect dend_0(0), soma_0(0.4999998358611418)
    connect axon_0(0), soma_0(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_63(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_73(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_91(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_78(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_62(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_84(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_86(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_83(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_90(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.29516, 12.7926, 0.0166014, 3.00072 ) }
    soma_0 { pt3dadd( -2.11379, 11.556, 0.0144082, 4.89776 ) }
    soma_0 { pt3dadd( -1.93242, 10.3195, 0.0122149, 5.88759 ) }
    soma_0 { pt3dadd( -1.75105, 9.08294, 0.0100217, 7.07793 ) }
    soma_0 { pt3dadd( -1.56968, 7.84638, 0.00782849, 8.02781 ) }
    soma_0 { pt3dadd( -1.38831, 6.60983, 0.00563526, 9.00197 ) }
    soma_0 { pt3dadd( -1.20695, 5.37327, 0.00344203, 9.87367 ) }
    soma_0 { pt3dadd( -1.02558, 4.13672, 0.0012488, 10.431 ) }
    soma_0 { pt3dadd( -0.844206, 2.90016, -9.44425E-4, 10.9219 ) }
    soma_0 { pt3dadd( -0.662836, 1.66361, -0.00313765, 11.0248 ) }
    soma_0 { pt3dadd( -0.481466, 0.427054, -0.00533088, 11.0557 ) }
    soma_0 { pt3dadd( -0.300096, -0.809501, -0.00752411, 10.707 ) }
    soma_0 { pt3dadd( -0.118727, -2.04606, -0.00971734, 10.6262 ) }
    soma_0 { pt3dadd( 0.0626432, -3.28261, -0.0119106, 10.4664 ) }
    soma_0 { pt3dadd( 0.244013, -4.51917, -0.0141038, 10.0039 ) }
    soma_0 { pt3dadd( 0.425383, -5.75572, -0.016297, 9.73748 ) }
    soma_0 { pt3dadd( 0.606753, -6.99228, -0.0184903, 9.19784 ) }
    soma_0 { pt3dadd( 0.788122, -8.22883, -0.0206835, 7.97004 ) }
    soma_0 { pt3dadd( 0.969492, -9.46539, -0.0228767, 6.149 ) }
    soma_0 { pt3dadd( 1.15086, -10.7019, -0.0250699, 4.05799 ) }
    soma_0 { pt3dadd( 1.33223, -11.9385, -0.0272632, 2.58608 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 21/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 2.14052, -11.6299, 8.57955, 4.49 ) }
    dend_35 { pt3dadd( 2.76486, -13.3132, 8.73806, 4.49 ) }
    dend_35 { pt3dadd( 3.17487, -14.4848, 8.88532, 4.05 ) }
    dend_35 { pt3dadd( 3.20673, -14.5785, 8.88305, 4.05 ) }
    dend_35 { pt3dadd( 3.71085, -16.0637, 8.74186, 3.68 ) }
    dend_35 { pt3dadd( 3.77218, -16.2568, 8.71482, 3.68 ) }
    dend_35 { pt3dadd( 4.11929, -17.4721, 8.52516, 3.24 ) }
    dend_35 { pt3dadd( 4.18268, -17.7603, 8.47108, 3.24 ) }
    dend_35 { pt3dadd( 4.59564, -19.9809, 8.02245, 3.02 ) }
    dend_35 { pt3dadd( 4.62413, -20.1848, 7.98085, 3.02 ) }
    dend_35 { pt3dadd( 4.76792, -21.8353, 7.62628, 2.73 ) }
    dend_35 { pt3dadd( 4.79532, -22.9816, 7.39342, 2.5 ) }
    dend_35 { pt3dadd( 4.73909, -24.4867, 7.11274, 2.21 ) }
    dend_35 { pt3dadd( 4.7229, -24.6341, 7.08976, 2.21 ) }
    dend_35 { pt3dadd( 4.58501, -25.3462, 7.02429, 2.21 ) }
    dend_35 { pt3dadd( 4.56056, -25.4408, 7.0082, 2.21 ) }
    dend_35 { pt3dadd( 4.18763, -26.5054, 6.72712, 2.21 ) }
    dend_35 { pt3dadd( 4.11921, -26.7039, 6.66161, 2.21 ) }
    dend_35 { pt3dadd( 3.67, -28.1294, 6.14691, 2.21 ) }
    dend_35 { pt3dadd( 3.65378, -28.2038, 6.12256, 2.21 ) }
    dend_35 { pt3dadd( 3.42827, -29.7896, 5.63694, 2.21 ) }
    dend_35 { pt3dadd( 3.41385, -30.001, 5.57773, 2.21 ) }
    dend_35 { pt3dadd( 3.39624, -31.5273, 5.17735, 2.21 ) }
    dend_35 { pt3dadd( 3.40231, -31.956, 5.0787, 2.21 ) }
    dend_35 { pt3dadd( 3.50227, -33.7646, 4.77198, 2.21 ) }
    dend_35 { pt3dadd( 3.54031, -34.2927, 4.68847, 2.21 ) }
    dend_35 { pt3dadd( 3.74142, -36.3173, 4.41332, 2.21 ) }
    dend_35 { pt3dadd( 3.75758, -36.4766, 4.39176, 2.21 ) }
    dend_35 { pt3dadd( 3.90046, -37.8523, 4.21206, 2.21 ) }
    dend_35 { pt3dadd( 3.98528, -38.6432, 4.10486, 2.21 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 51/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.95948, 13.2001, 0.0795549, 0.44 ) }
    dend_34 { pt3dadd( -2.83798, 15.6267, 1.66316, 0.44 ) }
    dend_34 { pt3dadd( -2.66135, 18.1762, 3.13053, 0.44 ) }
    dend_34 { pt3dadd( -2.48668, 20.3622, 4.29077, 0.44 ) }
    dend_34 { pt3dadd( -2.48098, 20.4253, 4.32059, 0.44 ) }
    dend_34 { pt3dadd( -2.37655, 21.5084, 4.80358, 0.44 ) }
    dend_34 { pt3dadd( -2.36701, 21.6051, 4.84663, 0.44 ) }
    dend_34 { pt3dadd( -2.23817, 22.6847, 5.15654, 0.44 ) }
    dend_34 { pt3dadd( -2.22837, 22.7618, 5.17524, 0.44 ) }
    dend_34 { pt3dadd( -2.06302, 24.0568, 5.73455, 0.44 ) }
    dend_34 { pt3dadd( -2.04393, 24.2235, 5.82371, 0.44 ) }
    dend_34 { pt3dadd( -1.93775, 25.1887, 6.42736, 0.44 ) }
    dend_34 { pt3dadd( -1.92706, 25.2877, 6.49434, 0.44 ) }
    dend_34 { pt3dadd( -1.77641, 26.5268, 7.5189, 0.44 ) }
    dend_34 { pt3dadd( -1.61386, 27.6873, 8.58634, 0.44 ) }
    dend_34 { pt3dadd( -1.58746, 27.8679, 8.75725, 0.44 ) }
    dend_34 { pt3dadd( -1.44825, 28.8035, 9.61083, 0.44 ) }
    dend_34 { pt3dadd( -1.43444, 28.9043, 9.69166, 0.44 ) }
    dend_34 { pt3dadd( -1.2337, 30.5272, 10.9001, 0.44 ) }
    dend_34 { pt3dadd( -1.22301, 30.6367, 10.9693, 0.44 ) }
    dend_34 { pt3dadd( -1.12972, 32.0033, 11.6954, 0.44 ) }
    dend_34 { pt3dadd( -1.12806, 32.2313, 11.7994, 0.44 ) }
    dend_34 { pt3dadd( -1.19983, 34.0113, 12.5058, 0.44 ) }
    dend_34 { pt3dadd( -1.215, 34.3307, 12.6337, 0.44 ) }
    dend_34 { pt3dadd( -1.30597, 36.0527, 13.2979, 0.44 ) }
    dend_34 { pt3dadd( -1.3101, 36.2294, 13.3732, 0.44 ) }
    dend_34 { pt3dadd( -1.31134, 37.541, 14.0062, 0.44 ) }
    dend_34 { pt3dadd( -1.30403, 37.7017, 14.0864, 0.44 ) }
    dend_34 { pt3dadd( -1.11657, 39.7044, 15.1541, 0.44 ) }
    dend_34 { pt3dadd( -1.04833, 40.1659, 15.4009, 0.44 ) }
    dend_34 { pt3dadd( -0.74033, 41.624, 16.2041, 0.44 ) }
    dend_34 { pt3dadd( -0.712414, 41.7367, 16.2625, 0.44 ) }
    dend_34 { pt3dadd( -0.29188, 43.1568, 16.9722, 0.44 ) }
    dend_34 { pt3dadd( -0.23815, 43.3478, 17.0523, 0.44 ) }
    dend_34 { pt3dadd( -0.099002, 43.8815, 17.2316, 0.52 ) }
    dend_34 { pt3dadd( -0.0340688, 44.151, 17.3167, 0.52 ) }
    dend_34 { pt3dadd( 0.496279, 46.5123, 17.9936, 0.52 ) }
    dend_34 { pt3dadd( 0.523834, 46.6441, 18.0277, 0.52 ) }
    dend_34 { pt3dadd( 0.957689, 48.9804, 18.5568, 0.52 ) }
    dend_34 { pt3dadd( 1.06868, 49.6297, 18.6836, 0.52 ) }
    dend_34 { pt3dadd( 1.16751, 50.275, 18.7806, 0.52 ) }
    dend_34 { pt3dadd( 1.33152, 51.5353, 18.8918, 0.52 ) }
    dend_34 { pt3dadd( 1.36211, 51.8236, 18.8937, 0.52 ) }
    dend_34 { pt3dadd( 1.44494, 52.8523, 18.8646, 0.59 ) }
    dend_34 { pt3dadd( 1.45851, 53.1412, 18.8439, 0.59 ) }
    dend_34 { pt3dadd( 1.5226, 54.4689, 18.7321, 0.59 ) }
    dend_34 { pt3dadd( 1.56942, 55.5924, 18.6302, 0.59 ) }
    dend_34 { pt3dadd( 1.56997, 55.6982, 18.62, 0.59 ) }
    dend_34 { pt3dadd( 1.56912, 56.6468, 18.5328, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_34 { pt3dadd( 1.57066, 56.7264, 18.5257, 0.59 ) }
    dend_34 { pt3dadd( 1.61925, 57.9808, 18.4243, 0.44 ) }
    dend_34 { pt3dadd( 1.62207, 58.0504, 18.4173, 0.44 ) }
    dend_34 { pt3dadd( 1.66873, 59.0025, 18.3129, 0.44 ) }
    dend_34 { pt3dadd( 1.65622, 59.4932, 18.2816, 0.44 ) }
    dend_34 { pt3dadd( 1.55262, 60.8111, 18.2567, 0.44 ) }
    dend_34 { pt3dadd( 1.53278, 60.9619, 18.2647, 0.44 ) }
    dend_34 { pt3dadd( 1.24554, 62.5787, 18.4572, 0.44 ) }
    dend_34 { pt3dadd( 1.18172, 62.9274, 18.5197, 0.44 ) }
    dend_34 { pt3dadd( 0.8522, 64.6573, 18.9318, 0.44 ) }
    dend_34 { pt3dadd( 0.77609, 65.0179, 19.0358, 0.44 ) }
    dend_34 { pt3dadd( 0.509955, 66.1937, 19.436, 0.44 ) }
    dend_34 { pt3dadd( 0.425887, 66.5539, 19.5664, 0.44 ) }
    dend_34 { pt3dadd( 0.151915, 67.7176, 20.0256, 0.44 ) }
    dend_34 { pt3dadd( 0.088927, 67.9974, 20.1274, 0.44 ) }
    dend_34 { pt3dadd( -0.179895, 69.3609, 20.5672, 0.44 ) }
    dend_34 { pt3dadd( -0.251823, 69.7274, 20.7022, 0.44 ) }
    dend_34 { pt3dadd( -0.543685, 71.2227, 21.3217, 0.44 ) }
    dend_34 { pt3dadd( -0.577213, 71.4067, 21.4042, 0.44 ) }
    dend_34 { pt3dadd( -0.765039, 72.5163, 21.9476, 0.44 ) }
    dend_34 { pt3dadd( -0.783778, 72.6988, 22.0377, 0.44 ) }
    dend_34 { pt3dadd( -0.807564, 74.1318, 22.7539, 0.44 ) }
    dend_34 { pt3dadd( -0.785828, 74.3582, 22.8592, 0.44 ) }
    dend_34 { pt3dadd( -0.514529, 75.6246, 23.403, 0.44 ) }
    dend_34 { pt3dadd( -0.466641, 75.808, 23.4697, 0.44 ) }
    dend_34 { pt3dadd( -0.119875, 76.9259, 23.7939, 0.44 ) }
    dend_34 { pt3dadd( -0.0301552, 77.2398, 23.854, 0.44 ) }
    dend_34 { pt3dadd( 0.222028, 78.2067, 23.9298, 0.44 ) }
    dend_34 { pt3dadd( 0.251241, 78.3431, 23.9419, 0.44 ) }
    dend_34 { pt3dadd( 0.359151, 78.9947, 24.0077, 0.44 ) }
    dend_34 { pt3dadd( 0.380252, 79.2122, 24.0329, 0.44 ) }
    dend_34 { pt3dadd( 0.426778, 80.3906, 24.1957, 0.44 ) }
    dend_34 { pt3dadd( 0.432722, 80.7627, 24.2534, 0.44 ) }
    dend_34 { pt3dadd( 0.422458, 81.9069, 24.4646, 0.44 ) }
    dend_34 { pt3dadd( 0.417108, 82.1309, 24.5072, 0.44 ) }
    dend_34 { pt3dadd( 0.368206, 82.998, 24.6653, 0.44 ) }
    dend_34 { pt3dadd( 0.274154, 84.3107, 24.895, 0.44 ) }
    dend_34 { pt3dadd( 0.266615, 84.3795, 24.9059, 0.44 ) }
    dend_34 { pt3dadd( 0.0360924, 86.017, 25.127, 0.44 ) }
    dend_34 { pt3dadd( -0.145189, 87.0151, 25.2288, 0.44 ) }
    dend_34 { pt3dadd( -0.501241, 88.7097, 25.3782, 0.44 ) }
    dend_34 { pt3dadd( -0.518263, 88.7876, 25.3841, 0.44 ) }
    dend_34 { pt3dadd( -0.818115, 90.1569, 25.476, 0.44 ) }
    dend_34 { pt3dadd( -0.868637, 90.5228, 25.4979, 0.44 ) }
    dend_34 { pt3dadd( -0.933452, 91.7466, 25.5593, 0.44 ) }
    dend_34 { pt3dadd( -0.917527, 92.0356, 25.5775, 0.44 ) }
    dend_34 { pt3dadd( -0.672686, 93.7167, 25.7079, 0.44 ) }
    dend_34 { pt3dadd( -0.623258, 93.9759, 25.7322, 0.44 ) }
    dend_34 { pt3dadd( -0.214106, 95.5879, 25.9201, 0.44 ) }
    dend_34 { pt3dadd( -0.161218, 95.7992, 25.9511, 0.44 ) }
    dend_34 { pt3dadd( 0.174848, 97.1333, 26.1883, 0.44 ) }
    dend_34 { pt3dadd( 0.245329, 97.4978, 26.2669, 0.44 ) }
    dend_34 { pt3dadd( 0.347122, 98.3646, 26.4875, 0.44 ) }
    dend_34 { pt3dadd( 0.351176, 98.4795, 26.522, 0.44 ) }
    dend_34 { pt3dadd( 0.302978, 99.2993, 26.8269, 0.44 ) }
    dend_34 { pt3dadd( 0.301807, 99.573, 26.9399, 0.44 ) }
    dend_34 { pt3dadd( 0.383414, 100.59, 27.4018, 0.44 ) }
    dend_34 { pt3dadd( 0.395621, 100.653, 27.4305, 0.44 ) }
    dend_34 { pt3dadd( 0.696103, 101.502, 27.8155, 0.44 ) }
    dend_34 { pt3dadd( 0.78954, 101.67, 27.888, 0.44 ) }
    dend_34 { pt3dadd( 1.52867, 102.663, 28.2968, 0.44 ) }
    dend_34 { pt3dadd( 1.85774, 103.059, 28.4457, 0.44 ) }
    dend_34 { pt3dadd( 2.29513, 103.541, 28.6068, 0.44 ) }
    dend_34 { pt3dadd( 2.78501, 104.101, 28.7691, 0.44 ) }
    dend_34 { pt3dadd( 3.51491, 104.955, 28.975, 0.44 ) }
    dend_34 { pt3dadd( 3.55394, 105.012, 28.9872, 0.44 ) }
    dend_34 { pt3dadd( 3.94949, 105.788, 29.144, 0.44 ) }
    dend_34 { pt3dadd( 4.00886, 106.073, 29.1974, 0.44 ) }
    dend_34 { pt3dadd( 4.01006, 106.728, 29.3028, 0.44 ) }
    dend_34 { pt3dadd( 3.98423, 106.975, 29.3392, 0.44 ) }
    dend_34 { pt3dadd( 3.80246, 108.217, 29.4937, 0.44 ) }
    dend_34 { pt3dadd( 3.77264, 108.434, 29.5178, 0.44 ) }
    dend_34 { pt3dadd( 3.56461, 110.424, 29.7111, 0.44 ) }
    dend_34 { pt3dadd( 3.46912, 111.675, 29.8173, 0.44 ) }
    dend_34 { pt3dadd( 3.46632, 111.745, 29.8224, 0.44 ) }
    dend_34 { pt3dadd( 3.45873, 113.578, 29.9361, 0.44 ) }
    dend_34 { pt3dadd( 3.47492, 113.976, 29.9566, 0.44 ) }
    dend_34 { pt3dadd( 3.65153, 115.825, 30.0478, 0.44 ) }
    dend_34 { pt3dadd( 3.69395, 116.055, 30.058, 0.44 ) }
    dend_34 { pt3dadd( 3.85934, 116.824, 30.0997, 0.44 ) }
    dend_34 { pt3dadd( 3.92175, 117.128, 30.1231, 0.44 ) }
    dend_34 { pt3dadd( 4.06296, 117.847, 30.1913, 0.44 ) }
    dend_34 { pt3dadd( 4.14381, 118.375, 30.2361, 0.44 ) }
    dend_34 { pt3dadd( 4.21814, 119.645, 30.3126, 0.44 ) }
    dend_34 { pt3dadd( 4.21953, 119.873, 30.3217, 0.44 ) }
    dend_34 { pt3dadd( 4.07779, 121.66, 30.3487, 0.44 ) }
    dend_34 { pt3dadd( 4.02827, 122.033, 30.3479, 0.44 ) }
    dend_34 { pt3dadd( 3.69554, 123.978, 30.311, 0.44 ) }
    dend_34 { pt3dadd( 3.36279, 125.644, 30.2545, 0.44 ) }
    dend_34 { pt3dadd( 3.32466, 125.832, 30.2467, 0.44 ) }
    dend_34 { pt3dadd( 2.99633, 127.611, 30.1602, 0.44 ) }
    dend_34 { pt3dadd( 2.96309, 127.828, 30.1498, 0.44 ) }
    dend_34 { pt3dadd( 2.88251, 128.783, 30.0655, 0.44 ) }
    dend_34 { pt3dadd( 2.88791, 129.175, 30.0121, 0.44 ) }
    dend_34 { pt3dadd( 3.03775, 130.224, 29.8237, 0.44 ) }
    dend_34 { pt3dadd( 3.10003, 130.537, 29.7554, 0.44 ) }
    dend_34 { pt3dadd( 3.27998, 131.431, 29.5228, 0.44 ) }
    dend_34 { pt3dadd( 3.47644, 133.107, 29.0406, 0.44 ) }
    dend_34 { pt3dadd( 3.47189, 133.174, 29.0208, 0.44 ) }
    dend_34 { pt3dadd( 3.33006, 133.797, 28.8424, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_34 { pt3dadd( 3.30245, 133.86, 28.8277, 0.44 ) }
    dend_34 { pt3dadd( 2.5688, 135.252, 28.5517, 0.44 ) }
    dend_34 { pt3dadd( 2.53503, 135.313, 28.5426, 0.44 ) }
    dend_34 { pt3dadd( 1.84102, 136.598, 28.4353, 0.44 ) }
    dend_34 { pt3dadd( 1.7696, 136.754, 28.4214, 0.44 ) }
    dend_34 { pt3dadd( 0.718199, 139.423, 28.1619, 0.44 ) }
    dend_34 { pt3dadd( 0.699423, 139.49, 28.1554, 0.44 ) }
    dend_34 { pt3dadd( 0.519272, 140.569, 28.0456, 0.44 ) }
    dend_34 { pt3dadd( 0.485672, 141.096, 27.9807, 0.44 ) }
    dend_34 { pt3dadd( 0.535646, 142.285, 27.8095, 0.44 ) }
    dend_34 { pt3dadd( 0.543511, 142.39, 27.7936, 0.44 ) }
    dend_34 { pt3dadd( 0.748838, 143.968, 27.5464, 0.44 ) }
    dend_34 { pt3dadd( 0.75461, 144.037, 27.5358, 0.44 ) }
    dend_34 { pt3dadd( 0.820154, 145.505, 27.309, 0.44 ) }
    dend_34 { pt3dadd( 0.830598, 145.995, 27.2395, 0.44 ) }
    dend_34 { pt3dadd( 0.828556, 147.197, 27.0973, 0.44 ) }
    dend_34 { pt3dadd( 0.851187, 147.855, 27.0518, 0.44 ) }
    dend_34 { pt3dadd( 0.921267, 148.805, 27.0182, 0.44 ) }
    dend_34 { pt3dadd( 0.954688, 149.13, 27.0068, 0.44 ) }
    dend_34 { pt3dadd( 1.08823, 150.168, 26.9818, 0.44 ) }
    dend_34 { pt3dadd( 1.1316, 150.449, 26.9709, 0.44 ) }
    dend_34 { pt3dadd( 1.40632, 152.035, 26.883, 0.44 ) }
    dend_34 { pt3dadd( 1.44624, 152.3, 26.8605, 0.44 ) }
    dend_34 { pt3dadd( 1.72072, 154.435, 26.6258, 0.44 ) }
    dend_34 { pt3dadd( 1.77156, 155.007, 26.5496, 0.44 ) }
    dend_34 { pt3dadd( 1.81772, 155.797, 26.4285, 0.44 ) }
    dend_34 { pt3dadd( 1.81824, 156.022, 26.3917, 0.44 ) }
    dend_34 { pt3dadd( 1.7543, 157.216, 26.1897, 0.44 ) }
    dend_34 { pt3dadd( 1.7406, 157.321, 26.1767, 0.44 ) }
    dend_34 { pt3dadd( 1.57346, 158.139, 26.1053, 0.44 ) }
    dend_34 { pt3dadd( 1.41125, 159.116, 26.027, 0.44 ) }
    dend_34 { pt3dadd( 1.23551, 160.331, 25.9406, 0.44 ) }
    dend_34 { pt3dadd( 1.20015, 160.559, 25.9279, 0.44 ) }
    dend_34 { pt3dadd( 0.953841, 162.177, 25.8682, 0.44 ) }
    dend_34 { pt3dadd( 0.944643, 162.257, 25.8656, 0.44 ) }
    dend_34 { pt3dadd( 0.86214, 163.91, 25.8237, 0.44 ) }
    dend_34 { pt3dadd( 0.861443, 163.98, 25.8171, 0.44 ) }
    dend_34 { pt3dadd( 0.881505, 164.908, 25.6684, 0.44 ) }
    dend_34 { pt3dadd( 0.883097, 165.278, 25.5923, 0.44 ) }
    dend_34 { pt3dadd( 0.905562, 166.281, 25.3051, 0.44 ) }
    dend_34 { pt3dadd( 0.89588, 166.781, 25.1381, 0.44 ) }
    dend_34 { pt3dadd( 0.792234, 168.018, 24.6347, 0.44 ) }
    dend_34 { pt3dadd( 0.730831, 169.068, 24.1787, 0.44 ) }
    dend_34 { pt3dadd( 0.728025, 169.143, 24.151, 0.44 ) }
    dend_34 { pt3dadd( 0.660214, 170.062, 23.8834, 0.44 ) }
    dend_34 { pt3dadd( 0.653427, 170.131, 23.8738, 0.44 ) }
    dend_34 { pt3dadd( 0.580458, 170.928, 23.933, 0.44 ) }
    dend_34 { pt3dadd( 0.55961, 171.482, 24.1015, 0.44 ) }
    dend_34 { pt3dadd( 0.540038, 172.956, 24.6753, 0.44 ) }
    dend_34 { pt3dadd( 0.530504, 173.147, 24.7436, 0.44 ) }
    dend_34 { pt3dadd( 0.459135, 173.84, 24.9587, 0.44 ) }
    dend_34 { pt3dadd( 0.427553, 174.128, 25.0289, 0.44 ) }
    dend_34 { pt3dadd( 0.282401, 174.919, 25.1551, 0.44 ) }
    dend_34 { pt3dadd( 0.202565, 175.206, 25.1603, 0.44 ) }
    dend_34 { pt3dadd( -0.175378, 176.24, 25.0348, 0.44 ) }
    dend_34 { pt3dadd( -0.599501, 177.217, 24.8785, 0.44 ) }
    dend_34 { pt3dadd( -0.630626, 177.279, 24.8668, 0.44 ) }
    dend_34 { pt3dadd( -1.15173, 178.213, 24.6856, 0.44 ) }
    dend_34 { pt3dadd( -1.50592, 178.839, 24.5817, 0.44 ) }
    dend_34 { pt3dadd( -1.75515, 179.3, 24.5227, 0.44 ) }
    dend_34 { pt3dadd( -1.78724, 179.362, 24.5177, 0.44 ) }
    dend_34 { pt3dadd( -2.07921, 179.972, 24.485, 0.44 ) }
    dend_34 { pt3dadd( -2.20241, 180.25, 24.4763, 0.44 ) }
    dend_34 { pt3dadd( -2.70453, 181.564, 24.4515, 0.44 ) }
    dend_34 { pt3dadd( -2.76648, 181.722, 24.4417, 0.44 ) }
    dend_34 { pt3dadd( -3.04643, 182.392, 24.3821, 0.44 ) }
    dend_34 { pt3dadd( -3.07691, 182.454, 24.3754, 0.44 ) }
    dend_34 { pt3dadd( -3.50134, 183.179, 24.3525, 0.44 ) }
    dend_34 { pt3dadd( -3.57701, 183.296, 24.3594, 0.44 ) }
    dend_34 { pt3dadd( -4.19224, 184.167, 24.4697, 0.44 ) }
    dend_34 { pt3dadd( -4.42027, 184.507, 24.55, 0.44 ) }
    dend_34 { pt3dadd( -4.99855, 185.4, 24.7849, 0.44 ) }
    dend_34 { pt3dadd( -5.80871, 186.656, 25.0705, 0.44 ) }
    dend_34 { pt3dadd( -6.41078, 187.586, 25.18, 0.44 ) }
    dend_34 { pt3dadd( -6.44374, 187.636, 25.1818, 0.44 ) }
    dend_34 { pt3dadd( -7.36488, 188.984, 25.081, 0.44 ) }
    dend_34 { pt3dadd( -7.81502, 189.644, 24.9471, 0.44 ) }
    dend_34 { pt3dadd( -8.48412, 190.555, 24.636, 0.44 ) }
    dend_34 { pt3dadd( -9.62097, 192.036, 23.9794, 0.44 ) }
    dend_34 { pt3dadd( -9.74589, 192.193, 23.9049, 0.44 ) }
    dend_34 { pt3dadd( -10.2997, 192.909, 23.5759, 0.44 ) }
    dend_34 { pt3dadd( -10.5454, 193.233, 23.433, 0.44 ) }
    dend_34 { pt3dadd( -11.2848, 194.313, 23.1143, 0.44 ) }
    dend_34 { pt3dadd( -11.7529, 195.106, 22.9764, 0.44 ) }
    dend_34 { pt3dadd( -11.8262, 195.259, 22.9635, 0.44 ) }
    dend_34 { pt3dadd( -12.195, 196.168, 22.9064, 0.44 ) }
    dend_34 { pt3dadd( -12.395, 196.725, 22.8868, 0.44 ) }
    dend_34 { pt3dadd( -12.607, 197.349, 22.8669, 0.44 ) }
    dend_34 { pt3dadd( -12.8174, 197.91, 22.8566, 0.44 ) }
    dend_34 { pt3dadd( -13.3357, 198.998, 22.856, 0.44 ) }
    dend_34 { pt3dadd( -13.4162, 199.143, 22.8647, 0.44 ) }
    dend_34 { pt3dadd( -13.8728, 199.849, 22.9423, 0.44 ) }
    dend_34 { pt3dadd( -13.9535, 199.976, 22.948, 0.44 ) }
    dend_34 { pt3dadd( -14.6573, 201.082, 22.9319, 0.44 ) }
    dend_34 { pt3dadd( -14.6844, 201.135, 22.9249, 0.44 ) }
    dend_34 { pt3dadd( -15.0262, 202.063, 22.6952, 0.44 ) }
    dend_34 { pt3dadd( -15.0812, 202.335, 22.6042, 0.44 ) }
    dend_34 { pt3dadd( -15.1724, 203.606, 22.0755, 0.44 ) }
    dend_34 { pt3dadd( -15.1721, 203.788, 21.9341, 0.44 ) }
    dend_34 { pt3dadd( -15.1179, 204.598, 21.1128, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_34 { pt3dadd( -15.1117, 204.698, 20.9978, 0.44 ) }
    dend_34 { pt3dadd( -15.0771, 205.32, 20.1866, 0.44 ) }
    dend_34 { pt3dadd( -15.069, 205.496, 19.954, 0.44 ) }
    dend_34 { pt3dadd( -14.9725, 207.424, 17.2386, 0.44 ) }
    dend_34 { pt3dadd( -14.9571, 207.519, 17.104, 0.44 ) }
    dend_34 { pt3dadd( -14.831, 207.947, 16.5034, 0.44 ) }
    dend_34 { pt3dadd( -14.8013, 208.011, 16.4239, 0.44 ) }
    dend_34 { pt3dadd( -14.548, 208.404, 16.0077, 0.44 ) }
    dend_34 { pt3dadd( -14.3692, 208.669, 15.8176, 0.44 ) }
    dend_34 { pt3dadd( -13.4252, 209.993, 15.2753, 0.44 ) }
    dend_34 { pt3dadd( -13.2243, 210.332, 15.0913, 0.44 ) }
    dend_34 { pt3dadd( -12.8081, 211.157, 14.5638, 0.44 ) }
    dend_34 { pt3dadd( -12.7654, 211.278, 14.4822, 0.44 ) }
    dend_34 { pt3dadd( -12.5814, 212.197, 13.8354, 0.44 ) }
    dend_34 { pt3dadd( -12.5912, 212.415, 13.695, 0.44 ) }
    dend_34 { pt3dadd( -12.9709, 213.822, 12.8596, 0.44 ) }
    dend_34 { pt3dadd( -12.9959, 213.884, 12.8382, 0.44 ) }
    dend_34 { pt3dadd( -13.4534, 214.791, 12.7246, 0.44 ) }
    dend_34 { pt3dadd( -13.508, 214.882, 12.7328, 0.44 ) }
    dend_34 { pt3dadd( -14.4077, 216.205, 13.1193, 0.44 ) }
    dend_34 { pt3dadd( -14.582, 216.434, 13.2173, 0.44 ) }
    dend_34 { pt3dadd( -15.7861, 217.888, 14.0406, 0.44 ) }
    dend_34 { pt3dadd( -15.8657, 217.967, 14.0822, 0.44 ) }
    dend_34 { pt3dadd( -16.8792, 218.831, 14.5131, 0.44 ) }
    dend_34 { pt3dadd( -17.0201, 218.945, 14.5697, 0.44 ) }
    dend_34 { pt3dadd( -17.6569, 219.406, 14.7897, 0.44 ) }
    dend_34 { pt3dadd( -17.7228, 219.449, 14.8049, 0.44 ) }
    dend_34 { pt3dadd( -19.7984, 220.573, 14.801, 0.44 ) }
    dend_34 { pt3dadd( -19.8922, 220.622, 14.7943, 0.44 ) }
    dend_34 { pt3dadd( -20.6854, 230.265, 17.3199, 0.44 ) }
    dend_34 { pt3dadd( -21.4294, 240.057, 19.2091, 0.44 ) }
    dend_34 { pt3dadd( -21.5994, 250.003, 20.2365, 0.44 ) }
    dend_34 { pt3dadd( -22.5256, 259.724, 22.3909, 0.44 ) }
    dend_34 { pt3dadd( -22.7525, 268.942, 26.2597, 0.44 ) }
    dend_34 { pt3dadd( -22.5695, 277.781, 30.9331, 0.44 ) }
    dend_34 { pt3dadd( -20.7859, 286.646, 35.204, 0.44 ) }
    dend_34 { pt3dadd( -20.714, 295.024, 40.6633, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 37/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.19948, 13.7301, 4.07955, 1.03 ) }
    dend_27 { pt3dadd( 0.174415, 14.3639, 4.09285, 1.03 ) }
    dend_27 { pt3dadd( 0.690381, 15.3181, 4.11927, 1.03 ) }
    dend_27 { pt3dadd( 0.7598, 15.4675, 4.13498, 1.03 ) }
    dend_27 { pt3dadd( 1.23238, 16.5649, 4.28503, 1.03 ) }
    dend_27 { pt3dadd( 1.38093, 16.8921, 4.34302, 1.03 ) }
    dend_27 { pt3dadd( 1.79179, 17.7675, 4.51701, 1.03 ) }
    dend_27 { pt3dadd( 1.94299, 18.0855, 4.59183, 1.03 ) }
    dend_27 { pt3dadd( 2.68122, 19.5276, 4.97828, 1.03 ) }
    dend_27 { pt3dadd( 2.90999, 19.9111, 5.08563, 1.03 ) }
    dend_27 { pt3dadd( 3.65122, 21.021, 5.41493, 1.03 ) }
    dend_27 { pt3dadd( 3.7816, 21.184, 5.46091, 1.03 ) }
    dend_27 { pt3dadd( 4.59173, 22.0107, 5.67973, 1.03 ) }
    dend_27 { pt3dadd( 4.81247, 22.1941, 5.72106, 1.03 ) }
    dend_27 { pt3dadd( 6.05161, 23.0589, 5.8697, 1.03 ) }
    dend_27 { pt3dadd( 6.11044, 23.0965, 5.87497, 1.03 ) }
    dend_27 { pt3dadd( 7.33914, 23.8269, 5.94717, 1.03 ) }
    dend_27 { pt3dadd( 7.88806, 24.1422, 5.97344, 1.03 ) }
    dend_27 { pt3dadd( 9.23603, 24.8948, 6.02498, 1.03 ) }
    dend_27 { pt3dadd( 9.42013, 25.0033, 6.03143, 1.03 ) }
    dend_27 { pt3dadd( 10.4826, 25.6656, 6.06386, 1.03 ) }
    dend_27 { pt3dadd( 11.0292, 26.0386, 6.07835, 1.03 ) }
    dend_27 { pt3dadd( 11.6163, 26.4823, 6.09086, 1.03 ) }
    dend_27 { pt3dadd( 11.8111, 26.6556, 6.08648, 1.03 ) }
    dend_27 { pt3dadd( 12.7198, 27.5772, 6.02781, 1.03 ) }
    dend_27 { pt3dadd( 13.1745, 28.0719, 5.98021, 1.03 ) }
    dend_27 { pt3dadd( 13.7406, 28.7542, 5.89652, 1.03 ) }
    dend_27 { pt3dadd( 13.932, 28.9971, 5.86262, 1.03 ) }
    dend_27 { pt3dadd( 14.7273, 30.0222, 5.70427, 1.03 ) }
    dend_27 { pt3dadd( 14.9162, 30.2538, 5.66985, 1.03 ) }
    dend_27 { pt3dadd( 15.1978, 30.5809, 5.6226, 1.03 ) }
    dend_27 { pt3dadd( 15.3114, 30.7004, 5.60866, 1.03 ) }
    dend_27 { pt3dadd( 15.9488, 31.3018, 5.55675, 1.03 ) }
    dend_27 { pt3dadd( 16.2267, 31.5488, 5.54351, 1.03 ) }
    dend_27 { pt3dadd( 17.6314, 32.7027, 5.52696, 1.03 ) }
    dend_27 { pt3dadd( 17.9657, 32.9658, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 19.1349, 33.8419, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 19.7945, 34.3264, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 20.0948, 34.5461, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 20.523, 34.861, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 21.249, 35.4213, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 21.7394, 35.8298, 5.52487, 1.03 ) }
    dend_27 { pt3dadd( 22.3969, 36.4387, 5.51115, 1.03 ) }
    dend_27 { pt3dadd( 22.6778, 36.7171, 5.50094, 1.03 ) }
    dend_27 { pt3dadd( 22.7973, 36.8313, 5.49435, 1.03 ) }
    dend_27 { pt3dadd( 24.2711, 38.2129, 5.39107, 0.88 ) }
    dend_27 { pt3dadd( 24.3846, 38.3107, 5.38299, 0.88 ) }
    dend_27 { pt3dadd( 25.4329, 39.1202, 5.31314, 0.88 ) }
    dend_27 { pt3dadd( 25.6197, 39.2361, 5.30536, 0.88 ) }
    dend_27 { pt3dadd( 26.7058, 39.8074, 5.28096, 0.88 ) }
    dend_27 { pt3dadd( 26.77, 39.834, 5.27242, 0.88 ) }
    dend_27 { pt3dadd( 27.6376, 40.0975, 5.08449, 0.88 ) }
    dend_27 { pt3dadd( 27.7781, 40.1393, 5.04313, 0.88 ) }
    dend_27 { pt3dadd( 29.0116, 40.5026, 4.60099, 1.03 ) }
    dend_27 { pt3dadd( 29.0822, 40.527, 4.57247, 1.03 ) }
    dend_27 { pt3dadd( 31.3384, 41.421, 3.55366, 1.03 ) }
    dend_27 { pt3dadd( 31.4213, 41.459, 3.51497, 1.03 ) }
    dend_27 { pt3dadd( 32.4272, 41.9877, 3.01507, 1.03 ) }
    dend_27 { pt3dadd( 32.7207, 42.1632, 2.87685, 1.03 ) }
    dend_27 { pt3dadd( 33.2921, 42.5482, 2.61784, 1.03 ) }
    dend_27 { pt3dadd( 33.491, 42.7012, 2.54708, 1.03 ) }
    dend_27 { pt3dadd( 34.4706, 43.5692, 2.33397, 1.03 ) }
    dend_27 { pt3dadd( 34.6955, 43.7909, 2.28983, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( 35.8568, 45.0452, 2.09794, 1.03 ) }
    dend_27 { pt3dadd( 35.9316, 45.1328, 2.08642, 1.03 ) }
    dend_27 { pt3dadd( 36.8453, 46.2899, 1.95354, 1.03 ) }
    dend_27 { pt3dadd( 37.1878, 46.7535, 1.90992, 1.03 ) }
    dend_27 { pt3dadd( 37.8231, 47.6719, 1.84934, 1.03 ) }
    dend_27 { pt3dadd( 38.0512, 48.0124, 1.83373, 1.03 ) }
    dend_27 { pt3dadd( 38.6751, 48.9931, 1.81376, 1.03 ) }
    dend_27 { pt3dadd( 38.8129, 49.1783, 1.81069, 1.03 ) }
    dend_27 { pt3dadd( 39.0657, 49.4511, 1.80555, 1.03 ) }
    dend_27 { pt3dadd( 39.3088, 49.6759, 1.80184, 1.03 ) }
    dend_27 { pt3dadd( 39.7645, 50.0263, 1.80184, 1.03 ) }
    dend_27 { pt3dadd( 39.9004, 50.1209, 1.80184, 1.03 ) }
    dend_27 { pt3dadd( 40.7805, 50.656, 1.80184, 1.03 ) }
    dend_27 { pt3dadd( 40.8995, 50.7294, 1.7956, 1.03 ) }
    dend_27 { pt3dadd( 41.6466, 51.2092, 1.72764, 1.03 ) }
    dend_27 { pt3dadd( 41.9861, 51.4555, 1.68131, 1.03 ) }
    dend_27 { pt3dadd( 42.4534, 51.8364, 1.59723, 1.03 ) }
    dend_27 { pt3dadd( 42.6028, 51.9943, 1.56329, 1.03 ) }
    dend_27 { pt3dadd( 43.2177, 52.7782, 1.396, 1.18 ) }
    dend_27 { pt3dadd( 43.3138, 52.9158, 1.36888, 1.18 ) }
    dend_27 { pt3dadd( 43.8746, 53.7829, 1.20694, 1.18 ) }
    dend_27 { pt3dadd( 44.0535, 54.0699, 1.16607, 1.18 ) }
    dend_27 { pt3dadd( 44.9774, 55.6187, 0.961107, 1.03 ) }
    dend_27 { pt3dadd( 45.014, 55.6777, 0.952549, 1.03 ) }
    dend_27 { pt3dadd( 45.5544, 56.5056, 0.82962, 1.03 ) }
    dend_27 { pt3dadd( 45.7399, 56.7498, 0.777122, 1.03 ) }
    dend_27 { pt3dadd( 47.2688, 58.5177, 0.269804, 0.88 ) }
    dend_27 { pt3dadd( 47.481, 58.7286, 0.188499, 0.88 ) }
    dend_27 { pt3dadd( 48.1544, 59.3165, -0.09889, 0.88 ) }
    dend_27 { pt3dadd( 48.2675, 59.4181, -0.153322, 0.88 ) }
    dend_27 { pt3dadd( 49.5772, 60.6015, -0.85321, 0.88 ) }
    dend_27 { pt3dadd( 49.7027, 60.737, -0.951126, 0.88 ) }
    dend_27 { pt3dadd( 50.8179, 62.244, -2.25674, 0.88 ) }
    dend_27 { pt3dadd( 50.8972, 62.3896, -2.38644, 0.88 ) }
    dend_27 { pt3dadd( 51.2465, 63.2743, -3.19513, 0.81 ) }
    dend_27 { pt3dadd( 51.2663, 63.3243, -3.23988, 0.81 ) }
    dend_27 { pt3dadd( 51.9299, 65.205, -4.91424, 0.81 ) }
    dend_27 { pt3dadd( 51.9919, 65.3582, -5.03124, 0.81 ) }
    dend_27 { pt3dadd( 52.4776, 66.3992, -5.66418, 0.81 ) }
    dend_27 { pt3dadd( 53.5134, 67.9906, -6.07839, 0.81 ) }
    dend_27 { pt3dadd( 54.5877, 69.3004, -5.95501, 0.81 ) }
    dend_27 { pt3dadd( 54.6253, 69.3456, -5.94315, 0.81 ) }
    dend_27 { pt3dadd( 56.3621, 71.3541, -5.07069, 0.81 ) }
    dend_27 { pt3dadd( 56.5722, 71.6427, -4.95082, 0.81 ) }
    dend_27 { pt3dadd( 57.089, 72.5201, -4.55748, 0.81 ) }
    dend_27 { pt3dadd( 57.1444, 72.7571, -4.53577, 0.81 ) }
    dend_27 { pt3dadd( 57.1084, 73.674, -4.95039, 0.81 ) }
    dend_27 { pt3dadd( 57.0834, 73.8708, -5.08913, 0.81 ) }
    dend_27 { pt3dadd( 56.8415, 75.1368, -6.23995, 0.81 ) }
    dend_27 { pt3dadd( 56.8196, 75.2678, -6.37584, 0.81 ) }
    dend_27 { pt3dadd( 56.6755, 76.293, -7.58057, 0.81 ) }
    dend_27 { pt3dadd( 56.6771, 76.4791, -7.8157, 0.81 ) }
    dend_27 { pt3dadd( 56.8423, 77.1772, -8.76391, 0.81 ) }
    dend_27 { pt3dadd( 56.9606, 77.3766, -9.06312, 0.81 ) }
    dend_27 { pt3dadd( 57.5058, 77.792, -9.81063, 0.81 ) }
    dend_27 { pt3dadd( 57.6348, 77.8474, -9.9302, 0.81 ) }
    dend_27 { pt3dadd( 58.7054, 78.0736, -10.6312, 0.81 ) }
    dend_27 { pt3dadd( 59.1505, 78.1376, -10.8817, 0.81 ) }
    dend_27 { pt3dadd( 59.8056, 78.1983, -11.1982, 0.81 ) }
    dend_27 { pt3dadd( 59.9386, 78.2227, -11.2574, 0.81 ) }
    dend_27 { pt3dadd( 60.8481, 78.5076, -11.645, 0.81 ) }
    dend_27 { pt3dadd( 61.0086, 78.5998, -11.7165, 0.81 ) }
    dend_27 { pt3dadd( 61.3641, 78.9504, -11.8943, 0.81 ) }
    dend_27 { pt3dadd( 61.534, 79.2087, -11.9843, 0.81 ) }
    dend_27 { pt3dadd( 62.0391, 80.2769, -12.2653, 0.81 ) }
    dend_27 { pt3dadd( 62.1548, 80.6183, -12.3487, 0.81 ) }
    dend_27 { pt3dadd( 62.3389, 81.397, -12.5389, 0.81 ) }
    dend_27 { pt3dadd( 62.371, 81.5275, -12.5744, 0.81 ) }
    dend_27 { pt3dadd( 62.6025, 82.4075, -12.8472, 0.74 ) }
    dend_27 { pt3dadd( 62.6444, 82.5447, -12.8995, 0.74 ) }
    dend_27 { pt3dadd( 63.0677, 83.556, -13.4079, 0.66 ) }
    dend_27 { pt3dadd( 63.2267, 83.7754, -13.5422, 0.66 ) }
    dend_27 { pt3dadd( 63.7224, 84.2425, -13.8737, 0.66 ) }
    dend_27 { pt3dadd( 63.8857, 84.3783, -13.9568, 0.66 ) }
    dend_27 { pt3dadd( 64.2623, 84.6422, -14.1004, 0.66 ) }
    dend_27 { pt3dadd( 64.7111, 84.9498, -14.111, 0.66 ) }
    dend_27 { pt3dadd( 65.757, 85.6639, -13.7993, 0.66 ) }
    dend_27 { pt3dadd( 65.9203, 85.7883, -13.7202, 0.66 ) }
    dend_27 { pt3dadd( 66.5379, 86.3029, -13.385, 0.66 ) }
    dend_27 { pt3dadd( 66.6729, 86.4192, -13.3397, 0.66 ) }
    dend_27 { pt3dadd( 68.1174, 87.6779, -13.3776, 0.66 ) }
    dend_27 { pt3dadd( 68.1756, 87.7297, -13.4387, 0.66 ) }
    dend_27 { pt3dadd( 68.6632, 88.1643, -14.4052, 0.66 ) }
    dend_27 { pt3dadd( 68.864, 88.4, -15.0375, 0.66 ) }
    dend_27 { pt3dadd( 69.5751, 89.4843, -18.2966, 0.66 ) }
    dend_27 { pt3dadd( 69.5857, 89.5086, -18.3721, 0.66 ) }
    dend_27 { pt3dadd( 69.6346, 89.7356, -19.0677, 0.66 ) }
    dend_27 { pt3dadd( 69.6358, 89.7581, -19.134, 0.66 ) }
    dend_27 { pt3dadd( 69.5862, 90.338, -20.6715, 0.66 ) }
    dend_27 { pt3dadd( 69.5834, 90.3777, -20.7547, 0.66 ) }
    dend_27 { pt3dadd( 69.5894, 90.8378, -21.5203, 0.66 ) }
    dend_27 { pt3dadd( 69.6495, 91.3377, -22.4359, 0.66 ) }
    dend_27 { pt3dadd( 69.6628, 91.3628, -22.4998, 0.66 ) }
    dend_27 { pt3dadd( 70.0546, 91.7194, -23.6447, 0.66 ) }
    dend_27 { pt3dadd( 70.1336, 91.7517, -23.7865, 0.66 ) }
    dend_27 { pt3dadd( 70.5216, 91.8476, -24.3642, 0.66 ) }
    dend_27 { pt3dadd( 70.6791, 91.8739, -24.5565, 0.66 ) }
    dend_27 { pt3dadd( 72.1422, 92.0512, -26.127, 0.66 ) }
    dend_27 { pt3dadd( 72.3929, 92.0897, -26.3735, 0.66 ) }
    dend_27 { pt3dadd( 73.1065, 92.217, -27.0058, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_27 { pt3dadd( 73.3083, 92.2848, -27.1679, 0.66 ) }
    dend_27 { pt3dadd( 73.9474, 92.6291, -27.6132, 0.66 ) }
    dend_27 { pt3dadd( 74.0028, 92.6737, -27.6498, 0.66 ) }
    dend_27 { pt3dadd( 74.4163, 93.229, -27.9298, 0.66 ) }
    dend_27 { pt3dadd( 74.4945, 93.4226, -28.0283, 0.66 ) }
    dend_27 { pt3dadd( 74.5355, 94.3235, -28.5241, 0.66 ) }
    dend_27 { pt3dadd( 74.4929, 94.5829, -28.6775, 0.66 ) }
    dend_27 { pt3dadd( 74.2559, 95.3899, -29.1751, 0.66 ) }
    dend_27 { pt3dadd( 74.0864, 95.82, -29.4501, 0.66 ) }
    dend_27 { pt3dadd( 73.5842, 96.7106, -30.0485, 0.66 ) }
    dend_27 { pt3dadd( 73.0819, 97.4094, -30.559, 0.66 ) }
    dend_27 { pt3dadd( 73.0452, 97.4462, -30.5891, 0.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 12/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -2.33948, 13.3801, 0.829555, 1.69 ) }
    dend_0 { pt3dadd( -2.16477, 13.7219, 1.49101, 1.69 ) }
    dend_0 { pt3dadd( -2.13148, 13.7915, 1.61969, 1.69 ) }
    dend_0 { pt3dadd( -1.64826, 14.7774, 3.46132, 1.69 ) }
    dend_0 { pt3dadd( -1.57098, 14.9246, 3.72297, 1.69 ) }
    dend_0 { pt3dadd( -1.25695, 15.4983, 4.70747, 1.69 ) }
    dend_0 { pt3dadd( -1.22004, 15.5631, 4.81398, 1.69 ) }
    dend_0 { pt3dadd( -0.813304, 16.2162, 5.86871, 1.69 ) }
    dend_0 { pt3dadd( -0.692451, 16.3998, 6.13384, 1.69 ) }
    dend_0 { pt3dadd( -0.461039, 16.7759, 6.57631, 1.69 ) }
    dend_0 { pt3dadd( -0.425751, 16.8377, 6.64515, 1.69 ) }
    dend_0 { pt3dadd( -0.345464, 16.9964, 6.90043, 2.06 ) }
    dend_0 { pt3dadd( -0.244345, 17.2179, 7.43969, 2.06 ) }
    dend_0 { pt3dadd( -0.241627, 17.2351, 7.50751, 2.06 ) }
    dend_0 { pt3dadd( -0.259119, 17.617, 9.34218, 2.06 ) }
    dend_0 { pt3dadd( -0.260936, 17.6278, 9.40117, 2.06 ) }
    dend_0 { pt3dadd( -0.367728, 18.0226, 11.8066, 2.06 ) }
    dend_0 { pt3dadd( -0.439943, 18.1867, 12.983, 2.06 ) }
    dend_0 { pt3dadd( -0.639264, 18.4739, 15.5624, 2.06 ) }
    dend_0 { pt3dadd( -0.64434, 18.4796, 15.6219, 2.06 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.33223, -11.9385, -0.0272632, 1.10069 ) }
    axon_0 { pt3dadd( 3.50904, -26.7797, -0.0272632, 1.10069 ) }
    axon_0 { pt3dadd( 5.68585, -41.6209, -0.0272632, 1.10069 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 35/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 3.98528, -38.6432, 4.10486, 2.65 ) }
    dend_41 { pt3dadd( 4.40696, -39.6603, 4.04586, 2.65 ) }
    dend_41 { pt3dadd( 4.99518, -41.0791, 3.96355, 2.65 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 3.98528, -38.6432, 4.10486, 0.74 ) }
    dend_36 { pt3dadd( 3.15366, -39.7055, 5.02507, 0.74 ) }
    dend_36 { pt3dadd( 2.86131, -40.0942, 5.48611, 0.74 ) }
    dend_36 { pt3dadd( 2.78622, -40.1973, 5.58522, 0.74 ) }
    dend_36 { pt3dadd( 2.34689, -40.7886, 6.16353, 0.74 ) }
    dend_36 { pt3dadd( 1.62738, -41.7278, 7.10966, 0.74 ) }
    dend_36 { pt3dadd( 0.834554, -42.6961, 8.14935, 0.74 ) }
    dend_36 { pt3dadd( 0.740861, -42.8123, 8.303, 0.74 ) }
    dend_36 { pt3dadd( 0.209352, -43.4819, 9.24919, 0.74 ) }
    dend_36 { pt3dadd( -0.340707, -44.1812, 10.2481, 0.74 ) }
    dend_36 { pt3dadd( -0.44655, -44.3125, 10.4218, 0.74 ) }
    dend_36 { pt3dadd( -1.06865, -45.1054, 11.2436, 0.74 ) }
    dend_36 { pt3dadd( -1.24548, -45.335, 11.435, 0.74 ) }
    dend_36 { pt3dadd( -1.71284, -45.9221, 11.8917, 0.74 ) }
    dend_36 { pt3dadd( -1.8238, -46.0382, 11.9812, 0.74 ) }
    dend_36 { pt3dadd( -2.65584, -46.7915, 12.4216, 0.74 ) }
    dend_36 { pt3dadd( -2.73126, -46.8475, 12.4529, 0.74 ) }
    dend_36 { pt3dadd( -3.5867, -47.364, 12.7305, 0.74 ) }
    dend_36 { pt3dadd( -3.97818, -47.554, 12.8451, 0.74 ) }
    dend_36 { pt3dadd( -5.22276, -48.0368, 13.1911, 0.74 ) }
    dend_36 { pt3dadd( -5.61153, -48.1542, 13.305, 0.74 ) }
    dend_36 { pt3dadd( -6.69201, -48.3811, 13.6311, 0.74 ) }
    dend_36 { pt3dadd( -6.99301, -48.4308, 13.7201, 0.74 ) }
    dend_36 { pt3dadd( -7.64622, -48.5057, 13.9096, 0.74 ) }
    dend_36 { pt3dadd( -7.74153, -48.5168, 13.9339, 0.74 ) }
    dend_36 { pt3dadd( -8.91619, -48.6527, 14.1718, 0.74 ) }
    dend_36 { pt3dadd( -9.50185, -48.7133, 14.2515, 0.74 ) }
    dend_36 { pt3dadd( -9.93858, -48.7547, 14.2854, 0.74 ) }
    dend_36 { pt3dadd( -10.2446, -48.7854, 14.3015, 0.74 ) }
    dend_36 { pt3dadd( -11.1464, -48.8788, 14.3313, 0.74 ) }
    dend_36 { pt3dadd( -11.4449, -48.9162, 14.3363, 0.74 ) }
    dend_36 { pt3dadd( -12.7594, -49.1185, 14.3363, 0.74 ) }
    dend_36 { pt3dadd( -13.1983, -49.195, 14.3363, 0.74 ) }
    dend_36 { pt3dadd( -13.7718, -49.3504, 14.3363, 0.74 ) }
    dend_36 { pt3dadd( -13.9794, -49.4232, 14.3363, 0.74 ) }
    dend_36 { pt3dadd( -14.6344, -49.8181, 14.3653, 0.74 ) }
    dend_36 { pt3dadd( -14.8798, -50.0255, 14.3872, 0.74 ) }
    dend_36 { pt3dadd( -15.2228, -50.4397, 14.4477, 0.74 ) }
    dend_36 { pt3dadd( -16.0611, -51.6424, 14.6587, 0.74 ) }
    dend_36 { pt3dadd( -16.1161, -51.7317, 14.6757, 0.74 ) }
    dend_36 { pt3dadd( -17.1357, -53.5002, 15.0344, 0.74 ) }
    dend_36 { pt3dadd( -17.2451, -53.6961, 15.075, 0.74 ) }
    dend_36 { pt3dadd( -17.7478, -54.5907, 15.2614, 0.74 ) }
    dend_36 { pt3dadd( -17.8688, -54.797, 15.3038, 0.74 ) }
    dend_36 { pt3dadd( -18.5117, -55.7328, 15.495, 0.74 ) }
    dend_36 { pt3dadd( -18.6064, -55.8473, 15.5156, 0.74 ) }
    dend_36 { pt3dadd( -19.4614, -56.5928, 15.6117, 0.74 ) }
    dend_36 { pt3dadd( -19.6806, -56.7433, 15.6259, 0.74 ) }
    dend_36 { pt3dadd( -20.384, -57.0799, 15.6386, 0.74 ) }
    dend_36 { pt3dadd( -20.9377, -57.2837, 15.6413, 0.74 ) }
    dend_36 { pt3dadd( -21.2181, -57.3578, 15.6399, 0.74 ) }
    dend_36 { pt3dadd( -21.7939, -57.4861, 15.6332, 0.74 ) }
    dend_36 { pt3dadd( -22.4433, -57.6035, 15.6218, 0.74 ) }
    dend_36 { pt3dadd( -23.3866, -57.7804, 15.6016, 0.74 ) }
    dend_36 { pt3dadd( -23.5325, -57.8151, 15.598, 0.74 ) }
    dend_36 { pt3dadd( -24.7558, -58.2131, 15.5633, 0.74 ) }
    dend_36 { pt3dadd( -24.8102, -58.2384, 15.562, 0.74 ) }
    dend_36 { pt3dadd( -25.6822, -58.7666, 15.5562, 0.74 ) }
    dend_36 { pt3dadd( -25.8166, -58.8705, 15.5617, 0.74 ) }
    dend_36 { pt3dadd( -26.369, -59.3682, 15.6127, 0.74 ) }
    dend_36 { pt3dadd( -26.596, -59.5791, 15.6409, 0.74 ) }
    dend_36 { pt3dadd( -27.4458, -60.4037, 15.7614, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_36 { pt3dadd( -27.606, -60.5478, 15.7921, 0.74 ) }
    dend_36 { pt3dadd( -28.6341, -61.421, 16.0391, 0.74 ) }
    dend_36 { pt3dadd( -28.7969, -61.5406, 16.089, 0.74 ) }
    dend_36 { pt3dadd( -29.9517, -62.2627, 16.51, 0.74 ) }
    dend_36 { pt3dadd( -30.118, -62.3587, 16.5744, 0.74 ) }
    dend_36 { pt3dadd( -31.0441, -62.8287, 16.9485, 0.74 ) }
    dend_36 { pt3dadd( -31.1528, -62.8893, 16.9861, 0.74 ) }
    dend_36 { pt3dadd( -31.9074, -63.339, 17.2154, 0.74 ) }
    dend_36 { pt3dadd( -31.9579, -63.3696, 17.2263, 0.74 ) }
    dend_36 { pt3dadd( -32.5154, -63.713, 17.3086, 0.74 ) }
    dend_36 { pt3dadd( -32.6862, -63.8196, 17.3309, 0.74 ) }
    dend_36 { pt3dadd( -34.0482, -64.7127, 17.4367, 0.74 ) }
    dend_36 { pt3dadd( -34.2386, -64.8422, 17.4526, 0.74 ) }
    dend_36 { pt3dadd( -35.0242, -65.3896, 17.5224, 0.74 ) }
    dend_36 { pt3dadd( -35.2284, -65.5114, 17.5632, 0.74 ) }
    dend_36 { pt3dadd( -36.1206, -65.9781, 17.7657, 0.74 ) }
    dend_36 { pt3dadd( -36.1739, -66.0043, 17.7742, 0.74 ) }
    dend_36 { pt3dadd( -36.9835, -66.3729, 17.847, 0.74 ) }
    dend_36 { pt3dadd( -37.0768, -66.4238, 17.8462, 0.74 ) }
    dend_36 { pt3dadd( -38.522, -67.3421, 17.6895, 0.74 ) }
    dend_36 { pt3dadd( -39.2213, -67.8686, 17.5494, 0.74 ) }
    dend_36 { pt3dadd( -39.9833, -68.5409, 17.3158, 0.74 ) }
    dend_36 { pt3dadd( -40.1784, -68.7571, 17.2506, 0.74 ) }
    dend_36 { pt3dadd( -40.7909, -69.6375, 17.0197, 0.74 ) }
    dend_36 { pt3dadd( -40.8357, -69.7244, 17.0043, 0.74 ) }
    dend_36 { pt3dadd( -41.1187, -70.5562, 16.926, 0.74 ) }
    dend_36 { pt3dadd( -41.1858, -70.7737, 16.9395, 0.74 ) }
    dend_36 { pt3dadd( -41.4358, -71.6062, 17.0745, 0.74 ) }
    dend_36 { pt3dadd( -41.4998, -71.832, 17.1172, 0.74 ) }
    dend_36 { pt3dadd( -41.6491, -72.4277, 17.2563, 0.74 ) }
    dend_36 { pt3dadd( -41.6874, -72.5642, 17.3119, 0.74 ) }
    dend_36 { pt3dadd( -41.8104, -72.9341, 17.5304, 0.52 ) }
    dend_36 { pt3dadd( -41.9595, -73.2166, 17.7172, 0.52 ) }
    dend_36 { pt3dadd( -42.3348, -73.7442, 18.0872, 0.52 ) }
    dend_36 { pt3dadd( -42.4557, -73.8833, 18.1713, 0.52 ) }
    dend_36 { pt3dadd( -43.628, -74.9669, 18.6761, 0.52 ) }
    dend_36 { pt3dadd( -43.7518, -75.0459, 18.6907, 0.52 ) }
    dend_36 { pt3dadd( -45.1453, -75.7253, 18.6348, 0.52 ) }
    dend_36 { pt3dadd( -45.551, -75.8876, 18.5833, 0.52 ) }
    dend_36 { pt3dadd( -46.2922, -76.1351, 18.4576, 0.52 ) }
    dend_36 { pt3dadd( -46.6007, -76.2265, 18.4089, 0.52 ) }
    dend_36 { pt3dadd( -47.964, -76.5766, 18.151, 0.52 ) }
    dend_36 { pt3dadd( -48.0408, -76.5957, 18.1391, 0.52 ) }
    dend_36 { pt3dadd( -49.4352, -76.9448, 17.9837, 0.52 ) }
    dend_36 { pt3dadd( -49.6178, -76.995, 17.9676, 0.52 ) }
    dend_36 { pt3dadd( -50.975, -77.3934, 17.867, 0.52 ) }
    dend_36 { pt3dadd( -51.4238, -77.5549, 17.8351, 0.52 ) }
    dend_36 { pt3dadd( -52.4584, -78.0066, 17.7604, 0.52 ) }
    dend_36 { pt3dadd( -52.6431, -78.1041, 17.7514, 0.52 ) }
    dend_36 { pt3dadd( -53.7871, -78.8291, 17.7322, 0.52 ) }
    dend_36 { pt3dadd( -53.8697, -78.896, 17.7352, 0.52 ) }
    dend_36 { pt3dadd( -54.7521, -79.8337, 17.8494, 0.52 ) }
    dend_36 { pt3dadd( -54.9176, -80.0351, 17.8969, 0.52 ) }
    dend_36 { pt3dadd( -55.4714, -80.8132, 18.1516, 0.52 ) }
    dend_36 { pt3dadd( -55.6124, -81.017, 18.229, 0.52 ) }
    dend_36 { pt3dadd( -56.1091, -81.7795, 18.5614, 0.52 ) }
    dend_36 { pt3dadd( -56.1405, -81.8267, 18.5811, 0.52 ) }
    dend_36 { pt3dadd( -56.5935, -82.4723, 18.8578, 0.52 ) }
    dend_36 { pt3dadd( -56.7329, -82.6114, 18.925, 0.52 ) }
    dend_36 { pt3dadd( -57.0116, -82.8169, 19.0373, 0.52 ) }
    dend_36 { pt3dadd( -57.1029, -82.8685, 19.055, 0.52 ) }
    dend_36 { pt3dadd( -57.8328, -83.1828, 19.105, 0.52 ) }
    dend_36 { pt3dadd( -58.1895, -83.312, 19.0807, 0.52 ) }
    dend_36 { pt3dadd( -59.5565, -83.7115, 18.8097, 0.52 ) }
    dend_36 { pt3dadd( -59.6215, -83.7259, 18.788, 0.52 ) }
    dend_36 { pt3dadd( -60.906, -83.9352, 18.183, 0.52 ) }
    dend_36 { pt3dadd( -60.9659, -83.9422, 18.1476, 0.52 ) }
    dend_36 { pt3dadd( -61.6616, -83.9874, 17.651, 0.52 ) }
    dend_36 { pt3dadd( -61.8904, -84.0052, 17.4726, 0.52 ) }
    dend_36 { pt3dadd( -62.7006, -84.0748, 16.7865, 0.52 ) }
    dend_36 { pt3dadd( -63.1661, -84.1222, 16.4471, 0.52 ) }
    dend_36 { pt3dadd( -63.502, -84.1616, 16.2519, 0.52 ) }
    dend_36 { pt3dadd( -63.637, -84.188, 16.1864, 0.52 ) }
    dend_36 { pt3dadd( -64.4278, -84.4247, 15.9019, 0.52 ) }
    dend_36 { pt3dadd( -64.5557, -84.4735, 15.8723, 0.52 ) }
    dend_36 { pt3dadd( -65.072, -84.7062, 15.8317, 0.52 ) }
    dend_36 { pt3dadd( -65.1627, -84.7459, 15.8321, 0.52 ) }
    dend_36 { pt3dadd( -65.9795, -85.0882, 15.8628, 0.52 ) }
    dend_36 { pt3dadd( -66.2695, -85.2, 15.8775, 0.52 ) }
    dend_36 { pt3dadd( -66.6171, -85.3209, 15.9008, 0.52 ) }
    dend_36 { pt3dadd( -67.113, -85.4975, 15.9438, 0.52 ) }
    dend_36 { pt3dadd( -67.8092, -85.7482, 16.0137, 0.52 ) }
    dend_36 { pt3dadd( -68.0143, -85.8258, 16.0318, 0.52 ) }
    dend_36 { pt3dadd( -68.7248, -86.1035, 16.0862, 0.52 ) }
    dend_36 { pt3dadd( -68.8945, -86.193, 16.095, 0.52 ) }
    dend_36 { pt3dadd( -69.469, -86.5931, 16.1044, 0.52 ) }
    dend_36 { pt3dadd( -69.7373, -86.8506, 16.0951, 0.52 ) }
    dend_36 { pt3dadd( -70.165, -87.3762, 16.1137, 0.52 ) }
    dend_36 { pt3dadd( -70.2193, -87.4488, 16.1306, 0.52 ) }
    dend_36 { pt3dadd( -70.7432, -88.2023, 16.3953, 0.52 ) }
    dend_36 { pt3dadd( -70.8421, -88.3356, 16.4539, 0.52 ) }
    dend_36 { pt3dadd( -71.223, -88.8161, 16.7033, 0.52 ) }
    dend_36 { pt3dadd( -71.8209, -89.4816, 17.008, 0.52 ) }
    dend_36 { pt3dadd( -73.2934, -90.9406, 17.6016, 0.52 ) }
    dend_36 { pt3dadd( -73.4768, -91.093, 17.6435, 0.52 ) }
    dend_36 { pt3dadd( -74.3659, -91.7071, 17.7181, 0.52 ) }
    dend_36 { pt3dadd( -74.5039, -91.7907, 17.7091, 0.52 ) }
    dend_36 { pt3dadd( -76.0693, -92.6038, 17.3793, 0.52 ) }
    dend_36 { pt3dadd( -76.326, -92.7112, 17.311, 0.52 ) }
    dend_36 { pt3dadd( -77.2533, -92.9927, 17.0282, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( -77.3939, -93.0296, 17.0022, 0.52 ) }
    dend_36 { pt3dadd( -78.2572, -93.2273, 16.9657, 0.52 ) }
    dend_36 { pt3dadd( -78.3841, -93.2554, 16.9656, 0.52 ) }
    dend_36 { pt3dadd( -80.0418, -93.6036, 17.1179, 0.52 ) }
    dend_36 { pt3dadd( -80.1003, -93.617, 17.1202, 0.52 ) }
    dend_36 { pt3dadd( -80.9715, -93.8306, 17.0735, 0.52 ) }
    dend_36 { pt3dadd( -81.2787, -93.9192, 17.0071, 0.52 ) }
    dend_36 { pt3dadd( -82.7781, -94.4335, 16.3698, 0.52 ) }
    dend_36 { pt3dadd( -82.9496, -94.5254, 16.2456, 0.52 ) }
    dend_36 { pt3dadd( -83.3614, -94.826, 15.81, 0.52 ) }
    dend_36 { pt3dadd( -83.6102, -95.044, 15.5155, 0.52 ) }
    dend_36 { pt3dadd( -84.0179, -95.4639, 14.9691, 0.52 ) }
    dend_36 { pt3dadd( -84.1216, -95.5939, 14.8401, 0.52 ) }
    dend_36 { pt3dadd( -84.952, -96.7932, 13.945, 0.52 ) }
    dend_36 { pt3dadd( -85.1326, -97.0531, 13.7729, 0.52 ) }
    dend_36 { pt3dadd( -85.4854, -97.5488, 13.4865, 0.52 ) }
    dend_36 { pt3dadd( -85.6015, -97.6872, 13.4213, 0.52 ) }
    dend_36 { pt3dadd( -86.7143, -98.7964, 13.0637, 0.52 ) }
    dend_36 { pt3dadd( -86.8368, -98.8997, 13.0433, 0.52 ) }
    dend_36 { pt3dadd( -87.4198, -99.3228, 13.0146, 0.52 ) }
    dend_36 { pt3dadd( -87.6186, -99.4579, 13.0113, 0.52 ) }
    dend_36 { pt3dadd( -88.7532, -100.167, 13.0135, 0.52 ) }
    dend_36 { pt3dadd( -90.2648, -101.066, 13.1037, 0.52 ) }
    dend_36 { pt3dadd( -90.7913, -101.349, 13.1588, 0.52 ) }
    dend_36 { pt3dadd( -90.9879, -101.465, 13.1915, 0.52 ) }
    dend_36 { pt3dadd( -91.2411, -101.629, 13.2535, 0.52 ) }
    dend_36 { pt3dadd( -91.3506, -101.709, 13.2887, 0.52 ) }
    dend_36 { pt3dadd( -92.1798, -102.418, 13.6626, 0.52 ) }
    dend_36 { pt3dadd( -92.2504, -102.487, 13.702, 0.52 ) }
    dend_36 { pt3dadd( -92.7212, -103.009, 13.9822, 0.52 ) }
    dend_36 { pt3dadd( -92.8484, -103.17, 14.0614, 0.52 ) }
    dend_36 { pt3dadd( -93.5711, -104.157, 14.5119, 0.52 ) }
    dend_36 { pt3dadd( -93.6318, -104.238, 14.5454, 0.52 ) }
    dend_36 { pt3dadd( -94.124, -104.86, 14.7691, 0.52 ) }
    dend_36 { pt3dadd( -94.2855, -105.051, 14.8404, 0.52 ) }
    dend_36 { pt3dadd( -94.9801, -105.817, 15.1431, 0.52 ) }
    dend_36 { pt3dadd( -95.1695, -106.024, 15.2253, 0.52 ) }
    dend_36 { pt3dadd( -95.8688, -106.755, 15.5266, 0.52 ) }
    dend_36 { pt3dadd( -96.0364, -106.905, 15.577, 0.52 ) }
    dend_36 { pt3dadd( -96.8168, -107.516, 15.7267, 0.52 ) }
    dend_36 { pt3dadd( -96.9004, -107.571, 15.7317, 0.52 ) }
    dend_36 { pt3dadd( -97.6309, -107.972, 15.6938, 0.52 ) }
    dend_36 { pt3dadd( -97.7805, -108.04, 15.6756, 0.52 ) }
    dend_36 { pt3dadd( -99.1525, -108.563, 15.5199, 0.52 ) }
    dend_36 { pt3dadd( -99.3338, -108.619, 15.5146, 0.52 ) }
    dend_36 { pt3dadd( -100.587, -108.902, 15.6112, 0.52 ) }
    dend_36 { pt3dadd( -100.782, -108.927, 15.6576, 0.52 ) }
    dend_36 { pt3dadd( -101.61, -108.926, 16.0006, 0.52 ) }
    dend_36 { pt3dadd( -102.532, -108.796, 16.5108, 0.52 ) }
    dend_36 { pt3dadd( -103.346, -108.566, 17.0692, 0.52 ) }
    dend_36 { pt3dadd( -103.696, -108.448, 17.319, 0.52 ) }
    dend_36 { pt3dadd( -104.429, -108.161, 17.8589, 0.52 ) }
    dend_36 { pt3dadd( -104.934, -107.981, 18.1725, 0.52 ) }
    dend_36 { pt3dadd( -105.896, -107.67, 18.6216, 0.52 ) }
    dend_36 { pt3dadd( -106.21, -107.608, 18.6882, 0.52 ) }
    dend_36 { pt3dadd( -106.44, -107.592, 18.7002, 0.52 ) }
    dend_36 { pt3dadd( -106.955, -107.66, 18.6763, 0.52 ) }
    dend_36 { pt3dadd( -107.684, -107.942, 18.5684, 0.52 ) }
    dend_36 { pt3dadd( -107.883, -108.066, 18.5039, 0.52 ) }
    dend_36 { pt3dadd( -108.727, -108.711, 18.1364, 0.52 ) }
    dend_36 { pt3dadd( -108.905, -108.854, 18.0724, 0.52 ) }
    dend_36 { pt3dadd( -109.569, -109.414, 17.8836, 0.52 ) }
    dend_36 { pt3dadd( -109.775, -109.589, 17.8511, 0.52 ) }
    dend_36 { pt3dadd( -111.238, -110.766, 17.861, 0.52 ) }
    dend_36 { pt3dadd( -111.286, -110.8, 17.8746, 0.52 ) }
    dend_36 { pt3dadd( -112.58, -111.582, 18.602, 0.52 ) }
    dend_36 { pt3dadd( -112.826, -111.699, 18.7664, 0.52 ) }
    dend_36 { pt3dadd( -113.378, -111.897, 19.1871, 0.52 ) }
    dend_36 { pt3dadd( -113.455, -111.923, 19.2432, 0.52 ) }
    dend_36 { pt3dadd( -114.416, -112.244, 19.9503, 0.52 ) }
    dend_36 { pt3dadd( -114.546, -112.302, 20.0162, 0.52 ) }
    dend_36 { pt3dadd( -115.317, -112.702, 20.2442, 0.52 ) }
    dend_36 { pt3dadd( -115.447, -112.775, 20.273, 0.52 ) }
    dend_36 { pt3dadd( -116.548, -113.427, 20.4485, 0.52 ) }
    dend_36 { pt3dadd( -116.83, -113.586, 20.4815, 0.52 ) }
    dend_36 { pt3dadd( -118.077, -114.268, 20.5727, 0.52 ) }
    dend_36 { pt3dadd( -118.441, -114.433, 20.5904, 0.52 ) }
    dend_36 { pt3dadd( -118.852, -114.589, 20.6057, 0.52 ) }
    dend_36 { pt3dadd( -118.998, -114.62, 20.6125, 0.52 ) }
    dend_36 { pt3dadd( -120.118, -114.684, 20.6462, 0.52 ) }
    dend_36 { pt3dadd( -120.187, -114.681, 20.6405, 0.52 ) }
    dend_36 { pt3dadd( -121.505, -114.519, 20.4182, 0.52 ) }
    dend_36 { pt3dadd( -121.68, -114.5, 20.3627, 0.52 ) }
    dend_36 { pt3dadd( -122.929, -114.402, 19.769, 0.52 ) }
    dend_36 { pt3dadd( -123.246, -114.392, 19.5658, 0.52 ) }
    dend_36 { pt3dadd( -124.508, -114.413, 18.5152, 0.52 ) }
    dend_36 { pt3dadd( -124.596, -114.423, 18.4342, 0.52 ) }
    dend_36 { pt3dadd( -125.505, -114.626, 17.4667, 0.52 ) }
    dend_36 { pt3dadd( -125.677, -114.675, 17.2786, 0.52 ) }
    dend_36 { pt3dadd( -126.506, -114.977, 16.3459, 0.52 ) }
    dend_36 { pt3dadd( -126.597, -115.012, 16.2603, 0.52 ) }
    dend_36 { pt3dadd( -127.594, -115.416, 15.5211, 0.52 ) }
    dend_36 { pt3dadd( -127.797, -115.497, 15.4001, 0.52 ) }
    dend_36 { pt3dadd( -128.465, -115.755, 15.1079, 0.52 ) }
    dend_36 { pt3dadd( -128.663, -115.84, 15.0338, 0.52 ) }
    dend_36 { pt3dadd( -129.235, -116.117, 14.8549, 0.52 ) }
    dend_36 { pt3dadd( -129.522, -116.269, 14.7881, 0.52 ) }
    dend_36 { pt3dadd( -130.09, -116.589, 14.7051, 0.52 ) }
    dend_36 { pt3dadd( -130.372, -116.755, 14.7076, 0.52 ) }
    dend_36 { pt3dadd( -130.723, -116.974, 14.7612, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( -130.946, -117.11, 14.8118, 0.52 ) }
    dend_36 { pt3dadd( -131.612, -117.491, 14.9963, 0.52 ) }
    dend_36 { pt3dadd( -131.68, -117.529, 15.0135, 0.52 ) }
    dend_36 { pt3dadd( -132.612, -118.02, 15.2213, 0.52 ) }
    dend_36 { pt3dadd( -132.788, -118.105, 15.2458, 0.52 ) }
    dend_36 { pt3dadd( -133.815, -118.55, 15.3241, 0.52 ) }
    dend_36 { pt3dadd( -134.108, -118.652, 15.3473, 0.52 ) }
    dend_36 { pt3dadd( -134.795, -118.853, 15.4042, 0.52 ) }
    dend_36 { pt3dadd( -134.952, -118.891, 15.4188, 0.52 ) }
    dend_36 { pt3dadd( -136.111, -119.122, 15.5238, 0.52 ) }
    dend_36 { pt3dadd( -136.259, -119.142, 15.543, 0.52 ) }
    dend_36 { pt3dadd( -138.098, -119.365, 15.8879, 0.52 ) }
    dend_36 { pt3dadd( -138.281, -119.387, 15.9337, 0.52 ) }
    dend_36 { pt3dadd( -139.158, -119.496, 16.2078, 0.52 ) }
    dend_36 { pt3dadd( -139.225, -119.504, 16.2263, 0.52 ) }
    dend_36 { pt3dadd( -140.17, -119.619, 16.4539, 0.52 ) }
    dend_36 { pt3dadd( -141.096, -119.733, 16.5735, 0.52 ) }
    dend_36 { pt3dadd( -142.447, -119.913, 16.6009, 0.52 ) }
    dend_36 { pt3dadd( -142.565, -119.933, 16.5966, 0.52 ) }
    dend_36 { pt3dadd( -143.931, -120.225, 16.4791, 0.52 ) }
    dend_36 { pt3dadd( -145.473, -120.631, 16.2291, 0.52 ) }
    dend_36 { pt3dadd( -146.674, -121.008, 15.9123, 0.52 ) }
    dend_36 { pt3dadd( -147.075, -121.129, 15.7816, 0.52 ) }
    dend_36 { pt3dadd( -147.899, -121.419, 15.4414, 0.52 ) }
    dend_36 { pt3dadd( -147.984, -121.454, 15.4039, 0.52 ) }
    dend_36 { pt3dadd( -148.994, -122.065, 14.887, 0.52 ) }
    dend_36 { pt3dadd( -149.213, -122.293, 14.6828, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 27/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 73.0452, 97.4462, -30.5891, 0.59 ) }
    dend_29 { pt3dadd( 72.8252, 97.8862, -29.8991, 0.59 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 73.0452, 97.4462, -30.5891, 0.66 ) }
    dend_28 { pt3dadd( 72.4715, 97.3412, -29.6298, 0.66 ) }
    dend_28 { pt3dadd( 72.4157, 97.3328, -29.5484, 0.66 ) }
    dend_28 { pt3dadd( 70.9679, 97.1398, -27.5897, 0.52 ) }
    dend_28 { pt3dadd( 70.9241, 97.135, -27.5353, 0.52 ) }
    dend_28 { pt3dadd( 69.9233, 96.9772, -26.3053, 0.52 ) }
    dend_28 { pt3dadd( 69.8856, 96.9699, -26.2592, 0.52 ) }
    dend_28 { pt3dadd( 69.081, 96.7886, -25.421, 0.52 ) }
    dend_28 { pt3dadd( 68.9654, 96.7567, -25.3127, 0.52 ) }
    dend_28 { pt3dadd( 67.98, 96.4161, -24.626, 0.52 ) }
    dend_28 { pt3dadd( 67.0732, 96.0703, -24.0912, 0.52 ) }
    dend_28 { pt3dadd( 66.9469, 96.0133, -24.0338, 0.52 ) }
    dend_28 { pt3dadd( 65.7574, 95.439, -23.6019, 0.52 ) }
    dend_28 { pt3dadd( 65.4927, 95.291, -23.5481, 0.52 ) }
    dend_28 { pt3dadd( 63.9518, 94.38, -23.4037, 0.52 ) }
    dend_28 { pt3dadd( 63.8917, 94.3441, -23.4023, 0.52 ) }
    dend_28 { pt3dadd( 62.7895, 93.73, -23.407, 0.52 ) }
    dend_28 { pt3dadd( 62.0787, 93.3442, -23.3624, 0.52 ) }
    dend_28 { pt3dadd( 60.6818, 92.5807, -23.1379, 0.52 ) }
    dend_28 { pt3dadd( 60.412, 92.4395, -23.039, 0.52 ) }
    dend_28 { pt3dadd( 59.5501, 92.0167, -22.4822, 0.52 ) }
    dend_28 { pt3dadd( 59.3194, 91.9147, -22.2955, 0.52 ) }
    dend_28 { pt3dadd( 58.5955, 91.6529, -21.5993, 0.52 ) }
    dend_28 { pt3dadd( 58.2589, 91.5579, -21.2852, 0.52 ) }
    dend_28 { pt3dadd( 57.5461, 91.4162, -20.6316, 0.52 ) }
    dend_28 { pt3dadd( 56.6882, 91.2469, -19.9388, 0.52 ) }
    dend_28 { pt3dadd( 56.5316, 91.2146, -19.8304, 0.52 ) }
    dend_28 { pt3dadd( 56.0313, 91.0963, -19.5327, 0.52 ) }
    dend_28 { pt3dadd( 54.8482, 90.7951, -18.9674, 0.52 ) }
    dend_28 { pt3dadd( 54.5431, 90.7165, -18.8405, 0.52 ) }
    dend_28 { pt3dadd( 54.2468, 90.6404, -18.7295, 0.52 ) }
    dend_28 { pt3dadd( 54.0042, 90.5858, -18.6344, 0.52 ) }
    dend_28 { pt3dadd( 53.1995, 90.389, -18.3179, 0.52 ) }
    dend_28 { pt3dadd( 53.1046, 90.3662, -18.2756, 0.52 ) }
    dend_28 { pt3dadd( 52.6567, 90.2579, -18.0551, 0.52 ) }
    dend_28 { pt3dadd( 52.5348, 90.228, -17.9956, 0.52 ) }
    dend_28 { pt3dadd( 51.4119, 89.9574, -17.399, 0.52 ) }
    dend_28 { pt3dadd( 51.354, 89.942, -17.3628, 0.52 ) }
    dend_28 { pt3dadd( 50.6719, 89.7457, -16.8451, 0.52 ) }
    dend_28 { pt3dadd( 50.4638, 89.6594, -16.671, 0.52 ) }
    dend_28 { pt3dadd( 49.9576, 89.3907, -16.1975, 0.52 ) }
    dend_28 { pt3dadd( 49.6885, 89.1779, -15.9133, 0.52 ) }
    dend_28 { pt3dadd( 49.2754, 88.7263, -15.4008, 0.52 ) }
    dend_28 { pt3dadd( 49.0144, 88.4266, -15.0974, 0.52 ) }
    dend_28 { pt3dadd( 48.3901, 87.6728, -14.4028, 0.52 ) }
    dend_28 { pt3dadd( 48.2869, 87.5688, -14.2982, 0.52 ) }
    dend_28 { pt3dadd( 47.4533, 86.8599, -13.4928, 0.52 ) }
    dend_28 { pt3dadd( 47.3696, 86.809, -13.4073, 0.52 ) }
    dend_28 { pt3dadd( 46.771, 86.5624, -12.747, 0.52 ) }
    dend_28 { pt3dadd( 46.5779, 86.5309, -12.532, 0.52 ) }
    dend_28 { pt3dadd( 45.7826, 86.5499, -11.5973, 0.52 ) }
    dend_28 { pt3dadd( 45.5639, 86.5805, -11.3551, 0.52 ) }
    dend_28 { pt3dadd( 44.3574, 86.9112, -10.0342, 0.52 ) }
    dend_28 { pt3dadd( 44.2707, 86.9388, -9.9413, 0.52 ) }
    dend_28 { pt3dadd( 43.1617, 87.356, -8.71449, 0.52 ) }
    dend_28 { pt3dadd( 43.0736, 87.3899, -8.62509, 0.52 ) }
    dend_28 { pt3dadd( 42.5501, 87.5977, -8.13855, 0.52 ) }
    dend_28 { pt3dadd( 42.2928, 87.7041, -7.9432, 0.52 ) }
    dend_28 { pt3dadd( 41.4879, 88.0635, -7.4408, 0.52 ) }
    dend_28 { pt3dadd( 41.1914, 88.2182, -7.26776, 0.52 ) }
    dend_28 { pt3dadd( 39.7192, 89.0909, -6.48304, 0.52 ) }
    dend_28 { pt3dadd( 39.5223, 89.2111, -6.38995, 0.52 ) }
    dend_28 { pt3dadd( 38.3241, 89.9341, -5.86071, 0.52 ) }
    dend_28 { pt3dadd( 37.9951, 90.1322, -5.73601, 0.52 ) }
    dend_28 { pt3dadd( 37.2622, 90.5945, -5.49917, 0.52 ) }
    dend_28 { pt3dadd( 36.7233, 90.9434, -5.35779, 0.52 ) }
    dend_28 { pt3dadd( 35.9422, 91.4748, -5.22039, 0.52 ) }
    dend_28 { pt3dadd( 35.2252, 91.9413, -5.10059, 0.52 ) }
    dend_28 { pt3dadd( 35.1739, 91.9711, -5.09158, 0.52 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 98/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.64434, 18.4796, 15.6219, 1.03 ) }
    dend_20 { pt3dadd( 1.81158, 18.458, 15.4661, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_20 { pt3dadd( 2.02833, 18.4805, 15.4963, 1.03 ) }
    dend_20 { pt3dadd( 3.1193, 18.7784, 15.9407, 1.03 ) }
    dend_20 { pt3dadd( 3.17881, 18.7985, 15.9717, 1.03 ) }
    dend_20 { pt3dadd( 3.96775, 19.1135, 16.47, 1.03 ) }
    dend_20 { pt3dadd( 5.31873, 19.6764, 17.4032, 1.03 ) }
    dend_20 { pt3dadd( 5.44172, 19.7338, 17.5149, 1.03 ) }
    dend_20 { pt3dadd( 6.46776, 20.1861, 18.604, 1.03 ) }
    dend_20 { pt3dadd( 6.54497, 20.2127, 18.7051, 1.03 ) }
    dend_20 { pt3dadd( 7.13063, 20.3392, 19.5684, 1.03 ) }
    dend_20 { pt3dadd( 7.23512, 20.3378, 19.7483, 1.03 ) }
    dend_20 { pt3dadd( 7.71744, 20.1446, 20.6179, 1.03 ) }
    dend_20 { pt3dadd( 7.84547, 20.0085, 20.9021, 1.03 ) }
    dend_20 { pt3dadd( 8.08958, 19.4118, 21.6824, 1.03 ) }
    dend_20 { pt3dadd( 8.09627, 19.3769, 21.7307, 1.03 ) }
    dend_20 { pt3dadd( 8.09257, 19.0871, 22.1514, 1.03 ) }
    dend_20 { pt3dadd( 8.07812, 19.0212, 22.2625, 1.03 ) }
    dend_20 { pt3dadd( 7.84011, 18.4069, 23.4495, 1.03 ) }
    dend_20 { pt3dadd( 7.8004, 18.2864, 23.676, 1.03 ) }
    dend_20 { pt3dadd( 7.59659, 17.6367, 24.9129, 1.03 ) }
    dend_20 { pt3dadd( 7.55405, 17.4919, 25.1836, 1.03 ) }
    dend_20 { pt3dadd( 7.31336, 16.6527, 26.7733, 1.03 ) }
    dend_20 { pt3dadd( 7.25205, 16.45, 27.1653, 1.03 ) }
    dend_20 { pt3dadd( 7.05204, 15.7831, 28.4866, 1.03 ) }
    dend_20 { pt3dadd( 7.04277, 15.7541, 28.5383, 1.03 ) }
    dend_20 { pt3dadd( 6.77585, 14.9272, 29.8571, 1.03 ) }
    dend_20 { pt3dadd( 6.72368, 14.692, 30.2952, 1.03 ) }
    dend_20 { pt3dadd( 6.66616, 14.142, 31.5561, 1.03 ) }
    dend_20 { pt3dadd( 6.67463, 14.0828, 31.744, 1.03 ) }
    dend_20 { pt3dadd( 6.85498, 13.9226, 32.8621, 1.03 ) }
    dend_20 { pt3dadd( 6.8989, 13.9296, 32.9689, 1.03 ) }
    dend_20 { pt3dadd( 8.41205, 14.6053, 35.1007, 1.03 ) }
    dend_20 { pt3dadd( 8.46165, 14.6306, 35.1581, 1.03 ) }
    dend_20 { pt3dadd( 9.50496, 15.2271, 36.1636, 1.03 ) }
    dend_20 { pt3dadd( 9.63891, 15.3114, 36.2813, 1.03 ) }
    dend_20 { pt3dadd( 10.589, 15.9848, 37.0086, 1.03 ) }
    dend_20 { pt3dadd( 10.6307, 16.0165, 37.038, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 36/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.64434, 18.4796, 15.6219, 2.06 ) }
    dend_1 { pt3dadd( -1.18428, 19.7305, 15.9765, 2.06 ) }
    dend_1 { pt3dadd( -1.23414, 19.846, 16.0092, 2.06 ) }
    dend_1 { pt3dadd( -1.38611, 20.198, 16.109, 2.06 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 40/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.68585, -41.6209, -0.0272632, 0.275702 ) }
    axon_1 { pt3dadd( 7.86266, -56.4621, -0.0272632, 0.275702 ) }
    axon_1 { pt3dadd( 10.0395, -71.3033, -0.0272632, 0.275702 ) }
    // Section: dend_63, id: dend_63, parent: dend_41 (entry count 43/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 4.99518, -41.0791, 3.96355, 1.77 ) }
    dend_63 { pt3dadd( 6.0556, -42.5941, 4.67088, 1.77 ) }
    dend_63 { pt3dadd( 6.75742, -43.5967, 5.139, 1.77 ) }
    dend_63 { pt3dadd( 6.81801, -43.6833, 5.17942, 1.77 ) }
    dend_63 { pt3dadd( 7.74551, -45.0084, 5.79807, 2.06 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 48/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.99518, -41.0791, 3.96355, 1.47 ) }
    dend_42 { pt3dadd( 4.9098, -42.1143, 3.67778, 1.47 ) }
    dend_42 { pt3dadd( 4.82052, -43.2558, 3.39907, 1.11 ) }
    dend_42 { pt3dadd( 4.69939, -44.6485, 3.09771, 0.74 ) }
    dend_42 { pt3dadd( 4.55871, -45.9397, 2.85465, 0.74 ) }
    dend_42 { pt3dadd( 4.42719, -46.8339, 2.66895, 0.74 ) }
    dend_42 { pt3dadd( 4.28157, -47.6222, 2.48577, 1.03 ) }
    dend_42 { pt3dadd( 4.08932, -48.4221, 2.23803, 1.25 ) }
    dend_42 { pt3dadd( 3.90382, -49.1018, 1.94663, 1.4 ) }
    dend_42 { pt3dadd( 3.69867, -49.7774, 1.52696, 1.4 ) }
    dend_42 { pt3dadd( 3.30672, -51.064, 0.54705, 1.4 ) }
    dend_42 { pt3dadd( 2.98715, -52.2055, -0.412858, 1.4 ) }
    dend_42 { pt3dadd( 2.62396, -53.765, -1.72912, 1.4 ) }
    dend_42 { pt3dadd( 2.39688, -55.1115, -2.85774, 1.25 ) }
    dend_42 { pt3dadd( 2.18978, -57.0305, -4.42522, 1.11 ) }
    dend_42 { pt3dadd( 2.14058, -58.1196, -5.27431, 1.11 ) }
    dend_42 { pt3dadd( 2.1654, -59.0344, -5.9279, 1.25 ) }
    dend_42 { pt3dadd( 2.26808, -60.3394, -6.79267, 1.25 ) }
    dend_42 { pt3dadd( 2.42002, -61.5028, -7.41691, 0.81 ) }
    dend_42 { pt3dadd( 2.53929, -62.1818, -7.69484, 0.96 ) }
    dend_42 { pt3dadd( 2.68009, -62.8254, -7.87057, 1.4 ) }
    dend_42 { pt3dadd( 2.76648, -63.1683, -7.95698, 1.4 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 70/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -149.213, -122.293, 14.6828, 0.29 ) }
    dend_40 { pt3dadd( -150.748, -123.151, 15.2003, 0.29 ) }
    dend_40 { pt3dadd( -150.811, -123.182, 15.2086, 0.29 ) }
    dend_40 { pt3dadd( -151.93, -123.657, 15.2372, 0.29 ) }
    dend_40 { pt3dadd( -152.006, -123.683, 15.2327, 0.29 ) }
    dend_40 { pt3dadd( -152.484, -123.811, 15.1873, 0.29 ) }
    dend_40 { pt3dadd( -152.646, -123.847, 15.167, 0.29 ) }
    dend_40 { pt3dadd( -153.555, -123.965, 14.9599, 0.29 ) }
    dend_40 { pt3dadd( -153.915, -123.986, 14.8761, 0.29 ) }
    dend_40 { pt3dadd( -155.072, -123.98, 14.6005, 0.29 ) }
    dend_40 { pt3dadd( -155.862, -123.95, 14.4144, 0.29 ) }
    dend_40 { pt3dadd( -156.75, -123.887, 14.2041, 0.29 ) }
    dend_40 { pt3dadd( -156.936, -123.875, 14.1569, 0.29 ) }
    dend_40 { pt3dadd( -158.191, -123.794, 13.8059, 0.29 ) }
    dend_40 { pt3dadd( -158.257, -123.795, 13.7835, 0.29 ) }
    dend_40 { pt3dadd( -159.254, -123.877, 13.3809, 0.29 ) }
    dend_40 { pt3dadd( -159.372, -123.899, 13.3303, 0.29 ) }
    dend_40 { pt3dadd( -160.327, -124.171, 12.9091, 0.29 ) }
    dend_40 { pt3dadd( -160.656, -124.299, 12.769, 0.29 ) }
    dend_40 { pt3dadd( -161.594, -124.766, 12.3773, 0.29 ) }
    dend_40 { pt3dadd( -161.885, -124.923, 12.2597, 0.29 ) }
    dend_40 { pt3dadd( -162.516, -125.287, 12.0138, 0.29 ) }
    dend_40 { pt3dadd( -162.728, -125.424, 11.9372, 0.29 ) }
    dend_40 { pt3dadd( -163.668, -126.111, 11.6147, 0.29 ) }
    dend_40 { pt3dadd( -163.93, -126.315, 11.5322, 0.29 ) }
    dend_40 { pt3dadd( -164.842, -127.058, 11.2549, 0.29 ) }
    dend_40 { pt3dadd( -164.996, -127.186, 11.2123, 0.29 ) }
    dend_40 { pt3dadd( -166.348, -128.342, 10.8616, 0.29 ) }
    dend_40 { pt3dadd( -166.684, -128.631, 10.7754, 0.29 ) }
    dend_40 { pt3dadd( -167.747, -129.536, 10.4959, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( -168.112, -129.81, 10.4008, 0.29 ) }
    dend_40 { pt3dadd( -169.027, -130.41, 10.1656, 0.29 ) }
    dend_40 { pt3dadd( -169.231, -130.515, 10.1153, 0.29 ) }
    dend_40 { pt3dadd( -170.692, -131.07, 9.75081, 0.29 ) }
    dend_40 { pt3dadd( -171.106, -131.206, 9.65437, 0.29 ) }
    dend_40 { pt3dadd( -172.527, -131.619, 9.33292, 0.29 ) }
    dend_40 { pt3dadd( -172.709, -131.665, 9.29691, 0.29 ) }
    dend_40 { pt3dadd( -174.416, -132.057, 9.00135, 0.29 ) }
    dend_40 { pt3dadd( -174.601, -132.099, 8.97315, 0.29 ) }
    dend_40 { pt3dadd( -176.391, -132.491, 8.76534, 0.29 ) }
    dend_40 { pt3dadd( -176.536, -132.528, 8.75089, 0.29 ) }
    dend_40 { pt3dadd( -177.721, -132.905, 8.61243, 0.29 ) }
    dend_40 { pt3dadd( -177.938, -132.985, 8.5764, 0.29 ) }
    dend_40 { pt3dadd( -178.63, -133.292, 8.4192, 0.29 ) }
    dend_40 { pt3dadd( -178.76, -133.359, 8.38434, 0.29 ) }
    dend_40 { pt3dadd( -179.574, -133.842, 8.11372, 0.29 ) }
    dend_40 { pt3dadd( -180.46, -134.408, 7.83174, 0.29 ) }
    dend_40 { pt3dadd( -181.409, -135.072, 7.53239, 0.29 ) }
    dend_40 { pt3dadd( -181.705, -135.289, 7.44977, 0.29 ) }
    dend_40 { pt3dadd( -182.164, -135.634, 7.34208, 0.29 ) }
    dend_40 { pt3dadd( -182.472, -135.881, 7.28046, 0.29 ) }
    dend_40 { pt3dadd( -183.583, -136.825, 7.11668, 0.29 ) }
    dend_40 { pt3dadd( -183.699, -136.931, 7.11101, 0.29 ) }
    dend_40 { pt3dadd( -184.217, -137.437, 7.11101, 0.29 ) }
    dend_40 { pt3dadd( -184.329, -137.538, 7.11101, 0.29 ) }
    dend_40 { pt3dadd( -184.826, -138.059, 7.06662, 0.29 ) }
    dend_40 { pt3dadd( -185.033, -138.32, 7.03103, 0.29 ) }
    dend_40 { pt3dadd( -185.764, -139.465, 6.83138, 0.29 ) }
    dend_40 { pt3dadd( -185.805, -139.533, 6.81802, 0.29 ) }
    dend_40 { pt3dadd( -186.338, -140.483, 6.61302, 0.29 ) }
    dend_40 { pt3dadd( -187.111, -141.942, 6.29074, 0.29 ) }
    dend_40 { pt3dadd( -187.158, -142.035, 6.26916, 0.29 ) }
    dend_40 { pt3dadd( -187.504, -142.652, 6.12869, 0.29 ) }
    dend_40 { pt3dadd( -187.555, -142.735, 6.11064, 0.29 ) }
    dend_40 { pt3dadd( -188.07, -143.487, 5.98173, 0.29 ) }
    dend_40 { pt3dadd( -188.286, -143.776, 5.93972, 0.29 ) }
    dend_40 { pt3dadd( -188.492, -143.994, 5.91565, 0.29 ) }
    dend_40 { pt3dadd( -189.394, -144.922, 5.79279, 0.29 ) }
    dend_40 { pt3dadd( -189.63, -145.159, 5.76907, 0.29 ) }
    dend_40 { pt3dadd( -190.251, -145.779, 5.72276, 0.29 ) }
    dend_40 { pt3dadd( -190.62, -146.136, 5.70097, 0.29 ) }
    dend_40 { pt3dadd( -191.375, -146.861, 5.66069, 0.29 ) }
    dend_40 { pt3dadd( -191.425, -146.909, 5.65832, 0.29 ) }
    dend_40 { pt3dadd( -192.507, -147.897, 5.61936, 0.29 ) }
    dend_40 { pt3dadd( -192.632, -148.005, 5.61567, 0.29 ) }
    dend_40 { pt3dadd( -193.801, -148.987, 5.59133, 0.29 ) }
    dend_40 { pt3dadd( -194.046, -149.172, 5.58344, 0.29 ) }
    dend_40 { pt3dadd( -195.2, -149.965, 5.51237, 0.29 ) }
    dend_40 { pt3dadd( -195.341, -150.052, 5.50029, 0.29 ) }
    dend_40 { pt3dadd( -196.321, -150.596, 5.3894, 0.29 ) }
    dend_40 { pt3dadd( -196.443, -150.664, 5.3772, 0.29 ) }
    dend_40 { pt3dadd( -197.529, -151.27, 5.28134, 0.29 ) }
    dend_40 { pt3dadd( -197.738, -151.384, 5.26564, 0.29 ) }
    dend_40 { pt3dadd( -199.236, -152.165, 5.16567, 0.29 ) }
    dend_40 { pt3dadd( -199.509, -152.312, 5.15032, 0.29 ) }
    dend_40 { pt3dadd( -201.082, -153.207, 5.08024, 0.29 ) }
    dend_40 { pt3dadd( -201.263, -153.317, 5.0753, 0.29 ) }
    dend_40 { pt3dadd( -202.468, -154.077, 4.9534, 0.29 ) }
    dend_40 { pt3dadd( -202.527, -154.113, 4.94318, 0.29 ) }
    dend_40 { pt3dadd( -203.416, -154.601, 4.71486, 0.29 ) }
    dend_40 { pt3dadd( -203.729, -154.758, 4.61626, 0.29 ) }
    dend_40 { pt3dadd( -204.777, -155.16, 4.30414, 0.29 ) }
    dend_40 { pt3dadd( -206.744, -155.795, 3.77924, 0.37 ) }
    dend_40 { pt3dadd( -206.953, -155.845, 3.73313, 0.37 ) }
    dend_40 { pt3dadd( -208.216, -156.001, 3.55745, 0.37 ) }
    dend_40 { pt3dadd( -208.308, -156.003, 3.54914, 0.37 ) }
    dend_40 { pt3dadd( -210.218, -155.947, 3.44762, 0.37 ) }
    dend_40 { pt3dadd( -210.397, -155.934, 3.44395, 0.37 ) }
    dend_40 { pt3dadd( -211.797, -155.803, 3.47623, 0.37 ) }
    dend_40 { pt3dadd( -213.38, -155.665, 3.47311, 0.37 ) }
    dend_40 { pt3dadd( -214.268, -155.595, 3.44945, 0.37 ) }
    dend_40 { pt3dadd( -214.509, -155.581, 3.43399, 0.37 ) }
    dend_40 { pt3dadd( -216.08, -155.53, 3.22035, 0.37 ) }
    dend_40 { pt3dadd( -216.184, -155.531, 3.20288, 0.37 ) }
    dend_40 { pt3dadd( -217.04, -155.594, 3.00793, 0.37 ) }
    dend_40 { pt3dadd( -217.107, -155.607, 2.98937, 0.37 ) }
    dend_40 { pt3dadd( -217.626, -155.733, 2.87786, 0.37 ) }
    dend_40 { pt3dadd( -217.692, -155.751, 2.86592, 0.37 ) }
    dend_40 { pt3dadd( -218.376, -155.96, 2.79581, 0.37 ) }
    dend_40 { pt3dadd( -218.672, -156.049, 2.77769, 0.37 ) }
    dend_40 { pt3dadd( -220.127, -156.408, 2.77891, 0.37 ) }
    dend_40 { pt3dadd( -221.584, -156.713, 2.81902, 0.37 ) }
    dend_40 { pt3dadd( -221.752, -156.741, 2.81868, 0.37 ) }
    dend_40 { pt3dadd( -223.67, -156.986, 2.78451, 0.37 ) }
    dend_40 { pt3dadd( -223.868, -156.997, 2.77613, 0.37 ) }
    dend_40 { pt3dadd( -225.776, -157.004, 2.6313, 0.37 ) }
    dend_40 { pt3dadd( -225.952, -156.991, 2.59761, 0.37 ) }
    dend_40 { pt3dadd( -227.413, -156.818, 2.13186, 0.37 ) }
    dend_40 { pt3dadd( -227.552, -156.801, 2.08238, 0.37 ) }
    dend_40 { pt3dadd( -229.095, -156.589, 1.4352, 0.37 ) }
    dend_40 { pt3dadd( -229.218, -156.578, 1.39492, 0.37 ) }
    dend_40 { pt3dadd( -230.697, -156.515, 1.03602, 0.37 ) }
    dend_40 { pt3dadd( -230.888, -156.515, 1.03104, 0.37 ) }
    dend_40 { pt3dadd( -232.649, -156.573, 1.26276, 0.37 ) }
    dend_40 { pt3dadd( -232.838, -156.576, 1.30075, 0.37 ) }
    dend_40 { pt3dadd( -234.59, -156.604, 1.77323, 0.37 ) }
    dend_40 { pt3dadd( -234.714, -156.603, 1.81058, 0.37 ) }
    dend_40 { pt3dadd( -236.931, -156.539, 2.58211, 0.37 ) }
    dend_40 { pt3dadd( -236.988, -156.535, 2.60015, 0.37 ) }
    dend_40 { pt3dadd( -238.783, -156.353, 3.07965, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_40 { pt3dadd( -238.841, -156.347, 3.093, 0.37 ) }
    dend_40 { pt3dadd( -239.715, -156.28, 3.24293, 0.37 ) }
    dend_40 { pt3dadd( -239.893, -156.273, 3.26995, 0.37 ) }
    dend_40 { pt3dadd( -241.491, -156.319, 3.48588, 0.37 ) }
    dend_40 { pt3dadd( -242.235, -156.397, 3.5816, 0.37 ) }
    dend_40 { pt3dadd( -242.332, -156.416, 3.59335, 0.37 ) }
    dend_40 { pt3dadd( -243.612, -156.687, 3.7237, 0.37 ) }
    dend_40 { pt3dadd( -243.67, -156.7, 3.72922, 0.37 ) }
    dend_40 { pt3dadd( -244.179, -156.852, 3.75501, 0.37 ) }
    dend_40 { pt3dadd( -245.011, -157.166, 3.76332, 0.37 ) }
    dend_40 { pt3dadd( -245.546, -157.415, 3.74747, 0.37 ) }
    dend_40 { pt3dadd( -246.594, -157.958, 3.69917, 0.37 ) }
    dend_40 { pt3dadd( -246.706, -158.025, 3.69614, 0.37 ) }
    dend_40 { pt3dadd( -247.877, -158.797, 3.68797, 0.37 ) }
    dend_40 { pt3dadd( -248.158, -159.0, 3.70007, 0.37 ) }
    dend_40 { pt3dadd( -249.676, -160.265, 3.85731, 0.37 ) }
    dend_40 { pt3dadd( -249.77, -160.354, 3.87369, 0.37 ) }
    dend_40 { pt3dadd( -250.422, -161.046, 4.04054, 0.37 ) }
    dend_40 { pt3dadd( -250.499, -161.134, 4.06755, 0.37 ) }
    dend_40 { pt3dadd( -251.16, -161.967, 4.42109, 0.37 ) }
    dend_40 { pt3dadd( -251.223, -162.061, 4.46164, 0.37 ) }
    dend_40 { pt3dadd( -251.669, -162.862, 4.81728, 0.37 ) }
    dend_40 { pt3dadd( -251.712, -162.947, 4.84688, 0.37 ) }
    dend_40 { pt3dadd( -252.089, -163.723, 5.06857, 0.37 ) }
    dend_40 { pt3dadd( -252.156, -163.865, 5.10728, 0.37 ) }
    dend_40 { pt3dadd( -252.665, -164.868, 5.39215, 0.37 ) }
    dend_40 { pt3dadd( -252.734, -164.989, 5.43026, 0.37 ) }
    dend_40 { pt3dadd( -253.514, -166.109, 5.83933, 0.37 ) }
    dend_40 { pt3dadd( -253.96, -166.641, 6.05571, 0.37 ) }
    dend_40 { pt3dadd( -254.15, -166.818, 6.13308, 0.37 ) }
    dend_40 { pt3dadd( -255.025, -167.531, 6.45537, 0.37 ) }
    dend_40 { pt3dadd( -255.127, -167.604, 6.49159, 0.37 ) }
    dend_40 { pt3dadd( -255.788, -168.036, 6.71696, 0.37 ) }
    dend_40 { pt3dadd( -256.047, -168.175, 6.80228, 0.37 ) }
    dend_40 { pt3dadd( -257.511, -168.896, 7.20728, 0.37 ) }
    dend_40 { pt3dadd( -257.581, -168.931, 7.22269, 0.37 ) }
    dend_40 { pt3dadd( -266.276, -173.722, 8.41987, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 37/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -149.213, -122.293, 14.6828, 0.52 ) }
    dend_37 { pt3dadd( -150.816, -121.932, 14.7855, 0.52 ) }
    dend_37 { pt3dadd( -151.395, -121.827, 14.8301, 0.52 ) }
    dend_37 { pt3dadd( -152.268, -121.754, 14.9381, 0.52 ) }
    dend_37 { pt3dadd( -153.019, -121.725, 15.0777, 0.37 ) }
    dend_37 { pt3dadd( -153.234, -121.721, 15.1252, 0.37 ) }
    dend_37 { pt3dadd( -154.117, -121.738, 15.2372, 0.37 ) }
    dend_37 { pt3dadd( -154.283, -121.762, 15.247, 0.37 ) }
    dend_37 { pt3dadd( -155.461, -121.951, 15.0956, 0.37 ) }
    dend_37 { pt3dadd( -155.928, -122.033, 14.9366, 0.37 ) }
    dend_37 { pt3dadd( -157.038, -122.18, 14.3269, 0.29 ) }
    dend_37 { pt3dadd( -158.595, -122.38, 13.2971, 0.29 ) }
    dend_37 { pt3dadd( -158.834, -122.408, 13.0954, 0.29 ) }
    dend_37 { pt3dadd( -159.878, -122.503, 12.039, 0.29 ) }
    dend_37 { pt3dadd( -159.934, -122.506, 11.9657, 0.29 ) }
    dend_37 { pt3dadd( -160.54, -122.54, 11.0518, 0.29 ) }
    dend_37 { pt3dadd( -170.217, -121.191, 8.92186, 0.29 ) }
    dend_37 { pt3dadd( -180.137, -120.637, 7.7914, 0.29 ) }
    dend_37 { pt3dadd( -189.852, -121.179, 5.48385, 0.29 ) }
    dend_37 { pt3dadd( -199.167, -122.032, 1.94687, 0.29 ) }
    dend_37 { pt3dadd( -208.443, -124.22, -1.08082, 0.29 ) }
    dend_37 { pt3dadd( -217.887, -125.192, -4.22089, 0.29 ) }
    dend_37 { pt3dadd( -226.861, -126.731, -8.35598, 0.29 ) }
    dend_37 { pt3dadd( -235.045, -129.129, -13.5793, 0.29 ) }
    dend_37 { pt3dadd( -242.978, -133.268, -18.0447, 0.29 ) }
    dend_37 { pt3dadd( -250.389, -139.355, -20.8768, 0.29 ) }
    dend_37 { pt3dadd( -256.976, -145.987, -24.431, 0.29 ) }
    dend_37 { pt3dadd( -263.642, -153.108, -26.6349, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 65/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 72.8252, 97.8862, -29.8991, 0.59 ) }
    dend_31 { pt3dadd( 72.9151, 99.8862, -31.332, 0.59 ) }
    dend_31 { pt3dadd( 72.9334, 99.9432, -31.3684, 0.59 ) }
    dend_31 { pt3dadd( 73.2237, 100.599, -31.7862, 0.59 ) }
    dend_31 { pt3dadd( 73.617, 101.185, -32.1596, 0.59 ) }
    dend_31 { pt3dadd( 74.1206, 101.845, -32.5827, 0.59 ) }
    dend_31 { pt3dadd( 74.1898, 101.931, -32.6359, 0.59 ) }
    dend_31 { pt3dadd( 75.209, 103.02, -33.2131, 0.59 ) }
    dend_31 { pt3dadd( 75.3264, 103.151, -33.2843, 0.59 ) }
    dend_31 { pt3dadd( 76.3941, 104.345, -33.966, 0.59 ) }
    dend_31 { pt3dadd( 76.647, 104.668, -34.1916, 0.59 ) }
    dend_31 { pt3dadd( 77.207, 105.515, -34.8726, 0.59 ) }
    dend_31 { pt3dadd( 77.2942, 105.696, -35.0372, 0.59 ) }
    dend_31 { pt3dadd( 77.5518, 106.625, -35.9691, 0.52 ) }
    dend_31 { pt3dadd( 77.5624, 106.707, -36.0575, 0.52 ) }
    dend_31 { pt3dadd( 77.4842, 108.179, -37.7892, 0.52 ) }
    dend_31 { pt3dadd( 77.4477, 108.506, -38.1905, 0.52 ) }
    dend_31 { pt3dadd( 77.3277, 109.212, -39.0995, 0.52 ) }
    dend_31 { pt3dadd( 77.2945, 109.433, -39.3767, 0.52 ) }
    dend_31 { pt3dadd( 77.2486, 109.818, -39.8623, 0.52 ) }
    dend_31 { pt3dadd( 77.2401, 109.926, -39.9657, 0.52 ) }
    dend_31 { pt3dadd( 77.2029, 110.604, -40.4281, 0.52 ) }
    dend_31 { pt3dadd( 77.2001, 110.769, -40.5371, 0.52 ) }
    dend_31 { pt3dadd( 77.214, 111.179, -40.7836, 0.59 ) }
    dend_31 { pt3dadd( 77.2303, 111.402, -40.9183, 0.59 ) }
    dend_31 { pt3dadd( 77.3526, 112.018, -41.266, 0.59 ) }
    dend_31 { pt3dadd( 78.0303, 113.701, -42.1211, 0.59 ) }
    dend_31 { pt3dadd( 78.1029, 113.82, -42.1755, 0.59 ) }
    dend_31 { pt3dadd( 78.6651, 114.543, -42.4424, 0.59 ) }
    dend_31 { pt3dadd( 78.765, 114.649, -42.477, 0.59 ) }
    dend_31 { pt3dadd( 79.7913, 115.733, -42.7797, 0.59 ) }
    dend_31 { pt3dadd( 80.925, 116.884, -43.0271, 0.59 ) }
    dend_31 { pt3dadd( 81.2873, 117.268, -43.0595, 0.59 ) }
    dend_31 { pt3dadd( 82.0697, 118.158, -43.1294, 0.59 ) }
    dend_31 { pt3dadd( 82.2778, 118.418, -43.1436, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( 82.9912, 119.495, -43.208, 0.52 ) }
    dend_31 { pt3dadd( 83.0838, 119.69, -43.2477, 0.52 ) }
    dend_31 { pt3dadd( 83.4178, 120.619, -43.5856, 0.52 ) }
    dend_31 { pt3dadd( 83.4459, 120.706, -43.6257, 0.52 ) }
    dend_31 { pt3dadd( 83.8, 121.819, -44.2159, 0.52 ) }
    dend_31 { pt3dadd( 83.9121, 122.21, -44.415, 0.52 ) }
    dend_31 { pt3dadd( 84.4284, 123.991, -45.3463, 0.52 ) }
    dend_31 { pt3dadd( 84.5854, 124.562, -45.6327, 0.52 ) }
    dend_31 { pt3dadd( 85.0083, 126.115, -46.3966, 0.52 ) }
    dend_31 { pt3dadd( 85.0455, 126.248, -46.4552, 0.52 ) }
    dend_31 { pt3dadd( 85.4034, 127.523, -46.9305, 0.52 ) }
    dend_31 { pt3dadd( 85.4237, 127.588, -46.946, 0.52 ) }
    dend_31 { pt3dadd( 85.8291, 128.772, -47.0371, 0.52 ) }
    dend_31 { pt3dadd( 86.0005, 129.242, -47.0468, 0.52 ) }
    dend_31 { pt3dadd( 86.2103, 129.779, -47.1794, 0.52 ) }
    dend_31 { pt3dadd( 86.3088, 130.095, -47.3326, 0.52 ) }
    dend_31 { pt3dadd( 86.4296, 130.622, -47.7109, 0.52 ) }
    dend_31 { pt3dadd( 86.4685, 130.851, -47.8972, 0.52 ) }
    dend_31 { pt3dadd( 86.5963, 131.662, -48.6152, 0.52 ) }
    dend_31 { pt3dadd( 86.9513, 133.872, -50.6346, 0.52 ) }
    dend_31 { pt3dadd( 87.0789, 134.478, -51.1852, 0.52 ) }
    dend_31 { pt3dadd( 87.3212, 135.336, -51.9643, 0.52 ) }
    dend_31 { pt3dadd( 87.4409, 135.623, -52.2147, 0.52 ) }
    dend_31 { pt3dadd( 87.8662, 136.386, -52.8346, 0.52 ) }
    dend_31 { pt3dadd( 87.9168, 136.457, -52.8843, 0.52 ) }
    dend_31 { pt3dadd( 88.5058, 137.168, -53.227, 0.52 ) }
    dend_31 { pt3dadd( 88.6104, 137.283, -53.2954, 0.52 ) }
    dend_31 { pt3dadd( 89.2568, 137.996, -53.7812, 0.52 ) }
    dend_31 { pt3dadd( 89.4405, 138.215, -53.9252, 0.52 ) }
    dend_31 { pt3dadd( 90.176, 139.288, -54.5327, 0.52 ) }
    dend_31 { pt3dadd( 90.2392, 139.39, -54.5827, 0.52 ) }
    dend_31 { pt3dadd( 90.9986, 140.769, -55.2064, 0.52 ) }
    dend_31 { pt3dadd( 91.0545, 140.878, -55.2513, 0.52 ) }
    dend_31 { pt3dadd( 91.6155, 142.038, -55.6684, 0.59 ) }
    dend_31 { pt3dadd( 92.2188, 143.316, -56.0667, 0.59 ) }
    dend_31 { pt3dadd( 92.4571, 143.765, -56.188, 0.59 ) }
    dend_31 { pt3dadd( 93.113, 144.927, -56.4928, 0.59 ) }
    dend_31 { pt3dadd( 93.4213, 145.495, -56.6659, 0.59 ) }
    dend_31 { pt3dadd( 93.7753, 146.156, -56.9196, 0.44 ) }
    dend_31 { pt3dadd( 93.7988, 146.205, -56.9436, 0.44 ) }
    dend_31 { pt3dadd( 94.4187, 147.597, -57.6846, 0.44 ) }
    dend_31 { pt3dadd( 94.4456, 147.675, -57.7244, 0.44 ) }
    dend_31 { pt3dadd( 94.9177, 149.381, -58.5369, 0.44 ) }
    dend_31 { pt3dadd( 95.0079, 149.726, -58.6933, 0.44 ) }
    dend_31 { pt3dadd( 95.3778, 151.227, -59.3665, 0.44 ) }
    dend_31 { pt3dadd( 95.4336, 151.456, -59.4648, 0.44 ) }
    dend_31 { pt3dadd( 95.7082, 152.743, -59.9959, 0.44 ) }
    dend_31 { pt3dadd( 95.7688, 152.996, -60.0876, 0.44 ) }
    dend_31 { pt3dadd( 96.151, 154.393, -60.5137, 0.44 ) }
    dend_31 { pt3dadd( 96.215, 154.629, -60.5771, 0.44 ) }
    dend_31 { pt3dadd( 96.5828, 155.976, -60.906, 0.44 ) }
    dend_31 { pt3dadd( 96.7055, 156.522, -61.0239, 0.44 ) }
    dend_31 { pt3dadd( 96.9552, 158.014, -61.3205, 0.44 ) }
    dend_31 { pt3dadd( 96.9794, 158.297, -61.3808, 0.44 ) }
    dend_31 { pt3dadd( 96.9806, 159.372, -61.6217, 0.44 ) }
    dend_31 { pt3dadd( 96.982, 159.44, -61.6391, 0.44 ) }
    dend_31 { pt3dadd( 97.0224, 160.652, -62.0027, 0.44 ) }
    dend_31 { pt3dadd( 97.0457, 160.914, -62.0953, 0.44 ) }
    dend_31 { pt3dadd( 97.2212, 162.011, -62.5734, 0.44 ) }
    dend_31 { pt3dadd( 97.2635, 162.18, -62.6527, 0.44 ) }
    dend_31 { pt3dadd( 97.7196, 163.469, -63.2969, 0.44 ) }
    dend_31 { pt3dadd( 97.7607, 163.556, -63.3404, 0.44 ) }
    dend_31 { pt3dadd( 98.151, 164.195, -63.6645, 0.44 ) }
    dend_31 { pt3dadd( 98.3172, 164.43, -63.7815, 0.44 ) }
    dend_31 { pt3dadd( 98.8001, 165.039, -64.0774, 0.44 ) }
    dend_31 { pt3dadd( 98.9174, 165.186, -64.1592, 0.44 ) }
    dend_31 { pt3dadd( 99.4095, 165.813, -64.5067, 0.44 ) }
    dend_31 { pt3dadd( 99.5193, 165.946, -64.5858, 0.44 ) }
    dend_31 { pt3dadd( 100.043, 166.723, -65.0413, 0.44 ) }
    dend_31 { pt3dadd( 100.098, 166.825, -65.0994, 0.44 ) }
    dend_31 { pt3dadd( 100.459, 167.976, -65.7338, 0.44 ) }
    dend_31 { pt3dadd( 100.54, 168.548, -66.0339, 0.44 ) }
    dend_31 { pt3dadd( 100.563, 168.873, -66.2273, 0.44 ) }
    dend_31 { pt3dadd( 100.626, 170.568, -67.3141, 0.44 ) }
    dend_31 { pt3dadd( 100.634, 170.673, -67.3912, 0.44 ) }
    dend_31 { pt3dadd( 100.796, 171.838, -68.3383, 0.44 ) }
    dend_31 { pt3dadd( 100.83, 172.014, -68.4799, 0.44 ) }
    dend_31 { pt3dadd( 101.347, 173.987, -70.0047, 0.44 ) }
    dend_31 { pt3dadd( 101.377, 174.082, -70.0717, 0.44 ) }
    dend_31 { pt3dadd( 101.932, 175.513, -71.0643, 0.44 ) }
    dend_31 { pt3dadd( 102.079, 175.967, -71.3658, 0.44 ) }
    dend_31 { pt3dadd( 102.435, 177.214, -72.1791, 0.44 ) }
    dend_31 { pt3dadd( 102.471, 178.059, -72.7125, 0.44 ) }
    dend_31 { pt3dadd( 102.104, 179.45, -73.6437, 0.44 ) }
    dend_31 { pt3dadd( 102.009, 179.684, -73.8235, 0.44 ) }
    dend_31 { pt3dadd( 101.361, 180.841, -74.8263, 0.44 ) }
    dend_31 { pt3dadd( 101.153, 181.219, -75.1893, 0.44 ) }
    dend_31 { pt3dadd( 100.607, 182.202, -76.2351, 0.44 ) }
    dend_31 { pt3dadd( 100.247, 182.884, -76.9624, 0.44 ) }
    dend_31 { pt3dadd( 99.7524, 183.901, -77.9747, 0.44 ) }
    dend_31 { pt3dadd( 99.7039, 184.013, -78.0709, 0.44 ) }
    dend_31 { pt3dadd( 99.3537, 184.996, -78.8029, 0.44 ) }
    dend_31 { pt3dadd( 99.2821, 185.212, -78.9445, 0.44 ) }
    dend_31 { pt3dadd( 98.9543, 186.324, -79.5959, 0.44 ) }
    dend_31 { pt3dadd( 98.8189, 186.756, -79.8119, 0.44 ) }
    dend_31 { pt3dadd( 98.42, 187.89, -80.3665, 0.44 ) }
    dend_31 { pt3dadd( 98.3643, 188.055, -80.448, 0.44 ) }
    dend_31 { pt3dadd( 98.2392, 188.44, -80.6421, 0.44 ) }
    dend_31 { pt3dadd( 98.205, 188.667, -80.7541, 0.44 ) }
    dend_31 { pt3dadd( 98.2442, 189.171, -81.0133, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 98.2767, 189.338, -81.1159, 0.44 ) }
    dend_31 { pt3dadd( 98.4073, 189.85, -81.4662, 0.44 ) }
    dend_31 { pt3dadd( 98.4421, 190.038, -81.5948, 0.44 ) }
    dend_31 { pt3dadd( 98.526, 190.654, -82.0221, 0.44 ) }
    dend_31 { pt3dadd( 98.5754, 191.311, -82.4519, 0.44 ) }
    dend_31 { pt3dadd( 98.6073, 192.278, -83.0496, 0.44 ) }
    dend_31 { pt3dadd( 98.6219, 192.666, -83.2599, 0.44 ) }
    dend_31 { pt3dadd( 98.649, 193.369, -83.5639, 0.44 ) }
    dend_31 { pt3dadd( 98.6484, 193.425, -83.5839, 0.44 ) }
    dend_31 { pt3dadd( 98.608, 194.133, -83.7722, 0.44 ) }
    dend_31 { pt3dadd( 98.5817, 194.524, -83.8478, 0.44 ) }
    dend_31 { pt3dadd( 98.5299, 195.297, -83.9769, 0.44 ) }
    dend_31 { pt3dadd( 98.4938, 196.231, -84.16, 0.44 ) }
    dend_31 { pt3dadd( 98.4609, 197.662, -84.4788, 0.44 ) }
    dend_31 { pt3dadd( 98.4818, 198.17, -84.6317, 0.44 ) }
    dend_31 { pt3dadd( 98.568, 199.137, -85.0211, 0.44 ) }
    dend_31 { pt3dadd( 98.6071, 199.366, -85.1376, 0.44 ) }
    dend_31 { pt3dadd( 98.8414, 200.33, -85.7147, 0.44 ) }
    dend_31 { pt3dadd( 98.8578, 200.379, -85.7456, 0.44 ) }
    dend_31 { pt3dadd( 99.5593, 202.037, -86.8175, 0.44 ) }
    dend_31 { pt3dadd( 99.779, 202.479, -87.0917, 0.44 ) }
    dend_31 { pt3dadd( 100.498, 203.787, -87.864, 0.44 ) }
    dend_31 { pt3dadd( 100.63, 204.028, -88.003, 0.44 ) }
    dend_31 { pt3dadd( 101.183, 205.036, -88.564, 0.44 ) }
    dend_31 { pt3dadd( 101.211, 205.092, -88.5942, 0.44 ) }
    dend_31 { pt3dadd( 101.828, 206.498, -89.2865, 0.44 ) }
    dend_31 { pt3dadd( 101.946, 206.797, -89.4281, 0.44 ) }
    dend_31 { pt3dadd( 102.345, 207.944, -89.9916, 0.44 ) }
    dend_31 { pt3dadd( 102.456, 208.349, -90.1922, 0.44 ) }
    dend_31 { pt3dadd( 102.703, 209.656, -90.8461, 0.44 ) }
    dend_31 { pt3dadd( 102.709, 209.726, -90.8851, 0.44 ) }
    dend_31 { pt3dadd( 102.666, 210.482, -91.3526, 0.44 ) }
    dend_31 { pt3dadd( 102.642, 210.699, -91.4869, 0.44 ) }
    dend_31 { pt3dadd( 102.433, 212.051, -92.3263, 0.44 ) }
    dend_31 { pt3dadd( 102.384, 212.325, -92.4958, 0.44 ) }
    dend_31 { pt3dadd( 102.071, 213.878, -93.4385, 0.44 ) }
    dend_31 { pt3dadd( 102.001, 214.306, -93.6835, 0.44 ) }
    dend_31 { pt3dadd( 101.928, 214.876, -94.0237, 0.44 ) }
    dend_31 { pt3dadd( 101.925, 215.073, -94.1387, 0.44 ) }
    dend_31 { pt3dadd( 102.004, 216.175, -94.7229, 0.44 ) }
    dend_31 { pt3dadd( 102.012, 216.238, -94.7527, 0.44 ) }
    dend_31 { pt3dadd( 102.197, 217.392, -95.2009, 0.44 ) }
    dend_31 { pt3dadd( 102.359, 218.302, -95.5465, 0.44 ) }
    dend_31 { pt3dadd( 102.807, 220.301, -96.3489, 0.44 ) }
    dend_31 { pt3dadd( 103.086, 221.285, -96.7585, 0.44 ) }
    dend_31 { pt3dadd( 103.107, 221.346, -96.7859, 0.44 ) }
    dend_31 { pt3dadd( 103.328, 221.987, -97.0644, 0.44 ) }
    dend_31 { pt3dadd( 103.349, 222.048, -97.0903, 0.44 ) }
    dend_31 { pt3dadd( 103.787, 223.247, -97.5281, 0.44 ) }
    dend_31 { pt3dadd( 104.175, 224.275, -97.9273, 0.44 ) }
    dend_31 { pt3dadd( 104.251, 224.45, -97.9967, 0.44 ) }
    dend_31 { pt3dadd( 104.83, 225.658, -98.4688, 0.44 ) }
    dend_31 { pt3dadd( 104.924, 225.815, -98.5298, 0.44 ) }
    dend_31 { pt3dadd( 105.355, 226.433, -98.75, 0.44 ) }
    dend_31 { pt3dadd( 105.724, 226.916, -98.884, 0.44 ) }
    dend_31 { pt3dadd( 106.693, 228.046, -99.1648, 0.44 ) }
    dend_31 { pt3dadd( 106.962, 228.361, -99.2341, 0.44 ) }
    dend_31 { pt3dadd( 107.832, 229.35, -99.4389, 0.44 ) }
    dend_31 { pt3dadd( 108.048, 229.636, -99.5047, 0.44 ) }
    dend_31 { pt3dadd( 108.791, 230.754, -99.7877, 0.44 ) }
    dend_31 { pt3dadd( 108.949, 231.03, -99.8651, 0.44 ) }
    dend_31 { pt3dadd( 109.652, 232.549, -100.39, 0.44 ) }
    dend_31 { pt3dadd( 109.739, 232.746, -100.465, 0.44 ) }
    dend_31 { pt3dadd( 110.212, 233.864, -100.963, 0.44 ) }
    dend_31 { pt3dadd( 110.241, 233.92, -100.991, 0.44 ) }
    dend_31 { pt3dadd( 110.79, 234.809, -101.582, 0.44 ) }
    dend_31 { pt3dadd( 110.978, 235.094, -101.805, 0.44 ) }
    dend_31 { pt3dadd( 111.388, 235.674, -102.373, 0.44 ) }
    dend_31 { pt3dadd( 111.612, 235.99, -102.699, 0.44 ) }
    dend_31 { pt3dadd( 112.107, 236.692, -103.456, 0.44 ) }
    dend_31 { pt3dadd( 112.917, 237.964, -104.839, 0.44 ) }
    dend_31 { pt3dadd( 113.341, 238.664, -105.603, 0.44 ) }
    dend_31 { pt3dadd( 113.736, 239.309, -106.297, 0.44 ) }
    dend_31 { pt3dadd( 114.113, 239.928, -106.971, 0.44 ) }
    dend_31 { pt3dadd( 114.206, 240.054, -107.099, 0.44 ) }
    dend_31 { pt3dadd( 114.947, 240.862, -107.775, 0.44 ) }
    dend_31 { pt3dadd( 115.458, 241.326, -108.04, 0.44 ) }
    dend_31 { pt3dadd( 115.859, 241.663, -108.19, 0.44 ) }
    dend_31 { pt3dadd( 115.966, 241.75, -108.217, 0.44 ) }
    dend_31 { pt3dadd( 117.553, 242.977, -108.519, 0.44 ) }
    dend_31 { pt3dadd( 118.741, 243.886, -108.681, 0.44 ) }
    dend_31 { pt3dadd( 118.805, 243.934, -108.684, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 82/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 72.8252, 97.8862, -29.8991, 0.59 ) }
    dend_30 { pt3dadd( 74.9077, 99.1084, -30.9608, 0.59 ) }
    dend_30 { pt3dadd( 75.0044, 99.1635, -31.0054, 0.59 ) }
    dend_30 { pt3dadd( 76.4716, 99.9804, -31.6565, 0.44 ) }
    dend_30 { pt3dadd( 76.7644, 100.143, -31.7894, 0.44 ) }
    dend_30 { pt3dadd( 78.2801, 100.973, -32.5232, 0.29 ) }
    dend_30 { pt3dadd( 78.4515, 101.065, -32.6078, 0.29 ) }
    dend_30 { pt3dadd( 79.3642, 101.547, -33.0169, 0.29 ) }
    dend_30 { pt3dadd( 79.5272, 101.632, -33.0913, 0.29 ) }
    dend_30 { pt3dadd( 81.2267, 102.507, -33.8994, 0.29 ) }
    dend_30 { pt3dadd( 81.814, 102.839, -34.1914, 0.29 ) }
    dend_30 { pt3dadd( 82.8716, 103.469, -34.7312, 0.29 ) }
    dend_30 { pt3dadd( 83.143, 103.607, -34.8529, 0.29 ) }
    dend_30 { pt3dadd( 84.0156, 103.99, -35.1857, 0.29 ) }
    dend_30 { pt3dadd( 84.2927, 104.107, -35.286, 0.29 ) }
    dend_30 { pt3dadd( 84.9057, 104.338, -35.5272, 0.29 ) }
    dend_30 { pt3dadd( 85.3489, 104.506, -35.732, 0.29 ) }
    dend_30 { pt3dadd( 87.0359, 105.12, -36.6676, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_30 { pt3dadd( 87.4126, 105.261, -36.9032, 0.29 ) }
    dend_30 { pt3dadd( 88.3857, 105.626, -37.5863, 0.29 ) }
    dend_30 { pt3dadd( 89.2445, 105.95, -38.2279, 0.29 ) }
    dend_30 { pt3dadd( 90.151, 106.311, -38.9679, 0.29 ) }
    dend_30 { pt3dadd( 90.2529, 106.364, -39.064, 0.29 ) }
    dend_30 { pt3dadd( 91.1703, 107.072, -40.1214, 0.29 ) }
    dend_30 { pt3dadd( 91.3948, 107.225, -40.3582, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 7/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.6307, 16.0165, 37.038, 0.96 ) }
    dend_24 { pt3dadd( 11.5658, 16.6152, 36.4787, 0.96 ) }
    dend_24 { pt3dadd( 12.0028, 16.9017, 36.1445, 0.96 ) }
    dend_24 { pt3dadd( 12.9929, 17.5564, 35.7537, 0.96 ) }
    dend_24 { pt3dadd( 14.2715, 18.4076, 35.7701, 0.96 ) }
    dend_24 { pt3dadd( 14.4094, 18.5028, 35.8356, 0.96 ) }
    dend_24 { pt3dadd( 15.5941, 19.371, 37.0653, 0.96 ) }
    dend_24 { pt3dadd( 15.639, 19.414, 37.3095, 0.96 ) }
    dend_24 { pt3dadd( 15.149, 19.8625, 41.6145, 0.96 ) }
    dend_24 { pt3dadd( 15.0934, 19.9066, 41.9776, 0.96 ) }
    dend_24 { pt3dadd( 14.8239, 20.0945, 43.4676, 0.96 ) }
    dend_24 { pt3dadd( 14.7897, 20.117, 43.6553, 0.96 ) }
    dend_24 { pt3dadd( 14.5122, 20.2702, 45.1116, 0.96 ) }
    dend_24 { pt3dadd( 14.0481, 20.6027, 48.0108, 0.96 ) }
    dend_24 { pt3dadd( 13.8778, 20.7661, 49.1283, 0.96 ) }
    dend_24 { pt3dadd( 13.8858, 20.8153, 49.3733, 0.96 ) }
    dend_24 { pt3dadd( 14.1422, 21.0921, 50.4107, 0.96 ) }
    dend_24 { pt3dadd( 14.3897, 21.2539, 50.8979, 0.96 ) }
    dend_24 { pt3dadd( 15.4117, 21.7595, 52.0736, 0.96 ) }
    dend_24 { pt3dadd( 15.5374, 21.799, 52.1506, 0.96 ) }
    dend_24 { pt3dadd( 16.7494, 22.1017, 52.6626, 0.96 ) }
    dend_24 { pt3dadd( 16.9025, 22.1247, 52.7077, 0.96 ) }
    dend_24 { pt3dadd( 18.429, 22.1835, 52.9963, 0.96 ) }
    dend_24 { pt3dadd( 19.2194, 22.0863, 53.1917, 0.96 ) }
    dend_24 { pt3dadd( 20.4632, 21.5725, 53.8058, 0.96 ) }
    dend_24 { pt3dadd( 20.5238, 21.5488, 53.8523, 0.96 ) }
    dend_24 { pt3dadd( 21.8454, 21.0793, 55.246, 0.96 ) }
    dend_24 { pt3dadd( 22.4677, 21.0255, 55.875, 0.96 ) }
    dend_24 { pt3dadd( 23.1189, 21.1115, 56.5305, 0.96 ) }
    dend_24 { pt3dadd( 23.3698, 21.1917, 56.7559, 0.96 ) }
    dend_24 { pt3dadd( 24.3709, 21.6392, 57.5849, 0.96 ) }
    dend_24 { pt3dadd( 24.6758, 21.7866, 57.7963, 0.96 ) }
    dend_24 { pt3dadd( 25.7542, 22.3448, 58.3872, 0.96 ) }
    dend_24 { pt3dadd( 26.1671, 22.5319, 58.5336, 0.96 ) }
    dend_24 { pt3dadd( 27.6334, 23.1186, 58.8812, 0.66 ) }
    dend_24 { pt3dadd( 27.73, 23.1443, 58.8824, 0.66 ) }
    dend_24 { pt3dadd( 29.0964, 23.3969, 58.712, 0.66 ) }
    dend_24 { pt3dadd( 29.3603, 23.4398, 58.6573, 0.66 ) }
    dend_24 { pt3dadd( 31.713, 23.7785, 57.993, 0.66 ) }
    dend_24 { pt3dadd( 31.8465, 23.7985, 57.9602, 0.66 ) }
    dend_24 { pt3dadd( 35.0672, 24.3118, 57.1958, 0.66 ) }
    dend_24 { pt3dadd( 35.802, 24.4795, 57.0989, 0.66 ) }
    dend_24 { pt3dadd( 36.4862, 24.7025, 57.0987, 0.66 ) }
    dend_24 { pt3dadd( 36.6084, 24.7617, 57.1326, 0.66 ) }
    dend_24 { pt3dadd( 38.4704, 26.1382, 58.5015, 0.66 ) }
    dend_24 { pt3dadd( 38.5989, 26.2902, 58.6527, 0.66 ) }
    dend_24 { pt3dadd( 39.2756, 27.7462, 59.935, 0.66 ) }
    dend_24 { pt3dadd( 39.3651, 27.9934, 60.1229, 0.66 ) }
    dend_24 { pt3dadd( 39.5571, 28.6725, 60.5453, 0.66 ) }
    dend_24 { pt3dadd( 39.6061, 28.8845, 60.6505, 0.66 ) }
    dend_24 { pt3dadd( 40.0267, 31.1243, 61.1689, 0.66 ) }
    dend_24 { pt3dadd( 40.3377, 32.8463, 61.3148, 0.66 ) }
    dend_24 { pt3dadd( 40.3735, 33.0736, 61.2957, 0.66 ) }
    dend_24 { pt3dadd( 40.5219, 34.0678, 61.123, 0.52 ) }
    dend_24 { pt3dadd( 40.5564, 34.3077, 61.0615, 0.52 ) }
    dend_24 { pt3dadd( 40.9584, 37.2463, 59.9217, 0.52 ) }
    dend_24 { pt3dadd( 40.9822, 37.431, 59.7853, 0.52 ) }
    dend_24 { pt3dadd( 41.118, 38.3088, 58.8848, 0.52 ) }
    dend_24 { pt3dadd( 41.1254, 38.3545, 58.8323, 0.52 ) }
    dend_24 { pt3dadd( 48.6846, 42.1759, 64.1478, 0.52 ) }
    dend_24 { pt3dadd( 56.613, 45.1568, 69.4634, 0.52 ) }
    dend_24 { pt3dadd( 64.4428, 48.372, 74.7885, 0.52 ) }
    dend_24 { pt3dadd( 72.0937, 49.7477, 81.0791, 0.52 ) }
    dend_24 { pt3dadd( 80.2564, 51.3423, 86.6313, 0.52 ) }
    dend_24 { pt3dadd( 89.6771, 50.9097, 89.9575, 0.52 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 72/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 10.6307, 16.0165, 37.038, 0.96 ) }
    dend_21 { pt3dadd( 12.1347, 15.1053, 36.5269, 0.96 ) }
    dend_21 { pt3dadd( 12.2218, 15.0565, 36.4905, 0.96 ) }
    dend_21 { pt3dadd( 13.5168, 14.3578, 35.8246, 0.96 ) }
    dend_21 { pt3dadd( 13.5703, 14.3311, 35.7882, 0.96 ) }
    dend_21 { pt3dadd( 14.4514, 13.9054, 35.1136, 0.96 ) }
    dend_21 { pt3dadd( 14.6457, 13.8168, 34.9836, 0.96 ) }
    dend_21 { pt3dadd( 16.132, 13.1708, 34.1047, 0.96 ) }
    dend_21 { pt3dadd( 16.6542, 12.9521, 33.8283, 0.96 ) }
    dend_21 { pt3dadd( 17.9004, 12.4927, 33.3568, 0.96 ) }
    dend_21 { pt3dadd( 17.9651, 12.4713, 33.3409, 0.96 ) }
    dend_21 { pt3dadd( 19.7965, 11.8459, 33.0799, 0.81 ) }
    dend_21 { pt3dadd( 20.6245, 11.5462, 33.0426, 0.81 ) }
    dend_21 { pt3dadd( 20.6996, 11.5193, 33.0487, 0.81 ) }
    dend_21 { pt3dadd( 22.4712, 10.8907, 33.262, 0.81 ) }
    dend_21 { pt3dadd( 23.4416, 10.5606, 33.3915, 0.81 ) }
    dend_21 { pt3dadd( 24.1651, 10.3275, 33.45, 0.81 ) }
    dend_21 { pt3dadd( 24.2742, 10.2992, 33.4396, 0.81 ) }
    dend_21 { pt3dadd( 25.7702, 10.0075, 33.1789, 0.96 ) }
    dend_21 { pt3dadd( 25.9339, 9.98028, 33.1417, 0.96 ) }
    dend_21 { pt3dadd( 27.2251, 9.78564, 32.8068, 0.96 ) }
    dend_21 { pt3dadd( 27.3199, 9.77164, 32.7821, 0.96 ) }
    dend_21 { pt3dadd( 29.6766, 9.45475, 32.1766, 0.96 ) }
    dend_21 { pt3dadd( 31.0376, 9.21117, 31.8659, 0.96 ) }
    dend_21 { pt3dadd( 31.1046, 9.19611, 31.8524, 0.96 ) }
    dend_21 { pt3dadd( 32.5272, 8.78523, 31.5522, 0.96 ) }
    dend_21 { pt3dadd( 32.8578, 8.66439, 31.4778, 0.74 ) }
    dend_21 { pt3dadd( 32.983, 8.60841, 31.4497, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_21 { pt3dadd( 34.1806, 7.91075, 31.2236, 0.74 ) }
    dend_21 { pt3dadd( 34.3039, 7.83737, 31.1889, 0.74 ) }
    dend_21 { pt3dadd( 35.7311, 7.02323, 30.7129, 0.74 ) }
    dend_21 { pt3dadd( 35.998, 6.87709, 30.6139, 0.74 ) }
    dend_21 { pt3dadd( 37.0049, 6.35821, 30.2546, 0.74 ) }
    dend_21 { pt3dadd( 37.091, 6.31732, 30.2281, 0.74 ) }
    dend_21 { pt3dadd( 38.0098, 5.91508, 29.9834, 0.74 ) }
    dend_21 { pt3dadd( 38.2104, 5.83047, 29.9489, 0.74 ) }
    dend_21 { pt3dadd( 39.5112, 5.28314, 29.8692, 0.74 ) }
    dend_21 { pt3dadd( 39.6014, 5.24223, 29.8666, 0.74 ) }
    dend_21 { pt3dadd( 40.619, 4.75312, 29.8495, 0.74 ) }
    dend_21 { pt3dadd( 40.9055, 4.60605, 29.8508, 0.74 ) }
    dend_21 { pt3dadd( 41.9955, 4.01159, 29.8992, 0.66 ) }
    dend_21 { pt3dadd( 42.2494, 3.87402, 29.9259, 0.66 ) }
    dend_21 { pt3dadd( 43.9362, 2.95942, 30.2025, 0.66 ) }
    dend_21 { pt3dadd( 44.0994, 2.88125, 30.235, 0.66 ) }
    dend_21 { pt3dadd( 45.6297, 2.21987, 30.5975, 0.66 ) }
    dend_21 { pt3dadd( 46.0845, 2.04646, 30.7117, 0.66 ) }
    dend_21 { pt3dadd( 47.0906, 1.71443, 30.9823, 0.66 ) }
    dend_21 { pt3dadd( 47.183, 1.68774, 31.0058, 0.66 ) }
    dend_21 { pt3dadd( 48.8661, 1.2739, 31.4312, 0.66 ) }
    dend_21 { pt3dadd( 48.9318, 1.26106, 31.4516, 0.66 ) }
    dend_21 { pt3dadd( 49.9534, 1.12693, 31.8104, 0.66 ) }
    dend_21 { pt3dadd( 50.0459, 1.11949, 31.8477, 0.66 ) }
    dend_21 { pt3dadd( 50.8841, 1.08884, 32.2691, 0.66 ) }
    dend_21 { pt3dadd( 51.0019, 1.08477, 32.3426, 0.66 ) }
    dend_21 { pt3dadd( 52.4346, 0.959273, 33.5368, 0.66 ) }
    dend_21 { pt3dadd( 52.5233, 0.949811, 33.6171, 0.66 ) }
    dend_21 { pt3dadd( 53.1663, 0.820766, 34.2032, 0.66 ) }
    dend_21 { pt3dadd( 53.9971, 0.598184, 34.9256, 0.66 ) }
    dend_21 { pt3dadd( 54.1892, 0.530386, 35.08, 0.66 ) }
    dend_21 { pt3dadd( 55.2704, 0.0257644, 35.8308, 0.66 ) }
    dend_21 { pt3dadd( 55.4701, -0.0900621, 35.9317, 0.66 ) }
    dend_21 { pt3dadd( 56.7926, -0.913114, 36.4984, 0.66 ) }
    dend_21 { pt3dadd( 56.8677, -0.96333, 36.5166, 0.66 ) }
    dend_21 { pt3dadd( 57.3915, -1.31103, 36.5591, 0.66 ) }
    dend_21 { pt3dadd( 57.6785, -1.48068, 36.5551, 0.66 ) }
    dend_21 { pt3dadd( 58.8386, -2.10859, 36.4258, 0.66 ) }
    dend_21 { pt3dadd( 59.065, -2.21076, 36.3972, 0.66 ) }
    dend_21 { pt3dadd( 60.765, -2.78129, 36.1696, 0.66 ) }
    dend_21 { pt3dadd( 60.937, -2.81528, 36.1535, 0.66 ) }
    dend_21 { pt3dadd( 62.1365, -2.89918, 36.0865, 0.66 ) }
    dend_21 { pt3dadd( 62.2065, -2.89881, 36.0867, 0.66 ) }
    dend_21 { pt3dadd( 63.0805, -2.83039, 36.1576, 0.66 ) }
    dend_21 { pt3dadd( 63.5935, -2.78483, 36.2257, 0.66 ) }
    dend_21 { pt3dadd( 64.8187, -2.63571, 36.4588, 0.66 ) }
    dend_21 { pt3dadd( 64.8876, -2.63114, 36.47, 0.66 ) }
    dend_21 { pt3dadd( 66.18, -2.62859, 36.6279, 0.66 ) }
    dend_21 { pt3dadd( 66.3433, -2.65022, 36.6446, 0.66 ) }
    dend_21 { pt3dadd( 67.138, -2.85177, 36.7157, 0.66 ) }
    dend_21 { pt3dadd( 67.296, -2.90644, 36.7278, 0.66 ) }
    dend_21 { pt3dadd( 67.9701, -3.20242, 36.7073, 0.66 ) }
    dend_21 { pt3dadd( 68.0537, -3.24033, 36.6983, 0.66 ) }
    dend_21 { pt3dadd( 69.727, -3.97913, 36.4208, 0.66 ) }
    dend_21 { pt3dadd( 69.7901, -4.00665, 36.4079, 0.66 ) }
    dend_21 { pt3dadd( 70.9465, -4.49894, 36.1379, 0.66 ) }
    dend_21 { pt3dadd( 72.2854, -5.06208, 35.8018, 0.66 ) }
    dend_21 { pt3dadd( 72.3943, -5.10422, 35.7742, 0.66 ) }
    dend_21 { pt3dadd( 73.138, -5.35944, 35.5999, 0.66 ) }
    dend_21 { pt3dadd( 73.2724, -5.38493, 35.5753, 0.66 ) }
    dend_21 { pt3dadd( 74.2162, -5.47587, 35.4645, 0.66 ) }
    dend_21 { pt3dadd( 74.542, -5.45938, 35.4513, 0.66 ) }
    dend_21 { pt3dadd( 75.4925, -5.3266, 35.4722, 0.66 ) }
    dend_21 { pt3dadd( 76.0024, -5.22458, 35.4752, 0.66 ) }
    dend_21 { pt3dadd( 77.3457, -4.87709, 35.4707, 0.66 ) }
    dend_21 { pt3dadd( 77.4813, -4.84205, 35.4731, 0.66 ) }
    dend_21 { pt3dadd( 78.3322, -4.59942, 35.5014, 0.66 ) }
    dend_21 { pt3dadd( 78.9304, -4.49584, 35.5463, 0.66 ) }
    dend_21 { pt3dadd( 79.1892, -4.48628, 35.5768, 0.66 ) }
    dend_21 { pt3dadd( 79.635, -4.53183, 35.6493, 0.66 ) }
    dend_21 { pt3dadd( 80.5954, -4.74657, 35.8392, 0.66 ) }
    dend_21 { pt3dadd( 80.6531, -4.7581, 35.8512, 0.66 ) }
    dend_21 { pt3dadd( 82.2579, -5.00334, 36.0376, 0.66 ) }
    dend_21 { pt3dadd( 82.5468, -5.02604, 36.0464, 0.66 ) }
    dend_21 { pt3dadd( 83.7583, -5.01555, 35.9645, 0.66 ) }
    dend_21 { pt3dadd( 83.9834, -4.99654, 35.9333, 0.66 ) }
    dend_21 { pt3dadd( 85.3196, -4.87138, 35.6933, 0.66 ) }
    dend_21 { pt3dadd( 87.1894, -4.72134, 35.2931, 0.66 ) }
    dend_21 { pt3dadd( 87.3377, -4.71726, 35.2569, 0.66 ) }
    dend_21 { pt3dadd( 89.2865, -4.83619, 34.8136, 0.66 ) }
    dend_21 { pt3dadd( 89.3542, -4.84519, 34.7982, 0.66 ) }
    dend_21 { pt3dadd( 91.2737, -5.28407, 34.4129, 0.66 ) }
    dend_21 { pt3dadd( 91.4711, -5.34409, 34.3795, 0.66 ) }
    dend_21 { pt3dadd( 93.0182, -5.80396, 34.2122, 0.66 ) }
    dend_21 { pt3dadd( 94.4349, -6.19147, 34.0607, 0.66 ) }
    dend_21 { pt3dadd( 94.7143, -6.2685, 34.0285, 0.66 ) }
    dend_21 { pt3dadd( 96.6626, -6.7996, 33.8033, 0.66 ) }
    dend_21 { pt3dadd( 96.8821, -6.86581, 33.7765, 0.66 ) }
    dend_21 { pt3dadd( 99.2068, -7.64655, 33.4996, 0.66 ) }
    dend_21 { pt3dadd( 99.2708, -7.67296, 33.4895, 0.66 ) }
    dend_21 { pt3dadd( 100.183, -8.16602, 33.3076, 0.66 ) }
    dend_21 { pt3dadd( 100.424, -8.31681, 33.2504, 0.66 ) }
    dend_21 { pt3dadd( 101.957, -9.4348, 32.805, 0.66 ) }
    dend_21 { pt3dadd( 102.048, -9.51076, 32.7753, 0.66 ) }
    dend_21 { pt3dadd( 103.056, -10.4965, 32.409, 0.66 ) }
    dend_21 { pt3dadd( 103.833, -11.2388, 32.1508, 0.66 ) }
    dend_21 { pt3dadd( 104.006, -11.4027, 32.1073, 0.66 ) }
    dend_21 { pt3dadd( 105.102, -12.4435, 31.9225, 0.66 ) }
    dend_21 { pt3dadd( 105.252, -12.6001, 31.8845, 0.66 ) }
    dend_21 { pt3dadd( 105.794, -13.2201, 31.6997, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_21 { pt3dadd( 106.001, -13.4746, 31.6102, 0.66 ) }
    dend_21 { pt3dadd( 106.608, -14.3167, 31.209, 0.66 ) }
    dend_21 { pt3dadd( 106.643, -14.3661, 31.1744, 0.66 ) }
    dend_21 { pt3dadd( 107.92, -16.135, 29.49, 0.66 ) }
    dend_21 { pt3dadd( 108.013, -16.233, 29.3705, 0.66 ) }
    dend_21 { pt3dadd( 108.352, -16.5278, 28.9232, 0.66 ) }
    dend_21 { pt3dadd( 108.457, -16.5908, 28.7861, 0.66 ) }
    dend_21 { pt3dadd( 109.472, -16.9906, 27.4988, 0.66 ) }
    dend_21 { pt3dadd( 109.597, -17.0155, 27.3653, 0.66 ) }
    dend_21 { pt3dadd( 110.592, -17.0315, 26.5094, 0.66 ) }
    dend_21 { pt3dadd( 110.638, -17.0291, 26.4714, 0.66 ) }
    dend_21 { pt3dadd( 111.962, -16.8707, 25.4331, 0.66 ) }
    dend_21 { pt3dadd( 112.279, -16.8096, 25.2175, 0.66 ) }
    dend_21 { pt3dadd( 113.11, -16.5759, 24.7464, 0.66 ) }
    dend_21 { pt3dadd( 113.182, -16.5575, 24.7152, 0.66 ) }
    dend_21 { pt3dadd( 113.731, -16.4273, 24.5828, 0.66 ) }
    dend_21 { pt3dadd( 113.8, -16.4166, 24.5861, 0.66 ) }
    dend_21 { pt3dadd( 114.631, -16.3517, 24.8452, 0.59 ) }
    dend_21 { pt3dadd( 114.706, -16.3499, 24.8731, 0.59 ) }
    dend_21 { pt3dadd( 115.794, -16.3785, 25.3142, 0.59 ) }
    dend_21 { pt3dadd( 116.436, -16.4236, 25.5747, 0.59 ) }
    dend_21 { pt3dadd( 117.636, -16.5579, 26.0665, 0.59 ) }
    dend_21 { pt3dadd( 117.701, -16.5679, 26.0908, 0.59 ) }
    dend_21 { pt3dadd( 119.069, -16.8377, 26.5665, 0.59 ) }
    dend_21 { pt3dadd( 119.136, -16.8503, 26.5839, 0.59 ) }
    dend_21 { pt3dadd( 119.692, -16.9567, 26.6816, 0.59 ) }
    dend_21 { pt3dadd( 119.854, -16.9852, 26.6965, 0.59 ) }
    dend_21 { pt3dadd( 120.812, -17.1433, 26.7346, 0.59 ) }
    dend_21 { pt3dadd( 121.03, -17.1752, 26.7457, 0.59 ) }
    dend_21 { pt3dadd( 122.417, -17.3646, 26.7398, 0.59 ) }
    dend_21 { pt3dadd( 122.556, -17.3814, 26.7344, 0.59 ) }
    dend_21 { pt3dadd( 123.129, -17.4289, 26.6941, 0.59 ) }
    dend_21 { pt3dadd( 123.294, -17.4404, 26.6785, 0.59 ) }
    dend_21 { pt3dadd( 124.692, -17.537, 26.524, 0.59 ) }
    dend_21 { pt3dadd( 126.223, -17.6543, 26.3468, 0.59 ) }
    dend_21 { pt3dadd( 126.386, -17.6682, 26.3256, 0.59 ) }
    dend_21 { pt3dadd( 127.242, -17.749, 26.2022, 0.59 ) }
    dend_21 { pt3dadd( 127.39, -17.7638, 26.1789, 0.59 ) }
    dend_21 { pt3dadd( 129.221, -17.9588, 25.8977, 0.59 ) }
    dend_21 { pt3dadd( 130.391, -18.1007, 25.7282, 0.59 ) }
    dend_21 { pt3dadd( 130.711, -18.1505, 25.6926, 0.59 ) }
    dend_21 { pt3dadd( 131.512, -18.3527, 25.6021, 0.59 ) }
    dend_21 { pt3dadd( 131.651, -18.4079, 25.5884, 0.59 ) }
    dend_21 { pt3dadd( 132.117, -18.6618, 25.5541, 0.59 ) }
    dend_21 { pt3dadd( 132.241, -18.7653, 25.5559, 0.59 ) }
    dend_21 { pt3dadd( 132.642, -19.1773, 25.6133, 0.59 ) }
    dend_21 { pt3dadd( 133.41, -19.9464, 25.7971, 0.59 ) }
    dend_21 { pt3dadd( 133.861, -20.3875, 25.9412, 0.59 ) }
    dend_21 { pt3dadd( 134.013, -20.5179, 25.9924, 0.59 ) }
    dend_21 { pt3dadd( 134.75, -21.0753, 26.2508, 0.59 ) }
    dend_21 { pt3dadd( 134.872, -21.1438, 26.2862, 0.59 ) }
    dend_21 { pt3dadd( 135.983, -21.6332, 26.5855, 0.59 ) }
    dend_21 { pt3dadd( 136.163, -21.6906, 26.6183, 0.59 ) }
    dend_21 { pt3dadd( 137.024, -21.933, 26.7086, 0.59 ) }
    dend_21 { pt3dadd( 137.329, -22.0065, 26.7069, 0.59 ) }
    dend_21 { pt3dadd( 139.079, -22.3959, 26.5567, 0.59 ) }
    dend_21 { pt3dadd( 139.289, -22.4415, 26.5251, 0.59 ) }
    dend_21 { pt3dadd( 141.1, -22.8192, 26.1364, 0.59 ) }
    dend_21 { pt3dadd( 141.462, -22.9065, 26.0343, 0.59 ) }
    dend_21 { pt3dadd( 143.039, -23.325, 25.4954, 0.59 ) }
    dend_21 { pt3dadd( 143.245, -23.3927, 25.4175, 0.59 ) }
    dend_21 { pt3dadd( 145.055, -24.1047, 24.6588, 0.59 ) }
    dend_21 { pt3dadd( 145.339, -24.2249, 24.5459, 0.59 ) }
    dend_21 { pt3dadd( 146.561, -24.809, 24.0961, 0.59 ) }
    dend_21 { pt3dadd( 146.701, -24.8745, 24.0494, 0.59 ) }
    dend_21 { pt3dadd( 147.673, -25.3384, 23.7494, 0.59 ) }
    dend_21 { pt3dadd( 147.808, -25.3939, 23.7139, 0.59 ) }
    dend_21 { pt3dadd( 149.041, -25.8195, 23.454, 0.59 ) }
    dend_21 { pt3dadd( 149.108, -25.838, 23.4446, 0.59 ) }
    dend_21 { pt3dadd( 150.83, -26.1878, 23.2949, 0.59 ) }
    dend_21 { pt3dadd( 150.92, -26.2037, 23.2846, 0.59 ) }
    dend_21 { pt3dadd( 151.925, -26.327, 23.1536, 0.59 ) }
    dend_21 { pt3dadd( 152.441, -26.3911, 23.0861, 0.59 ) }
    dend_21 { pt3dadd( 153.228, -26.4889, 23.0365, 0.59 ) }
    dend_21 { pt3dadd( 153.298, -26.4975, 23.0342, 0.59 ) }
    dend_21 { pt3dadd( 154.916, -26.6929, 23.0228, 0.59 ) }
    dend_21 { pt3dadd( 155.743, -26.8293, 22.9687, 0.59 ) }
    dend_21 { pt3dadd( 155.886, -26.8594, 22.951, 0.59 ) }
    dend_21 { pt3dadd( 157.174, -27.1834, 22.7689, 0.59 ) }
    dend_21 { pt3dadd( 158.499, -27.5725, 22.556, 0.59 ) }
    dend_21 { pt3dadd( 158.676, -27.6308, 22.5161, 0.59 ) }
    dend_21 { pt3dadd( 159.945, -28.1045, 22.1545, 0.59 ) }
    dend_21 { pt3dadd( 160.029, -28.1333, 22.1278, 0.59 ) }
    dend_21 { pt3dadd( 160.804, -28.3762, 21.8634, 0.59 ) }
    dend_21 { pt3dadd( 161.003, -28.4301, 21.8067, 0.59 ) }
    dend_21 { pt3dadd( 162.849, -28.8386, 21.4927, 0.59 ) }
    dend_21 { pt3dadd( 163.008, -28.865, 21.4838, 0.59 ) }
    dend_21 { pt3dadd( 165.349, -29.1262, 21.5971, 0.59 ) }
    dend_21 { pt3dadd( 165.428, -29.1361, 21.6065, 0.59 ) }
    dend_21 { pt3dadd( 167.004, -29.349, 21.9175, 0.59 ) }
    dend_21 { pt3dadd( 167.127, -29.3714, 21.9508, 0.59 ) }
    dend_21 { pt3dadd( 168.261, -29.6458, 22.3674, 0.59 ) }
    dend_21 { pt3dadd( 168.449, -29.7008, 22.434, 0.59 ) }
    dend_21 { pt3dadd( 169.426, -30.0619, 22.7582, 0.59 ) }
    dend_21 { pt3dadd( 169.614, -30.1284, 22.8045, 0.59 ) }
    dend_21 { pt3dadd( 170.729, -30.5193, 22.9799, 0.59 ) }
    dend_21 { pt3dadd( 171.216, -30.6825, 23.0612, 0.59 ) }
    dend_21 { pt3dadd( 171.701, -30.8441, 23.1523, 0.59 ) }
    dend_21 { pt3dadd( 171.978, -30.9395, 23.2127, 0.59 ) }
    dend_21 { pt3dadd( 173.494, -31.4759, 23.6023, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_21 { pt3dadd( 173.548, -31.496, 23.6172, 0.59 ) }
    dend_21 { pt3dadd( 174.419, -31.8414, 23.874, 0.59 ) }
    dend_21 { pt3dadd( 174.676, -31.9414, 23.9436, 0.59 ) }
    dend_21 { pt3dadd( 175.875, -32.391, 24.2483, 0.59 ) }
    dend_21 { pt3dadd( 176.275, -32.5041, 24.3401, 0.59 ) }
    dend_21 { pt3dadd( 177.79, -32.8213, 24.6455, 0.59 ) }
    dend_21 { pt3dadd( 178.175, -32.8681, 24.7145, 0.59 ) }
    dend_21 { pt3dadd( 179.927, -32.9302, 25.0013, 0.59 ) }
    dend_21 { pt3dadd( 180.201, -32.9199, 25.0454, 0.59 ) }
    dend_21 { pt3dadd( 181.936, -32.727, 25.3264, 0.59 ) }
    dend_21 { pt3dadd( 182.236, -32.6862, 25.3681, 0.59 ) }
    dend_21 { pt3dadd( 183.831, -32.4391, 25.5674, 0.59 ) }
    dend_21 { pt3dadd( 184.271, -32.3748, 25.6146, 0.59 ) }
    dend_21 { pt3dadd( 185.063, -32.271, 25.6908, 0.59 ) }
    dend_21 { pt3dadd( 185.212, -32.2577, 25.7035, 0.59 ) }
    dend_21 { pt3dadd( 188.592, -32.0952, 25.9557, 0.59 ) }
    dend_21 { pt3dadd( 188.652, -32.0944, 25.9561, 0.59 ) }
    dend_21 { pt3dadd( 190.571, -32.0989, 25.8673, 0.59 ) }
    dend_21 { pt3dadd( 190.669, -32.0955, 25.8578, 0.59 ) }
    dend_21 { pt3dadd( 191.572, -32.0302, 25.7247, 0.59 ) }
    dend_21 { pt3dadd( 191.63, -32.0206, 25.7102, 0.59 ) }
    dend_21 { pt3dadd( 193.83, -31.3225, 24.7554, 0.59 ) }
    dend_21 { pt3dadd( 195.056, -30.686, 23.9759, 0.59 ) }
    dend_21 { pt3dadd( 196.006, -29.9247, 23.0914, 0.59 ) }
    dend_21 { pt3dadd( 196.113, -29.8187, 22.9622, 0.59 ) }
    dend_21 { pt3dadd( 196.979, -28.7271, 21.5968, 0.59 ) }
    dend_21 { pt3dadd( 197.054, -28.6141, 21.4459, 0.59 ) }
    dend_21 { pt3dadd( 197.466, -27.6838, 20.1231, 0.59 ) }
    dend_21 { pt3dadd( 197.513, -27.5762, 19.9024, 0.59 ) }
    dend_21 { pt3dadd( 197.767, -27.1436, 18.6417, 0.59 ) }
    dend_21 { pt3dadd( 197.793, -27.1073, 18.5197, 0.59 ) }
    dend_21 { pt3dadd( 198.087, -26.8425, 17.2968, 0.59 ) }
    dend_21 { pt3dadd( 198.191, -26.7688, 16.8758, 0.59 ) }
    dend_21 { pt3dadd( 198.725, -26.5735, 14.8102, 0.59 ) }
    dend_21 { pt3dadd( 198.796, -26.5439, 14.5099, 0.59 ) }
    dend_21 { pt3dadd( 208.232, -29.848, 14.7344, 0.59 ) }
    dend_21 { pt3dadd( 217.713, -32.9489, 14.0326, 0.59 ) }
    dend_21 { pt3dadd( 227.449, -35.2033, 13.6696, 0.59 ) }
    dend_21 { pt3dadd( 236.892, -38.282, 12.5045, 0.59 ) }
    dend_21 { pt3dadd( 246.101, -41.2168, 9.94149, 0.59 ) }
    dend_21 { pt3dadd( 254.983, -45.679, 8.84494, 0.59 ) }
    dend_21 { pt3dadd( 262.835, -51.7338, 7.54838, 0.59 ) }
    dend_21 { pt3dadd( 270.528, -58.0956, 6.95853, 0.59 ) }
    dend_21 { pt3dadd( 278.018, -64.6656, 6.09749, 0.59 ) }
    dend_21 { pt3dadd( 285.879, -70.7968, 5.31594, 0.59 ) }
    dend_21 { pt3dadd( 292.733, -78.069, 5.6829, 0.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_1 (entry count 46/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.38611, 20.198, 16.109, 1.33 ) }
    dend_17 { pt3dadd( -1.54078, 21.0906, 16.9838, 1.33 ) }
    dend_17 { pt3dadd( -1.76224, 21.87, 17.6034, 1.33 ) }
    dend_17 { pt3dadd( -2.58758, 24.1749, 19.2849, 1.33 ) }
    dend_17 { pt3dadd( -2.84382, 24.8043, 19.7115, 1.11 ) }
    dend_17 { pt3dadd( -3.14759, 25.4801, 20.1328, 0.81 ) }
    dend_17 { pt3dadd( -3.5913, 26.4198, 20.6884, 0.59 ) }
    dend_17 { pt3dadd( -4.26821, 27.6081, 21.257, 0.59 ) }
    dend_17 { pt3dadd( -4.74422, 28.3483, 21.5486, 0.59 ) }
    dend_17 { pt3dadd( -5.06532, 28.8066, 21.6489, 0.81 ) }
    dend_17 { pt3dadd( -5.55105, 29.4764, 21.7955, 0.81 ) }
    dend_17 { pt3dadd( -5.59182, 29.5324, 21.8058, 0.81 ) }
    dend_17 { pt3dadd( -6.11909, 30.3239, 21.8819, 0.81 ) }
    dend_17 { pt3dadd( -6.15286, 30.3852, 21.8846, 0.81 ) }
    dend_17 { pt3dadd( -6.50136, 31.1497, 21.8846, 0.81 ) }
    dend_17 { pt3dadd( -6.71543, 31.696, 21.8846, 0.59 ) }
    dend_17 { pt3dadd( -6.7416, 31.7716, 21.8846, 0.59 ) }
    dend_17 { pt3dadd( -7.1769, 33.2135, 21.8846, 0.59 ) }
    dend_17 { pt3dadd( -7.45636, 34.3595, 21.8846, 0.59 ) }
    dend_17 { pt3dadd( -7.57273, 34.9319, 21.8753, 0.96 ) }
    dend_17 { pt3dadd( -7.66033, 35.5552, 21.8569, 1.18 ) }
    dend_17 { pt3dadd( -7.66656, 35.6248, 21.8543, 1.18 ) }
    dend_17 { pt3dadd( -7.70488, 36.5032, 21.8161, 1.18 ) }
    dend_17 { pt3dadd( -7.68427, 37.6812, 21.76, 1.18 ) }
    dend_17 { pt3dadd( -7.64795, 38.3372, 21.7296, 1.18 ) }
    dend_17 { pt3dadd( -7.55155, 39.4532, 21.6699, 1.03 ) }
    dend_17 { pt3dadd( -7.43956, 40.4764, 21.6112, 0.74 ) }
    dend_17 { pt3dadd( -7.31675, 41.4288, 21.5571, 0.74 ) }
    dend_17 { pt3dadd( -7.17063, 42.4695, 21.4869, 0.52 ) }
    dend_17 { pt3dadd( -7.02384, 43.4786, 21.4143, 0.52 ) }
    dend_17 { pt3dadd( -6.90888, 44.3355, 21.3546, 0.52 ) }
    dend_17 { pt3dadd( -6.89266, 44.4841, 21.3423, 0.52 ) }
    dend_17 { pt3dadd( -6.77572, 45.8267, 21.2159, 0.52 ) }
    dend_17 { pt3dadd( -6.74439, 46.6333, 21.1371, 0.81 ) }
    dend_17 { pt3dadd( -6.77575, 47.4293, 21.0635, 0.81 ) }
    dend_17 { pt3dadd( -6.83578, 48.0143, 21.0155, 0.66 ) }
    dend_17 { pt3dadd( -6.90962, 48.4891, 20.9875, 0.66 ) }
    dend_17 { pt3dadd( -6.92367, 48.5678, 20.9839, 0.66 ) }
    dend_17 { pt3dadd( -7.1779, 49.7678, 20.9485, 0.66 ) }
    dend_17 { pt3dadd( -7.3524, 50.7058, 20.944, 0.66 ) }
    dend_17 { pt3dadd( -7.36278, 50.775, 20.9419, 0.66 ) }
    dend_17 { pt3dadd( -7.47048, 51.8685, 20.8894, 0.66 ) }
    dend_17 { pt3dadd( -7.4973, 52.8863, 20.829, 0.59 ) }
    dend_17 { pt3dadd( -7.49424, 52.9659, 20.8212, 0.59 ) }
    dend_17 { pt3dadd( -7.38818, 53.7843, 20.717, 0.59 ) }
    dend_17 { pt3dadd( -7.20964, 54.7741, 20.5781, 0.59 ) }
    dend_17 { pt3dadd( -7.07057, 55.4991, 20.4755, 0.74 ) }
    dend_17 { pt3dadd( -6.92158, 56.2286, 20.3718, 0.74 ) }
    dend_17 { pt3dadd( -6.75769, 57.0369, 20.2631, 0.66 ) }
    dend_17 { pt3dadd( -6.50874, 58.3613, 20.0712, 0.66 ) }
    dend_17 { pt3dadd( -6.38017, 59.1554, 19.9532, 0.88 ) }
    dend_17 { pt3dadd( -6.26045, 60.012, 19.8359, 0.88 ) }
    dend_17 { pt3dadd( -6.19411, 60.6671, 19.744, 0.96 ) }
    dend_17 { pt3dadd( -6.16956, 61.1721, 19.6768, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -6.16411, 61.8036, 19.6049, 0.66 ) }
    dend_17 { pt3dadd( -6.18803, 62.3375, 19.5383, 0.59 ) }
    dend_17 { pt3dadd( -6.19268, 62.4068, 19.5297, 0.59 ) }
    dend_17 { pt3dadd( -6.2737, 63.4165, 19.41, 0.59 ) }
    dend_17 { pt3dadd( -6.31751, 63.9436, 19.3564, 0.74 ) }
    dend_17 { pt3dadd( -6.32484, 64.093, 19.3461, 0.74 ) }
    dend_17 { pt3dadd( -6.32239, 64.973, 19.3524, 0.74 ) }
    dend_17 { pt3dadd( -6.31912, 65.0429, 19.3548, 0.74 ) }
    dend_17 { pt3dadd( -6.2738, 65.6424, 19.3881, 0.66 ) }
    dend_17 { pt3dadd( -6.26737, 65.7118, 19.3937, 0.66 ) }
    dend_17 { pt3dadd( -6.17375, 66.6097, 19.4823, 0.66 ) }
    dend_17 { pt3dadd( -6.11634, 67.2057, 19.5488, 0.96 ) }
    dend_17 { pt3dadd( -6.07694, 67.6402, 19.6057, 1.11 ) }
    dend_17 { pt3dadd( -6.07304, 67.7086, 19.6201, 1.11 ) }
    dend_17 { pt3dadd( -6.0655, 68.241, 19.7782, 1.11 ) }
    dend_17 { pt3dadd( -6.07064, 68.3166, 19.8037, 1.11 ) }
    dend_17 { pt3dadd( -6.12693, 68.6522, 19.9214, 1.11 ) }
    dend_17 { pt3dadd( -6.14135, 68.7281, 19.9422, 1.11 ) }
    dend_17 { pt3dadd( -6.28847, 69.5132, 20.1185, 1.11 ) }
    dend_17 { pt3dadd( -6.33935, 69.7935, 20.1724, 1.11 ) }
    dend_17 { pt3dadd( -6.4254, 70.2709, 20.2543, 0.59 ) }
    dend_17 { pt3dadd( -6.5409, 70.9142, 20.3461, 0.59 ) }
    dend_17 { pt3dadd( -6.70256, 71.7664, 20.4432, 0.52 ) }
    dend_17 { pt3dadd( -6.87948, 72.6534, 20.5122, 0.52 ) }
    dend_17 { pt3dadd( -6.96548, 73.0995, 20.5241, 0.88 ) }
    dend_17 { pt3dadd( -6.9789, 73.1682, 20.526, 0.88 ) }
    dend_17 { pt3dadd( -7.0708, 73.6697, 20.5392, 0.88 ) }
    dend_17 { pt3dadd( -7.12168, 74.1012, 20.5491, 0.96 ) }
    dend_17 { pt3dadd( -7.14177, 74.427, 20.5554, 0.96 ) }
    dend_17 { pt3dadd( -7.11529, 75.3766, 20.568, 0.96 ) }
    dend_17 { pt3dadd( -7.06126, 76.0512, 20.5734, 0.52 ) }
    dend_17 { pt3dadd( -6.93405, 77.0657, 20.5792, 0.52 ) }
    dend_17 { pt3dadd( -6.75045, 78.2078, 20.5829, 0.52 ) }
    dend_17 { pt3dadd( -6.70789, 78.4236, 20.5829, 0.52 ) }
    dend_17 { pt3dadd( -6.4853, 79.4835, 20.5829, 0.52 ) }
    dend_17 { pt3dadd( -6.46897, 79.5618, 20.5829, 0.52 ) }
    dend_17 { pt3dadd( -6.33468, 80.5142, 20.5829, 0.52 ) }
    dend_17 { pt3dadd( -6.32277, 80.748, 20.5829, 0.96 ) }
    dend_17 { pt3dadd( -6.32947, 80.8176, 20.581, 0.96 ) }
    dend_17 { pt3dadd( -6.46137, 81.6199, 20.5434, 0.96 ) }
    dend_17 { pt3dadd( -6.53141, 81.8763, 20.5272, 0.96 ) }
    dend_17 { pt3dadd( -6.87887, 82.9963, 20.4459, 0.96 ) }
    dend_17 { pt3dadd( -6.90513, 83.0713, 20.4369, 0.96 ) }
    dend_17 { pt3dadd( -7.17724, 83.8518, 20.321, 0.66 ) }
    dend_17 { pt3dadd( -7.37424, 84.4628, 20.2194, 0.66 ) }
    dend_17 { pt3dadd( -7.58279, 85.1499, 20.0974, 0.59 ) }
    dend_17 { pt3dadd( -7.60016, 85.2168, 20.0862, 0.59 ) }
    dend_17 { pt3dadd( -7.80538, 86.1582, 19.9861, 0.59 ) }
    dend_17 { pt3dadd( -7.82969, 86.3061, 19.9808, 0.59 ) }
    dend_17 { pt3dadd( -7.91086, 87.1047, 20.0038, 0.59 ) }
    dend_17 { pt3dadd( -7.93843, 87.5985, 20.0355, 0.74 ) }
    dend_17 { pt3dadd( -7.94101, 88.3253, 20.1038, 0.74 ) }
    dend_17 { pt3dadd( -7.92848, 89.1748, 20.2071, 0.52 ) }
    dend_17 { pt3dadd( -7.91935, 90.0619, 20.3428, 0.52 ) }
    dend_17 { pt3dadd( -7.92204, 90.4972, 20.4377, 0.74 ) }
    dend_17 { pt3dadd( -7.92358, 90.5746, 20.4577, 0.74 ) }
    dend_17 { pt3dadd( -7.93417, 91.3492, 20.6575, 0.74 ) }
    dend_17 { pt3dadd( -7.93743, 91.4945, 20.6947, 0.74 ) }
    dend_17 { pt3dadd( -7.94737, 92.6893, 20.9699, 0.74 ) }
    dend_17 { pt3dadd( -7.96691, 93.8894, 21.2415, 0.59 ) }
    dend_17 { pt3dadd( -7.98283, 94.9531, 21.4788, 0.59 ) }
    dend_17 { pt3dadd( -7.98034, 96.0388, 21.7047, 0.59 ) }
    dend_17 { pt3dadd( -7.97742, 96.1075, 21.7174, 0.59 ) }
    dend_17 { pt3dadd( -7.90509, 97.0496, 21.8536, 0.59 ) }
    dend_17 { pt3dadd( -7.81544, 97.8266, 21.9261, 0.96 ) }
    dend_17 { pt3dadd( -7.73505, 98.4733, 21.9451, 0.96 ) }
    dend_17 { pt3dadd( -7.62561, 99.3051, 21.9684, 0.96 ) }
    dend_17 { pt3dadd( -7.50544, 100.273, 21.9907, 0.96 ) }
    dend_17 { pt3dadd( -7.44402, 100.872, 21.9814, 0.66 ) }
    dend_17 { pt3dadd( -7.40914, 101.309, 21.957, 0.66 ) }
    dend_17 { pt3dadd( -7.37178, 101.816, 21.9073, 0.81 ) }
    dend_17 { pt3dadd( -7.36592, 101.964, 21.8861, 0.81 ) }
    dend_17 { pt3dadd( -7.37872, 102.754, 21.7613, 0.81 ) }
    dend_17 { pt3dadd( -7.41935, 103.498, 21.6493, 0.81 ) }
    dend_17 { pt3dadd( -7.42713, 103.633, 21.6163, 0.81 ) }
    dend_17 { pt3dadd( -7.49112, 104.542, 21.3477, 0.81 ) }
    dend_17 { pt3dadd( -7.49697, 104.618, 21.323, 0.81 ) }
    dend_17 { pt3dadd( -7.58127, 105.375, 21.0784, 0.81 ) }
    dend_17 { pt3dadd( -7.70137, 106.281, 20.8177, 1.03 ) }
    dend_17 { pt3dadd( -7.89501, 107.583, 20.5509, 0.29 ) }
    dend_17 { pt3dadd( -8.05558, 108.68, 20.3779, 0.29 ) }
    dend_17 { pt3dadd( -8.06453, 108.749, 20.3701, 0.29 ) }
    dend_17 { pt3dadd( -8.18477, 109.822, 20.2909, 0.29 ) }
    dend_17 { pt3dadd( -8.31866, 111.208, 20.3131, 0.29 ) }
    dend_17 { pt3dadd( -8.43414, 112.23, 20.4279, 0.74 ) }
    dend_17 { pt3dadd( -8.51421, 112.935, 20.57, 1.03 ) }
    dend_17 { pt3dadd( -8.60613, 113.815, 20.769, 1.03 ) }
    dend_17 { pt3dadd( -8.61374, 113.893, 20.7875, 1.03 ) }
    dend_17 { pt3dadd( -8.69961, 114.953, 21.0567, 0.22 ) }
    dend_17 { pt3dadd( -8.8355, 116.158, 21.354, 0.22 ) }
    dend_17 { pt3dadd( -8.87696, 116.46, 21.4123, 0.74 ) }
    dend_17 { pt3dadd( -8.98099, 117.098, 21.5104, 0.96 ) }
    dend_17 { pt3dadd( -8.99496, 117.176, 21.5171, 0.96 ) }
    dend_17 { pt3dadd( -9.10151, 117.817, 21.5319, 0.96 ) }
    dend_17 { pt3dadd( -9.1871, 118.439, 21.4832, 0.66 ) }
    dend_17 { pt3dadd( -9.26756, 119.16, 21.4038, 0.59 ) }
    dend_17 { pt3dadd( -9.40102, 120.023, 21.2926, 0.59 ) }
    dend_17 { pt3dadd( -9.55539, 120.789, 21.1848, 0.29 ) }
    dend_17 { pt3dadd( -9.57089, 120.856, 21.1748, 0.29 ) }
    dend_17 { pt3dadd( -9.74137, 121.521, 21.0729, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_17 { pt3dadd( -9.95644, 122.317, 20.9203, 0.96 ) }
    dend_17 { pt3dadd( -10.0871, 122.758, 20.8216, 0.37 ) }
    dend_17 { pt3dadd( -10.2809, 123.434, 20.6634, 0.37 ) }
    dend_17 { pt3dadd( -10.2966, 123.501, 20.6491, 0.37 ) }
    dend_17 { pt3dadd( -10.4325, 124.144, 20.5558, 0.37 ) }
    dend_17 { pt3dadd( -10.513, 124.706, 20.5313, 0.88 ) }
    dend_17 { pt3dadd( -10.5252, 124.855, 20.5325, 0.88 ) }
    dend_17 { pt3dadd( -10.5566, 125.587, 20.5649, 0.88 ) }
    dend_17 { pt3dadd( -10.5729, 125.887, 20.5875, 0.88 ) }
    dend_17 { pt3dadd( -10.6373, 126.673, 20.6464, 0.22 ) }
    dend_17 { pt3dadd( -10.7651, 127.834, 20.7494, 0.22 ) }
    dend_17 { pt3dadd( -10.8429, 128.434, 20.8098, 0.66 ) }
    dend_17 { pt3dadd( -10.864, 128.572, 20.8195, 0.66 ) }
    dend_17 { pt3dadd( -10.9685, 129.149, 20.8387, 0.66 ) }
    dend_17 { pt3dadd( -11.048, 129.581, 20.8306, 0.52 ) }
    dend_17 { pt3dadd( -11.0603, 129.649, 20.8243, 0.52 ) }
    dend_17 { pt3dadd( -11.1517, 130.068, 20.7431, 0.52 ) }
    dend_17 { pt3dadd( -11.2678, 130.646, 20.6024, 0.22 ) }
    dend_17 { pt3dadd( -11.2796, 130.713, 20.5856, 0.22 ) }
    dend_17 { pt3dadd( -11.3712, 131.348, 20.4333, 0.88 ) }
    dend_17 { pt3dadd( -11.4397, 131.863, 20.318, 0.88 ) }
    dend_17 { pt3dadd( -11.5868, 132.918, 20.0836, 0.37 ) }
    dend_17 { pt3dadd( -11.6781, 133.546, 19.9467, 0.37 ) }
    dend_17 { pt3dadd( -11.7677, 134.19, 19.8333, 0.37 ) }
    dend_17 { pt3dadd( -11.8592, 134.838, 19.7473, 0.37 ) }
    dend_17 { pt3dadd( -11.8688, 134.908, 19.7425, 0.37 ) }
    dend_17 { pt3dadd( -11.9271, 135.339, 19.7528, 0.66 ) }
    dend_17 { pt3dadd( -12.0021, 135.837, 19.8326, 0.66 ) }
    dend_17 { pt3dadd( -12.109, 136.363, 19.9373, 0.22 ) }
    dend_17 { pt3dadd( -12.1266, 136.429, 19.9511, 0.22 ) }
    dend_17 { pt3dadd( -12.2428, 136.847, 20.0255, 0.22 ) }
    dend_17 { pt3dadd( -12.3401, 137.254, 20.0764, 0.22 ) }
    dend_17 { pt3dadd( -12.375, 137.42, 20.0905, 0.22 ) }
    dend_17 { pt3dadd( -12.3881, 137.489, 20.0889, 0.22 ) }
    dend_17 { pt3dadd( -12.5189, 138.303, 19.9971, 0.22 ) }
    dend_17 { pt3dadd( -12.5843, 138.883, 19.9152, 0.81 ) }
    dend_17 { pt3dadd( -12.6494, 139.601, 19.7993, 0.81 ) }
    dend_17 { pt3dadd( -12.6537, 139.67, 19.7874, 0.81 ) }
    dend_17 { pt3dadd( -12.6885, 140.331, 19.6726, 0.22 ) }
    dend_17 { pt3dadd( -12.703, 140.616, 19.6191, 0.22 ) }
    dend_17 { pt3dadd( -12.7869, 141.626, 19.4372, 0.22 ) }
    dend_17 { pt3dadd( -12.8275, 141.887, 19.3989, 0.59 ) }
    dend_17 { pt3dadd( -12.8718, 142.101, 19.3792, 0.59 ) }
    dend_17 { pt3dadd( -12.9842, 142.534, 19.3631, 0.59 ) }
    dend_17 { pt3dadd( -13.019, 142.649, 19.3652, 0.59 ) }
    dend_17 { pt3dadd( -13.2353, 143.424, 19.3795, 0.59 ) }
    dend_17 { pt3dadd( -13.3612, 143.9, 19.3886, 1.11 ) }
    dend_17 { pt3dadd( -13.5202, 144.612, 19.4011, 1.11 ) }
    dend_17 { pt3dadd( -13.6652, 145.293, 19.4118, 0.22 ) }
    dend_17 { pt3dadd( -13.6787, 145.362, 19.4128, 0.22 ) }
    dend_17 { pt3dadd( -13.9743, 146.875, 19.4317, 0.22 ) }
    dend_17 { pt3dadd( -13.9866, 146.944, 19.4317, 0.22 ) }
    dend_17 { pt3dadd( -14.095, 147.595, 19.4317, 0.74 ) }
    dend_17 { pt3dadd( -14.2099, 148.334, 19.4317, 0.74 ) }
    dend_17 { pt3dadd( -14.2211, 148.413, 19.4317, 0.74 ) }
    dend_17 { pt3dadd( -14.3379, 149.161, 19.4317, 0.74 ) }
    dend_17 { pt3dadd( -14.3897, 149.446, 19.4317, 0.74 ) }
    dend_17 { pt3dadd( -14.4754, 149.971, 19.4317, 0.44 ) }
    dend_17 { pt3dadd( -14.5493, 150.48, 19.4317, 0.44 ) }
    dend_17 { pt3dadd( -14.5775, 150.707, 19.4317, 0.52 ) }
    dend_17 { pt3dadd( -14.6468, 151.137, 19.4317, 0.52 ) }
    dend_17 { pt3dadd( -14.7455, 151.571, 19.4317, 0.52 ) }
    dend_17 { pt3dadd( -14.8515, 151.926, 19.4317, 0.22 ) }
    dend_17 { pt3dadd( -15.0817, 152.562, 19.4317, 0.22 ) }
    dend_17 { pt3dadd( -15.1582, 152.753, 19.4317, 0.22 ) }
    dend_17 { pt3dadd( -15.759, 154.154, 19.4317, 0.22 ) }
    dend_17 { pt3dadd( -15.9946, 154.667, 19.4454, 0.66 ) }
    dend_17 { pt3dadd( -16.1387, 154.965, 19.46, 0.88 ) }
    dend_17 { pt3dadd( -16.3315, 155.376, 19.4888, 0.88 ) }
    dend_17 { pt3dadd( -16.4518, 155.688, 19.5152, 0.59 ) }
    dend_17 { pt3dadd( -16.6217, 156.247, 19.5681, 0.15 ) }
    dend_17 { pt3dadd( -16.7227, 156.714, 19.6497, 0.29 ) }
    dend_17 { pt3dadd( -16.7326, 156.782, 19.6642, 0.29 ) }
    dend_17 { pt3dadd( -16.8231, 157.568, 19.8538, 0.29 ) }
    dend_17 { pt3dadd( -16.917, 158.699, 20.1412, 0.29 ) }
    dend_17 { pt3dadd( -16.9208, 158.766, 20.1588, 0.29 ) }
    dend_17 { pt3dadd( -16.9489, 159.658, 20.3817, 0.29 ) }
    dend_17 { pt3dadd( -16.9615, 160.087, 20.4788, 0.96 ) }
    dend_17 { pt3dadd( -16.9651, 160.155, 20.4945, 0.96 ) }
    dend_17 { pt3dadd( -17.0213, 160.658, 20.6152, 1.18 ) }
    dend_17 { pt3dadd( -17.0351, 160.725, 20.6286, 1.18 ) }
    dend_17 { pt3dadd( -17.1482, 161.147, 20.6787, 1.18 ) }
    dend_17 { pt3dadd( -17.1739, 161.212, 20.6787, 1.18 ) }
    dend_17 { pt3dadd( -17.3374, 161.537, 20.6787, 1.18 ) }
    dend_17 { pt3dadd( -17.5296, 161.856, 20.6787, 0.66 ) }
    dend_17 { pt3dadd( -17.8393, 162.279, 20.6787, 0.37 ) }
    dend_17 { pt3dadd( -17.8823, 162.334, 20.683, 0.37 ) }
    dend_17 { pt3dadd( -18.2481, 162.833, 20.7467, 0.37 ) }
    dend_17 { pt3dadd( -18.2922, 162.899, 20.7571, 0.37 ) }
    dend_17 { pt3dadd( -18.637, 163.524, 20.9294, 0.37 ) }
    dend_17 { pt3dadd( -18.7255, 163.713, 20.9986, 0.74 ) }
    dend_17 { pt3dadd( -19.0104, 164.428, 21.2986, 0.74 ) }
    dend_17 { pt3dadd( -19.2251, 165.014, 21.5351, 0.52 ) }
    dend_17 { pt3dadd( -19.2487, 165.085, 21.5619, 0.52 ) }
    dend_17 { pt3dadd( -19.5674, 166.085, 21.8705, 0.52 ) }
    dend_17 { pt3dadd( -19.5836, 166.141, 21.8844, 0.52 ) }
    dend_17 { pt3dadd( -19.7087, 166.611, 21.9534, 0.52 ) }
    dend_17 { pt3dadd( -19.8524, 167.143, 21.9734, 0.37 ) }
    dend_17 { pt3dadd( -20.0191, 167.739, 22.0158, 0.37 ) }
    dend_17 { pt3dadd( -20.1619, 168.262, 22.0617, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( -20.2006, 168.395, 22.0809, 0.37 ) }
    dend_17 { pt3dadd( -20.4538, 169.145, 22.2552, 0.37 ) }
    dend_17 { pt3dadd( -20.4802, 169.207, 22.2747, 0.37 ) }
    dend_17 { pt3dadd( -20.8805, 170.015, 22.4632, 0.66 ) }
    dend_17 { pt3dadd( -21.3468, 170.759, 22.5395, 0.66 ) }
    dend_17 { pt3dadd( -21.8211, 171.41, 22.5255, 0.29 ) }
    dend_17 { pt3dadd( -22.298, 172.022, 22.4487, 0.29 ) }
    dend_17 { pt3dadd( -22.7205, 172.534, 22.3324, 0.29 ) }
    dend_17 { pt3dadd( -23.8165, 173.877, 21.9223, 0.29 ) }
    dend_17 { pt3dadd( -24.3118, 174.502, 21.677, 0.29 ) }
    dend_17 { pt3dadd( -24.6155, 174.919, 21.4717, 0.29 ) }
    dend_17 { pt3dadd( -24.8365, 175.259, 21.3014, 0.59 ) }
    dend_17 { pt3dadd( -25.0195, 175.576, 21.1651, 0.88 ) }
    dend_17 { pt3dadd( -25.2859, 176.077, 20.9865, 1.25 ) }
    dend_17 { pt3dadd( -25.5748, 176.613, 20.8676, 1.25 ) }
    dend_17 { pt3dadd( -26.1984, 177.677, 20.6628, 0.59 ) }
    dend_17 { pt3dadd( -26.9993, 178.865, 20.4054, 0.37 ) }
    dend_17 { pt3dadd( -27.3902, 179.381, 20.2899, 0.37 ) }
    dend_17 { pt3dadd( -27.4336, 179.433, 20.2741, 0.37 ) }
    dend_17 { pt3dadd( -27.9241, 179.971, 20.0321, 0.81 ) }
    dend_17 { pt3dadd( -28.6628, 180.692, 19.5922, 0.81 ) }
    dend_17 { pt3dadd( -29.3301, 181.273, 19.1967, 0.52 ) }
    dend_17 { pt3dadd( -29.8364, 181.685, 18.874, 0.81 ) }
    dend_17 { pt3dadd( -30.5899, 182.287, 18.3864, 0.81 ) }
    dend_17 { pt3dadd( -31.3448, 182.891, 17.91, 0.81 ) }
    dend_17 { pt3dadd( -31.9053, 183.341, 17.5615, 0.37 ) }
    dend_17 { pt3dadd( -33.0801, 184.266, 16.9567, 0.37 ) }
    dend_17 { pt3dadd( -33.6859, 184.713, 16.7514, 0.37 ) }
    dend_17 { pt3dadd( -33.7714, 184.773, 16.7327, 0.81 ) }
    dend_17 { pt3dadd( -34.3384, 185.165, 16.6811, 1.11 ) }
    dend_17 { pt3dadd( -34.6965, 185.411, 16.6776, 0.74 ) }
    dend_17 { pt3dadd( -35.5465, 185.985, 16.6919, 0.52 ) }
    dend_17 { pt3dadd( -36.3972, 186.546, 16.7173, 0.59 ) }
    dend_17 { pt3dadd( -36.9205, 186.897, 16.7376, 0.59 ) }
    dend_17 { pt3dadd( -36.9857, 186.943, 16.7405, 0.59 ) }
    dend_17 { pt3dadd( -37.8536, 187.602, 16.7857, 0.59 ) }
    dend_17 { pt3dadd( -37.9236, 187.661, 16.7898, 0.59 ) }
    dend_17 { pt3dadd( -38.4969, 188.223, 16.8308, 0.44 ) }
    dend_17 { pt3dadd( -38.7498, 188.484, 16.8038, 0.44 ) }
    dend_17 { pt3dadd( -39.018, 188.741, 16.7315, 0.59 ) }
    dend_17 { pt3dadd( -39.1291, 188.843, 16.6899, 0.59 ) }
    dend_17 { pt3dadd( -39.5199, 189.175, 16.5169, 0.59 ) }
    dend_17 { pt3dadd( -39.8835, 189.468, 16.2725, 0.59 ) }
    dend_17 { pt3dadd( -40.922, 190.243, 15.4481, 0.29 ) }
    dend_17 { pt3dadd( -41.4496, 190.604, 14.9645, 0.29 ) }
    dend_17 { pt3dadd( -41.7526, 190.803, 14.6772, 0.52 ) }
    dend_17 { pt3dadd( -42.2589, 191.12, 14.199, 0.52 ) }
    dend_17 { pt3dadd( -43.5516, 191.895, 12.9747, 0.81 ) }
    dend_17 { pt3dadd( -43.9198, 192.124, 12.6273, 0.81 ) }
    dend_17 { pt3dadd( -44.8969, 192.757, 11.7483, 0.15 ) }
    dend_17 { pt3dadd( -45.3767, 193.072, 11.3003, 0.44 ) }
    dend_17 { pt3dadd( -45.6727, 193.27, 11.0298, 0.88 ) }
    dend_17 { pt3dadd( -45.7271, 193.309, 10.9855, 0.88 ) }
    dend_17 { pt3dadd( -46.0118, 193.539, 10.8619, 1.11 ) }
    dend_17 { pt3dadd( -46.0667, 193.594, 10.8438, 1.11 ) }
    dend_17 { pt3dadd( -46.2739, 193.893, 10.8438, 1.11 ) }
    dend_17 { pt3dadd( -46.3208, 193.989, 10.8438, 1.11 ) }
    dend_17 { pt3dadd( -46.4191, 194.236, 10.8438, 1.11 ) }
    dend_17 { pt3dadd( -46.6096, 194.788, 10.8438, 0.37 ) }
    dend_17 { pt3dadd( -46.6311, 194.855, 10.8438, 0.37 ) }
    dend_17 { pt3dadd( -46.8589, 195.639, 10.788, 0.37 ) }
    dend_17 { pt3dadd( -47.0102, 196.209, 10.719, 0.59 ) }
    dend_17 { pt3dadd( -47.0434, 196.354, 10.6966, 0.59 ) }
    dend_17 { pt3dadd( -47.2094, 197.069, 10.5663, 0.59 ) }
    dend_17 { pt3dadd( -47.2316, 197.144, 10.5515, 0.59 ) }
    dend_17 { pt3dadd( -47.523, 197.987, 10.4008, 0.22 ) }
    dend_17 { pt3dadd( -47.5493, 198.051, 10.3903, 0.22 ) }
    dend_17 { pt3dadd( -47.9296, 198.837, 10.2862, 0.22 ) }
    dend_17 { pt3dadd( -48.1448, 199.21, 10.2713, 0.22 ) }
    dend_17 { pt3dadd( -48.6597, 199.987, 10.3181, 0.22 ) }
    dend_17 { pt3dadd( -48.9162, 200.369, 10.3705, 0.22 ) }
    dend_17 { pt3dadd( -49.1546, 200.711, 10.4475, 0.22 ) }
    dend_17 { pt3dadd( -49.4346, 201.104, 10.5432, 0.44 ) }
    dend_17 { pt3dadd( -49.9028, 201.735, 10.7203, 0.81 ) }
    dend_17 { pt3dadd( -50.4023, 202.435, 10.9164, 0.22 ) }
    dend_17 { pt3dadd( -50.628, 202.752, 11.0045, 0.74 ) }
    dend_17 { pt3dadd( -50.7084, 202.864, 11.0306, 0.74 ) }
    dend_17 { pt3dadd( -50.9217, 203.162, 11.0918, 0.74 ) }
    dend_17 { pt3dadd( -50.9554, 203.211, 11.0991, 0.74 ) }
    dend_17 { pt3dadd( -51.3627, 203.945, 11.1475, 0.74 ) }
    dend_17 { pt3dadd( -51.6175, 204.461, 11.166, 0.74 ) }
    dend_17 { pt3dadd( -51.8125, 204.912, 11.1701, 0.74 ) }
    dend_17 { pt3dadd( -51.8415, 204.987, 11.1674, 0.74 ) }
    dend_17 { pt3dadd( -52.0106, 205.472, 11.1346, 0.37 ) }
    dend_17 { pt3dadd( -52.3327, 206.435, 11.0452, 0.37 ) }
    dend_17 { pt3dadd( -52.5614, 207.115, 10.9679, 0.22 ) }
    dend_17 { pt3dadd( -52.9489, 208.2, 10.8295, 0.22 ) }
    dend_17 { pt3dadd( -53.1069, 208.59, 10.7821, 0.59 ) }
    dend_17 { pt3dadd( -53.1478, 208.679, 10.7717, 0.59 ) }
    dend_17 { pt3dadd( -53.3999, 209.191, 10.6986, 0.59 ) }
    dend_17 { pt3dadd( -53.7423, 209.89, 10.5883, 0.59 ) }
    dend_17 { pt3dadd( -53.9689, 210.422, 10.5032, 0.22 ) }
    dend_17 { pt3dadd( -54.3725, 211.349, 10.3544, 0.22 ) }
    dend_17 { pt3dadd( -54.4007, 211.413, 10.3459, 0.22 ) }
    dend_17 { pt3dadd( -54.6669, 212.008, 10.2988, 0.59 ) }
    dend_17 { pt3dadd( -54.9979, 212.76, 10.2695, 0.59 ) }
    dend_17 { pt3dadd( -55.2382, 213.308, 10.2706, 0.22 ) }
    dend_17 { pt3dadd( -55.7648, 214.439, 10.3202, 0.22 ) }
    dend_17 { pt3dadd( -56.1987, 215.43, 10.3652, 0.22 ) }
    dend_17 { pt3dadd( -56.5289, 216.207, 10.4052, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_17 { pt3dadd( -56.5586, 216.282, 10.4102, 0.81 ) }
    dend_17 { pt3dadd( -56.7359, 216.782, 10.4309, 1.25 ) }
    dend_17 { pt3dadd( -56.8663, 217.322, 10.4347, 1.25 ) }
    dend_17 { pt3dadd( -56.9247, 218.204, 10.3836, 0.22 ) }
    dend_17 { pt3dadd( -56.9311, 218.353, 10.3668, 0.22 ) }
    dend_17 { pt3dadd( -56.9824, 219.222, 10.2351, 0.22 ) }
    dend_17 { pt3dadd( -57.0157, 219.544, 10.1956, 0.59 ) }
    dend_17 { pt3dadd( -57.0249, 219.613, 10.1893, 0.59 ) }
    dend_17 { pt3dadd( -57.1881, 220.632, 10.1404, 0.59 ) }
    dend_17 { pt3dadd( -57.3366, 221.303, 10.1404, 0.22 ) }
    dend_17 { pt3dadd( -57.351, 221.372, 10.1385, 0.22 ) }
    dend_17 { pt3dadd( -57.4808, 222.016, 10.1067, 0.22 ) }
    dend_17 { pt3dadd( -57.5264, 222.241, 10.0921, 0.22 ) }
    dend_17 { pt3dadd( -57.6626, 222.889, 10.0421, 0.22 ) }
    dend_17 { pt3dadd( -57.7678, 223.337, 10.0008, 0.44 ) }
    dend_17 { pt3dadd( -57.9525, 224.127, 9.99761, 0.22 ) }
    dend_17 { pt3dadd( -57.9719, 224.204, 10.0033, 0.22 ) }
    dend_17 { pt3dadd( -58.2272, 225.138, 10.1536, 0.22 ) }
    dend_17 { pt3dadd( -58.2575, 225.237, 10.1785, 0.22 ) }
    dend_17 { pt3dadd( -58.3893, 225.606, 10.2997, 0.59 ) }
    dend_17 { pt3dadd( -58.7837, 226.631, 10.6931, 0.22 ) }
    dend_17 { pt3dadd( -58.81, 226.691, 10.7184, 0.22 ) }
    dend_17 { pt3dadd( -59.3815, 227.912, 11.2191, 0.22 ) }
    dend_17 { pt3dadd( -59.543, 228.242, 11.3454, 0.59 ) }
    dend_17 { pt3dadd( -59.7681, 228.689, 11.4968, 0.88 ) }
    dend_17 { pt3dadd( -59.8568, 228.86, 11.5449, 0.88 ) }
    dend_17 { pt3dadd( -60.6279, 230.258, 11.8287, 0.22 ) }
    dend_17 { pt3dadd( -60.8194, 230.589, 11.8954, 0.81 ) }
    dend_17 { pt3dadd( -61.1184, 231.085, 11.9886, 0.81 ) }
    dend_17 { pt3dadd( -61.1589, 231.154, 11.9994, 0.81 ) }
    dend_17 { pt3dadd( -61.2891, 231.383, 12.0348, 0.44 ) }
    dend_17 { pt3dadd( -61.3227, 231.444, 12.0426, 0.44 ) }
    dend_17 { pt3dadd( -61.5239, 231.825, 12.0426, 0.44 ) }
    dend_17 { pt3dadd( -61.8364, 232.52, 12.0426, 0.59 ) }
    dend_17 { pt3dadd( -63.0833, 242.41, 12.8446, 0.59 ) }
    dend_17 { pt3dadd( -65.4294, 252.076, 11.8182, 0.59 ) }
    dend_17 { pt3dadd( -69.2723, 260.969, 9.3387, 0.59 ) }
    dend_17 { pt3dadd( -73.9571, 269.8, 9.08756, 0.59 ) }
    dend_17 { pt3dadd( -79.1259, 278.355, 8.76288, 0.59 ) }
    dend_17 { pt3dadd( -84.6612, 286.683, 8.72864, 0.59 ) }
    dend_17 { pt3dadd( -88.6161, 295.867, 8.80305, 0.59 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 41/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -1.38611, 20.198, 16.109, 2.06 ) }
    dend_2 { pt3dadd( -1.594, 20.5498, 17.7961, 2.06 ) }
    dend_2 { pt3dadd( -1.69888, 20.6829, 18.4081, 2.06 ) }
    dend_2 { pt3dadd( -2.34341, 21.3849, 21.5459, 1.77 ) }
    dend_2 { pt3dadd( -2.56784, 21.5547, 22.3054, 1.77 ) }
    dend_2 { pt3dadd( -3.67885, 22.2631, 25.4748, 1.77 ) }
    dend_2 { pt3dadd( -3.81474, 22.337, 25.8057, 1.77 ) }
    dend_2 { pt3dadd( -4.76789, 22.7357, 27.551, 1.77 ) }
    dend_2 { pt3dadd( -4.99425, 22.8063, 27.8521, 1.77 ) }
    dend_2 { pt3dadd( -6.81036, 23.1975, 29.4756, 1.77 ) }
    dend_2 { pt3dadd( -6.8686, 23.2054, 29.5136, 1.77 ) }
    dend_2 { pt3dadd( -7.74825, 23.2513, 29.8953, 1.77 ) }
    dend_2 { pt3dadd( -8.38, 23.2692, 30.1178, 1.77 ) }
    dend_2 { pt3dadd( -9.61771, 23.3123, 30.4095, 1.77 ) }
    dend_2 { pt3dadd( -9.98831, 23.3341, 30.4835, 1.77 ) }
    dend_2 { pt3dadd( -11.5446, 23.4751, 30.7313, 1.77 ) }
    dend_2 { pt3dadd( -11.8297, 23.5087, 30.7723, 1.69 ) }
    dend_2 { pt3dadd( -13.1383, 23.7062, 30.9378, 1.69 ) }
    dend_2 { pt3dadd( -15.446, 24.0945, 31.1872, 1.69 ) }
    dend_2 { pt3dadd( -15.9992, 24.2001, 31.2268, 1.69 ) }
    dend_2 { pt3dadd( -16.5423, 24.3142, 31.2509, 1.69 ) }
    dend_2 { pt3dadd( -17.0893, 24.4535, 31.264, 1.69 ) }
    dend_2 { pt3dadd( -17.5633, 24.5847, 31.2747, 1.69 ) }
    // Section: dend_73, id: dend_73, parent: dend_63 (entry count 64/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 7.74551, -45.0084, 5.79807, 1.11 ) }
    dend_73 { pt3dadd( 7.87463, -45.1685, 6.52874, 1.11 ) }
    dend_73 { pt3dadd( 8.12868, -45.4835, 7.96632, 1.11 ) }
    dend_73 { pt3dadd( 8.59577, -46.0628, 10.6094, 1.4 ) }
    dend_73 { pt3dadd( 8.60938, -46.0796, 10.6864, 1.4 ) }
    dend_73 { pt3dadd( 9.6131, -47.3243, 16.3661, 1.4 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 70/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 7.74551, -45.0084, 5.79807, 1.03 ) }
    dend_64 { pt3dadd( 7.09023, -46.1896, 6.17421, 1.03 ) }
    dend_64 { pt3dadd( 6.54166, -47.0793, 6.51344, 0.74 ) }
    dend_64 { pt3dadd( 5.71801, -48.3545, 6.99814, 0.74 ) }
    dend_64 { pt3dadd( 5.22915, -49.1187, 7.26792, 1.03 ) }
    dend_64 { pt3dadd( 4.63843, -50.1014, 7.58143, 1.03 ) }
    dend_64 { pt3dadd( 3.62864, -51.8869, 8.09209, 0.74 ) }
    dend_64 { pt3dadd( 3.5906, -51.9546, 8.11151, 0.74 ) }
    dend_64 { pt3dadd( 2.85714, -53.3123, 8.42508, 0.59 ) }
    dend_64 { pt3dadd( 2.32819, -54.3324, 8.58778, 0.81 ) }
    dend_64 { pt3dadd( 1.84216, -55.3123, 8.70425, 1.18 ) }
    dend_64 { pt3dadd( 1.37127, -56.2591, 8.78395, 1.18 ) }
    dend_64 { pt3dadd( 0.914074, -57.0995, 8.81525, 0.88 ) }
    dend_64 { pt3dadd( 0.0679124, -58.3755, 8.9108, 0.81 ) }
    dend_64 { pt3dadd( -0.571695, -59.0573, 8.99463, 1.18 ) }
    dend_64 { pt3dadd( -1.29993, -59.6331, 9.14486, 1.18 ) }
    dend_64 { pt3dadd( -2.26478, -60.2306, 9.38759, 0.88 ) }
    dend_64 { pt3dadd( -3.36868, -60.811, 9.69923, 0.74 ) }
    dend_64 { pt3dadd( -4.55045, -61.3618, 10.1156, 0.74 ) }
    dend_64 { pt3dadd( -6.45652, -62.169, 10.8931, 0.74 ) }
    dend_64 { pt3dadd( -7.78742, -62.8108, 11.4841, 0.88 ) }
    dend_64 { pt3dadd( -7.85201, -62.8472, 11.5141, 0.88 ) }
    dend_64 { pt3dadd( -8.90889, -63.5494, 12.0202, 0.74 ) }
    dend_64 { pt3dadd( -10.015, -64.487, 12.5762, 0.74 ) }
    dend_64 { pt3dadd( -10.4961, -65.0134, 12.8141, 1.33 ) }
    dend_64 { pt3dadd( -11.557, -66.587, 13.357, 1.03 ) }
    dend_64 { pt3dadd( -11.9828, -67.355, 13.5367, 1.25 ) }
    dend_64 { pt3dadd( -12.0112, -67.4175, 13.5501, 1.25 ) }
    dend_64 { pt3dadd( -12.2415, -68.0985, 13.6774, 1.25 ) }
    dend_64 { pt3dadd( -12.2583, -68.1657, 13.6873, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_64 { pt3dadd( -12.6358, -70.1351, 14.004, 1.11 ) }
    dend_64 { pt3dadd( -12.8553, -71.4912, 14.2158, 1.11 ) }
    dend_64 { pt3dadd( -12.9869, -72.3514, 14.3246, 1.18 ) }
    dend_64 { pt3dadd( -13.0817, -72.9617, 14.3819, 1.47 ) }
    dend_64 { pt3dadd( -13.0907, -73.0209, 14.3863, 1.47 ) }
    dend_64 { pt3dadd( -13.2356, -74.2232, 14.447, 1.47 ) }
    dend_64 { pt3dadd( -13.3821, -76.3947, 14.6141, 0.96 ) }
    dend_64 { pt3dadd( -13.4181, -77.1634, 14.7036, 0.96 ) }
    dend_64 { pt3dadd( -13.4162, -78.534, 14.9797, 0.96 ) }
    dend_64 { pt3dadd( -13.3708, -79.4158, 15.2318, 0.52 ) }
    dend_64 { pt3dadd( -13.1995, -80.5761, 15.6643, 0.52 ) }
    dend_64 { pt3dadd( -12.7384, -82.0764, 16.4247, 0.74 ) }
    dend_64 { pt3dadd( -12.7105, -82.1298, 16.4603, 0.74 ) }
    dend_64 { pt3dadd( -11.7997, -83.3856, 17.3614, 0.74 ) }
    dend_64 { pt3dadd( -11.7567, -83.4309, 17.3929, 0.74 ) }
    dend_64 { pt3dadd( -11.1325, -84.0106, 17.6792, 0.74 ) }
    dend_64 { pt3dadd( -10.7472, -84.351, 17.7771, 1.11 ) }
    dend_64 { pt3dadd( -10.1062, -84.9507, 17.8138, 1.11 ) }
    dend_64 { pt3dadd( -9.12601, -85.9323, 17.7836, 1.11 ) }
    dend_64 { pt3dadd( -8.33905, -86.7643, 17.6709, 0.81 ) }
    dend_64 { pt3dadd( -7.52283, -87.6911, 17.5463, 0.52 ) }
    dend_64 { pt3dadd( -7.44084, -87.8031, 17.5281, 0.52 ) }
    dend_64 { pt3dadd( -6.97278, -88.5894, 17.371, 0.52 ) }
    dend_64 { pt3dadd( -6.62528, -89.3143, 17.2175, 1.11 ) }
    dend_64 { pt3dadd( -6.59841, -89.3877, 17.2005, 1.11 ) }
    dend_64 { pt3dadd( -6.35362, -90.2869, 16.9954, 1.11 ) }
    dend_64 { pt3dadd( -5.90197, -92.3614, 16.5646, 1.11 ) }
    dend_64 { pt3dadd( -5.60771, -94.0005, 16.2261, 0.74 ) }
    dend_64 { pt3dadd( -5.464, -95.0078, 15.9948, 0.74 ) }
    dend_64 { pt3dadd( -5.36651, -95.9992, 15.7699, 0.44 ) }
    dend_64 { pt3dadd( -5.28789, -97.216, 15.4885, 0.44 ) }
    dend_64 { pt3dadd( -5.27598, -97.8215, 15.3538, 0.88 ) }
    dend_64 { pt3dadd( -5.29765, -98.6102, 15.1997, 0.88 ) }
    dend_64 { pt3dadd( -5.36614, -99.9213, 14.9819, 1.11 ) }
    dend_64 { pt3dadd( -5.46694, -101.808, 14.7708, 1.11 ) }
    dend_64 { pt3dadd( -5.55591, -103.639, 14.6545, 0.74 ) }
    dend_64 { pt3dadd( -5.62647, -105.034, 14.6056, 0.74 ) }
    dend_64 { pt3dadd( -5.71836, -106.492, 14.6018, 0.74 ) }
    dend_64 { pt3dadd( -5.80835, -107.887, 14.6768, 0.59 ) }
    dend_64 { pt3dadd( -5.93568, -109.565, 14.8785, 0.59 ) }
    dend_64 { pt3dadd( -6.00112, -110.513, 15.022, 1.03 ) }
    dend_64 { pt3dadd( -6.00546, -110.582, 15.0347, 1.03 ) }
    dend_64 { pt3dadd( -6.02749, -111.522, 15.1668, 1.03 ) }
    dend_64 { pt3dadd( -5.96553, -112.857, 15.2164, 0.37 ) }
    dend_64 { pt3dadd( -5.77413, -114.329, 15.0062, 0.37 ) }
    dend_64 { pt3dadd( -5.62182, -115.196, 14.7686, 0.88 ) }
    dend_64 { pt3dadd( -5.60784, -115.271, 14.7446, 0.88 ) }
    dend_64 { pt3dadd( -5.35742, -116.654, 14.2768, 0.88 ) }
    dend_64 { pt3dadd( -5.12615, -117.991, 13.8013, 0.88 ) }
    dend_64 { pt3dadd( -4.77618, -120.088, 13.0774, 0.52 ) }
    dend_64 { pt3dadd( -4.6838, -120.654, 12.9046, 0.81 ) }
    dend_64 { pt3dadd( -4.52761, -121.886, 12.6218, 0.81 ) }
    dend_64 { pt3dadd( -4.42863, -122.899, 12.4615, 1.03 ) }
    dend_64 { pt3dadd( -4.36733, -123.918, 12.4055, 1.03 ) }
    dend_64 { pt3dadd( -4.34166, -124.791, 12.4374, 1.03 ) }
    dend_64 { pt3dadd( -4.33904, -124.861, 12.4454, 1.03 ) }
    dend_64 { pt3dadd( -4.1982, -126.083, 12.6169, 0.81 ) }
    dend_64 { pt3dadd( -4.12933, -126.398, 12.6646, 0.81 ) }
    dend_64 { pt3dadd( -3.99395, -126.891, 12.7358, 0.66 ) }
    dend_64 { pt3dadd( -3.97488, -126.958, 12.7438, 0.66 ) }
    dend_64 { pt3dadd( -3.69698, -127.99, 12.8338, 0.66 ) }
    dend_64 { pt3dadd( -3.42415, -129.021, 12.9187, 0.44 ) }
    dend_64 { pt3dadd( -3.06088, -130.452, 13.0279, 0.44 ) }
    dend_64 { pt3dadd( -2.93851, -130.985, 13.0489, 0.96 ) }
    dend_64 { pt3dadd( -2.72461, -132.067, 13.0573, 0.96 ) }
    dend_64 { pt3dadd( -2.56278, -132.924, 13.0405, 0.96 ) }
    dend_64 { pt3dadd( -2.41662, -133.708, 12.9978, 1.11 ) }
    dend_64 { pt3dadd( -2.25112, -134.643, 12.9172, 1.11 ) }
    dend_64 { pt3dadd( -2.0617, -135.751, 12.8148, 0.74 ) }
    dend_64 { pt3dadd( -1.84652, -136.897, 12.7121, 0.74 ) }
    dend_64 { pt3dadd( -1.603, -138.119, 12.6147, 0.74 ) }
    dend_64 { pt3dadd( -1.38066, -139.354, 12.5352, 0.74 ) }
    dend_64 { pt3dadd( -1.27481, -140.009, 12.4949, 1.11 ) }
    dend_64 { pt3dadd( -1.11306, -141.098, 12.4365, 1.11 ) }
    dend_64 { pt3dadd( -0.952505, -142.429, 12.4205, 1.11 ) }
    dend_64 { pt3dadd( -0.810826, -143.891, 12.435, 1.11 ) }
    dend_64 { pt3dadd( -0.691962, -145.442, 12.4821, 1.11 ) }
    dend_64 { pt3dadd( -0.622554, -146.537, 12.5365, 1.11 ) }
    dend_64 { pt3dadd( -0.584865, -147.195, 12.5755, 1.11 ) }
    dend_64 { pt3dadd( -0.536419, -148.417, 12.6611, 0.59 ) }
    dend_64 { pt3dadd( -0.496755, -149.524, 12.7455, 0.59 ) }
    dend_64 { pt3dadd( -0.446211, -150.34, 12.7373, 0.88 ) }
    dend_64 { pt3dadd( -0.344297, -151.214, 12.7082, 1.03 ) }
    dend_64 { pt3dadd( -0.148575, -152.439, 12.6458, 1.03 ) }
    dend_64 { pt3dadd( -0.12222, -152.576, 12.6342, 1.03 ) }
    dend_64 { pt3dadd( 0.220633, -154.224, 12.4969, 1.03 ) }
    dend_64 { pt3dadd( 0.593233, -156.416, 12.4006, 1.03 ) }
    dend_64 { pt3dadd( 0.78988, -158.08, 12.4617, 0.74 ) }
    dend_64 { pt3dadd( 0.890676, -159.505, 12.6294, 0.74 ) }
    dend_64 { pt3dadd( 0.89244, -159.574, 12.6423, 0.74 ) }
    dend_64 { pt3dadd( 0.865375, -160.754, 12.9284, 1.4 ) }
    dend_64 { pt3dadd( 0.755526, -161.947, 13.2987, 1.4 ) }
    dend_64 { pt3dadd( 0.604647, -163.101, 13.6968, 0.29 ) }
    dend_64 { pt3dadd( 0.385912, -164.501, 14.0495, 0.29 ) }
    dend_64 { pt3dadd( 0.326193, -164.928, 14.1335, 0.74 ) }
    dend_64 { pt3dadd( 0.256866, -165.649, 14.2288, 0.74 ) }
    dend_64 { pt3dadd( 0.237559, -166.457, 14.272, 0.88 ) }
    dend_64 { pt3dadd( 0.274817, -167.41, 14.2888, 0.88 ) }
    dend_64 { pt3dadd( 0.382612, -168.494, 14.2449, 0.52 ) }
    dend_64 { pt3dadd( 0.508833, -169.319, 14.2003, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_64 { pt3dadd( 0.626395, -169.819, 14.1697, 0.81 ) }
    dend_64 { pt3dadd( 0.980162, -170.906, 14.1038, 0.81 ) }
    dend_64 { pt3dadd( 1.00876, -170.98, 14.0976, 0.81 ) }
    dend_64 { pt3dadd( 1.52731, -172.239, 13.9772, 0.81 ) }
    dend_64 { pt3dadd( 1.60815, -172.426, 13.9583, 0.81 ) }
    dend_64 { pt3dadd( 2.14109, -173.724, 13.8304, 0.81 ) }
    dend_64 { pt3dadd( 2.85063, -175.667, 13.6384, 0.81 ) }
    dend_64 { pt3dadd( 3.13542, -176.646, 13.5447, 0.81 ) }
    dend_64 { pt3dadd( 3.28484, -177.429, 13.4816, 0.81 ) }
    dend_64 { pt3dadd( 3.31376, -177.961, 13.4846, 1.03 ) }
    dend_64 { pt3dadd( 3.27891, -178.62, 13.5348, 1.03 ) }
    dend_64 { pt3dadd( 3.14096, -179.36, 13.6539, 1.03 ) }
    dend_64 { pt3dadd( 2.92839, -180.1, 13.8436, 1.03 ) }
    dend_64 { pt3dadd( 2.51192, -181.43, 14.2776, 1.03 ) }
    dend_64 { pt3dadd( 2.06275, -183.117, 14.8217, 1.03 ) }
    dend_64 { pt3dadd( 2.04646, -183.183, 14.8374, 1.03 ) }
    dend_64 { pt3dadd( 1.83931, -184.168, 15.0054, 1.03 ) }
    dend_64 { pt3dadd( 1.831, -184.227, 15.0106, 1.03 ) }
    dend_64 { pt3dadd( 1.77743, -185.363, 14.9712, 1.03 ) }
    dend_64 { pt3dadd( 1.89313, -187.33, 14.6696, 1.03 ) }
    dend_64 { pt3dadd( 2.08864, -188.901, 14.3079, 1.4 ) }
    dend_64 { pt3dadd( 2.10295, -188.978, 14.2906, 1.4 ) }
    dend_64 { pt3dadd( 2.3765, -190.038, 14.061, 1.4 ) }
    dend_64 { pt3dadd( 2.70869, -191.19, 13.8257, 0.74 ) }
    dend_64 { pt3dadd( 3.10015, -192.421, 13.6045, 0.74 ) }
    dend_64 { pt3dadd( 3.33135, -193.111, 13.5167, 0.74 ) }
    dend_64 { pt3dadd( 3.72095, -194.375, 13.422, 0.74 ) }
    dend_64 { pt3dadd( 3.98054, -195.352, 13.3433, 1.11 ) }
    dend_64 { pt3dadd( 4.09101, -195.88, 13.2998, 1.11 ) }
    dend_64 { pt3dadd( 4.30109, -197.028, 13.2159, 0.74 ) }
    dend_64 { pt3dadd( 4.32701, -197.174, 13.2006, 0.74 ) }
    dend_64 { pt3dadd( 4.58473, -198.681, 12.9727, 0.74 ) }
    dend_64 { pt3dadd( 4.59434, -198.748, 12.9573, 0.74 ) }
    dend_64 { pt3dadd( 4.69884, -199.476, 12.7552, 1.03 ) }
    dend_64 { pt3dadd( 4.86608, -200.664, 12.4128, 1.03 ) }
    dend_64 { pt3dadd( 4.97549, -201.548, 12.2106, 1.03 ) }
    dend_64 { pt3dadd( 5.0738, -202.542, 12.0462, 0.66 ) }
    dend_64 { pt3dadd( 5.16897, -204.036, 12.005, 0.59 ) }
    dend_64 { pt3dadd( 5.16873, -204.116, 12.0117, 0.59 ) }
    dend_64 { pt3dadd( 5.0159, -205.774, 12.3208, 0.59 ) }
    dend_64 { pt3dadd( 4.7508, -207.26, 12.7277, 0.96 ) }
    dend_64 { pt3dadd( 4.65674, -207.676, 12.8583, 1.11 ) }
    dend_64 { pt3dadd( 4.30603, -209.175, 13.3614, 0.52 ) }
    dend_64 { pt3dadd( 4.0402, -210.273, 13.6988, 0.52 ) }
    dend_64 { pt3dadd( 3.85811, -211.028, 13.861, 0.88 ) }
    dend_64 { pt3dadd( 3.58583, -212.047, 13.9685, 0.88 ) }
    dend_64 { pt3dadd( 3.30692, -213.056, 13.9581, 0.74 ) }
    dend_64 { pt3dadd( 3.10375, -213.841, 13.9011, 0.88 ) }
    dend_64 { pt3dadd( 2.93203, -214.594, 13.7891, 1.18 ) }
    dend_64 { pt3dadd( 2.79866, -215.537, 13.6583, 1.18 ) }
    dend_64 { pt3dadd( 2.72938, -216.407, 13.5554, 1.25 ) }
    dend_64 { pt3dadd( 2.72709, -216.506, 13.5469, 1.25 ) }
    dend_64 { pt3dadd( 2.74162, -217.564, 13.4928, 1.11 ) }
    dend_64 { pt3dadd( 2.77062, -218.433, 13.469, 0.44 ) }
    dend_64 { pt3dadd( 2.9039, -220.097, 13.4649, 0.44 ) }
    dend_64 { pt3dadd( 2.95796, -220.543, 13.4643, 1.11 ) }
    dend_64 { pt3dadd( 3.07265, -221.377, 13.4647, 1.11 ) }
    dend_64 { pt3dadd( 3.07936, -221.447, 13.4647, 1.11 ) }
    dend_64 { pt3dadd( 3.14546, -222.476, 13.4808, 0.88 ) }
    dend_64 { pt3dadd( 3.1786, -223.937, 13.5136, 0.88 ) }
    dend_64 { pt3dadd( 3.17645, -224.017, 13.5188, 0.88 ) }
    dend_64 { pt3dadd( 3.10634, -225.19, 13.6246, 0.59 ) }
    dend_64 { pt3dadd( 2.97455, -226.61, 13.8178, 0.81 ) }
    dend_64 { pt3dadd( 2.83371, -227.663, 13.9938, 0.66 ) }
    dend_64 { pt3dadd( 2.60682, -228.896, 14.2297, 0.66 ) }
    dend_64 { pt3dadd( 2.33543, -230.056, 14.4746, 1.18 ) }
    dend_64 { pt3dadd( 2.07925, -230.994, 14.6763, 1.33 ) }
    dend_64 { pt3dadd( 1.69127, -232.22, 14.9127, 1.33 ) }
    dend_64 { pt3dadd( 1.36242, -233.135, 15.0653, 1.18 ) }
    dend_64 { pt3dadd( 0.844816, -234.388, 15.1809, 1.18 ) }
    dend_64 { pt3dadd( 0.819941, -234.454, 15.1808, 1.18 ) }
    dend_64 { pt3dadd( 0.521512, -235.397, 15.0446, 1.03 ) }
    dend_64 { pt3dadd( 0.283529, -236.38, 14.914, 0.74 ) }
    dend_64 { pt3dadd( 0.271251, -236.438, 14.908, 0.74 ) }
    dend_64 { pt3dadd( 0.150463, -237.175, 14.8748, 0.52 ) }
    dend_64 { pt3dadd( -0.0762753, -238.796, 14.8912, 0.52 ) }
    dend_64 { pt3dadd( -0.177989, -239.534, 14.9277, 0.88 ) }
    dend_64 { pt3dadd( -0.426555, -241.499, 15.1078, 0.52 ) }
    dend_64 { pt3dadd( -0.667904, -243.081, 15.3014, 0.52 ) }
    dend_64 { pt3dadd( -0.786445, -243.737, 15.3607, 1.18 ) }
    dend_64 { pt3dadd( -0.973869, -244.667, 15.4252, 1.18 ) }
    dend_64 { pt3dadd( -1.23352, -245.844, 15.5024, 0.74 ) }
    dend_64 { pt3dadd( -1.24662, -245.912, 15.5059, 0.74 ) }
    dend_64 { pt3dadd( -1.49036, -247.563, 15.5183, 0.74 ) }
    dend_64 { pt3dadd( -1.58086, -248.547, 15.5505, 1.03 ) }
    dend_64 { pt3dadd( -1.64348, -249.347, 15.595, 1.03 ) }
    dend_64 { pt3dadd( -1.80074, -251.803, 15.7619, 1.03 ) }
    dend_64 { pt3dadd( -1.83842, -252.82, 15.8319, 1.03 ) }
    dend_64 { pt3dadd( -1.84824, -253.482, 15.8767, 0.66 ) }
    dend_64 { pt3dadd( -1.84162, -254.574, 15.9718, 0.66 ) }
    dend_64 { pt3dadd( -1.83354, -255.613, 16.0812, 0.66 ) }
    dend_64 { pt3dadd( -1.83645, -255.683, 16.0869, 0.66 ) }
    dend_64 { pt3dadd( -1.92831, -256.51, 16.1134, 1.33 ) }
    dend_64 { pt3dadd( -2.08896, -257.367, 16.1445, 1.33 ) }
    dend_64 { pt3dadd( -2.30293, -258.211, 16.1758, 0.52 ) }
    dend_64 { pt3dadd( -2.32651, -258.287, 16.1786, 0.52 ) }
    dend_64 { pt3dadd( -2.73579, -259.688, 16.2275, 0.52 ) }
    dend_64 { pt3dadd( -3.03137, -260.827, 16.4081, 0.66 ) }
    dend_64 { pt3dadd( -3.31899, -262.017, 16.7036, 0.74 ) }
    dend_64 { pt3dadd( -3.47115, -262.692, 16.9047, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_64 { pt3dadd( -3.50141, -262.842, 16.9541, 0.96 ) }
    dend_64 { pt3dadd( -3.79158, -264.466, 17.6106, 0.66 ) }
    dend_64 { pt3dadd( -4.12955, -266.894, 18.8802, 0.66 ) }
    dend_64 { pt3dadd( -4.13763, -266.953, 18.9162, 0.66 ) }
    dend_64 { pt3dadd( -4.26593, -267.756, 19.4366, 0.66 ) }
    dend_64 { pt3dadd( -4.32421, -268.058, 19.6304, 0.88 ) }
    dend_64 { pt3dadd( -4.53287, -269.001, 20.1736, 1.11 ) }
    dend_64 { pt3dadd( -4.81606, -270.095, 20.7201, 1.11 ) }
    dend_64 { pt3dadd( -4.98769, -270.843, 20.9573, 0.29 ) }
    dend_64 { pt3dadd( -5.11852, -271.583, 21.1659, 0.29 ) }
    dend_64 { pt3dadd( -5.16057, -272.222, 21.3167, 0.29 ) }
    dend_64 { pt3dadd( -5.12387, -273.187, 21.4611, 0.29 ) }
    dend_64 { pt3dadd( -5.08026, -273.503, 21.4677, 0.81 ) }
    dend_64 { pt3dadd( -4.97136, -273.951, 21.4465, 1.03 ) }
    dend_64 { pt3dadd( -4.91724, -274.179, 21.4389, 1.03 ) }
    dend_64 { pt3dadd( -4.74476, -275.094, 21.39, 1.03 ) }
    dend_64 { pt3dadd( -4.73228, -275.534, 21.3599, 1.03 ) }
    dend_64 { pt3dadd( -4.73947, -275.613, 21.3545, 1.03 ) }
    dend_64 { pt3dadd( -4.82364, -276.25, 21.2644, 0.22 ) }
    dend_64 { pt3dadd( -5.0207, -277.537, 21.0483, 0.22 ) }
    dend_64 { pt3dadd( -5.11695, -278.175, 20.9102, 0.74 ) }
    dend_64 { pt3dadd( -5.25179, -278.947, 20.7354, 1.03 ) }
    dend_64 { pt3dadd( -5.41224, -280.104, 20.5168, 1.03 ) }
    dend_64 { pt3dadd( -5.48771, -280.999, 20.3735, 0.88 ) }
    dend_64 { pt3dadd( -5.54136, -282.676, 20.1329, 0.88 ) }
    dend_64 { pt3dadd( -5.53128, -283.684, 20.0503, 0.59 ) }
    dend_64 { pt3dadd( -5.48515, -285.333, 20.0256, 0.59 ) }
    dend_64 { pt3dadd( -5.46844, -286.575, 20.1283, 0.52 ) }
    dend_64 { pt3dadd( -5.49926, -287.552, 20.3064, 0.52 ) }
    dend_64 { pt3dadd( -5.51123, -287.696, 20.3461, 0.52 ) }
    dend_64 { pt3dadd( -5.69593, -288.838, 20.7267, 1.4 ) }
    dend_64 { pt3dadd( -5.93356, -289.829, 21.0807, 1.69 ) }
    dend_64 { pt3dadd( -6.35021, -291.263, 21.5443, 0.74 ) }
    dend_64 { pt3dadd( -6.63731, -292.182, 21.779, 0.66 ) }
    dend_64 { pt3dadd( -6.9878, -293.379, 22.0798, 0.66 ) }
    dend_64 { pt3dadd( -7.24343, -294.516, 22.3837, 0.52 ) }
    dend_64 { pt3dadd( -7.36605, -295.243, 22.5779, 0.52 ) }
    dend_64 { pt3dadd( -7.47094, -296.422, 22.9774, 0.52 ) }
    dend_64 { pt3dadd( -7.43068, -297.559, 23.4284, 0.52 ) }
    dend_64 { pt3dadd( -7.31234, -298.615, 23.9472, 0.88 ) }
    dend_64 { pt3dadd( -7.09859, -299.988, 24.8582, 0.88 ) }
    dend_64 { pt3dadd( -7.08254, -300.079, 24.9348, 0.88 ) }
    dend_64 { pt3dadd( -6.98533, -300.986, 25.9061, 0.66 ) }
    dend_64 { pt3dadd( -6.98768, -301.02, 25.9554, 0.66 ) }
    dend_64 { pt3dadd( -7.2738, -301.497, 26.8549, 0.66 ) }
    dend_64 { pt3dadd( -7.98724, -301.998, 27.8856, 0.96 ) }
    dend_64 { pt3dadd( -8.0395, -302.027, 27.9387, 0.96 ) }
    dend_64 { pt3dadd( -8.52927, -302.33, 28.3916, 0.96 ) }
    dend_64 { pt3dadd( -8.57999, -302.358, 28.4309, 0.96 ) }
    dend_64 { pt3dadd( -9.34823, -302.843, 29.0419, 0.44 ) }
    dend_64 { pt3dadd( -10.0855, -303.47, 29.6891, 0.44 ) }
    dend_64 { pt3dadd( -10.595, -304.069, 30.0847, 0.44 ) }
    dend_64 { pt3dadd( -10.7179, -304.243, 30.1924, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: dend_42 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 2.76648, -63.1683, -7.95698, 0.44 ) }
    dend_56 { pt3dadd( 3.31163, -63.9525, -8.37343, 0.44 ) }
    dend_56 { pt3dadd( 4.175, -65.192, -9.03856, 0.44 ) }
    dend_56 { pt3dadd( 4.97228, -66.3419, -9.65517, 0.59 ) }
    dend_56 { pt3dadd( 5.01324, -66.4041, -9.68433, 0.59 ) }
    dend_56 { pt3dadd( 5.66158, -67.4814, -10.114, 0.88 ) }
    dend_56 { pt3dadd( 6.06469, -68.1786, -10.3683, 0.88 ) }
    dend_56 { pt3dadd( 6.40452, -68.8204, -10.5809, 0.59 ) }
    dend_56 { pt3dadd( 6.43854, -68.8797, -10.5957, 0.59 ) }
    dend_56 { pt3dadd( 7.31298, -70.282, -10.8717, 0.59 ) }
    dend_56 { pt3dadd( 7.89416, -71.2022, -11.033, 0.52 ) }
    dend_56 { pt3dadd( 7.9366, -71.2685, -11.0472, 0.52 ) }
    dend_56 { pt3dadd( 8.42393, -72.0274, -11.2912, 0.52 ) }
    dend_56 { pt3dadd( 9.4252, -73.4743, -11.8971, 0.52 ) }
    dend_56 { pt3dadd( 10.2228, -74.5625, -12.4378, 0.52 ) }
    dend_56 { pt3dadd( 10.9655, -75.4992, -13.0518, 0.52 ) }
    dend_56 { pt3dadd( 11.7607, -76.4593, -13.8226, 0.81 ) }
    dend_56 { pt3dadd( 12.5219, -77.3779, -14.6872, 0.81 ) }
    dend_56 { pt3dadd( 12.9944, -77.9645, -15.3835, 0.96 ) }
    dend_56 { pt3dadd( 13.0227, -78.0011, -15.4361, 0.96 ) }
    dend_56 { pt3dadd( 13.7059, -78.905, -16.8428, 0.96 ) }
    dend_56 { pt3dadd( 14.2144, -79.5783, -17.9798, 0.66 ) }
    dend_56 { pt3dadd( 14.5504, -80.0535, -18.7494, 0.29 ) }
    dend_56 { pt3dadd( 15.0791, -80.783, -19.915, 0.66 ) }
    dend_56 { pt3dadd( 15.1054, -80.8165, -19.9705, 0.66 ) }
    dend_56 { pt3dadd( 15.5167, -81.2583, -20.6109, 0.66 ) }
    dend_56 { pt3dadd( 15.5559, -81.2969, -20.6542, 0.66 ) }
    dend_56 { pt3dadd( 15.8515, -81.5661, -20.8913, 0.66 ) }
    dend_56 { pt3dadd( 16.6824, -82.379, -21.5425, 0.66 ) }
    dend_56 { pt3dadd( 17.4894, -83.1544, -22.1214, 0.52 ) }
    dend_56 { pt3dadd( 18.2391, -83.874, -22.6986, 0.52 ) }
    dend_56 { pt3dadd( 18.7631, -84.3767, -23.1026, 0.52 ) }
    dend_56 { pt3dadd( 18.8076, -84.4209, -23.1338, 0.52 ) }
    dend_56 { pt3dadd( 19.919, -85.5895, -23.8831, 0.37 ) }
    dend_56 { pt3dadd( 20.5669, -86.3109, -24.3013, 0.37 ) }
    dend_56 { pt3dadd( 21.1191, -86.8936, -24.6029, 0.66 ) }
    dend_56 { pt3dadd( 21.8014, -87.5759, -24.9894, 0.66 ) }
    dend_56 { pt3dadd( 22.8635, -88.5825, -25.5584, 0.66 ) }
    dend_56 { pt3dadd( 22.9149, -88.6364, -25.5876, 0.66 ) }
    dend_56 { pt3dadd( 23.5717, -89.427, -25.9593, 0.96 ) }
    dend_56 { pt3dadd( 23.6087, -89.4805, -25.9852, 0.96 ) }
    dend_56 { pt3dadd( 24.2971, -90.5513, -26.4983, 0.59 ) }
    dend_56 { pt3dadd( 24.3317, -90.6052, -26.5265, 0.59 ) }
    dend_56 { pt3dadd( 25.1645, -91.8999, -27.2279, 0.59 ) }
    dend_56 { pt3dadd( 25.9903, -93.0395, -27.8376, 0.59 ) }
    dend_56 { pt3dadd( 26.0378, -93.0972, -27.8662, 0.59 ) }
    dend_56 { pt3dadd( 26.5677, -93.6881, -28.1391, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_56 { pt3dadd( 27.3766, -94.5034, -28.4552, 0.81 ) }
    dend_56 { pt3dadd( 27.4194, -94.5454, -28.4912, 0.81 ) }
    dend_56 { pt3dadd( 28.1243, -95.2042, -29.3797, 0.96 ) }
    dend_56 { pt3dadd( 28.5105, -95.6354, -30.0563, 1.11 ) }
    dend_56 { pt3dadd( 28.5874, -95.7485, -30.2287, 1.11 ) }
    dend_56 { pt3dadd( 28.8345, -96.2446, -30.9862, 1.11 ) }
    dend_56 { pt3dadd( 29.9754, -98.8241, -35.0508, 0.22 ) }
    dend_56 { pt3dadd( 29.9959, -98.8658, -35.116, 0.22 ) }
    dend_56 { pt3dadd( 30.226, -99.3234, -35.833, 0.22 ) }
    dend_56 { pt3dadd( 30.4602, -99.7672, -36.4863, 0.22 ) }
    dend_56 { pt3dadd( 30.7963, -100.341, -37.2554, 0.81 ) }
    dend_56 { pt3dadd( 31.3076, -101.185, -38.1944, 0.44 ) }
    dend_56 { pt3dadd( 32.0669, -102.431, -39.0194, 0.44 ) }
    dend_56 { pt3dadd( 32.2337, -102.732, -39.2028, 0.88 ) }
    dend_56 { pt3dadd( 32.5876, -103.381, -39.5665, 0.88 ) }
    dend_56 { pt3dadd( 32.6167, -103.438, -39.5944, 0.88 ) }
    dend_56 { pt3dadd( 33.2123, -104.673, -40.1341, 0.44 ) }
    dend_56 { pt3dadd( 33.6603, -105.539, -40.4971, 0.44 ) }
    dend_56 { pt3dadd( 34.1019, -106.274, -40.8312, 1.18 ) }
    dend_56 { pt3dadd( 34.5272, -106.773, -41.0743, 1.47 ) }
    dend_56 { pt3dadd( 34.6344, -106.866, -41.124, 1.47 ) }
    dend_56 { pt3dadd( 36.1274, -107.877, -41.6586, 0.74 ) }
    dend_56 { pt3dadd( 37.1355, -108.386, -42.0082, 0.52 ) }
    dend_56 { pt3dadd( 37.2052, -108.416, -42.034, 0.52 ) }
    dend_56 { pt3dadd( 38.5752, -109.003, -42.5605, 0.52 ) }
    dend_56 { pt3dadd( 39.5398, -109.49, -42.9274, 0.88 ) }
    dend_56 { pt3dadd( 40.6452, -110.148, -43.35, 0.88 ) }
    dend_56 { pt3dadd( 42.1129, -111.152, -43.9017, 0.52 ) }
    dend_56 { pt3dadd( 42.2323, -111.242, -43.9477, 0.52 ) }
    dend_56 { pt3dadd( 43.1023, -111.914, -44.2974, 0.52 ) }
    dend_56 { pt3dadd( 44.7423, -113.22, -44.9476, 0.52 ) }
    dend_56 { pt3dadd( 45.3555, -113.722, -45.1699, 0.88 ) }
    dend_56 { pt3dadd( 45.406, -113.764, -45.1935, 0.88 ) }
    dend_56 { pt3dadd( 46.6554, -114.808, -45.8323, 0.88 ) }
    dend_56 { pt3dadd( 47.2786, -115.284, -46.1879, 1.18 ) }
    dend_56 { pt3dadd( 48.4066, -116.06, -46.9191, 1.18 ) }
    dend_56 { pt3dadd( 48.4573, -116.093, -46.9542, 1.18 ) }
    dend_56 { pt3dadd( 50.4732, -117.408, -48.3502, 0.52 ) }
    dend_56 { pt3dadd( 50.5299, -117.448, -48.3896, 0.52 ) }
    dend_56 { pt3dadd( 51.4412, -118.171, -49.0254, 0.52 ) }
    dend_56 { pt3dadd( 52.0783, -118.666, -49.3862, 0.52 ) }
    dend_56 { pt3dadd( 52.6992, -119.135, -49.6668, 0.88 ) }
    dend_56 { pt3dadd( 52.7825, -119.196, -49.6929, 0.88 ) }
    dend_56 { pt3dadd( 53.6932, -119.831, -49.8251, 0.88 ) }
    dend_56 { pt3dadd( 54.4837, -120.377, -49.9286, 0.44 ) }
    dend_56 { pt3dadd( 55.7153, -121.208, -50.07, 0.44 ) }
    dend_56 { pt3dadd( 56.4846, -121.743, -50.1509, 0.81 ) }
    dend_56 { pt3dadd( 56.6111, -121.834, -50.1666, 0.81 ) }
    dend_56 { pt3dadd( 56.9857, -122.114, -50.2163, 1.03 ) }
    dend_56 { pt3dadd( 57.6284, -122.638, -50.3081, 1.03 ) }
    dend_56 { pt3dadd( 57.678, -122.687, -50.315, 1.03 ) }
    dend_56 { pt3dadd( 58.3452, -123.428, -50.3988, 0.88 ) }
    dend_56 { pt3dadd( 58.393, -123.478, -50.4098, 0.88 ) }
    dend_56 { pt3dadd( 59.1053, -124.175, -50.6129, 0.59 ) }
    dend_56 { pt3dadd( 59.5615, -124.568, -50.753, 0.52 ) }
    dend_56 { pt3dadd( 60.0335, -124.933, -50.9034, 0.74 ) }
    dend_56 { pt3dadd( 60.7824, -125.444, -51.149, 0.74 ) }
    dend_56 { pt3dadd( 61.7381, -125.993, -51.4551, 0.22 ) }
    dend_56 { pt3dadd( 62.2681, -126.27, -51.6343, 0.22 ) }
    dend_56 { pt3dadd( 62.9103, -126.564, -51.8658, 0.22 ) }
    dend_56 { pt3dadd( 62.9809, -126.593, -51.8897, 0.22 ) }
    dend_56 { pt3dadd( 63.4696, -126.788, -52.0447, 0.74 ) }
    dend_56 { pt3dadd( 64.0323, -127.03, -52.1908, 0.88 ) }
    dend_56 { pt3dadd( 64.5509, -127.282, -52.2821, 0.66 ) }
    dend_56 { pt3dadd( 65.7225, -127.906, -52.4705, 0.44 ) }
    dend_56 { pt3dadd( 66.3747, -128.296, -52.5625, 0.44 ) }
    dend_56 { pt3dadd( 66.433, -128.334, -52.5693, 0.44 ) }
    dend_56 { pt3dadd( 67.4082, -129.039, -52.6523, 0.44 ) }
    dend_56 { pt3dadd( 68.3749, -129.805, -52.7483, 0.44 ) }
    dend_56 { pt3dadd( 68.6997, -130.086, -52.7812, 0.66 ) }
    dend_56 { pt3dadd( 69.1597, -130.525, -52.8306, 0.96 ) }
    dend_56 { pt3dadd( 69.5003, -130.863, -52.8847, 0.96 ) }
    dend_56 { pt3dadd( 69.7912, -131.157, -52.9426, 0.96 ) }
    dend_56 { pt3dadd( 70.4183, -131.758, -53.0941, 0.22 ) }
    dend_56 { pt3dadd( 70.4696, -131.803, -53.1106, 0.22 ) }
    dend_56 { pt3dadd( 71.0811, -132.317, -53.3256, 0.22 ) }
    dend_56 { pt3dadd( 71.5145, -132.671, -53.4896, 0.74 ) }
    dend_56 { pt3dadd( 71.9768, -133.048, -53.6661, 1.03 ) }
    dend_56 { pt3dadd( 72.5307, -133.505, -53.86, 1.03 ) }
    dend_56 { pt3dadd( 73.227, -134.088, -54.0795, 0.22 ) }
    dend_56 { pt3dadd( 73.7842, -134.572, -54.2465, 0.15 ) }
    dend_56 { pt3dadd( 74.3883, -135.115, -54.4537, 0.15 ) }
    dend_56 { pt3dadd( 74.6462, -135.355, -54.5433, 1.18 ) }
    dend_56 { pt3dadd( 75.3554, -136.019, -54.7903, 1.18 ) }
    dend_56 { pt3dadd( 75.4062, -136.064, -54.808, 1.18 ) }
    dend_56 { pt3dadd( 76.0598, -136.542, -55.008, 1.18 ) }
    dend_56 { pt3dadd( 77.0325, -137.102, -55.3316, 0.52 ) }
    dend_56 { pt3dadd( 77.6955, -137.437, -55.5695, 0.52 ) }
    dend_56 { pt3dadd( 78.0723, -137.628, -55.7168, 0.52 ) }
    dend_56 { pt3dadd( 78.8944, -138.042, -56.0633, 0.22 ) }
    dend_56 { pt3dadd( 79.5002, -138.366, -56.3222, 0.22 ) }
    dend_56 { pt3dadd( 80.5742, -138.964, -56.7893, 0.22 ) }
    dend_56 { pt3dadd( 80.8457, -139.155, -56.9016, 0.74 ) }
    dend_56 { pt3dadd( 81.3139, -139.697, -57.2569, 0.96 ) }
    dend_56 { pt3dadd( 81.3451, -139.759, -57.2973, 0.96 ) }
    dend_56 { pt3dadd( 81.4641, -140.193, -57.5508, 0.96 ) }
    dend_56 { pt3dadd( 81.4784, -140.251, -57.5871, 0.96 ) }
    dend_56 { pt3dadd( 81.6383, -140.843, -57.9833, 0.96 ) }
    dend_56 { pt3dadd( 82.183, -142.301, -59.0678, 0.22 ) }
    dend_56 { pt3dadd( 82.2104, -142.347, -59.1132, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_56 { pt3dadd( 82.7303, -143.069, -59.8989, 0.22 ) }
    dend_56 { pt3dadd( 83.1596, -143.565, -60.5227, 0.22 ) }
    dend_56 { pt3dadd( 83.309, -143.702, -60.7454, 0.81 ) }
    dend_56 { pt3dadd( 83.3452, -143.728, -60.7995, 0.81 ) }
    dend_56 { pt3dadd( 84.3467, -144.363, -62.1759, 1.03 ) }
    dend_56 { pt3dadd( 84.6713, -144.568, -62.6241, 1.03 ) }
    dend_56 { pt3dadd( 85.581, -145.148, -63.857, 0.74 ) }
    dend_56 { pt3dadd( 86.678, -145.891, -65.2214, 1.03 ) }
    dend_56 { pt3dadd( 87.4168, -146.398, -66.0464, 0.29 ) }
    dend_56 { pt3dadd( 88.0834, -146.846, -66.7067, 0.29 ) }
    dend_56 { pt3dadd( 88.6935, -147.24, -67.2064, 0.74 ) }
    dend_56 { pt3dadd( 89.3935, -147.647, -67.671, 0.74 ) }
    dend_56 { pt3dadd( 90.2152, -148.107, -68.0857, 0.59 ) }
    dend_56 { pt3dadd( 90.7246, -148.397, -68.2937, 0.29 ) }
    dend_56 { pt3dadd( 91.5329, -148.812, -68.5941, 0.96 ) }
    dend_56 { pt3dadd( 92.0242, -149.003, -68.7685, 1.11 ) }
    dend_56 { pt3dadd( 92.7703, -149.236, -69.0264, 1.11 ) }
    dend_56 { pt3dadd( 93.5521, -149.444, -69.3021, 1.11 ) }
    dend_56 { pt3dadd( 94.8215, -149.746, -69.7395, 0.22 ) }
    dend_56 { pt3dadd( 96.0801, -150.032, -70.1286, 0.22 ) }
    dend_56 { pt3dadd( 97.388, -150.37, -70.4617, 0.22 ) }
    dend_56 { pt3dadd( 97.8439, -150.505, -70.538, 0.66 ) }
    dend_56 { pt3dadd( 98.3386, -150.672, -70.5726, 0.96 ) }
    dend_56 { pt3dadd( 98.7502, -150.825, -70.5452, 1.11 ) }
    dend_56 { pt3dadd( 99.4386, -151.075, -70.4512, 0.66 ) }
    dend_56 { pt3dadd( 100.306, -151.398, -70.2963, 0.44 ) }
    dend_56 { pt3dadd( 101.602, -151.86, -70.0422, 0.29 ) }
    dend_56 { pt3dadd( 101.667, -151.879, -70.0271, 0.29 ) }
    dend_56 { pt3dadd( 102.525, -152.096, -69.8254, 0.29 ) }
    dend_56 { pt3dadd( 103.96, -152.436, -69.5073, 0.29 ) }
    dend_56 { pt3dadd( 104.687, -152.585, -69.3615, 1.03 ) }
    dend_56 { pt3dadd( 105.334, -152.705, -69.2615, 1.03 ) }
    dend_56 { pt3dadd( 106.346, -152.904, -69.1697, 0.59 ) }
    dend_56 { pt3dadd( 106.414, -152.92, -69.1631, 0.59 ) }
    dend_56 { pt3dadd( 107.462, -153.318, -69.0447, 0.59 ) }
    dend_56 { pt3dadd( 107.523, -153.352, -69.037, 0.59 ) }
    dend_56 { pt3dadd( 107.957, -153.649, -69.0102, 0.15 ) }
    dend_56 { pt3dadd( 108.013, -153.691, -69.009, 0.15 ) }
    dend_56 { pt3dadd( 108.709, -154.263, -69.0667, 0.15 ) }
    dend_56 { pt3dadd( 109.685, -155.099, -69.1793, 0.15 ) }
    dend_56 { pt3dadd( 109.929, -155.313, -69.2132, 0.59 ) }
    dend_56 { pt3dadd( 110.471, -155.793, -69.2927, 0.74 ) }
    dend_56 { pt3dadd( 110.523, -155.838, -69.3005, 0.74 ) }
    dend_56 { pt3dadd( 111.267, -156.418, -69.4826, 0.74 ) }
    dend_56 { pt3dadd( 111.742, -156.712, -69.6239, 0.74 ) }
    dend_56 { pt3dadd( 112.367, -157.011, -69.823, 0.74 ) }
    dend_56 { pt3dadd( 112.438, -157.04, -69.8456, 1.11 ) }
    dend_56 { pt3dadd( 113.036, -157.26, -70.0187, 1.11 ) }
    dend_56 { pt3dadd( 114.382, -157.731, -70.395, 0.81 ) }
    dend_56 { pt3dadd( 115.862, -158.204, -70.7464, 0.81 ) }
    dend_56 { pt3dadd( 115.928, -158.225, -70.7603, 0.81 ) }
    dend_56 { pt3dadd( 117.366, -158.681, -71.0225, 0.81 ) }
    dend_56 { pt3dadd( 118.695, -159.103, -71.2241, 0.81 ) }
    dend_56 { pt3dadd( 119.54, -159.362, -71.3182, 0.88 ) }
    dend_56 { pt3dadd( 120.288, -159.556, -71.3541, 0.66 ) }
    dend_56 { pt3dadd( 121.192, -159.734, -71.384, 0.66 ) }
    dend_56 { pt3dadd( 122.093, -159.835, -71.3664, 0.81 ) }
    dend_56 { pt3dadd( 122.258, -159.829, -71.3519, 0.81 ) }
    dend_56 { pt3dadd( 122.963, -159.706, -71.2668, 0.44 ) }
    dend_56 { pt3dadd( 123.867, -159.48, -71.1473, 0.44 ) }
    dend_56 { pt3dadd( 124.355, -159.319, -71.0947, 0.59 ) }
    dend_56 { pt3dadd( 125.345, -158.984, -71.0062, 0.44 ) }
    dend_56 { pt3dadd( 126.436, -158.631, -70.9241, 0.44 ) }
    dend_56 { pt3dadd( 126.819, -158.522, -70.9009, 1.03 ) }
    dend_56 { pt3dadd( 127.757, -158.308, -70.8598, 0.22 ) }
    dend_56 { pt3dadd( 128.752, -158.136, -70.8374, 0.22 ) }
    dend_56 { pt3dadd( 130.214, -157.987, -70.8469, 0.22 ) }
    dend_56 { pt3dadd( 130.364, -157.984, -70.8549, 0.66 ) }
    dend_56 { pt3dadd( 130.738, -158.014, -70.8761, 0.66 ) }
    dend_56 { pt3dadd( 131.155, -158.119, -70.8972, 0.88 ) }
    dend_56 { pt3dadd( 131.304, -158.191, -70.9076, 0.88 ) }
    dend_56 { pt3dadd( 131.657, -158.42, -70.9388, 0.88 ) }
    dend_56 { pt3dadd( 131.906, -158.585, -70.9611, 0.15 ) }
    dend_56 { pt3dadd( 131.973, -158.628, -70.9724, 0.15 ) }
    dend_56 { pt3dadd( 133.184, -159.386, -71.2349, 0.15 ) }
    dend_56 { pt3dadd( 133.656, -159.674, -71.3474, 0.52 ) }
    dend_56 { pt3dadd( 134.208, -160.007, -71.4859, 0.74 ) }
    dend_56 { pt3dadd( 134.994, -160.477, -71.6799, 0.88 ) }
    dend_56 { pt3dadd( 135.841, -160.969, -71.9192, 0.15 ) }
    dend_56 { pt3dadd( 135.9, -161.003, -71.9372, 0.15 ) }
    dend_56 { pt3dadd( 136.691, -161.443, -72.1911, 0.15 ) }
    dend_56 { pt3dadd( 136.831, -161.525, -72.2421, 0.15 ) }
    dend_56 { pt3dadd( 137.624, -162.008, -72.6181, 0.15 ) }
    dend_56 { pt3dadd( 138.23, -162.358, -72.9679, 0.88 ) }
    dend_56 { pt3dadd( 138.647, -162.585, -73.214, 0.88 ) }
    dend_56 { pt3dadd( 139.224, -162.887, -73.5776, 0.88 ) }
    dend_56 { pt3dadd( 140.131, -163.275, -74.2174, 0.88 ) }
    dend_56 { pt3dadd( 140.753, -163.457, -74.6605, 1.11 ) }
    dend_56 { pt3dadd( 141.519, -163.55, -75.2202, 0.22 ) }
    dend_56 { pt3dadd( 142.17, -163.577, -75.8981, 0.22 ) }
    dend_56 { pt3dadd( 142.214, -163.579, -75.9523, 0.22 ) }
    dend_56 { pt3dadd( 142.897, -163.617, -76.8427, 0.22 ) }
    dend_56 { pt3dadd( 143.498, -163.651, -77.6206, 0.22 ) }
    dend_56 { pt3dadd( 144.1, -163.696, -78.4059, 1.18 ) }
    dend_56 { pt3dadd( 146.132, -163.892, -81.2554, 0.44 ) }
    dend_56 { pt3dadd( 146.804, -163.944, -82.2438, 0.44 ) }
    dend_56 { pt3dadd( 147.097, -163.977, -82.6791, 0.66 ) }
    dend_56 { pt3dadd( 147.813, -164.085, -83.7645, 0.52 ) }
    dend_56 { pt3dadd( 147.858, -164.092, -83.8303, 0.52 ) }
    dend_56 { pt3dadd( 148.76, -164.164, -84.9563, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_56 { pt3dadd( 149.314, -164.158, -85.4368, 0.66 ) }
    dend_56 { pt3dadd( 149.366, -164.161, -85.4836, 0.66 ) }
    dend_56 { pt3dadd( 150.358, -164.343, -86.3618, 0.37 ) }
    dend_56 { pt3dadd( 150.946, -164.503, -86.8195, 0.66 ) }
    dend_56 { pt3dadd( 151.364, -164.637, -87.0921, 0.66 ) }
    dend_56 { pt3dadd( 152.371, -164.984, -87.6657, 0.66 ) }
    dend_56 { pt3dadd( 153.372, -165.335, -88.2211, 1.25 ) }
    dend_56 { pt3dadd( 153.719, -165.449, -88.3724, 1.25 ) }
    dend_56 { pt3dadd( 154.438, -165.673, -88.608, 0.74 ) }
    dend_56 { pt3dadd( 155.194, -165.888, -88.8201, 0.74 ) }
    dend_56 { pt3dadd( 156.459, -166.191, -89.1358, 0.74 ) }
    dend_56 { pt3dadd( 157.416, -166.369, -89.3125, 1.11 ) }
    dend_56 { pt3dadd( 158.937, -166.598, -89.5083, 0.81 ) }
    dend_56 { pt3dadd( 159.615, -166.698, -89.5881, 0.52 ) }
    dend_56 { pt3dadd( 160.134, -166.808, -89.6351, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 15/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.76648, -63.1683, -7.95698, 0.96 ) }
    dend_43 { pt3dadd( 2.39423, -63.9547, -8.5799, 0.96 ) }
    dend_43 { pt3dadd( 2.06875, -64.7032, -9.19986, 0.81 ) }
    dend_43 { pt3dadd( 1.74999, -65.4938, -9.80773, 0.81 ) }
    dend_43 { pt3dadd( 1.49163, -66.1815, -10.2935, 1.18 ) }
    dend_43 { pt3dadd( 1.03785, -67.5255, -11.1486, 1.18 ) }
    dend_43 { pt3dadd( 0.551106, -69.1951, -12.0954, 0.81 ) }
    dend_43 { pt3dadd( 0.388916, -69.8918, -12.4624, 0.66 ) }
    dend_43 { pt3dadd( 0.206027, -70.9106, -12.9344, 0.66 ) }
    dend_43 { pt3dadd( 0.081003, -71.7374, -13.2417, 1.25 ) }
    dend_43 { pt3dadd( -0.0625225, -72.7329, -13.4781, 1.25 ) }
    dend_43 { pt3dadd( -0.248282, -73.9675, -13.6014, 0.74 ) }
    dend_43 { pt3dadd( -0.383479, -74.6847, -13.618, 0.88 ) }
    dend_43 { pt3dadd( -0.467297, -74.9637, -13.6251, 0.81 ) }
    dend_43 { pt3dadd( -0.846059, -75.9387, -13.7292, 0.81 ) }
    dend_43 { pt3dadd( -1.27251, -76.8813, -13.89, 0.81 ) }
    dend_43 { pt3dadd( -1.60251, -77.5641, -14.0945, 0.52 ) }
    dend_43 { pt3dadd( -1.9141, -78.2448, -14.384, 0.52 ) }
    dend_43 { pt3dadd( -2.47698, -79.6484, -15.1322, 0.52 ) }
    dend_43 { pt3dadd( -3.05725, -81.2086, -16.0579, 0.52 ) }
    dend_43 { pt3dadd( -3.2152, -81.6483, -16.3312, 1.11 ) }
    dend_43 { pt3dadd( -3.673, -82.9605, -17.1443, 1.11 ) }
    dend_43 { pt3dadd( -3.98294, -83.8875, -17.7002, 1.11 ) }
    dend_43 { pt3dadd( -4.20543, -84.5995, -18.0898, 0.44 ) }
    dend_43 { pt3dadd( -4.58299, -85.7291, -18.6165, 0.44 ) }
    dend_43 { pt3dadd( -4.99692, -86.6487, -18.9241, 0.44 ) }
    dend_43 { pt3dadd( -5.32038, -87.2002, -19.0568, 0.44 ) }
    dend_43 { pt3dadd( -5.62089, -87.6285, -19.1017, 0.74 ) }
    dend_43 { pt3dadd( -5.97132, -88.0708, -19.1198, 0.74 ) }
    dend_43 { pt3dadd( -6.54718, -88.7608, -19.1221, 0.52 ) }
    dend_43 { pt3dadd( -6.59943, -88.8214, -19.1223, 0.52 ) }
    dend_43 { pt3dadd( -7.72258, -90.046, -19.1204, 0.52 ) }
    dend_43 { pt3dadd( -8.10249, -90.4367, -19.1117, 1.18 ) }
    dend_43 { pt3dadd( -8.51178, -90.8404, -19.1065, 1.18 ) }
    dend_43 { pt3dadd( -9.00868, -91.295, -19.1168, 1.18 ) }
    dend_43 { pt3dadd( -9.40451, -91.653, -19.1582, 1.18 ) }
    dend_43 { pt3dadd( -9.94535, -92.1262, -19.2442, 0.74 ) }
    dend_43 { pt3dadd( -9.99748, -92.1717, -19.2547, 0.74 ) }
    dend_43 { pt3dadd( -10.5941, -92.6998, -19.3994, 0.44 ) }
    dend_43 { pt3dadd( -11.9082, -93.9035, -19.7588, 0.44 ) }
    dend_43 { pt3dadd( -12.5413, -94.5292, -19.9429, 0.81 ) }
    dend_43 { pt3dadd( -13.4842, -95.5394, -20.2166, 0.81 ) }
    dend_43 { pt3dadd( -14.1445, -96.2968, -20.4043, 0.81 ) }
    dend_43 { pt3dadd( -14.8452, -97.162, -20.545, 0.81 ) }
    dend_43 { pt3dadd( -15.6657, -98.2751, -20.6341, 0.81 ) }
    dend_43 { pt3dadd( -16.2494, -99.14, -20.6444, 0.81 ) }
    dend_43 { pt3dadd( -16.9621, -100.205, -20.5827, 0.81 ) }
    dend_43 { pt3dadd( -17.3805, -100.824, -20.5203, 1.11 ) }
    dend_43 { pt3dadd( -18.2113, -102.041, -20.3509, 1.18 ) }
    dend_43 { pt3dadd( -18.6462, -102.69, -20.2647, 1.18 ) }
    dend_43 { pt3dadd( -19.2184, -103.552, -20.1757, 0.59 ) }
    dend_43 { pt3dadd( -19.8219, -104.468, -20.1611, 0.59 ) }
    dend_43 { pt3dadd( -20.4037, -105.403, -20.2318, 0.59 ) }
    dend_43 { pt3dadd( -20.8816, -106.243, -20.3627, 0.59 ) }
    dend_43 { pt3dadd( -21.3916, -107.255, -20.6039, 0.96 ) }
    dend_43 { pt3dadd( -21.6896, -107.962, -20.7719, 1.18 ) }
    dend_43 { pt3dadd( -22.035, -108.968, -20.9948, 1.18 ) }
    dend_43 { pt3dadd( -22.3015, -109.865, -21.181, 1.18 ) }
    dend_43 { pt3dadd( -22.5496, -110.696, -21.3402, 1.18 ) }
    dend_43 { pt3dadd( -23.0177, -111.922, -21.5386, 1.18 ) }
    dend_43 { pt3dadd( -23.5839, -113.118, -21.6561, 1.18 ) }
    dend_43 { pt3dadd( -24.1654, -114.118, -21.7464, 1.18 ) }
    dend_43 { pt3dadd( -24.2111, -114.183, -21.7531, 1.18 ) }
    dend_43 { pt3dadd( -24.7433, -114.836, -21.8632, 0.66 ) }
    dend_43 { pt3dadd( -25.7032, -115.853, -22.0931, 0.66 ) }
    dend_43 { pt3dadd( -26.1876, -116.327, -22.2476, 0.66 ) }
    dend_43 { pt3dadd( -26.8495, -116.964, -22.547, 0.66 ) }
    dend_43 { pt3dadd( -27.474, -117.582, -22.9186, 0.66 ) }
    dend_43 { pt3dadd( -27.9825, -118.143, -23.2962, 0.66 ) }
    dend_43 { pt3dadd( -28.6265, -118.948, -23.9032, 0.66 ) }
    dend_43 { pt3dadd( -29.1847, -119.707, -24.6367, 0.66 ) }
    dend_43 { pt3dadd( -29.7744, -120.522, -25.6123, 1.18 ) }
    dend_43 { pt3dadd( -30.3054, -121.293, -26.6229, 0.88 ) }
    dend_43 { pt3dadd( -30.9556, -122.267, -28.0291, 0.88 ) }
    dend_43 { pt3dadd( -31.3385, -122.861, -28.9212, 1.11 ) }
    dend_43 { pt3dadd( -32.2807, -124.446, -31.2758, 1.11 ) }
    dend_43 { pt3dadd( -32.931, -125.567, -32.8824, 1.11 ) }
    dend_43 { pt3dadd( -33.1497, -125.941, -33.3891, 1.33 ) }
    dend_43 { pt3dadd( -33.8502, -127.09, -34.8395, 0.52 ) }
    dend_43 { pt3dadd( -34.2977, -127.726, -35.5589, 0.52 ) }
    dend_43 { pt3dadd( -35.1132, -128.702, -36.4244, 0.52 ) }
    dend_43 { pt3dadd( -35.5039, -129.096, -36.6753, 0.96 ) }
    dend_43 { pt3dadd( -36.2859, -129.776, -37.0341, 1.03 ) }
    dend_43 { pt3dadd( -36.9458, -130.307, -37.2904, 1.25 ) }
    dend_43 { pt3dadd( -37.763, -130.983, -37.549, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( -38.5011, -131.615, -37.8761, 1.25 ) }
    dend_43 { pt3dadd( -39.231, -132.312, -38.333, 0.66 ) }
    dend_43 { pt3dadd( -39.6724, -132.823, -38.7371, 0.44 ) }
    dend_43 { pt3dadd( -40.1665, -133.483, -39.2901, 0.44 ) }
    dend_43 { pt3dadd( -40.752, -134.327, -39.9914, 0.44 ) }
    dend_43 { pt3dadd( -41.6384, -135.621, -41.0713, 0.96 ) }
    dend_43 { pt3dadd( -42.2993, -136.458, -41.7433, 0.96 ) }
    dend_43 { pt3dadd( -42.9944, -137.192, -42.2953, 0.81 ) }
    dend_43 { pt3dadd( -43.8946, -138.002, -42.8773, 0.52 ) }
    dend_43 { pt3dadd( -44.4251, -138.379, -43.1075, 0.88 ) }
    dend_43 { pt3dadd( -44.995, -138.737, -43.2849, 1.25 ) }
    dend_43 { pt3dadd( -46.1334, -139.427, -43.4978, 1.25 ) }
    dend_43 { pt3dadd( -46.5209, -139.673, -43.5541, 1.25 ) }
    dend_43 { pt3dadd( -47.1915, -140.127, -43.674, 0.29 ) }
    dend_43 { pt3dadd( -48.7891, -141.286, -44.0464, 0.15 ) }
    dend_43 { pt3dadd( -49.504, -141.825, -44.2266, 0.96 ) }
    dend_43 { pt3dadd( -50.0603, -142.279, -44.3858, 1.25 ) }
    dend_43 { pt3dadd( -51.1561, -143.275, -44.7501, 1.25 ) }
    dend_43 { pt3dadd( -52.0267, -144.096, -45.0615, 0.74 ) }
    dend_43 { pt3dadd( -52.6606, -144.73, -45.3373, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 20/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -263.642, -153.108, -26.6349, 0.59 ) }
    dend_39 { pt3dadd( -273.017, -155.155, -29.4486, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 22/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -263.642, -153.108, -26.6349, 0.66 ) }
    dend_38 { pt3dadd( -272.201, -156.257, -30.7366, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 24/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 118.805, 243.934, -108.684, 0.44 ) }
    dend_33 { pt3dadd( 119.491, 244.745, -108.968, 0.44 ) }
    dend_33 { pt3dadd( 119.641, 244.92, -109.031, 0.44 ) }
    dend_33 { pt3dadd( 120.412, 245.804, -109.385, 0.44 ) }
    dend_33 { pt3dadd( 120.702, 246.147, -109.536, 0.44 ) }
    dend_33 { pt3dadd( 121.44, 247.056, -109.78, 0.44 ) }
    dend_33 { pt3dadd( 121.542, 247.185, -109.802, 0.44 ) }
    dend_33 { pt3dadd( 122.077, 247.878, -109.821, 0.44 ) }
    dend_33 { pt3dadd( 122.228, 248.088, -109.812, 0.44 ) }
    dend_33 { pt3dadd( 122.617, 248.695, -109.713, 0.44 ) }
    dend_33 { pt3dadd( 123.572, 250.357, -109.311, 0.44 ) }
    dend_33 { pt3dadd( 123.601, 250.417, -109.289, 0.44 ) }
    dend_33 { pt3dadd( 124.126, 251.564, -108.749, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 118.805, 243.934, -108.684, 0.44 ) }
    dend_32 { pt3dadd( 119.658, 244.484, -108.75, 0.44 ) }
    dend_32 { pt3dadd( 119.917, 244.614, -108.763, 0.44 ) }
    dend_32 { pt3dadd( 120.602, 244.925, -108.792, 0.44 ) }
    dend_32 { pt3dadd( 121.033, 245.112, -108.809, 0.44 ) }
    dend_32 { pt3dadd( 122.004, 245.534, -108.845, 0.44 ) }
    dend_32 { pt3dadd( 122.206, 245.621, -108.853, 0.44 ) }
    dend_32 { pt3dadd( 123.72, 246.235, -108.903, 0.44 ) }
    dend_32 { pt3dadd( 124.089, 246.377, -108.912, 0.44 ) }
    dend_32 { pt3dadd( 124.247, 246.426, -108.912, 0.44 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 47/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 89.6771, 50.9097, 89.9575, 0.44 ) }
    dend_26 { pt3dadd( 97.712, 52.9468, 95.5512, 0.44 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 49/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 89.6771, 50.9097, 89.9575, 0.44 ) }
    dend_25 { pt3dadd( 96.8753, 56.1762, 94.4797, 0.44 ) }
    dend_25 { pt3dadd( 103.391, 62.1061, 99.2107, 0.44 ) }
    dend_25 { pt3dadd( 108.742, 68.3449, 104.906, 0.44 ) }
    dend_25 { pt3dadd( 114.898, 74.9087, 109.267, 0.44 ) }
    dend_25 { pt3dadd( 119.841, 81.2716, 115.19, 0.44 ) }
    dend_25 { pt3dadd( 125.489, 88.5843, 119.015, 0.44 ) }
    dend_25 { pt3dadd( 131.024, 95.4948, 123.663, 0.44 ) }
    dend_25 { pt3dadd( 136.649, 103.083, 126.946, 0.44 ) }
    dend_25 { pt3dadd( 142.251, 110.537, 130.56, 0.44 ) }
    dend_25 { pt3dadd( 147.889, 117.59, 134.857, 0.44 ) }
    dend_25 { pt3dadd( 152.195, 124.753, 140.349, 0.44 ) }
    dend_25 { pt3dadd( 156.282, 131.188, 146.82, 0.44 ) }
    dend_25 { pt3dadd( 161.31, 138.355, 151.653, 0.44 ) }
    dend_25 { pt3dadd( 167.429, 145.448, 155.152, 0.44 ) }
    dend_25 { pt3dadd( 171.452, 153.783, 158.94, 0.44 ) }
    dend_25 { pt3dadd( 175.498, 161.673, 163.563, 0.44 ) }
    dend_25 { pt3dadd( 179.161, 169.159, 169.09, 0.44 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 67/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 292.733, -78.069, 5.6829, 0.44 ) }
    dend_23 { pt3dadd( 302.33, -80.5309, 4.32369, 0.44 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 69/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 292.733, -78.069, 5.6829, 0.44 ) }
    dend_22 { pt3dadd( 301.907, -81.9907, 5.00472, 0.44 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 71/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -88.6161, 295.867, 8.80305, 0.44 ) }
    dend_19 { pt3dadd( -91.7019, 305.377, 8.60438, 0.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 73/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -88.6161, 295.867, 8.80305, 0.44 ) }
    dend_18 { pt3dadd( -91.5221, 305.43, 8.466, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.5633, 24.5847, 31.2747, 1.11 ) }
    dend_12 { pt3dadd( -17.3337, 26.384, 33.8417, 1.11 ) }
    dend_12 { pt3dadd( -17.3254, 26.4279, 33.8956, 1.11 ) }
    dend_12 { pt3dadd( -17.1553, 27.2143, 34.7812, 1.11 ) }
    dend_12 { pt3dadd( -17.1334, 27.3093, 34.8672, 1.11 ) }
    dend_12 { pt3dadd( -16.7298, 29.0076, 36.1795, 1.11 ) }
    dend_12 { pt3dadd( -16.7187, 29.0572, 36.2114, 1.11 ) }
    dend_12 { pt3dadd( -16.3428, 30.3069, 36.6184, 1.11 ) }
    dend_12 { pt3dadd( -16.3164, 30.422, 36.6396, 1.11 ) }
    dend_12 { pt3dadd( -16.1236, 31.7546, 36.6726, 1.11 ) }
    dend_12 { pt3dadd( -16.1226, 31.8244, 36.6666, 1.11 ) }
    dend_12 { pt3dadd( -16.2003, 32.5512, 36.5215, 1.11 ) }
    dend_12 { pt3dadd( -16.2178, 32.6185, 36.5139, 1.11 ) }
    dend_12 { pt3dadd( -16.5851, 33.3827, 36.5256, 1.11 ) }
    dend_12 { pt3dadd( -16.6417, 33.4643, 36.5369, 1.11 ) }
    dend_12 { pt3dadd( -17.3542, 34.1574, 36.7444, 1.11 ) }
    dend_12 { pt3dadd( -17.4284, 34.2107, 36.7563, 1.11 ) }
    dend_12 { pt3dadd( -18.3358, 34.6934, 36.8216, 1.11 ) }
    dend_12 { pt3dadd( -18.4288, 34.7299, 36.8269, 1.11 ) }
    dend_12 { pt3dadd( -19.0676, 34.896, 36.8858, 0.88 ) }
    dend_12 { pt3dadd( -19.36, 34.9565, 36.9146, 0.88 ) }
    dend_12 { pt3dadd( -20.661, 35.1858, 37.0793, 0.88 ) }
    dend_12 { pt3dadd( -20.7292, 35.198, 37.0898, 0.88 ) }
    dend_12 { pt3dadd( -22.0628, 35.486, 37.325, 0.88 ) }
    dend_12 { pt3dadd( -23.0612, 35.7391, 37.5514, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_12 { pt3dadd( -23.3843, 35.8496, 37.6851, 0.88 ) }
    dend_12 { pt3dadd( -24.8363, 36.46, 38.5254, 0.88 ) }
    dend_12 { pt3dadd( -24.9283, 36.5128, 38.6006, 0.88 ) }
    dend_12 { pt3dadd( -25.8672, 37.2017, 39.537, 0.81 ) }
    dend_12 { pt3dadd( -26.1139, 37.4227, 39.8266, 0.81 ) }
    dend_12 { pt3dadd( -27.3328, 38.7499, 41.5523, 0.81 ) }
    dend_12 { pt3dadd( -27.4168, 38.8607, 41.7022, 0.81 ) }
    dend_12 { pt3dadd( -27.8039, 39.6094, 42.7747, 0.81 ) }
    dend_12 { pt3dadd( -27.8708, 39.7647, 43.0031, 0.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 9/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -17.5633, 24.5847, 31.2747, 1.55 ) }
    dend_3 { pt3dadd( -19.7419, 25.3794, 32.4488, 1.55 ) }
    dend_3 { pt3dadd( -19.874, 25.4414, 32.4835, 1.55 ) }
    dend_3 { pt3dadd( -21.6049, 26.4023, 32.6137, 1.47 ) }
    dend_3 { pt3dadd( -21.8277, 26.5522, 32.5992, 1.47 ) }
    dend_3 { pt3dadd( -23.5483, 27.8199, 32.3734, 1.47 ) }
    dend_3 { pt3dadd( -23.6186, 27.8776, 32.3584, 1.47 ) }
    dend_3 { pt3dadd( -24.1405, 28.4077, 32.0831, 1.47 ) }
    dend_3 { pt3dadd( -24.3377, 28.6181, 31.9664, 1.47 ) }
    dend_3 { pt3dadd( -25.0518, 29.3067, 31.5975, 1.47 ) }
    dend_3 { pt3dadd( -25.141, 29.3841, 31.5667, 1.47 ) }
    dend_3 { pt3dadd( -26.2303, 30.1191, 31.4073, 1.33 ) }
    dend_3 { pt3dadd( -27.8228, 31.0304, 31.2611, 1.33 ) }
    dend_3 { pt3dadd( -28.1131, 31.159, 31.2484, 1.33 ) }
    dend_3 { pt3dadd( -30.1375, 31.8953, 31.2247, 1.33 ) }
    dend_3 { pt3dadd( -30.3795, 31.9581, 31.2239, 1.33 ) }
    dend_3 { pt3dadd( -32.7211, 32.4091, 31.2395, 1.33 ) }
    dend_3 { pt3dadd( -32.9261, 32.4297, 31.2448, 1.33 ) }
    dend_3 { pt3dadd( -34.6148, 32.4748, 31.2955, 1.33 ) }
    dend_3 { pt3dadd( -34.6847, 32.4736, 31.2995, 1.33 ) }
    dend_3 { pt3dadd( -36.49, 32.3212, 31.4068, 1.33 ) }
    dend_3 { pt3dadd( -36.5493, 32.3132, 31.4107, 1.33 ) }
    dend_3 { pt3dadd( -37.0656, 32.2159, 31.4521, 1.25 ) }
    dend_3 { pt3dadd( -37.789, 32.0739, 31.5169, 1.25 ) }
    dend_3 { pt3dadd( -39.4421, 31.7275, 31.7024, 1.03 ) }
    dend_3 { pt3dadd( -40.972, 31.444, 31.8881, 1.03 ) }
    dend_3 { pt3dadd( -42.0951, 31.2564, 32.0448, 1.03 ) }
    dend_3 { pt3dadd( -42.3213, 31.2427, 32.0838, 1.03 ) }
    dend_3 { pt3dadd( -43.8372, 31.2836, 32.3781, 1.03 ) }
    dend_3 { pt3dadd( -43.8952, 31.2927, 32.3903, 1.03 ) }
    dend_3 { pt3dadd( -45.0338, 31.6395, 32.6347, 1.03 ) }
    dend_3 { pt3dadd( -45.1646, 31.704, 32.67, 1.03 ) }
    dend_3 { pt3dadd( -47.4716, 33.2227, 33.3826, 1.03 ) }
    dend_3 { pt3dadd( -47.5489, 33.2797, 33.4068, 1.03 ) }
    dend_3 { pt3dadd( -48.5868, 34.1203, 33.6912, 1.03 ) }
    dend_3 { pt3dadd( -48.7131, 34.2234, 33.72, 1.03 ) }
    dend_3 { pt3dadd( -49.6603, 34.9717, 33.8724, 1.03 ) }
    dend_3 { pt3dadd( -50.0152, 35.2303, 33.8999, 1.03 ) }
    dend_3 { pt3dadd( -51.2176, 35.9416, 33.6615, 1.03 ) }
    dend_3 { pt3dadd( -52.2434, 36.4516, 33.3389, 1.03 ) }
    dend_3 { pt3dadd( -52.4258, 36.5141, 33.266, 1.03 ) }
    dend_3 { pt3dadd( -53.6357, 36.8145, 32.7306, 1.03 ) }
    dend_3 { pt3dadd( -53.7081, 36.8241, 32.6978, 1.03 ) }
    dend_3 { pt3dadd( -56.0012, 36.9968, 31.64, 1.03 ) }
    dend_3 { pt3dadd( -56.1304, 37.0026, 31.5893, 1.03 ) }
    dend_3 { pt3dadd( -57.2655, 37.0466, 31.3222, 1.03 ) }
    dend_3 { pt3dadd( -57.3448, 37.0504, 31.3127, 1.03 ) }
    dend_3 { pt3dadd( -58.7384, 37.1201, 31.4262, 1.03 ) }
    dend_3 { pt3dadd( -58.8063, 37.1252, 31.4426, 1.03 ) }
    dend_3 { pt3dadd( -60.3735, 37.3272, 31.9339, 1.03 ) }
    dend_3 { pt3dadd( -61.3414, 37.5048, 32.1935, 1.03 ) }
    dend_3 { pt3dadd( -61.3985, 37.5198, 32.2038, 1.03 ) }
    dend_3 { pt3dadd( -62.7291, 37.9204, 32.3045, 1.03 ) }
    dend_3 { pt3dadd( -63.0234, 38.0333, 32.2565, 1.03 ) }
    dend_3 { pt3dadd( -64.5754, 38.7164, 31.6262, 1.03 ) }
    dend_3 { pt3dadd( -64.6501, 38.753, 31.5725, 1.03 ) }
    dend_3 { pt3dadd( -65.2649, 39.0908, 31.0577, 1.03 ) }
    dend_3 { pt3dadd( -65.3744, 39.1563, 30.9586, 1.03 ) }
    dend_3 { pt3dadd( -66.3659, 39.8061, 30.0617, 1.03 ) }
    dend_3 { pt3dadd( -66.8874, 40.1449, 29.6741, 1.03 ) }
    dend_3 { pt3dadd( -67.8577, 40.7722, 29.1319, 1.03 ) }
    dend_3 { pt3dadd( -68.6778, 41.2351, 28.8378, 1.03 ) }
    dend_3 { pt3dadd( -68.8453, 41.3194, 28.8071, 1.03 ) }
    dend_3 { pt3dadd( -69.9816, 41.8171, 28.8024, 1.03 ) }
    dend_3 { pt3dadd( -70.6846, 42.0794, 28.924, 1.03 ) }
    dend_3 { pt3dadd( -70.7483, 42.1021, 28.9422, 1.03 ) }
    dend_3 { pt3dadd( -72.4659, 42.6957, 29.5772, 1.03 ) }
    dend_3 { pt3dadd( -72.5466, 42.7252, 29.6104, 1.03 ) }
    dend_3 { pt3dadd( -73.6323, 43.1605, 30.089, 1.03 ) }
    dend_3 { pt3dadd( -73.7356, 43.2091, 30.1511, 1.03 ) }
    dend_3 { pt3dadd( -74.7197, 43.7284, 30.9427, 1.03 ) }
    dend_3 { pt3dadd( -74.8014, 43.7782, 31.015, 1.03 ) }
    dend_3 { pt3dadd( -75.9039, 44.5589, 32.1199, 1.03 ) }
    dend_3 { pt3dadd( -76.1029, 44.6977, 32.2961, 1.03 ) }
    dend_3 { pt3dadd( -77.9575, 45.9775, 33.7982, 1.03 ) }
    dend_3 { pt3dadd( -78.3661, 46.2525, 34.0765, 1.03 ) }
    dend_3 { pt3dadd( -79.4267, 46.9566, 34.6299, 1.03 ) }
    dend_3 { pt3dadd( -79.4754, 46.9883, 34.6452, 1.03 ) }
    dend_3 { pt3dadd( -81.0969, 48.0101, 34.8789, 1.03 ) }
    dend_3 { pt3dadd( -81.2242, 48.0888, 34.8888, 1.03 ) }
    dend_3 { pt3dadd( -82.0719, 48.6031, 34.8754, 1.03 ) }
    dend_3 { pt3dadd( -83.1396, 49.2103, 34.6919, 1.03 ) }
    dend_3 { pt3dadd( -84.0652, 49.7043, 34.447, 1.03 ) }
    dend_3 { pt3dadd( -84.654, 49.9995, 34.2265, 1.03 ) }
    dend_3 { pt3dadd( -85.9314, 50.5969, 33.5764, 1.03 ) }
    dend_3 { pt3dadd( -86.0175, 50.6338, 33.5261, 1.03 ) }
    dend_3 { pt3dadd( -89.0637, 51.7206, 31.6155, 1.03 ) }
    dend_3 { pt3dadd( -89.1692, 51.7531, 31.5468, 1.03 ) }
    dend_3 { pt3dadd( -89.9574, 51.9648, 31.0921, 1.03 ) }
    dend_3 { pt3dadd( -90.0431, 51.9846, 31.0466, 1.03 ) }
    dend_3 { pt3dadd( -90.8903, 52.0831, 30.7336, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_3 { pt3dadd( -92.08, 52.0909, 30.7419, 1.03 ) }
    dend_3 { pt3dadd( -92.3665, 52.06, 30.8563, 1.03 ) }
    dend_3 { pt3dadd( -93.5963, 51.8636, 31.4236, 1.03 ) }
    dend_3 { pt3dadd( -93.9219, 51.8033, 31.5862, 1.03 ) }
    dend_3 { pt3dadd( -95.1425, 51.5656, 32.2118, 1.03 ) }
    dend_3 { pt3dadd( -95.2444, 51.5463, 32.2722, 1.03 ) }
    dend_3 { pt3dadd( -95.979, 51.4354, 32.7196, 1.03 ) }
    dend_3 { pt3dadd( -96.1911, 51.4178, 32.8314, 1.03 ) }
    dend_3 { pt3dadd( -97.5695, 51.4075, 33.4681, 1.03 ) }
    dend_3 { pt3dadd( -97.6986, 51.4143, 33.5191, 1.03 ) }
    dend_3 { pt3dadd( -99.0772, 51.555, 34.0072, 1.03 ) }
    dend_3 { pt3dadd( -99.4969, 51.5984, 34.1501, 1.03 ) }
    dend_3 { pt3dadd( -100.68, 51.7235, 34.5351, 1.03 ) }
    dend_3 { pt3dadd( -100.941, 51.75, 34.615, 1.03 ) }
    dend_3 { pt3dadd( -102.785, 51.9124, 35.0943, 1.03 ) }
    dend_3 { pt3dadd( -102.854, 51.9179, 35.1069, 1.03 ) }
    // Section: dend_91, id: dend_91, parent: dend_73 (entry count 16/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 9.6131, -47.3243, 16.3661, 0.66 ) }
    dend_91 { pt3dadd( 9.06663, -48.5804, 16.5721, 0.66 ) }
    dend_91 { pt3dadd( 8.81368, -49.3131, 16.718, 0.66 ) }
    dend_91 { pt3dadd( 8.51981, -50.2353, 16.9132, 0.52 ) }
    dend_91 { pt3dadd( 8.29559, -50.9129, 17.0929, 0.37 ) }
    dend_91 { pt3dadd( 7.87958, -52.0177, 17.428, 0.37 ) }
    dend_91 { pt3dadd( 7.43192, -53.0719, 17.7797, 0.37 ) }
    dend_91 { pt3dadd( 6.8826, -54.1087, 18.2372, 0.37 ) }
    dend_91 { pt3dadd( 6.8429, -54.1697, 18.2705, 0.37 ) }
    dend_91 { pt3dadd( 6.21128, -54.6672, 18.6307, 0.22 ) }
    dend_91 { pt3dadd( 5.48312, -54.9427, 18.9671, 0.22 ) }
    dend_91 { pt3dadd( 5.19105, -55.0211, 19.0778, 0.66 ) }
    dend_91 { pt3dadd( 4.12515, -55.2386, 19.3893, 0.66 ) }
    dend_91 { pt3dadd( 4.05884, -55.2486, 19.4094, 0.66 ) }
    dend_91 { pt3dadd( 2.80552, -55.3926, 19.7799, 0.66 ) }
    dend_91 { pt3dadd( 1.41105, -55.493, 20.316, 0.52 ) }
    dend_91 { pt3dadd( 0.503587, -55.5164, 20.7405, 0.52 ) }
    dend_91 { pt3dadd( -0.617607, -55.4798, 21.3342, 0.52 ) }
    dend_91 { pt3dadd( -1.60452, -55.4065, 21.9867, 0.66 ) }
    dend_91 { pt3dadd( -2.39207, -55.3167, 22.5865, 0.66 ) }
    dend_91 { pt3dadd( -4.00321, -55.0644, 24.0141, 0.52 ) }
    dend_91 { pt3dadd( -4.53702, -55.0024, 24.5276, 0.52 ) }
    dend_91 { pt3dadd( -4.58421, -55.0015, 24.5793, 0.52 ) }
    dend_91 { pt3dadd( -5.58991, -55.218, 25.7563, 0.52 ) }
    dend_91 { pt3dadd( -5.65225, -55.2453, 25.8185, 0.52 ) }
    dend_91 { pt3dadd( -6.21397, -55.5103, 26.3022, 0.52 ) }
    dend_91 { pt3dadd( -6.9914, -55.8652, 26.9507, 0.37 ) }
    dend_91 { pt3dadd( -7.4326, -56.0409, 27.3642, 0.29 ) }
    dend_91 { pt3dadd( -7.85734, -56.2236, 27.7601, 0.44 ) }
    dend_91 { pt3dadd( -8.38804, -56.4436, 28.2451, 0.44 ) }
    dend_91 { pt3dadd( -9.71572, -57.1079, 29.6328, 0.44 ) }
    dend_91 { pt3dadd( -10.8277, -57.7289, 30.9522, 0.44 ) }
    dend_91 { pt3dadd( -10.8628, -57.7494, 30.9963, 0.44 ) }
    dend_91 { pt3dadd( -11.666, -58.324, 32.0705, 0.44 ) }
    dend_91 { pt3dadd( -11.7091, -58.3625, 32.1259, 0.44 ) }
    dend_91 { pt3dadd( -12.4577, -59.1761, 33.0005, 0.22 ) }
    dend_91 { pt3dadd( -12.5105, -59.2522, 33.0527, 0.22 ) }
    dend_91 { pt3dadd( -12.9489, -59.8664, 33.3918, 0.22 ) }
    dend_91 { pt3dadd( -12.987, -59.9172, 33.4214, 0.22 ) }
    dend_91 { pt3dadd( -13.7746, -60.8363, 34.0546, 0.22 ) }
    dend_91 { pt3dadd( -13.8145, -60.8854, 34.0846, 0.22 ) }
    dend_91 { pt3dadd( -14.7135, -62.2401, 34.6634, 0.22 ) }
    dend_91 { pt3dadd( -22.2696, -65.5752, 40.301, 0.22 ) }
    dend_91 { pt3dadd( -30.1043, -70.0061, 44.658, 0.22 ) }
    dend_91 { pt3dadd( -37.5649, -73.6617, 50.2236, 0.22 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 61/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 9.6131, -47.3243, 16.3661, 1.4 ) }
    dend_74 { pt3dadd( 10.5749, -47.7604, 16.3661, 1.4 ) }
    dend_74 { pt3dadd( 11.9512, -48.3946, 16.3661, 1.4 ) }
    dend_74 { pt3dadd( 13.2841, -49.0087, 16.3661, 1.03 ) }
    dend_74 { pt3dadd( 13.4203, -49.0714, 16.3661, 1.03 ) }
    dend_74 { pt3dadd( 15.0947, -49.8429, 16.3661, 1.03 ) }
    dend_74 { pt3dadd( 16.9874, -50.715, 16.3661, 1.03 ) }
    dend_74 { pt3dadd( 17.0835, -50.7606, 16.3661, 1.03 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 69/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.7179, -304.243, 30.1924, 0.44 ) }
    dend_66 { pt3dadd( -11.0176, -305.071, 30.1052, 0.44 ) }
    dend_66 { pt3dadd( -11.4853, -306.365, 29.9691, 0.44 ) }
    dend_66 { pt3dadd( -11.7306, -307.043, 29.8978, 0.44 ) }
    dend_66 { pt3dadd( -11.999, -307.786, 29.8197, 0.88 ) }
    dend_66 { pt3dadd( -12.3034, -308.628, 29.7312, 0.74 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 75/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -10.7179, -304.243, 30.1924, 0.52 ) }
    dend_65 { pt3dadd( -9.85164, -304.286, 30.3565, 0.52 ) }
    dend_65 { pt3dadd( -8.60464, -304.352, 30.4813, 0.52 ) }
    dend_65 { pt3dadd( -8.53511, -304.355, 30.4882, 0.52 ) }
    dend_65 { pt3dadd( -6.94323, -304.439, 30.6475, 0.37 ) }
    dend_65 { pt3dadd( -5.54524, -304.513, 30.7873, 0.37 ) }
    dend_65 { pt3dadd( -5.48562, -304.516, 30.7933, 0.37 ) }
    dend_65 { pt3dadd( -4.07984, -304.632, 30.8816, 0.37 ) }
    dend_65 { pt3dadd( 5.90468, -304.313, 30.4255, 0.37 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 160.134, -166.808, -89.6351, 0.88 ) }
    dend_58 { pt3dadd( 161.018, -167.03, -89.7846, 0.88 ) }
    dend_58 { pt3dadd( 162.071, -167.294, -89.9625, 0.88 ) }
    dend_58 { pt3dadd( 162.282, -167.347, -89.9981, 0.88 ) }
    dend_58 { pt3dadd( 162.712, -167.455, -90.0709, 0.96 ) }
    dend_58 { pt3dadd( 163.608, -167.68, -90.2223, 0.22 ) }
    dend_58 { pt3dadd( 165.004, -168.031, -90.4583, 0.22 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 91/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 160.134, -166.808, -89.6351, 0.44 ) }
    dend_57 { pt3dadd( 160.588, -167.989, -89.7771, 0.44 ) }
    dend_57 { pt3dadd( 161.162, -169.481, -89.9566, 0.29 ) }
    dend_57 { pt3dadd( 161.916, -171.441, -90.1923, 0.15 ) }
    dend_57 { pt3dadd( 162.304, -172.449, -90.3135, 0.15 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 96/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -52.6606, -144.73, -45.3373, 0.88 ) }
    dend_45 { pt3dadd( -53.7947, -146.027, -45.3549, 0.88 ) }
    dend_45 { pt3dadd( -54.5735, -146.877, -45.3178, 0.59 ) }
    dend_45 { pt3dadd( -54.6284, -146.935, -45.3149, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_45 { pt3dadd( -55.4003, -147.767, -45.2736, 0.59 ) }
    dend_45 { pt3dadd( -56.5812, -149.07, -45.2569, 0.81 ) }
    dend_45 { pt3dadd( -57.068, -149.614, -45.263, 0.29 ) }
    dend_45 { pt3dadd( -57.9131, -150.494, -45.266, 0.29 ) }
    dend_45 { pt3dadd( -58.3949, -150.98, -45.3125, 0.88 ) }
    dend_45 { pt3dadd( -58.8348, -151.426, -45.3757, 1.03 ) }
    dend_45 { pt3dadd( -59.2436, -151.86, -45.456, 1.18 ) }
    dend_45 { pt3dadd( -59.6579, -152.3, -45.5707, 1.18 ) }
    dend_45 { pt3dadd( -60.6657, -153.256, -45.8556, 0.66 ) }
    dend_45 { pt3dadd( -61.3595, -153.862, -46.0446, 0.66 ) }
    dend_45 { pt3dadd( -62.3095, -154.66, -46.2776, 0.66 ) }
    dend_45 { pt3dadd( -62.9866, -155.227, -46.4267, 1.33 ) }
    dend_45 { pt3dadd( -63.7891, -155.903, -46.5816, 0.44 ) }
    dend_45 { pt3dadd( -65.2287, -157.171, -46.8529, 0.44 ) }
    dend_45 { pt3dadd( -66.3293, -158.222, -47.0484, 0.66 ) }
    dend_45 { pt3dadd( -67.0662, -159.006, -47.2236, 1.11 ) }
    dend_45 { pt3dadd( -67.6226, -159.625, -47.4029, 1.11 ) }
    dend_45 { pt3dadd( -67.6733, -159.683, -47.4238, 1.11 ) }
    dend_45 { pt3dadd( -68.169, -160.284, -47.667, 1.33 ) }
    dend_45 { pt3dadd( -68.5763, -160.773, -47.9483, 1.33 ) }
    dend_45 { pt3dadd( -69.3263, -161.598, -48.474, 1.33 ) }
    dend_45 { pt3dadd( -70.2399, -162.539, -49.0338, 0.44 ) }
    dend_45 { pt3dadd( -70.6324, -162.933, -49.2373, 1.03 ) }
    dend_45 { pt3dadd( -71.3642, -163.722, -49.5463, 1.03 ) }
    dend_45 { pt3dadd( -72.0812, -164.519, -49.7772, 1.33 ) }
    dend_45 { pt3dadd( -73.2179, -165.936, -50.0372, 1.33 ) }
    dend_45 { pt3dadd( -73.8498, -166.846, -50.1127, 1.33 ) }
    dend_45 { pt3dadd( -74.2589, -167.592, -50.1299, 1.33 ) }
    dend_45 { pt3dadd( -74.9532, -169.038, -50.1183, 1.33 ) }
    dend_45 { pt3dadd( -75.2443, -169.757, -50.1171, 1.11 ) }
    dend_45 { pt3dadd( -75.6465, -170.858, -50.1104, 0.88 ) }
    dend_45 { pt3dadd( -75.6701, -170.924, -50.1129, 0.88 ) }
    dend_45 { pt3dadd( -76.3114, -172.662, -50.3402, 0.88 ) }
    dend_45 { pt3dadd( -76.341, -172.725, -50.3534, 0.88 ) }
    dend_45 { pt3dadd( -76.9316, -173.647, -50.766, 0.37 ) }
    dend_45 { pt3dadd( -77.0162, -173.748, -50.8377, 0.37 ) }
    dend_45 { pt3dadd( -77.5603, -174.279, -51.3322, 0.37 ) }
    dend_45 { pt3dadd( -78.1276, -174.804, -51.8556, 0.74 ) }
    dend_45 { pt3dadd( -78.911, -175.495, -52.5551, 0.74 ) }
    dend_45 { pt3dadd( -80.1446, -176.696, -53.6662, 0.88 ) }
    dend_45 { pt3dadd( -80.7537, -177.365, -54.211, 1.25 ) }
    dend_45 { pt3dadd( -81.4573, -178.345, -54.8727, 1.25 ) }
    dend_45 { pt3dadd( -81.7954, -179.005, -55.2182, 1.62 ) }
    dend_45 { pt3dadd( -82.1987, -180.064, -55.6259, 1.62 ) }
    dend_45 { pt3dadd( -82.4968, -181.237, -55.9672, 0.59 ) }
    dend_45 { pt3dadd( -82.6773, -182.252, -56.1303, 0.59 ) }
    dend_45 { pt3dadd( -82.8859, -183.832, -56.2814, 0.59 ) }
    dend_45 { pt3dadd( -83.0494, -185.382, -56.3437, 0.59 ) }
    dend_45 { pt3dadd( -83.1145, -186.104, -56.3479, 1.03 ) }
    dend_45 { pt3dadd( -83.224, -187.321, -56.3113, 1.18 ) }
    dend_45 { pt3dadd( -83.3594, -188.522, -56.2564, 1.55 ) }
    dend_45 { pt3dadd( -83.478, -189.394, -56.2236, 1.55 ) }
    dend_45 { pt3dadd( -83.6755, -190.538, -56.3041, 1.25 ) }
    dend_45 { pt3dadd( -83.905, -191.752, -56.4158, 1.03 ) }
    dend_45 { pt3dadd( -84.2218, -193.51, -56.6241, 0.74 ) }
    dend_45 { pt3dadd( -84.4139, -194.592, -56.8013, 0.96 ) }
    dend_45 { pt3dadd( -84.4261, -194.668, -56.822, 0.96 ) }
    dend_45 { pt3dadd( -84.8149, -197.426, -57.8432, 1.69 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 58/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -52.6606, -144.73, -45.3373, 0.44 ) }
    dend_44 { pt3dadd( -53.6231, -145.103, -45.7788, 0.44 ) }
    dend_44 { pt3dadd( -53.6833, -145.124, -45.8075, 0.44 ) }
    dend_44 { pt3dadd( -54.7106, -145.417, -46.2315, 0.44 ) }
    dend_44 { pt3dadd( -55.5124, -145.645, -46.5625, 0.22 ) }
    dend_44 { pt3dadd( -56.6377, -145.966, -47.027, 0.22 ) }
    dend_44 { pt3dadd( -57.2534, -146.141, -47.2811, 0.88 ) }
    dend_44 { pt3dadd( -57.327, -146.157, -47.3082, 0.88 ) }
    dend_44 { pt3dadd( -58.6846, -146.41, -47.8182, 0.88 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 67/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -27.8708, 39.7647, 43.0031, 0.74 ) }
    dend_14 { pt3dadd( -27.0543, 40.1952, 42.966, 0.74 ) }
    dend_14 { pt3dadd( -26.7821, 40.3458, 42.97, 0.74 ) }
    dend_14 { pt3dadd( -25.5021, 41.0869, 43.1, 0.74 ) }
    dend_14 { pt3dadd( -24.2225, 41.8452, 43.3002, 0.74 ) }
    dend_14 { pt3dadd( -24.1168, 41.9129, 43.3338, 0.74 ) }
    dend_14 { pt3dadd( -23.3398, 42.4386, 43.682, 0.74 ) }
    dend_14 { pt3dadd( -23.2081, 42.5471, 43.7976, 0.74 ) }
    dend_14 { pt3dadd( -22.6941, 43.0776, 44.5488, 0.74 ) }
    dend_14 { pt3dadd( -22.651, 43.1327, 44.6463, 0.74 ) }
    dend_14 { pt3dadd( -22.1421, 43.8522, 46.0741, 0.74 ) }
    dend_14 { pt3dadd( -22.0404, 43.9829, 46.3567, 0.74 ) }
    dend_14 { pt3dadd( -21.6062, 44.487, 47.6286, 0.74 ) }
    dend_14 { pt3dadd( -21.5573, 44.529, 47.7516, 0.74 ) }
    dend_14 { pt3dadd( -21.2173, 44.7264, 48.5001, 0.74 ) }
    dend_14 { pt3dadd( -21.0897, 44.7648, 48.6751, 0.74 ) }
    dend_14 { pt3dadd( -20.7038, 44.7899, 48.9441, 0.74 ) }
    dend_14 { pt3dadd( -20.4879, 44.794, 49.0393, 0.74 ) }
    dend_14 { pt3dadd( -19.4903, 44.7739, 49.311, 0.74 ) }
    dend_14 { pt3dadd( -19.2756, 44.7654, 49.3584, 0.74 ) }
    dend_14 { pt3dadd( -18.5714, 44.7284, 49.4867, 0.74 ) }
    dend_14 { pt3dadd( -18.4572, 44.7187, 49.5029, 0.74 ) }
    dend_14 { pt3dadd( -17.8739, 44.65, 49.5593, 0.74 ) }
    dend_14 { pt3dadd( -17.7112, 44.6218, 49.5703, 0.74 ) }
    dend_14 { pt3dadd( -16.8793, 44.4061, 49.6115, 0.59 ) }
    dend_14 { pt3dadd( -16.7184, 44.3677, 49.6164, 0.59 ) }
    dend_14 { pt3dadd( -16.0504, 44.2896, 49.6538, 0.59 ) }
    dend_14 { pt3dadd( -15.7334, 44.2901, 49.6826, 0.59 ) }
    dend_14 { pt3dadd( -15.5206, 44.3359, 49.7142, 0.59 ) }
    dend_14 { pt3dadd( -15.2504, 44.4295, 49.7627, 0.59 ) }
    dend_14 { pt3dadd( -14.4456, 44.7881, 49.9269, 0.59 ) }
    dend_14 { pt3dadd( -13.2793, 45.3504, 50.1788, 0.59 ) }
    dend_14 { pt3dadd( -13.2267, 45.3788, 50.1842, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_14 { pt3dadd( -12.0473, 46.0396, 50.1888, 0.59 ) }
    dend_14 { pt3dadd( -11.929, 46.1132, 50.1754, 0.59 ) }
    dend_14 { pt3dadd( -10.9801, 46.7556, 49.963, 0.59 ) }
    dend_14 { pt3dadd( -10.8575, 46.8519, 49.9207, 0.59 ) }
    dend_14 { pt3dadd( -9.41, 48.1968, 49.2447, 0.59 ) }
    dend_14 { pt3dadd( -9.10233, 48.4935, 49.119, 0.59 ) }
    dend_14 { pt3dadd( -8.35183, 49.2731, 48.8266, 0.59 ) }
    dend_14 { pt3dadd( -8.25392, 49.3838, 48.8008, 0.59 ) }
    dend_14 { pt3dadd( -7.5276, 50.3057, 48.7269, 0.59 ) }
    dend_14 { pt3dadd( -7.37644, 50.502, 48.7603, 0.59 ) }
    dend_14 { pt3dadd( -6.58087, 51.6099, 49.4897, 0.59 ) }
    dend_14 { pt3dadd( -6.50624, 51.7122, 49.5817, 0.59 ) }
    dend_14 { pt3dadd( -6.19158, 52.0758, 50.0946, 0.59 ) }
    dend_14 { pt3dadd( -6.16696, 52.1026, 50.1423, 0.59 ) }
    dend_14 { pt3dadd( -5.99476, 52.2675, 50.5842, 0.59 ) }
    dend_14 { pt3dadd( -5.64367, 52.6116, 51.6957, 0.59 ) }
    dend_14 { pt3dadd( -5.62671, 52.6268, 51.7618, 0.59 ) }
    dend_14 { pt3dadd( -5.25767, 52.8553, 53.199, 0.59 ) }
    dend_14 { pt3dadd( -5.19425, 52.869, 53.4405, 0.59 ) }
    dend_14 { pt3dadd( -4.87681, 52.8692, 54.6068, 0.44 ) }
    dend_14 { pt3dadd( -4.78826, 52.845, 54.911, 0.44 ) }
    dend_14 { pt3dadd( -4.52461, 52.739, 55.6874, 0.44 ) }
    dend_14 { pt3dadd( -4.43738, 52.7059, 55.9194, 0.44 ) }
    dend_14 { pt3dadd( -4.05826, 52.5591, 56.8324, 0.44 ) }
    dend_14 { pt3dadd( -4.03129, 52.5513, 56.8854, 0.44 ) }
    dend_14 { pt3dadd( -3.67484, 52.4788, 57.4556, 0.44 ) }
    dend_14 { pt3dadd( -3.46586, 52.4497, 57.7426, 0.44 ) }
    dend_14 { pt3dadd( -3.04323, 52.443, 58.1812, 0.44 ) }
    dend_14 { pt3dadd( -2.90641, 52.488, 58.2317, 0.44 ) }
    dend_14 { pt3dadd( -2.49651, 52.7421, 58.2108, 0.44 ) }
    dend_14 { pt3dadd( -2.34355, 52.8541, 58.2234, 0.44 ) }
    dend_14 { pt3dadd( -0.69589, 54.2707, 58.4168, 0.44 ) }
    dend_14 { pt3dadd( -0.558837, 54.3809, 58.4553, 0.44 ) }
    dend_14 { pt3dadd( 0.123213, 54.8898, 58.7815, 0.44 ) }
    dend_14 { pt3dadd( 0.307771, 54.9966, 58.9452, 0.44 ) }
    dend_14 { pt3dadd( 1.01335, 55.3166, 59.8057, 0.44 ) }
    dend_14 { pt3dadd( 1.05253, 55.3293, 59.8623, 0.44 ) }
    dend_14 { pt3dadd( 1.39134, 55.4054, 60.4176, 0.44 ) }
    dend_14 { pt3dadd( 1.49735, 55.4294, 60.5884, 0.44 ) }
    dend_14 { pt3dadd( 2.09066, 55.5597, 61.5352, 0.44 ) }
    dend_14 { pt3dadd( 2.18062, 55.611, 61.6945, 0.44 ) }
    dend_14 { pt3dadd( 2.42102, 55.9383, 62.2289, 0.44 ) }
    dend_14 { pt3dadd( 2.4665, 56.0226, 62.3412, 0.44 ) }
    dend_14 { pt3dadd( 2.63481, 56.5624, 62.8723, 0.44 ) }
    dend_14 { pt3dadd( 2.68182, 56.8031, 63.0383, 0.44 ) }
    dend_14 { pt3dadd( 2.77529, 58.0325, 63.5236, 0.44 ) }
    dend_14 { pt3dadd( 2.78196, 58.2566, 63.5911, 0.44 ) }
    dend_14 { pt3dadd( 10.0704, 63.8998, 67.4683, 0.44 ) }
    dend_14 { pt3dadd( 16.7967, 70.6574, 70.4834, 0.44 ) }
    dend_14 { pt3dadd( 22.7755, 77.9503, 73.8103, 0.44 ) }
    dend_14 { pt3dadd( 29.2427, 85.2493, 76.0241, 0.44 ) }
    dend_14 { pt3dadd( 34.0568, 93.1985, 79.7165, 0.44 ) }
    dend_14 { pt3dadd( 39.3329, 101.062, 82.9317, 0.44 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 53/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -27.8708, 39.7647, 43.0031, 0.81 ) }
    dend_13 { pt3dadd( -28.8953, 40.3333, 44.8153, 0.81 ) }
    dend_13 { pt3dadd( -29.6765, 40.7516, 46.2396, 0.81 ) }
    dend_13 { pt3dadd( -29.9151, 40.8329, 46.6556, 0.81 ) }
    dend_13 { pt3dadd( -30.1566, 40.888, 47.0671, 0.81 ) }
    dend_13 { pt3dadd( -30.202, 40.8932, 47.1328, 0.81 ) }
    dend_13 { pt3dadd( -31.4068, 40.9566, 48.7137, 0.81 ) }
    dend_13 { pt3dadd( -31.4468, 40.951, 48.7581, 0.81 ) }
    dend_13 { pt3dadd( -32.3511, 40.8435, 49.7192, 0.81 ) }
    dend_13 { pt3dadd( -32.3909, 40.8403, 49.7639, 0.81 ) }
    dend_13 { pt3dadd( -33.3533, 40.8396, 50.8774, 0.81 ) }
    dend_13 { pt3dadd( -33.4795, 40.8513, 51.0282, 0.81 ) }
    dend_13 { pt3dadd( -34.8025, 41.1868, 52.5194, 0.81 ) }
    dend_13 { pt3dadd( -35.5992, 41.4908, 53.4311, 0.81 ) }
    dend_13 { pt3dadd( -35.96, 41.6915, 53.8242, 0.81 ) }
    dend_13 { pt3dadd( -36.5261, 42.0556, 54.4271, 0.81 ) }
    dend_13 { pt3dadd( -36.7463, 42.2488, 54.6944, 0.81 ) }
    dend_13 { pt3dadd( -37.5235, 43.0623, 55.6323, 0.81 ) }
    dend_13 { pt3dadd( -37.6254, 43.2089, 55.7617, 0.81 ) }
    dend_13 { pt3dadd( -38.2086, 44.2924, 56.6655, 0.81 ) }
    dend_13 { pt3dadd( -38.2455, 44.4922, 56.8794, 0.81 ) }
    dend_13 { pt3dadd( -38.0987, 45.3792, 58.1624, 0.81 ) }
    dend_13 { pt3dadd( -38.0599, 45.4575, 58.3311, 0.81 ) }
    dend_13 { pt3dadd( -37.8336, 45.6717, 59.1144, 0.81 ) }
    dend_13 { pt3dadd( -37.8073, 45.6846, 59.2018, 0.81 ) }
    dend_13 { pt3dadd( -36.827, 45.7398, 61.6454, 0.81 ) }
    dend_13 { pt3dadd( -36.6131, 45.7041, 62.1617, 0.81 ) }
    dend_13 { pt3dadd( -36.058, 45.4851, 62.9793, 0.81 ) }
    dend_13 { pt3dadd( -35.5808, 45.2917, 63.3912, 0.81 ) }
    dend_13 { pt3dadd( -35.3243, 45.1932, 63.5324, 0.81 ) }
    dend_13 { pt3dadd( -33.8204, 44.6649, 64.1305, 0.81 ) }
    dend_13 { pt3dadd( -33.7127, 44.6321, 64.1574, 0.81 ) }
    dend_13 { pt3dadd( -30.9396, 43.9356, 64.7237, 0.81 ) }
    dend_13 { pt3dadd( -30.8713, 43.9244, 64.7343, 0.81 ) }
    dend_13 { pt3dadd( -29.3567, 43.7627, 64.9359, 0.81 ) }
    dend_13 { pt3dadd( -29.2101, 43.7583, 64.9528, 0.81 ) }
    dend_13 { pt3dadd( -28.1012, 43.83, 65.0612, 0.81 ) }
    dend_13 { pt3dadd( -27.6097, 43.941, 65.0918, 0.81 ) }
    dend_13 { pt3dadd( -26.4064, 44.5768, 65.0804, 0.81 ) }
    dend_13 { pt3dadd( -26.1759, 44.749, 65.0446, 0.81 ) }
    dend_13 { pt3dadd( -25.3905, 45.5638, 64.7788, 0.52 ) }
    dend_13 { pt3dadd( -25.3483, 45.617, 64.7615, 0.52 ) }
    dend_13 { pt3dadd( -24.9265, 46.3119, 64.5526, 0.52 ) }
    dend_13 { pt3dadd( -24.8519, 46.4506, 64.5166, 0.52 ) }
    dend_13 { pt3dadd( -24.342, 47.6814, 64.192, 0.52 ) }
    dend_13 { pt3dadd( -24.2294, 47.958, 64.1072, 0.52 ) }
    dend_13 { pt3dadd( -24.2074, 48.02, 64.0832, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_13 { pt3dadd( -24.1141, 48.281, 63.973, 0.52 ) }
    dend_13 { pt3dadd( -23.0955, 52.1861, 73.1224, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 2/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -102.854, 51.9179, 35.1069, 0.88 ) }
    dend_7 { pt3dadd( -104.212, 52.8388, 34.9716, 0.88 ) }
    dend_7 { pt3dadd( -105.137, 53.4446, 34.8667, 0.88 ) }
    dend_7 { pt3dadd( -105.326, 53.5691, 34.8432, 0.88 ) }
    dend_7 { pt3dadd( -106.809, 54.5444, 34.6556, 0.88 ) }
    dend_7 { pt3dadd( -106.858, 54.578, 34.6487, 0.88 ) }
    dend_7 { pt3dadd( -108.138, 55.4683, 34.4559, 0.88 ) }
    dend_7 { pt3dadd( -108.205, 55.5115, 34.4443, 0.88 ) }
    dend_7 { pt3dadd( -108.521, 55.7161, 34.4037, 1.03 ) }
    dend_7 { pt3dadd( -108.96, 56.0078, 34.4091, 1.03 ) }
    dend_7 { pt3dadd( -109.883, 56.6126, 34.5855, 1.03 ) }
    dend_7 { pt3dadd( -109.934, 56.642, 34.5991, 1.03 ) }
    dend_7 { pt3dadd( -111.037, 57.1523, 35.1167, 1.03 ) }
    dend_7 { pt3dadd( -111.144, 57.1948, 35.1785, 1.03 ) }
    dend_7 { pt3dadd( -112.247, 57.6282, 35.8839, 0.96 ) }
    dend_7 { pt3dadd( -112.713, 57.806, 36.2048, 0.96 ) }
    dend_7 { pt3dadd( -112.776, 57.8286, 36.2481, 0.96 ) }
    dend_7 { pt3dadd( -114.136, 58.3317, 37.1107, 0.96 ) }
    dend_7 { pt3dadd( -114.245, 58.3781, 37.1639, 0.96 ) }
    dend_7 { pt3dadd( -115.727, 59.1049, 37.6587, 0.96 ) }
    dend_7 { pt3dadd( -115.785, 59.1426, 37.664, 0.96 ) }
    dend_7 { pt3dadd( -116.511, 59.6788, 37.6327, 0.96 ) }
    dend_7 { pt3dadd( -116.711, 59.8421, 37.6007, 0.96 ) }
    dend_7 { pt3dadd( -117.796, 60.8076, 37.2833, 0.96 ) }
    dend_7 { pt3dadd( -117.959, 60.9613, 37.2269, 0.96 ) }
    dend_7 { pt3dadd( -119.284, 62.2846, 36.6935, 0.96 ) }
    dend_7 { pt3dadd( -119.44, 62.4469, 36.629, 0.96 ) }
    dend_7 { pt3dadd( -120.049, 63.104, 36.3676, 0.96 ) }
    dend_7 { pt3dadd( -120.167, 63.217, 36.3417, 0.96 ) }
    dend_7 { pt3dadd( -121.282, 64.167, 36.3042, 0.96 ) }
    dend_7 { pt3dadd( -121.339, 64.2067, 36.3084, 0.96 ) }
    dend_7 { pt3dadd( -122.263, 64.7073, 36.461, 0.96 ) }
    dend_7 { pt3dadd( -122.573, 64.8544, 36.523, 0.96 ) }
    dend_7 { pt3dadd( -125.009, 65.8808, 37.0651, 0.96 ) }
    dend_7 { pt3dadd( -125.135, 65.9298, 37.0953, 0.96 ) }
    dend_7 { pt3dadd( -127.01, 66.5478, 37.6051, 0.96 ) }
    dend_7 { pt3dadd( -127.908, 66.8234, 37.8447, 0.96 ) }
    dend_7 { pt3dadd( -128.037, 66.8584, 37.8839, 0.96 ) }
    dend_7 { pt3dadd( -129.249, 67.1645, 38.3062, 0.96 ) }
    dend_7 { pt3dadd( -129.339, 67.1857, 38.345, 0.96 ) }
    dend_7 { pt3dadd( -130.663, 67.5084, 39.133, 0.96 ) }
    dend_7 { pt3dadd( -130.804, 67.5448, 39.2393, 0.96 ) }
    dend_7 { pt3dadd( -132.082, 67.8719, 40.1793, 0.96 ) }
    dend_7 { pt3dadd( -132.946, 68.0902, 40.7716, 0.96 ) }
    dend_7 { pt3dadd( -134.166, 68.3955, 41.583, 0.96 ) }
    dend_7 { pt3dadd( -134.542, 68.4989, 41.8039, 0.96 ) }
    dend_7 { pt3dadd( -136.028, 68.9664, 42.5247, 0.96 ) }
    dend_7 { pt3dadd( -137.418, 69.4349, 43.0443, 0.96 ) }
    dend_7 { pt3dadd( -138.177, 69.7275, 43.176, 0.96 ) }
    dend_7 { pt3dadd( -138.275, 69.768, 43.1809, 0.96 ) }
    dend_7 { pt3dadd( -139.212, 70.1633, 43.1526, 0.96 ) }
    dend_7 { pt3dadd( -140.085, 70.5508, 43.0946, 0.96 ) }
    dend_7 { pt3dadd( -140.617, 70.8219, 43.0307, 0.96 ) }
    dend_7 { pt3dadd( -142.265, 71.8093, 42.764, 0.96 ) }
    dend_7 { pt3dadd( -142.315, 71.8412, 42.7544, 0.96 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 57/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -102.854, 51.9179, 35.1069, 1.03 ) }
    dend_4 { pt3dadd( -103.767, 51.7763, 35.2798, 1.03 ) }
    dend_4 { pt3dadd( -104.051, 51.7556, 35.3367, 1.03 ) }
    dend_4 { pt3dadd( -105.649, 51.7039, 35.6615, 1.03 ) }
    dend_4 { pt3dadd( -105.851, 51.7117, 35.7015, 1.03 ) }
    dend_4 { pt3dadd( -107.197, 51.8195, 35.9619, 1.03 ) }
    dend_4 { pt3dadd( -107.255, 51.8272, 35.974, 1.03 ) }
    dend_4 { pt3dadd( -108.179, 52.0501, 36.1954, 1.03 ) }
    dend_4 { pt3dadd( -108.32, 52.0854, 36.2323, 1.03 ) }
    dend_4 { pt3dadd( -109.052, 52.2927, 36.4034, 0.88 ) }
    dend_4 { pt3dadd( -109.121, 52.3063, 36.4081, 0.88 ) }
    dend_4 { pt3dadd( -110.436, 52.4157, 36.2337, 0.88 ) }
    dend_4 { pt3dadd( -110.563, 52.4038, 36.2092, 0.88 ) }
    dend_4 { pt3dadd( -111.449, 52.1601, 36.0038, 0.88 ) }
    dend_4 { pt3dadd( -112.196, 51.862, 35.884, 0.88 ) }
    dend_4 { pt3dadd( -113.51, 51.1898, 35.7025, 0.88 ) }
    dend_4 { pt3dadd( -113.588, 51.1502, 35.6753, 0.88 ) }
    dend_4 { pt3dadd( -114.532, 50.6674, 35.1893, 0.88 ) }
    dend_4 { pt3dadd( -114.774, 50.5695, 35.0704, 0.88 ) }
    dend_4 { pt3dadd( -115.906, 50.2119, 34.5655, 0.88 ) }
    dend_4 { pt3dadd( -116.028, 50.1822, 34.5304, 0.88 ) }
    dend_4 { pt3dadd( -118.451, 49.7453, 34.0238, 0.88 ) }
    dend_4 { pt3dadd( -118.595, 49.7282, 33.9973, 0.88 ) }
    dend_4 { pt3dadd( -119.709, 49.6652, 33.7713, 0.88 ) }
    dend_4 { pt3dadd( -119.968, 49.6661, 33.7652, 0.88 ) }
    dend_4 { pt3dadd( -121.054, 49.7421, 33.9652, 0.88 ) }
    dend_4 { pt3dadd( -121.111, 49.7437, 33.9842, 0.88 ) }
    dend_4 { pt3dadd( -121.834, 49.7365, 34.3205, 0.88 ) }
    dend_4 { pt3dadd( -121.89, 49.7307, 34.3396, 0.88 ) }
    dend_4 { pt3dadd( -123.583, 49.442, 34.7283, 0.88 ) }
    dend_4 { pt3dadd( -123.719, 49.414, 34.7421, 0.88 ) }
    dend_4 { pt3dadd( -125.131, 49.0811, 34.7441, 0.88 ) }
    dend_4 { pt3dadd( -125.447, 49.0014, 34.7276, 0.88 ) }
    dend_4 { pt3dadd( -127.299, 48.3921, 34.5196, 0.88 ) }
    dend_4 { pt3dadd( -127.476, 48.3262, 34.5012, 0.88 ) }
    dend_4 { pt3dadd( -128.502, 47.8862, 34.4062, 0.88 ) }
    dend_4 { pt3dadd( -128.906, 47.7122, 34.4201, 0.88 ) }
    dend_4 { pt3dadd( -128.969, 47.6848, 34.4324, 0.88 ) }
    dend_4 { pt3dadd( -130.234, 47.188, 34.9444, 0.88 ) }
    dend_4 { pt3dadd( -131.309, 46.8078, 35.669, 0.88 ) }
    dend_4 { pt3dadd( -131.741, 46.6871, 36.0134, 0.88 ) }
    dend_4 { pt3dadd( -132.63, 46.5041, 36.8682, 0.88 ) }
    dend_4 { pt3dadd( -132.674, 46.5021, 36.9089, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_4 { pt3dadd( -133.492, 46.5968, 37.5858, 0.88 ) }
    dend_4 { pt3dadd( -133.75, 46.6748, 37.7388, 0.88 ) }
    dend_4 { pt3dadd( -134.437, 46.9045, 37.8636, 0.88 ) }
    dend_4 { pt3dadd( -134.583, 46.9237, 37.8529, 0.88 ) }
    dend_4 { pt3dadd( -135.896, 46.6958, 37.6783, 0.88 ) }
    dend_4 { pt3dadd( -136.785, 46.4346, 37.5703, 0.88 ) }
    dend_4 { pt3dadd( -137.898, 46.0302, 37.4633, 0.88 ) }
    dend_4 { pt3dadd( -138.027, 45.9787, 37.4554, 0.88 ) }
    dend_4 { pt3dadd( -139.612, 45.3144, 37.4847, 0.88 ) }
    dend_4 { pt3dadd( -141.776, 44.39, 37.7052, 0.88 ) }
    dend_4 { pt3dadd( -141.846, 44.3569, 37.7236, 0.88 ) }
    dend_4 { pt3dadd( -142.701, 43.9654, 38.0634, 0.88 ) }
    dend_4 { pt3dadd( -142.75, 43.9438, 38.0905, 0.88 ) }
    dend_4 { pt3dadd( -143.874, 43.4639, 38.8452, 0.88 ) }
    dend_4 { pt3dadd( -144.067, 43.394, 39.009, 0.88 ) }
    dend_4 { pt3dadd( -145.137, 43.0038, 40.135, 0.88 ) }
    dend_4 { pt3dadd( -145.345, 42.9317, 40.3533, 0.88 ) }
    dend_4 { pt3dadd( -146.257, 42.6186, 41.3231, 0.88 ) }
    dend_4 { pt3dadd( -146.337, 42.5962, 41.4097, 0.88 ) }
    dend_4 { pt3dadd( -147.078, 42.4254, 42.2322, 0.88 ) }
    dend_4 { pt3dadd( -147.121, 42.4183, 42.2731, 0.88 ) }
    dend_4 { pt3dadd( -148.196, 42.3012, 43.1652, 0.88 ) }
    dend_4 { pt3dadd( -148.26, 42.2913, 43.212, 0.88 ) }
    dend_4 { pt3dadd( -150.072, 41.957, 44.3576, 0.88 ) }
    dend_4 { pt3dadd( -150.123, 41.9441, 44.3862, 0.88 ) }
    dend_4 { pt3dadd( -151.62, 41.4692, 45.1393, 0.88 ) }
    dend_4 { pt3dadd( -151.744, 41.4255, 45.1875, 0.88 ) }
    dend_4 { pt3dadd( -152.823, 41.0087, 45.5123, 0.88 ) }
    dend_4 { pt3dadd( -153.296, 40.817, 45.6357, 0.88 ) }
    dend_4 { pt3dadd( -154.264, 40.4048, 45.8408, 0.88 ) }
    dend_4 { pt3dadd( -154.317, 40.3798, 45.8512, 0.88 ) }
    dend_4 { pt3dadd( -156.884, 39.0874, 46.3081, 0.88 ) }
    dend_4 { pt3dadd( -156.937, 39.0605, 46.3166, 0.88 ) }
    dend_4 { pt3dadd( -158.403, 38.389, 46.5168, 0.88 ) }
    dend_4 { pt3dadd( -158.522, 38.3374, 46.5306, 0.88 ) }
    dend_4 { pt3dadd( -160.471, 37.6974, 46.7125, 0.88 ) }
    dend_4 { pt3dadd( -161.118, 37.5765, 46.7695, 0.88 ) }
    dend_4 { pt3dadd( -161.209, 37.5768, 46.7777, 0.88 ) }
    dend_4 { pt3dadd( -162.898, 37.8065, 46.9519, 0.88 ) }
    dend_4 { pt3dadd( -162.986, 37.8312, 46.9613, 0.88 ) }
    dend_4 { pt3dadd( -164.673, 38.3431, 47.1964, 0.88 ) }
    dend_4 { pt3dadd( -165.704, 38.7247, 47.3904, 0.88 ) }
    dend_4 { pt3dadd( -165.874, 38.7773, 47.4189, 0.88 ) }
    dend_4 { pt3dadd( -167.123, 39.0573, 47.5969, 0.88 ) }
    dend_4 { pt3dadd( -167.193, 39.063, 47.6035, 0.88 ) }
    dend_4 { pt3dadd( -168.436, 39.0045, 47.656, 0.88 ) }
    dend_4 { pt3dadd( -168.737, 38.9457, 47.6516, 0.88 ) }
    dend_4 { pt3dadd( -169.683, 38.6683, 47.5434, 0.88 ) }
    dend_4 { pt3dadd( -169.749, 38.6478, 47.5316, 0.88 ) }
    dend_4 { pt3dadd( -170.663, 38.4063, 47.3276, 0.88 ) }
    dend_4 { pt3dadd( -171.47, 38.283, 47.1429, 0.88 ) }
    dend_4 { pt3dadd( -171.631, 38.2732, 47.1064, 0.88 ) }
    dend_4 { pt3dadd( -173.486, 38.1883, 46.7716, 0.88 ) }
    dend_4 { pt3dadd( -173.566, 38.1862, 46.7629, 0.88 ) }
    dend_4 { pt3dadd( -174.882, 38.1759, 46.6833, 0.88 ) }
    dend_4 { pt3dadd( -176.192, 38.2023, 46.6402, 0.88 ) }
    dend_4 { pt3dadd( -176.442, 38.2183, 46.6412, 0.88 ) }
    dend_4 { pt3dadd( -177.625, 38.3476, 46.7172, 0.88 ) }
    dend_4 { pt3dadd( -178.68, 38.5661, 46.9115, 0.88 ) }
    dend_4 { pt3dadd( -178.747, 38.5765, 46.926, 0.88 ) }
    dend_4 { pt3dadd( -188.007, 35.0616, 48.3078, 0.88 ) }
    dend_4 { pt3dadd( -197.117, 31.886, 50.9368, 0.88 ) }
    dend_4 { pt3dadd( -206.461, 28.6473, 52.4249, 0.88 ) }
    dend_4 { pt3dadd( -215.182, 23.7596, 52.2093, 0.88 ) }
    dend_4 { pt3dadd( -224.383, 19.881, 52.7537, 0.88 ) }
    dend_4 { pt3dadd( -233.868, 16.813, 53.5489, 0.88 ) }
    dend_4 { pt3dadd( -243.167, 13.1354, 53.5758, 0.88 ) }
    dend_4 { pt3dadd( -252.09, 8.80567, 52.2969, 0.88 ) }
    dend_4 { pt3dadd( -261.211, 4.81534, 51.3607, 0.88 ) }
    dend_4 { pt3dadd( -269.12, -0.76587, 48.851, 0.88 ) }
    dend_4 { pt3dadd( -277.179, -5.70961, 45.594, 0.88 ) }
    dend_4 { pt3dadd( -285.565, -10.9454, 44.0901, 0.88 ) }
    dend_4 { pt3dadd( -294.703, -14.9108, 43.2062, 0.88 ) }
    dend_4 { pt3dadd( -304.346, -17.5372, 42.8683, 0.88 ) }
    // Section: dend_78, id: dend_78, parent: dend_74 (entry count 74/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 17.0835, -50.7606, 16.3661, 0.74 ) }
    dend_78 { pt3dadd( 18.2611, -51.0958, 16.0665, 0.74 ) }
    dend_78 { pt3dadd( 19.3814, -51.5133, 15.8588, 0.59 ) }
    dend_78 { pt3dadd( 20.3704, -51.9907, 15.7147, 0.59 ) }
    dend_78 { pt3dadd( 21.5573, -52.7524, 15.5815, 0.59 ) }
    dend_78 { pt3dadd( 22.2375, -53.2446, 15.5169, 1.18 ) }
    dend_78 { pt3dadd( 23.7306, -54.4156, 15.344, 1.18 ) }
    dend_78 { pt3dadd( 24.4256, -55.0705, 15.2685, 0.81 ) }
    dend_78 { pt3dadd( 25.2015, -55.8782, 15.1765, 0.66 ) }
    dend_78 { pt3dadd( 26.4192, -57.1879, 14.9317, 0.52 ) }
    dend_78 { pt3dadd( 26.475, -57.2433, 14.9166, 0.52 ) }
    dend_78 { pt3dadd( 27.4565, -58.0836, 14.6092, 0.52 ) }
    dend_78 { pt3dadd( 28.3809, -58.7484, 14.2792, 1.11 ) }
    dend_78 { pt3dadd( 29.1809, -59.199, 13.999, 1.11 ) }
    dend_78 { pt3dadd( 30.339, -59.708, 13.6226, 0.66 ) }
    dend_78 { pt3dadd( 31.4206, -60.098, 13.3176, 0.66 ) }
    dend_78 { pt3dadd( 32.2786, -60.4015, 13.1977, 1.03 ) }
    dend_78 { pt3dadd( 32.3448, -60.4241, 13.201, 1.03 ) }
    dend_78 { pt3dadd( 33.1975, -60.7426, 13.3461, 1.18 ) }
    dend_78 { pt3dadd( 33.2606, -60.7689, 13.3613, 1.18 ) }
    dend_78 { pt3dadd( 34.1129, -61.1375, 13.5935, 1.18 ) }
    dend_78 { pt3dadd( 35.7218, -61.8529, 14.0104, 0.66 ) }
    dend_78 { pt3dadd( 37.1316, -62.4955, 14.3396, 0.66 ) }
    dend_78 { pt3dadd( 38.5717, -63.1523, 14.6475, 0.66 ) }
    dend_78 { pt3dadd( 38.6346, -63.1808, 14.6591, 0.66 ) }
    dend_78 { pt3dadd( 40.5027, -64.0165, 14.8352, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_78 { pt3dadd( 40.5676, -64.0427, 14.8345, 0.66 ) }
    dend_78 { pt3dadd( 41.347, -64.3307, 14.7374, 0.96 ) }
    dend_78 { pt3dadd( 41.7678, -64.4608, 14.6707, 0.96 ) }
    dend_78 { pt3dadd( 42.9299, -64.8001, 14.5068, 0.96 ) }
    dend_78 { pt3dadd( 44.3449, -65.2688, 14.3776, 0.52 ) }
    dend_78 { pt3dadd( 45.7476, -65.7849, 14.3062, 0.52 ) }
    dend_78 { pt3dadd( 45.8125, -65.8111, 14.3053, 0.52 ) }
    dend_78 { pt3dadd( 47.0987, -66.4051, 14.3387, 0.52 ) }
    dend_78 { pt3dadd( 48.4854, -67.1553, 14.4513, 0.52 ) }
    dend_78 { pt3dadd( 49.603, -67.8905, 14.6346, 0.52 ) }
    dend_78 { pt3dadd( 50.045, -68.2521, 14.75, 0.52 ) }
    dend_78 { pt3dadd( 50.1507, -68.3549, 14.7778, 0.52 ) }
    dend_78 { pt3dadd( 50.7377, -68.9789, 14.9664, 0.52 ) }
    dend_78 { pt3dadd( 50.7756, -69.0233, 14.9803, 0.52 ) }
    dend_78 { pt3dadd( 51.2195, -69.5171, 15.1275, 0.66 ) }
    dend_78 { pt3dadd( 51.8297, -70.1297, 15.3177, 0.66 ) }
    dend_78 { pt3dadd( 52.4374, -70.707, 15.5116, 0.74 ) }
    dend_78 { pt3dadd( 53.4098, -71.5458, 15.7997, 0.74 ) }
    dend_78 { pt3dadd( 54.277, -72.2133, 15.9729, 0.29 ) }
    dend_78 { pt3dadd( 54.883, -72.6269, 16.0311, 0.52 ) }
    dend_78 { pt3dadd( 55.4038, -72.9374, 16.0393, 0.74 ) }
    dend_78 { pt3dadd( 55.4655, -72.9703, 16.0361, 0.74 ) }
    dend_78 { pt3dadd( 56.398, -73.4353, 15.9341, 0.74 ) }
    dend_78 { pt3dadd( 57.5628, -73.9887, 15.8179, 0.74 ) }
    dend_78 { pt3dadd( 58.8884, -74.6665, 15.7595, 0.74 ) }
    dend_78 { pt3dadd( 59.6399, -75.0853, 15.7706, 0.44 ) }
    dend_78 { pt3dadd( 60.7936, -75.7901, 15.7789, 0.44 ) }
    dend_78 { pt3dadd( 60.8606, -75.8339, 15.7796, 0.44 ) }
    dend_78 { pt3dadd( 62.0335, -76.7402, 15.8082, 1.11 ) }
    dend_78 { pt3dadd( 62.7845, -77.4291, 15.8365, 0.81 ) }
    dend_78 { pt3dadd( 63.6538, -78.3249, 15.8344, 0.81 ) }
    dend_78 { pt3dadd( 64.6364, -79.4059, 15.899, 0.81 ) }
    dend_78 { pt3dadd( 64.6917, -79.4634, 15.9047, 0.81 ) }
    dend_78 { pt3dadd( 66.0751, -80.6881, 16.1657, 0.81 ) }
    dend_78 { pt3dadd( 67.8428, -81.9767, 16.5882, 0.81 ) }
    dend_78 { pt3dadd( 67.9076, -82.0163, 16.6132, 0.81 ) }
    dend_78 { pt3dadd( 69.4286, -82.8807, 17.3506, 0.96 ) }
    dend_78 { pt3dadd( 70.4715, -83.4058, 17.9647, 0.96 ) }
    dend_78 { pt3dadd( 71.9913, -84.0355, 18.9304, 0.44 ) }
    dend_78 { pt3dadd( 72.882, -84.2407, 19.5868, 0.44 ) }
    dend_78 { pt3dadd( 73.776, -84.3194, 20.3233, 1.25 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 41/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 17.0835, -50.7606, 16.3661, 0.52 ) }
    dend_75 { pt3dadd( 16.7198, -51.9788, 16.1474, 0.52 ) }
    dend_75 { pt3dadd( 16.4395, -53.1641, 15.9975, 0.52 ) }
    dend_75 { pt3dadd( 16.4089, -53.3101, 15.9822, 0.52 ) }
    dend_75 { pt3dadd( 16.3412, -53.8809, 15.971, 0.88 ) }
    dend_75 { pt3dadd( 16.2692, -54.8279, 15.9944, 0.88 ) }
    dend_75 { pt3dadd( 16.2514, -55.0467, 16.0089, 0.88 ) }
    dend_75 { pt3dadd( 16.1861, -56.2666, 16.2212, 0.66 ) }
    dend_75 { pt3dadd( 16.1942, -56.4018, 16.2857, 0.66 ) }
    dend_75 { pt3dadd( 16.4258, -57.5594, 17.1722, 0.66 ) }
    dend_75 { pt3dadd( 16.4384, -57.6078, 17.221, 0.66 ) }
    dend_75 { pt3dadd( 16.5583, -58.1479, 17.8249, 0.66 ) }
    dend_75 { pt3dadd( 16.5667, -58.193, 17.8778, 0.66 ) }
    dend_75 { pt3dadd( 16.8641, -60.3808, 20.1532, 0.66 ) }
    dend_75 { pt3dadd( 16.9325, -61.0002, 20.6439, 0.81 ) }
    dend_75 { pt3dadd( 17.0407, -62.2338, 21.3867, 0.81 ) }
    dend_75 { pt3dadd( 17.1795, -63.2979, 21.8888, 0.81 ) }
    dend_75 { pt3dadd( 17.1948, -63.3625, 21.9107, 0.81 ) }
    dend_75 { pt3dadd( 17.7673, -65.0745, 22.2833, 0.52 ) }
    dend_75 { pt3dadd( 18.1278, -65.9898, 22.3783, 0.81 ) }
    dend_75 { pt3dadd( 18.2204, -66.2002, 22.4005, 0.81 ) }
    dend_75 { pt3dadd( 18.852, -67.4387, 22.5348, 0.81 ) }
    dend_75 { pt3dadd( 19.7021, -69.0957, 22.7172, 0.81 ) }
    dend_75 { pt3dadd( 20.4626, -70.7947, 22.8888, 0.66 ) }
    dend_75 { pt3dadd( 20.7847, -71.5871, 23.0091, 0.88 ) }
    dend_75 { pt3dadd( 21.0701, -72.3983, 23.1632, 0.88 ) }
    dend_75 { pt3dadd( 21.3236, -73.2254, 23.339, 0.88 ) }
    dend_75 { pt3dadd( 21.5356, -74.0774, 23.5302, 0.59 ) }
    dend_75 { pt3dadd( 21.8714, -75.7367, 23.9981, 0.59 ) }
    dend_75 { pt3dadd( 22.2856, -77.8513, 24.6951, 0.52 ) }
    dend_75 { pt3dadd( 22.4482, -78.5704, 24.948, 0.88 ) }
    dend_75 { pt3dadd( 22.4653, -78.6344, 24.9707, 0.88 ) }
    dend_75 { pt3dadd( 22.7771, -79.7057, 25.3802, 0.66 ) }
    dend_75 { pt3dadd( 23.0748, -80.6745, 25.7676, 0.44 ) }
    dend_75 { pt3dadd( 23.1778, -81.0694, 25.9201, 0.66 ) }
    dend_75 { pt3dadd( 23.3021, -81.9009, 26.18, 0.66 ) }
    dend_75 { pt3dadd( 23.3667, -82.8106, 26.4853, 0.66 ) }
    dend_75 { pt3dadd( 23.3702, -84.3515, 27.0126, 0.44 ) }
    dend_75 { pt3dadd( 23.354, -85.0773, 27.2676, 0.74 ) }
    dend_75 { pt3dadd( 23.3809, -86.1982, 27.7156, 0.74 ) }
    dend_75 { pt3dadd( 23.4794, -87.1205, 28.139, 0.74 ) }
    dend_75 { pt3dadd( 23.6718, -88.1296, 28.6624, 0.59 ) }
    dend_75 { pt3dadd( 23.9072, -88.9867, 29.1848, 0.29 ) }
    dend_75 { pt3dadd( 24.1962, -89.8248, 29.7329, 0.29 ) }
    dend_75 { pt3dadd( 24.7843, -91.382, 30.8781, 0.29 ) }
    dend_75 { pt3dadd( 25.0053, -91.867, 31.2943, 0.29 ) }
    dend_75 { pt3dadd( 25.0331, -91.9469, 31.3695, 0.29 ) }
    dend_75 { pt3dadd( 25.1679, -93.022, 32.3316, 0.44 ) }
    dend_75 { pt3dadd( 25.1166, -93.5261, 32.7753, 0.66 ) }
    dend_75 { pt3dadd( 25.003, -94.0028, 33.1325, 0.66 ) }
    dend_75 { pt3dadd( 24.9883, -94.062, 33.1668, 0.66 ) }
    dend_75 { pt3dadd( 24.7111, -95.5023, 33.929, 0.66 ) }
    dend_75 { pt3dadd( 24.6117, -96.6554, 34.5371, 0.96 ) }
    dend_75 { pt3dadd( 24.6097, -96.7277, 34.5714, 0.96 ) }
    dend_75 { pt3dadd( 24.6178, -97.6126, 34.9804, 0.96 ) }
    dend_75 { pt3dadd( 24.6194, -98.6782, 35.423, 0.96 ) }
    dend_75 { pt3dadd( 24.6139, -98.8331, 35.481, 0.96 ) }
    dend_75 { pt3dadd( 24.4791, -100.303, 35.9382, 0.96 ) }
    dend_75 { pt3dadd( 24.2699, -101.53, 36.2479, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_75 { pt3dadd( 24.0259, -102.638, 36.4929, 0.59 ) }
    dend_75 { pt3dadd( 23.7445, -103.76, 36.699, 0.59 ) }
    dend_75 { pt3dadd( 23.5704, -104.502, 36.7884, 0.74 ) }
    dend_75 { pt3dadd( 23.3575, -105.621, 36.8403, 0.74 ) }
    dend_75 { pt3dadd( 23.2493, -106.521, 36.7829, 0.44 ) }
    dend_75 { pt3dadd( 23.2467, -106.627, 36.7687, 0.44 ) }
    dend_75 { pt3dadd( 23.2944, -107.686, 36.5474, 0.44 ) }
    dend_75 { pt3dadd( 23.4094, -108.539, 36.3374, 0.44 ) }
    dend_75 { pt3dadd( 23.4206, -108.596, 36.3227, 0.44 ) }
    dend_75 { pt3dadd( 23.743, -109.924, 36.0274, 0.44 ) }
    dend_75 { pt3dadd( 23.918, -110.667, 35.8954, 0.81 ) }
    dend_75 { pt3dadd( 23.9318, -110.735, 35.8841, 0.81 ) }
    dend_75 { pt3dadd( 24.0443, -111.452, 35.7729, 0.96 ) }
    dend_75 { pt3dadd( 24.1238, -112.196, 35.6712, 0.96 ) }
    dend_75 { pt3dadd( 24.228, -113.311, 35.5347, 0.52 ) }
    dend_75 { pt3dadd( 24.2339, -113.38, 35.5272, 0.52 ) }
    dend_75 { pt3dadd( 24.2754, -113.983, 35.5304, 1.11 ) }
    dend_75 { pt3dadd( 24.2788, -114.053, 35.5351, 1.11 ) }
    dend_75 { pt3dadd( 24.3622, -115.393, 35.7745, 0.88 ) }
    dend_75 { pt3dadd( 24.43, -116.957, 36.1768, 0.59 ) }
    dend_75 { pt3dadd( 24.4297, -117.014, 36.1943, 0.59 ) }
    dend_75 { pt3dadd( 24.3971, -118.654, 36.723, 0.59 ) }
    dend_75 { pt3dadd( 24.3524, -119.891, 37.1575, 0.59 ) }
    dend_75 { pt3dadd( 24.2783, -121.198, 37.6558, 0.96 ) }
    dend_75 { pt3dadd( 24.2345, -121.748, 37.8804, 0.96 ) }
    dend_75 { pt3dadd( 24.0554, -123.131, 38.3615, 0.74 ) }
    dend_75 { pt3dadd( 23.9242, -123.806, 38.4684, 0.74 ) }
    dend_75 { pt3dadd( 23.8992, -123.882, 38.4622, 0.74 ) }
    dend_75 { pt3dadd( 23.6713, -124.379, 38.3633, 0.22 ) }
    dend_75 { pt3dadd( 23.1455, -125.375, 38.0844, 0.22 ) }
    dend_75 { pt3dadd( 22.7051, -126.212, 37.8532, 1.4 ) }
    dend_75 { pt3dadd( 21.891, -127.733, 37.6053, 0.81 ) }
    dend_75 { pt3dadd( 21.3133, -128.907, 37.5381, 0.59 ) }
    dend_75 { pt3dadd( 21.1082, -129.391, 37.5527, 0.81 ) }
    dend_75 { pt3dadd( 20.7556, -130.315, 37.6472, 1.03 ) }
    dend_75 { pt3dadd( 20.4275, -131.282, 37.8339, 0.74 ) }
    dend_75 { pt3dadd( 19.9183, -133.205, 38.332, 0.74 ) }
    dend_75 { pt3dadd( 19.7153, -134.259, 38.6176, 0.74 ) }
    dend_75 { pt3dadd( 19.5415, -135.406, 38.887, 0.59 ) }
    dend_75 { pt3dadd( 19.5331, -135.484, 38.9018, 0.59 ) }
    dend_75 { pt3dadd( 19.4514, -136.58, 39.0671, 0.74 ) }
    dend_75 { pt3dadd( 19.4153, -138.052, 39.1884, 0.74 ) }
    dend_75 { pt3dadd( 19.4583, -139.814, 39.2409, 0.66 ) }
    dend_75 { pt3dadd( 19.4618, -139.884, 39.2448, 0.66 ) }
    dend_75 { pt3dadd( 19.5691, -140.963, 39.3289, 0.37 ) }
    dend_75 { pt3dadd( 19.5891, -141.11, 39.3436, 0.29 ) }
    dend_75 { pt3dadd( 19.8876, -142.6, 39.4785, 0.29 ) }
    dend_75 { pt3dadd( 20.1065, -143.532, 39.5512, 0.29 ) }
    dend_75 { pt3dadd( 20.2499, -144.12, 39.5886, 0.88 ) }
    dend_75 { pt3dadd( 20.5435, -145.398, 39.5934, 0.88 ) }
    dend_75 { pt3dadd( 20.7283, -146.29, 39.5309, 0.66 ) }
    dend_75 { pt3dadd( 20.9534, -147.298, 39.3716, 0.66 ) }
    dend_75 { pt3dadd( 21.1194, -147.989, 39.1872, 1.11 ) }
    dend_75 { pt3dadd( 21.1348, -148.053, 39.1635, 1.11 ) }
    dend_75 { pt3dadd( 21.3827, -149.138, 38.7381, 0.52 ) }
    dend_75 { pt3dadd( 21.5479, -150.047, 38.4008, 0.52 ) }
    dend_75 { pt3dadd( 21.6284, -150.701, 38.1901, 0.52 ) }
    dend_75 { pt3dadd( 21.6326, -150.76, 38.1824, 0.52 ) }
    dend_75 { pt3dadd( 21.6753, -151.583, 38.1815, 0.52 ) }
    dend_75 { pt3dadd( 21.669, -152.479, 38.3144, 0.81 ) }
    dend_75 { pt3dadd( 21.5901, -153.477, 38.6313, 0.52 ) }
    dend_75 { pt3dadd( 21.583, -153.532, 38.6536, 0.52 ) }
    dend_75 { pt3dadd( 21.3305, -154.878, 39.2915, 0.52 ) }
    dend_75 { pt3dadd( 21.2054, -155.462, 39.5848, 1.33 ) }
    dend_75 { pt3dadd( 20.9732, -156.546, 40.18, 0.44 ) }
    dend_75 { pt3dadd( 20.6977, -158.041, 41.0204, 0.44 ) }
    dend_75 { pt3dadd( 20.3354, -160.257, 42.3003, 0.44 ) }
    dend_75 { pt3dadd( 20.1135, -161.92, 43.2341, 0.81 ) }
    dend_75 { pt3dadd( 20.1078, -161.982, 43.2661, 0.81 ) }
    dend_75 { pt3dadd( 20.058, -162.962, 43.7647, 0.37 ) }
    dend_75 { pt3dadd( 20.0712, -164.623, 44.5803, 0.37 ) }
    dend_75 { pt3dadd( 20.0809, -164.809, 44.6641, 0.88 ) }
    dend_75 { pt3dadd( 20.1722, -165.836, 45.0749, 0.88 ) }
    dend_75 { pt3dadd( 20.3323, -167.243, 45.5497, 0.44 ) }
    dend_75 { pt3dadd( 20.439, -168.353, 45.8883, 0.44 ) }
    dend_75 { pt3dadd( 20.5263, -169.511, 46.1827, 0.29 ) }
    dend_75 { pt3dadd( 20.6122, -170.585, 46.445, 0.29 ) }
    dend_75 { pt3dadd( 20.634, -170.812, 46.498, 1.11 ) }
    dend_75 { pt3dadd( 20.7386, -171.746, 46.7049, 0.66 ) }
    dend_75 { pt3dadd( 20.8105, -172.421, 46.8247, 0.81 ) }
    dend_75 { pt3dadd( 20.9156, -173.27, 46.916, 1.11 ) }
    dend_75 { pt3dadd( 21.0215, -174.173, 46.9707, 0.88 ) }
    dend_75 { pt3dadd( 21.115, -174.874, 47.0054, 0.44 ) }
    dend_75 { pt3dadd( 21.269, -175.818, 47.1063, 0.44 ) }
    dend_75 { pt3dadd( 21.5596, -177.111, 47.457, 0.29 ) }
    dend_75 { pt3dadd( 21.7541, -177.707, 47.7353, 0.59 ) }
    dend_75 { pt3dadd( 21.7798, -177.772, 47.7744, 0.59 ) }
    dend_75 { pt3dadd( 22.0896, -178.331, 48.2381, 0.88 ) }
    dend_75 { pt3dadd( 22.826, -179.166, 49.2958, 0.88 ) }
    dend_75 { pt3dadd( 23.8335, -179.853, 50.7208, 0.88 ) }
    dend_75 { pt3dadd( 23.867, -179.867, 50.7686, 0.88 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 91/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -12.3034, -308.628, 29.7312, 0.66 ) }
    dend_68 { pt3dadd( -12.1573, -309.244, 29.8814, 0.66 ) }
    dend_68 { pt3dadd( -11.985, -310.482, 30.1561, 0.66 ) }
    dend_68 { pt3dadd( -11.9352, -311.393, 30.2444, 0.37 ) }
    dend_68 { pt3dadd( -11.9359, -311.463, 30.2486, 0.37 ) }
    dend_68 { pt3dadd( -11.9965, -312.73, 30.2963, 0.37 ) }
    dend_68 { pt3dadd( -12.0413, -313.54, 30.3198, 0.37 ) }
    dend_68 { pt3dadd( -12.0925, -314.052, 30.3273, 1.25 ) }
    dend_68 { pt3dadd( -12.2469, -315.307, 30.3329, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_68 { pt3dadd( -12.374, -316.273, 30.3151, 0.66 ) }
    dend_68 { pt3dadd( -12.4984, -317.218, 30.3056, 0.66 ) }
    dend_68 { pt3dadd( -12.5996, -317.889, 30.2805, 0.37 ) }
    dend_68 { pt3dadd( -12.7649, -318.734, 30.2312, 0.37 ) }
    dend_68 { pt3dadd( -12.9911, -319.571, 30.1534, 0.37 ) }
    dend_68 { pt3dadd( -13.2294, -320.371, 30.0577, 0.66 ) }
    dend_68 { pt3dadd( -13.3912, -321.027, 29.9255, 0.88 ) }
    dend_68 { pt3dadd( -13.6178, -322.096, 29.6526, 0.88 ) }
    dend_68 { pt3dadd( -13.722, -322.735, 29.4549, 0.88 ) }
    dend_68 { pt3dadd( -13.786, -323.588, 29.2278, 0.44 ) }
    dend_68 { pt3dadd( -13.7312, -324.856, 28.9697, 0.44 ) }
    dend_68 { pt3dadd( -13.4363, -326.408, 28.594, 0.44 ) }
    dend_68 { pt3dadd( -13.4149, -326.483, 28.5745, 0.44 ) }
    dend_68 { pt3dadd( -13.2876, -326.856, 28.4525, 0.88 ) }
    dend_68 { pt3dadd( -12.8998, -328.058, 27.9983, 1.11 ) }
    dend_68 { pt3dadd( -12.8623, -328.199, 27.9406, 1.11 ) }
    dend_68 { pt3dadd( -12.6246, -330.064, 26.9557, 0.81 ) }
    dend_68 { pt3dadd( -12.6234, -330.124, 26.9197, 0.81 ) }
    dend_68 { pt3dadd( -12.6555, -331.368, 26.1645, 0.59 ) }
    dend_68 { pt3dadd( -12.7189, -332.171, 25.6608, 0.59 ) }
    dend_68 { pt3dadd( -12.7378, -332.298, 25.5834, 0.59 ) }
    dend_68 { pt3dadd( -12.8778, -332.924, 25.295, 0.88 ) }
    dend_68 { pt3dadd( -13.0181, -333.356, 25.1799, 0.88 ) }
    dend_68 { pt3dadd( -13.1211, -333.665, 25.117, 0.88 ) }
    dend_68 { pt3dadd( -13.3581, -334.321, 25.0233, 0.59 ) }
    dend_68 { pt3dadd( -13.7065, -335.341, 24.8956, 0.59 ) }
    dend_68 { pt3dadd( -13.94, -336.124, 24.7916, 0.88 ) }
    dend_68 { pt3dadd( -14.1226, -336.973, 24.6858, 0.88 ) }
    dend_68 { pt3dadd( -14.2741, -337.989, 24.6027, 0.88 ) }
    dend_68 { pt3dadd( -14.282, -338.059, 24.5999, 0.88 ) }
    dend_68 { pt3dadd( -14.3669, -339.03, 24.6117, 0.88 ) }
    dend_68 { pt3dadd( -14.4366, -340.012, 24.6809, 0.29 ) }
    dend_68 { pt3dadd( -14.5695, -341.453, 24.8608, 0.29 ) }
    dend_68 { pt3dadd( -14.6903, -342.343, 24.9997, 0.81 ) }
    dend_68 { pt3dadd( -14.7933, -342.953, 25.1145, 0.81 ) }
    dend_68 { pt3dadd( -14.9076, -343.554, 25.2462, 1.03 ) }
    dend_68 { pt3dadd( -15.0956, -344.34, 25.4748, 0.88 ) }
    dend_68 { pt3dadd( -15.3476, -345.082, 25.7617, 0.37 ) }
    dend_68 { pt3dadd( -15.7003, -345.74, 26.0172, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 39/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -12.3034, -308.628, 29.7312, 0.22 ) }
    dend_67 { pt3dadd( -12.7783, -309.405, 29.6043, 0.22 ) }
    dend_67 { pt3dadd( -13.6051, -310.759, 29.3835, 0.22 ) }
    dend_67 { pt3dadd( -13.6412, -310.818, 29.3739, 0.22 ) }
    dend_67 { pt3dadd( -14.3135, -311.919, 29.1944, 0.22 ) }
    dend_67 { pt3dadd( -14.3683, -312.009, 29.1797, 0.22 ) }
    dend_67 { pt3dadd( -15.5774, -313.989, 28.8568, 0.22 ) }
    dend_67 { pt3dadd( -21.1892, -322.253, 29.3238, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_58 (entry count 47/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 165.004, -168.031, -90.4583, 0.59 ) }
    dend_62 { pt3dadd( 164.612, -168.399, -90.232, 0.59 ) }
    dend_62 { pt3dadd( 164.077, -168.899, -89.9238, 0.59 ) }
    dend_62 { pt3dadd( 163.749, -169.207, -89.7347, 0.59 ) }
    dend_62 { pt3dadd( 162.716, -170.173, -89.1395, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 52/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 165.004, -168.031, -90.4583, 0.66 ) }
    dend_59 { pt3dadd( 165.434, -167.966, -90.5873, 0.66 ) }
    dend_59 { pt3dadd( 165.508, -167.956, -90.6169, 0.66 ) }
    dend_59 { pt3dadd( 166.362, -167.858, -90.9493, 0.66 ) }
    dend_59 { pt3dadd( 167.051, -167.802, -91.2431, 0.66 ) }
    dend_59 { pt3dadd( 167.589, -167.769, -91.4634, 0.37 ) }
    dend_59 { pt3dadd( 168.898, -167.697, -91.9619, 0.37 ) }
    dend_59 { pt3dadd( 169.888, -167.652, -92.3197, 0.88 ) }
    dend_59 { pt3dadd( 170.712, -167.617, -92.6299, 1.11 ) }
    dend_59 { pt3dadd( 171.848, -167.583, -93.0555, 0.74 ) }
    dend_59 { pt3dadd( 172.884, -167.546, -93.4216, 0.74 ) }
    dend_59 { pt3dadd( 173.873, -167.514, -93.7525, 0.44 ) }
    dend_59 { pt3dadd( 174.714, -167.486, -94.0414, 0.44 ) }
    dend_59 { pt3dadd( 176.2, -167.428, -94.4759, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 66/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -84.8149, -197.426, -57.8432, 0.44 ) }
    dend_49 { pt3dadd( -84.8916, -198.359, -58.167, 0.44 ) }
    dend_49 { pt3dadd( -84.8864, -198.789, -58.3014, 0.44 ) }
    dend_49 { pt3dadd( -84.8445, -199.724, -58.5812, 0.66 ) }
    dend_49 { pt3dadd( -84.7224, -200.923, -58.9131, 0.22 ) }
    dend_49 { pt3dadd( -84.6278, -201.866, -59.1243, 0.74 ) }
    dend_49 { pt3dadd( -84.5373, -203.144, -59.3616, 0.74 ) }
    dend_49 { pt3dadd( -84.4846, -204.051, -59.4803, 0.74 ) }
    dend_49 { pt3dadd( -84.4853, -204.121, -59.4843, 0.74 ) }
    dend_49 { pt3dadd( -84.5715, -204.905, -59.4598, 1.18 ) }
    dend_49 { pt3dadd( -84.8612, -205.969, -59.392, 1.18 ) }
    dend_49 { pt3dadd( -85.1802, -206.678, -59.3271, 1.18 ) }
    dend_49 { pt3dadd( -85.7288, -207.673, -59.389, 0.66 ) }
    dend_49 { pt3dadd( -86.0854, -208.347, -59.5303, 0.66 ) }
    dend_49 { pt3dadd( -86.1135, -208.406, -59.5537, 0.66 ) }
    dend_49 { pt3dadd( -86.5337, -209.4, -60.0561, 0.81 ) }
    dend_49 { pt3dadd( -86.782, -210.161, -60.4966, 0.81 ) }
    dend_49 { pt3dadd( -87.2539, -212.041, -61.5911, 0.44 ) }
    dend_49 { pt3dadd( -87.4772, -213.099, -62.2223, 0.74 ) }
    dend_49 { pt3dadd( -87.7267, -214.293, -62.9158, 1.11 ) }
    dend_49 { pt3dadd( -87.9417, -215.277, -63.4729, 1.11 ) }
    dend_49 { pt3dadd( -88.1756, -216.323, -64.0352, 1.11 ) }
    dend_49 { pt3dadd( -88.4137, -217.236, -64.4743, 0.66 ) }
    dend_49 { pt3dadd( -88.7721, -218.281, -64.8575, 1.11 ) }
    dend_49 { pt3dadd( -89.1433, -219.155, -65.1512, 1.11 ) }
    dend_49 { pt3dadd( -89.5138, -219.887, -65.3622, 1.11 ) }
    dend_49 { pt3dadd( -89.7641, -220.331, -65.5025, 0.81 ) }
    dend_49 { pt3dadd( -90.2834, -221.204, -65.773, 0.59 ) }
    dend_49 { pt3dadd( -90.8245, -222.11, -66.0484, 0.59 ) }
    dend_49 { pt3dadd( -91.3055, -222.886, -66.2614, 0.59 ) }
    dend_49 { pt3dadd( -91.8664, -223.723, -66.515, 0.59 ) }
    dend_49 { pt3dadd( -92.4442, -224.451, -66.7468, 0.59 ) }
    dend_49 { pt3dadd( -93.0267, -225.07, -66.9859, 0.59 ) }
    dend_49 { pt3dadd( -93.44, -225.411, -67.1665, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_49 { pt3dadd( -94.1609, -225.82, -67.4616, 0.81 ) }
    dend_49 { pt3dadd( -94.7629, -226.024, -67.6723, 0.96 ) }
    dend_49 { pt3dadd( -95.7214, -226.257, -67.9647, 0.96 ) }
    dend_49 { pt3dadd( -95.7866, -226.275, -67.9829, 0.96 ) }
    dend_49 { pt3dadd( -96.4021, -226.515, -68.1632, 0.74 ) }
    dend_49 { pt3dadd( -97.2144, -227.05, -68.4066, 0.74 ) }
    dend_49 { pt3dadd( -97.8865, -227.693, -68.6396, 0.96 ) }
    dend_49 { pt3dadd( -98.5715, -228.435, -68.8767, 0.96 ) }
    dend_49 { pt3dadd( -99.3822, -229.437, -69.1759, 0.96 ) }
    dend_49 { pt3dadd( -100.221, -230.568, -69.4913, 0.96 ) }
    dend_49 { pt3dadd( -101.182, -232.066, -69.862, 0.96 ) }
    dend_49 { pt3dadd( -101.641, -232.93, -70.0719, 0.96 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 12/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -84.8149, -197.426, -57.8432, 0.74 ) }
    dend_46 { pt3dadd( -85.0259, -198.45, -57.9706, 0.74 ) }
    dend_46 { pt3dadd( -85.2259, -199.301, -58.0761, 0.37 ) }
    dend_46 { pt3dadd( -85.3971, -200.03, -58.183, 0.37 ) }
    dend_46 { pt3dadd( -85.7613, -201.734, -58.4331, 0.37 ) }
    dend_46 { pt3dadd( -85.9925, -203.075, -58.6109, 0.37 ) }
    dend_46 { pt3dadd( -86.003, -203.144, -58.6195, 0.37 ) }
    dend_46 { pt3dadd( -86.1613, -204.231, -58.7483, 0.37 ) }
    dend_46 { pt3dadd( -86.2504, -205.111, -58.7955, 0.74 ) }
    dend_46 { pt3dadd( -86.271, -206.351, -58.7732, 0.74 ) }
    dend_46 { pt3dadd( -86.2229, -207.958, -58.6067, 0.74 ) }
    dend_46 { pt3dadd( -86.2224, -208.037, -58.593, 0.74 ) }
    dend_46 { pt3dadd( -86.2154, -208.968, -58.4015, 0.74 ) }
    dend_46 { pt3dadd( -86.2165, -210.397, -58.0589, 0.15 ) }
    dend_46 { pt3dadd( -86.371, -212.16, -57.5838, 0.15 ) }
    dend_46 { pt3dadd( -86.5067, -212.81, -57.4003, 1.03 ) }
    dend_46 { pt3dadd( -86.8421, -213.791, -57.1245, 1.25 ) }
    dend_46 { pt3dadd( -87.0635, -214.285, -57.0024, 1.25 ) }
    dend_46 { pt3dadd( -87.5167, -214.986, -56.8734, 0.44 ) }
    dend_46 { pt3dadd( -88.3864, -215.97, -56.8113, 0.44 ) }
    dend_46 { pt3dadd( -88.8751, -216.432, -56.7686, 0.81 ) }
    dend_46 { pt3dadd( -88.924, -216.482, -56.7661, 0.81 ) }
    dend_46 { pt3dadd( -89.2118, -216.807, -56.7748, 0.22 ) }
    dend_46 { pt3dadd( -89.6251, -217.4, -56.822, 0.22 ) }
    dend_46 { pt3dadd( -90.147, -218.354, -56.9236, 0.22 ) }
    dend_46 { pt3dadd( -90.506, -219.293, -57.0563, 0.22 ) }
    dend_46 { pt3dadd( -90.7647, -220.411, -57.2284, 1.4 ) }
    dend_46 { pt3dadd( -90.8739, -221.695, -57.434, 1.47 ) }
    dend_46 { pt3dadd( -90.8207, -222.696, -57.6215, 1.47 ) }
    dend_46 { pt3dadd( -90.809, -222.764, -57.6348, 1.47 ) }
    dend_46 { pt3dadd( -90.5604, -223.794, -57.8543, 0.59 ) }
    dend_46 { pt3dadd( -90.2011, -225.118, -58.1372, 0.59 ) }
    dend_46 { pt3dadd( -89.8577, -226.242, -58.3165, 0.59 ) }
    dend_46 { pt3dadd( -89.7008, -226.747, -58.3754, 0.15 ) }
    dend_46 { pt3dadd( -89.3609, -227.952, -58.5136, 0.15 ) }
    dend_46 { pt3dadd( -89.2269, -228.539, -58.5744, 0.96 ) }
    dend_46 { pt3dadd( -89.0573, -229.483, -58.6508, 0.96 ) }
    dend_46 { pt3dadd( -88.9666, -230.289, -58.7201, 0.96 ) }
    dend_46 { pt3dadd( -88.9303, -230.751, -58.7575, 1.18 ) }
    dend_46 { pt3dadd( -88.876, -231.335, -58.8139, 0.22 ) }
    dend_46 { pt3dadd( -88.8191, -232.058, -58.9048, 0.22 ) }
    dend_46 { pt3dadd( -88.7707, -233.215, -59.0932, 0.22 ) }
    dend_46 { pt3dadd( -88.7911, -233.9, -59.2341, 0.88 ) }
    dend_46 { pt3dadd( -88.8643, -234.542, -59.4014, 0.88 ) }
    dend_46 { pt3dadd( -88.9769, -235.181, -59.588, 0.22 ) }
    dend_46 { pt3dadd( -89.3034, -236.349, -59.9315, 0.22 ) }
    dend_46 { pt3dadd( -89.47, -236.791, -60.0658, 0.96 ) }
    dend_46 { pt3dadd( -89.7187, -237.325, -60.2193, 0.96 ) }
    dend_46 { pt3dadd( -90.0232, -237.913, -60.3664, 0.22 ) }
    dend_46 { pt3dadd( -90.4595, -238.659, -60.5503, 0.22 ) }
    dend_46 { pt3dadd( -91.2985, -239.954, -60.8295, 0.22 ) }
    dend_46 { pt3dadd( -91.4372, -240.15, -60.8755, 0.88 ) }
    dend_46 { pt3dadd( -91.9162, -240.77, -61.0128, 1.03 ) }
    dend_46 { pt3dadd( -92.2772, -241.191, -61.1169, 1.03 ) }
    dend_46 { pt3dadd( -92.8651, -241.855, -61.2816, 0.66 ) }
    dend_46 { pt3dadd( -93.4946, -242.528, -61.4622, 0.66 ) }
    dend_46 { pt3dadd( -94.0029, -243.05, -61.6065, 0.52 ) }
    dend_46 { pt3dadd( -94.7905, -243.838, -61.8635, 0.52 ) }
    dend_46 { pt3dadd( -95.387, -244.422, -62.0832, 0.96 ) }
    dend_46 { pt3dadd( -95.8283, -244.886, -62.2603, 0.96 ) }
    dend_46 { pt3dadd( -96.2884, -245.404, -62.462, 0.96 ) }
    dend_46 { pt3dadd( -96.7315, -245.968, -62.691, 0.59 ) }
    dend_46 { pt3dadd( -97.245, -246.804, -62.9966, 0.44 ) }
    dend_46 { pt3dadd( -97.4011, -247.17, -63.1354, 0.22 ) }
    dend_46 { pt3dadd( -97.5247, -248.011, -63.4097, 0.22 ) }
    dend_46 { pt3dadd( -97.508, -248.329, -63.5071, 1.03 ) }
    dend_46 { pt3dadd( -97.3929, -249.106, -63.7207, 1.03 ) }
    dend_46 { pt3dadd( -97.2246, -249.95, -63.9138, 1.03 ) }
    dend_46 { pt3dadd( -97.0446, -250.706, -64.0452, 0.81 ) }
    dend_46 { pt3dadd( -96.6238, -252.182, -64.3237, 0.81 ) }
    dend_46 { pt3dadd( -96.3959, -252.917, -64.4871, 1.25 ) }
    dend_46 { pt3dadd( -96.2049, -253.555, -64.6339, 1.25 ) }
    dend_46 { pt3dadd( -95.983, -254.379, -64.8579, 1.25 ) }
    dend_46 { pt3dadd( -95.8311, -255.127, -65.0637, 1.33 ) }
    dend_46 { pt3dadd( -95.7367, -256.216, -65.3629, 0.96 ) }
    dend_46 { pt3dadd( -95.7923, -257.104, -65.633, 0.96 ) }
    dend_46 { pt3dadd( -95.9216, -257.936, -65.8896, 0.59 ) }
    dend_46 { pt3dadd( -96.1597, -258.885, -66.1886, 0.59 ) }
    dend_46 { pt3dadd( -96.4428, -259.694, -66.4211, 0.59 ) }
    dend_46 { pt3dadd( -96.7949, -260.536, -66.6531, 0.37 ) }
    dend_46 { pt3dadd( -97.0108, -261.062, -66.8034, 1.03 ) }
    dend_46 { pt3dadd( -97.2179, -261.631, -66.9748, 1.18 ) }
    dend_46 { pt3dadd( -97.3312, -262.109, -67.1417, 0.88 ) }
    dend_46 { pt3dadd( -97.4561, -263.392, -67.6001, 0.88 ) }
    dend_46 { pt3dadd( -97.4416, -264.057, -67.8865, 1.03 ) }
    dend_46 { pt3dadd( -97.4129, -265.191, -68.4529, 1.03 ) }
    dend_46 { pt3dadd( -97.414, -265.251, -68.4886, 1.03 ) }
    dend_46 { pt3dadd( -97.4691, -266.147, -69.0913, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_46 { pt3dadd( -97.5402, -266.676, -69.4805, 1.03 ) }
    dend_46 { pt3dadd( -97.7592, -267.607, -70.2065, 0.15 ) }
    dend_46 { pt3dadd( -98.1178, -268.841, -71.1205, 0.15 ) }
    dend_46 { pt3dadd( -98.3003, -269.396, -71.5104, 0.81 ) }
    dend_46 { pt3dadd( -98.3953, -269.696, -71.7024, 0.81 ) }
    dend_46 { pt3dadd( -98.7081, -270.642, -72.2634, 0.22 ) }
    dend_46 { pt3dadd( -98.7983, -270.969, -72.4256, 0.96 ) }
    dend_46 { pt3dadd( -98.8514, -271.253, -72.5209, 0.96 ) }
    dend_46 { pt3dadd( -98.8994, -271.927, -72.6704, 0.22 ) }
    dend_46 { pt3dadd( -98.9827, -272.781, -72.8128, 0.22 ) }
    dend_46 { pt3dadd( -99.0484, -273.228, -72.8817, 1.11 ) }
    dend_46 { pt3dadd( -99.2165, -273.932, -72.9722, 1.11 ) }
    dend_46 { pt3dadd( -99.4167, -274.397, -73.0337, 1.11 ) }
    dend_46 { pt3dadd( -99.8415, -275.07, -73.1192, 0.22 ) }
    dend_46 { pt3dadd( -100.365, -275.702, -73.1907, 0.22 ) }
    dend_46 { pt3dadd( -100.587, -275.941, -73.2147, 0.44 ) }
    dend_46 { pt3dadd( -101.126, -276.544, -73.2579, 0.44 ) }
    dend_46 { pt3dadd( -101.847, -277.356, -73.3173, 0.44 ) }
    dend_46 { pt3dadd( -101.887, -277.413, -73.3235, 0.44 ) }
    dend_46 { pt3dadd( -102.179, -278.155, -73.4824, 0.29 ) }
    dend_46 { pt3dadd( -102.284, -278.784, -73.652, 1.03 ) }
    dend_46 { pt3dadd( -102.34, -279.486, -73.8556, 1.25 ) }
    dend_46 { pt3dadd( -102.342, -279.553, -73.8759, 1.25 ) }
    dend_46 { pt3dadd( -102.387, -280.612, -74.2379, 1.25 ) }
    dend_46 { pt3dadd( -102.563, -281.672, -74.636, 0.22 ) }
    dend_46 { pt3dadd( -102.77, -282.437, -74.963, 0.22 ) }
    dend_46 { pt3dadd( -102.933, -282.895, -75.1675, 0.81 ) }
    dend_46 { pt3dadd( -103.183, -283.467, -75.4197, 1.11 ) }
    dend_46 { pt3dadd( -103.431, -283.969, -75.6471, 1.25 ) }
    dend_46 { pt3dadd( -104.276, -285.52, -76.2893, 0.22 ) }
    dend_46 { pt3dadd( -104.609, -286.121, -76.5436, 0.81 ) }
    dend_46 { pt3dadd( -104.85, -286.579, -76.7456, 0.81 ) }
    dend_46 { pt3dadd( -105.095, -287.052, -76.9612, 0.81 ) }
    dend_46 { pt3dadd( -105.541, -287.887, -77.325, 0.22 ) }
    dend_46 { pt3dadd( -106.314, -289.28, -77.7506, 0.22 ) }
    dend_46 { pt3dadd( -106.632, -289.831, -77.8388, 0.96 ) }
    dend_46 { pt3dadd( -107.1, -290.662, -77.8756, 1.18 ) }
    dend_46 { pt3dadd( -107.605, -291.592, -77.833, 1.33 ) }
    dend_46 { pt3dadd( -108.201, -292.738, -77.6748, 1.33 ) }
    dend_46 { pt3dadd( -109.046, -294.463, -77.1831, 0.74 ) }
    dend_46 { pt3dadd( -109.469, -295.375, -76.8439, 0.22 ) }
    dend_46 { pt3dadd( -109.781, -296.078, -76.5543, 0.22 ) }
    dend_46 { pt3dadd( -109.929, -296.422, -76.3911, 0.88 ) }
    dend_46 { pt3dadd( -110.172, -297.029, -76.078, 0.88 ) }
    dend_46 { pt3dadd( -110.646, -298.293, -75.4825, 0.88 ) }
    dend_46 { pt3dadd( -110.954, -299.089, -75.2088, 1.03 ) }
    dend_46 { pt3dadd( -111.201, -299.68, -75.0012, 1.03 ) }
    dend_46 { pt3dadd( -111.614, -300.627, -74.6939, 1.03 ) }
    dend_46 { pt3dadd( -111.641, -300.69, -74.6778, 1.03 ) }
    dend_46 { pt3dadd( -112.053, -301.715, -74.4876, 0.44 ) }
    dend_46 { pt3dadd( -112.344, -302.395, -74.4589, 0.44 ) }
    dend_46 { pt3dadd( -112.368, -302.45, -74.4601, 0.44 ) }
    dend_46 { pt3dadd( -112.663, -303.037, -74.5193, 0.44 ) }
    dend_46 { pt3dadd( -112.899, -303.437, -74.5953, 0.15 ) }
    dend_46 { pt3dadd( -112.932, -303.487, -74.6029, 0.15 ) }
    dend_46 { pt3dadd( -113.466, -304.189, -74.691, 0.15 ) }
    dend_46 { pt3dadd( -113.671, -304.452, -74.721, 0.81 ) }
    dend_46 { pt3dadd( -114.035, -304.919, -74.7875, 0.81 ) }
    dend_46 { pt3dadd( -114.077, -304.974, -74.795, 0.81 ) }
    dend_46 { pt3dadd( -114.455, -305.551, -74.886, 0.81 ) }
    dend_46 { pt3dadd( -114.985, -306.405, -75.0298, 0.74 ) }
    dend_46 { pt3dadd( -115.243, -306.863, -75.1121, 0.22 ) }
    dend_46 { pt3dadd( -115.293, -306.955, -75.1294, 0.22 ) }
    dend_46 { pt3dadd( -116.237, -308.776, -75.483, 0.22 ) }
    dend_46 { pt3dadd( -116.594, -309.456, -75.6163, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 65/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 39.3329, 101.062, 82.9317, 0.44 ) }
    dend_16 { pt3dadd( 42.0024, 109.648, 78.5554, 0.44 ) }
    dend_16 { pt3dadd( 43.0165, 118.379, 73.7877, 0.44 ) }
    dend_16 { pt3dadd( 42.7814, 127.571, 69.8565, 0.44 ) }
    dend_16 { pt3dadd( 40.2463, 135.716, 64.6383, 0.44 ) }
    dend_16 { pt3dadd( 36.8058, 144.379, 61.0152, 0.44 ) }
    dend_16 { pt3dadd( 32.883, 153.377, 59.1067, 0.44 ) }
    dend_16 { pt3dadd( 29.1727, 162.646, 58.5397, 0.44 ) }
    dend_16 { pt3dadd( 24.3857, 171.391, 59.3194, 0.44 ) }
    dend_16 { pt3dadd( 20.5375, 180.606, 59.8424, 0.44 ) }
    dend_16 { pt3dadd( 18.1163, 190.195, 61.3229, 0.44 ) }
    dend_16 { pt3dadd( 15.2083, 199.654, 62.7622, 0.44 ) }
    dend_16 { pt3dadd( 13.9915, 209.433, 64.4631, 0.44 ) }
    dend_16 { pt3dadd( 13.9753, 219.253, 66.3534, 0.44 ) }
    dend_16 { pt3dadd( 15.6393, 229.073, 67.2462, 0.44 ) }
    dend_16 { pt3dadd( 17.5179, 238.718, 69.0992, 0.44 ) }
    dend_16 { pt3dadd( 20.7496, 247.88, 71.4711, 0.44 ) }
    dend_16 { pt3dadd( 22.4468, 257.084, 74.9917, 0.44 ) }
    dend_16 { pt3dadd( 24.8069, 265.954, 78.9608, 0.44 ) }
    dend_16 { pt3dadd( 27.8025, 275.143, 81.5278, 0.44 ) }
    dend_16 { pt3dadd( 28.8899, 284.752, 84.0764, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 86/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 39.3329, 101.062, 82.9317, 0.44 ) }
    dend_15 { pt3dadd( 42.7182, 97.318, 91.5645, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 88/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -142.315, 71.8412, 42.7544, 0.74 ) }
    dend_11 { pt3dadd( -143.987, 72.1747, 43.4264, 0.74 ) }
    dend_11 { pt3dadd( -144.137, 72.202, 43.4807, 0.74 ) }
    dend_11 { pt3dadd( -146.119, 72.5535, 44.1653, 0.74 ) }
    dend_11 { pt3dadd( -146.575, 72.6435, 44.3063, 0.74 ) }
    dend_11 { pt3dadd( -147.629, 72.8661, 44.6055, 0.74 ) }
    dend_11 { pt3dadd( -147.909, 72.9324, 44.675, 0.74 ) }
    dend_11 { pt3dadd( -148.483, 73.0771, 44.7105, 0.74 ) }
    dend_11 { pt3dadd( -148.602, 73.1056, 44.7113, 0.74 ) }
    dend_11 { pt3dadd( -149.597, 73.3411, 44.6584, 0.74 ) }
    dend_11 { pt3dadd( -149.714, 73.3722, 44.646, 0.74 ) }
    dend_11 { pt3dadd( -150.438, 73.5797, 44.5424, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_11 { pt3dadd( -151.719, 73.9708, 44.334, 0.81 ) }
    dend_11 { pt3dadd( -153.272, 74.4576, 44.0552, 0.81 ) }
    dend_11 { pt3dadd( -153.337, 74.4803, 44.0435, 0.81 ) }
    dend_11 { pt3dadd( -154.586, 74.9981, 43.7927, 0.81 ) }
    dend_11 { pt3dadd( -154.648, 75.0289, 43.7806, 0.81 ) }
    dend_11 { pt3dadd( -155.412, 75.4786, 43.6376, 0.81 ) }
    dend_11 { pt3dadd( -155.488, 75.5297, 43.6278, 0.81 ) }
    dend_11 { pt3dadd( -156.787, 76.4922, 43.4862, 0.81 ) }
    dend_11 { pt3dadd( -157.697, 77.1218, 43.4486, 0.81 ) }
    dend_11 { pt3dadd( -158.477, 77.5745, 43.485, 0.81 ) }
    dend_11 { pt3dadd( -158.601, 77.6368, 43.4962, 0.81 ) }
    dend_11 { pt3dadd( -159.681, 77.9442, 43.5799, 0.81 ) }
    dend_11 { pt3dadd( -159.772, 77.9557, 43.585, 0.81 ) }
    dend_11 { pt3dadd( -160.236, 77.9469, 43.6006, 0.81 ) }
    dend_11 { pt3dadd( -161.133, 77.8312, 43.6086, 0.81 ) }
    dend_11 { pt3dadd( -161.223, 77.8143, 43.6054, 0.81 ) }
    dend_11 { pt3dadd( -163.891, 77.2888, 43.4944, 0.81 ) }
    dend_11 { pt3dadd( -164.615, 77.1401, 43.4578, 0.81 ) }
    dend_11 { pt3dadd( -164.776, 77.1112, 43.4455, 0.81 ) }
    dend_11 { pt3dadd( -165.848, 76.9546, 43.3336, 0.81 ) }
    dend_11 { pt3dadd( -166.155, 76.9292, 43.2957, 0.81 ) }
    dend_11 { pt3dadd( -167.44, 76.8797, 43.1193, 0.81 ) }
    dend_11 { pt3dadd( -167.643, 76.8921, 43.0901, 0.81 ) }
    dend_11 { pt3dadd( -169.125, 77.2498, 42.7745, 0.81 ) }
    dend_11 { pt3dadd( -169.432, 77.4243, 42.7492, 0.81 ) }
    dend_11 { pt3dadd( -169.954, 78.0132, 42.8332, 0.81 ) }
    dend_11 { pt3dadd( -170.049, 78.1347, 42.8935, 0.81 ) }
    dend_11 { pt3dadd( -170.377, 78.5805, 43.2772, 0.81 ) }
    dend_11 { pt3dadd( -170.417, 78.6109, 43.3262, 0.81 ) }
    dend_11 { pt3dadd( -171.574, 79.2341, 44.856, 0.81 ) }
    dend_11 { pt3dadd( -171.615, 79.2467, 44.8983, 0.81 ) }
    dend_11 { pt3dadd( -172.243, 79.3733, 45.4529, 0.81 ) }
    dend_11 { pt3dadd( -172.355, 79.3944, 45.5341, 0.81 ) }
    dend_11 { pt3dadd( -173.414, 79.5788, 46.1835, 0.81 ) }
    dend_11 { pt3dadd( -173.634, 79.6224, 46.294, 0.81 ) }
    dend_11 { pt3dadd( -174.749, 79.8571, 46.614, 0.81 ) }
    dend_11 { pt3dadd( -174.944, 79.9015, 46.6576, 0.81 ) }
    dend_11 { pt3dadd( -175.923, 80.091, 46.7836, 0.81 ) }
    dend_11 { pt3dadd( -175.992, 80.1021, 46.7881, 0.81 ) }
    dend_11 { pt3dadd( -176.487, 80.1605, 46.7874, 0.81 ) }
    dend_11 { pt3dadd( -177.77, 80.2655, 46.7649, 0.81 ) }
    dend_11 { pt3dadd( -177.83, 80.27, 46.7604, 0.81 ) }
    dend_11 { pt3dadd( -179.46, 80.3694, 46.5434, 0.81 ) }
    dend_11 { pt3dadd( -179.76, 80.3918, 46.4898, 0.81 ) }
    dend_11 { pt3dadd( -180.929, 80.5002, 46.3568, 0.81 ) }
    dend_11 { pt3dadd( -180.989, 80.5074, 46.353, 0.81 ) }
    dend_11 { pt3dadd( -182.49, 80.7529, 46.369, 0.81 ) }
    dend_11 { pt3dadd( -182.863, 80.8252, 46.3871, 0.81 ) }
    dend_11 { pt3dadd( -184.397, 81.1295, 46.4548, 0.81 ) }
    dend_11 { pt3dadd( -186.118, 81.3756, 46.5172, 0.81 ) }
    dend_11 { pt3dadd( -186.39, 81.4012, 46.5282, 0.81 ) }
    dend_11 { pt3dadd( -187.655, 81.4524, 46.6164, 0.81 ) }
    dend_11 { pt3dadd( -187.784, 81.451, 46.6301, 0.81 ) }
    dend_11 { pt3dadd( -189.438, 81.4475, 46.7842, 0.81 ) }
    dend_11 { pt3dadd( -190.373, 81.4422, 46.8263, 0.81 ) }
    dend_11 { pt3dadd( -190.733, 81.4614, 46.8217, 0.81 ) }
    dend_11 { pt3dadd( -191.78, 81.5588, 46.8367, 0.81 ) }
    dend_11 { pt3dadd( -192.178, 81.6193, 46.8834, 0.81 ) }
    dend_11 { pt3dadd( -193.212, 81.8366, 47.0968, 0.81 ) }
    dend_11 { pt3dadd( -193.33, 81.8725, 47.1273, 0.81 ) }
    dend_11 { pt3dadd( -194.536, 82.2943, 47.4356, 0.81 ) }
    dend_11 { pt3dadd( -194.599, 82.3198, 47.4535, 0.81 ) }
    dend_11 { pt3dadd( -196.037, 82.9767, 47.9117, 0.81 ) }
    dend_11 { pt3dadd( -196.088, 83.002, 47.9294, 0.81 ) }
    dend_11 { pt3dadd( -197.241, 83.559, 48.3445, 0.81 ) }
    dend_11 { pt3dadd( -197.343, 83.6083, 48.3816, 0.81 ) }
    dend_11 { pt3dadd( -198.569, 84.1548, 48.8053, 0.81 ) }
    dend_11 { pt3dadd( -198.843, 84.2521, 48.8797, 0.81 ) }
    dend_11 { pt3dadd( -200.099, 84.5695, 49.1625, 0.81 ) }
    dend_11 { pt3dadd( -200.898, 84.7047, 49.3503, 0.81 ) }
    dend_11 { pt3dadd( -201.112, 84.7132, 49.4024, 0.81 ) }
    dend_11 { pt3dadd( -202.198, 84.6529, 49.6308, 0.81 ) }
    dend_11 { pt3dadd( -203.647, 84.3801, 49.9085, 0.81 ) }
    dend_11 { pt3dadd( -204.477, 84.1594, 50.0908, 0.81 ) }
    dend_11 { pt3dadd( -204.61, 84.1185, 50.129, 0.81 ) }
    dend_11 { pt3dadd( -205.513, 83.8669, 50.4352, 0.81 ) }
    dend_11 { pt3dadd( -205.605, 83.8497, 50.4689, 0.81 ) }
    dend_11 { pt3dadd( -206.72, 83.8418, 50.8975, 0.81 ) }
    dend_11 { pt3dadd( -206.984, 83.9038, 51.0065, 0.81 ) }
    dend_11 { pt3dadd( -208.313, 84.3964, 51.3446, 0.81 ) }
    dend_11 { pt3dadd( -208.609, 84.5297, 51.3855, 0.81 ) }
    dend_11 { pt3dadd( -209.712, 85.1265, 51.3736, 0.81 ) }
    dend_11 { pt3dadd( -210.828, 85.7785, 51.2142, 0.81 ) }
    dend_11 { pt3dadd( -212.05, 86.5425, 50.8597, 0.81 ) }
    dend_11 { pt3dadd( -213.923, 87.7005, 50.0955, 0.81 ) }
    dend_11 { pt3dadd( -214.121, 87.8126, 49.9914, 0.81 ) }
    dend_11 { pt3dadd( -215.111, 88.3151, 49.4143, 0.81 ) }
    dend_11 { pt3dadd( -215.219, 88.3519, 49.3513, 0.81 ) }
    dend_11 { pt3dadd( -216.271, 88.5365, 48.7884, 0.81 ) }
    dend_11 { pt3dadd( -216.453, 88.5424, 48.7362, 0.81 ) }
    dend_11 { pt3dadd( -217.219, 88.5187, 48.7199, 0.81 ) }
    dend_11 { pt3dadd( -217.289, 88.5151, 48.7245, 0.81 ) }
    dend_11 { pt3dadd( -218.893, 88.3971, 48.9382, 0.81 ) }
    dend_11 { pt3dadd( -218.952, 88.3969, 48.9464, 0.81 ) }
    dend_11 { pt3dadd( -221.101, 88.4941, 49.2562, 0.81 ) }
    dend_11 { pt3dadd( -221.334, 88.52, 49.2817, 0.81 ) }
    dend_11 { pt3dadd( -222.657, 88.777, 49.3742, 0.81 ) }
    dend_11 { pt3dadd( -222.773, 88.811, 49.3769, 0.81 ) }
    dend_11 { pt3dadd( -224.298, 89.4342, 49.2634, 0.81 ) }
    dend_11 { pt3dadd( -224.353, 89.4583, 49.2595, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_11 { pt3dadd( -225.089, 89.8262, 49.1937, 0.81 ) }
    dend_11 { pt3dadd( -225.299, 89.9284, 49.1795, 0.81 ) }
    dend_11 { pt3dadd( -226.35, 90.4261, 49.1051, 0.81 ) }
    dend_11 { pt3dadd( -227.437, 90.8687, 49.1101, 0.81 ) }
    dend_11 { pt3dadd( -228.923, 91.3721, 49.2356, 0.81 ) }
    dend_11 { pt3dadd( -228.989, 91.3931, 49.2448, 0.81 ) }
    dend_11 { pt3dadd( -230.02, 91.6964, 49.4553, 0.81 ) }
    dend_11 { pt3dadd( -230.5, 91.7855, 49.562, 0.81 ) }
    dend_11 { pt3dadd( -232.026, 91.9043, 49.9382, 0.81 ) }
    dend_11 { pt3dadd( -232.094, 91.905, 49.9548, 0.81 ) }
    dend_11 { pt3dadd( -232.777, 91.8529, 50.0646, 0.81 ) }
    dend_11 { pt3dadd( -232.845, 91.8434, 50.0755, 0.81 ) }
    dend_11 { pt3dadd( -234.361, 91.5014, 50.3099, 0.81 ) }
    dend_11 { pt3dadd( -234.568, 91.437, 50.3433, 0.81 ) }
    dend_11 { pt3dadd( -235.264, 91.1574, 50.4296, 0.81 ) }
    dend_11 { pt3dadd( -235.773, 90.9489, 50.509, 0.81 ) }
    dend_11 { pt3dadd( -235.925, 90.8889, 50.5375, 0.81 ) }
    dend_11 { pt3dadd( -236.783, 90.6626, 50.7252, 0.81 ) }
    dend_11 { pt3dadd( -237.799, 90.5667, 51.0051, 0.81 ) }
    dend_11 { pt3dadd( -237.913, 90.5834, 51.0395, 0.81 ) }
    dend_11 { pt3dadd( -238.485, 90.8108, 51.2165, 0.81 ) }
    dend_11 { pt3dadd( -238.834, 91.0363, 51.2883, 0.81 ) }
    dend_11 { pt3dadd( -239.84, 91.8468, 51.3935, 0.81 ) }
    dend_11 { pt3dadd( -240.012, 91.9972, 51.3917, 0.81 ) }
    dend_11 { pt3dadd( -241.063, 92.9385, 51.2847, 0.81 ) }
    dend_11 { pt3dadd( -241.224, 93.0594, 51.2593, 0.81 ) }
    dend_11 { pt3dadd( -242.192, 93.6656, 51.0512, 0.81 ) }
    dend_11 { pt3dadd( -242.379, 93.7427, 51.0107, 0.81 ) }
    dend_11 { pt3dadd( -243.375, 93.9467, 50.8087, 0.81 ) }
    dend_11 { pt3dadd( -243.444, 93.9511, 50.797, 0.81 ) }
    dend_11 { pt3dadd( -244.46, 93.8447, 50.712, 0.81 ) }
    dend_11 { pt3dadd( -244.677, 93.8074, 50.7127, 0.81 ) }
    dend_11 { pt3dadd( -245.687, 93.6138, 50.7756, 0.81 ) }
    dend_11 { pt3dadd( -246.275, 93.5783, 50.8099, 0.81 ) }
    dend_11 { pt3dadd( -246.849, 93.6006, 50.8361, 0.81 ) }
    dend_11 { pt3dadd( -247.884, 93.7666, 50.8455, 0.81 ) }
    dend_11 { pt3dadd( -248.096, 93.8269, 50.8395, 0.81 ) }
    dend_11 { pt3dadd( -249.452, 94.3534, 50.7502, 0.81 ) }
    dend_11 { pt3dadd( -251.159, 95.2423, 50.5583, 0.81 ) }
    dend_11 { pt3dadd( -251.311, 95.344, 50.5349, 0.81 ) }
    dend_11 { pt3dadd( -251.895, 95.8154, 50.4045, 0.81 ) }
    dend_11 { pt3dadd( -251.945, 95.8628, 50.3923, 0.81 ) }
    dend_11 { pt3dadd( -252.202, 96.1268, 50.3436, 0.81 ) }
    dend_11 { pt3dadd( -252.249, 96.1788, 50.3421, 0.81 ) }
    dend_11 { pt3dadd( -253.057, 96.9827, 50.4585, 0.81 ) }
    dend_11 { pt3dadd( -253.367, 97.1743, 50.5186, 0.81 ) }
    dend_11 { pt3dadd( -254.394, 97.6452, 50.7602, 0.81 ) }
    dend_11 { pt3dadd( -254.505, 97.6831, 50.7854, 0.81 ) }
    dend_11 { pt3dadd( -255.196, 97.8639, 50.9414, 0.81 ) }
    dend_11 { pt3dadd( -255.474, 97.9195, 51.0044, 0.81 ) }
    dend_11 { pt3dadd( -257.609, 98.2426, 51.4891, 0.81 ) }
    dend_11 { pt3dadd( -257.794, 98.2758, 51.5171, 0.81 ) }
    dend_11 { pt3dadd( -258.953, 98.4928, 51.5982, 0.81 ) }
    dend_11 { pt3dadd( -259.05, 98.5173, 51.6016, 0.81 ) }
    dend_11 { pt3dadd( -260.476, 98.9632, 51.6106, 0.81 ) }
    dend_11 { pt3dadd( -260.666, 99.0409, 51.6096, 0.81 ) }
    dend_11 { pt3dadd( -262.394, 99.9785, 51.5594, 0.81 ) }
    dend_11 { pt3dadd( -262.497, 100.04, 51.5566, 0.81 ) }
    dend_11 { pt3dadd( -263.531, 100.716, 51.5353, 0.81 ) }
    dend_11 { pt3dadd( -263.662, 100.801, 51.535, 0.81 ) }
    dend_11 { pt3dadd( -264.325, 101.23, 51.5586, 0.81 ) }
    dend_11 { pt3dadd( -264.51, 101.332, 51.5818, 0.81 ) }
    dend_11 { pt3dadd( -265.296, 101.671, 51.7896, 0.81 ) }
    dend_11 { pt3dadd( -265.644, 101.761, 51.8793, 0.81 ) }
    dend_11 { pt3dadd( -266.087, 101.738, 51.9836, 0.81 ) }
    dend_11 { pt3dadd( -266.416, 101.665, 52.0668, 0.81 ) }
    dend_11 { pt3dadd( -266.89, 101.505, 52.1876, 0.81 ) }
    dend_11 { pt3dadd( -266.954, 101.481, 52.2042, 0.81 ) }
    dend_11 { pt3dadd( -267.79, 101.181, 52.5159, 0.81 ) }
    dend_11 { pt3dadd( -268.712, 100.878, 52.9288, 0.81 ) }
    dend_11 { pt3dadd( -269.052, 100.79, 53.0937, 0.81 ) }
    dend_11 { pt3dadd( -270.418, 100.502, 53.7948, 0.81 ) }
    dend_11 { pt3dadd( -270.645, 100.483, 53.9094, 0.81 ) }
    dend_11 { pt3dadd( -272.472, 100.503, 54.8265, 0.81 ) }
    dend_11 { pt3dadd( -272.641, 100.525, 54.9093, 0.81 ) }
    dend_11 { pt3dadd( -274.286, 100.885, 55.691, 0.81 ) }
    dend_11 { pt3dadd( -274.401, 100.918, 55.7419, 0.81 ) }
    dend_11 { pt3dadd( -276.211, 101.584, 56.4997, 0.81 ) }
    dend_11 { pt3dadd( -276.298, 101.621, 56.5272, 0.81 ) }
    dend_11 { pt3dadd( -277.177, 102.058, 56.6981, 0.81 ) }
    dend_11 { pt3dadd( -277.335, 102.142, 56.7179, 0.81 ) }
    dend_11 { pt3dadd( -278.439, 102.745, 56.7498, 0.81 ) }
    dend_11 { pt3dadd( -278.534, 102.792, 56.7467, 0.81 ) }
    dend_11 { pt3dadd( -279.98, 103.375, 56.5806, 0.81 ) }
    dend_11 { pt3dadd( -280.045, 103.398, 56.5703, 0.81 ) }
    dend_11 { pt3dadd( -280.649, 103.623, 56.4619, 0.81 ) }
    dend_11 { pt3dadd( -281.433, 103.943, 56.3082, 0.81 ) }
    dend_11 { pt3dadd( -281.495, 103.975, 56.2962, 0.81 ) }
    dend_11 { pt3dadd( -282.957, 104.884, 56.0888, 0.81 ) }
    dend_11 { pt3dadd( -283.003, 104.922, 56.0877, 0.81 ) }
    dend_11 { pt3dadd( -283.682, 105.58, 56.1362, 0.81 ) }
    dend_11 { pt3dadd( -283.962, 105.899, 56.1872, 0.81 ) }
    dend_11 { pt3dadd( -284.588, 106.707, 56.3605, 0.81 ) }
    dend_11 { pt3dadd( -284.822, 107.034, 56.4429, 0.81 ) }
    dend_11 { pt3dadd( -285.5, 108.069, 56.7559, 0.81 ) }
    dend_11 { pt3dadd( -285.607, 108.235, 56.8082, 0.81 ) }
    dend_11 { pt3dadd( -286.179, 109.131, 57.235, 0.81 ) }
    dend_11 { pt3dadd( -286.3, 109.317, 57.3511, 0.81 ) }
    dend_11 { pt3dadd( -286.976, 110.348, 58.1646, 0.81 ) }
    dend_11 { pt3dadd( -287.058, 110.476, 58.2782, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_11 { pt3dadd( -287.504, 111.195, 58.9001, 0.81 ) }
    dend_11 { pt3dadd( -288.448, 112.708, 60.1643, 0.81 ) }
    dend_11 { pt3dadd( -288.576, 112.918, 60.3105, 0.81 ) }
    dend_11 { pt3dadd( -289.644, 114.645, 61.3042, 0.81 ) }
    dend_11 { pt3dadd( -289.69, 114.718, 61.3347, 0.81 ) }
    dend_11 { pt3dadd( -290.649, 116.208, 61.7296, 0.81 ) }
    dend_11 { pt3dadd( -290.714, 116.308, 61.7383, 0.81 ) }
    dend_11 { pt3dadd( -291.783, 118.136, 61.6064, 0.81 ) }
    dend_11 { pt3dadd( -291.846, 118.248, 61.5882, 0.81 ) }
    dend_11 { pt3dadd( -292.458, 119.379, 61.2937, 0.81 ) }
    dend_11 { pt3dadd( -292.492, 119.438, 61.2779, 0.81 ) }
    dend_11 { pt3dadd( -293.152, 120.654, 60.965, 0.81 ) }
    dend_11 { pt3dadd( -293.633, 121.482, 60.8147, 0.81 ) }
    dend_11 { pt3dadd( -294.358, 122.66, 60.7019, 0.81 ) }
    dend_11 { pt3dadd( -294.428, 122.758, 60.6924, 0.81 ) }
    dend_11 { pt3dadd( -295.455, 124.081, 60.5554, 0.66 ) }
    dend_11 { pt3dadd( -296.06, 124.825, 60.4781, 0.66 ) }
    dend_11 { pt3dadd( -297.108, 125.986, 60.3557, 0.66 ) }
    dend_11 { pt3dadd( -297.373, 126.257, 60.3313, 0.66 ) }
    dend_11 { pt3dadd( -299.111, 128.045, 60.2945, 0.66 ) }
    dend_11 { pt3dadd( -299.291, 128.218, 60.2858, 0.66 ) }
    dend_11 { pt3dadd( -308.686, 130.128, 63.1309, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 22/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -142.315, 71.8412, 42.7544, 0.81 ) }
    dend_8 { pt3dadd( -142.391, 72.6346, 41.6286, 0.81 ) }
    dend_8 { pt3dadd( -142.432, 72.7105, 41.5312, 0.81 ) }
    dend_8 { pt3dadd( -143.446, 73.7599, 40.307, 0.74 ) }
    dend_8 { pt3dadd( -143.593, 73.8569, 40.2019, 0.74 ) }
    dend_8 { pt3dadd( -144.255, 74.2577, 39.7717, 0.74 ) }
    dend_8 { pt3dadd( -144.307, 74.2898, 39.7377, 0.74 ) }
    dend_8 { pt3dadd( -145.243, 74.7896, 39.2044, 0.74 ) }
    dend_8 { pt3dadd( -145.643, 75.006, 39.0205, 0.74 ) }
    dend_8 { pt3dadd( -147.037, 75.7504, 38.5094, 0.74 ) }
    dend_8 { pt3dadd( -147.153, 75.8271, 38.4589, 0.74 ) }
    dend_8 { pt3dadd( -147.512, 76.1043, 38.28, 0.74 ) }
    dend_8 { pt3dadd( -147.887, 76.4494, 38.0896, 0.74 ) }
    dend_8 { pt3dadd( -148.816, 77.495, 37.5913, 0.74 ) }
    dend_8 { pt3dadd( -148.974, 77.7008, 37.5061, 0.74 ) }
    dend_8 { pt3dadd( -149.684, 78.7696, 37.1058, 0.74 ) }
    dend_8 { pt3dadd( -149.875, 79.0631, 36.9863, 0.74 ) }
    dend_8 { pt3dadd( -150.477, 80.0144, 36.6045, 0.74 ) }
    dend_8 { pt3dadd( -150.621, 80.2639, 36.502, 0.74 ) }
    dend_8 { pt3dadd( -151.154, 81.2496, 36.077, 0.74 ) }
    dend_8 { pt3dadd( -151.209, 81.3471, 36.0338, 0.74 ) }
    dend_8 { pt3dadd( -151.748, 82.1759, 35.607, 0.74 ) }
    dend_8 { pt3dadd( -158.155, 88.2057, 30.8542, 0.74 ) }
    dend_8 { pt3dadd( -164.104, 93.8672, 25.1489, 0.74 ) }
    dend_8 { pt3dadd( -170.434, 99.0383, 19.387, 0.74 ) }
    dend_8 { pt3dadd( -177.023, 105.038, 14.8498, 0.74 ) }
    dend_8 { pt3dadd( -182.73, 111.155, 9.37056, 0.74 ) }
    dend_8 { pt3dadd( -187.548, 118.25, 4.22841, 0.74 ) }
    dend_8 { pt3dadd( -190.857, 124.861, -2.50511, 0.74 ) }
    dend_8 { pt3dadd( -194.929, 132.13, -8.03481, 0.74 ) }
    dend_8 { pt3dadd( -198.394, 139.536, -13.7923, 0.74 ) }
    dend_8 { pt3dadd( -201.451, 146.743, -20.015, 0.74 ) }
    dend_8 { pt3dadd( -206.347, 153.585, -25.4205, 0.74 ) }
    dend_8 { pt3dadd( -210.666, 159.792, -31.9633, 0.74 ) }
    dend_8 { pt3dadd( -214.177, 166.346, -38.6503, 0.74 ) }
    dend_8 { pt3dadd( -218.379, 173.779, -43.8555, 0.74 ) }
    dend_8 { pt3dadd( -222.878, 180.36, -49.8935, 0.74 ) }
    dend_8 { pt3dadd( -225.6, 186.994, -56.863, 0.74 ) }
    dend_8 { pt3dadd( -229.894, 193.069, -63.546, 0.74 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 61/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -304.346, -17.5372, 42.8683, 0.74 ) }
    dend_6 { pt3dadd( -296.097, -17.3202, 48.5162, 0.74 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -304.346, -17.5372, 42.8683, 0.81 ) }
    dend_5 { pt3dadd( -296.585, -13.0451, 38.4429, 0.74 ) }
    dend_5 { pt3dadd( -287.915, -10.0086, 34.4903, 0.74 ) }
    dend_5 { pt3dadd( -279.64, -6.62887, 30.0081, 0.74 ) }
    // Section: dend_84, id: dend_84, parent: dend_78 (entry count 67/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 73.776, -84.3194, 20.3233, 0.52 ) }
    dend_84 { pt3dadd( 74.4918, -84.377, 20.3459, 0.52 ) }
    dend_84 { pt3dadd( 75.8037, -84.4567, 20.4679, 0.52 ) }
    dend_84 { pt3dadd( 76.6215, -84.4639, 20.5703, 0.59 ) }
    dend_84 { pt3dadd( 77.7451, -84.4061, 20.8216, 0.44 ) }
    dend_84 { pt3dadd( 78.4132, -84.349, 21.0099, 0.44 ) }
    dend_84 { pt3dadd( 80.0028, -84.2055, 21.5069, 0.59 ) }
    dend_84 { pt3dadd( 80.0661, -84.1988, 21.536, 0.59 ) }
    dend_84 { pt3dadd( 80.779, -84.1558, 21.9668, 0.59 ) }
    dend_84 { pt3dadd( 81.9137, -84.1499, 22.7502, 0.59 ) }
    dend_84 { pt3dadd( 81.9889, -84.1551, 22.8033, 0.59 ) }
    dend_84 { pt3dadd( 82.7847, -84.2859, 23.2822, 0.59 ) }
    dend_84 { pt3dadd( 84.0939, -84.5208, 23.7874, 0.29 ) }
    dend_84 { pt3dadd( 84.7808, -84.6466, 23.9943, 0.52 ) }
    dend_84 { pt3dadd( 85.2838, -84.7533, 24.0986, 0.74 ) }
    dend_84 { pt3dadd( 86.2044, -84.9585, 24.2185, 0.96 ) }
    dend_84 { pt3dadd( 87.2156, -85.1787, 24.3162, 0.66 ) }
    dend_84 { pt3dadd( 89.4425, -85.6411, 24.6225, 0.66 ) }
    dend_84 { pt3dadd( 90.778, -85.9063, 24.8287, 0.66 ) }
    dend_84 { pt3dadd( 92.294, -86.2283, 25.1287, 0.66 ) }
    dend_84 { pt3dadd( 93.1315, -86.4267, 25.3572, 0.88 ) }
    dend_84 { pt3dadd( 93.7695, -86.593, 25.5791, 0.88 ) }
    dend_84 { pt3dadd( 95.9129, -87.2565, 26.4886, 0.88 ) }
    dend_84 { pt3dadd( 95.9979, -87.2854, 26.5303, 0.88 ) }
    dend_84 { pt3dadd( 97.2797, -87.7051, 27.151, 0.88 ) }
    dend_84 { pt3dadd( 98.6418, -88.1104, 27.7325, 0.66 ) }
    dend_84 { pt3dadd( 98.7062, -88.1278, 27.7535, 0.66 ) }
    dend_84 { pt3dadd( 99.5511, -88.3374, 27.9414, 0.81 ) }
    dend_84 { pt3dadd( 100.833, -88.6264, 28.0849, 0.81 ) }
    dend_84 { pt3dadd( 101.867, -88.8308, 28.1739, 0.59 ) }
    dend_84 { pt3dadd( 103.806, -89.1607, 28.2768, 0.59 ) }
    dend_84 { pt3dadd( 104.756, -89.3004, 28.2702, 0.59 ) }
    dend_84 { pt3dadd( 105.484, -89.3875, 28.2546, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_84 { pt3dadd( 106.152, -89.4267, 28.2177, 0.81 ) }
    dend_84 { pt3dadd( 106.54, -89.4356, 28.1808, 0.81 ) }
    dend_84 { pt3dadd( 106.619, -89.4348, 28.17, 0.81 ) }
    dend_84 { pt3dadd( 107.553, -89.4318, 28.0096, 0.29 ) }
    dend_84 { pt3dadd( 108.268, -89.4652, 27.8644, 0.29 ) }
    dend_84 { pt3dadd( 109.202, -89.5479, 27.6729, 1.03 ) }
    dend_84 { pt3dadd( 109.815, -89.6289, 27.5484, 1.33 ) }
    dend_84 { pt3dadd( 110.534, -89.7719, 27.3835, 1.33 ) }
    dend_84 { pt3dadd( 111.35, -89.9731, 27.1901, 0.96 ) }
    dend_84 { pt3dadd( 112.209, -90.2337, 26.9653, 0.74 ) }
    dend_84 { pt3dadd( 113.156, -90.5421, 26.6936, 0.74 ) }
    dend_84 { pt3dadd( 113.342, -90.6051, 26.6327, 0.74 ) }
    dend_84 { pt3dadd( 114.514, -90.9539, 26.2111, 0.52 ) }
    dend_84 { pt3dadd( 114.985, -91.084, 26.0214, 0.52 ) }
    dend_84 { pt3dadd( 115.642, -91.251, 25.7494, 0.74 ) }
    dend_84 { pt3dadd( 116.392, -91.4213, 25.4863, 0.74 ) }
    dend_84 { pt3dadd( 117.436, -91.6244, 25.1844, 0.96 ) }
    dend_84 { pt3dadd( 118.296, -91.7757, 24.9999, 0.96 ) }
    dend_84 { pt3dadd( 118.957, -91.8876, 24.9689, 0.96 ) }
    dend_84 { pt3dadd( 119.684, -92.0169, 25.0127, 0.96 ) }
    dend_84 { pt3dadd( 120.764, -92.2043, 25.1928, 0.66 ) }
    dend_84 { pt3dadd( 121.618, -92.3552, 25.4069, 0.88 ) }
    dend_84 { pt3dadd( 122.417, -92.5018, 25.6913, 0.88 ) }
    dend_84 { pt3dadd( 124.128, -92.8368, 26.3951, 0.88 ) }
    dend_84 { pt3dadd( 124.217, -92.8549, 26.4356, 0.88 ) }
    dend_84 { pt3dadd( 124.994, -93.0373, 26.8359, 0.88 ) }
    dend_84 { pt3dadd( 125.054, -93.0529, 26.8679, 0.88 ) }
    dend_84 { pt3dadd( 125.964, -93.2782, 27.3477, 1.03 ) }
    dend_84 { pt3dadd( 126.355, -93.3656, 27.5287, 1.03 ) }
    dend_84 { pt3dadd( 126.429, -93.3834, 27.5543, 1.03 ) }
    dend_84 { pt3dadd( 127.558, -93.7061, 27.9198, 0.59 ) }
    dend_84 { pt3dadd( 128.115, -93.8821, 28.0907, 0.59 ) }
    dend_84 { pt3dadd( 128.87, -94.105, 28.2825, 0.59 ) }
    dend_84 { pt3dadd( 129.365, -94.2454, 28.3832, 0.81 ) }
    dend_84 { pt3dadd( 130.331, -94.5049, 28.5604, 0.59 ) }
    dend_84 { pt3dadd( 131.093, -94.692, 28.6765, 0.44 ) }
    dend_84 { pt3dadd( 131.239, -94.7207, 28.6904, 0.44 ) }
    dend_84 { pt3dadd( 132.253, -94.8885, 28.7974, 0.44 ) }
    dend_84 { pt3dadd( 132.332, -94.8982, 28.8062, 0.44 ) }
    dend_84 { pt3dadd( 132.834, -94.9241, 28.8603, 0.52 ) }
    dend_84 { pt3dadd( 132.904, -94.92, 28.866, 0.52 ) }
    dend_84 { pt3dadd( 133.503, -94.8452, 28.9232, 0.52 ) }
    dend_84 { pt3dadd( 133.582, -94.835, 28.9312, 0.52 ) }
    dend_84 { pt3dadd( 134.087, -94.7866, 28.9801, 0.74 ) }
    dend_84 { pt3dadd( 134.166, -94.7849, 28.9934, 0.74 ) }
    dend_84 { pt3dadd( 135.029, -94.8223, 29.1612, 0.74 ) }
    dend_84 { pt3dadd( 135.712, -94.8782, 29.3085, 0.74 ) }
    dend_84 { pt3dadd( 135.78, -94.8875, 29.3238, 0.74 ) }
    dend_84 { pt3dadd( 136.453, -95.0142, 29.4446, 0.88 ) }
    dend_84 { pt3dadd( 137.699, -95.2968, 29.6202, 0.52 ) }
    dend_84 { pt3dadd( 138.633, -95.5377, 29.7249, 0.52 ) }
    dend_84 { pt3dadd( 138.775, -95.5823, 29.7358, 0.52 ) }
    dend_84 { pt3dadd( 139.491, -95.8265, 29.7573, 0.37 ) }
    dend_84 { pt3dadd( 140.379, -96.1276, 29.7493, 0.59 ) }
    dend_84 { pt3dadd( 140.953, -96.2824, 29.7132, 0.59 ) }
    dend_84 { pt3dadd( 141.099, -96.3121, 29.6938, 0.59 ) }
    dend_84 { pt3dadd( 141.668, -96.3717, 29.6305, 0.59 ) }
    dend_84 { pt3dadd( 142.246, -96.379, 29.5836, 0.44 ) }
    dend_84 { pt3dadd( 142.769, -96.3191, 29.5618, 0.22 ) }
    dend_84 { pt3dadd( 143.929, -96.1086, 29.4309, 0.22 ) }
    dend_84 { pt3dadd( 143.997, -96.0954, 29.418, 0.22 ) }
    dend_84 { pt3dadd( 144.797, -95.9302, 29.2239, 0.22 ) }
    dend_84 { pt3dadd( 145.012, -95.8753, 29.1603, 0.66 ) }
    dend_84 { pt3dadd( 145.742, -95.6617, 28.9177, 1.03 ) }
    dend_84 { pt3dadd( 147.055, -95.2543, 28.4393, 1.11 ) }
    dend_84 { pt3dadd( 147.666, -95.0812, 28.2054, 0.52 ) }
    dend_84 { pt3dadd( 147.73, -95.0654, 28.1822, 0.52 ) }
    dend_84 { pt3dadd( 148.306, -94.9399, 27.982, 0.52 ) }
    dend_84 { pt3dadd( 149.12, -94.8315, 27.7531, 0.29 ) }
    dend_84 { pt3dadd( 149.199, -94.8363, 27.742, 0.29 ) }
    dend_84 { pt3dadd( 149.634, -94.9365, 27.7574, 0.29 ) }
    dend_84 { pt3dadd( 150.094, -95.1737, 27.7194, 0.52 ) }
    dend_84 { pt3dadd( 150.158, -95.2203, 27.708, 0.52 ) }
    dend_84 { pt3dadd( 150.704, -95.6948, 27.5737, 0.52 ) }
    dend_84 { pt3dadd( 151.325, -96.2502, 27.4024, 0.66 ) }
    dend_84 { pt3dadd( 151.378, -96.2932, 27.3878, 0.66 ) }
    dend_84 { pt3dadd( 152.278, -96.932, 27.1631, 0.52 ) }
    dend_84 { pt3dadd( 152.336, -96.9686, 27.1496, 0.52 ) }
    dend_84 { pt3dadd( 153.259, -97.507, 26.994, 0.52 ) }
    dend_84 { pt3dadd( 153.779, -97.8006, 26.9436, 1.03 ) }
    dend_84 { pt3dadd( 154.17, -98.0332, 26.9298, 1.25 ) }
    dend_84 { pt3dadd( 155.036, -98.5753, 26.9488, 0.88 ) }
    dend_84 { pt3dadd( 155.095, -98.6133, 26.9537, 0.88 ) }
    dend_84 { pt3dadd( 155.774, -99.0872, 26.9529, 0.29 ) }
    dend_84 { pt3dadd( 156.849, -99.9014, 26.8725, 0.29 ) }
    dend_84 { pt3dadd( 157.542, -100.442, 26.7719, 0.29 ) }
    dend_84 { pt3dadd( 158.055, -100.841, 26.6723, 0.59 ) }
    dend_84 { pt3dadd( 158.11, -100.883, 26.6596, 0.59 ) }
    dend_84 { pt3dadd( 159.324, -101.829, 26.3425, 0.44 ) }
    dend_84 { pt3dadd( 159.385, -101.876, 26.3235, 0.44 ) }
    dend_84 { pt3dadd( 160.037, -102.388, 26.1241, 0.44 ) }
    dend_84 { pt3dadd( 160.625, -102.862, 25.9641, 0.37 ) }
    dend_84 { pt3dadd( 161.408, -103.534, 25.8028, 0.37 ) }
    dend_84 { pt3dadd( 161.723, -103.817, 25.7533, 0.96 ) }
    dend_84 { pt3dadd( 161.774, -103.864, 25.7495, 0.96 ) }
    dend_84 { pt3dadd( 162.405, -104.352, 25.6896, 0.96 ) }
    dend_84 { pt3dadd( 162.521, -104.427, 25.6689, 0.96 ) }
    dend_84 { pt3dadd( 163.105, -104.749, 25.5358, 0.96 ) }
    dend_84 { pt3dadd( 164.065, -105.237, 25.2945, 0.52 ) }
    dend_84 { pt3dadd( 164.816, -105.611, 25.1034, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_84 { pt3dadd( 166.173, -106.285, 24.7662, 0.44 ) }
    dend_84 { pt3dadd( 167.07, -106.701, 24.5359, 0.52 ) }
    dend_84 { pt3dadd( 167.395, -106.848, 24.4516, 0.52 ) }
    dend_84 { pt3dadd( 168.053, -107.125, 24.2807, 0.52 ) }
    dend_84 { pt3dadd( 168.623, -107.357, 24.1469, 0.66 ) }
    dend_84 { pt3dadd( 169.143, -107.619, 24.0044, 0.81 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 6/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 73.776, -84.3194, 20.3233, 0.88 ) }
    dend_79 { pt3dadd( 73.7814, -85.4318, 21.0312, 0.88 ) }
    dend_79 { pt3dadd( 73.7794, -85.4906, 21.0691, 0.88 ) }
    dend_79 { pt3dadd( 73.7836, -86.3265, 21.5382, 0.66 ) }
    dend_79 { pt3dadd( 73.9188, -87.7943, 22.2221, 0.96 ) }
    dend_79 { pt3dadd( 74.3181, -90.9443, 23.5633, 0.96 ) }
    dend_79 { pt3dadd( 74.6433, -92.4377, 24.1125, 0.66 ) }
    dend_79 { pt3dadd( 74.6646, -92.5105, 24.1379, 0.66 ) }
    dend_79 { pt3dadd( 75.3795, -94.2387, 24.8242, 0.66 ) }
    dend_79 { pt3dadd( 76.2474, -95.9562, 25.5396, 0.66 ) }
    dend_79 { pt3dadd( 76.2813, -96.0123, 25.5642, 0.66 ) }
    dend_79 { pt3dadd( 77.725, -98.0144, 26.372, 0.66 ) }
    dend_79 { pt3dadd( 77.8143, -98.1227, 26.425, 0.66 ) }
    dend_79 { pt3dadd( 79.7626, -100.374, 27.6781, 0.52 ) }
    dend_79 { pt3dadd( 80.5, -101.12, 28.2156, 0.52 ) }
    dend_79 { pt3dadd( 81.3414, -101.899, 28.8902, 1.11 ) }
    dend_79 { pt3dadd( 82.269, -102.629, 29.6103, 1.11 ) }
    dend_79 { pt3dadd( 82.3199, -102.658, 29.6482, 1.11 ) }
    dend_79 { pt3dadd( 83.0338, -102.967, 30.0709, 1.11 ) }
    dend_79 { pt3dadd( 84.3266, -103.237, 30.503, 0.81 ) }
    dend_79 { pt3dadd( 84.3832, -103.244, 30.5217, 0.81 ) }
    dend_79 { pt3dadd( 85.8173, -103.472, 30.9652, 0.52 ) }
    dend_79 { pt3dadd( 86.5284, -103.626, 31.2233, 0.52 ) }
    dend_79 { pt3dadd( 86.8333, -103.745, 31.3728, 0.52 ) }
    dend_79 { pt3dadd( 87.6693, -104.252, 31.9156, 0.52 ) }
    dend_79 { pt3dadd( 88.4182, -105.008, 32.5203, 0.88 ) }
    dend_79 { pt3dadd( 89.0405, -105.804, 33.1106, 0.88 ) }
    dend_79 { pt3dadd( 89.1114, -105.914, 33.1846, 0.88 ) }
    dend_79 { pt3dadd( 89.9622, -107.154, 33.9353, 0.88 ) }
    dend_79 { pt3dadd( 89.9956, -107.198, 33.9599, 0.88 ) }
    dend_79 { pt3dadd( 90.6365, -107.972, 34.3206, 0.59 ) }
    dend_79 { pt3dadd( 90.6897, -108.029, 34.3383, 0.59 ) }
    dend_79 { pt3dadd( 91.4166, -108.724, 34.5021, 0.59 ) }
    dend_79 { pt3dadd( 92.7592, -109.976, 34.5232, 0.59 ) }
    dend_79 { pt3dadd( 92.8693, -110.076, 34.5047, 0.59 ) }
    dend_79 { pt3dadd( 93.6467, -110.782, 34.3508, 0.81 ) }
    dend_79 { pt3dadd( 94.7035, -111.739, 34.0891, 0.88 ) }
    dend_79 { pt3dadd( 95.3297, -112.326, 33.9023, 0.88 ) }
    dend_79 { pt3dadd( 96.7153, -113.717, 33.3167, 0.96 ) }
    dend_79 { pt3dadd( 97.0152, -114.023, 33.123, 0.96 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 46/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 23.867, -179.867, 50.7686, 0.29 ) }
    dend_77 { pt3dadd( 23.4941, -180.66, 50.8009, 0.29 ) }
    dend_77 { pt3dadd( 22.9456, -181.575, 50.8852, 0.29 ) }
    dend_77 { pt3dadd( 22.4114, -182.388, 50.9763, 0.29 ) }
    dend_77 { pt3dadd( 22.3739, -182.447, 50.9859, 0.29 ) }
    dend_77 { pt3dadd( 21.8865, -183.256, 51.0932, 0.29 ) }
    dend_77 { pt3dadd( 21.454, -183.991, 51.1802, 0.29 ) }
    dend_77 { pt3dadd( 20.9055, -184.834, 51.3076, 0.29 ) }
    dend_77 { pt3dadd( 20.8685, -184.892, 51.3212, 0.29 ) }
    dend_77 { pt3dadd( 20.265, -185.859, 51.5641, 0.29 ) }
    dend_77 { pt3dadd( 19.7018, -186.86, 51.8119, 0.29 ) }
    dend_77 { pt3dadd( 19.6736, -186.922, 51.8269, 0.29 ) }
    dend_77 { pt3dadd( 19.3719, -187.702, 51.9903, 0.59 ) }
    dend_77 { pt3dadd( 19.0054, -188.725, 52.2566, 0.59 ) }
    dend_77 { pt3dadd( 13.7907, -197.258, 52.2455, 0.59 ) }
    dend_77 { pt3dadd( 8.40447, -205.494, 50.4696, 0.59 ) }
    dend_77 { pt3dadd( 4.98717, -214.89, 50.2617, 0.59 ) }
    dend_77 { pt3dadd( 3.72246, -224.726, 51.5475, 0.59 ) }
    dend_77 { pt3dadd( 0.0513508, -233.847, 53.374, 0.59 ) }
    dend_77 { pt3dadd( -4.17229, -242.841, 54.4968, 0.59 ) }
    dend_77 { pt3dadd( -7.09815, -252.311, 55.8218, 0.59 ) }
    dend_77 { pt3dadd( -10.4634, -261.726, 55.6355, 0.59 ) }
    dend_77 { pt3dadd( -12.6662, -271.32, 57.3982, 0.59 ) }
    dend_77 { pt3dadd( -13.4413, -280.976, 59.8815, 0.59 ) }
    dend_77 { pt3dadd( -13.207, -290.003, 64.1771, 0.59 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 71/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 23.867, -179.867, 50.7686, 0.29 ) }
    dend_76 { pt3dadd( 24.7699, -179.435, 50.7034, 0.29 ) }
    dend_76 { pt3dadd( 25.5733, -179.05, 50.6454, 0.29 ) }
    dend_76 { pt3dadd( 26.1333, -178.781, 50.605, 0.29 ) }
    dend_76 { pt3dadd( 26.5564, -178.579, 50.5744, 0.15 ) }
    dend_76 { pt3dadd( 26.6284, -178.544, 50.5692, 0.15 ) }
    dend_76 { pt3dadd( 27.4565, -178.147, 50.5094, 0.29 ) }
    dend_76 { pt3dadd( 35.925, -172.847, 50.952, 0.29 ) }
    dend_76 { pt3dadd( 44.5531, -167.805, 51.3082, 0.29 ) }
    dend_76 { pt3dadd( 52.0236, -161.433, 53.2022, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 81/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -15.7003, -345.74, 26.0172, 0.37 ) }
    dend_72 { pt3dadd( -15.0423, -346.442, 26.325, 0.37 ) }
    dend_72 { pt3dadd( -14.372, -347.167, 26.5031, 0.37 ) }
    dend_72 { pt3dadd( -14.1752, -347.384, 26.5402, 0.74 ) }
    dend_72 { pt3dadd( -13.309, -348.425, 26.5302, 0.44 ) }
    dend_72 { pt3dadd( -12.9177, -348.933, 26.4075, 0.44 ) }
    dend_72 { pt3dadd( -12.8707, -348.995, 26.3882, 0.44 ) }
    dend_72 { pt3dadd( -12.1292, -350.046, 26.0065, 0.44 ) }
    dend_72 { pt3dadd( -12.088, -350.11, 25.9809, 0.44 ) }
    dend_72 { pt3dadd( -11.2678, -351.423, 25.385, 0.15 ) }
    dend_72 { pt3dadd( -10.3335, -352.937, 24.6158, 0.15 ) }
    dend_72 { pt3dadd( -9.81128, -353.856, 24.1736, 0.15 ) }
    dend_72 { pt3dadd( -9.67273, -354.127, 24.0562, 0.59 ) }
    dend_72 { pt3dadd( -9.2772, -355.11, 23.7179, 0.59 ) }
    dend_72 { pt3dadd( -8.9229, -356.19, 23.4113, 0.15 ) }
    dend_72 { pt3dadd( -8.91157, -356.268, 23.3982, 0.15 ) }
    dend_72 { pt3dadd( -8.97467, -357.148, 23.3664, 0.74 ) }
    dend_72 { pt3dadd( -9.08193, -357.718, 23.367, 0.74 ) }
    dend_72 { pt3dadd( -9.45303, -358.946, 23.4067, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_72 { pt3dadd( -9.50789, -359.086, 23.4145, 0.15 ) }
    dend_72 { pt3dadd( -10.2123, -360.743, 23.5282, 0.15 ) }
    dend_72 { pt3dadd( -11.078, -362.733, 23.6535, 0.15 ) }
    dend_72 { pt3dadd( -11.1414, -362.868, 23.6613, 0.15 ) }
    dend_72 { pt3dadd( -12.1251, -364.903, 23.7719, 0.15 ) }
    dend_72 { pt3dadd( -12.8089, -366.28, 23.8367, 0.15 ) }
    dend_72 { pt3dadd( -13.6964, -368.075, 23.9134, 0.15 ) }
    dend_72 { pt3dadd( -13.7409, -368.164, 23.9163, 0.15 ) }
    dend_72 { pt3dadd( -14.1459, -368.972, 23.9163, 0.52 ) }
    dend_72 { pt3dadd( -14.3752, -378.918, 22.9066, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 10/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -15.7003, -345.74, 26.0172, 0.37 ) }
    dend_69 { pt3dadd( -16.2623, -346.359, 26.0059, 0.37 ) }
    dend_69 { pt3dadd( -17.1323, -347.473, 25.9871, 0.29 ) }
    dend_69 { pt3dadd( -17.1786, -347.538, 25.986, 0.29 ) }
    dend_69 { pt3dadd( -17.7742, -348.496, 25.972, 0.29 ) }
    dend_69 { pt3dadd( -17.8027, -348.549, 25.971, 0.29 ) }
    dend_69 { pt3dadd( -17.9234, -348.813, 25.9658, 0.59 ) }
    dend_69 { pt3dadd( -18.0528, -349.233, 25.9551, 0.88 ) }
    dend_69 { pt3dadd( -18.071, -349.301, 25.9537, 0.88 ) }
    dend_69 { pt3dadd( -18.2094, -349.718, 25.9461, 0.88 ) }
    dend_69 { pt3dadd( -18.3764, -350.135, 25.9405, 0.29 ) }
    dend_69 { pt3dadd( -18.9469, -351.434, 25.9199, 0.29 ) }
    dend_69 { pt3dadd( -19.0959, -351.75, 25.9156, 0.74 ) }
    dend_69 { pt3dadd( -19.5128, -352.593, 25.9106, 0.74 ) }
    dend_69 { pt3dadd( -19.6128, -352.789, 25.9107, 1.11 ) }
    dend_69 { pt3dadd( -19.6459, -352.851, 25.9111, 1.11 ) }
    dend_69 { pt3dadd( -20.0271, -353.588, 25.9199, 0.59 ) }
    dend_69 { pt3dadd( -20.4563, -354.594, 25.9322, 0.59 ) }
    dend_69 { pt3dadd( -20.6939, -355.267, 25.9761, 0.88 ) }
    dend_69 { pt3dadd( -20.9501, -356.09, 26.0574, 0.88 ) }
    dend_69 { pt3dadd( -21.1755, -356.836, 26.1467, 0.22 ) }
    dend_69 { pt3dadd( -21.3901, -357.527, 26.2443, 0.22 ) }
    dend_69 { pt3dadd( -21.8156, -358.723, 26.4468, 0.22 ) }
    dend_69 { pt3dadd( -22.3203, -359.844, 26.752, 0.74 ) }
    dend_69 { pt3dadd( -22.5434, -360.236, 26.9051, 0.96 ) }
    dend_69 { pt3dadd( -22.8208, -360.548, 27.1029, 0.44 ) }
    dend_69 { pt3dadd( -23.1657, -360.773, 27.3411, 0.22 ) }
    dend_69 { pt3dadd( -23.8455, -360.962, 27.7384, 0.22 ) }
    dend_69 { pt3dadd( -25.2407, -361.054, 28.4465, 0.22 ) }
    dend_69 { pt3dadd( -25.325, -361.048, 28.4836, 0.22 ) }
    dend_69 { pt3dadd( -26.3005, -360.94, 28.9156, 0.22 ) }
    dend_69 { pt3dadd( -26.373, -360.929, 28.9476, 0.22 ) }
    dend_69 { pt3dadd( -27.4418, -360.758, 29.3958, 0.22 ) }
    dend_69 { pt3dadd( -27.7377, -360.707, 29.5014, 0.44 ) }
    dend_69 { pt3dadd( -28.05, -360.645, 29.5739, 0.44 ) }
    dend_69 { pt3dadd( -29.2408, -360.348, 29.8049, 0.29 ) }
    dend_69 { pt3dadd( -29.298, -360.333, 29.814, 0.29 ) }
    dend_69 { pt3dadd( -29.7205, -360.205, 29.8743, 0.44 ) }
    dend_69 { pt3dadd( -30.5748, -359.876, 29.9809, 0.22 ) }
    dend_69 { pt3dadd( -31.6333, -359.416, 30.0814, 0.22 ) }
    dend_69 { pt3dadd( -32.3978, -359.042, 30.1263, 0.52 ) }
    dend_69 { pt3dadd( -32.8793, -358.801, 30.1282, 0.52 ) }
    dend_69 { pt3dadd( -33.0722, -358.718, 30.1282, 0.52 ) }
    dend_69 { pt3dadd( -33.7782, -358.455, 30.1282, 0.22 ) }
    dend_69 { pt3dadd( -34.4551, -358.272, 30.1609, 0.22 ) }
    dend_69 { pt3dadd( -34.5239, -358.26, 30.1676, 0.22 ) }
    dend_69 { pt3dadd( -35.7796, -358.208, 30.3312, 0.22 ) }
    dend_69 { pt3dadd( -36.4108, -358.22, 30.4248, 0.22 ) }
    dend_69 { pt3dadd( -36.4797, -358.227, 30.4358, 0.22 ) }
    dend_69 { pt3dadd( -37.3194, -358.344, 30.5775, 0.22 ) }
    dend_69 { pt3dadd( -37.485, -358.367, 30.6079, 0.22 ) }
    dend_69 { pt3dadd( -38.5776, -358.502, 30.8235, 0.22 ) }
    dend_69 { pt3dadd( -38.6554, -358.508, 30.8415, 0.22 ) }
    dend_69 { pt3dadd( -38.7237, -358.51, 30.8565, 0.74 ) }
    dend_69 { pt3dadd( -39.2905, -358.533, 30.9501, 0.74 ) }
    dend_69 { pt3dadd( -39.3604, -358.536, 30.9501, 0.74 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 66/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 176.2, -167.428, -94.4759, 0.66 ) }
    dend_61 { pt3dadd( 176.746, -168.426, -94.2248, 0.66 ) }
    dend_61 { pt3dadd( 177.313, -169.462, -93.9639, 0.29 ) }
    dend_61 { pt3dadd( 177.734, -170.231, -93.7703, 0.29 ) }
    dend_61 { pt3dadd( 178.273, -171.215, -93.5225, 0.29 ) }
    dend_61 { pt3dadd( 179.309, -173.107, -93.0461, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 72/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 176.2, -167.428, -94.4759, 1.03 ) }
    dend_60 { pt3dadd( 176.605, -167.154, -94.6217, 1.03 ) }
    dend_60 { pt3dadd( 177.664, -166.436, -95.0247, 0.37 ) }
    dend_60 { pt3dadd( 178.252, -166.047, -95.2501, 0.22 ) }
    dend_60 { pt3dadd( 179.059, -165.532, -95.5457, 0.44 ) }
    dend_60 { pt3dadd( 179.69, -165.192, -95.7603, 0.44 ) }
    dend_60 { pt3dadd( 179.742, -165.17, -95.7809, 0.44 ) }
    dend_60 { pt3dadd( 180.855, -164.779, -96.2878, 0.96 ) }
    dend_60 { pt3dadd( 180.999, -164.734, -96.3674, 0.96 ) }
    dend_60 { pt3dadd( 181.468, -164.629, -96.6625, 0.96 ) }
    dend_60 { pt3dadd( 182.593, -164.468, -97.415, 1.11 ) }
    dend_60 { pt3dadd( 183.82, -164.375, -98.2716, 0.37 ) }
    dend_60 { pt3dadd( 185.026, -164.358, -99.1376, 0.22 ) }
    dend_60 { pt3dadd( 186.012, -164.416, -99.8722, 0.22 ) }
    dend_60 { pt3dadd( 186.814, -164.539, -100.522, 0.22 ) }
    dend_60 { pt3dadd( 187.466, -164.764, -101.137, 1.18 ) }
    dend_60 { pt3dadd( 187.869, -164.974, -101.563, 0.59 ) }
    dend_60 { pt3dadd( 188.246, -165.321, -101.962, 0.29 ) }
    dend_60 { pt3dadd( 188.291, -165.407, -102.02, 0.29 ) }
    dend_60 { pt3dadd( 188.549, -166.422, -102.544, 0.29 ) }
    dend_60 { pt3dadd( 188.597, -167.191, -102.981, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 93/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -101.641, -232.93, -70.0719, 0.37 ) }
    dend_51 { pt3dadd( -102.216, -233.095, -70.2711, 0.37 ) }
    dend_51 { pt3dadd( -102.286, -233.113, -70.3038, 0.37 ) }
    dend_51 { pt3dadd( -103.42, -233.44, -70.859, 0.37 ) }
    dend_51 { pt3dadd( -104.119, -233.707, -71.2068, 0.88 ) }
    dend_51 { pt3dadd( -104.754, -234.008, -71.5266, 1.18 ) }
    dend_51 { pt3dadd( -105.586, -234.452, -71.946, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_51 { pt3dadd( -106.545, -235.08, -72.4642, 0.88 ) }
    dend_51 { pt3dadd( -107.012, -235.494, -72.7529, 0.44 ) }
    dend_51 { pt3dadd( -107.498, -236.236, -73.126, 0.44 ) }
    dend_51 { pt3dadd( -107.681, -236.691, -73.2808, 0.66 ) }
    dend_51 { pt3dadd( -107.717, -236.844, -73.3172, 0.66 ) }
    dend_51 { pt3dadd( -107.826, -237.705, -73.4694, 0.66 ) }
    dend_51 { pt3dadd( -107.899, -238.344, -73.5394, 0.22 ) }
    dend_51 { pt3dadd( -108.037, -239.301, -73.6639, 0.22 ) }
    dend_51 { pt3dadd( -108.06, -239.397, -73.6774, 0.37 ) }
    dend_51 { pt3dadd( -108.086, -239.472, -73.688, 0.37 ) }
    dend_51 { pt3dadd( -108.383, -240.131, -73.7726, 0.37 ) }
    dend_51 { pt3dadd( -108.799, -240.752, -73.8383, 0.81 ) }
    dend_51 { pt3dadd( -108.843, -240.806, -73.8451, 0.81 ) }
    dend_51 { pt3dadd( -109.336, -241.373, -73.9378, 0.81 ) }
    dend_51 { pt3dadd( -109.381, -241.425, -73.947, 0.81 ) }
    dend_51 { pt3dadd( -109.729, -241.822, -74.0203, 0.59 ) }
    dend_51 { pt3dadd( -110.185, -242.331, -74.1187, 0.96 ) }
    dend_51 { pt3dadd( -110.934, -243.176, -74.2625, 0.44 ) }
    dend_51 { pt3dadd( -111.305, -243.611, -74.3256, 0.88 ) }
    dend_51 { pt3dadd( -111.538, -243.888, -74.3596, 0.88 ) }
    dend_51 { pt3dadd( -111.583, -243.942, -74.3614, 0.88 ) }
    dend_51 { pt3dadd( -111.859, -244.272, -74.345, 0.22 ) }
    dend_51 { pt3dadd( -112.659, -245.129, -74.2346, 0.22 ) }
    dend_51 { pt3dadd( -113.138, -245.574, -74.1422, 0.88 ) }
    dend_51 { pt3dadd( -113.609, -245.982, -74.0524, 1.18 ) }
    dend_51 { pt3dadd( -114.343, -246.585, -73.9146, 0.74 ) }
    dend_51 { pt3dadd( -115.038, -247.149, -73.7877, 0.22 ) }
    dend_51 { pt3dadd( -115.707, -247.711, -73.6758, 0.22 ) }
    dend_51 { pt3dadd( -116.228, -248.152, -73.5708, 0.44 ) }
    dend_51 { pt3dadd( -116.651, -248.53, -73.4768, 0.44 ) }
    dend_51 { pt3dadd( -116.7, -248.579, -73.4653, 0.44 ) }
    dend_51 { pt3dadd( -117.069, -248.987, -73.3894, 0.29 ) }
    dend_51 { pt3dadd( -117.962, -250.063, -73.1821, 0.29 ) }
    dend_51 { pt3dadd( -118.39, -250.6, -73.0801, 0.81 ) }
    dend_51 { pt3dadd( -118.643, -250.877, -73.0302, 0.81 ) }
    dend_51 { pt3dadd( -119.063, -251.281, -72.9616, 0.81 ) }
    dend_51 { pt3dadd( -119.542, -251.674, -72.903, 0.29 ) }
    dend_51 { pt3dadd( -120.279, -252.176, -72.8695, 0.37 ) }
    dend_51 { pt3dadd( -120.622, -252.353, -72.8785, 0.37 ) }
    dend_51 { pt3dadd( -121.644, -252.829, -72.9517, 0.15 ) }
    dend_51 { pt3dadd( -121.935, -252.953, -72.9749, 0.96 ) }
    dend_51 { pt3dadd( -122.642, -253.232, -73.0305, 0.96 ) }
    dend_51 { pt3dadd( -123.369, -253.526, -73.0818, 0.22 ) }
    dend_51 { pt3dadd( -124.881, -254.137, -73.19, 0.22 ) }
    dend_51 { pt3dadd( -124.945, -254.165, -73.1953, 0.22 ) }
    dend_51 { pt3dadd( -125.332, -254.35, -73.2317, 0.59 ) }
    dend_51 { pt3dadd( -126.207, -254.793, -73.3159, 0.66 ) }
    dend_51 { pt3dadd( -127.437, -255.505, -73.4224, 0.66 ) }
    dend_51 { pt3dadd( -127.56, -255.59, -73.4302, 0.66 ) }
    dend_51 { pt3dadd( -127.958, -255.931, -73.4629, 1.11 ) }
    dend_51 { pt3dadd( -128.418, -256.324, -73.5293, 1.11 ) }
    dend_51 { pt3dadd( -128.523, -256.415, -73.5515, 1.11 ) }
    dend_51 { pt3dadd( -129.184, -256.879, -73.729, 0.66 ) }
    dend_51 { pt3dadd( -129.576, -257.032, -73.8577, 0.66 ) }
    dend_51 { pt3dadd( -129.641, -257.047, -73.879, 0.66 ) }
    dend_51 { pt3dadd( -130.629, -257.166, -74.172, 0.29 ) }
    dend_51 { pt3dadd( -130.73, -257.172, -74.2041, 0.29 ) }
    dend_51 { pt3dadd( -131.824, -257.225, -74.5458, 0.29 ) }
    dend_51 { pt3dadd( -132.702, -257.29, -74.811, 0.29 ) }
    dend_51 { pt3dadd( -132.769, -257.298, -74.8298, 0.29 ) }
    dend_51 { pt3dadd( -133.691, -257.508, -75.0525, 0.29 ) }
    dend_51 { pt3dadd( -134.145, -257.676, -75.1186, 0.66 ) }
    dend_51 { pt3dadd( -134.71, -257.937, -75.1639, 0.66 ) }
    dend_51 { pt3dadd( -135.399, -258.322, -75.1715, 0.81 ) }
    dend_51 { pt3dadd( -135.459, -258.357, -75.1696, 0.81 ) }
    dend_51 { pt3dadd( -136.263, -258.83, -75.1392, 0.81 ) }
    dend_51 { pt3dadd( -136.921, -259.225, -75.1076, 0.15 ) }
    dend_51 { pt3dadd( -137.818, -259.752, -75.1155, 0.15 ) }
    dend_51 { pt3dadd( -138.719, -260.271, -75.1826, 0.22 ) }
    dend_51 { pt3dadd( -139.341, -260.629, -75.2595, 0.81 ) }
    dend_51 { pt3dadd( -139.702, -260.84, -75.3184, 0.96 ) }
    dend_51 { pt3dadd( -140.333, -261.198, -75.4428, 0.96 ) }
    dend_51 { pt3dadd( -141.325, -261.747, -75.654, 0.22 ) }
    dend_51 { pt3dadd( -142.41, -262.316, -75.9025, 0.22 ) }
    dend_51 { pt3dadd( -142.792, -262.492, -75.9894, 1.03 ) }
    dend_51 { pt3dadd( -143.33, -262.718, -76.1017, 1.03 ) }
    dend_51 { pt3dadd( -144.281, -263.091, -76.311, 0.22 ) }
    dend_51 { pt3dadd( -145.407, -263.533, -76.5548, 0.22 ) }
    dend_51 { pt3dadd( -146.155, -263.821, -76.6928, 0.66 ) }
    dend_51 { pt3dadd( -146.422, -263.913, -76.759, 0.81 ) }
    dend_51 { pt3dadd( -146.915, -264.056, -76.9, 0.81 ) }
    dend_51 { pt3dadd( -147.785, -264.231, -77.2891, 0.44 ) }
    dend_51 { pt3dadd( -148.394, -264.339, -77.6087, 0.44 ) }
    dend_51 { pt3dadd( -149.284, -264.454, -78.134, 0.37 ) }
    dend_51 { pt3dadd( -150.15, -264.523, -78.6562, 0.96 ) }
    dend_51 { pt3dadd( -150.937, -264.522, -79.1683, 0.96 ) }
    dend_51 { pt3dadd( -152.589, -264.267, -80.3415, 1.18 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 87/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -101.641, -232.93, -70.0719, 0.52 ) }
    dend_50 { pt3dadd( -101.286, -233.644, -70.3188, 0.52 ) }
    dend_50 { pt3dadd( -100.616, -234.99, -70.785, 0.52 ) }
    dend_50 { pt3dadd( -99.5542, -237.125, -71.5239, 0.37 ) }
    dend_50 { pt3dadd( -99.203, -237.831, -71.7682, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 92/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -116.594, -309.456, -75.6163, 0.74 ) }
    dend_48 { pt3dadd( -117.037, -309.905, -75.7744, 0.74 ) }
    dend_48 { pt3dadd( -118.46, -311.14, -76.0939, 0.22 ) }
    dend_48 { pt3dadd( -118.943, -311.555, -76.1799, 0.74 ) }
    dend_48 { pt3dadd( -119.553, -312.124, -76.2711, 0.74 ) }
    dend_48 { pt3dadd( -119.602, -312.173, -76.2752, 0.74 ) }
    dend_48 { pt3dadd( -119.92, -312.508, -76.2618, 0.22 ) }
    dend_48 { pt3dadd( -121.007, -314.025, -75.9845, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_48 { pt3dadd( -121.236, -314.419, -75.8943, 0.88 ) }
    dend_48 { pt3dadd( -121.654, -315.278, -75.6996, 0.88 ) }
    dend_48 { pt3dadd( -121.963, -316.012, -75.5453, 1.03 ) }
    dend_48 { pt3dadd( -122.403, -317.121, -75.3291, 0.22 ) }
    dend_48 { pt3dadd( -123.835, -321.024, -74.6367, 0.22 ) }
    dend_48 { pt3dadd( -123.976, -321.428, -74.573, 0.44 ) }
    dend_48 { pt3dadd( -124.504, -322.828, -74.3981, 0.22 ) }
    dend_48 { pt3dadd( -124.703, -323.314, -74.3553, 0.37 ) }
    dend_48 { pt3dadd( -124.987, -323.984, -74.327, 0.22 ) }
    dend_48 { pt3dadd( -125.351, -324.787, -74.3363, 0.22 ) }
    dend_48 { pt3dadd( -125.993, -326.001, -74.3464, 0.22 ) }
    dend_48 { pt3dadd( -126.782, -327.377, -74.3464, 0.22 ) }
    dend_48 { pt3dadd( -127.03, -327.777, -74.3464, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -116.594, -309.456, -75.6163, 0.22 ) }
    dend_47 { pt3dadd( -115.632, -310.445, -75.6057, 0.22 ) }
    dend_47 { pt3dadd( -113.597, -312.523, -75.5853, 0.22 ) }
    dend_47 { pt3dadd( -113.541, -312.58, -75.583, 0.22 ) }
    dend_47 { pt3dadd( -111.471, -314.658, -75.498, 0.22 ) }
    dend_47 { pt3dadd( -111.372, -314.757, -75.4939, 0.44 ) }
    dend_47 { pt3dadd( -110.138, -315.996, -75.4432, 0.22 ) }
    dend_47 { pt3dadd( -110.09, -316.048, -75.4407, 0.22 ) }
    dend_47 { pt3dadd( -109.527, -316.644, -75.4034, 0.52 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 22/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -229.894, 193.069, -63.546, 0.74 ) }
    dend_10 { pt3dadd( -234.556, 200.34, -68.5859, 0.74 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 24/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -229.894, 193.069, -63.546, 0.81 ) }
    dend_9 { pt3dadd( -225.262, 185.668, -58.6714, 0.74 ) }
    // Section: dend_86, id: dend_86, parent: dend_84 (entry count 26/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 169.143, -107.619, 24.0044, 0.96 ) }
    dend_86 { pt3dadd( 169.761, -107.679, 24.0275, 0.96 ) }
    dend_86 { pt3dadd( 170.452, -107.727, 24.0951, 0.96 ) }
    dend_86 { pt3dadd( 170.531, -107.735, 24.1048, 0.96 ) }
    dend_86 { pt3dadd( 171.182, -107.8, 24.1916, 0.22 ) }
    dend_86 { pt3dadd( 171.923, -107.903, 24.2891, 0.22 ) }
    dend_86 { pt3dadd( 172.405, -107.983, 24.3479, 0.22 ) }
    dend_86 { pt3dadd( 172.887, -108.071, 24.3868, 0.66 ) }
    dend_86 { pt3dadd( 173.698, -108.23, 24.4277, 0.66 ) }
    dend_86 { pt3dadd( 173.777, -108.246, 24.4296, 0.66 ) }
    dend_86 { pt3dadd( 174.61, -108.425, 24.4037, 0.81 ) }
    dend_86 { pt3dadd( 175.347, -108.579, 24.3488, 1.11 ) }
    dend_86 { pt3dadd( 176.133, -108.733, 24.2673, 0.66 ) }
    dend_86 { pt3dadd( 177.006, -108.871, 24.139, 0.44 ) }
    dend_86 { pt3dadd( 177.658, -108.93, 24.0337, 0.44 ) }
    dend_86 { pt3dadd( 178.445, -108.972, 23.8687, 0.44 ) }
    dend_86 { pt3dadd( 179.303, -108.976, 23.6572, 0.44 ) }
    dend_86 { pt3dadd( 180.008, -108.955, 23.4333, 0.74 ) }
    dend_86 { pt3dadd( 180.734, -108.934, 23.1737, 0.96 ) }
    dend_86 { pt3dadd( 181.415, -108.932, 22.9152, 1.18 ) }
    dend_86 { pt3dadd( 182.435, -108.976, 22.5742, 0.52 ) }
    dend_86 { pt3dadd( 183.355, -109.094, 22.3252, 0.52 ) }
    dend_86 { pt3dadd( 184.461, -109.357, 22.0769, 0.52 ) }
    dend_86 { pt3dadd( 185.356, -109.66, 21.9262, 0.52 ) }
    dend_86 { pt3dadd( 186.345, -110.121, 21.8358, 0.52 ) }
    dend_86 { pt3dadd( 187.36, -110.717, 21.8144, 0.74 ) }
    dend_86 { pt3dadd( 188.182, -111.273, 21.8821, 0.74 ) }
    dend_86 { pt3dadd( 188.766, -111.755, 21.9469, 0.37 ) }
    dend_86 { pt3dadd( 188.813, -111.806, 21.9462, 0.37 ) }
    dend_86 { pt3dadd( 189.161, -112.342, 21.6899, 0.59 ) }
    dend_86 { pt3dadd( 189.15, -112.482, 21.3542, 0.59 ) }
    dend_86 { pt3dadd( 189.146, -112.506, 21.278, 0.59 ) }
    dend_86 { pt3dadd( 189.119, -112.734, 20.4334, 0.88 ) }
    dend_86 { pt3dadd( 189.123, -113.334, 18.31, 0.88 ) }
    dend_86 { pt3dadd( 189.186, -113.741, 16.992, 1.18 ) }
    dend_86 { pt3dadd( 189.536, -114.973, 13.1544, 1.47 ) }
    dend_86 { pt3dadd( 189.878, -115.861, 10.5009, 0.66 ) }
    dend_86 { pt3dadd( 190.179, -116.408, 8.90926, 0.52 ) }
    dend_86 { pt3dadd( 190.566, -116.921, 7.45473, 0.52 ) }
    dend_86 { pt3dadd( 191.098, -117.41, 6.20893, 0.52 ) }
    dend_86 { pt3dadd( 191.525, -117.718, 5.57553, 0.52 ) }
    dend_86 { pt3dadd( 191.584, -117.748, 5.53118, 0.52 ) }
    dend_86 { pt3dadd( 192.526, -118.022, 5.09601, 0.52 ) }
    dend_86 { pt3dadd( 192.592, -118.029, 5.0746, 0.52 ) }
    dend_86 { pt3dadd( 193.367, -117.998, 4.86411, 0.52 ) }
    dend_86 { pt3dadd( 193.981, -117.956, 4.7168, 0.74 ) }
    dend_86 { pt3dadd( 194.693, -117.955, 4.55342, 0.74 ) }
    dend_86 { pt3dadd( 195.484, -118.034, 4.37415, 0.29 ) }
    dend_86 { pt3dadd( 196.489, -118.272, 4.1675, 0.29 ) }
    dend_86 { pt3dadd( 197.142, -118.475, 4.04001, 0.74 ) }
    dend_86 { pt3dadd( 197.804, -118.737, 3.92579, 0.74 ) }
    dend_86 { pt3dadd( 198.243, -118.954, 3.84523, 0.74 ) }
    dend_86 { pt3dadd( 199.347, -119.633, 3.6398, 0.29 ) }
    dend_86 { pt3dadd( 200.39, -120.405, 3.45847, 0.29 ) }
    dend_86 { pt3dadd( 200.682, -120.654, 3.41093, 0.74 ) }
    dend_86 { pt3dadd( 201.14, -121.08, 3.34546, 0.74 ) }
    dend_86 { pt3dadd( 201.354, -121.287, 3.3234, 0.74 ) }
    dend_86 { pt3dadd( 202.073, -121.957, 3.29054, 0.37 ) }
    dend_86 { pt3dadd( 202.632, -122.424, 3.31031, 0.66 ) }
    dend_86 { pt3dadd( 203.131, -122.76, 3.33826, 1.03 ) }
    dend_86 { pt3dadd( 203.219, -122.819, 3.33753, 1.03 ) }
    dend_86 { pt3dadd( 203.884, -123.301, 3.28913, 1.03 ) }
    dend_86 { pt3dadd( 204.406, -123.705, 3.21708, 0.44 ) }
    dend_86 { pt3dadd( 205.318, -124.447, 3.03173, 0.44 ) }
    dend_86 { pt3dadd( 206.097, -125.124, 2.83319, 0.81 ) }
    dend_86 { pt3dadd( 207.134, -126.086, 2.51949, 0.37 ) }
    dend_86 { pt3dadd( 207.935, -126.885, 2.2134, 0.37 ) }
    dend_86 { pt3dadd( 208.145, -127.111, 2.11743, 0.22 ) }
    dend_86 { pt3dadd( 208.248, -127.221, 2.05081, 0.22 ) }
    dend_86 { pt3dadd( 208.914, -127.869, 1.54831, 0.22 ) }
    dend_86 { pt3dadd( 208.961, -127.906, 1.51278, 0.22 ) }
    dend_86 { pt3dadd( 209.641, -128.323, 1.05971, 1.11 ) }
    dend_86 { pt3dadd( 210.335, -128.736, 0.615064, 1.11 ) }
    dend_86 { pt3dadd( 211.828, -129.676, -0.178193, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_86 { pt3dadd( 212.186, -129.925, -0.329418, 0.52 ) }
    dend_86 { pt3dadd( 212.505, -130.175, -0.428036, 0.52 ) }
    dend_86 { pt3dadd( 212.864, -130.472, -0.482703, 0.52 ) }
    dend_86 { pt3dadd( 213.646, -131.167, -0.456151, 0.22 ) }
    dend_86 { pt3dadd( 214.571, -132.017, -0.284398, 0.88 ) }
    dend_86 { pt3dadd( 215.17, -132.572, -0.0874486, 1.03 ) }
    dend_86 { pt3dadd( 215.476, -132.846, 0.00694085, 1.03 ) }
    dend_86 { pt3dadd( 215.906, -133.211, 0.0805615, 0.44 ) }
    dend_86 { pt3dadd( 215.968, -133.261, 0.0843775, 0.44 ) }
    dend_86 { pt3dadd( 216.731, -133.782, 0.00928706, 0.44 ) }
    dend_86 { pt3dadd( 217.417, -134.213, -0.155098, 0.29 ) }
    dend_86 { pt3dadd( 217.478, -134.243, -0.17118, 0.29 ) }
    dend_86 { pt3dadd( 219.093, -134.857, -0.597605, 0.29 ) }
    dend_86 { pt3dadd( 219.157, -134.878, -0.617429, 0.29 ) }
    dend_86 { pt3dadd( 220.187, -135.198, -0.989545, 0.29 ) }
    dend_86 { pt3dadd( 220.25, -135.216, -1.01528, 0.29 ) }
    dend_86 { pt3dadd( 221.142, -135.434, -1.4014, 0.59 ) }
    dend_86 { pt3dadd( 221.735, -135.579, -1.64999, 0.59 ) }
    dend_86 { pt3dadd( 222.549, -135.801, -1.98132, 0.22 ) }
    dend_86 { pt3dadd( 223.475, -136.161, -2.36452, 0.22 ) }
    dend_86 { pt3dadd( 223.475, -136.161, -2.36452, 0.44 ) }
    dend_86 { pt3dadd( 223.531, -136.193, -2.3909, 0.44 ) }
    dend_86 { pt3dadd( 224.021, -136.545, -2.65188, 0.44 ) }
    dend_86 { pt3dadd( 224.815, -137.158, -3.0651, 0.44 ) }
    dend_86 { pt3dadd( 225.324, -137.516, -3.25101, 0.44 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 25/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 169.143, -107.619, 24.0044, 0.29 ) }
    dend_85 { pt3dadd( 169.783, -108.808, 23.7463, 0.29 ) }
    dend_85 { pt3dadd( 170.206, -109.446, 23.5719, 0.15 ) }
    dend_85 { pt3dadd( 170.492, -109.879, 23.4536, 0.29 ) }
    dend_85 { pt3dadd( 170.895, -110.486, 23.2878, 0.29 ) }
    dend_85 { pt3dadd( 171.358, -111.185, 23.0968, 0.29 ) }
    dend_85 { pt3dadd( 171.401, -111.25, 23.079, 0.29 ) }
    dend_85 { pt3dadd( 171.988, -111.838, 22.8899, 0.81 ) }
    dend_85 { pt3dadd( 177.919, -119.71, 21.2006, 0.81 ) }
    dend_85 { pt3dadd( 184.222, -127.296, 19.5473, 0.81 ) }
    dend_85 { pt3dadd( 191.391, -134.265, 19.345, 0.81 ) }
    dend_85 { pt3dadd( 198.59, -141.198, 19.6738, 0.81 ) }
    dend_85 { pt3dadd( 205.488, -148.437, 19.7194, 0.81 ) }
    dend_85 { pt3dadd( 212.622, -155.368, 18.6807, 0.81 ) }
    dend_85 { pt3dadd( 219.851, -162.244, 19.3654, 0.81 ) }
    dend_85 { pt3dadd( 228.096, -167.882, 19.8416, 0.81 ) }
    dend_85 { pt3dadd( 236.736, -172.756, 21.0986, 0.81 ) }
    // Section: dend_83, id: dend_83, parent: dend_79 (entry count 42/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 97.0152, -114.023, 33.123, 0.22 ) }
    dend_83 { pt3dadd( 98.1731, -114.223, 33.4028, 0.22 ) }
    dend_83 { pt3dadd( 98.8401, -114.421, 34.1117, 0.22 ) }
    dend_83 { pt3dadd( 98.8806, -114.44, 34.1652, 0.22 ) }
    dend_83 { pt3dadd( 99.44, -114.785, 34.8838, 0.22 ) }
    dend_83 { pt3dadd( 100.144, -115.28, 35.7974, 0.74 ) }
    dend_83 { pt3dadd( 100.508, -115.56, 36.2547, 0.74 ) }
    dend_83 { pt3dadd( 101.995, -116.888, 38.3463, 0.29 ) }
    dend_83 { pt3dadd( 102.412, -117.324, 38.9301, 0.29 ) }
    dend_83 { pt3dadd( 102.942, -117.952, 39.5749, 0.29 ) }
    dend_83 { pt3dadd( 103.074, -118.131, 39.7115, 0.66 ) }
    dend_83 { pt3dadd( 103.436, -118.59, 39.9232, 0.96 ) }
    dend_83 { pt3dadd( 103.787, -118.972, 40.0193, 0.96 ) }
    dend_83 { pt3dadd( 104.401, -119.537, 40.0363, 0.96 ) }
    dend_83 { pt3dadd( 105.153, -120.156, 40.0646, 0.22 ) }
    dend_83 { pt3dadd( 105.241, -120.227, 40.0708, 0.22 ) }
    dend_83 { pt3dadd( 106.198, -121.026, 40.1578, 0.22 ) }
    dend_83 { pt3dadd( 107.059, -121.85, 40.2564, 0.22 ) }
    dend_83 { pt3dadd( 108.131, -123.091, 40.5422, 0.22 ) }
    dend_83 { pt3dadd( 108.173, -123.156, 40.562, 0.22 ) }
    dend_83 { pt3dadd( 108.528, -123.929, 40.9044, 0.81 ) }
    dend_83 { pt3dadd( 108.806, -124.682, 41.2921, 0.81 ) }
    dend_83 { pt3dadd( 109.109, -125.724, 41.8923, 0.81 ) }
    dend_83 { pt3dadd( 109.497, -127.324, 42.8983, 0.96 ) }
    dend_83 { pt3dadd( 109.8, -128.483, 43.6958, 0.96 ) }
    dend_83 { pt3dadd( 110.344, -129.922, 44.743, 0.22 ) }
    dend_83 { pt3dadd( 110.753, -130.686, 45.3522, 0.22 ) }
    dend_83 { pt3dadd( 110.975, -130.903, 45.5535, 0.52 ) }
    dend_83 { pt3dadd( 111.06, -130.943, 45.603, 0.52 ) }
    dend_83 { pt3dadd( 111.873, -131.154, 45.904, 0.52 ) }
    dend_83 { pt3dadd( 112.921, -131.337, 46.2309, 0.52 ) }
    dend_83 { pt3dadd( 113.055, -131.361, 46.2619, 0.52 ) }
    dend_83 { pt3dadd( 114.111, -131.613, 46.5016, 0.52 ) }
    dend_83 { pt3dadd( 115.5, -132.034, 46.7984, 0.52 ) }
    dend_83 { pt3dadd( 116.201, -132.3, 46.9186, 0.81 ) }
    dend_83 { pt3dadd( 116.941, -132.658, 47.0108, 0.81 ) }
    dend_83 { pt3dadd( 118.133, -133.322, 47.1121, 0.81 ) }
    dend_83 { pt3dadd( 119.442, -134.125, 47.1635, 0.81 ) }
    dend_83 { pt3dadd( 119.974, -134.496, 47.1527, 0.81 ) }
    dend_83 { pt3dadd( 120.84, -135.157, 47.0735, 0.59 ) }
    dend_83 { pt3dadd( 122.123, -136.224, 46.9439, 0.59 ) }
    dend_83 { pt3dadd( 122.231, -136.327, 46.9328, 0.59 ) }
    dend_83 { pt3dadd( 122.751, -136.894, 46.86, 0.66 ) }
    dend_83 { pt3dadd( 123.25, -137.495, 46.7537, 0.66 ) }
    dend_83 { pt3dadd( 124.072, -138.566, 46.5408, 0.66 ) }
    dend_83 { pt3dadd( 124.129, -138.644, 46.5214, 0.66 ) }
    dend_83 { pt3dadd( 124.918, -139.754, 46.1765, 0.66 ) }
    dend_83 { pt3dadd( 125.534, -140.565, 45.8954, 0.66 ) }
    dend_83 { pt3dadd( 126.184, -141.337, 45.5945, 0.59 ) }
    dend_83 { pt3dadd( 126.664, -141.837, 45.3831, 0.52 ) }
    dend_83 { pt3dadd( 127.366, -142.492, 45.0924, 0.74 ) }
    dend_83 { pt3dadd( 127.989, -142.999, 44.8683, 0.74 ) }
    dend_83 { pt3dadd( 128.595, -143.39, 44.7007, 0.74 ) }
    dend_83 { pt3dadd( 129.386, -143.812, 44.5641, 0.52 ) }
    dend_83 { pt3dadd( 130.117, -144.127, 44.4987, 0.52 ) }
    dend_83 { pt3dadd( 130.42, -144.236, 44.4855, 0.81 ) }
    dend_83 { pt3dadd( 130.495, -144.263, 44.4888, 0.81 ) }
    dend_83 { pt3dadd( 131.342, -144.58, 44.5514, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_83 { pt3dadd( 131.414, -144.612, 44.5652, 0.81 ) }
    dend_83 { pt3dadd( 132.483, -145.181, 44.868, 0.81 ) }
    dend_83 { pt3dadd( 133.79, -145.997, 45.3304, 0.81 ) }
    dend_83 { pt3dadd( 134.784, -146.681, 45.7193, 0.59 ) }
    dend_83 { pt3dadd( 134.836, -146.722, 45.7418, 0.59 ) }
    dend_83 { pt3dadd( 136.054, -147.817, 46.3416, 0.29 ) }
    dend_83 { pt3dadd( 136.972, -148.829, 46.836, 0.29 ) }
    dend_83 { pt3dadd( 137.319, -149.33, 47.0448, 0.59 ) }
    dend_83 { pt3dadd( 137.642, -149.941, 47.2498, 0.96 ) }
    dend_83 { pt3dadd( 137.882, -150.501, 47.367, 0.96 ) }
    dend_83 { pt3dadd( 137.906, -150.565, 47.3774, 0.96 ) }
    dend_83 { pt3dadd( 138.409, -151.959, 47.4981, 0.81 ) }
    dend_83 { pt3dadd( 138.672, -152.737, 47.5817, 0.52 ) }
    dend_83 { pt3dadd( 138.699, -152.802, 47.5895, 0.52 ) }
    dend_83 { pt3dadd( 139.218, -153.938, 47.7461, 0.52 ) }
    dend_83 { pt3dadd( 139.668, -154.71, 47.8859, 0.66 ) }
    dend_83 { pt3dadd( 140.348, -155.609, 48.089, 0.29 ) }
    dend_83 { pt3dadd( 140.405, -155.663, 48.1042, 0.29 ) }
    dend_83 { pt3dadd( 141.003, -156.192, 48.2422, 0.29 ) }
    dend_83 { pt3dadd( 141.052, -156.24, 48.2523, 0.29 ) }
    dend_83 { pt3dadd( 141.61, -156.825, 48.3512, 0.44 ) }
    dend_83 { pt3dadd( 142.129, -157.547, 48.4246, 0.44 ) }
    dend_83 { pt3dadd( 142.527, -158.338, 48.4923, 0.29 ) }
    dend_83 { pt3dadd( 142.917, -159.454, 48.5665, 0.29 ) }
    dend_83 { pt3dadd( 143.195, -160.875, 48.6382, 0.29 ) }
    dend_83 { pt3dadd( 143.203, -160.944, 48.6406, 0.29 ) }
    dend_83 { pt3dadd( 143.248, -161.906, 48.6538, 0.29 ) }
    dend_83 { pt3dadd( 143.236, -162.196, 48.6585, 0.59 ) }
    dend_83 { pt3dadd( 143.203, -162.789, 48.6688, 0.59 ) }
    dend_83 { pt3dadd( 143.156, -163.663, 48.6834, 0.22 ) }
    dend_83 { pt3dadd( 143.152, -164.32, 48.6928, 0.22 ) }
    dend_83 { pt3dadd( 143.164, -164.95, 48.7018, 0.22 ) }
    dend_83 { pt3dadd( 143.252, -166.423, 48.7228, 0.22 ) }
    dend_83 { pt3dadd( 143.342, -168.063, 48.744, 0.22 ) }
    dend_83 { pt3dadd( 149.376, -175.615, 51.3032, 0.22 ) }
    dend_83 { pt3dadd( 155.023, -183.045, 54.896, 0.22 ) }
    dend_83 { pt3dadd( 159.935, -190.957, 58.5383, 0.22 ) }
    dend_83 { pt3dadd( 164.254, -199.534, 61.3309, 0.22 ) }
    dend_83 { pt3dadd( 169.992, -207.29, 63.9593, 0.22 ) }
    dend_83 { pt3dadd( 174.656, -216.098, 64.7708, 0.22 ) }
    dend_83 { pt3dadd( 179.754, -224.662, 63.9487, 0.22 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 41/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 97.0152, -114.023, 33.123, 0.22 ) }
    dend_80 { pt3dadd( 97.3716, -114.948, 32.7894, 0.22 ) }
    dend_80 { pt3dadd( 97.764, -115.966, 32.422, 0.22 ) }
    dend_80 { pt3dadd( 98.0219, -116.635, 32.1806, 0.22 ) }
    dend_80 { pt3dadd( 102.091, -124.872, 28.2324, 0.22 ) }
    dend_80 { pt3dadd( 108.038, -132.217, 24.9647, 0.22 ) }
    dend_80 { pt3dadd( 114.406, -139.669, 22.9832, 0.22 ) }
    dend_80 { pt3dadd( 122.108, -145.269, 19.9317, 0.22 ) }
    dend_80 { pt3dadd( 129.799, -151.527, 18.6353, 0.22 ) }
    dend_80 { pt3dadd( 138.03, -157.141, 17.7795, 0.22 ) }
    dend_80 { pt3dadd( 145.331, -163.953, 18.3339, 0.22 ) }
    dend_80 { pt3dadd( 153.282, -169.987, 18.9338, 0.22 ) }
    dend_80 { pt3dadd( 160.974, -176.177, 20.526, 0.22 ) }
    dend_80 { pt3dadd( 168.586, -182.021, 23.3355, 0.22 ) }
    dend_80 { pt3dadd( 175.083, -189.057, 26.2149, 0.22 ) }
    dend_80 { pt3dadd( 180.486, -197.132, 28.5819, 0.22 ) }
    dend_80 { pt3dadd( 186.89, -203.993, 32.0335, 0.22 ) }
    dend_80 { pt3dadd( 193.082, -211.283, 34.9508, 0.22 ) }
    dend_80 { pt3dadd( 199.279, -219.024, 36.2434, 0.22 ) }
    dend_80 { pt3dadd( 204.659, -227.4, 37.1968, 0.22 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 61/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -39.3604, -358.536, 30.9501, 0.22 ) }
    dend_71 { pt3dadd( -40.7082, -359.087, 31.8427, 0.22 ) }
    dend_71 { pt3dadd( -41.4586, -359.393, 32.3396, 0.22 ) }
    dend_71 { pt3dadd( -41.8326, -359.546, 32.5873, 0.59 ) }
    dend_71 { pt3dadd( -48.5411, -363.245, 39.0148, 0.59 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 66/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -39.3604, -358.536, 30.9501, 0.22 ) }
    dend_70 { pt3dadd( -40.2863, -358.413, 30.9334, 0.22 ) }
    dend_70 { pt3dadd( -40.3656, -358.402, 30.932, 0.22 ) }
    dend_70 { pt3dadd( -41.9966, -358.184, 30.9026, 0.22 ) }
    dend_70 { pt3dadd( -42.7994, -358.077, 30.8881, 0.22 ) }
    dend_70 { pt3dadd( -43.6021, -357.97, 30.8737, 0.22 ) }
    dend_70 { pt3dadd( -53.5571, -357.597, 30.0018, 0.22 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 73/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -152.589, -264.267, -80.3415, 0.15 ) }
    dend_53 { pt3dadd( -153.393, -264.895, -80.1926, 0.15 ) }
    dend_53 { pt3dadd( -154.409, -265.688, -80.0046, 0.15 ) }
    dend_53 { pt3dadd( -155.075, -266.208, -79.8814, 1.03 ) }
    dend_53 { pt3dadd( -155.486, -266.529, -79.8053, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 78/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -152.589, -264.267, -80.3415, 0.66 ) }
    dend_52 { pt3dadd( -154.133, -264.123, -80.5337, 0.66 ) }
    dend_52 { pt3dadd( -155.759, -263.972, -80.7361, 0.15 ) }
    // Section: dend_90, id: dend_90, parent: dend_86 (entry count 81/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 225.324, -137.516, -3.25101, 0.22 ) }
    dend_90 { pt3dadd( 226.035, -138.497, -2.28078, 0.22 ) }
    dend_90 { pt3dadd( 226.275, -138.828, -1.95372, 0.22 ) }
    dend_90 { pt3dadd( 226.307, -138.872, -1.90996, 0.22 ) }
    dend_90 { pt3dadd( 229.21, -146.856, 3.36547, 0.22 ) }
    dend_90 { pt3dadd( 231.621, -155.945, 6.76802, 0.22 ) }
    dend_90 { pt3dadd( 235.383, -164.727, 9.72346, 0.22 ) }
    dend_90 { pt3dadd( 239.184, -173.402, 12.9321, 0.22 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 89/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 225.324, -137.516, -3.25101, 0.44 ) }
    dend_87 { pt3dadd( 225.557, -137.467, -3.37068, 0.44 ) }
    dend_87 { pt3dadd( 225.784, -137.418, -3.48789, 0.44 ) }
    dend_87 { pt3dadd( 225.995, -137.374, -3.59594, 0.44 ) }
    dend_87 { pt3dadd( 227.052, -137.149, -4.13993, 0.15 ) }
    dend_87 { pt3dadd( 227.254, -137.106, -4.2437, 0.66 ) }
    dend_87 { pt3dadd( 235.25, -133.669, -9.16811, 0.66 ) }
    dend_87 { pt3dadd( 244.241, -130.694, -12.3783, 0.66 ) }
    dend_87 { pt3dadd( 253.543, -127.913, -14.7756, 0.66 ) }
    dend_87 { pt3dadd( 261.954, -123.146, -17.3315, 0.66 ) }
    dend_87 { pt3dadd( 269.911, -117.213, -18.5527, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_87 { pt3dadd( 278.103, -112.453, -21.7511, 0.66 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 1/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 204.659, -227.4, 37.1968, 0.59 ) }
    dend_82 { pt3dadd( 198.459, -219.562, 37.5656, 0.59 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 3/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 204.659, -227.4, 37.1968, 0.66 ) }
    dend_81 { pt3dadd( 210.838, -235.253, 36.8097, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 5/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -155.486, -266.529, -79.8053, 0.29 ) }
    dend_55 { pt3dadd( -156.31, -267.17, -79.612, 0.29 ) }
    dend_55 { pt3dadd( -157.365, -267.86, -79.4226, 0.15 ) }
    dend_55 { pt3dadd( -158.66, -268.63, -79.2261, 0.15 ) }
    dend_55 { pt3dadd( -158.86, -268.743, -79.1985, 0.37 ) }
    dend_55 { pt3dadd( -158.993, -268.811, -79.1838, 0.37 ) }
    dend_55 { pt3dadd( -159.25, -268.942, -79.1555, 0.37 ) }
    dend_55 { pt3dadd( -160.457, -269.428, -79.0783, 0.15 ) }
    dend_55 { pt3dadd( -160.678, -269.493, -79.0783, 0.37 ) }
    dend_55 { pt3dadd( -160.746, -269.511, -79.0783, 0.37 ) }
    dend_55 { pt3dadd( -162.226, -269.915, -79.0783, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -155.486, -266.529, -79.8053, 0.44 ) }
    dend_54 { pt3dadd( -156.279, -266.543, -79.7568, 0.44 ) }
    dend_54 { pt3dadd( -157.316, -266.6, -79.8319, 0.44 ) }
    dend_54 { pt3dadd( -158.064, -266.655, -79.9381, 0.66 ) }
    dend_54 { pt3dadd( -158.142, -266.665, -79.9518, 0.66 ) }
    dend_54 { pt3dadd( -159.062, -266.841, -80.1622, 0.81 ) }
    dend_54 { pt3dadd( -159.494, -266.937, -80.2701, 0.81 ) }
    dend_54 { pt3dadd( -160.543, -267.228, -80.6211, 0.22 ) }
    dend_54 { pt3dadd( -160.67, -267.265, -80.6672, 0.22 ) }
    dend_54 { pt3dadd( -161.933, -267.644, -81.1412, 0.22 ) }
    dend_54 { pt3dadd( -162.663, -267.857, -81.4019, 1.03 ) }
    dend_54 { pt3dadd( -163.202, -268.01, -81.586, 1.03 ) }
    dend_54 { pt3dadd( -166.087, -268.802, -82.494, 0.22 ) }
    dend_54 { pt3dadd( -166.747, -268.974, -82.6727, 0.66 ) }
    dend_54 { pt3dadd( -166.814, -268.991, -82.6873, 0.66 ) }
    dend_54 { pt3dadd( -167.597, -269.189, -82.8372, 0.22 ) }
    dend_54 { pt3dadd( -167.732, -269.222, -82.8576, 0.22 ) }
    dend_54 { pt3dadd( -168.324, -269.377, -82.9356, 0.59 ) }
    dend_54 { pt3dadd( -168.685, -269.48, -82.9649, 0.59 ) }
    dend_54 { pt3dadd( -172.005, -270.439, -83.2431, 0.22 ) }
    dend_54 { pt3dadd( -172.676, -270.638, -83.2992, 0.96 ) }
    dend_54 { pt3dadd( -173.029, -270.745, -83.3286, 0.96 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 38/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 278.103, -112.453, -21.7511, 0.59 ) }
    dend_89 { pt3dadd( 270.168, -115.838, -16.6931, 0.59 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 40/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 278.103, -112.453, -21.7511, 0.66 ) }
    dend_88 { pt3dadd( 277.486, -114.429, -31.5347, 0.59 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_35, dend_34, dend_27, dend_0, dend_41, dend_36, dend_29, dend_28, dend_20, dend_1, dend_63, dend_42, dend_40, dend_37, dend_31, dend_30, dend_24, dend_21, dend_17, dend_2, dend_73, dend_64, dend_56, dend_43, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_3, dend_91, dend_74, dend_66, dend_65, dend_58, dend_57, dend_45, dend_44, dend_14, dend_13, dend_7, dend_4, dend_78, dend_75, dend_68, dend_67, dend_62, dend_59, dend_49, dend_46, dend_16, dend_15, dend_11, dend_8, dend_6, dend_5, dend_84, dend_79, dend_77, dend_76, dend_72, dend_69, dend_61, dend_60, dend_51, dend_50, dend_48, dend_47, dend_10, dend_9, dend_86, dend_85, dend_83, dend_80, dend_71, dend_70, dend_53, dend_52, dend_90, dend_87, dend_82, dend_81, dend_55, dend_54, dend_89, dend_88]}
    ModelViewParmSubset_2 = new SectionList()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_35, dend_34, dend_27, dend_0, dend_41, dend_36, dend_29, dend_28, dend_20, dend_1, dend_63, dend_42, dend_40, dend_37, dend_31, dend_30, dend_24, dend_21, dend_17, dend_2, dend_73, dend_64, dend_56, dend_43, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_3, dend_91, dend_74, dend_66, dend_65, dend_58, dend_57, dend_45, dend_44, dend_14, dend_13, dend_7, dend_4, dend_78, dend_75, dend_68, dend_67, dend_62, dend_59, dend_49, dend_46, dend_16, dend_15, dend_11, dend_8, dend_6, dend_5, dend_84, dend_79, dend_77, dend_76, dend_72, dend_69, dend_61, dend_60, dend_51, dend_50, dend_48, dend_47, dend_10, dend_9, dend_86, dend_85, dend_83, dend_80, dend_71, dend_70, dend_53, dend_52, dend_90, dend_87, dend_82, dend_81, dend_55, dend_54, dend_89, dend_88]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_27 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_19, dend_18]}
    ModelViewParmSubset_5 = new SectionList()
    dend_19 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[dend_39, dend_38]}
    ModelViewParmSubset_6 = new SectionList()
    dend_39 ModelViewParmSubset_6.append()
    dend_38 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[dend_89, dend_88]}
    ModelViewParmSubset_7 = new SectionList()
    dend_89 ModelViewParmSubset_7.append()
    dend_88 ModelViewParmSubset_7.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_34 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_27 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_36 OneSecGrp_SectionRef_8.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_28 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_37 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_31 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_24 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_21 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_17 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_64 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_56 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_25 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_91 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_7 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_78 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_75 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_16 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_11 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_8 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_84 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_79 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_77 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_51 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_86 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_85 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_83 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_80 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_90 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_87 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_35 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_63 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_73 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_74 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_29 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_26 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_15 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_76 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_50 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_58 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_57 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_62 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_59 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_61 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_60 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_66 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_32 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_33 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_65 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_81 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_82 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_67 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_52 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_53 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_55 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_68 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_54 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_47 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_6 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_48 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_23 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_10 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_5 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_69 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_72 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_71 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_70 OneSecGrp_SectionRef_85.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_73, dend_73, dend_73, dend_73, dend_73, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_19, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_5, dend_5, dend_5, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_10, dend_9, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_82, dend_81, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_89, dend_88]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_4 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_89 all.append()
    dend_88 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 15
    dend_27 nseg = 7
    dend_36 nseg = 9
    dend_28 nseg = 3
    dend_40 nseg = 7
    dend_37 nseg = 7
    dend_31 nseg = 9
    dend_24 nseg = 7
    dend_21 nseg = 17
    dend_17 nseg = 15
    dend_64 nseg = 15
    dend_56 nseg = 11
    dend_43 nseg = 5
    dend_25 nseg = 9
    dend_3 nseg = 5
    dend_91 nseg = 3
    dend_45 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 3
    dend_7 nseg = 3
    dend_4 nseg = 11
    dend_78 nseg = 3
    dend_75 nseg = 7
    dend_49 nseg = 3
    dend_46 nseg = 7
    dend_16 nseg = 11
    dend_11 nseg = 9
    dend_8 nseg = 9
    dend_84 nseg = 5
    dend_79 nseg = 3
    dend_77 nseg = 7
    dend_51 nseg = 3
    dend_86 nseg = 5
    dend_85 nseg = 5
    dend_83 nseg = 7
    dend_80 nseg = 9
    dend_90 nseg = 3
    dend_87 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_MC_6c575906a7_0_0


