// Cell: bAC217_L23_DBC_3f985b6ce2_0_0
/*
{
  "id" : "bAC217_L23_DBC_3f985b6ce2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.667779, -8.61462, 0.0, 1.82374", "0.649013, -7.62864, 0.0, 3.14268", "0.630248, -6.64266, 0.0, 3.90944", "0.611482, -5.65668, 0.0, 4.60231", "0.592716, -4.67069, 0.0, 5.57951", "0.57395, -3.68471, 0.0, 6.64563", "0.555185, -2.69873, 0.0, 7.55969", "0.536419, -1.71275, 0.0, 7.78617", "0.517653, -0.726767, 0.0, 7.99436", "0.498888, 0.259215, 0.0, 8.35249", "0.480122, 1.2452, 0.0, 8.72844", "0.461356, 2.23118, 0.0, 9.06354", "0.44259, 3.21716, 0.0, 8.84862", "0.423825, 4.20314, 0.0, 8.54462", "0.405059, 5.18912, 0.0, 8.13269", "0.386293, 6.17511, 0.0, 7.35702", "0.367527, 7.16109, 0.0, 6.25172", "0.348762, 8.14707, 0.0, 5.0691", "0.329996, 9.13305, 0.0, 3.84217", "0.31123, 10.119, 0.0, 2.61525", "0.292465, 11.105, 0.0, 1.57474" ]
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.620263, -8.91762, 17.51, 1.94", "-0.668956, -12.0976, 17.0857, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000030386586765
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.570264, 11.6746, -5.02, 1.38", "-0.772676, 14.0754, -5.02, 1.38", "-1.22587, 18.2997, -4.88597, 1.94", "-1.44777, 20.2649, -4.75505, 1.11", "-1.70443, 23.0409, -4.57197, 0.55", "-1.90008, 25.6216, -4.2978, 1.11", "-2.11082, 29.0115, -3.87779, 0.83", "-2.35244, 33.2212, -3.27291, 1.38", "-2.58462, 37.3451, -2.57049, 1.11", "-2.75977, 41.2991, -1.90104, 0.83", "-2.77426, 45.5727, -1.12688, 1.11", "-2.70906, 48.6539, -0.649522, 0.55", "-2.61262, 51.6817, -0.294358, 0.55", "-2.44035, 55.3596, -0.0277255, 0.55", "-2.26562, 58.2178, 0.075212, 1.11", "-2.04096, 62.1369, 0.108523, 0.83", "-1.71905, 67.3587, 0.0444475, 0.83", "-1.26383, 72.4459, 0.0283942, 0.83", "-0.891569, 76.2048, -0.0231102, 0.83", "-0.646426, 78.8023, -0.0446549, 0.83", "-0.396124, 81.5782, -0.0164701, 0.83", "0.0338263, 86.6058, 0.0565749, 0.83", "0.588901, 91.9501, 0.272403, 0.83", "1.06731, 96.1737, 0.454876, 1.11", "1.40396, 99.6177, 0.604838, 0.83", "1.74919, 103.29, 0.753357, 0.83", "2.26962, 108.077, 0.899459, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000030386586765,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.292465, 11.105, 0.0, 0.55", "0.00702837, 26.1023, 0.0, 0.55", "-0.278408, 41.0996, 0.0, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.668956, -12.0976, 17.0857, 0.55", "-3.30036, -18.2035, 16.9199, 0.55", "-4.58325, -21.3159, 16.7241, 0.55", "-5.62847, -23.8563, 16.5268, 0.83", "-6.91384, -26.915, 16.3383, 0.55", "-8.91993, -31.406, 16.0001, 0.83", "-10.1752, -34.0461, 15.79, 0.55", "-11.2953, -36.448, 15.7181, 0.83", "-11.9841, -38.0824, 15.7483, 0.28", "-13.1314, -40.9086, 15.7785, 0.83", "-14.9438, -45.5896, 15.7542, 0.83", "-16.9516, -50.7712, 15.7632, 0.83", "-18.471, -54.7151, 15.9916, 0.55", "-20.1988, -59.3184, 16.4921, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.668956, -12.0976, 17.0857, 1.11", "1.76537, -17.0979, 20.745, 1.11", "3.31141, -20.2736, 23.069, 0.83", "5.83952, -25.4666, 26.8694, 1.66" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "2.26962, 108.077, 0.899459, 0.83", "3.96043, 110.386, 1.23851, 0.83", "4.79016, 111.705, 1.57117, 0.83", "5.85606, 113.889, 2.28722, 0.55", "6.68961, 115.984, 2.99007, 0.55", "7.96981, 119.44, 4.15006, 0.55", "8.49406, 120.937, 4.65723, 0.83", "9.32226, 124.024, 5.85046, 0.55", "10.144, 127.542, 7.28359, 0.55", "10.5418, 129.598, 8.14443, 0.55", "11.0758, 132.505, 9.31786, 0.55", "11.4072, 134.213, 9.93615, 0.55", "12.0106, 136.965, 10.8833, 0.55", "13.09, 141.139, 12.2412, 0.55", "14.3688, 144.92, 13.3758, 0.55", "15.1782, 147.005, 14.0651, 0.55", "15.7248, 148.14, 14.4208, 0.83", "16.5341, 149.463, 14.7534, 0.55", "17.6201, 150.868, 15.0365, 0.83", "19.3389, 152.818, 15.3047, 0.83", "21.3366, 154.759, 15.5205, 0.55", "24.1553, 158.009, 15.5898, 0.28", "26.2971, 160.853, 15.6993, 0.28", "27.6878, 162.737, 15.7605, 0.83", "28.4725, 163.865, 15.7418, 0.28", "29.1688, 164.927, 15.6695, 0.83", "32.7552, 170.907, 14.869, 0.28", "34.0758, 174.298, 14.5854, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "2.26962, 108.077, 0.899459, 0.83", "2.59256, 111.047, 1.24222, 0.83", "2.81663, 114.587, 1.58704, 0.83", "2.9103, 117.833, 1.8375, 0.83", "2.97117, 120.775, 2.01264, 0.55", "3.04502, 124.398, 2.18618, 0.55", "3.09619, 127.25, 2.30045, 0.55", "3.12748, 130.997, 2.3539, 0.55", "3.25173, 136.489, 2.38123, 0.55", "3.36292, 141.894, 2.41924, 0.55", "3.55148, 145.898, 2.36326, 0.55", "3.86605, 150.173, 2.29788, 0.55", "4.3929, 156.23, 2.2156, 0.55", "5.22279, 163.099, 2.13481, 0.55", "5.50913, 165.07, 2.11063, 0.28", "6.14646, 168.841, 2.07329, 0.55", "6.81088, 172.044, 2.05812, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.278408, 41.0996, 0.0, 0.28", "-0.563845, 56.0969, 0.0, 0.28", "-0.849281, 71.0941, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-20.1988, -59.3184, 16.4921, 0.55", "-23.2981, -64.3639, 16.2653, 0.55", "-24.3338, -66.0047, 16.3175, 0.28", "-24.8778, -66.8799, 16.4484, 0.55", "-26.5164, -69.516, 16.8426, 0.55", "-27.4688, -71.0481, 17.0717, 0.55", "-29.3557, -74.0839, 17.5257, 0.55", "-30.792, -76.4983, 18.2842, 0.55", "-32.4487, -79.1832, 19.0922, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-20.1988, -59.3184, 16.4921, 0.55", "-19.7315, -62.6002, 16.6715, 0.55", "-19.7108, -62.7455, 16.6794, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "5.83952, -25.4666, 26.8694, 0.83", "5.29776, -29.1826, 26.41, 0.83", "5.02891, -31.415, 26.1592, 1.11", "4.40075, -35.9865, 25.8379, 0.55", "4.06465, -38.4071, 25.7568, 0.55", "3.55703, -42.2439, 25.9001, 0.55", "3.14986, -46.0454, 26.2631, 0.55", "2.97979, -48.3128, 26.6578, 0.55", "2.8364, -51.349, 27.4524, 0.55", "2.69289, -54.5714, 28.5147, 0.83", "2.53151, -58.785, 30.0142, 0.83", "2.36259, -61.3189, 30.9929, 0.83", "2.15995, -64.562, 32.2972, 0.83", "1.95041, -67.7337, 33.6672, 0.83", "1.74702, -70.8521, 35.0095, 0.55", "1.39937, -75.3986, 36.9025, 0.55", "1.139, -78.6113, 38.179, 0.55", "0.868344, -82.5199, 39.7118, 0.55", "0.733922, -86.3146, 41.1292, 0.55", "0.73943, -89.179, 42.0231, 0.83", "0.90724, -91.6012, 42.6549, 0.55", "1.20034, -93.9566, 43.0524, 0.28", "1.56114, -95.8834, 43.1928, 0.55", "2.22806, -98.8307, 43.1768, 0.28", "2.71734, -100.556, 43.0391, 0.28", "3.48226, -102.94, 42.7162, 0.28", "4.17679, -105.1, 42.3551, 0.55", "4.94291, -107.683, 41.7454, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "5.83952, -25.4666, 26.8694, 0.83", "9.37057, -30.6051, 26.8226, 0.83", "12.1352, -34.8764, 26.8014, 0.83", "19.282, -45.9759, 26.8267, 0.83", "21.5634, -49.5372, 26.8134, 0.83", "23.7862, -52.7981, 26.8108, 0.83", "25.716, -55.5166, 26.8196, 0.83", "27.2666, -57.6403, 26.8011, 0.83", "29.6101, -60.5187, 26.8748, 0.83", "32.8293, -63.5866, 27.1521, 0.83", "36.4662, -67.0422, 27.5987, 0.83", "39.2039, -69.4914, 28.1271, 0.83", "42.304, -72.3528, 28.8557, 0.55", "44.1429, -74.1953, 29.369, 0.83", "47.8691, -78.0719, 30.5521, 0.55", "50.8294, -81.3014, 31.6525, 0.55", "54.4693, -85.7597, 33.1952, 0.55", "57.8941, -90.2983, 34.8115, 0.83", "60.3865, -94.1457, 36.1375, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "6.81088, 172.044, 2.05812, 0.83", "9.17093, 175.166, 1.87004, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.81088, 172.044, 2.05812, 0.55", "7.69218, 173.798, 2.06702, 0.55", "8.80745, 176.22, 2.19258, 0.55", "10.212, 179.415, 2.41995, 0.55", "11.4471, 182.123, 2.67464, 0.55", "12.1931, 183.94, 2.9119, 0.55", "13.0113, 186.295, 3.26864, 0.55", "13.3639, 187.781, 3.58261, 0.28", "13.5065, 188.881, 3.86415, 0.28", "13.5615, 190.293, 4.27465, 0.83", "13.5651, 193.49, 5.23116, 0.55", "13.4857, 196.585, 6.09535, 0.55", "13.294, 200.585, 6.9503, 0.55", "13.1567, 203.206, 7.4035, 0.55", "13.0824, 204.904, 7.61686, 0.28", "13.0338, 206.379, 7.76506, 0.28", "13.0275, 208.123, 7.89067, 0.83", "12.9857, 210.737, 8.04132, 0.28", "12.9418, 213.361, 8.10671, 0.55", "12.8604, 216.047, 8.17489, 0.55", "12.8027, 218.527, 8.25628, 0.55", "12.7794, 219.185, 8.28624, 0.55", "12.7083, 220.79, 8.41517, 0.55", "12.6545, 222.121, 8.56293, 0.55", "12.4488, 223.806, 8.75416, 0.55", "12.0652, 225.367, 8.97226, 0.55", "11.3603, 227.427, 9.35361, 0.55", "10.9993, 228.266, 9.56599, 0.55", "9.68194, 231.025, 10.4006, 0.83", "8.6104, 233.18, 11.2613, 0.55", "7.33486, 235.522, 12.3128, 0.83", "6.30048, 237.283, 13.2016, 0.55", "5.51005, 238.522, 13.9247, 0.83", "4.59458, 239.92, 14.8382, 0.55", "3.08095, 241.908, 16.517, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-32.4487, -79.1832, 19.0922, 0.55", "-33.5413, -83.3028, 13.4469, 0.55", "-33.703, -83.9123, 12.6117, 0.55", "-34.0338, -85.1595, 10.9027, 0.28", "-34.2272, -85.8888, 9.90332, 0.28" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-32.4487, -79.1832, 19.0922, 0.55", "-34.4672, -80.8693, 18.5162, 0.55", "-36.6978, -82.7224, 17.9282, 0.28", "-38.5972, -84.2436, 17.4754, 0.55", "-40.7139, -85.8994, 16.9634, 0.28", "-42.0169, -86.8753, 16.6549, 0.55", "-43.0762, -87.6451, 16.3872, 0.28", "-44.4465, -88.5931, 16.0803, 0.55", "-46.3265, -89.72, 15.7296, 0.28", "-48.1088, -90.6822, 15.4303, 0.55", "-49.9567, -91.614, 15.2512, 0.28", "-51.4335, -92.3382, 15.1281, 0.55", "-54.3474, -93.7054, 15.0345, 0.28", "-56.0358, -94.525, 15.0574, 0.55", "-57.9539, -95.5617, 15.1446, 0.55", "-60.6245, -97.1385, 15.2731, 0.28", "-61.5881, -97.7607, 15.2866, 0.28", "-64.2438, -99.6411, 15.2534, 0.55", "-66.3808, -101.308, 15.1914, 0.28", "-68.8021, -103.322, 15.1896, 0.55", "-71.4721, -105.6, 15.2693, 0.28", "-72.8535, -106.798, 15.3327, 0.55", "-75.8006, -109.457, 15.542, 0.28", "-77.5063, -111.252, 15.2257, 0.83", "-79.4303, -113.527, 14.3395, 0.28", "-79.9695, -114.254, 13.887, 0.28", "-80.6443, -115.302, 13.0592, 0.28", "-81.7561, -117.135, 11.4325, 0.55", "-86.3691, -124.876, 3.45052, 0.28", "-86.8681, -125.687, 2.59498, 0.55", "-87.7299, -127.02, 1.19041, 0.28", "-88.4873, -128.116, 0.151494, 0.55", "-89.6546, -129.615, -1.05888, 0.28", "-91.3675, -131.25, -1.69957, 0.55", "-93.1167, -132.583, -1.38551, 0.28", "-94.0596, -133.303, -1.22618, 0.55", "-95.2141, -134.205, -0.926857, 0.28", "-95.8451, -134.661, -0.736254, 0.55", "-98.3539, -136.3, 0.0914814, 0.28", "-99.4531, -136.994, 0.468041, 0.55", "-101.555, -138.279, 1.20507, 0.28", "-104.631, -140.122, 2.36166, 0.55", "-107.779, -141.994, 3.59383, 0.55", "-109.686, -143.141, 4.32768, 0.28", "-110.348, -143.54, 4.56097, 0.55", "-112.177, -144.624, 5.25976, 0.28", "-114.235, -145.84, 6.19246, 0.55", "-115.131, -146.367, 6.54594, 0.28", "-116.844, -147.578, 7.29929, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-19.7108, -62.7455, 16.6794, 0.28", "-18.591, -67.8351, 11.8632, 0.28", "-18.3055, -69.2894, 10.615, 0.28", "-17.8711, -71.823, 8.62219, 0.28", "-17.3658, -75.472, 5.80721, 0.55", "-16.9045, -80.1469, 2.09841, 0.28", "-16.7522, -82.4844, 0.31481, 0.55", "-16.7468, -86.2378, -2.33733, 0.28", "-16.8119, -87.5636, -3.24324, 0.55", "-17.4037, -92.2071, -6.40113, 0.28", "-18.1989, -95.0772, -8.57522, 0.28", "-18.9154, -96.9582, -10.3252, 0.55", "-19.5463, -98.4614, -12.0723, 0.55", "-19.6746, -98.7599, -12.4566, 0.55", "-20.5527, -101.211, -15.6768, 0.28", "-21.5871, -104.099, -19.706, 0.28", "-22.0668, -105.682, -22.0534, 0.55", "-22.6054, -107.804, -25.5059, 0.28", "-22.7484, -108.636, -26.8346, 0.28", "-22.8118, -110.087, -29.1595, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-19.7108, -62.7455, 16.6794, 0.55", "-20.6501, -64.6624, 16.6567, 0.55", "-21.5731, -66.6908, 16.5975, 0.55", "-22.5098, -68.8564, 16.5248, 0.55", "-23.3584, -70.9473, 16.4676, 0.55", "-24.0455, -72.7313, 16.3876, 0.28", "-24.4506, -73.8942, 16.3439, 0.55", "-25.1084, -76.1635, 16.3127, 0.55", "-25.6004, -78.0515, 16.2166, 0.55", "-26.1039, -80.3447, 16.0041, 0.55", "-26.3574, -81.8948, 15.86, 0.28", "-26.6241, -83.6836, 15.7227, 0.55", "-26.895, -85.2184, 15.6036, 0.28", "-27.176, -86.944, 15.4363, 0.55", "-27.4434, -88.7437, 15.2669, 0.28", "-27.5809, -89.706, 15.1988, 0.55", "-27.7907, -90.9935, 15.1548, 0.55", "-28.1505, -92.9499, 15.0822, 0.28", "-28.6179, -95.451, 15.0519, 0.55", "-28.8526, -96.8214, 15.1237, 0.28", "-29.1093, -98.3167, 15.2714, 0.28", "-29.313, -99.5419, 15.4047, 0.28" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "60.3865, -94.1457, 36.1375, 0.83", "60.8096, -96.9891, 36.0964, 0.83", "61.0598, -99.2221, 36.1881, 0.55", "61.239, -101.015, 36.153, 0.28", "61.4368, -102.745, 35.9095, 0.55", "61.6257, -104.618, 35.5862, 0.28", "61.9052, -106.522, 35.1434, 0.55", "62.2349, -108.406, 34.7511, 0.28", "62.7555, -110.876, 34.206, 0.55", "63.3371, -113.751, 33.4651, 0.28", "63.8026, -115.893, 32.8051, 0.55", "64.5261, -118.703, 31.8435, 0.28", "65.3099, -121.506, 30.9039, 0.55", "65.8511, -123.533, 30.3501, 0.83", "66.6067, -126.629, 29.7939, 0.55", "67.032, -128.508, 29.5384, 0.83", "67.4633, -130.601, 29.2266, 0.55", "67.6869, -132.198, 29.0605, 0.55", "68.0936, -134.704, 28.8013, 0.28", "68.3242, -136.058, 28.7395, 0.55", "68.4543, -136.935, 28.7741, 0.28", "68.7288, -139.105, 28.9112, 0.55", "69.0844, -141.635, 29.0261, 0.28", "69.5187, -144.095, 29.0537, 0.28", "70.0099, -146.202, 29.0019, 0.55", "70.5297, -148.166, 28.9375, 0.28", "71.1062, -150.133, 28.8381, 0.55", "71.7591, -152.041, 28.7223, 0.28", "72.5018, -154.136, 28.5366, 0.55", "73.2099, -156.332, 28.3472, 0.55", "73.7276, -157.886, 28.2034, 0.28", "74.6649, -160.704, 27.9042, 0.55", "75.1121, -162.419, 27.7739, 0.55", "75.7633, -165.615, 27.57, 0.28", "76.0695, -167.59, 27.4534, 0.55", "76.2424, -168.984, 27.3668, 0.28", "76.3525, -169.833, 27.3314, 0.55", "76.7954, -172.899, 27.3026, 0.28", "76.9175, -173.72, 27.3042, 0.55", "77.1321, -174.899, 27.3457, 0.28", "77.362, -175.99, 27.3836, 0.55", "77.837, -178.1, 27.4668, 0.28", "78.2722, -179.616, 27.4629, 0.55", "78.8249, -181.228, 27.376, 0.28", "79.116, -182.257, 27.3295, 0.55", "79.3507, -183.343, 27.2325, 0.28", "79.4619, -184.171, 27.1478, 0.83", "79.6292, -186.595, 26.7554, 0.28", "79.6616, -187.931, 26.4868, 0.28", "79.654, -190.728, 25.8457, 0.55", "79.5586, -193.253, 25.209, 0.28", "79.4284, -194.877, 24.794, 0.55", "79.2443, -196.807, 24.2743, 0.28", "79.1388, -197.904, 23.99, 0.55", "79.1041, -198.721, 23.7699, 0.28", "79.2134, -200.277, 23.3625, 0.55", "79.468, -201.974, 23.0506, 0.28", "79.7091, -203.173, 22.8532, 0.55", "80.0777, -205.068, 22.6284, 0.28", "80.2375, -205.891, 22.5368, 0.55", "80.6558, -208.054, 22.2434, 0.28", "80.8478, -208.983, 22.0939, 0.55", "81.1375, -210.368, 21.841, 0.28", "81.3149, -211.309, 21.6803, 0.55", "81.4872, -212.129, 21.5183, 0.55", "81.8835, -213.817, 21.1964, 0.55", "82.3377, -215.527, 20.7976, 0.28", "82.6888, -216.804, 20.5122, 0.28", "83.0335, -218.135, 20.1801, 0.55", "83.5352, -220.376, 19.5711, 0.28", "83.7861, -221.766, 19.1833, 0.28", "84.0426, -223.484, 18.7086, 0.28", "84.5164, -227.669, 17.5291, 0.28", "84.9194, -231.647, 16.3502, 0.28", "85.0616, -233.513, 15.8078, 0.55", "85.2337, -235.871, 15.1663, 0.28", "85.2984, -236.698, 14.9802, 0.28", "85.4447, -238.312, 14.7326, 0.55", "85.8058, -241.503, 14.3954, 0.28", "85.9587, -242.741, 14.3517, 0.55", "86.251, -245.328, 14.2833, 0.28", "86.4519, -247.735, 14.1275, 0.55", "86.516, -249.382, 13.9637, 0.28", "86.5366, -250.83, 13.8198, 0.55", "86.4304, -253.625, 13.5197, 0.28", "86.3372, -254.946, 13.2808, 0.83", "85.9915, -256.934, 12.7426, 0.28", "85.881, -257.467, 12.509, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "60.3865, -94.1457, 36.1375, 0.55", "63.7389, -96.5806, 38.2744, 0.55", "67.4476, -99.3642, 40.7902, 0.55", "68.7118, -100.344, 41.6557, 0.55", "70.0486, -101.38, 42.5709, 0.55", "72.6259, -103.378, 44.3353, 0.55", "73.8179, -104.301, 45.1513, 0.55", "75.6992, -106.055, 46.6816, 0.28", "76.8142, -107.009, 47.4369, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "9.17093, 175.166, 1.87004, 0.55", "9.70502, 175.958, 1.86021, 0.55", "12.2303, 179.573, 1.45701, 0.55", "13.8467, 181.756, 1.12126, 0.28", "16.0486, 184.684, 0.61572, 0.55", "17.9097, 187.16, 0.0744772, 0.55", "20.0476, 190.042, -0.622046, 0.55", "22.6526, 193.588, -1.61014, 0.55", "23.3072, 194.546, -1.92508, 0.55", "24.3707, 196.353, -2.539, 0.55", "25.7178, 199.037, -3.49456, 0.83", "26.2858, 200.367, -4.00177, 0.28", "27.1169, 202.653, -4.86669, 0.55", "28.3079, 206.688, -6.26996, 0.28", "29.1611, 209.845, -7.35891, 0.28", "30.1888, 214.041, -8.87948, 0.55", "30.7626, 216.499, -9.80621, 0.55", "30.9929, 217.48, -10.2045, 0.55", "32.0429, 222.223, -12.3285, 0.55", "32.3624, 223.82, -13.0823, 0.28", "32.7758, 226.512, -14.3931, 0.55", "32.9755, 228.684, -15.4322, 0.55", "33.0283, 230.105, -16.19, 0.28", "32.9688, 231.995, -17.3086, 0.55", "32.8629, 233.352, -18.1847, 0.55", "32.3036, 237.507, -20.8939, 0.55", "31.8835, 240.342, -22.7217, 0.55", "31.3434, 243.276, -24.5653, 0.55", "30.8911, 245.735, -26.0281, 0.55", "30.6334, 247.222, -26.9141, 0.28", "30.2733, 249.194, -28.1051, 0.55", "29.9134, 250.726, -29.0599, 0.28", "29.2275, 253.257, -30.614, 0.55", "28.5476, 256.086, -32.3182, 0.55", "27.7405, 259.587, -34.4626, 0.28", "27.3029, 261.284, -35.5391, 0.55", "26.538, 263.931, -37.2914, 0.28", "25.9606, 265.692, -38.4378, 0.28", "25.3109, 267.469, -39.6778, 0.28", "24.8215, 268.593, -40.4794, 0.28", "24.1174, 270.152, -41.4996, 0.28", "23.4784, 271.669, -42.5397, 0.55", "22.5957, 274.077, -44.186, 0.55", "21.6843, 276.833, -46.1374, 0.28", "20.9982, 279.28, -47.8881, 1.11", "20.667, 280.912, -49.0057, 0.83", "20.3349, 283.412, -50.6798, 0.55", "20.062, 286.463, -52.7303, 1.11", "19.9333, 288.867, -54.3598, 0.55", "19.9482, 290.159, -55.1375, 0.55", "20.0579, 292.137, -56.3, 0.55", "20.2086, 295.042, -57.9714, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.17093, 175.166, 1.87004, 0.55", "12.9086, 178.145, 2.1325, 0.55", "19.4941, 183.554, 2.1034, 0.55", "22.9887, 186.489, 1.95509, 0.55", "26.0188, 189.13, 1.75526, 0.55", "28.4717, 191.343, 1.55733, 0.55", "31.065, 193.719, 1.28886, 0.55", "33.5634, 196.258, 0.756653, 0.28", "34.0893, 196.902, 0.562398, 0.55", "34.9737, 198.027, 0.0126517, 0.28", "35.6524, 198.903, -0.496154, 0.55", "36.6403, 200.337, -1.32015, 0.28", "36.8428, 200.636, -1.47773, 0.55", "38.7366, 203.548, -2.73943, 0.28", "39.631, 204.862, -3.3026, 0.55", "41.0398, 206.899, -4.13218, 0.28", "41.9489, 208.279, -4.62974, 0.55", "42.9086, 210.0, -5.0535, 0.28", "43.8819, 211.945, -5.5079, 0.28", "44.6347, 213.574, -5.80887, 0.28", "45.0909, 214.676, -5.95921, 0.55", "46.202, 217.454, -6.43163, 0.28", "47.3849, 220.4, -6.91216, 0.55", "49.1642, 224.776, -7.61729, 0.28", "50.1133, 227.047, -7.99868, 0.55", "51.2023, 229.729, -8.43006, 0.55", "52.4312, 232.758, -8.93845, 0.28", "53.1623, 234.57, -9.32191, 0.55", "53.9796, 236.625, -9.78054, 0.28", "54.7731, 238.798, -10.2666, 0.83", "55.8696, 241.855, -10.9938, 0.28", "56.7018, 244.419, -11.6385, 0.55", "57.5384, 247.15, -12.1648, 0.28", "58.5384, 250.47, -12.7046, 0.55", "59.3776, 253.446, -13.0572, 0.28", "60.2441, 256.434, -13.4393, 0.55", "60.9052, 258.658, -13.738, 0.28", "61.7507, 261.52, -14.1495, 0.28", "62.5173, 264.105, -14.5219, 0.55", "63.512, 267.42, -15.1876, 0.55", "64.7715, 271.67, -15.9868, 0.28", "65.0821, 272.747, -16.2321, 0.55", "65.5099, 274.207, -16.5674, 0.55", "66.7698, 278.698, -17.4861, 0.28", "67.2692, 280.47, -17.7792, 0.55", "68.5263, 284.708, -18.2516, 0.55", "69.665, 288.763, -18.5169, 0.28", "70.257, 290.835, -18.6551, 0.55", "71.398, 294.574, -18.8327, 0.28", "72.0039, 296.557, -18.9241, 0.55", "72.6293, 298.682, -19.0019, 0.28", "73.4808, 301.41, -19.0716, 0.55", "74.4099, 304.221, -19.0362, 0.28", "75.5629, 307.468, -19.0968, 0.28", "76.5519, 310.145, -19.2018, 0.55", "77.5432, 312.75, -19.2793, 0.28", "78.5734, 315.322, -19.4003, 0.28", "79.258, 316.769, -19.4728, 0.28", "80.5108, 319.298, -19.6254, 0.83", "82.1711, 322.477, -19.9555, 0.28", "82.8901, 323.715, -20.088, 0.55", "84.2889, 325.981, -20.4779, 0.28", "86.5258, 329.788, -21.423, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-34.2272, -85.8888, 9.90332, 0.28", "-33.0888, -88.1692, 10.8609, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-34.2272, -85.8888, 9.90332, 0.55", "-35.3441, -88.9758, 9.38483, 0.55", "-36.2309, -91.4516, 8.91677, 0.28", "-36.6783, -92.7177, 8.69793, 0.55", "-38.4169, -97.4188, 8.1219, 0.28", "-39.2396, -99.7719, 7.85863, 0.55", "-40.0502, -102.054, 7.76159, 0.28", "-40.3773, -103.114, 7.69866, 0.55", "-41.1565, -105.75, 7.68147, 0.28", "-41.6187, -107.515, 7.7224, 0.55", "-42.4582, -111.069, 7.98594, 0.28", "-43.3518, -115.075, 8.27124, 0.28", "-44.0862, -118.25, 8.5861, 0.55", "-44.6861, -120.675, 8.79645, 0.55", "-45.4668, -123.326, 8.92135, 0.28", "-45.8082, -124.255, 8.96404, 0.55", "-46.8871, -126.609, 9.11865, 0.28", "-47.5958, -127.947, 9.16146, 0.55", "-49.4197, -130.821, 9.34881, 0.28", "-51.4425, -133.736, 9.49045, 0.55", "-53.1961, -136.101, 9.6066, 0.28", "-53.3863, -136.357, 9.61084, 0.55", "-54.7906, -138.306, 9.56066, 0.28", "-56.4389, -140.722, 9.50751, 0.28", "-57.1238, -141.781, 9.46665, 0.55", "-58.2203, -143.711, 9.24274, 0.28", "-59.1712, -145.56, 8.93744, 0.28", "-59.9788, -147.182, 8.66349, 0.28", "-60.6515, -148.573, 8.45208, 0.28", "-61.1148, -149.687, 8.21827, 0.28", "-61.975, -151.982, 7.73864, 0.28", "-62.5432, -153.733, 7.41752, 0.55", "-62.9704, -155.066, 7.22872, 0.28", "-63.3676, -156.316, 7.07287, 0.55", "-64.3296, -159.357, 6.83638, 0.28", "-64.9583, -161.071, 6.76853, 0.28", "-65.4386, -162.217, 6.67223, 0.55", "-66.161, -163.782, 6.47356, 0.28", "-66.6922, -164.856, 6.32964, 0.55", "-68.2542, -167.801, 5.90726, 0.28", "-69.3281, -169.661, 5.73454, 0.28", "-70.6909, -172.005, 5.46606, 0.55", "-72.1966, -174.682, 5.13439, 0.28", "-73.4806, -177.167, 4.79094, 0.28", "-73.7935, -177.767, 4.70466, 0.55", "-75.2092, -180.409, 4.37409, 0.28", "-75.7659, -181.437, 4.27212, 0.55", "-77.6444, -184.649, 3.96184, 0.28", "-78.3865, -185.802, 3.80587, 0.55", "-79.2673, -187.031, 3.67978, 0.28", "-80.2925, -188.43, 3.56308, 0.55", "-82.0426, -190.777, 3.29514, 0.28", "-83.3532, -192.496, 3.07775, 0.55", "-85.2018, -194.952, 2.80039, 0.28", "-86.6361, -196.911, 2.59213, 0.28", "-88.3667, -199.489, 2.3363, 0.55", "-89.9896, -202.119, 2.08934, 0.28", "-91.6117, -205.461, 1.94062, 0.28", "-92.4829, -207.779, 1.96681, 0.28", "-92.5724, -208.182, 1.95013, 0.55", "-92.64, -209.461, 1.85497, 0.28", "-92.5622, -210.363, 1.80568, 0.55", "-91.6619, -215.446, 1.58072, 0.28", "-91.2597, -217.155, 1.49494, 0.55", "-89.849, -222.83, 0.985775, 0.28", "-89.1304, -225.707, 0.700979, 0.28", "-88.7997, -227.044, 0.53295, 0.55", "-88.1914, -229.419, 0.157494, 0.28", "-87.6362, -231.607, -0.346106, 0.28", "-87.2413, -233.153, -0.705975, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-22.8118, -110.087, -29.1595, 0.28", "-27.7084, -111.558, -15.2717, 0.28", "-28.7381, -111.664, -12.9786, 0.83", "-29.5179, -111.544, -11.9032, 0.28", "-29.8007, -111.459, -11.6501, 0.55", "-33.2505, -109.783, -10.1151, 0.28", "-34.5986, -108.998, -9.68843, 0.55", "-35.8485, -108.074, -9.71234, 0.55", "-37.7588, -106.5, -9.66321, 0.28", "-38.3273, -105.908, -9.69186, 0.55", "-41.639, -101.908, -10.0474, 0.28", "-42.2809, -100.961, -10.2058, 0.83", "-43.4977, -99.0169, -10.5861, 0.28", "-43.7626, -98.5477, -10.6793, 0.55", "-47.4817, -90.8925, -12.5591, 0.28", "-47.8766, -89.9925, -12.807, 0.55", "-49.4335, -85.9237, -14.1981, 0.28", "-49.8116, -84.8909, -14.5968, 0.28", "-50.3069, -83.3496, -15.1967, 0.55", "-51.237, -80.2548, -16.3356, 0.28", "-51.4621, -79.3356, -16.6241, 0.55", "-52.0454, -77.0386, -17.199, 0.28", "-52.1835, -76.5019, -17.2856, 0.55", "-53.8298, -70.4334, -18.0645, 0.28", "-54.0292, -69.8398, -18.1186, 0.55", "-54.7295, -68.1414, -18.1148, 0.28", "-54.9391, -67.674, -18.0836, 0.55", "-55.883, -65.824, -17.8531, 0.28", "-56.2922, -65.0716, -17.7297, 0.55", "-57.5227, -62.9218, -17.3721, 0.28", "-58.2012, -61.7585, -17.1784, 0.55", "-59.4315, -59.6777, -16.8401, 0.28", "-60.0492, -58.5941, -16.6725, 0.55", "-62.1889, -54.6989, -16.0202, 0.28", "-62.8107, -53.3309, -15.7729, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-22.8118, -110.087, -29.1595, 0.28", "-23.4248, -113.18, -32.0347, 0.28", "-23.8562, -115.357, -34.058, 0.55", "-25.0652, -121.458, -39.7285, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-29.313, -99.5419, 15.4047, 0.28", "-29.4987, -99.9249, 15.4765, 0.28", "-30.4922, -101.949, 15.8634, 0.55", "-31.7355, -104.552, 16.3235, 0.28", "-32.4617, -106.35, 16.565, 0.55", "-33.1044, -108.009, 16.7987, 0.55", "-33.5694, -109.226, 16.951, 0.28", "-33.9499, -110.26, 17.0665, 0.55", "-34.4496, -111.738, 17.2022, 0.55", "-35.2801, -114.597, 17.539, 0.55", "-36.118, -117.89, 17.8883, 0.55", "-36.3945, -119.092, 18.0053, 0.28", "-36.699, -120.554, 18.0564, 0.55", "-36.9409, -121.695, 18.0351, 0.28", "-37.5741, -124.526, 17.8706, 0.55", "-37.8026, -125.496, 17.7764, 0.28", "-38.2513, -127.533, 17.3967, 0.55", "-39.0505, -131.101, 16.6244, 0.55", "-39.4135, -132.614, 16.2429, 0.55", "-39.647, -133.578, 15.974, 0.28", "-39.7698, -134.106, 15.8288, 0.55", "-40.3814, -136.592, 15.2045, 0.28", "-40.623, -137.567, 14.9755, 0.55", "-40.8155, -138.439, 14.8569, 0.28", "-40.9591, -139.353, 14.7432, 0.55", "-41.1775, -141.026, 14.5663, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "76.8142, -107.009, 47.4369, 0.55", "79.6816, -110.025, 46.0766, 0.55", "81.1394, -111.546, 45.5309, 0.55", "82.0029, -112.444, 45.1734, 0.55", "82.8128, -113.385, 44.7982, 0.83", "84.9854, -116.12, 44.0052, 0.55", "86.2409, -117.897, 43.7323, 0.28", "86.9851, -119.13, 43.6963, 0.55", "88.314, -121.567, 43.7568, 0.28", "89.5906, -124.061, 43.9863, 0.55", "91.1534, -127.473, 44.3806, 0.83", "92.4026, -130.678, 44.8273, 0.55", "93.2633, -133.116, 45.1398, 0.83", "93.9434, -135.143, 45.3783, 0.55", "94.4376, -136.809, 45.6024, 0.83", "95.2696, -139.633, 45.8887, 0.55", "95.8444, -141.923, 46.1375, 0.83", "96.4163, -144.288, 46.3578, 0.55", "96.6467, -145.367, 46.4955, 0.83", "97.1835, -147.978, 46.8239, 0.55", "97.7387, -150.595, 47.2652, 0.55", "98.6973, -155.044, 48.5429, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "76.8142, -107.009, 47.4369, 0.28", "79.6898, -106.706, 45.9571, 0.28", "83.2642, -106.424, 44.5189, 0.28", "86.4181, -106.187, 43.7497, 0.28", "89.2892, -105.973, 43.4365, 0.28", "92.1384, -105.831, 43.5158, 0.55", "94.3192, -105.801, 43.8064, 0.28", "97.8821, -105.86, 44.9783, 0.55", "101.793, -105.987, 46.908, 0.55", "103.63, -106.089, 47.988, 0.28", "106.817, -106.3, 50.0345, 0.28", "109.669, -106.518, 51.9284, 0.28", "111.762, -106.667, 53.2449, 0.28", "114.073, -106.791, 54.4875, 0.28", "115.065, -106.837, 54.9436, 0.55", "116.997, -106.872, 55.78, 0.55", "118.082, -106.845, 56.2385, 0.55", "121.661, -106.653, 57.7625, 0.55", "122.874, -106.577, 58.2589, 0.55", "124.961, -106.449, 59.2181, 0.55", "127.374, -106.37, 60.3098, 0.55", "128.095, -106.377, 60.6053, 0.83", "129.965, -106.424, 61.275, 0.28", "132.806, -106.662, 62.0806, 0.28", "134.601, -106.889, 62.5251, 0.55", "137.115, -107.242, 63.0419, 0.28", "139.326, -107.617, 63.4699, 0.55", "141.534, -107.993, 63.9021, 0.55", "144.618, -108.479, 64.5468, 0.28", "145.215, -108.552, 64.6763, 0.55", "147.021, -108.606, 65.0546, 0.28", "149.695, -108.443, 65.742, 0.55", "151.039, -108.242, 66.105, 0.28", "152.674, -107.893, 66.4261, 0.55", "154.312, -107.394, 66.8025, 0.28", "156.281, -106.666, 67.3178, 0.28", "158.327, -105.816, 67.8994, 0.55", "160.849, -104.747, 68.6734, 0.55", "165.023, -103.003, 69.9493, 0.28", "168.414, -101.587, 71.0166, 0.55", "172.151, -99.9935, 72.3254, 0.28", "174.056, -99.197, 73.0459, 0.28", "176.192, -98.2526, 73.8853, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "20.2086, 295.042, -57.9714, 0.28", "18.1837, 295.841, -59.0378, 0.28", "16.0044, 296.701, -60.1856, 0.83", "9.87141, 299.121, -63.4157, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "20.2086, 295.042, -57.9714, 0.55", "23.4188, 295.353, -57.6502, 0.55", "25.6469, 295.484, -57.7629, 0.83", "27.8728, 295.528, -58.0235, 0.55", "32.0211, 295.441, -58.8061, 0.55", "34.3905, 295.402, -59.3198, 1.11", "37.8391, 295.391, -60.1767, 0.55", "40.8159, 295.26, -61.1614, 0.83", "43.9713, 295.211, -62.2384, 0.83", "46.482, 295.193, -63.2504, 0.55", "48.0911, 295.27, -63.9937, 0.55", "49.8944, 295.407, -64.853, 0.28", "51.8275, 295.71, -65.5183, 0.55", "55.6854, 296.504, -66.3906, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-25.0652, -121.458, -39.7285, 0.28", "-22.2509, -127.101, -35.5295, 0.28", "-21.6531, -128.388, -34.9376, 0.55", "-20.7858, -130.324, -34.4674, 0.28", "-20.0737, -131.914, -34.0813, 0.55", "-19.1044, -134.078, -33.5558, 0.28", "-18.6269, -135.144, -33.2969, 0.55", "-17.2604, -138.423, -34.2357, 0.28", "-16.7979, -139.645, -34.6788, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-25.0652, -121.458, -39.7285, 0.28", "-25.9266, -123.737, -39.9523, 0.28", "-26.5849, -125.558, -40.0732, 0.55", "-27.9268, -129.404, -40.311, 0.28", "-29.798, -134.823, -40.5869, 0.28", "-30.2213, -136.081, -40.6224, 0.55", "-31.3293, -139.426, -40.6696, 0.28", "-32.3482, -142.435, -40.6964, 0.83", "-33.6385, -146.292, -40.7261, 0.28", "-34.0536, -147.611, -40.8585, 0.55", "-34.5464, -149.179, -41.0462, 0.28", "-34.7505, -149.81, -41.1238, 0.55", "-35.1038, -150.847, -41.2445, 0.28", "-35.4188, -151.615, -41.61, 0.55", "-37.7357, -155.869, -46.807, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-41.1775, -141.026, 14.5663, 0.55", "-45.4488, -144.128, 12.009, 0.55", "-46.6622, -145.031, 11.3698, 0.55", "-47.7901, -145.911, 10.8267, 0.28", "-49.5303, -147.441, 10.1205, 0.28", "-52.1347, -149.952, 9.04692, 0.55", "-53.7939, -151.669, 8.36801, 0.28", "-54.9527, -153.023, 7.91457, 0.55", "-56.3505, -154.727, 7.3806, 0.28", "-57.9481, -156.818, 6.78363, 0.55", "-60.0623, -160.064, 5.98926, 0.28", "-60.6132, -161.315, 5.75283, 0.28", "-61.4708, -163.854, 5.36614, 0.28", "-62.2721, -166.647, 4.67842, 0.55", "-62.8837, -168.955, 4.00817, 0.28", "-63.4352, -171.148, 3.33584, 0.55", "-64.1655, -174.434, 2.39742, 0.28", "-64.6316, -176.526, 1.7414, 0.55", "-65.5977, -180.528, 0.376081, 0.28", "-66.1169, -182.429, -0.362281, 0.55", "-66.6238, -184.136, -1.02853, 0.28", "-67.2349, -186.015, -1.74282, 0.55", "-68.1449, -188.47, -2.55684, 0.28", "-68.701, -190.096, -2.94639, 0.28", "-69.8861, -193.704, -3.58124, 0.55", "-71.0446, -197.216, -4.18688, 0.28", "-71.7199, -199.092, -4.44285, 0.55", "-73.1821, -202.883, -4.75624, 0.28", "-74.3279, -205.694, -4.88288, 0.55", "-75.5034, -208.454, -4.91734, 0.28", "-76.8567, -211.441, -4.88288, 0.28", "-78.0008, -213.936, -4.76904, 0.55", "-79.0472, -216.168, -4.70367, 0.55", "-80.5461, -219.33, -4.66766, 0.28", "-81.5379, -221.279, -4.79965, 0.55", "-82.6429, -223.425, -4.97744, 0.28", "-83.4241, -224.926, -5.17931, 0.55", "-84.5593, -227.062, -5.69896, 0.28", "-85.3345, -228.469, -6.09862, 0.55", "-87.1371, -231.294, -7.20633, 0.28", "-87.3908, -231.673, -7.38673, 0.55", "-88.8036, -233.823, -8.41921, 0.28", "-89.8453, -235.502, -9.24758, 0.55", "-90.7625, -237.093, -9.94248, 0.28", "-92.0003, -239.587, -10.7791, 0.55", "-93.2269, -242.518, -11.5827, 0.28", "-94.0637, -244.829, -12.2817, 0.55", "-95.1267, -248.666, -13.2938, 0.28", "-95.3876, -249.869, -13.5834, 0.55", "-95.87, -252.714, -14.2313, 0.28", "-96.1376, -254.687, -14.5914, 0.55", "-96.4866, -257.955, -15.1217, 0.28", "-96.7725, -261.599, -15.5816, 0.55", "-97.0247, -265.143, -15.9805, 0.28", "-97.2372, -267.463, -16.3444, 0.28", "-97.4646, -269.157, -16.6014, 0.28", "-97.7865, -271.849, -16.8419, 0.28", "-98.1456, -274.658, -17.0088, 0.28", "-98.5478, -277.339, -17.276, 0.55", "-98.8187, -279.369, -17.4352, 0.83", "-99.2511, -282.329, -17.7098, 0.55", "-99.7458, -285.678, -18.0402, 0.28", "-100.192, -288.324, -18.3674, 0.55", "-100.552, -290.288, -18.6357, 0.28", "-100.788, -291.562, -18.8235, 0.55", "-101.091, -292.971, -19.0489, 0.28", "-101.636, -295.321, -19.5115, 0.55", "-101.939, -296.533, -19.7592, 0.28", "-102.437, -298.942, -20.1638, 0.55", "-103.07, -302.029, -20.8005, 0.28", "-103.405, -303.449, -21.1806, 0.55", "-103.91, -305.325, -21.8131, 0.28", "-104.313, -306.539, -22.3856, 0.55", "-105.142, -308.585, -23.4695, 0.28", "-105.948, -310.495, -24.6078, 0.55", "-107.38, -313.539, -26.6299, 0.28", "-107.908, -314.555, -27.3924, 0.83", "-109.434, -317.01, -29.4068, 0.28", "-110.763, -318.911, -31.0125, 0.28" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-41.1775, -141.026, 14.5663, 0.28", "-41.2053, -143.401, 13.5246, 0.28", "-41.2819, -145.738, 12.6871, 0.28", "-41.5741, -151.377, 11.0001, 0.28", "-41.9012, -155.288, 9.91352, 0.55", "-42.3332, -159.337, 8.85682, 0.28", "-42.6803, -162.106, 8.17455, 0.55", "-43.319, -165.916, 7.39675, 0.28", "-43.661, -167.508, 7.12627, 0.55", "-44.4169, -170.255, 6.83837, 0.28", "-44.753, -171.417, 6.76709, 0.55", "-45.1377, -172.55, 6.63242, 0.28", "-45.5896, -173.743, 6.35496, 0.55", "-46.3508, -175.838, 5.70132, 0.28", "-46.5968, -176.632, 5.52649, 0.55", "-46.9742, -177.954, 5.33068, 0.28", "-47.2433, -178.998, 5.21331, 0.55", "-47.7345, -180.911, 5.03607, 0.28", "-48.7953, -184.864, 4.69489, 0.55", "-50.1732, -189.628, 4.3271, 0.83", "-51.1555, -192.616, 4.0937, 0.28", "-51.5346, -193.718, 4.04428, 0.55", "-52.1123, -195.423, 4.01202, 0.28", "-52.5232, -196.82, 4.07363, 0.55", "-52.9102, -198.342, 4.16276, 0.28", "-53.2326, -200.458, 4.23523, 0.55", "-53.3223, -202.693, 4.39124, 0.28", "-53.2893, -204.234, 4.44688, 0.55", "-53.0747, -206.9, 4.43103, 0.28", "-52.9466, -208.105, 4.33258, 0.55", "-52.5886, -210.945, 3.88492, 0.28", "-52.4032, -212.701, 3.42998, 0.55", "-52.2057, -215.402, 2.43663, 0.28", "-52.1132, -217.517, 1.50783, 0.55", "-52.0216, -220.564, 0.0985456, 0.28", "-52.0185, -221.738, -0.437157, 0.55", "-52.1198, -223.682, -1.38173, 0.28", "-52.241, -225.472, -2.245, 0.55", "-52.3905, -227.703, -3.25799, 0.28", "-52.5381, -229.931, -4.21425, 0.55", "-52.7782, -232.929, -5.4403, 0.28", "-52.9312, -234.639, -6.11017, 0.55", "-53.047, -236.102, -6.63605, 0.28", "-53.219, -237.781, -7.20084, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "55.6854, 296.504, -66.3906, 0.55", "57.1542, 293.428, -66.3443, 0.55", "58.0007, 291.656, -66.3176, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "55.6854, 296.504, -66.3906, 0.55", "57.1815, 297.403, -67.586, 0.55", "58.1065, 297.959, -68.3252, 0.83", "59.7663, 298.956, -69.6515, 0.55", "61.3569, 299.912, -70.9224, 0.55", "62.8994, 300.839, -72.155, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-37.7357, -155.869, -46.807, 0.28", "-36.9719, -158.442, -48.5736, 0.28", "-36.5692, -159.799, -49.5051, 0.55", "-34.3296, -167.344, -54.6853, 0.28", "-33.3627, -170.601, -56.9216, 0.28", "-32.5712, -173.268, -58.7524, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-37.7357, -155.869, -46.807, 0.28", "-36.9973, -158.239, -41.3963, 0.28", "-36.7563, -159.217, -39.524, 0.55", "-34.9884, -166.384, -25.7908, 0.28", "-34.7884, -167.195, -24.2365, 0.55", "-34.3942, -168.793, -21.1745, 0.28", "-34.0067, -170.364, -18.1643, 0.55", "-33.1353, -172.623, -13.6372, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-32.5712, -173.268, -58.7524, 0.28", "-33.1437, -178.301, -55.9763, 0.28", "-33.3932, -180.494, -54.7667, 0.55", "-34.3357, -188.778, -50.1975, 0.28", "-34.5382, -190.558, -49.2157, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-32.5712, -173.268, -58.7524, 0.28", "-32.725, -177.751, -64.6393, 0.28", "-32.7395, -179.16, -66.2736, 0.55", "-32.6648, -183.076, -70.2096, 0.28", "-32.7163, -184.023, -71.0481, 0.55", "-33.2847, -189.52, -75.7508, 0.28", "-33.4761, -191.172, -77.093, 0.55", "-33.9543, -193.864, -79.1133, 0.28", "-34.2971, -195.705, -80.4415, 0.55", "-35.5874, -202.81, -84.8572, 0.28", "-35.858, -203.978, -85.5455, 0.55", "-36.7401, -207.392, -87.3148, 0.28", "-37.5985, -209.8, -88.6083, 0.55", "-39.6737, -214.424, -91.2547, 0.28", "-40.9732, -216.861, -92.5387, 0.55", "-44.2082, -221.631, -94.5896, 0.28", "-45.033, -222.625, -95.0291, 0.55", "-47.7515, -225.145, -96.1215, 0.28", "-48.257, -225.548, -96.3237, 0.55", "-51.9845, -228.239, -98.8307, 0.28", "-54.5759, -230.582, -101.926, 0.55", "-56.4874, -232.854, -105.152, 0.28", "-57.0597, -233.676, -106.402, 0.55", "-58.336, -236.115, -110.236, 0.55", "-59.7231, -239.105, -115.096, 0.28", "-60.2885, -240.622, -117.658, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-33.1353, -172.623, -13.6372, 0.28", "-33.2471, -177.332, -14.5711, 0.28", "-33.2584, -179.632, -15.2732, 0.55", "-33.6246, -182.372, -15.7506, 0.28", "-33.9873, -184.305, -16.0248, 0.55", "-34.3995, -187.474, -16.1516, 0.28", "-34.6172, -189.588, -16.1251, 0.55", "-34.942, -192.938, -15.9195, 0.55", "-35.3131, -198.978, -15.4032, 0.28", "-35.3715, -200.844, -15.1659, 0.55", "-34.6946, -205.796, -13.8493, 0.28", "-34.3651, -206.909, -13.4248, 0.55", "-32.9578, -210.264, -11.9991, 0.28", "-31.9131, -212.154, -11.1737, 0.55", "-31.0765, -213.328, -10.607, 0.55", "-24.8996, -221.411, -6.19522, 0.28", "-24.3433, -222.097, -5.79406, 0.55", "-22.9524, -223.731, -4.77232, 0.28", "-21.5108, -225.376, -3.68432, 1.11", "-17.6992, -230.041, -0.60719, 0.28", "-17.217, -230.694, -0.186924, 0.55", "-15.5548, -233.644, 1.44745, 0.28", "-15.0932, -234.516, 1.95923, 0.55", "-14.6019, -235.504, 2.5568, 0.28", "-13.5819, -237.747, 3.82597, 0.55", "-12.4182, -241.936, 5.5838, 0.28", "-12.2717, -242.829, 5.96697, 0.55", "-12.2862, -244.103, 6.50339, 0.55", "-12.4099, -245.257, 7.005, 0.28", "-12.7451, -246.64, 7.61773, 0.55", "-14.4812, -250.625, 9.04982, 0.28", "-15.1004, -251.622, 9.37946, 0.55", "-16.4614, -253.602, 9.97043, 0.28", "-16.8562, -254.114, 10.1286, 0.55", "-18.0976, -255.518, 10.6137, 0.28", "-20.605, -258.074, 11.6791, 0.28", "-21.2935, -258.699, 11.9629, 0.28", "-22.0033, -259.285, 12.2633, 0.55", "-24.1163, -260.926, 13.2497, 0.28", "-25.1751, -261.603, 13.6946, 0.55", "-32.5081, -265.085, 16.4939, 0.28", "-33.8969, -265.552, 17.0016, 0.55", "-35.66, -265.985, 17.5676, 0.28", "-36.8808, -266.153, 17.9143, 0.55", "-41.9528, -266.327, 18.9859, 0.28", "-45.697, -266.029, 19.6275, 0.28", "-46.63, -265.833, 19.777, 0.55", "-47.4147, -265.642, 19.91, 0.55", "-51.1309, -264.586, 20.6071, 0.28", "-52.8946, -263.922, 21.001, 0.55", "-56.1472, -262.432, 21.9963, 0.28", "-57.3476, -261.772, 22.4049, 0.55", "-60.2551, -259.967, 23.4546, 0.28", "-61.1744, -259.383, 23.7367, 0.55", "-64.1893, -257.475, 24.564, 0.28", "-64.9779, -257.003, 24.794, 0.55", "-68.732, -255.109, 25.6646, 0.28", "-70.0949, -254.514, 25.9706, 0.55", "-75.1501, -252.631, 27.0329, 0.28", "-77.1482, -251.959, 27.4052, 0.28", "-78.921, -251.401, 27.8061, 0.55", "-83.9483, -249.673, 29.2087, 0.28", "-85.8187, -248.958, 29.8515, 0.55", "-88.1175, -247.874, 30.9359, 0.28", "-88.8628, -247.376, 31.4349, 0.55", "-91.8761, -244.923, 33.6774, 0.28", "-92.5819, -244.304, 34.2456, 0.55", "-95.5648, -241.546, 36.9275, 0.28", "-97.2177, -240.253, 38.1663, 0.55", "-98.8235, -239.213, 39.2428, 0.28", "-99.6147, -238.864, 39.5419, 0.55", "-101.491, -238.338, 40.0965, 0.28", "-103.374, -237.957, 40.7065, 0.55", "-105.511, -237.675, 41.5222, 0.28", "-107.181, -237.5, 42.1888, 0.55", "-111.987, -237.178, 44.2927, 0.28", "-116.985, -236.888, 46.6739, 0.28", "-118.604, -236.788, 47.5252, 0.55", "-121.943, -236.716, 49.4349, 0.28", "-122.737, -236.739, 49.9031, 0.55", "-125.309, -236.922, 51.4898, 0.28", "-129.138, -237.483, 54.042, 0.28", "-129.962, -237.649, 54.5268, 0.55", "-133.096, -238.443, 56.3342, 0.28", "-133.903, -238.682, 56.7708, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-33.1353, -172.623, -13.6372, 0.28", "-38.796, -175.885, -15.3916, 0.28", "-42.5347, -177.894, -16.2989, 0.55", "-49.0066, -181.241, -17.4355, 0.28", "-52.5677, -183.115, -18.0751, 0.55", "-56.0559, -184.952, -19.1183, 0.28", "-60.777, -187.483, -20.6207, 0.55", "-64.1744, -189.453, -21.8264, 0.28", "-65.6313, -190.306, -22.3976, 0.55", "-71.2882, -193.594, -24.462, 0.28", "-77.0842, -196.943, -26.796, 0.28", "-79.3683, -198.297, -27.5202, 0.55", "-87.4912, -203.1, -29.6152, 0.28", "-90.4635, -204.768, -30.3393, 0.55", "-92.3367, -205.782, -30.6698, 0.28", "-96.2073, -207.726, -30.8798, 0.55", "-105.032, -212.054, -30.3362, 0.28", "-106.565, -212.724, -30.2351, 0.55", "-107.819, -213.176, -30.0731, 0.28", "-109.325, -213.766, -29.9536, 0.55", "-111.77, -214.82, -29.8666, 0.28", "-113.893, -215.83, -29.768, 0.55", "-118.963, -218.552, -29.9301, 0.28", "-123.873, -221.356, -30.6351, 0.28", "-129.947, -224.873, -31.9551, 0.28", "-132.374, -226.351, -32.6181, 0.55", "-135.021, -228.112, -33.4863, 0.28", "-137.894, -230.103, -34.5555, 0.55", "-142.879, -234.199, -36.6244, 0.28", "-144.442, -235.608, -37.5089, 0.55", "-145.98, -236.834, -38.5563, 0.28", "-146.639, -237.292, -39.0635, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-133.903, -238.682, 56.7708, 0.28", "-134.983, -241.309, 56.0186, 0.28", "-134.774, -241.916, 55.8414, 0.55", "-133.628, -244.115, 55.3584, 0.28", "-132.75, -245.554, 55.0636, 0.55", "-132.076, -246.54, 54.851, 0.28", "-131.01, -248.085, 54.4796, 0.55", "-127.982, -251.821, 53.8091, 0.28", "-127.228, -252.655, 53.6424, 0.55", "-126.563, -253.286, 53.491, 0.28", "-125.666, -254.067, 53.3155, 0.55", "-124.625, -255.015, 53.1022, 0.28", "-123.62, -255.999, 52.797, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-133.903, -238.682, 56.7708, 0.28", "-137.318, -237.886, 57.2798, 0.28", "-138.763, -237.597, 57.4713, 0.55", "-144.003, -236.629, 58.2594, 0.28", "-145.197, -236.402, 58.3977, 0.55", "-151.998, -235.062, 59.2133, 0.28", "-153.566, -234.734, 59.3179, 0.55", "-156.163, -234.185, 59.2181, 0.28", "-157.52, -233.875, 59.076, 0.55", "-161.135, -233.034, 58.4191, 0.28", "-162.572, -232.628, 57.9723, 0.55", "-167.019, -230.988, 55.9942, 0.28", "-168.27, -230.559, 55.3016, 0.55", "-169.704, -230.158, 54.4232, 0.28", "-170.681, -229.906, 53.778, 0.55", "-173.019, -229.418, 52.1809, 0.28", "-174.03, -229.249, 51.4599, 0.83", "-177.768, -228.998, 49.049, 0.28", "-179.04, -229.011, 48.2651, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-146.639, -237.292, -39.0635, 0.28", "-149.828, -238.438, -42.7725, 0.28", "-152.554, -239.418, -45.9431, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-146.639, -237.292, -39.0635, 0.28", "-145.174, -240.785, -39.5359, 0.28", "-144.375, -242.858, -39.609, 0.55", "-144.192, -243.39, -39.6122, 0.28", "-143.947, -244.071, -39.6031, 0.55", "-143.33, -245.786, -39.5801, 0.28", "-142.555, -247.942, -39.5513, 0.55", "-141.968, -249.891, -39.3137, 0.28", "-141.751, -250.92, -39.2298, 0.55", "-141.363, -252.698, -39.0396, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-152.554, -239.418, -45.9431, 0.28", "-153.323, -240.467, -45.0456, 0.28", "-153.75, -240.881, -44.5582, 0.55", "-154.745, -241.843, -43.4233, 0.28", "-154.884, -241.977, -43.2651, 0.55", "-156.472, -243.514, -41.4524, 0.28", "-157.475, -244.485, -40.308, 0.55", "-158.144, -245.242, -38.9961, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-152.554, -239.418, -45.9431, 0.28", "-152.446, -241.967, -45.9195, 0.28", "-152.385, -243.409, -45.9062, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-141.363, -252.698, -39.0396, 0.28", "-139.852, -252.929, -41.8909, 0.28", "-139.151, -253.036, -43.2136, 0.83" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-141.363, -252.698, -39.0396, 0.28", "-152.774, -257.418, -49.4618, 0.28", "-153.819, -257.902, -50.412, 0.55", "-154.89, -258.532, -51.4394, 0.28", "-156.394, -259.589, -52.9186, 0.55", "-157.612, -260.643, -54.1847, 0.28", "-159.012, -262.436, -55.9575, 0.55", "-158.332, -266.033, -56.8834, 0.28", "-157.237, -270.199, -58.2614, 0.55", "-156.436, -273.691, -59.9392, 0.28", "-156.012, -275.12, -60.4011, 0.55", "-154.635, -279.21, -61.3017, 0.28", "-153.685, -281.622, -61.6393, 0.55", "-152.584, -284.439, -62.0118, 0.28", "-151.305, -287.515, -62.181, 0.55", "-147.757, -296.28, -62.5631, 0.28", "-147.527, -296.799, -62.5377, 0.55", "-146.804, -298.253, -62.2884, 0.28", "-146.262, -299.4, -62.0789, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_11", "dend_0", "dend_19", "dend_12", "dend_10", "dend_1", "dend_44", "dend_20", "dend_18", "dend_13", "dend_3", "dend_2", "dend_46", "dend_45", "dend_25", "dend_21", "dend_17", "dend_14", "dend_5", "dend_4", "dend_48", "dend_47", "dend_43", "dend_26", "dend_22", "dend_16", "dend_15", "dend_9", "dend_6", "dend_42", "dend_27", "dend_24", "dend_23", "dend_8", "dend_7", "dend_39", "dend_28", "dend_41", "dend_40", "dend_36", "dend_29", "dend_38", "dend_37", "dend_33", "dend_30", "dend_35", "dend_34", "dend_32", "dend_31" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_11", "dend_0", "dend_19", "dend_12", "dend_10", "dend_1", "dend_44", "dend_20", "dend_18", "dend_13", "dend_3", "dend_2", "dend_46", "dend_45", "dend_25", "dend_21", "dend_17", "dend_14", "dend_5", "dend_4", "dend_48", "dend_47", "dend_43", "dend_26", "dend_22", "dend_16", "dend_15", "dend_9", "dend_6", "dend_42", "dend_27", "dend_24", "dend_23", "dend_8", "dend_7", "dend_39", "dend_28", "dend_41", "dend_40", "dend_36", "dend_29", "dend_38", "dend_37", "dend_33", "dend_30", "dend_35", "dend_34", "dend_32", "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_DBC_3f985b6ce2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_44, id: dend_44, parent: dend_19
create dend_44
public dend_44
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_12
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_25, id: dend_25, parent: dend_20
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_25
create dend_43
public dend_43
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_42, id: dend_42, parent: dend_26
create dend_42
public dend_42
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_28
create dend_36
public dend_36
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_11(0), soma_0(0.45000030386586765)
    connect dend_0(0), soma_0(0.45000030386586765)
    connect axon_0(0), soma_0(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_44(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_25(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_42(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.667779, -8.61462, 0.0, 1.82374 ) }
    soma_0 { pt3dadd( 0.649013, -7.62864, 0.0, 3.14268 ) }
    soma_0 { pt3dadd( 0.630248, -6.64266, 0.0, 3.90944 ) }
    soma_0 { pt3dadd( 0.611482, -5.65668, 0.0, 4.60231 ) }
    soma_0 { pt3dadd( 0.592716, -4.67069, 0.0, 5.57951 ) }
    soma_0 { pt3dadd( 0.57395, -3.68471, 0.0, 6.64563 ) }
    soma_0 { pt3dadd( 0.555185, -2.69873, 0.0, 7.55969 ) }
    soma_0 { pt3dadd( 0.536419, -1.71275, 0.0, 7.78617 ) }
    soma_0 { pt3dadd( 0.517653, -0.726767, 0.0, 7.99436 ) }
    soma_0 { pt3dadd( 0.498888, 0.259215, 0.0, 8.35249 ) }
    soma_0 { pt3dadd( 0.480122, 1.2452, 0.0, 8.72844 ) }
    soma_0 { pt3dadd( 0.461356, 2.23118, 0.0, 9.06354 ) }
    soma_0 { pt3dadd( 0.44259, 3.21716, 0.0, 8.84862 ) }
    soma_0 { pt3dadd( 0.423825, 4.20314, 0.0, 8.54462 ) }
    soma_0 { pt3dadd( 0.405059, 5.18912, 0.0, 8.13269 ) }
    soma_0 { pt3dadd( 0.386293, 6.17511, 0.0, 7.35702 ) }
    soma_0 { pt3dadd( 0.367527, 7.16109, 0.0, 6.25172 ) }
    soma_0 { pt3dadd( 0.348762, 8.14707, 0.0, 5.0691 ) }
    soma_0 { pt3dadd( 0.329996, 9.13305, 0.0, 3.84217 ) }
    soma_0 { pt3dadd( 0.31123, 10.119, 0.0, 2.61525 ) }
    soma_0 { pt3dadd( 0.292465, 11.105, 0.0, 1.57474 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 21/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.620263, -8.91762, 17.51, 1.94 ) }
    dend_11 { pt3dadd( -0.668956, -12.0976, 17.0857, 1.94 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 23/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.570264, 11.6746, -5.02, 1.38 ) }
    dend_0 { pt3dadd( -0.772676, 14.0754, -5.02, 1.38 ) }
    dend_0 { pt3dadd( -1.22587, 18.2997, -4.88597, 1.94 ) }
    dend_0 { pt3dadd( -1.44777, 20.2649, -4.75505, 1.11 ) }
    dend_0 { pt3dadd( -1.70443, 23.0409, -4.57197, 0.55 ) }
    dend_0 { pt3dadd( -1.90008, 25.6216, -4.2978, 1.11 ) }
    dend_0 { pt3dadd( -2.11082, 29.0115, -3.87779, 0.83 ) }
    dend_0 { pt3dadd( -2.35244, 33.2212, -3.27291, 1.38 ) }
    dend_0 { pt3dadd( -2.58462, 37.3451, -2.57049, 1.11 ) }
    dend_0 { pt3dadd( -2.75977, 41.2991, -1.90104, 0.83 ) }
    dend_0 { pt3dadd( -2.77426, 45.5727, -1.12688, 1.11 ) }
    dend_0 { pt3dadd( -2.70906, 48.6539, -0.649522, 0.55 ) }
    dend_0 { pt3dadd( -2.61262, 51.6817, -0.294358, 0.55 ) }
    dend_0 { pt3dadd( -2.44035, 55.3596, -0.0277255, 0.55 ) }
    dend_0 { pt3dadd( -2.26562, 58.2178, 0.075212, 1.11 ) }
    dend_0 { pt3dadd( -2.04096, 62.1369, 0.108523, 0.83 ) }
    dend_0 { pt3dadd( -1.71905, 67.3587, 0.0444475, 0.83 ) }
    dend_0 { pt3dadd( -1.26383, 72.4459, 0.0283942, 0.83 ) }
    dend_0 { pt3dadd( -0.891569, 76.2048, -0.0231102, 0.83 ) }
    dend_0 { pt3dadd( -0.646426, 78.8023, -0.0446549, 0.83 ) }
    dend_0 { pt3dadd( -0.396124, 81.5782, -0.0164701, 0.83 ) }
    dend_0 { pt3dadd( 0.0338263, 86.6058, 0.0565749, 0.83 ) }
    dend_0 { pt3dadd( 0.588901, 91.9501, 0.272403, 0.83 ) }
    dend_0 { pt3dadd( 1.06731, 96.1737, 0.454876, 1.11 ) }
    dend_0 { pt3dadd( 1.40396, 99.6177, 0.604838, 0.83 ) }
    dend_0 { pt3dadd( 1.74919, 103.29, 0.753357, 0.83 ) }
    dend_0 { pt3dadd( 2.26962, 108.077, 0.899459, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 50/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.292465, 11.105, 0.0, 0.55 ) }
    axon_0 { pt3dadd( 0.00702837, 26.1023, 0.0, 0.55 ) }
    axon_0 { pt3dadd( -0.278408, 41.0996, 0.0, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 53/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.668956, -12.0976, 17.0857, 0.55 ) }
    dend_19 { pt3dadd( -3.30036, -18.2035, 16.9199, 0.55 ) }
    dend_19 { pt3dadd( -4.58325, -21.3159, 16.7241, 0.55 ) }
    dend_19 { pt3dadd( -5.62847, -23.8563, 16.5268, 0.83 ) }
    dend_19 { pt3dadd( -6.91384, -26.915, 16.3383, 0.55 ) }
    dend_19 { pt3dadd( -8.91993, -31.406, 16.0001, 0.83 ) }
    dend_19 { pt3dadd( -10.1752, -34.0461, 15.79, 0.55 ) }
    dend_19 { pt3dadd( -11.2953, -36.448, 15.7181, 0.83 ) }
    dend_19 { pt3dadd( -11.9841, -38.0824, 15.7483, 0.28 ) }
    dend_19 { pt3dadd( -13.1314, -40.9086, 15.7785, 0.83 ) }
    dend_19 { pt3dadd( -14.9438, -45.5896, 15.7542, 0.83 ) }
    dend_19 { pt3dadd( -16.9516, -50.7712, 15.7632, 0.83 ) }
    dend_19 { pt3dadd( -18.471, -54.7151, 15.9916, 0.55 ) }
    dend_19 { pt3dadd( -20.1988, -59.3184, 16.4921, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 67/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.668956, -12.0976, 17.0857, 1.11 ) }
    dend_12 { pt3dadd( 1.76537, -17.0979, 20.745, 1.11 ) }
    dend_12 { pt3dadd( 3.31141, -20.2736, 23.069, 0.83 ) }
    dend_12 { pt3dadd( 5.83952, -25.4666, 26.8694, 1.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 71/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 2.26962, 108.077, 0.899459, 0.83 ) }
    dend_10 { pt3dadd( 3.96043, 110.386, 1.23851, 0.83 ) }
    dend_10 { pt3dadd( 4.79016, 111.705, 1.57117, 0.83 ) }
    dend_10 { pt3dadd( 5.85606, 113.889, 2.28722, 0.55 ) }
    dend_10 { pt3dadd( 6.68961, 115.984, 2.99007, 0.55 ) }
    dend_10 { pt3dadd( 7.96981, 119.44, 4.15006, 0.55 ) }
    dend_10 { pt3dadd( 8.49406, 120.937, 4.65723, 0.83 ) }
    dend_10 { pt3dadd( 9.32226, 124.024, 5.85046, 0.55 ) }
    dend_10 { pt3dadd( 10.144, 127.542, 7.28359, 0.55 ) }
    dend_10 { pt3dadd( 10.5418, 129.598, 8.14443, 0.55 ) }
    dend_10 { pt3dadd( 11.0758, 132.505, 9.31786, 0.55 ) }
    dend_10 { pt3dadd( 11.4072, 134.213, 9.93615, 0.55 ) }
    dend_10 { pt3dadd( 12.0106, 136.965, 10.8833, 0.55 ) }
    dend_10 { pt3dadd( 13.09, 141.139, 12.2412, 0.55 ) }
    dend_10 { pt3dadd( 14.3688, 144.92, 13.3758, 0.55 ) }
    dend_10 { pt3dadd( 15.1782, 147.005, 14.0651, 0.55 ) }
    dend_10 { pt3dadd( 15.7248, 148.14, 14.4208, 0.83 ) }
    dend_10 { pt3dadd( 16.5341, 149.463, 14.7534, 0.55 ) }
    dend_10 { pt3dadd( 17.6201, 150.868, 15.0365, 0.83 ) }
    dend_10 { pt3dadd( 19.3389, 152.818, 15.3047, 0.83 ) }
    dend_10 { pt3dadd( 21.3366, 154.759, 15.5205, 0.55 ) }
    dend_10 { pt3dadd( 24.1553, 158.009, 15.5898, 0.28 ) }
    dend_10 { pt3dadd( 26.2971, 160.853, 15.6993, 0.28 ) }
    dend_10 { pt3dadd( 27.6878, 162.737, 15.7605, 0.83 ) }
    dend_10 { pt3dadd( 28.4725, 163.865, 15.7418, 0.28 ) }
    dend_10 { pt3dadd( 29.1688, 164.927, 15.6695, 0.83 ) }
    dend_10 { pt3dadd( 32.7552, 170.907, 14.869, 0.28 ) }
    dend_10 { pt3dadd( 34.0758, 174.298, 14.5854, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 2.26962, 108.077, 0.899459, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 2.59256, 111.047, 1.24222, 0.83 ) }
    dend_1 { pt3dadd( 2.81663, 114.587, 1.58704, 0.83 ) }
    dend_1 { pt3dadd( 2.9103, 117.833, 1.8375, 0.83 ) }
    dend_1 { pt3dadd( 2.97117, 120.775, 2.01264, 0.55 ) }
    dend_1 { pt3dadd( 3.04502, 124.398, 2.18618, 0.55 ) }
    dend_1 { pt3dadd( 3.09619, 127.25, 2.30045, 0.55 ) }
    dend_1 { pt3dadd( 3.12748, 130.997, 2.3539, 0.55 ) }
    dend_1 { pt3dadd( 3.25173, 136.489, 2.38123, 0.55 ) }
    dend_1 { pt3dadd( 3.36292, 141.894, 2.41924, 0.55 ) }
    dend_1 { pt3dadd( 3.55148, 145.898, 2.36326, 0.55 ) }
    dend_1 { pt3dadd( 3.86605, 150.173, 2.29788, 0.55 ) }
    dend_1 { pt3dadd( 4.3929, 156.23, 2.2156, 0.55 ) }
    dend_1 { pt3dadd( 5.22279, 163.099, 2.13481, 0.55 ) }
    dend_1 { pt3dadd( 5.50913, 165.07, 2.11063, 0.28 ) }
    dend_1 { pt3dadd( 6.14646, 168.841, 2.07329, 0.55 ) }
    dend_1 { pt3dadd( 6.81088, 172.044, 2.05812, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 16/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.278408, 41.0996, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -0.563845, 56.0969, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -0.849281, 71.0941, 0.0, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_19 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -20.1988, -59.3184, 16.4921, 0.55 ) }
    dend_44 { pt3dadd( -23.2981, -64.3639, 16.2653, 0.55 ) }
    dend_44 { pt3dadd( -24.3338, -66.0047, 16.3175, 0.28 ) }
    dend_44 { pt3dadd( -24.8778, -66.8799, 16.4484, 0.55 ) }
    dend_44 { pt3dadd( -26.5164, -69.516, 16.8426, 0.55 ) }
    dend_44 { pt3dadd( -27.4688, -71.0481, 17.0717, 0.55 ) }
    dend_44 { pt3dadd( -29.3557, -74.0839, 17.5257, 0.55 ) }
    dend_44 { pt3dadd( -30.792, -76.4983, 18.2842, 0.55 ) }
    dend_44 { pt3dadd( -32.4487, -79.1832, 19.0922, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 28/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -20.1988, -59.3184, 16.4921, 0.55 ) }
    dend_20 { pt3dadd( -19.7315, -62.6002, 16.6715, 0.55 ) }
    dend_20 { pt3dadd( -19.7108, -62.7455, 16.6794, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_12 (entry count 31/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 5.83952, -25.4666, 26.8694, 0.83 ) }
    dend_18 { pt3dadd( 5.29776, -29.1826, 26.41, 0.83 ) }
    dend_18 { pt3dadd( 5.02891, -31.415, 26.1592, 1.11 ) }
    dend_18 { pt3dadd( 4.40075, -35.9865, 25.8379, 0.55 ) }
    dend_18 { pt3dadd( 4.06465, -38.4071, 25.7568, 0.55 ) }
    dend_18 { pt3dadd( 3.55703, -42.2439, 25.9001, 0.55 ) }
    dend_18 { pt3dadd( 3.14986, -46.0454, 26.2631, 0.55 ) }
    dend_18 { pt3dadd( 2.97979, -48.3128, 26.6578, 0.55 ) }
    dend_18 { pt3dadd( 2.8364, -51.349, 27.4524, 0.55 ) }
    dend_18 { pt3dadd( 2.69289, -54.5714, 28.5147, 0.83 ) }
    dend_18 { pt3dadd( 2.53151, -58.785, 30.0142, 0.83 ) }
    dend_18 { pt3dadd( 2.36259, -61.3189, 30.9929, 0.83 ) }
    dend_18 { pt3dadd( 2.15995, -64.562, 32.2972, 0.83 ) }
    dend_18 { pt3dadd( 1.95041, -67.7337, 33.6672, 0.83 ) }
    dend_18 { pt3dadd( 1.74702, -70.8521, 35.0095, 0.55 ) }
    dend_18 { pt3dadd( 1.39937, -75.3986, 36.9025, 0.55 ) }
    dend_18 { pt3dadd( 1.139, -78.6113, 38.179, 0.55 ) }
    dend_18 { pt3dadd( 0.868344, -82.5199, 39.7118, 0.55 ) }
    dend_18 { pt3dadd( 0.733922, -86.3146, 41.1292, 0.55 ) }
    dend_18 { pt3dadd( 0.73943, -89.179, 42.0231, 0.83 ) }
    dend_18 { pt3dadd( 0.90724, -91.6012, 42.6549, 0.55 ) }
    dend_18 { pt3dadd( 1.20034, -93.9566, 43.0524, 0.28 ) }
    dend_18 { pt3dadd( 1.56114, -95.8834, 43.1928, 0.55 ) }
    dend_18 { pt3dadd( 2.22806, -98.8307, 43.1768, 0.28 ) }
    dend_18 { pt3dadd( 2.71734, -100.556, 43.0391, 0.28 ) }
    dend_18 { pt3dadd( 3.48226, -102.94, 42.7162, 0.28 ) }
    dend_18 { pt3dadd( 4.17679, -105.1, 42.3551, 0.55 ) }
    dend_18 { pt3dadd( 4.94291, -107.683, 41.7454, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 5.83952, -25.4666, 26.8694, 0.83 ) }
    dend_13 { pt3dadd( 9.37057, -30.6051, 26.8226, 0.83 ) }
    dend_13 { pt3dadd( 12.1352, -34.8764, 26.8014, 0.83 ) }
    dend_13 { pt3dadd( 19.282, -45.9759, 26.8267, 0.83 ) }
    dend_13 { pt3dadd( 21.5634, -49.5372, 26.8134, 0.83 ) }
    dend_13 { pt3dadd( 23.7862, -52.7981, 26.8108, 0.83 ) }
    dend_13 { pt3dadd( 25.716, -55.5166, 26.8196, 0.83 ) }
    dend_13 { pt3dadd( 27.2666, -57.6403, 26.8011, 0.83 ) }
    dend_13 { pt3dadd( 29.6101, -60.5187, 26.8748, 0.83 ) }
    dend_13 { pt3dadd( 32.8293, -63.5866, 27.1521, 0.83 ) }
    dend_13 { pt3dadd( 36.4662, -67.0422, 27.5987, 0.83 ) }
    dend_13 { pt3dadd( 39.2039, -69.4914, 28.1271, 0.83 ) }
    dend_13 { pt3dadd( 42.304, -72.3528, 28.8557, 0.55 ) }
    dend_13 { pt3dadd( 44.1429, -74.1953, 29.369, 0.83 ) }
    dend_13 { pt3dadd( 47.8691, -78.0719, 30.5521, 0.55 ) }
    dend_13 { pt3dadd( 50.8294, -81.3014, 31.6525, 0.55 ) }
    dend_13 { pt3dadd( 54.4693, -85.7597, 33.1952, 0.55 ) }
    dend_13 { pt3dadd( 57.8941, -90.2983, 34.8115, 0.83 ) }
    dend_13 { pt3dadd( 60.3865, -94.1457, 36.1375, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 78/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 6.81088, 172.044, 2.05812, 0.83 ) }
    dend_3 { pt3dadd( 9.17093, 175.166, 1.87004, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.81088, 172.044, 2.05812, 0.55 ) }
    dend_2 { pt3dadd( 7.69218, 173.798, 2.06702, 0.55 ) }
    dend_2 { pt3dadd( 8.80745, 176.22, 2.19258, 0.55 ) }
    dend_2 { pt3dadd( 10.212, 179.415, 2.41995, 0.55 ) }
    dend_2 { pt3dadd( 11.4471, 182.123, 2.67464, 0.55 ) }
    dend_2 { pt3dadd( 12.1931, 183.94, 2.9119, 0.55 ) }
    dend_2 { pt3dadd( 13.0113, 186.295, 3.26864, 0.55 ) }
    dend_2 { pt3dadd( 13.3639, 187.781, 3.58261, 0.28 ) }
    dend_2 { pt3dadd( 13.5065, 188.881, 3.86415, 0.28 ) }
    dend_2 { pt3dadd( 13.5615, 190.293, 4.27465, 0.83 ) }
    dend_2 { pt3dadd( 13.5651, 193.49, 5.23116, 0.55 ) }
    dend_2 { pt3dadd( 13.4857, 196.585, 6.09535, 0.55 ) }
    dend_2 { pt3dadd( 13.294, 200.585, 6.9503, 0.55 ) }
    dend_2 { pt3dadd( 13.1567, 203.206, 7.4035, 0.55 ) }
    dend_2 { pt3dadd( 13.0824, 204.904, 7.61686, 0.28 ) }
    dend_2 { pt3dadd( 13.0338, 206.379, 7.76506, 0.28 ) }
    dend_2 { pt3dadd( 13.0275, 208.123, 7.89067, 0.83 ) }
    dend_2 { pt3dadd( 12.9857, 210.737, 8.04132, 0.28 ) }
    dend_2 { pt3dadd( 12.9418, 213.361, 8.10671, 0.55 ) }
    dend_2 { pt3dadd( 12.8604, 216.047, 8.17489, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 12.8027, 218.527, 8.25628, 0.55 ) }
    dend_2 { pt3dadd( 12.7794, 219.185, 8.28624, 0.55 ) }
    dend_2 { pt3dadd( 12.7083, 220.79, 8.41517, 0.55 ) }
    dend_2 { pt3dadd( 12.6545, 222.121, 8.56293, 0.55 ) }
    dend_2 { pt3dadd( 12.4488, 223.806, 8.75416, 0.55 ) }
    dend_2 { pt3dadd( 12.0652, 225.367, 8.97226, 0.55 ) }
    dend_2 { pt3dadd( 11.3603, 227.427, 9.35361, 0.55 ) }
    dend_2 { pt3dadd( 10.9993, 228.266, 9.56599, 0.55 ) }
    dend_2 { pt3dadd( 9.68194, 231.025, 10.4006, 0.83 ) }
    dend_2 { pt3dadd( 8.6104, 233.18, 11.2613, 0.55 ) }
    dend_2 { pt3dadd( 7.33486, 235.522, 12.3128, 0.83 ) }
    dend_2 { pt3dadd( 6.30048, 237.283, 13.2016, 0.55 ) }
    dend_2 { pt3dadd( 5.51005, 238.522, 13.9247, 0.83 ) }
    dend_2 { pt3dadd( 4.59458, 239.92, 14.8382, 0.55 ) }
    dend_2 { pt3dadd( 3.08095, 241.908, 16.517, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 15/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -32.4487, -79.1832, 19.0922, 0.55 ) }
    dend_46 { pt3dadd( -33.5413, -83.3028, 13.4469, 0.55 ) }
    dend_46 { pt3dadd( -33.703, -83.9123, 12.6117, 0.55 ) }
    dend_46 { pt3dadd( -34.0338, -85.1595, 10.9027, 0.28 ) }
    dend_46 { pt3dadd( -34.2272, -85.8888, 9.90332, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 20/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -32.4487, -79.1832, 19.0922, 0.55 ) }
    dend_45 { pt3dadd( -34.4672, -80.8693, 18.5162, 0.55 ) }
    dend_45 { pt3dadd( -36.6978, -82.7224, 17.9282, 0.28 ) }
    dend_45 { pt3dadd( -38.5972, -84.2436, 17.4754, 0.55 ) }
    dend_45 { pt3dadd( -40.7139, -85.8994, 16.9634, 0.28 ) }
    dend_45 { pt3dadd( -42.0169, -86.8753, 16.6549, 0.55 ) }
    dend_45 { pt3dadd( -43.0762, -87.6451, 16.3872, 0.28 ) }
    dend_45 { pt3dadd( -44.4465, -88.5931, 16.0803, 0.55 ) }
    dend_45 { pt3dadd( -46.3265, -89.72, 15.7296, 0.28 ) }
    dend_45 { pt3dadd( -48.1088, -90.6822, 15.4303, 0.55 ) }
    dend_45 { pt3dadd( -49.9567, -91.614, 15.2512, 0.28 ) }
    dend_45 { pt3dadd( -51.4335, -92.3382, 15.1281, 0.55 ) }
    dend_45 { pt3dadd( -54.3474, -93.7054, 15.0345, 0.28 ) }
    dend_45 { pt3dadd( -56.0358, -94.525, 15.0574, 0.55 ) }
    dend_45 { pt3dadd( -57.9539, -95.5617, 15.1446, 0.55 ) }
    dend_45 { pt3dadd( -60.6245, -97.1385, 15.2731, 0.28 ) }
    dend_45 { pt3dadd( -61.5881, -97.7607, 15.2866, 0.28 ) }
    dend_45 { pt3dadd( -64.2438, -99.6411, 15.2534, 0.55 ) }
    dend_45 { pt3dadd( -66.3808, -101.308, 15.1914, 0.28 ) }
    dend_45 { pt3dadd( -68.8021, -103.322, 15.1896, 0.55 ) }
    dend_45 { pt3dadd( -71.4721, -105.6, 15.2693, 0.28 ) }
    dend_45 { pt3dadd( -72.8535, -106.798, 15.3327, 0.55 ) }
    dend_45 { pt3dadd( -75.8006, -109.457, 15.542, 0.28 ) }
    dend_45 { pt3dadd( -77.5063, -111.252, 15.2257, 0.83 ) }
    dend_45 { pt3dadd( -79.4303, -113.527, 14.3395, 0.28 ) }
    dend_45 { pt3dadd( -79.9695, -114.254, 13.887, 0.28 ) }
    dend_45 { pt3dadd( -80.6443, -115.302, 13.0592, 0.28 ) }
    dend_45 { pt3dadd( -81.7561, -117.135, 11.4325, 0.55 ) }
    dend_45 { pt3dadd( -86.3691, -124.876, 3.45052, 0.28 ) }
    dend_45 { pt3dadd( -86.8681, -125.687, 2.59498, 0.55 ) }
    dend_45 { pt3dadd( -87.7299, -127.02, 1.19041, 0.28 ) }
    dend_45 { pt3dadd( -88.4873, -128.116, 0.151494, 0.55 ) }
    dend_45 { pt3dadd( -89.6546, -129.615, -1.05888, 0.28 ) }
    dend_45 { pt3dadd( -91.3675, -131.25, -1.69957, 0.55 ) }
    dend_45 { pt3dadd( -93.1167, -132.583, -1.38551, 0.28 ) }
    dend_45 { pt3dadd( -94.0596, -133.303, -1.22618, 0.55 ) }
    dend_45 { pt3dadd( -95.2141, -134.205, -0.926857, 0.28 ) }
    dend_45 { pt3dadd( -95.8451, -134.661, -0.736254, 0.55 ) }
    dend_45 { pt3dadd( -98.3539, -136.3, 0.0914814, 0.28 ) }
    dend_45 { pt3dadd( -99.4531, -136.994, 0.468041, 0.55 ) }
    dend_45 { pt3dadd( -101.555, -138.279, 1.20507, 0.28 ) }
    dend_45 { pt3dadd( -104.631, -140.122, 2.36166, 0.55 ) }
    dend_45 { pt3dadd( -107.779, -141.994, 3.59383, 0.55 ) }
    dend_45 { pt3dadd( -109.686, -143.141, 4.32768, 0.28 ) }
    dend_45 { pt3dadd( -110.348, -143.54, 4.56097, 0.55 ) }
    dend_45 { pt3dadd( -112.177, -144.624, 5.25976, 0.28 ) }
    dend_45 { pt3dadd( -114.235, -145.84, 6.19246, 0.55 ) }
    dend_45 { pt3dadd( -115.131, -146.367, 6.54594, 0.28 ) }
    dend_45 { pt3dadd( -116.844, -147.578, 7.29929, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_20 (entry count 69/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -19.7108, -62.7455, 16.6794, 0.28 ) }
    dend_25 { pt3dadd( -18.591, -67.8351, 11.8632, 0.28 ) }
    dend_25 { pt3dadd( -18.3055, -69.2894, 10.615, 0.28 ) }
    dend_25 { pt3dadd( -17.8711, -71.823, 8.62219, 0.28 ) }
    dend_25 { pt3dadd( -17.3658, -75.472, 5.80721, 0.55 ) }
    dend_25 { pt3dadd( -16.9045, -80.1469, 2.09841, 0.28 ) }
    dend_25 { pt3dadd( -16.7522, -82.4844, 0.31481, 0.55 ) }
    dend_25 { pt3dadd( -16.7468, -86.2378, -2.33733, 0.28 ) }
    dend_25 { pt3dadd( -16.8119, -87.5636, -3.24324, 0.55 ) }
    dend_25 { pt3dadd( -17.4037, -92.2071, -6.40113, 0.28 ) }
    dend_25 { pt3dadd( -18.1989, -95.0772, -8.57522, 0.28 ) }
    dend_25 { pt3dadd( -18.9154, -96.9582, -10.3252, 0.55 ) }
    dend_25 { pt3dadd( -19.5463, -98.4614, -12.0723, 0.55 ) }
    dend_25 { pt3dadd( -19.6746, -98.7599, -12.4566, 0.55 ) }
    dend_25 { pt3dadd( -20.5527, -101.211, -15.6768, 0.28 ) }
    dend_25 { pt3dadd( -21.5871, -104.099, -19.706, 0.28 ) }
    dend_25 { pt3dadd( -22.0668, -105.682, -22.0534, 0.55 ) }
    dend_25 { pt3dadd( -22.6054, -107.804, -25.5059, 0.28 ) }
    dend_25 { pt3dadd( -22.7484, -108.636, -26.8346, 0.28 ) }
    dend_25 { pt3dadd( -22.8118, -110.087, -29.1595, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 89/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -19.7108, -62.7455, 16.6794, 0.55 ) }
    dend_21 { pt3dadd( -20.6501, -64.6624, 16.6567, 0.55 ) }
    dend_21 { pt3dadd( -21.5731, -66.6908, 16.5975, 0.55 ) }
    dend_21 { pt3dadd( -22.5098, -68.8564, 16.5248, 0.55 ) }
    dend_21 { pt3dadd( -23.3584, -70.9473, 16.4676, 0.55 ) }
    dend_21 { pt3dadd( -24.0455, -72.7313, 16.3876, 0.28 ) }
    dend_21 { pt3dadd( -24.4506, -73.8942, 16.3439, 0.55 ) }
    dend_21 { pt3dadd( -25.1084, -76.1635, 16.3127, 0.55 ) }
    dend_21 { pt3dadd( -25.6004, -78.0515, 16.2166, 0.55 ) }
    dend_21 { pt3dadd( -26.1039, -80.3447, 16.0041, 0.55 ) }
    dend_21 { pt3dadd( -26.3574, -81.8948, 15.86, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -26.6241, -83.6836, 15.7227, 0.55 ) }
    dend_21 { pt3dadd( -26.895, -85.2184, 15.6036, 0.28 ) }
    dend_21 { pt3dadd( -27.176, -86.944, 15.4363, 0.55 ) }
    dend_21 { pt3dadd( -27.4434, -88.7437, 15.2669, 0.28 ) }
    dend_21 { pt3dadd( -27.5809, -89.706, 15.1988, 0.55 ) }
    dend_21 { pt3dadd( -27.7907, -90.9935, 15.1548, 0.55 ) }
    dend_21 { pt3dadd( -28.1505, -92.9499, 15.0822, 0.28 ) }
    dend_21 { pt3dadd( -28.6179, -95.451, 15.0519, 0.55 ) }
    dend_21 { pt3dadd( -28.8526, -96.8214, 15.1237, 0.28 ) }
    dend_21 { pt3dadd( -29.1093, -98.3167, 15.2714, 0.28 ) }
    dend_21 { pt3dadd( -29.313, -99.5419, 15.4047, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 11/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 60.3865, -94.1457, 36.1375, 0.83 ) }
    dend_17 { pt3dadd( 60.8096, -96.9891, 36.0964, 0.83 ) }
    dend_17 { pt3dadd( 61.0598, -99.2221, 36.1881, 0.55 ) }
    dend_17 { pt3dadd( 61.239, -101.015, 36.153, 0.28 ) }
    dend_17 { pt3dadd( 61.4368, -102.745, 35.9095, 0.55 ) }
    dend_17 { pt3dadd( 61.6257, -104.618, 35.5862, 0.28 ) }
    dend_17 { pt3dadd( 61.9052, -106.522, 35.1434, 0.55 ) }
    dend_17 { pt3dadd( 62.2349, -108.406, 34.7511, 0.28 ) }
    dend_17 { pt3dadd( 62.7555, -110.876, 34.206, 0.55 ) }
    dend_17 { pt3dadd( 63.3371, -113.751, 33.4651, 0.28 ) }
    dend_17 { pt3dadd( 63.8026, -115.893, 32.8051, 0.55 ) }
    dend_17 { pt3dadd( 64.5261, -118.703, 31.8435, 0.28 ) }
    dend_17 { pt3dadd( 65.3099, -121.506, 30.9039, 0.55 ) }
    dend_17 { pt3dadd( 65.8511, -123.533, 30.3501, 0.83 ) }
    dend_17 { pt3dadd( 66.6067, -126.629, 29.7939, 0.55 ) }
    dend_17 { pt3dadd( 67.032, -128.508, 29.5384, 0.83 ) }
    dend_17 { pt3dadd( 67.4633, -130.601, 29.2266, 0.55 ) }
    dend_17 { pt3dadd( 67.6869, -132.198, 29.0605, 0.55 ) }
    dend_17 { pt3dadd( 68.0936, -134.704, 28.8013, 0.28 ) }
    dend_17 { pt3dadd( 68.3242, -136.058, 28.7395, 0.55 ) }
    dend_17 { pt3dadd( 68.4543, -136.935, 28.7741, 0.28 ) }
    dend_17 { pt3dadd( 68.7288, -139.105, 28.9112, 0.55 ) }
    dend_17 { pt3dadd( 69.0844, -141.635, 29.0261, 0.28 ) }
    dend_17 { pt3dadd( 69.5187, -144.095, 29.0537, 0.28 ) }
    dend_17 { pt3dadd( 70.0099, -146.202, 29.0019, 0.55 ) }
    dend_17 { pt3dadd( 70.5297, -148.166, 28.9375, 0.28 ) }
    dend_17 { pt3dadd( 71.1062, -150.133, 28.8381, 0.55 ) }
    dend_17 { pt3dadd( 71.7591, -152.041, 28.7223, 0.28 ) }
    dend_17 { pt3dadd( 72.5018, -154.136, 28.5366, 0.55 ) }
    dend_17 { pt3dadd( 73.2099, -156.332, 28.3472, 0.55 ) }
    dend_17 { pt3dadd( 73.7276, -157.886, 28.2034, 0.28 ) }
    dend_17 { pt3dadd( 74.6649, -160.704, 27.9042, 0.55 ) }
    dend_17 { pt3dadd( 75.1121, -162.419, 27.7739, 0.55 ) }
    dend_17 { pt3dadd( 75.7633, -165.615, 27.57, 0.28 ) }
    dend_17 { pt3dadd( 76.0695, -167.59, 27.4534, 0.55 ) }
    dend_17 { pt3dadd( 76.2424, -168.984, 27.3668, 0.28 ) }
    dend_17 { pt3dadd( 76.3525, -169.833, 27.3314, 0.55 ) }
    dend_17 { pt3dadd( 76.7954, -172.899, 27.3026, 0.28 ) }
    dend_17 { pt3dadd( 76.9175, -173.72, 27.3042, 0.55 ) }
    dend_17 { pt3dadd( 77.1321, -174.899, 27.3457, 0.28 ) }
    dend_17 { pt3dadd( 77.362, -175.99, 27.3836, 0.55 ) }
    dend_17 { pt3dadd( 77.837, -178.1, 27.4668, 0.28 ) }
    dend_17 { pt3dadd( 78.2722, -179.616, 27.4629, 0.55 ) }
    dend_17 { pt3dadd( 78.8249, -181.228, 27.376, 0.28 ) }
    dend_17 { pt3dadd( 79.116, -182.257, 27.3295, 0.55 ) }
    dend_17 { pt3dadd( 79.3507, -183.343, 27.2325, 0.28 ) }
    dend_17 { pt3dadd( 79.4619, -184.171, 27.1478, 0.83 ) }
    dend_17 { pt3dadd( 79.6292, -186.595, 26.7554, 0.28 ) }
    dend_17 { pt3dadd( 79.6616, -187.931, 26.4868, 0.28 ) }
    dend_17 { pt3dadd( 79.654, -190.728, 25.8457, 0.55 ) }
    dend_17 { pt3dadd( 79.5586, -193.253, 25.209, 0.28 ) }
    dend_17 { pt3dadd( 79.4284, -194.877, 24.794, 0.55 ) }
    dend_17 { pt3dadd( 79.2443, -196.807, 24.2743, 0.28 ) }
    dend_17 { pt3dadd( 79.1388, -197.904, 23.99, 0.55 ) }
    dend_17 { pt3dadd( 79.1041, -198.721, 23.7699, 0.28 ) }
    dend_17 { pt3dadd( 79.2134, -200.277, 23.3625, 0.55 ) }
    dend_17 { pt3dadd( 79.468, -201.974, 23.0506, 0.28 ) }
    dend_17 { pt3dadd( 79.7091, -203.173, 22.8532, 0.55 ) }
    dend_17 { pt3dadd( 80.0777, -205.068, 22.6284, 0.28 ) }
    dend_17 { pt3dadd( 80.2375, -205.891, 22.5368, 0.55 ) }
    dend_17 { pt3dadd( 80.6558, -208.054, 22.2434, 0.28 ) }
    dend_17 { pt3dadd( 80.8478, -208.983, 22.0939, 0.55 ) }
    dend_17 { pt3dadd( 81.1375, -210.368, 21.841, 0.28 ) }
    dend_17 { pt3dadd( 81.3149, -211.309, 21.6803, 0.55 ) }
    dend_17 { pt3dadd( 81.4872, -212.129, 21.5183, 0.55 ) }
    dend_17 { pt3dadd( 81.8835, -213.817, 21.1964, 0.55 ) }
    dend_17 { pt3dadd( 82.3377, -215.527, 20.7976, 0.28 ) }
    dend_17 { pt3dadd( 82.6888, -216.804, 20.5122, 0.28 ) }
    dend_17 { pt3dadd( 83.0335, -218.135, 20.1801, 0.55 ) }
    dend_17 { pt3dadd( 83.5352, -220.376, 19.5711, 0.28 ) }
    dend_17 { pt3dadd( 83.7861, -221.766, 19.1833, 0.28 ) }
    dend_17 { pt3dadd( 84.0426, -223.484, 18.7086, 0.28 ) }
    dend_17 { pt3dadd( 84.5164, -227.669, 17.5291, 0.28 ) }
    dend_17 { pt3dadd( 84.9194, -231.647, 16.3502, 0.28 ) }
    dend_17 { pt3dadd( 85.0616, -233.513, 15.8078, 0.55 ) }
    dend_17 { pt3dadd( 85.2337, -235.871, 15.1663, 0.28 ) }
    dend_17 { pt3dadd( 85.2984, -236.698, 14.9802, 0.28 ) }
    dend_17 { pt3dadd( 85.4447, -238.312, 14.7326, 0.55 ) }
    dend_17 { pt3dadd( 85.8058, -241.503, 14.3954, 0.28 ) }
    dend_17 { pt3dadd( 85.9587, -242.741, 14.3517, 0.55 ) }
    dend_17 { pt3dadd( 86.251, -245.328, 14.2833, 0.28 ) }
    dend_17 { pt3dadd( 86.4519, -247.735, 14.1275, 0.55 ) }
    dend_17 { pt3dadd( 86.516, -249.382, 13.9637, 0.28 ) }
    dend_17 { pt3dadd( 86.5366, -250.83, 13.8198, 0.55 ) }
    dend_17 { pt3dadd( 86.4304, -253.625, 13.5197, 0.28 ) }
    dend_17 { pt3dadd( 86.3372, -254.946, 13.2808, 0.83 ) }
    dend_17 { pt3dadd( 85.9915, -256.934, 12.7426, 0.28 ) }
    dend_17 { pt3dadd( 85.881, -257.467, 12.509, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 60.3865, -94.1457, 36.1375, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( 63.7389, -96.5806, 38.2744, 0.55 ) }
    dend_14 { pt3dadd( 67.4476, -99.3642, 40.7902, 0.55 ) }
    dend_14 { pt3dadd( 68.7118, -100.344, 41.6557, 0.55 ) }
    dend_14 { pt3dadd( 70.0486, -101.38, 42.5709, 0.55 ) }
    dend_14 { pt3dadd( 72.6259, -103.378, 44.3353, 0.55 ) }
    dend_14 { pt3dadd( 73.8179, -104.301, 45.1513, 0.55 ) }
    dend_14 { pt3dadd( 75.6992, -106.055, 46.6816, 0.28 ) }
    dend_14 { pt3dadd( 76.8142, -107.009, 47.4369, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 9.17093, 175.166, 1.87004, 0.55 ) }
    dend_5 { pt3dadd( 9.70502, 175.958, 1.86021, 0.55 ) }
    dend_5 { pt3dadd( 12.2303, 179.573, 1.45701, 0.55 ) }
    dend_5 { pt3dadd( 13.8467, 181.756, 1.12126, 0.28 ) }
    dend_5 { pt3dadd( 16.0486, 184.684, 0.61572, 0.55 ) }
    dend_5 { pt3dadd( 17.9097, 187.16, 0.0744772, 0.55 ) }
    dend_5 { pt3dadd( 20.0476, 190.042, -0.622046, 0.55 ) }
    dend_5 { pt3dadd( 22.6526, 193.588, -1.61014, 0.55 ) }
    dend_5 { pt3dadd( 23.3072, 194.546, -1.92508, 0.55 ) }
    dend_5 { pt3dadd( 24.3707, 196.353, -2.539, 0.55 ) }
    dend_5 { pt3dadd( 25.7178, 199.037, -3.49456, 0.83 ) }
    dend_5 { pt3dadd( 26.2858, 200.367, -4.00177, 0.28 ) }
    dend_5 { pt3dadd( 27.1169, 202.653, -4.86669, 0.55 ) }
    dend_5 { pt3dadd( 28.3079, 206.688, -6.26996, 0.28 ) }
    dend_5 { pt3dadd( 29.1611, 209.845, -7.35891, 0.28 ) }
    dend_5 { pt3dadd( 30.1888, 214.041, -8.87948, 0.55 ) }
    dend_5 { pt3dadd( 30.7626, 216.499, -9.80621, 0.55 ) }
    dend_5 { pt3dadd( 30.9929, 217.48, -10.2045, 0.55 ) }
    dend_5 { pt3dadd( 32.0429, 222.223, -12.3285, 0.55 ) }
    dend_5 { pt3dadd( 32.3624, 223.82, -13.0823, 0.28 ) }
    dend_5 { pt3dadd( 32.7758, 226.512, -14.3931, 0.55 ) }
    dend_5 { pt3dadd( 32.9755, 228.684, -15.4322, 0.55 ) }
    dend_5 { pt3dadd( 33.0283, 230.105, -16.19, 0.28 ) }
    dend_5 { pt3dadd( 32.9688, 231.995, -17.3086, 0.55 ) }
    dend_5 { pt3dadd( 32.8629, 233.352, -18.1847, 0.55 ) }
    dend_5 { pt3dadd( 32.3036, 237.507, -20.8939, 0.55 ) }
    dend_5 { pt3dadd( 31.8835, 240.342, -22.7217, 0.55 ) }
    dend_5 { pt3dadd( 31.3434, 243.276, -24.5653, 0.55 ) }
    dend_5 { pt3dadd( 30.8911, 245.735, -26.0281, 0.55 ) }
    dend_5 { pt3dadd( 30.6334, 247.222, -26.9141, 0.28 ) }
    dend_5 { pt3dadd( 30.2733, 249.194, -28.1051, 0.55 ) }
    dend_5 { pt3dadd( 29.9134, 250.726, -29.0599, 0.28 ) }
    dend_5 { pt3dadd( 29.2275, 253.257, -30.614, 0.55 ) }
    dend_5 { pt3dadd( 28.5476, 256.086, -32.3182, 0.55 ) }
    dend_5 { pt3dadd( 27.7405, 259.587, -34.4626, 0.28 ) }
    dend_5 { pt3dadd( 27.3029, 261.284, -35.5391, 0.55 ) }
    dend_5 { pt3dadd( 26.538, 263.931, -37.2914, 0.28 ) }
    dend_5 { pt3dadd( 25.9606, 265.692, -38.4378, 0.28 ) }
    dend_5 { pt3dadd( 25.3109, 267.469, -39.6778, 0.28 ) }
    dend_5 { pt3dadd( 24.8215, 268.593, -40.4794, 0.28 ) }
    dend_5 { pt3dadd( 24.1174, 270.152, -41.4996, 0.28 ) }
    dend_5 { pt3dadd( 23.4784, 271.669, -42.5397, 0.55 ) }
    dend_5 { pt3dadd( 22.5957, 274.077, -44.186, 0.55 ) }
    dend_5 { pt3dadd( 21.6843, 276.833, -46.1374, 0.28 ) }
    dend_5 { pt3dadd( 20.9982, 279.28, -47.8881, 1.11 ) }
    dend_5 { pt3dadd( 20.667, 280.912, -49.0057, 0.83 ) }
    dend_5 { pt3dadd( 20.3349, 283.412, -50.6798, 0.55 ) }
    dend_5 { pt3dadd( 20.062, 286.463, -52.7303, 1.11 ) }
    dend_5 { pt3dadd( 19.9333, 288.867, -54.3598, 0.55 ) }
    dend_5 { pt3dadd( 19.9482, 290.159, -55.1375, 0.55 ) }
    dend_5 { pt3dadd( 20.0579, 292.137, -56.3, 0.55 ) }
    dend_5 { pt3dadd( 20.2086, 295.042, -57.9714, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 60/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.17093, 175.166, 1.87004, 0.55 ) }
    dend_4 { pt3dadd( 12.9086, 178.145, 2.1325, 0.55 ) }
    dend_4 { pt3dadd( 19.4941, 183.554, 2.1034, 0.55 ) }
    dend_4 { pt3dadd( 22.9887, 186.489, 1.95509, 0.55 ) }
    dend_4 { pt3dadd( 26.0188, 189.13, 1.75526, 0.55 ) }
    dend_4 { pt3dadd( 28.4717, 191.343, 1.55733, 0.55 ) }
    dend_4 { pt3dadd( 31.065, 193.719, 1.28886, 0.55 ) }
    dend_4 { pt3dadd( 33.5634, 196.258, 0.756653, 0.28 ) }
    dend_4 { pt3dadd( 34.0893, 196.902, 0.562398, 0.55 ) }
    dend_4 { pt3dadd( 34.9737, 198.027, 0.0126517, 0.28 ) }
    dend_4 { pt3dadd( 35.6524, 198.903, -0.496154, 0.55 ) }
    dend_4 { pt3dadd( 36.6403, 200.337, -1.32015, 0.28 ) }
    dend_4 { pt3dadd( 36.8428, 200.636, -1.47773, 0.55 ) }
    dend_4 { pt3dadd( 38.7366, 203.548, -2.73943, 0.28 ) }
    dend_4 { pt3dadd( 39.631, 204.862, -3.3026, 0.55 ) }
    dend_4 { pt3dadd( 41.0398, 206.899, -4.13218, 0.28 ) }
    dend_4 { pt3dadd( 41.9489, 208.279, -4.62974, 0.55 ) }
    dend_4 { pt3dadd( 42.9086, 210.0, -5.0535, 0.28 ) }
    dend_4 { pt3dadd( 43.8819, 211.945, -5.5079, 0.28 ) }
    dend_4 { pt3dadd( 44.6347, 213.574, -5.80887, 0.28 ) }
    dend_4 { pt3dadd( 45.0909, 214.676, -5.95921, 0.55 ) }
    dend_4 { pt3dadd( 46.202, 217.454, -6.43163, 0.28 ) }
    dend_4 { pt3dadd( 47.3849, 220.4, -6.91216, 0.55 ) }
    dend_4 { pt3dadd( 49.1642, 224.776, -7.61729, 0.28 ) }
    dend_4 { pt3dadd( 50.1133, 227.047, -7.99868, 0.55 ) }
    dend_4 { pt3dadd( 51.2023, 229.729, -8.43006, 0.55 ) }
    dend_4 { pt3dadd( 52.4312, 232.758, -8.93845, 0.28 ) }
    dend_4 { pt3dadd( 53.1623, 234.57, -9.32191, 0.55 ) }
    dend_4 { pt3dadd( 53.9796, 236.625, -9.78054, 0.28 ) }
    dend_4 { pt3dadd( 54.7731, 238.798, -10.2666, 0.83 ) }
    dend_4 { pt3dadd( 55.8696, 241.855, -10.9938, 0.28 ) }
    dend_4 { pt3dadd( 56.7018, 244.419, -11.6385, 0.55 ) }
    dend_4 { pt3dadd( 57.5384, 247.15, -12.1648, 0.28 ) }
    dend_4 { pt3dadd( 58.5384, 250.47, -12.7046, 0.55 ) }
    dend_4 { pt3dadd( 59.3776, 253.446, -13.0572, 0.28 ) }
    dend_4 { pt3dadd( 60.2441, 256.434, -13.4393, 0.55 ) }
    dend_4 { pt3dadd( 60.9052, 258.658, -13.738, 0.28 ) }
    dend_4 { pt3dadd( 61.7507, 261.52, -14.1495, 0.28 ) }
    dend_4 { pt3dadd( 62.5173, 264.105, -14.5219, 0.55 ) }
    dend_4 { pt3dadd( 63.512, 267.42, -15.1876, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_4 { pt3dadd( 64.7715, 271.67, -15.9868, 0.28 ) }
    dend_4 { pt3dadd( 65.0821, 272.747, -16.2321, 0.55 ) }
    dend_4 { pt3dadd( 65.5099, 274.207, -16.5674, 0.55 ) }
    dend_4 { pt3dadd( 66.7698, 278.698, -17.4861, 0.28 ) }
    dend_4 { pt3dadd( 67.2692, 280.47, -17.7792, 0.55 ) }
    dend_4 { pt3dadd( 68.5263, 284.708, -18.2516, 0.55 ) }
    dend_4 { pt3dadd( 69.665, 288.763, -18.5169, 0.28 ) }
    dend_4 { pt3dadd( 70.257, 290.835, -18.6551, 0.55 ) }
    dend_4 { pt3dadd( 71.398, 294.574, -18.8327, 0.28 ) }
    dend_4 { pt3dadd( 72.0039, 296.557, -18.9241, 0.55 ) }
    dend_4 { pt3dadd( 72.6293, 298.682, -19.0019, 0.28 ) }
    dend_4 { pt3dadd( 73.4808, 301.41, -19.0716, 0.55 ) }
    dend_4 { pt3dadd( 74.4099, 304.221, -19.0362, 0.28 ) }
    dend_4 { pt3dadd( 75.5629, 307.468, -19.0968, 0.28 ) }
    dend_4 { pt3dadd( 76.5519, 310.145, -19.2018, 0.55 ) }
    dend_4 { pt3dadd( 77.5432, 312.75, -19.2793, 0.28 ) }
    dend_4 { pt3dadd( 78.5734, 315.322, -19.4003, 0.28 ) }
    dend_4 { pt3dadd( 79.258, 316.769, -19.4728, 0.28 ) }
    dend_4 { pt3dadd( 80.5108, 319.298, -19.6254, 0.83 ) }
    dend_4 { pt3dadd( 82.1711, 322.477, -19.9555, 0.28 ) }
    dend_4 { pt3dadd( 82.8901, 323.715, -20.088, 0.55 ) }
    dend_4 { pt3dadd( 84.2889, 325.981, -20.4779, 0.28 ) }
    dend_4 { pt3dadd( 86.5258, 329.788, -21.423, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 23/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -34.2272, -85.8888, 9.90332, 0.28 ) }
    dend_48 { pt3dadd( -33.0888, -88.1692, 10.8609, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 25/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -34.2272, -85.8888, 9.90332, 0.55 ) }
    dend_47 { pt3dadd( -35.3441, -88.9758, 9.38483, 0.55 ) }
    dend_47 { pt3dadd( -36.2309, -91.4516, 8.91677, 0.28 ) }
    dend_47 { pt3dadd( -36.6783, -92.7177, 8.69793, 0.55 ) }
    dend_47 { pt3dadd( -38.4169, -97.4188, 8.1219, 0.28 ) }
    dend_47 { pt3dadd( -39.2396, -99.7719, 7.85863, 0.55 ) }
    dend_47 { pt3dadd( -40.0502, -102.054, 7.76159, 0.28 ) }
    dend_47 { pt3dadd( -40.3773, -103.114, 7.69866, 0.55 ) }
    dend_47 { pt3dadd( -41.1565, -105.75, 7.68147, 0.28 ) }
    dend_47 { pt3dadd( -41.6187, -107.515, 7.7224, 0.55 ) }
    dend_47 { pt3dadd( -42.4582, -111.069, 7.98594, 0.28 ) }
    dend_47 { pt3dadd( -43.3518, -115.075, 8.27124, 0.28 ) }
    dend_47 { pt3dadd( -44.0862, -118.25, 8.5861, 0.55 ) }
    dend_47 { pt3dadd( -44.6861, -120.675, 8.79645, 0.55 ) }
    dend_47 { pt3dadd( -45.4668, -123.326, 8.92135, 0.28 ) }
    dend_47 { pt3dadd( -45.8082, -124.255, 8.96404, 0.55 ) }
    dend_47 { pt3dadd( -46.8871, -126.609, 9.11865, 0.28 ) }
    dend_47 { pt3dadd( -47.5958, -127.947, 9.16146, 0.55 ) }
    dend_47 { pt3dadd( -49.4197, -130.821, 9.34881, 0.28 ) }
    dend_47 { pt3dadd( -51.4425, -133.736, 9.49045, 0.55 ) }
    dend_47 { pt3dadd( -53.1961, -136.101, 9.6066, 0.28 ) }
    dend_47 { pt3dadd( -53.3863, -136.357, 9.61084, 0.55 ) }
    dend_47 { pt3dadd( -54.7906, -138.306, 9.56066, 0.28 ) }
    dend_47 { pt3dadd( -56.4389, -140.722, 9.50751, 0.28 ) }
    dend_47 { pt3dadd( -57.1238, -141.781, 9.46665, 0.55 ) }
    dend_47 { pt3dadd( -58.2203, -143.711, 9.24274, 0.28 ) }
    dend_47 { pt3dadd( -59.1712, -145.56, 8.93744, 0.28 ) }
    dend_47 { pt3dadd( -59.9788, -147.182, 8.66349, 0.28 ) }
    dend_47 { pt3dadd( -60.6515, -148.573, 8.45208, 0.28 ) }
    dend_47 { pt3dadd( -61.1148, -149.687, 8.21827, 0.28 ) }
    dend_47 { pt3dadd( -61.975, -151.982, 7.73864, 0.28 ) }
    dend_47 { pt3dadd( -62.5432, -153.733, 7.41752, 0.55 ) }
    dend_47 { pt3dadd( -62.9704, -155.066, 7.22872, 0.28 ) }
    dend_47 { pt3dadd( -63.3676, -156.316, 7.07287, 0.55 ) }
    dend_47 { pt3dadd( -64.3296, -159.357, 6.83638, 0.28 ) }
    dend_47 { pt3dadd( -64.9583, -161.071, 6.76853, 0.28 ) }
    dend_47 { pt3dadd( -65.4386, -162.217, 6.67223, 0.55 ) }
    dend_47 { pt3dadd( -66.161, -163.782, 6.47356, 0.28 ) }
    dend_47 { pt3dadd( -66.6922, -164.856, 6.32964, 0.55 ) }
    dend_47 { pt3dadd( -68.2542, -167.801, 5.90726, 0.28 ) }
    dend_47 { pt3dadd( -69.3281, -169.661, 5.73454, 0.28 ) }
    dend_47 { pt3dadd( -70.6909, -172.005, 5.46606, 0.55 ) }
    dend_47 { pt3dadd( -72.1966, -174.682, 5.13439, 0.28 ) }
    dend_47 { pt3dadd( -73.4806, -177.167, 4.79094, 0.28 ) }
    dend_47 { pt3dadd( -73.7935, -177.767, 4.70466, 0.55 ) }
    dend_47 { pt3dadd( -75.2092, -180.409, 4.37409, 0.28 ) }
    dend_47 { pt3dadd( -75.7659, -181.437, 4.27212, 0.55 ) }
    dend_47 { pt3dadd( -77.6444, -184.649, 3.96184, 0.28 ) }
    dend_47 { pt3dadd( -78.3865, -185.802, 3.80587, 0.55 ) }
    dend_47 { pt3dadd( -79.2673, -187.031, 3.67978, 0.28 ) }
    dend_47 { pt3dadd( -80.2925, -188.43, 3.56308, 0.55 ) }
    dend_47 { pt3dadd( -82.0426, -190.777, 3.29514, 0.28 ) }
    dend_47 { pt3dadd( -83.3532, -192.496, 3.07775, 0.55 ) }
    dend_47 { pt3dadd( -85.2018, -194.952, 2.80039, 0.28 ) }
    dend_47 { pt3dadd( -86.6361, -196.911, 2.59213, 0.28 ) }
    dend_47 { pt3dadd( -88.3667, -199.489, 2.3363, 0.55 ) }
    dend_47 { pt3dadd( -89.9896, -202.119, 2.08934, 0.28 ) }
    dend_47 { pt3dadd( -91.6117, -205.461, 1.94062, 0.28 ) }
    dend_47 { pt3dadd( -92.4829, -207.779, 1.96681, 0.28 ) }
    dend_47 { pt3dadd( -92.5724, -208.182, 1.95013, 0.55 ) }
    dend_47 { pt3dadd( -92.64, -209.461, 1.85497, 0.28 ) }
    dend_47 { pt3dadd( -92.5622, -210.363, 1.80568, 0.55 ) }
    dend_47 { pt3dadd( -91.6619, -215.446, 1.58072, 0.28 ) }
    dend_47 { pt3dadd( -91.2597, -217.155, 1.49494, 0.55 ) }
    dend_47 { pt3dadd( -89.849, -222.83, 0.985775, 0.28 ) }
    dend_47 { pt3dadd( -89.1304, -225.707, 0.700979, 0.28 ) }
    dend_47 { pt3dadd( -88.7997, -227.044, 0.53295, 0.55 ) }
    dend_47 { pt3dadd( -88.1914, -229.419, 0.157494, 0.28 ) }
    dend_47 { pt3dadd( -87.6362, -231.607, -0.346106, 0.28 ) }
    dend_47 { pt3dadd( -87.2413, -233.153, -0.705975, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_25 (entry count 95/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -22.8118, -110.087, -29.1595, 0.28 ) }
    dend_43 { pt3dadd( -27.7084, -111.558, -15.2717, 0.28 ) }
    dend_43 { pt3dadd( -28.7381, -111.664, -12.9786, 0.83 ) }
    dend_43 { pt3dadd( -29.5179, -111.544, -11.9032, 0.28 ) }
    dend_43 { pt3dadd( -29.8007, -111.459, -11.6501, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_43 { pt3dadd( -33.2505, -109.783, -10.1151, 0.28 ) }
    dend_43 { pt3dadd( -34.5986, -108.998, -9.68843, 0.55 ) }
    dend_43 { pt3dadd( -35.8485, -108.074, -9.71234, 0.55 ) }
    dend_43 { pt3dadd( -37.7588, -106.5, -9.66321, 0.28 ) }
    dend_43 { pt3dadd( -38.3273, -105.908, -9.69186, 0.55 ) }
    dend_43 { pt3dadd( -41.639, -101.908, -10.0474, 0.28 ) }
    dend_43 { pt3dadd( -42.2809, -100.961, -10.2058, 0.83 ) }
    dend_43 { pt3dadd( -43.4977, -99.0169, -10.5861, 0.28 ) }
    dend_43 { pt3dadd( -43.7626, -98.5477, -10.6793, 0.55 ) }
    dend_43 { pt3dadd( -47.4817, -90.8925, -12.5591, 0.28 ) }
    dend_43 { pt3dadd( -47.8766, -89.9925, -12.807, 0.55 ) }
    dend_43 { pt3dadd( -49.4335, -85.9237, -14.1981, 0.28 ) }
    dend_43 { pt3dadd( -49.8116, -84.8909, -14.5968, 0.28 ) }
    dend_43 { pt3dadd( -50.3069, -83.3496, -15.1967, 0.55 ) }
    dend_43 { pt3dadd( -51.237, -80.2548, -16.3356, 0.28 ) }
    dend_43 { pt3dadd( -51.4621, -79.3356, -16.6241, 0.55 ) }
    dend_43 { pt3dadd( -52.0454, -77.0386, -17.199, 0.28 ) }
    dend_43 { pt3dadd( -52.1835, -76.5019, -17.2856, 0.55 ) }
    dend_43 { pt3dadd( -53.8298, -70.4334, -18.0645, 0.28 ) }
    dend_43 { pt3dadd( -54.0292, -69.8398, -18.1186, 0.55 ) }
    dend_43 { pt3dadd( -54.7295, -68.1414, -18.1148, 0.28 ) }
    dend_43 { pt3dadd( -54.9391, -67.674, -18.0836, 0.55 ) }
    dend_43 { pt3dadd( -55.883, -65.824, -17.8531, 0.28 ) }
    dend_43 { pt3dadd( -56.2922, -65.0716, -17.7297, 0.55 ) }
    dend_43 { pt3dadd( -57.5227, -62.9218, -17.3721, 0.28 ) }
    dend_43 { pt3dadd( -58.2012, -61.7585, -17.1784, 0.55 ) }
    dend_43 { pt3dadd( -59.4315, -59.6777, -16.8401, 0.28 ) }
    dend_43 { pt3dadd( -60.0492, -58.5941, -16.6725, 0.55 ) }
    dend_43 { pt3dadd( -62.1889, -54.6989, -16.0202, 0.28 ) }
    dend_43 { pt3dadd( -62.8107, -53.3309, -15.7729, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -22.8118, -110.087, -29.1595, 0.28 ) }
    dend_26 { pt3dadd( -23.4248, -113.18, -32.0347, 0.28 ) }
    dend_26 { pt3dadd( -23.8562, -115.357, -34.058, 0.55 ) }
    dend_26 { pt3dadd( -25.0652, -121.458, -39.7285, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -29.313, -99.5419, 15.4047, 0.28 ) }
    dend_22 { pt3dadd( -29.4987, -99.9249, 15.4765, 0.28 ) }
    dend_22 { pt3dadd( -30.4922, -101.949, 15.8634, 0.55 ) }
    dend_22 { pt3dadd( -31.7355, -104.552, 16.3235, 0.28 ) }
    dend_22 { pt3dadd( -32.4617, -106.35, 16.565, 0.55 ) }
    dend_22 { pt3dadd( -33.1044, -108.009, 16.7987, 0.55 ) }
    dend_22 { pt3dadd( -33.5694, -109.226, 16.951, 0.28 ) }
    dend_22 { pt3dadd( -33.9499, -110.26, 17.0665, 0.55 ) }
    dend_22 { pt3dadd( -34.4496, -111.738, 17.2022, 0.55 ) }
    dend_22 { pt3dadd( -35.2801, -114.597, 17.539, 0.55 ) }
    dend_22 { pt3dadd( -36.118, -117.89, 17.8883, 0.55 ) }
    dend_22 { pt3dadd( -36.3945, -119.092, 18.0053, 0.28 ) }
    dend_22 { pt3dadd( -36.699, -120.554, 18.0564, 0.55 ) }
    dend_22 { pt3dadd( -36.9409, -121.695, 18.0351, 0.28 ) }
    dend_22 { pt3dadd( -37.5741, -124.526, 17.8706, 0.55 ) }
    dend_22 { pt3dadd( -37.8026, -125.496, 17.7764, 0.28 ) }
    dend_22 { pt3dadd( -38.2513, -127.533, 17.3967, 0.55 ) }
    dend_22 { pt3dadd( -39.0505, -131.101, 16.6244, 0.55 ) }
    dend_22 { pt3dadd( -39.4135, -132.614, 16.2429, 0.55 ) }
    dend_22 { pt3dadd( -39.647, -133.578, 15.974, 0.28 ) }
    dend_22 { pt3dadd( -39.7698, -134.106, 15.8288, 0.55 ) }
    dend_22 { pt3dadd( -40.3814, -136.592, 15.2045, 0.28 ) }
    dend_22 { pt3dadd( -40.623, -137.567, 14.9755, 0.55 ) }
    dend_22 { pt3dadd( -40.8155, -138.439, 14.8569, 0.28 ) }
    dend_22 { pt3dadd( -40.9591, -139.353, 14.7432, 0.55 ) }
    dend_22 { pt3dadd( -41.1775, -141.026, 14.5663, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 76.8142, -107.009, 47.4369, 0.55 ) }
    dend_16 { pt3dadd( 79.6816, -110.025, 46.0766, 0.55 ) }
    dend_16 { pt3dadd( 81.1394, -111.546, 45.5309, 0.55 ) }
    dend_16 { pt3dadd( 82.0029, -112.444, 45.1734, 0.55 ) }
    dend_16 { pt3dadd( 82.8128, -113.385, 44.7982, 0.83 ) }
    dend_16 { pt3dadd( 84.9854, -116.12, 44.0052, 0.55 ) }
    dend_16 { pt3dadd( 86.2409, -117.897, 43.7323, 0.28 ) }
    dend_16 { pt3dadd( 86.9851, -119.13, 43.6963, 0.55 ) }
    dend_16 { pt3dadd( 88.314, -121.567, 43.7568, 0.28 ) }
    dend_16 { pt3dadd( 89.5906, -124.061, 43.9863, 0.55 ) }
    dend_16 { pt3dadd( 91.1534, -127.473, 44.3806, 0.83 ) }
    dend_16 { pt3dadd( 92.4026, -130.678, 44.8273, 0.55 ) }
    dend_16 { pt3dadd( 93.2633, -133.116, 45.1398, 0.83 ) }
    dend_16 { pt3dadd( 93.9434, -135.143, 45.3783, 0.55 ) }
    dend_16 { pt3dadd( 94.4376, -136.809, 45.6024, 0.83 ) }
    dend_16 { pt3dadd( 95.2696, -139.633, 45.8887, 0.55 ) }
    dend_16 { pt3dadd( 95.8444, -141.923, 46.1375, 0.83 ) }
    dend_16 { pt3dadd( 96.4163, -144.288, 46.3578, 0.55 ) }
    dend_16 { pt3dadd( 96.6467, -145.367, 46.4955, 0.83 ) }
    dend_16 { pt3dadd( 97.1835, -147.978, 46.8239, 0.55 ) }
    dend_16 { pt3dadd( 97.7387, -150.595, 47.2652, 0.55 ) }
    dend_16 { pt3dadd( 98.6973, -155.044, 48.5429, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 82/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 76.8142, -107.009, 47.4369, 0.28 ) }
    dend_15 { pt3dadd( 79.6898, -106.706, 45.9571, 0.28 ) }
    dend_15 { pt3dadd( 83.2642, -106.424, 44.5189, 0.28 ) }
    dend_15 { pt3dadd( 86.4181, -106.187, 43.7497, 0.28 ) }
    dend_15 { pt3dadd( 89.2892, -105.973, 43.4365, 0.28 ) }
    dend_15 { pt3dadd( 92.1384, -105.831, 43.5158, 0.55 ) }
    dend_15 { pt3dadd( 94.3192, -105.801, 43.8064, 0.28 ) }
    dend_15 { pt3dadd( 97.8821, -105.86, 44.9783, 0.55 ) }
    dend_15 { pt3dadd( 101.793, -105.987, 46.908, 0.55 ) }
    dend_15 { pt3dadd( 103.63, -106.089, 47.988, 0.28 ) }
    dend_15 { pt3dadd( 106.817, -106.3, 50.0345, 0.28 ) }
    dend_15 { pt3dadd( 109.669, -106.518, 51.9284, 0.28 ) }
    dend_15 { pt3dadd( 111.762, -106.667, 53.2449, 0.28 ) }
    dend_15 { pt3dadd( 114.073, -106.791, 54.4875, 0.28 ) }
    dend_15 { pt3dadd( 115.065, -106.837, 54.9436, 0.55 ) }
    dend_15 { pt3dadd( 116.997, -106.872, 55.78, 0.55 ) }
    dend_15 { pt3dadd( 118.082, -106.845, 56.2385, 0.55 ) }
    dend_15 { pt3dadd( 121.661, -106.653, 57.7625, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_15 { pt3dadd( 122.874, -106.577, 58.2589, 0.55 ) }
    dend_15 { pt3dadd( 124.961, -106.449, 59.2181, 0.55 ) }
    dend_15 { pt3dadd( 127.374, -106.37, 60.3098, 0.55 ) }
    dend_15 { pt3dadd( 128.095, -106.377, 60.6053, 0.83 ) }
    dend_15 { pt3dadd( 129.965, -106.424, 61.275, 0.28 ) }
    dend_15 { pt3dadd( 132.806, -106.662, 62.0806, 0.28 ) }
    dend_15 { pt3dadd( 134.601, -106.889, 62.5251, 0.55 ) }
    dend_15 { pt3dadd( 137.115, -107.242, 63.0419, 0.28 ) }
    dend_15 { pt3dadd( 139.326, -107.617, 63.4699, 0.55 ) }
    dend_15 { pt3dadd( 141.534, -107.993, 63.9021, 0.55 ) }
    dend_15 { pt3dadd( 144.618, -108.479, 64.5468, 0.28 ) }
    dend_15 { pt3dadd( 145.215, -108.552, 64.6763, 0.55 ) }
    dend_15 { pt3dadd( 147.021, -108.606, 65.0546, 0.28 ) }
    dend_15 { pt3dadd( 149.695, -108.443, 65.742, 0.55 ) }
    dend_15 { pt3dadd( 151.039, -108.242, 66.105, 0.28 ) }
    dend_15 { pt3dadd( 152.674, -107.893, 66.4261, 0.55 ) }
    dend_15 { pt3dadd( 154.312, -107.394, 66.8025, 0.28 ) }
    dend_15 { pt3dadd( 156.281, -106.666, 67.3178, 0.28 ) }
    dend_15 { pt3dadd( 158.327, -105.816, 67.8994, 0.55 ) }
    dend_15 { pt3dadd( 160.849, -104.747, 68.6734, 0.55 ) }
    dend_15 { pt3dadd( 165.023, -103.003, 69.9493, 0.28 ) }
    dend_15 { pt3dadd( 168.414, -101.587, 71.0166, 0.55 ) }
    dend_15 { pt3dadd( 172.151, -99.9935, 72.3254, 0.28 ) }
    dend_15 { pt3dadd( 174.056, -99.197, 73.0459, 0.28 ) }
    dend_15 { pt3dadd( 176.192, -98.2526, 73.8853, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 25/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 20.2086, 295.042, -57.9714, 0.28 ) }
    dend_9 { pt3dadd( 18.1837, 295.841, -59.0378, 0.28 ) }
    dend_9 { pt3dadd( 16.0044, 296.701, -60.1856, 0.83 ) }
    dend_9 { pt3dadd( 9.87141, 299.121, -63.4157, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 29/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 20.2086, 295.042, -57.9714, 0.55 ) }
    dend_6 { pt3dadd( 23.4188, 295.353, -57.6502, 0.55 ) }
    dend_6 { pt3dadd( 25.6469, 295.484, -57.7629, 0.83 ) }
    dend_6 { pt3dadd( 27.8728, 295.528, -58.0235, 0.55 ) }
    dend_6 { pt3dadd( 32.0211, 295.441, -58.8061, 0.55 ) }
    dend_6 { pt3dadd( 34.3905, 295.402, -59.3198, 1.11 ) }
    dend_6 { pt3dadd( 37.8391, 295.391, -60.1767, 0.55 ) }
    dend_6 { pt3dadd( 40.8159, 295.26, -61.1614, 0.83 ) }
    dend_6 { pt3dadd( 43.9713, 295.211, -62.2384, 0.83 ) }
    dend_6 { pt3dadd( 46.482, 295.193, -63.2504, 0.55 ) }
    dend_6 { pt3dadd( 48.0911, 295.27, -63.9937, 0.55 ) }
    dend_6 { pt3dadd( 49.8944, 295.407, -64.853, 0.28 ) }
    dend_6 { pt3dadd( 51.8275, 295.71, -65.5183, 0.55 ) }
    dend_6 { pt3dadd( 55.6854, 296.504, -66.3906, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_26 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -25.0652, -121.458, -39.7285, 0.28 ) }
    dend_42 { pt3dadd( -22.2509, -127.101, -35.5295, 0.28 ) }
    dend_42 { pt3dadd( -21.6531, -128.388, -34.9376, 0.55 ) }
    dend_42 { pt3dadd( -20.7858, -130.324, -34.4674, 0.28 ) }
    dend_42 { pt3dadd( -20.0737, -131.914, -34.0813, 0.55 ) }
    dend_42 { pt3dadd( -19.1044, -134.078, -33.5558, 0.28 ) }
    dend_42 { pt3dadd( -18.6269, -135.144, -33.2969, 0.55 ) }
    dend_42 { pt3dadd( -17.2604, -138.423, -34.2357, 0.28 ) }
    dend_42 { pt3dadd( -16.7979, -139.645, -34.6788, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 52/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -25.0652, -121.458, -39.7285, 0.28 ) }
    dend_27 { pt3dadd( -25.9266, -123.737, -39.9523, 0.28 ) }
    dend_27 { pt3dadd( -26.5849, -125.558, -40.0732, 0.55 ) }
    dend_27 { pt3dadd( -27.9268, -129.404, -40.311, 0.28 ) }
    dend_27 { pt3dadd( -29.798, -134.823, -40.5869, 0.28 ) }
    dend_27 { pt3dadd( -30.2213, -136.081, -40.6224, 0.55 ) }
    dend_27 { pt3dadd( -31.3293, -139.426, -40.6696, 0.28 ) }
    dend_27 { pt3dadd( -32.3482, -142.435, -40.6964, 0.83 ) }
    dend_27 { pt3dadd( -33.6385, -146.292, -40.7261, 0.28 ) }
    dend_27 { pt3dadd( -34.0536, -147.611, -40.8585, 0.55 ) }
    dend_27 { pt3dadd( -34.5464, -149.179, -41.0462, 0.28 ) }
    dend_27 { pt3dadd( -34.7505, -149.81, -41.1238, 0.55 ) }
    dend_27 { pt3dadd( -35.1038, -150.847, -41.2445, 0.28 ) }
    dend_27 { pt3dadd( -35.4188, -151.615, -41.61, 0.55 ) }
    dend_27 { pt3dadd( -37.7357, -155.869, -46.807, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -41.1775, -141.026, 14.5663, 0.55 ) }
    dend_24 { pt3dadd( -45.4488, -144.128, 12.009, 0.55 ) }
    dend_24 { pt3dadd( -46.6622, -145.031, 11.3698, 0.55 ) }
    dend_24 { pt3dadd( -47.7901, -145.911, 10.8267, 0.28 ) }
    dend_24 { pt3dadd( -49.5303, -147.441, 10.1205, 0.28 ) }
    dend_24 { pt3dadd( -52.1347, -149.952, 9.04692, 0.55 ) }
    dend_24 { pt3dadd( -53.7939, -151.669, 8.36801, 0.28 ) }
    dend_24 { pt3dadd( -54.9527, -153.023, 7.91457, 0.55 ) }
    dend_24 { pt3dadd( -56.3505, -154.727, 7.3806, 0.28 ) }
    dend_24 { pt3dadd( -57.9481, -156.818, 6.78363, 0.55 ) }
    dend_24 { pt3dadd( -60.0623, -160.064, 5.98926, 0.28 ) }
    dend_24 { pt3dadd( -60.6132, -161.315, 5.75283, 0.28 ) }
    dend_24 { pt3dadd( -61.4708, -163.854, 5.36614, 0.28 ) }
    dend_24 { pt3dadd( -62.2721, -166.647, 4.67842, 0.55 ) }
    dend_24 { pt3dadd( -62.8837, -168.955, 4.00817, 0.28 ) }
    dend_24 { pt3dadd( -63.4352, -171.148, 3.33584, 0.55 ) }
    dend_24 { pt3dadd( -64.1655, -174.434, 2.39742, 0.28 ) }
    dend_24 { pt3dadd( -64.6316, -176.526, 1.7414, 0.55 ) }
    dend_24 { pt3dadd( -65.5977, -180.528, 0.376081, 0.28 ) }
    dend_24 { pt3dadd( -66.1169, -182.429, -0.362281, 0.55 ) }
    dend_24 { pt3dadd( -66.6238, -184.136, -1.02853, 0.28 ) }
    dend_24 { pt3dadd( -67.2349, -186.015, -1.74282, 0.55 ) }
    dend_24 { pt3dadd( -68.1449, -188.47, -2.55684, 0.28 ) }
    dend_24 { pt3dadd( -68.701, -190.096, -2.94639, 0.28 ) }
    dend_24 { pt3dadd( -69.8861, -193.704, -3.58124, 0.55 ) }
    dend_24 { pt3dadd( -71.0446, -197.216, -4.18688, 0.28 ) }
    dend_24 { pt3dadd( -71.7199, -199.092, -4.44285, 0.55 ) }
    dend_24 { pt3dadd( -73.1821, -202.883, -4.75624, 0.28 ) }
    dend_24 { pt3dadd( -74.3279, -205.694, -4.88288, 0.55 ) }
    dend_24 { pt3dadd( -75.5034, -208.454, -4.91734, 0.28 ) }
    dend_24 { pt3dadd( -76.8567, -211.441, -4.88288, 0.28 ) }
    dend_24 { pt3dadd( -78.0008, -213.936, -4.76904, 0.55 ) }
    dend_24 { pt3dadd( -79.0472, -216.168, -4.70367, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( -80.5461, -219.33, -4.66766, 0.28 ) }
    dend_24 { pt3dadd( -81.5379, -221.279, -4.79965, 0.55 ) }
    dend_24 { pt3dadd( -82.6429, -223.425, -4.97744, 0.28 ) }
    dend_24 { pt3dadd( -83.4241, -224.926, -5.17931, 0.55 ) }
    dend_24 { pt3dadd( -84.5593, -227.062, -5.69896, 0.28 ) }
    dend_24 { pt3dadd( -85.3345, -228.469, -6.09862, 0.55 ) }
    dend_24 { pt3dadd( -87.1371, -231.294, -7.20633, 0.28 ) }
    dend_24 { pt3dadd( -87.3908, -231.673, -7.38673, 0.55 ) }
    dend_24 { pt3dadd( -88.8036, -233.823, -8.41921, 0.28 ) }
    dend_24 { pt3dadd( -89.8453, -235.502, -9.24758, 0.55 ) }
    dend_24 { pt3dadd( -90.7625, -237.093, -9.94248, 0.28 ) }
    dend_24 { pt3dadd( -92.0003, -239.587, -10.7791, 0.55 ) }
    dend_24 { pt3dadd( -93.2269, -242.518, -11.5827, 0.28 ) }
    dend_24 { pt3dadd( -94.0637, -244.829, -12.2817, 0.55 ) }
    dend_24 { pt3dadd( -95.1267, -248.666, -13.2938, 0.28 ) }
    dend_24 { pt3dadd( -95.3876, -249.869, -13.5834, 0.55 ) }
    dend_24 { pt3dadd( -95.87, -252.714, -14.2313, 0.28 ) }
    dend_24 { pt3dadd( -96.1376, -254.687, -14.5914, 0.55 ) }
    dend_24 { pt3dadd( -96.4866, -257.955, -15.1217, 0.28 ) }
    dend_24 { pt3dadd( -96.7725, -261.599, -15.5816, 0.55 ) }
    dend_24 { pt3dadd( -97.0247, -265.143, -15.9805, 0.28 ) }
    dend_24 { pt3dadd( -97.2372, -267.463, -16.3444, 0.28 ) }
    dend_24 { pt3dadd( -97.4646, -269.157, -16.6014, 0.28 ) }
    dend_24 { pt3dadd( -97.7865, -271.849, -16.8419, 0.28 ) }
    dend_24 { pt3dadd( -98.1456, -274.658, -17.0088, 0.28 ) }
    dend_24 { pt3dadd( -98.5478, -277.339, -17.276, 0.55 ) }
    dend_24 { pt3dadd( -98.8187, -279.369, -17.4352, 0.83 ) }
    dend_24 { pt3dadd( -99.2511, -282.329, -17.7098, 0.55 ) }
    dend_24 { pt3dadd( -99.7458, -285.678, -18.0402, 0.28 ) }
    dend_24 { pt3dadd( -100.192, -288.324, -18.3674, 0.55 ) }
    dend_24 { pt3dadd( -100.552, -290.288, -18.6357, 0.28 ) }
    dend_24 { pt3dadd( -100.788, -291.562, -18.8235, 0.55 ) }
    dend_24 { pt3dadd( -101.091, -292.971, -19.0489, 0.28 ) }
    dend_24 { pt3dadd( -101.636, -295.321, -19.5115, 0.55 ) }
    dend_24 { pt3dadd( -101.939, -296.533, -19.7592, 0.28 ) }
    dend_24 { pt3dadd( -102.437, -298.942, -20.1638, 0.55 ) }
    dend_24 { pt3dadd( -103.07, -302.029, -20.8005, 0.28 ) }
    dend_24 { pt3dadd( -103.405, -303.449, -21.1806, 0.55 ) }
    dend_24 { pt3dadd( -103.91, -305.325, -21.8131, 0.28 ) }
    dend_24 { pt3dadd( -104.313, -306.539, -22.3856, 0.55 ) }
    dend_24 { pt3dadd( -105.142, -308.585, -23.4695, 0.28 ) }
    dend_24 { pt3dadd( -105.948, -310.495, -24.6078, 0.55 ) }
    dend_24 { pt3dadd( -107.38, -313.539, -26.6299, 0.28 ) }
    dend_24 { pt3dadd( -107.908, -314.555, -27.3924, 0.83 ) }
    dend_24 { pt3dadd( -109.434, -317.01, -29.4068, 0.28 ) }
    dend_24 { pt3dadd( -110.763, -318.911, -31.0125, 0.28 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 46/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -41.1775, -141.026, 14.5663, 0.28 ) }
    dend_23 { pt3dadd( -41.2053, -143.401, 13.5246, 0.28 ) }
    dend_23 { pt3dadd( -41.2819, -145.738, 12.6871, 0.28 ) }
    dend_23 { pt3dadd( -41.5741, -151.377, 11.0001, 0.28 ) }
    dend_23 { pt3dadd( -41.9012, -155.288, 9.91352, 0.55 ) }
    dend_23 { pt3dadd( -42.3332, -159.337, 8.85682, 0.28 ) }
    dend_23 { pt3dadd( -42.6803, -162.106, 8.17455, 0.55 ) }
    dend_23 { pt3dadd( -43.319, -165.916, 7.39675, 0.28 ) }
    dend_23 { pt3dadd( -43.661, -167.508, 7.12627, 0.55 ) }
    dend_23 { pt3dadd( -44.4169, -170.255, 6.83837, 0.28 ) }
    dend_23 { pt3dadd( -44.753, -171.417, 6.76709, 0.55 ) }
    dend_23 { pt3dadd( -45.1377, -172.55, 6.63242, 0.28 ) }
    dend_23 { pt3dadd( -45.5896, -173.743, 6.35496, 0.55 ) }
    dend_23 { pt3dadd( -46.3508, -175.838, 5.70132, 0.28 ) }
    dend_23 { pt3dadd( -46.5968, -176.632, 5.52649, 0.55 ) }
    dend_23 { pt3dadd( -46.9742, -177.954, 5.33068, 0.28 ) }
    dend_23 { pt3dadd( -47.2433, -178.998, 5.21331, 0.55 ) }
    dend_23 { pt3dadd( -47.7345, -180.911, 5.03607, 0.28 ) }
    dend_23 { pt3dadd( -48.7953, -184.864, 4.69489, 0.55 ) }
    dend_23 { pt3dadd( -50.1732, -189.628, 4.3271, 0.83 ) }
    dend_23 { pt3dadd( -51.1555, -192.616, 4.0937, 0.28 ) }
    dend_23 { pt3dadd( -51.5346, -193.718, 4.04428, 0.55 ) }
    dend_23 { pt3dadd( -52.1123, -195.423, 4.01202, 0.28 ) }
    dend_23 { pt3dadd( -52.5232, -196.82, 4.07363, 0.55 ) }
    dend_23 { pt3dadd( -52.9102, -198.342, 4.16276, 0.28 ) }
    dend_23 { pt3dadd( -53.2326, -200.458, 4.23523, 0.55 ) }
    dend_23 { pt3dadd( -53.3223, -202.693, 4.39124, 0.28 ) }
    dend_23 { pt3dadd( -53.2893, -204.234, 4.44688, 0.55 ) }
    dend_23 { pt3dadd( -53.0747, -206.9, 4.43103, 0.28 ) }
    dend_23 { pt3dadd( -52.9466, -208.105, 4.33258, 0.55 ) }
    dend_23 { pt3dadd( -52.5886, -210.945, 3.88492, 0.28 ) }
    dend_23 { pt3dadd( -52.4032, -212.701, 3.42998, 0.55 ) }
    dend_23 { pt3dadd( -52.2057, -215.402, 2.43663, 0.28 ) }
    dend_23 { pt3dadd( -52.1132, -217.517, 1.50783, 0.55 ) }
    dend_23 { pt3dadd( -52.0216, -220.564, 0.0985456, 0.28 ) }
    dend_23 { pt3dadd( -52.0185, -221.738, -0.437157, 0.55 ) }
    dend_23 { pt3dadd( -52.1198, -223.682, -1.38173, 0.28 ) }
    dend_23 { pt3dadd( -52.241, -225.472, -2.245, 0.55 ) }
    dend_23 { pt3dadd( -52.3905, -227.703, -3.25799, 0.28 ) }
    dend_23 { pt3dadd( -52.5381, -229.931, -4.21425, 0.55 ) }
    dend_23 { pt3dadd( -52.7782, -232.929, -5.4403, 0.28 ) }
    dend_23 { pt3dadd( -52.9312, -234.639, -6.11017, 0.55 ) }
    dend_23 { pt3dadd( -53.047, -236.102, -6.63605, 0.28 ) }
    dend_23 { pt3dadd( -53.219, -237.781, -7.20084, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 55.6854, 296.504, -66.3906, 0.55 ) }
    dend_8 { pt3dadd( 57.1542, 293.428, -66.3443, 0.55 ) }
    dend_8 { pt3dadd( 58.0007, 291.656, -66.3176, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 93/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 55.6854, 296.504, -66.3906, 0.55 ) }
    dend_7 { pt3dadd( 57.1815, 297.403, -67.586, 0.55 ) }
    dend_7 { pt3dadd( 58.1065, 297.959, -68.3252, 0.83 ) }
    dend_7 { pt3dadd( 59.7663, 298.956, -69.6515, 0.55 ) }
    dend_7 { pt3dadd( 61.3569, 299.912, -70.9224, 0.55 ) }
    dend_7 { pt3dadd( 62.8994, 300.839, -72.155, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 99/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -37.7357, -155.869, -46.807, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( -36.9719, -158.442, -48.5736, 0.28 ) }
    dend_39 { pt3dadd( -36.5692, -159.799, -49.5051, 0.55 ) }
    dend_39 { pt3dadd( -34.3296, -167.344, -54.6853, 0.28 ) }
    dend_39 { pt3dadd( -33.3627, -170.601, -56.9216, 0.28 ) }
    dend_39 { pt3dadd( -32.5712, -173.268, -58.7524, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -37.7357, -155.869, -46.807, 0.28 ) }
    dend_28 { pt3dadd( -36.9973, -158.239, -41.3963, 0.28 ) }
    dend_28 { pt3dadd( -36.7563, -159.217, -39.524, 0.55 ) }
    dend_28 { pt3dadd( -34.9884, -166.384, -25.7908, 0.28 ) }
    dend_28 { pt3dadd( -34.7884, -167.195, -24.2365, 0.55 ) }
    dend_28 { pt3dadd( -34.3942, -168.793, -21.1745, 0.28 ) }
    dend_28 { pt3dadd( -34.0067, -170.364, -18.1643, 0.55 ) }
    dend_28 { pt3dadd( -33.1353, -172.623, -13.6372, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 13/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -32.5712, -173.268, -58.7524, 0.28 ) }
    dend_41 { pt3dadd( -33.1437, -178.301, -55.9763, 0.28 ) }
    dend_41 { pt3dadd( -33.3932, -180.494, -54.7667, 0.55 ) }
    dend_41 { pt3dadd( -34.3357, -188.778, -50.1975, 0.28 ) }
    dend_41 { pt3dadd( -34.5382, -190.558, -49.2157, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 18/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -32.5712, -173.268, -58.7524, 0.28 ) }
    dend_40 { pt3dadd( -32.725, -177.751, -64.6393, 0.28 ) }
    dend_40 { pt3dadd( -32.7395, -179.16, -66.2736, 0.55 ) }
    dend_40 { pt3dadd( -32.6648, -183.076, -70.2096, 0.28 ) }
    dend_40 { pt3dadd( -32.7163, -184.023, -71.0481, 0.55 ) }
    dend_40 { pt3dadd( -33.2847, -189.52, -75.7508, 0.28 ) }
    dend_40 { pt3dadd( -33.4761, -191.172, -77.093, 0.55 ) }
    dend_40 { pt3dadd( -33.9543, -193.864, -79.1133, 0.28 ) }
    dend_40 { pt3dadd( -34.2971, -195.705, -80.4415, 0.55 ) }
    dend_40 { pt3dadd( -35.5874, -202.81, -84.8572, 0.28 ) }
    dend_40 { pt3dadd( -35.858, -203.978, -85.5455, 0.55 ) }
    dend_40 { pt3dadd( -36.7401, -207.392, -87.3148, 0.28 ) }
    dend_40 { pt3dadd( -37.5985, -209.8, -88.6083, 0.55 ) }
    dend_40 { pt3dadd( -39.6737, -214.424, -91.2547, 0.28 ) }
    dend_40 { pt3dadd( -40.9732, -216.861, -92.5387, 0.55 ) }
    dend_40 { pt3dadd( -44.2082, -221.631, -94.5896, 0.28 ) }
    dend_40 { pt3dadd( -45.033, -222.625, -95.0291, 0.55 ) }
    dend_40 { pt3dadd( -47.7515, -225.145, -96.1215, 0.28 ) }
    dend_40 { pt3dadd( -48.257, -225.548, -96.3237, 0.55 ) }
    dend_40 { pt3dadd( -51.9845, -228.239, -98.8307, 0.28 ) }
    dend_40 { pt3dadd( -54.5759, -230.582, -101.926, 0.55 ) }
    dend_40 { pt3dadd( -56.4874, -232.854, -105.152, 0.28 ) }
    dend_40 { pt3dadd( -57.0597, -233.676, -106.402, 0.55 ) }
    dend_40 { pt3dadd( -58.336, -236.115, -110.236, 0.55 ) }
    dend_40 { pt3dadd( -59.7231, -239.105, -115.096, 0.28 ) }
    dend_40 { pt3dadd( -60.2885, -240.622, -117.658, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_28 (entry count 44/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -33.1353, -172.623, -13.6372, 0.28 ) }
    dend_36 { pt3dadd( -33.2471, -177.332, -14.5711, 0.28 ) }
    dend_36 { pt3dadd( -33.2584, -179.632, -15.2732, 0.55 ) }
    dend_36 { pt3dadd( -33.6246, -182.372, -15.7506, 0.28 ) }
    dend_36 { pt3dadd( -33.9873, -184.305, -16.0248, 0.55 ) }
    dend_36 { pt3dadd( -34.3995, -187.474, -16.1516, 0.28 ) }
    dend_36 { pt3dadd( -34.6172, -189.588, -16.1251, 0.55 ) }
    dend_36 { pt3dadd( -34.942, -192.938, -15.9195, 0.55 ) }
    dend_36 { pt3dadd( -35.3131, -198.978, -15.4032, 0.28 ) }
    dend_36 { pt3dadd( -35.3715, -200.844, -15.1659, 0.55 ) }
    dend_36 { pt3dadd( -34.6946, -205.796, -13.8493, 0.28 ) }
    dend_36 { pt3dadd( -34.3651, -206.909, -13.4248, 0.55 ) }
    dend_36 { pt3dadd( -32.9578, -210.264, -11.9991, 0.28 ) }
    dend_36 { pt3dadd( -31.9131, -212.154, -11.1737, 0.55 ) }
    dend_36 { pt3dadd( -31.0765, -213.328, -10.607, 0.55 ) }
    dend_36 { pt3dadd( -24.8996, -221.411, -6.19522, 0.28 ) }
    dend_36 { pt3dadd( -24.3433, -222.097, -5.79406, 0.55 ) }
    dend_36 { pt3dadd( -22.9524, -223.731, -4.77232, 0.28 ) }
    dend_36 { pt3dadd( -21.5108, -225.376, -3.68432, 1.11 ) }
    dend_36 { pt3dadd( -17.6992, -230.041, -0.60719, 0.28 ) }
    dend_36 { pt3dadd( -17.217, -230.694, -0.186924, 0.55 ) }
    dend_36 { pt3dadd( -15.5548, -233.644, 1.44745, 0.28 ) }
    dend_36 { pt3dadd( -15.0932, -234.516, 1.95923, 0.55 ) }
    dend_36 { pt3dadd( -14.6019, -235.504, 2.5568, 0.28 ) }
    dend_36 { pt3dadd( -13.5819, -237.747, 3.82597, 0.55 ) }
    dend_36 { pt3dadd( -12.4182, -241.936, 5.5838, 0.28 ) }
    dend_36 { pt3dadd( -12.2717, -242.829, 5.96697, 0.55 ) }
    dend_36 { pt3dadd( -12.2862, -244.103, 6.50339, 0.55 ) }
    dend_36 { pt3dadd( -12.4099, -245.257, 7.005, 0.28 ) }
    dend_36 { pt3dadd( -12.7451, -246.64, 7.61773, 0.55 ) }
    dend_36 { pt3dadd( -14.4812, -250.625, 9.04982, 0.28 ) }
    dend_36 { pt3dadd( -15.1004, -251.622, 9.37946, 0.55 ) }
    dend_36 { pt3dadd( -16.4614, -253.602, 9.97043, 0.28 ) }
    dend_36 { pt3dadd( -16.8562, -254.114, 10.1286, 0.55 ) }
    dend_36 { pt3dadd( -18.0976, -255.518, 10.6137, 0.28 ) }
    dend_36 { pt3dadd( -20.605, -258.074, 11.6791, 0.28 ) }
    dend_36 { pt3dadd( -21.2935, -258.699, 11.9629, 0.28 ) }
    dend_36 { pt3dadd( -22.0033, -259.285, 12.2633, 0.55 ) }
    dend_36 { pt3dadd( -24.1163, -260.926, 13.2497, 0.28 ) }
    dend_36 { pt3dadd( -25.1751, -261.603, 13.6946, 0.55 ) }
    dend_36 { pt3dadd( -32.5081, -265.085, 16.4939, 0.28 ) }
    dend_36 { pt3dadd( -33.8969, -265.552, 17.0016, 0.55 ) }
    dend_36 { pt3dadd( -35.66, -265.985, 17.5676, 0.28 ) }
    dend_36 { pt3dadd( -36.8808, -266.153, 17.9143, 0.55 ) }
    dend_36 { pt3dadd( -41.9528, -266.327, 18.9859, 0.28 ) }
    dend_36 { pt3dadd( -45.697, -266.029, 19.6275, 0.28 ) }
    dend_36 { pt3dadd( -46.63, -265.833, 19.777, 0.55 ) }
    dend_36 { pt3dadd( -47.4147, -265.642, 19.91, 0.55 ) }
    dend_36 { pt3dadd( -51.1309, -264.586, 20.6071, 0.28 ) }
    dend_36 { pt3dadd( -52.8946, -263.922, 21.001, 0.55 ) }
    dend_36 { pt3dadd( -56.1472, -262.432, 21.9963, 0.28 ) }
    dend_36 { pt3dadd( -57.3476, -261.772, 22.4049, 0.55 ) }
    dend_36 { pt3dadd( -60.2551, -259.967, 23.4546, 0.28 ) }
    dend_36 { pt3dadd( -61.1744, -259.383, 23.7367, 0.55 ) }
    dend_36 { pt3dadd( -64.1893, -257.475, 24.564, 0.28 ) }
    dend_36 { pt3dadd( -64.9779, -257.003, 24.794, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_36 { pt3dadd( -68.732, -255.109, 25.6646, 0.28 ) }
    dend_36 { pt3dadd( -70.0949, -254.514, 25.9706, 0.55 ) }
    dend_36 { pt3dadd( -75.1501, -252.631, 27.0329, 0.28 ) }
    dend_36 { pt3dadd( -77.1482, -251.959, 27.4052, 0.28 ) }
    dend_36 { pt3dadd( -78.921, -251.401, 27.8061, 0.55 ) }
    dend_36 { pt3dadd( -83.9483, -249.673, 29.2087, 0.28 ) }
    dend_36 { pt3dadd( -85.8187, -248.958, 29.8515, 0.55 ) }
    dend_36 { pt3dadd( -88.1175, -247.874, 30.9359, 0.28 ) }
    dend_36 { pt3dadd( -88.8628, -247.376, 31.4349, 0.55 ) }
    dend_36 { pt3dadd( -91.8761, -244.923, 33.6774, 0.28 ) }
    dend_36 { pt3dadd( -92.5819, -244.304, 34.2456, 0.55 ) }
    dend_36 { pt3dadd( -95.5648, -241.546, 36.9275, 0.28 ) }
    dend_36 { pt3dadd( -97.2177, -240.253, 38.1663, 0.55 ) }
    dend_36 { pt3dadd( -98.8235, -239.213, 39.2428, 0.28 ) }
    dend_36 { pt3dadd( -99.6147, -238.864, 39.5419, 0.55 ) }
    dend_36 { pt3dadd( -101.491, -238.338, 40.0965, 0.28 ) }
    dend_36 { pt3dadd( -103.374, -237.957, 40.7065, 0.55 ) }
    dend_36 { pt3dadd( -105.511, -237.675, 41.5222, 0.28 ) }
    dend_36 { pt3dadd( -107.181, -237.5, 42.1888, 0.55 ) }
    dend_36 { pt3dadd( -111.987, -237.178, 44.2927, 0.28 ) }
    dend_36 { pt3dadd( -116.985, -236.888, 46.6739, 0.28 ) }
    dend_36 { pt3dadd( -118.604, -236.788, 47.5252, 0.55 ) }
    dend_36 { pt3dadd( -121.943, -236.716, 49.4349, 0.28 ) }
    dend_36 { pt3dadd( -122.737, -236.739, 49.9031, 0.55 ) }
    dend_36 { pt3dadd( -125.309, -236.922, 51.4898, 0.28 ) }
    dend_36 { pt3dadd( -129.138, -237.483, 54.042, 0.28 ) }
    dend_36 { pt3dadd( -129.962, -237.649, 54.5268, 0.55 ) }
    dend_36 { pt3dadd( -133.096, -238.443, 56.3342, 0.28 ) }
    dend_36 { pt3dadd( -133.903, -238.682, 56.7708, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 29/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -33.1353, -172.623, -13.6372, 0.28 ) }
    dend_29 { pt3dadd( -38.796, -175.885, -15.3916, 0.28 ) }
    dend_29 { pt3dadd( -42.5347, -177.894, -16.2989, 0.55 ) }
    dend_29 { pt3dadd( -49.0066, -181.241, -17.4355, 0.28 ) }
    dend_29 { pt3dadd( -52.5677, -183.115, -18.0751, 0.55 ) }
    dend_29 { pt3dadd( -56.0559, -184.952, -19.1183, 0.28 ) }
    dend_29 { pt3dadd( -60.777, -187.483, -20.6207, 0.55 ) }
    dend_29 { pt3dadd( -64.1744, -189.453, -21.8264, 0.28 ) }
    dend_29 { pt3dadd( -65.6313, -190.306, -22.3976, 0.55 ) }
    dend_29 { pt3dadd( -71.2882, -193.594, -24.462, 0.28 ) }
    dend_29 { pt3dadd( -77.0842, -196.943, -26.796, 0.28 ) }
    dend_29 { pt3dadd( -79.3683, -198.297, -27.5202, 0.55 ) }
    dend_29 { pt3dadd( -87.4912, -203.1, -29.6152, 0.28 ) }
    dend_29 { pt3dadd( -90.4635, -204.768, -30.3393, 0.55 ) }
    dend_29 { pt3dadd( -92.3367, -205.782, -30.6698, 0.28 ) }
    dend_29 { pt3dadd( -96.2073, -207.726, -30.8798, 0.55 ) }
    dend_29 { pt3dadd( -105.032, -212.054, -30.3362, 0.28 ) }
    dend_29 { pt3dadd( -106.565, -212.724, -30.2351, 0.55 ) }
    dend_29 { pt3dadd( -107.819, -213.176, -30.0731, 0.28 ) }
    dend_29 { pt3dadd( -109.325, -213.766, -29.9536, 0.55 ) }
    dend_29 { pt3dadd( -111.77, -214.82, -29.8666, 0.28 ) }
    dend_29 { pt3dadd( -113.893, -215.83, -29.768, 0.55 ) }
    dend_29 { pt3dadd( -118.963, -218.552, -29.9301, 0.28 ) }
    dend_29 { pt3dadd( -123.873, -221.356, -30.6351, 0.28 ) }
    dend_29 { pt3dadd( -129.947, -224.873, -31.9551, 0.28 ) }
    dend_29 { pt3dadd( -132.374, -226.351, -32.6181, 0.55 ) }
    dend_29 { pt3dadd( -135.021, -228.112, -33.4863, 0.28 ) }
    dend_29 { pt3dadd( -137.894, -230.103, -34.5555, 0.55 ) }
    dend_29 { pt3dadd( -142.879, -234.199, -36.6244, 0.28 ) }
    dend_29 { pt3dadd( -144.442, -235.608, -37.5089, 0.55 ) }
    dend_29 { pt3dadd( -145.98, -236.834, -38.5563, 0.28 ) }
    dend_29 { pt3dadd( -146.639, -237.292, -39.0635, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 61/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -133.903, -238.682, 56.7708, 0.28 ) }
    dend_38 { pt3dadd( -134.983, -241.309, 56.0186, 0.28 ) }
    dend_38 { pt3dadd( -134.774, -241.916, 55.8414, 0.55 ) }
    dend_38 { pt3dadd( -133.628, -244.115, 55.3584, 0.28 ) }
    dend_38 { pt3dadd( -132.75, -245.554, 55.0636, 0.55 ) }
    dend_38 { pt3dadd( -132.076, -246.54, 54.851, 0.28 ) }
    dend_38 { pt3dadd( -131.01, -248.085, 54.4796, 0.55 ) }
    dend_38 { pt3dadd( -127.982, -251.821, 53.8091, 0.28 ) }
    dend_38 { pt3dadd( -127.228, -252.655, 53.6424, 0.55 ) }
    dend_38 { pt3dadd( -126.563, -253.286, 53.491, 0.28 ) }
    dend_38 { pt3dadd( -125.666, -254.067, 53.3155, 0.55 ) }
    dend_38 { pt3dadd( -124.625, -255.015, 53.1022, 0.28 ) }
    dend_38 { pt3dadd( -123.62, -255.999, 52.797, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 74/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -133.903, -238.682, 56.7708, 0.28 ) }
    dend_37 { pt3dadd( -137.318, -237.886, 57.2798, 0.28 ) }
    dend_37 { pt3dadd( -138.763, -237.597, 57.4713, 0.55 ) }
    dend_37 { pt3dadd( -144.003, -236.629, 58.2594, 0.28 ) }
    dend_37 { pt3dadd( -145.197, -236.402, 58.3977, 0.55 ) }
    dend_37 { pt3dadd( -151.998, -235.062, 59.2133, 0.28 ) }
    dend_37 { pt3dadd( -153.566, -234.734, 59.3179, 0.55 ) }
    dend_37 { pt3dadd( -156.163, -234.185, 59.2181, 0.28 ) }
    dend_37 { pt3dadd( -157.52, -233.875, 59.076, 0.55 ) }
    dend_37 { pt3dadd( -161.135, -233.034, 58.4191, 0.28 ) }
    dend_37 { pt3dadd( -162.572, -232.628, 57.9723, 0.55 ) }
    dend_37 { pt3dadd( -167.019, -230.988, 55.9942, 0.28 ) }
    dend_37 { pt3dadd( -168.27, -230.559, 55.3016, 0.55 ) }
    dend_37 { pt3dadd( -169.704, -230.158, 54.4232, 0.28 ) }
    dend_37 { pt3dadd( -170.681, -229.906, 53.778, 0.55 ) }
    dend_37 { pt3dadd( -173.019, -229.418, 52.1809, 0.28 ) }
    dend_37 { pt3dadd( -174.03, -229.249, 51.4599, 0.83 ) }
    dend_37 { pt3dadd( -177.768, -228.998, 49.049, 0.28 ) }
    dend_37 { pt3dadd( -179.04, -229.011, 48.2651, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 93/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -146.639, -237.292, -39.0635, 0.28 ) }
    dend_33 { pt3dadd( -149.828, -238.438, -42.7725, 0.28 ) }
    dend_33 { pt3dadd( -152.554, -239.418, -45.9431, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -146.639, -237.292, -39.0635, 0.28 ) }
    dend_30 { pt3dadd( -145.174, -240.785, -39.5359, 0.28 ) }
    dend_30 { pt3dadd( -144.375, -242.858, -39.609, 0.55 ) }
    dend_30 { pt3dadd( -144.192, -243.39, -39.6122, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_30 { pt3dadd( -143.947, -244.071, -39.6031, 0.55 ) }
    dend_30 { pt3dadd( -143.33, -245.786, -39.5801, 0.28 ) }
    dend_30 { pt3dadd( -142.555, -247.942, -39.5513, 0.55 ) }
    dend_30 { pt3dadd( -141.968, -249.891, -39.3137, 0.28 ) }
    dend_30 { pt3dadd( -141.751, -250.92, -39.2298, 0.55 ) }
    dend_30 { pt3dadd( -141.363, -252.698, -39.0396, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 6/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -152.554, -239.418, -45.9431, 0.28 ) }
    dend_35 { pt3dadd( -153.323, -240.467, -45.0456, 0.28 ) }
    dend_35 { pt3dadd( -153.75, -240.881, -44.5582, 0.55 ) }
    dend_35 { pt3dadd( -154.745, -241.843, -43.4233, 0.28 ) }
    dend_35 { pt3dadd( -154.884, -241.977, -43.2651, 0.55 ) }
    dend_35 { pt3dadd( -156.472, -243.514, -41.4524, 0.28 ) }
    dend_35 { pt3dadd( -157.475, -244.485, -40.308, 0.55 ) }
    dend_35 { pt3dadd( -158.144, -245.242, -38.9961, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 14/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -152.554, -239.418, -45.9431, 0.28 ) }
    dend_34 { pt3dadd( -152.446, -241.967, -45.9195, 0.28 ) }
    dend_34 { pt3dadd( -152.385, -243.409, -45.9062, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -141.363, -252.698, -39.0396, 0.28 ) }
    dend_32 { pt3dadd( -139.852, -252.929, -41.8909, 0.28 ) }
    dend_32 { pt3dadd( -139.151, -253.036, -43.2136, 0.83 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -141.363, -252.698, -39.0396, 0.28 ) }
    dend_31 { pt3dadd( -152.774, -257.418, -49.4618, 0.28 ) }
    dend_31 { pt3dadd( -153.819, -257.902, -50.412, 0.55 ) }
    dend_31 { pt3dadd( -154.89, -258.532, -51.4394, 0.28 ) }
    dend_31 { pt3dadd( -156.394, -259.589, -52.9186, 0.55 ) }
    dend_31 { pt3dadd( -157.612, -260.643, -54.1847, 0.28 ) }
    dend_31 { pt3dadd( -159.012, -262.436, -55.9575, 0.55 ) }
    dend_31 { pt3dadd( -158.332, -266.033, -56.8834, 0.28 ) }
    dend_31 { pt3dadd( -157.237, -270.199, -58.2614, 0.55 ) }
    dend_31 { pt3dadd( -156.436, -273.691, -59.9392, 0.28 ) }
    dend_31 { pt3dadd( -156.012, -275.12, -60.4011, 0.55 ) }
    dend_31 { pt3dadd( -154.635, -279.21, -61.3017, 0.28 ) }
    dend_31 { pt3dadd( -153.685, -281.622, -61.6393, 0.55 ) }
    dend_31 { pt3dadd( -152.584, -284.439, -62.0118, 0.28 ) }
    dend_31 { pt3dadd( -151.305, -287.515, -62.181, 0.55 ) }
    dend_31 { pt3dadd( -147.757, -296.28, -62.5631, 0.28 ) }
    dend_31 { pt3dadd( -147.527, -296.799, -62.5377, 0.55 ) }
    dend_31 { pt3dadd( -146.804, -298.253, -62.2884, 0.28 ) }
    dend_31 { pt3dadd( -146.262, -299.4, -62.0789, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
    ModelViewParmSubset_2 = new SectionList()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_11, dend_0, dend_19, dend_12, dend_10, dend_1, dend_44, dend_20, dend_18, dend_13, dend_3, dend_2, dend_46, dend_45, dend_25, dend_21, dend_17, dend_14, dend_5, dend_4, dend_48, dend_47, dend_43, dend_26, dend_22, dend_16, dend_15, dend_9, dend_6, dend_42, dend_27, dend_24, dend_23, dend_8, dend_7, dend_39, dend_28, dend_41, dend_40, dend_36, dend_29, dend_38, dend_37, dend_33, dend_30, dend_35, dend_34, dend_32, dend_31]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_19 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_10 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_18 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_13 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_25 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_17 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_4 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_47 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_22 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_36 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_29 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_31 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_11 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_12 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_20 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_48 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_21 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_26 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_27 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_9 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_34 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_35 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_32 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_19 nseg = 3
    dend_10 nseg = 3
    dend_1 nseg = 3
    dend_18 nseg = 5
    dend_13 nseg = 5
    dend_2 nseg = 3
    dend_45 nseg = 5
    dend_25 nseg = 3
    dend_17 nseg = 9
    dend_5 nseg = 7
    dend_4 nseg = 9
    dend_47 nseg = 9
    dend_43 nseg = 5
    dend_22 nseg = 3
    dend_16 nseg = 3
    dend_15 nseg = 5
    dend_24 nseg = 11
    dend_23 nseg = 5
    dend_40 nseg = 5
    dend_36 nseg = 11
    dend_29 nseg = 7
    dend_37 nseg = 3
    dend_31 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_DBC_3f985b6ce2_0_0


