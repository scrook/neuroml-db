// Cell: cACint209_L23_BP_ca85cefc69_0_0
/*
{
  "id" : "cACint209_L23_BP_ca85cefc69_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.641766, -11.2311, 12.6498, 1.66", "-1.27734, -13.7165, 14.7091, 1.66", "-2.36884, -17.9848, 18.2458, 1.39", "-6.70978, -34.9598, 32.3112, 1.11", "-7.47128, -37.9376, 34.7786, 1.11", "-8.43574, -41.7091, 37.9036, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.625826, 12.6176, 1.29703, 0.83", "0.628703, 14.1836, 1.98033, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.43574, -41.7091, 37.9036, 0.83", "-9.85917, -48.9242, 35.3641, 0.83", "-10.1981, -50.6422, 34.7594, 0.83", "-11.0633, -55.0275, 33.2158, 0.83", "-11.4511, -56.9934, 32.5239, 0.83", "-12.2851, -61.2211, 31.0359, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.43574, -41.7091, 37.9036, 0.83", "-8.70989, -43.7881, 38.1981, 0.83", "-8.9634, -45.6697, 38.4362, 0.83", "-9.38042, -48.1214, 38.7295, 0.83", "-10.2602, -53.7337, 39.2337, 0.83", "-10.9369, -58.3719, 39.5692, 0.55", "-12.1153, -66.2316, 39.9662, 0.55", "-12.5866, -70.1579, 40.1795, 0.83", "-13.023, -74.663, 40.4114, 0.55", "-13.485, -82.0624, 40.9716, 0.55", "-13.5704, -84.1827, 41.1499, 0.55", "-13.7787, -89.936, 41.6625, 0.55", "-13.9876, -97.2007, 42.4851, 0.55", "-14.1095, -101.551, 43.0273, 0.55", "-14.3173, -107.339, 43.8115, 0.55", "-15.0287, -117.713, 45.3965, 0.55", "-15.5626, -123.167, 46.2394, 0.55", "-16.0582, -127.223, 46.8265, 0.55", "-16.5901, -130.007, 47.1442, 0.55", "-17.1922, -132.425, 47.3937, 0.55", "-18.5926, -137.245, 48.0388, 0.55", "-19.3463, -139.65, 48.3924, 0.55", "-20.4895, -143.325, 49.0961, 0.55", "-22.0232, -148.247, 50.1265, 0.55", "-24.3048, -155.339, 51.7408, 0.55", "-26.3012, -161.732, 53.2848, 0.55", "-28.0749, -167.304, 54.7625, 0.83", "-29.7513, -172.628, 56.3701, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.628703, 14.1836, 1.98033, 0.83", "0.00422198, 22.4548, -1.89125, 0.83", "-0.0851201, 24.6347, -2.83609, 0.83", "-0.198981, 27.3066, -4.02086, 0.83", "-0.253961, 29.5136, -4.93811, 0.83", "-0.317169, 33.0431, -6.33248, 0.83", "-0.330476, 37.659, -8.05975, 0.83", "-0.345311, 40.9396, -9.01367, 0.83", "-0.335487, 44.4893, -10.1113, 0.83", "-0.289956, 48.1346, -11.3883, 0.55", "-0.27623, 49.2889, -11.7995, 0.55", "-0.284989, 51.2639, -12.5125, 0.55", "-0.239048, 55.3874, -13.932, 0.55", "-0.231798, 58.3788, -14.9219, 0.55", "-0.152107, 65.8754, -17.3988, 0.55", "-0.164029, 69.2596, -18.6577, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.628703, 14.1836, 1.98033, 0.83", "1.96143, 17.8478, 3.28085, 0.83", "2.94085, 20.7383, 4.41531, 0.83", "4.36807, 25.297, 6.36718, 0.83", "5.69653, 29.6907, 8.29324, 0.83", "7.19773, 35.2517, 10.4993, 0.83", "8.31736, 39.4438, 12.0473, 0.83", "9.04774, 42.6145, 13.229, 0.83", "9.8034, 46.0926, 14.4027, 0.83", "9.96561, 47.0393, 14.6685, 0.83", "11.7939, 57.923, 17.1274, 0.83", "12.124, 60.2363, 17.4949, 0.83", "12.5354, 63.3821, 17.8274, 0.83", "12.8593, 66.1052, 18.0524, 0.83", "13.1808, 69.2631, 18.2607, 0.83", "13.6175, 73.2519, 18.5258, 0.83", "13.9603, 77.3618, 18.7851, 0.83", "14.1986, 79.7098, 18.9353, 0.83", "14.668, 83.3417, 19.1622, 0.83", "15.0693, 86.9128, 19.3939, 0.83", "15.5554, 90.6661, 19.5926, 0.83", "16.1914, 95.5714, 19.9062, 0.83", "16.6134, 98.7759, 20.2609, 0.83", "16.8145, 100.549, 20.5075, 0.83", "17.0057, 102.555, 20.8914, 0.83", "17.2906, 105.522, 21.6395, 0.83", "17.5223, 109.878, 23.0249, 0.55", "17.8603, 115.591, 25.08, 0.55", "17.8737, 117.271, 25.7154, 0.55", "17.8862, 120.805, 27.0309, 0.55", "17.8518, 122.287, 27.5599, 0.55", "17.7411, 125.065, 28.5458, 0.55", "17.6753, 127.964, 29.4349, 0.55", "17.7584, 132.177, 30.4767, 0.55", "17.821, 134.953, 31.1197, 0.55", "17.8308, 137.48, 31.6219, 0.55", "17.9287, 140.637, 32.2361, 0.55", "18.2233, 143.927, 32.8097, 0.55", "18.7626, 148.413, 33.6584, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-12.2851, -61.2211, 31.0359, 0.83", "-13.2067, -64.8574, 32.3691, 0.83", "-13.8779, -67.7387, 33.304, 0.83", "-14.6231, -71.2135, 34.2982, 0.83", "-15.2093, -74.0879, 35.0306, 0.83", "-15.5656, -75.8348, 35.4757, 0.83", "-15.9904, -77.9176, 36.0063, 0.83", "-16.2087, -79.4153, 36.3125, 0.83", "-16.4266, -81.1251, 36.5946, 0.83", "-16.547, -83.3066, 36.6745, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.2851, -61.2211, 31.0359, 0.55", "-11.067, -61.3204, 38.3266, 0.55", "-9.53741, -61.3683, 46.092, 0.55", "-8.76042, -61.3926, 50.0366, 0.55", "-7.78179, -61.4232, 55.0049, 0.28", "-7.62012, -61.4283, 55.8257, 0.83", "-6.77201, -61.4548, 60.1314, 0.28", "-6.60415, -61.4107, 60.8635, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-0.164029, 69.2596, -18.6577, 0.55", "0.494901, 73.165, -18.9814, 0.55", "1.20052, 77.2907, -19.4384, 0.55", "1.69728, 80.191, -19.7307, 0.55", "2.48783, 84.5427, -20.1436, 0.83", "3.05154, 87.636, -20.4186, 0.55", "3.60665, 90.5193, -20.6609, 0.55", "4.12642, 93.2167, -20.8089, 1.11", "5.0646, 97.899, -21.2086, 0.55", "5.33518, 99.467, -21.375, 0.55", "5.66846, 101.446, -21.6084, 1.11", "6.06947, 103.901, -21.9171, 0.55", "6.30024, 105.507, -22.1209, 1.11", "6.95452, 110.41, -22.693, 0.55", "7.20925, 112.996, -23.1819, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.164029, 69.2596, -18.6577, 0.28", "-0.823545, 72.1812, -21.5587, 0.28", "-0.901676, 72.6168, -21.9846, 0.55", "-1.48545, 76.462, -25.6044, 0.28", "-1.98257, 80.0381, -29.1926, 1.11", "-2.21227, 81.8922, -31.1734, 0.28", "-2.21227, 81.8922, -31.1734, 0.55", "-2.09203, 84.1173, -33.1777, 0.28", "-1.94341, 84.9613, -33.8689, 1.11", "-0.276141, 88.623, -35.975, 0.55", "1.71816, 91.4204, -36.7572, 0.28", "5.30582, 95.757, -37.4599, 1.11", "8.64467, 99.4116, -37.6558, 0.28", "8.736, 99.4955, -37.6414, 0.55", "11.6509, 101.849, -36.764, 0.28", "11.9373, 102.054, -36.6257, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-16.547, -83.3066, 36.6745, 0.83", "-16.0433, -88.5496, 39.5296, 0.83", "-15.8303, -92.7552, 42.0631, 0.83", "-15.691, -94.7043, 43.2894, 0.83", "-15.6836, -95.8273, 44.0723, 0.83", "-15.7771, -98.9232, 46.2353, 0.83", "-15.7623, -100.762, 47.3904, 0.83", "-15.4977, -104.256, 49.3022, 0.83", "-15.2337, -106.645, 50.6908, 0.83", "-14.5238, -110.656, 53.0505, 0.83", "-13.9772, -112.686, 54.2012, 0.83", "-12.2171, -117.651, 56.6589, 0.83", "-10.4899, -122.103, 58.5621, 0.83", "-8.94175, -125.832, 59.7839, 0.83", "-7.88561, -128.582, 60.5207, 0.83", "-7.66863, -129.14, 60.6483, 0.83", "-6.63787, -132.384, 61.4541, 0.28", "-6.45219, -133.261, 61.6882, 0.83", "-6.06336, -135.579, 62.156, 0.28", "-5.37958, -139.715, 62.9026, 0.28", "-5.26016, -140.605, 63.0855, 0.28", "-4.87562, -143.435, 63.6974, 0.83", "-4.50531, -145.918, 64.3005, 0.28", "-4.21416, -147.903, 64.814, 0.83", "-3.95395, -149.47, 65.2966, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.547, -83.3066, 36.6745, 0.55", "-17.0184, -88.301, 34.988, 0.55", "-17.3074, -90.4515, 34.2968, 0.55", "-18.0468, -95.0259, 32.9027, 0.55", "-18.4213, -96.9896, 32.3288, 0.55", "-18.8626, -98.9099, 31.7883, 0.28", "-19.0598, -99.768, 31.5467, 0.55", "-19.7184, -101.775, 31.0509, 0.28", "-20.1766, -103.081, 30.7512, 0.55", "-20.8392, -104.61, 30.492, 0.28", "-21.9144, -106.923, 30.0599, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "axon_0", "dend_7", "dend_6", "dend_2", "dend_1", "axon_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BP_ca85cefc69_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.641766, -11.2311, 12.6498, 1.66 ) }
    dend_5 { pt3dadd( -1.27734, -13.7165, 14.7091, 1.66 ) }
    dend_5 { pt3dadd( -2.36884, -17.9848, 18.2458, 1.39 ) }
    dend_5 { pt3dadd( -6.70978, -34.9598, 32.3112, 1.11 ) }
    dend_5 { pt3dadd( -7.47128, -37.9376, 34.7786, 1.11 ) }
    dend_5 { pt3dadd( -8.43574, -41.7091, 37.9036, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.625826, 12.6176, 1.29703, 0.83 ) }
    dend_0 { pt3dadd( 0.628703, 14.1836, 1.98033, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.43574, -41.7091, 37.9036, 0.83 ) }
    dend_7 { pt3dadd( -9.85917, -48.9242, 35.3641, 0.83 ) }
    dend_7 { pt3dadd( -10.1981, -50.6422, 34.7594, 0.83 ) }
    dend_7 { pt3dadd( -11.0633, -55.0275, 33.2158, 0.83 ) }
    dend_7 { pt3dadd( -11.4511, -56.9934, 32.5239, 0.83 ) }
    dend_7 { pt3dadd( -12.2851, -61.2211, 31.0359, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.43574, -41.7091, 37.9036, 0.83 ) }
    dend_6 { pt3dadd( -8.70989, -43.7881, 38.1981, 0.83 ) }
    dend_6 { pt3dadd( -8.9634, -45.6697, 38.4362, 0.83 ) }
    dend_6 { pt3dadd( -9.38042, -48.1214, 38.7295, 0.83 ) }
    dend_6 { pt3dadd( -10.2602, -53.7337, 39.2337, 0.83 ) }
    dend_6 { pt3dadd( -10.9369, -58.3719, 39.5692, 0.55 ) }
    dend_6 { pt3dadd( -12.1153, -66.2316, 39.9662, 0.55 ) }
    dend_6 { pt3dadd( -12.5866, -70.1579, 40.1795, 0.83 ) }
    dend_6 { pt3dadd( -13.023, -74.663, 40.4114, 0.55 ) }
    dend_6 { pt3dadd( -13.485, -82.0624, 40.9716, 0.55 ) }
    dend_6 { pt3dadd( -13.5704, -84.1827, 41.1499, 0.55 ) }
    dend_6 { pt3dadd( -13.7787, -89.936, 41.6625, 0.55 ) }
    dend_6 { pt3dadd( -13.9876, -97.2007, 42.4851, 0.55 ) }
    dend_6 { pt3dadd( -14.1095, -101.551, 43.0273, 0.55 ) }
    dend_6 { pt3dadd( -14.3173, -107.339, 43.8115, 0.55 ) }
    dend_6 { pt3dadd( -15.0287, -117.713, 45.3965, 0.55 ) }
    dend_6 { pt3dadd( -15.5626, -123.167, 46.2394, 0.55 ) }
    dend_6 { pt3dadd( -16.0582, -127.223, 46.8265, 0.55 ) }
    dend_6 { pt3dadd( -16.5901, -130.007, 47.1442, 0.55 ) }
    dend_6 { pt3dadd( -17.1922, -132.425, 47.3937, 0.55 ) }
    dend_6 { pt3dadd( -18.5926, -137.245, 48.0388, 0.55 ) }
    dend_6 { pt3dadd( -19.3463, -139.65, 48.3924, 0.55 ) }
    dend_6 { pt3dadd( -20.4895, -143.325, 49.0961, 0.55 ) }
    dend_6 { pt3dadd( -22.0232, -148.247, 50.1265, 0.55 ) }
    dend_6 { pt3dadd( -24.3048, -155.339, 51.7408, 0.55 ) }
    dend_6 { pt3dadd( -26.3012, -161.732, 53.2848, 0.55 ) }
    dend_6 { pt3dadd( -28.0749, -167.304, 54.7625, 0.83 ) }
    dend_6 { pt3dadd( -29.7513, -172.628, 56.3701, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.628703, 14.1836, 1.98033, 0.83 ) }
    dend_2 { pt3dadd( 0.00422198, 22.4548, -1.89125, 0.83 ) }
    dend_2 { pt3dadd( -0.0851201, 24.6347, -2.83609, 0.83 ) }
    dend_2 { pt3dadd( -0.198981, 27.3066, -4.02086, 0.83 ) }
    dend_2 { pt3dadd( -0.253961, 29.5136, -4.93811, 0.83 ) }
    dend_2 { pt3dadd( -0.317169, 33.0431, -6.33248, 0.83 ) }
    dend_2 { pt3dadd( -0.330476, 37.659, -8.05975, 0.83 ) }
    dend_2 { pt3dadd( -0.345311, 40.9396, -9.01367, 0.83 ) }
    dend_2 { pt3dadd( -0.335487, 44.4893, -10.1113, 0.83 ) }
    dend_2 { pt3dadd( -0.289956, 48.1346, -11.3883, 0.55 ) }
    dend_2 { pt3dadd( -0.27623, 49.2889, -11.7995, 0.55 ) }
    dend_2 { pt3dadd( -0.284989, 51.2639, -12.5125, 0.55 ) }
    dend_2 { pt3dadd( -0.239048, 55.3874, -13.932, 0.55 ) }
    dend_2 { pt3dadd( -0.231798, 58.3788, -14.9219, 0.55 ) }
    dend_2 { pt3dadd( -0.152107, 65.8754, -17.3988, 0.55 ) }
    dend_2 { pt3dadd( -0.164029, 69.2596, -18.6577, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.628703, 14.1836, 1.98033, 0.83 ) }
    dend_1 { pt3dadd( 1.96143, 17.8478, 3.28085, 0.83 ) }
    dend_1 { pt3dadd( 2.94085, 20.7383, 4.41531, 0.83 ) }
    dend_1 { pt3dadd( 4.36807, 25.297, 6.36718, 0.83 ) }
    dend_1 { pt3dadd( 5.69653, 29.6907, 8.29324, 0.83 ) }
    dend_1 { pt3dadd( 7.19773, 35.2517, 10.4993, 0.83 ) }
    dend_1 { pt3dadd( 8.31736, 39.4438, 12.0473, 0.83 ) }
    dend_1 { pt3dadd( 9.04774, 42.6145, 13.229, 0.83 ) }
    dend_1 { pt3dadd( 9.8034, 46.0926, 14.4027, 0.83 ) }
    dend_1 { pt3dadd( 9.96561, 47.0393, 14.6685, 0.83 ) }
    dend_1 { pt3dadd( 11.7939, 57.923, 17.1274, 0.83 ) }
    dend_1 { pt3dadd( 12.124, 60.2363, 17.4949, 0.83 ) }
    dend_1 { pt3dadd( 12.5354, 63.3821, 17.8274, 0.83 ) }
    dend_1 { pt3dadd( 12.8593, 66.1052, 18.0524, 0.83 ) }
    dend_1 { pt3dadd( 13.1808, 69.2631, 18.2607, 0.83 ) }
    dend_1 { pt3dadd( 13.6175, 73.2519, 18.5258, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 13.9603, 77.3618, 18.7851, 0.83 ) }
    dend_1 { pt3dadd( 14.1986, 79.7098, 18.9353, 0.83 ) }
    dend_1 { pt3dadd( 14.668, 83.3417, 19.1622, 0.83 ) }
    dend_1 { pt3dadd( 15.0693, 86.9128, 19.3939, 0.83 ) }
    dend_1 { pt3dadd( 15.5554, 90.6661, 19.5926, 0.83 ) }
    dend_1 { pt3dadd( 16.1914, 95.5714, 19.9062, 0.83 ) }
    dend_1 { pt3dadd( 16.6134, 98.7759, 20.2609, 0.83 ) }
    dend_1 { pt3dadd( 16.8145, 100.549, 20.5075, 0.83 ) }
    dend_1 { pt3dadd( 17.0057, 102.555, 20.8914, 0.83 ) }
    dend_1 { pt3dadd( 17.2906, 105.522, 21.6395, 0.83 ) }
    dend_1 { pt3dadd( 17.5223, 109.878, 23.0249, 0.55 ) }
    dend_1 { pt3dadd( 17.8603, 115.591, 25.08, 0.55 ) }
    dend_1 { pt3dadd( 17.8737, 117.271, 25.7154, 0.55 ) }
    dend_1 { pt3dadd( 17.8862, 120.805, 27.0309, 0.55 ) }
    dend_1 { pt3dadd( 17.8518, 122.287, 27.5599, 0.55 ) }
    dend_1 { pt3dadd( 17.7411, 125.065, 28.5458, 0.55 ) }
    dend_1 { pt3dadd( 17.6753, 127.964, 29.4349, 0.55 ) }
    dend_1 { pt3dadd( 17.7584, 132.177, 30.4767, 0.55 ) }
    dend_1 { pt3dadd( 17.821, 134.953, 31.1197, 0.55 ) }
    dend_1 { pt3dadd( 17.8308, 137.48, 31.6219, 0.55 ) }
    dend_1 { pt3dadd( 17.9287, 140.637, 32.2361, 0.55 ) }
    dend_1 { pt3dadd( 18.2233, 143.927, 32.8097, 0.55 ) }
    dend_1 { pt3dadd( 18.7626, 148.413, 33.6584, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -12.2851, -61.2211, 31.0359, 0.83 ) }
    dend_9 { pt3dadd( -13.2067, -64.8574, 32.3691, 0.83 ) }
    dend_9 { pt3dadd( -13.8779, -67.7387, 33.304, 0.83 ) }
    dend_9 { pt3dadd( -14.6231, -71.2135, 34.2982, 0.83 ) }
    dend_9 { pt3dadd( -15.2093, -74.0879, 35.0306, 0.83 ) }
    dend_9 { pt3dadd( -15.5656, -75.8348, 35.4757, 0.83 ) }
    dend_9 { pt3dadd( -15.9904, -77.9176, 36.0063, 0.83 ) }
    dend_9 { pt3dadd( -16.2087, -79.4153, 36.3125, 0.83 ) }
    dend_9 { pt3dadd( -16.4266, -81.1251, 36.5946, 0.83 ) }
    dend_9 { pt3dadd( -16.547, -83.3066, 36.6745, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.2851, -61.2211, 31.0359, 0.55 ) }
    dend_8 { pt3dadd( -11.067, -61.3204, 38.3266, 0.55 ) }
    dend_8 { pt3dadd( -9.53741, -61.3683, 46.092, 0.55 ) }
    dend_8 { pt3dadd( -8.76042, -61.3926, 50.0366, 0.55 ) }
    dend_8 { pt3dadd( -7.78179, -61.4232, 55.0049, 0.28 ) }
    dend_8 { pt3dadd( -7.62012, -61.4283, 55.8257, 0.83 ) }
    dend_8 { pt3dadd( -6.77201, -61.4548, 60.1314, 0.28 ) }
    dend_8 { pt3dadd( -6.60415, -61.4107, 60.8635, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -0.164029, 69.2596, -18.6577, 0.55 ) }
    dend_4 { pt3dadd( 0.494901, 73.165, -18.9814, 0.55 ) }
    dend_4 { pt3dadd( 1.20052, 77.2907, -19.4384, 0.55 ) }
    dend_4 { pt3dadd( 1.69728, 80.191, -19.7307, 0.55 ) }
    dend_4 { pt3dadd( 2.48783, 84.5427, -20.1436, 0.83 ) }
    dend_4 { pt3dadd( 3.05154, 87.636, -20.4186, 0.55 ) }
    dend_4 { pt3dadd( 3.60665, 90.5193, -20.6609, 0.55 ) }
    dend_4 { pt3dadd( 4.12642, 93.2167, -20.8089, 1.11 ) }
    dend_4 { pt3dadd( 5.0646, 97.899, -21.2086, 0.55 ) }
    dend_4 { pt3dadd( 5.33518, 99.467, -21.375, 0.55 ) }
    dend_4 { pt3dadd( 5.66846, 101.446, -21.6084, 1.11 ) }
    dend_4 { pt3dadd( 6.06947, 103.901, -21.9171, 0.55 ) }
    dend_4 { pt3dadd( 6.30024, 105.507, -22.1209, 1.11 ) }
    dend_4 { pt3dadd( 6.95452, 110.41, -22.693, 0.55 ) }
    dend_4 { pt3dadd( 7.20925, 112.996, -23.1819, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.164029, 69.2596, -18.6577, 0.28 ) }
    dend_3 { pt3dadd( -0.823545, 72.1812, -21.5587, 0.28 ) }
    dend_3 { pt3dadd( -0.901676, 72.6168, -21.9846, 0.55 ) }
    dend_3 { pt3dadd( -1.48545, 76.462, -25.6044, 0.28 ) }
    dend_3 { pt3dadd( -1.98257, 80.0381, -29.1926, 1.11 ) }
    dend_3 { pt3dadd( -2.21227, 81.8922, -31.1734, 0.28 ) }
    dend_3 { pt3dadd( -2.21227, 81.8922, -31.1734, 0.55 ) }
    dend_3 { pt3dadd( -2.09203, 84.1173, -33.1777, 0.28 ) }
    dend_3 { pt3dadd( -1.94341, 84.9613, -33.8689, 1.11 ) }
    dend_3 { pt3dadd( -0.276141, 88.623, -35.975, 0.55 ) }
    dend_3 { pt3dadd( 1.71816, 91.4204, -36.7572, 0.28 ) }
    dend_3 { pt3dadd( 5.30582, 95.757, -37.4599, 1.11 ) }
    dend_3 { pt3dadd( 8.64467, 99.4116, -37.6558, 0.28 ) }
    dend_3 { pt3dadd( 8.736, 99.4955, -37.6414, 0.55 ) }
    dend_3 { pt3dadd( 11.6509, 101.849, -36.764, 0.28 ) }
    dend_3 { pt3dadd( 11.9373, 102.054, -36.6257, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -16.547, -83.3066, 36.6745, 0.83 ) }
    dend_11 { pt3dadd( -16.0433, -88.5496, 39.5296, 0.83 ) }
    dend_11 { pt3dadd( -15.8303, -92.7552, 42.0631, 0.83 ) }
    dend_11 { pt3dadd( -15.691, -94.7043, 43.2894, 0.83 ) }
    dend_11 { pt3dadd( -15.6836, -95.8273, 44.0723, 0.83 ) }
    dend_11 { pt3dadd( -15.7771, -98.9232, 46.2353, 0.83 ) }
    dend_11 { pt3dadd( -15.7623, -100.762, 47.3904, 0.83 ) }
    dend_11 { pt3dadd( -15.4977, -104.256, 49.3022, 0.83 ) }
    dend_11 { pt3dadd( -15.2337, -106.645, 50.6908, 0.83 ) }
    dend_11 { pt3dadd( -14.5238, -110.656, 53.0505, 0.83 ) }
    dend_11 { pt3dadd( -13.9772, -112.686, 54.2012, 0.83 ) }
    dend_11 { pt3dadd( -12.2171, -117.651, 56.6589, 0.83 ) }
    dend_11 { pt3dadd( -10.4899, -122.103, 58.5621, 0.83 ) }
    dend_11 { pt3dadd( -8.94175, -125.832, 59.7839, 0.83 ) }
    dend_11 { pt3dadd( -7.88561, -128.582, 60.5207, 0.83 ) }
    dend_11 { pt3dadd( -7.66863, -129.14, 60.6483, 0.83 ) }
    dend_11 { pt3dadd( -6.63787, -132.384, 61.4541, 0.28 ) }
    dend_11 { pt3dadd( -6.45219, -133.261, 61.6882, 0.83 ) }
    dend_11 { pt3dadd( -6.06336, -135.579, 62.156, 0.28 ) }
    dend_11 { pt3dadd( -5.37958, -139.715, 62.9026, 0.28 ) }
    dend_11 { pt3dadd( -5.26016, -140.605, 63.0855, 0.28 ) }
    dend_11 { pt3dadd( -4.87562, -143.435, 63.6974, 0.83 ) }
    dend_11 { pt3dadd( -4.50531, -145.918, 64.3005, 0.28 ) }
    dend_11 { pt3dadd( -4.21416, -147.903, 64.814, 0.83 ) }
    dend_11 { pt3dadd( -3.95395, -149.47, 65.2966, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.547, -83.3066, 36.6745, 0.55 ) }
    dend_10 { pt3dadd( -17.0184, -88.301, 34.988, 0.55 ) }
    dend_10 { pt3dadd( -17.3074, -90.4515, 34.2968, 0.55 ) }
    dend_10 { pt3dadd( -18.0468, -95.0259, 32.9027, 0.55 ) }
    dend_10 { pt3dadd( -18.4213, -96.9896, 32.3288, 0.55 ) }
    dend_10 { pt3dadd( -18.8626, -98.9099, 31.7883, 0.28 ) }
    dend_10 { pt3dadd( -19.0598, -99.768, 31.5467, 0.55 ) }
    dend_10 { pt3dadd( -19.7184, -101.775, 31.0509, 0.28 ) }
    dend_10 { pt3dadd( -20.1766, -103.081, 30.7512, 0.55 ) }
    dend_10 { pt3dadd( -20.8392, -104.61, 30.492, 0.28 ) }
    dend_10 { pt3dadd( -21.9144, -106.923, 30.0599, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_5 = new SectionList()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 7
    dend_2 nseg = 3
    dend_1 nseg = 7
    dend_4 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BP_ca85cefc69_0_0


