// Cell: dNAC222_L5_SBC_e37bc9bae0_0_0
/*
{
  "id" : "dNAC222_L5_SBC_e37bc9bae0_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.0539, -10.2039, 0.0, 4.14336", "-1.01121, -9.20625, 0.0, 7.24872", "-0.968511, -8.20857, 0.0, 9.44401", "-0.925815, -7.2109, 0.0, 10.5422", "-0.88312, -6.21322, 0.0, 11.4092", "-0.840424, -5.21554, 0.0, 11.9642", "-0.797728, -4.21787, 0.0, 12.4342", "-0.755032, -3.22019, 0.0, 12.6614", "-0.712337, -2.22251, 0.0, 12.6364", "-0.669641, -1.22484, 0.0, 12.5104", "-0.626945, -0.227159, 0.0, 12.2671", "-0.584249, 0.770517, 0.0, 12.0239", "-0.541554, 1.76819, 0.0, 11.4645", "-0.498858, 2.76587, 0.0, 10.6882", "-0.456162, 3.76355, 0.0, 9.91399", "-0.413466, 4.76122, 0.0, 9.47101", "-0.370771, 5.7589, 0.0, 9.20688", "-0.328075, 6.75658, 0.0, 8.75449", "-0.285379, 7.75425, 0.0, 8.25522", "-0.242683, 8.75193, 0.0, 6.57349", "-0.199988, 9.74961, 0.0, 3.81" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.284736, 7.14994, 0.16, 6.82", "0.92397, 9.2817, 0.623284, 6.82", "1.93961, 12.6687, 1.35937, 6.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-2.66527, -9.6493, 1.27, 5.68", "-3.38645, -11.9866, 0.649672, 3.64", "-4.0875, -14.2586, 0.046654, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.30527, 7.10119, 0.0100002, 1.59", "-5.01024, 7.69098, -0.0237031, 1.59", "-7.69006, 8.618, -0.0766768, 1.36", "-9.10108, 9.1061, -0.104569, 1.36", "-12.3803, 10.2405, -0.169392, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999929751125366
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.199988, 9.74961, 0.0, 0.483274", "0.441352, 24.7359, 0.0, 0.483274", "1.08269, 39.7222, 0.0, 0.483274" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.93961, 12.6687, 1.35937, 1.14", "-0.0996359, 17.0307, 0.805683, 1.14", "-1.01445, 18.9874, 0.557299, 1.14", "-1.60627, 20.2533, 0.396613, 1.59" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.93961, 12.6687, 1.35937, 0.91", "5.17691, 13.6963, 0.176873, 0.91", "6.68312, 14.1744, -0.3733, 0.91" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.0875, -14.2586, 0.046654, 0.91", "-6.08638, -14.5325, -0.473439, 0.91", "-8.55796, -14.5895, -0.991292, 0.91", "-10.7959, -14.5317, -1.43935, 1.14", "-12.4241, -14.4795, -1.78643, 0.91", "-15.3907, -14.4335, -2.40835, 0.68", "-16.8785, -14.4591, -2.7131, 0.91", "-19.6939, -14.4955, -3.2574, 1.36", "-22.3054, -14.5559, -3.6906, 0.68", "-24.1137, -14.68, -3.96558, 0.68", "-26.4201, -14.9886, -4.28618, 1.59", "-29.4506, -15.5676, -4.66563, 1.14", "-30.78, -15.8454, -4.80926, 0.68", "-33.5629, -16.4482, -5.09901, 1.14", "-35.7876, -16.9329, -5.32633, 0.23", "-37.5694, -17.3222, -5.51773, 1.14", "-39.7792, -17.8445, -5.80451, 0.91", "-43.5048, -18.8559, -6.35195, 0.23", "-45.3262, -19.4686, -6.65758, 0.91", "-46.9252, -20.1682, -6.97455, 0.91", "-47.9767, -20.8147, -7.21301, 1.14", "-49.3891, -22.1805, -7.56049, 0.45", "-50.1882, -23.3604, -7.7644, 0.45", "-50.9359, -24.8301, -7.95185, 0.91", "-51.5951, -26.3694, -8.09121, 0.45", "-52.1849, -27.9434, -8.18792, 1.59", "-53.2165, -31.04, -8.3352, 0.45", "-53.9571, -33.6042, -8.4192, 1.82" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-4.0875, -14.2586, 0.046654, 2.95", "-4.68006, -18.1922, 0.26326, 2.95", "-5.28427, -22.2031, 0.484122, 2.95", "-5.54192, -23.9134, 0.578304, 3.41" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.3803, 10.2405, -0.169392, 1.14", "-14.0784, 8.69283, -0.574618, 1.14", "-15.2052, 7.48763, -0.909585, 0.45", "-16.2374, 6.31779, -1.23348, 1.59", "-18.3208, 4.0137, -1.88109, 0.45", "-19.8669, 2.37904, -2.40523, 0.91", "-20.6167, 1.63143, -2.67037, 1.59", "-22.4196, -0.236187, -3.34408, 0.23", "-23.1597, -0.933445, -3.66491, 0.23", "-23.9598, -1.46801, -4.11417, 0.23", "-25.5183, -1.59461, -5.023, 0.68", "-27.0773, -1.46179, -5.75225, 0.68", "-28.2594, -1.42053, -6.18954, 0.68", "-30.2017, -1.49549, -6.72845, 1.59", "-31.7322, -1.74728, -7.05511, 1.59", "-33.9335, -2.27267, -7.40409, 0.23", "-35.9266, -2.85357, -7.63077, 0.91", "-37.8137, -3.41235, -7.79207, 0.91", "-39.4316, -3.85588, -7.87132, 0.91", "-41.5005, -4.34512, -7.94497, 0.23", "-44.4179, -4.94133, -8.06743, 0.68", "-46.076, -5.20757, -8.15145, 0.68", "-48.2782, -5.47286, -8.29159, 0.23", "-50.3104, -5.64752, -8.44599, 0.45", "-52.8639, -5.82357, -8.66604, 0.45", "-54.491, -5.90688, -8.81561, 0.23", "-56.1181, -5.97649, -8.96708, 0.23", "-58.4634, -6.05477, -9.18261, 1.36", "-60.5139, -6.14812, -9.37724, 0.45", "-63.2454, -6.27873, -9.6293, 0.91", "-64.9311, -6.4053, -9.75637, 0.91", "-66.3121, -6.52163, -9.84914, 1.36", "-68.3478, -6.70637, -9.9662, 0.23", "-70.6757, -6.91742, -10.0788, 0.23", "-71.8436, -7.0416, -10.1413, 0.91", "-74.9579, -7.54633, -10.3172, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-12.3803, 10.2405, -0.169392, 0.23", "-14.9019, 10.8355, 0.509911, 0.23", "-17.4927, 11.4396, 1.28158, 0.68", "-19.8462, 11.983, 2.10162, 0.23", "-20.878, 12.2121, 2.48178, 0.45", "-23.0316, 12.7024, 3.36218, 0.91", "-25.2751, 13.2493, 4.32174, 0.23", "-26.2504, 13.4774, 4.82289, 0.68", "-27.5997, 13.9135, 5.69537, 0.23", "-28.282, 14.1963, 6.229, 0.68", "-29.7923, 14.9274, 7.46972, 0.23", "-30.5809, 15.3046, 8.114, 0.68", "-32.2704, 16.0031, 9.45342, 0.23", "-34.0199, 16.5895, 10.7371, 0.68", "-37.1277, 17.4664, 12.8435, 0.23", "-38.6117, 17.8117, 13.7464, 0.45", "-41.1377, 18.219, 15.0078, 0.23", "-42.8706, 18.4001, 15.6663, 0.23", "-44.5387, 18.5731, 16.0591, 0.23", "-46.0754, 18.7794, 16.2718, 0.23", "-47.7244, 19.1771, 16.3892, 0.23", "-49.6115, 19.8492, 16.4892, 0.23", "-52.3862, 21.1444, 16.6177, 0.45", "-55.3634, 22.7119, 16.795, 0.23", "-57.0578, 23.6226, 16.9208, 0.68", "-59.6469, 24.9165, 17.139, 0.23", "-62.3491, 26.217, 17.4179, 0.23", "-65.1935, 27.5401, 17.7048, 0.23", "-67.9833, 28.789, 17.9948, 0.23", "-71.0169, 29.9978, 18.3008, 0.23", "-74.6942, 31.2741, 18.625, 0.45", "-75.7074, 31.5721, 18.6852, 0.23", "-77.2759, 31.9562, 18.7628, 0.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.08269, 39.7222, 0.0, 1.59", "1.72403, 54.7085, 0.0, 1.59", "2.36537, 69.6947, 0.0, 1.59" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-1.60627, 20.2533, 0.396613, 0.23", "-1.76667, 20.0463, 2.2251, 0.23", "-1.55035, 19.3537, 3.17942, 0.91", "-1.16345, 17.8531, 4.60488, 0.23", "-1.04134, 16.671, 5.85726, 0.23", "-1.10324, 15.8757, 7.17028, 0.23", "-1.24738, 15.4126, 8.21375, 0.91", "-1.76728, 14.7357, 9.62033, 0.23", "-2.12925, 14.5081, 10.2307, 0.23", "-3.15055, 14.0046, 11.769, 0.91", "-4.39321, 13.5466, 13.5973, 0.23", "-5.83868, 13.1692, 15.5164, 0.23", "-7.40798, 12.9155, 17.5242, 0.68", "-10.0532, 12.6213, 20.781, 0.23" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-1.60627, 20.2533, 0.396613, 0.68", "-1.36929, 23.0187, 0.24694, 0.68", "-1.19905, 24.9618, 0.186996, 0.68", "-1.11221, 26.0645, 0.170499, 1.36", "-0.863422, 29.1497, 0.149254, 0.68", "-0.790392, 30.2845, 0.135549, 0.68", "-0.728231, 32.6133, 0.101154, 1.59", "-0.733532, 33.7192, 0.116853, 1.59", "-0.880175, 36.5108, 0.250944, 0.23", "-1.08225, 37.9509, 0.35855, 0.23", "-1.49093, 39.6703, 0.526209, 1.14", "-2.04909, 41.5961, 0.734411, 0.91", "-2.5075, 42.9781, 0.890023, 0.91", "-3.09375, 44.6955, 1.09564, 1.36", "-3.76169, 46.4817, 1.34181, 0.68", "-4.45633, 48.288, 1.61466, 1.14", "-5.11562, 50.1242, 1.91638, 0.45", "-5.52231, 51.4336, 2.10621, 1.59", "-6.04966, 53.3045, 2.27557, 2.27" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.68312, 14.1744, -0.3733, 0.91", "7.25874, 13.9929, -1.65834, 0.91", "8.08173, 13.3363, -3.50118, 0.91", "9.51681, 12.0897, -6.24108, 0.68", "10.2073, 11.4544, -7.4121, 0.68", "10.9561, 10.6949, -8.56451, 1.14", "12.1625, 9.34179, -10.2491, 0.68", "13.5589, 7.44021, -11.9157, 0.23", "14.2558, 6.19292, -12.6174, 0.23", "14.6171, 5.36687, -12.9326, 0.23", "15.1837, 3.74719, -13.4238, 1.14", "15.732, 2.15933, -13.8419, 1.82", "16.2786, 0.448233, -14.1968, 0.68", "16.7721, -1.72195, -14.5018, 1.14", "17.0247, -3.43019, -14.7423, 0.45", "17.1696, -4.82669, -14.9374, 0.45" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.68312, 14.1744, -0.3733, 1.14", "8.92334, 14.4137, -0.679969, 1.14", "10.1836, 14.5483, -0.852484, 1.59", "12.4409, 14.7895, -1.16149, 1.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-53.9571, -33.6042, -8.4192, 0.23", "-56.4812, -34.6082, -8.02888, 0.23", "-58.2288, -35.4285, -7.80543, 0.68", "-60.4065, -36.6172, -7.53528, 0.23", "-61.315, -37.1745, -7.42738, 0.23", "-63.2473, -38.4431, -7.21387, 0.23", "-65.2671, -39.8649, -7.01132, 0.91", "-66.6408, -40.9562, -6.91005, 0.23", "-67.9172, -42.0803, -6.81923, 0.91", "-68.9917, -43.051, -6.73408, 0.23", "-70.329, -44.2205, -6.61875, 1.59", "-72.2572, -45.7854, -6.44782, 0.23", "-73.5222, -46.7216, -6.32633, 0.23", "-75.8804, -48.2611, -6.10337, 0.23", "-77.2711, -49.0588, -5.98036, 1.59", "-78.1318, -49.5043, -5.90467, 0.23", "-79.9909, -50.3612, -5.75267, 0.68", "-82.0008, -51.183, -5.63181, 0.23", "-83.482, -51.7626, -5.61294, 1.14", "-84.113, -52.0158, -5.63346, 1.14", "-85.2738, -52.515, -5.70899, 0.23", "-87.1338, -53.3973, -5.82516, 0.68", "-88.9961, -54.3535, -5.93757, 0.23", "-91.2123, -55.5251, -5.99633, 1.14", "-94.058, -57.0924, -5.97977, 0.23", "-95.6995, -58.0336, -5.91416, 0.91", "-98.8337, -59.9218, -5.70199, 0.23", "-99.7284, -60.5022, -5.6169, 0.91", "-102.964, -62.7421, -5.20377, 0.23", "-105.543, -64.6755, -4.74213, 1.14", "-107.789, -66.4058, -4.28316, 0.45", "-109.289, -67.614, -3.97057, 1.14", "-110.476, -68.614, -3.7376, 1.14", "-111.915, -69.9243, -3.45127, 0.23", "-112.901, -71.0545, -3.26923, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-53.9571, -33.6042, -8.4192, 0.45", "-56.1097, -35.9814, -8.92076, 0.45", "-57.6463, -37.6784, -9.27879, 1.14", "-58.609, -38.7416, -9.5031, 0.23", "-59.8737, -40.1383, -9.79778, 1.36", "-61.1548, -41.5531, -10.0963, 0.45" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-5.54192, -23.9134, 0.578304, 0.23", "-4.9278, -25.3842, 0.690143, 0.23", "-4.20823, -27.142, 0.802034, 0.23", "-3.42835, -28.9828, 0.921787, 1.14", "-2.61662, -30.8185, 1.03818, 0.23", "-2.03276, -32.0954, 1.11274, 0.91", "-1.5818, -33.0687, 1.16372, 0.91", "-0.503212, -35.4342, 1.26596, 0.23", "0.305386, -37.1668, 1.33064, 1.14", "0.861957, -38.3527, 1.36451, 1.14", "1.86824, -40.536, 1.40169, 0.45", "2.84138, -42.6563, 1.4147, 0.45", "3.32762, -43.7671, 1.42191, 0.91", "4.1406, -45.6643, 1.43199, 0.23", "4.87817, -47.4737, 1.46564, 0.23", "5.71003, -49.59, 1.53869, 0.68", "6.67209, -52.0336, 1.65321, 0.23", "7.31565, -53.6487, 1.75863, 0.91", "8.2089, -55.8787, 1.9664, 1.14", "9.69691, -59.635, 2.4857, 0.23", "10.1688, -60.8444, 2.7114, 0.23", "10.8152, -62.5855, 3.10214, 0.68", "11.5916, -64.7834, 3.66839, 0.23", "12.5349, -67.5217, 4.47122, 1.36", "13.1814, -69.4678, 5.09877, 0.68", "13.9394, -71.9276, 5.89527, 0.23", "14.1588, -72.7057, 6.13901, 0.91", "14.7614, -74.9801, 6.83464, 0.23", "15.1542, -76.5155, 7.26826, 0.91", "15.7121, -78.7132, 7.81033, 1.14", "16.4021, -81.3715, 8.38269, 0.23", "16.7511, -82.7076, 8.65257, 0.91", "17.327, -84.8875, 9.07526, 0.23", "17.5517, -85.6803, 9.20067, 0.91", "17.8834, -86.7637, 9.33713, 0.91", "18.7614, -89.2556, 9.63267, 0.23", "19.5071, -91.125, 9.83223, 2.05", "19.8398, -91.9288, 9.90421, 2.05", "21.8043, -96.5184, 10.2386, 0.23", "22.4793, -98.0603, 10.342, 0.91", "24.2712, -102.094, 10.5624, 0.23", "24.8064, -103.277, 10.6083, 0.23", "25.2827, -104.292, 10.6431, 1.14", "25.7483, -105.251, 10.6738, 1.14", "27.4093, -108.577, 10.8027, 0.23", "28.171, -110.025, 10.8803, 0.23", "28.7505, -111.091, 10.9566, 0.91", "29.4309, -112.291, 11.0629, 0.91", "31.0094, -114.858, 11.3263, 0.23", "31.8477, -116.148, 11.4811, 1.14", "33.7929, -118.891, 11.8593, 0.23", "34.9385, -120.443, 12.0904, 0.23", "35.5109, -121.2, 12.2009, 0.91", "36.298, -122.17, 12.3683, 0.91", "37.5078, -123.526, 12.6258, 0.23", "38.2558, -124.304, 12.7702, 0.68", "39.2701, -125.305, 12.9734, 0.23", "40.4628, -126.451, 13.204, 0.91", "43.833, -129.576, 13.8223, 0.23", "44.6396, -130.296, 13.9659, 1.14", "45.7099, -131.191, 14.1394, 1.14", "48.2868, -133.308, 14.6092, 0.23", "49.163, -134.031, 14.8224, 0.23", "50.7364, -135.385, 15.2939, 0.68", "51.868, -136.525, 15.7711, 0.23", "53.0148, -137.937, 16.4263, 0.91", "53.7764, -139.103, 17.0445, 0.23", "54.7971, -140.883, 18.1164, 0.23", "55.4174, -141.956, 18.7786, 0.68", "56.6456, -144.064, 20.0441, 0.23", "57.7416, -145.785, 21.0898, 0.68", "59.7805, -148.719, 22.8654, 0.23", "62.305, -151.954, 24.713, 0.23", "63.7552, -153.694, 25.6835, 0.23", "64.8678, -154.922, 26.3935, 0.68", "67.1993, -157.248, 27.753, 0.23", "69.3265, -159.216, 28.964, 0.23", "71.0528, -160.74, 29.8317, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.54192, -23.9134, 0.578304, 2.27", "-7.13255, -27.3579, 0.299573, 2.27", "-7.88522, -28.9879, 0.167681, 2.73", "-8.69034, -30.7313, 0.0265991, 3.64" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-6.04966, 53.3045, 2.27557, 0.23", "-4.03791, 54.5505, 3.84848, 0.23", "-2.50564, 55.1514, 4.81056, 0.91", "-1.01089, 55.6987, 5.65794, 0.23", "0.303975, 56.197, 6.42192, 0.23", "1.48817, 56.6276, 7.08853, 0.91", "3.03006, 57.2176, 7.912, 0.23", "3.84939, 57.4798, 8.31249, 0.23", "4.58985, 57.7837, 8.6785, 0.23", "5.78382, 58.472, 9.25642, 0.23", "6.78048, 59.2941, 9.75015, 1.36", "7.62098, 60.104, 10.1697, 1.36", "9.38754, 62.0673, 10.9996, 0.23", "10.4827, 63.2826, 11.4599, 0.23", "11.3959, 64.2999, 11.7785, 0.23", "12.6741, 65.8295, 12.1321, 0.23", "14.1829, 67.7419, 12.4818, 1.14", "15.6296, 69.659, 12.7983, 0.23", "16.6977, 71.114, 12.9711, 0.23", "18.1474, 73.1527, 13.197, 0.45", "19.449, 75.1841, 13.3949, 0.23", "20.216, 76.5611, 13.5017, 0.68", "21.1785, 78.7738, 13.6363, 0.23", "21.5411, 79.8096, 13.7352, 0.23", "21.9191, 81.1514, 13.8934, 0.91", "22.1639, 82.0569, 14.0145, 0.91", "22.4438, 82.9527, 14.1343, 0.23", "23.2473, 85.2275, 14.5219, 0.68", "24.4098, 88.1385, 15.0468, 0.23", "24.8021, 89.0883, 15.2521, 0.91", "25.6983, 91.2273, 15.7298, 0.23", "26.7087, 93.6099, 16.295, 0.68", "27.7976, 96.1674, 16.9489, 0.23", "28.9057, 98.9642, 17.682, 0.68", "29.5112, 100.726, 18.1459, 0.23", "30.0747, 102.824, 18.733, 0.68", "30.3412, 104.29, 19.1813, 0.23", "30.4525, 105.494, 19.5921, 0.23", "30.5378, 107.084, 20.1223, 0.23", "30.5727, 108.968, 20.8077, 0.68", "30.5891, 111.706, 21.8168, 0.23", "30.5312, 114.02, 22.7301, 0.68", "30.3595, 116.407, 23.655, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-6.04966, 53.3045, 2.27557, 0.23", "-7.31624, 55.669, 2.44755, 0.23", "-8.45943, 57.6327, 2.61461, 0.91", "-10.8226, 61.4384, 2.95778, 0.23", "-11.6868, 62.7061, 3.07259, 0.91", "-12.6051, 63.9931, 3.18604, 0.91", "-14.0319, 66.032, 3.35825, 0.23", "-15.7307, 68.4583, 3.58997, 0.23", "-17.3711, 70.8317, 3.76624, 0.23", "-18.6081, 72.7723, 3.86216, 0.68", "-19.3862, 74.1099, 3.90814, 0.23", "-20.1374, 75.5959, 3.94552, 0.23", "-20.5156, 76.4543, 3.97137, 0.23", "-21.3585, 78.5929, 4.08251, 1.59", "-22.3721, 81.3333, 4.27365, 0.68", "-23.0455, 83.1205, 4.40981, 0.23", "-23.5022, 84.1509, 4.49412, 0.91", "-24.3191, 85.7033, 4.62528, 0.23", "-24.7613, 86.461, 4.68803, 0.91", "-25.5756, 87.763, 4.81387, 0.23", "-26.334, 88.9153, 4.90638, 1.14", "-27.0634, 89.994, 4.96294, 1.14", "-27.9368, 91.1781, 5.01772, 0.23", "-29.1334, 92.6631, 5.10433, 0.23", "-30.5973, 94.3422, 5.2795, 0.91", "-31.6906, 95.4942, 5.44634, 0.23", "-33.1421, 96.8794, 5.7291, 0.23", "-34.2474, 97.8291, 5.975, 0.91", "-36.1091, 99.2619, 6.46124, 0.23", "-37.7074, 100.435, 6.91884, 0.68", "-38.3908, 100.957, 7.11628, 0.68", "-39.6331, 101.946, 7.48781, 0.23", "-40.9945, 103.09, 7.86363, 0.68", "-42.2618, 104.149, 8.14498, 0.23", "-43.6508, 105.206, 8.40114, 0.23", "-45.8649, 106.736, 8.69775, 0.91", "-47.6037, 107.803, 8.83004, 0.23", "-49.9223, 109.104, 8.87328, 0.23", "-52.6347, 110.524, 8.82159, 0.91", "-54.8138, 111.587, 8.70734, 0.23", "-56.6064, 112.377, 8.59292, 0.91", "-58.4484, 113.168, 8.43747, 0.23", "-61.3634, 114.503, 8.12478, 0.23", "-63.3027, 115.445, 7.89715, 0.91", "-65.2053, 116.496, 7.65133, 0.23", "-66.1964, 117.097, 7.52132, 0.68", "-67.9756, 118.161, 7.35943, 0.23", "-69.3565, 118.984, 7.30423, 0.91", "-70.7458, 119.777, 7.30977, 0.23", "-71.9726, 120.489, 7.36739, 0.68", "-73.1825, 121.188, 7.46443, 0.23", "-75.6436, 122.604, 7.70634, 0.91", "-78.3212, 124.133, 8.01452, 0.23", "-80.8012, 125.602, 8.31079, 0.23", "-82.6428, 126.765, 8.52877, 0.91", "-84.14, 127.802, 8.70048, 0.23", "-84.8312, 128.337, 8.75913, 0.68", "-85.8932, 129.309, 8.804, 0.23", "-86.8717, 130.38, 8.78081, 0.91", "-88.3254, 132.255, 8.61546, 0.23", "-89.1363, 133.409, 8.46002, 0.91", "-90.1691, 134.996, 8.21916, 0.23", "-90.9299, 136.174, 8.01026, 1.14", "-92.5185, 138.608, 7.4745, 0.23", "-94.06, 140.885, 6.90801, 0.91", "-95.3419, 142.682, 6.40615, 0.23", "-96.4639, 144.152, 5.96577, 0.91", "-97.9672, 146.057, 5.36551, 0.23", "-99.1007, 147.405, 4.88942, 0.23", "-100.365, 148.79, 4.35248, 0.91", "-102.007, 150.532, 3.66407, 0.23", "-102.854, 151.405, 3.31458, 0.23", "-103.703, 152.25, 2.97631, 0.68", "-104.285, 152.791, 2.77354, 0.23", "-105.69, 154.057, 2.32396, 0.68", "-107.267, 155.4, 1.83338, 0.23", "-108.476, 156.403, 1.51786, 0.23", "-109.288, 157.084, 1.32179, 0.68", "-110.315, 157.935, 1.10442, 0.23", "-111.241, 158.734, 0.924345, 0.23", "-112.184, 159.548, 0.761818, 0.45", "-114.159, 161.262, 0.431885, 0.23", "-115.556, 162.548, 0.183453, 1.82", "-116.57, 163.514, 0.00311659, 0.68", "-118.618, 165.547, -0.353306, 0.23", "-120.241, 167.121, -0.577128, 0.91", "-121.78, 168.633, -0.792941, 0.23", "-123.028, 169.839, -0.961609, 0.23", "-123.78, 170.575, -1.04532, 0.91", "-124.822, 171.628, -1.15959, 0.23", "-125.954, 172.79, -1.25199, 1.36" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "12.4409, 14.7895, -1.16149, 0.68", "14.0258, 13.8678, -1.43636, 0.68", "15.7382, 12.8882, -1.63326, 0.68", "17.2198, 12.0076, -1.74922, 0.68", "18.6769, 11.019, -1.80913, 1.14", "20.4167, 9.79012, -1.89344, 1.59", "22.8556, 8.04815, -2.02432, 0.68", "24.9121, 6.57887, -2.10194, 1.82", "27.0829, 5.01828, -2.18714, 0.91", "30.7658, 2.31261, -2.38938, 0.68", "32.6493, 0.915194, -2.54767, 0.68", "34.6139, -0.570554, -2.7722, 1.14", "35.9548, -1.59959, -2.96032, 1.14", "38.8601, -3.84477, -3.43271, 1.82", "41.2168, -5.61522, -3.86306, 0.23", "42.9869, -6.89289, -4.21858, 0.91", "45.0116, -8.43639, -4.59974, 1.14", "46.3612, -9.53689, -4.87628, 2.05" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "12.4409, 14.7895, -1.16149, 0.45", "13.8884, 14.9349, -1.27038, 0.45", "16.2108, 15.1664, -1.42234, 0.91", "18.1341, 15.3871, -1.5355, 0.45", "20.4362, 15.6661, -1.65353, 1.14", "23.4048, 16.1357, -1.76803, 0.68", "26.5335, 16.7283, -1.8632, 0.45", "28.3288, 17.1366, -1.90084, 0.91", "29.741, 17.5404, -1.91678, 0.91", "32.3243, 18.4029, -1.91465, 2.05", "36.1039, 19.7638, -1.87489, 0.68", "38.3594, 20.6413, -1.84468, 1.14", "40.3238, 21.4881, -1.81084, 0.68", "41.2897, 21.9412, -1.793, 1.59", "43.3805, 22.9656, -1.75322, 1.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-8.69034, -30.7313, 0.0265991, 0.68", "-12.3517, -31.7935, -0.208979, 0.68", "-15.9918, -32.778, -0.326557, 0.68", "-18.0555, -33.3052, -0.357094, 1.14", "-22.0786, -34.1923, -0.425792, 0.68", "-24.9745, -34.7461, -0.477959, 1.36", "-27.5723, -35.1819, -0.544224, 0.45", "-30.6239, -35.5206, -0.622042, 1.14", "-33.5777, -35.7193, -0.686976, 0.23", "-36.1888, -35.9444, -0.756219, 0.45", "-37.4591, -36.109, -0.820695, 0.45", "-40.3991, -36.6829, -1.06073, 1.14", "-42.7881, -37.3499, -1.32324, 0.23", "-44.9043, -38.1662, -1.60357, 0.91", "-47.7939, -39.5386, -1.93584, 0.45", "-49.5193, -40.4748, -2.09215, 1.14", "-51.9665, -41.8685, -2.26763, 0.23", "-54.1105, -43.1169, -2.36912, 0.91", "-56.5645, -44.5157, -2.42393, 0.68", "-58.8583, -45.7448, -2.41398, 0.23", "-60.5084, -46.5427, -2.34116, 0.91", "-62.8562, -47.5314, -2.1487, 0.23", "-65.7951, -48.6657, -1.8456, 0.91", "-67.4255, -49.2883, -1.66689, 0.68", "-69.9563, -50.3005, -1.38553, 0.68", "-72.9001, -51.589, -1.06437, 1.36", "-75.4302, -52.7704, -0.781777, 0.23", "-76.5427, -53.3224, -0.661999, 0.23", "-78.6727, -54.4344, -0.462191, 1.36", "-80.0514, -55.2406, -0.34324, 1.36", "-81.5676, -56.2427, -0.21945, 0.23", "-83.6581, -57.8068, -0.124161, 0.91", "-85.5863, -59.4218, -0.117343, 0.91", "-87.4722, -61.1001, -0.158246, 0.23", "-89.3736, -62.8882, -0.245716, 0.91", "-90.8778, -64.363, -0.367736, 0.23", "-92.5494, -66.147, -0.562803, 0.23", "-93.7751, -67.6685, -0.744206, 0.23", "-94.5544, -68.7281, -0.854755, 1.14", "-95.3863, -69.9032, -0.942895, 0.45", "-96.2614, -71.1497, -1.00645, 1.59", "-98.5472, -74.4828, -1.05625, 0.68", "-100.962, -78.0208, -0.953142, 0.68", "-102.546, -80.246, -0.813895, 0.23", "-104.053, -82.2655, -0.644457, 0.91", "-105.096, -83.5616, -0.507005, 0.91", "-105.93, -84.4671, -0.384867, 0.23", "-107.21, -85.6985, -0.188143, 0.91", "-109.099, -87.3716, 0.0826211, 0.23", "-110.573, -88.6385, 0.250362, 0.45", "-112.132, -89.9611, 0.391996, 1.14", "-113.564, -91.1688, 0.505213, 0.23", "-115.647, -92.9216, 0.642652, 0.91", "-117.833, -94.733, 0.777348, 0.91", "-119.214, -95.8569, 0.8582, 0.23", "-121.101, -97.3593, 0.984375, 0.68", "-122.611, -98.5555, 1.12137, 0.23", "-123.332, -99.0959, 1.2071, 0.23", "-125.379, -100.498, 1.47697, 0.91", "-127.472, -101.872, 1.81115, 2.05", "-130.244, -103.729, 2.30621, 0.68", "-132.481, -105.254, 2.76047, 1.36", "-134.763, -106.844, 3.25325, 0.45", "-136.512, -108.096, 3.65171, 0.45", "-138.522, -109.564, 4.11873, 0.23", "-139.689, -110.42, 4.39712, 0.91", "-141.084, -111.422, 4.71332, 0.23", "-142.104, -112.126, 4.91581, 0.23", "-144.236, -113.577, 5.28362, 1.14", "-145.41, -114.343, 5.46347, 1.14", "-148.152, -116.007, 5.82631, 0.23", "-148.982, -116.468, 5.92506, 0.91", "-150.774, -117.433, 6.10317, 1.59", "-152.169, -118.195, 6.27131, 0.45", "-152.961, -118.625, 6.38165, 1.14", "-155.601, -120.035, 6.80284, 0.23", "-156.883, -120.717, 7.01718, 1.36", "-158.265, -121.47, 7.28474, 1.36", "-162.103, -123.64, 8.09733, 0.23", "-163.743, -124.611, 8.45671, 1.36", "-164.311, -124.979, 8.58153, 2.27", "-166.644, -126.676, 9.07403, 0.23", "-168.302, -127.923, 9.43242, 0.68", "-169.402, -128.786, 9.66364, 0.23", "-170.654, -129.874, 9.87636, 0.91", "-171.688, -130.904, 10.044, 0.23", "-172.888, -132.283, 10.2455, 1.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.69034, -30.7313, 0.0265991, 2.27", "-8.81996, -34.6408, 0.0265991, 2.27", "-8.8525, -35.6223, 0.0265991, 2.27" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-125.954, 172.79, -1.25199, 0.23", "-129.752, 173.868, -1.26584, 0.23", "-131.794, 174.41, -1.26909, 0.91", "-134.803, 175.127, -1.27017, 0.23", "-136.795, 175.543, -1.22948, 0.91", "-138.229, 175.818, -1.1845, 0.23", "-140.535, 176.258, -1.13725, 0.23", "-141.646, 176.424, -1.10908, 0.23", "-143.221, 176.677, -1.12329, 0.91", "-145.817, 177.043, -1.24817, 0.23", "-146.76, 177.16, -1.29832, 0.68", "-148.451, 177.357, -1.38951, 0.23", "-149.188, 177.448, -1.41876, 1.14", "-151.409, 177.702, -1.46845, 0.23", "-154.183, 177.999, -1.46021, 1.14", "-156.146, 178.204, -1.41799, 0.23", "-158.283, 178.415, -1.28444, 0.68", "-159.47, 178.529, -1.1524, 0.23", "-161.948, 178.824, -0.812322, 0.91", "-165.182, 179.296, -0.289287, 0.23", "-167.542, 179.766, 0.0854196, 0.23", "-168.854, 180.058, 0.271692, 0.91", "-170.787, 180.567, 0.527822, 0.23", "-172.321, 181.04, 0.694094, 0.68", "-174.116, 181.667, 0.867273, 0.23", "-175.727, 182.236, 0.958619, 0.23", "-177.058, 182.628, 0.982634, 0.68", "-178.68, 183.091, 0.95769, 0.23", "-180.892, 183.667, 0.861457, 0.23", "-182.471, 184.0, 0.779058, 0.68", "-183.787, 184.22, 0.693412, 0.23", "-185.909, 184.398, 0.523436, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-125.954, 172.79, -1.25199, 0.23", "-127.824, 174.89, -0.720463, 0.23", "-128.265, 175.466, -0.60356, 0.68", "-129.487, 177.186, -0.26249, 0.23", "-130.773, 179.029, -0.0709637, 0.23", "-131.678, 180.309, -0.0111578, 0.68", "-132.828, 181.914, 0.0183411, 0.23", "-133.66, 183.128, 0.0130317, 0.68", "-135.438, 185.63, -0.0882466, 0.23", "-137.07, 187.831, -0.260264, 0.91", "-139.162, 190.571, -0.495612, 0.23", "-140.414, 192.146, -0.642551, 0.23", "-141.948, 193.967, -0.827611, 0.91", "-143.69, 195.971, -1.04319, 0.23", "-145.037, 197.489, -1.21035, 0.68" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "46.3612, -9.53689, -4.87628, 0.45", "47.3055, -11.9751, -5.24138, 0.45", "47.8207, -13.1802, -5.37916, 0.91", "48.3718, -14.1548, -5.46171, 0.23", "48.8368, -14.8837, -5.52245, 0.91", "49.3435, -15.5973, -5.57858, 0.91", "50.8008, -17.4722, -5.70666, 0.23", "51.7791, -18.5869, -5.77281, 1.59", "53.9258, -20.8987, -5.94888, 0.45", "55.116, -22.123, -6.06233, 0.45", "56.5983, -23.6054, -6.22951, 1.36", "59.4407, -26.3532, -6.57919, 0.68", "61.3192, -28.1032, -6.8573, 0.68", "62.9137, -29.5375, -7.12045, 1.14", "66.0073, -32.1946, -7.66368, 0.45", "66.7624, -32.7991, -7.79631, 1.14", "68.2931, -33.9878, -8.08048, 0.23", "69.9783, -35.2734, -8.40793, 1.36", "70.5484, -35.7124, -8.51156, 2.05", "72.4027, -37.2149, -8.82465, 0.23", "74.249, -38.8662, -9.13148, 0.23", "75.7658, -40.2914, -9.3673, 1.14", "77.3017, -41.8518, -9.60013, 0.23", "78.2684, -42.9265, -9.72458, 1.36", "79.4087, -44.3234, -9.88397, 1.59", "80.6873, -46.1863, -10.0856, 0.45" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "46.3612, -9.53689, -4.87628, 0.68", "50.0495, -10.1318, -4.86485, 0.68", "51.7495, -10.3978, -4.88601, 0.23", "52.8699, -10.5631, -4.94012, 0.68", "54.3296, -10.7859, -5.02654, 0.23", "55.658, -11.0361, -5.10799, 0.91", "58.1578, -11.5728, -5.25548, 0.23", "60.2512, -12.0564, -5.34238, 1.14", "64.3891, -12.983, -5.44065, 0.45", "65.6417, -13.2371, -5.44482, 0.91", "68.625, -13.7305, -5.40655, 0.23", "71.5518, -14.0882, -5.33406, 0.91", "74.1733, -14.2725, -5.23358, 0.23", "77.4675, -14.2884, -5.08131, 0.91", "80.9017, -14.0265, -4.91062, 0.23", "83.6416, -13.5572, -4.81566, 0.68", "85.1932, -13.1047, -4.79216, 0.23", "86.6973, -12.5307, -4.82718, 1.14", "88.2218, -11.8615, -4.935, 0.23", "90.4536, -10.7869, -5.16518, 0.91", "92.347, -9.84836, -5.4264, 0.23", "93.9482, -9.05342, -5.67563, 1.14", "95.4628, -8.32817, -5.90603, 0.23", "97.506, -7.36788, -6.24177, 1.82", "98.5545, -6.89381, -6.42413, 2.27", "101.621, -5.52303, -7.04662, 0.23", "102.291, -5.26166, -7.18549, 0.23", "104.741, -4.40299, -7.6804, 0.68", "106.913, -3.75438, -8.07355, 0.23", "108.612, -3.35182, -8.35545, 1.36", "111.332, -2.95442, -8.73507, 0.23", "114.101, -2.80901, -9.0345, 0.23", "115.231, -2.82194, -9.13964, 1.14", "118.003, -3.06237, -9.33349, 0.23", "119.389, -3.24821, -9.38011, 0.68", "121.664, -3.59472, -9.40747, 0.23", "122.269, -3.69928, -9.40747, 1.59", "123.206, -3.86717, -9.40747, 0.23", "125.079, -4.20641, -9.40747, 1.36", "127.762, -4.64579, -9.40747, 0.23", "130.241, -4.95006, -9.40747, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "43.3805, 22.9656, -1.75322, 0.23", "46.4277, 23.8977, -1.95519, 0.23", "48.4317, 24.5772, -2.03305, 0.23", "49.9966, 25.105, -2.06717, 1.36", "52.1608, 25.8334, -2.14475, 1.36", "55.1255, 26.8168, -2.26911, 0.23", "56.5193, 27.2623, -2.32968, 0.23", "59.3166, 28.162, -2.45335, 0.91", "62.3846, 29.0369, -2.58834, 0.23", "64.8103, 29.6204, -2.68627, 1.59", "65.7057, 29.7929, -2.72321, 1.59", "68.8575, 30.2538, -2.84822, 0.45", "70.4631, 30.4243, -2.94886, 0.45", "73.0225, 30.6128, -3.12284, 0.23", "74.4911, 30.6888, -3.21554, 1.14", "76.6236, 30.7731, -3.29969, 0.23", "78.0138, 30.8207, -3.345, 0.68", "80.5802, 30.9392, -3.4097, 0.23", "83.564, 31.1562, -3.46104, 1.14", "86.9886, 31.5613, -3.53682, 0.23", "89.1006, 31.9058, -3.59635, 0.23", "90.2553, 32.1645, -3.63336, 1.59", "92.7897, 32.8668, -3.73695, 0.23", "93.9832, 33.2874, -3.806, 0.23", "95.1839, 33.815, -3.91564, 0.68", "96.4775, 34.4778, -4.12296, 0.68", "99.1407, 35.8768, -4.68174, 0.23", "100.325, 36.4472, -4.95668, 0.23", "101.393, 36.9093, -5.22449, 1.82", "102.017, 37.1374, -5.37429, 1.82", "104.175, 37.7768, -5.83326, 0.23", "105.995, 38.228, -6.18728, 0.68", "108.708, 38.7917, -6.64341, 0.23", "109.784, 39.0159, -6.79683, 0.91", "111.571, 39.4005, -7.02811, 0.23", "113.535, 39.8733, -7.26906, 1.14", "116.211, 40.5922, -7.55112, 0.23", "118.173, 41.1695, -7.78591, 1.14", "120.116, 41.8076, -8.02463, 0.23", "121.504, 42.2834, -8.19653, 0.91", "123.376, 42.9747, -8.44721, 0.23", "125.335, 43.7364, -8.71905, 1.36", "126.905, 44.3485, -8.93338, 0.23", "128.799, 45.1162, -9.18825, 0.91", "131.926, 46.4499, -9.61312, 0.23", "133.695, 47.2109, -9.84133, 1.14", "134.667, 47.6291, -9.96667, 0.23", "135.702, 48.0873, -10.1008, 1.14", "137.693, 48.9997, -10.326, 0.23", "139.205, 49.7727, -10.552, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "43.3805, 22.9656, -1.75322, 0.23", "45.1179, 24.2199, -2.13307, 0.23", "46.0452, 24.8999, -2.32767, 0.91", "47.4919, 25.9182, -2.60393, 0.23", "48.975, 26.8688, -2.8587, 0.68", "50.5291, 27.7411, -3.06969, 0.68", "53.158, 29.1572, -3.36082, 0.23", "54.4527, 29.8108, -3.49818, 0.91", "55.8789, 30.5386, -3.63527, 0.91", "58.5498, 31.9203, -3.8651, 0.23", "61.1338, 33.3221, -4.08289, 0.68", "63.5998, 34.7003, -4.33548, 0.23", "65.246, 35.6608, -4.54097, 0.91", "67.031, 36.7705, -4.80997, 0.91", "68.6277, 37.8906, -5.13132, 0.23", "70.5856, 39.5139, -5.68182, 1.14", "72.3808, 41.2272, -6.32331, 0.23", "73.3867, 42.3024, -6.72092, 0.23", "74.1206, 43.2239, -7.0094, 0.23", "75.6738, 45.4236, -7.60861, 0.91", "77.3771, 48.0812, -8.21757, 0.45", "77.9767, 49.1122, -8.41093, 0.45", "79.3089, 51.6055, -8.82047, 1.59", "81.2201, 55.1499, -9.32188, 0.45", "81.9014, 56.3733, -9.47133, 0.68", "82.4375, 57.3045, -9.55324, 0.23", "83.4631, 58.9332, -9.69327, 0.91", "85.0574, 61.267, -9.95157, 0.23", "86.0016, 62.5229, -10.1212, 0.23", "86.5466, 63.1936, -10.2266, 1.36", "87.1944, 64.0326, -10.3491, 1.36", "88.5042, 65.7945, -10.5882, 0.23", "89.8847, 67.7334, -10.8198, 0.68", "91.0735, 69.4554, -11.0, 0.23", "92.871, 72.0911, -11.2585, 1.14", "94.6877, 74.815, -11.5177, 0.23", "95.9957, 76.8317, -11.6961, 0.91", "96.8225, 78.1398, -11.7921, 1.59", "97.6656, 79.4849, -11.8948, 0.91", "98.9274, 81.5668, -12.0518, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-172.888, -132.283, 10.2455, 0.23", "-174.527, -132.716, 11.5822, 0.23", "-175.04, -132.868, 11.9881, 1.14", "-176.834, -133.383, 13.3767, 0.23", "-177.517, -133.594, 13.9065, 0.91", "-179.731, -134.411, 15.5569, 0.23", "-180.83, -134.848, 16.3876, 0.91", "-183.125, -135.873, 18.0769, 0.23", "-184.573, -136.541, 19.1453, 0.91", "-185.904, -137.174, 20.1006, 0.23", "-187.553, -137.944, 21.3136, 1.14", "-189.766, -139.007, 22.9406, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-172.888, -132.283, 10.2455, 0.23", "-174.231, -135.111, 9.67246, 0.23", "-175.144, -137.11, 9.22294, 1.59", "-176.477, -140.103, 8.47645, 0.23", "-177.391, -142.022, 7.87781, 1.36", "-178.14, -143.418, 7.3794, 0.23", "-178.919, -144.689, 6.88383, 0.23", "-179.991, -145.967, 6.27798, 1.36", "-181.414, -147.243, 5.53372, 2.27", "-183.066, -148.367, 4.76781, 0.23", "-184.561, -149.12, 4.20313, 1.14", "-186.068, -149.688, 3.73452, 0.23", "-187.86, -150.203, 3.31633, 1.14", "-188.583, -150.318, 3.22134, 1.14", "-190.052, -150.422, 3.12265, 0.23", "-190.734, -150.425, 3.10025, 0.23", "-191.636, -150.284, 3.08377, 1.36", "-192.26, -150.04, 3.11167, 1.36", "-194.759, -148.72, 3.35006, 0.23", "-195.27, -148.42, 3.41178, 0.23", "-196.837, -147.394, 3.6213, 0.23", "-198.759, -146.089, 3.85197, 1.14", "-200.222, -145.134, 4.01115, 0.23", "-202.543, -143.915, 4.23097, 0.23", "-203.888, -143.447, 4.28889, 1.36", "-205.974, -142.84, 4.36214, 0.23", "-207.783, -142.45, 4.38961, 1.14", "-209.164, -142.235, 4.30142, 1.14", "-212.401, -141.953, 3.89623, 0.23", "-215.176, -142.096, 3.44686, 1.14" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-8.8525, -35.6223, 0.0265991, 0.23", "-8.26412, -38.39, 1.56569, 0.23", "-8.2001, -39.1221, 1.94136, 0.23", "-8.12321, -40.6308, 2.723, 0.23", "-8.07868, -41.7611, 3.26309, 1.14", "-8.03678, -43.5307, 4.04677, 0.23", "-8.01803, -44.9416, 4.64786, 1.14", "-8.07313, -47.1359, 5.4525, 0.23", "-8.13042, -49.3685, 6.2378, 0.23", "-8.15764, -51.2225, 6.85094, 1.36", "-8.26628, -54.9167, 8.02644, 0.23", "-8.32153, -56.0725, 8.36452, 0.23", "-8.39144, -57.7172, 8.81725, 0.91", "-8.41435, -58.5343, 9.02479, 0.91", "-8.47887, -60.7139, 9.54039, 0.23", "-8.52389, -62.4182, 9.95866, 0.23", "-8.50253, -64.3168, 10.4022, 0.68", "-8.33813, -67.9173, 11.2601, 0.23", "-8.2374, -68.9967, 11.5317, 1.36", "-8.12518, -69.9059, 11.7661, 1.36", "-7.74543, -72.2162, 12.3436, 0.45", "-7.32072, -74.1455, 12.7823, 1.14", "-6.72602, -76.3595, 13.2926, 0.23", "-6.21872, -77.9901, 13.6332, 0.45", "-5.43481, -80.4107, 14.1526, 0.23", "-4.81151, -82.289, 14.5416, 0.23", "-4.26085, -83.9415, 14.9011, 0.91", "-3.57573, -86.3434, 15.4944, 0.23", "-2.9508, -88.7603, 16.1101, 0.91", "-2.65219, -90.0367, 16.4352, 0.23", "-2.24735, -91.9311, 16.9457, 1.14", "-1.93991, -94.2464, 17.6599, 0.23", "-1.84839, -96.1927, 18.2835, 0.91", "-1.95112, -97.5363, 18.7449, 0.23", "-2.2507, -100.026, 19.649, 0.23", "-2.40792, -101.028, 20.0144, 0.91", "-3.08437, -104.38, 21.2706, 0.23", "-3.46771, -106.034, 21.8579, 1.14", "-4.38127, -109.531, 23.146, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.8525, -35.6223, 0.0265991, 1.59", "-8.9621, -37.2756, -0.0441376, 1.59", "-9.1306, -39.8176, -0.152893, 2.27" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-9.1306, -39.8176, -0.152893, 0.23", "-8.60988, -43.041, 0.136597, 0.23", "-8.21412, -45.3015, 0.324829, 0.45", "-7.85744, -46.9514, 0.441143, 1.36", "-7.32579, -49.117, 0.516459, 1.36", "-6.69109, -51.5583, 0.554088, 0.91", "-6.02979, -54.0031, 0.54256, 1.14", "-5.63218, -55.4963, 0.495518, 1.14", "-4.63825, -59.2317, 0.285678, 0.91", "-3.99618, -61.6812, 0.0930235, 1.14", "-3.59285, -63.3071, -0.0596092, 1.14", "-3.12467, -65.3088, -0.264246, 0.23", "-2.61464, -67.7915, -0.516837, 0.23", "-2.3865, -69.1579, -0.639806, 0.23", "-2.17134, -70.8762, -0.762186, 2.05", "-1.863, -73.6369, -0.885959, 1.59", "-1.67362, -75.3688, -0.948467, 1.59", "-1.45154, -77.3143, -0.994215, 0.45", "-1.19223, -79.2449, -1.01405, 1.14", "-0.918035, -81.1868, -1.01, 1.14", "-0.551114, -83.9536, -0.990651, 1.59", "-0.305348, -85.886, -0.998896, 1.14", "0.0548502, -89.2224, -1.04251, 0.68", "0.233293, -91.0805, -1.08042, 1.14", "0.443031, -93.5871, -1.14541, 0.23", "0.603953, -95.9333, -1.21379, 1.59", "0.6788, -98.0051, -1.27434, 0.68", "0.710827, -99.5435, -1.32016, 0.91", "0.731822, -101.774, -1.38633, 0.91", "0.769497, -105.118, -1.47922, 1.36", "0.861109, -108.471, -1.5407, 0.91", "1.096, -113.006, -1.58322, 1.14", "1.24331, -115.245, -1.56989, 0.68", "1.41299, -117.46, -1.5407, 1.14", "1.58247, -120.254, -1.4871, 0.23", "1.67616, -122.523, -1.43221, 0.68", "1.72276, -125.073, -1.36128, 0.45", "1.72087, -126.666, -1.32466, 2.05", "1.60467, -130.65, -1.2545, 0.91", "1.38006, -135.302, -1.20041, 0.45", "1.25633, -137.1, -1.19125, 0.91", "1.05038, -139.356, -1.20112, 0.91", "0.775903, -141.896, -1.23828, 0.23", "0.631403, -143.286, -1.27241, 0.91", "0.402875, -146.066, -1.33162, 0.45", "0.265735, -148.608, -1.34993, 1.36", "0.176236, -150.823, -1.33231, 0.68", "0.145477, -151.778, -1.3089, 1.14", "0.11064, -153.762, -1.22884, 0.23", "0.154938, -155.448, -1.15094, 0.68", "0.312765, -157.434, -1.05812, 0.23", "0.47007, -158.832, -0.99646, 0.91", "0.700723, -160.499, -0.928696, 0.91", "1.22261, -164.348, -0.804524, 0.23", "1.53066, -167.007, -0.74614, 1.36", "1.94382, -171.18, -0.649488, 0.23", "2.11813, -173.181, -0.60641, 1.14", "2.17955, -174.042, -0.584841, 1.14", "2.33062, -176.63, -0.489615, 0.23", "2.41531, -178.957, -0.378504, 0.91", "2.4364, -180.416, -0.299218, 1.82", "2.44133, -181.802, -0.201194, 1.82", "2.50244, -185.419, 0.0832753, 0.45", "2.55721, -187.226, 0.247924, 1.14", "2.62036, -188.356, 0.369765, 1.14", "2.76669, -190.286, 0.588997, 0.23", "3.03968, -193.165, 0.908116, 0.23", "3.16637, -194.29, 1.03348, 1.36", "3.36162, -195.76, 1.1768, 1.36", "3.71685, -198.274, 1.36223, 0.23", "4.04696, -200.477, 1.51609, 0.91", "4.30165, -202.006, 1.61083, 0.91", "4.85628, -205.021, 1.7593, 0.23", "5.24073, -207.067, 1.8422, 0.45", "5.71135, -209.529, 1.92309, 0.91", "6.16691, -211.791, 1.99315, 0.45", "6.49215, -213.558, 2.05489, 1.14", "6.70445, -214.95, 2.12302, 1.14", "7.00928, -217.2, 2.2742, 0.23", "7.11117, -218.07, 2.34559, 1.14", "7.30484, -219.774, 2.49854, 1.14", "7.71214, -223.422, 2.82463, 0.23", "8.0645, -226.547, 3.12084, 0.68", "8.27507, -228.244, 3.28103, 1.59", "8.43918, -229.334, 3.38189, 2.05", "9.18525, -233.242, 3.70804, 0.23", "9.52009, -234.609, 3.81863, 1.14", "9.8493, -235.626, 3.89349, 1.59", "10.7921, -237.964, 4.02075, 0.45", "11.6718, -239.924, 4.14748, 0.91", "12.8055, -242.262, 4.35735, 0.23", "13.8045, -244.185, 4.56629, 1.14", "14.4323, -245.307, 4.70758, 1.14", "16.5352, -248.872, 5.19708, 0.23", "17.8905, -251.013, 5.50927, 0.23", "18.8244, -252.458, 5.71605, 0.68", "19.344, -253.251, 5.81949, 0.68", "20.5471, -255.167, 6.02452, 0.23", "21.8143, -257.204, 6.22434, 1.36", "23.3941, -259.768, 6.41657, 0.45", "24.4859, -261.537, 6.46516, 1.14", "25.2541, -262.825, 6.46397, 0.23", "26.2078, -264.537, 6.45796, 2.5" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.1306, -39.8176, -0.152893, 0.91", "-10.829, -42.5221, 0.303848, 0.91", "-12.1377, -44.6061, 0.655796, 0.91", "-13.302, -46.4602, 0.968914, 0.68", "-13.9888, -47.5539, 1.15362, 1.36", "-14.9971, -49.1596, 1.42479, 1.59" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "26.2078, -264.537, 6.45796, 0.23", "28.9245, -264.557, 5.70757, 0.23", "30.823, -264.577, 5.20614, 0.91", "33.3809, -264.627, 4.55604, 0.23", "35.6602, -264.671, 3.97673, 1.14", "38.1583, -264.72, 3.34181, 0.23", "38.8303, -264.733, 3.17101, 0.68", "40.08, -264.644, 2.91208, 0.23", "40.5961, -264.58, 2.79905, 0.68" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "26.2078, -264.537, 6.45796, 0.23", "25.2708, -268.078, 6.61798, 0.23", "25.0139, -269.185, 6.68367, 0.91", "24.7074, -270.636, 6.80955, 0.45", "24.5309, -271.485, 6.90058, 1.36", "24.0821, -273.403, 7.11451, 0.23", "23.8053, -274.576, 7.26301, 1.14", "23.1049, -277.595, 7.70996, 0.23", "22.6034, -279.591, 8.0758, 0.23", "22.167, -281.353, 8.43232, 1.59", "21.6335, -283.745, 8.90373, 0.91", "21.2095, -286.045, 9.33528, 0.23", "20.9689, -287.885, 9.69125, 1.14", "20.7729, -290.655, 10.2182, 0.23", "20.7433, -292.598, 10.5601, 0.91", "20.8318, -295.079, 10.9627, 0.23", "20.9768, -297.07, 11.2531, 1.14", "21.171, -299.359, 11.5101, 0.23", "21.3678, -301.303, 11.6778, 1.36", "21.4246, -301.857, 11.7076, 1.36", "21.7316, -305.56, 11.8221, 0.23", "21.8313, -307.555, 11.7843, 0.91", "21.8919, -309.868, 11.585, 0.23", "21.9327, -311.809, 11.2918, 1.36", "21.9963, -312.901, 11.0636, 1.36", "22.4288, -316.69, 10.0334, 0.23", "22.9324, -319.492, 9.07994, 1.14", "23.4049, -321.489, 8.28414, 0.23", "23.7404, -322.766, 7.72395, 1.36", "24.5002, -325.342, 6.48014, 0.23", "25.2161, -327.37, 5.41353, 1.82", "25.5008, -327.941, 5.07181, 1.82", "26.0492, -328.742, 4.60218, 0.45" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.9971, -49.1596, 1.42479, 0.68", "-17.0546, -49.5596, 0.416907, 0.68", "-19.1371, -49.8371, -0.700962, 1.14", "-21.4723, -50.1695, -1.97953, 0.23", "-22.9408, -50.4466, -2.80234, 0.23", "-24.4306, -50.8869, -3.58013, 1.14", "-25.6205, -51.2878, -4.11881, 0.23", "-27.007, -51.7544, -4.63692, 0.45", "-27.9948, -52.1081, -4.94191, 0.45", "-29.4433, -52.6102, -5.35018, 1.14", "-32.6213, -53.6783, -6.20879, 0.23", "-34.9658, -54.3522, -6.82271, 0.91", "-36.4771, -54.6138, -7.22241, 0.91", "-38.0501, -54.6041, -7.68097, 0.45", "-39.7978, -54.2849, -8.28845, 0.45", "-41.095, -53.7337, -8.8574, 0.45", "-42.2569, -52.7623, -9.60675, 0.91", "-43.5126, -51.0938, -10.8183, 0.45", "-44.14, -49.8705, -11.5988, 0.45", "-44.5014, -48.7553, -12.1924, 0.45", "-44.8061, -47.5162, -12.6362, 0.45", "-44.1112, -48.4895, -12.7856, 1.36", "-43.0639, -49.3472, -13.2682, 1.36", "-41.9125, -50.4027, -13.7568, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.9971, -49.1596, 1.42479, 0.23", "-15.2631, -51.9246, 1.83519, 0.23", "-15.3564, -53.2076, 2.02536, 0.91", "-15.4242, -54.9383, 2.28997, 0.91", "-15.4578, -56.9614, 2.58333, 0.91", "-15.4342, -59.2214, 2.90563, 0.23", "-15.3456, -61.7939, 3.27365, 0.68", "-15.1702, -64.5567, 3.6786, 0.45", "-14.9128, -67.6385, 4.12986, 0.91", "-14.6689, -70.1089, 4.4794, 0.68", "-14.3696, -72.9342, 4.84692, 1.59", "-13.7764, -78.7819, 5.60305, 0.45", "-13.5173, -81.2731, 5.91122, 0.45", "-13.3489, -82.9566, 6.11008, 1.59", "-13.2388, -84.3493, 6.26095, 1.59", "-13.0961, -87.96, 6.60204, 0.23", "-13.1175, -90.4707, 6.8081, 0.68", "-13.3151, -94.0856, 7.07448, 0.23", "-13.5138, -96.2929, 7.22931, 1.36", "-13.9566, -100.007, 7.47475, 0.45", "-14.7648, -105.183, 7.80356, 0.45", "-15.2441, -107.661, 7.95811, 0.45", "-15.6689, -109.527, 8.06126, 1.36", "-16.2194, -111.51, 8.17883, 1.59", "-16.8242, -113.413, 8.31107, 0.23", "-17.4204, -115.104, 8.45014, 0.45", "-18.6014, -118.366, 8.74638, 0.23", "-19.0219, -119.602, 8.87837, 0.23", "-19.7682, -121.824, 9.18288, 1.14", "-20.9888, -125.435, 9.78241, 0.23", "-21.7143, -127.574, 10.1826, 1.14", "-22.5799, -130.202, 10.7497, 0.23", "-23.3529, -132.53, 11.304, 0.45", "-24.0256, -134.702, 11.9052, 0.23", "-24.5686, -136.456, 12.4486, 1.14", "-24.8369, -137.324, 12.7483, 1.14", "-25.5127, -139.414, 13.5071, 0.23", "-25.9106, -140.568, 13.9473, 0.91", "-26.7688, -143.062, 14.8486, 0.23", "-27.2275, -144.669, 15.4272, 1.14", "-27.7133, -146.702, 16.147, 0.23", "-27.9625, -148.154, 16.6107, 0.91", "-28.0371, -148.946, 16.8233, 0.23", "-28.0695, -150.062, 17.0965, 0.68", "-28.0955, -152.818, 17.6747, 0.23", "-28.0876, -154.463, 18.0136, 0.68", "-28.1298, -156.962, 18.49, 0.23", "-28.1992, -158.664, 18.8516, 0.91", "-28.588, -163.025, 19.7887, 0.23", "-28.7716, -164.752, 20.164, 0.68", "-29.0131, -166.51, 20.5418, 0.23", "-29.3245, -168.33, 20.9715, 0.91", "-30.1685, -172.022, 21.9339, 0.23", "-30.8718, -174.557, 22.6308, 0.91" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "26.0492, -328.742, 4.60218, 0.23", "26.8899, -329.95, 4.52669, 0.23", "27.9143, -331.347, 4.38349, 0.91", "28.8934, -332.562, 4.23773, 0.23", "30.0014, -333.971, 4.02343, 0.91", "30.7417, -334.927, 3.86628, 0.23", "31.7418, -336.232, 3.608, 0.68", "32.5528, -337.302, 3.33044, 0.23", "33.4987, -338.506, 2.9341, 0.91", "34.4663, -339.654, 2.45683, 0.23", "35.2618, -340.591, 1.99496, 0.91", "36.3627, -341.992, 1.26891, 0.23", "37.3116, -343.242, 0.587044, 1.14", "38.6146, -345.052, -0.414871, 0.23", "39.5659, -346.401, -1.20406, 0.68", "40.4829, -347.629, -1.95539, 0.23", "41.5254, -349.086, -2.89871, 1.14" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "26.0492, -328.742, 4.60218, 0.23", "26.5944, -329.732, 4.22503, 0.23", "27.2676, -330.955, 3.75926, 0.68", "27.5951, -331.55, 3.53268, 0.23", "28.4571, -333.116, 2.93631, 0.91" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_3", "dend_0", "dend_34", "dend_25", "dend_21", "dend_4", "dend_2", "dend_1", "dend_40", "dend_35", "dend_33", "dend_26", "dend_23", "dend_22", "dend_20", "dend_5", "dend_39", "dend_36", "dend_30", "dend_27", "dend_17", "dend_6", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_16", "dend_7", "dend_11", "dend_8", "dend_15", "dend_12", "dend_10", "dend_9", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_7", "dend_7", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L5_SBC_e37bc9bae0_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_24
create dend_34
public dend_34
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_3
create dend_21
public dend_21
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_25
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_4
create dend_20
public dend_20
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_5
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_6
create dend_16
public dend_16
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.49999929751125366)
    connect dend_3(0), soma_0(0.49999929751125366)
    connect dend_0(0), soma_0(0.49999929751125366)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.0539, -10.2039, 0.0, 4.14336 ) }
    soma_0 { pt3dadd( -1.01121, -9.20625, 0.0, 7.24872 ) }
    soma_0 { pt3dadd( -0.968511, -8.20857, 0.0, 9.44401 ) }
    soma_0 { pt3dadd( -0.925815, -7.2109, 0.0, 10.5422 ) }
    soma_0 { pt3dadd( -0.88312, -6.21322, 0.0, 11.4092 ) }
    soma_0 { pt3dadd( -0.840424, -5.21554, 0.0, 11.9642 ) }
    soma_0 { pt3dadd( -0.797728, -4.21787, 0.0, 12.4342 ) }
    soma_0 { pt3dadd( -0.755032, -3.22019, 0.0, 12.6614 ) }
    soma_0 { pt3dadd( -0.712337, -2.22251, 0.0, 12.6364 ) }
    soma_0 { pt3dadd( -0.669641, -1.22484, 0.0, 12.5104 ) }
    soma_0 { pt3dadd( -0.626945, -0.227159, 0.0, 12.2671 ) }
    soma_0 { pt3dadd( -0.584249, 0.770517, 0.0, 12.0239 ) }
    soma_0 { pt3dadd( -0.541554, 1.76819, 0.0, 11.4645 ) }
    soma_0 { pt3dadd( -0.498858, 2.76587, 0.0, 10.6882 ) }
    soma_0 { pt3dadd( -0.456162, 3.76355, 0.0, 9.91399 ) }
    soma_0 { pt3dadd( -0.413466, 4.76122, 0.0, 9.47101 ) }
    soma_0 { pt3dadd( -0.370771, 5.7589, 0.0, 9.20688 ) }
    soma_0 { pt3dadd( -0.328075, 6.75658, 0.0, 8.75449 ) }
    soma_0 { pt3dadd( -0.285379, 7.75425, 0.0, 8.25522 ) }
    soma_0 { pt3dadd( -0.242683, 8.75193, 0.0, 6.57349 ) }
    soma_0 { pt3dadd( -0.199988, 9.74961, 0.0, 3.81 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.284736, 7.14994, 0.16, 6.82 ) }
    dend_24 { pt3dadd( 0.92397, 9.2817, 0.623284, 6.82 ) }
    dend_24 { pt3dadd( 1.93961, 12.6687, 1.35937, 6.59 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -2.66527, -9.6493, 1.27, 5.68 ) }
    dend_3 { pt3dadd( -3.38645, -11.9866, 0.649672, 3.64 ) }
    dend_3 { pt3dadd( -4.0875, -14.2586, 0.046654, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.30527, 7.10119, 0.0100002, 1.59 ) }
    dend_0 { pt3dadd( -5.01024, 7.69098, -0.0237031, 1.59 ) }
    dend_0 { pt3dadd( -7.69006, 8.618, -0.0766768, 1.36 ) }
    dend_0 { pt3dadd( -9.10108, 9.1061, -0.104569, 1.36 ) }
    dend_0 { pt3dadd( -12.3803, 10.2405, -0.169392, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 32/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.199988, 9.74961, 0.0, 0.483274 ) }
    axon_0 { pt3dadd( 0.441352, 24.7359, 0.0, 0.483274 ) }
    axon_0 { pt3dadd( 1.08269, 39.7222, 0.0, 0.483274 ) }
    // Section: dend_34, id: dend_34, parent: dend_24 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.93961, 12.6687, 1.35937, 1.14 ) }
    dend_34 { pt3dadd( -0.0996359, 17.0307, 0.805683, 1.14 ) }
    dend_34 { pt3dadd( -1.01445, 18.9874, 0.557299, 1.14 ) }
    dend_34 { pt3dadd( -1.60627, 20.2533, 0.396613, 1.59 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.93961, 12.6687, 1.35937, 0.91 ) }
    dend_25 { pt3dadd( 5.17691, 13.6963, 0.176873, 0.91 ) }
    dend_25 { pt3dadd( 6.68312, 14.1744, -0.3733, 0.91 ) }
    // Section: dend_21, id: dend_21, parent: dend_3 (entry count 42/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.0875, -14.2586, 0.046654, 0.91 ) }
    dend_21 { pt3dadd( -6.08638, -14.5325, -0.473439, 0.91 ) }
    dend_21 { pt3dadd( -8.55796, -14.5895, -0.991292, 0.91 ) }
    dend_21 { pt3dadd( -10.7959, -14.5317, -1.43935, 1.14 ) }
    dend_21 { pt3dadd( -12.4241, -14.4795, -1.78643, 0.91 ) }
    dend_21 { pt3dadd( -15.3907, -14.4335, -2.40835, 0.68 ) }
    dend_21 { pt3dadd( -16.8785, -14.4591, -2.7131, 0.91 ) }
    dend_21 { pt3dadd( -19.6939, -14.4955, -3.2574, 1.36 ) }
    dend_21 { pt3dadd( -22.3054, -14.5559, -3.6906, 0.68 ) }
    dend_21 { pt3dadd( -24.1137, -14.68, -3.96558, 0.68 ) }
    dend_21 { pt3dadd( -26.4201, -14.9886, -4.28618, 1.59 ) }
    dend_21 { pt3dadd( -29.4506, -15.5676, -4.66563, 1.14 ) }
    dend_21 { pt3dadd( -30.78, -15.8454, -4.80926, 0.68 ) }
    dend_21 { pt3dadd( -33.5629, -16.4482, -5.09901, 1.14 ) }
    dend_21 { pt3dadd( -35.7876, -16.9329, -5.32633, 0.23 ) }
    dend_21 { pt3dadd( -37.5694, -17.3222, -5.51773, 1.14 ) }
    dend_21 { pt3dadd( -39.7792, -17.8445, -5.80451, 0.91 ) }
    dend_21 { pt3dadd( -43.5048, -18.8559, -6.35195, 0.23 ) }
    dend_21 { pt3dadd( -45.3262, -19.4686, -6.65758, 0.91 ) }
    dend_21 { pt3dadd( -46.9252, -20.1682, -6.97455, 0.91 ) }
    dend_21 { pt3dadd( -47.9767, -20.8147, -7.21301, 1.14 ) }
    dend_21 { pt3dadd( -49.3891, -22.1805, -7.56049, 0.45 ) }
    dend_21 { pt3dadd( -50.1882, -23.3604, -7.7644, 0.45 ) }
    dend_21 { pt3dadd( -50.9359, -24.8301, -7.95185, 0.91 ) }
    dend_21 { pt3dadd( -51.5951, -26.3694, -8.09121, 0.45 ) }
    dend_21 { pt3dadd( -52.1849, -27.9434, -8.18792, 1.59 ) }
    dend_21 { pt3dadd( -53.2165, -31.04, -8.3352, 0.45 ) }
    dend_21 { pt3dadd( -53.9571, -33.6042, -8.4192, 1.82 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 70/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -4.0875, -14.2586, 0.046654, 2.95 ) }
    dend_4 { pt3dadd( -4.68006, -18.1922, 0.26326, 2.95 ) }
    dend_4 { pt3dadd( -5.28427, -22.2031, 0.484122, 2.95 ) }
    dend_4 { pt3dadd( -5.54192, -23.9134, 0.578304, 3.41 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.3803, 10.2405, -0.169392, 1.14 ) }
    dend_2 { pt3dadd( -14.0784, 8.69283, -0.574618, 1.14 ) }
    dend_2 { pt3dadd( -15.2052, 7.48763, -0.909585, 0.45 ) }
    dend_2 { pt3dadd( -16.2374, 6.31779, -1.23348, 1.59 ) }
    dend_2 { pt3dadd( -18.3208, 4.0137, -1.88109, 0.45 ) }
    dend_2 { pt3dadd( -19.8669, 2.37904, -2.40523, 0.91 ) }
    dend_2 { pt3dadd( -20.6167, 1.63143, -2.67037, 1.59 ) }
    dend_2 { pt3dadd( -22.4196, -0.236187, -3.34408, 0.23 ) }
    dend_2 { pt3dadd( -23.1597, -0.933445, -3.66491, 0.23 ) }
    dend_2 { pt3dadd( -23.9598, -1.46801, -4.11417, 0.23 ) }
    dend_2 { pt3dadd( -25.5183, -1.59461, -5.023, 0.68 ) }
    dend_2 { pt3dadd( -27.0773, -1.46179, -5.75225, 0.68 ) }
    dend_2 { pt3dadd( -28.2594, -1.42053, -6.18954, 0.68 ) }
    dend_2 { pt3dadd( -30.2017, -1.49549, -6.72845, 1.59 ) }
    dend_2 { pt3dadd( -31.7322, -1.74728, -7.05511, 1.59 ) }
    dend_2 { pt3dadd( -33.9335, -2.27267, -7.40409, 0.23 ) }
    dend_2 { pt3dadd( -35.9266, -2.85357, -7.63077, 0.91 ) }
    dend_2 { pt3dadd( -37.8137, -3.41235, -7.79207, 0.91 ) }
    dend_2 { pt3dadd( -39.4316, -3.85588, -7.87132, 0.91 ) }
    dend_2 { pt3dadd( -41.5005, -4.34512, -7.94497, 0.23 ) }
    dend_2 { pt3dadd( -44.4179, -4.94133, -8.06743, 0.68 ) }
    dend_2 { pt3dadd( -46.076, -5.20757, -8.15145, 0.68 ) }
    dend_2 { pt3dadd( -48.2782, -5.47286, -8.29159, 0.23 ) }
    dend_2 { pt3dadd( -50.3104, -5.64752, -8.44599, 0.45 ) }
    dend_2 { pt3dadd( -52.8639, -5.82357, -8.66604, 0.45 ) }
    dend_2 { pt3dadd( -54.491, -5.90688, -8.81561, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_2 { pt3dadd( -56.1181, -5.97649, -8.96708, 0.23 ) }
    dend_2 { pt3dadd( -58.4634, -6.05477, -9.18261, 1.36 ) }
    dend_2 { pt3dadd( -60.5139, -6.14812, -9.37724, 0.45 ) }
    dend_2 { pt3dadd( -63.2454, -6.27873, -9.6293, 0.91 ) }
    dend_2 { pt3dadd( -64.9311, -6.4053, -9.75637, 0.91 ) }
    dend_2 { pt3dadd( -66.3121, -6.52163, -9.84914, 1.36 ) }
    dend_2 { pt3dadd( -68.3478, -6.70637, -9.9662, 0.23 ) }
    dend_2 { pt3dadd( -70.6757, -6.91742, -10.0788, 0.23 ) }
    dend_2 { pt3dadd( -71.8436, -7.0416, -10.1413, 0.91 ) }
    dend_2 { pt3dadd( -74.9579, -7.54633, -10.3172, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 10/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -12.3803, 10.2405, -0.169392, 0.23 ) }
    dend_1 { pt3dadd( -14.9019, 10.8355, 0.509911, 0.23 ) }
    dend_1 { pt3dadd( -17.4927, 11.4396, 1.28158, 0.68 ) }
    dend_1 { pt3dadd( -19.8462, 11.983, 2.10162, 0.23 ) }
    dend_1 { pt3dadd( -20.878, 12.2121, 2.48178, 0.45 ) }
    dend_1 { pt3dadd( -23.0316, 12.7024, 3.36218, 0.91 ) }
    dend_1 { pt3dadd( -25.2751, 13.2493, 4.32174, 0.23 ) }
    dend_1 { pt3dadd( -26.2504, 13.4774, 4.82289, 0.68 ) }
    dend_1 { pt3dadd( -27.5997, 13.9135, 5.69537, 0.23 ) }
    dend_1 { pt3dadd( -28.282, 14.1963, 6.229, 0.68 ) }
    dend_1 { pt3dadd( -29.7923, 14.9274, 7.46972, 0.23 ) }
    dend_1 { pt3dadd( -30.5809, 15.3046, 8.114, 0.68 ) }
    dend_1 { pt3dadd( -32.2704, 16.0031, 9.45342, 0.23 ) }
    dend_1 { pt3dadd( -34.0199, 16.5895, 10.7371, 0.68 ) }
    dend_1 { pt3dadd( -37.1277, 17.4664, 12.8435, 0.23 ) }
    dend_1 { pt3dadd( -38.6117, 17.8117, 13.7464, 0.45 ) }
    dend_1 { pt3dadd( -41.1377, 18.219, 15.0078, 0.23 ) }
    dend_1 { pt3dadd( -42.8706, 18.4001, 15.6663, 0.23 ) }
    dend_1 { pt3dadd( -44.5387, 18.5731, 16.0591, 0.23 ) }
    dend_1 { pt3dadd( -46.0754, 18.7794, 16.2718, 0.23 ) }
    dend_1 { pt3dadd( -47.7244, 19.1771, 16.3892, 0.23 ) }
    dend_1 { pt3dadd( -49.6115, 19.8492, 16.4892, 0.23 ) }
    dend_1 { pt3dadd( -52.3862, 21.1444, 16.6177, 0.45 ) }
    dend_1 { pt3dadd( -55.3634, 22.7119, 16.795, 0.23 ) }
    dend_1 { pt3dadd( -57.0578, 23.6226, 16.9208, 0.68 ) }
    dend_1 { pt3dadd( -59.6469, 24.9165, 17.139, 0.23 ) }
    dend_1 { pt3dadd( -62.3491, 26.217, 17.4179, 0.23 ) }
    dend_1 { pt3dadd( -65.1935, 27.5401, 17.7048, 0.23 ) }
    dend_1 { pt3dadd( -67.9833, 28.789, 17.9948, 0.23 ) }
    dend_1 { pt3dadd( -71.0169, 29.9978, 18.3008, 0.23 ) }
    dend_1 { pt3dadd( -74.6942, 31.2741, 18.625, 0.45 ) }
    dend_1 { pt3dadd( -75.7074, 31.5721, 18.6852, 0.23 ) }
    dend_1 { pt3dadd( -77.2759, 31.9562, 18.7628, 0.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 43/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.08269, 39.7222, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 1.72403, 54.7085, 0.0, 1.59 ) }
    axon_1 { pt3dadd( 2.36537, 69.6947, 0.0, 1.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 46/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -1.60627, 20.2533, 0.396613, 0.23 ) }
    dend_40 { pt3dadd( -1.76667, 20.0463, 2.2251, 0.23 ) }
    dend_40 { pt3dadd( -1.55035, 19.3537, 3.17942, 0.91 ) }
    dend_40 { pt3dadd( -1.16345, 17.8531, 4.60488, 0.23 ) }
    dend_40 { pt3dadd( -1.04134, 16.671, 5.85726, 0.23 ) }
    dend_40 { pt3dadd( -1.10324, 15.8757, 7.17028, 0.23 ) }
    dend_40 { pt3dadd( -1.24738, 15.4126, 8.21375, 0.91 ) }
    dend_40 { pt3dadd( -1.76728, 14.7357, 9.62033, 0.23 ) }
    dend_40 { pt3dadd( -2.12925, 14.5081, 10.2307, 0.23 ) }
    dend_40 { pt3dadd( -3.15055, 14.0046, 11.769, 0.91 ) }
    dend_40 { pt3dadd( -4.39321, 13.5466, 13.5973, 0.23 ) }
    dend_40 { pt3dadd( -5.83868, 13.1692, 15.5164, 0.23 ) }
    dend_40 { pt3dadd( -7.40798, 12.9155, 17.5242, 0.68 ) }
    dend_40 { pt3dadd( -10.0532, 12.6213, 20.781, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 60/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -1.60627, 20.2533, 0.396613, 0.68 ) }
    dend_35 { pt3dadd( -1.36929, 23.0187, 0.24694, 0.68 ) }
    dend_35 { pt3dadd( -1.19905, 24.9618, 0.186996, 0.68 ) }
    dend_35 { pt3dadd( -1.11221, 26.0645, 0.170499, 1.36 ) }
    dend_35 { pt3dadd( -0.863422, 29.1497, 0.149254, 0.68 ) }
    dend_35 { pt3dadd( -0.790392, 30.2845, 0.135549, 0.68 ) }
    dend_35 { pt3dadd( -0.728231, 32.6133, 0.101154, 1.59 ) }
    dend_35 { pt3dadd( -0.733532, 33.7192, 0.116853, 1.59 ) }
    dend_35 { pt3dadd( -0.880175, 36.5108, 0.250944, 0.23 ) }
    dend_35 { pt3dadd( -1.08225, 37.9509, 0.35855, 0.23 ) }
    dend_35 { pt3dadd( -1.49093, 39.6703, 0.526209, 1.14 ) }
    dend_35 { pt3dadd( -2.04909, 41.5961, 0.734411, 0.91 ) }
    dend_35 { pt3dadd( -2.5075, 42.9781, 0.890023, 0.91 ) }
    dend_35 { pt3dadd( -3.09375, 44.6955, 1.09564, 1.36 ) }
    dend_35 { pt3dadd( -3.76169, 46.4817, 1.34181, 0.68 ) }
    dend_35 { pt3dadd( -4.45633, 48.288, 1.61466, 1.14 ) }
    dend_35 { pt3dadd( -5.11562, 50.1242, 1.91638, 0.45 ) }
    dend_35 { pt3dadd( -5.52231, 51.4336, 2.10621, 1.59 ) }
    dend_35 { pt3dadd( -6.04966, 53.3045, 2.27557, 2.27 ) }
    // Section: dend_33, id: dend_33, parent: dend_25 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.68312, 14.1744, -0.3733, 0.91 ) }
    dend_33 { pt3dadd( 7.25874, 13.9929, -1.65834, 0.91 ) }
    dend_33 { pt3dadd( 8.08173, 13.3363, -3.50118, 0.91 ) }
    dend_33 { pt3dadd( 9.51681, 12.0897, -6.24108, 0.68 ) }
    dend_33 { pt3dadd( 10.2073, 11.4544, -7.4121, 0.68 ) }
    dend_33 { pt3dadd( 10.9561, 10.6949, -8.56451, 1.14 ) }
    dend_33 { pt3dadd( 12.1625, 9.34179, -10.2491, 0.68 ) }
    dend_33 { pt3dadd( 13.5589, 7.44021, -11.9157, 0.23 ) }
    dend_33 { pt3dadd( 14.2558, 6.19292, -12.6174, 0.23 ) }
    dend_33 { pt3dadd( 14.6171, 5.36687, -12.9326, 0.23 ) }
    dend_33 { pt3dadd( 15.1837, 3.74719, -13.4238, 1.14 ) }
    dend_33 { pt3dadd( 15.732, 2.15933, -13.8419, 1.82 ) }
    dend_33 { pt3dadd( 16.2786, 0.448233, -14.1968, 0.68 ) }
    dend_33 { pt3dadd( 16.7721, -1.72195, -14.5018, 1.14 ) }
    dend_33 { pt3dadd( 17.0247, -3.43019, -14.7423, 0.45 ) }
    dend_33 { pt3dadd( 17.1696, -4.82669, -14.9374, 0.45 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.68312, 14.1744, -0.3733, 1.14 ) }
    dend_26 { pt3dadd( 8.92334, 14.4137, -0.679969, 1.14 ) }
    dend_26 { pt3dadd( 10.1836, 14.5483, -0.852484, 1.59 ) }
    dend_26 { pt3dadd( 12.4409, 14.7895, -1.16149, 1.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 99/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -53.9571, -33.6042, -8.4192, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_23 { pt3dadd( -56.4812, -34.6082, -8.02888, 0.23 ) }
    dend_23 { pt3dadd( -58.2288, -35.4285, -7.80543, 0.68 ) }
    dend_23 { pt3dadd( -60.4065, -36.6172, -7.53528, 0.23 ) }
    dend_23 { pt3dadd( -61.315, -37.1745, -7.42738, 0.23 ) }
    dend_23 { pt3dadd( -63.2473, -38.4431, -7.21387, 0.23 ) }
    dend_23 { pt3dadd( -65.2671, -39.8649, -7.01132, 0.91 ) }
    dend_23 { pt3dadd( -66.6408, -40.9562, -6.91005, 0.23 ) }
    dend_23 { pt3dadd( -67.9172, -42.0803, -6.81923, 0.91 ) }
    dend_23 { pt3dadd( -68.9917, -43.051, -6.73408, 0.23 ) }
    dend_23 { pt3dadd( -70.329, -44.2205, -6.61875, 1.59 ) }
    dend_23 { pt3dadd( -72.2572, -45.7854, -6.44782, 0.23 ) }
    dend_23 { pt3dadd( -73.5222, -46.7216, -6.32633, 0.23 ) }
    dend_23 { pt3dadd( -75.8804, -48.2611, -6.10337, 0.23 ) }
    dend_23 { pt3dadd( -77.2711, -49.0588, -5.98036, 1.59 ) }
    dend_23 { pt3dadd( -78.1318, -49.5043, -5.90467, 0.23 ) }
    dend_23 { pt3dadd( -79.9909, -50.3612, -5.75267, 0.68 ) }
    dend_23 { pt3dadd( -82.0008, -51.183, -5.63181, 0.23 ) }
    dend_23 { pt3dadd( -83.482, -51.7626, -5.61294, 1.14 ) }
    dend_23 { pt3dadd( -84.113, -52.0158, -5.63346, 1.14 ) }
    dend_23 { pt3dadd( -85.2738, -52.515, -5.70899, 0.23 ) }
    dend_23 { pt3dadd( -87.1338, -53.3973, -5.82516, 0.68 ) }
    dend_23 { pt3dadd( -88.9961, -54.3535, -5.93757, 0.23 ) }
    dend_23 { pt3dadd( -91.2123, -55.5251, -5.99633, 1.14 ) }
    dend_23 { pt3dadd( -94.058, -57.0924, -5.97977, 0.23 ) }
    dend_23 { pt3dadd( -95.6995, -58.0336, -5.91416, 0.91 ) }
    dend_23 { pt3dadd( -98.8337, -59.9218, -5.70199, 0.23 ) }
    dend_23 { pt3dadd( -99.7284, -60.5022, -5.6169, 0.91 ) }
    dend_23 { pt3dadd( -102.964, -62.7421, -5.20377, 0.23 ) }
    dend_23 { pt3dadd( -105.543, -64.6755, -4.74213, 1.14 ) }
    dend_23 { pt3dadd( -107.789, -66.4058, -4.28316, 0.45 ) }
    dend_23 { pt3dadd( -109.289, -67.614, -3.97057, 1.14 ) }
    dend_23 { pt3dadd( -110.476, -68.614, -3.7376, 1.14 ) }
    dend_23 { pt3dadd( -111.915, -69.9243, -3.45127, 0.23 ) }
    dend_23 { pt3dadd( -112.901, -71.0545, -3.26923, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -53.9571, -33.6042, -8.4192, 0.45 ) }
    dend_22 { pt3dadd( -56.1097, -35.9814, -8.92076, 0.45 ) }
    dend_22 { pt3dadd( -57.6463, -37.6784, -9.27879, 1.14 ) }
    dend_22 { pt3dadd( -58.609, -38.7416, -9.5031, 0.23 ) }
    dend_22 { pt3dadd( -59.8737, -40.1383, -9.79778, 1.36 ) }
    dend_22 { pt3dadd( -61.1548, -41.5531, -10.0963, 0.45 ) }
    // Section: dend_20, id: dend_20, parent: dend_4 (entry count 40/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -5.54192, -23.9134, 0.578304, 0.23 ) }
    dend_20 { pt3dadd( -4.9278, -25.3842, 0.690143, 0.23 ) }
    dend_20 { pt3dadd( -4.20823, -27.142, 0.802034, 0.23 ) }
    dend_20 { pt3dadd( -3.42835, -28.9828, 0.921787, 1.14 ) }
    dend_20 { pt3dadd( -2.61662, -30.8185, 1.03818, 0.23 ) }
    dend_20 { pt3dadd( -2.03276, -32.0954, 1.11274, 0.91 ) }
    dend_20 { pt3dadd( -1.5818, -33.0687, 1.16372, 0.91 ) }
    dend_20 { pt3dadd( -0.503212, -35.4342, 1.26596, 0.23 ) }
    dend_20 { pt3dadd( 0.305386, -37.1668, 1.33064, 1.14 ) }
    dend_20 { pt3dadd( 0.861957, -38.3527, 1.36451, 1.14 ) }
    dend_20 { pt3dadd( 1.86824, -40.536, 1.40169, 0.45 ) }
    dend_20 { pt3dadd( 2.84138, -42.6563, 1.4147, 0.45 ) }
    dend_20 { pt3dadd( 3.32762, -43.7671, 1.42191, 0.91 ) }
    dend_20 { pt3dadd( 4.1406, -45.6643, 1.43199, 0.23 ) }
    dend_20 { pt3dadd( 4.87817, -47.4737, 1.46564, 0.23 ) }
    dend_20 { pt3dadd( 5.71003, -49.59, 1.53869, 0.68 ) }
    dend_20 { pt3dadd( 6.67209, -52.0336, 1.65321, 0.23 ) }
    dend_20 { pt3dadd( 7.31565, -53.6487, 1.75863, 0.91 ) }
    dend_20 { pt3dadd( 8.2089, -55.8787, 1.9664, 1.14 ) }
    dend_20 { pt3dadd( 9.69691, -59.635, 2.4857, 0.23 ) }
    dend_20 { pt3dadd( 10.1688, -60.8444, 2.7114, 0.23 ) }
    dend_20 { pt3dadd( 10.8152, -62.5855, 3.10214, 0.68 ) }
    dend_20 { pt3dadd( 11.5916, -64.7834, 3.66839, 0.23 ) }
    dend_20 { pt3dadd( 12.5349, -67.5217, 4.47122, 1.36 ) }
    dend_20 { pt3dadd( 13.1814, -69.4678, 5.09877, 0.68 ) }
    dend_20 { pt3dadd( 13.9394, -71.9276, 5.89527, 0.23 ) }
    dend_20 { pt3dadd( 14.1588, -72.7057, 6.13901, 0.91 ) }
    dend_20 { pt3dadd( 14.7614, -74.9801, 6.83464, 0.23 ) }
    dend_20 { pt3dadd( 15.1542, -76.5155, 7.26826, 0.91 ) }
    dend_20 { pt3dadd( 15.7121, -78.7132, 7.81033, 1.14 ) }
    dend_20 { pt3dadd( 16.4021, -81.3715, 8.38269, 0.23 ) }
    dend_20 { pt3dadd( 16.7511, -82.7076, 8.65257, 0.91 ) }
    dend_20 { pt3dadd( 17.327, -84.8875, 9.07526, 0.23 ) }
    dend_20 { pt3dadd( 17.5517, -85.6803, 9.20067, 0.91 ) }
    dend_20 { pt3dadd( 17.8834, -86.7637, 9.33713, 0.91 ) }
    dend_20 { pt3dadd( 18.7614, -89.2556, 9.63267, 0.23 ) }
    dend_20 { pt3dadd( 19.5071, -91.125, 9.83223, 2.05 ) }
    dend_20 { pt3dadd( 19.8398, -91.9288, 9.90421, 2.05 ) }
    dend_20 { pt3dadd( 21.8043, -96.5184, 10.2386, 0.23 ) }
    dend_20 { pt3dadd( 22.4793, -98.0603, 10.342, 0.91 ) }
    dend_20 { pt3dadd( 24.2712, -102.094, 10.5624, 0.23 ) }
    dend_20 { pt3dadd( 24.8064, -103.277, 10.6083, 0.23 ) }
    dend_20 { pt3dadd( 25.2827, -104.292, 10.6431, 1.14 ) }
    dend_20 { pt3dadd( 25.7483, -105.251, 10.6738, 1.14 ) }
    dend_20 { pt3dadd( 27.4093, -108.577, 10.8027, 0.23 ) }
    dend_20 { pt3dadd( 28.171, -110.025, 10.8803, 0.23 ) }
    dend_20 { pt3dadd( 28.7505, -111.091, 10.9566, 0.91 ) }
    dend_20 { pt3dadd( 29.4309, -112.291, 11.0629, 0.91 ) }
    dend_20 { pt3dadd( 31.0094, -114.858, 11.3263, 0.23 ) }
    dend_20 { pt3dadd( 31.8477, -116.148, 11.4811, 1.14 ) }
    dend_20 { pt3dadd( 33.7929, -118.891, 11.8593, 0.23 ) }
    dend_20 { pt3dadd( 34.9385, -120.443, 12.0904, 0.23 ) }
    dend_20 { pt3dadd( 35.5109, -121.2, 12.2009, 0.91 ) }
    dend_20 { pt3dadd( 36.298, -122.17, 12.3683, 0.91 ) }
    dend_20 { pt3dadd( 37.5078, -123.526, 12.6258, 0.23 ) }
    dend_20 { pt3dadd( 38.2558, -124.304, 12.7702, 0.68 ) }
    dend_20 { pt3dadd( 39.2701, -125.305, 12.9734, 0.23 ) }
    dend_20 { pt3dadd( 40.4628, -126.451, 13.204, 0.91 ) }
    dend_20 { pt3dadd( 43.833, -129.576, 13.8223, 0.23 ) }
    dend_20 { pt3dadd( 44.6396, -130.296, 13.9659, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 45.7099, -131.191, 14.1394, 1.14 ) }
    dend_20 { pt3dadd( 48.2868, -133.308, 14.6092, 0.23 ) }
    dend_20 { pt3dadd( 49.163, -134.031, 14.8224, 0.23 ) }
    dend_20 { pt3dadd( 50.7364, -135.385, 15.2939, 0.68 ) }
    dend_20 { pt3dadd( 51.868, -136.525, 15.7711, 0.23 ) }
    dend_20 { pt3dadd( 53.0148, -137.937, 16.4263, 0.91 ) }
    dend_20 { pt3dadd( 53.7764, -139.103, 17.0445, 0.23 ) }
    dend_20 { pt3dadd( 54.7971, -140.883, 18.1164, 0.23 ) }
    dend_20 { pt3dadd( 55.4174, -141.956, 18.7786, 0.68 ) }
    dend_20 { pt3dadd( 56.6456, -144.064, 20.0441, 0.23 ) }
    dend_20 { pt3dadd( 57.7416, -145.785, 21.0898, 0.68 ) }
    dend_20 { pt3dadd( 59.7805, -148.719, 22.8654, 0.23 ) }
    dend_20 { pt3dadd( 62.305, -151.954, 24.713, 0.23 ) }
    dend_20 { pt3dadd( 63.7552, -153.694, 25.6835, 0.23 ) }
    dend_20 { pt3dadd( 64.8678, -154.922, 26.3935, 0.68 ) }
    dend_20 { pt3dadd( 67.1993, -157.248, 27.753, 0.23 ) }
    dend_20 { pt3dadd( 69.3265, -159.216, 28.964, 0.23 ) }
    dend_20 { pt3dadd( 71.0528, -160.74, 29.8317, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.54192, -23.9134, 0.578304, 2.27 ) }
    dend_5 { pt3dadd( -7.13255, -27.3579, 0.299573, 2.27 ) }
    dend_5 { pt3dadd( -7.88522, -28.9879, 0.167681, 2.73 ) }
    dend_5 { pt3dadd( -8.69034, -30.7313, 0.0265991, 3.64 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 22/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -6.04966, 53.3045, 2.27557, 0.23 ) }
    dend_39 { pt3dadd( -4.03791, 54.5505, 3.84848, 0.23 ) }
    dend_39 { pt3dadd( -2.50564, 55.1514, 4.81056, 0.91 ) }
    dend_39 { pt3dadd( -1.01089, 55.6987, 5.65794, 0.23 ) }
    dend_39 { pt3dadd( 0.303975, 56.197, 6.42192, 0.23 ) }
    dend_39 { pt3dadd( 1.48817, 56.6276, 7.08853, 0.91 ) }
    dend_39 { pt3dadd( 3.03006, 57.2176, 7.912, 0.23 ) }
    dend_39 { pt3dadd( 3.84939, 57.4798, 8.31249, 0.23 ) }
    dend_39 { pt3dadd( 4.58985, 57.7837, 8.6785, 0.23 ) }
    dend_39 { pt3dadd( 5.78382, 58.472, 9.25642, 0.23 ) }
    dend_39 { pt3dadd( 6.78048, 59.2941, 9.75015, 1.36 ) }
    dend_39 { pt3dadd( 7.62098, 60.104, 10.1697, 1.36 ) }
    dend_39 { pt3dadd( 9.38754, 62.0673, 10.9996, 0.23 ) }
    dend_39 { pt3dadd( 10.4827, 63.2826, 11.4599, 0.23 ) }
    dend_39 { pt3dadd( 11.3959, 64.2999, 11.7785, 0.23 ) }
    dend_39 { pt3dadd( 12.6741, 65.8295, 12.1321, 0.23 ) }
    dend_39 { pt3dadd( 14.1829, 67.7419, 12.4818, 1.14 ) }
    dend_39 { pt3dadd( 15.6296, 69.659, 12.7983, 0.23 ) }
    dend_39 { pt3dadd( 16.6977, 71.114, 12.9711, 0.23 ) }
    dend_39 { pt3dadd( 18.1474, 73.1527, 13.197, 0.45 ) }
    dend_39 { pt3dadd( 19.449, 75.1841, 13.3949, 0.23 ) }
    dend_39 { pt3dadd( 20.216, 76.5611, 13.5017, 0.68 ) }
    dend_39 { pt3dadd( 21.1785, 78.7738, 13.6363, 0.23 ) }
    dend_39 { pt3dadd( 21.5411, 79.8096, 13.7352, 0.23 ) }
    dend_39 { pt3dadd( 21.9191, 81.1514, 13.8934, 0.91 ) }
    dend_39 { pt3dadd( 22.1639, 82.0569, 14.0145, 0.91 ) }
    dend_39 { pt3dadd( 22.4438, 82.9527, 14.1343, 0.23 ) }
    dend_39 { pt3dadd( 23.2473, 85.2275, 14.5219, 0.68 ) }
    dend_39 { pt3dadd( 24.4098, 88.1385, 15.0468, 0.23 ) }
    dend_39 { pt3dadd( 24.8021, 89.0883, 15.2521, 0.91 ) }
    dend_39 { pt3dadd( 25.6983, 91.2273, 15.7298, 0.23 ) }
    dend_39 { pt3dadd( 26.7087, 93.6099, 16.295, 0.68 ) }
    dend_39 { pt3dadd( 27.7976, 96.1674, 16.9489, 0.23 ) }
    dend_39 { pt3dadd( 28.9057, 98.9642, 17.682, 0.68 ) }
    dend_39 { pt3dadd( 29.5112, 100.726, 18.1459, 0.23 ) }
    dend_39 { pt3dadd( 30.0747, 102.824, 18.733, 0.68 ) }
    dend_39 { pt3dadd( 30.3412, 104.29, 19.1813, 0.23 ) }
    dend_39 { pt3dadd( 30.4525, 105.494, 19.5921, 0.23 ) }
    dend_39 { pt3dadd( 30.5378, 107.084, 20.1223, 0.23 ) }
    dend_39 { pt3dadd( 30.5727, 108.968, 20.8077, 0.68 ) }
    dend_39 { pt3dadd( 30.5891, 111.706, 21.8168, 0.23 ) }
    dend_39 { pt3dadd( 30.5312, 114.02, 22.7301, 0.68 ) }
    dend_39 { pt3dadd( 30.3595, 116.407, 23.655, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 65/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -6.04966, 53.3045, 2.27557, 0.23 ) }
    dend_36 { pt3dadd( -7.31624, 55.669, 2.44755, 0.23 ) }
    dend_36 { pt3dadd( -8.45943, 57.6327, 2.61461, 0.91 ) }
    dend_36 { pt3dadd( -10.8226, 61.4384, 2.95778, 0.23 ) }
    dend_36 { pt3dadd( -11.6868, 62.7061, 3.07259, 0.91 ) }
    dend_36 { pt3dadd( -12.6051, 63.9931, 3.18604, 0.91 ) }
    dend_36 { pt3dadd( -14.0319, 66.032, 3.35825, 0.23 ) }
    dend_36 { pt3dadd( -15.7307, 68.4583, 3.58997, 0.23 ) }
    dend_36 { pt3dadd( -17.3711, 70.8317, 3.76624, 0.23 ) }
    dend_36 { pt3dadd( -18.6081, 72.7723, 3.86216, 0.68 ) }
    dend_36 { pt3dadd( -19.3862, 74.1099, 3.90814, 0.23 ) }
    dend_36 { pt3dadd( -20.1374, 75.5959, 3.94552, 0.23 ) }
    dend_36 { pt3dadd( -20.5156, 76.4543, 3.97137, 0.23 ) }
    dend_36 { pt3dadd( -21.3585, 78.5929, 4.08251, 1.59 ) }
    dend_36 { pt3dadd( -22.3721, 81.3333, 4.27365, 0.68 ) }
    dend_36 { pt3dadd( -23.0455, 83.1205, 4.40981, 0.23 ) }
    dend_36 { pt3dadd( -23.5022, 84.1509, 4.49412, 0.91 ) }
    dend_36 { pt3dadd( -24.3191, 85.7033, 4.62528, 0.23 ) }
    dend_36 { pt3dadd( -24.7613, 86.461, 4.68803, 0.91 ) }
    dend_36 { pt3dadd( -25.5756, 87.763, 4.81387, 0.23 ) }
    dend_36 { pt3dadd( -26.334, 88.9153, 4.90638, 1.14 ) }
    dend_36 { pt3dadd( -27.0634, 89.994, 4.96294, 1.14 ) }
    dend_36 { pt3dadd( -27.9368, 91.1781, 5.01772, 0.23 ) }
    dend_36 { pt3dadd( -29.1334, 92.6631, 5.10433, 0.23 ) }
    dend_36 { pt3dadd( -30.5973, 94.3422, 5.2795, 0.91 ) }
    dend_36 { pt3dadd( -31.6906, 95.4942, 5.44634, 0.23 ) }
    dend_36 { pt3dadd( -33.1421, 96.8794, 5.7291, 0.23 ) }
    dend_36 { pt3dadd( -34.2474, 97.8291, 5.975, 0.91 ) }
    dend_36 { pt3dadd( -36.1091, 99.2619, 6.46124, 0.23 ) }
    dend_36 { pt3dadd( -37.7074, 100.435, 6.91884, 0.68 ) }
    dend_36 { pt3dadd( -38.3908, 100.957, 7.11628, 0.68 ) }
    dend_36 { pt3dadd( -39.6331, 101.946, 7.48781, 0.23 ) }
    dend_36 { pt3dadd( -40.9945, 103.09, 7.86363, 0.68 ) }
    dend_36 { pt3dadd( -42.2618, 104.149, 8.14498, 0.23 ) }
    dend_36 { pt3dadd( -43.6508, 105.206, 8.40114, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -45.8649, 106.736, 8.69775, 0.91 ) }
    dend_36 { pt3dadd( -47.6037, 107.803, 8.83004, 0.23 ) }
    dend_36 { pt3dadd( -49.9223, 109.104, 8.87328, 0.23 ) }
    dend_36 { pt3dadd( -52.6347, 110.524, 8.82159, 0.91 ) }
    dend_36 { pt3dadd( -54.8138, 111.587, 8.70734, 0.23 ) }
    dend_36 { pt3dadd( -56.6064, 112.377, 8.59292, 0.91 ) }
    dend_36 { pt3dadd( -58.4484, 113.168, 8.43747, 0.23 ) }
    dend_36 { pt3dadd( -61.3634, 114.503, 8.12478, 0.23 ) }
    dend_36 { pt3dadd( -63.3027, 115.445, 7.89715, 0.91 ) }
    dend_36 { pt3dadd( -65.2053, 116.496, 7.65133, 0.23 ) }
    dend_36 { pt3dadd( -66.1964, 117.097, 7.52132, 0.68 ) }
    dend_36 { pt3dadd( -67.9756, 118.161, 7.35943, 0.23 ) }
    dend_36 { pt3dadd( -69.3565, 118.984, 7.30423, 0.91 ) }
    dend_36 { pt3dadd( -70.7458, 119.777, 7.30977, 0.23 ) }
    dend_36 { pt3dadd( -71.9726, 120.489, 7.36739, 0.68 ) }
    dend_36 { pt3dadd( -73.1825, 121.188, 7.46443, 0.23 ) }
    dend_36 { pt3dadd( -75.6436, 122.604, 7.70634, 0.91 ) }
    dend_36 { pt3dadd( -78.3212, 124.133, 8.01452, 0.23 ) }
    dend_36 { pt3dadd( -80.8012, 125.602, 8.31079, 0.23 ) }
    dend_36 { pt3dadd( -82.6428, 126.765, 8.52877, 0.91 ) }
    dend_36 { pt3dadd( -84.14, 127.802, 8.70048, 0.23 ) }
    dend_36 { pt3dadd( -84.8312, 128.337, 8.75913, 0.68 ) }
    dend_36 { pt3dadd( -85.8932, 129.309, 8.804, 0.23 ) }
    dend_36 { pt3dadd( -86.8717, 130.38, 8.78081, 0.91 ) }
    dend_36 { pt3dadd( -88.3254, 132.255, 8.61546, 0.23 ) }
    dend_36 { pt3dadd( -89.1363, 133.409, 8.46002, 0.91 ) }
    dend_36 { pt3dadd( -90.1691, 134.996, 8.21916, 0.23 ) }
    dend_36 { pt3dadd( -90.9299, 136.174, 8.01026, 1.14 ) }
    dend_36 { pt3dadd( -92.5185, 138.608, 7.4745, 0.23 ) }
    dend_36 { pt3dadd( -94.06, 140.885, 6.90801, 0.91 ) }
    dend_36 { pt3dadd( -95.3419, 142.682, 6.40615, 0.23 ) }
    dend_36 { pt3dadd( -96.4639, 144.152, 5.96577, 0.91 ) }
    dend_36 { pt3dadd( -97.9672, 146.057, 5.36551, 0.23 ) }
    dend_36 { pt3dadd( -99.1007, 147.405, 4.88942, 0.23 ) }
    dend_36 { pt3dadd( -100.365, 148.79, 4.35248, 0.91 ) }
    dend_36 { pt3dadd( -102.007, 150.532, 3.66407, 0.23 ) }
    dend_36 { pt3dadd( -102.854, 151.405, 3.31458, 0.23 ) }
    dend_36 { pt3dadd( -103.703, 152.25, 2.97631, 0.68 ) }
    dend_36 { pt3dadd( -104.285, 152.791, 2.77354, 0.23 ) }
    dend_36 { pt3dadd( -105.69, 154.057, 2.32396, 0.68 ) }
    dend_36 { pt3dadd( -107.267, 155.4, 1.83338, 0.23 ) }
    dend_36 { pt3dadd( -108.476, 156.403, 1.51786, 0.23 ) }
    dend_36 { pt3dadd( -109.288, 157.084, 1.32179, 0.68 ) }
    dend_36 { pt3dadd( -110.315, 157.935, 1.10442, 0.23 ) }
    dend_36 { pt3dadd( -111.241, 158.734, 0.924345, 0.23 ) }
    dend_36 { pt3dadd( -112.184, 159.548, 0.761818, 0.45 ) }
    dend_36 { pt3dadd( -114.159, 161.262, 0.431885, 0.23 ) }
    dend_36 { pt3dadd( -115.556, 162.548, 0.183453, 1.82 ) }
    dend_36 { pt3dadd( -116.57, 163.514, 0.00311659, 0.68 ) }
    dend_36 { pt3dadd( -118.618, 165.547, -0.353306, 0.23 ) }
    dend_36 { pt3dadd( -120.241, 167.121, -0.577128, 0.91 ) }
    dend_36 { pt3dadd( -121.78, 168.633, -0.792941, 0.23 ) }
    dend_36 { pt3dadd( -123.028, 169.839, -0.961609, 0.23 ) }
    dend_36 { pt3dadd( -123.78, 170.575, -1.04532, 0.91 ) }
    dend_36 { pt3dadd( -124.822, 171.628, -1.15959, 0.23 ) }
    dend_36 { pt3dadd( -125.954, 172.79, -1.25199, 1.36 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 56/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 12.4409, 14.7895, -1.16149, 0.68 ) }
    dend_30 { pt3dadd( 14.0258, 13.8678, -1.43636, 0.68 ) }
    dend_30 { pt3dadd( 15.7382, 12.8882, -1.63326, 0.68 ) }
    dend_30 { pt3dadd( 17.2198, 12.0076, -1.74922, 0.68 ) }
    dend_30 { pt3dadd( 18.6769, 11.019, -1.80913, 1.14 ) }
    dend_30 { pt3dadd( 20.4167, 9.79012, -1.89344, 1.59 ) }
    dend_30 { pt3dadd( 22.8556, 8.04815, -2.02432, 0.68 ) }
    dend_30 { pt3dadd( 24.9121, 6.57887, -2.10194, 1.82 ) }
    dend_30 { pt3dadd( 27.0829, 5.01828, -2.18714, 0.91 ) }
    dend_30 { pt3dadd( 30.7658, 2.31261, -2.38938, 0.68 ) }
    dend_30 { pt3dadd( 32.6493, 0.915194, -2.54767, 0.68 ) }
    dend_30 { pt3dadd( 34.6139, -0.570554, -2.7722, 1.14 ) }
    dend_30 { pt3dadd( 35.9548, -1.59959, -2.96032, 1.14 ) }
    dend_30 { pt3dadd( 38.8601, -3.84477, -3.43271, 1.82 ) }
    dend_30 { pt3dadd( 41.2168, -5.61522, -3.86306, 0.23 ) }
    dend_30 { pt3dadd( 42.9869, -6.89289, -4.21858, 0.91 ) }
    dend_30 { pt3dadd( 45.0116, -8.43639, -4.59974, 1.14 ) }
    dend_30 { pt3dadd( 46.3612, -9.53689, -4.87628, 2.05 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 74/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 12.4409, 14.7895, -1.16149, 0.45 ) }
    dend_27 { pt3dadd( 13.8884, 14.9349, -1.27038, 0.45 ) }
    dend_27 { pt3dadd( 16.2108, 15.1664, -1.42234, 0.91 ) }
    dend_27 { pt3dadd( 18.1341, 15.3871, -1.5355, 0.45 ) }
    dend_27 { pt3dadd( 20.4362, 15.6661, -1.65353, 1.14 ) }
    dend_27 { pt3dadd( 23.4048, 16.1357, -1.76803, 0.68 ) }
    dend_27 { pt3dadd( 26.5335, 16.7283, -1.8632, 0.45 ) }
    dend_27 { pt3dadd( 28.3288, 17.1366, -1.90084, 0.91 ) }
    dend_27 { pt3dadd( 29.741, 17.5404, -1.91678, 0.91 ) }
    dend_27 { pt3dadd( 32.3243, 18.4029, -1.91465, 2.05 ) }
    dend_27 { pt3dadd( 36.1039, 19.7638, -1.87489, 0.68 ) }
    dend_27 { pt3dadd( 38.3594, 20.6413, -1.84468, 1.14 ) }
    dend_27 { pt3dadd( 40.3238, 21.4881, -1.81084, 0.68 ) }
    dend_27 { pt3dadd( 41.2897, 21.9412, -1.793, 1.59 ) }
    dend_27 { pt3dadd( 43.3805, 22.9656, -1.75322, 1.59 ) }
    // Section: dend_17, id: dend_17, parent: dend_5 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -8.69034, -30.7313, 0.0265991, 0.68 ) }
    dend_17 { pt3dadd( -12.3517, -31.7935, -0.208979, 0.68 ) }
    dend_17 { pt3dadd( -15.9918, -32.778, -0.326557, 0.68 ) }
    dend_17 { pt3dadd( -18.0555, -33.3052, -0.357094, 1.14 ) }
    dend_17 { pt3dadd( -22.0786, -34.1923, -0.425792, 0.68 ) }
    dend_17 { pt3dadd( -24.9745, -34.7461, -0.477959, 1.36 ) }
    dend_17 { pt3dadd( -27.5723, -35.1819, -0.544224, 0.45 ) }
    dend_17 { pt3dadd( -30.6239, -35.5206, -0.622042, 1.14 ) }
    dend_17 { pt3dadd( -33.5777, -35.7193, -0.686976, 0.23 ) }
    dend_17 { pt3dadd( -36.1888, -35.9444, -0.756219, 0.45 ) }
    dend_17 { pt3dadd( -37.4591, -36.109, -0.820695, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( -40.3991, -36.6829, -1.06073, 1.14 ) }
    dend_17 { pt3dadd( -42.7881, -37.3499, -1.32324, 0.23 ) }
    dend_17 { pt3dadd( -44.9043, -38.1662, -1.60357, 0.91 ) }
    dend_17 { pt3dadd( -47.7939, -39.5386, -1.93584, 0.45 ) }
    dend_17 { pt3dadd( -49.5193, -40.4748, -2.09215, 1.14 ) }
    dend_17 { pt3dadd( -51.9665, -41.8685, -2.26763, 0.23 ) }
    dend_17 { pt3dadd( -54.1105, -43.1169, -2.36912, 0.91 ) }
    dend_17 { pt3dadd( -56.5645, -44.5157, -2.42393, 0.68 ) }
    dend_17 { pt3dadd( -58.8583, -45.7448, -2.41398, 0.23 ) }
    dend_17 { pt3dadd( -60.5084, -46.5427, -2.34116, 0.91 ) }
    dend_17 { pt3dadd( -62.8562, -47.5314, -2.1487, 0.23 ) }
    dend_17 { pt3dadd( -65.7951, -48.6657, -1.8456, 0.91 ) }
    dend_17 { pt3dadd( -67.4255, -49.2883, -1.66689, 0.68 ) }
    dend_17 { pt3dadd( -69.9563, -50.3005, -1.38553, 0.68 ) }
    dend_17 { pt3dadd( -72.9001, -51.589, -1.06437, 1.36 ) }
    dend_17 { pt3dadd( -75.4302, -52.7704, -0.781777, 0.23 ) }
    dend_17 { pt3dadd( -76.5427, -53.3224, -0.661999, 0.23 ) }
    dend_17 { pt3dadd( -78.6727, -54.4344, -0.462191, 1.36 ) }
    dend_17 { pt3dadd( -80.0514, -55.2406, -0.34324, 1.36 ) }
    dend_17 { pt3dadd( -81.5676, -56.2427, -0.21945, 0.23 ) }
    dend_17 { pt3dadd( -83.6581, -57.8068, -0.124161, 0.91 ) }
    dend_17 { pt3dadd( -85.5863, -59.4218, -0.117343, 0.91 ) }
    dend_17 { pt3dadd( -87.4722, -61.1001, -0.158246, 0.23 ) }
    dend_17 { pt3dadd( -89.3736, -62.8882, -0.245716, 0.91 ) }
    dend_17 { pt3dadd( -90.8778, -64.363, -0.367736, 0.23 ) }
    dend_17 { pt3dadd( -92.5494, -66.147, -0.562803, 0.23 ) }
    dend_17 { pt3dadd( -93.7751, -67.6685, -0.744206, 0.23 ) }
    dend_17 { pt3dadd( -94.5544, -68.7281, -0.854755, 1.14 ) }
    dend_17 { pt3dadd( -95.3863, -69.9032, -0.942895, 0.45 ) }
    dend_17 { pt3dadd( -96.2614, -71.1497, -1.00645, 1.59 ) }
    dend_17 { pt3dadd( -98.5472, -74.4828, -1.05625, 0.68 ) }
    dend_17 { pt3dadd( -100.962, -78.0208, -0.953142, 0.68 ) }
    dend_17 { pt3dadd( -102.546, -80.246, -0.813895, 0.23 ) }
    dend_17 { pt3dadd( -104.053, -82.2655, -0.644457, 0.91 ) }
    dend_17 { pt3dadd( -105.096, -83.5616, -0.507005, 0.91 ) }
    dend_17 { pt3dadd( -105.93, -84.4671, -0.384867, 0.23 ) }
    dend_17 { pt3dadd( -107.21, -85.6985, -0.188143, 0.91 ) }
    dend_17 { pt3dadd( -109.099, -87.3716, 0.0826211, 0.23 ) }
    dend_17 { pt3dadd( -110.573, -88.6385, 0.250362, 0.45 ) }
    dend_17 { pt3dadd( -112.132, -89.9611, 0.391996, 1.14 ) }
    dend_17 { pt3dadd( -113.564, -91.1688, 0.505213, 0.23 ) }
    dend_17 { pt3dadd( -115.647, -92.9216, 0.642652, 0.91 ) }
    dend_17 { pt3dadd( -117.833, -94.733, 0.777348, 0.91 ) }
    dend_17 { pt3dadd( -119.214, -95.8569, 0.8582, 0.23 ) }
    dend_17 { pt3dadd( -121.101, -97.3593, 0.984375, 0.68 ) }
    dend_17 { pt3dadd( -122.611, -98.5555, 1.12137, 0.23 ) }
    dend_17 { pt3dadd( -123.332, -99.0959, 1.2071, 0.23 ) }
    dend_17 { pt3dadd( -125.379, -100.498, 1.47697, 0.91 ) }
    dend_17 { pt3dadd( -127.472, -101.872, 1.81115, 2.05 ) }
    dend_17 { pt3dadd( -130.244, -103.729, 2.30621, 0.68 ) }
    dend_17 { pt3dadd( -132.481, -105.254, 2.76047, 1.36 ) }
    dend_17 { pt3dadd( -134.763, -106.844, 3.25325, 0.45 ) }
    dend_17 { pt3dadd( -136.512, -108.096, 3.65171, 0.45 ) }
    dend_17 { pt3dadd( -138.522, -109.564, 4.11873, 0.23 ) }
    dend_17 { pt3dadd( -139.689, -110.42, 4.39712, 0.91 ) }
    dend_17 { pt3dadd( -141.084, -111.422, 4.71332, 0.23 ) }
    dend_17 { pt3dadd( -142.104, -112.126, 4.91581, 0.23 ) }
    dend_17 { pt3dadd( -144.236, -113.577, 5.28362, 1.14 ) }
    dend_17 { pt3dadd( -145.41, -114.343, 5.46347, 1.14 ) }
    dend_17 { pt3dadd( -148.152, -116.007, 5.82631, 0.23 ) }
    dend_17 { pt3dadd( -148.982, -116.468, 5.92506, 0.91 ) }
    dend_17 { pt3dadd( -150.774, -117.433, 6.10317, 1.59 ) }
    dend_17 { pt3dadd( -152.169, -118.195, 6.27131, 0.45 ) }
    dend_17 { pt3dadd( -152.961, -118.625, 6.38165, 1.14 ) }
    dend_17 { pt3dadd( -155.601, -120.035, 6.80284, 0.23 ) }
    dend_17 { pt3dadd( -156.883, -120.717, 7.01718, 1.36 ) }
    dend_17 { pt3dadd( -158.265, -121.47, 7.28474, 1.36 ) }
    dend_17 { pt3dadd( -162.103, -123.64, 8.09733, 0.23 ) }
    dend_17 { pt3dadd( -163.743, -124.611, 8.45671, 1.36 ) }
    dend_17 { pt3dadd( -164.311, -124.979, 8.58153, 2.27 ) }
    dend_17 { pt3dadd( -166.644, -126.676, 9.07403, 0.23 ) }
    dend_17 { pt3dadd( -168.302, -127.923, 9.43242, 0.68 ) }
    dend_17 { pt3dadd( -169.402, -128.786, 9.66364, 0.23 ) }
    dend_17 { pt3dadd( -170.654, -129.874, 9.87636, 0.91 ) }
    dend_17 { pt3dadd( -171.688, -130.904, 10.044, 0.23 ) }
    dend_17 { pt3dadd( -172.888, -132.283, 10.2455, 1.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.69034, -30.7313, 0.0265991, 2.27 ) }
    dend_6 { pt3dadd( -8.81996, -34.6408, 0.0265991, 2.27 ) }
    dend_6 { pt3dadd( -8.8525, -35.6223, 0.0265991, 2.27 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 79/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -125.954, 172.79, -1.25199, 0.23 ) }
    dend_38 { pt3dadd( -129.752, 173.868, -1.26584, 0.23 ) }
    dend_38 { pt3dadd( -131.794, 174.41, -1.26909, 0.91 ) }
    dend_38 { pt3dadd( -134.803, 175.127, -1.27017, 0.23 ) }
    dend_38 { pt3dadd( -136.795, 175.543, -1.22948, 0.91 ) }
    dend_38 { pt3dadd( -138.229, 175.818, -1.1845, 0.23 ) }
    dend_38 { pt3dadd( -140.535, 176.258, -1.13725, 0.23 ) }
    dend_38 { pt3dadd( -141.646, 176.424, -1.10908, 0.23 ) }
    dend_38 { pt3dadd( -143.221, 176.677, -1.12329, 0.91 ) }
    dend_38 { pt3dadd( -145.817, 177.043, -1.24817, 0.23 ) }
    dend_38 { pt3dadd( -146.76, 177.16, -1.29832, 0.68 ) }
    dend_38 { pt3dadd( -148.451, 177.357, -1.38951, 0.23 ) }
    dend_38 { pt3dadd( -149.188, 177.448, -1.41876, 1.14 ) }
    dend_38 { pt3dadd( -151.409, 177.702, -1.46845, 0.23 ) }
    dend_38 { pt3dadd( -154.183, 177.999, -1.46021, 1.14 ) }
    dend_38 { pt3dadd( -156.146, 178.204, -1.41799, 0.23 ) }
    dend_38 { pt3dadd( -158.283, 178.415, -1.28444, 0.68 ) }
    dend_38 { pt3dadd( -159.47, 178.529, -1.1524, 0.23 ) }
    dend_38 { pt3dadd( -161.948, 178.824, -0.812322, 0.91 ) }
    dend_38 { pt3dadd( -165.182, 179.296, -0.289287, 0.23 ) }
    dend_38 { pt3dadd( -167.542, 179.766, 0.0854196, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_38 { pt3dadd( -168.854, 180.058, 0.271692, 0.91 ) }
    dend_38 { pt3dadd( -170.787, 180.567, 0.527822, 0.23 ) }
    dend_38 { pt3dadd( -172.321, 181.04, 0.694094, 0.68 ) }
    dend_38 { pt3dadd( -174.116, 181.667, 0.867273, 0.23 ) }
    dend_38 { pt3dadd( -175.727, 182.236, 0.958619, 0.23 ) }
    dend_38 { pt3dadd( -177.058, 182.628, 0.982634, 0.68 ) }
    dend_38 { pt3dadd( -178.68, 183.091, 0.95769, 0.23 ) }
    dend_38 { pt3dadd( -180.892, 183.667, 0.861457, 0.23 ) }
    dend_38 { pt3dadd( -182.471, 184.0, 0.779058, 0.68 ) }
    dend_38 { pt3dadd( -183.787, 184.22, 0.693412, 0.23 ) }
    dend_38 { pt3dadd( -185.909, 184.398, 0.523436, 0.91 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -125.954, 172.79, -1.25199, 0.23 ) }
    dend_37 { pt3dadd( -127.824, 174.89, -0.720463, 0.23 ) }
    dend_37 { pt3dadd( -128.265, 175.466, -0.60356, 0.68 ) }
    dend_37 { pt3dadd( -129.487, 177.186, -0.26249, 0.23 ) }
    dend_37 { pt3dadd( -130.773, 179.029, -0.0709637, 0.23 ) }
    dend_37 { pt3dadd( -131.678, 180.309, -0.0111578, 0.68 ) }
    dend_37 { pt3dadd( -132.828, 181.914, 0.0183411, 0.23 ) }
    dend_37 { pt3dadd( -133.66, 183.128, 0.0130317, 0.68 ) }
    dend_37 { pt3dadd( -135.438, 185.63, -0.0882466, 0.23 ) }
    dend_37 { pt3dadd( -137.07, 187.831, -0.260264, 0.91 ) }
    dend_37 { pt3dadd( -139.162, 190.571, -0.495612, 0.23 ) }
    dend_37 { pt3dadd( -140.414, 192.146, -0.642551, 0.23 ) }
    dend_37 { pt3dadd( -141.948, 193.967, -0.827611, 0.91 ) }
    dend_37 { pt3dadd( -143.69, 195.971, -1.04319, 0.23 ) }
    dend_37 { pt3dadd( -145.037, 197.489, -1.21035, 0.68 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 26/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 46.3612, -9.53689, -4.87628, 0.45 ) }
    dend_32 { pt3dadd( 47.3055, -11.9751, -5.24138, 0.45 ) }
    dend_32 { pt3dadd( 47.8207, -13.1802, -5.37916, 0.91 ) }
    dend_32 { pt3dadd( 48.3718, -14.1548, -5.46171, 0.23 ) }
    dend_32 { pt3dadd( 48.8368, -14.8837, -5.52245, 0.91 ) }
    dend_32 { pt3dadd( 49.3435, -15.5973, -5.57858, 0.91 ) }
    dend_32 { pt3dadd( 50.8008, -17.4722, -5.70666, 0.23 ) }
    dend_32 { pt3dadd( 51.7791, -18.5869, -5.77281, 1.59 ) }
    dend_32 { pt3dadd( 53.9258, -20.8987, -5.94888, 0.45 ) }
    dend_32 { pt3dadd( 55.116, -22.123, -6.06233, 0.45 ) }
    dend_32 { pt3dadd( 56.5983, -23.6054, -6.22951, 1.36 ) }
    dend_32 { pt3dadd( 59.4407, -26.3532, -6.57919, 0.68 ) }
    dend_32 { pt3dadd( 61.3192, -28.1032, -6.8573, 0.68 ) }
    dend_32 { pt3dadd( 62.9137, -29.5375, -7.12045, 1.14 ) }
    dend_32 { pt3dadd( 66.0073, -32.1946, -7.66368, 0.45 ) }
    dend_32 { pt3dadd( 66.7624, -32.7991, -7.79631, 1.14 ) }
    dend_32 { pt3dadd( 68.2931, -33.9878, -8.08048, 0.23 ) }
    dend_32 { pt3dadd( 69.9783, -35.2734, -8.40793, 1.36 ) }
    dend_32 { pt3dadd( 70.5484, -35.7124, -8.51156, 2.05 ) }
    dend_32 { pt3dadd( 72.4027, -37.2149, -8.82465, 0.23 ) }
    dend_32 { pt3dadd( 74.249, -38.8662, -9.13148, 0.23 ) }
    dend_32 { pt3dadd( 75.7658, -40.2914, -9.3673, 1.14 ) }
    dend_32 { pt3dadd( 77.3017, -41.8518, -9.60013, 0.23 ) }
    dend_32 { pt3dadd( 78.2684, -42.9265, -9.72458, 1.36 ) }
    dend_32 { pt3dadd( 79.4087, -44.3234, -9.88397, 1.59 ) }
    dend_32 { pt3dadd( 80.6873, -46.1863, -10.0856, 0.45 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 52/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 46.3612, -9.53689, -4.87628, 0.68 ) }
    dend_31 { pt3dadd( 50.0495, -10.1318, -4.86485, 0.68 ) }
    dend_31 { pt3dadd( 51.7495, -10.3978, -4.88601, 0.23 ) }
    dend_31 { pt3dadd( 52.8699, -10.5631, -4.94012, 0.68 ) }
    dend_31 { pt3dadd( 54.3296, -10.7859, -5.02654, 0.23 ) }
    dend_31 { pt3dadd( 55.658, -11.0361, -5.10799, 0.91 ) }
    dend_31 { pt3dadd( 58.1578, -11.5728, -5.25548, 0.23 ) }
    dend_31 { pt3dadd( 60.2512, -12.0564, -5.34238, 1.14 ) }
    dend_31 { pt3dadd( 64.3891, -12.983, -5.44065, 0.45 ) }
    dend_31 { pt3dadd( 65.6417, -13.2371, -5.44482, 0.91 ) }
    dend_31 { pt3dadd( 68.625, -13.7305, -5.40655, 0.23 ) }
    dend_31 { pt3dadd( 71.5518, -14.0882, -5.33406, 0.91 ) }
    dend_31 { pt3dadd( 74.1733, -14.2725, -5.23358, 0.23 ) }
    dend_31 { pt3dadd( 77.4675, -14.2884, -5.08131, 0.91 ) }
    dend_31 { pt3dadd( 80.9017, -14.0265, -4.91062, 0.23 ) }
    dend_31 { pt3dadd( 83.6416, -13.5572, -4.81566, 0.68 ) }
    dend_31 { pt3dadd( 85.1932, -13.1047, -4.79216, 0.23 ) }
    dend_31 { pt3dadd( 86.6973, -12.5307, -4.82718, 1.14 ) }
    dend_31 { pt3dadd( 88.2218, -11.8615, -4.935, 0.23 ) }
    dend_31 { pt3dadd( 90.4536, -10.7869, -5.16518, 0.91 ) }
    dend_31 { pt3dadd( 92.347, -9.84836, -5.4264, 0.23 ) }
    dend_31 { pt3dadd( 93.9482, -9.05342, -5.67563, 1.14 ) }
    dend_31 { pt3dadd( 95.4628, -8.32817, -5.90603, 0.23 ) }
    dend_31 { pt3dadd( 97.506, -7.36788, -6.24177, 1.82 ) }
    dend_31 { pt3dadd( 98.5545, -6.89381, -6.42413, 2.27 ) }
    dend_31 { pt3dadd( 101.621, -5.52303, -7.04662, 0.23 ) }
    dend_31 { pt3dadd( 102.291, -5.26166, -7.18549, 0.23 ) }
    dend_31 { pt3dadd( 104.741, -4.40299, -7.6804, 0.68 ) }
    dend_31 { pt3dadd( 106.913, -3.75438, -8.07355, 0.23 ) }
    dend_31 { pt3dadd( 108.612, -3.35182, -8.35545, 1.36 ) }
    dend_31 { pt3dadd( 111.332, -2.95442, -8.73507, 0.23 ) }
    dend_31 { pt3dadd( 114.101, -2.80901, -9.0345, 0.23 ) }
    dend_31 { pt3dadd( 115.231, -2.82194, -9.13964, 1.14 ) }
    dend_31 { pt3dadd( 118.003, -3.06237, -9.33349, 0.23 ) }
    dend_31 { pt3dadd( 119.389, -3.24821, -9.38011, 0.68 ) }
    dend_31 { pt3dadd( 121.664, -3.59472, -9.40747, 0.23 ) }
    dend_31 { pt3dadd( 122.269, -3.69928, -9.40747, 1.59 ) }
    dend_31 { pt3dadd( 123.206, -3.86717, -9.40747, 0.23 ) }
    dend_31 { pt3dadd( 125.079, -4.20641, -9.40747, 1.36 ) }
    dend_31 { pt3dadd( 127.762, -4.64579, -9.40747, 0.23 ) }
    dend_31 { pt3dadd( 130.241, -4.95006, -9.40747, 0.91 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 93/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 43.3805, 22.9656, -1.75322, 0.23 ) }
    dend_29 { pt3dadd( 46.4277, 23.8977, -1.95519, 0.23 ) }
    dend_29 { pt3dadd( 48.4317, 24.5772, -2.03305, 0.23 ) }
    dend_29 { pt3dadd( 49.9966, 25.105, -2.06717, 1.36 ) }
    dend_29 { pt3dadd( 52.1608, 25.8334, -2.14475, 1.36 ) }
    dend_29 { pt3dadd( 55.1255, 26.8168, -2.26911, 0.23 ) }
    dend_29 { pt3dadd( 56.5193, 27.2623, -2.32968, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_29 { pt3dadd( 59.3166, 28.162, -2.45335, 0.91 ) }
    dend_29 { pt3dadd( 62.3846, 29.0369, -2.58834, 0.23 ) }
    dend_29 { pt3dadd( 64.8103, 29.6204, -2.68627, 1.59 ) }
    dend_29 { pt3dadd( 65.7057, 29.7929, -2.72321, 1.59 ) }
    dend_29 { pt3dadd( 68.8575, 30.2538, -2.84822, 0.45 ) }
    dend_29 { pt3dadd( 70.4631, 30.4243, -2.94886, 0.45 ) }
    dend_29 { pt3dadd( 73.0225, 30.6128, -3.12284, 0.23 ) }
    dend_29 { pt3dadd( 74.4911, 30.6888, -3.21554, 1.14 ) }
    dend_29 { pt3dadd( 76.6236, 30.7731, -3.29969, 0.23 ) }
    dend_29 { pt3dadd( 78.0138, 30.8207, -3.345, 0.68 ) }
    dend_29 { pt3dadd( 80.5802, 30.9392, -3.4097, 0.23 ) }
    dend_29 { pt3dadd( 83.564, 31.1562, -3.46104, 1.14 ) }
    dend_29 { pt3dadd( 86.9886, 31.5613, -3.53682, 0.23 ) }
    dend_29 { pt3dadd( 89.1006, 31.9058, -3.59635, 0.23 ) }
    dend_29 { pt3dadd( 90.2553, 32.1645, -3.63336, 1.59 ) }
    dend_29 { pt3dadd( 92.7897, 32.8668, -3.73695, 0.23 ) }
    dend_29 { pt3dadd( 93.9832, 33.2874, -3.806, 0.23 ) }
    dend_29 { pt3dadd( 95.1839, 33.815, -3.91564, 0.68 ) }
    dend_29 { pt3dadd( 96.4775, 34.4778, -4.12296, 0.68 ) }
    dend_29 { pt3dadd( 99.1407, 35.8768, -4.68174, 0.23 ) }
    dend_29 { pt3dadd( 100.325, 36.4472, -4.95668, 0.23 ) }
    dend_29 { pt3dadd( 101.393, 36.9093, -5.22449, 1.82 ) }
    dend_29 { pt3dadd( 102.017, 37.1374, -5.37429, 1.82 ) }
    dend_29 { pt3dadd( 104.175, 37.7768, -5.83326, 0.23 ) }
    dend_29 { pt3dadd( 105.995, 38.228, -6.18728, 0.68 ) }
    dend_29 { pt3dadd( 108.708, 38.7917, -6.64341, 0.23 ) }
    dend_29 { pt3dadd( 109.784, 39.0159, -6.79683, 0.91 ) }
    dend_29 { pt3dadd( 111.571, 39.4005, -7.02811, 0.23 ) }
    dend_29 { pt3dadd( 113.535, 39.8733, -7.26906, 1.14 ) }
    dend_29 { pt3dadd( 116.211, 40.5922, -7.55112, 0.23 ) }
    dend_29 { pt3dadd( 118.173, 41.1695, -7.78591, 1.14 ) }
    dend_29 { pt3dadd( 120.116, 41.8076, -8.02463, 0.23 ) }
    dend_29 { pt3dadd( 121.504, 42.2834, -8.19653, 0.91 ) }
    dend_29 { pt3dadd( 123.376, 42.9747, -8.44721, 0.23 ) }
    dend_29 { pt3dadd( 125.335, 43.7364, -8.71905, 1.36 ) }
    dend_29 { pt3dadd( 126.905, 44.3485, -8.93338, 0.23 ) }
    dend_29 { pt3dadd( 128.799, 45.1162, -9.18825, 0.91 ) }
    dend_29 { pt3dadd( 131.926, 46.4499, -9.61312, 0.23 ) }
    dend_29 { pt3dadd( 133.695, 47.2109, -9.84133, 1.14 ) }
    dend_29 { pt3dadd( 134.667, 47.6291, -9.96667, 0.23 ) }
    dend_29 { pt3dadd( 135.702, 48.0873, -10.1008, 1.14 ) }
    dend_29 { pt3dadd( 137.693, 48.9997, -10.326, 0.23 ) }
    dend_29 { pt3dadd( 139.205, 49.7727, -10.552, 1.36 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 43/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 43.3805, 22.9656, -1.75322, 0.23 ) }
    dend_28 { pt3dadd( 45.1179, 24.2199, -2.13307, 0.23 ) }
    dend_28 { pt3dadd( 46.0452, 24.8999, -2.32767, 0.91 ) }
    dend_28 { pt3dadd( 47.4919, 25.9182, -2.60393, 0.23 ) }
    dend_28 { pt3dadd( 48.975, 26.8688, -2.8587, 0.68 ) }
    dend_28 { pt3dadd( 50.5291, 27.7411, -3.06969, 0.68 ) }
    dend_28 { pt3dadd( 53.158, 29.1572, -3.36082, 0.23 ) }
    dend_28 { pt3dadd( 54.4527, 29.8108, -3.49818, 0.91 ) }
    dend_28 { pt3dadd( 55.8789, 30.5386, -3.63527, 0.91 ) }
    dend_28 { pt3dadd( 58.5498, 31.9203, -3.8651, 0.23 ) }
    dend_28 { pt3dadd( 61.1338, 33.3221, -4.08289, 0.68 ) }
    dend_28 { pt3dadd( 63.5998, 34.7003, -4.33548, 0.23 ) }
    dend_28 { pt3dadd( 65.246, 35.6608, -4.54097, 0.91 ) }
    dend_28 { pt3dadd( 67.031, 36.7705, -4.80997, 0.91 ) }
    dend_28 { pt3dadd( 68.6277, 37.8906, -5.13132, 0.23 ) }
    dend_28 { pt3dadd( 70.5856, 39.5139, -5.68182, 1.14 ) }
    dend_28 { pt3dadd( 72.3808, 41.2272, -6.32331, 0.23 ) }
    dend_28 { pt3dadd( 73.3867, 42.3024, -6.72092, 0.23 ) }
    dend_28 { pt3dadd( 74.1206, 43.2239, -7.0094, 0.23 ) }
    dend_28 { pt3dadd( 75.6738, 45.4236, -7.60861, 0.91 ) }
    dend_28 { pt3dadd( 77.3771, 48.0812, -8.21757, 0.45 ) }
    dend_28 { pt3dadd( 77.9767, 49.1122, -8.41093, 0.45 ) }
    dend_28 { pt3dadd( 79.3089, 51.6055, -8.82047, 1.59 ) }
    dend_28 { pt3dadd( 81.2201, 55.1499, -9.32188, 0.45 ) }
    dend_28 { pt3dadd( 81.9014, 56.3733, -9.47133, 0.68 ) }
    dend_28 { pt3dadd( 82.4375, 57.3045, -9.55324, 0.23 ) }
    dend_28 { pt3dadd( 83.4631, 58.9332, -9.69327, 0.91 ) }
    dend_28 { pt3dadd( 85.0574, 61.267, -9.95157, 0.23 ) }
    dend_28 { pt3dadd( 86.0016, 62.5229, -10.1212, 0.23 ) }
    dend_28 { pt3dadd( 86.5466, 63.1936, -10.2266, 1.36 ) }
    dend_28 { pt3dadd( 87.1944, 64.0326, -10.3491, 1.36 ) }
    dend_28 { pt3dadd( 88.5042, 65.7945, -10.5882, 0.23 ) }
    dend_28 { pt3dadd( 89.8847, 67.7334, -10.8198, 0.68 ) }
    dend_28 { pt3dadd( 91.0735, 69.4554, -11.0, 0.23 ) }
    dend_28 { pt3dadd( 92.871, 72.0911, -11.2585, 1.14 ) }
    dend_28 { pt3dadd( 94.6877, 74.815, -11.5177, 0.23 ) }
    dend_28 { pt3dadd( 95.9957, 76.8317, -11.6961, 0.91 ) }
    dend_28 { pt3dadd( 96.8225, 78.1398, -11.7921, 1.59 ) }
    dend_28 { pt3dadd( 97.6656, 79.4849, -11.8948, 0.91 ) }
    dend_28 { pt3dadd( 98.9274, 81.5668, -12.0518, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 83/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -172.888, -132.283, 10.2455, 0.23 ) }
    dend_19 { pt3dadd( -174.527, -132.716, 11.5822, 0.23 ) }
    dend_19 { pt3dadd( -175.04, -132.868, 11.9881, 1.14 ) }
    dend_19 { pt3dadd( -176.834, -133.383, 13.3767, 0.23 ) }
    dend_19 { pt3dadd( -177.517, -133.594, 13.9065, 0.91 ) }
    dend_19 { pt3dadd( -179.731, -134.411, 15.5569, 0.23 ) }
    dend_19 { pt3dadd( -180.83, -134.848, 16.3876, 0.91 ) }
    dend_19 { pt3dadd( -183.125, -135.873, 18.0769, 0.23 ) }
    dend_19 { pt3dadd( -184.573, -136.541, 19.1453, 0.91 ) }
    dend_19 { pt3dadd( -185.904, -137.174, 20.1006, 0.23 ) }
    dend_19 { pt3dadd( -187.553, -137.944, 21.3136, 1.14 ) }
    dend_19 { pt3dadd( -189.766, -139.007, 22.9406, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 95/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -172.888, -132.283, 10.2455, 0.23 ) }
    dend_18 { pt3dadd( -174.231, -135.111, 9.67246, 0.23 ) }
    dend_18 { pt3dadd( -175.144, -137.11, 9.22294, 1.59 ) }
    dend_18 { pt3dadd( -176.477, -140.103, 8.47645, 0.23 ) }
    dend_18 { pt3dadd( -177.391, -142.022, 7.87781, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( -178.14, -143.418, 7.3794, 0.23 ) }
    dend_18 { pt3dadd( -178.919, -144.689, 6.88383, 0.23 ) }
    dend_18 { pt3dadd( -179.991, -145.967, 6.27798, 1.36 ) }
    dend_18 { pt3dadd( -181.414, -147.243, 5.53372, 2.27 ) }
    dend_18 { pt3dadd( -183.066, -148.367, 4.76781, 0.23 ) }
    dend_18 { pt3dadd( -184.561, -149.12, 4.20313, 1.14 ) }
    dend_18 { pt3dadd( -186.068, -149.688, 3.73452, 0.23 ) }
    dend_18 { pt3dadd( -187.86, -150.203, 3.31633, 1.14 ) }
    dend_18 { pt3dadd( -188.583, -150.318, 3.22134, 1.14 ) }
    dend_18 { pt3dadd( -190.052, -150.422, 3.12265, 0.23 ) }
    dend_18 { pt3dadd( -190.734, -150.425, 3.10025, 0.23 ) }
    dend_18 { pt3dadd( -191.636, -150.284, 3.08377, 1.36 ) }
    dend_18 { pt3dadd( -192.26, -150.04, 3.11167, 1.36 ) }
    dend_18 { pt3dadd( -194.759, -148.72, 3.35006, 0.23 ) }
    dend_18 { pt3dadd( -195.27, -148.42, 3.41178, 0.23 ) }
    dend_18 { pt3dadd( -196.837, -147.394, 3.6213, 0.23 ) }
    dend_18 { pt3dadd( -198.759, -146.089, 3.85197, 1.14 ) }
    dend_18 { pt3dadd( -200.222, -145.134, 4.01115, 0.23 ) }
    dend_18 { pt3dadd( -202.543, -143.915, 4.23097, 0.23 ) }
    dend_18 { pt3dadd( -203.888, -143.447, 4.28889, 1.36 ) }
    dend_18 { pt3dadd( -205.974, -142.84, 4.36214, 0.23 ) }
    dend_18 { pt3dadd( -207.783, -142.45, 4.38961, 1.14 ) }
    dend_18 { pt3dadd( -209.164, -142.235, 4.30142, 1.14 ) }
    dend_18 { pt3dadd( -212.401, -141.953, 3.89623, 0.23 ) }
    dend_18 { pt3dadd( -215.176, -142.096, 3.44686, 1.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_6 (entry count 25/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -8.8525, -35.6223, 0.0265991, 0.23 ) }
    dend_16 { pt3dadd( -8.26412, -38.39, 1.56569, 0.23 ) }
    dend_16 { pt3dadd( -8.2001, -39.1221, 1.94136, 0.23 ) }
    dend_16 { pt3dadd( -8.12321, -40.6308, 2.723, 0.23 ) }
    dend_16 { pt3dadd( -8.07868, -41.7611, 3.26309, 1.14 ) }
    dend_16 { pt3dadd( -8.03678, -43.5307, 4.04677, 0.23 ) }
    dend_16 { pt3dadd( -8.01803, -44.9416, 4.64786, 1.14 ) }
    dend_16 { pt3dadd( -8.07313, -47.1359, 5.4525, 0.23 ) }
    dend_16 { pt3dadd( -8.13042, -49.3685, 6.2378, 0.23 ) }
    dend_16 { pt3dadd( -8.15764, -51.2225, 6.85094, 1.36 ) }
    dend_16 { pt3dadd( -8.26628, -54.9167, 8.02644, 0.23 ) }
    dend_16 { pt3dadd( -8.32153, -56.0725, 8.36452, 0.23 ) }
    dend_16 { pt3dadd( -8.39144, -57.7172, 8.81725, 0.91 ) }
    dend_16 { pt3dadd( -8.41435, -58.5343, 9.02479, 0.91 ) }
    dend_16 { pt3dadd( -8.47887, -60.7139, 9.54039, 0.23 ) }
    dend_16 { pt3dadd( -8.52389, -62.4182, 9.95866, 0.23 ) }
    dend_16 { pt3dadd( -8.50253, -64.3168, 10.4022, 0.68 ) }
    dend_16 { pt3dadd( -8.33813, -67.9173, 11.2601, 0.23 ) }
    dend_16 { pt3dadd( -8.2374, -68.9967, 11.5317, 1.36 ) }
    dend_16 { pt3dadd( -8.12518, -69.9059, 11.7661, 1.36 ) }
    dend_16 { pt3dadd( -7.74543, -72.2162, 12.3436, 0.45 ) }
    dend_16 { pt3dadd( -7.32072, -74.1455, 12.7823, 1.14 ) }
    dend_16 { pt3dadd( -6.72602, -76.3595, 13.2926, 0.23 ) }
    dend_16 { pt3dadd( -6.21872, -77.9901, 13.6332, 0.45 ) }
    dend_16 { pt3dadd( -5.43481, -80.4107, 14.1526, 0.23 ) }
    dend_16 { pt3dadd( -4.81151, -82.289, 14.5416, 0.23 ) }
    dend_16 { pt3dadd( -4.26085, -83.9415, 14.9011, 0.91 ) }
    dend_16 { pt3dadd( -3.57573, -86.3434, 15.4944, 0.23 ) }
    dend_16 { pt3dadd( -2.9508, -88.7603, 16.1101, 0.91 ) }
    dend_16 { pt3dadd( -2.65219, -90.0367, 16.4352, 0.23 ) }
    dend_16 { pt3dadd( -2.24735, -91.9311, 16.9457, 1.14 ) }
    dend_16 { pt3dadd( -1.93991, -94.2464, 17.6599, 0.23 ) }
    dend_16 { pt3dadd( -1.84839, -96.1927, 18.2835, 0.91 ) }
    dend_16 { pt3dadd( -1.95112, -97.5363, 18.7449, 0.23 ) }
    dend_16 { pt3dadd( -2.2507, -100.026, 19.649, 0.23 ) }
    dend_16 { pt3dadd( -2.40792, -101.028, 20.0144, 0.91 ) }
    dend_16 { pt3dadd( -3.08437, -104.38, 21.2706, 0.23 ) }
    dend_16 { pt3dadd( -3.46771, -106.034, 21.8579, 1.14 ) }
    dend_16 { pt3dadd( -4.38127, -109.531, 23.146, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.8525, -35.6223, 0.0265991, 1.59 ) }
    dend_7 { pt3dadd( -8.9621, -37.2756, -0.0441376, 1.59 ) }
    dend_7 { pt3dadd( -9.1306, -39.8176, -0.152893, 2.27 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 67/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -9.1306, -39.8176, -0.152893, 0.23 ) }
    dend_11 { pt3dadd( -8.60988, -43.041, 0.136597, 0.23 ) }
    dend_11 { pt3dadd( -8.21412, -45.3015, 0.324829, 0.45 ) }
    dend_11 { pt3dadd( -7.85744, -46.9514, 0.441143, 1.36 ) }
    dend_11 { pt3dadd( -7.32579, -49.117, 0.516459, 1.36 ) }
    dend_11 { pt3dadd( -6.69109, -51.5583, 0.554088, 0.91 ) }
    dend_11 { pt3dadd( -6.02979, -54.0031, 0.54256, 1.14 ) }
    dend_11 { pt3dadd( -5.63218, -55.4963, 0.495518, 1.14 ) }
    dend_11 { pt3dadd( -4.63825, -59.2317, 0.285678, 0.91 ) }
    dend_11 { pt3dadd( -3.99618, -61.6812, 0.0930235, 1.14 ) }
    dend_11 { pt3dadd( -3.59285, -63.3071, -0.0596092, 1.14 ) }
    dend_11 { pt3dadd( -3.12467, -65.3088, -0.264246, 0.23 ) }
    dend_11 { pt3dadd( -2.61464, -67.7915, -0.516837, 0.23 ) }
    dend_11 { pt3dadd( -2.3865, -69.1579, -0.639806, 0.23 ) }
    dend_11 { pt3dadd( -2.17134, -70.8762, -0.762186, 2.05 ) }
    dend_11 { pt3dadd( -1.863, -73.6369, -0.885959, 1.59 ) }
    dend_11 { pt3dadd( -1.67362, -75.3688, -0.948467, 1.59 ) }
    dend_11 { pt3dadd( -1.45154, -77.3143, -0.994215, 0.45 ) }
    dend_11 { pt3dadd( -1.19223, -79.2449, -1.01405, 1.14 ) }
    dend_11 { pt3dadd( -0.918035, -81.1868, -1.01, 1.14 ) }
    dend_11 { pt3dadd( -0.551114, -83.9536, -0.990651, 1.59 ) }
    dend_11 { pt3dadd( -0.305348, -85.886, -0.998896, 1.14 ) }
    dend_11 { pt3dadd( 0.0548502, -89.2224, -1.04251, 0.68 ) }
    dend_11 { pt3dadd( 0.233293, -91.0805, -1.08042, 1.14 ) }
    dend_11 { pt3dadd( 0.443031, -93.5871, -1.14541, 0.23 ) }
    dend_11 { pt3dadd( 0.603953, -95.9333, -1.21379, 1.59 ) }
    dend_11 { pt3dadd( 0.6788, -98.0051, -1.27434, 0.68 ) }
    dend_11 { pt3dadd( 0.710827, -99.5435, -1.32016, 0.91 ) }
    dend_11 { pt3dadd( 0.731822, -101.774, -1.38633, 0.91 ) }
    dend_11 { pt3dadd( 0.769497, -105.118, -1.47922, 1.36 ) }
    dend_11 { pt3dadd( 0.861109, -108.471, -1.5407, 0.91 ) }
    dend_11 { pt3dadd( 1.096, -113.006, -1.58322, 1.14 ) }
    dend_11 { pt3dadd( 1.24331, -115.245, -1.56989, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 1.41299, -117.46, -1.5407, 1.14 ) }
    dend_11 { pt3dadd( 1.58247, -120.254, -1.4871, 0.23 ) }
    dend_11 { pt3dadd( 1.67616, -122.523, -1.43221, 0.68 ) }
    dend_11 { pt3dadd( 1.72276, -125.073, -1.36128, 0.45 ) }
    dend_11 { pt3dadd( 1.72087, -126.666, -1.32466, 2.05 ) }
    dend_11 { pt3dadd( 1.60467, -130.65, -1.2545, 0.91 ) }
    dend_11 { pt3dadd( 1.38006, -135.302, -1.20041, 0.45 ) }
    dend_11 { pt3dadd( 1.25633, -137.1, -1.19125, 0.91 ) }
    dend_11 { pt3dadd( 1.05038, -139.356, -1.20112, 0.91 ) }
    dend_11 { pt3dadd( 0.775903, -141.896, -1.23828, 0.23 ) }
    dend_11 { pt3dadd( 0.631403, -143.286, -1.27241, 0.91 ) }
    dend_11 { pt3dadd( 0.402875, -146.066, -1.33162, 0.45 ) }
    dend_11 { pt3dadd( 0.265735, -148.608, -1.34993, 1.36 ) }
    dend_11 { pt3dadd( 0.176236, -150.823, -1.33231, 0.68 ) }
    dend_11 { pt3dadd( 0.145477, -151.778, -1.3089, 1.14 ) }
    dend_11 { pt3dadd( 0.11064, -153.762, -1.22884, 0.23 ) }
    dend_11 { pt3dadd( 0.154938, -155.448, -1.15094, 0.68 ) }
    dend_11 { pt3dadd( 0.312765, -157.434, -1.05812, 0.23 ) }
    dend_11 { pt3dadd( 0.47007, -158.832, -0.99646, 0.91 ) }
    dend_11 { pt3dadd( 0.700723, -160.499, -0.928696, 0.91 ) }
    dend_11 { pt3dadd( 1.22261, -164.348, -0.804524, 0.23 ) }
    dend_11 { pt3dadd( 1.53066, -167.007, -0.74614, 1.36 ) }
    dend_11 { pt3dadd( 1.94382, -171.18, -0.649488, 0.23 ) }
    dend_11 { pt3dadd( 2.11813, -173.181, -0.60641, 1.14 ) }
    dend_11 { pt3dadd( 2.17955, -174.042, -0.584841, 1.14 ) }
    dend_11 { pt3dadd( 2.33062, -176.63, -0.489615, 0.23 ) }
    dend_11 { pt3dadd( 2.41531, -178.957, -0.378504, 0.91 ) }
    dend_11 { pt3dadd( 2.4364, -180.416, -0.299218, 1.82 ) }
    dend_11 { pt3dadd( 2.44133, -181.802, -0.201194, 1.82 ) }
    dend_11 { pt3dadd( 2.50244, -185.419, 0.0832753, 0.45 ) }
    dend_11 { pt3dadd( 2.55721, -187.226, 0.247924, 1.14 ) }
    dend_11 { pt3dadd( 2.62036, -188.356, 0.369765, 1.14 ) }
    dend_11 { pt3dadd( 2.76669, -190.286, 0.588997, 0.23 ) }
    dend_11 { pt3dadd( 3.03968, -193.165, 0.908116, 0.23 ) }
    dend_11 { pt3dadd( 3.16637, -194.29, 1.03348, 1.36 ) }
    dend_11 { pt3dadd( 3.36162, -195.76, 1.1768, 1.36 ) }
    dend_11 { pt3dadd( 3.71685, -198.274, 1.36223, 0.23 ) }
    dend_11 { pt3dadd( 4.04696, -200.477, 1.51609, 0.91 ) }
    dend_11 { pt3dadd( 4.30165, -202.006, 1.61083, 0.91 ) }
    dend_11 { pt3dadd( 4.85628, -205.021, 1.7593, 0.23 ) }
    dend_11 { pt3dadd( 5.24073, -207.067, 1.8422, 0.45 ) }
    dend_11 { pt3dadd( 5.71135, -209.529, 1.92309, 0.91 ) }
    dend_11 { pt3dadd( 6.16691, -211.791, 1.99315, 0.45 ) }
    dend_11 { pt3dadd( 6.49215, -213.558, 2.05489, 1.14 ) }
    dend_11 { pt3dadd( 6.70445, -214.95, 2.12302, 1.14 ) }
    dend_11 { pt3dadd( 7.00928, -217.2, 2.2742, 0.23 ) }
    dend_11 { pt3dadd( 7.11117, -218.07, 2.34559, 1.14 ) }
    dend_11 { pt3dadd( 7.30484, -219.774, 2.49854, 1.14 ) }
    dend_11 { pt3dadd( 7.71214, -223.422, 2.82463, 0.23 ) }
    dend_11 { pt3dadd( 8.0645, -226.547, 3.12084, 0.68 ) }
    dend_11 { pt3dadd( 8.27507, -228.244, 3.28103, 1.59 ) }
    dend_11 { pt3dadd( 8.43918, -229.334, 3.38189, 2.05 ) }
    dend_11 { pt3dadd( 9.18525, -233.242, 3.70804, 0.23 ) }
    dend_11 { pt3dadd( 9.52009, -234.609, 3.81863, 1.14 ) }
    dend_11 { pt3dadd( 9.8493, -235.626, 3.89349, 1.59 ) }
    dend_11 { pt3dadd( 10.7921, -237.964, 4.02075, 0.45 ) }
    dend_11 { pt3dadd( 11.6718, -239.924, 4.14748, 0.91 ) }
    dend_11 { pt3dadd( 12.8055, -242.262, 4.35735, 0.23 ) }
    dend_11 { pt3dadd( 13.8045, -244.185, 4.56629, 1.14 ) }
    dend_11 { pt3dadd( 14.4323, -245.307, 4.70758, 1.14 ) }
    dend_11 { pt3dadd( 16.5352, -248.872, 5.19708, 0.23 ) }
    dend_11 { pt3dadd( 17.8905, -251.013, 5.50927, 0.23 ) }
    dend_11 { pt3dadd( 18.8244, -252.458, 5.71605, 0.68 ) }
    dend_11 { pt3dadd( 19.344, -253.251, 5.81949, 0.68 ) }
    dend_11 { pt3dadd( 20.5471, -255.167, 6.02452, 0.23 ) }
    dend_11 { pt3dadd( 21.8143, -257.204, 6.22434, 1.36 ) }
    dend_11 { pt3dadd( 23.3941, -259.768, 6.41657, 0.45 ) }
    dend_11 { pt3dadd( 24.4859, -261.537, 6.46516, 1.14 ) }
    dend_11 { pt3dadd( 25.2541, -262.825, 6.46397, 0.23 ) }
    dend_11 { pt3dadd( 26.2078, -264.537, 6.45796, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.1306, -39.8176, -0.152893, 0.91 ) }
    dend_8 { pt3dadd( -10.829, -42.5221, 0.303848, 0.91 ) }
    dend_8 { pt3dadd( -12.1377, -44.6061, 0.655796, 0.91 ) }
    dend_8 { pt3dadd( -13.302, -46.4602, 0.968914, 0.68 ) }
    dend_8 { pt3dadd( -13.9888, -47.5539, 1.15362, 1.36 ) }
    dend_8 { pt3dadd( -14.9971, -49.1596, 1.42479, 1.59 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 76/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 26.2078, -264.537, 6.45796, 0.23 ) }
    dend_15 { pt3dadd( 28.9245, -264.557, 5.70757, 0.23 ) }
    dend_15 { pt3dadd( 30.823, -264.577, 5.20614, 0.91 ) }
    dend_15 { pt3dadd( 33.3809, -264.627, 4.55604, 0.23 ) }
    dend_15 { pt3dadd( 35.6602, -264.671, 3.97673, 1.14 ) }
    dend_15 { pt3dadd( 38.1583, -264.72, 3.34181, 0.23 ) }
    dend_15 { pt3dadd( 38.8303, -264.733, 3.17101, 0.68 ) }
    dend_15 { pt3dadd( 40.08, -264.644, 2.91208, 0.23 ) }
    dend_15 { pt3dadd( 40.5961, -264.58, 2.79905, 0.68 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 26.2078, -264.537, 6.45796, 0.23 ) }
    dend_12 { pt3dadd( 25.2708, -268.078, 6.61798, 0.23 ) }
    dend_12 { pt3dadd( 25.0139, -269.185, 6.68367, 0.91 ) }
    dend_12 { pt3dadd( 24.7074, -270.636, 6.80955, 0.45 ) }
    dend_12 { pt3dadd( 24.5309, -271.485, 6.90058, 1.36 ) }
    dend_12 { pt3dadd( 24.0821, -273.403, 7.11451, 0.23 ) }
    dend_12 { pt3dadd( 23.8053, -274.576, 7.26301, 1.14 ) }
    dend_12 { pt3dadd( 23.1049, -277.595, 7.70996, 0.23 ) }
    dend_12 { pt3dadd( 22.6034, -279.591, 8.0758, 0.23 ) }
    dend_12 { pt3dadd( 22.167, -281.353, 8.43232, 1.59 ) }
    dend_12 { pt3dadd( 21.6335, -283.745, 8.90373, 0.91 ) }
    dend_12 { pt3dadd( 21.2095, -286.045, 9.33528, 0.23 ) }
    dend_12 { pt3dadd( 20.9689, -287.885, 9.69125, 1.14 ) }
    dend_12 { pt3dadd( 20.7729, -290.655, 10.2182, 0.23 ) }
    dend_12 { pt3dadd( 20.7433, -292.598, 10.5601, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_12 { pt3dadd( 20.8318, -295.079, 10.9627, 0.23 ) }
    dend_12 { pt3dadd( 20.9768, -297.07, 11.2531, 1.14 ) }
    dend_12 { pt3dadd( 21.171, -299.359, 11.5101, 0.23 ) }
    dend_12 { pt3dadd( 21.3678, -301.303, 11.6778, 1.36 ) }
    dend_12 { pt3dadd( 21.4246, -301.857, 11.7076, 1.36 ) }
    dend_12 { pt3dadd( 21.7316, -305.56, 11.8221, 0.23 ) }
    dend_12 { pt3dadd( 21.8313, -307.555, 11.7843, 0.91 ) }
    dend_12 { pt3dadd( 21.8919, -309.868, 11.585, 0.23 ) }
    dend_12 { pt3dadd( 21.9327, -311.809, 11.2918, 1.36 ) }
    dend_12 { pt3dadd( 21.9963, -312.901, 11.0636, 1.36 ) }
    dend_12 { pt3dadd( 22.4288, -316.69, 10.0334, 0.23 ) }
    dend_12 { pt3dadd( 22.9324, -319.492, 9.07994, 1.14 ) }
    dend_12 { pt3dadd( 23.4049, -321.489, 8.28414, 0.23 ) }
    dend_12 { pt3dadd( 23.7404, -322.766, 7.72395, 1.36 ) }
    dend_12 { pt3dadd( 24.5002, -325.342, 6.48014, 0.23 ) }
    dend_12 { pt3dadd( 25.2161, -327.37, 5.41353, 1.82 ) }
    dend_12 { pt3dadd( 25.5008, -327.941, 5.07181, 1.82 ) }
    dend_12 { pt3dadd( 26.0492, -328.742, 4.60218, 0.45 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 18/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.9971, -49.1596, 1.42479, 0.68 ) }
    dend_10 { pt3dadd( -17.0546, -49.5596, 0.416907, 0.68 ) }
    dend_10 { pt3dadd( -19.1371, -49.8371, -0.700962, 1.14 ) }
    dend_10 { pt3dadd( -21.4723, -50.1695, -1.97953, 0.23 ) }
    dend_10 { pt3dadd( -22.9408, -50.4466, -2.80234, 0.23 ) }
    dend_10 { pt3dadd( -24.4306, -50.8869, -3.58013, 1.14 ) }
    dend_10 { pt3dadd( -25.6205, -51.2878, -4.11881, 0.23 ) }
    dend_10 { pt3dadd( -27.007, -51.7544, -4.63692, 0.45 ) }
    dend_10 { pt3dadd( -27.9948, -52.1081, -4.94191, 0.45 ) }
    dend_10 { pt3dadd( -29.4433, -52.6102, -5.35018, 1.14 ) }
    dend_10 { pt3dadd( -32.6213, -53.6783, -6.20879, 0.23 ) }
    dend_10 { pt3dadd( -34.9658, -54.3522, -6.82271, 0.91 ) }
    dend_10 { pt3dadd( -36.4771, -54.6138, -7.22241, 0.91 ) }
    dend_10 { pt3dadd( -38.0501, -54.6041, -7.68097, 0.45 ) }
    dend_10 { pt3dadd( -39.7978, -54.2849, -8.28845, 0.45 ) }
    dend_10 { pt3dadd( -41.095, -53.7337, -8.8574, 0.45 ) }
    dend_10 { pt3dadd( -42.2569, -52.7623, -9.60675, 0.91 ) }
    dend_10 { pt3dadd( -43.5126, -51.0938, -10.8183, 0.45 ) }
    dend_10 { pt3dadd( -44.14, -49.8705, -11.5988, 0.45 ) }
    dend_10 { pt3dadd( -44.5014, -48.7553, -12.1924, 0.45 ) }
    dend_10 { pt3dadd( -44.8061, -47.5162, -12.6362, 0.45 ) }
    dend_10 { pt3dadd( -44.1112, -48.4895, -12.7856, 1.36 ) }
    dend_10 { pt3dadd( -43.0639, -49.3472, -13.2682, 1.36 ) }
    dend_10 { pt3dadd( -41.9125, -50.4027, -13.7568, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 42/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.9971, -49.1596, 1.42479, 0.23 ) }
    dend_9 { pt3dadd( -15.2631, -51.9246, 1.83519, 0.23 ) }
    dend_9 { pt3dadd( -15.3564, -53.2076, 2.02536, 0.91 ) }
    dend_9 { pt3dadd( -15.4242, -54.9383, 2.28997, 0.91 ) }
    dend_9 { pt3dadd( -15.4578, -56.9614, 2.58333, 0.91 ) }
    dend_9 { pt3dadd( -15.4342, -59.2214, 2.90563, 0.23 ) }
    dend_9 { pt3dadd( -15.3456, -61.7939, 3.27365, 0.68 ) }
    dend_9 { pt3dadd( -15.1702, -64.5567, 3.6786, 0.45 ) }
    dend_9 { pt3dadd( -14.9128, -67.6385, 4.12986, 0.91 ) }
    dend_9 { pt3dadd( -14.6689, -70.1089, 4.4794, 0.68 ) }
    dend_9 { pt3dadd( -14.3696, -72.9342, 4.84692, 1.59 ) }
    dend_9 { pt3dadd( -13.7764, -78.7819, 5.60305, 0.45 ) }
    dend_9 { pt3dadd( -13.5173, -81.2731, 5.91122, 0.45 ) }
    dend_9 { pt3dadd( -13.3489, -82.9566, 6.11008, 1.59 ) }
    dend_9 { pt3dadd( -13.2388, -84.3493, 6.26095, 1.59 ) }
    dend_9 { pt3dadd( -13.0961, -87.96, 6.60204, 0.23 ) }
    dend_9 { pt3dadd( -13.1175, -90.4707, 6.8081, 0.68 ) }
    dend_9 { pt3dadd( -13.3151, -94.0856, 7.07448, 0.23 ) }
    dend_9 { pt3dadd( -13.5138, -96.2929, 7.22931, 1.36 ) }
    dend_9 { pt3dadd( -13.9566, -100.007, 7.47475, 0.45 ) }
    dend_9 { pt3dadd( -14.7648, -105.183, 7.80356, 0.45 ) }
    dend_9 { pt3dadd( -15.2441, -107.661, 7.95811, 0.45 ) }
    dend_9 { pt3dadd( -15.6689, -109.527, 8.06126, 1.36 ) }
    dend_9 { pt3dadd( -16.2194, -111.51, 8.17883, 1.59 ) }
    dend_9 { pt3dadd( -16.8242, -113.413, 8.31107, 0.23 ) }
    dend_9 { pt3dadd( -17.4204, -115.104, 8.45014, 0.45 ) }
    dend_9 { pt3dadd( -18.6014, -118.366, 8.74638, 0.23 ) }
    dend_9 { pt3dadd( -19.0219, -119.602, 8.87837, 0.23 ) }
    dend_9 { pt3dadd( -19.7682, -121.824, 9.18288, 1.14 ) }
    dend_9 { pt3dadd( -20.9888, -125.435, 9.78241, 0.23 ) }
    dend_9 { pt3dadd( -21.7143, -127.574, 10.1826, 1.14 ) }
    dend_9 { pt3dadd( -22.5799, -130.202, 10.7497, 0.23 ) }
    dend_9 { pt3dadd( -23.3529, -132.53, 11.304, 0.45 ) }
    dend_9 { pt3dadd( -24.0256, -134.702, 11.9052, 0.23 ) }
    dend_9 { pt3dadd( -24.5686, -136.456, 12.4486, 1.14 ) }
    dend_9 { pt3dadd( -24.8369, -137.324, 12.7483, 1.14 ) }
    dend_9 { pt3dadd( -25.5127, -139.414, 13.5071, 0.23 ) }
    dend_9 { pt3dadd( -25.9106, -140.568, 13.9473, 0.91 ) }
    dend_9 { pt3dadd( -26.7688, -143.062, 14.8486, 0.23 ) }
    dend_9 { pt3dadd( -27.2275, -144.669, 15.4272, 1.14 ) }
    dend_9 { pt3dadd( -27.7133, -146.702, 16.147, 0.23 ) }
    dend_9 { pt3dadd( -27.9625, -148.154, 16.6107, 0.91 ) }
    dend_9 { pt3dadd( -28.0371, -148.946, 16.8233, 0.23 ) }
    dend_9 { pt3dadd( -28.0695, -150.062, 17.0965, 0.68 ) }
    dend_9 { pt3dadd( -28.0955, -152.818, 17.6747, 0.23 ) }
    dend_9 { pt3dadd( -28.0876, -154.463, 18.0136, 0.68 ) }
    dend_9 { pt3dadd( -28.1298, -156.962, 18.49, 0.23 ) }
    dend_9 { pt3dadd( -28.1992, -158.664, 18.8516, 0.91 ) }
    dend_9 { pt3dadd( -28.588, -163.025, 19.7887, 0.23 ) }
    dend_9 { pt3dadd( -28.7716, -164.752, 20.164, 0.68 ) }
    dend_9 { pt3dadd( -29.0131, -166.51, 20.5418, 0.23 ) }
    dend_9 { pt3dadd( -29.3245, -168.33, 20.9715, 0.91 ) }
    dend_9 { pt3dadd( -30.1685, -172.022, 21.9339, 0.23 ) }
    dend_9 { pt3dadd( -30.8718, -174.557, 22.6308, 0.91 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 26.0492, -328.742, 4.60218, 0.23 ) }
    dend_14 { pt3dadd( 26.8899, -329.95, 4.52669, 0.23 ) }
    dend_14 { pt3dadd( 27.9143, -331.347, 4.38349, 0.91 ) }
    dend_14 { pt3dadd( 28.8934, -332.562, 4.23773, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( 30.0014, -333.971, 4.02343, 0.91 ) }
    dend_14 { pt3dadd( 30.7417, -334.927, 3.86628, 0.23 ) }
    dend_14 { pt3dadd( 31.7418, -336.232, 3.608, 0.68 ) }
    dend_14 { pt3dadd( 32.5528, -337.302, 3.33044, 0.23 ) }
    dend_14 { pt3dadd( 33.4987, -338.506, 2.9341, 0.91 ) }
    dend_14 { pt3dadd( 34.4663, -339.654, 2.45683, 0.23 ) }
    dend_14 { pt3dadd( 35.2618, -340.591, 1.99496, 0.91 ) }
    dend_14 { pt3dadd( 36.3627, -341.992, 1.26891, 0.23 ) }
    dend_14 { pt3dadd( 37.3116, -343.242, 0.587044, 1.14 ) }
    dend_14 { pt3dadd( 38.6146, -345.052, -0.414871, 0.23 ) }
    dend_14 { pt3dadd( 39.5659, -346.401, -1.20406, 0.68 ) }
    dend_14 { pt3dadd( 40.4829, -347.629, -1.95539, 0.23 ) }
    dend_14 { pt3dadd( 41.5254, -349.086, -2.89871, 1.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 26.0492, -328.742, 4.60218, 0.23 ) }
    dend_13 { pt3dadd( 26.5944, -329.732, 4.22503, 0.23 ) }
    dend_13 { pt3dadd( 27.2676, -330.955, 3.75926, 0.68 ) }
    dend_13 { pt3dadd( 27.5951, -331.55, 3.53268, 0.23 ) }
    dend_13 { pt3dadd( 28.4571, -333.116, 2.93631, 0.91 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_24, dend_3, dend_0, dend_34, dend_25, dend_21, dend_4, dend_2, dend_1, dend_40, dend_35, dend_33, dend_26, dend_23, dend_22, dend_20, dend_5, dend_39, dend_36, dend_30, dend_27, dend_17, dend_6, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_16, dend_7, dend_11, dend_8, dend_15, dend_12, dend_10, dend_9, dend_14, dend_13]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_20 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_39 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_36 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_38 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_29 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_28 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_16 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_9 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_3 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_34 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_4 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_26 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_5 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_6 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_7 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_7, dend_7, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 3
    dend_23 nseg = 3
    dend_20 nseg = 9
    dend_39 nseg = 5
    dend_36 nseg = 9
    dend_30 nseg = 3
    dend_17 nseg = 9
    dend_38 nseg = 3
    dend_32 nseg = 3
    dend_31 nseg = 5
    dend_29 nseg = 5
    dend_28 nseg = 5
    dend_18 nseg = 3
    dend_16 nseg = 3
    dend_11 nseg = 11
    dend_12 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L5_SBC_e37bc9bae0_0_0


