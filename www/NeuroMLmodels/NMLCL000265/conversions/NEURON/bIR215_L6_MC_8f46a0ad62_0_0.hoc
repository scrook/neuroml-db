// Cell: bIR215_L6_MC_8f46a0ad62_0_0
/*
{
  "id" : "bIR215_L6_MC_8f46a0ad62_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "4.90919, 8.22513, -0.834577, 3.3622", "4.43743, 7.37523, -0.747967, 5.94588", "3.96566, 6.52532, -0.661357, 8.44184", "3.4939, 5.67542, -0.574747, 10.8454", "3.02213, 4.82551, -0.488136, 12.3209", "2.55037, 3.97561, -0.401526, 13.6839", "2.0786, 3.1257, -0.314916, 14.9249", "1.60684, 2.2758, -0.228306, 15.8085", "1.13507, 1.42589, -0.141695, 16.5556", "0.663306, 0.57599, -0.0550851, 17.2235", "0.191541, -0.273915, 0.0315252, 17.4002", "-0.280224, -1.12382, 0.118135, 17.0347", "-0.75199, -1.97372, 0.204746, 16.5238", "-1.22376, -2.82363, 0.291356, 16.1128", "-1.69552, -3.67353, 0.377966, 15.794", "-2.16729, -4.52344, 0.464576, 15.3172", "-2.63905, -5.37334, 0.551187, 14.6673", "-3.11082, -6.22325, 0.637797, 12.9422", "-3.58258, -7.07315, 0.724407, 10.2829", "-4.05435, -7.92306, 0.811018, 7.53536", "-4.52611, -8.77296, 0.897628, 4.31184" ]
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-0.908007, 5.7835, -15.0129, 0.96", "-0.902347, 5.85082, -15.0229, 0.96", "-0.826683, 6.82984, -15.1421, 0.96", "-0.722029, 8.17114, -15.3185, 0.96", "-0.569862, 9.9909, -15.4395, 1.33", "-0.50109, 11.0281, -15.453, 1.25", "-0.436212, 12.3182, -15.4174, 1.25", "-0.342127, 14.4891, -15.2622, 1.03", "-0.219654, 16.4342, -15.024, 0.81", "-0.0211566, 18.43, -14.6752, 0.81", "0.202819, 19.8923, -14.3985, 0.96", "0.54241, 21.3872, -14.14, 1.33", "0.931979, 22.7546, -13.9432, 1.33", "1.48563, 24.3935, -13.7687, 1.11", "2.1687, 26.1811, -13.6555, 1.25", "3.15493, 28.5822, -13.6497, 0.96", "3.91574, 30.372, -13.7091, 0.81", "4.51853, 31.8284, -13.8017, 0.81", "5.25575, 33.7806, -13.9795, 0.66", "5.74449, 35.2287, -14.0957, 0.66", "6.20706, 36.675, -14.1961, 1.62", "6.5074, 37.6492, -14.2411, 1.62", "7.07197, 39.3833, -14.3157, 1.18", "7.50316, 40.5795, -14.383, 1.33", "8.47264, 43.071, -14.4928, 1.11", "9.03879, 44.3603, -14.4979, 1.11", "9.78199, 45.8623, -14.436, 1.11", "10.5828, 47.3306, -14.3305, 0.96", "11.0996, 48.2575, -14.2466, 1.25", "11.7095, 49.3677, -14.1434, 1.25", "12.8681, 51.5394, -13.9655, 0.88", "13.5906, 52.9438, -13.8284, 0.88", "14.6865, 55.0666, -13.6449, 1.33", "15.2741, 56.2254, -13.5818, 1.55", "15.6786, 57.0211, -13.617, 1.55", "16.2079, 58.0467, -13.7898, 1.25", "16.6972, 58.9883, -14.0619, 1.62", "17.049, 59.6282, -14.2908, 1.62", "17.5469, 60.4316, -14.6116, 1.62", "18.9504, 62.3434, -15.4136, 0.81", "20.1726, 63.8626, -16.0515, 0.81", "20.9818, 64.7994, -16.4447, 1.03", "21.7666, 65.6274, -16.7789, 1.03", "22.6909, 66.5382, -17.0989, 0.74", "23.7743, 67.4873, -17.3883, 0.52", "24.414, 67.9829, -17.5086, 0.52", "25.4626, 68.7436, -17.7066, 1.11", "26.1242, 69.2071, -17.8161, 1.11", "26.9959, 69.8421, -17.9619, 0.96", "28.2829, 70.8209, -18.1905, 0.81", "28.9751, 71.3619, -18.3158, 1.11", "30.0806, 72.2055, -18.5031, 0.81", "31.1927, 73.0823, -18.6892, 0.59", "31.8869, 73.6721, -18.8133, 1.03", "32.4412, 74.1803, -18.9119, 1.03", "33.0224, 74.7394, -19.0212, 1.03", "33.4633, 75.1933, -19.094, 0.29", "34.0419, 75.8623, -19.2007, 0.29", "34.4317, 76.3711, -19.2739, 0.29", "35.0977, 77.2407, -19.379, 1.55", "35.6583, 77.9688, -19.4528, 1.55", "36.6233, 79.1714, -19.5883, 0.37", "37.1669, 79.8146, -19.6658, 0.37", "37.871, 80.6129, -19.7692, 0.37", "38.692, 81.4979, -19.9269, 0.74", "39.3065, 82.1204, -20.0645, 1.33", "39.8808, 82.669, -20.1977, 1.33", "40.2684, 83.0027, -20.2994, 1.33", "41.185, 83.7368, -20.5235, 0.88", "42.5039, 84.6958, -20.8288, 0.44", "43.4387, 85.2853, -21.0137, 0.29", "44.4675, 85.8297, -21.1989, 0.59", "44.9498, 86.043, -21.2739, 0.59", "45.6989, 86.309, -21.3807, 0.29", "46.6806, 86.567, -21.5023, 0.59", "47.7588, 86.8025, -21.6188, 0.37", "49.0304, 87.0494, -21.7831, 0.96", "49.7724, 87.1709, -21.888, 0.96", "50.2568, 87.2396, -21.9543, 0.96", "50.7106, 87.2954, -22.0114, 0.37", "51.3281, 87.3835, -22.0785, 0.22", "52.252, 87.5291, -22.1555, 0.22", "53.4839, 87.6949, -22.2102, 0.22", "54.7356, 87.8349, -22.2547, 0.22", "55.6168, 87.8981, -22.2452, 0.74", "56.4402, 87.9177, -22.1994, 0.96", "56.9506, 87.9067, -22.1549, 0.96", "58.2002, 87.844, -22.0173, 0.22", "59.0944, 87.7727, -21.9244, 0.44", "61.0559, 87.5747, -21.6995, 0.22", "62.705, 87.37, -21.4969, 0.22", "63.3678, 87.2707, -21.4112, 0.66", "63.8582, 87.1957, -21.3457, 0.81", "64.4837, 87.1069, -21.2622, 0.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "5.11199, -5.90675, 0.797081, 2.21", "5.11199, -5.90675, 0.797081, 2.21", "6.14039, -7.0266, 1.04847, 2.21", "7.54187, -8.6089, 1.4683, 2.21", "8.8035, -10.2159, 1.90174, 1.55", "9.83877, -11.7643, 2.30402, 1.18", "10.5018, -12.9076, 2.58395, 1.18", "11.1478, -14.239, 2.90607, 1.4", "11.3955, -14.8896, 3.06651, 1.55", "11.848, -16.4983, 3.44423, 0.96", "12.167, -18.0383, 3.75553, 0.96", "12.3869, -19.3849, 3.95616, 1.18", "12.6373, -21.0232, 4.14267, 1.4", "12.7963, -22.0921, 4.22861, 1.62", "13.0011, -23.3649, 4.32112, 1.62", "13.273, -24.7589, 4.39109, 1.33", "13.6855, -26.7889, 4.47712, 1.11", "13.9147, -28.1896, 4.53039, 1.11", "14.028, -29.1971, 4.58357, 1.11", "14.1773, -30.6159, 4.69188, 1.11", "14.3422, -32.0126, 4.84413, 1.03", "14.4942, -33.2104, 5.00697, 0.88", "14.6797, -34.615, 5.23802, 0.88", "14.8802, -36.1924, 5.53584, 0.88", "15.0652, -37.765, 5.84965, 0.66", "15.1703, -39.0959, 6.12067, 0.66", "15.1694, -40.0, 6.29422, 0.88", "14.9433, -41.497, 6.50679, 0.88", "14.5924, -42.7404, 6.64282, 0.74", "14.0747, -43.9969, 6.7407, 0.74", "13.3289, -45.4932, 6.84454, 0.59", "12.1847, -47.4799, 6.96755, 0.37", "10.224, -50.5053, 7.13152, 0.37", "9.59987, -51.3455, 7.16261, 0.96", "8.79455, -52.3142, 7.18042, 0.96" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "3.19199, 9.82, -0.572918, 5.08", "3.19199, 9.82, -0.572918, 5.08", "4.49286, 12.7518, -0.687943, 4.27", "5.34125, 14.6639, -0.762959, 4.2", "6.29632, 16.8163, -0.847408, 4.2", "7.33619, 19.1599, -0.939355, 4.57" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-7.16801, -5.0585, -12.2629, 2.58", "-7.16801, -5.0585, -12.2629, 2.58", "-8.12314, -4.87323, -12.0317, 2.58", "-9.4955, -4.58569, -11.6086, 2.14", "-11.0379, -4.24701, -11.0885, 1.99", "-12.3046, -3.96389, -10.6558, 1.99", "-13.7421, -3.63459, -10.1745, 1.77", "-15.4632, -3.21997, -9.61223, 2.28", "-16.7052, -2.91394, -9.21751, 2.43", "-17.4562, -2.72146, -8.99712, 2.43", "-18.4749, -2.45359, -8.7648, 2.43", "-19.3273, -2.23056, -8.63553, 2.43", "-21.1218, -1.75379, -8.51499, 1.92", "-22.9174, -1.22478, -8.57595, 1.69", "-24.7102, -0.628459, -8.77567, 1.47", "-25.7285, -0.262922, -8.93999, 1.47", "-26.9892, 0.194938, -9.20004, 1.77", "-28.404, 0.67007, -9.51527, 2.36", "-29.6915, 1.06166, -9.82374, 2.28", "-30.4748, 1.25723, -10.0083, 2.28", "-32.4223, 1.65599, -10.4083, 2.06", "-34.0282, 1.9542, -10.6842, 1.84", "-37.0205, 2.4478, -11.0774, 1.62", "-38.2894, 2.58293, -11.1663, 1.62", "-40.1279, 2.63497, -11.2459, 1.77", "-42.0533, 2.57755, -11.3153, 2.21", "-43.3515, 2.4754, -11.3613, 2.21", "-45.1776, 2.29229, -11.4299, 1.84", "-49.102, 1.84244, -11.695, 1.4", "-51.7517, 1.56661, -11.9407, 1.18", "-53.5032, 1.41814, -12.1431, 1.03", "-54.6662, 1.29994, -12.2934, 1.03", "-56.7992, 1.097, -12.6048, 1.4", "-58.6778, 1.01051, -12.9557, 1.18", "-60.495, 1.14243, -13.432, 1.33", "-62.7129, 1.57408, -13.9968, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.16801, 3.3655, -17.8229, 1.77", "-4.07472, 4.55184, -18.644, 1.77", "-5.00512, 7.02208, -20.5334, 2.65", "-5.23261, 7.27019, -20.8139, 2.95", "-7.75681, 9.24561, -23.5994, 1.11", "-8.77097, 9.95686, -24.6579, 1.11", "-10.5712, 11.2029, -26.4304, 1.11", "-11.4404, 11.8836, -27.2844, 1.11", "-13.0815, 13.2348, -28.7446, 1.47", "-14.1864, 14.0045, -29.4974, 1.18", "-15.3902, 14.7241, -30.1008, 1.03", "-16.2525, 15.3134, -30.488, 0.74", "-17.1932, 16.1827, -30.9053, 0.96", "-18.2086, 17.3262, -31.322, 1.25", "-19.0783, 18.359, -31.6489, 1.55", "-19.7533, 19.0968, -31.916, 1.55", "-20.882, 20.164, -32.4232, 1.03", "-21.9533, 20.9281, -32.9893, 0.81", "-23.356, 21.6097, -33.8271, 1.11", "-24.6041, 22.037, -34.6659, 1.69", "-25.432, 22.2412, -35.2946, 1.69", "-26.8014, 22.5212, -36.5844, 1.03", "-27.9276, 22.8176, -37.8748, 0.81", "-28.4689, 23.0917, -38.5865, 1.03", "-29.0686, 23.8467, -39.7926, 1.18", "-29.2425, 24.4194, -40.4611, 1.4", "-29.3628, 25.8606, -41.8753, 1.55", "-29.3214, 27.1697, -42.9969, 0.96", "-29.1878, 28.3081, -43.8657, 0.52", "-28.9841, 29.6989, -44.9103, 0.52", "-28.8927, 30.4079, -45.4236, 0.96", "-28.8069, 31.1183, -45.8756, 0.96", "-28.7345, 31.6772, -46.172, 0.96", "-28.5795, 32.7078, -46.7045, 0.37", "-28.4214, 33.9528, -47.3157, 0.37", "-28.3367, 34.8477, -47.7412, 0.37", "-28.2092, 36.3932, -48.5081, 0.74", "-28.1128, 37.2369, -48.9554, 0.74", "-27.9867, 38.1335, -49.4614, 0.59", "-27.822, 39.1548, -50.0698, 0.44", "-27.5657, 40.7609, -51.0203, 0.44", "-27.4242, 41.6272, -51.5825, 0.44", "-27.1023, 43.421, -52.8487, 0.52", "-26.9022, 44.4699, -53.6425, 0.52", "-26.7115, 45.5217, -54.5401, 0.88", "-26.5949, 46.2193, -55.2078, 0.88", "-26.398, 47.6211, -56.7171, 0.44", "-26.3143, 48.4657, -57.7367, 0.44", "-26.3158, 49.2331, -58.7628, 0.44", "-26.4426, 50.4592, -60.5123, 0.66", "-26.6681, 51.6538, -62.2246, 1.03", "-26.8837, 52.3748, -63.2009, 1.03", "-27.3434, 53.4791, -64.6118, 0.44", "-27.8071, 54.4719, -65.8025, 0.44", "-28.1693, 55.2741, -66.6509, 0.81", "-28.4827, 56.0342, -67.3539, 0.81", "-29.247, 58.1096, -69.1814, 0.44", "-29.8272, 60.1148, -70.8991, 0.96", "-30.0423, 60.9755, -71.6824, 0.96", "-30.3257, 62.0631, -72.7505, 0.52", "-30.8366, 63.5691, -74.5176, 0.52", "-31.4379, 64.8365, -76.3805, 1.25", "-32.0218, 65.7657, -78.0844, 1.11", "-32.9241, 66.9308, -80.6618, 0.74", "-33.4438, 67.5017, -82.2056, 0.66", "-34.5046, 68.2512, -85.0303, 1.4", "-35.4605, 68.6504, -87.1629, 1.03", "-36.1264, 68.8124, -88.3443, 0.74", "-37.5589, 69.0528, -90.4217, 0.88", "-38.5064, 69.254, -91.5542, 0.74", "-40.4427, 69.9494, -93.5591, 0.52", "-41.651, 70.542, -94.4759, 1.18", "-42.9945, 71.3658, -95.2134, 1.18", "-43.5873, 71.8515, -95.5183, 1.18", "-44.6843, 73.0158, -95.9862, 0.81", "-45.3955, 74.002, -96.2866, 0.59", "-46.0105, 75.1472, -96.6171, 0.59", "-46.7638, 76.8, -97.1344, 1.03", "-47.4149, 78.3978, -97.6313, 1.03", "-47.9999, 79.9525, -98.0832, 0.59", "-48.4625, 81.2668, -98.4282, 0.59", "-49.1118, 83.1941, -98.9122, 0.44", "-49.3682, 84.0123, -99.1136, 0.44", "-49.824, 85.6675, -99.5452, 0.74", "-50.159, 87.13, -99.921, 0.74", "-50.4572, 88.8045, -100.401, 0.52", "-50.6091, 89.935, -100.715, 0.88", "-50.7996, 91.5337, -101.102, 1.11", "-50.9149, 92.4216, -101.269, 1.25", "-51.0512, 93.3357, -101.409, 1.25", "-51.427, 95.4835, -101.681, 0.59", "-51.6748, 96.85, -101.833, 0.74", "-52.0015, 98.6255, -102.003, 0.44", "-52.3045, 100.299, -102.181, 0.96", "-52.5006, 101.39, -102.312, 1.55", "-52.6118, 102.04, -102.407, 1.55", "-52.7993, 103.271, -102.624, 0.74", "-52.9466, 104.308, -102.835, 0.52", "-53.1945, 106.368, -103.349, 0.52", "-53.3519, 107.94, -103.821, 0.66", "-53.4935, 109.623, -104.327, 1.62", "-53.568, 110.43, -104.566, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "8.35199, 0.664752, -5.51292, 2.43", "8.35199, 0.664752, -5.51292, 2.43", "8.97798, 0.895487, -5.37602, 2.43", "10.7292, 1.51642, -4.99142, 1.99", "11.6381, 1.82297, -4.80563, 1.99", "12.6122, 2.13527, -4.60395, 2.28", "13.9135, 2.53662, -4.32212, 2.36", "14.791, 2.78606, -4.12352, 2.36", "16.3315, 3.18141, -3.75302, 1.69", "17.5312, 3.47641, -3.48991, 1.47", "18.6091, 3.75145, -3.30769, 1.77", "19.1282, 3.88502, -3.28244, 1.77", "20.2773, 4.18304, -3.33696, 2.14", "21.7603, 4.55796, -3.46058, 1.33", "23.4731, 5.00862, -3.68437, 1.77", "24.8351, 5.38394, -3.93836, 1.77", "27.3914, 6.12261, -4.60823, 1.4", "28.0102, 6.30907, -4.81547, 1.4" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.27801, 5.98825, -0.382918, 3.09", "-5.27801, 5.98825, -0.382918, 3.09", "-7.57294, 6.63399, 0.0762551, 2.43", "-8.6656, 6.85051, 0.273685, 2.43", "-10.1236, 7.0712, 0.508626, 3.02", "-11.4303, 7.22754, 0.692634, 3.24", "-12.2101, 7.30602, 0.790354, 3.46", "-13.0364, 7.34458, 0.879414, 3.46", "-15.283, 7.25849, 1.08351, 2.06", "-16.5416, 7.13502, 1.23459, 2.06", "-18.1309, 6.88634, 1.50098, 1.84", "-19.1989, 6.67137, 1.71628, 1.84", "-20.8576, 6.22068, 2.09933, 1.84", "-23.0678, 5.5676, 2.66029, 1.55", "-25.2258, 4.85613, 3.30066, 1.33", "-26.7074, 4.29075, 3.80203, 1.62", "-27.3528, 4.00388, 4.05469, 1.62", "-28.845, 3.25137, 4.71874, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999738686323
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-4.52611, -8.77296, 0.897628, 1.40211", "-11.806, -21.888, 0.897628, 1.40211", "-19.0859, -35.003, 0.897628, 1.40211" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "8.79455, -52.3142, 7.18042, 0.37", "6.93747, -52.8923, 7.47351, 0.37", "6.17149, -53.132, 7.58361, 0.37", "5.12283, -53.4955, 7.74042, 0.37", "3.9229, -53.9612, 7.87126, 0.37", "2.76686, -54.4098, 7.9973, 0.37", "1.94168, -54.7301, 8.08728, 0.37", "1.16238, -55.0702, 8.1822, 0.37", "-0.683878, -55.871, 8.34774, 0.37", "-2.15614, -56.4946, 8.41603, 0.37", "-11.3747, -60.2702, 8.56683, 0.37", "-19.5533, -65.7569, 9.76808, 0.37", "-27.8772, -71.1374, 9.25845, 0.37", "-37.2451, -74.4892, 8.60839, 0.37", "-46.4602, -78.1091, 7.46892, 0.37", "-55.6259, -81.9988, 7.19549, 0.37", "-64.0658, -87.1769, 7.94663, 0.37", "-71.3478, -93.5966, 9.84878, 0.37", "-77.7863, -101.056, 9.70539, 0.37" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "8.79455, -52.3142, 7.18042, 0.44", "7.2931, -53.097, 7.24687, 0.44", "5.66181, -53.7844, 7.35801, 0.44", "4.7736, -54.1399, 7.43726, 0.66", "3.61977, -54.6225, 7.55754, 0.29", "2.73928, -55.0097, 7.6629, 0.29", "1.5342, -55.5397, 7.8071, 0.29", "0.897566, -55.7559, 7.89496, 0.29", "-0.152557, -56.0498, 8.06559, 0.29", "-1.08643, -56.3491, 8.24478, 0.29", "-1.58628, -56.5485, 8.36024, 0.29", "-11.2492, -59.0224, 7.92528, 0.29", "-21.0117, -61.0432, 7.29489, 0.29", "-30.2032, -64.0033, 4.7851, 0.29", "-39.2147, -67.8418, 2.97018, 0.29", "-47.8812, -72.5505, 1.71789, 0.29", "-56.6881, -77.1227, 2.38671, 0.29", "-64.5066, -82.7895, 4.64303, 0.29", "-72.1426, -88.9773, 5.83224, 0.29", "-79.3558, -95.7301, 5.88239, 0.29", "-85.9734, -103.04, 5.89236, 0.29", "-93.0758, -109.891, 5.4674, 0.29" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "7.33619, 19.1599, -0.939355, 1.77", "10.3525, 19.2804, -0.0149716, 1.77", "11.6949, 19.3544, 0.364656, 1.77", "13.139, 19.4578, 0.747128, 2.21", "14.6454, 19.5912, 1.11796, 2.21", "15.6878, 19.7009, 1.34837, 2.21", "16.704, 19.8098, 1.56791, 2.65", "17.9263, 19.9584, 1.81534, 2.65", "19.0218, 20.1059, 2.02024, 2.65", "21.1472, 20.4064, 2.37905, 1.69", "23.1076, 20.7023, 2.70962, 1.4", "24.4523, 20.9266, 2.93798, 1.55", "25.3283, 21.1176, 3.09915, 1.55", "26.5355, 21.5008, 3.30502, 1.55", "27.5247, 21.9329, 3.44851, 1.92", "28.7048, 22.6902, 3.58098, 1.92", "29.9765, 23.8438, 3.63882, 2.21", "31.0054, 25.066, 3.61846, 1.92", "32.2008, 26.7839, 3.54009, 1.69", "32.9026, 27.9781, 3.4633, 1.69", "33.8995, 29.9092, 3.30416, 1.69", "35.0624, 32.3239, 3.0893, 1.84", "35.8648, 34.0485, 2.93033, 1.84", "36.6358, 35.5733, 2.78818, 1.84", "37.3661, 37.0009, 2.67546, 1.84", "38.3131, 38.8218, 2.53817, 1.69", "38.9801, 39.9976, 2.45543, 1.92", "39.7251, 41.1656, 2.4033, 2.28", "40.7766, 42.5713, 2.32711, 2.5" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.33619, 19.1599, -0.939355, 2.36", "6.48832, 23.0055, -1.11597, 2.36", "5.9343, 25.5183, -1.23138, 2.21", "5.70811, 26.5443, -1.2785, 2.21", "5.26628, 28.5482, -1.37053, 2.43" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-62.7129, 1.57408, -13.9968, 1.11", "-63.9797, 2.57881, -13.4619, 1.11", "-64.9849, 3.31394, -13.0878, 1.99", "-65.6882, 3.77282, -12.851, 1.99", "-66.069, 4.00951, -12.7349, 1.99", "-67.3474, 4.84492, -12.3863, 1.18", "-68.4153, 5.58796, -12.1023, 0.96", "-69.3104, 6.21228, -11.8964, 0.96", "-70.1364, 6.82934, -11.6997, 2.06", "-70.847, 7.40355, -11.5368, 2.06", "-72.2461, 8.61855, -11.2501, 1.25", "-73.0426, 9.36948, -11.1263, 1.4", "-73.5154, 9.83953, -11.0783, 1.4", "-74.1633, 10.5002, -11.0397, 1.18", "-75.1586, 11.5229, -11.0022, 0.96", "-75.8709, 12.2165, -10.9804, 0.96", "-76.979, 13.2066, -10.9622, 0.74", "-78.3056, 14.3355, -10.9597, 0.74", "-79.0266, 14.9105, -10.9594, 0.74", "-79.8242, 15.5054, -10.9611, 0.74", "-80.7654, 16.1815, -10.918, 1.11", "-81.774, 16.9171, -10.8123, 0.37", "-82.3129, 17.3119, -10.7301, 0.37", "-83.2272, 17.9712, -10.5765, 1.99", "-83.5182, 18.1756, -10.5339, 1.99", "-85.386, 19.5413, -10.3046, 0.81", "-86.164, 20.1496, -10.2105, 0.81", "-86.9935, 20.8366, -10.1027, 1.03", "-87.9849, 21.6965, -9.96976, 1.11", "-89.1812, 22.7875, -9.81, 1.03", "-90.1882, 23.6976, -9.67347, 0.88", "-90.9973, 24.4227, -9.5604, 1.11", "-91.5107, 24.882, -9.47095, 1.11", "-91.8976, 25.2276, -9.38934, 1.11", "-93.0318, 26.2514, -9.13422, 1.47", "-93.6899, 26.8305, -8.99238, 1.47", "-94.0025, 27.0797, -8.9386, 1.47", "-95.2587, 27.983, -8.79681, 0.96", "-95.9816, 28.48, -8.74574, 0.96", "-96.5535, 28.8831, -8.72252, 0.96", "-97.2914, 29.4383, -8.71404, 0.81", "-98.44, 30.3431, -8.72555, 0.81", "-100.009, 31.5603, -8.73435, 0.81", "-101.16, 32.4166, -8.7295, 0.96", "-102.151, 33.1339, -8.70214, 1.4", "-103.109, 33.8133, -8.65635, 1.4", "-104.093, 34.4911, -8.59987, 1.4", "-105.502, 35.4116, -8.51263, 0.96", "-106.94, 36.2799, -8.42128, 1.4", "-107.866, 36.7805, -8.38911, 0.88", "-109.172, 37.4057, -8.33972, 0.59", "-110.401, 37.9523, -8.32681, 0.37", "-111.589, 38.48, -8.35386, 0.37", "-112.333, 38.8222, -8.38945, 0.37", "-113.673, 39.4638, -8.4603, 0.88", "-114.906, 40.0837, -8.53318, 1.18", "-115.939, 40.6337, -8.6002, 0.66", "-116.529, 40.9702, -8.64084, 0.52", "-117.58, 41.593, -8.73859, 0.96", "-118.354, 42.0565, -8.82169, 0.96", "-119.149, 42.5227, -8.86993, 0.96", "-120.017, 43.0314, -8.90448, 0.74", "-121.266, 43.7501, -8.89971, 0.88", "-122.558, 44.4826, -8.87184, 0.88", "-123.831, 45.1933, -8.82643, 0.52", "-126.974, 46.9104, -8.65941, 0.52", "-128.098, 47.5205, -8.57579, 0.52", "-129.168, 48.0987, -8.47465, 0.96", "-130.185, 48.6431, -8.36416, 0.96", "-131.318, 49.2369, -8.23799, 0.74", "-132.457, 49.8107, -8.12208, 0.66", "-133.232, 50.1799, -8.08034, 0.66", "-134.23, 50.6359, -8.05527, 0.59", "-134.988, 50.9711, -8.05535, 1.11", "-135.715, 51.2777, -8.08203, 1.11" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-62.7129, 1.57408, -13.9968, 1.33", "-65.0475, 1.35888, -15.2351, 1.33", "-66.5649, 1.44013, -16.0075, 1.18", "-67.9356, 1.6911, -16.6496, 1.18", "-69.049, 1.95448, -17.1317, 1.18", "-70.1906, 2.2096, -17.5575, 1.18", "-71.4686, 2.43619, -17.9703, 0.96", "-72.8207, 2.73012, -18.2537, 1.03", "-74.1939, 2.96418, -18.4327, 1.03", "-75.155, 3.01804, -18.5554, 1.03", "-76.6534, 2.87236, -18.7811, 1.4", "-78.0275, 2.5671, -19.0166, 1.84", "-78.8867, 2.31104, -19.1781, 1.84", "-80.1908, 1.88006, -19.4378, 1.62", "-82.284, 1.23195, -19.9049, 1.18", "-84.6276, 0.63688, -20.5024, 1.03", "-85.8402, 0.40985, -20.8482, 1.47", "-86.8829, 0.281299, -21.1542, 1.47", "-87.506, 0.238948, -21.3324, 1.47", "-88.8003, 0.225414, -21.6908, 1.62", "-89.6413, 0.274871, -21.9059, 1.62", "-90.4786, 0.375947, -22.1331, 1.62", "-91.7849, 0.52033, -22.5018, 1.11", "-93.1814, 0.623449, -22.8848, 1.55", "-94.0017, 0.64235, -23.0955, 1.55", "-94.9713, 0.595307, -23.3148, 1.55", "-95.3348, 0.560162, -23.3861, 1.55", "-96.4783, 0.396416, -23.5388, 0.88", "-97.8925, 0.115984, -23.6332, 1.47", "-99.1857, -0.204541, -23.6777, 1.69", "-100.867, -0.657194, -23.6901, 1.18", "-101.971, -0.971536, -23.6983, 1.47", "-103.365, -1.36036, -23.7647, 1.84", "-104.285, -1.60148, -23.8503, 1.84", "-105.524, -1.86287, -24.0414, 1.47", "-106.87, -2.04685, -24.3571, 1.03", "-107.849, -2.10993, -24.6566, 1.03", "-109.347, -2.15035, -25.1918, 1.47", "-110.016, -2.1554, -25.4599, 1.4", "-111.197, -2.15662, -25.9073, 0.66", "-111.941, -2.16775, -26.1516, 0.66", "-113.267, -2.21533, -26.5208, 1.33", "-114.106, -2.25561, -26.6928, 1.47", "-115.367, -2.33696, -26.884, 1.47", "-116.391, -2.40947, -27.0265, 1.25", "-117.564, -2.4593, -27.1862, 0.96", "-118.456, -2.45287, -27.3211, 0.96", "-119.331, -2.40713, -27.4739, 1.4", "-120.111, -2.34276, -27.6208, 1.4", "-121.049, -2.24198, -27.8137, 1.18", "-123.064, -2.03072, -28.2527, 0.81", "-124.682, -1.9088, -28.6087, 0.81", "-126.482, -1.84066, -29.0055, 1.25", "-127.548, -1.83157, -29.2492, 1.25", "-129.036, -1.83842, -29.5764, 1.03", "-130.869, -1.87644, -29.9694, 0.59", "-132.529, -1.95804, -30.34, 0.59", "-133.729, -2.0451, -30.6102, 1.62", "-134.884, -2.17441, -30.8755, 1.84" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-53.568, 110.43, -104.566, 0.52", "-52.3046, 111.01, -105.081, 0.52", "-51.3425, 111.39, -105.497, 0.37", "-49.4552, 112.047, -106.279, 0.37", "-48.5816, 112.363, -106.661, 0.37", "-47.2333, 112.918, -107.238, 0.88", "-46.1838, 113.349, -107.656, 0.88", "-45.5399, 113.615, -107.906, 1.03", "-44.5079, 114.051, -108.283, 1.18", "-42.673, 114.849, -108.894, 0.59", "-41.2568, 115.489, -109.289, 0.44", "-39.4743, 116.294, -109.705, 0.44", "-37.7285, 117.023, -110.046, 0.96", "-36.7485, 117.39, -110.209, 0.96", "-34.6162, 118.079, -110.473, 0.52", "-33.4137, 118.42, -110.55, 0.52", "-31.9995, 118.814, -110.586, 0.74", "-30.6808, 119.253, -110.582, 0.52", "-29.4978, 119.734, -110.549, 0.66", "-28.6123, 120.225, -110.517, 0.66", "-27.6325, 121.109, -110.507, 0.52", "-26.9451, 122.038, -110.531, 0.96", "-26.3682, 123.301, -110.595, 0.66", "-26.006, 124.803, -110.703, 0.44", "-25.9235, 125.888, -110.861, 0.74", "-25.9765, 127.77, -111.25, 0.52", "-26.0505, 128.571, -111.457, 0.52", "-26.2186, 130.173, -111.964, 0.37", "-26.357, 131.581, -112.467, 0.29", "-26.4631, 133.368, -113.181, 0.81", "-26.4438, 134.16, -113.516, 0.81", "-26.2711, 135.403, -114.087, 0.52", "-25.6474, 137.526, -115.075, 1.33", "-25.3742, 138.065, -115.34, 1.33", "-24.5682, 139.111, -115.883, 0.74", "-23.8008, 139.801, -116.236, 0.59", "-23.0962, 140.227, -116.5, 0.59", "-22.3655, 140.49, -116.732, 0.59", "-21.348, 140.68, -117.012, 0.81", "-20.0935, 140.858, -117.377, 0.81", "-19.0633, 141.044, -117.708, 0.66", "-17.713, 141.506, -118.179, 1.11", "-17.1948, 141.835, -118.381, 1.11", "-16.771, 142.341, -118.603, 1.11", "-16.264, 143.503, -118.998, 0.81", "-15.903, 145.348, -119.574, 0.52", "-15.7785, 147.336, -120.16, 0.52", "-15.781, 148.381, -120.487, 0.52", "-15.8152, 149.655, -120.909, 1.11", "-15.8409, 150.376, -121.177, 1.11", "-15.8368, 151.137, -121.553, 0.74", "-15.788, 152.157, -122.156, 0.52", "-15.5351, 153.764, -123.285, 0.81", "-15.3257, 154.53, -123.864, 0.96", "-15.0335, 155.284, -124.463, 0.96", "-14.3251, 156.782, -125.736, 0.88" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-53.568, 110.43, -104.566, 0.59", "-54.0789, 112.291, -105.164, 0.59", "-54.3374, 113.2, -105.449, 0.59", "-54.6107, 114.161, -105.75, 0.96", "-54.8844, 115.123, -106.051, 1.18", "-55.0856, 115.831, -106.273, 1.18", "-55.3538, 116.774, -106.569, 0.88", "-55.6318, 117.711, -106.88, 0.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "28.0102, 6.30907, -4.81547, 1.03", "30.3761, 5.33083, -5.53698, 1.03", "32.9766, 4.41367, -6.22841, 1.11", "34.6273, 3.97993, -6.62143, 0.96", "36.3433, 3.67063, -7.0063, 1.62", "38.3279, 3.47717, -7.41819, 0.66", "39.6385, 3.4485, -7.67065, 0.66", "41.2378, 3.67676, -7.8603, 1.03", "42.8458, 4.25723, -8.03622, 1.4", "43.7896, 4.73051, -8.17226, 1.4", "44.8584, 5.36303, -8.35791, 1.77", "45.6783, 5.86762, -8.52294, 1.77", "46.7952, 6.42282, -8.7708, 1.47", "48.2081, 6.84246, -9.11966, 0.59", "49.5896, 7.00178, -9.47524, 0.88", "50.1535, 6.98926, -9.61768, 1.18", "51.0091, 6.86507, -9.82791, 1.18", "52.3908, 6.51986, -10.1474, 0.59", "53.669, 6.1143, -10.3852, 1.62", "54.5238, 5.81138, -10.5233, 1.92", "55.3147, 5.54667, -10.6211, 1.92", "56.1635, 5.26707, -10.7108, 1.25", "57.2094, 4.92287, -10.7618, 0.52", "58.2178, 4.5578, -10.7407, 1.11", "58.8488, 4.30308, -10.6774, 1.33", "60.1292, 3.77957, -10.5693, 0.52", "60.9003, 3.47996, -10.5305, 0.52", "62.083, 3.05092, -10.5671, 1.25", "62.813, 2.83329, -10.6459, 1.92", "63.4019, 2.72444, -10.758, 2.21", "65.7181, 2.62282, -11.369, 0.52", "66.61, 2.73702, -11.6721, 0.52", "67.9713, 3.17942, -12.1834, 0.88", "69.0342, 3.69914, -12.6159, 0.59", "70.3361, 4.52497, -13.1192, 1.55", "70.9205, 4.96471, -13.3168, 1.55", "71.4351, 5.41572, -13.4443, 1.55", "72.4419, 6.2376, -13.6225, 0.29", "73.0005, 6.64614, -13.6543, 0.29", "73.8185, 7.15195, -13.72, 1.33", "74.5048, 7.56282, -13.8316, 1.55", "75.0975, 7.96576, -14.0029, 1.55", "76.1749, 8.70617, -14.5068, 0.37", "76.9938, 9.28259, -15.0014, 1.11", "78.0945, 10.0719, -15.7433, 1.18", "79.3111, 10.8813, -16.5098, 0.74", "80.3526, 11.5275, -17.1151, 1.03", "81.8005, 12.2747, -17.8876, 1.03", "82.5467, 12.5696, -18.2595, 0.52", "83.5072, 12.8016, -18.6697, 0.52", "85.285, 12.9695, -19.1874, 1.47", "85.8781, 12.9649, -19.3138, 1.47", "87.6544, 12.8596, -19.5888, 0.52", "88.2139, 12.8038, -19.666, 0.88", "89.0323, 12.6721, -19.8014, 0.88", "89.8688, 12.4973, -19.9626, 0.59", "90.8623, 12.2357, -20.1965, 0.96", "92.1082, 11.8169, -20.4586, 0.29", "93.1049, 11.4444, -20.6258, 0.29", "94.1201, 11.0684, -20.8061, 0.88", "94.8568, 10.8056, -20.9547, 1.18", "95.209, 10.6851, -21.0343, 1.18", "96.649, 10.2705, -21.3984, 0.59", "97.6212, 10.0811, -21.687, 0.37", "98.6262, 9.9659, -22.007, 0.37", "99.453, 9.88958, -22.269, 1.03", "100.017, 9.84221, -22.4418, 1.03", "101.454, 9.71487, -22.8384, 0.44", "102.845, 9.5834, -23.1857, 1.11", "103.478, 9.49669, -23.3294, 1.11", "105.053, 9.23658, -23.6443, 0.44", "105.988, 9.069, -23.8358, 0.44", "106.945, 8.88186, -24.0357, 0.66", "107.498, 8.76226, -24.1691, 0.66", "108.339, 8.56983, -24.4338, 0.44", "109.194, 8.373, -24.8177, 0.81", "110.264, 8.09497, -25.5104, 0.59", "111.159, 7.73466, -26.307, 0.59", "111.927, 7.2062, -27.3107, 0.96", "112.406, 6.6182, -28.2563, 0.59", "112.799, 5.65037, -29.5347, 1.03", "112.858, 5.23971, -30.0156, 1.03", "112.846, 4.4425, -30.8813, 0.52", "112.742, 3.50303, -31.8661, 0.81", "112.643, 2.86555, -32.4875, 1.03", "112.56, 2.11712, -33.1576, 0.66", "112.565, 1.02567, -34.0588, 0.88", "112.569, 0.530559, -34.4995, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "28.0102, 6.30907, -4.81547, 0.88", "30.4414, 5.77826, -5.13451, 0.88", "31.9875, 5.36767, -5.28325, 0.66", "33.3654, 4.90259, -5.41516, 0.66", "34.1636, 4.58563, -5.49329, 0.88", "36.0487, 3.7335, -5.68965, 0.88", "38.3101, 2.569, -5.95149, 0.66", "40.04, 1.45195, -6.14663, 0.66", "41.609, 0.286731, -6.35104, 1.03", "42.9223, -0.783406, -6.48936, 1.03", "43.916, -1.6426, -6.57078, 1.25", "45.0502, -2.66752, -6.63378, 1.4", "47.8558, -5.21463, -6.70455, 0.88", "49.9333, -7.06165, -6.67621, 0.74", "51.9627, -8.79903, -6.55778, 0.96", "53.1445, -9.78551, -6.44819, 0.88", "54.3493, -10.7449, -6.27344, 1.33", "55.14, -11.3386, -6.11765, 1.62", "55.7893, -11.8128, -5.95468, 1.62", "57.0913, -12.7411, -5.63057, 0.96", "58.2245, -13.5366, -5.39544, 0.59", "59.6327, -14.5184, -5.1259, 1.25", "60.2352, -14.94, -5.02282, 1.25", "61.6712, -15.9357, -4.82297, 0.81", "62.3684, -16.3909, -4.74956, 0.81", "63.6958, -17.1872, -4.64112, 0.52", "64.6424, -17.7233, -4.58739, 0.52", "65.4221, -18.1496, -4.56899, 1.11", "66.7378, -18.8437, -4.54009, 1.11", "68.1014, -19.5069, -4.50793, 0.74", "69.2888, -20.0637, -4.47803, 1.11", "69.9796, -20.3835, -4.46015, 1.11", "70.8423, -20.7873, -4.43854, 1.11", "72.4609, -21.5565, -4.40177, 0.59", "73.6178, -22.1019, -4.37756, 1.4", "74.8601, -22.7206, -4.3557, 0.66", "75.8294, -23.2369, -4.34414, 1.03", "76.6868, -23.7217, -4.33553, 1.03", "77.7924, -24.3832, -4.32932, 0.59", "78.9462, -25.0888, -4.3287, 1.33", "79.503, -25.441, -4.32753, 1.33", "80.5449, -26.1045, -4.30934, 0.96", "81.5003, -26.7352, -4.28031, 0.52", "82.2673, -27.2563, -4.25025, 1.4", "82.9314, -27.7228, -4.20082, 1.4", "83.6534, -28.2458, -4.12784, 1.03", "84.7976, -29.058, -3.98295, 0.37", "85.9251, -29.8466, -3.81303, 0.29", "87.2856, -30.7939, -3.5897, 0.29", "88.257, -31.4895, -3.40807, 0.88", "89.1515, -32.163, -3.25765, 0.88", "89.783, -32.6389, -3.17073, 0.88", "90.5763, -33.23, -3.08767, 1.25", "91.5049, -33.8906, -3.02615, 1.03", "92.51, -34.5439, -3.00871, 0.74", "93.5426, -35.1449, -3.04584, 0.44", "94.6088, -35.7306, -3.10834, 0.88", "95.3634, -36.1346, -3.17444, 0.88", "96.0354, -36.4893, -3.24343, 0.88", "96.8996, -36.9111, -3.32681, 0.59", "97.6627, -37.2703, -3.39279, 0.59", "98.5278, -37.6773, -3.44078, 0.96", "99.7185, -38.2422, -3.47894, 0.96", "101.289, -38.9765, -3.49493, 0.52", "103.315, -39.9206, -3.47967, 0.52", "104.354, -40.4035, -3.46197, 1.18", "105.277, -40.8173, -3.43893, 1.18", "106.576, -41.3718, -3.3716, 0.66", "107.405, -41.7111, -3.2927, 0.88", "108.016, -41.9588, -3.22085, 0.88", "109.018, -42.3899, -3.09748, 0.44", "109.534, -42.6231, -3.0385, 0.44", "110.644, -43.1824, -2.93186, 0.88", "111.314, -43.5498, -2.8932, 0.88", "112.394, -44.1979, -2.85141, 0.44", "113.075, -44.6077, -2.83807, 0.81", "113.629, -44.9423, -2.84881, 0.81", "114.328, -45.3736, -2.88574, 1.03", "115.205, -45.9095, -2.9747, 0.52", "116.005, -46.4097, -3.06484, 0.88", "117.002, -47.0178, -3.16455, 0.37", "118.429, -47.8436, -3.30232, 1.03", "119.521, -48.4394, -3.415, 1.47", "120.22, -48.8056, -3.49292, 1.47" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-28.845, 3.25137, 4.71874, 1.25", "-30.7953, 3.59519, 5.31276, 1.25", "-31.6469, 3.78939, 5.55952, 1.25", "-33.1844, 4.22305, 5.96936, 1.62", "-33.9096, 4.45773, 6.12504, 1.62", "-36.2349, 5.28339, 6.49616, 1.11", "-37.5893, 5.78868, 6.66194, 1.11", "-38.6752, 6.26345, 6.77779, 1.18", "-39.9385, 6.87242, 6.86688, 1.18", "-41.0572, 7.47073, 6.87685, 1.77", "-41.8526, 7.92883, 6.81674, 2.36", "-42.248, 8.1843, 6.69253, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-28.845, 3.25137, 4.71874, 1.4", "-27.606, 1.12172, 5.40461, 1.4", "-26.9012, -0.536508, 5.97065, 1.25", "-26.7279, -1.22774, 6.20529, 1.25", "-26.5865, -2.26946, 6.55037, 1.4", "-26.5658, -3.08289, 6.81668, 1.55", "-26.6276, -4.30574, 7.23004, 1.55", "-27.1002, -5.65117, 7.73733, 1.47", "-27.9206, -6.91353, 8.25613, 1.25", "-28.498, -7.48783, 8.52788, 1.25", "-29.5199, -8.15193, 8.89769, 0.96", "-30.0568, -8.36048, 9.04444, 0.96", "-32.0877, -8.70484, 9.48074, 0.74", "-33.573, -8.70751, 9.74834, 0.59", "-34.9479, -8.52366, 9.97945, 0.59", "-36.0187, -8.26073, 10.1442, 0.59", "-37.5186, -7.77312, 10.3392, 0.59", "-38.5336, -7.37482, 10.4394, 0.52", "-39.0391, -7.10281, 10.4736, 0.52", "-39.4002, -6.85709, 10.5048, 0.52", "-39.737, -6.55004, 10.5496, 0.52", "-45.1137, -13.9702, 14.179, 0.52", "-50.0059, -22.0271, 16.9685, 0.52", "-53.973, -30.6213, 19.5309, 0.52", "-58.3923, -38.7148, 22.9313, 0.52", "-63.8551, -46.2951, 26.0476, 0.52", "-68.7774, -53.6448, 30.4005, 0.52", "-74.7304, -60.2001, 34.8002, 0.52", "-79.687, -67.0311, 39.9332, 0.52", "-83.7181, -73.8563, 45.8278, 0.52", "-88.4473, -80.5986, 51.2881, 0.52", "-93.9486, -85.7789, 57.7306, 0.52", "-99.6196, -90.6369, 64.2891, 0.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-19.0859, -35.003, 0.897628, 0.15", "-26.3657, -48.118, 0.897628, 0.15", "-33.6456, -61.233, 0.897628, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-93.0758, -109.891, 5.4674, 0.29", "-101.635, -114.862, 4.60536, 0.29", "-111.137, -117.472, 3.00911, 0.29", "-120.734, -119.161, 0.798866, 0.29" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-93.0758, -109.891, 5.4674, 0.29", "-101.777, -114.616, 6.35816, 0.29", "-110.505, -118.874, 8.53846, 0.29", "-118.76, -124.372, 8.78864, 0.29" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "40.7766, 42.5713, 2.32711, 1.03", "42.4161, 43.4634, 1.99164, 1.03", "43.703, 44.0596, 1.73569, 1.18", "44.8477, 44.5246, 1.62205, 1.18", "46.0726, 44.9406, 1.57609, 1.18", "47.4046, 45.3427, 1.58485, 1.18", "49.1648, 45.8473, 1.66437, 1.47", "50.4072, 46.1355, 1.80213, 1.47", "52.337, 46.5676, 2.10919, 1.4", "53.7966, 46.9192, 2.39343, 1.18", "55.0942, 47.2637, 2.67245, 1.18", "56.6197, 47.7252, 3.00386, 1.4", "57.7183, 48.1387, 3.24582, 1.4", "59.1521, 48.8061, 3.45094, 1.47", "60.3072, 49.4342, 3.51211, 1.47", "61.2159, 49.9962, 3.52223, 1.47", "62.6039, 50.9141, 3.4808, 1.47", "64.3609, 52.0866, 3.3673, 1.55", "66.3898, 53.3858, 3.22012, 1.33", "68.1237, 54.4402, 3.09672, 1.25", "70.0867, 55.5159, 2.97576, 1.25", "71.4232, 56.1687, 2.92144, 1.4", "72.6531, 56.6777, 2.90074, 1.4", "74.3078, 57.2431, 2.92574, 1.25", "75.6544, 57.6595, 2.98774, 1.25", "77.3448, 58.1847, 3.07374, 1.25", "78.9877, 58.7382, 3.17687, 1.47", "80.6246, 59.3768, 3.30155, 1.47", "82.3869, 60.212, 3.46901, 1.33", "83.8164, 61.0335, 3.6281, 1.33", "85.2242, 61.9921, 3.81472, 1.47", "86.3034, 62.8571, 4.00458, 1.47", "87.4884, 63.9403, 4.25828, 1.33", "88.3399, 64.8049, 4.46998, 1.33", "89.2586, 65.7713, 4.72003, 1.33", "90.6085, 67.1573, 5.05049, 1.25", "91.7386, 68.3136, 5.25101, 1.25", "93.1197, 69.6821, 5.40128, 1.4", "94.3401, 70.8016, 5.44687, 1.77", "95.3904, 71.6541, 5.42704, 1.77", "97.1402, 72.8796, 5.31114, 1.47", "98.1571, 73.5049, 5.22073, 1.33", "100.049, 74.5201, 5.04188, 1.18", "101.87, 75.3875, 4.91853, 1.18", "103.858, 76.2678, 4.85843, 1.55", "105.465, 76.95, 4.87471, 1.55", "106.72, 77.45, 4.95195, 1.4", "108.058, 77.9533, 5.06015, 1.4", "110.066, 78.7165, 5.24017, 1.33", "111.601, 79.3002, 5.38334, 1.62", "113.306, 79.9315, 5.52609, 1.62", "115.817, 80.8753, 5.70587, 1.4", "117.775, 81.6074, 5.79598, 1.33", "119.251, 82.1535, 5.83746, 1.33", "121.478, 82.9393, 5.87211, 1.33", "123.026, 83.4677, 5.88118, 1.33", "124.635, 84.0156, 5.87626, 1.25", "125.91, 84.4749, 5.86017, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "40.7766, 42.5713, 2.32711, 1.18", "42.9211, 41.6845, 2.83276, 1.18", "44.3047, 41.1124, 3.15899, 1.18", "45.9619, 40.4271, 3.54976, 1.11", "47.5176, 39.7838, 3.91658, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "5.26628, 28.5482, -1.37053, 1.99", "4.17999, 31.2436, -0.297231, 1.99", "3.84959, 32.2083, 0.0342723, 1.99", "3.42229, 33.5927, 0.442114, 1.69", "2.93658, 35.3248, 0.897119, 1.25", "2.63279, 36.5065, 1.18991, 1.25", "2.28127, 38.0076, 1.55128, 1.62", "1.95745, 39.7558, 1.88925, 1.84", "1.74934, 41.2152, 2.18729, 2.14", "1.61729, 42.5568, 2.45512, 2.14", "1.54313, 43.5803, 2.62599, 2.14", "1.44417, 45.1203, 2.88178, 2.28", "1.34244, 46.7728, 3.15697, 2.5", "1.258, 48.2674, 3.3942, 2.5", "1.16442, 50.0957, 3.67167, 2.5", "1.12392, 51.3749, 3.84891, 2.87", "1.12462, 53.1637, 4.06186, 3.32", "1.15596, 54.0886, 4.16079, 3.32", "1.26104, 55.7199, 4.33533, 3.09", "1.37008, 56.8557, 4.46909, 3.09", "1.58332, 58.3892, 4.67356, 2.58", "1.91724, 60.2598, 4.93937, 2.36", "2.2011, 61.6346, 5.14952, 2.14", "2.53638, 63.1402, 5.39009, 1.99", "2.97794, 64.9893, 5.6966, 1.99", "3.33927, 66.495, 5.95503, 2.36", "3.6671, 67.9773, 6.22032, 2.73", "3.99426, 69.4329, 6.49738, 2.87" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "5.26628, 28.5482, -1.37053, 1.55", "6.76005, 30.9538, -1.31871, 1.55", "7.88959, 32.81, -1.10479, 1.03", "8.42235, 33.7381, -0.927963, 1.03", "9.1891, 35.1401, -0.605726, 0.88", "10.0523, 36.8388, -0.18165, 0.88", "10.6203, 38.036, 0.0774522, 0.88", "11.184, 39.4171, 0.421733, 0.88", "11.6869, 40.8969, 0.71265, 1.03", "12.0629, 42.2919, 0.836702, 1.03", "12.34, 43.8892, 0.703432, 1.03", "12.4418, 45.4865, 0.303072, 1.18", "12.4022, 46.8183, -0.182935, 1.77", "12.2909, 47.8487, -0.645604, 1.77", "12.1244, 48.771, -1.10879, 1.77", "11.6543, 50.5538, -2.0358, 1.25", "11.2145, 51.8771, -2.64823, 1.03", "10.7698, 53.12, -3.13796, 1.03", "10.4263, 54.0552, -3.47455, 1.03", "10.2401, 54.6052, -3.64682, 1.03", "9.98299, 55.6586, -3.93207, 0.96", "9.84679, 57.0279, -4.32086, 1.11", "10.0653, 58.474, -4.83615, 1.11", "10.5338, 59.5789, -5.27242, 1.33", "11.0457, 60.4127, -5.58927, 1.33", "11.8833, 61.5387, -6.00899, 0.96", "12.8022, 62.665, -6.38157, 1.18", "13.9194, 63.9984, -6.76664, 1.18", "15.0435, 65.4033, -7.04387, 1.4", "15.9884, 66.6805, -7.24391, 1.25", "16.9087, 68.1741, -7.42666, 1.18", "17.3344, 69.1372, -7.50888, 1.33", "17.5972, 70.0562, -7.57087, 1.33", "17.7284, 70.9813, -7.66336, 1.33", "17.7389, 72.1021, -7.87016, 1.11", "17.6247, 73.153, -8.19549, 1.11", "17.3483, 74.3788, -8.72899, 0.88", "16.9264, 75.7055, -9.4809, 0.59", "16.5796, 76.6159, -10.0698, 0.59", "16.0351, 78.035, -11.132, 0.96", "15.6448, 79.1177, -12.0376, 0.88", "15.4402, 79.8601, -12.7185, 0.88", "15.3043, 80.9189, -13.7487, 1.03", "15.4324, 81.548, -14.2854, 1.03", "16.4034, 82.7565, -15.0349, 0.81", "17.0545, 83.3903, -15.3178, 0.81", "18.0269, 84.412, -15.6688, 1.18", "18.7793, 85.3418, -15.9461, 1.18", "19.4944, 86.5211, -16.2429, 1.18", "19.9556, 87.6928, -16.5221, 1.03", "20.3718, 89.3709, -16.9389, 1.03", "20.6494, 90.8867, -17.388, 0.88", "20.8881, 92.4101, -17.9421, 1.03", "21.171, 94.0188, -18.6512, 0.88", "21.3385, 94.7901, -19.0368, 0.88", "21.7522, 96.2316, -19.8096, 0.66", "21.9902, 96.9208, -20.2705, 0.66", "22.3392, 97.8383, -21.0281, 0.66", "22.5563, 98.54, -21.7222, 0.88", "22.627, 99.1622, -22.416, 1.11", "22.3159, 100.081, -23.3554, 1.11", "21.5888, 101.148, -24.213, 0.59", "21.0641, 101.849, -24.652, 0.96", "20.4585, 102.622, -25.021, 1.18", "20.2275, 102.923, -25.1406, 1.18", "19.5983, 103.854, -25.4516, 0.59", "18.9594, 105.019, -25.7684, 0.52", "18.6261, 105.793, -25.9636, 0.52", "18.2193, 106.834, -26.2434, 0.74", "17.8828, 107.676, -26.4846, 0.88", "17.4821, 108.581, -26.7838, 0.66", "17.0583, 109.424, -27.1075, 0.44", "16.703, 109.991, -27.3675, 0.29", "16.4505, 110.326, -27.5408, 0.29", "15.9314, 110.94, -27.887, 0.74", "15.4784, 111.446, -28.1584, 0.96", "15.0929, 111.891, -28.3794, 0.96", "14.7861, 112.336, -28.5653, 0.52", "14.4937, 113.029, -28.8347, 0.29", "14.4093, 113.427, -28.9981, 0.29", "14.354, 114.107, -29.3063, 0.66", "14.326, 114.661, -29.5811, 0.66", "14.2504, 115.342, -29.953, 0.66", "14.0872, 116.076, -30.3922, 0.44", "13.8408, 116.775, -30.8207, 0.81", "13.5005, 117.46, -31.2289, 0.96", "13.2111, 117.967, -31.5497, 0.96", "12.7311, 118.752, -32.0428, 0.29", "12.3578, 119.293, -32.3737, 0.29", "11.938, 119.874, -32.6983, 0.44", "11.5282, 120.467, -33.0076, 0.44", "10.8879, 121.571, -33.5611, 0.66", "10.8038, 121.785, -33.6666, 0.66" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-135.715, 51.2777, -8.08203, 0.59", "-137.109, 51.7244, -7.79325, 0.59", "-137.97, 52.033, -7.60688, 1.03", "-138.413, 52.2058, -7.51038, 1.03", "-139.769, 52.8077, -7.19849, 0.37", "-140.369, 53.1065, -7.05625, 0.37", "-140.976, 53.4476, -6.90614, 0.81", "-141.481, 53.7983, -6.78101, 1.03", "-141.921, 54.1355, -6.66185, 1.03", "-143.011, 55.0223, -6.34628, 0.52", "-143.83, 55.7055, -6.09584, 0.52", "-144.659, 56.3803, -5.86208, 0.66", "-145.47, 57.0328, -5.64339, 1.03", "-146.084, 57.5117, -5.49737, 1.03", "-146.895, 58.1173, -5.34306, 1.03", "-147.973, 58.906, -5.19957, 0.59", "-148.707, 59.4484, -5.13637, 0.59", "-149.383, 59.9293, -5.09838, 0.59", "-150.151, 60.4725, -5.07973, 0.59", "-150.927, 61.0444, -5.09252, 0.59", "-151.897, 61.7969, -5.18227, 0.44", "-152.348, 62.1875, -5.26858, 0.44" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-135.715, 51.2777, -8.08203, 0.44", "-135.935, 52.2189, -6.99855, 0.44", "-136.014, 52.8448, -6.24308, 0.74", "-136.022, 53.7834, -5.04925, 0.88", "-135.972, 54.2144, -4.46843, 0.88", "-135.521, 55.8613, -2.13991, 0.74", "-135.169, 56.5508, -1.11917, 0.52", "-134.832, 57.0284, -0.231194, 0.29", "-134.408, 57.394, 0.612113, 0.29", "-133.735, 57.5663, 1.17561, 0.29", "-132.963, 57.5526, 1.45167, 0.29", "-131.801, 57.4114, 1.60213, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-134.884, -2.17441, -30.8755, 0.59", "-136.227, -0.940066, -31.3016, 0.59", "-137.05, -0.18307, -31.563, 0.59", "-137.88, 0.579824, -31.8263, 0.74", "-138.702, 1.33553, -32.0872, 1.69", "-139.245, 1.83472, -32.2596, 2.06", "-139.819, 2.36228, -32.4417, 2.06" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-134.884, -2.17441, -30.8755, 0.29", "-134.806, -3.57744, -30.9516, 0.29", "-134.68, -4.7992, -30.9864, 0.29", "-134.561, -5.78616, -30.9958, 0.81", "-134.485, -6.49747, -30.9949, 0.81", "-134.373, -7.85984, -30.9951, 0.44", "-134.293, -9.17827, -30.9877, 0.44", "-134.232, -10.3298, -30.96, 0.66", "-134.225, -10.8509, -30.9566, 0.66", "-134.272, -11.7316, -30.9777, 0.29", "-134.384, -12.613, -31.0192, 0.29", "-134.502, -13.237, -31.0593, 0.66", "-134.635, -13.7698, -31.1066, 0.66", "-135.089, -15.3214, -31.2813, 0.29", "-135.68, -17.2032, -31.5105, 0.29", "-136.29, -19.0626, -31.7627, 0.29", "-136.413, -19.4259, -31.8134, 1.11", "-136.685, -20.1802, -31.9221, 1.11", "-137.292, -21.6799, -32.1371, 0.22", "-137.571, -22.284, -32.2117, 0.22", "-137.979, -23.0247, -32.3083, 0.66", "-138.39, -23.6399, -32.3781, 0.66", "-138.943, -24.3844, -32.416, 0.22", "-139.652, -25.2831, -32.4934, 0.59", "-139.954, -25.6405, -32.5491, 0.59", "-140.67, -26.51, -32.7169, 0.29", "-141.358, -27.3445, -32.901, 0.29", "-141.908, -28.037, -33.0959, 0.59", "-142.984, -29.5411, -33.6047, 0.96", "-143.686, -30.6488, -34.0143, 0.44", "-144.079, -31.3272, -34.286, 0.29", "-144.609, -32.3397, -34.7369, 0.29", "-144.901, -32.9379, -35.0029, 0.52", "-145.206, -33.5653, -35.2743, 0.52", "-145.655, -34.5013, -35.6072, 0.22", "-145.961, -35.1917, -35.8586, 0.22", "-146.362, -36.1225, -36.2055, 0.88", "-146.602, -36.6905, -36.4089, 1.11", "-146.855, -37.2278, -36.6042, 1.11", "-147.518, -38.522, -37.0541, 0.29", "-148.014, -39.4658, -37.3539, 0.74", "-148.307, -40.0038, -37.5099, 0.74", "-148.735, -40.7526, -37.6993, 0.44", "-149.335, -41.7448, -37.9547, 0.29", "-150.339, -43.3142, -38.3488, 0.29", "-151.224, -44.6558, -38.6648, 0.74", "-151.59, -45.2239, -38.7981, 0.74", "-152.275, -46.3569, -39.0567, 0.37", "-152.741, -47.156, -39.2344, 0.52", "-152.967, -47.5553, -39.3224, 0.52", "-153.806, -49.0058, -39.6779, 0.29", "-154.309, -49.8799, -39.8985, 0.29", "-154.869, -50.8749, -40.1444, 0.29", "-155.069, -51.2372, -40.23, 0.74", "-155.343, -51.7532, -40.3342, 0.74", "-155.974, -52.9788, -40.5573, 0.29", "-156.402, -53.8595, -40.7008, 0.66", "-156.638, -54.4241, -40.7686, 0.66", "-156.949, -55.4104, -40.8609, 0.22", "-157.132, -56.1914, -40.9188, 0.22", "-157.199, -56.6634, -40.9452, 0.74", "-157.206, -57.0465, -40.9664, 0.74", "-157.092, -58.1064, -40.9507, 0.22", "-156.936, -58.9536, -40.9052, 0.37", "-156.815, -59.4527, -40.8884, 0.37", "-156.56, -60.3573, -40.8801, 0.15", "-156.228, -61.4293, -40.8924, 0.15", "-155.562, -63.3792, -40.705, 0.15", "-154.869, -65.2295, -40.3336, 0.15", "-154.414, -66.3405, -40.0226, 0.52", "-154.165, -66.8821, -39.8455, 0.66", "-153.876, -67.4868, -39.6262, 0.22", "-152.379, -70.5324, -38.3991, 0.22", "-150.939, -73.3465, -37.144, 0.22", "-150.226, -74.6634, -36.4432, 0.22", "-149.646, -75.7467, -35.7994, 0.22" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-55.6318, 117.711, -106.88, 0.29", "-56.9834, 118.693, -107.128, 0.29", "-57.9253, 119.373, -107.296, 0.29", "-59.5169, 120.523, -107.551, 0.29", "-61.4972, 121.981, -107.849, 0.29", "-62.5225, 122.747, -108.006, 0.44", "-63.3143, 123.347, -108.134, 0.44", "-64.0513, 123.919, -108.24, 0.44", "-65.2937, 124.903, -108.425, 0.37", "-66.1781, 125.615, -108.572, 0.37", "-66.8584, 126.17, -108.701, 0.37", "-67.6998, 126.85, -108.851, 0.74", "-68.1534, 127.208, -108.929, 0.74", "-69.4923, 128.214, -109.178, 0.37", "-70.8761, 129.198, -109.455, 0.37", "-71.9321, 129.888, -109.665, 0.37", "-73.4841, 130.855, -109.972, 0.74", "-74.1266, 131.242, -110.108, 0.74", "-75.5266, 132.043, -110.437, 0.59", "-76.9372, 132.805, -110.8, 0.44", "-78.545, 133.641, -111.218, 0.44", "-79.4677, 134.112, -111.451, 0.74", "-80.2419, 134.505, -111.643, 0.74", "-81.7982, 135.312, -111.997, 0.44", "-82.7578, 135.819, -112.211, 0.44", "-84.1794, 136.585, -112.527, 0.59", "-85.0759, 137.088, -112.738, 0.81", "-85.8331, 137.522, -112.912, 0.81", "-86.7818, 138.08, -113.131, 0.52", "-87.7704, 138.692, -113.369, 0.81", "-88.4258, 139.105, -113.55, 0.81", "-89.1469, 139.566, -113.772, 0.81", "-90.147, 140.2, -114.118, 0.37", "-91.2199, 140.885, -114.536, 0.37", "-91.9558, 141.389, -114.817, 0.59", "-92.9841, 142.15, -115.201, 0.59", "-94.1152, 143.037, -115.601, 0.88", "-95.3226, 144.021, -115.987, 0.59", "-98.4054, 146.609, -116.873, 0.29", "-100.545, 148.407, -117.387, 0.29", "-102.073, 149.676, -117.677, 0.59", "-102.853, 150.314, -117.776, 0.59", "-104.009, 151.243, -117.853, 0.66", "-104.607, 151.707, -117.847, 0.74", "-105.932, 152.629, -117.728, 0.29", "-107.169, 153.366, -117.607, 0.29", "-108.261, 153.947, -117.505, 0.29", "-109.155, 154.395, -117.447, 0.52", "-109.943, 154.788, -117.408, 0.52", "-111.249, 155.441, -117.364, 0.52", "-112.1, 155.885, -117.337, 0.29", "-113.327, 156.53, -117.298, 0.29", "-114.293, 157.069, -117.257, 0.66", "-114.925, 157.448, -117.224, 0.66", "-115.867, 158.059, -117.166, 0.37", "-116.921, 158.791, -117.136, 0.37", "-117.735, 159.36, -117.156, 0.59", "-118.618, 159.95, -117.21, 0.59", "-119.83, 160.729, -117.328, 0.37", "-120.858, 161.353, -117.455, 0.37", "-122.114, 162.078, -117.663, 0.66", "-122.986, 162.551, -117.875, 0.74", "-123.8, 162.989, -118.154, 0.37", "-124.53, 163.402, -118.466, 0.37", "-124.904, 163.63, -118.639, 0.52", "-125.913, 164.269, -119.085, 0.52", "-126.762, 164.808, -119.385, 0.52", "-127.606, 165.32, -119.635, 0.52", "-128.369, 165.79, -119.857, 0.52", "-129.742, 166.59, -120.235, 0.52", "-130.52, 167.012, -120.425, 0.44", "-131.987, 167.727, -120.687, 0.44", "-132.968, 168.139, -120.775, 0.52" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-55.6318, 117.711, -106.88, 0.44", "-55.7674, 119.333, -107.165, 0.44", "-55.9109, 120.871, -107.502, 0.44", "-56.0517, 122.094, -107.877, 0.44", "-56.1519, 122.7, -108.081, 0.44", "-56.3723, 124.054, -108.547, 0.96", "-56.5105, 124.947, -108.854, 0.96", "-56.6648, 125.971, -109.231, 0.96", "-56.8519, 127.232, -109.69, 0.81", "-57.0846, 128.924, -110.24, 0.44", "-57.2678, 130.285, -110.626, 0.44", "-57.4386, 131.71, -110.954, 0.66", "-57.5351, 133.086, -111.202, 0.66", "-57.5451, 134.441, -111.385, 0.66", "-57.4838, 135.938, -111.527, 1.18", "-57.4028, 136.927, -111.621, 1.18", "-57.2539, 138.739, -111.785, 0.96", "-57.107, 140.517, -111.938, 0.66", "-57.0112, 142.058, -112.062, 0.59", "-56.965, 143.768, -112.202, 1.11", "-56.9988, 145.395, -112.333, 1.25", "-57.0668, 146.299, -112.385, 1.25", "-57.2714, 147.797, -112.436, 0.66", "-57.5893, 149.484, -112.45, 0.66", "-57.9486, 151.223, -112.409, 0.44", "-58.1665, 152.288, -112.353, 0.44", "-58.3744, 153.298, -112.275, 1.25", "-58.5532, 154.215, -112.2, 1.25", "-58.9092, 155.965, -112.063, 0.74", "-59.1038, 156.865, -111.992, 0.88", "-59.3889, 158.062, -111.901, 0.88", "-59.7945, 159.614, -111.799, 0.59", "-60.293, 161.436, -111.716, 0.44", "-60.6249, 162.599, -111.667, 0.44", "-60.9948, 163.864, -111.623, 1.4", "-61.2823, 164.904, -111.611, 1.4", "-61.4183, 165.468, -111.614, 1.4", "-61.7769, 167.227, -111.684, 0.59", "-62.1301, 169.053, -111.812, 0.44", "-62.3063, 169.964, -111.905, 0.44", "-62.6368, 171.567, -112.105, 1.03", "-62.9103, 172.734, -112.256, 1.03", "-63.3378, 174.295, -112.463, 0.59", "-64.043, 176.545, -112.727, 1.47", "-64.4531, 177.77, -112.84, 1.25", "-65.1252, 179.602, -112.937, 0.44", "-65.7403, 181.18, -112.946, 0.44", "-66.1861, 182.359, -112.903, 1.18", "-66.6163, 183.621, -112.795, 1.47", "-66.8566, 184.472, -112.716, 1.47", "-67.1922, 186.114, -112.572, 0.29", "-67.3085, 187.199, -112.511, 0.29", "-67.3058, 188.303, -112.509, 0.52", "-67.2433, 189.056, -112.555, 0.52", "-67.0824, 190.382, -112.776, 0.59", "-66.9881, 191.184, -112.979, 0.96", "-66.9299, 191.861, -113.21, 0.96", "-66.9476, 192.432, -113.428, 0.96", "-67.1281, 193.478, -113.846, 0.66", "-67.3785, 194.381, -114.195, 0.52", "-67.6516, 195.181, -114.467, 0.96", "-68.0322, 196.191, -114.822, 1.11", "-68.2684, 196.828, -115.051, 1.11", "-68.6066, 197.779, -115.389, 0.88", "-68.9362, 198.771, -115.775, 0.88", "-69.301, 199.932, -116.217, 0.52", "-69.6061, 200.948, -116.592, 0.52", "-69.95, 202.137, -117.021, 1.11", "-70.1677, 202.946, -117.307, 1.11", "-70.6187, 204.566, -117.832, 0.66", "-70.9919, 205.774, -118.193, 0.44", "-71.3077, 206.785, -118.486, 1.47", "-71.6377, 207.881, -118.769, 1.47", "-71.8786, 208.759, -118.971, 1.47", "-72.2296, 210.444, -119.309, 0.37", "-72.4036, 212.021, -119.58, 0.37", "-72.4061, 214.267, -119.976, 0.81", "-72.3147, 215.281, -120.15, 0.81", "-72.2117, 215.93, -120.259, 0.81", "-71.9229, 217.3, -120.497, 0.66", "-71.5956, 218.566, -120.716, 0.66", "-71.2946, 219.745, -120.901, 0.59", "-71.0615, 221.143, -121.127, 0.59", "-71.0164, 222.176, -121.331, 1.03", "-71.0862, 222.901, -121.492, 1.03", "-71.3602, 224.063, -121.758, 1.33", "-71.5759, 224.695, -121.906, 1.33", "-72.2283, 226.286, -122.272, 0.59", "-72.7579, 227.471, -122.544, 0.37", "-73.2422, 228.535, -122.776, 0.37", "-73.9075, 230.003, -123.087, 0.37", "-74.634, 231.626, -123.418, 0.37", "-75.3669, 233.289, -123.731, 0.37", "-76.1684, 235.219, -124.077, 1.03", "-76.5669, 236.217, -124.292, 1.03", "-77.1182, 237.588, -124.633, 0.74", "-77.7443, 239.069, -125.044, 0.59", "-78.2421, 240.177, -125.369, 0.59", "-79.0361, 241.796, -125.878, 0.96", "-79.6995, 243.013, -126.254, 0.96", "-80.3055, 244.038, -126.563, 0.66", "-80.6895, 244.673, -126.744, 0.66", "-81.3348, 245.756, -127.027, 0.59", "-82.0044, 247.004, -127.298, 0.37", "-82.558, 248.144, -127.486, 0.37", "-83.1212, 249.49, -127.655, 0.74", "-83.4986, 250.5, -127.767, 0.74", "-83.9202, 251.693, -127.879, 0.74", "-84.4359, 253.22, -128.042, 0.52", "-84.6832, 253.983, -128.131, 0.52", "-85.3264, 255.859, -128.369, 0.52", "-85.9553, 257.494, -128.575, 0.44", "-86.3411, 258.369, -128.683, 0.44", "-87.0816, 259.894, -128.838, 1.25", "-87.3115, 260.334, -128.873, 1.25", "-88.2798, 262.146, -128.98, 0.59", "-89.073, 263.589, -129.056, 0.37", "-89.7967, 264.868, -129.055, 0.37", "-90.82, 266.62, -128.934, 0.37", "-91.7, 268.082, -128.736, 0.37", "-92.1935, 268.941, -128.601, 0.37", "-92.7753, 270.064, -128.459, 0.59", "-93.549, 271.871, -128.345, 0.59", "-94.0887, 273.205, -128.28, 0.37", "-94.7049, 274.87, -128.253, 0.37", "-95.376, 276.979, -128.279, 0.37", "-95.8964, 279.175, -128.416, 0.37", "-96.0927, 280.984, -128.724, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-42.248, 8.1843, 6.69253, 1.03", "-41.1748, 6.11496, 4.32546, 1.03", "-40.8317, 5.22513, 3.61, 1.03", "-40.5541, 4.25418, 2.93635, 2.14", "-40.4625, 3.74043, 2.59319, 2.14", "-40.3372, 1.88297, 1.17337, 1.18", "-40.3662, 0.561934, 0.0855521, 1.11", "-40.6079, -0.875816, -0.981273, 1.33", "-40.9415, -1.73934, -1.66946, 1.33", "-41.883, -3.05948, -2.89672, 1.33", "-43.5872, -4.39137, -4.51163, 2.06", "-44.3247, -4.66915, -5.05078, 2.65", "-45.4899, -4.8532, -5.76015, 2.65", "-47.2439, -4.85876, -6.70158, 2.14", "-48.4499, -4.69088, -7.27501, 1.84", "-49.9708, -4.25907, -7.86941, 1.84", "-51.5816, -3.67364, -8.41279, 1.77", "-52.5023, -3.30771, -8.73628, 1.69", "-53.1772, -3.0429, -8.97497, 1.69", "-54.5898, -2.5724, -9.49729, 1.47", "-56.2368, -2.2381, -10.103, 0.96", "-57.6305, -2.56382, -10.7121, 0.74", "-58.0693, -3.2565, -11.1761, 0.74", "-58.6529, -4.68747, -12.049, 0.96", "-59.2181, -6.41887, -13.0675, 0.96", "-59.6482, -7.8406, -13.8514, 0.96", "-60.2496, -9.76372, -14.7669, 1.47", "-61.1508, -12.177, -15.7845, 0.96", "-61.7218, -13.418, -16.2762, 1.47", "-62.8355, -15.4193, -17.0671, 0.96", "-63.6094, -16.689, -17.5271, 0.74", "-64.9834, -18.926, -18.1751, 1.18", "-65.8666, -20.5376, -18.4763, 0.96", "-66.2352, -21.445, -18.6208, 0.96", "-66.5396, -22.8067, -18.96, 0.74", "-66.661, -24.7274, -19.5577, 0.96", "-66.6216, -25.8368, -19.9883, 1.11", "-66.4527, -27.3511, -20.6587, 0.59", "-66.2638, -28.6522, -21.2382, 0.96", "-66.0653, -30.0328, -21.822, 0.74", "-65.7693, -32.3294, -22.7641, 0.59", "-65.6054, -33.4854, -23.2196, 0.44", "-65.3142, -34.9317, -23.6897, 1.03", "-65.1113, -35.6604, -23.8718, 1.03", "-64.5705, -37.0832, -24.1172, 0.59", "-63.8718, -38.4863, -24.2621, 0.74", "-62.8208, -40.2631, -24.3901, 0.52", "-61.8314, -41.8837, -24.4412, 1.33", "-61.4543, -42.495, -24.4463, 1.25", "-60.7403, -43.6901, -24.4593, 0.74", "-60.0374, -44.9609, -24.5065, 1.11", "-59.6032, -45.8663, -24.5546, 1.55", "-59.323, -46.5131, -24.6239, 1.55", "-58.8391, -47.7958, -24.8357, 0.59", "-58.3934, -49.1571, -25.0353, 0.59", "-58.0562, -50.439, -25.1647, 0.59", "-57.718, -51.8912, -25.2932, 0.37" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-42.248, 8.1843, 6.69253, 2.36", "-42.5361, 8.37281, 6.67815, 2.36", "-44.4234, 9.58582, 6.4637, 1.18", "-45.9864, 10.5931, 6.2035, 1.03", "-46.8724, 11.1766, 6.02084, 1.03", "-48.0926, 11.9935, 5.75871, 1.47", "-48.5701, 12.3173, 5.6478, 1.47", "-49.538, 12.9754, 5.39793, 1.11", "-50.6815, 13.785, 5.05266, 1.11", "-51.8237, 14.597, 4.72707, 0.96", "-53.0608, 15.4741, 4.41996, 0.96", "-54.0223, 16.1533, 4.23883, 0.81", "-55.6322, 17.3099, 3.97439, 0.81", "-56.4824, 17.9442, 3.86169, 1.25", "-57.5637, 18.7584, 3.74201, 1.25", "-58.3446, 19.3657, 3.6655, 1.25", "-59.548, 20.3431, 3.57363, 1.55", "-60.4202, 21.076, 3.52303, 1.55", "-61.88, 22.3575, 3.41956, 1.03", "-62.7793, 23.178, 3.3495, 1.03", "-64.2659, 24.6271, 3.2296, 0.96", "-65.2491, 25.6746, 3.16023, 1.18", "-66.1335, 26.6973, 3.12706, 0.96", "-67.1469, 27.9107, 3.13527, 1.18", "-67.9778, 28.9378, 3.19783, 1.18", "-68.7069, 29.8489, 3.29934, 1.18", "-69.6626, 31.0526, 3.48285, 1.18", "-70.6656, 32.3336, 3.70798, 1.33", "-71.8609, 33.892, 4.02315, 1.25", "-72.7817, 35.0808, 4.27579, 1.25", "-73.5441, 36.0398, 4.45596, 1.25", "-73.8846, 36.4589, 4.53454, 1.25", "-74.782, 37.5452, 4.71999, 0.81", "-75.8064, 38.8158, 4.91343, 0.81", "-76.7036, 39.9371, 5.11518, 0.96", "-77.8718, 41.3559, 5.38965, 0.96", "-78.9601, 42.6624, 5.65799, 0.96", "-79.8485, 43.6992, 5.91197, 1.4", "-80.9518, 44.9075, 6.26407, 1.03", "-82.3804, 46.358, 6.73703, 0.81", "-83.1808, 47.1015, 7.00256, 0.81", "-84.3546, 48.0665, 7.36975, 0.81", "-85.385, 48.8093, 7.65748, 1.18", "-86.8822, 49.6994, 8.05722, 0.96", "-88.2858, 50.3217, 8.39953, 0.96", "-89.851, 50.7957, 8.73218, 0.74", "-91.4872, 51.0861, 9.05709, 0.74", "-92.39, 51.1628, 9.21822, 0.74", "-93.8849, 51.228, 9.44922, 0.88", "-95.3577, 51.2452, 9.67265, 0.88", "-96.2594, 51.2646, 9.80118, 0.88", "-98.3545, 51.374, 10.0481, 0.59", "-99.1875, 51.451, 10.128, 0.59", "-100.574, 51.6531, 10.2352, 0.96", "-101.905, 51.9324, 10.3159, 0.96", "-103.537, 52.3767, 10.3919, 0.44", "-105.314, 52.9545, 10.4503, 0.74", "-106.691, 53.4918, 10.4793, 0.88", "-107.546, 53.8997, 10.4892, 1.03", "-108.308, 54.3585, 10.4892, 1.03", "-109.39, 55.2473, 10.4918, 0.74", "-110.13, 56.0936, 10.5084, 0.74", "-110.802, 57.2047, 10.5369, 0.81", "-111.397, 58.5373, 10.5364, 1.47", "-111.614, 59.1475, 10.517, 1.47", "-111.911, 60.0929, 10.4623, 0.88", "-112.149, 60.8596, 10.4013, 0.88", "-112.446, 61.6762, 10.3243, 0.81", "-112.903, 62.7055, 10.1992, 0.66", "-113.408, 63.6599, 10.0567, 0.66", "-113.986, 64.6762, 9.89173, 0.44", "-114.886, 66.1442, 9.6311, 0.44", "-115.719, 67.4208, 9.39302, 0.59", "-116.265, 68.1887, 9.2677, 0.59", "-116.991, 69.1411, 9.16023, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-99.6196, -90.6369, 64.2891, 0.29", "-104.917, -98.3443, 67.3633, 0.29", "-110.338, -106.39, 68.9511, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-99.6196, -90.6369, 64.2891, 0.37", "-104.481, -95.6107, 71.3846, 0.29", "-108.774, -100.364, 78.9869, 0.29", "-112.812, -104.494, 87.0962, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "125.91, 84.4749, 5.86017, 1.69", "125.636, 86.4628, 5.97339, 1.69", "125.303, 88.3343, 6.01768, 1.69", "124.864, 90.5788, 6.02678, 1.4", "124.475, 92.4626, 5.99393, 1.4", "124.146, 93.8998, 5.93418, 1.4", "123.764, 95.4599, 5.84883, 1.84", "123.408, 96.718, 5.73309, 1.84", "123.162, 97.544, 5.65423, 1.84", "122.479, 99.8805, 5.43141, 1.25", "121.947, 101.937, 5.24816, 1.25", "121.484, 104.05, 5.08656, 1.4", "121.205, 105.595, 4.9871, 1.4", "120.836, 108.096, 4.84775, 1.4", "120.733, 108.939, 4.82012, 1.4", "120.549, 110.687, 4.81504, 1.47", "120.357, 112.668, 4.85109, 1.47", "120.133, 114.841, 4.90615, 1.4", "119.963, 116.34, 4.95254, 1.4", "119.807, 117.635, 5.01081, 1.4", "119.605, 119.107, 5.05975, 1.25", "119.312, 120.874, 5.08274, 1.4", "119.061, 122.198, 5.06886, 1.4", "118.74, 123.895, 5.01629, 1.55", "118.492, 125.34, 4.92939, 1.55", "118.185, 127.392, 4.74219, 1.33", "118.017, 128.95, 4.59688, 1.55", "117.929, 130.053, 4.49688, 1.69", "117.815, 131.793, 4.34452, 1.4", "117.749, 132.948, 4.25798, 1.4", "117.643, 135.288, 4.13179, 1.4", "117.61, 137.514, 4.06083, 1.62", "117.647, 139.117, 4.01979, 1.62", "117.718, 140.182, 3.97858, 2.06", "117.809, 141.155, 3.94948, 2.06", "117.951, 142.356, 3.92354, 2.06", "118.15, 143.778, 3.8813, 1.33", "118.305, 144.952, 3.8199, 1.33", "118.502, 146.323, 3.72907, 1.25", "118.737, 147.902, 3.58514, 1.4", "118.895, 149.041, 3.44461, 1.4", "118.994, 150.025, 3.31225, 1.4", "119.079, 151.296, 3.14509, 1.4", "119.167, 152.475, 2.99403, 1.4", "119.311, 153.771, 2.85499, 1.4", "119.613, 155.458, 2.71093, 1.03", "119.983, 157.002, 2.68127, 1.47", "120.322, 158.074, 2.72789, 1.47", "120.882, 159.554, 2.87493, 1.25", "121.386, 160.741, 3.03308, 1.18", "121.812, 161.614, 3.16924, 1.18", "122.747, 163.296, 3.44393, 1.33", "124.183, 165.599, 3.77173, 1.47", "125.196, 167.087, 3.93243, 1.62", "125.895, 168.063, 3.9964, 1.62", "127.036, 169.636, 4.04056, 1.55", "127.853, 170.784, 4.05144, 1.55", "128.949, 172.331, 4.0014, 1.4", "130.075, 174.08, 3.88457, 1.33", "130.742, 175.296, 3.75735, 1.33", "131.307, 176.606, 3.62844, 1.33", "131.85, 178.305, 3.49149, 1.33", "132.297, 180.225, 3.3809, 1.33", "132.514, 181.593, 3.34013, 1.33", "132.663, 183.096, 3.33993, 1.25", "132.79, 184.797, 3.39902, 1.25", "132.828, 185.481, 3.4524, 1.25", "132.895, 186.602, 3.58429, 1.25", "133.007, 188.131, 3.89309, 1.69", "133.132, 189.342, 4.17034, 1.69", "133.207, 190.023, 4.34295, 1.69", "133.301, 191.447, 4.62909, 2.06" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "125.91, 84.4749, 5.86017, 0.52", "128.136, 84.4346, 5.82591, 0.52", "129.086, 84.5088, 5.79454, 0.52", "130.409, 84.7085, 5.77787, 0.52", "131.82, 84.915, 5.79256, 0.52", "132.831, 85.0378, 5.83206, 0.52", "134.379, 85.1733, 5.93767, 0.52", "135.978, 85.2679, 6.11885, 0.52", "137.653, 85.2424, 6.36348, 0.52", "138.864, 85.1222, 6.57383, 0.52", "139.801, 84.9427, 6.76414, 1.03", "140.656, 84.7159, 6.97219, 1.25", "141.724, 84.2965, 7.27635, 1.25", "142.773, 83.7496, 7.57942, 0.52", "143.656, 83.2266, 7.80644, 0.52", "145.156, 82.4599, 8.11558, 0.52", "155.011, 80.8072, 8.01043, 0.52", "164.874, 79.5274, 9.00889, 0.52", "174.687, 77.6929, 9.39826, 0.52", "184.345, 75.2245, 9.95994, 0.52", "193.889, 72.5944, 8.67782, 0.52", "203.233, 69.139, 8.31457, 0.52", "212.634, 66.0755, 9.63575, 0.52", "222.406, 64.0538, 10.0922, 0.52", "231.924, 61.7124, 12.0019, 0.52", "241.569, 59.5466, 13.428, 0.52", "251.094, 58.1247, 16.0994, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "47.5176, 39.7838, 3.91658, 0.59", "49.021, 39.6932, 4.15145, 0.59", "50.7944, 39.6183, 4.7127, 0.37", "51.4283, 39.5915, 4.91331, 0.37", "52.5263, 39.5451, 5.2608, 0.37", "53.5482, 39.5019, 5.58422, 0.37", "54.8641, 39.4464, 6.00068, 0.37", "56.5796, 39.4275, 6.81719, 0.29", "65.8612, 37.2431, 9.78943, 0.29", "74.6367, 34.0373, 13.2792, 0.29", "82.9497, 29.449, 16.2371, 0.29", "90.7348, 24.2868, 19.6072, 0.29", "98.285, 20.065, 24.5312, 0.29", "107.116, 17.5763, 28.4692, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "47.5176, 39.7838, 3.91658, 0.44", "49.3095, 39.4758, 4.73441, 0.44", "50.2197, 39.4221, 5.02267, 0.44", "52.4315, 39.3898, 5.56265, 0.88", "53.5263, 39.4085, 5.78641, 0.37", "54.9673, 39.4543, 6.03908, 0.37", "57.112, 39.5341, 6.37019, 0.37", "58.9371, 39.7245, 6.52677, 0.52", "59.8323, 39.8345, 6.56212, 1.18", "60.5336, 39.9269, 6.55128, 1.18", "61.4959, 40.0638, 6.55112, 1.18", "62.0222, 40.1331, 6.55975, 1.18", "62.8843, 40.245, 6.58787, 1.18", "64.6595, 40.4977, 6.67188, 0.44", "66.2151, 40.7308, 6.77011, 0.29", "67.58, 40.946, 6.8677, 0.29", "69.3148, 41.2703, 7.01075, 0.29", "79.0983, 41.696, 9.03406, 0.29", "88.8495, 40.5547, 10.9171, 0.29", "98.7985, 39.8286, 11.597, 0.29", "108.54, 38.0366, 12.9102, 0.29", "118.229, 37.8325, 15.3761, 0.29", "127.876, 37.6402, 18.0022, 0.29", "137.566, 36.1101, 19.912, 0.29", "147.427, 34.7583, 20.8213, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "3.99426, 69.4329, 6.49738, 0.59", "5.96075, 68.8398, 6.63674, 0.59", "6.76907, 68.723, 6.73307, 0.59", "7.74137, 68.5735, 6.7994, 0.37", "8.4924, 68.4742, 6.80853, 0.37", "9.57347, 68.3823, 6.79783, 0.22", "10.65, 68.3581, 6.76536, 0.22", "11.3325, 68.4857, 6.71846, 0.22", "12.6747, 68.9789, 6.58459, 0.22", "13.7602, 69.6444, 6.42195, 0.22", "14.3089, 70.1283, 6.29902, 0.66", "14.2528, 70.9809, 6.12453, 1.11", "14.04, 71.6664, 6.01173, 1.11", "13.7498, 72.3921, 5.91038, 1.11", "13.2876, 73.3496, 5.81247, 0.52", "12.7883, 74.0906, 5.76016, 0.37", "12.4072, 74.5319, 5.73331, 0.37", "19.7799, 80.8272, 3.74507, 0.37", "26.1771, 88.2045, 2.39403, 0.37", "32.7523, 95.3434, 0.617711, 0.37", "40.7952, 100.989, -0.719437, 0.37", "49.1124, 106.392, -0.387609, 0.37", "56.6766, 112.655, 0.846628, 0.37", "65.3333, 117.509, 1.36871, 0.37", "74.6194, 121.094, 0.869192, 0.37", "83.6618, 124.908, -0.842919, 0.37", "92.8367, 126.917, -4.24571, 0.37", "101.535, 130.105, -7.93991, 0.37", "110.307, 132.623, -11.9875, 0.37", "119.405, 133.843, -15.9438, 0.37", "128.5, 133.483, -20.0844, 0.37", "137.951, 134.673, -23.1169, 0.37", "147.267, 135.139, -26.7213, 0.37", "156.908, 136.021, -29.2173, 0.37", "166.692, 137.371, -30.7514, 0.37", "176.572, 138.154, -32.0699, 0.37", "186.461, 139.532, -32.5223, 0.37", "196.111, 141.179, -34.5284, 0.37", "205.159, 143.127, -38.2899, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "3.99426, 69.4329, 6.49738, 0.66", "4.65675, 72.253, 6.50989, 0.66", "5.056, 73.9756, 6.51253, 0.59", "5.56455, 75.9751, 6.50358, 0.52", "6.13249, 78.0921, 6.52141, 0.52", "6.52122, 79.557, 6.54252, 0.52", "6.88775, 81.017, 6.55841, 0.37", "7.15227, 82.3973, 6.54742, 0.37", "7.40471, 84.5008, 6.49255, 0.37", "7.5611, 87.5442, 6.36959, 0.37", "7.55107, 88.8407, 6.32219, 0.22", "7.45398, 90.5683, 6.31379, 0.22", "7.1667, 93.3235, 6.38433, 0.22", "6.94912, 94.7638, 6.46626, 0.22", "6.67735, 96.0216, 6.55545, 0.22", "6.27785, 97.5153, 6.68452, 0.22", "5.79035, 99.3729, 6.93233, 0.22", "5.62116, 100.141, 7.10772, 0.22", "5.51162, 101.478, 7.61431, 0.22", "7.48593, 110.783, 9.85853, 0.22", "8.06494, 120.062, 12.8729, 0.22", "6.86108, 128.758, 17.2327, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "10.8038, 121.785, -33.6666, 0.59", "11.2417, 124.118, -32.2506, 0.59", "11.9539, 127.138, -30.9157, 0.74", "12.3498, 128.763, -30.3364, 0.81", "12.8349, 130.993, -29.615, 0.59", "13.1726, 132.814, -29.0848, 0.59", "13.4419, 134.526, -28.6277, 0.52", "13.6997, 137.454, -28.1513, 0.88", "13.7381, 139.103, -27.9701, 0.88", "13.627, 141.033, -27.8043, 0.52", "13.3486, 143.37, -27.5535, 0.59", "13.1666, 144.571, -27.4084, 0.59", "12.4898, 148.737, -26.8933, 0.44", "12.1545, 150.734, -26.6539, 0.44", "11.4608, 155.419, -26.0016, 0.52", "11.2058, 157.536, -25.6795, 0.52", "10.9915, 159.779, -25.2734, 0.59", "10.776, 162.711, -24.6726, 0.59", "10.6446, 165.011, -24.1617, 0.74", "10.4264, 167.769, -23.5614, 0.96", "10.2283, 169.595, -23.1849, 0.96", "9.90693, 171.99, -22.715, 0.81", "9.54384, 174.253, -22.2696, 0.59", "9.079, 176.755, -21.8016, 0.59", "8.37598, 180.323, -21.2189, 0.59", "7.93588, 182.404, -20.9399, 0.88", "7.57725, 184.034, -20.723, 1.33", "7.01458, 186.55, -20.4067, 1.18", "6.60615, 188.419, -20.1641, 0.88", "6.30844, 189.809, -19.9817, 0.81", "5.97933, 191.398, -19.722, 1.11", "5.54451, 193.481, -19.3299, 1.4", "5.21674, 194.963, -19.0452, 1.4", "4.88672, 196.338, -18.7305, 1.33", "4.41308, 198.161, -18.2451, 1.18", "3.82066, 200.233, -17.648, 1.18", "3.4273, 201.482, -17.271, 1.33", "2.69067, 203.747, -16.5545, 0.88", "2.21488, 205.205, -16.1022, 0.88", "1.6785, 206.818, -15.6451, 0.88", "0.916381, 209.052, -15.0772, 0.96", "0.486917, 210.33, -14.8007, 0.96", "-0.113467, 212.226, -14.3957, 0.74", "-0.66003, 214.045, -13.9978, 0.74", "-1.29008, 216.508, -13.467, 0.66", "-1.54956, 217.78, -13.1592, 1.11", "-1.72343, 218.783, -12.9049, 1.11", "-1.93275, 220.145, -12.5386, 0.88", "-2.12232, 221.424, -12.15, 0.88", "-2.33035, 223.379, -11.4494, 1.25", "-2.34046, 224.597, -10.9216, 1.03" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.8038, 121.785, -33.6666, 1.18", "10.8826, 122.233, -34.5625, 1.18", "11.0645, 123.717, -37.0424, 1.18", "11.0648, 123.74, -37.0749, 1.18", "10.9028, 125.144, -38.7975, 0.37", "10.7632, 125.799, -39.4955, 0.37", "10.5616, 126.55, -40.2012, 0.59", "10.4005, 127.062, -40.5725, 0.59", "10.0438, 128.059, -41.1119, 0.37", "9.64219, 129.113, -41.6299, 0.22", "9.31062, 129.955, -42.0042, 0.22", "8.94645, 131.002, -42.4756, 0.74", "8.69114, 131.925, -42.8887, 0.96", "8.56206, 132.575, -43.1665, 0.96", "8.45381, 133.576, -43.6004, 0.52", "8.39497, 135.179, -44.309, 0.66", "8.40883, 136.377, -44.8057, 0.22", "8.49378, 137.594, -45.3279, 0.22", "8.68012, 138.818, -45.8753, 0.22", "8.91746, 139.898, -46.3838, 0.37", "9.20547, 140.962, -46.8878, 0.37", "9.63492, 142.467, -47.5511, 0.81", "10.0452, 143.97, -48.1907, 0.52", "10.346, 145.231, -48.6867, 0.52", "10.6272, 146.719, -49.2468, 0.29", "10.8364, 148.034, -49.7061, 0.29", "11.0818, 149.985, -50.3597, 0.29", "11.1663, 151.171, -50.7365, 0.29", "11.1593, 152.632, -51.1093, 0.44", "11.0751, 153.8, -51.3955, 0.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-139.819, 2.36228, -32.4417, 0.44", "-141.52, 1.24524, -33.3957, 0.44", "-142.334, 0.612807, -34.0258, 0.44", "-143.384, -0.259772, -34.9217, 0.37", "-143.978, -0.761506, -35.4436, 0.37", "-144.582, -1.26445, -35.9745, 0.44", "-145.848, -2.30172, -37.1676, 0.81", "-146.552, -2.84648, -37.8757, 0.96", "-147.051, -3.17108, -38.3989, 0.81", "-147.625, -3.463, -38.9555, 0.96", "-148.116, -3.63738, -39.3891, 0.96", "-149.763, -3.96742, -40.6144, 0.59", "-150.934, -4.06692, -41.3292, 0.44", "-152.358, -4.09612, -42.0224, 0.96", "-153.307, -4.06636, -42.4317, 1.18", "-154.336, -3.99057, -42.7975, 1.18", "-155.716, -3.84595, -43.1567, 0.44", "-156.498, -3.7303, -43.2997, 0.44", "-158.267, -3.40896, -43.5852, 0.44", "-159.2, -3.19522, -43.7523, 0.88", "-160.192, -2.93188, -43.9587, 0.88", "-161.46, -2.57656, -44.2621, 0.59", "-162.532, -2.2784, -44.5879, 0.66", "-163.592, -1.96116, -45.006, 0.37", "-164.627, -1.573, -45.5105, 0.37", "-165.448, -1.22276, -45.9471, 0.81", "-165.995, -0.975816, -46.2487, 0.81", "-166.365, -0.819596, -46.442, 0.81", "-167.256, -0.522456, -46.8354, 0.81", "-168.66, -0.167586, -47.4003, 0.59", "-169.914, 0.0444554, -47.8417, 0.44", "-171.529, 0.183776, -48.3577, 0.74", "-172.73, 0.178107, -48.721, 0.74", "-173.847, 0.0664204, -49.0473, 0.52", "-174.758, -0.0921346, -49.2961, 0.88", "-175.654, -0.303451, -49.5636, 0.88", "-177.045, -0.618208, -49.984, 0.44", "-178.318, -0.883816, -50.4455, 0.29", "-179.403, -1.08535, -50.8911, 0.29", "-180.754, -1.30188, -51.4981, 0.59", "-181.708, -1.42572, -51.9507, 0.59", "-182.905, -1.49864, -52.5308, 0.29", "-183.726, -1.52515, -52.9324, 0.29", "-184.575, -1.566, -53.3379, 0.81", "-185.23, -1.61709, -53.6575, 0.81", "-187.139, -1.86028, -54.5875, 0.29", "-188.623, -2.14803, -55.2917, 0.29", "-189.82, -2.42231, -55.8362, 0.29", "-191.389, -2.80018, -56.5082, 0.81", "-192.143, -2.98656, -56.8207, 0.81", "-192.546, -3.095, -56.9791, 0.81", "-193.881, -3.48621, -57.5067, 0.22", "-195.068, -3.8562, -57.9802, 0.22", "-195.732, -4.03419, -58.241, 0.44", "-196.427, -4.19127, -58.4953, 0.44", "-197.152, -4.33151, -58.7354, 0.37", "-198.847, -4.56594, -59.2193, 0.29", "-199.899, -4.65893, -59.4939, 0.74", "-200.902, -4.73872, -59.7397, 0.74", "-202.015, -4.7981, -59.9848, 0.29", "-203.548, -4.86022, -60.3004, 0.22", "-206.186, -4.96313, -60.7867, 0.22", "-207.558, -5.01439, -60.9846, 0.59", "-208.215, -5.03032, -61.0707, 0.59", "-208.929, -5.04597, -61.1701, 0.59", "-210.296, -5.07176, -61.4108, 0.22", "-211.461, -5.10961, -61.6713, 0.22", "-215.067, -5.30673, -62.7278, 0.22", "-216.066, -5.36309, -63.068, 0.22", "-216.939, -5.39631, -63.4038, 0.44", "-218.642, -5.42327, -64.1507, 0.29", "-220.482, -5.39438, -65.049, 0.74", "-221.697, -5.32551, -65.7477, 0.74", "-222.363, -5.27231, -66.2029, 0.59", "-223.408, -5.19459, -66.9861, 0.29", "-224.732, -5.13471, -68.0703, 0.52", "-225.234, -5.14158, -68.5174, 0.74", "-226.474, -5.16802, -69.6752, 0.52", "-227.313, -5.20533, -70.4716, 0.37", "-229.085, -5.40286, -72.3004, 0.96", "-229.874, -5.55613, -73.2104, 1.03", "-230.873, -5.82681, -74.4834, 0.52" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-139.819, 2.36228, -32.4417, 0.74", "-140.902, 3.85333, -32.4789, 0.74", "-141.554, 4.70667, -32.4976, 0.74", "-142.584, 6.01175, -32.5217, 0.52", "-143.452, 7.09322, -32.5457, 0.52", "-144.366, 8.19928, -32.5779, 0.74", "-145.04, 8.99482, -32.6075, 0.74", "-145.837, 9.86474, -32.616, 0.44", "-147.018, 11.1161, -32.5925, 0.59", "-147.632, 11.7509, -32.5594, 1.03", "-148.22, 12.3487, -32.5151, 1.03", "-148.808, 12.9405, -32.4799, 1.03", "-150.223, 14.3383, -32.4308, 0.44", "-151.331, 15.418, -32.4154, 0.44", "-152.301, 16.3503, -32.4345, 0.81", "-152.822, 16.8475, -32.4625, 0.81", "-153.972, 17.9324, -32.5665, 0.44", "-154.606, 18.5049, -32.6483, 0.44", "-155.692, 19.4351, -32.8389, 0.81", "-156.911, 20.4216, -33.0767, 1.55", "-157.524, 20.9114, -33.2028, 1.55", "-158.291, 21.5146, -33.3504, 1.55", "-159.427, 22.4086, -33.5525, 0.52", "-160.544, 23.2884, -33.755, 0.37", "-161.711, 24.221, -33.9922, 0.66", "-162.472, 24.8435, -34.1554, 0.66", "-163.429, 25.6553, -34.3878, 0.44", "-164.868, 26.8998, -34.7693, 0.29", "-166.047, 27.9289, -35.1157, 0.96", "-166.771, 28.5497, -35.3266, 1.4", "-167.258, 28.961, -35.4598, 1.4", "-167.847, 29.4441, -35.6371, 1.4", "-169.266, 30.5834, -36.0739, 0.44", "-170.332, 31.3949, -36.3939, 0.37", "-171.359, 32.142, -36.6823, 0.37", "-172.234, 32.7475, -36.9123, 0.37", "-173.554, 33.6362, -37.2481, 0.37", "-174.779, 34.4524, -37.5423, 0.37", "-176.001, 35.2424, -37.8539, 0.74", "-176.953, 35.841, -38.1029, 0.96", "-177.796, 36.3639, -38.3362, 0.96", "-178.674, 36.8946, -38.5865, 0.96", "-179.143, 37.1751, -38.7313, 0.96", "-180.345, 37.9074, -39.1728, 0.29", "-181.259, 38.4654, -39.537, 0.29", "-182.414, 39.1599, -40.002, 0.29", "-183.357, 39.7228, -40.3779, 0.96", "-184.031, 40.1133, -40.6386, 0.96", "-184.71, 40.4866, -40.8841, 1.18", "-185.788, 41.0588, -41.2415, 0.66", "-187.015, 41.6796, -41.6194, 0.29", "-187.946, 42.1411, -41.8934, 0.29", "-189.14, 42.7422, -42.2208, 0.29", "-190.065, 43.2319, -42.4472, 0.74", "-190.783, 43.6382, -42.612, 0.74", "-191.352, 43.9887, -42.7421, 0.74", "-193.157, 45.1896, -43.1644, 0.29", "-194.161, 45.9218, -43.3998, 0.29", "-195.529, 47.041, -43.7596, 0.29", "-196.49, 47.9236, -44.0444, 0.96", "-197.096, 48.53, -44.2426, 0.96", "-197.456, 48.9097, -44.3719, 0.96", "-198.265, 49.7689, -44.7017, 0.44", "-199.414, 50.8646, -45.1917, 0.37", "-200.677, 51.9378, -45.7294, 1.4", "-200.919, 52.1232, -45.8242, 1.4", "-201.8, 52.7438, -46.1359, 1.18", "-203.341, 53.7204, -46.6883, 0.29", "-205.214, 54.7778, -47.3086, 0.29", "-206.197, 55.2845, -47.61, 0.66", "-206.913, 55.6417, -47.8203, 0.66", "-207.623, 56.0055, -48.0203, 0.66", "-209.141, 56.8107, -48.4272, 0.44", "-211.361, 58.029, -48.9819, 0.22", "-213.794, 59.3603, -49.5679, 0.22", "-214.694, 59.8398, -49.7665, 0.59", "-215.472, 60.2392, -49.9181, 0.59", "-216.893, 60.9547, -50.1409, 0.22", "-218.01, 61.5161, -50.269, 0.22", "-218.963, 61.9951, -50.3845, 0.66", "-219.885, 62.4543, -50.4927, 0.81", "-220.871, 62.9411, -50.617, 0.81", "-222.0, 63.4959, -50.7727, 0.37", "-222.759, 63.8793, -50.8804, 0.37", "-223.877, 64.4451, -51.0232, 0.29", "-225.02, 65.0515, -51.1856, 0.29", "-226.316, 65.7432, -51.3841, 0.15", "-227.326, 66.284, -51.5611, 0.15", "-228.738, 67.0273, -51.835, 0.15", "-231.133, 68.3062, -52.3448, 0.15", "-232.36, 68.9646, -52.626, 0.52", "-233.12, 69.3865, -52.8166, 0.74", "-233.924, 69.8527, -53.0278, 0.74", "-235.444, 70.7784, -53.432, 0.29", "-237.327, 71.9909, -53.9206, 0.29", "-238.203, 72.6502, -54.1149, 0.44", "-239.003, 73.3334, -54.3298, 0.44", "-240.316, 74.6237, -54.7999, 0.22", "-241.357, 75.7666, -55.2437, 0.22", "-242.362, 76.974, -55.7393, 0.22", "-244.725, 79.921, -56.9588, 0.22", "-246.527, 82.2085, -57.9621, 0.22", "-248.302, 84.3934, -58.9366, 0.29", "-249.236, 85.5174, -59.4588, 0.29", "-250.241, 86.6879, -60.028, 0.29", "-251.694, 88.2953, -60.8385, 0.29", "-253.225, 89.8297, -61.6121, 0.22", "-255.387, 91.8439, -62.5184, 0.22", "-256.471, 92.8004, -62.9521, 0.37", "-257.411, 93.6618, -63.3292, 0.37", "-257.66, 93.8983, -63.4284, 0.37", "-258.618, 94.8463, -63.8151, 0.29", "-259.89, 96.126, -64.3123, 0.37", "-262.928, 99.2202, -65.4659, 0.29", "-265.312, 101.617, -66.3907, 0.29", "-266.404, 102.72, -66.8208, 0.66", "-267.095, 103.429, -67.0806, 0.66", "-268.673, 105.089, -67.6185, 0.29", "-270.42, 106.954, -68.194, 0.29", "-272.06, 108.726, -68.7419, 0.52", "-272.773, 109.498, -68.9681, 0.52", "-274.647, 111.624, -69.5047, 0.29", "-276.332, 113.738, -69.9887, 0.29", "-277.278, 115.113, -70.2805, 0.59", "-278.074, 116.47, -70.5582, 0.59", "-279.146, 118.51, -70.9483, 0.37", "-279.874, 119.977, -71.2563, 0.22", "-281.332, 123.068, -72.0024, 0.22", "-282.38, 125.346, -72.5546, 0.22", "-283.403, 127.471, -73.0298, 0.81", "-283.825, 128.295, -73.2225, 0.81", "-284.951, 130.265, -73.6998, 0.29", "-285.664, 131.353, -73.9552, 0.52", "-286.654, 132.624, -74.2245, 0.52", "-288.028, 134.233, -74.5508, 0.29", "-288.989, 135.33, -74.7853, 0.29", "-289.714, 136.187, -74.9908, 0.44", "-290.293, 136.903, -75.1818, 0.44", "-291.443, 138.369, -75.6301, 0.29", "-292.927, 140.279, -76.3333, 0.29", "-294.177, 141.867, -77.0257, 0.22", "-295.301, 143.2, -77.683, 0.52", "-295.994, 143.963, -78.1129, 0.52", "-296.647, 144.619, -78.5291, 0.52", "-297.159, 145.074, -78.8606, 0.52", "-298.12, 145.796, -79.4643, 0.37", "-299.129, 146.465, -80.0472, 0.29", "-300.26, 147.159, -80.5974, 0.88", "-300.813, 147.49, -80.8233, 1.11", "-301.199, 147.733, -80.985, 1.11", "-302.557, 148.662, -81.616, 0.44", "-303.526, 149.377, -82.1474, 0.59", "-305.154, 150.604, -83.0948, 0.29", "-306.72, 151.768, -84.0155, 0.29", "-308.069, 152.773, -84.8344, 0.81", "-308.924, 153.424, -85.3721, 0.74", "-309.985, 154.276, -86.0981, 0.29", "-311.457, 155.517, -87.2014, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-116.991, 69.1411, 9.16023, 0.29", "-118.114, 69.2041, 9.42263, 0.29", "-118.708, 69.2374, 9.56133, 0.29", "-119.711, 69.2937, 9.79563, 0.29", "-129.232, 70.2247, 12.7004, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-116.991, 69.1411, 9.16023, 0.37", "-117.791, 70.232, 8.95552, 0.37", "-118.437, 71.1131, 8.79019, 0.29", "-119.039, 71.935, 8.63597, 0.29", "-119.558, 72.6427, 8.50318, 0.29", "-119.863, 73.0582, 8.4252, 0.29", "-126.169, 80.6242, 8.55641, 0.29", "-132.829, 87.8815, 9.04313, 0.29", "-140.193, 94.43, 9.85739, 0.29", "-148.942, 99.1475, 10.0794, 0.29", "-156.928, 104.872, 11.4043, 0.29", "-164.814, 110.695, 12.8665, 0.29", "-171.611, 117.099, 16.131, 0.29", "-178.246, 124.042, 18.4277, 0.29", "-183.428, 132.082, 20.6939, 0.29", "-187.477, 140.054, 24.7879, 0.29", "-190.454, 149.031, 27.3112, 0.29", "-194.971, 157.171, 30.4542, 0.29", "-200.658, 163.792, 35.0977, 0.29", "-207.837, 168.904, 39.6772, 0.29", "-214.451, 173.374, 45.6119, 0.29", "-221.4, 177.773, 51.2125, 0.29", "-228.188, 182.988, 56.2425, 0.29", "-235.456, 187.117, 61.6509, 0.29", "-241.564, 190.642, 68.6953, 0.29", "-247.554, 192.997, 76.3294, 0.29", "-253.426, 196.459, 83.6032, 0.29", "-259.555, 200.152, 90.5379, 0.29", "-265.078, 205.471, 96.8419, 0.29", "-271.121, 211.753, 101.53, 0.29", "-279.204, 216.447, 104.919, 0.29" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "133.301, 191.447, 4.62909, 0.74", "134.627, 192.543, 4.85441, 0.74", "135.466, 193.346, 5.00494, 0.88", "136.117, 193.969, 5.12183, 0.88", "136.868, 194.688, 5.25654, 0.88", "137.394, 195.191, 5.35095, 0.88", "138.474, 196.225, 5.54465, 0.74", "139.348, 197.128, 5.65589, 0.74" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "133.301, 191.447, 4.62909, 0.66", "132.233, 192.95, 4.47253, 0.66", "131.717, 193.676, 4.41281, 0.66", "131.118, 194.571, 4.35328, 1.11", "130.397, 195.739, 4.27316, 0.59", "129.765, 196.796, 4.20331, 0.52", "129.32, 197.539, 4.15559, 0.52", "128.751, 198.502, 4.11747, 0.74", "128.249, 199.36, 4.07575, 0.74", "127.759, 200.193, 4.02964, 0.88", "127.0, 201.439, 3.95607, 0.44", "126.244, 202.62, 3.88613, 0.37", "125.804, 203.27, 3.84418, 0.74", "125.44, 203.764, 3.81188, 0.74", "124.709, 204.671, 3.76571, 0.96", "123.899, 205.647, 3.74232, 0.37", "123.381, 206.277, 3.72109, 0.37", "122.912, 206.853, 3.699, 0.59", "122.209, 207.749, 3.65978, 0.59", "121.468, 208.76, 3.603, 0.44", "120.814, 209.701, 3.53426, 0.44", "120.332, 210.427, 3.46819, 0.81", "119.97, 211.001, 3.41709, 1.18", "119.191, 212.302, 3.30561, 0.66", "118.534, 213.446, 3.19322, 0.59", "117.971, 214.462, 3.07573, 0.88", "117.48, 215.35, 2.96186, 0.88", "116.796, 216.587, 2.80311, 0.37", "116.591, 216.953, 2.75037, 0.37", "116.178, 217.651, 2.63268, 0.81", "115.713, 218.385, 2.49699, 0.81", "115.033, 219.409, 2.26906, 0.29", "114.698, 219.873, 2.1486, 0.29", "114.127, 220.591, 1.94714, 0.88", "113.745, 221.041, 1.81674, 0.88", "113.004, 221.874, 1.58403, 0.37", "112.397, 222.533, 1.40952, 0.52", "111.84, 223.118, 1.25699, 0.52", "110.909, 224.07, 1.01944, 0.29", "110.314, 224.664, 0.88964, 0.29", "109.55, 225.431, 0.750935, 0.88", "109.039, 225.944, 0.673932, 1.47", "108.584, 226.406, 0.62129, 1.47", "107.874, 227.148, 0.549913, 1.11", "106.748, 228.346, 0.429437, 0.37", "106.156, 229.0, 0.422377, 0.29", "105.755, 229.476, 0.426571, 0.74", "105.359, 229.964, 0.437037, 0.74", "104.712, 230.81, 0.472983, 0.44", "104.23, 231.487, 0.511819, 1.47", "103.378, 232.791, 0.622653, 1.62", "102.723, 233.843, 0.75867, 0.37", "97.4825, 241.796, -1.69062, 0.37", "91.8633, 249.8, -2.71004, 0.37", "84.2617, 256.023, -3.9242, 0.37", "77.5897, 263.141, -5.40376, 0.37", "71.263, 270.574, -6.76662, 0.37", "64.9923, 277.857, -8.9755, 0.37", "57.9424, 284.49, -10.9791, 0.37", "51.1231, 291.453, -12.5585, 0.37", "44.5227, 297.968, -15.9914, 0.37", "38.5058, 304.541, -20.2749, 0.37", "33.261, 311.019, -25.5999, 0.37", "27.8781, 318.126, -29.8296, 0.37", "20.6543, 324.17, -32.8921, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "251.094, 58.1247, 16.0994, 0.29", "260.871, 56.0776, 16.0015, 0.29", "270.611, 54.5399, 17.629, 0.29", "280.226, 54.7429, 20.3697, 0.29", "289.213, 55.4968, 24.6871, 0.29", "297.709, 57.6734, 29.4653, 0.29", "305.769, 60.5032, 34.6228, 0.29", "314.517, 63.3004, 38.5276, 0.29", "322.94, 66.9648, 42.392, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "251.094, 58.1247, 16.0994, 0.37", "260.757, 56.0823, 17.5981, 0.29", "270.095, 53.0774, 19.4153, 0.29", "278.913, 48.4896, 19.0793, 0.29", "287.715, 43.9763, 20.1266, 0.29", "296.391, 39.8366, 22.7134, 0.29", "304.545, 35.5293, 26.4543, 0.29", "311.712, 30.9904, 31.6465, 0.29", "319.254, 25.9336, 35.6746, 0.29" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "147.427, 34.7583, 20.8213, 0.29", "157.175, 34.3704, 23.0183, 0.29", "166.79, 33.8285, 25.7106, 0.29", "176.75, 33.4239, 26.4982, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "147.427, 34.7583, 20.8213, 0.29", "157.315, 34.2072, 22.2065, 0.29", "166.89, 35.2576, 24.8818, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "205.159, 143.127, -38.2899, 0.29", "214.403, 146.47, -39.9628, 0.29", "223.201, 150.618, -42.0811, 0.29", "232.873, 153.036, -42.6319, 0.29", "242.108, 156.77, -42.8486, 0.29", "251.705, 158.538, -44.9938, 0.29", "261.176, 158.62, -48.203, 0.29", "270.923, 158.615, -50.4396, 0.29", "280.586, 157.711, -52.8399, 0.29", "289.969, 155.273, -55.229, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "205.159, 143.127, -38.2899, 0.37", "214.176, 146.497, -40.8889, 0.29", "223.877, 148.231, -42.537, 0.29", "233.868, 147.976, -42.8763, 0.29", "243.665, 148.841, -44.6753, 0.29", "253.267, 151.223, -46.0316, 0.29", "262.606, 152.638, -49.2978, 0.29", "271.671, 155.169, -52.6281, 0.29", "280.607, 159.152, -54.4859, 0.29", "290.037, 162.182, -55.6779, 0.29" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-230.873, -5.82681, -74.4834, 0.22", "-231.437, -6.75109, -74.5968, 0.22", "-232.089, -7.70273, -74.7187, 0.22", "-232.595, -8.39562, -74.8243, 0.52", "-233.349, -9.30397, -74.9718, 0.22", "-234.695, -10.7706, -75.2442, 0.22", "-235.364, -11.4365, -75.3793, 0.66", "-235.968, -11.9133, -75.4975, 0.66", "-236.64, -12.3336, -75.6403, 0.22", "-238.043, -13.06, -75.9473, 0.22", "-238.873, -13.4258, -76.1599, 0.52", "-239.538, -13.6931, -76.3521, 0.74", "-240.503, -14.1472, -76.6609, 0.22", "-241.171, -14.5713, -76.8762, 0.22", "-241.663, -15.001, -77.011, 0.59", "-242.234, -15.666, -77.1751, 0.81", "-242.744, -16.3745, -77.3237, 0.81", "-243.575, -17.6657, -77.5732, 0.22", "-244.408, -19.0768, -77.8133, 0.22", "-245.16, -20.3665, -78.0674, 0.22", "-245.761, -21.3074, -78.3008, 0.22", "-246.157, -21.8541, -78.4603, 0.96", "-246.646, -22.4428, -78.6904, 1.25", "-247.068, -22.8498, -78.9102, 1.25", "-248.025, -23.6095, -79.4863, 0.81", "-248.954, -24.2318, -80.1146, 0.29", "-249.786, -24.7018, -80.6956, 0.29", "-250.662, -25.1679, -81.3403, 0.29", "-251.74, -25.7507, -82.1342, 0.74", "-252.239, -26.0304, -82.5073, 0.74", "-253.155, -26.5889, -83.2097, 0.52", "-253.977, -27.1706, -83.9381, 0.44", "-254.827, -27.89, -84.7398, 0.37", "-255.482, -28.5972, -85.3271, 0.22", "-255.828, -29.0847, -85.6315, 0.66", "-256.068, -29.4843, -85.8363, 0.66", "-256.59, -30.5064, -86.3397, 0.52", "-257.019, -31.4624, -86.9015, 0.29", "-257.523, -32.6869, -87.7449, 0.22", "-257.982, -33.7645, -88.5734, 0.22", "-258.301, -34.4479, -89.1142, 0.66", "-258.83, -35.4097, -89.8764, 1.03", "-259.628, -36.6256, -90.8783, 0.81", "-260.11, -37.2551, -91.4371, 0.29", "-260.746, -37.869, -92.0259, 0.29", "-261.249, -38.2047, -92.3145, 0.22", "-262.383, -38.8445, -92.7354, 0.22", "-263.081, -39.2194, -92.8886, 0.74", "-263.95, -39.7163, -93.007, 0.15", "-264.83, -40.3298, -93.1951, 0.15", "-265.333, -40.869, -93.3899, 0.15", "-265.945, -41.9197, -93.8157, 0.59", "-266.135, -42.422, -94.0317, 0.88", "-266.322, -43.0754, -94.2839, 0.88", "-266.569, -44.0616, -94.656, 0.66", "-266.723, -44.7406, -94.9015, 0.52", "-266.94, -45.757, -95.2648, 0.81", "-267.124, -46.5051, -95.539, 0.88", "-267.324, -47.2928, -95.8562, 0.22", "-267.533, -48.0936, -96.2034, 0.22", "-267.741, -48.8995, -96.5668, 0.74", "-267.864, -49.429, -96.8121, 0.74", "-268.059, -50.3168, -97.2215, 0.52", "-268.263, -51.4166, -97.73, 0.74", "-268.327, -51.8375, -97.9216, 0.74", "-268.438, -53.0472, -98.4517, 0.22", "-268.475, -53.9105, -98.8128, 0.22", "-268.477, -54.4711, -99.0542, 1.18", "-268.468, -55.4412, -99.4617, 1.33", "-268.478, -55.9089, -99.6473, 1.33", "-268.57, -57.5784, -100.233, 0.22", "-268.663, -58.4415, -100.501, 0.22", "-268.887, -59.918, -100.903, 0.52", "-269.07, -60.9393, -101.143, 0.52", "-269.36, -62.4507, -101.451, 0.52", "-269.704, -64.2612, -101.86, 0.66", "-269.966, -65.6294, -102.171, 0.52", "-270.14, -66.7638, -102.439, 0.22", "-270.237, -67.8857, -102.723, 0.66", "-270.218, -68.6307, -102.954, 0.81", "-269.876, -70.8495, -103.767, 0.22", "-269.674, -71.5559, -104.049, 0.22", "-269.435, -72.2162, -104.33, 0.81", "-269.242, -72.7801, -104.575, 0.81", "-269.086, -73.441, -104.847, 0.81", "-269.029, -74.2715, -105.137, 0.22", "-269.13, -75.2581, -105.425, 0.22", "-269.489, -76.4442, -105.8, 0.22", "-269.878, -77.2121, -106.112, 0.66", "-270.531, -78.1856, -106.613, 0.88", "-271.28, -79.0597, -107.167, 1.03", "-271.878, -79.6128, -107.577, 1.03", "-272.733, -80.2849, -108.11, 0.59", "-273.933, -81.1712, -108.793, 0.44", "-274.812, -81.8602, -109.298, 0.96", "-275.317, -82.2794, -109.58, 0.96", "-276.696, -83.3979, -110.334, 0.44", "-277.4, -83.993, -110.694, 0.66", "-278.081, -84.6387, -110.994, 0.44", "-278.946, -85.5654, -111.234, 0.44", "-279.435, -86.1356, -111.321, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-230.873, -5.82681, -74.4834, 0.22", "-231.896, -5.79862, -74.8732, 0.22", "-232.701, -5.72433, -75.1747, 0.66", "-233.232, -5.6407, -75.3611, 0.66", "-234.343, -5.43871, -75.719, 0.22", "-235.734, -5.16642, -76.1893, 0.37", "-236.798, -4.94987, -76.5879, 0.37", "-238.268, -4.61553, -77.2013, 0.22", "-239.1, -4.42941, -77.5834, 0.22", "-239.891, -4.26037, -77.9519, 0.22", "-240.961, -4.06037, -78.4659, 0.59", "-242.091, -3.91038, -79.0072, 0.37", "-242.721, -3.87557, -79.3144, 0.52", "-243.131, -3.90414, -79.5436, 0.52", "-244.216, -4.06778, -80.1507, 0.22", "-245.279, -4.31675, -80.7313, 0.22", "-246.124, -4.5887, -81.1534, 0.88", "-246.886, -4.90119, -81.5284, 0.88", "-248.524, -5.72552, -82.445, 0.37", "-249.421, -6.24341, -83.012, 0.29", "-250.116, -6.69005, -83.4903, 0.29", "-250.524, -6.96653, -83.7788, 0.29", "-251.446, -7.59789, -84.4326, 0.29", "-252.658, -8.42908, -85.3084, 0.74", "-253.073, -8.70339, -85.5964, 0.74", "-253.999, -9.26276, -86.2657, 0.22", "-254.564, -9.53363, -86.6546, 0.22", "-255.178, -9.78702, -87.042, 0.66", "-255.779, -10.0064, -87.3793, 0.88", "-256.828, -10.3507, -87.9407, 0.37", "-257.4, -10.5407, -88.2643, 0.37", "-258.028, -10.751, -88.6285, 0.29", "-258.92, -11.0375, -89.158, 0.29", "-260.085, -11.3843, -89.809, 0.66", "-260.683, -11.5315, -90.1367, 0.66", "-262.008, -11.8234, -90.8294, 0.52", "-262.749, -11.9732, -91.1799, 0.37", "-263.578, -12.0957, -91.543, 0.59", "-265.177, -12.1631, -92.1649, 0.29", "-266.194, -12.0723, -92.5053, 0.29", "-267.092, -11.8874, -92.7995, 0.29", "-267.973, -11.6179, -93.1037, 0.29", "-268.765, -11.3189, -93.4346, 0.52", "-269.496, -10.9886, -93.8068, 0.52", "-270.438, -10.4702, -94.3935, 0.74", "-271.956, -9.64124, -95.4263, 0.52", "-272.858, -9.17035, -96.0704, 0.81", "-274.225, -8.55494, -97.052, 0.96", "-275.253, -8.14193, -97.7635, 0.96", "-276.138, -7.81007, -98.35, 0.81", "-277.594, -7.26744, -99.2217, 0.59", "-278.574, -6.85982, -99.7436, 0.59", "-279.848, -6.2308, -100.376, 0.44", "-280.926, -5.69177, -100.832, 0.44", "-281.735, -5.3004, -101.135, 0.66", "-282.706, -4.81812, -101.479, 0.88", "-283.165, -4.56903, -101.645, 0.88", "-284.519, -3.81276, -102.161, 0.66", "-286.206, -2.87365, -102.83, 0.29", "-287.169, -2.35523, -103.237, 0.29", "-287.852, -1.95926, -103.549, 0.52", "-288.482, -1.55248, -103.871, 0.52", "-289.196, -0.976386, -104.267, 0.44", "-289.83, -0.222512, -104.689, 0.52", "-290.236, 0.55315, -105.067, 0.44", "-290.638, 1.51871, -105.49, 0.88", "-290.853, 2.08592, -105.727, 0.88", "-291.317, 3.29043, -106.184, 0.44", "-291.854, 4.51308, -106.628, 1.03", "-292.24, 5.25716, -106.887, 1.03", "-292.963, 6.42188, -107.294, 0.29", "-293.875, 7.75079, -107.758, 0.81", "-294.528, 8.61485, -108.099, 0.22", "-295.154, 9.35503, -108.418, 0.22", "-295.479, 9.71183, -108.568, 0.22", "-296.179, 10.4542, -108.853, 0.22", "-296.962, 11.2759, -109.138, 0.22", "-298.027, 12.425, -109.442, 0.29", "-299.023, 13.5451, -109.81, 0.29", "-300.081, 14.7762, -110.245, 0.29", "-301.611, 16.5349, -110.879, 0.29", "-302.632, 17.6826, -111.277, 0.29", "-303.45, 18.6128, -111.576, 0.22", "-305.177, 20.6994, -112.331, 0.37", "-305.747, 21.4338, -112.664, 0.59", "-306.289, 22.1821, -113.092, 0.59", "-306.995, 23.2299, -113.842, 0.37", "-307.515, 24.0414, -114.491, 0.74", "-308.532, 25.6344, -115.82, 0.52", "-308.878, 26.1967, -116.253, 0.37", "-309.522, 27.2987, -117.231, 0.29", "-309.972, 28.1159, -118.073, 0.15", "-310.176, 28.502, -118.552, 0.15" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-311.457, 155.517, -87.2014, 0.29", "-312.414, 156.43, -87.5965, 0.29", "-313.643, 157.648, -88.0928, 0.81", "-314.124, 158.145, -88.314, 0.81", "-314.714, 158.76, -88.5781, 0.52", "-315.508, 159.585, -88.9174, 0.74", "-316.501, 160.599, -89.3225, 0.29", "-317.423, 161.474, -89.6531, 0.29", "-318.581, 162.586, -90.0275, 0.29", "-319.561, 163.586, -90.3605, 0.37", "-320.033, 164.097, -90.5269, 0.74", "-320.789, 164.926, -90.7973, 1.03", "-322.014, 166.235, -91.2356, 0.29", "-322.611, 166.855, -91.4417, 0.29", "-323.337, 167.598, -91.7236, 0.44", "-324.072, 168.35, -92.0652, 0.81", "-324.575, 168.856, -92.3173, 0.81", "-324.992, 169.256, -92.5517, 0.81", "-325.783, 169.934, -93.0103, 0.37", "-326.839, 170.662, -93.6084, 1.03", "-327.327, 170.937, -93.8775, 1.03", "-327.983, 171.238, -94.2074, 1.03", "-328.959, 171.612, -94.6578, 0.52", "-329.79, 171.863, -95.0061, 0.37", "-331.079, 172.157, -95.4749, 1.18", "-331.961, 172.302, -95.7391, 1.4", "-333.242, 172.452, -96.0675, 0.29", "-334.297, 172.541, -96.2981, 0.29", "-335.675, 172.644, -96.534, 0.59", "-336.479, 172.713, -96.6485, 0.81", "-337.506, 172.82, -96.7477, 0.81", "-339.216, 173.009, -96.88, 0.29", "-339.893, 173.097, -96.9236, 0.29", "-340.569, 173.22, -96.9513, 0.81", "-341.806, 173.517, -96.9865, 0.81", "-343.064, 173.88, -97.0574, 0.52", "-344.286, 174.292, -97.1519, 0.81", "-345.405, 174.715, -97.2564, 0.81", "-347.116, 175.358, -97.4238, 0.29", "-347.815, 175.627, -97.5091, 0.29", "-348.75, 176.012, -97.687, 0.81", "-349.537, 176.375, -97.8802, 0.81", "-350.304, 176.768, -98.1062, 0.81", "-351.665, 177.535, -98.5361, 0.37", "-352.88, 178.275, -98.9497, 0.37", "-354.168, 179.121, -99.3748, 0.59", "-354.976, 179.719, -99.6229, 0.59", "-355.396, 180.072, -99.7545, 0.59", "-356.627, 181.25, -100.133, 0.29", "-357.475, 182.145, -100.409, 0.52", "-357.963, 182.659, -100.551, 0.66", "-359.108, 183.829, -100.864, 0.22", "-359.923, 184.632, -101.085, 1.18", "-360.506, 185.194, -101.228, 1.18", "-361.779, 186.429, -101.506, 0.22", "-362.578, 187.16, -101.645, 0.22", "-363.026, 187.545, -101.71, 0.74", "-363.691, 188.079, -101.777, 0.74", "-364.267, 188.538, -101.813, 0.74", "-365.279, 189.367, -101.844, 0.81", "-366.57, 190.516, -101.839, 0.22", "-367.287, 191.195, -101.853, 0.22", "-368.007, 191.922, -101.89, 0.88", "-368.575, 192.507, -101.95, 1.18", "-368.941, 192.893, -101.995, 1.18", "-369.695, 193.709, -102.097, 0.44", "-370.381, 194.491, -102.195, 0.22", "-371.071, 195.272, -102.322, 0.81", "-371.418, 195.658, -102.4, 0.81", "-372.095, 196.337, -102.574, 0.29", "-372.599, 196.797, -102.707, 0.29", "-373.002, 197.136, -102.81, 0.81", "-373.564, 197.586, -102.949, 0.96", "-374.053, 197.967, -103.061, 0.96", "-375.654, 199.2, -103.41, 0.22", "-376.376, 199.752, -103.554, 0.22", "-376.952, 200.173, -103.648, 0.66", "-377.545, 200.585, -103.732, 1.03", "-377.971, 200.869, -103.791, 1.03", "-378.875, 201.457, -103.923, 0.29", "-379.321, 201.735, -103.991, 0.29", "-380.299, 202.316, -104.155, 0.66", "-380.925, 202.672, -104.264, 0.66", "-382.14, 203.324, -104.463, 0.29", "-382.686, 203.606, -104.519, 0.29", "-383.428, 203.962, -104.562, 0.74", "-383.996, 204.222, -104.586, 0.52", "-384.539, 204.471, -104.596, 0.52", "-385.487, 204.919, -104.59, 0.37", "-386.556, 205.426, -104.61, 0.81", "-387.43, 205.842, -104.655, 1.03", "-388.23, 206.202, -104.733, 1.03", "-389.33, 206.671, -104.882, 0.59", "-390.756, 207.261, -105.125, 0.44", "-392.025, 207.771, -105.378, 0.29", "-393.616, 208.399, -105.735, 0.29", "-395.148, 209.004, -106.068, 0.81", "-396.199, 209.387, -106.292, 1.03", "-397.086, 209.686, -106.493, 1.03", "-398.06, 209.997, -106.709, 0.37", "-398.858, 210.259, -106.88, 0.52", "-399.466, 210.467, -107.016, 0.52", "-400.497, 210.815, -107.232, 0.29", "-401.185, 211.026, -107.365, 0.29", "-402.256, 211.314, -107.553, 0.96", "-402.869, 211.455, -107.651, 1.11", "-404.312, 211.783, -107.864, 0.44", "-406.194, 212.288, -108.121, 0.44", "-407.124, 212.626, -108.241, 0.66", "-408.104, 213.098, -108.367, 0.88", "-409.097, 213.733, -108.525, 0.88", "-410.043, 214.533, -108.717, 0.52", "-410.797, 215.413, -108.934, 0.44", "-411.622, 216.715, -109.281, 0.44", "-412.179, 217.734, -109.584, 0.59", "-412.638, 218.596, -109.873, 0.81", "-413.221, 219.536, -110.23, 0.96", "-413.536, 219.922, -110.413, 0.96", "-414.361, 220.684, -110.853, 0.59", "-415.505, 221.5, -111.418, 0.44", "-417.059, 222.425, -112.114, 0.44", "-418.819, 223.358, -112.814, 0.96", "-420.078, 224.002, -113.258, 1.18", "-420.617, 224.276, -113.427, 1.18", "-421.527, 224.744, -113.678, 0.52", "-422.696, 225.373, -113.952, 0.52", "-423.742, 226.004, -114.139, 0.81", "-425.066, 226.877, -114.32, 0.96", "-426.715, 227.99, -114.466, 0.88", "-427.264, 228.365, -114.5, 0.88", "-429.164, 229.597, -114.579, 0.66", "-430.599, 230.433, -114.631, 0.52", "-431.753, 230.988, -114.671, 0.52", "-433.411, 231.6, -114.724, 0.44", "-434.58, 231.881, -114.776, 0.44", "-435.942, 232.012, -114.92, 0.37", "-436.943, 231.968, -115.116, 0.37", "-438.593, 231.828, -115.56, 0.81", "-439.269, 231.846, -115.747, 0.81", "-440.634, 232.077, -116.129, 0.52", "-442.183, 232.488, -116.55, 0.37", "-443.531, 232.959, -116.921, 0.37", "-445.353, 233.713, -117.413, 0.22", "-448.687, 235.284, -118.325, 0.22", "-450.943, 236.41, -118.987, 0.22", "-452.746, 237.37, -119.496, 0.22", "-453.901, 238.001, -119.821, 0.22", "-455.307, 238.748, -120.234, 0.22", "-456.925, 239.559, -120.788, 0.22", "-458.044, 240.059, -121.287, 0.22" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-311.457, 155.517, -87.2014, 0.52", "-314.625, 157.246, -86.677, 0.52", "-315.388, 157.67, -86.629, 0.37", "-316.089, 158.048, -86.6327, 0.37", "-317.951, 159.028, -86.7151, 0.22", "-319.382, 159.77, -86.8456, 0.22", "-321.001, 160.592, -87.0387, 0.22", "-322.397, 161.296, -87.3523, 0.74", "-323.31, 161.738, -87.5604, 0.74", "-324.506, 162.291, -87.825, 0.29", "-325.491, 162.727, -88.0312, 0.52", "-327.159, 163.444, -88.3389, 0.29", "-328.599, 164.032, -88.5686, 0.22", "-329.08, 164.223, -88.6364, 0.44", "-330.511, 164.781, -88.7897, 0.22", "-331.642, 165.193, -88.8857, 0.22", "-332.345, 165.424, -88.931, 0.81", "-332.748, 165.531, -88.9581, 0.81", "-333.116, 165.599, -88.9854, 0.81", "-335.541, 165.801, -89.1621, 0.29", "-337.427, 165.742, -89.2622, 0.29", "-338.166, 165.615, -89.31, 0.66", "-339.523, 165.188, -89.4276, 0.22", "-340.578, 164.65, -89.5452, 0.22", "-341.61, 163.935, -89.7049, 0.44", "-342.303, 163.329, -89.8493, 0.44", "-343.561, 162.155, -90.1606, 0.22", "-344.179, 161.575, -90.3344, 0.22", "-345.854, 159.997, -90.9134, 0.22", "-346.77, 159.176, -91.2581, 0.59", "-347.433, 158.595, -91.5152, 0.59", "-348.365, 157.803, -91.8672, 0.37", "-349.604, 156.788, -92.2726, 0.22", "-350.423, 156.105, -92.5131, 0.22", "-351.113, 155.479, -92.7085, 0.66", "-352.442, 154.157, -93.0415, 0.29", "-352.992, 153.567, -93.1652, 0.74", "-353.362, 153.122, -93.242, 0.74", "-354.307, 151.91, -93.4383, 0.44", "-355.271, 150.608, -93.6467, 0.22", "-355.516, 150.273, -93.7074, 0.59", "-355.894, 149.759, -93.8119, 0.59", "-356.937, 148.347, -94.1087, 0.29", "-357.716, 147.375, -94.3251, 0.74", "-358.216, 146.851, -94.4632, 0.74", "-359.466, 145.764, -94.7766, 0.29", "-360.153, 145.271, -94.9517, 0.88", "-360.911, 144.868, -95.1437, 0.88", "-362.274, 144.418, -95.4691, 0.44", "-363.491, 144.171, -95.7587, 0.81", "-364.127, 144.12, -95.9231, 0.81", "-365.01, 144.157, -96.1794, 0.66", "-366.14, 144.311, -96.5128, 0.44", "-367.333, 144.56, -96.9351, 0.66", "-368.125, 144.753, -97.2383, 0.66", "-369.01, 144.954, -97.5771, 0.44", "-369.77, 145.096, -97.8698, 0.74", "-370.306, 145.178, -98.0735, 0.74", "-372.069, 145.421, -98.7799, 0.29", "-373.002, 145.547, -99.1832, 0.15", "-374.297, 145.736, -99.7849, 0.81", "-374.857, 145.809, -100.046, 0.81", "-376.191, 145.986, -100.666, 0.52", "-376.881, 146.074, -100.985, 0.52", "-378.209, 146.279, -101.563, 0.37", "-379.651, 146.553, -102.304, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-129.232, 70.2247, 12.7004, 0.29", "-138.667, 71.2449, 15.8449, 0.29", "-148.424, 72.1709, 17.8182, 0.29", "-158.411, 72.659, 17.686, 0.29", "-168.256, 74.3581, 17.8824, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-129.232, 70.2247, 12.7004, 0.29", "-138.878, 70.9612, 15.2258, 0.29", "-148.327, 72.9593, 17.7784, 0.29", "-158.065, 75.0512, 18.5358, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-279.204, 216.447, 104.919, 0.29", "-285.706, 222.946, 108.563, 0.29", "-293.364, 228.535, 111.479, 0.29", "-301.389, 233.953, 113.653, 0.29", "-309.06, 240.175, 114.308, 0.29", "-316.709, 246.417, 115.019, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-279.204, 216.447, 104.919, 0.29", "-286.002, 222.381, 109.011, 0.29", "-291.469, 230.207, 111.396, 0.29", "-297.421, 237.52, 114.279, 0.29", "-302.943, 244.627, 118.325, 0.29", "-308.058, 251.64, 123.027, 0.29", "-313.576, 258.526, 127.462, 0.29", "-319.662, 265.688, 130.462, 0.29", "-326.005, 272.858, 132.848, 0.29", "-332.204, 280.342, 134.473, 0.29", "-339.21, 286.793, 137.145, 0.29", "-346.369, 292.111, 141.505, 0.29", "-353.367, 296.918, 146.673, 0.29", "-360.25, 301.735, 151.986, 0.29", "-366.421, 307.459, 157.225, 0.29", "-370.882, 314.198, 162.91, 0.29", "-377.052, 320.237, 167.764, 0.29", "-383.293, 325.482, 173.431, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "139.348, 197.128, 5.65589, 0.88", "139.607, 198.126, 5.68941, 0.88", "139.935, 199.514, 5.72278, 1.03", "140.164, 200.505, 5.71477, 1.03", "140.365, 201.375, 5.70774, 1.03", "140.741, 203.0, 5.69461, 1.25", "140.887, 203.63, 5.68952, 1.25", "141.244, 205.02, 5.63302, 0.81", "141.686, 206.595, 5.55415, 1.03" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "139.348, 197.128, 5.65589, 0.52", "140.56, 197.159, 5.58963, 0.52", "141.956, 197.098, 5.50792, 0.66", "143.001, 197.001, 5.4488, 0.66", "144.169, 196.862, 5.38844, 0.66", "145.3, 196.726, 5.32055, 0.44", "146.527, 196.594, 5.24294, 0.88", "147.397, 196.487, 5.18817, 0.88", "148.493, 196.381, 5.12528, 0.59", "149.767, 196.329, 5.09979, 0.59", "150.778, 196.357, 5.0709, 0.59", "151.557, 196.421, 5.03524, 0.59", "152.624, 196.551, 4.96587, 0.59", "153.963, 196.755, 4.83246, 0.81", "154.924, 196.932, 4.70954, 0.81", "156.307, 197.231, 4.48821, 0.66", "157.249, 197.472, 4.30238, 0.52", "157.958, 197.677, 4.15186, 0.52", "159.175, 198.082, 3.89391, 0.66", "159.887, 198.36, 3.76358, 0.52", "160.974, 198.886, 3.61832, 0.81", "162.043, 199.483, 3.55853, 0.44", "162.979, 200.057, 3.55992, 0.37", "163.906, 200.655, 3.6108, 0.37", "164.812, 201.242, 3.71491, 0.29", "166.044, 202.014, 3.84573, 0.29", "166.829, 202.52, 3.90076, 0.96", "167.51, 203.006, 3.89091, 1.4", "167.879, 203.32, 3.82951, 1.77", "168.062, 203.508, 3.76691, 1.77", "168.776, 204.436, 3.34823, 0.96", "169.435, 205.533, 2.7719, 0.29", "169.894, 206.402, 2.28117, 0.29", "170.202, 207.05, 1.89844, 0.29", "170.494, 207.733, 1.50771, 0.52", "170.873, 208.726, 0.983353, 0.37", "171.175, 209.657, 0.57639, 0.22", "180.481, 212.478, -1.66727, 0.22", "190.301, 214.29, -2.007, 0.22", "200.271, 214.237, -1.23445, 0.22", "210.197, 213.39, -2.08109, 0.22", "219.827, 210.931, -3.03847, 0.22", "229.551, 209.675, -4.98103, 0.22" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "319.254, 25.9336, 35.6746, 0.29", "327.636, 22.1728, 39.5297, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "319.254, 25.9336, 35.6746, 0.29", "328.053, 21.344, 35.0279, 0.29" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "176.75, 33.4239, 26.4982, 0.29", "184.989, 33.3289, 32.1643, 0.29", "193.174, 34.5195, 37.7779, 0.29", "200.412, 36.8592, 44.2482, 0.29", "208.601, 38.8679, 49.6048, 0.29", "217.432, 42.3164, 52.688, 0.29", "226.302, 44.1055, 56.9252, 0.29", "233.691, 47.0319, 62.9572, 0.29", "240.6, 49.4282, 69.7565, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "176.75, 33.4239, 26.4982, 0.29", "186.732, 32.8341, 26.4589, 0.29", "196.664, 32.7723, 25.2994, 0.29", "206.501, 32.4271, 23.5374, 0.29", "216.449, 33.2378, 22.9511, 0.29", "226.279, 33.2008, 21.1167, 0.29", "236.261, 32.9188, 20.5815, 0.29", "246.056, 32.2355, 18.6958, 0.29", "256.04, 31.8071, 18.3207, 0.29", "265.852, 30.1349, 19.2058, 0.29", "275.602, 28.2274, 20.2536, 0.29", "285.572, 28.4082, 19.5039, 0.29", "295.386, 30.1546, 20.2054, 0.29", "305.361, 30.7351, 19.8199, 0.29", "315.283, 29.6319, 19.3006, 0.29" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "166.89, 35.2576, 24.8818, 0.29", "176.524, 35.804, 27.5037, 0.29", "185.553, 37.5518, 31.4098, 0.29", "194.857, 39.0357, 34.7438, 0.29", "203.592, 42.2656, 38.3129, 0.29", "212.554, 45.1794, 41.59, 0.29", "221.417, 47.4572, 45.5885, 0.29", "229.656, 50.951, 49.98, 0.29", "237.405, 56.2085, 53.2787, 0.29", "245.794, 61.1837, 55.1686, 0.29", "253.257, 67.2125, 57.6323, 0.29", "260.42, 72.3457, 62.2121, 0.29", "266.462, 79.2278, 65.9091, 0.29", "272.341, 86.3954, 69.2849, 0.29", "278.807, 93.4063, 71.8325, 0.29", "286.476, 98.841, 75.0126, 0.29" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "166.89, 35.2576, 24.8818, 0.29", "176.708, 35.4325, 26.7727, 0.29", "186.54, 34.0641, 27.9345, 0.29", "196.446, 33.5448, 29.1999, 0.29", "206.067, 33.3921, 31.9203, 0.29", "215.846, 32.7588, 33.9109, 0.29", "225.422, 31.7796, 36.6099, 0.29", "234.897, 32.2004, 39.7781, 0.29", "244.344, 33.1015, 42.9251, 0.29" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-279.435, -86.1356, -111.321, 0.29", "-280.874, -86.7531, -111.646, 0.29", "-281.471, -87.0089, -111.781, 0.29", "-282.199, -87.3214, -111.946, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-279.435, -86.1356, -111.321, 0.29", "-278.676, -87.2982, -111.369, 0.29", "-278.127, -88.1404, -111.404, 0.29", "-277.571, -88.9932, -111.439, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-168.256, 74.3581, 17.8824, 0.29", "-178.13, 75.4462, 19.0044, 0.29", "-187.643, 78.4524, 19.0094, 0.29", "-196.538, 82.6237, 20.6129, 0.29", "-204.466, 88.4951, 21.554, 0.29", "-212.151, 94.5756, 22.9812, 0.29", "-220.056, 100.2, 25.0412, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-168.256, 74.3581, 17.8824, 0.29", "-178.093, 75.362, 19.3586, 0.29", "-187.854, 76.7536, 20.9943, 0.29", "-197.223, 78.437, 24.0339, 0.29", "-206.192, 79.7943, 28.2328, 0.29", "-213.958, 82.6841, 33.7912, 0.29", "-221.927, 84.5738, 39.5137, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "141.686, 206.595, 5.55415, 0.81", "141.346, 207.383, 5.39595, 0.81", "141.054, 208.189, 5.25522, 0.81", "140.657, 209.587, 5.07339, 0.81", "140.407, 210.804, 4.966, 0.96", "140.291, 211.778, 4.91297, 0.96", "140.278, 212.29, 4.89851, 0.96", "140.389, 213.417, 4.9138, 0.81", "140.576, 214.29, 4.95098, 0.81", "140.794, 215.023, 5.0031, 0.81", "141.162, 216.014, 5.07845, 0.81", "141.655, 217.21, 5.15579, 0.96", "142.051, 218.065, 5.17804, 0.96", "142.656, 219.314, 5.1624, 0.81", "143.184, 220.396, 5.09275, 0.81", "143.782, 221.598, 4.96799, 0.74", "144.088, 222.152, 4.91362, 0.74", "144.673, 223.095, 4.85361, 0.74", "145.234, 223.893, 4.84825, 0.96", "145.737, 224.598, 4.88091, 0.96", "146.046, 225.081, 4.93258, 0.96", "146.59, 226.156, 5.11907, 0.81", "146.971, 227.056, 5.31424, 0.81", "147.473, 228.378, 5.62049, 0.74", "147.879, 229.351, 5.84328, 0.74", "148.493, 230.55, 6.12015, 0.74", "148.976, 231.375, 6.23088, 0.74", "149.645, 232.449, 6.26953, 0.59", "150.509, 233.708, 6.23402, 0.59", "151.337, 234.798, 6.15781, 0.59", "152.455, 236.172, 6.0259, 0.59", "154.135, 238.106, 5.77518, 0.52", "155.083, 239.155, 5.61547, 0.52", "155.884, 240.062, 5.46249, 0.52", "157.226, 241.723, 5.1708, 1.25", "157.871, 242.67, 5.01295, 2.43" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "141.686, 206.595, 5.55415, 0.66", "142.848, 207.945, 5.87997, 0.66", "143.376, 208.649, 6.03581, 0.59", "143.908, 209.37, 6.19323, 0.59", "144.792, 210.507, 6.436, 0.52", "145.592, 211.538, 6.656, 0.52", "146.648, 212.897, 6.94608, 0.37", "147.088, 213.557, 7.10462, 0.37", "147.591, 214.386, 7.29358, 0.37", "148.064, 215.195, 7.44978, 0.37", "154.183, 222.785, 8.84785, 0.37", "160.415, 230.41, 8.80419, 0.37", "167.238, 237.485, 7.91693, 0.37", "173.179, 245.296, 8.64326, 0.37", "178.124, 253.597, 10.3949, 0.37", "181.427, 262.565, 12.5116, 0.37", "183.598, 271.909, 14.3679, 0.37" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "240.6, 49.4282, 69.7565, 0.29", "248.775, 51.1568, 75.2359, 0.29", "255.277, 53.6541, 82.3887, 0.29", "262.441, 54.6351, 89.293, 0.29", "269.548, 56.0412, 96.1783, 0.29", "276.194, 56.0804, 103.65, 0.29", "281.216, 55.9546, 112.297, 0.29", "285.801, 55.7094, 121.18, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "240.6, 49.4282, 69.7565, 0.29", "248.624, 51.7142, 75.244, 0.29", "256.374, 53.1584, 81.388, 0.29", "263.286, 55.0156, 88.359, 0.29", "271.491, 56.7584, 93.7881, 0.29", "279.801, 60.3691, 97.9404, 0.29", "289.037, 63.0025, 100.661, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "244.344, 33.1015, 42.9251, 0.29", "254.073, 32.8716, 45.2231, 0.29", "263.604, 32.8598, 48.2508, 0.29", "272.998, 31.8347, 51.5128, 0.29", "282.219, 32.135, 55.3714, 0.29", "291.079, 32.8509, 59.9499, 0.29", "299.057, 32.0427, 65.921, 0.29", "306.55, 30.5868, 72.3728, 0.29", "314.335, 27.6172, 77.8607, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "244.344, 33.1015, 42.9251, 0.29", "254.087, 32.7712, 45.1494, 0.29", "263.903, 31.0359, 45.8485, 0.29", "273.629, 30.1512, 47.9889, 0.29", "283.471, 29.7859, 49.7184, 0.29", "293.192, 27.948, 51.1127, 0.29", "302.522, 25.1345, 53.2629, 0.29", "311.403, 22.1201, 56.6654, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "157.871, 242.67, 5.01295, 0.44", "155.945, 243.792, 5.26493, 0.44", "155.055, 244.31, 5.38133, 0.44", "154.208, 244.803, 5.49205, 0.29", "153.254, 245.358, 5.61683, 0.29", "152.103, 246.028, 5.76745, 0.29", "150.805, 246.784, 5.93724, 0.29", "141.959, 250.887, 7.94756, 0.29", "134.475, 256.359, 11.4803, 0.29", "127.618, 261.398, 16.6063, 0.29", "121.2, 265.498, 23.0197, 0.29", "116.291, 271.064, 29.6007, 0.29", "110.734, 275.167, 36.7709, 0.29", "105.654, 278.767, 44.5529, 0.29", "99.8419, 281.944, 52.0098, 0.29", "94.1359, 286.472, 58.7829, 0.29", "89.0798, 291.627, 65.6001, 0.29", "82.842, 295.555, 72.2978, 0.29" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "157.871, 242.67, 5.01295, 0.52", "157.787, 245.023, 5.34664, 0.52", "157.511, 246.223, 5.52348, 0.52", "157.109, 247.078, 5.65506, 0.52", "156.565, 247.763, 5.73802, 0.52", "155.741, 248.803, 5.86392, 0.52", "155.095, 249.617, 5.96241, 0.52", "154.375, 250.089, 6.05072, 0.52", "153.503, 250.493, 6.07399, 0.52", "152.36, 250.897, 6.04559, 0.52", "147.903, 259.352, 8.27064, 0.52", "142.414, 266.881, 11.4686, 0.52", "136.427, 274.157, 14.3796, 0.52", "130.518, 280.791, 18.7132, 0.52", "126.229, 287.984, 23.9265, 0.52" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "82.842, 295.555, 72.2978, 0.29", "74.8596, 300.655, 75.284, 0.29" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "82.842, 295.555, 72.2978, 0.29", "76.9293, 299.902, 79.0182, 0.29", "72.8396, 305.564, 86.0576, 0.29" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "126.229, 287.984, 23.9265, 0.29", "120.782, 295.714, 26.6608, 0.29", "116.553, 303.243, 31.4028, 0.29", "111.603, 310.687, 35.5514, 0.29", "105.076, 317.016, 39.4579, 0.29", "99.2062, 323.527, 44.0347, 0.29", "93.6845, 329.823, 49.3091, 0.29", "88.4117, 336.945, 53.6484, 0.29", "84.0806, 344.423, 58.3839, 0.29", "79.8102, 350.807, 64.6201, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "126.229, 287.984, 23.9265, 0.37", "120.975, 295.553, 27.4092, 0.29", "115.115, 303.293, 29.0354, 0.29", "107.966, 309.206, 32.5163, 0.29", "100.721, 314.429, 36.8537, 0.29", "93.58, 319.11, 41.9484, 0.29", "86.8573, 325.234, 45.867, 0.29", "81.1275, 331.557, 50.8784, 0.29", "76.1494, 338.188, 56.2599, 0.29", "72.3435, 346.491, 59.865, 0.29", "67.8324, 354.649, 62.969, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "79.8102, 350.807, 64.6201, 0.29", "74.6394, 357.849, 69.2126, 0.29", "70.6685, 366.22, 72.4562, 0.29", "65.3284, 373.751, 75.8945, 0.29", "60.3801, 380.882, 80.5881, 0.29", "55.0294, 386.468, 86.7966, 0.29", "48.7093, 392.511, 91.448, 0.29", "43.3641, 398.903, 96.7825, 0.29" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "79.8102, 350.807, 64.6201, 0.29", "74.5072, 357.84, 69.0756, 0.29", "71.3321, 365.251, 74.7451, 0.29", "70.1, 373.226, 80.3632, 0.29", "70.1845, 382.333, 83.9341, 0.29", "69.2792, 391.761, 86.3173, 0.29", "67.5043, 401.246, 87.8017, 0.29", "66.1163, 410.648, 90.0574, 0.29", "66.6627, 420.032, 92.7162, 0.29", "65.6651, 429.277, 95.7334, 0.29", "64.4593, 437.968, 100.102, 0.29", "61.285, 445.982, 104.832, 0.29", "57.4108, 453.956, 109.086, 0.29", "53.0088, 462.306, 111.785, 0.29", "48.2233, 470.369, 114.736, 0.29", "44.1263, 478.966, 117.071, 0.29", "40.6521, 487.589, 120.188, 0.29", "37.9484, 495.655, 125.112, 0.29", "35.6575, 503.47, 130.636, 0.29" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "67.8324, 354.649, 62.969, 0.29", "61.9243, 361.441, 67.0399, 0.29", "54.7766, 367.834, 69.4715, 0.29", "47.8771, 374.276, 72.4297, 0.29", "42.6043, 381.531, 76.5318, 0.29", "36.0993, 388.623, 78.7178, 0.29", "28.154, 394.227, 80.6748, 0.29", "20.6537, 400.675, 80.768, 0.29", "13.6085, 407.511, 79.6665, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "67.8324, 354.649, 62.969, 0.29", "61.7607, 361.469, 66.7397, 0.29", "54.2586, 367.696, 68.45, 0.29", "47.4444, 374.24, 71.3674, 0.29", "40.1577, 380.551, 73.606, 0.29", "33.5633, 387.262, 76.6286, 0.29", "26.4125, 392.717, 80.8197, 0.29", "19.7166, 397.701, 86.2079, 0.29", "13.436, 402.241, 92.4424, 0.29", "7.92283, 407.353, 98.9324, 0.29", "2.2699, 411.017, 106.276, 0.29", "-2.32696, 416.051, 113.502, 0.29", "-5.3168, 420.6, 121.826, 0.29", "-8.29569, 425.681, 129.824, 0.29", "-11.0781, 429.305, 138.681, 0.29", "-14.6753, 433.751, 146.821, 0.29", "-18.6928, 438.857, 154.334, 0.29", "-23.7688, 444.043, 161.111, 0.29", "-29.5202, 449.261, 167.298, 0.29", "-35.0059, 454.316, 173.858, 0.29", "-39.6046, 459.389, 181.054, 0.29", "-43.3955, 463.937, 189.046, 0.29", "-47.9359, 467.35, 197.239, 0.29", "-53.9245, 471.774, 203.838, 0.29", "-59.01, 475.155, 211.719, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_90", "dend_85", "dend_38", "dend_23", "dend_18", "dend_15", "dend_0", "dend_89", "dend_86", "dend_48", "dend_39", "dend_35", "dend_24", "dend_22", "dend_19", "dend_17", "dend_16", "dend_4", "dend_1", "dend_88", "dend_87", "dend_62", "dend_49", "dend_43", "dend_40", "dend_37", "dend_36", "dend_26", "dend_25", "dend_21", "dend_20", "dend_14", "dend_5", "dend_3", "dend_2", "dend_68", "dend_63", "dend_61", "dend_50", "dend_45", "dend_44", "dend_42", "dend_41", "dend_30", "dend_27", "dend_9", "dend_6", "dend_70", "dend_69", "dend_67", "dend_64", "dend_56", "dend_51", "dend_47", "dend_46", "dend_32", "dend_31", "dend_29", "dend_28", "dend_11", "dend_10", "dend_8", "dend_7", "dend_72", "dend_71", "dend_66", "dend_65", "dend_58", "dend_57", "dend_55", "dend_52", "dend_34", "dend_33", "dend_13", "dend_12", "dend_74", "dend_73", "dend_60", "dend_59", "dend_54", "dend_53", "dend_82", "dend_75", "dend_84", "dend_83", "dend_79", "dend_76", "dend_81", "dend_80", "dend_78", "dend_77" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_90", "dend_85", "dend_38", "dend_23", "dend_18", "dend_15", "dend_0", "dend_89", "dend_86", "dend_48", "dend_39", "dend_35", "dend_24", "dend_22", "dend_19", "dend_17", "dend_16", "dend_4", "dend_1", "dend_88", "dend_87", "dend_62", "dend_49", "dend_43", "dend_40", "dend_37", "dend_36", "dend_26", "dend_25", "dend_21", "dend_20", "dend_14", "dend_5", "dend_3", "dend_2", "dend_68", "dend_63", "dend_61", "dend_50", "dend_45", "dend_44", "dend_42", "dend_41", "dend_30", "dend_27", "dend_9", "dend_6", "dend_70", "dend_69", "dend_67", "dend_64", "dend_56", "dend_51", "dend_47", "dend_46", "dend_32", "dend_31", "dend_29", "dend_28", "dend_11", "dend_10", "dend_8", "dend_7", "dend_72", "dend_71", "dend_66", "dend_65", "dend_58", "dend_57", "dend_55", "dend_52", "dend_34", "dend_33", "dend_13", "dend_12", "dend_74", "dend_73", "dend_60", "dend_59", "dend_54", "dend_53", "dend_82", "dend_75", "dend_84", "dend_83", "dend_79", "dend_76", "dend_81", "dend_80", "dend_78", "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_88", "dend_88", "dend_88", "dend_87", "dend_87", "dend_87", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_49", "dend_49", "dend_49", "dend_49", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_65", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_84", "dend_83", "dend_83", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L6_MC_8f46a0ad62_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_90, id: dend_90, parent: soma_0
create dend_90
public dend_90
// Section: dend_85, id: dend_85, parent: soma_0
create dend_85
public dend_85
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_89, id: dend_89, parent: dend_85
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_48, id: dend_48, parent: dend_38
create dend_48
public dend_48
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_23
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_88, id: dend_88, parent: dend_86
create dend_88
public dend_88
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_62, id: dend_62, parent: dend_48
create dend_62
public dend_62
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_68, id: dend_68, parent: dend_62
create dend_68
public dend_68
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_49
create dend_61
public dend_61
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_70, id: dend_70, parent: dend_68
create dend_70
public dend_70
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_79, id: dend_79, parent: dend_75
create dend_79
public dend_79
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_90, dend_85, dend_38, dend_23, dend_18, dend_15, dend_0, dend_89, dend_86, dend_48, dend_39, dend_35, dend_24, dend_22, dend_19, dend_17, dend_16, dend_4, dend_1, dend_88, dend_87, dend_62, dend_49, dend_43, dend_40, dend_37, dend_36, dend_26, dend_25, dend_21, dend_20, dend_14, dend_5, dend_3, dend_2, dend_68, dend_63, dend_61, dend_50, dend_45, dend_44, dend_42, dend_41, dend_30, dend_27, dend_9, dend_6, dend_70, dend_69, dend_67, dend_64, dend_56, dend_51, dend_47, dend_46, dend_32, dend_31, dend_29, dend_28, dend_11, dend_10, dend_8, dend_7, dend_72, dend_71, dend_66, dend_65, dend_58, dend_57, dend_55, dend_52, dend_34, dend_33, dend_13, dend_12, dend_74, dend_73, dend_60, dend_59, dend_54, dend_53, dend_82, dend_75, dend_84, dend_83, dend_79, dend_76, dend_81, dend_80, dend_78, dend_77]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_90, dend_85, dend_38, dend_23, dend_18, dend_15, dend_0, dend_89, dend_86, dend_48, dend_39, dend_35, dend_24, dend_22, dend_19, dend_17, dend_16, dend_4, dend_1, dend_88, dend_87, dend_62, dend_49, dend_43, dend_40, dend_37, dend_36, dend_26, dend_25, dend_21, dend_20, dend_14, dend_5, dend_3, dend_2, dend_68, dend_63, dend_61, dend_50, dend_45, dend_44, dend_42, dend_41, dend_30, dend_27, dend_9, dend_6, dend_70, dend_69, dend_67, dend_64, dend_56, dend_51, dend_47, dend_46, dend_32, dend_31, dend_29, dend_28, dend_11, dend_10, dend_8, dend_7, dend_72, dend_71, dend_66, dend_65, dend_58, dend_57, dend_55, dend_52, dend_34, dend_33, dend_13, dend_12, dend_74, dend_73, dend_60, dend_59, dend_54, dend_53, dend_82, dend_75, dend_84, dend_83, dend_79, dend_76, dend_81, dend_80, dend_78, dend_77]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_88
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_38, dend_38, dend_38, dend_38, dend_38, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_65, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_84, dend_83, dend_83, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_90(0), soma_0(0.4999999738686323)
    connect dend_85(0), soma_0(0.4999999738686323)
    connect dend_38(0), soma_0(0.4999999738686323)
    connect dend_23(0), soma_0(0.4999999738686323)
    connect dend_18(0), soma_0(0.4999999738686323)
    connect dend_15(0), soma_0(0.4999999738686323)
    connect dend_0(0), soma_0(0.4999999738686323)
    connect axon_0(0), soma_0(1.0)
    connect dend_89(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_48(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_88(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_62(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_68(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_70(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_79(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 4.90919, 8.22513, -0.834577, 3.3622 ) }
    soma_0 { pt3dadd( 4.43743, 7.37523, -0.747967, 5.94588 ) }
    soma_0 { pt3dadd( 3.96566, 6.52532, -0.661357, 8.44184 ) }
    soma_0 { pt3dadd( 3.4939, 5.67542, -0.574747, 10.8454 ) }
    soma_0 { pt3dadd( 3.02213, 4.82551, -0.488136, 12.3209 ) }
    soma_0 { pt3dadd( 2.55037, 3.97561, -0.401526, 13.6839 ) }
    soma_0 { pt3dadd( 2.0786, 3.1257, -0.314916, 14.9249 ) }
    soma_0 { pt3dadd( 1.60684, 2.2758, -0.228306, 15.8085 ) }
    soma_0 { pt3dadd( 1.13507, 1.42589, -0.141695, 16.5556 ) }
    soma_0 { pt3dadd( 0.663306, 0.57599, -0.0550851, 17.2235 ) }
    soma_0 { pt3dadd( 0.191541, -0.273915, 0.0315252, 17.4002 ) }
    soma_0 { pt3dadd( -0.280224, -1.12382, 0.118135, 17.0347 ) }
    soma_0 { pt3dadd( -0.75199, -1.97372, 0.204746, 16.5238 ) }
    soma_0 { pt3dadd( -1.22376, -2.82363, 0.291356, 16.1128 ) }
    soma_0 { pt3dadd( -1.69552, -3.67353, 0.377966, 15.794 ) }
    soma_0 { pt3dadd( -2.16729, -4.52344, 0.464576, 15.3172 ) }
    soma_0 { pt3dadd( -2.63905, -5.37334, 0.551187, 14.6673 ) }
    soma_0 { pt3dadd( -3.11082, -6.22325, 0.637797, 12.9422 ) }
    soma_0 { pt3dadd( -3.58258, -7.07315, 0.724407, 10.2829 ) }
    soma_0 { pt3dadd( -4.05435, -7.92306, 0.811018, 7.53536 ) }
    soma_0 { pt3dadd( -4.52611, -8.77296, 0.897628, 4.31184 ) }
    // Section: dend_90, id: dend_90, parent: soma_0 (entry count 21/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -0.908007, 5.7835, -15.0129, 0.96 ) }
    dend_90 { pt3dadd( -0.902347, 5.85082, -15.0229, 0.96 ) }
    dend_90 { pt3dadd( -0.826683, 6.82984, -15.1421, 0.96 ) }
    dend_90 { pt3dadd( -0.722029, 8.17114, -15.3185, 0.96 ) }
    dend_90 { pt3dadd( -0.569862, 9.9909, -15.4395, 1.33 ) }
    dend_90 { pt3dadd( -0.50109, 11.0281, -15.453, 1.25 ) }
    dend_90 { pt3dadd( -0.436212, 12.3182, -15.4174, 1.25 ) }
    dend_90 { pt3dadd( -0.342127, 14.4891, -15.2622, 1.03 ) }
    dend_90 { pt3dadd( -0.219654, 16.4342, -15.024, 0.81 ) }
    dend_90 { pt3dadd( -0.0211566, 18.43, -14.6752, 0.81 ) }
    dend_90 { pt3dadd( 0.202819, 19.8923, -14.3985, 0.96 ) }
    dend_90 { pt3dadd( 0.54241, 21.3872, -14.14, 1.33 ) }
    dend_90 { pt3dadd( 0.931979, 22.7546, -13.9432, 1.33 ) }
    dend_90 { pt3dadd( 1.48563, 24.3935, -13.7687, 1.11 ) }
    dend_90 { pt3dadd( 2.1687, 26.1811, -13.6555, 1.25 ) }
    dend_90 { pt3dadd( 3.15493, 28.5822, -13.6497, 0.96 ) }
    dend_90 { pt3dadd( 3.91574, 30.372, -13.7091, 0.81 ) }
    dend_90 { pt3dadd( 4.51853, 31.8284, -13.8017, 0.81 ) }
    dend_90 { pt3dadd( 5.25575, 33.7806, -13.9795, 0.66 ) }
    dend_90 { pt3dadd( 5.74449, 35.2287, -14.0957, 0.66 ) }
    dend_90 { pt3dadd( 6.20706, 36.675, -14.1961, 1.62 ) }
    dend_90 { pt3dadd( 6.5074, 37.6492, -14.2411, 1.62 ) }
    dend_90 { pt3dadd( 7.07197, 39.3833, -14.3157, 1.18 ) }
    dend_90 { pt3dadd( 7.50316, 40.5795, -14.383, 1.33 ) }
    dend_90 { pt3dadd( 8.47264, 43.071, -14.4928, 1.11 ) }
    dend_90 { pt3dadd( 9.03879, 44.3603, -14.4979, 1.11 ) }
    dend_90 { pt3dadd( 9.78199, 45.8623, -14.436, 1.11 ) }
    dend_90 { pt3dadd( 10.5828, 47.3306, -14.3305, 0.96 ) }
    dend_90 { pt3dadd( 11.0996, 48.2575, -14.2466, 1.25 ) }
    dend_90 { pt3dadd( 11.7095, 49.3677, -14.1434, 1.25 ) }
    dend_90 { pt3dadd( 12.8681, 51.5394, -13.9655, 0.88 ) }
    dend_90 { pt3dadd( 13.5906, 52.9438, -13.8284, 0.88 ) }
    dend_90 { pt3dadd( 14.6865, 55.0666, -13.6449, 1.33 ) }
    dend_90 { pt3dadd( 15.2741, 56.2254, -13.5818, 1.55 ) }
    dend_90 { pt3dadd( 15.6786, 57.0211, -13.617, 1.55 ) }
    dend_90 { pt3dadd( 16.2079, 58.0467, -13.7898, 1.25 ) }
    dend_90 { pt3dadd( 16.6972, 58.9883, -14.0619, 1.62 ) }
    dend_90 { pt3dadd( 17.049, 59.6282, -14.2908, 1.62 ) }
    dend_90 { pt3dadd( 17.5469, 60.4316, -14.6116, 1.62 ) }
    dend_90 { pt3dadd( 18.9504, 62.3434, -15.4136, 0.81 ) }
    dend_90 { pt3dadd( 20.1726, 63.8626, -16.0515, 0.81 ) }
    dend_90 { pt3dadd( 20.9818, 64.7994, -16.4447, 1.03 ) }
    dend_90 { pt3dadd( 21.7666, 65.6274, -16.7789, 1.03 ) }
    dend_90 { pt3dadd( 22.6909, 66.5382, -17.0989, 0.74 ) }
    dend_90 { pt3dadd( 23.7743, 67.4873, -17.3883, 0.52 ) }
    dend_90 { pt3dadd( 24.414, 67.9829, -17.5086, 0.52 ) }
    dend_90 { pt3dadd( 25.4626, 68.7436, -17.7066, 1.11 ) }
    dend_90 { pt3dadd( 26.1242, 69.2071, -17.8161, 1.11 ) }
    dend_90 { pt3dadd( 26.9959, 69.8421, -17.9619, 0.96 ) }
    dend_90 { pt3dadd( 28.2829, 70.8209, -18.1905, 0.81 ) }
    dend_90 { pt3dadd( 28.9751, 71.3619, -18.3158, 1.11 ) }
    dend_90 { pt3dadd( 30.0806, 72.2055, -18.5031, 0.81 ) }
    dend_90 { pt3dadd( 31.1927, 73.0823, -18.6892, 0.59 ) }
    dend_90 { pt3dadd( 31.8869, 73.6721, -18.8133, 1.03 ) }
    dend_90 { pt3dadd( 32.4412, 74.1803, -18.9119, 1.03 ) }
    dend_90 { pt3dadd( 33.0224, 74.7394, -19.0212, 1.03 ) }
    dend_90 { pt3dadd( 33.4633, 75.1933, -19.094, 0.29 ) }
    dend_90 { pt3dadd( 34.0419, 75.8623, -19.2007, 0.29 ) }
    dend_90 { pt3dadd( 34.4317, 76.3711, -19.2739, 0.29 ) }
    dend_90 { pt3dadd( 35.0977, 77.2407, -19.379, 1.55 ) }
    dend_90 { pt3dadd( 35.6583, 77.9688, -19.4528, 1.55 ) }
    dend_90 { pt3dadd( 36.6233, 79.1714, -19.5883, 0.37 ) }
    dend_90 { pt3dadd( 37.1669, 79.8146, -19.6658, 0.37 ) }
    dend_90 { pt3dadd( 37.871, 80.6129, -19.7692, 0.37 ) }
    dend_90 { pt3dadd( 38.692, 81.4979, -19.9269, 0.74 ) }
    dend_90 { pt3dadd( 39.3065, 82.1204, -20.0645, 1.33 ) }
    dend_90 { pt3dadd( 39.8808, 82.669, -20.1977, 1.33 ) }
    dend_90 { pt3dadd( 40.2684, 83.0027, -20.2994, 1.33 ) }
    dend_90 { pt3dadd( 41.185, 83.7368, -20.5235, 0.88 ) }
    dend_90 { pt3dadd( 42.5039, 84.6958, -20.8288, 0.44 ) }
    dend_90 { pt3dadd( 43.4387, 85.2853, -21.0137, 0.29 ) }
    dend_90 { pt3dadd( 44.4675, 85.8297, -21.1989, 0.59 ) }
    dend_90 { pt3dadd( 44.9498, 86.043, -21.2739, 0.59 ) }
    dend_90 { pt3dadd( 45.6989, 86.309, -21.3807, 0.29 ) }
    dend_90 { pt3dadd( 46.6806, 86.567, -21.5023, 0.59 ) }
    dend_90 { pt3dadd( 47.7588, 86.8025, -21.6188, 0.37 ) }
    dend_90 { pt3dadd( 49.0304, 87.0494, -21.7831, 0.96 ) }
    dend_90 { pt3dadd( 49.7724, 87.1709, -21.888, 0.96 ) }
    dend_90 { pt3dadd( 50.2568, 87.2396, -21.9543, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_90 { pt3dadd( 50.7106, 87.2954, -22.0114, 0.37 ) }
    dend_90 { pt3dadd( 51.3281, 87.3835, -22.0785, 0.22 ) }
    dend_90 { pt3dadd( 52.252, 87.5291, -22.1555, 0.22 ) }
    dend_90 { pt3dadd( 53.4839, 87.6949, -22.2102, 0.22 ) }
    dend_90 { pt3dadd( 54.7356, 87.8349, -22.2547, 0.22 ) }
    dend_90 { pt3dadd( 55.6168, 87.8981, -22.2452, 0.74 ) }
    dend_90 { pt3dadd( 56.4402, 87.9177, -22.1994, 0.96 ) }
    dend_90 { pt3dadd( 56.9506, 87.9067, -22.1549, 0.96 ) }
    dend_90 { pt3dadd( 58.2002, 87.844, -22.0173, 0.22 ) }
    dend_90 { pt3dadd( 59.0944, 87.7727, -21.9244, 0.44 ) }
    dend_90 { pt3dadd( 61.0559, 87.5747, -21.6995, 0.22 ) }
    dend_90 { pt3dadd( 62.705, 87.37, -21.4969, 0.22 ) }
    dend_90 { pt3dadd( 63.3678, 87.2707, -21.4112, 0.66 ) }
    dend_90 { pt3dadd( 63.8582, 87.1957, -21.3457, 0.81 ) }
    dend_90 { pt3dadd( 64.4837, 87.1069, -21.2622, 0.52 ) }
    // Section: dend_85, id: dend_85, parent: soma_0 (entry count 15/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 5.11199, -5.90675, 0.797081, 2.21 ) }
    dend_85 { pt3dadd( 5.11199, -5.90675, 0.797081, 2.21 ) }
    dend_85 { pt3dadd( 6.14039, -7.0266, 1.04847, 2.21 ) }
    dend_85 { pt3dadd( 7.54187, -8.6089, 1.4683, 2.21 ) }
    dend_85 { pt3dadd( 8.8035, -10.2159, 1.90174, 1.55 ) }
    dend_85 { pt3dadd( 9.83877, -11.7643, 2.30402, 1.18 ) }
    dend_85 { pt3dadd( 10.5018, -12.9076, 2.58395, 1.18 ) }
    dend_85 { pt3dadd( 11.1478, -14.239, 2.90607, 1.4 ) }
    dend_85 { pt3dadd( 11.3955, -14.8896, 3.06651, 1.55 ) }
    dend_85 { pt3dadd( 11.848, -16.4983, 3.44423, 0.96 ) }
    dend_85 { pt3dadd( 12.167, -18.0383, 3.75553, 0.96 ) }
    dend_85 { pt3dadd( 12.3869, -19.3849, 3.95616, 1.18 ) }
    dend_85 { pt3dadd( 12.6373, -21.0232, 4.14267, 1.4 ) }
    dend_85 { pt3dadd( 12.7963, -22.0921, 4.22861, 1.62 ) }
    dend_85 { pt3dadd( 13.0011, -23.3649, 4.32112, 1.62 ) }
    dend_85 { pt3dadd( 13.273, -24.7589, 4.39109, 1.33 ) }
    dend_85 { pt3dadd( 13.6855, -26.7889, 4.47712, 1.11 ) }
    dend_85 { pt3dadd( 13.9147, -28.1896, 4.53039, 1.11 ) }
    dend_85 { pt3dadd( 14.028, -29.1971, 4.58357, 1.11 ) }
    dend_85 { pt3dadd( 14.1773, -30.6159, 4.69188, 1.11 ) }
    dend_85 { pt3dadd( 14.3422, -32.0126, 4.84413, 1.03 ) }
    dend_85 { pt3dadd( 14.4942, -33.2104, 5.00697, 0.88 ) }
    dend_85 { pt3dadd( 14.6797, -34.615, 5.23802, 0.88 ) }
    dend_85 { pt3dadd( 14.8802, -36.1924, 5.53584, 0.88 ) }
    dend_85 { pt3dadd( 15.0652, -37.765, 5.84965, 0.66 ) }
    dend_85 { pt3dadd( 15.1703, -39.0959, 6.12067, 0.66 ) }
    dend_85 { pt3dadd( 15.1694, -40.0, 6.29422, 0.88 ) }
    dend_85 { pt3dadd( 14.9433, -41.497, 6.50679, 0.88 ) }
    dend_85 { pt3dadd( 14.5924, -42.7404, 6.64282, 0.74 ) }
    dend_85 { pt3dadd( 14.0747, -43.9969, 6.7407, 0.74 ) }
    dend_85 { pt3dadd( 13.3289, -45.4932, 6.84454, 0.59 ) }
    dend_85 { pt3dadd( 12.1847, -47.4799, 6.96755, 0.37 ) }
    dend_85 { pt3dadd( 10.224, -50.5053, 7.13152, 0.37 ) }
    dend_85 { pt3dadd( 9.59987, -51.3455, 7.16261, 0.96 ) }
    dend_85 { pt3dadd( 8.79455, -52.3142, 7.18042, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 50/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 3.19199, 9.82, -0.572918, 5.08 ) }
    dend_38 { pt3dadd( 3.19199, 9.82, -0.572918, 5.08 ) }
    dend_38 { pt3dadd( 4.49286, 12.7518, -0.687943, 4.27 ) }
    dend_38 { pt3dadd( 5.34125, 14.6639, -0.762959, 4.2 ) }
    dend_38 { pt3dadd( 6.29632, 16.8163, -0.847408, 4.2 ) }
    dend_38 { pt3dadd( 7.33619, 19.1599, -0.939355, 4.57 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 56/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -7.16801, -5.0585, -12.2629, 2.58 ) }
    dend_23 { pt3dadd( -7.16801, -5.0585, -12.2629, 2.58 ) }
    dend_23 { pt3dadd( -8.12314, -4.87323, -12.0317, 2.58 ) }
    dend_23 { pt3dadd( -9.4955, -4.58569, -11.6086, 2.14 ) }
    dend_23 { pt3dadd( -11.0379, -4.24701, -11.0885, 1.99 ) }
    dend_23 { pt3dadd( -12.3046, -3.96389, -10.6558, 1.99 ) }
    dend_23 { pt3dadd( -13.7421, -3.63459, -10.1745, 1.77 ) }
    dend_23 { pt3dadd( -15.4632, -3.21997, -9.61223, 2.28 ) }
    dend_23 { pt3dadd( -16.7052, -2.91394, -9.21751, 2.43 ) }
    dend_23 { pt3dadd( -17.4562, -2.72146, -8.99712, 2.43 ) }
    dend_23 { pt3dadd( -18.4749, -2.45359, -8.7648, 2.43 ) }
    dend_23 { pt3dadd( -19.3273, -2.23056, -8.63553, 2.43 ) }
    dend_23 { pt3dadd( -21.1218, -1.75379, -8.51499, 1.92 ) }
    dend_23 { pt3dadd( -22.9174, -1.22478, -8.57595, 1.69 ) }
    dend_23 { pt3dadd( -24.7102, -0.628459, -8.77567, 1.47 ) }
    dend_23 { pt3dadd( -25.7285, -0.262922, -8.93999, 1.47 ) }
    dend_23 { pt3dadd( -26.9892, 0.194938, -9.20004, 1.77 ) }
    dend_23 { pt3dadd( -28.404, 0.67007, -9.51527, 2.36 ) }
    dend_23 { pt3dadd( -29.6915, 1.06166, -9.82374, 2.28 ) }
    dend_23 { pt3dadd( -30.4748, 1.25723, -10.0083, 2.28 ) }
    dend_23 { pt3dadd( -32.4223, 1.65599, -10.4083, 2.06 ) }
    dend_23 { pt3dadd( -34.0282, 1.9542, -10.6842, 1.84 ) }
    dend_23 { pt3dadd( -37.0205, 2.4478, -11.0774, 1.62 ) }
    dend_23 { pt3dadd( -38.2894, 2.58293, -11.1663, 1.62 ) }
    dend_23 { pt3dadd( -40.1279, 2.63497, -11.2459, 1.77 ) }
    dend_23 { pt3dadd( -42.0533, 2.57755, -11.3153, 2.21 ) }
    dend_23 { pt3dadd( -43.3515, 2.4754, -11.3613, 2.21 ) }
    dend_23 { pt3dadd( -45.1776, 2.29229, -11.4299, 1.84 ) }
    dend_23 { pt3dadd( -49.102, 1.84244, -11.695, 1.4 ) }
    dend_23 { pt3dadd( -51.7517, 1.56661, -11.9407, 1.18 ) }
    dend_23 { pt3dadd( -53.5032, 1.41814, -12.1431, 1.03 ) }
    dend_23 { pt3dadd( -54.6662, 1.29994, -12.2934, 1.03 ) }
    dend_23 { pt3dadd( -56.7992, 1.097, -12.6048, 1.4 ) }
    dend_23 { pt3dadd( -58.6778, 1.01051, -12.9557, 1.18 ) }
    dend_23 { pt3dadd( -60.495, 1.14243, -13.432, 1.33 ) }
    dend_23 { pt3dadd( -62.7129, 1.57408, -13.9968, 2.43 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.16801, 3.3655, -17.8229, 1.77 ) }
    dend_18 { pt3dadd( -4.07472, 4.55184, -18.644, 1.77 ) }
    dend_18 { pt3dadd( -5.00512, 7.02208, -20.5334, 2.65 ) }
    dend_18 { pt3dadd( -5.23261, 7.27019, -20.8139, 2.95 ) }
    dend_18 { pt3dadd( -7.75681, 9.24561, -23.5994, 1.11 ) }
    dend_18 { pt3dadd( -8.77097, 9.95686, -24.6579, 1.11 ) }
    dend_18 { pt3dadd( -10.5712, 11.2029, -26.4304, 1.11 ) }
    dend_18 { pt3dadd( -11.4404, 11.8836, -27.2844, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_18 { pt3dadd( -13.0815, 13.2348, -28.7446, 1.47 ) }
    dend_18 { pt3dadd( -14.1864, 14.0045, -29.4974, 1.18 ) }
    dend_18 { pt3dadd( -15.3902, 14.7241, -30.1008, 1.03 ) }
    dend_18 { pt3dadd( -16.2525, 15.3134, -30.488, 0.74 ) }
    dend_18 { pt3dadd( -17.1932, 16.1827, -30.9053, 0.96 ) }
    dend_18 { pt3dadd( -18.2086, 17.3262, -31.322, 1.25 ) }
    dend_18 { pt3dadd( -19.0783, 18.359, -31.6489, 1.55 ) }
    dend_18 { pt3dadd( -19.7533, 19.0968, -31.916, 1.55 ) }
    dend_18 { pt3dadd( -20.882, 20.164, -32.4232, 1.03 ) }
    dend_18 { pt3dadd( -21.9533, 20.9281, -32.9893, 0.81 ) }
    dend_18 { pt3dadd( -23.356, 21.6097, -33.8271, 1.11 ) }
    dend_18 { pt3dadd( -24.6041, 22.037, -34.6659, 1.69 ) }
    dend_18 { pt3dadd( -25.432, 22.2412, -35.2946, 1.69 ) }
    dend_18 { pt3dadd( -26.8014, 22.5212, -36.5844, 1.03 ) }
    dend_18 { pt3dadd( -27.9276, 22.8176, -37.8748, 0.81 ) }
    dend_18 { pt3dadd( -28.4689, 23.0917, -38.5865, 1.03 ) }
    dend_18 { pt3dadd( -29.0686, 23.8467, -39.7926, 1.18 ) }
    dend_18 { pt3dadd( -29.2425, 24.4194, -40.4611, 1.4 ) }
    dend_18 { pt3dadd( -29.3628, 25.8606, -41.8753, 1.55 ) }
    dend_18 { pt3dadd( -29.3214, 27.1697, -42.9969, 0.96 ) }
    dend_18 { pt3dadd( -29.1878, 28.3081, -43.8657, 0.52 ) }
    dend_18 { pt3dadd( -28.9841, 29.6989, -44.9103, 0.52 ) }
    dend_18 { pt3dadd( -28.8927, 30.4079, -45.4236, 0.96 ) }
    dend_18 { pt3dadd( -28.8069, 31.1183, -45.8756, 0.96 ) }
    dend_18 { pt3dadd( -28.7345, 31.6772, -46.172, 0.96 ) }
    dend_18 { pt3dadd( -28.5795, 32.7078, -46.7045, 0.37 ) }
    dend_18 { pt3dadd( -28.4214, 33.9528, -47.3157, 0.37 ) }
    dend_18 { pt3dadd( -28.3367, 34.8477, -47.7412, 0.37 ) }
    dend_18 { pt3dadd( -28.2092, 36.3932, -48.5081, 0.74 ) }
    dend_18 { pt3dadd( -28.1128, 37.2369, -48.9554, 0.74 ) }
    dend_18 { pt3dadd( -27.9867, 38.1335, -49.4614, 0.59 ) }
    dend_18 { pt3dadd( -27.822, 39.1548, -50.0698, 0.44 ) }
    dend_18 { pt3dadd( -27.5657, 40.7609, -51.0203, 0.44 ) }
    dend_18 { pt3dadd( -27.4242, 41.6272, -51.5825, 0.44 ) }
    dend_18 { pt3dadd( -27.1023, 43.421, -52.8487, 0.52 ) }
    dend_18 { pt3dadd( -26.9022, 44.4699, -53.6425, 0.52 ) }
    dend_18 { pt3dadd( -26.7115, 45.5217, -54.5401, 0.88 ) }
    dend_18 { pt3dadd( -26.5949, 46.2193, -55.2078, 0.88 ) }
    dend_18 { pt3dadd( -26.398, 47.6211, -56.7171, 0.44 ) }
    dend_18 { pt3dadd( -26.3143, 48.4657, -57.7367, 0.44 ) }
    dend_18 { pt3dadd( -26.3158, 49.2331, -58.7628, 0.44 ) }
    dend_18 { pt3dadd( -26.4426, 50.4592, -60.5123, 0.66 ) }
    dend_18 { pt3dadd( -26.6681, 51.6538, -62.2246, 1.03 ) }
    dend_18 { pt3dadd( -26.8837, 52.3748, -63.2009, 1.03 ) }
    dend_18 { pt3dadd( -27.3434, 53.4791, -64.6118, 0.44 ) }
    dend_18 { pt3dadd( -27.8071, 54.4719, -65.8025, 0.44 ) }
    dend_18 { pt3dadd( -28.1693, 55.2741, -66.6509, 0.81 ) }
    dend_18 { pt3dadd( -28.4827, 56.0342, -67.3539, 0.81 ) }
    dend_18 { pt3dadd( -29.247, 58.1096, -69.1814, 0.44 ) }
    dend_18 { pt3dadd( -29.8272, 60.1148, -70.8991, 0.96 ) }
    dend_18 { pt3dadd( -30.0423, 60.9755, -71.6824, 0.96 ) }
    dend_18 { pt3dadd( -30.3257, 62.0631, -72.7505, 0.52 ) }
    dend_18 { pt3dadd( -30.8366, 63.5691, -74.5176, 0.52 ) }
    dend_18 { pt3dadd( -31.4379, 64.8365, -76.3805, 1.25 ) }
    dend_18 { pt3dadd( -32.0218, 65.7657, -78.0844, 1.11 ) }
    dend_18 { pt3dadd( -32.9241, 66.9308, -80.6618, 0.74 ) }
    dend_18 { pt3dadd( -33.4438, 67.5017, -82.2056, 0.66 ) }
    dend_18 { pt3dadd( -34.5046, 68.2512, -85.0303, 1.4 ) }
    dend_18 { pt3dadd( -35.4605, 68.6504, -87.1629, 1.03 ) }
    dend_18 { pt3dadd( -36.1264, 68.8124, -88.3443, 0.74 ) }
    dend_18 { pt3dadd( -37.5589, 69.0528, -90.4217, 0.88 ) }
    dend_18 { pt3dadd( -38.5064, 69.254, -91.5542, 0.74 ) }
    dend_18 { pt3dadd( -40.4427, 69.9494, -93.5591, 0.52 ) }
    dend_18 { pt3dadd( -41.651, 70.542, -94.4759, 1.18 ) }
    dend_18 { pt3dadd( -42.9945, 71.3658, -95.2134, 1.18 ) }
    dend_18 { pt3dadd( -43.5873, 71.8515, -95.5183, 1.18 ) }
    dend_18 { pt3dadd( -44.6843, 73.0158, -95.9862, 0.81 ) }
    dend_18 { pt3dadd( -45.3955, 74.002, -96.2866, 0.59 ) }
    dend_18 { pt3dadd( -46.0105, 75.1472, -96.6171, 0.59 ) }
    dend_18 { pt3dadd( -46.7638, 76.8, -97.1344, 1.03 ) }
    dend_18 { pt3dadd( -47.4149, 78.3978, -97.6313, 1.03 ) }
    dend_18 { pt3dadd( -47.9999, 79.9525, -98.0832, 0.59 ) }
    dend_18 { pt3dadd( -48.4625, 81.2668, -98.4282, 0.59 ) }
    dend_18 { pt3dadd( -49.1118, 83.1941, -98.9122, 0.44 ) }
    dend_18 { pt3dadd( -49.3682, 84.0123, -99.1136, 0.44 ) }
    dend_18 { pt3dadd( -49.824, 85.6675, -99.5452, 0.74 ) }
    dend_18 { pt3dadd( -50.159, 87.13, -99.921, 0.74 ) }
    dend_18 { pt3dadd( -50.4572, 88.8045, -100.401, 0.52 ) }
    dend_18 { pt3dadd( -50.6091, 89.935, -100.715, 0.88 ) }
    dend_18 { pt3dadd( -50.7996, 91.5337, -101.102, 1.11 ) }
    dend_18 { pt3dadd( -50.9149, 92.4216, -101.269, 1.25 ) }
    dend_18 { pt3dadd( -51.0512, 93.3357, -101.409, 1.25 ) }
    dend_18 { pt3dadd( -51.427, 95.4835, -101.681, 0.59 ) }
    dend_18 { pt3dadd( -51.6748, 96.85, -101.833, 0.74 ) }
    dend_18 { pt3dadd( -52.0015, 98.6255, -102.003, 0.44 ) }
    dend_18 { pt3dadd( -52.3045, 100.299, -102.181, 0.96 ) }
    dend_18 { pt3dadd( -52.5006, 101.39, -102.312, 1.55 ) }
    dend_18 { pt3dadd( -52.6118, 102.04, -102.407, 1.55 ) }
    dend_18 { pt3dadd( -52.7993, 103.271, -102.624, 0.74 ) }
    dend_18 { pt3dadd( -52.9466, 104.308, -102.835, 0.52 ) }
    dend_18 { pt3dadd( -53.1945, 106.368, -103.349, 0.52 ) }
    dend_18 { pt3dadd( -53.3519, 107.94, -103.821, 0.66 ) }
    dend_18 { pt3dadd( -53.4935, 109.623, -104.327, 1.62 ) }
    dend_18 { pt3dadd( -53.568, 110.43, -104.566, 1.92 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 94/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 8.35199, 0.664752, -5.51292, 2.43 ) }
    dend_15 { pt3dadd( 8.35199, 0.664752, -5.51292, 2.43 ) }
    dend_15 { pt3dadd( 8.97798, 0.895487, -5.37602, 2.43 ) }
    dend_15 { pt3dadd( 10.7292, 1.51642, -4.99142, 1.99 ) }
    dend_15 { pt3dadd( 11.6381, 1.82297, -4.80563, 1.99 ) }
    dend_15 { pt3dadd( 12.6122, 2.13527, -4.60395, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_15 { pt3dadd( 13.9135, 2.53662, -4.32212, 2.36 ) }
    dend_15 { pt3dadd( 14.791, 2.78606, -4.12352, 2.36 ) }
    dend_15 { pt3dadd( 16.3315, 3.18141, -3.75302, 1.69 ) }
    dend_15 { pt3dadd( 17.5312, 3.47641, -3.48991, 1.47 ) }
    dend_15 { pt3dadd( 18.6091, 3.75145, -3.30769, 1.77 ) }
    dend_15 { pt3dadd( 19.1282, 3.88502, -3.28244, 1.77 ) }
    dend_15 { pt3dadd( 20.2773, 4.18304, -3.33696, 2.14 ) }
    dend_15 { pt3dadd( 21.7603, 4.55796, -3.46058, 1.33 ) }
    dend_15 { pt3dadd( 23.4731, 5.00862, -3.68437, 1.77 ) }
    dend_15 { pt3dadd( 24.8351, 5.38394, -3.93836, 1.77 ) }
    dend_15 { pt3dadd( 27.3914, 6.12261, -4.60823, 1.4 ) }
    dend_15 { pt3dadd( 28.0102, 6.30907, -4.81547, 1.4 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 12/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.27801, 5.98825, -0.382918, 3.09 ) }
    dend_0 { pt3dadd( -5.27801, 5.98825, -0.382918, 3.09 ) }
    dend_0 { pt3dadd( -7.57294, 6.63399, 0.0762551, 2.43 ) }
    dend_0 { pt3dadd( -8.6656, 6.85051, 0.273685, 2.43 ) }
    dend_0 { pt3dadd( -10.1236, 7.0712, 0.508626, 3.02 ) }
    dend_0 { pt3dadd( -11.4303, 7.22754, 0.692634, 3.24 ) }
    dend_0 { pt3dadd( -12.2101, 7.30602, 0.790354, 3.46 ) }
    dend_0 { pt3dadd( -13.0364, 7.34458, 0.879414, 3.46 ) }
    dend_0 { pt3dadd( -15.283, 7.25849, 1.08351, 2.06 ) }
    dend_0 { pt3dadd( -16.5416, 7.13502, 1.23459, 2.06 ) }
    dend_0 { pt3dadd( -18.1309, 6.88634, 1.50098, 1.84 ) }
    dend_0 { pt3dadd( -19.1989, 6.67137, 1.71628, 1.84 ) }
    dend_0 { pt3dadd( -20.8576, 6.22068, 2.09933, 1.84 ) }
    dend_0 { pt3dadd( -23.0678, 5.5676, 2.66029, 1.55 ) }
    dend_0 { pt3dadd( -25.2258, 4.85613, 3.30066, 1.33 ) }
    dend_0 { pt3dadd( -26.7074, 4.29075, 3.80203, 1.62 ) }
    dend_0 { pt3dadd( -27.3528, 4.00388, 4.05469, 1.62 ) }
    dend_0 { pt3dadd( -28.845, 3.25137, 4.71874, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 30/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -4.52611, -8.77296, 0.897628, 1.40211 ) }
    axon_0 { pt3dadd( -11.806, -21.888, 0.897628, 1.40211 ) }
    axon_0 { pt3dadd( -19.0859, -35.003, 0.897628, 1.40211 ) }
    // Section: dend_89, id: dend_89, parent: dend_85 (entry count 33/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 8.79455, -52.3142, 7.18042, 0.37 ) }
    dend_89 { pt3dadd( 6.93747, -52.8923, 7.47351, 0.37 ) }
    dend_89 { pt3dadd( 6.17149, -53.132, 7.58361, 0.37 ) }
    dend_89 { pt3dadd( 5.12283, -53.4955, 7.74042, 0.37 ) }
    dend_89 { pt3dadd( 3.9229, -53.9612, 7.87126, 0.37 ) }
    dend_89 { pt3dadd( 2.76686, -54.4098, 7.9973, 0.37 ) }
    dend_89 { pt3dadd( 1.94168, -54.7301, 8.08728, 0.37 ) }
    dend_89 { pt3dadd( 1.16238, -55.0702, 8.1822, 0.37 ) }
    dend_89 { pt3dadd( -0.683878, -55.871, 8.34774, 0.37 ) }
    dend_89 { pt3dadd( -2.15614, -56.4946, 8.41603, 0.37 ) }
    dend_89 { pt3dadd( -11.3747, -60.2702, 8.56683, 0.37 ) }
    dend_89 { pt3dadd( -19.5533, -65.7569, 9.76808, 0.37 ) }
    dend_89 { pt3dadd( -27.8772, -71.1374, 9.25845, 0.37 ) }
    dend_89 { pt3dadd( -37.2451, -74.4892, 8.60839, 0.37 ) }
    dend_89 { pt3dadd( -46.4602, -78.1091, 7.46892, 0.37 ) }
    dend_89 { pt3dadd( -55.6259, -81.9988, 7.19549, 0.37 ) }
    dend_89 { pt3dadd( -64.0658, -87.1769, 7.94663, 0.37 ) }
    dend_89 { pt3dadd( -71.3478, -93.5966, 9.84878, 0.37 ) }
    dend_89 { pt3dadd( -77.7863, -101.056, 9.70539, 0.37 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 52/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 8.79455, -52.3142, 7.18042, 0.44 ) }
    dend_86 { pt3dadd( 7.2931, -53.097, 7.24687, 0.44 ) }
    dend_86 { pt3dadd( 5.66181, -53.7844, 7.35801, 0.44 ) }
    dend_86 { pt3dadd( 4.7736, -54.1399, 7.43726, 0.66 ) }
    dend_86 { pt3dadd( 3.61977, -54.6225, 7.55754, 0.29 ) }
    dend_86 { pt3dadd( 2.73928, -55.0097, 7.6629, 0.29 ) }
    dend_86 { pt3dadd( 1.5342, -55.5397, 7.8071, 0.29 ) }
    dend_86 { pt3dadd( 0.897566, -55.7559, 7.89496, 0.29 ) }
    dend_86 { pt3dadd( -0.152557, -56.0498, 8.06559, 0.29 ) }
    dend_86 { pt3dadd( -1.08643, -56.3491, 8.24478, 0.29 ) }
    dend_86 { pt3dadd( -1.58628, -56.5485, 8.36024, 0.29 ) }
    dend_86 { pt3dadd( -11.2492, -59.0224, 7.92528, 0.29 ) }
    dend_86 { pt3dadd( -21.0117, -61.0432, 7.29489, 0.29 ) }
    dend_86 { pt3dadd( -30.2032, -64.0033, 4.7851, 0.29 ) }
    dend_86 { pt3dadd( -39.2147, -67.8418, 2.97018, 0.29 ) }
    dend_86 { pt3dadd( -47.8812, -72.5505, 1.71789, 0.29 ) }
    dend_86 { pt3dadd( -56.6881, -77.1227, 2.38671, 0.29 ) }
    dend_86 { pt3dadd( -64.5066, -82.7895, 4.64303, 0.29 ) }
    dend_86 { pt3dadd( -72.1426, -88.9773, 5.83224, 0.29 ) }
    dend_86 { pt3dadd( -79.3558, -95.7301, 5.88239, 0.29 ) }
    dend_86 { pt3dadd( -85.9734, -103.04, 5.89236, 0.29 ) }
    dend_86 { pt3dadd( -93.0758, -109.891, 5.4674, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_38 (entry count 74/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 7.33619, 19.1599, -0.939355, 1.77 ) }
    dend_48 { pt3dadd( 10.3525, 19.2804, -0.0149716, 1.77 ) }
    dend_48 { pt3dadd( 11.6949, 19.3544, 0.364656, 1.77 ) }
    dend_48 { pt3dadd( 13.139, 19.4578, 0.747128, 2.21 ) }
    dend_48 { pt3dadd( 14.6454, 19.5912, 1.11796, 2.21 ) }
    dend_48 { pt3dadd( 15.6878, 19.7009, 1.34837, 2.21 ) }
    dend_48 { pt3dadd( 16.704, 19.8098, 1.56791, 2.65 ) }
    dend_48 { pt3dadd( 17.9263, 19.9584, 1.81534, 2.65 ) }
    dend_48 { pt3dadd( 19.0218, 20.1059, 2.02024, 2.65 ) }
    dend_48 { pt3dadd( 21.1472, 20.4064, 2.37905, 1.69 ) }
    dend_48 { pt3dadd( 23.1076, 20.7023, 2.70962, 1.4 ) }
    dend_48 { pt3dadd( 24.4523, 20.9266, 2.93798, 1.55 ) }
    dend_48 { pt3dadd( 25.3283, 21.1176, 3.09915, 1.55 ) }
    dend_48 { pt3dadd( 26.5355, 21.5008, 3.30502, 1.55 ) }
    dend_48 { pt3dadd( 27.5247, 21.9329, 3.44851, 1.92 ) }
    dend_48 { pt3dadd( 28.7048, 22.6902, 3.58098, 1.92 ) }
    dend_48 { pt3dadd( 29.9765, 23.8438, 3.63882, 2.21 ) }
    dend_48 { pt3dadd( 31.0054, 25.066, 3.61846, 1.92 ) }
    dend_48 { pt3dadd( 32.2008, 26.7839, 3.54009, 1.69 ) }
    dend_48 { pt3dadd( 32.9026, 27.9781, 3.4633, 1.69 ) }
    dend_48 { pt3dadd( 33.8995, 29.9092, 3.30416, 1.69 ) }
    dend_48 { pt3dadd( 35.0624, 32.3239, 3.0893, 1.84 ) }
    dend_48 { pt3dadd( 35.8648, 34.0485, 2.93033, 1.84 ) }
    dend_48 { pt3dadd( 36.6358, 35.5733, 2.78818, 1.84 ) }
    dend_48 { pt3dadd( 37.3661, 37.0009, 2.67546, 1.84 ) }
    dend_48 { pt3dadd( 38.3131, 38.8218, 2.53817, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 38.9801, 39.9976, 2.45543, 1.92 ) }
    dend_48 { pt3dadd( 39.7251, 41.1656, 2.4033, 2.28 ) }
    dend_48 { pt3dadd( 40.7766, 42.5713, 2.32711, 2.5 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 3/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.33619, 19.1599, -0.939355, 2.36 ) }
    dend_39 { pt3dadd( 6.48832, 23.0055, -1.11597, 2.36 ) }
    dend_39 { pt3dadd( 5.9343, 25.5183, -1.23138, 2.21 ) }
    dend_39 { pt3dadd( 5.70811, 26.5443, -1.2785, 2.21 ) }
    dend_39 { pt3dadd( 5.26628, 28.5482, -1.37053, 2.43 ) }
    // Section: dend_35, id: dend_35, parent: dend_23 (entry count 8/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -62.7129, 1.57408, -13.9968, 1.11 ) }
    dend_35 { pt3dadd( -63.9797, 2.57881, -13.4619, 1.11 ) }
    dend_35 { pt3dadd( -64.9849, 3.31394, -13.0878, 1.99 ) }
    dend_35 { pt3dadd( -65.6882, 3.77282, -12.851, 1.99 ) }
    dend_35 { pt3dadd( -66.069, 4.00951, -12.7349, 1.99 ) }
    dend_35 { pt3dadd( -67.3474, 4.84492, -12.3863, 1.18 ) }
    dend_35 { pt3dadd( -68.4153, 5.58796, -12.1023, 0.96 ) }
    dend_35 { pt3dadd( -69.3104, 6.21228, -11.8964, 0.96 ) }
    dend_35 { pt3dadd( -70.1364, 6.82934, -11.6997, 2.06 ) }
    dend_35 { pt3dadd( -70.847, 7.40355, -11.5368, 2.06 ) }
    dend_35 { pt3dadd( -72.2461, 8.61855, -11.2501, 1.25 ) }
    dend_35 { pt3dadd( -73.0426, 9.36948, -11.1263, 1.4 ) }
    dend_35 { pt3dadd( -73.5154, 9.83953, -11.0783, 1.4 ) }
    dend_35 { pt3dadd( -74.1633, 10.5002, -11.0397, 1.18 ) }
    dend_35 { pt3dadd( -75.1586, 11.5229, -11.0022, 0.96 ) }
    dend_35 { pt3dadd( -75.8709, 12.2165, -10.9804, 0.96 ) }
    dend_35 { pt3dadd( -76.979, 13.2066, -10.9622, 0.74 ) }
    dend_35 { pt3dadd( -78.3056, 14.3355, -10.9597, 0.74 ) }
    dend_35 { pt3dadd( -79.0266, 14.9105, -10.9594, 0.74 ) }
    dend_35 { pt3dadd( -79.8242, 15.5054, -10.9611, 0.74 ) }
    dend_35 { pt3dadd( -80.7654, 16.1815, -10.918, 1.11 ) }
    dend_35 { pt3dadd( -81.774, 16.9171, -10.8123, 0.37 ) }
    dend_35 { pt3dadd( -82.3129, 17.3119, -10.7301, 0.37 ) }
    dend_35 { pt3dadd( -83.2272, 17.9712, -10.5765, 1.99 ) }
    dend_35 { pt3dadd( -83.5182, 18.1756, -10.5339, 1.99 ) }
    dend_35 { pt3dadd( -85.386, 19.5413, -10.3046, 0.81 ) }
    dend_35 { pt3dadd( -86.164, 20.1496, -10.2105, 0.81 ) }
    dend_35 { pt3dadd( -86.9935, 20.8366, -10.1027, 1.03 ) }
    dend_35 { pt3dadd( -87.9849, 21.6965, -9.96976, 1.11 ) }
    dend_35 { pt3dadd( -89.1812, 22.7875, -9.81, 1.03 ) }
    dend_35 { pt3dadd( -90.1882, 23.6976, -9.67347, 0.88 ) }
    dend_35 { pt3dadd( -90.9973, 24.4227, -9.5604, 1.11 ) }
    dend_35 { pt3dadd( -91.5107, 24.882, -9.47095, 1.11 ) }
    dend_35 { pt3dadd( -91.8976, 25.2276, -9.38934, 1.11 ) }
    dend_35 { pt3dadd( -93.0318, 26.2514, -9.13422, 1.47 ) }
    dend_35 { pt3dadd( -93.6899, 26.8305, -8.99238, 1.47 ) }
    dend_35 { pt3dadd( -94.0025, 27.0797, -8.9386, 1.47 ) }
    dend_35 { pt3dadd( -95.2587, 27.983, -8.79681, 0.96 ) }
    dend_35 { pt3dadd( -95.9816, 28.48, -8.74574, 0.96 ) }
    dend_35 { pt3dadd( -96.5535, 28.8831, -8.72252, 0.96 ) }
    dend_35 { pt3dadd( -97.2914, 29.4383, -8.71404, 0.81 ) }
    dend_35 { pt3dadd( -98.44, 30.3431, -8.72555, 0.81 ) }
    dend_35 { pt3dadd( -100.009, 31.5603, -8.73435, 0.81 ) }
    dend_35 { pt3dadd( -101.16, 32.4166, -8.7295, 0.96 ) }
    dend_35 { pt3dadd( -102.151, 33.1339, -8.70214, 1.4 ) }
    dend_35 { pt3dadd( -103.109, 33.8133, -8.65635, 1.4 ) }
    dend_35 { pt3dadd( -104.093, 34.4911, -8.59987, 1.4 ) }
    dend_35 { pt3dadd( -105.502, 35.4116, -8.51263, 0.96 ) }
    dend_35 { pt3dadd( -106.94, 36.2799, -8.42128, 1.4 ) }
    dend_35 { pt3dadd( -107.866, 36.7805, -8.38911, 0.88 ) }
    dend_35 { pt3dadd( -109.172, 37.4057, -8.33972, 0.59 ) }
    dend_35 { pt3dadd( -110.401, 37.9523, -8.32681, 0.37 ) }
    dend_35 { pt3dadd( -111.589, 38.48, -8.35386, 0.37 ) }
    dend_35 { pt3dadd( -112.333, 38.8222, -8.38945, 0.37 ) }
    dend_35 { pt3dadd( -113.673, 39.4638, -8.4603, 0.88 ) }
    dend_35 { pt3dadd( -114.906, 40.0837, -8.53318, 1.18 ) }
    dend_35 { pt3dadd( -115.939, 40.6337, -8.6002, 0.66 ) }
    dend_35 { pt3dadd( -116.529, 40.9702, -8.64084, 0.52 ) }
    dend_35 { pt3dadd( -117.58, 41.593, -8.73859, 0.96 ) }
    dend_35 { pt3dadd( -118.354, 42.0565, -8.82169, 0.96 ) }
    dend_35 { pt3dadd( -119.149, 42.5227, -8.86993, 0.96 ) }
    dend_35 { pt3dadd( -120.017, 43.0314, -8.90448, 0.74 ) }
    dend_35 { pt3dadd( -121.266, 43.7501, -8.89971, 0.88 ) }
    dend_35 { pt3dadd( -122.558, 44.4826, -8.87184, 0.88 ) }
    dend_35 { pt3dadd( -123.831, 45.1933, -8.82643, 0.52 ) }
    dend_35 { pt3dadd( -126.974, 46.9104, -8.65941, 0.52 ) }
    dend_35 { pt3dadd( -128.098, 47.5205, -8.57579, 0.52 ) }
    dend_35 { pt3dadd( -129.168, 48.0987, -8.47465, 0.96 ) }
    dend_35 { pt3dadd( -130.185, 48.6431, -8.36416, 0.96 ) }
    dend_35 { pt3dadd( -131.318, 49.2369, -8.23799, 0.74 ) }
    dend_35 { pt3dadd( -132.457, 49.8107, -8.12208, 0.66 ) }
    dend_35 { pt3dadd( -133.232, 50.1799, -8.08034, 0.66 ) }
    dend_35 { pt3dadd( -134.23, 50.6359, -8.05527, 0.59 ) }
    dend_35 { pt3dadd( -134.988, 50.9711, -8.05535, 1.11 ) }
    dend_35 { pt3dadd( -135.715, 51.2777, -8.08203, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 83/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -62.7129, 1.57408, -13.9968, 1.33 ) }
    dend_24 { pt3dadd( -65.0475, 1.35888, -15.2351, 1.33 ) }
    dend_24 { pt3dadd( -66.5649, 1.44013, -16.0075, 1.18 ) }
    dend_24 { pt3dadd( -67.9356, 1.6911, -16.6496, 1.18 ) }
    dend_24 { pt3dadd( -69.049, 1.95448, -17.1317, 1.18 ) }
    dend_24 { pt3dadd( -70.1906, 2.2096, -17.5575, 1.18 ) }
    dend_24 { pt3dadd( -71.4686, 2.43619, -17.9703, 0.96 ) }
    dend_24 { pt3dadd( -72.8207, 2.73012, -18.2537, 1.03 ) }
    dend_24 { pt3dadd( -74.1939, 2.96418, -18.4327, 1.03 ) }
    dend_24 { pt3dadd( -75.155, 3.01804, -18.5554, 1.03 ) }
    dend_24 { pt3dadd( -76.6534, 2.87236, -18.7811, 1.4 ) }
    dend_24 { pt3dadd( -78.0275, 2.5671, -19.0166, 1.84 ) }
    dend_24 { pt3dadd( -78.8867, 2.31104, -19.1781, 1.84 ) }
    dend_24 { pt3dadd( -80.1908, 1.88006, -19.4378, 1.62 ) }
    dend_24 { pt3dadd( -82.284, 1.23195, -19.9049, 1.18 ) }
    dend_24 { pt3dadd( -84.6276, 0.63688, -20.5024, 1.03 ) }
    dend_24 { pt3dadd( -85.8402, 0.40985, -20.8482, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( -86.8829, 0.281299, -21.1542, 1.47 ) }
    dend_24 { pt3dadd( -87.506, 0.238948, -21.3324, 1.47 ) }
    dend_24 { pt3dadd( -88.8003, 0.225414, -21.6908, 1.62 ) }
    dend_24 { pt3dadd( -89.6413, 0.274871, -21.9059, 1.62 ) }
    dend_24 { pt3dadd( -90.4786, 0.375947, -22.1331, 1.62 ) }
    dend_24 { pt3dadd( -91.7849, 0.52033, -22.5018, 1.11 ) }
    dend_24 { pt3dadd( -93.1814, 0.623449, -22.8848, 1.55 ) }
    dend_24 { pt3dadd( -94.0017, 0.64235, -23.0955, 1.55 ) }
    dend_24 { pt3dadd( -94.9713, 0.595307, -23.3148, 1.55 ) }
    dend_24 { pt3dadd( -95.3348, 0.560162, -23.3861, 1.55 ) }
    dend_24 { pt3dadd( -96.4783, 0.396416, -23.5388, 0.88 ) }
    dend_24 { pt3dadd( -97.8925, 0.115984, -23.6332, 1.47 ) }
    dend_24 { pt3dadd( -99.1857, -0.204541, -23.6777, 1.69 ) }
    dend_24 { pt3dadd( -100.867, -0.657194, -23.6901, 1.18 ) }
    dend_24 { pt3dadd( -101.971, -0.971536, -23.6983, 1.47 ) }
    dend_24 { pt3dadd( -103.365, -1.36036, -23.7647, 1.84 ) }
    dend_24 { pt3dadd( -104.285, -1.60148, -23.8503, 1.84 ) }
    dend_24 { pt3dadd( -105.524, -1.86287, -24.0414, 1.47 ) }
    dend_24 { pt3dadd( -106.87, -2.04685, -24.3571, 1.03 ) }
    dend_24 { pt3dadd( -107.849, -2.10993, -24.6566, 1.03 ) }
    dend_24 { pt3dadd( -109.347, -2.15035, -25.1918, 1.47 ) }
    dend_24 { pt3dadd( -110.016, -2.1554, -25.4599, 1.4 ) }
    dend_24 { pt3dadd( -111.197, -2.15662, -25.9073, 0.66 ) }
    dend_24 { pt3dadd( -111.941, -2.16775, -26.1516, 0.66 ) }
    dend_24 { pt3dadd( -113.267, -2.21533, -26.5208, 1.33 ) }
    dend_24 { pt3dadd( -114.106, -2.25561, -26.6928, 1.47 ) }
    dend_24 { pt3dadd( -115.367, -2.33696, -26.884, 1.47 ) }
    dend_24 { pt3dadd( -116.391, -2.40947, -27.0265, 1.25 ) }
    dend_24 { pt3dadd( -117.564, -2.4593, -27.1862, 0.96 ) }
    dend_24 { pt3dadd( -118.456, -2.45287, -27.3211, 0.96 ) }
    dend_24 { pt3dadd( -119.331, -2.40713, -27.4739, 1.4 ) }
    dend_24 { pt3dadd( -120.111, -2.34276, -27.6208, 1.4 ) }
    dend_24 { pt3dadd( -121.049, -2.24198, -27.8137, 1.18 ) }
    dend_24 { pt3dadd( -123.064, -2.03072, -28.2527, 0.81 ) }
    dend_24 { pt3dadd( -124.682, -1.9088, -28.6087, 0.81 ) }
    dend_24 { pt3dadd( -126.482, -1.84066, -29.0055, 1.25 ) }
    dend_24 { pt3dadd( -127.548, -1.83157, -29.2492, 1.25 ) }
    dend_24 { pt3dadd( -129.036, -1.83842, -29.5764, 1.03 ) }
    dend_24 { pt3dadd( -130.869, -1.87644, -29.9694, 0.59 ) }
    dend_24 { pt3dadd( -132.529, -1.95804, -30.34, 0.59 ) }
    dend_24 { pt3dadd( -133.729, -2.0451, -30.6102, 1.62 ) }
    dend_24 { pt3dadd( -134.884, -2.17441, -30.8755, 1.84 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 42/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -53.568, 110.43, -104.566, 0.52 ) }
    dend_22 { pt3dadd( -52.3046, 111.01, -105.081, 0.52 ) }
    dend_22 { pt3dadd( -51.3425, 111.39, -105.497, 0.37 ) }
    dend_22 { pt3dadd( -49.4552, 112.047, -106.279, 0.37 ) }
    dend_22 { pt3dadd( -48.5816, 112.363, -106.661, 0.37 ) }
    dend_22 { pt3dadd( -47.2333, 112.918, -107.238, 0.88 ) }
    dend_22 { pt3dadd( -46.1838, 113.349, -107.656, 0.88 ) }
    dend_22 { pt3dadd( -45.5399, 113.615, -107.906, 1.03 ) }
    dend_22 { pt3dadd( -44.5079, 114.051, -108.283, 1.18 ) }
    dend_22 { pt3dadd( -42.673, 114.849, -108.894, 0.59 ) }
    dend_22 { pt3dadd( -41.2568, 115.489, -109.289, 0.44 ) }
    dend_22 { pt3dadd( -39.4743, 116.294, -109.705, 0.44 ) }
    dend_22 { pt3dadd( -37.7285, 117.023, -110.046, 0.96 ) }
    dend_22 { pt3dadd( -36.7485, 117.39, -110.209, 0.96 ) }
    dend_22 { pt3dadd( -34.6162, 118.079, -110.473, 0.52 ) }
    dend_22 { pt3dadd( -33.4137, 118.42, -110.55, 0.52 ) }
    dend_22 { pt3dadd( -31.9995, 118.814, -110.586, 0.74 ) }
    dend_22 { pt3dadd( -30.6808, 119.253, -110.582, 0.52 ) }
    dend_22 { pt3dadd( -29.4978, 119.734, -110.549, 0.66 ) }
    dend_22 { pt3dadd( -28.6123, 120.225, -110.517, 0.66 ) }
    dend_22 { pt3dadd( -27.6325, 121.109, -110.507, 0.52 ) }
    dend_22 { pt3dadd( -26.9451, 122.038, -110.531, 0.96 ) }
    dend_22 { pt3dadd( -26.3682, 123.301, -110.595, 0.66 ) }
    dend_22 { pt3dadd( -26.006, 124.803, -110.703, 0.44 ) }
    dend_22 { pt3dadd( -25.9235, 125.888, -110.861, 0.74 ) }
    dend_22 { pt3dadd( -25.9765, 127.77, -111.25, 0.52 ) }
    dend_22 { pt3dadd( -26.0505, 128.571, -111.457, 0.52 ) }
    dend_22 { pt3dadd( -26.2186, 130.173, -111.964, 0.37 ) }
    dend_22 { pt3dadd( -26.357, 131.581, -112.467, 0.29 ) }
    dend_22 { pt3dadd( -26.4631, 133.368, -113.181, 0.81 ) }
    dend_22 { pt3dadd( -26.4438, 134.16, -113.516, 0.81 ) }
    dend_22 { pt3dadd( -26.2711, 135.403, -114.087, 0.52 ) }
    dend_22 { pt3dadd( -25.6474, 137.526, -115.075, 1.33 ) }
    dend_22 { pt3dadd( -25.3742, 138.065, -115.34, 1.33 ) }
    dend_22 { pt3dadd( -24.5682, 139.111, -115.883, 0.74 ) }
    dend_22 { pt3dadd( -23.8008, 139.801, -116.236, 0.59 ) }
    dend_22 { pt3dadd( -23.0962, 140.227, -116.5, 0.59 ) }
    dend_22 { pt3dadd( -22.3655, 140.49, -116.732, 0.59 ) }
    dend_22 { pt3dadd( -21.348, 140.68, -117.012, 0.81 ) }
    dend_22 { pt3dadd( -20.0935, 140.858, -117.377, 0.81 ) }
    dend_22 { pt3dadd( -19.0633, 141.044, -117.708, 0.66 ) }
    dend_22 { pt3dadd( -17.713, 141.506, -118.179, 1.11 ) }
    dend_22 { pt3dadd( -17.1948, 141.835, -118.381, 1.11 ) }
    dend_22 { pt3dadd( -16.771, 142.341, -118.603, 1.11 ) }
    dend_22 { pt3dadd( -16.264, 143.503, -118.998, 0.81 ) }
    dend_22 { pt3dadd( -15.903, 145.348, -119.574, 0.52 ) }
    dend_22 { pt3dadd( -15.7785, 147.336, -120.16, 0.52 ) }
    dend_22 { pt3dadd( -15.781, 148.381, -120.487, 0.52 ) }
    dend_22 { pt3dadd( -15.8152, 149.655, -120.909, 1.11 ) }
    dend_22 { pt3dadd( -15.8409, 150.376, -121.177, 1.11 ) }
    dend_22 { pt3dadd( -15.8368, 151.137, -121.553, 0.74 ) }
    dend_22 { pt3dadd( -15.788, 152.157, -122.156, 0.52 ) }
    dend_22 { pt3dadd( -15.5351, 153.764, -123.285, 0.81 ) }
    dend_22 { pt3dadd( -15.3257, 154.53, -123.864, 0.96 ) }
    dend_22 { pt3dadd( -15.0335, 155.284, -124.463, 0.96 ) }
    dend_22 { pt3dadd( -14.3251, 156.782, -125.736, 0.88 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -53.568, 110.43, -104.566, 0.59 ) }
    dend_19 { pt3dadd( -54.0789, 112.291, -105.164, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_19 { pt3dadd( -54.3374, 113.2, -105.449, 0.59 ) }
    dend_19 { pt3dadd( -54.6107, 114.161, -105.75, 0.96 ) }
    dend_19 { pt3dadd( -54.8844, 115.123, -106.051, 1.18 ) }
    dend_19 { pt3dadd( -55.0856, 115.831, -106.273, 1.18 ) }
    dend_19 { pt3dadd( -55.3538, 116.774, -106.569, 0.88 ) }
    dend_19 { pt3dadd( -55.6318, 117.711, -106.88, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 28.0102, 6.30907, -4.81547, 1.03 ) }
    dend_17 { pt3dadd( 30.3761, 5.33083, -5.53698, 1.03 ) }
    dend_17 { pt3dadd( 32.9766, 4.41367, -6.22841, 1.11 ) }
    dend_17 { pt3dadd( 34.6273, 3.97993, -6.62143, 0.96 ) }
    dend_17 { pt3dadd( 36.3433, 3.67063, -7.0063, 1.62 ) }
    dend_17 { pt3dadd( 38.3279, 3.47717, -7.41819, 0.66 ) }
    dend_17 { pt3dadd( 39.6385, 3.4485, -7.67065, 0.66 ) }
    dend_17 { pt3dadd( 41.2378, 3.67676, -7.8603, 1.03 ) }
    dend_17 { pt3dadd( 42.8458, 4.25723, -8.03622, 1.4 ) }
    dend_17 { pt3dadd( 43.7896, 4.73051, -8.17226, 1.4 ) }
    dend_17 { pt3dadd( 44.8584, 5.36303, -8.35791, 1.77 ) }
    dend_17 { pt3dadd( 45.6783, 5.86762, -8.52294, 1.77 ) }
    dend_17 { pt3dadd( 46.7952, 6.42282, -8.7708, 1.47 ) }
    dend_17 { pt3dadd( 48.2081, 6.84246, -9.11966, 0.59 ) }
    dend_17 { pt3dadd( 49.5896, 7.00178, -9.47524, 0.88 ) }
    dend_17 { pt3dadd( 50.1535, 6.98926, -9.61768, 1.18 ) }
    dend_17 { pt3dadd( 51.0091, 6.86507, -9.82791, 1.18 ) }
    dend_17 { pt3dadd( 52.3908, 6.51986, -10.1474, 0.59 ) }
    dend_17 { pt3dadd( 53.669, 6.1143, -10.3852, 1.62 ) }
    dend_17 { pt3dadd( 54.5238, 5.81138, -10.5233, 1.92 ) }
    dend_17 { pt3dadd( 55.3147, 5.54667, -10.6211, 1.92 ) }
    dend_17 { pt3dadd( 56.1635, 5.26707, -10.7108, 1.25 ) }
    dend_17 { pt3dadd( 57.2094, 4.92287, -10.7618, 0.52 ) }
    dend_17 { pt3dadd( 58.2178, 4.5578, -10.7407, 1.11 ) }
    dend_17 { pt3dadd( 58.8488, 4.30308, -10.6774, 1.33 ) }
    dend_17 { pt3dadd( 60.1292, 3.77957, -10.5693, 0.52 ) }
    dend_17 { pt3dadd( 60.9003, 3.47996, -10.5305, 0.52 ) }
    dend_17 { pt3dadd( 62.083, 3.05092, -10.5671, 1.25 ) }
    dend_17 { pt3dadd( 62.813, 2.83329, -10.6459, 1.92 ) }
    dend_17 { pt3dadd( 63.4019, 2.72444, -10.758, 2.21 ) }
    dend_17 { pt3dadd( 65.7181, 2.62282, -11.369, 0.52 ) }
    dend_17 { pt3dadd( 66.61, 2.73702, -11.6721, 0.52 ) }
    dend_17 { pt3dadd( 67.9713, 3.17942, -12.1834, 0.88 ) }
    dend_17 { pt3dadd( 69.0342, 3.69914, -12.6159, 0.59 ) }
    dend_17 { pt3dadd( 70.3361, 4.52497, -13.1192, 1.55 ) }
    dend_17 { pt3dadd( 70.9205, 4.96471, -13.3168, 1.55 ) }
    dend_17 { pt3dadd( 71.4351, 5.41572, -13.4443, 1.55 ) }
    dend_17 { pt3dadd( 72.4419, 6.2376, -13.6225, 0.29 ) }
    dend_17 { pt3dadd( 73.0005, 6.64614, -13.6543, 0.29 ) }
    dend_17 { pt3dadd( 73.8185, 7.15195, -13.72, 1.33 ) }
    dend_17 { pt3dadd( 74.5048, 7.56282, -13.8316, 1.55 ) }
    dend_17 { pt3dadd( 75.0975, 7.96576, -14.0029, 1.55 ) }
    dend_17 { pt3dadd( 76.1749, 8.70617, -14.5068, 0.37 ) }
    dend_17 { pt3dadd( 76.9938, 9.28259, -15.0014, 1.11 ) }
    dend_17 { pt3dadd( 78.0945, 10.0719, -15.7433, 1.18 ) }
    dend_17 { pt3dadd( 79.3111, 10.8813, -16.5098, 0.74 ) }
    dend_17 { pt3dadd( 80.3526, 11.5275, -17.1151, 1.03 ) }
    dend_17 { pt3dadd( 81.8005, 12.2747, -17.8876, 1.03 ) }
    dend_17 { pt3dadd( 82.5467, 12.5696, -18.2595, 0.52 ) }
    dend_17 { pt3dadd( 83.5072, 12.8016, -18.6697, 0.52 ) }
    dend_17 { pt3dadd( 85.285, 12.9695, -19.1874, 1.47 ) }
    dend_17 { pt3dadd( 85.8781, 12.9649, -19.3138, 1.47 ) }
    dend_17 { pt3dadd( 87.6544, 12.8596, -19.5888, 0.52 ) }
    dend_17 { pt3dadd( 88.2139, 12.8038, -19.666, 0.88 ) }
    dend_17 { pt3dadd( 89.0323, 12.6721, -19.8014, 0.88 ) }
    dend_17 { pt3dadd( 89.8688, 12.4973, -19.9626, 0.59 ) }
    dend_17 { pt3dadd( 90.8623, 12.2357, -20.1965, 0.96 ) }
    dend_17 { pt3dadd( 92.1082, 11.8169, -20.4586, 0.29 ) }
    dend_17 { pt3dadd( 93.1049, 11.4444, -20.6258, 0.29 ) }
    dend_17 { pt3dadd( 94.1201, 11.0684, -20.8061, 0.88 ) }
    dend_17 { pt3dadd( 94.8568, 10.8056, -20.9547, 1.18 ) }
    dend_17 { pt3dadd( 95.209, 10.6851, -21.0343, 1.18 ) }
    dend_17 { pt3dadd( 96.649, 10.2705, -21.3984, 0.59 ) }
    dend_17 { pt3dadd( 97.6212, 10.0811, -21.687, 0.37 ) }
    dend_17 { pt3dadd( 98.6262, 9.9659, -22.007, 0.37 ) }
    dend_17 { pt3dadd( 99.453, 9.88958, -22.269, 1.03 ) }
    dend_17 { pt3dadd( 100.017, 9.84221, -22.4418, 1.03 ) }
    dend_17 { pt3dadd( 101.454, 9.71487, -22.8384, 0.44 ) }
    dend_17 { pt3dadd( 102.845, 9.5834, -23.1857, 1.11 ) }
    dend_17 { pt3dadd( 103.478, 9.49669, -23.3294, 1.11 ) }
    dend_17 { pt3dadd( 105.053, 9.23658, -23.6443, 0.44 ) }
    dend_17 { pt3dadd( 105.988, 9.069, -23.8358, 0.44 ) }
    dend_17 { pt3dadd( 106.945, 8.88186, -24.0357, 0.66 ) }
    dend_17 { pt3dadd( 107.498, 8.76226, -24.1691, 0.66 ) }
    dend_17 { pt3dadd( 108.339, 8.56983, -24.4338, 0.44 ) }
    dend_17 { pt3dadd( 109.194, 8.373, -24.8177, 0.81 ) }
    dend_17 { pt3dadd( 110.264, 8.09497, -25.5104, 0.59 ) }
    dend_17 { pt3dadd( 111.159, 7.73466, -26.307, 0.59 ) }
    dend_17 { pt3dadd( 111.927, 7.2062, -27.3107, 0.96 ) }
    dend_17 { pt3dadd( 112.406, 6.6182, -28.2563, 0.59 ) }
    dend_17 { pt3dadd( 112.799, 5.65037, -29.5347, 1.03 ) }
    dend_17 { pt3dadd( 112.858, 5.23971, -30.0156, 1.03 ) }
    dend_17 { pt3dadd( 112.846, 4.4425, -30.8813, 0.52 ) }
    dend_17 { pt3dadd( 112.742, 3.50303, -31.8661, 0.81 ) }
    dend_17 { pt3dadd( 112.643, 2.86555, -32.4875, 1.03 ) }
    dend_17 { pt3dadd( 112.56, 2.11712, -33.1576, 0.66 ) }
    dend_17 { pt3dadd( 112.565, 1.02567, -34.0588, 0.88 ) }
    dend_17 { pt3dadd( 112.569, 0.530559, -34.4995, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 94/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 28.0102, 6.30907, -4.81547, 0.88 ) }
    dend_16 { pt3dadd( 30.4414, 5.77826, -5.13451, 0.88 ) }
    dend_16 { pt3dadd( 31.9875, 5.36767, -5.28325, 0.66 ) }
    dend_16 { pt3dadd( 33.3654, 4.90259, -5.41516, 0.66 ) }
    dend_16 { pt3dadd( 34.1636, 4.58563, -5.49329, 0.88 ) }
    dend_16 { pt3dadd( 36.0487, 3.7335, -5.68965, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( 38.3101, 2.569, -5.95149, 0.66 ) }
    dend_16 { pt3dadd( 40.04, 1.45195, -6.14663, 0.66 ) }
    dend_16 { pt3dadd( 41.609, 0.286731, -6.35104, 1.03 ) }
    dend_16 { pt3dadd( 42.9223, -0.783406, -6.48936, 1.03 ) }
    dend_16 { pt3dadd( 43.916, -1.6426, -6.57078, 1.25 ) }
    dend_16 { pt3dadd( 45.0502, -2.66752, -6.63378, 1.4 ) }
    dend_16 { pt3dadd( 47.8558, -5.21463, -6.70455, 0.88 ) }
    dend_16 { pt3dadd( 49.9333, -7.06165, -6.67621, 0.74 ) }
    dend_16 { pt3dadd( 51.9627, -8.79903, -6.55778, 0.96 ) }
    dend_16 { pt3dadd( 53.1445, -9.78551, -6.44819, 0.88 ) }
    dend_16 { pt3dadd( 54.3493, -10.7449, -6.27344, 1.33 ) }
    dend_16 { pt3dadd( 55.14, -11.3386, -6.11765, 1.62 ) }
    dend_16 { pt3dadd( 55.7893, -11.8128, -5.95468, 1.62 ) }
    dend_16 { pt3dadd( 57.0913, -12.7411, -5.63057, 0.96 ) }
    dend_16 { pt3dadd( 58.2245, -13.5366, -5.39544, 0.59 ) }
    dend_16 { pt3dadd( 59.6327, -14.5184, -5.1259, 1.25 ) }
    dend_16 { pt3dadd( 60.2352, -14.94, -5.02282, 1.25 ) }
    dend_16 { pt3dadd( 61.6712, -15.9357, -4.82297, 0.81 ) }
    dend_16 { pt3dadd( 62.3684, -16.3909, -4.74956, 0.81 ) }
    dend_16 { pt3dadd( 63.6958, -17.1872, -4.64112, 0.52 ) }
    dend_16 { pt3dadd( 64.6424, -17.7233, -4.58739, 0.52 ) }
    dend_16 { pt3dadd( 65.4221, -18.1496, -4.56899, 1.11 ) }
    dend_16 { pt3dadd( 66.7378, -18.8437, -4.54009, 1.11 ) }
    dend_16 { pt3dadd( 68.1014, -19.5069, -4.50793, 0.74 ) }
    dend_16 { pt3dadd( 69.2888, -20.0637, -4.47803, 1.11 ) }
    dend_16 { pt3dadd( 69.9796, -20.3835, -4.46015, 1.11 ) }
    dend_16 { pt3dadd( 70.8423, -20.7873, -4.43854, 1.11 ) }
    dend_16 { pt3dadd( 72.4609, -21.5565, -4.40177, 0.59 ) }
    dend_16 { pt3dadd( 73.6178, -22.1019, -4.37756, 1.4 ) }
    dend_16 { pt3dadd( 74.8601, -22.7206, -4.3557, 0.66 ) }
    dend_16 { pt3dadd( 75.8294, -23.2369, -4.34414, 1.03 ) }
    dend_16 { pt3dadd( 76.6868, -23.7217, -4.33553, 1.03 ) }
    dend_16 { pt3dadd( 77.7924, -24.3832, -4.32932, 0.59 ) }
    dend_16 { pt3dadd( 78.9462, -25.0888, -4.3287, 1.33 ) }
    dend_16 { pt3dadd( 79.503, -25.441, -4.32753, 1.33 ) }
    dend_16 { pt3dadd( 80.5449, -26.1045, -4.30934, 0.96 ) }
    dend_16 { pt3dadd( 81.5003, -26.7352, -4.28031, 0.52 ) }
    dend_16 { pt3dadd( 82.2673, -27.2563, -4.25025, 1.4 ) }
    dend_16 { pt3dadd( 82.9314, -27.7228, -4.20082, 1.4 ) }
    dend_16 { pt3dadd( 83.6534, -28.2458, -4.12784, 1.03 ) }
    dend_16 { pt3dadd( 84.7976, -29.058, -3.98295, 0.37 ) }
    dend_16 { pt3dadd( 85.9251, -29.8466, -3.81303, 0.29 ) }
    dend_16 { pt3dadd( 87.2856, -30.7939, -3.5897, 0.29 ) }
    dend_16 { pt3dadd( 88.257, -31.4895, -3.40807, 0.88 ) }
    dend_16 { pt3dadd( 89.1515, -32.163, -3.25765, 0.88 ) }
    dend_16 { pt3dadd( 89.783, -32.6389, -3.17073, 0.88 ) }
    dend_16 { pt3dadd( 90.5763, -33.23, -3.08767, 1.25 ) }
    dend_16 { pt3dadd( 91.5049, -33.8906, -3.02615, 1.03 ) }
    dend_16 { pt3dadd( 92.51, -34.5439, -3.00871, 0.74 ) }
    dend_16 { pt3dadd( 93.5426, -35.1449, -3.04584, 0.44 ) }
    dend_16 { pt3dadd( 94.6088, -35.7306, -3.10834, 0.88 ) }
    dend_16 { pt3dadd( 95.3634, -36.1346, -3.17444, 0.88 ) }
    dend_16 { pt3dadd( 96.0354, -36.4893, -3.24343, 0.88 ) }
    dend_16 { pt3dadd( 96.8996, -36.9111, -3.32681, 0.59 ) }
    dend_16 { pt3dadd( 97.6627, -37.2703, -3.39279, 0.59 ) }
    dend_16 { pt3dadd( 98.5278, -37.6773, -3.44078, 0.96 ) }
    dend_16 { pt3dadd( 99.7185, -38.2422, -3.47894, 0.96 ) }
    dend_16 { pt3dadd( 101.289, -38.9765, -3.49493, 0.52 ) }
    dend_16 { pt3dadd( 103.315, -39.9206, -3.47967, 0.52 ) }
    dend_16 { pt3dadd( 104.354, -40.4035, -3.46197, 1.18 ) }
    dend_16 { pt3dadd( 105.277, -40.8173, -3.43893, 1.18 ) }
    dend_16 { pt3dadd( 106.576, -41.3718, -3.3716, 0.66 ) }
    dend_16 { pt3dadd( 107.405, -41.7111, -3.2927, 0.88 ) }
    dend_16 { pt3dadd( 108.016, -41.9588, -3.22085, 0.88 ) }
    dend_16 { pt3dadd( 109.018, -42.3899, -3.09748, 0.44 ) }
    dend_16 { pt3dadd( 109.534, -42.6231, -3.0385, 0.44 ) }
    dend_16 { pt3dadd( 110.644, -43.1824, -2.93186, 0.88 ) }
    dend_16 { pt3dadd( 111.314, -43.5498, -2.8932, 0.88 ) }
    dend_16 { pt3dadd( 112.394, -44.1979, -2.85141, 0.44 ) }
    dend_16 { pt3dadd( 113.075, -44.6077, -2.83807, 0.81 ) }
    dend_16 { pt3dadd( 113.629, -44.9423, -2.84881, 0.81 ) }
    dend_16 { pt3dadd( 114.328, -45.3736, -2.88574, 1.03 ) }
    dend_16 { pt3dadd( 115.205, -45.9095, -2.9747, 0.52 ) }
    dend_16 { pt3dadd( 116.005, -46.4097, -3.06484, 0.88 ) }
    dend_16 { pt3dadd( 117.002, -47.0178, -3.16455, 0.37 ) }
    dend_16 { pt3dadd( 118.429, -47.8436, -3.30232, 1.03 ) }
    dend_16 { pt3dadd( 119.521, -48.4394, -3.415, 1.47 ) }
    dend_16 { pt3dadd( 120.22, -48.8056, -3.49292, 1.47 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 78/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -28.845, 3.25137, 4.71874, 1.25 ) }
    dend_4 { pt3dadd( -30.7953, 3.59519, 5.31276, 1.25 ) }
    dend_4 { pt3dadd( -31.6469, 3.78939, 5.55952, 1.25 ) }
    dend_4 { pt3dadd( -33.1844, 4.22305, 5.96936, 1.62 ) }
    dend_4 { pt3dadd( -33.9096, 4.45773, 6.12504, 1.62 ) }
    dend_4 { pt3dadd( -36.2349, 5.28339, 6.49616, 1.11 ) }
    dend_4 { pt3dadd( -37.5893, 5.78868, 6.66194, 1.11 ) }
    dend_4 { pt3dadd( -38.6752, 6.26345, 6.77779, 1.18 ) }
    dend_4 { pt3dadd( -39.9385, 6.87242, 6.86688, 1.18 ) }
    dend_4 { pt3dadd( -41.0572, 7.47073, 6.87685, 1.77 ) }
    dend_4 { pt3dadd( -41.8526, 7.92883, 6.81674, 2.36 ) }
    dend_4 { pt3dadd( -42.248, 8.1843, 6.69253, 2.36 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -28.845, 3.25137, 4.71874, 1.4 ) }
    dend_1 { pt3dadd( -27.606, 1.12172, 5.40461, 1.4 ) }
    dend_1 { pt3dadd( -26.9012, -0.536508, 5.97065, 1.25 ) }
    dend_1 { pt3dadd( -26.7279, -1.22774, 6.20529, 1.25 ) }
    dend_1 { pt3dadd( -26.5865, -2.26946, 6.55037, 1.4 ) }
    dend_1 { pt3dadd( -26.5658, -3.08289, 6.81668, 1.55 ) }
    dend_1 { pt3dadd( -26.6276, -4.30574, 7.23004, 1.55 ) }
    dend_1 { pt3dadd( -27.1002, -5.65117, 7.73733, 1.47 ) }
    dend_1 { pt3dadd( -27.9206, -6.91353, 8.25613, 1.25 ) }
    dend_1 { pt3dadd( -28.498, -7.48783, 8.52788, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_1 { pt3dadd( -29.5199, -8.15193, 8.89769, 0.96 ) }
    dend_1 { pt3dadd( -30.0568, -8.36048, 9.04444, 0.96 ) }
    dend_1 { pt3dadd( -32.0877, -8.70484, 9.48074, 0.74 ) }
    dend_1 { pt3dadd( -33.573, -8.70751, 9.74834, 0.59 ) }
    dend_1 { pt3dadd( -34.9479, -8.52366, 9.97945, 0.59 ) }
    dend_1 { pt3dadd( -36.0187, -8.26073, 10.1442, 0.59 ) }
    dend_1 { pt3dadd( -37.5186, -7.77312, 10.3392, 0.59 ) }
    dend_1 { pt3dadd( -38.5336, -7.37482, 10.4394, 0.52 ) }
    dend_1 { pt3dadd( -39.0391, -7.10281, 10.4736, 0.52 ) }
    dend_1 { pt3dadd( -39.4002, -6.85709, 10.5048, 0.52 ) }
    dend_1 { pt3dadd( -39.737, -6.55004, 10.5496, 0.52 ) }
    dend_1 { pt3dadd( -45.1137, -13.9702, 14.179, 0.52 ) }
    dend_1 { pt3dadd( -50.0059, -22.0271, 16.9685, 0.52 ) }
    dend_1 { pt3dadd( -53.973, -30.6213, 19.5309, 0.52 ) }
    dend_1 { pt3dadd( -58.3923, -38.7148, 22.9313, 0.52 ) }
    dend_1 { pt3dadd( -63.8551, -46.2951, 26.0476, 0.52 ) }
    dend_1 { pt3dadd( -68.7774, -53.6448, 30.4005, 0.52 ) }
    dend_1 { pt3dadd( -74.7304, -60.2001, 34.8002, 0.52 ) }
    dend_1 { pt3dadd( -79.687, -67.0311, 39.9332, 0.52 ) }
    dend_1 { pt3dadd( -83.7181, -73.8563, 45.8278, 0.52 ) }
    dend_1 { pt3dadd( -88.4473, -80.5986, 51.2881, 0.52 ) }
    dend_1 { pt3dadd( -93.9486, -85.7789, 57.7306, 0.52 ) }
    dend_1 { pt3dadd( -99.6196, -90.6369, 64.2891, 0.52 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -19.0859, -35.003, 0.897628, 0.15 ) }
    axon_1 { pt3dadd( -26.3657, -48.118, 0.897628, 0.15 ) }
    axon_1 { pt3dadd( -33.6456, -61.233, 0.897628, 0.15 ) }
    // Section: dend_88, id: dend_88, parent: dend_86 (entry count 26/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -93.0758, -109.891, 5.4674, 0.29 ) }
    dend_88 { pt3dadd( -101.635, -114.862, 4.60536, 0.29 ) }
    dend_88 { pt3dadd( -111.137, -117.472, 3.00911, 0.29 ) }
    dend_88 { pt3dadd( -120.734, -119.161, 0.798866, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 30/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -93.0758, -109.891, 5.4674, 0.29 ) }
    dend_87 { pt3dadd( -101.777, -114.616, 6.35816, 0.29 ) }
    dend_87 { pt3dadd( -110.505, -118.874, 8.53846, 0.29 ) }
    dend_87 { pt3dadd( -118.76, -124.372, 8.78864, 0.29 ) }
    // Section: dend_62, id: dend_62, parent: dend_48 (entry count 34/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 40.7766, 42.5713, 2.32711, 1.03 ) }
    dend_62 { pt3dadd( 42.4161, 43.4634, 1.99164, 1.03 ) }
    dend_62 { pt3dadd( 43.703, 44.0596, 1.73569, 1.18 ) }
    dend_62 { pt3dadd( 44.8477, 44.5246, 1.62205, 1.18 ) }
    dend_62 { pt3dadd( 46.0726, 44.9406, 1.57609, 1.18 ) }
    dend_62 { pt3dadd( 47.4046, 45.3427, 1.58485, 1.18 ) }
    dend_62 { pt3dadd( 49.1648, 45.8473, 1.66437, 1.47 ) }
    dend_62 { pt3dadd( 50.4072, 46.1355, 1.80213, 1.47 ) }
    dend_62 { pt3dadd( 52.337, 46.5676, 2.10919, 1.4 ) }
    dend_62 { pt3dadd( 53.7966, 46.9192, 2.39343, 1.18 ) }
    dend_62 { pt3dadd( 55.0942, 47.2637, 2.67245, 1.18 ) }
    dend_62 { pt3dadd( 56.6197, 47.7252, 3.00386, 1.4 ) }
    dend_62 { pt3dadd( 57.7183, 48.1387, 3.24582, 1.4 ) }
    dend_62 { pt3dadd( 59.1521, 48.8061, 3.45094, 1.47 ) }
    dend_62 { pt3dadd( 60.3072, 49.4342, 3.51211, 1.47 ) }
    dend_62 { pt3dadd( 61.2159, 49.9962, 3.52223, 1.47 ) }
    dend_62 { pt3dadd( 62.6039, 50.9141, 3.4808, 1.47 ) }
    dend_62 { pt3dadd( 64.3609, 52.0866, 3.3673, 1.55 ) }
    dend_62 { pt3dadd( 66.3898, 53.3858, 3.22012, 1.33 ) }
    dend_62 { pt3dadd( 68.1237, 54.4402, 3.09672, 1.25 ) }
    dend_62 { pt3dadd( 70.0867, 55.5159, 2.97576, 1.25 ) }
    dend_62 { pt3dadd( 71.4232, 56.1687, 2.92144, 1.4 ) }
    dend_62 { pt3dadd( 72.6531, 56.6777, 2.90074, 1.4 ) }
    dend_62 { pt3dadd( 74.3078, 57.2431, 2.92574, 1.25 ) }
    dend_62 { pt3dadd( 75.6544, 57.6595, 2.98774, 1.25 ) }
    dend_62 { pt3dadd( 77.3448, 58.1847, 3.07374, 1.25 ) }
    dend_62 { pt3dadd( 78.9877, 58.7382, 3.17687, 1.47 ) }
    dend_62 { pt3dadd( 80.6246, 59.3768, 3.30155, 1.47 ) }
    dend_62 { pt3dadd( 82.3869, 60.212, 3.46901, 1.33 ) }
    dend_62 { pt3dadd( 83.8164, 61.0335, 3.6281, 1.33 ) }
    dend_62 { pt3dadd( 85.2242, 61.9921, 3.81472, 1.47 ) }
    dend_62 { pt3dadd( 86.3034, 62.8571, 4.00458, 1.47 ) }
    dend_62 { pt3dadd( 87.4884, 63.9403, 4.25828, 1.33 ) }
    dend_62 { pt3dadd( 88.3399, 64.8049, 4.46998, 1.33 ) }
    dend_62 { pt3dadd( 89.2586, 65.7713, 4.72003, 1.33 ) }
    dend_62 { pt3dadd( 90.6085, 67.1573, 5.05049, 1.25 ) }
    dend_62 { pt3dadd( 91.7386, 68.3136, 5.25101, 1.25 ) }
    dend_62 { pt3dadd( 93.1197, 69.6821, 5.40128, 1.4 ) }
    dend_62 { pt3dadd( 94.3401, 70.8016, 5.44687, 1.77 ) }
    dend_62 { pt3dadd( 95.3904, 71.6541, 5.42704, 1.77 ) }
    dend_62 { pt3dadd( 97.1402, 72.8796, 5.31114, 1.47 ) }
    dend_62 { pt3dadd( 98.1571, 73.5049, 5.22073, 1.33 ) }
    dend_62 { pt3dadd( 100.049, 74.5201, 5.04188, 1.18 ) }
    dend_62 { pt3dadd( 101.87, 75.3875, 4.91853, 1.18 ) }
    dend_62 { pt3dadd( 103.858, 76.2678, 4.85843, 1.55 ) }
    dend_62 { pt3dadd( 105.465, 76.95, 4.87471, 1.55 ) }
    dend_62 { pt3dadd( 106.72, 77.45, 4.95195, 1.4 ) }
    dend_62 { pt3dadd( 108.058, 77.9533, 5.06015, 1.4 ) }
    dend_62 { pt3dadd( 110.066, 78.7165, 5.24017, 1.33 ) }
    dend_62 { pt3dadd( 111.601, 79.3002, 5.38334, 1.62 ) }
    dend_62 { pt3dadd( 113.306, 79.9315, 5.52609, 1.62 ) }
    dend_62 { pt3dadd( 115.817, 80.8753, 5.70587, 1.4 ) }
    dend_62 { pt3dadd( 117.775, 81.6074, 5.79598, 1.33 ) }
    dend_62 { pt3dadd( 119.251, 82.1535, 5.83746, 1.33 ) }
    dend_62 { pt3dadd( 121.478, 82.9393, 5.87211, 1.33 ) }
    dend_62 { pt3dadd( 123.026, 83.4677, 5.88118, 1.33 ) }
    dend_62 { pt3dadd( 124.635, 84.0156, 5.87626, 1.25 ) }
    dend_62 { pt3dadd( 125.91, 84.4749, 5.86017, 1.25 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 92/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 40.7766, 42.5713, 2.32711, 1.18 ) }
    dend_49 { pt3dadd( 42.9211, 41.6845, 2.83276, 1.18 ) }
    dend_49 { pt3dadd( 44.3047, 41.1124, 3.15899, 1.18 ) }
    dend_49 { pt3dadd( 45.9619, 40.4271, 3.54976, 1.11 ) }
    dend_49 { pt3dadd( 47.5176, 39.7838, 3.91658, 1.11 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 97/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 5.26628, 28.5482, -1.37053, 1.99 ) }
    dend_43 { pt3dadd( 4.17999, 31.2436, -0.297231, 1.99 ) }
    dend_43 { pt3dadd( 3.84959, 32.2083, 0.0342723, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_43 { pt3dadd( 3.42229, 33.5927, 0.442114, 1.69 ) }
    dend_43 { pt3dadd( 2.93658, 35.3248, 0.897119, 1.25 ) }
    dend_43 { pt3dadd( 2.63279, 36.5065, 1.18991, 1.25 ) }
    dend_43 { pt3dadd( 2.28127, 38.0076, 1.55128, 1.62 ) }
    dend_43 { pt3dadd( 1.95745, 39.7558, 1.88925, 1.84 ) }
    dend_43 { pt3dadd( 1.74934, 41.2152, 2.18729, 2.14 ) }
    dend_43 { pt3dadd( 1.61729, 42.5568, 2.45512, 2.14 ) }
    dend_43 { pt3dadd( 1.54313, 43.5803, 2.62599, 2.14 ) }
    dend_43 { pt3dadd( 1.44417, 45.1203, 2.88178, 2.28 ) }
    dend_43 { pt3dadd( 1.34244, 46.7728, 3.15697, 2.5 ) }
    dend_43 { pt3dadd( 1.258, 48.2674, 3.3942, 2.5 ) }
    dend_43 { pt3dadd( 1.16442, 50.0957, 3.67167, 2.5 ) }
    dend_43 { pt3dadd( 1.12392, 51.3749, 3.84891, 2.87 ) }
    dend_43 { pt3dadd( 1.12462, 53.1637, 4.06186, 3.32 ) }
    dend_43 { pt3dadd( 1.15596, 54.0886, 4.16079, 3.32 ) }
    dend_43 { pt3dadd( 1.26104, 55.7199, 4.33533, 3.09 ) }
    dend_43 { pt3dadd( 1.37008, 56.8557, 4.46909, 3.09 ) }
    dend_43 { pt3dadd( 1.58332, 58.3892, 4.67356, 2.58 ) }
    dend_43 { pt3dadd( 1.91724, 60.2598, 4.93937, 2.36 ) }
    dend_43 { pt3dadd( 2.2011, 61.6346, 5.14952, 2.14 ) }
    dend_43 { pt3dadd( 2.53638, 63.1402, 5.39009, 1.99 ) }
    dend_43 { pt3dadd( 2.97794, 64.9893, 5.6966, 1.99 ) }
    dend_43 { pt3dadd( 3.33927, 66.495, 5.95503, 2.36 ) }
    dend_43 { pt3dadd( 3.6671, 67.9773, 6.22032, 2.73 ) }
    dend_43 { pt3dadd( 3.99426, 69.4329, 6.49738, 2.87 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 5.26628, 28.5482, -1.37053, 1.55 ) }
    dend_40 { pt3dadd( 6.76005, 30.9538, -1.31871, 1.55 ) }
    dend_40 { pt3dadd( 7.88959, 32.81, -1.10479, 1.03 ) }
    dend_40 { pt3dadd( 8.42235, 33.7381, -0.927963, 1.03 ) }
    dend_40 { pt3dadd( 9.1891, 35.1401, -0.605726, 0.88 ) }
    dend_40 { pt3dadd( 10.0523, 36.8388, -0.18165, 0.88 ) }
    dend_40 { pt3dadd( 10.6203, 38.036, 0.0774522, 0.88 ) }
    dend_40 { pt3dadd( 11.184, 39.4171, 0.421733, 0.88 ) }
    dend_40 { pt3dadd( 11.6869, 40.8969, 0.71265, 1.03 ) }
    dend_40 { pt3dadd( 12.0629, 42.2919, 0.836702, 1.03 ) }
    dend_40 { pt3dadd( 12.34, 43.8892, 0.703432, 1.03 ) }
    dend_40 { pt3dadd( 12.4418, 45.4865, 0.303072, 1.18 ) }
    dend_40 { pt3dadd( 12.4022, 46.8183, -0.182935, 1.77 ) }
    dend_40 { pt3dadd( 12.2909, 47.8487, -0.645604, 1.77 ) }
    dend_40 { pt3dadd( 12.1244, 48.771, -1.10879, 1.77 ) }
    dend_40 { pt3dadd( 11.6543, 50.5538, -2.0358, 1.25 ) }
    dend_40 { pt3dadd( 11.2145, 51.8771, -2.64823, 1.03 ) }
    dend_40 { pt3dadd( 10.7698, 53.12, -3.13796, 1.03 ) }
    dend_40 { pt3dadd( 10.4263, 54.0552, -3.47455, 1.03 ) }
    dend_40 { pt3dadd( 10.2401, 54.6052, -3.64682, 1.03 ) }
    dend_40 { pt3dadd( 9.98299, 55.6586, -3.93207, 0.96 ) }
    dend_40 { pt3dadd( 9.84679, 57.0279, -4.32086, 1.11 ) }
    dend_40 { pt3dadd( 10.0653, 58.474, -4.83615, 1.11 ) }
    dend_40 { pt3dadd( 10.5338, 59.5789, -5.27242, 1.33 ) }
    dend_40 { pt3dadd( 11.0457, 60.4127, -5.58927, 1.33 ) }
    dend_40 { pt3dadd( 11.8833, 61.5387, -6.00899, 0.96 ) }
    dend_40 { pt3dadd( 12.8022, 62.665, -6.38157, 1.18 ) }
    dend_40 { pt3dadd( 13.9194, 63.9984, -6.76664, 1.18 ) }
    dend_40 { pt3dadd( 15.0435, 65.4033, -7.04387, 1.4 ) }
    dend_40 { pt3dadd( 15.9884, 66.6805, -7.24391, 1.25 ) }
    dend_40 { pt3dadd( 16.9087, 68.1741, -7.42666, 1.18 ) }
    dend_40 { pt3dadd( 17.3344, 69.1372, -7.50888, 1.33 ) }
    dend_40 { pt3dadd( 17.5972, 70.0562, -7.57087, 1.33 ) }
    dend_40 { pt3dadd( 17.7284, 70.9813, -7.66336, 1.33 ) }
    dend_40 { pt3dadd( 17.7389, 72.1021, -7.87016, 1.11 ) }
    dend_40 { pt3dadd( 17.6247, 73.153, -8.19549, 1.11 ) }
    dend_40 { pt3dadd( 17.3483, 74.3788, -8.72899, 0.88 ) }
    dend_40 { pt3dadd( 16.9264, 75.7055, -9.4809, 0.59 ) }
    dend_40 { pt3dadd( 16.5796, 76.6159, -10.0698, 0.59 ) }
    dend_40 { pt3dadd( 16.0351, 78.035, -11.132, 0.96 ) }
    dend_40 { pt3dadd( 15.6448, 79.1177, -12.0376, 0.88 ) }
    dend_40 { pt3dadd( 15.4402, 79.8601, -12.7185, 0.88 ) }
    dend_40 { pt3dadd( 15.3043, 80.9189, -13.7487, 1.03 ) }
    dend_40 { pt3dadd( 15.4324, 81.548, -14.2854, 1.03 ) }
    dend_40 { pt3dadd( 16.4034, 82.7565, -15.0349, 0.81 ) }
    dend_40 { pt3dadd( 17.0545, 83.3903, -15.3178, 0.81 ) }
    dend_40 { pt3dadd( 18.0269, 84.412, -15.6688, 1.18 ) }
    dend_40 { pt3dadd( 18.7793, 85.3418, -15.9461, 1.18 ) }
    dend_40 { pt3dadd( 19.4944, 86.5211, -16.2429, 1.18 ) }
    dend_40 { pt3dadd( 19.9556, 87.6928, -16.5221, 1.03 ) }
    dend_40 { pt3dadd( 20.3718, 89.3709, -16.9389, 1.03 ) }
    dend_40 { pt3dadd( 20.6494, 90.8867, -17.388, 0.88 ) }
    dend_40 { pt3dadd( 20.8881, 92.4101, -17.9421, 1.03 ) }
    dend_40 { pt3dadd( 21.171, 94.0188, -18.6512, 0.88 ) }
    dend_40 { pt3dadd( 21.3385, 94.7901, -19.0368, 0.88 ) }
    dend_40 { pt3dadd( 21.7522, 96.2316, -19.8096, 0.66 ) }
    dend_40 { pt3dadd( 21.9902, 96.9208, -20.2705, 0.66 ) }
    dend_40 { pt3dadd( 22.3392, 97.8383, -21.0281, 0.66 ) }
    dend_40 { pt3dadd( 22.5563, 98.54, -21.7222, 0.88 ) }
    dend_40 { pt3dadd( 22.627, 99.1622, -22.416, 1.11 ) }
    dend_40 { pt3dadd( 22.3159, 100.081, -23.3554, 1.11 ) }
    dend_40 { pt3dadd( 21.5888, 101.148, -24.213, 0.59 ) }
    dend_40 { pt3dadd( 21.0641, 101.849, -24.652, 0.96 ) }
    dend_40 { pt3dadd( 20.4585, 102.622, -25.021, 1.18 ) }
    dend_40 { pt3dadd( 20.2275, 102.923, -25.1406, 1.18 ) }
    dend_40 { pt3dadd( 19.5983, 103.854, -25.4516, 0.59 ) }
    dend_40 { pt3dadd( 18.9594, 105.019, -25.7684, 0.52 ) }
    dend_40 { pt3dadd( 18.6261, 105.793, -25.9636, 0.52 ) }
    dend_40 { pt3dadd( 18.2193, 106.834, -26.2434, 0.74 ) }
    dend_40 { pt3dadd( 17.8828, 107.676, -26.4846, 0.88 ) }
    dend_40 { pt3dadd( 17.4821, 108.581, -26.7838, 0.66 ) }
    dend_40 { pt3dadd( 17.0583, 109.424, -27.1075, 0.44 ) }
    dend_40 { pt3dadd( 16.703, 109.991, -27.3675, 0.29 ) }
    dend_40 { pt3dadd( 16.4505, 110.326, -27.5408, 0.29 ) }
    dend_40 { pt3dadd( 15.9314, 110.94, -27.887, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( 15.4784, 111.446, -28.1584, 0.96 ) }
    dend_40 { pt3dadd( 15.0929, 111.891, -28.3794, 0.96 ) }
    dend_40 { pt3dadd( 14.7861, 112.336, -28.5653, 0.52 ) }
    dend_40 { pt3dadd( 14.4937, 113.029, -28.8347, 0.29 ) }
    dend_40 { pt3dadd( 14.4093, 113.427, -28.9981, 0.29 ) }
    dend_40 { pt3dadd( 14.354, 114.107, -29.3063, 0.66 ) }
    dend_40 { pt3dadd( 14.326, 114.661, -29.5811, 0.66 ) }
    dend_40 { pt3dadd( 14.2504, 115.342, -29.953, 0.66 ) }
    dend_40 { pt3dadd( 14.0872, 116.076, -30.3922, 0.44 ) }
    dend_40 { pt3dadd( 13.8408, 116.775, -30.8207, 0.81 ) }
    dend_40 { pt3dadd( 13.5005, 117.46, -31.2289, 0.96 ) }
    dend_40 { pt3dadd( 13.2111, 117.967, -31.5497, 0.96 ) }
    dend_40 { pt3dadd( 12.7311, 118.752, -32.0428, 0.29 ) }
    dend_40 { pt3dadd( 12.3578, 119.293, -32.3737, 0.29 ) }
    dend_40 { pt3dadd( 11.938, 119.874, -32.6983, 0.44 ) }
    dend_40 { pt3dadd( 11.5282, 120.467, -33.0076, 0.44 ) }
    dend_40 { pt3dadd( 10.8879, 121.571, -33.5611, 0.66 ) }
    dend_40 { pt3dadd( 10.8038, 121.785, -33.6666, 0.66 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 18/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -135.715, 51.2777, -8.08203, 0.59 ) }
    dend_37 { pt3dadd( -137.109, 51.7244, -7.79325, 0.59 ) }
    dend_37 { pt3dadd( -137.97, 52.033, -7.60688, 1.03 ) }
    dend_37 { pt3dadd( -138.413, 52.2058, -7.51038, 1.03 ) }
    dend_37 { pt3dadd( -139.769, 52.8077, -7.19849, 0.37 ) }
    dend_37 { pt3dadd( -140.369, 53.1065, -7.05625, 0.37 ) }
    dend_37 { pt3dadd( -140.976, 53.4476, -6.90614, 0.81 ) }
    dend_37 { pt3dadd( -141.481, 53.7983, -6.78101, 1.03 ) }
    dend_37 { pt3dadd( -141.921, 54.1355, -6.66185, 1.03 ) }
    dend_37 { pt3dadd( -143.011, 55.0223, -6.34628, 0.52 ) }
    dend_37 { pt3dadd( -143.83, 55.7055, -6.09584, 0.52 ) }
    dend_37 { pt3dadd( -144.659, 56.3803, -5.86208, 0.66 ) }
    dend_37 { pt3dadd( -145.47, 57.0328, -5.64339, 1.03 ) }
    dend_37 { pt3dadd( -146.084, 57.5117, -5.49737, 1.03 ) }
    dend_37 { pt3dadd( -146.895, 58.1173, -5.34306, 1.03 ) }
    dend_37 { pt3dadd( -147.973, 58.906, -5.19957, 0.59 ) }
    dend_37 { pt3dadd( -148.707, 59.4484, -5.13637, 0.59 ) }
    dend_37 { pt3dadd( -149.383, 59.9293, -5.09838, 0.59 ) }
    dend_37 { pt3dadd( -150.151, 60.4725, -5.07973, 0.59 ) }
    dend_37 { pt3dadd( -150.927, 61.0444, -5.09252, 0.59 ) }
    dend_37 { pt3dadd( -151.897, 61.7969, -5.18227, 0.44 ) }
    dend_37 { pt3dadd( -152.348, 62.1875, -5.26858, 0.44 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 40/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -135.715, 51.2777, -8.08203, 0.44 ) }
    dend_36 { pt3dadd( -135.935, 52.2189, -6.99855, 0.44 ) }
    dend_36 { pt3dadd( -136.014, 52.8448, -6.24308, 0.74 ) }
    dend_36 { pt3dadd( -136.022, 53.7834, -5.04925, 0.88 ) }
    dend_36 { pt3dadd( -135.972, 54.2144, -4.46843, 0.88 ) }
    dend_36 { pt3dadd( -135.521, 55.8613, -2.13991, 0.74 ) }
    dend_36 { pt3dadd( -135.169, 56.5508, -1.11917, 0.52 ) }
    dend_36 { pt3dadd( -134.832, 57.0284, -0.231194, 0.29 ) }
    dend_36 { pt3dadd( -134.408, 57.394, 0.612113, 0.29 ) }
    dend_36 { pt3dadd( -133.735, 57.5663, 1.17561, 0.29 ) }
    dend_36 { pt3dadd( -132.963, 57.5526, 1.45167, 0.29 ) }
    dend_36 { pt3dadd( -131.801, 57.4114, 1.60213, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 52/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -134.884, -2.17441, -30.8755, 0.59 ) }
    dend_26 { pt3dadd( -136.227, -0.940066, -31.3016, 0.59 ) }
    dend_26 { pt3dadd( -137.05, -0.18307, -31.563, 0.59 ) }
    dend_26 { pt3dadd( -137.88, 0.579824, -31.8263, 0.74 ) }
    dend_26 { pt3dadd( -138.702, 1.33553, -32.0872, 1.69 ) }
    dend_26 { pt3dadd( -139.245, 1.83472, -32.2596, 2.06 ) }
    dend_26 { pt3dadd( -139.819, 2.36228, -32.4417, 2.06 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 59/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -134.884, -2.17441, -30.8755, 0.29 ) }
    dend_25 { pt3dadd( -134.806, -3.57744, -30.9516, 0.29 ) }
    dend_25 { pt3dadd( -134.68, -4.7992, -30.9864, 0.29 ) }
    dend_25 { pt3dadd( -134.561, -5.78616, -30.9958, 0.81 ) }
    dend_25 { pt3dadd( -134.485, -6.49747, -30.9949, 0.81 ) }
    dend_25 { pt3dadd( -134.373, -7.85984, -30.9951, 0.44 ) }
    dend_25 { pt3dadd( -134.293, -9.17827, -30.9877, 0.44 ) }
    dend_25 { pt3dadd( -134.232, -10.3298, -30.96, 0.66 ) }
    dend_25 { pt3dadd( -134.225, -10.8509, -30.9566, 0.66 ) }
    dend_25 { pt3dadd( -134.272, -11.7316, -30.9777, 0.29 ) }
    dend_25 { pt3dadd( -134.384, -12.613, -31.0192, 0.29 ) }
    dend_25 { pt3dadd( -134.502, -13.237, -31.0593, 0.66 ) }
    dend_25 { pt3dadd( -134.635, -13.7698, -31.1066, 0.66 ) }
    dend_25 { pt3dadd( -135.089, -15.3214, -31.2813, 0.29 ) }
    dend_25 { pt3dadd( -135.68, -17.2032, -31.5105, 0.29 ) }
    dend_25 { pt3dadd( -136.29, -19.0626, -31.7627, 0.29 ) }
    dend_25 { pt3dadd( -136.413, -19.4259, -31.8134, 1.11 ) }
    dend_25 { pt3dadd( -136.685, -20.1802, -31.9221, 1.11 ) }
    dend_25 { pt3dadd( -137.292, -21.6799, -32.1371, 0.22 ) }
    dend_25 { pt3dadd( -137.571, -22.284, -32.2117, 0.22 ) }
    dend_25 { pt3dadd( -137.979, -23.0247, -32.3083, 0.66 ) }
    dend_25 { pt3dadd( -138.39, -23.6399, -32.3781, 0.66 ) }
    dend_25 { pt3dadd( -138.943, -24.3844, -32.416, 0.22 ) }
    dend_25 { pt3dadd( -139.652, -25.2831, -32.4934, 0.59 ) }
    dend_25 { pt3dadd( -139.954, -25.6405, -32.5491, 0.59 ) }
    dend_25 { pt3dadd( -140.67, -26.51, -32.7169, 0.29 ) }
    dend_25 { pt3dadd( -141.358, -27.3445, -32.901, 0.29 ) }
    dend_25 { pt3dadd( -141.908, -28.037, -33.0959, 0.59 ) }
    dend_25 { pt3dadd( -142.984, -29.5411, -33.6047, 0.96 ) }
    dend_25 { pt3dadd( -143.686, -30.6488, -34.0143, 0.44 ) }
    dend_25 { pt3dadd( -144.079, -31.3272, -34.286, 0.29 ) }
    dend_25 { pt3dadd( -144.609, -32.3397, -34.7369, 0.29 ) }
    dend_25 { pt3dadd( -144.901, -32.9379, -35.0029, 0.52 ) }
    dend_25 { pt3dadd( -145.206, -33.5653, -35.2743, 0.52 ) }
    dend_25 { pt3dadd( -145.655, -34.5013, -35.6072, 0.22 ) }
    dend_25 { pt3dadd( -145.961, -35.1917, -35.8586, 0.22 ) }
    dend_25 { pt3dadd( -146.362, -36.1225, -36.2055, 0.88 ) }
    dend_25 { pt3dadd( -146.602, -36.6905, -36.4089, 1.11 ) }
    dend_25 { pt3dadd( -146.855, -37.2278, -36.6042, 1.11 ) }
    dend_25 { pt3dadd( -147.518, -38.522, -37.0541, 0.29 ) }
    dend_25 { pt3dadd( -148.014, -39.4658, -37.3539, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_25 { pt3dadd( -148.307, -40.0038, -37.5099, 0.74 ) }
    dend_25 { pt3dadd( -148.735, -40.7526, -37.6993, 0.44 ) }
    dend_25 { pt3dadd( -149.335, -41.7448, -37.9547, 0.29 ) }
    dend_25 { pt3dadd( -150.339, -43.3142, -38.3488, 0.29 ) }
    dend_25 { pt3dadd( -151.224, -44.6558, -38.6648, 0.74 ) }
    dend_25 { pt3dadd( -151.59, -45.2239, -38.7981, 0.74 ) }
    dend_25 { pt3dadd( -152.275, -46.3569, -39.0567, 0.37 ) }
    dend_25 { pt3dadd( -152.741, -47.156, -39.2344, 0.52 ) }
    dend_25 { pt3dadd( -152.967, -47.5553, -39.3224, 0.52 ) }
    dend_25 { pt3dadd( -153.806, -49.0058, -39.6779, 0.29 ) }
    dend_25 { pt3dadd( -154.309, -49.8799, -39.8985, 0.29 ) }
    dend_25 { pt3dadd( -154.869, -50.8749, -40.1444, 0.29 ) }
    dend_25 { pt3dadd( -155.069, -51.2372, -40.23, 0.74 ) }
    dend_25 { pt3dadd( -155.343, -51.7532, -40.3342, 0.74 ) }
    dend_25 { pt3dadd( -155.974, -52.9788, -40.5573, 0.29 ) }
    dend_25 { pt3dadd( -156.402, -53.8595, -40.7008, 0.66 ) }
    dend_25 { pt3dadd( -156.638, -54.4241, -40.7686, 0.66 ) }
    dend_25 { pt3dadd( -156.949, -55.4104, -40.8609, 0.22 ) }
    dend_25 { pt3dadd( -157.132, -56.1914, -40.9188, 0.22 ) }
    dend_25 { pt3dadd( -157.199, -56.6634, -40.9452, 0.74 ) }
    dend_25 { pt3dadd( -157.206, -57.0465, -40.9664, 0.74 ) }
    dend_25 { pt3dadd( -157.092, -58.1064, -40.9507, 0.22 ) }
    dend_25 { pt3dadd( -156.936, -58.9536, -40.9052, 0.37 ) }
    dend_25 { pt3dadd( -156.815, -59.4527, -40.8884, 0.37 ) }
    dend_25 { pt3dadd( -156.56, -60.3573, -40.8801, 0.15 ) }
    dend_25 { pt3dadd( -156.228, -61.4293, -40.8924, 0.15 ) }
    dend_25 { pt3dadd( -155.562, -63.3792, -40.705, 0.15 ) }
    dend_25 { pt3dadd( -154.869, -65.2295, -40.3336, 0.15 ) }
    dend_25 { pt3dadd( -154.414, -66.3405, -40.0226, 0.52 ) }
    dend_25 { pt3dadd( -154.165, -66.8821, -39.8455, 0.66 ) }
    dend_25 { pt3dadd( -153.876, -67.4868, -39.6262, 0.22 ) }
    dend_25 { pt3dadd( -152.379, -70.5324, -38.3991, 0.22 ) }
    dend_25 { pt3dadd( -150.939, -73.3465, -37.144, 0.22 ) }
    dend_25 { pt3dadd( -150.226, -74.6634, -36.4432, 0.22 ) }
    dend_25 { pt3dadd( -149.646, -75.7467, -35.7994, 0.22 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 35/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -55.6318, 117.711, -106.88, 0.29 ) }
    dend_21 { pt3dadd( -56.9834, 118.693, -107.128, 0.29 ) }
    dend_21 { pt3dadd( -57.9253, 119.373, -107.296, 0.29 ) }
    dend_21 { pt3dadd( -59.5169, 120.523, -107.551, 0.29 ) }
    dend_21 { pt3dadd( -61.4972, 121.981, -107.849, 0.29 ) }
    dend_21 { pt3dadd( -62.5225, 122.747, -108.006, 0.44 ) }
    dend_21 { pt3dadd( -63.3143, 123.347, -108.134, 0.44 ) }
    dend_21 { pt3dadd( -64.0513, 123.919, -108.24, 0.44 ) }
    dend_21 { pt3dadd( -65.2937, 124.903, -108.425, 0.37 ) }
    dend_21 { pt3dadd( -66.1781, 125.615, -108.572, 0.37 ) }
    dend_21 { pt3dadd( -66.8584, 126.17, -108.701, 0.37 ) }
    dend_21 { pt3dadd( -67.6998, 126.85, -108.851, 0.74 ) }
    dend_21 { pt3dadd( -68.1534, 127.208, -108.929, 0.74 ) }
    dend_21 { pt3dadd( -69.4923, 128.214, -109.178, 0.37 ) }
    dend_21 { pt3dadd( -70.8761, 129.198, -109.455, 0.37 ) }
    dend_21 { pt3dadd( -71.9321, 129.888, -109.665, 0.37 ) }
    dend_21 { pt3dadd( -73.4841, 130.855, -109.972, 0.74 ) }
    dend_21 { pt3dadd( -74.1266, 131.242, -110.108, 0.74 ) }
    dend_21 { pt3dadd( -75.5266, 132.043, -110.437, 0.59 ) }
    dend_21 { pt3dadd( -76.9372, 132.805, -110.8, 0.44 ) }
    dend_21 { pt3dadd( -78.545, 133.641, -111.218, 0.44 ) }
    dend_21 { pt3dadd( -79.4677, 134.112, -111.451, 0.74 ) }
    dend_21 { pt3dadd( -80.2419, 134.505, -111.643, 0.74 ) }
    dend_21 { pt3dadd( -81.7982, 135.312, -111.997, 0.44 ) }
    dend_21 { pt3dadd( -82.7578, 135.819, -112.211, 0.44 ) }
    dend_21 { pt3dadd( -84.1794, 136.585, -112.527, 0.59 ) }
    dend_21 { pt3dadd( -85.0759, 137.088, -112.738, 0.81 ) }
    dend_21 { pt3dadd( -85.8331, 137.522, -112.912, 0.81 ) }
    dend_21 { pt3dadd( -86.7818, 138.08, -113.131, 0.52 ) }
    dend_21 { pt3dadd( -87.7704, 138.692, -113.369, 0.81 ) }
    dend_21 { pt3dadd( -88.4258, 139.105, -113.55, 0.81 ) }
    dend_21 { pt3dadd( -89.1469, 139.566, -113.772, 0.81 ) }
    dend_21 { pt3dadd( -90.147, 140.2, -114.118, 0.37 ) }
    dend_21 { pt3dadd( -91.2199, 140.885, -114.536, 0.37 ) }
    dend_21 { pt3dadd( -91.9558, 141.389, -114.817, 0.59 ) }
    dend_21 { pt3dadd( -92.9841, 142.15, -115.201, 0.59 ) }
    dend_21 { pt3dadd( -94.1152, 143.037, -115.601, 0.88 ) }
    dend_21 { pt3dadd( -95.3226, 144.021, -115.987, 0.59 ) }
    dend_21 { pt3dadd( -98.4054, 146.609, -116.873, 0.29 ) }
    dend_21 { pt3dadd( -100.545, 148.407, -117.387, 0.29 ) }
    dend_21 { pt3dadd( -102.073, 149.676, -117.677, 0.59 ) }
    dend_21 { pt3dadd( -102.853, 150.314, -117.776, 0.59 ) }
    dend_21 { pt3dadd( -104.009, 151.243, -117.853, 0.66 ) }
    dend_21 { pt3dadd( -104.607, 151.707, -117.847, 0.74 ) }
    dend_21 { pt3dadd( -105.932, 152.629, -117.728, 0.29 ) }
    dend_21 { pt3dadd( -107.169, 153.366, -117.607, 0.29 ) }
    dend_21 { pt3dadd( -108.261, 153.947, -117.505, 0.29 ) }
    dend_21 { pt3dadd( -109.155, 154.395, -117.447, 0.52 ) }
    dend_21 { pt3dadd( -109.943, 154.788, -117.408, 0.52 ) }
    dend_21 { pt3dadd( -111.249, 155.441, -117.364, 0.52 ) }
    dend_21 { pt3dadd( -112.1, 155.885, -117.337, 0.29 ) }
    dend_21 { pt3dadd( -113.327, 156.53, -117.298, 0.29 ) }
    dend_21 { pt3dadd( -114.293, 157.069, -117.257, 0.66 ) }
    dend_21 { pt3dadd( -114.925, 157.448, -117.224, 0.66 ) }
    dend_21 { pt3dadd( -115.867, 158.059, -117.166, 0.37 ) }
    dend_21 { pt3dadd( -116.921, 158.791, -117.136, 0.37 ) }
    dend_21 { pt3dadd( -117.735, 159.36, -117.156, 0.59 ) }
    dend_21 { pt3dadd( -118.618, 159.95, -117.21, 0.59 ) }
    dend_21 { pt3dadd( -119.83, 160.729, -117.328, 0.37 ) }
    dend_21 { pt3dadd( -120.858, 161.353, -117.455, 0.37 ) }
    dend_21 { pt3dadd( -122.114, 162.078, -117.663, 0.66 ) }
    dend_21 { pt3dadd( -122.986, 162.551, -117.875, 0.74 ) }
    dend_21 { pt3dadd( -123.8, 162.989, -118.154, 0.37 ) }
    dend_21 { pt3dadd( -124.53, 163.402, -118.466, 0.37 ) }
    dend_21 { pt3dadd( -124.904, 163.63, -118.639, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_21 { pt3dadd( -125.913, 164.269, -119.085, 0.52 ) }
    dend_21 { pt3dadd( -126.762, 164.808, -119.385, 0.52 ) }
    dend_21 { pt3dadd( -127.606, 165.32, -119.635, 0.52 ) }
    dend_21 { pt3dadd( -128.369, 165.79, -119.857, 0.52 ) }
    dend_21 { pt3dadd( -129.742, 166.59, -120.235, 0.52 ) }
    dend_21 { pt3dadd( -130.52, 167.012, -120.425, 0.44 ) }
    dend_21 { pt3dadd( -131.987, 167.727, -120.687, 0.44 ) }
    dend_21 { pt3dadd( -132.968, 168.139, -120.775, 0.52 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 8/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -55.6318, 117.711, -106.88, 0.44 ) }
    dend_20 { pt3dadd( -55.7674, 119.333, -107.165, 0.44 ) }
    dend_20 { pt3dadd( -55.9109, 120.871, -107.502, 0.44 ) }
    dend_20 { pt3dadd( -56.0517, 122.094, -107.877, 0.44 ) }
    dend_20 { pt3dadd( -56.1519, 122.7, -108.081, 0.44 ) }
    dend_20 { pt3dadd( -56.3723, 124.054, -108.547, 0.96 ) }
    dend_20 { pt3dadd( -56.5105, 124.947, -108.854, 0.96 ) }
    dend_20 { pt3dadd( -56.6648, 125.971, -109.231, 0.96 ) }
    dend_20 { pt3dadd( -56.8519, 127.232, -109.69, 0.81 ) }
    dend_20 { pt3dadd( -57.0846, 128.924, -110.24, 0.44 ) }
    dend_20 { pt3dadd( -57.2678, 130.285, -110.626, 0.44 ) }
    dend_20 { pt3dadd( -57.4386, 131.71, -110.954, 0.66 ) }
    dend_20 { pt3dadd( -57.5351, 133.086, -111.202, 0.66 ) }
    dend_20 { pt3dadd( -57.5451, 134.441, -111.385, 0.66 ) }
    dend_20 { pt3dadd( -57.4838, 135.938, -111.527, 1.18 ) }
    dend_20 { pt3dadd( -57.4028, 136.927, -111.621, 1.18 ) }
    dend_20 { pt3dadd( -57.2539, 138.739, -111.785, 0.96 ) }
    dend_20 { pt3dadd( -57.107, 140.517, -111.938, 0.66 ) }
    dend_20 { pt3dadd( -57.0112, 142.058, -112.062, 0.59 ) }
    dend_20 { pt3dadd( -56.965, 143.768, -112.202, 1.11 ) }
    dend_20 { pt3dadd( -56.9988, 145.395, -112.333, 1.25 ) }
    dend_20 { pt3dadd( -57.0668, 146.299, -112.385, 1.25 ) }
    dend_20 { pt3dadd( -57.2714, 147.797, -112.436, 0.66 ) }
    dend_20 { pt3dadd( -57.5893, 149.484, -112.45, 0.66 ) }
    dend_20 { pt3dadd( -57.9486, 151.223, -112.409, 0.44 ) }
    dend_20 { pt3dadd( -58.1665, 152.288, -112.353, 0.44 ) }
    dend_20 { pt3dadd( -58.3744, 153.298, -112.275, 1.25 ) }
    dend_20 { pt3dadd( -58.5532, 154.215, -112.2, 1.25 ) }
    dend_20 { pt3dadd( -58.9092, 155.965, -112.063, 0.74 ) }
    dend_20 { pt3dadd( -59.1038, 156.865, -111.992, 0.88 ) }
    dend_20 { pt3dadd( -59.3889, 158.062, -111.901, 0.88 ) }
    dend_20 { pt3dadd( -59.7945, 159.614, -111.799, 0.59 ) }
    dend_20 { pt3dadd( -60.293, 161.436, -111.716, 0.44 ) }
    dend_20 { pt3dadd( -60.6249, 162.599, -111.667, 0.44 ) }
    dend_20 { pt3dadd( -60.9948, 163.864, -111.623, 1.4 ) }
    dend_20 { pt3dadd( -61.2823, 164.904, -111.611, 1.4 ) }
    dend_20 { pt3dadd( -61.4183, 165.468, -111.614, 1.4 ) }
    dend_20 { pt3dadd( -61.7769, 167.227, -111.684, 0.59 ) }
    dend_20 { pt3dadd( -62.1301, 169.053, -111.812, 0.44 ) }
    dend_20 { pt3dadd( -62.3063, 169.964, -111.905, 0.44 ) }
    dend_20 { pt3dadd( -62.6368, 171.567, -112.105, 1.03 ) }
    dend_20 { pt3dadd( -62.9103, 172.734, -112.256, 1.03 ) }
    dend_20 { pt3dadd( -63.3378, 174.295, -112.463, 0.59 ) }
    dend_20 { pt3dadd( -64.043, 176.545, -112.727, 1.47 ) }
    dend_20 { pt3dadd( -64.4531, 177.77, -112.84, 1.25 ) }
    dend_20 { pt3dadd( -65.1252, 179.602, -112.937, 0.44 ) }
    dend_20 { pt3dadd( -65.7403, 181.18, -112.946, 0.44 ) }
    dend_20 { pt3dadd( -66.1861, 182.359, -112.903, 1.18 ) }
    dend_20 { pt3dadd( -66.6163, 183.621, -112.795, 1.47 ) }
    dend_20 { pt3dadd( -66.8566, 184.472, -112.716, 1.47 ) }
    dend_20 { pt3dadd( -67.1922, 186.114, -112.572, 0.29 ) }
    dend_20 { pt3dadd( -67.3085, 187.199, -112.511, 0.29 ) }
    dend_20 { pt3dadd( -67.3058, 188.303, -112.509, 0.52 ) }
    dend_20 { pt3dadd( -67.2433, 189.056, -112.555, 0.52 ) }
    dend_20 { pt3dadd( -67.0824, 190.382, -112.776, 0.59 ) }
    dend_20 { pt3dadd( -66.9881, 191.184, -112.979, 0.96 ) }
    dend_20 { pt3dadd( -66.9299, 191.861, -113.21, 0.96 ) }
    dend_20 { pt3dadd( -66.9476, 192.432, -113.428, 0.96 ) }
    dend_20 { pt3dadd( -67.1281, 193.478, -113.846, 0.66 ) }
    dend_20 { pt3dadd( -67.3785, 194.381, -114.195, 0.52 ) }
    dend_20 { pt3dadd( -67.6516, 195.181, -114.467, 0.96 ) }
    dend_20 { pt3dadd( -68.0322, 196.191, -114.822, 1.11 ) }
    dend_20 { pt3dadd( -68.2684, 196.828, -115.051, 1.11 ) }
    dend_20 { pt3dadd( -68.6066, 197.779, -115.389, 0.88 ) }
    dend_20 { pt3dadd( -68.9362, 198.771, -115.775, 0.88 ) }
    dend_20 { pt3dadd( -69.301, 199.932, -116.217, 0.52 ) }
    dend_20 { pt3dadd( -69.6061, 200.948, -116.592, 0.52 ) }
    dend_20 { pt3dadd( -69.95, 202.137, -117.021, 1.11 ) }
    dend_20 { pt3dadd( -70.1677, 202.946, -117.307, 1.11 ) }
    dend_20 { pt3dadd( -70.6187, 204.566, -117.832, 0.66 ) }
    dend_20 { pt3dadd( -70.9919, 205.774, -118.193, 0.44 ) }
    dend_20 { pt3dadd( -71.3077, 206.785, -118.486, 1.47 ) }
    dend_20 { pt3dadd( -71.6377, 207.881, -118.769, 1.47 ) }
    dend_20 { pt3dadd( -71.8786, 208.759, -118.971, 1.47 ) }
    dend_20 { pt3dadd( -72.2296, 210.444, -119.309, 0.37 ) }
    dend_20 { pt3dadd( -72.4036, 212.021, -119.58, 0.37 ) }
    dend_20 { pt3dadd( -72.4061, 214.267, -119.976, 0.81 ) }
    dend_20 { pt3dadd( -72.3147, 215.281, -120.15, 0.81 ) }
    dend_20 { pt3dadd( -72.2117, 215.93, -120.259, 0.81 ) }
    dend_20 { pt3dadd( -71.9229, 217.3, -120.497, 0.66 ) }
    dend_20 { pt3dadd( -71.5956, 218.566, -120.716, 0.66 ) }
    dend_20 { pt3dadd( -71.2946, 219.745, -120.901, 0.59 ) }
    dend_20 { pt3dadd( -71.0615, 221.143, -121.127, 0.59 ) }
    dend_20 { pt3dadd( -71.0164, 222.176, -121.331, 1.03 ) }
    dend_20 { pt3dadd( -71.0862, 222.901, -121.492, 1.03 ) }
    dend_20 { pt3dadd( -71.3602, 224.063, -121.758, 1.33 ) }
    dend_20 { pt3dadd( -71.5759, 224.695, -121.906, 1.33 ) }
    dend_20 { pt3dadd( -72.2283, 226.286, -122.272, 0.59 ) }
    dend_20 { pt3dadd( -72.7579, 227.471, -122.544, 0.37 ) }
    dend_20 { pt3dadd( -73.2422, 228.535, -122.776, 0.37 ) }
    dend_20 { pt3dadd( -73.9075, 230.003, -123.087, 0.37 ) }
    dend_20 { pt3dadd( -74.634, 231.626, -123.418, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_20 { pt3dadd( -75.3669, 233.289, -123.731, 0.37 ) }
    dend_20 { pt3dadd( -76.1684, 235.219, -124.077, 1.03 ) }
    dend_20 { pt3dadd( -76.5669, 236.217, -124.292, 1.03 ) }
    dend_20 { pt3dadd( -77.1182, 237.588, -124.633, 0.74 ) }
    dend_20 { pt3dadd( -77.7443, 239.069, -125.044, 0.59 ) }
    dend_20 { pt3dadd( -78.2421, 240.177, -125.369, 0.59 ) }
    dend_20 { pt3dadd( -79.0361, 241.796, -125.878, 0.96 ) }
    dend_20 { pt3dadd( -79.6995, 243.013, -126.254, 0.96 ) }
    dend_20 { pt3dadd( -80.3055, 244.038, -126.563, 0.66 ) }
    dend_20 { pt3dadd( -80.6895, 244.673, -126.744, 0.66 ) }
    dend_20 { pt3dadd( -81.3348, 245.756, -127.027, 0.59 ) }
    dend_20 { pt3dadd( -82.0044, 247.004, -127.298, 0.37 ) }
    dend_20 { pt3dadd( -82.558, 248.144, -127.486, 0.37 ) }
    dend_20 { pt3dadd( -83.1212, 249.49, -127.655, 0.74 ) }
    dend_20 { pt3dadd( -83.4986, 250.5, -127.767, 0.74 ) }
    dend_20 { pt3dadd( -83.9202, 251.693, -127.879, 0.74 ) }
    dend_20 { pt3dadd( -84.4359, 253.22, -128.042, 0.52 ) }
    dend_20 { pt3dadd( -84.6832, 253.983, -128.131, 0.52 ) }
    dend_20 { pt3dadd( -85.3264, 255.859, -128.369, 0.52 ) }
    dend_20 { pt3dadd( -85.9553, 257.494, -128.575, 0.44 ) }
    dend_20 { pt3dadd( -86.3411, 258.369, -128.683, 0.44 ) }
    dend_20 { pt3dadd( -87.0816, 259.894, -128.838, 1.25 ) }
    dend_20 { pt3dadd( -87.3115, 260.334, -128.873, 1.25 ) }
    dend_20 { pt3dadd( -88.2798, 262.146, -128.98, 0.59 ) }
    dend_20 { pt3dadd( -89.073, 263.589, -129.056, 0.37 ) }
    dend_20 { pt3dadd( -89.7967, 264.868, -129.055, 0.37 ) }
    dend_20 { pt3dadd( -90.82, 266.62, -128.934, 0.37 ) }
    dend_20 { pt3dadd( -91.7, 268.082, -128.736, 0.37 ) }
    dend_20 { pt3dadd( -92.1935, 268.941, -128.601, 0.37 ) }
    dend_20 { pt3dadd( -92.7753, 270.064, -128.459, 0.59 ) }
    dend_20 { pt3dadd( -93.549, 271.871, -128.345, 0.59 ) }
    dend_20 { pt3dadd( -94.0887, 273.205, -128.28, 0.37 ) }
    dend_20 { pt3dadd( -94.7049, 274.87, -128.253, 0.37 ) }
    dend_20 { pt3dadd( -95.376, 276.979, -128.279, 0.37 ) }
    dend_20 { pt3dadd( -95.8964, 279.175, -128.416, 0.37 ) }
    dend_20 { pt3dadd( -96.0927, 280.984, -128.724, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 36/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -42.248, 8.1843, 6.69253, 1.03 ) }
    dend_14 { pt3dadd( -41.1748, 6.11496, 4.32546, 1.03 ) }
    dend_14 { pt3dadd( -40.8317, 5.22513, 3.61, 1.03 ) }
    dend_14 { pt3dadd( -40.5541, 4.25418, 2.93635, 2.14 ) }
    dend_14 { pt3dadd( -40.4625, 3.74043, 2.59319, 2.14 ) }
    dend_14 { pt3dadd( -40.3372, 1.88297, 1.17337, 1.18 ) }
    dend_14 { pt3dadd( -40.3662, 0.561934, 0.0855521, 1.11 ) }
    dend_14 { pt3dadd( -40.6079, -0.875816, -0.981273, 1.33 ) }
    dend_14 { pt3dadd( -40.9415, -1.73934, -1.66946, 1.33 ) }
    dend_14 { pt3dadd( -41.883, -3.05948, -2.89672, 1.33 ) }
    dend_14 { pt3dadd( -43.5872, -4.39137, -4.51163, 2.06 ) }
    dend_14 { pt3dadd( -44.3247, -4.66915, -5.05078, 2.65 ) }
    dend_14 { pt3dadd( -45.4899, -4.8532, -5.76015, 2.65 ) }
    dend_14 { pt3dadd( -47.2439, -4.85876, -6.70158, 2.14 ) }
    dend_14 { pt3dadd( -48.4499, -4.69088, -7.27501, 1.84 ) }
    dend_14 { pt3dadd( -49.9708, -4.25907, -7.86941, 1.84 ) }
    dend_14 { pt3dadd( -51.5816, -3.67364, -8.41279, 1.77 ) }
    dend_14 { pt3dadd( -52.5023, -3.30771, -8.73628, 1.69 ) }
    dend_14 { pt3dadd( -53.1772, -3.0429, -8.97497, 1.69 ) }
    dend_14 { pt3dadd( -54.5898, -2.5724, -9.49729, 1.47 ) }
    dend_14 { pt3dadd( -56.2368, -2.2381, -10.103, 0.96 ) }
    dend_14 { pt3dadd( -57.6305, -2.56382, -10.7121, 0.74 ) }
    dend_14 { pt3dadd( -58.0693, -3.2565, -11.1761, 0.74 ) }
    dend_14 { pt3dadd( -58.6529, -4.68747, -12.049, 0.96 ) }
    dend_14 { pt3dadd( -59.2181, -6.41887, -13.0675, 0.96 ) }
    dend_14 { pt3dadd( -59.6482, -7.8406, -13.8514, 0.96 ) }
    dend_14 { pt3dadd( -60.2496, -9.76372, -14.7669, 1.47 ) }
    dend_14 { pt3dadd( -61.1508, -12.177, -15.7845, 0.96 ) }
    dend_14 { pt3dadd( -61.7218, -13.418, -16.2762, 1.47 ) }
    dend_14 { pt3dadd( -62.8355, -15.4193, -17.0671, 0.96 ) }
    dend_14 { pt3dadd( -63.6094, -16.689, -17.5271, 0.74 ) }
    dend_14 { pt3dadd( -64.9834, -18.926, -18.1751, 1.18 ) }
    dend_14 { pt3dadd( -65.8666, -20.5376, -18.4763, 0.96 ) }
    dend_14 { pt3dadd( -66.2352, -21.445, -18.6208, 0.96 ) }
    dend_14 { pt3dadd( -66.5396, -22.8067, -18.96, 0.74 ) }
    dend_14 { pt3dadd( -66.661, -24.7274, -19.5577, 0.96 ) }
    dend_14 { pt3dadd( -66.6216, -25.8368, -19.9883, 1.11 ) }
    dend_14 { pt3dadd( -66.4527, -27.3511, -20.6587, 0.59 ) }
    dend_14 { pt3dadd( -66.2638, -28.6522, -21.2382, 0.96 ) }
    dend_14 { pt3dadd( -66.0653, -30.0328, -21.822, 0.74 ) }
    dend_14 { pt3dadd( -65.7693, -32.3294, -22.7641, 0.59 ) }
    dend_14 { pt3dadd( -65.6054, -33.4854, -23.2196, 0.44 ) }
    dend_14 { pt3dadd( -65.3142, -34.9317, -23.6897, 1.03 ) }
    dend_14 { pt3dadd( -65.1113, -35.6604, -23.8718, 1.03 ) }
    dend_14 { pt3dadd( -64.5705, -37.0832, -24.1172, 0.59 ) }
    dend_14 { pt3dadd( -63.8718, -38.4863, -24.2621, 0.74 ) }
    dend_14 { pt3dadd( -62.8208, -40.2631, -24.3901, 0.52 ) }
    dend_14 { pt3dadd( -61.8314, -41.8837, -24.4412, 1.33 ) }
    dend_14 { pt3dadd( -61.4543, -42.495, -24.4463, 1.25 ) }
    dend_14 { pt3dadd( -60.7403, -43.6901, -24.4593, 0.74 ) }
    dend_14 { pt3dadd( -60.0374, -44.9609, -24.5065, 1.11 ) }
    dend_14 { pt3dadd( -59.6032, -45.8663, -24.5546, 1.55 ) }
    dend_14 { pt3dadd( -59.323, -46.5131, -24.6239, 1.55 ) }
    dend_14 { pt3dadd( -58.8391, -47.7958, -24.8357, 0.59 ) }
    dend_14 { pt3dadd( -58.3934, -49.1571, -25.0353, 0.59 ) }
    dend_14 { pt3dadd( -58.0562, -50.439, -25.1647, 0.59 ) }
    dend_14 { pt3dadd( -57.718, -51.8912, -25.2932, 0.37 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 93/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -42.248, 8.1843, 6.69253, 2.36 ) }
    dend_5 { pt3dadd( -42.5361, 8.37281, 6.67815, 2.36 ) }
    dend_5 { pt3dadd( -44.4234, 9.58582, 6.4637, 1.18 ) }
    dend_5 { pt3dadd( -45.9864, 10.5931, 6.2035, 1.03 ) }
    dend_5 { pt3dadd( -46.8724, 11.1766, 6.02084, 1.03 ) }
    dend_5 { pt3dadd( -48.0926, 11.9935, 5.75871, 1.47 ) }
    dend_5 { pt3dadd( -48.5701, 12.3173, 5.6478, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( -49.538, 12.9754, 5.39793, 1.11 ) }
    dend_5 { pt3dadd( -50.6815, 13.785, 5.05266, 1.11 ) }
    dend_5 { pt3dadd( -51.8237, 14.597, 4.72707, 0.96 ) }
    dend_5 { pt3dadd( -53.0608, 15.4741, 4.41996, 0.96 ) }
    dend_5 { pt3dadd( -54.0223, 16.1533, 4.23883, 0.81 ) }
    dend_5 { pt3dadd( -55.6322, 17.3099, 3.97439, 0.81 ) }
    dend_5 { pt3dadd( -56.4824, 17.9442, 3.86169, 1.25 ) }
    dend_5 { pt3dadd( -57.5637, 18.7584, 3.74201, 1.25 ) }
    dend_5 { pt3dadd( -58.3446, 19.3657, 3.6655, 1.25 ) }
    dend_5 { pt3dadd( -59.548, 20.3431, 3.57363, 1.55 ) }
    dend_5 { pt3dadd( -60.4202, 21.076, 3.52303, 1.55 ) }
    dend_5 { pt3dadd( -61.88, 22.3575, 3.41956, 1.03 ) }
    dend_5 { pt3dadd( -62.7793, 23.178, 3.3495, 1.03 ) }
    dend_5 { pt3dadd( -64.2659, 24.6271, 3.2296, 0.96 ) }
    dend_5 { pt3dadd( -65.2491, 25.6746, 3.16023, 1.18 ) }
    dend_5 { pt3dadd( -66.1335, 26.6973, 3.12706, 0.96 ) }
    dend_5 { pt3dadd( -67.1469, 27.9107, 3.13527, 1.18 ) }
    dend_5 { pt3dadd( -67.9778, 28.9378, 3.19783, 1.18 ) }
    dend_5 { pt3dadd( -68.7069, 29.8489, 3.29934, 1.18 ) }
    dend_5 { pt3dadd( -69.6626, 31.0526, 3.48285, 1.18 ) }
    dend_5 { pt3dadd( -70.6656, 32.3336, 3.70798, 1.33 ) }
    dend_5 { pt3dadd( -71.8609, 33.892, 4.02315, 1.25 ) }
    dend_5 { pt3dadd( -72.7817, 35.0808, 4.27579, 1.25 ) }
    dend_5 { pt3dadd( -73.5441, 36.0398, 4.45596, 1.25 ) }
    dend_5 { pt3dadd( -73.8846, 36.4589, 4.53454, 1.25 ) }
    dend_5 { pt3dadd( -74.782, 37.5452, 4.71999, 0.81 ) }
    dend_5 { pt3dadd( -75.8064, 38.8158, 4.91343, 0.81 ) }
    dend_5 { pt3dadd( -76.7036, 39.9371, 5.11518, 0.96 ) }
    dend_5 { pt3dadd( -77.8718, 41.3559, 5.38965, 0.96 ) }
    dend_5 { pt3dadd( -78.9601, 42.6624, 5.65799, 0.96 ) }
    dend_5 { pt3dadd( -79.8485, 43.6992, 5.91197, 1.4 ) }
    dend_5 { pt3dadd( -80.9518, 44.9075, 6.26407, 1.03 ) }
    dend_5 { pt3dadd( -82.3804, 46.358, 6.73703, 0.81 ) }
    dend_5 { pt3dadd( -83.1808, 47.1015, 7.00256, 0.81 ) }
    dend_5 { pt3dadd( -84.3546, 48.0665, 7.36975, 0.81 ) }
    dend_5 { pt3dadd( -85.385, 48.8093, 7.65748, 1.18 ) }
    dend_5 { pt3dadd( -86.8822, 49.6994, 8.05722, 0.96 ) }
    dend_5 { pt3dadd( -88.2858, 50.3217, 8.39953, 0.96 ) }
    dend_5 { pt3dadd( -89.851, 50.7957, 8.73218, 0.74 ) }
    dend_5 { pt3dadd( -91.4872, 51.0861, 9.05709, 0.74 ) }
    dend_5 { pt3dadd( -92.39, 51.1628, 9.21822, 0.74 ) }
    dend_5 { pt3dadd( -93.8849, 51.228, 9.44922, 0.88 ) }
    dend_5 { pt3dadd( -95.3577, 51.2452, 9.67265, 0.88 ) }
    dend_5 { pt3dadd( -96.2594, 51.2646, 9.80118, 0.88 ) }
    dend_5 { pt3dadd( -98.3545, 51.374, 10.0481, 0.59 ) }
    dend_5 { pt3dadd( -99.1875, 51.451, 10.128, 0.59 ) }
    dend_5 { pt3dadd( -100.574, 51.6531, 10.2352, 0.96 ) }
    dend_5 { pt3dadd( -101.905, 51.9324, 10.3159, 0.96 ) }
    dend_5 { pt3dadd( -103.537, 52.3767, 10.3919, 0.44 ) }
    dend_5 { pt3dadd( -105.314, 52.9545, 10.4503, 0.74 ) }
    dend_5 { pt3dadd( -106.691, 53.4918, 10.4793, 0.88 ) }
    dend_5 { pt3dadd( -107.546, 53.8997, 10.4892, 1.03 ) }
    dend_5 { pt3dadd( -108.308, 54.3585, 10.4892, 1.03 ) }
    dend_5 { pt3dadd( -109.39, 55.2473, 10.4918, 0.74 ) }
    dend_5 { pt3dadd( -110.13, 56.0936, 10.5084, 0.74 ) }
    dend_5 { pt3dadd( -110.802, 57.2047, 10.5369, 0.81 ) }
    dend_5 { pt3dadd( -111.397, 58.5373, 10.5364, 1.47 ) }
    dend_5 { pt3dadd( -111.614, 59.1475, 10.517, 1.47 ) }
    dend_5 { pt3dadd( -111.911, 60.0929, 10.4623, 0.88 ) }
    dend_5 { pt3dadd( -112.149, 60.8596, 10.4013, 0.88 ) }
    dend_5 { pt3dadd( -112.446, 61.6762, 10.3243, 0.81 ) }
    dend_5 { pt3dadd( -112.903, 62.7055, 10.1992, 0.66 ) }
    dend_5 { pt3dadd( -113.408, 63.6599, 10.0567, 0.66 ) }
    dend_5 { pt3dadd( -113.986, 64.6762, 9.89173, 0.44 ) }
    dend_5 { pt3dadd( -114.886, 66.1442, 9.6311, 0.44 ) }
    dend_5 { pt3dadd( -115.719, 67.4208, 9.39302, 0.59 ) }
    dend_5 { pt3dadd( -116.265, 68.1887, 9.2677, 0.59 ) }
    dend_5 { pt3dadd( -116.991, 69.1411, 9.16023, 0.44 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 68/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -99.6196, -90.6369, 64.2891, 0.29 ) }
    dend_3 { pt3dadd( -104.917, -98.3443, 67.3633, 0.29 ) }
    dend_3 { pt3dadd( -110.338, -106.39, 68.9511, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -99.6196, -90.6369, 64.2891, 0.37 ) }
    dend_2 { pt3dadd( -104.481, -95.6107, 71.3846, 0.29 ) }
    dend_2 { pt3dadd( -108.774, -100.364, 78.9869, 0.29 ) }
    dend_2 { pt3dadd( -112.812, -104.494, 87.0962, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_62 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 125.91, 84.4749, 5.86017, 1.69 ) }
    dend_68 { pt3dadd( 125.636, 86.4628, 5.97339, 1.69 ) }
    dend_68 { pt3dadd( 125.303, 88.3343, 6.01768, 1.69 ) }
    dend_68 { pt3dadd( 124.864, 90.5788, 6.02678, 1.4 ) }
    dend_68 { pt3dadd( 124.475, 92.4626, 5.99393, 1.4 ) }
    dend_68 { pt3dadd( 124.146, 93.8998, 5.93418, 1.4 ) }
    dend_68 { pt3dadd( 123.764, 95.4599, 5.84883, 1.84 ) }
    dend_68 { pt3dadd( 123.408, 96.718, 5.73309, 1.84 ) }
    dend_68 { pt3dadd( 123.162, 97.544, 5.65423, 1.84 ) }
    dend_68 { pt3dadd( 122.479, 99.8805, 5.43141, 1.25 ) }
    dend_68 { pt3dadd( 121.947, 101.937, 5.24816, 1.25 ) }
    dend_68 { pt3dadd( 121.484, 104.05, 5.08656, 1.4 ) }
    dend_68 { pt3dadd( 121.205, 105.595, 4.9871, 1.4 ) }
    dend_68 { pt3dadd( 120.836, 108.096, 4.84775, 1.4 ) }
    dend_68 { pt3dadd( 120.733, 108.939, 4.82012, 1.4 ) }
    dend_68 { pt3dadd( 120.549, 110.687, 4.81504, 1.47 ) }
    dend_68 { pt3dadd( 120.357, 112.668, 4.85109, 1.47 ) }
    dend_68 { pt3dadd( 120.133, 114.841, 4.90615, 1.4 ) }
    dend_68 { pt3dadd( 119.963, 116.34, 4.95254, 1.4 ) }
    dend_68 { pt3dadd( 119.807, 117.635, 5.01081, 1.4 ) }
    dend_68 { pt3dadd( 119.605, 119.107, 5.05975, 1.25 ) }
    dend_68 { pt3dadd( 119.312, 120.874, 5.08274, 1.4 ) }
    dend_68 { pt3dadd( 119.061, 122.198, 5.06886, 1.4 ) }
    dend_68 { pt3dadd( 118.74, 123.895, 5.01629, 1.55 ) }
    dend_68 { pt3dadd( 118.492, 125.34, 4.92939, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_68 { pt3dadd( 118.185, 127.392, 4.74219, 1.33 ) }
    dend_68 { pt3dadd( 118.017, 128.95, 4.59688, 1.55 ) }
    dend_68 { pt3dadd( 117.929, 130.053, 4.49688, 1.69 ) }
    dend_68 { pt3dadd( 117.815, 131.793, 4.34452, 1.4 ) }
    dend_68 { pt3dadd( 117.749, 132.948, 4.25798, 1.4 ) }
    dend_68 { pt3dadd( 117.643, 135.288, 4.13179, 1.4 ) }
    dend_68 { pt3dadd( 117.61, 137.514, 4.06083, 1.62 ) }
    dend_68 { pt3dadd( 117.647, 139.117, 4.01979, 1.62 ) }
    dend_68 { pt3dadd( 117.718, 140.182, 3.97858, 2.06 ) }
    dend_68 { pt3dadd( 117.809, 141.155, 3.94948, 2.06 ) }
    dend_68 { pt3dadd( 117.951, 142.356, 3.92354, 2.06 ) }
    dend_68 { pt3dadd( 118.15, 143.778, 3.8813, 1.33 ) }
    dend_68 { pt3dadd( 118.305, 144.952, 3.8199, 1.33 ) }
    dend_68 { pt3dadd( 118.502, 146.323, 3.72907, 1.25 ) }
    dend_68 { pt3dadd( 118.737, 147.902, 3.58514, 1.4 ) }
    dend_68 { pt3dadd( 118.895, 149.041, 3.44461, 1.4 ) }
    dend_68 { pt3dadd( 118.994, 150.025, 3.31225, 1.4 ) }
    dend_68 { pt3dadd( 119.079, 151.296, 3.14509, 1.4 ) }
    dend_68 { pt3dadd( 119.167, 152.475, 2.99403, 1.4 ) }
    dend_68 { pt3dadd( 119.311, 153.771, 2.85499, 1.4 ) }
    dend_68 { pt3dadd( 119.613, 155.458, 2.71093, 1.03 ) }
    dend_68 { pt3dadd( 119.983, 157.002, 2.68127, 1.47 ) }
    dend_68 { pt3dadd( 120.322, 158.074, 2.72789, 1.47 ) }
    dend_68 { pt3dadd( 120.882, 159.554, 2.87493, 1.25 ) }
    dend_68 { pt3dadd( 121.386, 160.741, 3.03308, 1.18 ) }
    dend_68 { pt3dadd( 121.812, 161.614, 3.16924, 1.18 ) }
    dend_68 { pt3dadd( 122.747, 163.296, 3.44393, 1.33 ) }
    dend_68 { pt3dadd( 124.183, 165.599, 3.77173, 1.47 ) }
    dend_68 { pt3dadd( 125.196, 167.087, 3.93243, 1.62 ) }
    dend_68 { pt3dadd( 125.895, 168.063, 3.9964, 1.62 ) }
    dend_68 { pt3dadd( 127.036, 169.636, 4.04056, 1.55 ) }
    dend_68 { pt3dadd( 127.853, 170.784, 4.05144, 1.55 ) }
    dend_68 { pt3dadd( 128.949, 172.331, 4.0014, 1.4 ) }
    dend_68 { pt3dadd( 130.075, 174.08, 3.88457, 1.33 ) }
    dend_68 { pt3dadd( 130.742, 175.296, 3.75735, 1.33 ) }
    dend_68 { pt3dadd( 131.307, 176.606, 3.62844, 1.33 ) }
    dend_68 { pt3dadd( 131.85, 178.305, 3.49149, 1.33 ) }
    dend_68 { pt3dadd( 132.297, 180.225, 3.3809, 1.33 ) }
    dend_68 { pt3dadd( 132.514, 181.593, 3.34013, 1.33 ) }
    dend_68 { pt3dadd( 132.663, 183.096, 3.33993, 1.25 ) }
    dend_68 { pt3dadd( 132.79, 184.797, 3.39902, 1.25 ) }
    dend_68 { pt3dadd( 132.828, 185.481, 3.4524, 1.25 ) }
    dend_68 { pt3dadd( 132.895, 186.602, 3.58429, 1.25 ) }
    dend_68 { pt3dadd( 133.007, 188.131, 3.89309, 1.69 ) }
    dend_68 { pt3dadd( 133.132, 189.342, 4.17034, 1.69 ) }
    dend_68 { pt3dadd( 133.207, 190.023, 4.34295, 1.69 ) }
    dend_68 { pt3dadd( 133.301, 191.447, 4.62909, 2.06 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 47/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 125.91, 84.4749, 5.86017, 0.52 ) }
    dend_63 { pt3dadd( 128.136, 84.4346, 5.82591, 0.52 ) }
    dend_63 { pt3dadd( 129.086, 84.5088, 5.79454, 0.52 ) }
    dend_63 { pt3dadd( 130.409, 84.7085, 5.77787, 0.52 ) }
    dend_63 { pt3dadd( 131.82, 84.915, 5.79256, 0.52 ) }
    dend_63 { pt3dadd( 132.831, 85.0378, 5.83206, 0.52 ) }
    dend_63 { pt3dadd( 134.379, 85.1733, 5.93767, 0.52 ) }
    dend_63 { pt3dadd( 135.978, 85.2679, 6.11885, 0.52 ) }
    dend_63 { pt3dadd( 137.653, 85.2424, 6.36348, 0.52 ) }
    dend_63 { pt3dadd( 138.864, 85.1222, 6.57383, 0.52 ) }
    dend_63 { pt3dadd( 139.801, 84.9427, 6.76414, 1.03 ) }
    dend_63 { pt3dadd( 140.656, 84.7159, 6.97219, 1.25 ) }
    dend_63 { pt3dadd( 141.724, 84.2965, 7.27635, 1.25 ) }
    dend_63 { pt3dadd( 142.773, 83.7496, 7.57942, 0.52 ) }
    dend_63 { pt3dadd( 143.656, 83.2266, 7.80644, 0.52 ) }
    dend_63 { pt3dadd( 145.156, 82.4599, 8.11558, 0.52 ) }
    dend_63 { pt3dadd( 155.011, 80.8072, 8.01043, 0.52 ) }
    dend_63 { pt3dadd( 164.874, 79.5274, 9.00889, 0.52 ) }
    dend_63 { pt3dadd( 174.687, 77.6929, 9.39826, 0.52 ) }
    dend_63 { pt3dadd( 184.345, 75.2245, 9.95994, 0.52 ) }
    dend_63 { pt3dadd( 193.889, 72.5944, 8.67782, 0.52 ) }
    dend_63 { pt3dadd( 203.233, 69.139, 8.31457, 0.52 ) }
    dend_63 { pt3dadd( 212.634, 66.0755, 9.63575, 0.52 ) }
    dend_63 { pt3dadd( 222.406, 64.0538, 10.0922, 0.52 ) }
    dend_63 { pt3dadd( 231.924, 61.7124, 12.0019, 0.52 ) }
    dend_63 { pt3dadd( 241.569, 59.5466, 13.428, 0.52 ) }
    dend_63 { pt3dadd( 251.094, 58.1247, 16.0994, 0.52 ) }
    // Section: dend_61, id: dend_61, parent: dend_49 (entry count 74/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 47.5176, 39.7838, 3.91658, 0.59 ) }
    dend_61 { pt3dadd( 49.021, 39.6932, 4.15145, 0.59 ) }
    dend_61 { pt3dadd( 50.7944, 39.6183, 4.7127, 0.37 ) }
    dend_61 { pt3dadd( 51.4283, 39.5915, 4.91331, 0.37 ) }
    dend_61 { pt3dadd( 52.5263, 39.5451, 5.2608, 0.37 ) }
    dend_61 { pt3dadd( 53.5482, 39.5019, 5.58422, 0.37 ) }
    dend_61 { pt3dadd( 54.8641, 39.4464, 6.00068, 0.37 ) }
    dend_61 { pt3dadd( 56.5796, 39.4275, 6.81719, 0.29 ) }
    dend_61 { pt3dadd( 65.8612, 37.2431, 9.78943, 0.29 ) }
    dend_61 { pt3dadd( 74.6367, 34.0373, 13.2792, 0.29 ) }
    dend_61 { pt3dadd( 82.9497, 29.449, 16.2371, 0.29 ) }
    dend_61 { pt3dadd( 90.7348, 24.2868, 19.6072, 0.29 ) }
    dend_61 { pt3dadd( 98.285, 20.065, 24.5312, 0.29 ) }
    dend_61 { pt3dadd( 107.116, 17.5763, 28.4692, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 88/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 47.5176, 39.7838, 3.91658, 0.44 ) }
    dend_50 { pt3dadd( 49.3095, 39.4758, 4.73441, 0.44 ) }
    dend_50 { pt3dadd( 50.2197, 39.4221, 5.02267, 0.44 ) }
    dend_50 { pt3dadd( 52.4315, 39.3898, 5.56265, 0.88 ) }
    dend_50 { pt3dadd( 53.5263, 39.4085, 5.78641, 0.37 ) }
    dend_50 { pt3dadd( 54.9673, 39.4543, 6.03908, 0.37 ) }
    dend_50 { pt3dadd( 57.112, 39.5341, 6.37019, 0.37 ) }
    dend_50 { pt3dadd( 58.9371, 39.7245, 6.52677, 0.52 ) }
    dend_50 { pt3dadd( 59.8323, 39.8345, 6.56212, 1.18 ) }
    dend_50 { pt3dadd( 60.5336, 39.9269, 6.55128, 1.18 ) }
    dend_50 { pt3dadd( 61.4959, 40.0638, 6.55112, 1.18 ) }
    dend_50 { pt3dadd( 62.0222, 40.1331, 6.55975, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( 62.8843, 40.245, 6.58787, 1.18 ) }
    dend_50 { pt3dadd( 64.6595, 40.4977, 6.67188, 0.44 ) }
    dend_50 { pt3dadd( 66.2151, 40.7308, 6.77011, 0.29 ) }
    dend_50 { pt3dadd( 67.58, 40.946, 6.8677, 0.29 ) }
    dend_50 { pt3dadd( 69.3148, 41.2703, 7.01075, 0.29 ) }
    dend_50 { pt3dadd( 79.0983, 41.696, 9.03406, 0.29 ) }
    dend_50 { pt3dadd( 88.8495, 40.5547, 10.9171, 0.29 ) }
    dend_50 { pt3dadd( 98.7985, 39.8286, 11.597, 0.29 ) }
    dend_50 { pt3dadd( 108.54, 38.0366, 12.9102, 0.29 ) }
    dend_50 { pt3dadd( 118.229, 37.8325, 15.3761, 0.29 ) }
    dend_50 { pt3dadd( 127.876, 37.6402, 18.0022, 0.29 ) }
    dend_50 { pt3dadd( 137.566, 36.1101, 19.912, 0.29 ) }
    dend_50 { pt3dadd( 147.427, 34.7583, 20.8213, 0.29 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 13/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 3.99426, 69.4329, 6.49738, 0.59 ) }
    dend_45 { pt3dadd( 5.96075, 68.8398, 6.63674, 0.59 ) }
    dend_45 { pt3dadd( 6.76907, 68.723, 6.73307, 0.59 ) }
    dend_45 { pt3dadd( 7.74137, 68.5735, 6.7994, 0.37 ) }
    dend_45 { pt3dadd( 8.4924, 68.4742, 6.80853, 0.37 ) }
    dend_45 { pt3dadd( 9.57347, 68.3823, 6.79783, 0.22 ) }
    dend_45 { pt3dadd( 10.65, 68.3581, 6.76536, 0.22 ) }
    dend_45 { pt3dadd( 11.3325, 68.4857, 6.71846, 0.22 ) }
    dend_45 { pt3dadd( 12.6747, 68.9789, 6.58459, 0.22 ) }
    dend_45 { pt3dadd( 13.7602, 69.6444, 6.42195, 0.22 ) }
    dend_45 { pt3dadd( 14.3089, 70.1283, 6.29902, 0.66 ) }
    dend_45 { pt3dadd( 14.2528, 70.9809, 6.12453, 1.11 ) }
    dend_45 { pt3dadd( 14.04, 71.6664, 6.01173, 1.11 ) }
    dend_45 { pt3dadd( 13.7498, 72.3921, 5.91038, 1.11 ) }
    dend_45 { pt3dadd( 13.2876, 73.3496, 5.81247, 0.52 ) }
    dend_45 { pt3dadd( 12.7883, 74.0906, 5.76016, 0.37 ) }
    dend_45 { pt3dadd( 12.4072, 74.5319, 5.73331, 0.37 ) }
    dend_45 { pt3dadd( 19.7799, 80.8272, 3.74507, 0.37 ) }
    dend_45 { pt3dadd( 26.1771, 88.2045, 2.39403, 0.37 ) }
    dend_45 { pt3dadd( 32.7523, 95.3434, 0.617711, 0.37 ) }
    dend_45 { pt3dadd( 40.7952, 100.989, -0.719437, 0.37 ) }
    dend_45 { pt3dadd( 49.1124, 106.392, -0.387609, 0.37 ) }
    dend_45 { pt3dadd( 56.6766, 112.655, 0.846628, 0.37 ) }
    dend_45 { pt3dadd( 65.3333, 117.509, 1.36871, 0.37 ) }
    dend_45 { pt3dadd( 74.6194, 121.094, 0.869192, 0.37 ) }
    dend_45 { pt3dadd( 83.6618, 124.908, -0.842919, 0.37 ) }
    dend_45 { pt3dadd( 92.8367, 126.917, -4.24571, 0.37 ) }
    dend_45 { pt3dadd( 101.535, 130.105, -7.93991, 0.37 ) }
    dend_45 { pt3dadd( 110.307, 132.623, -11.9875, 0.37 ) }
    dend_45 { pt3dadd( 119.405, 133.843, -15.9438, 0.37 ) }
    dend_45 { pt3dadd( 128.5, 133.483, -20.0844, 0.37 ) }
    dend_45 { pt3dadd( 137.951, 134.673, -23.1169, 0.37 ) }
    dend_45 { pt3dadd( 147.267, 135.139, -26.7213, 0.37 ) }
    dend_45 { pt3dadd( 156.908, 136.021, -29.2173, 0.37 ) }
    dend_45 { pt3dadd( 166.692, 137.371, -30.7514, 0.37 ) }
    dend_45 { pt3dadd( 176.572, 138.154, -32.0699, 0.37 ) }
    dend_45 { pt3dadd( 186.461, 139.532, -32.5223, 0.37 ) }
    dend_45 { pt3dadd( 196.111, 141.179, -34.5284, 0.37 ) }
    dend_45 { pt3dadd( 205.159, 143.127, -38.2899, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 52/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 3.99426, 69.4329, 6.49738, 0.66 ) }
    dend_44 { pt3dadd( 4.65675, 72.253, 6.50989, 0.66 ) }
    dend_44 { pt3dadd( 5.056, 73.9756, 6.51253, 0.59 ) }
    dend_44 { pt3dadd( 5.56455, 75.9751, 6.50358, 0.52 ) }
    dend_44 { pt3dadd( 6.13249, 78.0921, 6.52141, 0.52 ) }
    dend_44 { pt3dadd( 6.52122, 79.557, 6.54252, 0.52 ) }
    dend_44 { pt3dadd( 6.88775, 81.017, 6.55841, 0.37 ) }
    dend_44 { pt3dadd( 7.15227, 82.3973, 6.54742, 0.37 ) }
    dend_44 { pt3dadd( 7.40471, 84.5008, 6.49255, 0.37 ) }
    dend_44 { pt3dadd( 7.5611, 87.5442, 6.36959, 0.37 ) }
    dend_44 { pt3dadd( 7.55107, 88.8407, 6.32219, 0.22 ) }
    dend_44 { pt3dadd( 7.45398, 90.5683, 6.31379, 0.22 ) }
    dend_44 { pt3dadd( 7.1667, 93.3235, 6.38433, 0.22 ) }
    dend_44 { pt3dadd( 6.94912, 94.7638, 6.46626, 0.22 ) }
    dend_44 { pt3dadd( 6.67735, 96.0216, 6.55545, 0.22 ) }
    dend_44 { pt3dadd( 6.27785, 97.5153, 6.68452, 0.22 ) }
    dend_44 { pt3dadd( 5.79035, 99.3729, 6.93233, 0.22 ) }
    dend_44 { pt3dadd( 5.62116, 100.141, 7.10772, 0.22 ) }
    dend_44 { pt3dadd( 5.51162, 101.478, 7.61431, 0.22 ) }
    dend_44 { pt3dadd( 7.48593, 110.783, 9.85853, 0.22 ) }
    dend_44 { pt3dadd( 8.06494, 120.062, 12.8729, 0.22 ) }
    dend_44 { pt3dadd( 6.86108, 128.758, 17.2327, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 74/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 10.8038, 121.785, -33.6666, 0.59 ) }
    dend_42 { pt3dadd( 11.2417, 124.118, -32.2506, 0.59 ) }
    dend_42 { pt3dadd( 11.9539, 127.138, -30.9157, 0.74 ) }
    dend_42 { pt3dadd( 12.3498, 128.763, -30.3364, 0.81 ) }
    dend_42 { pt3dadd( 12.8349, 130.993, -29.615, 0.59 ) }
    dend_42 { pt3dadd( 13.1726, 132.814, -29.0848, 0.59 ) }
    dend_42 { pt3dadd( 13.4419, 134.526, -28.6277, 0.52 ) }
    dend_42 { pt3dadd( 13.6997, 137.454, -28.1513, 0.88 ) }
    dend_42 { pt3dadd( 13.7381, 139.103, -27.9701, 0.88 ) }
    dend_42 { pt3dadd( 13.627, 141.033, -27.8043, 0.52 ) }
    dend_42 { pt3dadd( 13.3486, 143.37, -27.5535, 0.59 ) }
    dend_42 { pt3dadd( 13.1666, 144.571, -27.4084, 0.59 ) }
    dend_42 { pt3dadd( 12.4898, 148.737, -26.8933, 0.44 ) }
    dend_42 { pt3dadd( 12.1545, 150.734, -26.6539, 0.44 ) }
    dend_42 { pt3dadd( 11.4608, 155.419, -26.0016, 0.52 ) }
    dend_42 { pt3dadd( 11.2058, 157.536, -25.6795, 0.52 ) }
    dend_42 { pt3dadd( 10.9915, 159.779, -25.2734, 0.59 ) }
    dend_42 { pt3dadd( 10.776, 162.711, -24.6726, 0.59 ) }
    dend_42 { pt3dadd( 10.6446, 165.011, -24.1617, 0.74 ) }
    dend_42 { pt3dadd( 10.4264, 167.769, -23.5614, 0.96 ) }
    dend_42 { pt3dadd( 10.2283, 169.595, -23.1849, 0.96 ) }
    dend_42 { pt3dadd( 9.90693, 171.99, -22.715, 0.81 ) }
    dend_42 { pt3dadd( 9.54384, 174.253, -22.2696, 0.59 ) }
    dend_42 { pt3dadd( 9.079, 176.755, -21.8016, 0.59 ) }
    dend_42 { pt3dadd( 8.37598, 180.323, -21.2189, 0.59 ) }
    dend_42 { pt3dadd( 7.93588, 182.404, -20.9399, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_42 { pt3dadd( 7.57725, 184.034, -20.723, 1.33 ) }
    dend_42 { pt3dadd( 7.01458, 186.55, -20.4067, 1.18 ) }
    dend_42 { pt3dadd( 6.60615, 188.419, -20.1641, 0.88 ) }
    dend_42 { pt3dadd( 6.30844, 189.809, -19.9817, 0.81 ) }
    dend_42 { pt3dadd( 5.97933, 191.398, -19.722, 1.11 ) }
    dend_42 { pt3dadd( 5.54451, 193.481, -19.3299, 1.4 ) }
    dend_42 { pt3dadd( 5.21674, 194.963, -19.0452, 1.4 ) }
    dend_42 { pt3dadd( 4.88672, 196.338, -18.7305, 1.33 ) }
    dend_42 { pt3dadd( 4.41308, 198.161, -18.2451, 1.18 ) }
    dend_42 { pt3dadd( 3.82066, 200.233, -17.648, 1.18 ) }
    dend_42 { pt3dadd( 3.4273, 201.482, -17.271, 1.33 ) }
    dend_42 { pt3dadd( 2.69067, 203.747, -16.5545, 0.88 ) }
    dend_42 { pt3dadd( 2.21488, 205.205, -16.1022, 0.88 ) }
    dend_42 { pt3dadd( 1.6785, 206.818, -15.6451, 0.88 ) }
    dend_42 { pt3dadd( 0.916381, 209.052, -15.0772, 0.96 ) }
    dend_42 { pt3dadd( 0.486917, 210.33, -14.8007, 0.96 ) }
    dend_42 { pt3dadd( -0.113467, 212.226, -14.3957, 0.74 ) }
    dend_42 { pt3dadd( -0.66003, 214.045, -13.9978, 0.74 ) }
    dend_42 { pt3dadd( -1.29008, 216.508, -13.467, 0.66 ) }
    dend_42 { pt3dadd( -1.54956, 217.78, -13.1592, 1.11 ) }
    dend_42 { pt3dadd( -1.72343, 218.783, -12.9049, 1.11 ) }
    dend_42 { pt3dadd( -1.93275, 220.145, -12.5386, 0.88 ) }
    dend_42 { pt3dadd( -2.12232, 221.424, -12.15, 0.88 ) }
    dend_42 { pt3dadd( -2.33035, 223.379, -11.4494, 1.25 ) }
    dend_42 { pt3dadd( -2.34046, 224.597, -10.9216, 1.03 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 25/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.8038, 121.785, -33.6666, 1.18 ) }
    dend_41 { pt3dadd( 10.8826, 122.233, -34.5625, 1.18 ) }
    dend_41 { pt3dadd( 11.0645, 123.717, -37.0424, 1.18 ) }
    dend_41 { pt3dadd( 11.0648, 123.74, -37.0749, 1.18 ) }
    dend_41 { pt3dadd( 10.9028, 125.144, -38.7975, 0.37 ) }
    dend_41 { pt3dadd( 10.7632, 125.799, -39.4955, 0.37 ) }
    dend_41 { pt3dadd( 10.5616, 126.55, -40.2012, 0.59 ) }
    dend_41 { pt3dadd( 10.4005, 127.062, -40.5725, 0.59 ) }
    dend_41 { pt3dadd( 10.0438, 128.059, -41.1119, 0.37 ) }
    dend_41 { pt3dadd( 9.64219, 129.113, -41.6299, 0.22 ) }
    dend_41 { pt3dadd( 9.31062, 129.955, -42.0042, 0.22 ) }
    dend_41 { pt3dadd( 8.94645, 131.002, -42.4756, 0.74 ) }
    dend_41 { pt3dadd( 8.69114, 131.925, -42.8887, 0.96 ) }
    dend_41 { pt3dadd( 8.56206, 132.575, -43.1665, 0.96 ) }
    dend_41 { pt3dadd( 8.45381, 133.576, -43.6004, 0.52 ) }
    dend_41 { pt3dadd( 8.39497, 135.179, -44.309, 0.66 ) }
    dend_41 { pt3dadd( 8.40883, 136.377, -44.8057, 0.22 ) }
    dend_41 { pt3dadd( 8.49378, 137.594, -45.3279, 0.22 ) }
    dend_41 { pt3dadd( 8.68012, 138.818, -45.8753, 0.22 ) }
    dend_41 { pt3dadd( 8.91746, 139.898, -46.3838, 0.37 ) }
    dend_41 { pt3dadd( 9.20547, 140.962, -46.8878, 0.37 ) }
    dend_41 { pt3dadd( 9.63492, 142.467, -47.5511, 0.81 ) }
    dend_41 { pt3dadd( 10.0452, 143.97, -48.1907, 0.52 ) }
    dend_41 { pt3dadd( 10.346, 145.231, -48.6867, 0.52 ) }
    dend_41 { pt3dadd( 10.6272, 146.719, -49.2468, 0.29 ) }
    dend_41 { pt3dadd( 10.8364, 148.034, -49.7061, 0.29 ) }
    dend_41 { pt3dadd( 11.0818, 149.985, -50.3597, 0.29 ) }
    dend_41 { pt3dadd( 11.1663, 151.171, -50.7365, 0.29 ) }
    dend_41 { pt3dadd( 11.1593, 152.632, -51.1093, 0.44 ) }
    dend_41 { pt3dadd( 11.0751, 153.8, -51.3955, 0.44 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -139.819, 2.36228, -32.4417, 0.44 ) }
    dend_30 { pt3dadd( -141.52, 1.24524, -33.3957, 0.44 ) }
    dend_30 { pt3dadd( -142.334, 0.612807, -34.0258, 0.44 ) }
    dend_30 { pt3dadd( -143.384, -0.259772, -34.9217, 0.37 ) }
    dend_30 { pt3dadd( -143.978, -0.761506, -35.4436, 0.37 ) }
    dend_30 { pt3dadd( -144.582, -1.26445, -35.9745, 0.44 ) }
    dend_30 { pt3dadd( -145.848, -2.30172, -37.1676, 0.81 ) }
    dend_30 { pt3dadd( -146.552, -2.84648, -37.8757, 0.96 ) }
    dend_30 { pt3dadd( -147.051, -3.17108, -38.3989, 0.81 ) }
    dend_30 { pt3dadd( -147.625, -3.463, -38.9555, 0.96 ) }
    dend_30 { pt3dadd( -148.116, -3.63738, -39.3891, 0.96 ) }
    dend_30 { pt3dadd( -149.763, -3.96742, -40.6144, 0.59 ) }
    dend_30 { pt3dadd( -150.934, -4.06692, -41.3292, 0.44 ) }
    dend_30 { pt3dadd( -152.358, -4.09612, -42.0224, 0.96 ) }
    dend_30 { pt3dadd( -153.307, -4.06636, -42.4317, 1.18 ) }
    dend_30 { pt3dadd( -154.336, -3.99057, -42.7975, 1.18 ) }
    dend_30 { pt3dadd( -155.716, -3.84595, -43.1567, 0.44 ) }
    dend_30 { pt3dadd( -156.498, -3.7303, -43.2997, 0.44 ) }
    dend_30 { pt3dadd( -158.267, -3.40896, -43.5852, 0.44 ) }
    dend_30 { pt3dadd( -159.2, -3.19522, -43.7523, 0.88 ) }
    dend_30 { pt3dadd( -160.192, -2.93188, -43.9587, 0.88 ) }
    dend_30 { pt3dadd( -161.46, -2.57656, -44.2621, 0.59 ) }
    dend_30 { pt3dadd( -162.532, -2.2784, -44.5879, 0.66 ) }
    dend_30 { pt3dadd( -163.592, -1.96116, -45.006, 0.37 ) }
    dend_30 { pt3dadd( -164.627, -1.573, -45.5105, 0.37 ) }
    dend_30 { pt3dadd( -165.448, -1.22276, -45.9471, 0.81 ) }
    dend_30 { pt3dadd( -165.995, -0.975816, -46.2487, 0.81 ) }
    dend_30 { pt3dadd( -166.365, -0.819596, -46.442, 0.81 ) }
    dend_30 { pt3dadd( -167.256, -0.522456, -46.8354, 0.81 ) }
    dend_30 { pt3dadd( -168.66, -0.167586, -47.4003, 0.59 ) }
    dend_30 { pt3dadd( -169.914, 0.0444554, -47.8417, 0.44 ) }
    dend_30 { pt3dadd( -171.529, 0.183776, -48.3577, 0.74 ) }
    dend_30 { pt3dadd( -172.73, 0.178107, -48.721, 0.74 ) }
    dend_30 { pt3dadd( -173.847, 0.0664204, -49.0473, 0.52 ) }
    dend_30 { pt3dadd( -174.758, -0.0921346, -49.2961, 0.88 ) }
    dend_30 { pt3dadd( -175.654, -0.303451, -49.5636, 0.88 ) }
    dend_30 { pt3dadd( -177.045, -0.618208, -49.984, 0.44 ) }
    dend_30 { pt3dadd( -178.318, -0.883816, -50.4455, 0.29 ) }
    dend_30 { pt3dadd( -179.403, -1.08535, -50.8911, 0.29 ) }
    dend_30 { pt3dadd( -180.754, -1.30188, -51.4981, 0.59 ) }
    dend_30 { pt3dadd( -181.708, -1.42572, -51.9507, 0.59 ) }
    dend_30 { pt3dadd( -182.905, -1.49864, -52.5308, 0.29 ) }
    dend_30 { pt3dadd( -183.726, -1.52515, -52.9324, 0.29 ) }
    dend_30 { pt3dadd( -184.575, -1.566, -53.3379, 0.81 ) }
    dend_30 { pt3dadd( -185.23, -1.61709, -53.6575, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_30 { pt3dadd( -187.139, -1.86028, -54.5875, 0.29 ) }
    dend_30 { pt3dadd( -188.623, -2.14803, -55.2917, 0.29 ) }
    dend_30 { pt3dadd( -189.82, -2.42231, -55.8362, 0.29 ) }
    dend_30 { pt3dadd( -191.389, -2.80018, -56.5082, 0.81 ) }
    dend_30 { pt3dadd( -192.143, -2.98656, -56.8207, 0.81 ) }
    dend_30 { pt3dadd( -192.546, -3.095, -56.9791, 0.81 ) }
    dend_30 { pt3dadd( -193.881, -3.48621, -57.5067, 0.22 ) }
    dend_30 { pt3dadd( -195.068, -3.8562, -57.9802, 0.22 ) }
    dend_30 { pt3dadd( -195.732, -4.03419, -58.241, 0.44 ) }
    dend_30 { pt3dadd( -196.427, -4.19127, -58.4953, 0.44 ) }
    dend_30 { pt3dadd( -197.152, -4.33151, -58.7354, 0.37 ) }
    dend_30 { pt3dadd( -198.847, -4.56594, -59.2193, 0.29 ) }
    dend_30 { pt3dadd( -199.899, -4.65893, -59.4939, 0.74 ) }
    dend_30 { pt3dadd( -200.902, -4.73872, -59.7397, 0.74 ) }
    dend_30 { pt3dadd( -202.015, -4.7981, -59.9848, 0.29 ) }
    dend_30 { pt3dadd( -203.548, -4.86022, -60.3004, 0.22 ) }
    dend_30 { pt3dadd( -206.186, -4.96313, -60.7867, 0.22 ) }
    dend_30 { pt3dadd( -207.558, -5.01439, -60.9846, 0.59 ) }
    dend_30 { pt3dadd( -208.215, -5.03032, -61.0707, 0.59 ) }
    dend_30 { pt3dadd( -208.929, -5.04597, -61.1701, 0.59 ) }
    dend_30 { pt3dadd( -210.296, -5.07176, -61.4108, 0.22 ) }
    dend_30 { pt3dadd( -211.461, -5.10961, -61.6713, 0.22 ) }
    dend_30 { pt3dadd( -215.067, -5.30673, -62.7278, 0.22 ) }
    dend_30 { pt3dadd( -216.066, -5.36309, -63.068, 0.22 ) }
    dend_30 { pt3dadd( -216.939, -5.39631, -63.4038, 0.44 ) }
    dend_30 { pt3dadd( -218.642, -5.42327, -64.1507, 0.29 ) }
    dend_30 { pt3dadd( -220.482, -5.39438, -65.049, 0.74 ) }
    dend_30 { pt3dadd( -221.697, -5.32551, -65.7477, 0.74 ) }
    dend_30 { pt3dadd( -222.363, -5.27231, -66.2029, 0.59 ) }
    dend_30 { pt3dadd( -223.408, -5.19459, -66.9861, 0.29 ) }
    dend_30 { pt3dadd( -224.732, -5.13471, -68.0703, 0.52 ) }
    dend_30 { pt3dadd( -225.234, -5.14158, -68.5174, 0.74 ) }
    dend_30 { pt3dadd( -226.474, -5.16802, -69.6752, 0.52 ) }
    dend_30 { pt3dadd( -227.313, -5.20533, -70.4716, 0.37 ) }
    dend_30 { pt3dadd( -229.085, -5.40286, -72.3004, 0.96 ) }
    dend_30 { pt3dadd( -229.874, -5.55613, -73.2104, 1.03 ) }
    dend_30 { pt3dadd( -230.873, -5.82681, -74.4834, 0.52 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 37/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -139.819, 2.36228, -32.4417, 0.74 ) }
    dend_27 { pt3dadd( -140.902, 3.85333, -32.4789, 0.74 ) }
    dend_27 { pt3dadd( -141.554, 4.70667, -32.4976, 0.74 ) }
    dend_27 { pt3dadd( -142.584, 6.01175, -32.5217, 0.52 ) }
    dend_27 { pt3dadd( -143.452, 7.09322, -32.5457, 0.52 ) }
    dend_27 { pt3dadd( -144.366, 8.19928, -32.5779, 0.74 ) }
    dend_27 { pt3dadd( -145.04, 8.99482, -32.6075, 0.74 ) }
    dend_27 { pt3dadd( -145.837, 9.86474, -32.616, 0.44 ) }
    dend_27 { pt3dadd( -147.018, 11.1161, -32.5925, 0.59 ) }
    dend_27 { pt3dadd( -147.632, 11.7509, -32.5594, 1.03 ) }
    dend_27 { pt3dadd( -148.22, 12.3487, -32.5151, 1.03 ) }
    dend_27 { pt3dadd( -148.808, 12.9405, -32.4799, 1.03 ) }
    dend_27 { pt3dadd( -150.223, 14.3383, -32.4308, 0.44 ) }
    dend_27 { pt3dadd( -151.331, 15.418, -32.4154, 0.44 ) }
    dend_27 { pt3dadd( -152.301, 16.3503, -32.4345, 0.81 ) }
    dend_27 { pt3dadd( -152.822, 16.8475, -32.4625, 0.81 ) }
    dend_27 { pt3dadd( -153.972, 17.9324, -32.5665, 0.44 ) }
    dend_27 { pt3dadd( -154.606, 18.5049, -32.6483, 0.44 ) }
    dend_27 { pt3dadd( -155.692, 19.4351, -32.8389, 0.81 ) }
    dend_27 { pt3dadd( -156.911, 20.4216, -33.0767, 1.55 ) }
    dend_27 { pt3dadd( -157.524, 20.9114, -33.2028, 1.55 ) }
    dend_27 { pt3dadd( -158.291, 21.5146, -33.3504, 1.55 ) }
    dend_27 { pt3dadd( -159.427, 22.4086, -33.5525, 0.52 ) }
    dend_27 { pt3dadd( -160.544, 23.2884, -33.755, 0.37 ) }
    dend_27 { pt3dadd( -161.711, 24.221, -33.9922, 0.66 ) }
    dend_27 { pt3dadd( -162.472, 24.8435, -34.1554, 0.66 ) }
    dend_27 { pt3dadd( -163.429, 25.6553, -34.3878, 0.44 ) }
    dend_27 { pt3dadd( -164.868, 26.8998, -34.7693, 0.29 ) }
    dend_27 { pt3dadd( -166.047, 27.9289, -35.1157, 0.96 ) }
    dend_27 { pt3dadd( -166.771, 28.5497, -35.3266, 1.4 ) }
    dend_27 { pt3dadd( -167.258, 28.961, -35.4598, 1.4 ) }
    dend_27 { pt3dadd( -167.847, 29.4441, -35.6371, 1.4 ) }
    dend_27 { pt3dadd( -169.266, 30.5834, -36.0739, 0.44 ) }
    dend_27 { pt3dadd( -170.332, 31.3949, -36.3939, 0.37 ) }
    dend_27 { pt3dadd( -171.359, 32.142, -36.6823, 0.37 ) }
    dend_27 { pt3dadd( -172.234, 32.7475, -36.9123, 0.37 ) }
    dend_27 { pt3dadd( -173.554, 33.6362, -37.2481, 0.37 ) }
    dend_27 { pt3dadd( -174.779, 34.4524, -37.5423, 0.37 ) }
    dend_27 { pt3dadd( -176.001, 35.2424, -37.8539, 0.74 ) }
    dend_27 { pt3dadd( -176.953, 35.841, -38.1029, 0.96 ) }
    dend_27 { pt3dadd( -177.796, 36.3639, -38.3362, 0.96 ) }
    dend_27 { pt3dadd( -178.674, 36.8946, -38.5865, 0.96 ) }
    dend_27 { pt3dadd( -179.143, 37.1751, -38.7313, 0.96 ) }
    dend_27 { pt3dadd( -180.345, 37.9074, -39.1728, 0.29 ) }
    dend_27 { pt3dadd( -181.259, 38.4654, -39.537, 0.29 ) }
    dend_27 { pt3dadd( -182.414, 39.1599, -40.002, 0.29 ) }
    dend_27 { pt3dadd( -183.357, 39.7228, -40.3779, 0.96 ) }
    dend_27 { pt3dadd( -184.031, 40.1133, -40.6386, 0.96 ) }
    dend_27 { pt3dadd( -184.71, 40.4866, -40.8841, 1.18 ) }
    dend_27 { pt3dadd( -185.788, 41.0588, -41.2415, 0.66 ) }
    dend_27 { pt3dadd( -187.015, 41.6796, -41.6194, 0.29 ) }
    dend_27 { pt3dadd( -187.946, 42.1411, -41.8934, 0.29 ) }
    dend_27 { pt3dadd( -189.14, 42.7422, -42.2208, 0.29 ) }
    dend_27 { pt3dadd( -190.065, 43.2319, -42.4472, 0.74 ) }
    dend_27 { pt3dadd( -190.783, 43.6382, -42.612, 0.74 ) }
    dend_27 { pt3dadd( -191.352, 43.9887, -42.7421, 0.74 ) }
    dend_27 { pt3dadd( -193.157, 45.1896, -43.1644, 0.29 ) }
    dend_27 { pt3dadd( -194.161, 45.9218, -43.3998, 0.29 ) }
    dend_27 { pt3dadd( -195.529, 47.041, -43.7596, 0.29 ) }
    dend_27 { pt3dadd( -196.49, 47.9236, -44.0444, 0.96 ) }
    dend_27 { pt3dadd( -197.096, 48.53, -44.2426, 0.96 ) }
    dend_27 { pt3dadd( -197.456, 48.9097, -44.3719, 0.96 ) }
    dend_27 { pt3dadd( -198.265, 49.7689, -44.7017, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_27 { pt3dadd( -199.414, 50.8646, -45.1917, 0.37 ) }
    dend_27 { pt3dadd( -200.677, 51.9378, -45.7294, 1.4 ) }
    dend_27 { pt3dadd( -200.919, 52.1232, -45.8242, 1.4 ) }
    dend_27 { pt3dadd( -201.8, 52.7438, -46.1359, 1.18 ) }
    dend_27 { pt3dadd( -203.341, 53.7204, -46.6883, 0.29 ) }
    dend_27 { pt3dadd( -205.214, 54.7778, -47.3086, 0.29 ) }
    dend_27 { pt3dadd( -206.197, 55.2845, -47.61, 0.66 ) }
    dend_27 { pt3dadd( -206.913, 55.6417, -47.8203, 0.66 ) }
    dend_27 { pt3dadd( -207.623, 56.0055, -48.0203, 0.66 ) }
    dend_27 { pt3dadd( -209.141, 56.8107, -48.4272, 0.44 ) }
    dend_27 { pt3dadd( -211.361, 58.029, -48.9819, 0.22 ) }
    dend_27 { pt3dadd( -213.794, 59.3603, -49.5679, 0.22 ) }
    dend_27 { pt3dadd( -214.694, 59.8398, -49.7665, 0.59 ) }
    dend_27 { pt3dadd( -215.472, 60.2392, -49.9181, 0.59 ) }
    dend_27 { pt3dadd( -216.893, 60.9547, -50.1409, 0.22 ) }
    dend_27 { pt3dadd( -218.01, 61.5161, -50.269, 0.22 ) }
    dend_27 { pt3dadd( -218.963, 61.9951, -50.3845, 0.66 ) }
    dend_27 { pt3dadd( -219.885, 62.4543, -50.4927, 0.81 ) }
    dend_27 { pt3dadd( -220.871, 62.9411, -50.617, 0.81 ) }
    dend_27 { pt3dadd( -222.0, 63.4959, -50.7727, 0.37 ) }
    dend_27 { pt3dadd( -222.759, 63.8793, -50.8804, 0.37 ) }
    dend_27 { pt3dadd( -223.877, 64.4451, -51.0232, 0.29 ) }
    dend_27 { pt3dadd( -225.02, 65.0515, -51.1856, 0.29 ) }
    dend_27 { pt3dadd( -226.316, 65.7432, -51.3841, 0.15 ) }
    dend_27 { pt3dadd( -227.326, 66.284, -51.5611, 0.15 ) }
    dend_27 { pt3dadd( -228.738, 67.0273, -51.835, 0.15 ) }
    dend_27 { pt3dadd( -231.133, 68.3062, -52.3448, 0.15 ) }
    dend_27 { pt3dadd( -232.36, 68.9646, -52.626, 0.52 ) }
    dend_27 { pt3dadd( -233.12, 69.3865, -52.8166, 0.74 ) }
    dend_27 { pt3dadd( -233.924, 69.8527, -53.0278, 0.74 ) }
    dend_27 { pt3dadd( -235.444, 70.7784, -53.432, 0.29 ) }
    dend_27 { pt3dadd( -237.327, 71.9909, -53.9206, 0.29 ) }
    dend_27 { pt3dadd( -238.203, 72.6502, -54.1149, 0.44 ) }
    dend_27 { pt3dadd( -239.003, 73.3334, -54.3298, 0.44 ) }
    dend_27 { pt3dadd( -240.316, 74.6237, -54.7999, 0.22 ) }
    dend_27 { pt3dadd( -241.357, 75.7666, -55.2437, 0.22 ) }
    dend_27 { pt3dadd( -242.362, 76.974, -55.7393, 0.22 ) }
    dend_27 { pt3dadd( -244.725, 79.921, -56.9588, 0.22 ) }
    dend_27 { pt3dadd( -246.527, 82.2085, -57.9621, 0.22 ) }
    dend_27 { pt3dadd( -248.302, 84.3934, -58.9366, 0.29 ) }
    dend_27 { pt3dadd( -249.236, 85.5174, -59.4588, 0.29 ) }
    dend_27 { pt3dadd( -250.241, 86.6879, -60.028, 0.29 ) }
    dend_27 { pt3dadd( -251.694, 88.2953, -60.8385, 0.29 ) }
    dend_27 { pt3dadd( -253.225, 89.8297, -61.6121, 0.22 ) }
    dend_27 { pt3dadd( -255.387, 91.8439, -62.5184, 0.22 ) }
    dend_27 { pt3dadd( -256.471, 92.8004, -62.9521, 0.37 ) }
    dend_27 { pt3dadd( -257.411, 93.6618, -63.3292, 0.37 ) }
    dend_27 { pt3dadd( -257.66, 93.8983, -63.4284, 0.37 ) }
    dend_27 { pt3dadd( -258.618, 94.8463, -63.8151, 0.29 ) }
    dend_27 { pt3dadd( -259.89, 96.126, -64.3123, 0.37 ) }
    dend_27 { pt3dadd( -262.928, 99.2202, -65.4659, 0.29 ) }
    dend_27 { pt3dadd( -265.312, 101.617, -66.3907, 0.29 ) }
    dend_27 { pt3dadd( -266.404, 102.72, -66.8208, 0.66 ) }
    dend_27 { pt3dadd( -267.095, 103.429, -67.0806, 0.66 ) }
    dend_27 { pt3dadd( -268.673, 105.089, -67.6185, 0.29 ) }
    dend_27 { pt3dadd( -270.42, 106.954, -68.194, 0.29 ) }
    dend_27 { pt3dadd( -272.06, 108.726, -68.7419, 0.52 ) }
    dend_27 { pt3dadd( -272.773, 109.498, -68.9681, 0.52 ) }
    dend_27 { pt3dadd( -274.647, 111.624, -69.5047, 0.29 ) }
    dend_27 { pt3dadd( -276.332, 113.738, -69.9887, 0.29 ) }
    dend_27 { pt3dadd( -277.278, 115.113, -70.2805, 0.59 ) }
    dend_27 { pt3dadd( -278.074, 116.47, -70.5582, 0.59 ) }
    dend_27 { pt3dadd( -279.146, 118.51, -70.9483, 0.37 ) }
    dend_27 { pt3dadd( -279.874, 119.977, -71.2563, 0.22 ) }
    dend_27 { pt3dadd( -281.332, 123.068, -72.0024, 0.22 ) }
    dend_27 { pt3dadd( -282.38, 125.346, -72.5546, 0.22 ) }
    dend_27 { pt3dadd( -283.403, 127.471, -73.0298, 0.81 ) }
    dend_27 { pt3dadd( -283.825, 128.295, -73.2225, 0.81 ) }
    dend_27 { pt3dadd( -284.951, 130.265, -73.6998, 0.29 ) }
    dend_27 { pt3dadd( -285.664, 131.353, -73.9552, 0.52 ) }
    dend_27 { pt3dadd( -286.654, 132.624, -74.2245, 0.52 ) }
    dend_27 { pt3dadd( -288.028, 134.233, -74.5508, 0.29 ) }
    dend_27 { pt3dadd( -288.989, 135.33, -74.7853, 0.29 ) }
    dend_27 { pt3dadd( -289.714, 136.187, -74.9908, 0.44 ) }
    dend_27 { pt3dadd( -290.293, 136.903, -75.1818, 0.44 ) }
    dend_27 { pt3dadd( -291.443, 138.369, -75.6301, 0.29 ) }
    dend_27 { pt3dadd( -292.927, 140.279, -76.3333, 0.29 ) }
    dend_27 { pt3dadd( -294.177, 141.867, -77.0257, 0.22 ) }
    dend_27 { pt3dadd( -295.301, 143.2, -77.683, 0.52 ) }
    dend_27 { pt3dadd( -295.994, 143.963, -78.1129, 0.52 ) }
    dend_27 { pt3dadd( -296.647, 144.619, -78.5291, 0.52 ) }
    dend_27 { pt3dadd( -297.159, 145.074, -78.8606, 0.52 ) }
    dend_27 { pt3dadd( -298.12, 145.796, -79.4643, 0.37 ) }
    dend_27 { pt3dadd( -299.129, 146.465, -80.0472, 0.29 ) }
    dend_27 { pt3dadd( -300.26, 147.159, -80.5974, 0.88 ) }
    dend_27 { pt3dadd( -300.813, 147.49, -80.8233, 1.11 ) }
    dend_27 { pt3dadd( -301.199, 147.733, -80.985, 1.11 ) }
    dend_27 { pt3dadd( -302.557, 148.662, -81.616, 0.44 ) }
    dend_27 { pt3dadd( -303.526, 149.377, -82.1474, 0.59 ) }
    dend_27 { pt3dadd( -305.154, 150.604, -83.0948, 0.29 ) }
    dend_27 { pt3dadd( -306.72, 151.768, -84.0155, 0.29 ) }
    dend_27 { pt3dadd( -308.069, 152.773, -84.8344, 0.81 ) }
    dend_27 { pt3dadd( -308.924, 153.424, -85.3721, 0.74 ) }
    dend_27 { pt3dadd( -309.985, 154.276, -86.0981, 0.29 ) }
    dend_27 { pt3dadd( -311.457, 155.517, -87.2014, 0.59 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 95/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -116.991, 69.1411, 9.16023, 0.29 ) }
    dend_9 { pt3dadd( -118.114, 69.2041, 9.42263, 0.29 ) }
    dend_9 { pt3dadd( -118.708, 69.2374, 9.56133, 0.29 ) }
    dend_9 { pt3dadd( -119.711, 69.2937, 9.79563, 0.29 ) }
    dend_9 { pt3dadd( -129.232, 70.2247, 12.7004, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -116.991, 69.1411, 9.16023, 0.37 ) }
    dend_6 { pt3dadd( -117.791, 70.232, 8.95552, 0.37 ) }
    dend_6 { pt3dadd( -118.437, 71.1131, 8.79019, 0.29 ) }
    dend_6 { pt3dadd( -119.039, 71.935, 8.63597, 0.29 ) }
    dend_6 { pt3dadd( -119.558, 72.6427, 8.50318, 0.29 ) }
    dend_6 { pt3dadd( -119.863, 73.0582, 8.4252, 0.29 ) }
    dend_6 { pt3dadd( -126.169, 80.6242, 8.55641, 0.29 ) }
    dend_6 { pt3dadd( -132.829, 87.8815, 9.04313, 0.29 ) }
    dend_6 { pt3dadd( -140.193, 94.43, 9.85739, 0.29 ) }
    dend_6 { pt3dadd( -148.942, 99.1475, 10.0794, 0.29 ) }
    dend_6 { pt3dadd( -156.928, 104.872, 11.4043, 0.29 ) }
    dend_6 { pt3dadd( -164.814, 110.695, 12.8665, 0.29 ) }
    dend_6 { pt3dadd( -171.611, 117.099, 16.131, 0.29 ) }
    dend_6 { pt3dadd( -178.246, 124.042, 18.4277, 0.29 ) }
    dend_6 { pt3dadd( -183.428, 132.082, 20.6939, 0.29 ) }
    dend_6 { pt3dadd( -187.477, 140.054, 24.7879, 0.29 ) }
    dend_6 { pt3dadd( -190.454, 149.031, 27.3112, 0.29 ) }
    dend_6 { pt3dadd( -194.971, 157.171, 30.4542, 0.29 ) }
    dend_6 { pt3dadd( -200.658, 163.792, 35.0977, 0.29 ) }
    dend_6 { pt3dadd( -207.837, 168.904, 39.6772, 0.29 ) }
    dend_6 { pt3dadd( -214.451, 173.374, 45.6119, 0.29 ) }
    dend_6 { pt3dadd( -221.4, 177.773, 51.2125, 0.29 ) }
    dend_6 { pt3dadd( -228.188, 182.988, 56.2425, 0.29 ) }
    dend_6 { pt3dadd( -235.456, 187.117, 61.6509, 0.29 ) }
    dend_6 { pt3dadd( -241.564, 190.642, 68.6953, 0.29 ) }
    dend_6 { pt3dadd( -247.554, 192.997, 76.3294, 0.29 ) }
    dend_6 { pt3dadd( -253.426, 196.459, 83.6032, 0.29 ) }
    dend_6 { pt3dadd( -259.555, 200.152, 90.5379, 0.29 ) }
    dend_6 { pt3dadd( -265.078, 205.471, 96.8419, 0.29 ) }
    dend_6 { pt3dadd( -271.121, 211.753, 101.53, 0.29 ) }
    dend_6 { pt3dadd( -279.204, 216.447, 104.919, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_68 (entry count 31/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 133.301, 191.447, 4.62909, 0.74 ) }
    dend_70 { pt3dadd( 134.627, 192.543, 4.85441, 0.74 ) }
    dend_70 { pt3dadd( 135.466, 193.346, 5.00494, 0.88 ) }
    dend_70 { pt3dadd( 136.117, 193.969, 5.12183, 0.88 ) }
    dend_70 { pt3dadd( 136.868, 194.688, 5.25654, 0.88 ) }
    dend_70 { pt3dadd( 137.394, 195.191, 5.35095, 0.88 ) }
    dend_70 { pt3dadd( 138.474, 196.225, 5.54465, 0.74 ) }
    dend_70 { pt3dadd( 139.348, 197.128, 5.65589, 0.74 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 39/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 133.301, 191.447, 4.62909, 0.66 ) }
    dend_69 { pt3dadd( 132.233, 192.95, 4.47253, 0.66 ) }
    dend_69 { pt3dadd( 131.717, 193.676, 4.41281, 0.66 ) }
    dend_69 { pt3dadd( 131.118, 194.571, 4.35328, 1.11 ) }
    dend_69 { pt3dadd( 130.397, 195.739, 4.27316, 0.59 ) }
    dend_69 { pt3dadd( 129.765, 196.796, 4.20331, 0.52 ) }
    dend_69 { pt3dadd( 129.32, 197.539, 4.15559, 0.52 ) }
    dend_69 { pt3dadd( 128.751, 198.502, 4.11747, 0.74 ) }
    dend_69 { pt3dadd( 128.249, 199.36, 4.07575, 0.74 ) }
    dend_69 { pt3dadd( 127.759, 200.193, 4.02964, 0.88 ) }
    dend_69 { pt3dadd( 127.0, 201.439, 3.95607, 0.44 ) }
    dend_69 { pt3dadd( 126.244, 202.62, 3.88613, 0.37 ) }
    dend_69 { pt3dadd( 125.804, 203.27, 3.84418, 0.74 ) }
    dend_69 { pt3dadd( 125.44, 203.764, 3.81188, 0.74 ) }
    dend_69 { pt3dadd( 124.709, 204.671, 3.76571, 0.96 ) }
    dend_69 { pt3dadd( 123.899, 205.647, 3.74232, 0.37 ) }
    dend_69 { pt3dadd( 123.381, 206.277, 3.72109, 0.37 ) }
    dend_69 { pt3dadd( 122.912, 206.853, 3.699, 0.59 ) }
    dend_69 { pt3dadd( 122.209, 207.749, 3.65978, 0.59 ) }
    dend_69 { pt3dadd( 121.468, 208.76, 3.603, 0.44 ) }
    dend_69 { pt3dadd( 120.814, 209.701, 3.53426, 0.44 ) }
    dend_69 { pt3dadd( 120.332, 210.427, 3.46819, 0.81 ) }
    dend_69 { pt3dadd( 119.97, 211.001, 3.41709, 1.18 ) }
    dend_69 { pt3dadd( 119.191, 212.302, 3.30561, 0.66 ) }
    dend_69 { pt3dadd( 118.534, 213.446, 3.19322, 0.59 ) }
    dend_69 { pt3dadd( 117.971, 214.462, 3.07573, 0.88 ) }
    dend_69 { pt3dadd( 117.48, 215.35, 2.96186, 0.88 ) }
    dend_69 { pt3dadd( 116.796, 216.587, 2.80311, 0.37 ) }
    dend_69 { pt3dadd( 116.591, 216.953, 2.75037, 0.37 ) }
    dend_69 { pt3dadd( 116.178, 217.651, 2.63268, 0.81 ) }
    dend_69 { pt3dadd( 115.713, 218.385, 2.49699, 0.81 ) }
    dend_69 { pt3dadd( 115.033, 219.409, 2.26906, 0.29 ) }
    dend_69 { pt3dadd( 114.698, 219.873, 2.1486, 0.29 ) }
    dend_69 { pt3dadd( 114.127, 220.591, 1.94714, 0.88 ) }
    dend_69 { pt3dadd( 113.745, 221.041, 1.81674, 0.88 ) }
    dend_69 { pt3dadd( 113.004, 221.874, 1.58403, 0.37 ) }
    dend_69 { pt3dadd( 112.397, 222.533, 1.40952, 0.52 ) }
    dend_69 { pt3dadd( 111.84, 223.118, 1.25699, 0.52 ) }
    dend_69 { pt3dadd( 110.909, 224.07, 1.01944, 0.29 ) }
    dend_69 { pt3dadd( 110.314, 224.664, 0.88964, 0.29 ) }
    dend_69 { pt3dadd( 109.55, 225.431, 0.750935, 0.88 ) }
    dend_69 { pt3dadd( 109.039, 225.944, 0.673932, 1.47 ) }
    dend_69 { pt3dadd( 108.584, 226.406, 0.62129, 1.47 ) }
    dend_69 { pt3dadd( 107.874, 227.148, 0.549913, 1.11 ) }
    dend_69 { pt3dadd( 106.748, 228.346, 0.429437, 0.37 ) }
    dend_69 { pt3dadd( 106.156, 229.0, 0.422377, 0.29 ) }
    dend_69 { pt3dadd( 105.755, 229.476, 0.426571, 0.74 ) }
    dend_69 { pt3dadd( 105.359, 229.964, 0.437037, 0.74 ) }
    dend_69 { pt3dadd( 104.712, 230.81, 0.472983, 0.44 ) }
    dend_69 { pt3dadd( 104.23, 231.487, 0.511819, 1.47 ) }
    dend_69 { pt3dadd( 103.378, 232.791, 0.622653, 1.62 ) }
    dend_69 { pt3dadd( 102.723, 233.843, 0.75867, 0.37 ) }
    dend_69 { pt3dadd( 97.4825, 241.796, -1.69062, 0.37 ) }
    dend_69 { pt3dadd( 91.8633, 249.8, -2.71004, 0.37 ) }
    dend_69 { pt3dadd( 84.2617, 256.023, -3.9242, 0.37 ) }
    dend_69 { pt3dadd( 77.5897, 263.141, -5.40376, 0.37 ) }
    dend_69 { pt3dadd( 71.263, 270.574, -6.76662, 0.37 ) }
    dend_69 { pt3dadd( 64.9923, 277.857, -8.9755, 0.37 ) }
    dend_69 { pt3dadd( 57.9424, 284.49, -10.9791, 0.37 ) }
    dend_69 { pt3dadd( 51.1231, 291.453, -12.5585, 0.37 ) }
    dend_69 { pt3dadd( 44.5227, 297.968, -15.9914, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_69 { pt3dadd( 38.5058, 304.541, -20.2749, 0.37 ) }
    dend_69 { pt3dadd( 33.261, 311.019, -25.5999, 0.37 ) }
    dend_69 { pt3dadd( 27.8781, 318.126, -29.8296, 0.37 ) }
    dend_69 { pt3dadd( 20.6543, 324.17, -32.8921, 0.37 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 4/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 251.094, 58.1247, 16.0994, 0.29 ) }
    dend_67 { pt3dadd( 260.871, 56.0776, 16.0015, 0.29 ) }
    dend_67 { pt3dadd( 270.611, 54.5399, 17.629, 0.29 ) }
    dend_67 { pt3dadd( 280.226, 54.7429, 20.3697, 0.29 ) }
    dend_67 { pt3dadd( 289.213, 55.4968, 24.6871, 0.29 ) }
    dend_67 { pt3dadd( 297.709, 57.6734, 29.4653, 0.29 ) }
    dend_67 { pt3dadd( 305.769, 60.5032, 34.6228, 0.29 ) }
    dend_67 { pt3dadd( 314.517, 63.3004, 38.5276, 0.29 ) }
    dend_67 { pt3dadd( 322.94, 66.9648, 42.392, 0.29 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 13/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 251.094, 58.1247, 16.0994, 0.37 ) }
    dend_64 { pt3dadd( 260.757, 56.0823, 17.5981, 0.29 ) }
    dend_64 { pt3dadd( 270.095, 53.0774, 19.4153, 0.29 ) }
    dend_64 { pt3dadd( 278.913, 48.4896, 19.0793, 0.29 ) }
    dend_64 { pt3dadd( 287.715, 43.9763, 20.1266, 0.29 ) }
    dend_64 { pt3dadd( 296.391, 39.8366, 22.7134, 0.29 ) }
    dend_64 { pt3dadd( 304.545, 35.5293, 26.4543, 0.29 ) }
    dend_64 { pt3dadd( 311.712, 30.9904, 31.6465, 0.29 ) }
    dend_64 { pt3dadd( 319.254, 25.9336, 35.6746, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 22/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 147.427, 34.7583, 20.8213, 0.29 ) }
    dend_56 { pt3dadd( 157.175, 34.3704, 23.0183, 0.29 ) }
    dend_56 { pt3dadd( 166.79, 33.8285, 25.7106, 0.29 ) }
    dend_56 { pt3dadd( 176.75, 33.4239, 26.4982, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 147.427, 34.7583, 20.8213, 0.29 ) }
    dend_51 { pt3dadd( 157.315, 34.2072, 22.2065, 0.29 ) }
    dend_51 { pt3dadd( 166.89, 35.2576, 24.8818, 0.29 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 29/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 205.159, 143.127, -38.2899, 0.29 ) }
    dend_47 { pt3dadd( 214.403, 146.47, -39.9628, 0.29 ) }
    dend_47 { pt3dadd( 223.201, 150.618, -42.0811, 0.29 ) }
    dend_47 { pt3dadd( 232.873, 153.036, -42.6319, 0.29 ) }
    dend_47 { pt3dadd( 242.108, 156.77, -42.8486, 0.29 ) }
    dend_47 { pt3dadd( 251.705, 158.538, -44.9938, 0.29 ) }
    dend_47 { pt3dadd( 261.176, 158.62, -48.203, 0.29 ) }
    dend_47 { pt3dadd( 270.923, 158.615, -50.4396, 0.29 ) }
    dend_47 { pt3dadd( 280.586, 157.711, -52.8399, 0.29 ) }
    dend_47 { pt3dadd( 289.969, 155.273, -55.229, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 39/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 205.159, 143.127, -38.2899, 0.37 ) }
    dend_46 { pt3dadd( 214.176, 146.497, -40.8889, 0.29 ) }
    dend_46 { pt3dadd( 223.877, 148.231, -42.537, 0.29 ) }
    dend_46 { pt3dadd( 233.868, 147.976, -42.8763, 0.29 ) }
    dend_46 { pt3dadd( 243.665, 148.841, -44.6753, 0.29 ) }
    dend_46 { pt3dadd( 253.267, 151.223, -46.0316, 0.29 ) }
    dend_46 { pt3dadd( 262.606, 152.638, -49.2978, 0.29 ) }
    dend_46 { pt3dadd( 271.671, 155.169, -52.6281, 0.29 ) }
    dend_46 { pt3dadd( 280.607, 159.152, -54.4859, 0.29 ) }
    dend_46 { pt3dadd( 290.037, 162.182, -55.6779, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 49/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -230.873, -5.82681, -74.4834, 0.22 ) }
    dend_32 { pt3dadd( -231.437, -6.75109, -74.5968, 0.22 ) }
    dend_32 { pt3dadd( -232.089, -7.70273, -74.7187, 0.22 ) }
    dend_32 { pt3dadd( -232.595, -8.39562, -74.8243, 0.52 ) }
    dend_32 { pt3dadd( -233.349, -9.30397, -74.9718, 0.22 ) }
    dend_32 { pt3dadd( -234.695, -10.7706, -75.2442, 0.22 ) }
    dend_32 { pt3dadd( -235.364, -11.4365, -75.3793, 0.66 ) }
    dend_32 { pt3dadd( -235.968, -11.9133, -75.4975, 0.66 ) }
    dend_32 { pt3dadd( -236.64, -12.3336, -75.6403, 0.22 ) }
    dend_32 { pt3dadd( -238.043, -13.06, -75.9473, 0.22 ) }
    dend_32 { pt3dadd( -238.873, -13.4258, -76.1599, 0.52 ) }
    dend_32 { pt3dadd( -239.538, -13.6931, -76.3521, 0.74 ) }
    dend_32 { pt3dadd( -240.503, -14.1472, -76.6609, 0.22 ) }
    dend_32 { pt3dadd( -241.171, -14.5713, -76.8762, 0.22 ) }
    dend_32 { pt3dadd( -241.663, -15.001, -77.011, 0.59 ) }
    dend_32 { pt3dadd( -242.234, -15.666, -77.1751, 0.81 ) }
    dend_32 { pt3dadd( -242.744, -16.3745, -77.3237, 0.81 ) }
    dend_32 { pt3dadd( -243.575, -17.6657, -77.5732, 0.22 ) }
    dend_32 { pt3dadd( -244.408, -19.0768, -77.8133, 0.22 ) }
    dend_32 { pt3dadd( -245.16, -20.3665, -78.0674, 0.22 ) }
    dend_32 { pt3dadd( -245.761, -21.3074, -78.3008, 0.22 ) }
    dend_32 { pt3dadd( -246.157, -21.8541, -78.4603, 0.96 ) }
    dend_32 { pt3dadd( -246.646, -22.4428, -78.6904, 1.25 ) }
    dend_32 { pt3dadd( -247.068, -22.8498, -78.9102, 1.25 ) }
    dend_32 { pt3dadd( -248.025, -23.6095, -79.4863, 0.81 ) }
    dend_32 { pt3dadd( -248.954, -24.2318, -80.1146, 0.29 ) }
    dend_32 { pt3dadd( -249.786, -24.7018, -80.6956, 0.29 ) }
    dend_32 { pt3dadd( -250.662, -25.1679, -81.3403, 0.29 ) }
    dend_32 { pt3dadd( -251.74, -25.7507, -82.1342, 0.74 ) }
    dend_32 { pt3dadd( -252.239, -26.0304, -82.5073, 0.74 ) }
    dend_32 { pt3dadd( -253.155, -26.5889, -83.2097, 0.52 ) }
    dend_32 { pt3dadd( -253.977, -27.1706, -83.9381, 0.44 ) }
    dend_32 { pt3dadd( -254.827, -27.89, -84.7398, 0.37 ) }
    dend_32 { pt3dadd( -255.482, -28.5972, -85.3271, 0.22 ) }
    dend_32 { pt3dadd( -255.828, -29.0847, -85.6315, 0.66 ) }
    dend_32 { pt3dadd( -256.068, -29.4843, -85.8363, 0.66 ) }
    dend_32 { pt3dadd( -256.59, -30.5064, -86.3397, 0.52 ) }
    dend_32 { pt3dadd( -257.019, -31.4624, -86.9015, 0.29 ) }
    dend_32 { pt3dadd( -257.523, -32.6869, -87.7449, 0.22 ) }
    dend_32 { pt3dadd( -257.982, -33.7645, -88.5734, 0.22 ) }
    dend_32 { pt3dadd( -258.301, -34.4479, -89.1142, 0.66 ) }
    dend_32 { pt3dadd( -258.83, -35.4097, -89.8764, 1.03 ) }
    dend_32 { pt3dadd( -259.628, -36.6256, -90.8783, 0.81 ) }
    dend_32 { pt3dadd( -260.11, -37.2551, -91.4371, 0.29 ) }
    dend_32 { pt3dadd( -260.746, -37.869, -92.0259, 0.29 ) }
    dend_32 { pt3dadd( -261.249, -38.2047, -92.3145, 0.22 ) }
    dend_32 { pt3dadd( -262.383, -38.8445, -92.7354, 0.22 ) }
    dend_32 { pt3dadd( -263.081, -39.2194, -92.8886, 0.74 ) }
    dend_32 { pt3dadd( -263.95, -39.7163, -93.007, 0.15 ) }
    dend_32 { pt3dadd( -264.83, -40.3298, -93.1951, 0.15 ) }
    dend_32 { pt3dadd( -265.333, -40.869, -93.3899, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -265.945, -41.9197, -93.8157, 0.59 ) }
    dend_32 { pt3dadd( -266.135, -42.422, -94.0317, 0.88 ) }
    dend_32 { pt3dadd( -266.322, -43.0754, -94.2839, 0.88 ) }
    dend_32 { pt3dadd( -266.569, -44.0616, -94.656, 0.66 ) }
    dend_32 { pt3dadd( -266.723, -44.7406, -94.9015, 0.52 ) }
    dend_32 { pt3dadd( -266.94, -45.757, -95.2648, 0.81 ) }
    dend_32 { pt3dadd( -267.124, -46.5051, -95.539, 0.88 ) }
    dend_32 { pt3dadd( -267.324, -47.2928, -95.8562, 0.22 ) }
    dend_32 { pt3dadd( -267.533, -48.0936, -96.2034, 0.22 ) }
    dend_32 { pt3dadd( -267.741, -48.8995, -96.5668, 0.74 ) }
    dend_32 { pt3dadd( -267.864, -49.429, -96.8121, 0.74 ) }
    dend_32 { pt3dadd( -268.059, -50.3168, -97.2215, 0.52 ) }
    dend_32 { pt3dadd( -268.263, -51.4166, -97.73, 0.74 ) }
    dend_32 { pt3dadd( -268.327, -51.8375, -97.9216, 0.74 ) }
    dend_32 { pt3dadd( -268.438, -53.0472, -98.4517, 0.22 ) }
    dend_32 { pt3dadd( -268.475, -53.9105, -98.8128, 0.22 ) }
    dend_32 { pt3dadd( -268.477, -54.4711, -99.0542, 1.18 ) }
    dend_32 { pt3dadd( -268.468, -55.4412, -99.4617, 1.33 ) }
    dend_32 { pt3dadd( -268.478, -55.9089, -99.6473, 1.33 ) }
    dend_32 { pt3dadd( -268.57, -57.5784, -100.233, 0.22 ) }
    dend_32 { pt3dadd( -268.663, -58.4415, -100.501, 0.22 ) }
    dend_32 { pt3dadd( -268.887, -59.918, -100.903, 0.52 ) }
    dend_32 { pt3dadd( -269.07, -60.9393, -101.143, 0.52 ) }
    dend_32 { pt3dadd( -269.36, -62.4507, -101.451, 0.52 ) }
    dend_32 { pt3dadd( -269.704, -64.2612, -101.86, 0.66 ) }
    dend_32 { pt3dadd( -269.966, -65.6294, -102.171, 0.52 ) }
    dend_32 { pt3dadd( -270.14, -66.7638, -102.439, 0.22 ) }
    dend_32 { pt3dadd( -270.237, -67.8857, -102.723, 0.66 ) }
    dend_32 { pt3dadd( -270.218, -68.6307, -102.954, 0.81 ) }
    dend_32 { pt3dadd( -269.876, -70.8495, -103.767, 0.22 ) }
    dend_32 { pt3dadd( -269.674, -71.5559, -104.049, 0.22 ) }
    dend_32 { pt3dadd( -269.435, -72.2162, -104.33, 0.81 ) }
    dend_32 { pt3dadd( -269.242, -72.7801, -104.575, 0.81 ) }
    dend_32 { pt3dadd( -269.086, -73.441, -104.847, 0.81 ) }
    dend_32 { pt3dadd( -269.029, -74.2715, -105.137, 0.22 ) }
    dend_32 { pt3dadd( -269.13, -75.2581, -105.425, 0.22 ) }
    dend_32 { pt3dadd( -269.489, -76.4442, -105.8, 0.22 ) }
    dend_32 { pt3dadd( -269.878, -77.2121, -106.112, 0.66 ) }
    dend_32 { pt3dadd( -270.531, -78.1856, -106.613, 0.88 ) }
    dend_32 { pt3dadd( -271.28, -79.0597, -107.167, 1.03 ) }
    dend_32 { pt3dadd( -271.878, -79.6128, -107.577, 1.03 ) }
    dend_32 { pt3dadd( -272.733, -80.2849, -108.11, 0.59 ) }
    dend_32 { pt3dadd( -273.933, -81.1712, -108.793, 0.44 ) }
    dend_32 { pt3dadd( -274.812, -81.8602, -109.298, 0.96 ) }
    dend_32 { pt3dadd( -275.317, -82.2794, -109.58, 0.96 ) }
    dend_32 { pt3dadd( -276.696, -83.3979, -110.334, 0.44 ) }
    dend_32 { pt3dadd( -277.4, -83.993, -110.694, 0.66 ) }
    dend_32 { pt3dadd( -278.081, -84.6387, -110.994, 0.44 ) }
    dend_32 { pt3dadd( -278.946, -85.5654, -111.234, 0.44 ) }
    dend_32 { pt3dadd( -279.435, -86.1356, -111.321, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 50/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -230.873, -5.82681, -74.4834, 0.22 ) }
    dend_31 { pt3dadd( -231.896, -5.79862, -74.8732, 0.22 ) }
    dend_31 { pt3dadd( -232.701, -5.72433, -75.1747, 0.66 ) }
    dend_31 { pt3dadd( -233.232, -5.6407, -75.3611, 0.66 ) }
    dend_31 { pt3dadd( -234.343, -5.43871, -75.719, 0.22 ) }
    dend_31 { pt3dadd( -235.734, -5.16642, -76.1893, 0.37 ) }
    dend_31 { pt3dadd( -236.798, -4.94987, -76.5879, 0.37 ) }
    dend_31 { pt3dadd( -238.268, -4.61553, -77.2013, 0.22 ) }
    dend_31 { pt3dadd( -239.1, -4.42941, -77.5834, 0.22 ) }
    dend_31 { pt3dadd( -239.891, -4.26037, -77.9519, 0.22 ) }
    dend_31 { pt3dadd( -240.961, -4.06037, -78.4659, 0.59 ) }
    dend_31 { pt3dadd( -242.091, -3.91038, -79.0072, 0.37 ) }
    dend_31 { pt3dadd( -242.721, -3.87557, -79.3144, 0.52 ) }
    dend_31 { pt3dadd( -243.131, -3.90414, -79.5436, 0.52 ) }
    dend_31 { pt3dadd( -244.216, -4.06778, -80.1507, 0.22 ) }
    dend_31 { pt3dadd( -245.279, -4.31675, -80.7313, 0.22 ) }
    dend_31 { pt3dadd( -246.124, -4.5887, -81.1534, 0.88 ) }
    dend_31 { pt3dadd( -246.886, -4.90119, -81.5284, 0.88 ) }
    dend_31 { pt3dadd( -248.524, -5.72552, -82.445, 0.37 ) }
    dend_31 { pt3dadd( -249.421, -6.24341, -83.012, 0.29 ) }
    dend_31 { pt3dadd( -250.116, -6.69005, -83.4903, 0.29 ) }
    dend_31 { pt3dadd( -250.524, -6.96653, -83.7788, 0.29 ) }
    dend_31 { pt3dadd( -251.446, -7.59789, -84.4326, 0.29 ) }
    dend_31 { pt3dadd( -252.658, -8.42908, -85.3084, 0.74 ) }
    dend_31 { pt3dadd( -253.073, -8.70339, -85.5964, 0.74 ) }
    dend_31 { pt3dadd( -253.999, -9.26276, -86.2657, 0.22 ) }
    dend_31 { pt3dadd( -254.564, -9.53363, -86.6546, 0.22 ) }
    dend_31 { pt3dadd( -255.178, -9.78702, -87.042, 0.66 ) }
    dend_31 { pt3dadd( -255.779, -10.0064, -87.3793, 0.88 ) }
    dend_31 { pt3dadd( -256.828, -10.3507, -87.9407, 0.37 ) }
    dend_31 { pt3dadd( -257.4, -10.5407, -88.2643, 0.37 ) }
    dend_31 { pt3dadd( -258.028, -10.751, -88.6285, 0.29 ) }
    dend_31 { pt3dadd( -258.92, -11.0375, -89.158, 0.29 ) }
    dend_31 { pt3dadd( -260.085, -11.3843, -89.809, 0.66 ) }
    dend_31 { pt3dadd( -260.683, -11.5315, -90.1367, 0.66 ) }
    dend_31 { pt3dadd( -262.008, -11.8234, -90.8294, 0.52 ) }
    dend_31 { pt3dadd( -262.749, -11.9732, -91.1799, 0.37 ) }
    dend_31 { pt3dadd( -263.578, -12.0957, -91.543, 0.59 ) }
    dend_31 { pt3dadd( -265.177, -12.1631, -92.1649, 0.29 ) }
    dend_31 { pt3dadd( -266.194, -12.0723, -92.5053, 0.29 ) }
    dend_31 { pt3dadd( -267.092, -11.8874, -92.7995, 0.29 ) }
    dend_31 { pt3dadd( -267.973, -11.6179, -93.1037, 0.29 ) }
    dend_31 { pt3dadd( -268.765, -11.3189, -93.4346, 0.52 ) }
    dend_31 { pt3dadd( -269.496, -10.9886, -93.8068, 0.52 ) }
    dend_31 { pt3dadd( -270.438, -10.4702, -94.3935, 0.74 ) }
    dend_31 { pt3dadd( -271.956, -9.64124, -95.4263, 0.52 ) }
    dend_31 { pt3dadd( -272.858, -9.17035, -96.0704, 0.81 ) }
    dend_31 { pt3dadd( -274.225, -8.55494, -97.052, 0.96 ) }
    dend_31 { pt3dadd( -275.253, -8.14193, -97.7635, 0.96 ) }
    dend_31 { pt3dadd( -276.138, -7.81007, -98.35, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_31 { pt3dadd( -277.594, -7.26744, -99.2217, 0.59 ) }
    dend_31 { pt3dadd( -278.574, -6.85982, -99.7436, 0.59 ) }
    dend_31 { pt3dadd( -279.848, -6.2308, -100.376, 0.44 ) }
    dend_31 { pt3dadd( -280.926, -5.69177, -100.832, 0.44 ) }
    dend_31 { pt3dadd( -281.735, -5.3004, -101.135, 0.66 ) }
    dend_31 { pt3dadd( -282.706, -4.81812, -101.479, 0.88 ) }
    dend_31 { pt3dadd( -283.165, -4.56903, -101.645, 0.88 ) }
    dend_31 { pt3dadd( -284.519, -3.81276, -102.161, 0.66 ) }
    dend_31 { pt3dadd( -286.206, -2.87365, -102.83, 0.29 ) }
    dend_31 { pt3dadd( -287.169, -2.35523, -103.237, 0.29 ) }
    dend_31 { pt3dadd( -287.852, -1.95926, -103.549, 0.52 ) }
    dend_31 { pt3dadd( -288.482, -1.55248, -103.871, 0.52 ) }
    dend_31 { pt3dadd( -289.196, -0.976386, -104.267, 0.44 ) }
    dend_31 { pt3dadd( -289.83, -0.222512, -104.689, 0.52 ) }
    dend_31 { pt3dadd( -290.236, 0.55315, -105.067, 0.44 ) }
    dend_31 { pt3dadd( -290.638, 1.51871, -105.49, 0.88 ) }
    dend_31 { pt3dadd( -290.853, 2.08592, -105.727, 0.88 ) }
    dend_31 { pt3dadd( -291.317, 3.29043, -106.184, 0.44 ) }
    dend_31 { pt3dadd( -291.854, 4.51308, -106.628, 1.03 ) }
    dend_31 { pt3dadd( -292.24, 5.25716, -106.887, 1.03 ) }
    dend_31 { pt3dadd( -292.963, 6.42188, -107.294, 0.29 ) }
    dend_31 { pt3dadd( -293.875, 7.75079, -107.758, 0.81 ) }
    dend_31 { pt3dadd( -294.528, 8.61485, -108.099, 0.22 ) }
    dend_31 { pt3dadd( -295.154, 9.35503, -108.418, 0.22 ) }
    dend_31 { pt3dadd( -295.479, 9.71183, -108.568, 0.22 ) }
    dend_31 { pt3dadd( -296.179, 10.4542, -108.853, 0.22 ) }
    dend_31 { pt3dadd( -296.962, 11.2759, -109.138, 0.22 ) }
    dend_31 { pt3dadd( -298.027, 12.425, -109.442, 0.29 ) }
    dend_31 { pt3dadd( -299.023, 13.5451, -109.81, 0.29 ) }
    dend_31 { pt3dadd( -300.081, 14.7762, -110.245, 0.29 ) }
    dend_31 { pt3dadd( -301.611, 16.5349, -110.879, 0.29 ) }
    dend_31 { pt3dadd( -302.632, 17.6826, -111.277, 0.29 ) }
    dend_31 { pt3dadd( -303.45, 18.6128, -111.576, 0.22 ) }
    dend_31 { pt3dadd( -305.177, 20.6994, -112.331, 0.37 ) }
    dend_31 { pt3dadd( -305.747, 21.4338, -112.664, 0.59 ) }
    dend_31 { pt3dadd( -306.289, 22.1821, -113.092, 0.59 ) }
    dend_31 { pt3dadd( -306.995, 23.2299, -113.842, 0.37 ) }
    dend_31 { pt3dadd( -307.515, 24.0414, -114.491, 0.74 ) }
    dend_31 { pt3dadd( -308.532, 25.6344, -115.82, 0.52 ) }
    dend_31 { pt3dadd( -308.878, 26.1967, -116.253, 0.37 ) }
    dend_31 { pt3dadd( -309.522, 27.2987, -117.231, 0.29 ) }
    dend_31 { pt3dadd( -309.972, 28.1159, -118.073, 0.15 ) }
    dend_31 { pt3dadd( -310.176, 28.502, -118.552, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 43/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -311.457, 155.517, -87.2014, 0.29 ) }
    dend_29 { pt3dadd( -312.414, 156.43, -87.5965, 0.29 ) }
    dend_29 { pt3dadd( -313.643, 157.648, -88.0928, 0.81 ) }
    dend_29 { pt3dadd( -314.124, 158.145, -88.314, 0.81 ) }
    dend_29 { pt3dadd( -314.714, 158.76, -88.5781, 0.52 ) }
    dend_29 { pt3dadd( -315.508, 159.585, -88.9174, 0.74 ) }
    dend_29 { pt3dadd( -316.501, 160.599, -89.3225, 0.29 ) }
    dend_29 { pt3dadd( -317.423, 161.474, -89.6531, 0.29 ) }
    dend_29 { pt3dadd( -318.581, 162.586, -90.0275, 0.29 ) }
    dend_29 { pt3dadd( -319.561, 163.586, -90.3605, 0.37 ) }
    dend_29 { pt3dadd( -320.033, 164.097, -90.5269, 0.74 ) }
    dend_29 { pt3dadd( -320.789, 164.926, -90.7973, 1.03 ) }
    dend_29 { pt3dadd( -322.014, 166.235, -91.2356, 0.29 ) }
    dend_29 { pt3dadd( -322.611, 166.855, -91.4417, 0.29 ) }
    dend_29 { pt3dadd( -323.337, 167.598, -91.7236, 0.44 ) }
    dend_29 { pt3dadd( -324.072, 168.35, -92.0652, 0.81 ) }
    dend_29 { pt3dadd( -324.575, 168.856, -92.3173, 0.81 ) }
    dend_29 { pt3dadd( -324.992, 169.256, -92.5517, 0.81 ) }
    dend_29 { pt3dadd( -325.783, 169.934, -93.0103, 0.37 ) }
    dend_29 { pt3dadd( -326.839, 170.662, -93.6084, 1.03 ) }
    dend_29 { pt3dadd( -327.327, 170.937, -93.8775, 1.03 ) }
    dend_29 { pt3dadd( -327.983, 171.238, -94.2074, 1.03 ) }
    dend_29 { pt3dadd( -328.959, 171.612, -94.6578, 0.52 ) }
    dend_29 { pt3dadd( -329.79, 171.863, -95.0061, 0.37 ) }
    dend_29 { pt3dadd( -331.079, 172.157, -95.4749, 1.18 ) }
    dend_29 { pt3dadd( -331.961, 172.302, -95.7391, 1.4 ) }
    dend_29 { pt3dadd( -333.242, 172.452, -96.0675, 0.29 ) }
    dend_29 { pt3dadd( -334.297, 172.541, -96.2981, 0.29 ) }
    dend_29 { pt3dadd( -335.675, 172.644, -96.534, 0.59 ) }
    dend_29 { pt3dadd( -336.479, 172.713, -96.6485, 0.81 ) }
    dend_29 { pt3dadd( -337.506, 172.82, -96.7477, 0.81 ) }
    dend_29 { pt3dadd( -339.216, 173.009, -96.88, 0.29 ) }
    dend_29 { pt3dadd( -339.893, 173.097, -96.9236, 0.29 ) }
    dend_29 { pt3dadd( -340.569, 173.22, -96.9513, 0.81 ) }
    dend_29 { pt3dadd( -341.806, 173.517, -96.9865, 0.81 ) }
    dend_29 { pt3dadd( -343.064, 173.88, -97.0574, 0.52 ) }
    dend_29 { pt3dadd( -344.286, 174.292, -97.1519, 0.81 ) }
    dend_29 { pt3dadd( -345.405, 174.715, -97.2564, 0.81 ) }
    dend_29 { pt3dadd( -347.116, 175.358, -97.4238, 0.29 ) }
    dend_29 { pt3dadd( -347.815, 175.627, -97.5091, 0.29 ) }
    dend_29 { pt3dadd( -348.75, 176.012, -97.687, 0.81 ) }
    dend_29 { pt3dadd( -349.537, 176.375, -97.8802, 0.81 ) }
    dend_29 { pt3dadd( -350.304, 176.768, -98.1062, 0.81 ) }
    dend_29 { pt3dadd( -351.665, 177.535, -98.5361, 0.37 ) }
    dend_29 { pt3dadd( -352.88, 178.275, -98.9497, 0.37 ) }
    dend_29 { pt3dadd( -354.168, 179.121, -99.3748, 0.59 ) }
    dend_29 { pt3dadd( -354.976, 179.719, -99.6229, 0.59 ) }
    dend_29 { pt3dadd( -355.396, 180.072, -99.7545, 0.59 ) }
    dend_29 { pt3dadd( -356.627, 181.25, -100.133, 0.29 ) }
    dend_29 { pt3dadd( -357.475, 182.145, -100.409, 0.52 ) }
    dend_29 { pt3dadd( -357.963, 182.659, -100.551, 0.66 ) }
    dend_29 { pt3dadd( -359.108, 183.829, -100.864, 0.22 ) }
    dend_29 { pt3dadd( -359.923, 184.632, -101.085, 1.18 ) }
    dend_29 { pt3dadd( -360.506, 185.194, -101.228, 1.18 ) }
    dend_29 { pt3dadd( -361.779, 186.429, -101.506, 0.22 ) }
    dend_29 { pt3dadd( -362.578, 187.16, -101.645, 0.22 ) }
    dend_29 { pt3dadd( -363.026, 187.545, -101.71, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_29 { pt3dadd( -363.691, 188.079, -101.777, 0.74 ) }
    dend_29 { pt3dadd( -364.267, 188.538, -101.813, 0.74 ) }
    dend_29 { pt3dadd( -365.279, 189.367, -101.844, 0.81 ) }
    dend_29 { pt3dadd( -366.57, 190.516, -101.839, 0.22 ) }
    dend_29 { pt3dadd( -367.287, 191.195, -101.853, 0.22 ) }
    dend_29 { pt3dadd( -368.007, 191.922, -101.89, 0.88 ) }
    dend_29 { pt3dadd( -368.575, 192.507, -101.95, 1.18 ) }
    dend_29 { pt3dadd( -368.941, 192.893, -101.995, 1.18 ) }
    dend_29 { pt3dadd( -369.695, 193.709, -102.097, 0.44 ) }
    dend_29 { pt3dadd( -370.381, 194.491, -102.195, 0.22 ) }
    dend_29 { pt3dadd( -371.071, 195.272, -102.322, 0.81 ) }
    dend_29 { pt3dadd( -371.418, 195.658, -102.4, 0.81 ) }
    dend_29 { pt3dadd( -372.095, 196.337, -102.574, 0.29 ) }
    dend_29 { pt3dadd( -372.599, 196.797, -102.707, 0.29 ) }
    dend_29 { pt3dadd( -373.002, 197.136, -102.81, 0.81 ) }
    dend_29 { pt3dadd( -373.564, 197.586, -102.949, 0.96 ) }
    dend_29 { pt3dadd( -374.053, 197.967, -103.061, 0.96 ) }
    dend_29 { pt3dadd( -375.654, 199.2, -103.41, 0.22 ) }
    dend_29 { pt3dadd( -376.376, 199.752, -103.554, 0.22 ) }
    dend_29 { pt3dadd( -376.952, 200.173, -103.648, 0.66 ) }
    dend_29 { pt3dadd( -377.545, 200.585, -103.732, 1.03 ) }
    dend_29 { pt3dadd( -377.971, 200.869, -103.791, 1.03 ) }
    dend_29 { pt3dadd( -378.875, 201.457, -103.923, 0.29 ) }
    dend_29 { pt3dadd( -379.321, 201.735, -103.991, 0.29 ) }
    dend_29 { pt3dadd( -380.299, 202.316, -104.155, 0.66 ) }
    dend_29 { pt3dadd( -380.925, 202.672, -104.264, 0.66 ) }
    dend_29 { pt3dadd( -382.14, 203.324, -104.463, 0.29 ) }
    dend_29 { pt3dadd( -382.686, 203.606, -104.519, 0.29 ) }
    dend_29 { pt3dadd( -383.428, 203.962, -104.562, 0.74 ) }
    dend_29 { pt3dadd( -383.996, 204.222, -104.586, 0.52 ) }
    dend_29 { pt3dadd( -384.539, 204.471, -104.596, 0.52 ) }
    dend_29 { pt3dadd( -385.487, 204.919, -104.59, 0.37 ) }
    dend_29 { pt3dadd( -386.556, 205.426, -104.61, 0.81 ) }
    dend_29 { pt3dadd( -387.43, 205.842, -104.655, 1.03 ) }
    dend_29 { pt3dadd( -388.23, 206.202, -104.733, 1.03 ) }
    dend_29 { pt3dadd( -389.33, 206.671, -104.882, 0.59 ) }
    dend_29 { pt3dadd( -390.756, 207.261, -105.125, 0.44 ) }
    dend_29 { pt3dadd( -392.025, 207.771, -105.378, 0.29 ) }
    dend_29 { pt3dadd( -393.616, 208.399, -105.735, 0.29 ) }
    dend_29 { pt3dadd( -395.148, 209.004, -106.068, 0.81 ) }
    dend_29 { pt3dadd( -396.199, 209.387, -106.292, 1.03 ) }
    dend_29 { pt3dadd( -397.086, 209.686, -106.493, 1.03 ) }
    dend_29 { pt3dadd( -398.06, 209.997, -106.709, 0.37 ) }
    dend_29 { pt3dadd( -398.858, 210.259, -106.88, 0.52 ) }
    dend_29 { pt3dadd( -399.466, 210.467, -107.016, 0.52 ) }
    dend_29 { pt3dadd( -400.497, 210.815, -107.232, 0.29 ) }
    dend_29 { pt3dadd( -401.185, 211.026, -107.365, 0.29 ) }
    dend_29 { pt3dadd( -402.256, 211.314, -107.553, 0.96 ) }
    dend_29 { pt3dadd( -402.869, 211.455, -107.651, 1.11 ) }
    dend_29 { pt3dadd( -404.312, 211.783, -107.864, 0.44 ) }
    dend_29 { pt3dadd( -406.194, 212.288, -108.121, 0.44 ) }
    dend_29 { pt3dadd( -407.124, 212.626, -108.241, 0.66 ) }
    dend_29 { pt3dadd( -408.104, 213.098, -108.367, 0.88 ) }
    dend_29 { pt3dadd( -409.097, 213.733, -108.525, 0.88 ) }
    dend_29 { pt3dadd( -410.043, 214.533, -108.717, 0.52 ) }
    dend_29 { pt3dadd( -410.797, 215.413, -108.934, 0.44 ) }
    dend_29 { pt3dadd( -411.622, 216.715, -109.281, 0.44 ) }
    dend_29 { pt3dadd( -412.179, 217.734, -109.584, 0.59 ) }
    dend_29 { pt3dadd( -412.638, 218.596, -109.873, 0.81 ) }
    dend_29 { pt3dadd( -413.221, 219.536, -110.23, 0.96 ) }
    dend_29 { pt3dadd( -413.536, 219.922, -110.413, 0.96 ) }
    dend_29 { pt3dadd( -414.361, 220.684, -110.853, 0.59 ) }
    dend_29 { pt3dadd( -415.505, 221.5, -111.418, 0.44 ) }
    dend_29 { pt3dadd( -417.059, 222.425, -112.114, 0.44 ) }
    dend_29 { pt3dadd( -418.819, 223.358, -112.814, 0.96 ) }
    dend_29 { pt3dadd( -420.078, 224.002, -113.258, 1.18 ) }
    dend_29 { pt3dadd( -420.617, 224.276, -113.427, 1.18 ) }
    dend_29 { pt3dadd( -421.527, 224.744, -113.678, 0.52 ) }
    dend_29 { pt3dadd( -422.696, 225.373, -113.952, 0.52 ) }
    dend_29 { pt3dadd( -423.742, 226.004, -114.139, 0.81 ) }
    dend_29 { pt3dadd( -425.066, 226.877, -114.32, 0.96 ) }
    dend_29 { pt3dadd( -426.715, 227.99, -114.466, 0.88 ) }
    dend_29 { pt3dadd( -427.264, 228.365, -114.5, 0.88 ) }
    dend_29 { pt3dadd( -429.164, 229.597, -114.579, 0.66 ) }
    dend_29 { pt3dadd( -430.599, 230.433, -114.631, 0.52 ) }
    dend_29 { pt3dadd( -431.753, 230.988, -114.671, 0.52 ) }
    dend_29 { pt3dadd( -433.411, 231.6, -114.724, 0.44 ) }
    dend_29 { pt3dadd( -434.58, 231.881, -114.776, 0.44 ) }
    dend_29 { pt3dadd( -435.942, 232.012, -114.92, 0.37 ) }
    dend_29 { pt3dadd( -436.943, 231.968, -115.116, 0.37 ) }
    dend_29 { pt3dadd( -438.593, 231.828, -115.56, 0.81 ) }
    dend_29 { pt3dadd( -439.269, 231.846, -115.747, 0.81 ) }
    dend_29 { pt3dadd( -440.634, 232.077, -116.129, 0.52 ) }
    dend_29 { pt3dadd( -442.183, 232.488, -116.55, 0.37 ) }
    dend_29 { pt3dadd( -443.531, 232.959, -116.921, 0.37 ) }
    dend_29 { pt3dadd( -445.353, 233.713, -117.413, 0.22 ) }
    dend_29 { pt3dadd( -448.687, 235.284, -118.325, 0.22 ) }
    dend_29 { pt3dadd( -450.943, 236.41, -118.987, 0.22 ) }
    dend_29 { pt3dadd( -452.746, 237.37, -119.496, 0.22 ) }
    dend_29 { pt3dadd( -453.901, 238.001, -119.821, 0.22 ) }
    dend_29 { pt3dadd( -455.307, 238.748, -120.234, 0.22 ) }
    dend_29 { pt3dadd( -456.925, 239.559, -120.788, 0.22 ) }
    dend_29 { pt3dadd( -458.044, 240.059, -121.287, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 93/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -311.457, 155.517, -87.2014, 0.52 ) }
    dend_28 { pt3dadd( -314.625, 157.246, -86.677, 0.52 ) }
    dend_28 { pt3dadd( -315.388, 157.67, -86.629, 0.37 ) }
    dend_28 { pt3dadd( -316.089, 158.048, -86.6327, 0.37 ) }
    dend_28 { pt3dadd( -317.951, 159.028, -86.7151, 0.22 ) }
    dend_28 { pt3dadd( -319.382, 159.77, -86.8456, 0.22 ) }
    dend_28 { pt3dadd( -321.001, 160.592, -87.0387, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_28 { pt3dadd( -322.397, 161.296, -87.3523, 0.74 ) }
    dend_28 { pt3dadd( -323.31, 161.738, -87.5604, 0.74 ) }
    dend_28 { pt3dadd( -324.506, 162.291, -87.825, 0.29 ) }
    dend_28 { pt3dadd( -325.491, 162.727, -88.0312, 0.52 ) }
    dend_28 { pt3dadd( -327.159, 163.444, -88.3389, 0.29 ) }
    dend_28 { pt3dadd( -328.599, 164.032, -88.5686, 0.22 ) }
    dend_28 { pt3dadd( -329.08, 164.223, -88.6364, 0.44 ) }
    dend_28 { pt3dadd( -330.511, 164.781, -88.7897, 0.22 ) }
    dend_28 { pt3dadd( -331.642, 165.193, -88.8857, 0.22 ) }
    dend_28 { pt3dadd( -332.345, 165.424, -88.931, 0.81 ) }
    dend_28 { pt3dadd( -332.748, 165.531, -88.9581, 0.81 ) }
    dend_28 { pt3dadd( -333.116, 165.599, -88.9854, 0.81 ) }
    dend_28 { pt3dadd( -335.541, 165.801, -89.1621, 0.29 ) }
    dend_28 { pt3dadd( -337.427, 165.742, -89.2622, 0.29 ) }
    dend_28 { pt3dadd( -338.166, 165.615, -89.31, 0.66 ) }
    dend_28 { pt3dadd( -339.523, 165.188, -89.4276, 0.22 ) }
    dend_28 { pt3dadd( -340.578, 164.65, -89.5452, 0.22 ) }
    dend_28 { pt3dadd( -341.61, 163.935, -89.7049, 0.44 ) }
    dend_28 { pt3dadd( -342.303, 163.329, -89.8493, 0.44 ) }
    dend_28 { pt3dadd( -343.561, 162.155, -90.1606, 0.22 ) }
    dend_28 { pt3dadd( -344.179, 161.575, -90.3344, 0.22 ) }
    dend_28 { pt3dadd( -345.854, 159.997, -90.9134, 0.22 ) }
    dend_28 { pt3dadd( -346.77, 159.176, -91.2581, 0.59 ) }
    dend_28 { pt3dadd( -347.433, 158.595, -91.5152, 0.59 ) }
    dend_28 { pt3dadd( -348.365, 157.803, -91.8672, 0.37 ) }
    dend_28 { pt3dadd( -349.604, 156.788, -92.2726, 0.22 ) }
    dend_28 { pt3dadd( -350.423, 156.105, -92.5131, 0.22 ) }
    dend_28 { pt3dadd( -351.113, 155.479, -92.7085, 0.66 ) }
    dend_28 { pt3dadd( -352.442, 154.157, -93.0415, 0.29 ) }
    dend_28 { pt3dadd( -352.992, 153.567, -93.1652, 0.74 ) }
    dend_28 { pt3dadd( -353.362, 153.122, -93.242, 0.74 ) }
    dend_28 { pt3dadd( -354.307, 151.91, -93.4383, 0.44 ) }
    dend_28 { pt3dadd( -355.271, 150.608, -93.6467, 0.22 ) }
    dend_28 { pt3dadd( -355.516, 150.273, -93.7074, 0.59 ) }
    dend_28 { pt3dadd( -355.894, 149.759, -93.8119, 0.59 ) }
    dend_28 { pt3dadd( -356.937, 148.347, -94.1087, 0.29 ) }
    dend_28 { pt3dadd( -357.716, 147.375, -94.3251, 0.74 ) }
    dend_28 { pt3dadd( -358.216, 146.851, -94.4632, 0.74 ) }
    dend_28 { pt3dadd( -359.466, 145.764, -94.7766, 0.29 ) }
    dend_28 { pt3dadd( -360.153, 145.271, -94.9517, 0.88 ) }
    dend_28 { pt3dadd( -360.911, 144.868, -95.1437, 0.88 ) }
    dend_28 { pt3dadd( -362.274, 144.418, -95.4691, 0.44 ) }
    dend_28 { pt3dadd( -363.491, 144.171, -95.7587, 0.81 ) }
    dend_28 { pt3dadd( -364.127, 144.12, -95.9231, 0.81 ) }
    dend_28 { pt3dadd( -365.01, 144.157, -96.1794, 0.66 ) }
    dend_28 { pt3dadd( -366.14, 144.311, -96.5128, 0.44 ) }
    dend_28 { pt3dadd( -367.333, 144.56, -96.9351, 0.66 ) }
    dend_28 { pt3dadd( -368.125, 144.753, -97.2383, 0.66 ) }
    dend_28 { pt3dadd( -369.01, 144.954, -97.5771, 0.44 ) }
    dend_28 { pt3dadd( -369.77, 145.096, -97.8698, 0.74 ) }
    dend_28 { pt3dadd( -370.306, 145.178, -98.0735, 0.74 ) }
    dend_28 { pt3dadd( -372.069, 145.421, -98.7799, 0.29 ) }
    dend_28 { pt3dadd( -373.002, 145.547, -99.1832, 0.15 ) }
    dend_28 { pt3dadd( -374.297, 145.736, -99.7849, 0.81 ) }
    dend_28 { pt3dadd( -374.857, 145.809, -100.046, 0.81 ) }
    dend_28 { pt3dadd( -376.191, 145.986, -100.666, 0.52 ) }
    dend_28 { pt3dadd( -376.881, 146.074, -100.985, 0.52 ) }
    dend_28 { pt3dadd( -378.209, 146.279, -101.563, 0.37 ) }
    dend_28 { pt3dadd( -379.651, 146.553, -102.304, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 59/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -129.232, 70.2247, 12.7004, 0.29 ) }
    dend_11 { pt3dadd( -138.667, 71.2449, 15.8449, 0.29 ) }
    dend_11 { pt3dadd( -148.424, 72.1709, 17.8182, 0.29 ) }
    dend_11 { pt3dadd( -158.411, 72.659, 17.686, 0.29 ) }
    dend_11 { pt3dadd( -168.256, 74.3581, 17.8824, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -129.232, 70.2247, 12.7004, 0.29 ) }
    dend_10 { pt3dadd( -138.878, 70.9612, 15.2258, 0.29 ) }
    dend_10 { pt3dadd( -148.327, 72.9593, 17.7784, 0.29 ) }
    dend_10 { pt3dadd( -158.065, 75.0512, 18.5358, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 68/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -279.204, 216.447, 104.919, 0.29 ) }
    dend_8 { pt3dadd( -285.706, 222.946, 108.563, 0.29 ) }
    dend_8 { pt3dadd( -293.364, 228.535, 111.479, 0.29 ) }
    dend_8 { pt3dadd( -301.389, 233.953, 113.653, 0.29 ) }
    dend_8 { pt3dadd( -309.06, 240.175, 114.308, 0.29 ) }
    dend_8 { pt3dadd( -316.709, 246.417, 115.019, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 74/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -279.204, 216.447, 104.919, 0.29 ) }
    dend_7 { pt3dadd( -286.002, 222.381, 109.011, 0.29 ) }
    dend_7 { pt3dadd( -291.469, 230.207, 111.396, 0.29 ) }
    dend_7 { pt3dadd( -297.421, 237.52, 114.279, 0.29 ) }
    dend_7 { pt3dadd( -302.943, 244.627, 118.325, 0.29 ) }
    dend_7 { pt3dadd( -308.058, 251.64, 123.027, 0.29 ) }
    dend_7 { pt3dadd( -313.576, 258.526, 127.462, 0.29 ) }
    dend_7 { pt3dadd( -319.662, 265.688, 130.462, 0.29 ) }
    dend_7 { pt3dadd( -326.005, 272.858, 132.848, 0.29 ) }
    dend_7 { pt3dadd( -332.204, 280.342, 134.473, 0.29 ) }
    dend_7 { pt3dadd( -339.21, 286.793, 137.145, 0.29 ) }
    dend_7 { pt3dadd( -346.369, 292.111, 141.505, 0.29 ) }
    dend_7 { pt3dadd( -353.367, 296.918, 146.673, 0.29 ) }
    dend_7 { pt3dadd( -360.25, 301.735, 151.986, 0.29 ) }
    dend_7 { pt3dadd( -366.421, 307.459, 157.225, 0.29 ) }
    dend_7 { pt3dadd( -370.882, 314.198, 162.91, 0.29 ) }
    dend_7 { pt3dadd( -377.052, 320.237, 167.764, 0.29 ) }
    dend_7 { pt3dadd( -383.293, 325.482, 173.431, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 92/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 139.348, 197.128, 5.65589, 0.88 ) }
    dend_72 { pt3dadd( 139.607, 198.126, 5.68941, 0.88 ) }
    dend_72 { pt3dadd( 139.935, 199.514, 5.72278, 1.03 ) }
    dend_72 { pt3dadd( 140.164, 200.505, 5.71477, 1.03 ) }
    dend_72 { pt3dadd( 140.365, 201.375, 5.70774, 1.03 ) }
    dend_72 { pt3dadd( 140.741, 203.0, 5.69461, 1.25 ) }
    dend_72 { pt3dadd( 140.887, 203.63, 5.68952, 1.25 ) }
    dend_72 { pt3dadd( 141.244, 205.02, 5.63302, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_72 { pt3dadd( 141.686, 206.595, 5.55415, 1.03 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 1/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 139.348, 197.128, 5.65589, 0.52 ) }
    dend_71 { pt3dadd( 140.56, 197.159, 5.58963, 0.52 ) }
    dend_71 { pt3dadd( 141.956, 197.098, 5.50792, 0.66 ) }
    dend_71 { pt3dadd( 143.001, 197.001, 5.4488, 0.66 ) }
    dend_71 { pt3dadd( 144.169, 196.862, 5.38844, 0.66 ) }
    dend_71 { pt3dadd( 145.3, 196.726, 5.32055, 0.44 ) }
    dend_71 { pt3dadd( 146.527, 196.594, 5.24294, 0.88 ) }
    dend_71 { pt3dadd( 147.397, 196.487, 5.18817, 0.88 ) }
    dend_71 { pt3dadd( 148.493, 196.381, 5.12528, 0.59 ) }
    dend_71 { pt3dadd( 149.767, 196.329, 5.09979, 0.59 ) }
    dend_71 { pt3dadd( 150.778, 196.357, 5.0709, 0.59 ) }
    dend_71 { pt3dadd( 151.557, 196.421, 5.03524, 0.59 ) }
    dend_71 { pt3dadd( 152.624, 196.551, 4.96587, 0.59 ) }
    dend_71 { pt3dadd( 153.963, 196.755, 4.83246, 0.81 ) }
    dend_71 { pt3dadd( 154.924, 196.932, 4.70954, 0.81 ) }
    dend_71 { pt3dadd( 156.307, 197.231, 4.48821, 0.66 ) }
    dend_71 { pt3dadd( 157.249, 197.472, 4.30238, 0.52 ) }
    dend_71 { pt3dadd( 157.958, 197.677, 4.15186, 0.52 ) }
    dend_71 { pt3dadd( 159.175, 198.082, 3.89391, 0.66 ) }
    dend_71 { pt3dadd( 159.887, 198.36, 3.76358, 0.52 ) }
    dend_71 { pt3dadd( 160.974, 198.886, 3.61832, 0.81 ) }
    dend_71 { pt3dadd( 162.043, 199.483, 3.55853, 0.44 ) }
    dend_71 { pt3dadd( 162.979, 200.057, 3.55992, 0.37 ) }
    dend_71 { pt3dadd( 163.906, 200.655, 3.6108, 0.37 ) }
    dend_71 { pt3dadd( 164.812, 201.242, 3.71491, 0.29 ) }
    dend_71 { pt3dadd( 166.044, 202.014, 3.84573, 0.29 ) }
    dend_71 { pt3dadd( 166.829, 202.52, 3.90076, 0.96 ) }
    dend_71 { pt3dadd( 167.51, 203.006, 3.89091, 1.4 ) }
    dend_71 { pt3dadd( 167.879, 203.32, 3.82951, 1.77 ) }
    dend_71 { pt3dadd( 168.062, 203.508, 3.76691, 1.77 ) }
    dend_71 { pt3dadd( 168.776, 204.436, 3.34823, 0.96 ) }
    dend_71 { pt3dadd( 169.435, 205.533, 2.7719, 0.29 ) }
    dend_71 { pt3dadd( 169.894, 206.402, 2.28117, 0.29 ) }
    dend_71 { pt3dadd( 170.202, 207.05, 1.89844, 0.29 ) }
    dend_71 { pt3dadd( 170.494, 207.733, 1.50771, 0.52 ) }
    dend_71 { pt3dadd( 170.873, 208.726, 0.983353, 0.37 ) }
    dend_71 { pt3dadd( 171.175, 209.657, 0.57639, 0.22 ) }
    dend_71 { pt3dadd( 180.481, 212.478, -1.66727, 0.22 ) }
    dend_71 { pt3dadd( 190.301, 214.29, -2.007, 0.22 ) }
    dend_71 { pt3dadd( 200.271, 214.237, -1.23445, 0.22 ) }
    dend_71 { pt3dadd( 210.197, 213.39, -2.08109, 0.22 ) }
    dend_71 { pt3dadd( 219.827, 210.931, -3.03847, 0.22 ) }
    dend_71 { pt3dadd( 229.551, 209.675, -4.98103, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 44/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 319.254, 25.9336, 35.6746, 0.29 ) }
    dend_66 { pt3dadd( 327.636, 22.1728, 39.5297, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 46/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 319.254, 25.9336, 35.6746, 0.29 ) }
    dend_65 { pt3dadd( 328.053, 21.344, 35.0279, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 48/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 176.75, 33.4239, 26.4982, 0.29 ) }
    dend_58 { pt3dadd( 184.989, 33.3289, 32.1643, 0.29 ) }
    dend_58 { pt3dadd( 193.174, 34.5195, 37.7779, 0.29 ) }
    dend_58 { pt3dadd( 200.412, 36.8592, 44.2482, 0.29 ) }
    dend_58 { pt3dadd( 208.601, 38.8679, 49.6048, 0.29 ) }
    dend_58 { pt3dadd( 217.432, 42.3164, 52.688, 0.29 ) }
    dend_58 { pt3dadd( 226.302, 44.1055, 56.9252, 0.29 ) }
    dend_58 { pt3dadd( 233.691, 47.0319, 62.9572, 0.29 ) }
    dend_58 { pt3dadd( 240.6, 49.4282, 69.7565, 0.29 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 176.75, 33.4239, 26.4982, 0.29 ) }
    dend_57 { pt3dadd( 186.732, 32.8341, 26.4589, 0.29 ) }
    dend_57 { pt3dadd( 196.664, 32.7723, 25.2994, 0.29 ) }
    dend_57 { pt3dadd( 206.501, 32.4271, 23.5374, 0.29 ) }
    dend_57 { pt3dadd( 216.449, 33.2378, 22.9511, 0.29 ) }
    dend_57 { pt3dadd( 226.279, 33.2008, 21.1167, 0.29 ) }
    dend_57 { pt3dadd( 236.261, 32.9188, 20.5815, 0.29 ) }
    dend_57 { pt3dadd( 246.056, 32.2355, 18.6958, 0.29 ) }
    dend_57 { pt3dadd( 256.04, 31.8071, 18.3207, 0.29 ) }
    dend_57 { pt3dadd( 265.852, 30.1349, 19.2058, 0.29 ) }
    dend_57 { pt3dadd( 275.602, 28.2274, 20.2536, 0.29 ) }
    dend_57 { pt3dadd( 285.572, 28.4082, 19.5039, 0.29 ) }
    dend_57 { pt3dadd( 295.386, 30.1546, 20.2054, 0.29 ) }
    dend_57 { pt3dadd( 305.361, 30.7351, 19.8199, 0.29 ) }
    dend_57 { pt3dadd( 315.283, 29.6319, 19.3006, 0.29 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 166.89, 35.2576, 24.8818, 0.29 ) }
    dend_55 { pt3dadd( 176.524, 35.804, 27.5037, 0.29 ) }
    dend_55 { pt3dadd( 185.553, 37.5518, 31.4098, 0.29 ) }
    dend_55 { pt3dadd( 194.857, 39.0357, 34.7438, 0.29 ) }
    dend_55 { pt3dadd( 203.592, 42.2656, 38.3129, 0.29 ) }
    dend_55 { pt3dadd( 212.554, 45.1794, 41.59, 0.29 ) }
    dend_55 { pt3dadd( 221.417, 47.4572, 45.5885, 0.29 ) }
    dend_55 { pt3dadd( 229.656, 50.951, 49.98, 0.29 ) }
    dend_55 { pt3dadd( 237.405, 56.2085, 53.2787, 0.29 ) }
    dend_55 { pt3dadd( 245.794, 61.1837, 55.1686, 0.29 ) }
    dend_55 { pt3dadd( 253.257, 67.2125, 57.6323, 0.29 ) }
    dend_55 { pt3dadd( 260.42, 72.3457, 62.2121, 0.29 ) }
    dend_55 { pt3dadd( 266.462, 79.2278, 65.9091, 0.29 ) }
    dend_55 { pt3dadd( 272.341, 86.3954, 69.2849, 0.29 ) }
    dend_55 { pt3dadd( 278.807, 93.4063, 71.8325, 0.29 ) }
    dend_55 { pt3dadd( 286.476, 98.841, 75.0126, 0.29 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 88/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 166.89, 35.2576, 24.8818, 0.29 ) }
    dend_52 { pt3dadd( 176.708, 35.4325, 26.7727, 0.29 ) }
    dend_52 { pt3dadd( 186.54, 34.0641, 27.9345, 0.29 ) }
    dend_52 { pt3dadd( 196.446, 33.5448, 29.1999, 0.29 ) }
    dend_52 { pt3dadd( 206.067, 33.3921, 31.9203, 0.29 ) }
    dend_52 { pt3dadd( 215.846, 32.7588, 33.9109, 0.29 ) }
    dend_52 { pt3dadd( 225.422, 31.7796, 36.6099, 0.29 ) }
    dend_52 { pt3dadd( 234.897, 32.2004, 39.7781, 0.29 ) }
    dend_52 { pt3dadd( 244.344, 33.1015, 42.9251, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 97/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -279.435, -86.1356, -111.321, 0.29 ) }
    dend_34 { pt3dadd( -280.874, -86.7531, -111.646, 0.29 ) }
    dend_34 { pt3dadd( -281.471, -87.0089, -111.781, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_34 { pt3dadd( -282.199, -87.3214, -111.946, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 1/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -279.435, -86.1356, -111.321, 0.29 ) }
    dend_33 { pt3dadd( -278.676, -87.2982, -111.369, 0.29 ) }
    dend_33 { pt3dadd( -278.127, -88.1404, -111.404, 0.29 ) }
    dend_33 { pt3dadd( -277.571, -88.9932, -111.439, 0.29 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 5/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -168.256, 74.3581, 17.8824, 0.29 ) }
    dend_13 { pt3dadd( -178.13, 75.4462, 19.0044, 0.29 ) }
    dend_13 { pt3dadd( -187.643, 78.4524, 19.0094, 0.29 ) }
    dend_13 { pt3dadd( -196.538, 82.6237, 20.6129, 0.29 ) }
    dend_13 { pt3dadd( -204.466, 88.4951, 21.554, 0.29 ) }
    dend_13 { pt3dadd( -212.151, 94.5756, 22.9812, 0.29 ) }
    dend_13 { pt3dadd( -220.056, 100.2, 25.0412, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 12/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -168.256, 74.3581, 17.8824, 0.29 ) }
    dend_12 { pt3dadd( -178.093, 75.362, 19.3586, 0.29 ) }
    dend_12 { pt3dadd( -187.854, 76.7536, 20.9943, 0.29 ) }
    dend_12 { pt3dadd( -197.223, 78.437, 24.0339, 0.29 ) }
    dend_12 { pt3dadd( -206.192, 79.7943, 28.2328, 0.29 ) }
    dend_12 { pt3dadd( -213.958, 82.6841, 33.7912, 0.29 ) }
    dend_12 { pt3dadd( -221.927, 84.5738, 39.5137, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 141.686, 206.595, 5.55415, 0.81 ) }
    dend_74 { pt3dadd( 141.346, 207.383, 5.39595, 0.81 ) }
    dend_74 { pt3dadd( 141.054, 208.189, 5.25522, 0.81 ) }
    dend_74 { pt3dadd( 140.657, 209.587, 5.07339, 0.81 ) }
    dend_74 { pt3dadd( 140.407, 210.804, 4.966, 0.96 ) }
    dend_74 { pt3dadd( 140.291, 211.778, 4.91297, 0.96 ) }
    dend_74 { pt3dadd( 140.278, 212.29, 4.89851, 0.96 ) }
    dend_74 { pt3dadd( 140.389, 213.417, 4.9138, 0.81 ) }
    dend_74 { pt3dadd( 140.576, 214.29, 4.95098, 0.81 ) }
    dend_74 { pt3dadd( 140.794, 215.023, 5.0031, 0.81 ) }
    dend_74 { pt3dadd( 141.162, 216.014, 5.07845, 0.81 ) }
    dend_74 { pt3dadd( 141.655, 217.21, 5.15579, 0.96 ) }
    dend_74 { pt3dadd( 142.051, 218.065, 5.17804, 0.96 ) }
    dend_74 { pt3dadd( 142.656, 219.314, 5.1624, 0.81 ) }
    dend_74 { pt3dadd( 143.184, 220.396, 5.09275, 0.81 ) }
    dend_74 { pt3dadd( 143.782, 221.598, 4.96799, 0.74 ) }
    dend_74 { pt3dadd( 144.088, 222.152, 4.91362, 0.74 ) }
    dend_74 { pt3dadd( 144.673, 223.095, 4.85361, 0.74 ) }
    dend_74 { pt3dadd( 145.234, 223.893, 4.84825, 0.96 ) }
    dend_74 { pt3dadd( 145.737, 224.598, 4.88091, 0.96 ) }
    dend_74 { pt3dadd( 146.046, 225.081, 4.93258, 0.96 ) }
    dend_74 { pt3dadd( 146.59, 226.156, 5.11907, 0.81 ) }
    dend_74 { pt3dadd( 146.971, 227.056, 5.31424, 0.81 ) }
    dend_74 { pt3dadd( 147.473, 228.378, 5.62049, 0.74 ) }
    dend_74 { pt3dadd( 147.879, 229.351, 5.84328, 0.74 ) }
    dend_74 { pt3dadd( 148.493, 230.55, 6.12015, 0.74 ) }
    dend_74 { pt3dadd( 148.976, 231.375, 6.23088, 0.74 ) }
    dend_74 { pt3dadd( 149.645, 232.449, 6.26953, 0.59 ) }
    dend_74 { pt3dadd( 150.509, 233.708, 6.23402, 0.59 ) }
    dend_74 { pt3dadd( 151.337, 234.798, 6.15781, 0.59 ) }
    dend_74 { pt3dadd( 152.455, 236.172, 6.0259, 0.59 ) }
    dend_74 { pt3dadd( 154.135, 238.106, 5.77518, 0.52 ) }
    dend_74 { pt3dadd( 155.083, 239.155, 5.61547, 0.52 ) }
    dend_74 { pt3dadd( 155.884, 240.062, 5.46249, 0.52 ) }
    dend_74 { pt3dadd( 157.226, 241.723, 5.1708, 1.25 ) }
    dend_74 { pt3dadd( 157.871, 242.67, 5.01295, 2.43 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 55/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 141.686, 206.595, 5.55415, 0.66 ) }
    dend_73 { pt3dadd( 142.848, 207.945, 5.87997, 0.66 ) }
    dend_73 { pt3dadd( 143.376, 208.649, 6.03581, 0.59 ) }
    dend_73 { pt3dadd( 143.908, 209.37, 6.19323, 0.59 ) }
    dend_73 { pt3dadd( 144.792, 210.507, 6.436, 0.52 ) }
    dend_73 { pt3dadd( 145.592, 211.538, 6.656, 0.52 ) }
    dend_73 { pt3dadd( 146.648, 212.897, 6.94608, 0.37 ) }
    dend_73 { pt3dadd( 147.088, 213.557, 7.10462, 0.37 ) }
    dend_73 { pt3dadd( 147.591, 214.386, 7.29358, 0.37 ) }
    dend_73 { pt3dadd( 148.064, 215.195, 7.44978, 0.37 ) }
    dend_73 { pt3dadd( 154.183, 222.785, 8.84785, 0.37 ) }
    dend_73 { pt3dadd( 160.415, 230.41, 8.80419, 0.37 ) }
    dend_73 { pt3dadd( 167.238, 237.485, 7.91693, 0.37 ) }
    dend_73 { pt3dadd( 173.179, 245.296, 8.64326, 0.37 ) }
    dend_73 { pt3dadd( 178.124, 253.597, 10.3949, 0.37 ) }
    dend_73 { pt3dadd( 181.427, 262.565, 12.5116, 0.37 ) }
    dend_73 { pt3dadd( 183.598, 271.909, 14.3679, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 72/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 240.6, 49.4282, 69.7565, 0.29 ) }
    dend_60 { pt3dadd( 248.775, 51.1568, 75.2359, 0.29 ) }
    dend_60 { pt3dadd( 255.277, 53.6541, 82.3887, 0.29 ) }
    dend_60 { pt3dadd( 262.441, 54.6351, 89.293, 0.29 ) }
    dend_60 { pt3dadd( 269.548, 56.0412, 96.1783, 0.29 ) }
    dend_60 { pt3dadd( 276.194, 56.0804, 103.65, 0.29 ) }
    dend_60 { pt3dadd( 281.216, 55.9546, 112.297, 0.29 ) }
    dend_60 { pt3dadd( 285.801, 55.7094, 121.18, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 240.6, 49.4282, 69.7565, 0.29 ) }
    dend_59 { pt3dadd( 248.624, 51.7142, 75.244, 0.29 ) }
    dend_59 { pt3dadd( 256.374, 53.1584, 81.388, 0.29 ) }
    dend_59 { pt3dadd( 263.286, 55.0156, 88.359, 0.29 ) }
    dend_59 { pt3dadd( 271.491, 56.7584, 93.7881, 0.29 ) }
    dend_59 { pt3dadd( 279.801, 60.3691, 97.9404, 0.29 ) }
    dend_59 { pt3dadd( 289.037, 63.0025, 100.661, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 244.344, 33.1015, 42.9251, 0.29 ) }
    dend_54 { pt3dadd( 254.073, 32.8716, 45.2231, 0.29 ) }
    dend_54 { pt3dadd( 263.604, 32.8598, 48.2508, 0.29 ) }
    dend_54 { pt3dadd( 272.998, 31.8347, 51.5128, 0.29 ) }
    dend_54 { pt3dadd( 282.219, 32.135, 55.3714, 0.29 ) }
    dend_54 { pt3dadd( 291.079, 32.8509, 59.9499, 0.29 ) }
    dend_54 { pt3dadd( 299.057, 32.0427, 65.921, 0.29 ) }
    dend_54 { pt3dadd( 306.55, 30.5868, 72.3728, 0.29 ) }
    dend_54 { pt3dadd( 314.335, 27.6172, 77.8607, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 96/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 244.344, 33.1015, 42.9251, 0.29 ) }
    dend_53 { pt3dadd( 254.087, 32.7712, 45.1494, 0.29 ) }
    dend_53 { pt3dadd( 263.903, 31.0359, 45.8485, 0.29 ) }
    dend_53 { pt3dadd( 273.629, 30.1512, 47.9889, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_53 { pt3dadd( 283.471, 29.7859, 49.7184, 0.29 ) }
    dend_53 { pt3dadd( 293.192, 27.948, 51.1127, 0.29 ) }
    dend_53 { pt3dadd( 302.522, 25.1345, 53.2629, 0.29 ) }
    dend_53 { pt3dadd( 311.403, 22.1201, 56.6654, 0.29 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 4/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 157.871, 242.67, 5.01295, 0.44 ) }
    dend_82 { pt3dadd( 155.945, 243.792, 5.26493, 0.44 ) }
    dend_82 { pt3dadd( 155.055, 244.31, 5.38133, 0.44 ) }
    dend_82 { pt3dadd( 154.208, 244.803, 5.49205, 0.29 ) }
    dend_82 { pt3dadd( 153.254, 245.358, 5.61683, 0.29 ) }
    dend_82 { pt3dadd( 152.103, 246.028, 5.76745, 0.29 ) }
    dend_82 { pt3dadd( 150.805, 246.784, 5.93724, 0.29 ) }
    dend_82 { pt3dadd( 141.959, 250.887, 7.94756, 0.29 ) }
    dend_82 { pt3dadd( 134.475, 256.359, 11.4803, 0.29 ) }
    dend_82 { pt3dadd( 127.618, 261.398, 16.6063, 0.29 ) }
    dend_82 { pt3dadd( 121.2, 265.498, 23.0197, 0.29 ) }
    dend_82 { pt3dadd( 116.291, 271.064, 29.6007, 0.29 ) }
    dend_82 { pt3dadd( 110.734, 275.167, 36.7709, 0.29 ) }
    dend_82 { pt3dadd( 105.654, 278.767, 44.5529, 0.29 ) }
    dend_82 { pt3dadd( 99.8419, 281.944, 52.0098, 0.29 ) }
    dend_82 { pt3dadd( 94.1359, 286.472, 58.7829, 0.29 ) }
    dend_82 { pt3dadd( 89.0798, 291.627, 65.6001, 0.29 ) }
    dend_82 { pt3dadd( 82.842, 295.555, 72.2978, 0.29 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 22/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 157.871, 242.67, 5.01295, 0.52 ) }
    dend_75 { pt3dadd( 157.787, 245.023, 5.34664, 0.52 ) }
    dend_75 { pt3dadd( 157.511, 246.223, 5.52348, 0.52 ) }
    dend_75 { pt3dadd( 157.109, 247.078, 5.65506, 0.52 ) }
    dend_75 { pt3dadd( 156.565, 247.763, 5.73802, 0.52 ) }
    dend_75 { pt3dadd( 155.741, 248.803, 5.86392, 0.52 ) }
    dend_75 { pt3dadd( 155.095, 249.617, 5.96241, 0.52 ) }
    dend_75 { pt3dadd( 154.375, 250.089, 6.05072, 0.52 ) }
    dend_75 { pt3dadd( 153.503, 250.493, 6.07399, 0.52 ) }
    dend_75 { pt3dadd( 152.36, 250.897, 6.04559, 0.52 ) }
    dend_75 { pt3dadd( 147.903, 259.352, 8.27064, 0.52 ) }
    dend_75 { pt3dadd( 142.414, 266.881, 11.4686, 0.52 ) }
    dend_75 { pt3dadd( 136.427, 274.157, 14.3796, 0.52 ) }
    dend_75 { pt3dadd( 130.518, 280.791, 18.7132, 0.52 ) }
    dend_75 { pt3dadd( 126.229, 287.984, 23.9265, 0.52 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 37/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 82.842, 295.555, 72.2978, 0.29 ) }
    dend_84 { pt3dadd( 74.8596, 300.655, 75.284, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 39/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 82.842, 295.555, 72.2978, 0.29 ) }
    dend_83 { pt3dadd( 76.9293, 299.902, 79.0182, 0.29 ) }
    dend_83 { pt3dadd( 72.8396, 305.564, 86.0576, 0.29 ) }
    // Section: dend_79, id: dend_79, parent: dend_75 (entry count 42/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 126.229, 287.984, 23.9265, 0.29 ) }
    dend_79 { pt3dadd( 120.782, 295.714, 26.6608, 0.29 ) }
    dend_79 { pt3dadd( 116.553, 303.243, 31.4028, 0.29 ) }
    dend_79 { pt3dadd( 111.603, 310.687, 35.5514, 0.29 ) }
    dend_79 { pt3dadd( 105.076, 317.016, 39.4579, 0.29 ) }
    dend_79 { pt3dadd( 99.2062, 323.527, 44.0347, 0.29 ) }
    dend_79 { pt3dadd( 93.6845, 329.823, 49.3091, 0.29 ) }
    dend_79 { pt3dadd( 88.4117, 336.945, 53.6484, 0.29 ) }
    dend_79 { pt3dadd( 84.0806, 344.423, 58.3839, 0.29 ) }
    dend_79 { pt3dadd( 79.8102, 350.807, 64.6201, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 52/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 126.229, 287.984, 23.9265, 0.37 ) }
    dend_76 { pt3dadd( 120.975, 295.553, 27.4092, 0.29 ) }
    dend_76 { pt3dadd( 115.115, 303.293, 29.0354, 0.29 ) }
    dend_76 { pt3dadd( 107.966, 309.206, 32.5163, 0.29 ) }
    dend_76 { pt3dadd( 100.721, 314.429, 36.8537, 0.29 ) }
    dend_76 { pt3dadd( 93.58, 319.11, 41.9484, 0.29 ) }
    dend_76 { pt3dadd( 86.8573, 325.234, 45.867, 0.29 ) }
    dend_76 { pt3dadd( 81.1275, 331.557, 50.8784, 0.29 ) }
    dend_76 { pt3dadd( 76.1494, 338.188, 56.2599, 0.29 ) }
    dend_76 { pt3dadd( 72.3435, 346.491, 59.865, 0.29 ) }
    dend_76 { pt3dadd( 67.8324, 354.649, 62.969, 0.29 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 63/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 79.8102, 350.807, 64.6201, 0.29 ) }
    dend_81 { pt3dadd( 74.6394, 357.849, 69.2126, 0.29 ) }
    dend_81 { pt3dadd( 70.6685, 366.22, 72.4562, 0.29 ) }
    dend_81 { pt3dadd( 65.3284, 373.751, 75.8945, 0.29 ) }
    dend_81 { pt3dadd( 60.3801, 380.882, 80.5881, 0.29 ) }
    dend_81 { pt3dadd( 55.0294, 386.468, 86.7966, 0.29 ) }
    dend_81 { pt3dadd( 48.7093, 392.511, 91.448, 0.29 ) }
    dend_81 { pt3dadd( 43.3641, 398.903, 96.7825, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 71/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 79.8102, 350.807, 64.6201, 0.29 ) }
    dend_80 { pt3dadd( 74.5072, 357.84, 69.0756, 0.29 ) }
    dend_80 { pt3dadd( 71.3321, 365.251, 74.7451, 0.29 ) }
    dend_80 { pt3dadd( 70.1, 373.226, 80.3632, 0.29 ) }
    dend_80 { pt3dadd( 70.1845, 382.333, 83.9341, 0.29 ) }
    dend_80 { pt3dadd( 69.2792, 391.761, 86.3173, 0.29 ) }
    dend_80 { pt3dadd( 67.5043, 401.246, 87.8017, 0.29 ) }
    dend_80 { pt3dadd( 66.1163, 410.648, 90.0574, 0.29 ) }
    dend_80 { pt3dadd( 66.6627, 420.032, 92.7162, 0.29 ) }
    dend_80 { pt3dadd( 65.6651, 429.277, 95.7334, 0.29 ) }
    dend_80 { pt3dadd( 64.4593, 437.968, 100.102, 0.29 ) }
    dend_80 { pt3dadd( 61.285, 445.982, 104.832, 0.29 ) }
    dend_80 { pt3dadd( 57.4108, 453.956, 109.086, 0.29 ) }
    dend_80 { pt3dadd( 53.0088, 462.306, 111.785, 0.29 ) }
    dend_80 { pt3dadd( 48.2233, 470.369, 114.736, 0.29 ) }
    dend_80 { pt3dadd( 44.1263, 478.966, 117.071, 0.29 ) }
    dend_80 { pt3dadd( 40.6521, 487.589, 120.188, 0.29 ) }
    dend_80 { pt3dadd( 37.9484, 495.655, 125.112, 0.29 ) }
    dend_80 { pt3dadd( 35.6575, 503.47, 130.636, 0.29 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 90/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 67.8324, 354.649, 62.969, 0.29 ) }
    dend_78 { pt3dadd( 61.9243, 361.441, 67.0399, 0.29 ) }
    dend_78 { pt3dadd( 54.7766, 367.834, 69.4715, 0.29 ) }
    dend_78 { pt3dadd( 47.8771, 374.276, 72.4297, 0.29 ) }
    dend_78 { pt3dadd( 42.6043, 381.531, 76.5318, 0.29 ) }
    dend_78 { pt3dadd( 36.0993, 388.623, 78.7178, 0.29 ) }
    dend_78 { pt3dadd( 28.154, 394.227, 80.6748, 0.29 ) }
    dend_78 { pt3dadd( 20.6537, 400.675, 80.768, 0.29 ) }
    dend_78 { pt3dadd( 13.6085, 407.511, 79.6665, 0.29 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 99/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 67.8324, 354.649, 62.969, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_77 { pt3dadd( 61.7607, 361.469, 66.7397, 0.29 ) }
    dend_77 { pt3dadd( 54.2586, 367.696, 68.45, 0.29 ) }
    dend_77 { pt3dadd( 47.4444, 374.24, 71.3674, 0.29 ) }
    dend_77 { pt3dadd( 40.1577, 380.551, 73.606, 0.29 ) }
    dend_77 { pt3dadd( 33.5633, 387.262, 76.6286, 0.29 ) }
    dend_77 { pt3dadd( 26.4125, 392.717, 80.8197, 0.29 ) }
    dend_77 { pt3dadd( 19.7166, 397.701, 86.2079, 0.29 ) }
    dend_77 { pt3dadd( 13.436, 402.241, 92.4424, 0.29 ) }
    dend_77 { pt3dadd( 7.92283, 407.353, 98.9324, 0.29 ) }
    dend_77 { pt3dadd( 2.2699, 411.017, 106.276, 0.29 ) }
    dend_77 { pt3dadd( -2.32696, 416.051, 113.502, 0.29 ) }
    dend_77 { pt3dadd( -5.3168, 420.6, 121.826, 0.29 ) }
    dend_77 { pt3dadd( -8.29569, 425.681, 129.824, 0.29 ) }
    dend_77 { pt3dadd( -11.0781, 429.305, 138.681, 0.29 ) }
    dend_77 { pt3dadd( -14.6753, 433.751, 146.821, 0.29 ) }
    dend_77 { pt3dadd( -18.6928, 438.857, 154.334, 0.29 ) }
    dend_77 { pt3dadd( -23.7688, 444.043, 161.111, 0.29 ) }
    dend_77 { pt3dadd( -29.5202, 449.261, 167.298, 0.29 ) }
    dend_77 { pt3dadd( -35.0059, 454.316, 173.858, 0.29 ) }
    dend_77 { pt3dadd( -39.6046, 459.389, 181.054, 0.29 ) }
    dend_77 { pt3dadd( -43.3955, 463.937, 189.046, 0.29 ) }
    dend_77 { pt3dadd( -47.9359, 467.35, 197.239, 0.29 ) }
    dend_77 { pt3dadd( -53.9245, 471.774, 203.838, 0.29 ) }
    dend_77 { pt3dadd( -59.01, 475.155, 211.719, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_90, dend_85, dend_38, dend_23, dend_18, dend_15, dend_0, dend_89, dend_86, dend_48, dend_39, dend_35, dend_24, dend_22, dend_19, dend_17, dend_16, dend_4, dend_1, dend_88, dend_87, dend_62, dend_49, dend_43, dend_40, dend_37, dend_36, dend_26, dend_25, dend_21, dend_20, dend_14, dend_5, dend_3, dend_2, dend_68, dend_63, dend_61, dend_50, dend_45, dend_44, dend_42, dend_41, dend_30, dend_27, dend_9, dend_6, dend_70, dend_69, dend_67, dend_64, dend_56, dend_51, dend_47, dend_46, dend_32, dend_31, dend_29, dend_28, dend_11, dend_10, dend_8, dend_7, dend_72, dend_71, dend_66, dend_65, dend_58, dend_57, dend_55, dend_52, dend_34, dend_33, dend_13, dend_12, dend_74, dend_73, dend_60, dend_59, dend_54, dend_53, dend_82, dend_75, dend_84, dend_83, dend_79, dend_76, dend_81, dend_80, dend_78, dend_77]}
    ModelViewParmSubset_2 = new SectionList()
    dend_90 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_90, dend_85, dend_38, dend_23, dend_18, dend_15, dend_0, dend_89, dend_86, dend_48, dend_39, dend_35, dend_24, dend_22, dend_19, dend_17, dend_16, dend_4, dend_1, dend_88, dend_87, dend_62, dend_49, dend_43, dend_40, dend_37, dend_36, dend_26, dend_25, dend_21, dend_20, dend_14, dend_5, dend_3, dend_2, dend_68, dend_63, dend_61, dend_50, dend_45, dend_44, dend_42, dend_41, dend_30, dend_27, dend_9, dend_6, dend_70, dend_69, dend_67, dend_64, dend_56, dend_51, dend_47, dend_46, dend_32, dend_31, dend_29, dend_28, dend_11, dend_10, dend_8, dend_7, dend_72, dend_71, dend_66, dend_65, dend_58, dend_57, dend_55, dend_52, dend_34, dend_33, dend_13, dend_12, dend_74, dend_73, dend_60, dend_59, dend_54, dend_53, dend_82, dend_75, dend_84, dend_83, dend_79, dend_76, dend_81, dend_80, dend_78, dend_77]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_90 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_85 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_23 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_89 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_86 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_24 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_62 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_43 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_40 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_25 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_21 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_20 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_14 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_5 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_68 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_63 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_61 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_50 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_45 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_44 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_42 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_30 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_69 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_47 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_46 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_29 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_28 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_8 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_7 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_71 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_58 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_57 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_55 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_52 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_13 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_12 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_74 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_60 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_59 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_54 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_53 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_82 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_75 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_79 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_76 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_81 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_80 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_78 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_77 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_38 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_39 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_15 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_4 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_49 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_26 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_36 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_37 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_10 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_51 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_3 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_11 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_56 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_2 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_87 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_88 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_70 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_72 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_84 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_83 OneSecGrp_SectionRef_88.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_38, dend_38, dend_38, dend_38, dend_38, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_88, dend_88, dend_88, dend_87, dend_87, dend_87, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_49, dend_49, dend_49, dend_49, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_2, dend_2, dend_2, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_56, dend_56, dend_56, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_65, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_84, dend_83, dend_83, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_90 nseg = 5
    dend_85 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 9
    dend_89 nseg = 5
    dend_86 nseg = 7
    dend_48 nseg = 3
    dend_35 nseg = 5
    dend_24 nseg = 3
    dend_22 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 5
    dend_1 nseg = 7
    dend_62 nseg = 5
    dend_43 nseg = 3
    dend_40 nseg = 5
    dend_25 nseg = 5
    dend_21 nseg = 5
    dend_20 nseg = 9
    dend_14 nseg = 5
    dend_5 nseg = 5
    dend_68 nseg = 5
    dend_63 nseg = 7
    dend_61 nseg = 3
    dend_50 nseg = 5
    dend_45 nseg = 11
    dend_44 nseg = 3
    dend_42 nseg = 5
    dend_30 nseg = 5
    dend_27 nseg = 13
    dend_6 nseg = 13
    dend_69 nseg = 9
    dend_67 nseg = 3
    dend_64 nseg = 3
    dend_47 nseg = 5
    dend_46 nseg = 5
    dend_32 nseg = 5
    dend_31 nseg = 5
    dend_29 nseg = 9
    dend_28 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 9
    dend_71 nseg = 5
    dend_58 nseg = 3
    dend_57 nseg = 7
    dend_55 nseg = 7
    dend_52 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 3
    dend_74 nseg = 3
    dend_73 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_54 nseg = 3
    dend_53 nseg = 3
    dend_82 nseg = 5
    dend_75 nseg = 3
    dend_79 nseg = 5
    dend_76 nseg = 5
    dend_81 nseg = 3
    dend_80 nseg = 9
    dend_78 nseg = 3
    dend_77 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L6_MC_8f46a0ad62_0_0


