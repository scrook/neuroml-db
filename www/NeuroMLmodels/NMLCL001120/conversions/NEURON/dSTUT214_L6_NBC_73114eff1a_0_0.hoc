// Cell: dSTUT214_L6_NBC_73114eff1a_0_0
/*
{
  "id" : "dSTUT214_L6_NBC_73114eff1a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-13.6672, -4.21761, 2.88746, 3.77586", "-12.3226, -3.91408, 2.62074, 6.64131", "-10.9781, -3.61056, 2.35401, 8.80204", "-9.63356, -3.30703, 2.08728, 10.3184", "-8.28902, -3.0035, 1.82056, 12.1801", "-6.94448, -2.69998, 1.55383, 13.9015", "-5.59994, -2.39645, 1.28711, 15.2125", "-4.2554, -2.09293, 1.02038, 16.1357", "-2.91086, -1.7894, 0.753656, 16.8349", "-1.56632, -1.48588, 0.486931, 17.1545", "-0.221778, -1.18235, 0.220205, 17.2905", "1.12276, -0.878824, -0.0465203, 17.299", "2.4673, -0.575298, -0.313246, 17.3774", "3.81184, -0.271773, -0.579971, 17.0096", "5.15639, 0.0317532, -0.846697, 16.2957", "6.50093, 0.335279, -1.11342, 15.4071", "7.84547, 0.638805, -1.38015, 13.8209", "9.19001, 0.942331, -1.64687, 12.2266", "10.5345, 1.24586, -1.9136, 10.4487", "11.8791, 1.54938, -2.18032, 8.51007", "13.2236, 1.85291, -2.44705, 4.94822" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "2.86402, -8.03627, -8.21721, 0.88", "2.86402, -8.03627, -8.21721, 0.88", "3.16473, -8.63174, -8.40999, 0.88", "3.67527, -9.51428, -8.69956, 0.88", "4.21348, -10.3706, -9.00537, 0.81", "5.01008, -11.5449, -9.44084, 0.88", "5.49974, -12.2301, -9.7223, 1.4", "5.8385, -12.6688, -9.92003, 1.69", "6.16448, -13.0586, -10.1126, 1.84", "6.51824, -13.4808, -10.327, 1.84", "7.00005, -14.1284, -10.6246, 0.66", "7.42279, -14.8727, -10.8805, 0.44", "7.65144, -15.4442, -11.0297, 0.66", "7.77158, -15.8551, -11.1127, 0.88", "7.93623, -16.5253, -11.2077, 0.96", "8.04464, -17.0011, -11.2524, 0.96", "8.18475, -17.6027, -11.3005, 0.74", "8.40727, -18.4423, -11.3588, 0.44", "8.61459, -19.1092, -11.4321, 0.29", "8.82673, -19.6832, -11.5143, 0.29", "9.10233, -20.3366, -11.6201, 1.62", "9.399, -20.9745, -11.7268, 2.36", "9.56143, -21.283, -11.7749, 2.8", "9.69697, -21.5299, -11.8083, 2.95", "10.1026, -22.3544, -11.8889, 1.62", "10.4616, -23.1822, -11.9369, 0.66", "10.7656, -23.9315, -12.0083, 0.29", "11.1093, -24.7844, -12.1507, 0.29", "11.3336, -25.3492, -12.2733, 0.29", "11.6875, -26.327, -12.5225, 2.28", "11.9019, -26.9989, -12.7312, 2.5", "12.3212, -28.5, -13.268, 0.66", "12.6005, -29.523, -13.6394, 0.29", "12.7369, -30.0241, -13.8281, 0.29", "13.0944, -31.2187, -14.2763, 2.73", "13.2276, -31.632, -14.4373, 3.46", "13.3755, -32.0958, -14.6322, 3.46", "13.8906, -33.7636, -15.2992, 0.15", "14.0679, -34.3219, -15.5301, 0.15", "14.2452, -34.8399, -15.7682, 0.88", "14.4759, -35.4788, -16.0919, 1.18", "14.789, -36.3989, -16.5903, 0.88", "14.9889, -37.0433, -16.9512, 0.15", "15.2496, -38.005, -17.4978, 1.92", "15.3872, -38.4966, -17.749, 2.87", "15.4978, -38.8969, -17.9446, 2.87", "15.885, -40.3245, -18.5979, 0.74", "16.052, -40.9541, -18.8716, 0.29", "16.1543, -41.3628, -19.0588, 0.59", "16.267, -41.8588, -19.2727, 0.74", "16.5236, -43.057, -19.7368, 0.22", "16.7208, -44.0538, -20.0774, 1.25", "16.8043, -44.527, -20.229, 1.55", "17.0461, -45.8283, -20.6449, 0.22", "17.2753, -46.9361, -20.9806, 0.22", "17.3954, -47.463, -21.1244, 0.88", "17.5402, -47.9947, -21.2355, 1.18", "17.7111, -48.5325, -21.3483, 0.96", "18.0597, -49.4692, -21.5621, 0.22", "18.281, -49.9521, -21.6743, 0.52", "18.3628, -50.1177, -21.7253, 0.66", "18.6718, -50.7515, -21.9277, 0.22", "19.2342, -51.939, -22.3177, 2.8", "19.4458, -52.4037, -22.4668, 3.24", "19.6549, -52.9162, -22.6428, 2.95", "20.3288, -54.6659, -23.2591, 0.29", "20.7172, -55.7076, -23.6119, 0.15", "20.9534, -56.373, -23.8276, 0.96", "21.0604, -56.682, -23.9177, 1.18", "21.4681, -57.9386, -24.2902, 0.22", "21.5844, -58.2995, -24.4005, 0.52", "21.9713, -59.364, -24.7103, 0.22", "22.264, -60.1213, -24.9453, 1.69", "22.4987, -60.6948, -25.12, 2.36", "22.7356, -61.2403, -25.3037, 2.5", "23.3617, -62.5914, -25.7587, 0.22", "23.9867, -63.9616, -26.2464, 0.22", "24.2428, -64.5261, -26.4563, 1.33", "24.4606, -65.0163, -26.6312, 1.92", "24.7271, -65.6557, -26.849, 2.06", "25.3073, -67.1144, -27.2804, 0.22", "25.5545, -67.7711, -27.4595, 0.74", "25.6021, -67.8994, -27.4916, 0.74", "25.8961, -68.6584, -27.6513, 0.22", "26.1889, -69.4162, -27.7835, 1.69", "26.4286, -70.0353, -27.8642, 2.43", "26.5407, -70.3322, -27.8986, 2.5", "27.198, -72.1944, -27.9596, 0.15", "27.5183, -73.1818, -27.9454, 0.15", "27.6296, -73.6062, -27.9206, 0.59", "27.7214, -74.0293, -27.8824, 0.74", "27.9911, -75.5564, -27.7218, 0.22", "28.2026, -77.0915, -27.5454, 2.5", "28.2474, -77.5166, -27.4968, 2.95", "28.5033, -80.1965, -27.2034, 0.22", "28.5421, -80.5616, -27.1655, 0.81", "28.5709, -80.872, -27.1521, 0.81", "28.7149, -82.6581, -27.1844, 0.22", "28.7989, -83.5709, -27.2655, 1.69", "28.8624, -84.1528, -27.3318, 2.14", "29.065, -85.6704, -27.5503, 0.22", "29.3207, -87.4206, -27.7855, 1.25", "29.3735, -87.7856, -27.8302, 1.47", "29.5933, -89.5529, -27.9405, 0.22", "29.6424, -90.0736, -27.9368, 0.74", "29.6541, -90.4874, -27.9083, 0.74", "29.6046, -91.3306, -27.7781, 0.22", "29.5354, -91.9126, -27.6395, 0.22", "29.2607, -93.3279, -27.2955, 2.21", "29.1351, -93.7728, -27.1861, 2.73", "28.5977, -95.3655, -26.8769, 0.22", "28.2907, -96.1532, -26.768, 0.22", "28.0679, -96.6574, -26.7337, 0.81", "27.9044, -97.0018, -26.7314, 1.03", "27.6929, -97.4004, -26.7547, 0.81", "27.1368, -98.3164, -26.7956, 0.22", "26.8351, -98.7501, -26.8088, 1.18", "26.5227, -99.1843, -26.8116, 1.4", "26.2861, -99.5066, -26.8053, 1.18", "25.5559, -100.618, -26.7471, 0.22", "25.1341, -101.388, -26.6536, 0.22", "25.011, -101.669, -26.6059, 0.96", "24.874, -102.091, -26.5367, 1.18", "24.7824, -102.469, -26.4778, 0.88", "24.4403, -104.381, -26.1965, 0.22", "24.31, -105.687, -26.0254, 2.73", "24.2862, -106.159, -25.9629, 2.8", "24.2432, -107.682, -25.7588, 0.22", "24.2333, -108.153, -25.7266, 0.74", "24.228, -108.339, -25.7315, 0.81", "24.1714, -109.259, -25.858, 0.22", "24.1306, -109.623, -25.9436, 0.52", "24.0851, -109.863, -26.0161, 0.74", "23.6593, -111.625, -26.7181, 0.22", "23.3675, -112.714, -27.188, 0.22", "23.105, -113.62, -27.618, 1.62", "22.9756, -114.032, -27.8247, 1.92", "22.5315, -115.429, -28.5508, 0.22", "22.2141, -116.41, -29.063, 0.22", "22.0293, -116.971, -29.3478, 0.96", "21.8596, -117.535, -29.6656, 1.25", "21.7101, -118.106, -29.9961, 0.22", "21.4706, -119.145, -30.5535, 0.22", "21.296, -120.02, -30.9901, 1.03", "21.2539, -120.27, -31.105, 1.03", "21.0413, -121.753, -31.7382, 0.22", "20.9703, -122.396, -31.9655, 0.22", "20.8867, -123.317, -32.2379, 2.21", "20.8488, -123.751, -32.3354, 2.43", "20.7673, -124.705, -32.5113, 1.47", "20.6491, -125.846, -32.6733, 0.22", "20.5072, -127.066, -32.7789, 0.22", "20.4103, -127.899, -32.8477, 1.62", "20.3532, -128.39, -32.8887, 2.14", "20.2884, -128.925, -32.9246, 2.14", "20.0744, -130.443, -33.0033, 0.22", "19.971, -131.173, -33.0421, 1.25", "19.9135, -131.599, -33.0621, 1.55", "19.8232, -132.356, -33.0753, 1.18", "19.649, -133.97, -33.0643, 0.22", "19.5656, -134.751, -33.0455, 1.69", "19.513, -135.252, -33.0297, 1.99", "19.3153, -136.972, -32.9568, 0.22", "19.1872, -138.089, -32.8904, 0.81", "19.1549, -138.398, -32.861, 0.81" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.78402, 3.42073, 10.9728, 0.59", "2.48176, 3.69662, 11.7338, 0.59", "2.08145, 4.06202, 12.7417, 0.81", "0.0304042, 5.93417, 17.9058, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-13.986, -4.00827, -3.2872, 1.25", "-14.1496, -4.08452, -3.29789, 1.25", "-15.2864, -4.61417, -3.37211, 1.25", "-16.2263, -5.05213, -3.43348, 1.4", "-16.8997, -5.3659, -3.47744, 1.55", "-17.7417, -5.75819, -3.53241, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-13.616, -1.99427, 4.5928, 1.92", "-13.616, -1.99427, 4.5928, 1.92", "-14.531, -1.91635, 4.5928, 1.33", "-15.3616, -1.85432, 4.57388, 1.18", "-16.4445, -1.7805, 4.53191, 1.18", "-17.487, -1.70876, 4.48381, 1.18", "-18.7916, -1.62075, 4.41946, 1.18", "-20.2053, -1.54309, 4.34812, 1.62", "-21.3803, -1.49391, 4.27078, 2.21", "-21.922, -1.47264, 4.24321, 2.58", "-22.6742, -1.42029, 4.21673, 2.87", "-23.3466, -1.33424, 4.20582, 2.87", "-24.3708, -1.13549, 4.22947, 2.58", "-25.3883, -0.878031, 4.29822, 1.69", "-26.74, -0.459632, 4.49385, 0.88", "-27.7788, -0.0757311, 4.73881, 0.81", "-28.4191, 0.20281, 4.94181, 0.81", "-28.9877, 0.488572, 5.18293, 1.03", "-29.4044, 0.722175, 5.40752, 1.18", "-30.0858, 1.10137, 5.88362, 1.18", "-30.8175, 1.45664, 6.47615, 1.4", "-31.1999, 1.60449, 6.81442, 1.55", "-31.7622, 1.77269, 7.32821, 1.55", "-32.356, 1.92755, 7.86836, 1.33", "-33.5559, 2.19439, 8.96172, 1.25", "-34.7507, 2.4135, 10.0214, 2.28", "-35.3653, 2.50568, 10.572, 3.24", "-35.9001, 2.56995, 11.0747, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "2.47402, 7.23973, -0.657204, 1.77", "2.47402, 7.23973, -0.657204, 1.77", "2.5397, 7.99029, -0.592407, 1.33", "2.61564, 8.78818, -0.506656, 1.03", "2.66519, 9.31156, -0.443502, 0.96", "2.72269, 9.92061, -0.366472, 0.96", "2.78486, 10.5711, -0.286354, 1.11", "2.84289, 11.2407, -0.204742, 1.33", "2.87647, 11.7416, -0.140616, 1.55", "2.89799, 12.26, -0.084433, 1.55", "2.90654, 12.8299, -0.0404896, 1.55", "2.89871, 13.6342, -0.0249406, 1.18", "2.87249, 14.3484, -0.047604, 1.03", "2.81576, 15.2595, -0.124597, 1.4", "2.77063, 15.8305, -0.216163, 1.84", "2.70867, 16.5333, -0.367949, 2.14", "2.65598, 17.0499, -0.499603, 2.14", "2.59583, 17.5743, -0.660443, 2.21", "2.54699, 18.0221, -0.826406, 1.99", "2.47564, 18.7315, -1.14826, 1.69", "2.43903, 19.1621, -1.35041, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "12.624, 0.380726, -4.7872, 6.48", "12.624, 0.380726, -4.7872, 6.48", "14.0503, 0.57844, -4.74343, 6.48", "15.3058, 0.752482, -4.70489, 5.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000064795763495
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "13.2236, 1.85291, -2.44705, 0.836316", "27.8554, 5.156, -2.44705, 0.836316", "42.4872, 8.45908, -2.44705, 0.836316" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "0.0304042, 5.93417, 17.9058, 2.36", "-0.202122, 5.7714, 18.0356, 2.36", "-1.25324, 5.08675, 18.4979, 1.69", "-1.93067, 4.63668, 18.7376, 0.44", "-2.36499, 4.30701, 18.8709, 0.74", "-2.67521, 4.04183, 18.9699, 0.88", "-3.05271, 3.67952, 19.098, 0.88", "-3.29836, 3.3976, 19.1594, 0.74", "-2.90304, 3.19265, 19.5906, 0.52", "-2.54734, 3.01321, 20.1618, 0.66", "-1.90641, 2.67815, 21.2268, 0.81", "-1.47914, 2.42621, 21.9799, 1.33", "-1.30356, 2.30311, 22.327, 1.33", "0.0900373, 1.15446, 25.5979, 0.88", "0.603436, 0.640513, 27.1171, 0.74", "0.76118, 0.412878, 27.8013, 0.74", "0.86155, 0.067872, 28.8053, 0.81", "0.84283, -0.340803, 29.9705, 0.96", "0.73034, -0.645656, 30.7718, 1.11", "0.507463, -0.878598, 31.2517, 1.77", "0.251942, -1.03993, 31.6318, 2.21", "-0.100594, -1.17594, 32.0825, 2.5", "-0.436212, -1.244, 32.4579, 2.65", "-0.878718, -1.26509, 32.8892, 2.65", "-1.95136, -1.21273, 33.7895, 0.81", "-2.24405, -1.17849, 34.0034, 0.66", "-2.86156, -1.11798, 34.3774, 0.88", "-3.24679, -1.10284, 34.57, 0.59", "-3.96722, -1.11723, 34.8854, 0.29", "-4.71036, -1.12024, 35.1286, 0.29", "-4.52659, -1.46345, 35.1293, 0.29", "-3.95673, -2.47396, 35.1615, 0.29", "-3.49457, -3.16463, 35.121, 0.29", "-2.83075, -4.05892, 35.0321, 0.29", "-1.93112, -5.17832, 34.8876, 0.29", "-1.08514, -6.15515, 34.7529, 0.37", "-0.125404, -7.16825, 34.5951, 0.37", "1.07096, -8.28269, 34.3818, 0.59", "1.42923, -8.59904, 34.3082, 1.03", "1.75088, -8.87794, 34.2254, 1.18" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "0.0304042, 5.93417, 17.9058, 0.59", "0.0692993, 7.43828, 17.9966, 0.59", "0.0970962, 8.5132, 18.0616, 0.29", "0.117511, 9.30265, 18.1093, 0.29", "0.142949, 10.2863, 18.1687, 0.81", "0.162643, 11.0479, 18.2147, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-17.7417, -5.75819, -3.53241, 0.22", "-18.6098, -5.40682, -3.79169, 0.22", "-19.7983, -4.95848, -4.21248, 0.22", "-20.2462, -4.79316, -4.36853, 0.66", "-20.8574, -4.59376, -4.62144, 0.81", "-21.4953, -4.40859, -4.94433, 0.52", "-22.0086, -4.27084, -5.23508, 0.22", "-22.867, -4.13354, -5.71637, 0.22", "-23.9875, -4.06546, -6.31908, 1.33", "-25.0715, -4.06941, -6.88593, 1.99", "-26.1166, -4.15404, -7.39562, 2.21", "-27.0574, -4.30202, -7.83239, 2.28", "-28.832, -4.76191, -8.76225, 0.52", "-29.907, -5.14727, -9.3733, 0.44", "-30.4864, -5.38482, -9.73256, 0.22", "-31.4971, -5.80406, -10.389, 1.25", "-32.0367, -6.02615, -10.7577, 1.33", "-34.2211, -6.98171, -12.415, 0.22", "-34.8266, -7.24858, -12.9594, 0.22", "-36.0151, -7.73798, -14.1203, 2.28", "-36.8671, -8.0725, -15.0244, 3.61", "-37.2415, -8.19583, -15.4442, 3.61" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-17.7417, -5.75819, -3.53241, 0.96", "-19.4072, -6.08246, -1.84139, 0.96", "-20.3436, -6.18496, -1.07173, 1.25", "-21.0383, -6.22928, -0.583608, 1.33", "-21.7401, -6.23976, -0.145949, 1.33", "-22.7217, -6.2235, 0.403978, 0.52", "-23.5559, -6.19097, 0.810687, 0.88", "-24.426, -6.09113, 0.958172, 1.33", "-24.8174, -6.034, 0.962517, 1.55", "-25.339, -5.94856, 0.920996, 1.69", "-25.726, -5.89076, 0.863653, 1.69", "-26.504, -5.81589, 0.724853, 1.18", "-27.961, -5.7827, 0.486331, 0.52", "-28.604, -5.80423, 0.405185, 0.66", "-29.2513, -5.84858, 0.355113, 0.66", "-29.8951, -5.91813, 0.336156, 0.66", "-30.7623, -6.02599, 0.33869, 0.81", "-32.0262, -6.21468, 0.415378, 1.4", "-32.5796, -6.31512, 0.498293, 2.14", "-33.1886, -6.42373, 0.605367, 2.5", "-33.9757, -6.55928, 0.767657, 2.8" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-35.9001, 2.56995, 11.0747, 1.84", "-37.1544, 0.901122, 12.925, 1.84", "-38.149, -0.422027, 14.392, 1.18", "-38.8132, -1.30566, 15.3718, 0.88", "-39.4325, -2.12971, 16.2854, 1.03" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-35.9001, 2.56995, 11.0747, 1.4", "-36.4571, 4.37985, 11.3959, 1.4", "-36.9259, 5.81484, 11.638, 0.81", "-37.1844, 6.48187, 11.7624, 0.81", "-37.5923, 7.40219, 11.9429, 0.96", "-37.8904, 8.00505, 12.0644, 1.11", "-38.2355, 8.63794, 12.1935, 1.11", "-38.5655, 9.19061, 12.2906, 1.11", "-39.1124, 9.97878, 12.4503, 0.52", "-39.4022, 10.4096, 12.5667, 0.81", "-39.6719, 10.8856, 12.7124, 0.81", "-39.9707, 11.6193, 12.9493, 0.52", "-40.1373, 12.2975, 13.1795, 0.52", "-40.193, 12.9, 13.3986, 0.52", "-40.1702, 13.9459, 13.778, 0.52", "-40.0803, 14.7561, 14.0878, 1.33", "-39.9933, 15.1725, 14.2574, 1.55", "-39.8967, 15.4739, 14.3905, 1.69", "-39.6815, 16.0273, 14.656, 1.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "2.43903, 19.1621, -1.35041, 0.44", "3.88097, 20.2807, -4.00001, 0.44", "4.37162, 20.6968, -4.89328, 0.52", "4.7833, 21.0731, -5.71539, 0.37", "5.27106, 21.5348, -6.61945, 0.37", "7.32685, 23.3823, -10.343, 0.88", "7.84338, 23.7619, -11.2329, 1.25", "8.2864, 24.0428, -11.9706, 0.74", "9.22916, 24.6806, -13.6372, 0.44", "9.98949, 25.1996, -15.0298, 2.14", "10.6438, 25.6345, -16.2235, 2.28", "12.4697, 26.7076, -19.2911, 0.59", "13.3799, 27.1373, -20.8191, 1.03", "14.8481, 27.6803, -23.5706, 1.18", "15.7805, 27.981, -25.5403, 1.4", "16.4264, 28.1784, -27.0072, 1.62", "17.3758, 28.467, -29.2762, 1.84", "18.4933, 28.8122, -32.2018, 3.17", "21.9427, 29.8739, -41.8053, 1.4", "23.8765, 30.5586, -47.5905, 1.03", "24.8597, 30.9877, -50.7388, 2.14", "26.4119, 31.8302, -56.0033, 1.77", "28.4676, 33.2153, -63.46, 1.33", "28.7677, 33.459, -64.6147, 1.55", "30.3997, 35.3504, -71.9117, 0.22", "30.6003, 35.682, -72.9981, 0.22", "30.9602, 36.5762, -75.504, 1.4", "31.061, 37.0099, -76.4811, 2.14", "31.1121, 37.4383, -77.2551, 2.14", "31.7812, 42.6208, -88.0693, 0.22", "31.8574, 43.5984, -89.9398, 0.22", "31.9452, 44.8929, -92.3048, 1.4", "31.9714, 45.3344, -93.0781, 1.99", "32.0413, 45.8867, -94.2219, 1.99", "33.0185, 52.9176, -107.773, 0.22", "33.2871, 54.8407, -111.104, 0.22", "33.3935, 55.5285, -112.301, 1.18", "33.5331, 56.2924, -113.759, 1.47", "35.1936, 64.667, -130.002, 0.22", "35.7138, 67.2308, -134.866, 0.22", "35.9655, 68.4596, -137.131, 2.06", "36.165, 69.2934, -138.827, 2.14", "37.3823, 74.0241, -148.848, 0.22", "37.5866, 74.8034, -150.52, 1.33", "37.7609, 75.807, -152.19, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "2.43903, 19.1621, -1.35041, 0.66", "2.56472, 20.3378, -1.58041, 0.66", "2.60486, 21.2734, -1.85078, 0.66", "2.56403, 22.3559, -2.20969, 0.52", "2.4186, 23.2606, -2.55088, 0.44", "2.04465, 24.9261, -3.21763, 1.03", "1.91905, 25.4308, -3.42084, 1.25", "1.76618, 25.9355, -3.65087, 1.4", "1.55884, 26.5348, -3.93894, 1.4", "1.14302, 27.7157, -4.50874, 0.59", "0.94645, 28.424, -4.78794, 0.37", "0.8867, 28.8614, -4.88928, 0.37", "0.89746, 29.6926, -5.06194, 0.81", "0.94953, 30.1098, -5.13563, 0.88", "1.05413, 30.6237, -5.2106, 0.66", "1.19165, 31.1985, -5.26971, 0.29", "1.3271, 31.7672, -5.32519, 0.29", "1.67363, 33.3469, -5.49307, 1.84", "1.82233, 34.1513, -5.58673, 2.95", "1.89094, 34.6377, -5.64573, 3.24", "1.9334, 35.1253, -5.70639, 3.39" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "15.3058, 0.752482, -4.70489, 1.03", "16.7537, -1.44953, -5.36134, 1.03", "17.4059, -2.55313, -5.74615, 0.66", "17.8673, -3.4073, -6.09155, 0.59", "18.3769, -4.46891, -6.53598, 0.66", "18.6363, -5.07585, -6.78828, 0.66", "19.1293, -6.34788, -7.30583, 1.47", "19.3308, -7.04118, -7.61831, 1.92", "19.4674, -7.63852, -7.8336, 2.14", "19.5967, -8.35666, -8.04986, 1.99", "19.7812, -9.42062, -8.27338, 1.55", "20.0673, -10.7747, -8.40376, 0.74", "20.3012, -11.7047, -8.38448, 0.52", "20.6939, -13.0176, -8.25654, 0.74", "20.9959, -13.8496, -8.09635, 0.74", "21.3832, -14.7482, -7.86511, 0.66", "21.7395, -15.4788, -7.60549, 1.11", "22.0378, -16.0407, -7.36493, 1.62", "22.3601, -16.6183, -7.11376, 1.62", "23.1185, -17.9445, -6.59307, 0.81", "23.6943, -18.9141, -6.22338, 0.59", "24.3831, -20.0705, -5.81227, 0.44", "24.7897, -20.7724, -5.63813, 0.44", "25.3899, -21.817, -5.46584, 2.06", "25.8235, -22.5735, -5.40296, 3.02", "26.1075, -23.0564, -5.40678, 3.61", "26.5069, -23.7135, -5.46345, 3.46", "27.8513, -25.8518, -5.80201, 0.88", "28.3509, -26.6352, -5.94481, 0.66", "28.8779, -27.4443, -6.09614, 0.88", "29.312, -28.1127, -6.21379, 0.88", "29.9206, -29.0296, -6.36768, 0.29", "30.2841, -29.5618, -6.44771, 0.29", "30.8607, -30.4065, -6.53211, 1.47", "31.3835, -31.2148, -6.60894, 1.99", "31.8903, -32.0446, -6.67794, 1.77", "32.6676, -33.4005, -6.75923, 0.22", "32.994, -33.9908, -6.77685, 0.22", "33.288, -34.5174, -6.79615, 0.44", "33.9147, -35.6051, -6.84657, 0.81", "34.1239, -35.9573, -6.86269, 1.11", "34.5525, -36.6453, -6.89025, 0.81", "35.0105, -37.351, -6.91895, 0.44", "35.6067, -38.2727, -7.05473, 0.29", "36.2772, -39.318, -7.30771, 1.84", "36.7412, -40.005, -7.54492, 3.02", "37.0328, -40.4276, -7.7131, 3.61", "37.4272, -41.0015, -7.96105, 3.39", "38.9222, -43.2199, -8.99405, 0.22", "40.0736, -45.0003, -9.87637, 0.22", "40.8988, -46.2979, -10.5725, 1.69", "41.1345, -46.6755, -10.7866, 1.69" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "15.3058, 0.752482, -4.70489, 4.79", "17.5237, 0.684785, -4.77519, 4.79", "18.1867, 0.664549, -4.7962, 4.42" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "42.4872, 8.45908, -2.44705, 0.242583", "57.119, 11.7622, -2.44705, 0.242583", "71.7508, 15.0653, -2.44705, 0.242583" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "0.162643, 11.0479, 18.2147, 0.22", "0.152412, 11.8346, 19.2435, 0.22", "0.15757, 12.3629, 19.9323, 1.33", "0.163177, 12.5864, 20.2102, 1.62", "0.187765, 12.9244, 20.5866, 1.62", "0.332929, 14.0822, 21.7374, 0.81", "0.438068, 14.7812, 22.3685, 0.96", "0.525107, 15.1994, 22.7117, 1.03", "0.625687, 15.6308, 23.0164, 1.03", "0.82088, 16.4511, 23.4782, 0.22", "0.96319, 17.1003, 23.728, 0.22", "1.033, 17.475, 23.7937, 0.74", "1.06356, 17.6697, 23.8095, 0.74", "1.14198, 18.327, 23.843, 0.37", "1.16257, 18.5846, 23.8516, 0.37", "1.1628, 18.9722, 23.8621, 0.66", "1.14057, 19.4181, 23.873, 0.66", "1.11413, 20.0507, 23.8849, 0.37", "1.10152, 20.4929, 23.8872, 0.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.162643, 11.0479, 18.2147, 0.22", "-1.13011, 10.5763, 18.4263, 0.22", "-1.65877, 10.3098, 18.4141, 0.22", "-1.86707, 10.2049, 18.4094, 0.52", "-2.29382, 9.98978, 18.3995, 0.52", "-2.77699, 9.74623, 18.3884, 0.22", "-3.9212, 9.16954, 18.3621, 1.92", "-4.32313, 8.91672, 18.1896, 2.5" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-37.2415, -8.19583, -15.4442, 1.18", "-38.2004, -7.56391, -15.8381, 1.18", "-39.3575, -6.94711, -16.3295, 0.22", "-39.8407, -6.71365, -16.5423, 0.22", "-40.2993, -6.50624, -16.7775, 0.44", "-40.7193, -6.32141, -16.9998, 0.44", "-41.6131, -5.93753, -17.4859, 0.22", "-42.5592, -5.59396, -18.0463, 0.22", "-43.3145, -5.34116, -18.5345, 0.22", "-44.2492, -5.02384, -19.1517, 1.33", "-44.9767, -4.76656, -19.6398, 1.55", "-45.1561, -4.70329, -19.7593, 1.55", "-46.5354, -4.20606, -20.6868, 0.22", "-47.9107, -3.70822, -21.5844, 0.22", "-48.5443, -3.48518, -21.9698, 1.33", "-48.9209, -3.35203, -22.1801, 1.62", "-49.9529, -2.9942, -22.774, 0.22", "-50.4838, -2.81593, -23.0958, 0.44", "-50.869, -2.71405, -23.3637, 0.37", "-51.3304, -2.60867, -23.7135, 0.22", "-52.0922, -2.44097, -24.3442, 1.69", "-52.7789, -2.29055, -24.9169, 2.14", "-53.5776, -2.09256, -25.5701, 2.28", "-54.9287, -1.74528, -26.6841, 0.66", "-55.5781, -1.57012, -27.2365, 0.22", "-56.2177, -1.38315, -27.7974, 0.22", "-56.9149, -1.15669, -28.4146, 0.22", "-57.7354, -0.834341, -29.0736, 1.47", "-58.3066, -0.57197, -29.551, 1.77", "-58.8805, -0.27127, -30.0845, 1.55", "-59.9823, 0.288285, -31.1859, 0.22", "-60.4098, 0.508902, -31.6211, 0.22", "-61.207, 0.930741, -32.4646, 1.55", "-62.3183, 1.48477, -33.6323, 2.06", "-62.8329, 1.74764, -34.1155, 1.47", "-63.6446, 2.17179, -34.79, 0.22", "-64.2279, 2.48388, -35.2475, 0.88", "-64.5875, 2.66784, -35.5134, 1.18", "-65.9324, 3.31091, -36.497, 0.22", "-67.1683, 3.84185, -37.3551, 0.22", "-68.0073, 4.16254, -37.9677, 0.59", "-68.2939, 4.26184, -38.1955, 0.59", "-69.3423, 4.57551, -39.0501, 1.4", "-69.9574, 4.74193, -39.5475, 1.62", "-71.3617, 5.05093, -40.6686, 0.22", "-72.0329, 5.1632, -41.2338, 0.59", "-72.3791, 5.21315, -41.5324, 0.74", "-73.2309, 5.34025, -42.2579, 0.22", "-73.9228, 5.46508, -42.8534, 1.62", "-74.3723, 5.56536, -43.2019, 1.84", "-74.8866, 5.73061, -43.5324, 1.84" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-37.2415, -8.19583, -15.4442, 3.76", "-37.6717, -8.39277, -16.0537, 3.76", "-38.5889, -8.77092, -17.1377, 2.8", "-39.5692, -9.13817, -18.1682, 2.06", "-40.4912, -9.46281, -19.0595, 1.25", "-40.8984, -9.59593, -19.4112, 0.96", "-41.6225, -9.82109, -19.9989, 0.22", "-42.2134, -9.97006, -20.3816, 1.33", "-42.7928, -10.0825, -20.6805, 1.84", "-43.2732, -10.1552, -20.8966, 1.92", "-44.0145, -10.2479, -21.2465, 0.22", "-44.7844, -10.3405, -21.719, 0.22", "-45.399, -10.425, -22.1659, 1.11", "-45.886, -10.5373, -22.5373, 1.55", "-46.3797, -10.6913, -22.8871, 1.84", "-46.9089, -10.8522, -23.2342, 1.69", "-47.9914, -11.1732, -23.9363, 0.22", "-48.8399, -11.416, -24.3863, 0.22", "-50.0369, -11.7475, -24.9048, 0.22", "-51.1344, -12.0282, -25.2233, 0.66", "-52.3598, -12.2934, -25.429, 2.21", "-53.0993, -12.4293, -25.4881, 2.65", "-54.3765, -12.6092, -25.496, 1.47", "-55.0084, -12.6863, -25.5124, 0.22", "-56.4687, -12.8346, -25.6306, 0.22", "-57.6494, -12.9934, -25.7774, 1.84", "-57.9126, -13.0402, -25.8178, 2.43", "-58.4572, -13.1447, -25.9219, 1.77", "-59.8344, -13.4197, -26.292, 0.22", "-60.7242, -13.6116, -26.5635, 0.22", "-61.6049, -13.8054, -26.8646, 0.66", "-61.9012, -13.874, -26.9749, 0.66", "-62.6455, -14.0595, -27.3255, 0.22", "-63.5353, -14.3212, -27.7917, 2.06", "-63.9846, -14.4679, -28.0086, 2.73", "-64.3165, -14.5823, -28.1664, 3.09", "-64.9095, -14.7925, -28.459, 2.87", "-67.1144, -15.578, -29.6046, 0.29", "-68.473, -16.049, -30.2967, 0.22", "-70.4383, -16.7098, -31.2704, 0.22", "-71.2503, -16.9668, -31.6246, 2.14", "-71.6512, -17.0889, -31.7789, 2.65", "-72.3562, -17.2932, -32.0145, 2.65", "-73.9885, -17.7141, -32.4502, 0.22", "-74.8604, -17.9106, -32.6957, 0.22", "-75.8647, -18.1275, -32.9995, 1.11", "-76.1797, -18.1995, -33.1068, 1.47", "-76.8555, -18.3552, -33.3696, 1.47", "-78.0693, -18.6269, -33.9314, 0.15", "-78.3924, -18.6985, -34.1281, 0.44", "-78.6088, -18.745, -34.2915, 0.66", "-79.8808, -19.01, -35.2967, 0.29", "-80.8171, -19.1875, -35.9874, 1.92", "-81.326, -19.2715, -36.3504, 2.73", "-81.7878, -19.3466, -36.6762, 2.87", "-83.8534, -19.6795, -38.0374, 0.22", "-85.21, -19.8987, -38.7955, 0.22", "-86.1251, -20.0472, -39.2001, 1.69", "-86.683, -20.1421, -39.3988, 2.14", "-87.2364, -20.2448, -39.5489, 1.92", "-87.8817, -20.377, -39.6568, 1.33", "-89.5274, -20.7469, -39.7221, 0.22", "-90.1522, -20.9039, -39.7301, 0.96", "-90.5857, -21.0279, -39.7361, 1.25", "-91.027, -21.1602, -39.7286, 1.11", "-92.2593, -21.5398, -39.6678, 0.22", "-92.9984, -21.7848, -39.6938, 1.92", "-93.525, -21.9686, -39.7631, 2.06", "-94.0649, -22.157, -39.8844, 1.84", "-95.0391, -22.505, -40.1681, 0.37", "-95.7412, -22.773, -40.4252, 0.22", "-97.6112, -23.5428, -41.2686, 1.11", "-98.0598, -23.7406, -41.4984, 1.11", "-99.1267, -24.2213, -42.1014, 0.22", "-100.121, -24.6713, -42.71, 0.22", "-101.084, -25.1067, -43.3296, 1.69", "-101.53, -25.3035, -43.6106, 2.14", "-101.889, -25.4612, -43.8263, 2.14", "-102.964, -25.9135, -44.5088, 0.22", "-104.202, -26.4125, -45.3327, 0.22", "-104.808, -26.6373, -45.736, 1.99", "-105.083, -26.7306, -45.9081, 2.58", "-106.08, -27.0504, -46.5085, 1.99", "-107.587, -27.422, -47.2007, 0.22", "-108.085, -27.5221, -47.3783, 1.47", "-108.417, -27.5803, -47.4847, 1.69", "-108.939, -27.6642, -47.6463, 1.69", "-111.052, -27.9684, -48.247, 0.22", "-114.933, -28.4684, -49.2459, 0.22", "-116.461, -28.6447, -49.6342, 1.84", "-117.028, -28.711, -49.7829, 2.14", "-117.43, -28.758, -49.8879, 2.14", "-119.03, -28.9499, -50.2803, 0.22", "-119.533, -29.0102, -50.4008, 0.96", "-120.016, -29.073, -50.5492, 1.11", "-122.083, -29.3131, -51.188, 0.22", "-123.003, -29.4046, -51.4341, 0.22", "-123.816, -29.4742, -51.6317, 1.69", "-124.466, -29.5239, -51.7676, 2.21", "-125.235, -29.5785, -51.8916, 2.28", "-126.615, -29.6752, -52.0236, 0.29", "-127.267, -29.7204, -52.0479, 1.18", "-127.774, -29.7668, -52.0616, 1.33", "-129.558, -29.9753, -52.1922, 0.22", "-131.059, -30.2024, -52.3372, 0.22", "-132.049, -30.3802, -52.4552, 1.62", "-132.417, -30.4574, -52.5143, 2.14", "-132.864, -30.5608, -52.6019, 2.14", "-134.667, -30.9996, -52.9859, 0.22", "-135.316, -31.1651, -53.1426, 0.22", "-135.9, -31.3196, -53.306, 1.25", "-136.455, -31.4593, -53.4635, 1.4", "-137.371, -31.6704, -53.711, 0.22", "-137.851, -31.7635, -53.8345, 0.81", "-138.212, -31.8189, -53.9429, 0.81", "-139.392, -31.9714, -54.4171, 0.22", "-139.965, -32.0373, -54.6867, 1.62", "-140.472, -32.0859, -54.9435, 1.99", "-140.843, -32.1135, -55.1469, 1.99", "-142.708, -32.2283, -56.1729, 0.22", "-143.437, -32.2596, -56.5584, 0.22", "-143.948, -32.2633, -56.8122, 1.03", "-144.288, -32.2614, -56.9745, 1.03", "-145.821, -32.2372, -57.6323, 0.22", "-146.186, -32.2249, -57.7654, 0.22", "-146.781, -32.1871, -57.9613, 0.81", "-147.245, -32.1531, -58.122, 1.11", "-148.346, -32.0855, -58.5619, 0.22", "-148.923, -32.056, -58.7998, 0.22", "-150.219, -32.0042, -59.3268, 0.22", "-151.19, -31.9756, -59.7321, 2.28", "-151.675, -31.9732, -59.9517, 2.73", "-152.958, -32.0008, -60.5743, 0.96", "-154.087, -32.0396, -61.1429, 0.22", "-154.522, -32.0738, -61.3973, 0.66", "-154.793, -32.1036, -61.5701, 0.66", "-155.709, -32.2204, -62.1332, 0.22", "-156.194, -32.2973, -62.4405, 1.25", "-156.661, -32.3919, -62.766, 1.47", "-158.047, -32.7589, -63.8918, 0.22", "-158.557, -32.9042, -64.3046, 0.74", "-159.056, -33.0531, -64.7108, 1.03", "-159.652, -33.2445, -65.2108, 1.25", "-161.033, -33.6952, -66.3181, 0.22", "-162.146, -34.0393, -67.1438, 0.22", "-162.914, -34.265, -67.6734, 1.55", "-163.586, -34.4489, -68.1278, 1.84", "-164.943, -34.7487, -69.0735, 0.22", "-166.295, -34.9745, -69.9984, 0.22", "-167.249, -35.0829, -70.6229, 1.69", "-167.643, -35.1063, -70.8743, 2.14", "-168.085, -35.1049, -71.1706, 2.14", "-170.177, -34.971, -72.5946, 0.22", "-170.8, -34.8924, -73.0325, 0.22", "-171.07, -34.8494, -73.2457, 0.81", "-171.285, -34.8205, -73.3993, 0.96", "-172.923, -34.6121, -74.4078, 0.22", "-173.648, -34.5255, -74.7959, 1.33", "-174.0, -34.4875, -74.9383, 1.69", "-174.499, -34.4418, -75.1179, 1.69", "-177.186, -34.2562, -75.9738, 0.22", "-177.672, -34.2326, -76.0991, 0.66", "-178.047, -34.2228, -76.1695, 0.66", "-179.919, -34.186, -76.4724, 0.22", "-180.305, -34.1775, -76.5465, 0.96", "-180.859, -34.1559, -76.6691, 1.25", "-182.071, -34.0807, -77.0079, 0.22", "-182.515, -34.0478, -77.1643, 0.52", "-182.776, -34.02, -77.2749, 0.74", "-184.105, -33.8656, -77.853, 0.22", "-184.89, -33.783, -78.1737, 1.69", "-185.104, -33.7615, -78.2584, 2.21", "-185.735, -33.7122, -78.4955, 2.21", "-188.401, -33.5672, -79.3994, 0.22", "-190.099, -33.4952, -79.9193, 0.22", "-190.78, -33.4815, -80.0961, 0.59", "-190.992, -33.4821, -80.1482, 0.59", "-192.24, -33.5077, -80.4324, 0.22", "-192.767, -33.5337, -80.5312, 0.96" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-33.9757, -6.55928, 0.767657, 0.59", "-34.7191, -7.76835, 1.14178, 0.59", "-35.3347, -8.63711, 1.26031, 0.37", "-35.7277, -9.12898, 1.26965, 0.29", "-36.0458, -9.49157, 1.24052, 0.29", "-36.52, -9.99357, 1.17258, 0.52", "-37.2345, -10.6922, 1.05677, 0.66", "-37.8009, -11.1735, 0.879403, 0.66", "-38.3728, -11.6232, 0.673479, 0.59", "-38.8963, -12.0066, 0.482854, 0.66", "-39.3695, -12.3434, 0.312275, 0.44", "-40.0876, -12.8593, 0.0605466, 0.29", "-41.5766, -13.9581, -0.411504, 3.39", "-42.0756, -14.3274, -0.562139, 4.13", "-42.5108, -14.6533, -0.701022, 4.13" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-33.9757, -6.55928, 0.767657, 0.29", "-35.3696, -6.65781, -1.09669, 0.29", "-35.5646, -6.66196, -1.35609, 0.66", "-36.3969, -6.67994, -2.46999, 0.44", "-36.7096, -6.6823, -2.87529, 0.37", "-37.4461, -6.69226, -3.79556, 0.37", "-38.4536, -6.74194, -5.00586, 1.03", "-38.776, -6.76069, -5.35176, 1.4", "-39.2765, -6.82108, -5.83671, 1.55", "-39.7045, -6.8893, -6.20649, 0.44", "-40.198, -7.00656, -6.62369, 0.22", "-40.7942, -7.16567, -7.1213, 0.22", "-41.4433, -7.30999, -7.65858, 0.44", "-41.9182, -7.40227, -8.09866, 0.66", "-42.2053, -7.44918, -8.39174, 0.88", "-42.7949, -7.53563, -9.05247, 0.88", "-43.6913, -7.62291, -10.0985, 2.21", "-44.1634, -7.6491, -10.6755, 2.87", "-44.5773, -7.66375, -11.1966, 3.09", "-44.8152, -7.68591, -11.5088, 3.24", "-45.8804, -7.85642, -12.9175, 0.52", "-46.1187, -7.89656, -13.206, 0.66", "-46.4705, -7.94702, -13.5878, 0.66", "-46.8851, -7.9615, -13.9711, 0.52", "-48.1954, -7.86162, -15.0009, 0.22", "-48.8172, -7.7524, -15.4065, 0.22", "-49.8225, -7.48939, -16.0167, 0.81", "-50.3964, -7.32805, -16.3499, 0.22", "-51.2296, -7.07389, -16.8123, 1.92", "-51.5919, -6.96033, -17.0157, 2.5", "-51.9463, -6.86314, -17.2406, 2.73", "-53.4955, -6.5622, -18.4485, 0.29", "-54.0437, -6.50086, -18.9373, 0.22", "-54.6278, -6.46931, -19.4942, 1.77", "-55.0903, -6.46474, -19.9569, 2.28", "-56.2414, -6.47303, -21.1205, 0.22", "-56.7565, -6.4784, -21.6306, 0.22", "-57.0631, -6.48664, -21.9225, 0.66", "-57.3692, -6.49376, -22.2236, 0.66", "-58.1759, -6.50166, -23.0062, 0.22", "-58.7304, -6.47876, -23.5321, 1.33", "-59.0541, -6.43674, -23.8433, 2.36", "-59.5906, -6.34689, -24.3938, 2.36", "-60.6848, -6.13952, -25.6013, 0.22", "-61.5111, -5.99475, -26.6125, 0.22", "-62.1996, -5.85676, -27.4587, 0.22", "-63.0823, -5.6353, -28.471, 2.28", "-63.6008, -5.49417, -29.0385, 2.8", "-64.008, -5.3748, -29.4665, 3.02", "-65.7394, -4.89358, -31.2172, 0.22", "-67.1156, -4.51967, -32.5383, 0.22", "-68.2135, -4.24189, -33.5274, 1.84", "-68.7221, -4.11863, -33.9462, 2.65", "-69.2393, -3.98852, -34.3444, 2.65", "-70.8701, -3.57411, -35.5277, 0.22", "-71.509, -3.41697, -35.9787, 0.44", "-71.7613, -3.36626, -36.1755, 0.44", "-72.2587, -3.26926, -36.5742, 0.15", "-72.9385, -3.09854, -37.0799, 1.62", "-73.4025, -2.96318, -37.4083, 2.36", "-73.9372, -2.78668, -37.7824, 2.36", "-75.0962, -2.45729, -38.5795, 0.22", "-75.8924, -2.25637, -39.1048, 0.22", "-76.5658, -2.10028, -39.5243, 1.03", "-77.1155, -1.97898, -39.8338, 1.55", "-77.5705, -1.89296, -40.0641, 1.55", "-78.6871, -1.77446, -40.5466, 0.22", "-79.2159, -1.77666, -40.7601, 0.22", "-79.5692, -1.80213, -40.8962, 1.33", "-79.9687, -1.85051, -41.0527, 1.62", "-80.3925, -1.91029, -41.2236, 1.33", "-82.0736, -2.15941, -41.9266, 0.22", "-82.9354, -2.27738, -42.3019, 1.03", "-83.3371, -2.33351, -42.4831, 1.55", "-83.7411, -2.38985, -42.6714, 1.55", "-84.7843, -2.52219, -43.1471, 0.22", "-85.4594, -2.57318, -43.417, 0.22", "-86.2049, -2.58242, -43.6586, 1.62", "-86.7223, -2.56628, -43.7943, 2.36", "-87.0329, -2.53498, -43.8642, 2.58", "-88.0836, -2.36049, -44.0693, 0.59", "-89.152, -2.11261, -44.2744, 0.22", "-89.5305, -1.9984, -44.3573, 0.66", "-89.8757, -1.84902, -44.4332, 0.66", "-91.0597, -1.19735, -44.742, 0.22", "-91.4656, -0.926824, -44.8921, 0.59", "-91.8239, -0.671842, -45.1815, 0.59", "-92.2249, -0.392712, -45.6944, 0.22", "-92.8687, 0.039032, -46.6971, 2.28", "-93.1821, 0.237887, -47.2644, 2.73", "-93.5082, 0.408216, -47.9245, 3.02", "-94.8209, 0.9808, -50.5603, 0.22", "-95.1175, 1.08924, -51.1382, 0.22", "-95.4116, 1.16553, -51.6903, 0.96", "-95.6668, 1.21615, -52.1416, 1.25", "-96.4036, 1.39711, -53.2863, 0.22", "-96.7333, 1.49915, -53.7304, 0.81", "-96.9847, 1.59813, -53.9963, 1.11", "-97.8398, 1.94339, -54.8641, 0.22", "-98.1275, 2.06379, -55.1588, 0.59", "-98.3812, 2.17212, -55.4185, 0.59", "-98.9942, 2.44234, -56.0556, 0.22", "-99.4532, 2.64029, -56.5265, 0.52", "-100.093, 2.9353, -57.1294, 0.22", "-100.919, 3.34615, -57.8096, 2.14", "-101.376, 3.57089, -58.1725, 2.8", "-101.68, 3.72188, -58.4088, 2.8", "-103.216, 4.52889, -59.5859, 0.22", "-104.313, 5.12851, -60.4399, 0.22", "-104.999, 5.53809, -60.9715, 0.96", "-105.355, 5.76986, -61.2435, 1.33", "-105.618, 5.95337, -61.455, 1.33", "-106.431, 6.52737, -62.1696, 0.22", "-107.058, 6.9685, -62.7975, 0.22", "-107.789, 7.44714, -63.5929, 1.84", "-108.068, 7.61948, -63.9123, 2.36", "-108.394, 7.80621, -64.2871, 2.36", "-109.528, 8.37203, -65.6124, 0.22", "-110.052, 8.60174, -66.2335, 0.22", "-110.523, 8.79401, -66.7961, 1.25", "-110.809, 8.90699, -67.1336, 1.69", "-111.261, 9.0935, -67.6527, 1.77", "-112.592, 9.66646, -69.1486, 0.22", "-112.828, 9.77172, -69.4202, 0.37", "-113.019, 9.85963, -69.634, 0.37", "-113.602, 10.0984, -70.3087, 0.22", "-114.095, 10.2942, -70.8657, 1.33", "-114.503, 10.44, -71.3331, 1.62", "-115.468, 10.7368, -72.466, 0.22", "-115.828, 10.8317, -72.8915, 0.52", "-117.178, 11.1583, -74.4678, 0.22", "-117.891, 11.3128, -75.287, 1.47", "-118.328, 11.4144, -75.7628, 2.28", "-118.64, 11.4932, -76.0799, 2.8", "-120.11, 11.8829, -77.5054, 0.22", "-120.551, 12.0012, -77.9136, 0.44", "-120.989, 12.1254, -78.29, 0.44", "-121.552, 12.2689, -78.7845, 0.96", "-121.845, 12.3486, -79.0428, 1.4", "-122.33, 12.4747, -79.4833, 1.4", "-123.349, 12.741, -80.4097, 0.22", "-124.176, 12.9691, -81.0898, 0.88", "-124.872, 13.1578, -81.6236, 0.22", "-125.624, 13.3608, -82.1712, 2.06", "-126.061, 13.4872, -82.4693, 2.8", "-126.51, 13.6347, -82.7422, 2.8", "-129.147, 14.6089, -84.1952, 0.22", "-129.894, 14.9089, -84.5815, 0.22", "-130.407, 15.1413, -84.8251, 1.55", "-130.928, 15.3966, -85.0681, 2.06", "-132.488, 16.2299, -85.8041, 0.22", "-133.171, 16.6123, -86.1416, 0.37", "-133.683, 16.9271, -86.4181, 0.22", "-134.785, 17.6163, -87.0482, 2.28", "-135.327, 17.9445, -87.3909, 3.02", "-135.454, 18.0161, -87.4816, 3.02", "-136.804, 18.7253, -88.5726, 0.22", "-137.251, 18.918, -88.9949, 0.22", "-137.698, 19.0717, -89.4567, 1.03", "-138.015, 19.1601, -89.8016, 1.03", "-138.663, 19.2872, -90.545, 0.22", "-138.955, 19.327, -90.9059, 0.66", "-140.254, 19.4628, -92.5582, 0.22", "-140.911, 19.5315, -93.3788, 1.47", "-141.237, 19.5642, -93.7845, 1.92", "-142.967, 19.7449, -95.9001, 0.22", "-143.804, 19.825, -96.9314, 0.22", "-144.33, 19.8726, -97.5773, 0.22", "-145.023, 19.9511, -98.4005, 1.92", "-145.405, 19.9938, -98.8751, 2.21", "-145.534, 20.0118, -99.0383, 2.21" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-39.4325, -2.12971, 16.2854, 0.29", "-40.1432, -1.95209, 15.8675, 0.29", "-40.5453, -1.85643, 15.5585, 0.29", "-41.2957, -1.68007, 15.1967, 0.29", "-42.1122, -1.50601, 15.0166, 1.11", "-43.3661, -1.29323, 14.9224, 1.55", "-43.8783, -1.22545, 14.9031, 1.77", "-44.8348, -1.10421, 14.8788, 1.47", "-47.8931, -0.786752, 15.1892, 0.29", "-48.5469, -0.764107, 15.4399, 0.29", "-48.9904, -0.758718, 15.7661, 0.59", "-49.3712, -0.761111, 16.1472, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-39.4325, -2.12971, 16.2854, 0.44", "-38.4487, -3.3276, 17.0894, 0.44", "-37.8083, -4.21189, 17.7086, 0.44", "-37.2903, -5.01561, 18.3225, 0.44", "-36.7191, -5.85712, 19.1511, 0.74", "-36.294, -6.42351, 19.8949, 0.96", "-35.8505, -6.92267, 20.7781, 0.74", "-35.5945, -7.16855, 21.5202, 0.52", "-35.375, -7.38948, 22.4839, 0.52", "-35.132, -7.76124, 24.358, 0.66", "-35.0668, -8.0625, 25.7163, 0.66", "-35.0956, -8.37353, 26.7712, 0.66", "-35.217, -8.8294, 27.969, 0.66", "-35.3696, -9.31485, 28.8291, 0.66", "-35.6151, -10.0181, 29.7238, 0.44", "-35.8769, -10.7404, 30.3652, 0.29", "-36.1984, -11.6489, 31.0109, 1.33", "-36.4449, -12.3438, 31.4454, 2.14", "-36.6484, -12.9189, 31.8196, 2.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.9334, 35.1253, -5.70639, 0.22", "0.228039, 37.313, -7.66448, 0.22", "-0.38822, 38.1035, -8.37206, 0.81", "-0.67185, 38.4674, -8.69773, 0.81", "-1.74531, 39.8444, -9.93028, 0.22", "-2.13284, 40.3415, -10.3752, 0.81", "-2.36953, 40.6452, -10.647, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "1.9334, 35.1253, -5.70639, 0.29", "2.06227, 38.9484, -7.46797, 0.29", "2.11965, 39.9206, -7.94496, 0.29", "2.2174, 41.2062, -8.58063, 0.29", "2.31409, 42.7167, -9.27877, 1.03", "2.34963, 43.4881, -9.59827, 1.33", "2.36961, 44.2578, -9.88286, 1.03", "2.42093, 45.6938, -10.3264, 0.59", "2.40821, 46.2272, -10.4916, 0.59", "2.27114, 47.6129, -10.9013, 0.22", "2.02813, 49.113, -11.2877, 0.22", "1.65034, 51.0982, -11.768, 2.65", "1.47136, 51.9936, -11.9675, 3.09", "1.34923, 52.597, -12.0827, 3.54", "1.28848, 52.8988, -12.1454, 3.68", "0.719672, 55.9332, -12.8321, 0.22", "0.574944, 56.9145, -12.9642, 0.81", "0.521759, 57.4613, -12.9792, 0.81", "0.49605, 58.1035, -12.932, 0.52", "0.519471, 59.3483, -12.6915, 0.22", "0.575725, 60.2445, -12.3949, 0.22", "0.88948, 62.762, -11.0426, 1.84", "0.95969, 63.2708, -10.7072, 2.06", "1.02959, 63.8028, -10.3178, 2.06", "1.18514, 64.9596, -9.33914, 1.25", "1.30347, 66.1432, -8.24615, 0.22", "1.37856, 67.2678, -7.20797, 0.22", "1.43618, 69.1778, -5.52078, 3.46", "1.44705, 69.9778, -4.82768, 3.83", "1.45006, 71.701, -3.38011, 3.17", "1.44685, 74.2577, -1.28094, 0.37", "1.44879, 74.997, -0.693884, 0.59", "1.43531, 75.5475, -0.306595, 0.81", "1.40391, 76.0935, 0.0255796, 0.81", "1.34965, 76.9188, 0.480617, 0.52", "1.24401, 77.9963, 1.00511, 0.22", "1.14109, 78.9257, 1.45228, 0.22", "0.92471, 80.6469, 2.29865, 0.22", "0.579947, 83.0948, 3.49973, 2.65", "0.449798, 83.895, 3.8854, 3.24", "0.296387, 84.7027, 4.26547, 3.54", "0.211858, 85.0926, 4.44403, 3.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "41.1345, -46.6755, -10.7866, 0.29", "40.7993, -48.114, -10.2305, 0.29", "40.522, -49.9129, -9.49991, 0.15", "40.4631, -50.4486, -9.2733, 0.52", "40.3291, -52.0781, -8.54104, 2.95", "40.2765, -52.9943, -8.11802, 2.36", "40.2158, -54.5791, -7.34719, 0.29", "40.3263, -55.96, -6.6728, 0.22", "40.4785, -56.7942, -6.25416, 1.4", "40.6597, -57.4503, -5.86025, 1.92", "40.7705, -57.7434, -5.64083, 2.43", "40.9864, -58.2073, -5.2593, 2.43", "41.6969, -59.5236, -4.06637, 0.29", "42.1786, -60.3173, -3.33403, 0.29", "42.7779, -61.2318, -2.46493, 1.77", "43.2885, -61.9851, -1.74251, 2.5", "43.5635, -62.3933, -1.33788, 3.02" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "41.1345, -46.6755, -10.7866, 2.14", "41.3142, -46.987, -10.9567, 2.14", "41.4899, -47.2714, -11.0641, 2.14", "42.5876, -48.9548, -11.5484, 0.22", "43.1697, -49.8024, -11.7617, 0.22", "43.7424, -50.5958, -11.935, 1.69", "44.4628, -51.5632, -12.1079, 2.14", "45.9292, -53.4968, -12.3542, 0.22", "46.8486, -54.696, -12.4554, 0.22", "47.5499, -55.5891, -12.4887, 1.69", "48.0472, -56.2047, -12.4995, 2.06", "49.4001, -57.8582, -12.4929, 0.22", "50.328, -58.983, -12.4548, 0.22", "50.7865, -59.5563, -12.4738, 1.69", "51.2516, -60.1614, -12.4862, 2.06" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "18.1867, 0.664549, -4.7962, 1.55", "19.3961, 0.300616, -5.26455, 1.55", "20.637, -0.0728165, -5.74513, 0.74", "21.4865, -0.328462, -6.07412, 1.18", "22.2418, -0.555743, -6.36662, 1.55", "22.8406, -0.735948, -6.59852, 1.77", "23.6035, -0.965525, -6.89397, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "18.1867, 0.664549, -4.7962, 0.96", "17.2766, -1.45732, -4.74743, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "18.1867, 0.664549, -4.7962, 2.8", "19.3158, 2.5043, -5.16047, 2.8", "20.1837, 4.04643, -5.2826, 1.84", "20.5928, 4.8166, -5.25285, 1.47", "21.1208, 5.86058, -5.04922, 1.25", "21.5565, 6.73404, -4.81917, 1.18", "22.0324, 7.69947, -4.4813, 1.18", "22.5905, 8.92035, -3.87685, 1.11", "23.1097, 10.1068, -3.1848, 1.33", "24.0482, 12.2654, -1.77821, 2.58", "24.3049, 12.8312, -1.36878, 3.02", "24.8895, 14.0665, -0.403101, 3.54", "25.1145, 14.5357, -0.0243862, 3.68" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-42.5108, -14.6533, -0.701022, 0.37", "-47.2072, -14.2344, -0.650204, 0.37", "-48.0663, -14.1727, -0.640481, 0.37", "-49.251, -14.0968, -0.646358, 0.22", "-50.872, -14.0461, -0.734669, 0.22", "-52.5912, -13.9816, -0.859658, 1.55", "-53.5537, -13.9419, -0.941978, 2.58", "-54.0544, -13.9434, -1.0178, 2.87", "-55.2462, -13.9243, -1.20519, 2.28", "-57.467, -13.8316, -1.6038, 0.22", "-58.6643, -13.7339, -1.85386, 0.66", "-59.2871, -13.6545, -2.01572, 0.88", "-60.229, -13.4805, -2.28808, 0.22", "-61.3403, -13.2451, -2.62392, 0.22", "-62.2888, -13.0136, -2.89862, 0.37", "-62.894, -12.8556, -3.05185, 0.37", "-63.5401, -12.7062, -3.23837, 0.37", "-64.0002, -12.5912, -3.37386, 0.37", "-64.6657, -12.4113, -3.57064, 0.22", "-65.4563, -12.2018, -3.76922, 0.22", "-66.3153, -12.1129, -3.86541, 0.88" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-42.5108, -14.6533, -0.701022, 0.52", "-42.7226, -16.3896, -2.05842, 0.52", "-42.7799, -16.8159, -2.32115, 0.52", "-42.8271, -17.2563, -2.55953, 0.29", "-42.8723, -17.8428, -2.84834, 0.52", "-42.9027, -18.7565, -3.24321, 0.29", "-42.8982, -19.1816, -3.41429, 0.29", "-42.8311, -20.3044, -3.72731, 2.43", "-42.7979, -20.7169, -3.84117, 3.02", "-42.7518, -21.1226, -3.9494, 3.02", "-42.5471, -22.4199, -4.26613, 0.22", "-42.3678, -23.1984, -4.46988, 0.22", "-42.2715, -23.5689, -4.56923, 0.22" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-145.534, 20.0118, -99.0383, 0.22", "-146.585, 20.8606, -100.99, 0.22", "-146.967, 21.1386, -101.645, 0.22", "-147.277, 21.3345, -102.153, 0.88", "-147.637, 21.5142, -102.703, 0.88", "-148.307, 21.8142, -103.544, 0.22", "-148.661, 21.9628, -103.951, 0.22", "-148.924, 22.0566, -104.201, 0.66", "-149.408, 22.218, -104.664, 0.66", "-150.165, 22.4818, -105.402, 0.22", "-151.708, 23.0174, -106.961, 0.22", "-152.266, 23.223, -107.527, 0.59", "-152.571, 23.3405, -107.839, 0.81", "-153.765, 23.8127, -109.075, 0.22", "-154.588, 24.1671, -109.947, 1.11", "-155.189, 24.4461, -110.652, 1.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-145.534, 20.0118, -99.0383, 0.22", "-147.106, 20.7286, -99.2992, 0.22", "-148.252, 21.2889, -99.4681, 0.22", "-148.454, 21.3968, -99.4973, 0.52", "-148.726, 21.5514, -99.551, 0.52", "-149.703, 22.1383, -99.7895, 0.22", "-150.704, 22.771, -100.079, 2.28", "-150.973, 22.964, -100.174, 2.65", "-151.404, 23.241, -100.375, 2.65", "-153.442, 24.3989, -101.467, 0.22", "-154.261, 24.8111, -101.958, 0.66", "-155.196, 25.211, -102.592, 0.22", "-155.883, 25.46, -103.079, 0.88", "-157.828, 26.0592, -104.477, 0.22", "-158.129, 26.1335, -104.694, 0.52", "-158.45, 26.1908, -104.925, 0.52", "-159.834, 26.4282, -105.782, 0.22", "-160.301, 26.5147, -106.029, 0.22", "-161.136, 26.7349, -106.371, 1.03", "-161.525, 26.8726, -106.496, 1.4", "-161.911, 27.0197, -106.619, 1.4", "-164.34, 27.9901, -107.358, 0.22", "-166.162, 28.7454, -107.885, 0.22", "-167.558, 29.3395, -108.287, 1.25", "-167.981, 29.5156, -108.411, 1.4", "-169.142, 29.9994, -108.748, 0.22", "-170.91, 30.7384, -109.281, 0.22", "-171.773, 31.0797, -109.585, 0.74", "-172.105, 31.191, -109.73, 0.74", "-173.407, 31.5639, -110.369, 0.22", "-174.089, 31.7396, -110.707, 1.33", "-174.743, 31.8832, -111.04, 1.77", "-176.381, 32.1715, -111.991, 0.22", "-177.743, 32.3757, -112.857, 0.81" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "0.211858, 85.0926, 4.44403, 0.29", "-1.72378, 87.1086, 4.73089, 0.29", "-2.31582, 87.7853, 4.85973, 0.29", "-3.07083, 88.6933, 5.02686, 1.11", "-3.23058, 88.8954, 5.06472, 1.25", "-3.4006, 89.1197, 5.1085, 1.25", "-3.64421, 89.4501, 5.17669, 0.96", "-4.28751, 90.5811, 5.43919, 0.22", "-4.65927, 91.2458, 5.5753, 0.22", "-4.81167, 91.5961, 5.65716, 0.74", "-4.94449, 91.9685, 5.75671, 0.96", "-5.0217, 92.2454, 5.84368, 0.96", "-5.1992, 93.1892, 6.1635, 0.22", "-5.2678, 93.9902, 6.43199, 0.22", "-5.28603, 95.3997, 6.88634, 1.47", "-5.27576, 95.8983, 7.04089, 1.92", "-5.25237, 96.4094, 7.20587, 1.92", "-5.21335, 97.0338, 7.42006, 1.25", "-5.14523, 98.2862, 7.89545, 0.22", "-5.12002, 99.8051, 8.51201, 0.22", "-5.20513, 101.008, 8.99262, 1.4", "-5.25019, 101.396, 9.15169, 1.62", "-5.34209, 101.835, 9.35034, 1.62", "-5.76229, 103.252, 10.0562, 0.22", "-6.25009, 104.554, 10.7684, 0.22", "-6.82951, 105.894, 11.5321, 1.99", "-6.93644, 106.123, 11.6605, 2.5", "-7.89086, 108.086, 12.7273, 0.22", "-8.3844, 109.038, 13.2442, 1.33", "-8.49157, 109.221, 13.3477, 1.62" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.211858, 85.0926, 4.44403, 0.29", "0.476889, 87.6081, 5.32485, 0.29", "0.609254, 88.7714, 5.81665, 0.29", "0.722963, 89.6943, 6.24605, 0.29", "0.84387, 90.6722, 6.68771, 0.29", "1.03118, 92.0336, 7.28996, 1.18", "1.16295, 92.7986, 7.62767, 1.77", "1.29349, 93.3819, 7.90253, 1.77", "1.40212, 93.7772, 8.08594, 1.92", "2.00203, 95.5237, 8.79901, 0.22", "2.32258, 96.2609, 9.0275, 0.22", "2.92953, 97.3674, 9.25965, 1.11", "3.26813, 97.8598, 9.33711, 1.33", "3.63604, 98.2991, 9.41308, 1.33", "4.09892, 98.7656, 9.52347, 1.11", "4.6706, 99.2509, 9.70698, 0.88", "5.60259, 100.059, 10.0972, 0.37", "5.98715, 100.399, 10.2888, 0.37", "6.9172, 101.241, 10.8296, 0.96", "7.55853, 101.868, 11.2407, 1.33", "8.68113, 103.055, 12.0341, 0.29", "9.5136, 103.974, 12.64, 1.11", "9.93989, 104.454, 12.9465, 1.33", "10.6614, 105.259, 13.44, 0.81", "11.2093, 105.87, 13.7901, 0.37", "11.9653, 106.727, 14.2159, 0.74", "12.6719, 107.539, 14.5665, 0.44", "13.7043, 108.725, 15.0259, 1.47", "13.9264, 108.988, 15.1189, 1.99", "14.3623, 109.506, 15.2881, 1.99", "15.6413, 111.029, 15.8156, 0.22", "16.0774, 111.562, 16.0028, 0.22", "16.801, 112.497, 16.3045, 1.4", "17.1402, 112.944, 16.4329, 1.4", "18.128, 114.238, 16.7684, 0.29", "19.2074, 115.599, 17.0687, 0.22", "19.8125, 116.343, 17.2161, 0.22", "20.526, 117.222, 17.3229, 1.18", "20.9213, 117.705, 17.3608, 1.84", "21.3591, 118.226, 17.3734, 1.47", "22.2157, 119.23, 17.273, 0.22", "22.6594, 119.72, 17.148, 0.22", "23.4988, 120.589, 16.9079, 0.44" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "23.6035, -0.965525, -6.89397, 0.66", "23.7905, -0.0459733, -9.71063, 0.66", "24.0723, 1.1101, -13.1947, 0.66", "24.155, 1.37036, -14.0383, 1.62", "24.2194, 1.59437, -14.7922, 2.65", "24.3198, 1.9437, -15.9677, 2.95", "24.5446, 2.72609, -18.6005, 0.81", "24.8299, 3.85263, -22.8776, 2.28", "24.9027, 4.10356, -23.8394, 3.17", "24.9806, 4.33285, -24.6289, 3.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "23.6035, -0.965525, -6.89397, 0.66", "24.0746, -2.09725, -7.3467, 0.66", "24.2845, -2.65784, -7.58752, 0.74", "24.4276, -3.06027, -7.78118, 0.81", "24.6515, -3.71731, -8.1178, 0.59", "24.8394, -4.28758, -8.42027, 0.52", "25.0069, -4.81606, -8.71116, 0.29", "25.1627, -5.38603, -9.05435, 0.29", "25.3527, -6.15455, -9.5365, 1.33", "25.4398, -6.57963, -9.81559, 1.92", "25.471, -6.768, -9.94631, 2.14", "25.5127, -7.09394, -10.1705, 1.92", "25.5716, -7.67882, -10.5672, 0.96", "25.612, -8.28694, -10.9733, 0.22", "25.6345, -8.80409, -11.3096, 0.22", "25.6594, -9.04678, -11.4711, 0.88", "25.7567, -9.54834, -11.8063, 1.55", "25.8134, -9.73093, -11.9283, 1.69", "25.9633, -10.0841, -12.1668, 1.33", "26.3476, -10.8013, -12.6551, 0.29", "26.8198, -11.5683, -13.1711, 0.29", "27.2635, -12.2279, -13.609, 0.29", "27.7221, -12.8498, -14.0167, 1.33", "28.0412, -13.2397, -14.2687, 1.62", "28.2593, -13.4825, -14.4229, 1.69", "28.9213, -14.1516, -14.8532, 0.29", "29.5533, -14.7493, -15.2446, 0.29", "29.9446, -15.09, -15.4766, 0.29", "30.7476, -15.7479, -15.9114, 1.77", "30.9962, -15.9357, -16.0311, 2.58", "31.4197, -16.2296, -16.2123, 3.02", "31.6707, -16.3871, -16.2966, 3.17", "31.8632, -16.5035, -16.3492, 3.17", "32.7, -17.018, -16.5478, 1.55", "33.5638, -17.5526, -16.7204, 0.22", "33.8678, -17.7395, -16.774, 0.22", "34.5025, -18.1527, -16.8678, 1.03", "34.7424, -18.323, -16.8954, 1.25", "34.9969, -18.5146, -16.9239, 1.33", "35.3571, -18.7992, -16.954, 0.88", "35.5933, -19.0013, -16.9677, 0.29", "36.3753, -19.6963, -17.0235, 0.22", "37.1849, -20.4581, -17.1111, 1.84", "37.6394, -20.9133, -17.18, 2.65", "38.0135, -21.3165, -17.2477, 2.5", "38.2555, -21.5979, -17.3002, 1.92", "38.9926, -22.5036, -17.4696, 0.29", "39.5134, -23.1848, -17.5847, 0.29", "40.036, -23.9022, -17.6727, 0.22", "40.5264, -24.5198, -17.7333, 0.22", "41.1589, -25.2579, -17.8038, 2.73", "41.5979, -25.7413, -17.8434, 3.24", "42.1425, -26.3164, -17.877, 2.58", "43.5505, -27.6785, -17.9506, 0.22", "45.4529, -29.3746, -18.0981, 0.22", "46.3046, -30.0907, -18.2007, 2.06", "46.5985, -30.3289, -18.2451, 2.65", "47.0349, -30.6708, -18.3223, 2.8", "48.4155, -31.7149, -18.6112, 0.22", "50.2123, -33.0454, -19.0451, 0.22", "50.9631, -33.6307, -19.2397, 1.25", "51.3668, -33.9472, -19.3517, 1.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "25.1145, 14.5357, -0.0243862, 0.88", "26.171, 14.512, -0.712383, 0.88", "26.9312, 14.4677, -1.0348, 0.29", "28.2962, 14.3263, -1.2798, 0.37", "28.8018, 14.2313, -1.2212, 0.44", "29.5744, 14.0102, -0.878258, 0.44", "30.2653, 13.7855, -0.480202, 0.74", "32.0296, 13.1349, 0.944216, 1.03", "32.5639, 12.9158, 1.46209, 1.03", "33.3979, 12.5811, 2.30785, 0.66", "34.3697, 12.2211, 3.25163, 0.44", "34.7762, 12.096, 3.6168, 0.59", "35.3117, 11.9819, 4.01955, 0.29", "36.035, 11.8942, 4.36283, 0.29", "36.9633, 11.8398, 4.70558, 1.4", "37.6956, 11.8558, 4.87809, 1.92", "38.3781, 11.909, 4.96633, 1.62", "38.9235, 11.9643, 5.03124, 0.81", "39.2183, 12.0016, 5.05964, 0.81" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "25.1145, 14.5357, -0.0243862, 1.69", "25.4188, 17.1117, 0.87835, 1.69", "25.5989, 18.6361, 1.41252, 1.25", "25.7931, 20.2802, 1.98869, 1.33", "25.9006, 21.1903, 2.30761, 1.33", "25.9986, 22.0199, 2.59834, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "24.9806, 4.33285, -24.6289, 0.44", "25.0356, 3.62212, -25.418, 0.44", "25.369, 2.49349, -26.5129, 0.29", "25.5286, 2.07357, -26.9293, 1.03", "25.6548, 1.7588, -27.2359, 1.33", "25.8805, 1.20599, -27.7573, 0.22", "26.2672, 0.27862, -28.6044, 0.22", "26.6776, -0.553552, -29.3424, 1.47", "26.9631, -1.1011, -29.7948, 1.77", "27.2999, -1.75039, -30.4065, 0.15", "27.4436, -2.04565, -30.7436, 0.15", "27.6788, -2.63027, -31.5346, 2.36", "27.7477, -2.85927, -31.8761, 2.95", "27.8174, -3.15071, -32.3359, 2.95", "27.9839, -3.87772, -33.5325, 0.66", "28.1037, -4.42117, -34.5363, 0.22", "28.1789, -4.81638, -35.3324, 0.22", "28.2095, -5.03223, -35.7998, 1.11", "28.2282, -5.16663, -36.078, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "24.9806, 4.33285, -24.6289, 0.22", "26.7073, 6.56282, -25.2647, 0.22", "28.0072, 8.12361, -25.7392, 0.22", "29.5795, 9.90707, -26.2364, 1.99", "30.2072, 10.611, -26.4156, 2.43", "31.9042, 12.5632, -26.8938, 0.44", "32.4418, 13.2106, -27.0695, 0.96", "33.4087, 14.4432, -27.3928, 0.22", "35.0487, 16.6557, -27.8889, 0.22", "35.6988, 17.5732, -28.0537, 1.47", "36.267, 18.5952, -28.3325, 1.47", "37.6509, 21.4553, -29.0989, 0.15", "38.3851, 23.1319, -29.5374, 0.15", "39.0268, 24.7361, -29.9232, 1.84", "39.2345, 25.3023, -30.0432, 2.14", "41.4286, 31.3162, -31.1552, 0.22", "42.3558, 33.841, -31.5712, 0.22", "42.561, 34.4073, -31.6577, 0.22", "43.1583, 36.0039, -31.9237, 0.22", "43.858, 37.8172, -32.1665, 1.55", "44.1031, 38.4251, -32.2133, 1.55", "45.4677, 41.5874, -32.2083, 0.22", "45.9785, 42.81, -32.3765, 0.22", "46.4174, 43.7905, -32.5466, 0.22", "46.8674, 44.7393, -32.7485, 0.96", "47.5049, 46.0181, -33.0273, 1.77", "47.7708, 46.5067, -33.1549, 1.77", "49.3312, 49.2036, -33.9745, 0.22", "49.958, 50.2574, -34.3436, 0.81", "50.6545, 51.4085, -34.8061, 0.22", "51.8439, 53.3669, -35.6705, 1.62", "54.2234, 57.2578, -37.4249, 0.22", "55.3494, 59.1133, -38.3366, 0.66", "56.1242, 60.3974, -39.0287, 1.18", "56.6188, 61.2297, -39.5044, 1.18", "57.6373, 62.9651, -40.5204, 0.81", "58.0716, 63.7129, -40.9617, 1.33", "59.2091, 65.7702, -42.1508, 1.18", "60.1525, 67.4948, -43.1043, 0.29", "60.7368, 68.5697, -43.6544, 0.81", "61.022, 69.0928, -43.8927, 0.81", "62.3938, 71.5333, -44.8677, 0.22", "62.8735, 72.3915, -45.1891, 0.22", "63.2535, 73.0542, -45.3749, 0.66", "63.6775, 73.8069, -45.5562, 0.66", "64.2131, 74.7169, -45.7608, 0.29", "64.9367, 75.8738, -45.9678, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "39.2183, 12.0016, 5.05964, 0.66", "39.7292, 11.5811, 6.50384, 0.66", "40.0017, 11.3889, 7.16567, 0.66", "40.357, 11.1566, 7.93993, 0.66", "40.8727, 10.8552, 8.83832, 0.44", "41.5925, 10.4346, 10.0921, 0.66", "42.6176, 9.83562, 11.8778, 1.55", "43.1436, 9.59363, 12.642, 2.14", "43.5361, 9.43543, 13.1656, 2.36", "44.8266, 8.91559, 14.7508, 0.59" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "39.2183, 12.0016, 5.05964, 0.22", "41.4083, 11.5234, 4.1091, 0.22", "43.3253, 11.1631, 3.45924, 1.47", "44.0564, 11.0422, 3.24495, 1.69", "44.6544, 10.9498, 3.08886, 1.84", "45.5472, 10.8188, 2.88286, 0.74", "46.7698, 10.6504, 2.61909, 0.22", "47.853, 10.5396, 2.55858, 0.22", "48.9919, 10.4472, 2.59728, 0.88", "49.6327, 10.3919, 2.63957, 0.88", "50.4366, 10.3214, 2.76366, 0.29", "51.0699, 10.2731, 2.97091, 0.22", "52.6624, 10.1123, 3.68664, 1.18", "53.185, 10.0519, 3.97976, 1.47", "53.7301, 9.96788, 4.33295, 0.96", "55.5041, 9.64066, 5.49772, 0.22", "57.6214, 9.22079, 6.89371, 1.69", "58.7564, 8.97762, 7.6263, 2.73", "59.8008, 8.74495, 8.24932, 3.02", "61.8599, 8.28275, 9.35492, 0.15", "63.1828, 8.0012, 9.97575, 0.15", "64.75, 7.69493, 10.5926, 1.4", "65.3992, 7.59372, 10.8066, 1.92", "66.5111, 7.49763, 11.1475, 0.96", "68.5865, 7.41308, 11.7144, 0.22", "70.2102, 7.41986, 12.113, 0.22", "71.3599, 7.4454, 12.378, 1.47", "72.784, 7.47356, 12.6598, 2.5", "75.0528, 7.51189, 13.0639, 0.22", "75.2346, 7.51356, 13.0911, 0.44", "76.9621, 7.50682, 13.2711, 0.22", "78.6739, 7.41467, 13.3432, 0.22", "80.7541, 7.21528, 13.3086, 2.36", "81.5124, 7.11914, 13.2643, 2.95", "82.0322, 7.0391, 13.2134, 3.02", "83.3593, 6.8261, 13.0885, 1.33", "85.8089, 6.41457, 12.8614, 0.22", "87.5386, 6.10513, 12.6927, 0.44", "88.5449, 5.92079, 12.5946, 0.37", "89.3475, 5.77213, 12.5306, 1.47", "90.2911, 5.59261, 12.4752, 1.92", "90.9075, 5.46643, 12.4429, 1.92" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "25.9986, 22.0199, 2.59834, 0.15", "26.5737, 22.3501, 3.06296, 0.15", "27.3902, 22.9538, 3.95615, 1.4", "27.6374, 23.1642, 4.28906, 1.99", "28.1572, 23.6589, 5.04844, 2.21", "28.3067, 23.8175, 5.26984, 2.5", "28.5722, 24.1226, 5.65292, 2.14", "29.2504, 25.1316, 6.73452, 0.66", "29.6026, 25.8621, 7.30775, 0.52", "29.7465, 26.2302, 7.50903, 0.52", "29.9086, 26.7802, 7.67553, 0.44", "30.0248, 27.2529, 7.76395, 0.29", "30.178, 28.0543, 7.89626, 0.29", "30.2777, 28.7674, 8.00282, 0.59", "30.3285, 29.1568, 8.1445, 0.59", "30.4074, 29.6095, 8.53441, 0.37", "30.4904, 29.9545, 9.00441, 0.37", "30.716, 30.6914, 10.2258, 2.14", "30.8176, 30.9617, 10.7273, 2.95", "31.0463, 31.4345, 11.658, 3.17", "31.3455, 31.9389, 12.644, 3.02", "31.7612, 32.45, 13.6134, 0.66", "31.9649, 32.6472, 13.9456, 0.52", "32.28, 32.9002, 14.2893, 0.81", "32.6549, 33.1763, 14.5896, 0.81", "32.9885, 33.4079, 14.7871, 0.52", "34.2125, 34.1879, 15.3755, 0.44", "34.883, 34.6058, 15.6879, 1.47", "35.517, 35.0249, 16.0027, 2.65", "35.8976, 35.2997, 16.2037, 3.17", "36.1711, 35.5327, 16.3719, 2.95", "37.0382, 36.3936, 16.9504, 0.96", "37.5391, 36.9944, 17.3023, 0.29", "37.8114, 37.3739, 17.4956, 0.29", "38.0583, 37.7696, 17.672, 0.29", "38.6692, 38.8336, 18.0834, 1.55", "38.8593, 39.1923, 18.2135, 2.06", "39.088, 39.6628, 18.3751, 1.99", "39.7037, 40.9329, 18.8113, 0.22", "40.1291, 41.8187, 19.1268, 0.22", "40.3773, 42.3576, 19.3189, 0.22", "41.0218, 43.8019, 19.8151, 2.36", "41.283, 44.4083, 20.0242, 2.95", "41.463, 44.8438, 20.1694, 3.17", "42.0703, 46.3648, 20.6609, 0.29", "42.3166, 46.9645, 20.8298, 0.22", "42.6278, 47.7717, 20.9268, 0.22", "42.8043, 48.2761, 20.9046, 1.25", "43.0603, 49.1366, 20.8119, 1.92", "43.152, 49.5102, 20.7538, 2.65", "43.2713, 50.0334, 20.6673, 2.5", "43.802, 52.2551, 20.3548, 0.22", "44.0428, 53.1342, 20.2712, 0.22", "44.4407, 54.4031, 20.2408, 0.22", "44.6267, 54.9268, 20.2633, 0.22", "45.0808, 56.1023, 20.4027, 1.99", "45.2103, 56.4143, 20.4659, 2.5", "45.8076, 57.6496, 20.8239, 0.22", "46.2506, 58.5078, 21.0657, 0.22", "46.4813, 58.9358, 21.1832, 0.22", "46.9822, 59.8901, 21.4408, 2.28", "47.6951, 61.3962, 21.7974, 0.22", "48.1148, 62.3371, 22.0218, 1.47", "48.2742, 62.73, 22.1137, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "25.9986, 22.0199, 2.59834, 0.96", "25.7877, 22.4433, 2.24475, 0.96", "25.5861, 23.0123, 1.82112, 0.81", "25.3849, 23.8736, 1.24614, 0.52", "25.3062, 24.5362, 0.851984, 0.52", "25.2918, 25.2883, 0.415072, 0.52", "25.322, 25.9698, 0.0228251, 0.66", "25.4555, 26.762, -0.431419, 0.96", "25.6246, 27.2749, -0.705006, 1.11", "25.9012, 27.8637, -0.960179, 1.25", "26.2706, 28.5734, -1.20888, 1.25", "26.3565, 28.7501, -1.25626, 1.33", "26.5735, 29.2914, -1.3779, 0.88", "26.7472, 29.9487, -1.49991, 0.59", "26.8529, 30.734, -1.59818, 0.52", "26.8803, 31.5293, -1.66679, 0.52", "26.8491, 32.5025, -1.71237, 1.25", "26.8039, 33.0979, -1.74161, 1.77", "26.7063, 33.8613, -1.78105, 1.77", "26.5418, 34.8057, -1.80857, 1.47", "26.3113, 35.923, -1.79206, 1.99", "26.2044, 36.4017, -1.76382, 2.58", "26.0885, 36.875, -1.71424, 2.87", "25.98, 37.2629, -1.65506, 2.87", "25.708, 38.1137, -1.4765, 2.06", "25.3895, 38.9042, -1.26093, 1.25", "25.107, 39.5108, -1.07361, 0.81", "24.8427, 40.0609, -0.91491, 0.59", "24.5433, 40.682, -0.761358, 0.29", "24.4064, 40.9776, -0.705543, 0.29", "24.1879, 41.4729, -0.638073, 0.44", "23.8886, 42.2464, -0.553018, 0.59", "23.6756, 42.8829, -0.46019, 1.11", "23.5433, 43.3768, -0.354073, 1.33", "23.4734, 43.7412, -0.230387, 1.47", "23.4137, 44.2367, 0.00629618, 1.33", "23.3804, 44.6943, 0.308178, 0.81", "23.3714, 45.0287, 0.594338, 0.59", "23.3636, 45.5522, 1.12539, 0.37", "23.3217, 46.1747, 1.81359, 0.37", "23.2551, 46.7423, 2.4544, 1.47", "23.1976, 47.089, 2.82818, 1.77", "23.0928, 47.5908, 3.34289, 1.77", "22.961, 48.1395, 3.86713, 1.4", "22.7162, 48.989, 4.57771, 0.29", "22.6567, 49.1671, 4.69485, 0.29", "22.4239, 49.8599, 5.04093, 1.03", "22.3204, 50.1875, 5.17221, 1.18", "22.2564, 50.4064, 5.24311, 1.18", "22.1106, 50.9962, 5.40562, 0.22", "22.0269, 51.5185, 5.52896, 0.22", "21.8863, 52.732, 5.80183, 2.43", "21.8426, 53.2544, 5.91186, 2.65", "21.8217, 53.6076, 5.98076, 2.8", "21.8126, 53.8474, 6.01537, 2.8", "21.7862, 55.2967, 6.09263, 0.37", "21.7791, 55.9504, 6.04935, 0.29", "21.771, 56.5983, 5.93007, 0.29", "21.76, 57.4209, 5.70611, 0.88", "21.7358, 58.3886, 5.4248, 1.47", "21.6965, 59.2515, 5.17701, 2.28", "21.6415, 60.0525, 4.98596, 2.5", "21.6056, 60.5265, 4.90796, 2.8", "21.516, 61.6792, 4.85507, 0.88", "21.4228, 62.7196, 4.97238, 0.44", "21.307, 63.8846, 5.28377, 0.44", "21.1893, 64.9513, 5.69735, 0.37", "21.0904, 65.7671, 6.0897, 0.37", "20.9393, 66.8522, 6.675, 1.55", "20.7344, 67.9987, 7.22899, 3.09", "20.6124, 68.567, 7.44045, 3.68", "20.4294, 69.2724, 7.6028, 4.13", "20.2854, 69.7447, 7.6352, 4.13", "20.0014, 70.5686, 7.57839, 3.76", "19.0845, 72.9508, 7.12728, 0.44", "18.741, 73.8185, 6.87858, 0.37", "18.3082, 74.9036, 6.50734, 1.03", "18.0428, 75.5746, 6.24946, 1.11", "17.8195, 76.1489, 6.01567, 1.11", "17.5013, 77.0306, 5.64738, 0.22", "17.3013, 77.7777, 5.42416, 0.74", "17.2463, 78.0921, 5.36456, 0.74", "17.2096, 78.4511, 5.33939, 0.44", "17.1857, 78.7528, 5.34896, 0.22", "17.1172, 79.6314, 5.42619, 0.22", "16.9696, 81.356, 5.63345, 3.39", "16.8741, 82.2511, 5.7664, 4.13", "16.8308, 82.637, 5.82945, 4.35", "16.5886, 84.8528, 6.17206, 0.29", "16.5333, 85.4147, 6.24857, 0.52", "16.4702, 86.0736, 6.32666, 0.59", "16.4304, 86.4969, 6.34923, 0.59", "16.3542, 87.375, 6.34991, 0.29", "16.2942, 88.1655, 6.32412, 0.29", "16.2261, 89.2479, 6.2308, 1.62", "16.1634, 90.2343, 6.11077, 2.43", "16.1319, 90.7651, 6.04622, 2.43", "16.0608, 92.0329, 5.90756, 0.37", "16.0291, 92.6407, 5.85424, 0.29", "16.0079, 93.1853, 5.83914, 0.22", "16.0002, 93.6536, 5.83831, 0.22", "16.0004, 94.6513, 5.83629, 0.22", "16.0075, 95.7903, 5.84961, 1.84", "16.014, 96.354, 5.84077, 2.8", "16.0185, 96.903, 5.81973, 2.87", "16.0191, 97.5792, 5.78503, 2.28", "15.9837, 99.035, 5.6599, 0.29", "15.9556, 99.504, 5.58558, 0.22", "15.891, 100.337, 5.42412, 0.81", "15.8585, 100.69, 5.35147, 0.96", "15.818, 101.105, 5.26844, 0.37", "15.7687, 101.631, 5.21281, 0.15", "15.7072, 102.31, 5.20032, 0.29", "15.6677, 102.738, 5.22308, 0.29", "15.6092, 103.397, 5.30562, 0.15", "15.5842, 103.753, 5.35742, 0.15", "15.5268, 104.946, 5.56018, 1.84", "15.5121, 105.412, 5.65385, 2.36", "15.4996, 105.888, 5.76201, 2.5", "15.4777, 106.593, 5.92322, 1.84", "15.4384, 107.754, 6.21346, 0.22", "15.4202, 108.191, 6.3241, 0.22", "15.3912, 109.107, 6.54118, 1.11", "15.3835, 109.401, 6.61744, 1.25", "15.377, 109.693, 6.69629, 0.66", "15.3609, 110.642, 6.97837, 0.22", "15.3856, 111.335, 7.18201, 0.22", "15.4531, 112.232, 7.42875, 0.22", "15.6236, 113.798, 7.83832, 2.43", "15.6931, 114.384, 7.98241, 2.87", "15.7158, 114.571, 8.02501, 2.87", "15.9377, 116.511, 8.46935, 0.22", "15.9925, 117.139, 8.62244, 0.74", "16.0091, 117.492, 8.71073, 0.74", "16.0089, 118.371, 8.91878, 0.22", "15.9588, 118.969, 9.04584, 0.22", "15.7355, 120.233, 9.26122, 2.14", "15.5608, 120.798, 9.33034, 2.87", "15.4554, 121.078, 9.34996, 3.09", "15.2081, 121.68, 9.34861, 2.43", "14.6564, 123.006, 9.26484, 0.37", "14.4238, 123.603, 9.19903, 0.29", "14.2356, 124.148, 9.11816, 0.37", "14.0843, 124.718, 9.06125, 0.29", "13.9752, 125.318, 9.04057, 0.29", "13.8985, 126.007, 9.07033, 0.37", "13.8717, 126.556, 9.14585, 0.59", "13.8476, 127.008, 9.22606, 0.59", "13.7959, 127.741, 9.36402, 0.22", "13.7158, 128.511, 9.50403, 1.33", "13.6249, 129.066, 9.59865, 1.62", "13.5317, 129.545, 9.65892, 1.25", "13.2781, 130.764, 9.77666, 0.29", "13.1775, 131.251, 9.816, 0.52", "13.1078, 131.624, 9.84799, 0.52", "12.9874, 132.403, 9.86856, 0.22", "12.8682, 133.419, 9.85307, 1.92", "12.8119, 134.084, 9.82417, 2.73", "12.7948, 134.404, 9.80289, 2.95", "12.7773, 134.848, 9.76809, 3.24", "12.7215, 137.014, 9.55821, 0.29", "12.7176, 137.499, 9.50445, 0.29", "12.738, 138.275, 9.42083, 0.88", "12.7682, 138.812, 9.36734, 0.88", "12.8048, 139.291, 9.31496, 0.88", "12.9282, 140.277, 9.30379, 0.29", "13.052, 141.064, 9.3747, 0.29", "13.3014, 142.645, 9.56854, 2.43", "13.3675, 143.053, 9.6291, 3.02", "13.4776, 143.668, 9.73532, 3.24", "13.9661, 146.229, 10.2815, 0.22", "14.1334, 147.073, 10.4998, 0.52", "14.2017, 147.42, 10.5996, 0.52", "14.312, 147.925, 10.7496, 0.22", "14.4101, 148.318, 10.8575, 0.22", "14.6781, 149.303, 11.1004, 1.33", "14.8, 149.713, 11.1553, 1.69", "14.9015, 150.053, 11.2019, 1.69", "15.2483, 151.348, 11.3752, 0.22", "15.3555, 151.892, 11.4767, 0.66", "15.3939, 152.189, 11.5453, 0.66", "15.434, 152.661, 11.6735, 0.66", "15.4616, 153.371, 11.9035, 0.22", "15.4611, 153.723, 12.0082, 0.22", "15.3838, 155.236, 12.481, 1.99", "15.3583, 155.686, 12.6139, 2.65", "15.3434, 156.02, 12.7045, 2.8", "15.3319, 156.607, 12.8544, 2.14", "15.3918, 157.954, 13.2566, 0.22", "15.4939, 158.861, 13.5469, 0.22", "15.6619, 159.826, 13.8527, 1.25", "15.7336, 160.179, 13.9736, 1.47", "15.8083, 160.521, 14.1154, 1.25", "16.0922, 161.75, 14.7626, 0.52", "16.2, 162.229, 15.0668, 0.29", "16.2933, 162.689, 15.3551, 0.29", "16.4017, 163.208, 15.6702, 0.29", "16.6347, 164.358, 16.3045, 1.84", "16.7294, 164.915, 16.5769, 2.28", "16.7802, 165.378, 16.7703, 2.5", "16.8979, 167.034, 17.4997, 0.29", "16.9398, 167.852, 17.8697, 0.22", "16.9579, 168.495, 18.1678, 0.22", "16.9499, 168.919, 18.367, 0.22", "16.9186, 169.635, 18.7651, 0.22", "16.8272, 170.847, 19.5334, 1.77", "16.7901, 171.238, 19.8009, 2.36", "16.7651, 171.623, 20.0789, 2.65", "16.7702, 172.17, 20.4836, 2.8", "17.0106, 173.915, 21.7424, 0.29", "17.1405, 174.413, 22.0843, 0.22", "17.3414, 174.974, 22.4386, 0.22", "17.5347, 175.37, 22.6959, 0.22", "17.7546, 175.713, 22.912, 0.22", "18.5055, 176.637, 23.464, 1.47", "18.7036, 176.838, 23.5827, 1.99", "18.9505, 177.068, 23.735, 1.99", "20.1383, 178.153, 24.5291, 0.15", "20.5736, 178.548, 24.8333, 0.29", "20.7728, 178.708, 24.9662, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "28.2282, -5.16663, -36.078, 0.22", "28.2633, -7.34576, -38.0818, 0.22", "28.271, -7.8972, -38.5659, 1.11", "28.2748, -8.19704, -38.8331, 1.11", "28.3087, -9.16441, -39.6586, 0.22", "28.4331, -11.3015, -41.4084, 0.22", "28.5113, -12.2257, -42.1926, 2.06", "28.6041, -12.8533, -42.7047, 2.65", "28.7047, -13.3756, -43.1515, 2.65", "28.9281, -14.3285, -43.9727, 1.03", "29.1318, -15.0083, -44.56, 0.22", "29.6135, -16.1894, -45.4898, 0.52", "29.7504, -16.4678, -45.6995, 0.52", "29.9103, -16.7545, -45.912, 0.29", "30.247, -17.388, -46.4132, 1.03", "30.4636, -17.8276, -46.7844, 0.96", "30.6999, -18.3925, -47.3075, 0.59", "30.8655, -18.9462, -47.8869, 1.84", "30.9667, -19.3572, -48.3725, 2.36", "31.1861, -20.5244, -49.9363, 0.88", "31.2718, -20.9011, -50.4942, 0.29", "31.4796, -21.7033, -51.7004, 0.29", "31.803, -22.7957, -53.3666, 1.69", "31.9146, -23.108, -53.8373, 2.21", "32.1493, -23.6722, -54.6592, 2.21", "33.3141, -26.1197, -58.0646, 0.44", "33.4971, -26.4764, -58.5392, 0.74", "33.5515, -26.5749, -58.6597, 0.74", "33.8855, -27.1414, -59.3341, 0.22", "34.3625, -27.9759, -60.2994, 0.88", "34.4504, -28.1351, -60.4792, 0.88", "34.8209, -28.9199, -61.4159, 0.22", "35.0668, -29.4992, -62.1041, 0.22", "35.4465, -30.5408, -63.317, 1.84", "35.5578, -30.9263, -63.7525, 2.21", "35.7039, -31.4363, -64.3135, 2.21", "36.2485, -33.2672, -66.3516, 0.29", "36.4585, -33.9907, -67.1852, 0.15", "36.6821, -34.8083, -68.1152, 0.96", "36.9672, -35.9456, -69.3995, 0.22", "37.423, -38.0565, -71.8712, 0.22", "37.6259, -39.2268, -73.2462, 2.21", "37.7458, -40.1443, -74.3623, 2.8", "37.8866, -41.6478, -76.2728, 0.22", "37.9288, -42.3751, -77.1867, 1.03", "37.9538, -44.3877, -79.6945, 0.22", "37.8946, -45.4014, -80.9408, 1.77", "37.8327, -46.1614, -81.8561, 2.06", "37.7041, -47.7676, -83.7678, 0.22", "37.6509, -48.4139, -84.5584, 1.33", "37.5979, -49.1918, -85.4867, 1.62", "37.5185, -50.968, -87.4646, 0.22", "37.5087, -51.2749, -87.7957, 0.74", "37.493, -51.6189, -88.1585, 0.74", "37.4532, -52.5553, -89.159, 0.22", "37.4558, -53.1988, -89.8234, 0.22", "37.4885, -53.8066, -90.3892, 1.03", "37.5519, -54.3772, -90.8676, 1.11", "37.7361, -55.7303, -92.084, 0.22", "37.9387, -56.9276, -93.0958, 0.22", "38.1347, -57.9099, -93.8945, 1.92", "38.2221, -58.3259, -94.2253, 2.58", "38.3038, -58.684, -94.5054, 2.58", "38.918, -61.2358, -96.3849, 0.29", "39.4251, -63.2482, -97.8033, 0.29", "39.5573, -63.7777, -98.206, 1.03", "39.7181, -64.4318, -98.7454, 1.25", "40.4262, -67.143, -101.023, 0.22", "40.6563, -67.8857, -101.729, 0.74", "40.7565, -68.1538, -102.003, 0.74", "41.3078, -69.4706, -103.544, 0.22", "41.5948, -70.1032, -104.315, 1.69", "41.82, -70.5452, -104.883, 2.5", "43.5176, -73.5324, -108.78, 0.22", "43.8089, -74.0185, -109.396, 0.74", "44.0933, -74.4675, -109.916, 0.74", "44.4212, -74.9523, -110.428, 0.22", "45.7479, -76.8311, -112.311, 0.22", "46.3599, -77.6537, -113.063, 1.99", "46.691, -78.0745, -113.379, 2.21", "47.5727, -79.2114, -114.208, 0.22", "48.1253, -79.9194, -114.707, 0.96", "48.3644, -80.236, -114.919, 1.18", "49.4745, -81.7611, -115.876, 0.22", "49.8093, -82.2439, -116.19, 0.22", "50.2571, -82.891, -116.619, 0.81", "50.5368, -83.2891, -116.906, 0.81", "51.6363, -84.78, -118.298, 0.22", "52.0461, -85.3076, -118.895, 0.44", "52.332, -85.6585, -119.353, 0.15", "52.9482, -86.3431, -120.35, 1.11", "53.7689, -87.1656, -121.708, 0.22", "55.2151, -88.4971, -124.082, 1.03", "55.6694, -88.8616, -124.831, 0.81", "55.9514, -89.0693, -125.376, 0.52", "56.2225, -89.2545, -125.977, 0.81", "56.4301, -89.382, -126.483, 0.81", "56.907, -89.7036, -127.615, 0.22", "57.4183, -90.0933, -128.802, 0.96", "58.8941, -91.315, -132.402, 0.37", "59.6831, -92.0319, -134.393, 1.4", "60.3091, -92.6662, -136.016, 1.03", "61.0675, -93.5116, -138.038, 0.22", "61.335, -93.8483, -138.821, 0.96", "61.5418, -94.1401, -139.427, 0.96", "61.8504, -94.6239, -140.28, 0.59", "62.2115, -95.2102, -141.319, 1.18", "62.5647, -95.7553, -142.32, 1.33", "64.0876, -97.826, -146.326, 0.22", "64.3116, -98.1021, -146.844, 0.88", "64.5089, -98.3212, -147.238, 0.88", "65.4183, -99.2051, -148.799, 0.22", "66.6148, -100.119, -150.36, 0.22", "67.3335, -100.554, -151.059, 1.18", "67.7458, -100.748, -151.358, 1.47", "68.5442, -100.982, -151.904, 0.15", "69.4764, -101.148, -152.579, 0.44", "71.7527, -101.347, -154.238, 0.22", "72.4238, -101.363, -154.773, 0.74", "72.8785, -101.357, -155.17, 0.74", "76.7193, -101.191, -158.768, 0.29", "78.4613, -101.076, -160.463, 1.03", "78.8471, -101.04, -160.848, 1.03", "80.4026, -100.918, -162.387, 0.29", "81.1753, -100.893, -163.121, 0.74", "82.3619, -100.939, -164.168, 0.22", "83.4877, -101.096, -165.045, 1.84", "84.07, -101.219, -165.418, 1.84", "86.6745, -101.917, -166.922, 0.15", "87.5239, -102.216, -167.318, 0.74", "88.0243, -102.439, -167.527, 0.74", "88.6535, -102.788, -167.762, 0.22", "89.2851, -103.209, -168.006, 0.59", "89.5167, -103.386, -168.095, 0.59", "90.5114, -104.272, -168.553, 0.22", "90.9393, -104.691, -168.78, 0.74", "91.147, -104.91, -168.916, 0.74", "91.9958, -105.889, -169.56, 0.15", "92.5827, -106.613, -170.047, 0.15", "93.0529, -107.209, -170.489, 0.59", "93.3724, -107.617, -170.804, 0.59", "94.6157, -109.201, -172.018, 0.22", "95.0135, -109.713, -172.408, 0.74", "95.2471, -110.018, -172.635, 0.74", "96.6771, -111.893, -174.039, 0.22", "97.7502, -113.248, -175.022, 0.22", "98.1462, -113.73, -175.375, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "28.2282, -5.16663, -36.078, 0.22", "29.248, -5.87603, -36.4371, 0.22", "30.6198, -6.83028, -36.9201, 0.22", "31.0368, -7.12039, -37.0669, 0.74", "31.5266, -7.46109, -37.2394, 0.74", "33.0172, -8.49796, -37.7642, 0.22", "33.4599, -8.80592, -37.9201, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_43", "dend_32", "dend_27", "dend_20", "dend_0", "dend_47", "dend_44", "dend_40", "dend_33", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_1", "dend_46", "dend_45", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_25", "dend_22", "dend_19", "dend_18", "dend_10", "dend_9", "dend_2", "dend_39", "dend_38", "dend_36", "dend_35", "dend_24", "dend_23", "dend_12", "dend_11", "dend_6", "dend_3", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_4", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_43", "dend_32", "dend_27", "dend_20", "dend_0", "dend_47", "dend_44", "dend_40", "dend_33", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_1", "dend_46", "dend_45", "dend_42", "dend_41", "dend_37", "dend_34", "dend_31", "dend_30", "dend_25", "dend_22", "dend_19", "dend_18", "dend_10", "dend_9", "dend_2", "dend_39", "dend_38", "dend_36", "dend_35", "dend_24", "dend_23", "dend_12", "dend_11", "dend_6", "dend_3", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_4", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_NBC_73114eff1a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_1
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.45000064795763495)
    connect dend_43(0), soma_0(0.45000064795763495)
    connect dend_32(0), soma_0(0.45000064795763495)
    connect dend_27(0), soma_0(0.45000064795763495)
    connect dend_20(0), soma_0(0.45000064795763495)
    connect dend_0(0), soma_0(0.45000064795763495)
    connect axon_0(0), soma_0(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_1(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -13.6672, -4.21761, 2.88746, 3.77586 ) }
    soma_0 { pt3dadd( -12.3226, -3.91408, 2.62074, 6.64131 ) }
    soma_0 { pt3dadd( -10.9781, -3.61056, 2.35401, 8.80204 ) }
    soma_0 { pt3dadd( -9.63356, -3.30703, 2.08728, 10.3184 ) }
    soma_0 { pt3dadd( -8.28902, -3.0035, 1.82056, 12.1801 ) }
    soma_0 { pt3dadd( -6.94448, -2.69998, 1.55383, 13.9015 ) }
    soma_0 { pt3dadd( -5.59994, -2.39645, 1.28711, 15.2125 ) }
    soma_0 { pt3dadd( -4.2554, -2.09293, 1.02038, 16.1357 ) }
    soma_0 { pt3dadd( -2.91086, -1.7894, 0.753656, 16.8349 ) }
    soma_0 { pt3dadd( -1.56632, -1.48588, 0.486931, 17.1545 ) }
    soma_0 { pt3dadd( -0.221778, -1.18235, 0.220205, 17.2905 ) }
    soma_0 { pt3dadd( 1.12276, -0.878824, -0.0465203, 17.299 ) }
    soma_0 { pt3dadd( 2.4673, -0.575298, -0.313246, 17.3774 ) }
    soma_0 { pt3dadd( 3.81184, -0.271773, -0.579971, 17.0096 ) }
    soma_0 { pt3dadd( 5.15639, 0.0317532, -0.846697, 16.2957 ) }
    soma_0 { pt3dadd( 6.50093, 0.335279, -1.11342, 15.4071 ) }
    soma_0 { pt3dadd( 7.84547, 0.638805, -1.38015, 13.8209 ) }
    soma_0 { pt3dadd( 9.19001, 0.942331, -1.64687, 12.2266 ) }
    soma_0 { pt3dadd( 10.5345, 1.24586, -1.9136, 10.4487 ) }
    soma_0 { pt3dadd( 11.8791, 1.54938, -2.18032, 8.51007 ) }
    soma_0 { pt3dadd( 13.2236, 1.85291, -2.44705, 4.94822 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 2.86402, -8.03627, -8.21721, 0.88 ) }
    dend_48 { pt3dadd( 2.86402, -8.03627, -8.21721, 0.88 ) }
    dend_48 { pt3dadd( 3.16473, -8.63174, -8.40999, 0.88 ) }
    dend_48 { pt3dadd( 3.67527, -9.51428, -8.69956, 0.88 ) }
    dend_48 { pt3dadd( 4.21348, -10.3706, -9.00537, 0.81 ) }
    dend_48 { pt3dadd( 5.01008, -11.5449, -9.44084, 0.88 ) }
    dend_48 { pt3dadd( 5.49974, -12.2301, -9.7223, 1.4 ) }
    dend_48 { pt3dadd( 5.8385, -12.6688, -9.92003, 1.69 ) }
    dend_48 { pt3dadd( 6.16448, -13.0586, -10.1126, 1.84 ) }
    dend_48 { pt3dadd( 6.51824, -13.4808, -10.327, 1.84 ) }
    dend_48 { pt3dadd( 7.00005, -14.1284, -10.6246, 0.66 ) }
    dend_48 { pt3dadd( 7.42279, -14.8727, -10.8805, 0.44 ) }
    dend_48 { pt3dadd( 7.65144, -15.4442, -11.0297, 0.66 ) }
    dend_48 { pt3dadd( 7.77158, -15.8551, -11.1127, 0.88 ) }
    dend_48 { pt3dadd( 7.93623, -16.5253, -11.2077, 0.96 ) }
    dend_48 { pt3dadd( 8.04464, -17.0011, -11.2524, 0.96 ) }
    dend_48 { pt3dadd( 8.18475, -17.6027, -11.3005, 0.74 ) }
    dend_48 { pt3dadd( 8.40727, -18.4423, -11.3588, 0.44 ) }
    dend_48 { pt3dadd( 8.61459, -19.1092, -11.4321, 0.29 ) }
    dend_48 { pt3dadd( 8.82673, -19.6832, -11.5143, 0.29 ) }
    dend_48 { pt3dadd( 9.10233, -20.3366, -11.6201, 1.62 ) }
    dend_48 { pt3dadd( 9.399, -20.9745, -11.7268, 2.36 ) }
    dend_48 { pt3dadd( 9.56143, -21.283, -11.7749, 2.8 ) }
    dend_48 { pt3dadd( 9.69697, -21.5299, -11.8083, 2.95 ) }
    dend_48 { pt3dadd( 10.1026, -22.3544, -11.8889, 1.62 ) }
    dend_48 { pt3dadd( 10.4616, -23.1822, -11.9369, 0.66 ) }
    dend_48 { pt3dadd( 10.7656, -23.9315, -12.0083, 0.29 ) }
    dend_48 { pt3dadd( 11.1093, -24.7844, -12.1507, 0.29 ) }
    dend_48 { pt3dadd( 11.3336, -25.3492, -12.2733, 0.29 ) }
    dend_48 { pt3dadd( 11.6875, -26.327, -12.5225, 2.28 ) }
    dend_48 { pt3dadd( 11.9019, -26.9989, -12.7312, 2.5 ) }
    dend_48 { pt3dadd( 12.3212, -28.5, -13.268, 0.66 ) }
    dend_48 { pt3dadd( 12.6005, -29.523, -13.6394, 0.29 ) }
    dend_48 { pt3dadd( 12.7369, -30.0241, -13.8281, 0.29 ) }
    dend_48 { pt3dadd( 13.0944, -31.2187, -14.2763, 2.73 ) }
    dend_48 { pt3dadd( 13.2276, -31.632, -14.4373, 3.46 ) }
    dend_48 { pt3dadd( 13.3755, -32.0958, -14.6322, 3.46 ) }
    dend_48 { pt3dadd( 13.8906, -33.7636, -15.2992, 0.15 ) }
    dend_48 { pt3dadd( 14.0679, -34.3219, -15.5301, 0.15 ) }
    dend_48 { pt3dadd( 14.2452, -34.8399, -15.7682, 0.88 ) }
    dend_48 { pt3dadd( 14.4759, -35.4788, -16.0919, 1.18 ) }
    dend_48 { pt3dadd( 14.789, -36.3989, -16.5903, 0.88 ) }
    dend_48 { pt3dadd( 14.9889, -37.0433, -16.9512, 0.15 ) }
    dend_48 { pt3dadd( 15.2496, -38.005, -17.4978, 1.92 ) }
    dend_48 { pt3dadd( 15.3872, -38.4966, -17.749, 2.87 ) }
    dend_48 { pt3dadd( 15.4978, -38.8969, -17.9446, 2.87 ) }
    dend_48 { pt3dadd( 15.885, -40.3245, -18.5979, 0.74 ) }
    dend_48 { pt3dadd( 16.052, -40.9541, -18.8716, 0.29 ) }
    dend_48 { pt3dadd( 16.1543, -41.3628, -19.0588, 0.59 ) }
    dend_48 { pt3dadd( 16.267, -41.8588, -19.2727, 0.74 ) }
    dend_48 { pt3dadd( 16.5236, -43.057, -19.7368, 0.22 ) }
    dend_48 { pt3dadd( 16.7208, -44.0538, -20.0774, 1.25 ) }
    dend_48 { pt3dadd( 16.8043, -44.527, -20.229, 1.55 ) }
    dend_48 { pt3dadd( 17.0461, -45.8283, -20.6449, 0.22 ) }
    dend_48 { pt3dadd( 17.2753, -46.9361, -20.9806, 0.22 ) }
    dend_48 { pt3dadd( 17.3954, -47.463, -21.1244, 0.88 ) }
    dend_48 { pt3dadd( 17.5402, -47.9947, -21.2355, 1.18 ) }
    dend_48 { pt3dadd( 17.7111, -48.5325, -21.3483, 0.96 ) }
    dend_48 { pt3dadd( 18.0597, -49.4692, -21.5621, 0.22 ) }
    dend_48 { pt3dadd( 18.281, -49.9521, -21.6743, 0.52 ) }
    dend_48 { pt3dadd( 18.3628, -50.1177, -21.7253, 0.66 ) }
    dend_48 { pt3dadd( 18.6718, -50.7515, -21.9277, 0.22 ) }
    dend_48 { pt3dadd( 19.2342, -51.939, -22.3177, 2.8 ) }
    dend_48 { pt3dadd( 19.4458, -52.4037, -22.4668, 3.24 ) }
    dend_48 { pt3dadd( 19.6549, -52.9162, -22.6428, 2.95 ) }
    dend_48 { pt3dadd( 20.3288, -54.6659, -23.2591, 0.29 ) }
    dend_48 { pt3dadd( 20.7172, -55.7076, -23.6119, 0.15 ) }
    dend_48 { pt3dadd( 20.9534, -56.373, -23.8276, 0.96 ) }
    dend_48 { pt3dadd( 21.0604, -56.682, -23.9177, 1.18 ) }
    dend_48 { pt3dadd( 21.4681, -57.9386, -24.2902, 0.22 ) }
    dend_48 { pt3dadd( 21.5844, -58.2995, -24.4005, 0.52 ) }
    dend_48 { pt3dadd( 21.9713, -59.364, -24.7103, 0.22 ) }
    dend_48 { pt3dadd( 22.264, -60.1213, -24.9453, 1.69 ) }
    dend_48 { pt3dadd( 22.4987, -60.6948, -25.12, 2.36 ) }
    dend_48 { pt3dadd( 22.7356, -61.2403, -25.3037, 2.5 ) }
    dend_48 { pt3dadd( 23.3617, -62.5914, -25.7587, 0.22 ) }
    dend_48 { pt3dadd( 23.9867, -63.9616, -26.2464, 0.22 ) }
    dend_48 { pt3dadd( 24.2428, -64.5261, -26.4563, 1.33 ) }
    dend_48 { pt3dadd( 24.4606, -65.0163, -26.6312, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 24.7271, -65.6557, -26.849, 2.06 ) }
    dend_48 { pt3dadd( 25.3073, -67.1144, -27.2804, 0.22 ) }
    dend_48 { pt3dadd( 25.5545, -67.7711, -27.4595, 0.74 ) }
    dend_48 { pt3dadd( 25.6021, -67.8994, -27.4916, 0.74 ) }
    dend_48 { pt3dadd( 25.8961, -68.6584, -27.6513, 0.22 ) }
    dend_48 { pt3dadd( 26.1889, -69.4162, -27.7835, 1.69 ) }
    dend_48 { pt3dadd( 26.4286, -70.0353, -27.8642, 2.43 ) }
    dend_48 { pt3dadd( 26.5407, -70.3322, -27.8986, 2.5 ) }
    dend_48 { pt3dadd( 27.198, -72.1944, -27.9596, 0.15 ) }
    dend_48 { pt3dadd( 27.5183, -73.1818, -27.9454, 0.15 ) }
    dend_48 { pt3dadd( 27.6296, -73.6062, -27.9206, 0.59 ) }
    dend_48 { pt3dadd( 27.7214, -74.0293, -27.8824, 0.74 ) }
    dend_48 { pt3dadd( 27.9911, -75.5564, -27.7218, 0.22 ) }
    dend_48 { pt3dadd( 28.2026, -77.0915, -27.5454, 2.5 ) }
    dend_48 { pt3dadd( 28.2474, -77.5166, -27.4968, 2.95 ) }
    dend_48 { pt3dadd( 28.5033, -80.1965, -27.2034, 0.22 ) }
    dend_48 { pt3dadd( 28.5421, -80.5616, -27.1655, 0.81 ) }
    dend_48 { pt3dadd( 28.5709, -80.872, -27.1521, 0.81 ) }
    dend_48 { pt3dadd( 28.7149, -82.6581, -27.1844, 0.22 ) }
    dend_48 { pt3dadd( 28.7989, -83.5709, -27.2655, 1.69 ) }
    dend_48 { pt3dadd( 28.8624, -84.1528, -27.3318, 2.14 ) }
    dend_48 { pt3dadd( 29.065, -85.6704, -27.5503, 0.22 ) }
    dend_48 { pt3dadd( 29.3207, -87.4206, -27.7855, 1.25 ) }
    dend_48 { pt3dadd( 29.3735, -87.7856, -27.8302, 1.47 ) }
    dend_48 { pt3dadd( 29.5933, -89.5529, -27.9405, 0.22 ) }
    dend_48 { pt3dadd( 29.6424, -90.0736, -27.9368, 0.74 ) }
    dend_48 { pt3dadd( 29.6541, -90.4874, -27.9083, 0.74 ) }
    dend_48 { pt3dadd( 29.6046, -91.3306, -27.7781, 0.22 ) }
    dend_48 { pt3dadd( 29.5354, -91.9126, -27.6395, 0.22 ) }
    dend_48 { pt3dadd( 29.2607, -93.3279, -27.2955, 2.21 ) }
    dend_48 { pt3dadd( 29.1351, -93.7728, -27.1861, 2.73 ) }
    dend_48 { pt3dadd( 28.5977, -95.3655, -26.8769, 0.22 ) }
    dend_48 { pt3dadd( 28.2907, -96.1532, -26.768, 0.22 ) }
    dend_48 { pt3dadd( 28.0679, -96.6574, -26.7337, 0.81 ) }
    dend_48 { pt3dadd( 27.9044, -97.0018, -26.7314, 1.03 ) }
    dend_48 { pt3dadd( 27.6929, -97.4004, -26.7547, 0.81 ) }
    dend_48 { pt3dadd( 27.1368, -98.3164, -26.7956, 0.22 ) }
    dend_48 { pt3dadd( 26.8351, -98.7501, -26.8088, 1.18 ) }
    dend_48 { pt3dadd( 26.5227, -99.1843, -26.8116, 1.4 ) }
    dend_48 { pt3dadd( 26.2861, -99.5066, -26.8053, 1.18 ) }
    dend_48 { pt3dadd( 25.5559, -100.618, -26.7471, 0.22 ) }
    dend_48 { pt3dadd( 25.1341, -101.388, -26.6536, 0.22 ) }
    dend_48 { pt3dadd( 25.011, -101.669, -26.6059, 0.96 ) }
    dend_48 { pt3dadd( 24.874, -102.091, -26.5367, 1.18 ) }
    dend_48 { pt3dadd( 24.7824, -102.469, -26.4778, 0.88 ) }
    dend_48 { pt3dadd( 24.4403, -104.381, -26.1965, 0.22 ) }
    dend_48 { pt3dadd( 24.31, -105.687, -26.0254, 2.73 ) }
    dend_48 { pt3dadd( 24.2862, -106.159, -25.9629, 2.8 ) }
    dend_48 { pt3dadd( 24.2432, -107.682, -25.7588, 0.22 ) }
    dend_48 { pt3dadd( 24.2333, -108.153, -25.7266, 0.74 ) }
    dend_48 { pt3dadd( 24.228, -108.339, -25.7315, 0.81 ) }
    dend_48 { pt3dadd( 24.1714, -109.259, -25.858, 0.22 ) }
    dend_48 { pt3dadd( 24.1306, -109.623, -25.9436, 0.52 ) }
    dend_48 { pt3dadd( 24.0851, -109.863, -26.0161, 0.74 ) }
    dend_48 { pt3dadd( 23.6593, -111.625, -26.7181, 0.22 ) }
    dend_48 { pt3dadd( 23.3675, -112.714, -27.188, 0.22 ) }
    dend_48 { pt3dadd( 23.105, -113.62, -27.618, 1.62 ) }
    dend_48 { pt3dadd( 22.9756, -114.032, -27.8247, 1.92 ) }
    dend_48 { pt3dadd( 22.5315, -115.429, -28.5508, 0.22 ) }
    dend_48 { pt3dadd( 22.2141, -116.41, -29.063, 0.22 ) }
    dend_48 { pt3dadd( 22.0293, -116.971, -29.3478, 0.96 ) }
    dend_48 { pt3dadd( 21.8596, -117.535, -29.6656, 1.25 ) }
    dend_48 { pt3dadd( 21.7101, -118.106, -29.9961, 0.22 ) }
    dend_48 { pt3dadd( 21.4706, -119.145, -30.5535, 0.22 ) }
    dend_48 { pt3dadd( 21.296, -120.02, -30.9901, 1.03 ) }
    dend_48 { pt3dadd( 21.2539, -120.27, -31.105, 1.03 ) }
    dend_48 { pt3dadd( 21.0413, -121.753, -31.7382, 0.22 ) }
    dend_48 { pt3dadd( 20.9703, -122.396, -31.9655, 0.22 ) }
    dend_48 { pt3dadd( 20.8867, -123.317, -32.2379, 2.21 ) }
    dend_48 { pt3dadd( 20.8488, -123.751, -32.3354, 2.43 ) }
    dend_48 { pt3dadd( 20.7673, -124.705, -32.5113, 1.47 ) }
    dend_48 { pt3dadd( 20.6491, -125.846, -32.6733, 0.22 ) }
    dend_48 { pt3dadd( 20.5072, -127.066, -32.7789, 0.22 ) }
    dend_48 { pt3dadd( 20.4103, -127.899, -32.8477, 1.62 ) }
    dend_48 { pt3dadd( 20.3532, -128.39, -32.8887, 2.14 ) }
    dend_48 { pt3dadd( 20.2884, -128.925, -32.9246, 2.14 ) }
    dend_48 { pt3dadd( 20.0744, -130.443, -33.0033, 0.22 ) }
    dend_48 { pt3dadd( 19.971, -131.173, -33.0421, 1.25 ) }
    dend_48 { pt3dadd( 19.9135, -131.599, -33.0621, 1.55 ) }
    dend_48 { pt3dadd( 19.8232, -132.356, -33.0753, 1.18 ) }
    dend_48 { pt3dadd( 19.649, -133.97, -33.0643, 0.22 ) }
    dend_48 { pt3dadd( 19.5656, -134.751, -33.0455, 1.69 ) }
    dend_48 { pt3dadd( 19.513, -135.252, -33.0297, 1.99 ) }
    dend_48 { pt3dadd( 19.3153, -136.972, -32.9568, 0.22 ) }
    dend_48 { pt3dadd( 19.1872, -138.089, -32.8904, 0.81 ) }
    dend_48 { pt3dadd( 19.1549, -138.398, -32.861, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.78402, 3.42073, 10.9728, 0.59 ) }
    dend_43 { pt3dadd( 2.48176, 3.69662, 11.7338, 0.59 ) }
    dend_43 { pt3dadd( 2.08145, 4.06202, 12.7417, 0.81 ) }
    dend_43 { pt3dadd( 0.0304042, 5.93417, 17.9058, 2.65 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -13.986, -4.00827, -3.2872, 1.25 ) }
    dend_32 { pt3dadd( -14.1496, -4.08452, -3.29789, 1.25 ) }
    dend_32 { pt3dadd( -15.2864, -4.61417, -3.37211, 1.25 ) }
    dend_32 { pt3dadd( -16.2263, -5.05213, -3.43348, 1.4 ) }
    dend_32 { pt3dadd( -16.8997, -5.3659, -3.47744, 1.55 ) }
    dend_32 { pt3dadd( -17.7417, -5.75819, -3.53241, 1.55 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 96/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -13.616, -1.99427, 4.5928, 1.92 ) }
    dend_27 { pt3dadd( -13.616, -1.99427, 4.5928, 1.92 ) }
    dend_27 { pt3dadd( -14.531, -1.91635, 4.5928, 1.33 ) }
    dend_27 { pt3dadd( -15.3616, -1.85432, 4.57388, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( -16.4445, -1.7805, 4.53191, 1.18 ) }
    dend_27 { pt3dadd( -17.487, -1.70876, 4.48381, 1.18 ) }
    dend_27 { pt3dadd( -18.7916, -1.62075, 4.41946, 1.18 ) }
    dend_27 { pt3dadd( -20.2053, -1.54309, 4.34812, 1.62 ) }
    dend_27 { pt3dadd( -21.3803, -1.49391, 4.27078, 2.21 ) }
    dend_27 { pt3dadd( -21.922, -1.47264, 4.24321, 2.58 ) }
    dend_27 { pt3dadd( -22.6742, -1.42029, 4.21673, 2.87 ) }
    dend_27 { pt3dadd( -23.3466, -1.33424, 4.20582, 2.87 ) }
    dend_27 { pt3dadd( -24.3708, -1.13549, 4.22947, 2.58 ) }
    dend_27 { pt3dadd( -25.3883, -0.878031, 4.29822, 1.69 ) }
    dend_27 { pt3dadd( -26.74, -0.459632, 4.49385, 0.88 ) }
    dend_27 { pt3dadd( -27.7788, -0.0757311, 4.73881, 0.81 ) }
    dend_27 { pt3dadd( -28.4191, 0.20281, 4.94181, 0.81 ) }
    dend_27 { pt3dadd( -28.9877, 0.488572, 5.18293, 1.03 ) }
    dend_27 { pt3dadd( -29.4044, 0.722175, 5.40752, 1.18 ) }
    dend_27 { pt3dadd( -30.0858, 1.10137, 5.88362, 1.18 ) }
    dend_27 { pt3dadd( -30.8175, 1.45664, 6.47615, 1.4 ) }
    dend_27 { pt3dadd( -31.1999, 1.60449, 6.81442, 1.55 ) }
    dend_27 { pt3dadd( -31.7622, 1.77269, 7.32821, 1.55 ) }
    dend_27 { pt3dadd( -32.356, 1.92755, 7.86836, 1.33 ) }
    dend_27 { pt3dadd( -33.5559, 2.19439, 8.96172, 1.25 ) }
    dend_27 { pt3dadd( -34.7507, 2.4135, 10.0214, 2.28 ) }
    dend_27 { pt3dadd( -35.3653, 2.50568, 10.572, 3.24 ) }
    dend_27 { pt3dadd( -35.9001, 2.56995, 11.0747, 3.54 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 24/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 2.47402, 7.23973, -0.657204, 1.77 ) }
    dend_20 { pt3dadd( 2.47402, 7.23973, -0.657204, 1.77 ) }
    dend_20 { pt3dadd( 2.5397, 7.99029, -0.592407, 1.33 ) }
    dend_20 { pt3dadd( 2.61564, 8.78818, -0.506656, 1.03 ) }
    dend_20 { pt3dadd( 2.66519, 9.31156, -0.443502, 0.96 ) }
    dend_20 { pt3dadd( 2.72269, 9.92061, -0.366472, 0.96 ) }
    dend_20 { pt3dadd( 2.78486, 10.5711, -0.286354, 1.11 ) }
    dend_20 { pt3dadd( 2.84289, 11.2407, -0.204742, 1.33 ) }
    dend_20 { pt3dadd( 2.87647, 11.7416, -0.140616, 1.55 ) }
    dend_20 { pt3dadd( 2.89799, 12.26, -0.084433, 1.55 ) }
    dend_20 { pt3dadd( 2.90654, 12.8299, -0.0404896, 1.55 ) }
    dend_20 { pt3dadd( 2.89871, 13.6342, -0.0249406, 1.18 ) }
    dend_20 { pt3dadd( 2.87249, 14.3484, -0.047604, 1.03 ) }
    dend_20 { pt3dadd( 2.81576, 15.2595, -0.124597, 1.4 ) }
    dend_20 { pt3dadd( 2.77063, 15.8305, -0.216163, 1.84 ) }
    dend_20 { pt3dadd( 2.70867, 16.5333, -0.367949, 2.14 ) }
    dend_20 { pt3dadd( 2.65598, 17.0499, -0.499603, 2.14 ) }
    dend_20 { pt3dadd( 2.59583, 17.5743, -0.660443, 2.21 ) }
    dend_20 { pt3dadd( 2.54699, 18.0221, -0.826406, 1.99 ) }
    dend_20 { pt3dadd( 2.47564, 18.7315, -1.14826, 1.69 ) }
    dend_20 { pt3dadd( 2.43903, 19.1621, -1.35041, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 45/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 12.624, 0.380726, -4.7872, 6.48 ) }
    dend_0 { pt3dadd( 12.624, 0.380726, -4.7872, 6.48 ) }
    dend_0 { pt3dadd( 14.0503, 0.57844, -4.74343, 6.48 ) }
    dend_0 { pt3dadd( 15.3058, 0.752482, -4.70489, 5.23 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 49/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 13.2236, 1.85291, -2.44705, 0.836316 ) }
    axon_0 { pt3dadd( 27.8554, 5.156, -2.44705, 0.836316 ) }
    axon_0 { pt3dadd( 42.4872, 8.45908, -2.44705, 0.836316 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 0.0304042, 5.93417, 17.9058, 2.36 ) }
    dend_47 { pt3dadd( -0.202122, 5.7714, 18.0356, 2.36 ) }
    dend_47 { pt3dadd( -1.25324, 5.08675, 18.4979, 1.69 ) }
    dend_47 { pt3dadd( -1.93067, 4.63668, 18.7376, 0.44 ) }
    dend_47 { pt3dadd( -2.36499, 4.30701, 18.8709, 0.74 ) }
    dend_47 { pt3dadd( -2.67521, 4.04183, 18.9699, 0.88 ) }
    dend_47 { pt3dadd( -3.05271, 3.67952, 19.098, 0.88 ) }
    dend_47 { pt3dadd( -3.29836, 3.3976, 19.1594, 0.74 ) }
    dend_47 { pt3dadd( -2.90304, 3.19265, 19.5906, 0.52 ) }
    dend_47 { pt3dadd( -2.54734, 3.01321, 20.1618, 0.66 ) }
    dend_47 { pt3dadd( -1.90641, 2.67815, 21.2268, 0.81 ) }
    dend_47 { pt3dadd( -1.47914, 2.42621, 21.9799, 1.33 ) }
    dend_47 { pt3dadd( -1.30356, 2.30311, 22.327, 1.33 ) }
    dend_47 { pt3dadd( 0.0900373, 1.15446, 25.5979, 0.88 ) }
    dend_47 { pt3dadd( 0.603436, 0.640513, 27.1171, 0.74 ) }
    dend_47 { pt3dadd( 0.76118, 0.412878, 27.8013, 0.74 ) }
    dend_47 { pt3dadd( 0.86155, 0.067872, 28.8053, 0.81 ) }
    dend_47 { pt3dadd( 0.84283, -0.340803, 29.9705, 0.96 ) }
    dend_47 { pt3dadd( 0.73034, -0.645656, 30.7718, 1.11 ) }
    dend_47 { pt3dadd( 0.507463, -0.878598, 31.2517, 1.77 ) }
    dend_47 { pt3dadd( 0.251942, -1.03993, 31.6318, 2.21 ) }
    dend_47 { pt3dadd( -0.100594, -1.17594, 32.0825, 2.5 ) }
    dend_47 { pt3dadd( -0.436212, -1.244, 32.4579, 2.65 ) }
    dend_47 { pt3dadd( -0.878718, -1.26509, 32.8892, 2.65 ) }
    dend_47 { pt3dadd( -1.95136, -1.21273, 33.7895, 0.81 ) }
    dend_47 { pt3dadd( -2.24405, -1.17849, 34.0034, 0.66 ) }
    dend_47 { pt3dadd( -2.86156, -1.11798, 34.3774, 0.88 ) }
    dend_47 { pt3dadd( -3.24679, -1.10284, 34.57, 0.59 ) }
    dend_47 { pt3dadd( -3.96722, -1.11723, 34.8854, 0.29 ) }
    dend_47 { pt3dadd( -4.71036, -1.12024, 35.1286, 0.29 ) }
    dend_47 { pt3dadd( -4.52659, -1.46345, 35.1293, 0.29 ) }
    dend_47 { pt3dadd( -3.95673, -2.47396, 35.1615, 0.29 ) }
    dend_47 { pt3dadd( -3.49457, -3.16463, 35.121, 0.29 ) }
    dend_47 { pt3dadd( -2.83075, -4.05892, 35.0321, 0.29 ) }
    dend_47 { pt3dadd( -1.93112, -5.17832, 34.8876, 0.29 ) }
    dend_47 { pt3dadd( -1.08514, -6.15515, 34.7529, 0.37 ) }
    dend_47 { pt3dadd( -0.125404, -7.16825, 34.5951, 0.37 ) }
    dend_47 { pt3dadd( 1.07096, -8.28269, 34.3818, 0.59 ) }
    dend_47 { pt3dadd( 1.42923, -8.59904, 34.3082, 1.03 ) }
    dend_47 { pt3dadd( 1.75088, -8.87794, 34.2254, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 92/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 0.0304042, 5.93417, 17.9058, 0.59 ) }
    dend_44 { pt3dadd( 0.0692993, 7.43828, 17.9966, 0.59 ) }
    dend_44 { pt3dadd( 0.0970962, 8.5132, 18.0616, 0.29 ) }
    dend_44 { pt3dadd( 0.117511, 9.30265, 18.1093, 0.29 ) }
    dend_44 { pt3dadd( 0.142949, 10.2863, 18.1687, 0.81 ) }
    dend_44 { pt3dadd( 0.162643, 11.0479, 18.2147, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 98/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -17.7417, -5.75819, -3.53241, 0.22 ) }
    dend_40 { pt3dadd( -18.6098, -5.40682, -3.79169, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_40 { pt3dadd( -19.7983, -4.95848, -4.21248, 0.22 ) }
    dend_40 { pt3dadd( -20.2462, -4.79316, -4.36853, 0.66 ) }
    dend_40 { pt3dadd( -20.8574, -4.59376, -4.62144, 0.81 ) }
    dend_40 { pt3dadd( -21.4953, -4.40859, -4.94433, 0.52 ) }
    dend_40 { pt3dadd( -22.0086, -4.27084, -5.23508, 0.22 ) }
    dend_40 { pt3dadd( -22.867, -4.13354, -5.71637, 0.22 ) }
    dend_40 { pt3dadd( -23.9875, -4.06546, -6.31908, 1.33 ) }
    dend_40 { pt3dadd( -25.0715, -4.06941, -6.88593, 1.99 ) }
    dend_40 { pt3dadd( -26.1166, -4.15404, -7.39562, 2.21 ) }
    dend_40 { pt3dadd( -27.0574, -4.30202, -7.83239, 2.28 ) }
    dend_40 { pt3dadd( -28.832, -4.76191, -8.76225, 0.52 ) }
    dend_40 { pt3dadd( -29.907, -5.14727, -9.3733, 0.44 ) }
    dend_40 { pt3dadd( -30.4864, -5.38482, -9.73256, 0.22 ) }
    dend_40 { pt3dadd( -31.4971, -5.80406, -10.389, 1.25 ) }
    dend_40 { pt3dadd( -32.0367, -6.02615, -10.7577, 1.33 ) }
    dend_40 { pt3dadd( -34.2211, -6.98171, -12.415, 0.22 ) }
    dend_40 { pt3dadd( -34.8266, -7.24858, -12.9594, 0.22 ) }
    dend_40 { pt3dadd( -36.0151, -7.73798, -14.1203, 2.28 ) }
    dend_40 { pt3dadd( -36.8671, -8.0725, -15.0244, 3.61 ) }
    dend_40 { pt3dadd( -37.2415, -8.19583, -15.4442, 3.61 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 20/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -17.7417, -5.75819, -3.53241, 0.96 ) }
    dend_33 { pt3dadd( -19.4072, -6.08246, -1.84139, 0.96 ) }
    dend_33 { pt3dadd( -20.3436, -6.18496, -1.07173, 1.25 ) }
    dend_33 { pt3dadd( -21.0383, -6.22928, -0.583608, 1.33 ) }
    dend_33 { pt3dadd( -21.7401, -6.23976, -0.145949, 1.33 ) }
    dend_33 { pt3dadd( -22.7217, -6.2235, 0.403978, 0.52 ) }
    dend_33 { pt3dadd( -23.5559, -6.19097, 0.810687, 0.88 ) }
    dend_33 { pt3dadd( -24.426, -6.09113, 0.958172, 1.33 ) }
    dend_33 { pt3dadd( -24.8174, -6.034, 0.962517, 1.55 ) }
    dend_33 { pt3dadd( -25.339, -5.94856, 0.920996, 1.69 ) }
    dend_33 { pt3dadd( -25.726, -5.89076, 0.863653, 1.69 ) }
    dend_33 { pt3dadd( -26.504, -5.81589, 0.724853, 1.18 ) }
    dend_33 { pt3dadd( -27.961, -5.7827, 0.486331, 0.52 ) }
    dend_33 { pt3dadd( -28.604, -5.80423, 0.405185, 0.66 ) }
    dend_33 { pt3dadd( -29.2513, -5.84858, 0.355113, 0.66 ) }
    dend_33 { pt3dadd( -29.8951, -5.91813, 0.336156, 0.66 ) }
    dend_33 { pt3dadd( -30.7623, -6.02599, 0.33869, 0.81 ) }
    dend_33 { pt3dadd( -32.0262, -6.21468, 0.415378, 1.4 ) }
    dend_33 { pt3dadd( -32.5796, -6.31512, 0.498293, 2.14 ) }
    dend_33 { pt3dadd( -33.1886, -6.42373, 0.605367, 2.5 ) }
    dend_33 { pt3dadd( -33.9757, -6.55928, 0.767657, 2.8 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 41/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -35.9001, 2.56995, 11.0747, 1.84 ) }
    dend_29 { pt3dadd( -37.1544, 0.901122, 12.925, 1.84 ) }
    dend_29 { pt3dadd( -38.149, -0.422027, 14.392, 1.18 ) }
    dend_29 { pt3dadd( -38.8132, -1.30566, 15.3718, 0.88 ) }
    dend_29 { pt3dadd( -39.4325, -2.12971, 16.2854, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -35.9001, 2.56995, 11.0747, 1.4 ) }
    dend_28 { pt3dadd( -36.4571, 4.37985, 11.3959, 1.4 ) }
    dend_28 { pt3dadd( -36.9259, 5.81484, 11.638, 0.81 ) }
    dend_28 { pt3dadd( -37.1844, 6.48187, 11.7624, 0.81 ) }
    dend_28 { pt3dadd( -37.5923, 7.40219, 11.9429, 0.96 ) }
    dend_28 { pt3dadd( -37.8904, 8.00505, 12.0644, 1.11 ) }
    dend_28 { pt3dadd( -38.2355, 8.63794, 12.1935, 1.11 ) }
    dend_28 { pt3dadd( -38.5655, 9.19061, 12.2906, 1.11 ) }
    dend_28 { pt3dadd( -39.1124, 9.97878, 12.4503, 0.52 ) }
    dend_28 { pt3dadd( -39.4022, 10.4096, 12.5667, 0.81 ) }
    dend_28 { pt3dadd( -39.6719, 10.8856, 12.7124, 0.81 ) }
    dend_28 { pt3dadd( -39.9707, 11.6193, 12.9493, 0.52 ) }
    dend_28 { pt3dadd( -40.1373, 12.2975, 13.1795, 0.52 ) }
    dend_28 { pt3dadd( -40.193, 12.9, 13.3986, 0.52 ) }
    dend_28 { pt3dadd( -40.1702, 13.9459, 13.778, 0.52 ) }
    dend_28 { pt3dadd( -40.0803, 14.7561, 14.0878, 1.33 ) }
    dend_28 { pt3dadd( -39.9933, 15.1725, 14.2574, 1.55 ) }
    dend_28 { pt3dadd( -39.8967, 15.4739, 14.3905, 1.69 ) }
    dend_28 { pt3dadd( -39.6815, 16.0273, 14.656, 1.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 65/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 2.43903, 19.1621, -1.35041, 0.44 ) }
    dend_26 { pt3dadd( 3.88097, 20.2807, -4.00001, 0.44 ) }
    dend_26 { pt3dadd( 4.37162, 20.6968, -4.89328, 0.52 ) }
    dend_26 { pt3dadd( 4.7833, 21.0731, -5.71539, 0.37 ) }
    dend_26 { pt3dadd( 5.27106, 21.5348, -6.61945, 0.37 ) }
    dend_26 { pt3dadd( 7.32685, 23.3823, -10.343, 0.88 ) }
    dend_26 { pt3dadd( 7.84338, 23.7619, -11.2329, 1.25 ) }
    dend_26 { pt3dadd( 8.2864, 24.0428, -11.9706, 0.74 ) }
    dend_26 { pt3dadd( 9.22916, 24.6806, -13.6372, 0.44 ) }
    dend_26 { pt3dadd( 9.98949, 25.1996, -15.0298, 2.14 ) }
    dend_26 { pt3dadd( 10.6438, 25.6345, -16.2235, 2.28 ) }
    dend_26 { pt3dadd( 12.4697, 26.7076, -19.2911, 0.59 ) }
    dend_26 { pt3dadd( 13.3799, 27.1373, -20.8191, 1.03 ) }
    dend_26 { pt3dadd( 14.8481, 27.6803, -23.5706, 1.18 ) }
    dend_26 { pt3dadd( 15.7805, 27.981, -25.5403, 1.4 ) }
    dend_26 { pt3dadd( 16.4264, 28.1784, -27.0072, 1.62 ) }
    dend_26 { pt3dadd( 17.3758, 28.467, -29.2762, 1.84 ) }
    dend_26 { pt3dadd( 18.4933, 28.8122, -32.2018, 3.17 ) }
    dend_26 { pt3dadd( 21.9427, 29.8739, -41.8053, 1.4 ) }
    dend_26 { pt3dadd( 23.8765, 30.5586, -47.5905, 1.03 ) }
    dend_26 { pt3dadd( 24.8597, 30.9877, -50.7388, 2.14 ) }
    dend_26 { pt3dadd( 26.4119, 31.8302, -56.0033, 1.77 ) }
    dend_26 { pt3dadd( 28.4676, 33.2153, -63.46, 1.33 ) }
    dend_26 { pt3dadd( 28.7677, 33.459, -64.6147, 1.55 ) }
    dend_26 { pt3dadd( 30.3997, 35.3504, -71.9117, 0.22 ) }
    dend_26 { pt3dadd( 30.6003, 35.682, -72.9981, 0.22 ) }
    dend_26 { pt3dadd( 30.9602, 36.5762, -75.504, 1.4 ) }
    dend_26 { pt3dadd( 31.061, 37.0099, -76.4811, 2.14 ) }
    dend_26 { pt3dadd( 31.1121, 37.4383, -77.2551, 2.14 ) }
    dend_26 { pt3dadd( 31.7812, 42.6208, -88.0693, 0.22 ) }
    dend_26 { pt3dadd( 31.8574, 43.5984, -89.9398, 0.22 ) }
    dend_26 { pt3dadd( 31.9452, 44.8929, -92.3048, 1.4 ) }
    dend_26 { pt3dadd( 31.9714, 45.3344, -93.0781, 1.99 ) }
    dend_26 { pt3dadd( 32.0413, 45.8867, -94.2219, 1.99 ) }
    dend_26 { pt3dadd( 33.0185, 52.9176, -107.773, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( 33.2871, 54.8407, -111.104, 0.22 ) }
    dend_26 { pt3dadd( 33.3935, 55.5285, -112.301, 1.18 ) }
    dend_26 { pt3dadd( 33.5331, 56.2924, -113.759, 1.47 ) }
    dend_26 { pt3dadd( 35.1936, 64.667, -130.002, 0.22 ) }
    dend_26 { pt3dadd( 35.7138, 67.2308, -134.866, 0.22 ) }
    dend_26 { pt3dadd( 35.9655, 68.4596, -137.131, 2.06 ) }
    dend_26 { pt3dadd( 36.165, 69.2934, -138.827, 2.14 ) }
    dend_26 { pt3dadd( 37.3823, 74.0241, -148.848, 0.22 ) }
    dend_26 { pt3dadd( 37.5866, 74.8034, -150.52, 1.33 ) }
    dend_26 { pt3dadd( 37.7609, 75.807, -152.19, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 2.43903, 19.1621, -1.35041, 0.66 ) }
    dend_21 { pt3dadd( 2.56472, 20.3378, -1.58041, 0.66 ) }
    dend_21 { pt3dadd( 2.60486, 21.2734, -1.85078, 0.66 ) }
    dend_21 { pt3dadd( 2.56403, 22.3559, -2.20969, 0.52 ) }
    dend_21 { pt3dadd( 2.4186, 23.2606, -2.55088, 0.44 ) }
    dend_21 { pt3dadd( 2.04465, 24.9261, -3.21763, 1.03 ) }
    dend_21 { pt3dadd( 1.91905, 25.4308, -3.42084, 1.25 ) }
    dend_21 { pt3dadd( 1.76618, 25.9355, -3.65087, 1.4 ) }
    dend_21 { pt3dadd( 1.55884, 26.5348, -3.93894, 1.4 ) }
    dend_21 { pt3dadd( 1.14302, 27.7157, -4.50874, 0.59 ) }
    dend_21 { pt3dadd( 0.94645, 28.424, -4.78794, 0.37 ) }
    dend_21 { pt3dadd( 0.8867, 28.8614, -4.88928, 0.37 ) }
    dend_21 { pt3dadd( 0.89746, 29.6926, -5.06194, 0.81 ) }
    dend_21 { pt3dadd( 0.94953, 30.1098, -5.13563, 0.88 ) }
    dend_21 { pt3dadd( 1.05413, 30.6237, -5.2106, 0.66 ) }
    dend_21 { pt3dadd( 1.19165, 31.1985, -5.26971, 0.29 ) }
    dend_21 { pt3dadd( 1.3271, 31.7672, -5.32519, 0.29 ) }
    dend_21 { pt3dadd( 1.67363, 33.3469, -5.49307, 1.84 ) }
    dend_21 { pt3dadd( 1.82233, 34.1513, -5.58673, 2.95 ) }
    dend_21 { pt3dadd( 1.89094, 34.6377, -5.64573, 3.24 ) }
    dend_21 { pt3dadd( 1.9334, 35.1253, -5.70639, 3.39 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 31/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 15.3058, 0.752482, -4.70489, 1.03 ) }
    dend_17 { pt3dadd( 16.7537, -1.44953, -5.36134, 1.03 ) }
    dend_17 { pt3dadd( 17.4059, -2.55313, -5.74615, 0.66 ) }
    dend_17 { pt3dadd( 17.8673, -3.4073, -6.09155, 0.59 ) }
    dend_17 { pt3dadd( 18.3769, -4.46891, -6.53598, 0.66 ) }
    dend_17 { pt3dadd( 18.6363, -5.07585, -6.78828, 0.66 ) }
    dend_17 { pt3dadd( 19.1293, -6.34788, -7.30583, 1.47 ) }
    dend_17 { pt3dadd( 19.3308, -7.04118, -7.61831, 1.92 ) }
    dend_17 { pt3dadd( 19.4674, -7.63852, -7.8336, 2.14 ) }
    dend_17 { pt3dadd( 19.5967, -8.35666, -8.04986, 1.99 ) }
    dend_17 { pt3dadd( 19.7812, -9.42062, -8.27338, 1.55 ) }
    dend_17 { pt3dadd( 20.0673, -10.7747, -8.40376, 0.74 ) }
    dend_17 { pt3dadd( 20.3012, -11.7047, -8.38448, 0.52 ) }
    dend_17 { pt3dadd( 20.6939, -13.0176, -8.25654, 0.74 ) }
    dend_17 { pt3dadd( 20.9959, -13.8496, -8.09635, 0.74 ) }
    dend_17 { pt3dadd( 21.3832, -14.7482, -7.86511, 0.66 ) }
    dend_17 { pt3dadd( 21.7395, -15.4788, -7.60549, 1.11 ) }
    dend_17 { pt3dadd( 22.0378, -16.0407, -7.36493, 1.62 ) }
    dend_17 { pt3dadd( 22.3601, -16.6183, -7.11376, 1.62 ) }
    dend_17 { pt3dadd( 23.1185, -17.9445, -6.59307, 0.81 ) }
    dend_17 { pt3dadd( 23.6943, -18.9141, -6.22338, 0.59 ) }
    dend_17 { pt3dadd( 24.3831, -20.0705, -5.81227, 0.44 ) }
    dend_17 { pt3dadd( 24.7897, -20.7724, -5.63813, 0.44 ) }
    dend_17 { pt3dadd( 25.3899, -21.817, -5.46584, 2.06 ) }
    dend_17 { pt3dadd( 25.8235, -22.5735, -5.40296, 3.02 ) }
    dend_17 { pt3dadd( 26.1075, -23.0564, -5.40678, 3.61 ) }
    dend_17 { pt3dadd( 26.5069, -23.7135, -5.46345, 3.46 ) }
    dend_17 { pt3dadd( 27.8513, -25.8518, -5.80201, 0.88 ) }
    dend_17 { pt3dadd( 28.3509, -26.6352, -5.94481, 0.66 ) }
    dend_17 { pt3dadd( 28.8779, -27.4443, -6.09614, 0.88 ) }
    dend_17 { pt3dadd( 29.312, -28.1127, -6.21379, 0.88 ) }
    dend_17 { pt3dadd( 29.9206, -29.0296, -6.36768, 0.29 ) }
    dend_17 { pt3dadd( 30.2841, -29.5618, -6.44771, 0.29 ) }
    dend_17 { pt3dadd( 30.8607, -30.4065, -6.53211, 1.47 ) }
    dend_17 { pt3dadd( 31.3835, -31.2148, -6.60894, 1.99 ) }
    dend_17 { pt3dadd( 31.8903, -32.0446, -6.67794, 1.77 ) }
    dend_17 { pt3dadd( 32.6676, -33.4005, -6.75923, 0.22 ) }
    dend_17 { pt3dadd( 32.994, -33.9908, -6.77685, 0.22 ) }
    dend_17 { pt3dadd( 33.288, -34.5174, -6.79615, 0.44 ) }
    dend_17 { pt3dadd( 33.9147, -35.6051, -6.84657, 0.81 ) }
    dend_17 { pt3dadd( 34.1239, -35.9573, -6.86269, 1.11 ) }
    dend_17 { pt3dadd( 34.5525, -36.6453, -6.89025, 0.81 ) }
    dend_17 { pt3dadd( 35.0105, -37.351, -6.91895, 0.44 ) }
    dend_17 { pt3dadd( 35.6067, -38.2727, -7.05473, 0.29 ) }
    dend_17 { pt3dadd( 36.2772, -39.318, -7.30771, 1.84 ) }
    dend_17 { pt3dadd( 36.7412, -40.005, -7.54492, 3.02 ) }
    dend_17 { pt3dadd( 37.0328, -40.4276, -7.7131, 3.61 ) }
    dend_17 { pt3dadd( 37.4272, -41.0015, -7.96105, 3.39 ) }
    dend_17 { pt3dadd( 38.9222, -43.2199, -8.99405, 0.22 ) }
    dend_17 { pt3dadd( 40.0736, -45.0003, -9.87637, 0.22 ) }
    dend_17 { pt3dadd( 40.8988, -46.2979, -10.5725, 1.69 ) }
    dend_17 { pt3dadd( 41.1345, -46.6755, -10.7866, 1.69 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 83/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 15.3058, 0.752482, -4.70489, 4.79 ) }
    dend_1 { pt3dadd( 17.5237, 0.684785, -4.77519, 4.79 ) }
    dend_1 { pt3dadd( 18.1867, 0.664549, -4.7962, 4.42 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 86/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 42.4872, 8.45908, -2.44705, 0.242583 ) }
    axon_1 { pt3dadd( 57.119, 11.7622, -2.44705, 0.242583 ) }
    axon_1 { pt3dadd( 71.7508, 15.0653, -2.44705, 0.242583 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 89/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 0.162643, 11.0479, 18.2147, 0.22 ) }
    dend_46 { pt3dadd( 0.152412, 11.8346, 19.2435, 0.22 ) }
    dend_46 { pt3dadd( 0.15757, 12.3629, 19.9323, 1.33 ) }
    dend_46 { pt3dadd( 0.163177, 12.5864, 20.2102, 1.62 ) }
    dend_46 { pt3dadd( 0.187765, 12.9244, 20.5866, 1.62 ) }
    dend_46 { pt3dadd( 0.332929, 14.0822, 21.7374, 0.81 ) }
    dend_46 { pt3dadd( 0.438068, 14.7812, 22.3685, 0.96 ) }
    dend_46 { pt3dadd( 0.525107, 15.1994, 22.7117, 1.03 ) }
    dend_46 { pt3dadd( 0.625687, 15.6308, 23.0164, 1.03 ) }
    dend_46 { pt3dadd( 0.82088, 16.4511, 23.4782, 0.22 ) }
    dend_46 { pt3dadd( 0.96319, 17.1003, 23.728, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_46 { pt3dadd( 1.033, 17.475, 23.7937, 0.74 ) }
    dend_46 { pt3dadd( 1.06356, 17.6697, 23.8095, 0.74 ) }
    dend_46 { pt3dadd( 1.14198, 18.327, 23.843, 0.37 ) }
    dend_46 { pt3dadd( 1.16257, 18.5846, 23.8516, 0.37 ) }
    dend_46 { pt3dadd( 1.1628, 18.9722, 23.8621, 0.66 ) }
    dend_46 { pt3dadd( 1.14057, 19.4181, 23.873, 0.66 ) }
    dend_46 { pt3dadd( 1.11413, 20.0507, 23.8849, 0.37 ) }
    dend_46 { pt3dadd( 1.10152, 20.4929, 23.8872, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 8/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.162643, 11.0479, 18.2147, 0.22 ) }
    dend_45 { pt3dadd( -1.13011, 10.5763, 18.4263, 0.22 ) }
    dend_45 { pt3dadd( -1.65877, 10.3098, 18.4141, 0.22 ) }
    dend_45 { pt3dadd( -1.86707, 10.2049, 18.4094, 0.52 ) }
    dend_45 { pt3dadd( -2.29382, 9.98978, 18.3995, 0.52 ) }
    dend_45 { pt3dadd( -2.77699, 9.74623, 18.3884, 0.22 ) }
    dend_45 { pt3dadd( -3.9212, 9.16954, 18.3621, 1.92 ) }
    dend_45 { pt3dadd( -4.32313, 8.91672, 18.1896, 2.5 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 16/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -37.2415, -8.19583, -15.4442, 1.18 ) }
    dend_42 { pt3dadd( -38.2004, -7.56391, -15.8381, 1.18 ) }
    dend_42 { pt3dadd( -39.3575, -6.94711, -16.3295, 0.22 ) }
    dend_42 { pt3dadd( -39.8407, -6.71365, -16.5423, 0.22 ) }
    dend_42 { pt3dadd( -40.2993, -6.50624, -16.7775, 0.44 ) }
    dend_42 { pt3dadd( -40.7193, -6.32141, -16.9998, 0.44 ) }
    dend_42 { pt3dadd( -41.6131, -5.93753, -17.4859, 0.22 ) }
    dend_42 { pt3dadd( -42.5592, -5.59396, -18.0463, 0.22 ) }
    dend_42 { pt3dadd( -43.3145, -5.34116, -18.5345, 0.22 ) }
    dend_42 { pt3dadd( -44.2492, -5.02384, -19.1517, 1.33 ) }
    dend_42 { pt3dadd( -44.9767, -4.76656, -19.6398, 1.55 ) }
    dend_42 { pt3dadd( -45.1561, -4.70329, -19.7593, 1.55 ) }
    dend_42 { pt3dadd( -46.5354, -4.20606, -20.6868, 0.22 ) }
    dend_42 { pt3dadd( -47.9107, -3.70822, -21.5844, 0.22 ) }
    dend_42 { pt3dadd( -48.5443, -3.48518, -21.9698, 1.33 ) }
    dend_42 { pt3dadd( -48.9209, -3.35203, -22.1801, 1.62 ) }
    dend_42 { pt3dadd( -49.9529, -2.9942, -22.774, 0.22 ) }
    dend_42 { pt3dadd( -50.4838, -2.81593, -23.0958, 0.44 ) }
    dend_42 { pt3dadd( -50.869, -2.71405, -23.3637, 0.37 ) }
    dend_42 { pt3dadd( -51.3304, -2.60867, -23.7135, 0.22 ) }
    dend_42 { pt3dadd( -52.0922, -2.44097, -24.3442, 1.69 ) }
    dend_42 { pt3dadd( -52.7789, -2.29055, -24.9169, 2.14 ) }
    dend_42 { pt3dadd( -53.5776, -2.09256, -25.5701, 2.28 ) }
    dend_42 { pt3dadd( -54.9287, -1.74528, -26.6841, 0.66 ) }
    dend_42 { pt3dadd( -55.5781, -1.57012, -27.2365, 0.22 ) }
    dend_42 { pt3dadd( -56.2177, -1.38315, -27.7974, 0.22 ) }
    dend_42 { pt3dadd( -56.9149, -1.15669, -28.4146, 0.22 ) }
    dend_42 { pt3dadd( -57.7354, -0.834341, -29.0736, 1.47 ) }
    dend_42 { pt3dadd( -58.3066, -0.57197, -29.551, 1.77 ) }
    dend_42 { pt3dadd( -58.8805, -0.27127, -30.0845, 1.55 ) }
    dend_42 { pt3dadd( -59.9823, 0.288285, -31.1859, 0.22 ) }
    dend_42 { pt3dadd( -60.4098, 0.508902, -31.6211, 0.22 ) }
    dend_42 { pt3dadd( -61.207, 0.930741, -32.4646, 1.55 ) }
    dend_42 { pt3dadd( -62.3183, 1.48477, -33.6323, 2.06 ) }
    dend_42 { pt3dadd( -62.8329, 1.74764, -34.1155, 1.47 ) }
    dend_42 { pt3dadd( -63.6446, 2.17179, -34.79, 0.22 ) }
    dend_42 { pt3dadd( -64.2279, 2.48388, -35.2475, 0.88 ) }
    dend_42 { pt3dadd( -64.5875, 2.66784, -35.5134, 1.18 ) }
    dend_42 { pt3dadd( -65.9324, 3.31091, -36.497, 0.22 ) }
    dend_42 { pt3dadd( -67.1683, 3.84185, -37.3551, 0.22 ) }
    dend_42 { pt3dadd( -68.0073, 4.16254, -37.9677, 0.59 ) }
    dend_42 { pt3dadd( -68.2939, 4.26184, -38.1955, 0.59 ) }
    dend_42 { pt3dadd( -69.3423, 4.57551, -39.0501, 1.4 ) }
    dend_42 { pt3dadd( -69.9574, 4.74193, -39.5475, 1.62 ) }
    dend_42 { pt3dadd( -71.3617, 5.05093, -40.6686, 0.22 ) }
    dend_42 { pt3dadd( -72.0329, 5.1632, -41.2338, 0.59 ) }
    dend_42 { pt3dadd( -72.3791, 5.21315, -41.5324, 0.74 ) }
    dend_42 { pt3dadd( -73.2309, 5.34025, -42.2579, 0.22 ) }
    dend_42 { pt3dadd( -73.9228, 5.46508, -42.8534, 1.62 ) }
    dend_42 { pt3dadd( -74.3723, 5.56536, -43.2019, 1.84 ) }
    dend_42 { pt3dadd( -74.8866, 5.73061, -43.5324, 1.84 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 67/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -37.2415, -8.19583, -15.4442, 3.76 ) }
    dend_41 { pt3dadd( -37.6717, -8.39277, -16.0537, 3.76 ) }
    dend_41 { pt3dadd( -38.5889, -8.77092, -17.1377, 2.8 ) }
    dend_41 { pt3dadd( -39.5692, -9.13817, -18.1682, 2.06 ) }
    dend_41 { pt3dadd( -40.4912, -9.46281, -19.0595, 1.25 ) }
    dend_41 { pt3dadd( -40.8984, -9.59593, -19.4112, 0.96 ) }
    dend_41 { pt3dadd( -41.6225, -9.82109, -19.9989, 0.22 ) }
    dend_41 { pt3dadd( -42.2134, -9.97006, -20.3816, 1.33 ) }
    dend_41 { pt3dadd( -42.7928, -10.0825, -20.6805, 1.84 ) }
    dend_41 { pt3dadd( -43.2732, -10.1552, -20.8966, 1.92 ) }
    dend_41 { pt3dadd( -44.0145, -10.2479, -21.2465, 0.22 ) }
    dend_41 { pt3dadd( -44.7844, -10.3405, -21.719, 0.22 ) }
    dend_41 { pt3dadd( -45.399, -10.425, -22.1659, 1.11 ) }
    dend_41 { pt3dadd( -45.886, -10.5373, -22.5373, 1.55 ) }
    dend_41 { pt3dadd( -46.3797, -10.6913, -22.8871, 1.84 ) }
    dend_41 { pt3dadd( -46.9089, -10.8522, -23.2342, 1.69 ) }
    dend_41 { pt3dadd( -47.9914, -11.1732, -23.9363, 0.22 ) }
    dend_41 { pt3dadd( -48.8399, -11.416, -24.3863, 0.22 ) }
    dend_41 { pt3dadd( -50.0369, -11.7475, -24.9048, 0.22 ) }
    dend_41 { pt3dadd( -51.1344, -12.0282, -25.2233, 0.66 ) }
    dend_41 { pt3dadd( -52.3598, -12.2934, -25.429, 2.21 ) }
    dend_41 { pt3dadd( -53.0993, -12.4293, -25.4881, 2.65 ) }
    dend_41 { pt3dadd( -54.3765, -12.6092, -25.496, 1.47 ) }
    dend_41 { pt3dadd( -55.0084, -12.6863, -25.5124, 0.22 ) }
    dend_41 { pt3dadd( -56.4687, -12.8346, -25.6306, 0.22 ) }
    dend_41 { pt3dadd( -57.6494, -12.9934, -25.7774, 1.84 ) }
    dend_41 { pt3dadd( -57.9126, -13.0402, -25.8178, 2.43 ) }
    dend_41 { pt3dadd( -58.4572, -13.1447, -25.9219, 1.77 ) }
    dend_41 { pt3dadd( -59.8344, -13.4197, -26.292, 0.22 ) }
    dend_41 { pt3dadd( -60.7242, -13.6116, -26.5635, 0.22 ) }
    dend_41 { pt3dadd( -61.6049, -13.8054, -26.8646, 0.66 ) }
    dend_41 { pt3dadd( -61.9012, -13.874, -26.9749, 0.66 ) }
    dend_41 { pt3dadd( -62.6455, -14.0595, -27.3255, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -63.5353, -14.3212, -27.7917, 2.06 ) }
    dend_41 { pt3dadd( -63.9846, -14.4679, -28.0086, 2.73 ) }
    dend_41 { pt3dadd( -64.3165, -14.5823, -28.1664, 3.09 ) }
    dend_41 { pt3dadd( -64.9095, -14.7925, -28.459, 2.87 ) }
    dend_41 { pt3dadd( -67.1144, -15.578, -29.6046, 0.29 ) }
    dend_41 { pt3dadd( -68.473, -16.049, -30.2967, 0.22 ) }
    dend_41 { pt3dadd( -70.4383, -16.7098, -31.2704, 0.22 ) }
    dend_41 { pt3dadd( -71.2503, -16.9668, -31.6246, 2.14 ) }
    dend_41 { pt3dadd( -71.6512, -17.0889, -31.7789, 2.65 ) }
    dend_41 { pt3dadd( -72.3562, -17.2932, -32.0145, 2.65 ) }
    dend_41 { pt3dadd( -73.9885, -17.7141, -32.4502, 0.22 ) }
    dend_41 { pt3dadd( -74.8604, -17.9106, -32.6957, 0.22 ) }
    dend_41 { pt3dadd( -75.8647, -18.1275, -32.9995, 1.11 ) }
    dend_41 { pt3dadd( -76.1797, -18.1995, -33.1068, 1.47 ) }
    dend_41 { pt3dadd( -76.8555, -18.3552, -33.3696, 1.47 ) }
    dend_41 { pt3dadd( -78.0693, -18.6269, -33.9314, 0.15 ) }
    dend_41 { pt3dadd( -78.3924, -18.6985, -34.1281, 0.44 ) }
    dend_41 { pt3dadd( -78.6088, -18.745, -34.2915, 0.66 ) }
    dend_41 { pt3dadd( -79.8808, -19.01, -35.2967, 0.29 ) }
    dend_41 { pt3dadd( -80.8171, -19.1875, -35.9874, 1.92 ) }
    dend_41 { pt3dadd( -81.326, -19.2715, -36.3504, 2.73 ) }
    dend_41 { pt3dadd( -81.7878, -19.3466, -36.6762, 2.87 ) }
    dend_41 { pt3dadd( -83.8534, -19.6795, -38.0374, 0.22 ) }
    dend_41 { pt3dadd( -85.21, -19.8987, -38.7955, 0.22 ) }
    dend_41 { pt3dadd( -86.1251, -20.0472, -39.2001, 1.69 ) }
    dend_41 { pt3dadd( -86.683, -20.1421, -39.3988, 2.14 ) }
    dend_41 { pt3dadd( -87.2364, -20.2448, -39.5489, 1.92 ) }
    dend_41 { pt3dadd( -87.8817, -20.377, -39.6568, 1.33 ) }
    dend_41 { pt3dadd( -89.5274, -20.7469, -39.7221, 0.22 ) }
    dend_41 { pt3dadd( -90.1522, -20.9039, -39.7301, 0.96 ) }
    dend_41 { pt3dadd( -90.5857, -21.0279, -39.7361, 1.25 ) }
    dend_41 { pt3dadd( -91.027, -21.1602, -39.7286, 1.11 ) }
    dend_41 { pt3dadd( -92.2593, -21.5398, -39.6678, 0.22 ) }
    dend_41 { pt3dadd( -92.9984, -21.7848, -39.6938, 1.92 ) }
    dend_41 { pt3dadd( -93.525, -21.9686, -39.7631, 2.06 ) }
    dend_41 { pt3dadd( -94.0649, -22.157, -39.8844, 1.84 ) }
    dend_41 { pt3dadd( -95.0391, -22.505, -40.1681, 0.37 ) }
    dend_41 { pt3dadd( -95.7412, -22.773, -40.4252, 0.22 ) }
    dend_41 { pt3dadd( -97.6112, -23.5428, -41.2686, 1.11 ) }
    dend_41 { pt3dadd( -98.0598, -23.7406, -41.4984, 1.11 ) }
    dend_41 { pt3dadd( -99.1267, -24.2213, -42.1014, 0.22 ) }
    dend_41 { pt3dadd( -100.121, -24.6713, -42.71, 0.22 ) }
    dend_41 { pt3dadd( -101.084, -25.1067, -43.3296, 1.69 ) }
    dend_41 { pt3dadd( -101.53, -25.3035, -43.6106, 2.14 ) }
    dend_41 { pt3dadd( -101.889, -25.4612, -43.8263, 2.14 ) }
    dend_41 { pt3dadd( -102.964, -25.9135, -44.5088, 0.22 ) }
    dend_41 { pt3dadd( -104.202, -26.4125, -45.3327, 0.22 ) }
    dend_41 { pt3dadd( -104.808, -26.6373, -45.736, 1.99 ) }
    dend_41 { pt3dadd( -105.083, -26.7306, -45.9081, 2.58 ) }
    dend_41 { pt3dadd( -106.08, -27.0504, -46.5085, 1.99 ) }
    dend_41 { pt3dadd( -107.587, -27.422, -47.2007, 0.22 ) }
    dend_41 { pt3dadd( -108.085, -27.5221, -47.3783, 1.47 ) }
    dend_41 { pt3dadd( -108.417, -27.5803, -47.4847, 1.69 ) }
    dend_41 { pt3dadd( -108.939, -27.6642, -47.6463, 1.69 ) }
    dend_41 { pt3dadd( -111.052, -27.9684, -48.247, 0.22 ) }
    dend_41 { pt3dadd( -114.933, -28.4684, -49.2459, 0.22 ) }
    dend_41 { pt3dadd( -116.461, -28.6447, -49.6342, 1.84 ) }
    dend_41 { pt3dadd( -117.028, -28.711, -49.7829, 2.14 ) }
    dend_41 { pt3dadd( -117.43, -28.758, -49.8879, 2.14 ) }
    dend_41 { pt3dadd( -119.03, -28.9499, -50.2803, 0.22 ) }
    dend_41 { pt3dadd( -119.533, -29.0102, -50.4008, 0.96 ) }
    dend_41 { pt3dadd( -120.016, -29.073, -50.5492, 1.11 ) }
    dend_41 { pt3dadd( -122.083, -29.3131, -51.188, 0.22 ) }
    dend_41 { pt3dadd( -123.003, -29.4046, -51.4341, 0.22 ) }
    dend_41 { pt3dadd( -123.816, -29.4742, -51.6317, 1.69 ) }
    dend_41 { pt3dadd( -124.466, -29.5239, -51.7676, 2.21 ) }
    dend_41 { pt3dadd( -125.235, -29.5785, -51.8916, 2.28 ) }
    dend_41 { pt3dadd( -126.615, -29.6752, -52.0236, 0.29 ) }
    dend_41 { pt3dadd( -127.267, -29.7204, -52.0479, 1.18 ) }
    dend_41 { pt3dadd( -127.774, -29.7668, -52.0616, 1.33 ) }
    dend_41 { pt3dadd( -129.558, -29.9753, -52.1922, 0.22 ) }
    dend_41 { pt3dadd( -131.059, -30.2024, -52.3372, 0.22 ) }
    dend_41 { pt3dadd( -132.049, -30.3802, -52.4552, 1.62 ) }
    dend_41 { pt3dadd( -132.417, -30.4574, -52.5143, 2.14 ) }
    dend_41 { pt3dadd( -132.864, -30.5608, -52.6019, 2.14 ) }
    dend_41 { pt3dadd( -134.667, -30.9996, -52.9859, 0.22 ) }
    dend_41 { pt3dadd( -135.316, -31.1651, -53.1426, 0.22 ) }
    dend_41 { pt3dadd( -135.9, -31.3196, -53.306, 1.25 ) }
    dend_41 { pt3dadd( -136.455, -31.4593, -53.4635, 1.4 ) }
    dend_41 { pt3dadd( -137.371, -31.6704, -53.711, 0.22 ) }
    dend_41 { pt3dadd( -137.851, -31.7635, -53.8345, 0.81 ) }
    dend_41 { pt3dadd( -138.212, -31.8189, -53.9429, 0.81 ) }
    dend_41 { pt3dadd( -139.392, -31.9714, -54.4171, 0.22 ) }
    dend_41 { pt3dadd( -139.965, -32.0373, -54.6867, 1.62 ) }
    dend_41 { pt3dadd( -140.472, -32.0859, -54.9435, 1.99 ) }
    dend_41 { pt3dadd( -140.843, -32.1135, -55.1469, 1.99 ) }
    dend_41 { pt3dadd( -142.708, -32.2283, -56.1729, 0.22 ) }
    dend_41 { pt3dadd( -143.437, -32.2596, -56.5584, 0.22 ) }
    dend_41 { pt3dadd( -143.948, -32.2633, -56.8122, 1.03 ) }
    dend_41 { pt3dadd( -144.288, -32.2614, -56.9745, 1.03 ) }
    dend_41 { pt3dadd( -145.821, -32.2372, -57.6323, 0.22 ) }
    dend_41 { pt3dadd( -146.186, -32.2249, -57.7654, 0.22 ) }
    dend_41 { pt3dadd( -146.781, -32.1871, -57.9613, 0.81 ) }
    dend_41 { pt3dadd( -147.245, -32.1531, -58.122, 1.11 ) }
    dend_41 { pt3dadd( -148.346, -32.0855, -58.5619, 0.22 ) }
    dend_41 { pt3dadd( -148.923, -32.056, -58.7998, 0.22 ) }
    dend_41 { pt3dadd( -150.219, -32.0042, -59.3268, 0.22 ) }
    dend_41 { pt3dadd( -151.19, -31.9756, -59.7321, 2.28 ) }
    dend_41 { pt3dadd( -151.675, -31.9732, -59.9517, 2.73 ) }
    dend_41 { pt3dadd( -152.958, -32.0008, -60.5743, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_41 { pt3dadd( -154.087, -32.0396, -61.1429, 0.22 ) }
    dend_41 { pt3dadd( -154.522, -32.0738, -61.3973, 0.66 ) }
    dend_41 { pt3dadd( -154.793, -32.1036, -61.5701, 0.66 ) }
    dend_41 { pt3dadd( -155.709, -32.2204, -62.1332, 0.22 ) }
    dend_41 { pt3dadd( -156.194, -32.2973, -62.4405, 1.25 ) }
    dend_41 { pt3dadd( -156.661, -32.3919, -62.766, 1.47 ) }
    dend_41 { pt3dadd( -158.047, -32.7589, -63.8918, 0.22 ) }
    dend_41 { pt3dadd( -158.557, -32.9042, -64.3046, 0.74 ) }
    dend_41 { pt3dadd( -159.056, -33.0531, -64.7108, 1.03 ) }
    dend_41 { pt3dadd( -159.652, -33.2445, -65.2108, 1.25 ) }
    dend_41 { pt3dadd( -161.033, -33.6952, -66.3181, 0.22 ) }
    dend_41 { pt3dadd( -162.146, -34.0393, -67.1438, 0.22 ) }
    dend_41 { pt3dadd( -162.914, -34.265, -67.6734, 1.55 ) }
    dend_41 { pt3dadd( -163.586, -34.4489, -68.1278, 1.84 ) }
    dend_41 { pt3dadd( -164.943, -34.7487, -69.0735, 0.22 ) }
    dend_41 { pt3dadd( -166.295, -34.9745, -69.9984, 0.22 ) }
    dend_41 { pt3dadd( -167.249, -35.0829, -70.6229, 1.69 ) }
    dend_41 { pt3dadd( -167.643, -35.1063, -70.8743, 2.14 ) }
    dend_41 { pt3dadd( -168.085, -35.1049, -71.1706, 2.14 ) }
    dend_41 { pt3dadd( -170.177, -34.971, -72.5946, 0.22 ) }
    dend_41 { pt3dadd( -170.8, -34.8924, -73.0325, 0.22 ) }
    dend_41 { pt3dadd( -171.07, -34.8494, -73.2457, 0.81 ) }
    dend_41 { pt3dadd( -171.285, -34.8205, -73.3993, 0.96 ) }
    dend_41 { pt3dadd( -172.923, -34.6121, -74.4078, 0.22 ) }
    dend_41 { pt3dadd( -173.648, -34.5255, -74.7959, 1.33 ) }
    dend_41 { pt3dadd( -174.0, -34.4875, -74.9383, 1.69 ) }
    dend_41 { pt3dadd( -174.499, -34.4418, -75.1179, 1.69 ) }
    dend_41 { pt3dadd( -177.186, -34.2562, -75.9738, 0.22 ) }
    dend_41 { pt3dadd( -177.672, -34.2326, -76.0991, 0.66 ) }
    dend_41 { pt3dadd( -178.047, -34.2228, -76.1695, 0.66 ) }
    dend_41 { pt3dadd( -179.919, -34.186, -76.4724, 0.22 ) }
    dend_41 { pt3dadd( -180.305, -34.1775, -76.5465, 0.96 ) }
    dend_41 { pt3dadd( -180.859, -34.1559, -76.6691, 1.25 ) }
    dend_41 { pt3dadd( -182.071, -34.0807, -77.0079, 0.22 ) }
    dend_41 { pt3dadd( -182.515, -34.0478, -77.1643, 0.52 ) }
    dend_41 { pt3dadd( -182.776, -34.02, -77.2749, 0.74 ) }
    dend_41 { pt3dadd( -184.105, -33.8656, -77.853, 0.22 ) }
    dend_41 { pt3dadd( -184.89, -33.783, -78.1737, 1.69 ) }
    dend_41 { pt3dadd( -185.104, -33.7615, -78.2584, 2.21 ) }
    dend_41 { pt3dadd( -185.735, -33.7122, -78.4955, 2.21 ) }
    dend_41 { pt3dadd( -188.401, -33.5672, -79.3994, 0.22 ) }
    dend_41 { pt3dadd( -190.099, -33.4952, -79.9193, 0.22 ) }
    dend_41 { pt3dadd( -190.78, -33.4815, -80.0961, 0.59 ) }
    dend_41 { pt3dadd( -190.992, -33.4821, -80.1482, 0.59 ) }
    dend_41 { pt3dadd( -192.24, -33.5077, -80.4324, 0.22 ) }
    dend_41 { pt3dadd( -192.767, -33.5337, -80.5312, 0.96 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 46/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -33.9757, -6.55928, 0.767657, 0.59 ) }
    dend_37 { pt3dadd( -34.7191, -7.76835, 1.14178, 0.59 ) }
    dend_37 { pt3dadd( -35.3347, -8.63711, 1.26031, 0.37 ) }
    dend_37 { pt3dadd( -35.7277, -9.12898, 1.26965, 0.29 ) }
    dend_37 { pt3dadd( -36.0458, -9.49157, 1.24052, 0.29 ) }
    dend_37 { pt3dadd( -36.52, -9.99357, 1.17258, 0.52 ) }
    dend_37 { pt3dadd( -37.2345, -10.6922, 1.05677, 0.66 ) }
    dend_37 { pt3dadd( -37.8009, -11.1735, 0.879403, 0.66 ) }
    dend_37 { pt3dadd( -38.3728, -11.6232, 0.673479, 0.59 ) }
    dend_37 { pt3dadd( -38.8963, -12.0066, 0.482854, 0.66 ) }
    dend_37 { pt3dadd( -39.3695, -12.3434, 0.312275, 0.44 ) }
    dend_37 { pt3dadd( -40.0876, -12.8593, 0.0605466, 0.29 ) }
    dend_37 { pt3dadd( -41.5766, -13.9581, -0.411504, 3.39 ) }
    dend_37 { pt3dadd( -42.0756, -14.3274, -0.562139, 4.13 ) }
    dend_37 { pt3dadd( -42.5108, -14.6533, -0.701022, 4.13 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 61/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -33.9757, -6.55928, 0.767657, 0.29 ) }
    dend_34 { pt3dadd( -35.3696, -6.65781, -1.09669, 0.29 ) }
    dend_34 { pt3dadd( -35.5646, -6.66196, -1.35609, 0.66 ) }
    dend_34 { pt3dadd( -36.3969, -6.67994, -2.46999, 0.44 ) }
    dend_34 { pt3dadd( -36.7096, -6.6823, -2.87529, 0.37 ) }
    dend_34 { pt3dadd( -37.4461, -6.69226, -3.79556, 0.37 ) }
    dend_34 { pt3dadd( -38.4536, -6.74194, -5.00586, 1.03 ) }
    dend_34 { pt3dadd( -38.776, -6.76069, -5.35176, 1.4 ) }
    dend_34 { pt3dadd( -39.2765, -6.82108, -5.83671, 1.55 ) }
    dend_34 { pt3dadd( -39.7045, -6.8893, -6.20649, 0.44 ) }
    dend_34 { pt3dadd( -40.198, -7.00656, -6.62369, 0.22 ) }
    dend_34 { pt3dadd( -40.7942, -7.16567, -7.1213, 0.22 ) }
    dend_34 { pt3dadd( -41.4433, -7.30999, -7.65858, 0.44 ) }
    dend_34 { pt3dadd( -41.9182, -7.40227, -8.09866, 0.66 ) }
    dend_34 { pt3dadd( -42.2053, -7.44918, -8.39174, 0.88 ) }
    dend_34 { pt3dadd( -42.7949, -7.53563, -9.05247, 0.88 ) }
    dend_34 { pt3dadd( -43.6913, -7.62291, -10.0985, 2.21 ) }
    dend_34 { pt3dadd( -44.1634, -7.6491, -10.6755, 2.87 ) }
    dend_34 { pt3dadd( -44.5773, -7.66375, -11.1966, 3.09 ) }
    dend_34 { pt3dadd( -44.8152, -7.68591, -11.5088, 3.24 ) }
    dend_34 { pt3dadd( -45.8804, -7.85642, -12.9175, 0.52 ) }
    dend_34 { pt3dadd( -46.1187, -7.89656, -13.206, 0.66 ) }
    dend_34 { pt3dadd( -46.4705, -7.94702, -13.5878, 0.66 ) }
    dend_34 { pt3dadd( -46.8851, -7.9615, -13.9711, 0.52 ) }
    dend_34 { pt3dadd( -48.1954, -7.86162, -15.0009, 0.22 ) }
    dend_34 { pt3dadd( -48.8172, -7.7524, -15.4065, 0.22 ) }
    dend_34 { pt3dadd( -49.8225, -7.48939, -16.0167, 0.81 ) }
    dend_34 { pt3dadd( -50.3964, -7.32805, -16.3499, 0.22 ) }
    dend_34 { pt3dadd( -51.2296, -7.07389, -16.8123, 1.92 ) }
    dend_34 { pt3dadd( -51.5919, -6.96033, -17.0157, 2.5 ) }
    dend_34 { pt3dadd( -51.9463, -6.86314, -17.2406, 2.73 ) }
    dend_34 { pt3dadd( -53.4955, -6.5622, -18.4485, 0.29 ) }
    dend_34 { pt3dadd( -54.0437, -6.50086, -18.9373, 0.22 ) }
    dend_34 { pt3dadd( -54.6278, -6.46931, -19.4942, 1.77 ) }
    dend_34 { pt3dadd( -55.0903, -6.46474, -19.9569, 2.28 ) }
    dend_34 { pt3dadd( -56.2414, -6.47303, -21.1205, 0.22 ) }
    dend_34 { pt3dadd( -56.7565, -6.4784, -21.6306, 0.22 ) }
    dend_34 { pt3dadd( -57.0631, -6.48664, -21.9225, 0.66 ) }
    dend_34 { pt3dadd( -57.3692, -6.49376, -22.2236, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( -58.1759, -6.50166, -23.0062, 0.22 ) }
    dend_34 { pt3dadd( -58.7304, -6.47876, -23.5321, 1.33 ) }
    dend_34 { pt3dadd( -59.0541, -6.43674, -23.8433, 2.36 ) }
    dend_34 { pt3dadd( -59.5906, -6.34689, -24.3938, 2.36 ) }
    dend_34 { pt3dadd( -60.6848, -6.13952, -25.6013, 0.22 ) }
    dend_34 { pt3dadd( -61.5111, -5.99475, -26.6125, 0.22 ) }
    dend_34 { pt3dadd( -62.1996, -5.85676, -27.4587, 0.22 ) }
    dend_34 { pt3dadd( -63.0823, -5.6353, -28.471, 2.28 ) }
    dend_34 { pt3dadd( -63.6008, -5.49417, -29.0385, 2.8 ) }
    dend_34 { pt3dadd( -64.008, -5.3748, -29.4665, 3.02 ) }
    dend_34 { pt3dadd( -65.7394, -4.89358, -31.2172, 0.22 ) }
    dend_34 { pt3dadd( -67.1156, -4.51967, -32.5383, 0.22 ) }
    dend_34 { pt3dadd( -68.2135, -4.24189, -33.5274, 1.84 ) }
    dend_34 { pt3dadd( -68.7221, -4.11863, -33.9462, 2.65 ) }
    dend_34 { pt3dadd( -69.2393, -3.98852, -34.3444, 2.65 ) }
    dend_34 { pt3dadd( -70.8701, -3.57411, -35.5277, 0.22 ) }
    dend_34 { pt3dadd( -71.509, -3.41697, -35.9787, 0.44 ) }
    dend_34 { pt3dadd( -71.7613, -3.36626, -36.1755, 0.44 ) }
    dend_34 { pt3dadd( -72.2587, -3.26926, -36.5742, 0.15 ) }
    dend_34 { pt3dadd( -72.9385, -3.09854, -37.0799, 1.62 ) }
    dend_34 { pt3dadd( -73.4025, -2.96318, -37.4083, 2.36 ) }
    dend_34 { pt3dadd( -73.9372, -2.78668, -37.7824, 2.36 ) }
    dend_34 { pt3dadd( -75.0962, -2.45729, -38.5795, 0.22 ) }
    dend_34 { pt3dadd( -75.8924, -2.25637, -39.1048, 0.22 ) }
    dend_34 { pt3dadd( -76.5658, -2.10028, -39.5243, 1.03 ) }
    dend_34 { pt3dadd( -77.1155, -1.97898, -39.8338, 1.55 ) }
    dend_34 { pt3dadd( -77.5705, -1.89296, -40.0641, 1.55 ) }
    dend_34 { pt3dadd( -78.6871, -1.77446, -40.5466, 0.22 ) }
    dend_34 { pt3dadd( -79.2159, -1.77666, -40.7601, 0.22 ) }
    dend_34 { pt3dadd( -79.5692, -1.80213, -40.8962, 1.33 ) }
    dend_34 { pt3dadd( -79.9687, -1.85051, -41.0527, 1.62 ) }
    dend_34 { pt3dadd( -80.3925, -1.91029, -41.2236, 1.33 ) }
    dend_34 { pt3dadd( -82.0736, -2.15941, -41.9266, 0.22 ) }
    dend_34 { pt3dadd( -82.9354, -2.27738, -42.3019, 1.03 ) }
    dend_34 { pt3dadd( -83.3371, -2.33351, -42.4831, 1.55 ) }
    dend_34 { pt3dadd( -83.7411, -2.38985, -42.6714, 1.55 ) }
    dend_34 { pt3dadd( -84.7843, -2.52219, -43.1471, 0.22 ) }
    dend_34 { pt3dadd( -85.4594, -2.57318, -43.417, 0.22 ) }
    dend_34 { pt3dadd( -86.2049, -2.58242, -43.6586, 1.62 ) }
    dend_34 { pt3dadd( -86.7223, -2.56628, -43.7943, 2.36 ) }
    dend_34 { pt3dadd( -87.0329, -2.53498, -43.8642, 2.58 ) }
    dend_34 { pt3dadd( -88.0836, -2.36049, -44.0693, 0.59 ) }
    dend_34 { pt3dadd( -89.152, -2.11261, -44.2744, 0.22 ) }
    dend_34 { pt3dadd( -89.5305, -1.9984, -44.3573, 0.66 ) }
    dend_34 { pt3dadd( -89.8757, -1.84902, -44.4332, 0.66 ) }
    dend_34 { pt3dadd( -91.0597, -1.19735, -44.742, 0.22 ) }
    dend_34 { pt3dadd( -91.4656, -0.926824, -44.8921, 0.59 ) }
    dend_34 { pt3dadd( -91.8239, -0.671842, -45.1815, 0.59 ) }
    dend_34 { pt3dadd( -92.2249, -0.392712, -45.6944, 0.22 ) }
    dend_34 { pt3dadd( -92.8687, 0.039032, -46.6971, 2.28 ) }
    dend_34 { pt3dadd( -93.1821, 0.237887, -47.2644, 2.73 ) }
    dend_34 { pt3dadd( -93.5082, 0.408216, -47.9245, 3.02 ) }
    dend_34 { pt3dadd( -94.8209, 0.9808, -50.5603, 0.22 ) }
    dend_34 { pt3dadd( -95.1175, 1.08924, -51.1382, 0.22 ) }
    dend_34 { pt3dadd( -95.4116, 1.16553, -51.6903, 0.96 ) }
    dend_34 { pt3dadd( -95.6668, 1.21615, -52.1416, 1.25 ) }
    dend_34 { pt3dadd( -96.4036, 1.39711, -53.2863, 0.22 ) }
    dend_34 { pt3dadd( -96.7333, 1.49915, -53.7304, 0.81 ) }
    dend_34 { pt3dadd( -96.9847, 1.59813, -53.9963, 1.11 ) }
    dend_34 { pt3dadd( -97.8398, 1.94339, -54.8641, 0.22 ) }
    dend_34 { pt3dadd( -98.1275, 2.06379, -55.1588, 0.59 ) }
    dend_34 { pt3dadd( -98.3812, 2.17212, -55.4185, 0.59 ) }
    dend_34 { pt3dadd( -98.9942, 2.44234, -56.0556, 0.22 ) }
    dend_34 { pt3dadd( -99.4532, 2.64029, -56.5265, 0.52 ) }
    dend_34 { pt3dadd( -100.093, 2.9353, -57.1294, 0.22 ) }
    dend_34 { pt3dadd( -100.919, 3.34615, -57.8096, 2.14 ) }
    dend_34 { pt3dadd( -101.376, 3.57089, -58.1725, 2.8 ) }
    dend_34 { pt3dadd( -101.68, 3.72188, -58.4088, 2.8 ) }
    dend_34 { pt3dadd( -103.216, 4.52889, -59.5859, 0.22 ) }
    dend_34 { pt3dadd( -104.313, 5.12851, -60.4399, 0.22 ) }
    dend_34 { pt3dadd( -104.999, 5.53809, -60.9715, 0.96 ) }
    dend_34 { pt3dadd( -105.355, 5.76986, -61.2435, 1.33 ) }
    dend_34 { pt3dadd( -105.618, 5.95337, -61.455, 1.33 ) }
    dend_34 { pt3dadd( -106.431, 6.52737, -62.1696, 0.22 ) }
    dend_34 { pt3dadd( -107.058, 6.9685, -62.7975, 0.22 ) }
    dend_34 { pt3dadd( -107.789, 7.44714, -63.5929, 1.84 ) }
    dend_34 { pt3dadd( -108.068, 7.61948, -63.9123, 2.36 ) }
    dend_34 { pt3dadd( -108.394, 7.80621, -64.2871, 2.36 ) }
    dend_34 { pt3dadd( -109.528, 8.37203, -65.6124, 0.22 ) }
    dend_34 { pt3dadd( -110.052, 8.60174, -66.2335, 0.22 ) }
    dend_34 { pt3dadd( -110.523, 8.79401, -66.7961, 1.25 ) }
    dend_34 { pt3dadd( -110.809, 8.90699, -67.1336, 1.69 ) }
    dend_34 { pt3dadd( -111.261, 9.0935, -67.6527, 1.77 ) }
    dend_34 { pt3dadd( -112.592, 9.66646, -69.1486, 0.22 ) }
    dend_34 { pt3dadd( -112.828, 9.77172, -69.4202, 0.37 ) }
    dend_34 { pt3dadd( -113.019, 9.85963, -69.634, 0.37 ) }
    dend_34 { pt3dadd( -113.602, 10.0984, -70.3087, 0.22 ) }
    dend_34 { pt3dadd( -114.095, 10.2942, -70.8657, 1.33 ) }
    dend_34 { pt3dadd( -114.503, 10.44, -71.3331, 1.62 ) }
    dend_34 { pt3dadd( -115.468, 10.7368, -72.466, 0.22 ) }
    dend_34 { pt3dadd( -115.828, 10.8317, -72.8915, 0.52 ) }
    dend_34 { pt3dadd( -117.178, 11.1583, -74.4678, 0.22 ) }
    dend_34 { pt3dadd( -117.891, 11.3128, -75.287, 1.47 ) }
    dend_34 { pt3dadd( -118.328, 11.4144, -75.7628, 2.28 ) }
    dend_34 { pt3dadd( -118.64, 11.4932, -76.0799, 2.8 ) }
    dend_34 { pt3dadd( -120.11, 11.8829, -77.5054, 0.22 ) }
    dend_34 { pt3dadd( -120.551, 12.0012, -77.9136, 0.44 ) }
    dend_34 { pt3dadd( -120.989, 12.1254, -78.29, 0.44 ) }
    dend_34 { pt3dadd( -121.552, 12.2689, -78.7845, 0.96 ) }
    dend_34 { pt3dadd( -121.845, 12.3486, -79.0428, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -122.33, 12.4747, -79.4833, 1.4 ) }
    dend_34 { pt3dadd( -123.349, 12.741, -80.4097, 0.22 ) }
    dend_34 { pt3dadd( -124.176, 12.9691, -81.0898, 0.88 ) }
    dend_34 { pt3dadd( -124.872, 13.1578, -81.6236, 0.22 ) }
    dend_34 { pt3dadd( -125.624, 13.3608, -82.1712, 2.06 ) }
    dend_34 { pt3dadd( -126.061, 13.4872, -82.4693, 2.8 ) }
    dend_34 { pt3dadd( -126.51, 13.6347, -82.7422, 2.8 ) }
    dend_34 { pt3dadd( -129.147, 14.6089, -84.1952, 0.22 ) }
    dend_34 { pt3dadd( -129.894, 14.9089, -84.5815, 0.22 ) }
    dend_34 { pt3dadd( -130.407, 15.1413, -84.8251, 1.55 ) }
    dend_34 { pt3dadd( -130.928, 15.3966, -85.0681, 2.06 ) }
    dend_34 { pt3dadd( -132.488, 16.2299, -85.8041, 0.22 ) }
    dend_34 { pt3dadd( -133.171, 16.6123, -86.1416, 0.37 ) }
    dend_34 { pt3dadd( -133.683, 16.9271, -86.4181, 0.22 ) }
    dend_34 { pt3dadd( -134.785, 17.6163, -87.0482, 2.28 ) }
    dend_34 { pt3dadd( -135.327, 17.9445, -87.3909, 3.02 ) }
    dend_34 { pt3dadd( -135.454, 18.0161, -87.4816, 3.02 ) }
    dend_34 { pt3dadd( -136.804, 18.7253, -88.5726, 0.22 ) }
    dend_34 { pt3dadd( -137.251, 18.918, -88.9949, 0.22 ) }
    dend_34 { pt3dadd( -137.698, 19.0717, -89.4567, 1.03 ) }
    dend_34 { pt3dadd( -138.015, 19.1601, -89.8016, 1.03 ) }
    dend_34 { pt3dadd( -138.663, 19.2872, -90.545, 0.22 ) }
    dend_34 { pt3dadd( -138.955, 19.327, -90.9059, 0.66 ) }
    dend_34 { pt3dadd( -140.254, 19.4628, -92.5582, 0.22 ) }
    dend_34 { pt3dadd( -140.911, 19.5315, -93.3788, 1.47 ) }
    dend_34 { pt3dadd( -141.237, 19.5642, -93.7845, 1.92 ) }
    dend_34 { pt3dadd( -142.967, 19.7449, -95.9001, 0.22 ) }
    dend_34 { pt3dadd( -143.804, 19.825, -96.9314, 0.22 ) }
    dend_34 { pt3dadd( -144.33, 19.8726, -97.5773, 0.22 ) }
    dend_34 { pt3dadd( -145.023, 19.9511, -98.4005, 1.92 ) }
    dend_34 { pt3dadd( -145.405, 19.9938, -98.8751, 2.21 ) }
    dend_34 { pt3dadd( -145.534, 20.0118, -99.0383, 2.21 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 32/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -39.4325, -2.12971, 16.2854, 0.29 ) }
    dend_31 { pt3dadd( -40.1432, -1.95209, 15.8675, 0.29 ) }
    dend_31 { pt3dadd( -40.5453, -1.85643, 15.5585, 0.29 ) }
    dend_31 { pt3dadd( -41.2957, -1.68007, 15.1967, 0.29 ) }
    dend_31 { pt3dadd( -42.1122, -1.50601, 15.0166, 1.11 ) }
    dend_31 { pt3dadd( -43.3661, -1.29323, 14.9224, 1.55 ) }
    dend_31 { pt3dadd( -43.8783, -1.22545, 14.9031, 1.77 ) }
    dend_31 { pt3dadd( -44.8348, -1.10421, 14.8788, 1.47 ) }
    dend_31 { pt3dadd( -47.8931, -0.786752, 15.1892, 0.29 ) }
    dend_31 { pt3dadd( -48.5469, -0.764107, 15.4399, 0.29 ) }
    dend_31 { pt3dadd( -48.9904, -0.758718, 15.7661, 0.59 ) }
    dend_31 { pt3dadd( -49.3712, -0.761111, 16.1472, 0.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 44/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -39.4325, -2.12971, 16.2854, 0.44 ) }
    dend_30 { pt3dadd( -38.4487, -3.3276, 17.0894, 0.44 ) }
    dend_30 { pt3dadd( -37.8083, -4.21189, 17.7086, 0.44 ) }
    dend_30 { pt3dadd( -37.2903, -5.01561, 18.3225, 0.44 ) }
    dend_30 { pt3dadd( -36.7191, -5.85712, 19.1511, 0.74 ) }
    dend_30 { pt3dadd( -36.294, -6.42351, 19.8949, 0.96 ) }
    dend_30 { pt3dadd( -35.8505, -6.92267, 20.7781, 0.74 ) }
    dend_30 { pt3dadd( -35.5945, -7.16855, 21.5202, 0.52 ) }
    dend_30 { pt3dadd( -35.375, -7.38948, 22.4839, 0.52 ) }
    dend_30 { pt3dadd( -35.132, -7.76124, 24.358, 0.66 ) }
    dend_30 { pt3dadd( -35.0668, -8.0625, 25.7163, 0.66 ) }
    dend_30 { pt3dadd( -35.0956, -8.37353, 26.7712, 0.66 ) }
    dend_30 { pt3dadd( -35.217, -8.8294, 27.969, 0.66 ) }
    dend_30 { pt3dadd( -35.3696, -9.31485, 28.8291, 0.66 ) }
    dend_30 { pt3dadd( -35.6151, -10.0181, 29.7238, 0.44 ) }
    dend_30 { pt3dadd( -35.8769, -10.7404, 30.3652, 0.29 ) }
    dend_30 { pt3dadd( -36.1984, -11.6489, 31.0109, 1.33 ) }
    dend_30 { pt3dadd( -36.4449, -12.3438, 31.4454, 2.14 ) }
    dend_30 { pt3dadd( -36.6484, -12.9189, 31.8196, 2.28 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 63/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.9334, 35.1253, -5.70639, 0.22 ) }
    dend_25 { pt3dadd( 0.228039, 37.313, -7.66448, 0.22 ) }
    dend_25 { pt3dadd( -0.38822, 38.1035, -8.37206, 0.81 ) }
    dend_25 { pt3dadd( -0.67185, 38.4674, -8.69773, 0.81 ) }
    dend_25 { pt3dadd( -1.74531, 39.8444, -9.93028, 0.22 ) }
    dend_25 { pt3dadd( -2.13284, 40.3415, -10.3752, 0.81 ) }
    dend_25 { pt3dadd( -2.36953, 40.6452, -10.647, 0.96 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 70/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 1.9334, 35.1253, -5.70639, 0.29 ) }
    dend_22 { pt3dadd( 2.06227, 38.9484, -7.46797, 0.29 ) }
    dend_22 { pt3dadd( 2.11965, 39.9206, -7.94496, 0.29 ) }
    dend_22 { pt3dadd( 2.2174, 41.2062, -8.58063, 0.29 ) }
    dend_22 { pt3dadd( 2.31409, 42.7167, -9.27877, 1.03 ) }
    dend_22 { pt3dadd( 2.34963, 43.4881, -9.59827, 1.33 ) }
    dend_22 { pt3dadd( 2.36961, 44.2578, -9.88286, 1.03 ) }
    dend_22 { pt3dadd( 2.42093, 45.6938, -10.3264, 0.59 ) }
    dend_22 { pt3dadd( 2.40821, 46.2272, -10.4916, 0.59 ) }
    dend_22 { pt3dadd( 2.27114, 47.6129, -10.9013, 0.22 ) }
    dend_22 { pt3dadd( 2.02813, 49.113, -11.2877, 0.22 ) }
    dend_22 { pt3dadd( 1.65034, 51.0982, -11.768, 2.65 ) }
    dend_22 { pt3dadd( 1.47136, 51.9936, -11.9675, 3.09 ) }
    dend_22 { pt3dadd( 1.34923, 52.597, -12.0827, 3.54 ) }
    dend_22 { pt3dadd( 1.28848, 52.8988, -12.1454, 3.68 ) }
    dend_22 { pt3dadd( 0.719672, 55.9332, -12.8321, 0.22 ) }
    dend_22 { pt3dadd( 0.574944, 56.9145, -12.9642, 0.81 ) }
    dend_22 { pt3dadd( 0.521759, 57.4613, -12.9792, 0.81 ) }
    dend_22 { pt3dadd( 0.49605, 58.1035, -12.932, 0.52 ) }
    dend_22 { pt3dadd( 0.519471, 59.3483, -12.6915, 0.22 ) }
    dend_22 { pt3dadd( 0.575725, 60.2445, -12.3949, 0.22 ) }
    dend_22 { pt3dadd( 0.88948, 62.762, -11.0426, 1.84 ) }
    dend_22 { pt3dadd( 0.95969, 63.2708, -10.7072, 2.06 ) }
    dend_22 { pt3dadd( 1.02959, 63.8028, -10.3178, 2.06 ) }
    dend_22 { pt3dadd( 1.18514, 64.9596, -9.33914, 1.25 ) }
    dend_22 { pt3dadd( 1.30347, 66.1432, -8.24615, 0.22 ) }
    dend_22 { pt3dadd( 1.37856, 67.2678, -7.20797, 0.22 ) }
    dend_22 { pt3dadd( 1.43618, 69.1778, -5.52078, 3.46 ) }
    dend_22 { pt3dadd( 1.44705, 69.9778, -4.82768, 3.83 ) }
    dend_22 { pt3dadd( 1.45006, 71.701, -3.38011, 3.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_22 { pt3dadd( 1.44685, 74.2577, -1.28094, 0.37 ) }
    dend_22 { pt3dadd( 1.44879, 74.997, -0.693884, 0.59 ) }
    dend_22 { pt3dadd( 1.43531, 75.5475, -0.306595, 0.81 ) }
    dend_22 { pt3dadd( 1.40391, 76.0935, 0.0255796, 0.81 ) }
    dend_22 { pt3dadd( 1.34965, 76.9188, 0.480617, 0.52 ) }
    dend_22 { pt3dadd( 1.24401, 77.9963, 1.00511, 0.22 ) }
    dend_22 { pt3dadd( 1.14109, 78.9257, 1.45228, 0.22 ) }
    dend_22 { pt3dadd( 0.92471, 80.6469, 2.29865, 0.22 ) }
    dend_22 { pt3dadd( 0.579947, 83.0948, 3.49973, 2.65 ) }
    dend_22 { pt3dadd( 0.449798, 83.895, 3.8854, 3.24 ) }
    dend_22 { pt3dadd( 0.296387, 84.7027, 4.26547, 3.54 ) }
    dend_22 { pt3dadd( 0.211858, 85.0926, 4.44403, 3.54 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 12/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 41.1345, -46.6755, -10.7866, 0.29 ) }
    dend_19 { pt3dadd( 40.7993, -48.114, -10.2305, 0.29 ) }
    dend_19 { pt3dadd( 40.522, -49.9129, -9.49991, 0.15 ) }
    dend_19 { pt3dadd( 40.4631, -50.4486, -9.2733, 0.52 ) }
    dend_19 { pt3dadd( 40.3291, -52.0781, -8.54104, 2.95 ) }
    dend_19 { pt3dadd( 40.2765, -52.9943, -8.11802, 2.36 ) }
    dend_19 { pt3dadd( 40.2158, -54.5791, -7.34719, 0.29 ) }
    dend_19 { pt3dadd( 40.3263, -55.96, -6.6728, 0.22 ) }
    dend_19 { pt3dadd( 40.4785, -56.7942, -6.25416, 1.4 ) }
    dend_19 { pt3dadd( 40.6597, -57.4503, -5.86025, 1.92 ) }
    dend_19 { pt3dadd( 40.7705, -57.7434, -5.64083, 2.43 ) }
    dend_19 { pt3dadd( 40.9864, -58.2073, -5.2593, 2.43 ) }
    dend_19 { pt3dadd( 41.6969, -59.5236, -4.06637, 0.29 ) }
    dend_19 { pt3dadd( 42.1786, -60.3173, -3.33403, 0.29 ) }
    dend_19 { pt3dadd( 42.7779, -61.2318, -2.46493, 1.77 ) }
    dend_19 { pt3dadd( 43.2885, -61.9851, -1.74251, 2.5 ) }
    dend_19 { pt3dadd( 43.5635, -62.3933, -1.33788, 3.02 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 41.1345, -46.6755, -10.7866, 2.14 ) }
    dend_18 { pt3dadd( 41.3142, -46.987, -10.9567, 2.14 ) }
    dend_18 { pt3dadd( 41.4899, -47.2714, -11.0641, 2.14 ) }
    dend_18 { pt3dadd( 42.5876, -48.9548, -11.5484, 0.22 ) }
    dend_18 { pt3dadd( 43.1697, -49.8024, -11.7617, 0.22 ) }
    dend_18 { pt3dadd( 43.7424, -50.5958, -11.935, 1.69 ) }
    dend_18 { pt3dadd( 44.4628, -51.5632, -12.1079, 2.14 ) }
    dend_18 { pt3dadd( 45.9292, -53.4968, -12.3542, 0.22 ) }
    dend_18 { pt3dadd( 46.8486, -54.696, -12.4554, 0.22 ) }
    dend_18 { pt3dadd( 47.5499, -55.5891, -12.4887, 1.69 ) }
    dend_18 { pt3dadd( 48.0472, -56.2047, -12.4995, 2.06 ) }
    dend_18 { pt3dadd( 49.4001, -57.8582, -12.4929, 0.22 ) }
    dend_18 { pt3dadd( 50.328, -58.983, -12.4548, 0.22 ) }
    dend_18 { pt3dadd( 50.7865, -59.5563, -12.4738, 1.69 ) }
    dend_18 { pt3dadd( 51.2516, -60.1614, -12.4862, 2.06 ) }
    // Section: dend_10, id: dend_10, parent: dend_1 (entry count 44/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 18.1867, 0.664549, -4.7962, 1.55 ) }
    dend_10 { pt3dadd( 19.3961, 0.300616, -5.26455, 1.55 ) }
    dend_10 { pt3dadd( 20.637, -0.0728165, -5.74513, 0.74 ) }
    dend_10 { pt3dadd( 21.4865, -0.328462, -6.07412, 1.18 ) }
    dend_10 { pt3dadd( 22.2418, -0.555743, -6.36662, 1.55 ) }
    dend_10 { pt3dadd( 22.8406, -0.735948, -6.59852, 1.77 ) }
    dend_10 { pt3dadd( 23.6035, -0.965525, -6.89397, 1.77 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 18.1867, 0.664549, -4.7962, 0.96 ) }
    dend_9 { pt3dadd( 17.2766, -1.45732, -4.74743, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 53/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 18.1867, 0.664549, -4.7962, 2.8 ) }
    dend_2 { pt3dadd( 19.3158, 2.5043, -5.16047, 2.8 ) }
    dend_2 { pt3dadd( 20.1837, 4.04643, -5.2826, 1.84 ) }
    dend_2 { pt3dadd( 20.5928, 4.8166, -5.25285, 1.47 ) }
    dend_2 { pt3dadd( 21.1208, 5.86058, -5.04922, 1.25 ) }
    dend_2 { pt3dadd( 21.5565, 6.73404, -4.81917, 1.18 ) }
    dend_2 { pt3dadd( 22.0324, 7.69947, -4.4813, 1.18 ) }
    dend_2 { pt3dadd( 22.5905, 8.92035, -3.87685, 1.11 ) }
    dend_2 { pt3dadd( 23.1097, 10.1068, -3.1848, 1.33 ) }
    dend_2 { pt3dadd( 24.0482, 12.2654, -1.77821, 2.58 ) }
    dend_2 { pt3dadd( 24.3049, 12.8312, -1.36878, 3.02 ) }
    dend_2 { pt3dadd( 24.8895, 14.0665, -0.403101, 3.54 ) }
    dend_2 { pt3dadd( 25.1145, 14.5357, -0.0243862, 3.68 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 66/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -42.5108, -14.6533, -0.701022, 0.37 ) }
    dend_39 { pt3dadd( -47.2072, -14.2344, -0.650204, 0.37 ) }
    dend_39 { pt3dadd( -48.0663, -14.1727, -0.640481, 0.37 ) }
    dend_39 { pt3dadd( -49.251, -14.0968, -0.646358, 0.22 ) }
    dend_39 { pt3dadd( -50.872, -14.0461, -0.734669, 0.22 ) }
    dend_39 { pt3dadd( -52.5912, -13.9816, -0.859658, 1.55 ) }
    dend_39 { pt3dadd( -53.5537, -13.9419, -0.941978, 2.58 ) }
    dend_39 { pt3dadd( -54.0544, -13.9434, -1.0178, 2.87 ) }
    dend_39 { pt3dadd( -55.2462, -13.9243, -1.20519, 2.28 ) }
    dend_39 { pt3dadd( -57.467, -13.8316, -1.6038, 0.22 ) }
    dend_39 { pt3dadd( -58.6643, -13.7339, -1.85386, 0.66 ) }
    dend_39 { pt3dadd( -59.2871, -13.6545, -2.01572, 0.88 ) }
    dend_39 { pt3dadd( -60.229, -13.4805, -2.28808, 0.22 ) }
    dend_39 { pt3dadd( -61.3403, -13.2451, -2.62392, 0.22 ) }
    dend_39 { pt3dadd( -62.2888, -13.0136, -2.89862, 0.37 ) }
    dend_39 { pt3dadd( -62.894, -12.8556, -3.05185, 0.37 ) }
    dend_39 { pt3dadd( -63.5401, -12.7062, -3.23837, 0.37 ) }
    dend_39 { pt3dadd( -64.0002, -12.5912, -3.37386, 0.37 ) }
    dend_39 { pt3dadd( -64.6657, -12.4113, -3.57064, 0.22 ) }
    dend_39 { pt3dadd( -65.4563, -12.2018, -3.76922, 0.22 ) }
    dend_39 { pt3dadd( -66.3153, -12.1129, -3.86541, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 87/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -42.5108, -14.6533, -0.701022, 0.52 ) }
    dend_38 { pt3dadd( -42.7226, -16.3896, -2.05842, 0.52 ) }
    dend_38 { pt3dadd( -42.7799, -16.8159, -2.32115, 0.52 ) }
    dend_38 { pt3dadd( -42.8271, -17.2563, -2.55953, 0.29 ) }
    dend_38 { pt3dadd( -42.8723, -17.8428, -2.84834, 0.52 ) }
    dend_38 { pt3dadd( -42.9027, -18.7565, -3.24321, 0.29 ) }
    dend_38 { pt3dadd( -42.8982, -19.1816, -3.41429, 0.29 ) }
    dend_38 { pt3dadd( -42.8311, -20.3044, -3.72731, 2.43 ) }
    dend_38 { pt3dadd( -42.7979, -20.7169, -3.84117, 3.02 ) }
    dend_38 { pt3dadd( -42.7518, -21.1226, -3.9494, 3.02 ) }
    dend_38 { pt3dadd( -42.5471, -22.4199, -4.26613, 0.22 ) }
    dend_38 { pt3dadd( -42.3678, -23.1984, -4.46988, 0.22 ) }
    dend_38 { pt3dadd( -42.2715, -23.5689, -4.56923, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 0/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -145.534, 20.0118, -99.0383, 0.22 ) }
    dend_36 { pt3dadd( -146.585, 20.8606, -100.99, 0.22 ) }
    dend_36 { pt3dadd( -146.967, 21.1386, -101.645, 0.22 ) }
    dend_36 { pt3dadd( -147.277, 21.3345, -102.153, 0.88 ) }
    dend_36 { pt3dadd( -147.637, 21.5142, -102.703, 0.88 ) }
    dend_36 { pt3dadd( -148.307, 21.8142, -103.544, 0.22 ) }
    dend_36 { pt3dadd( -148.661, 21.9628, -103.951, 0.22 ) }
    dend_36 { pt3dadd( -148.924, 22.0566, -104.201, 0.66 ) }
    dend_36 { pt3dadd( -149.408, 22.218, -104.664, 0.66 ) }
    dend_36 { pt3dadd( -150.165, 22.4818, -105.402, 0.22 ) }
    dend_36 { pt3dadd( -151.708, 23.0174, -106.961, 0.22 ) }
    dend_36 { pt3dadd( -152.266, 23.223, -107.527, 0.59 ) }
    dend_36 { pt3dadd( -152.571, 23.3405, -107.839, 0.81 ) }
    dend_36 { pt3dadd( -153.765, 23.8127, -109.075, 0.22 ) }
    dend_36 { pt3dadd( -154.588, 24.1671, -109.947, 1.11 ) }
    dend_36 { pt3dadd( -155.189, 24.4461, -110.652, 1.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -145.534, 20.0118, -99.0383, 0.22 ) }
    dend_35 { pt3dadd( -147.106, 20.7286, -99.2992, 0.22 ) }
    dend_35 { pt3dadd( -148.252, 21.2889, -99.4681, 0.22 ) }
    dend_35 { pt3dadd( -148.454, 21.3968, -99.4973, 0.52 ) }
    dend_35 { pt3dadd( -148.726, 21.5514, -99.551, 0.52 ) }
    dend_35 { pt3dadd( -149.703, 22.1383, -99.7895, 0.22 ) }
    dend_35 { pt3dadd( -150.704, 22.771, -100.079, 2.28 ) }
    dend_35 { pt3dadd( -150.973, 22.964, -100.174, 2.65 ) }
    dend_35 { pt3dadd( -151.404, 23.241, -100.375, 2.65 ) }
    dend_35 { pt3dadd( -153.442, 24.3989, -101.467, 0.22 ) }
    dend_35 { pt3dadd( -154.261, 24.8111, -101.958, 0.66 ) }
    dend_35 { pt3dadd( -155.196, 25.211, -102.592, 0.22 ) }
    dend_35 { pt3dadd( -155.883, 25.46, -103.079, 0.88 ) }
    dend_35 { pt3dadd( -157.828, 26.0592, -104.477, 0.22 ) }
    dend_35 { pt3dadd( -158.129, 26.1335, -104.694, 0.52 ) }
    dend_35 { pt3dadd( -158.45, 26.1908, -104.925, 0.52 ) }
    dend_35 { pt3dadd( -159.834, 26.4282, -105.782, 0.22 ) }
    dend_35 { pt3dadd( -160.301, 26.5147, -106.029, 0.22 ) }
    dend_35 { pt3dadd( -161.136, 26.7349, -106.371, 1.03 ) }
    dend_35 { pt3dadd( -161.525, 26.8726, -106.496, 1.4 ) }
    dend_35 { pt3dadd( -161.911, 27.0197, -106.619, 1.4 ) }
    dend_35 { pt3dadd( -164.34, 27.9901, -107.358, 0.22 ) }
    dend_35 { pt3dadd( -166.162, 28.7454, -107.885, 0.22 ) }
    dend_35 { pt3dadd( -167.558, 29.3395, -108.287, 1.25 ) }
    dend_35 { pt3dadd( -167.981, 29.5156, -108.411, 1.4 ) }
    dend_35 { pt3dadd( -169.142, 29.9994, -108.748, 0.22 ) }
    dend_35 { pt3dadd( -170.91, 30.7384, -109.281, 0.22 ) }
    dend_35 { pt3dadd( -171.773, 31.0797, -109.585, 0.74 ) }
    dend_35 { pt3dadd( -172.105, 31.191, -109.73, 0.74 ) }
    dend_35 { pt3dadd( -173.407, 31.5639, -110.369, 0.22 ) }
    dend_35 { pt3dadd( -174.089, 31.7396, -110.707, 1.33 ) }
    dend_35 { pt3dadd( -174.743, 31.8832, -111.04, 1.77 ) }
    dend_35 { pt3dadd( -176.381, 32.1715, -111.991, 0.22 ) }
    dend_35 { pt3dadd( -177.743, 32.3757, -112.857, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 0.211858, 85.0926, 4.44403, 0.29 ) }
    dend_24 { pt3dadd( -1.72378, 87.1086, 4.73089, 0.29 ) }
    dend_24 { pt3dadd( -2.31582, 87.7853, 4.85973, 0.29 ) }
    dend_24 { pt3dadd( -3.07083, 88.6933, 5.02686, 1.11 ) }
    dend_24 { pt3dadd( -3.23058, 88.8954, 5.06472, 1.25 ) }
    dend_24 { pt3dadd( -3.4006, 89.1197, 5.1085, 1.25 ) }
    dend_24 { pt3dadd( -3.64421, 89.4501, 5.17669, 0.96 ) }
    dend_24 { pt3dadd( -4.28751, 90.5811, 5.43919, 0.22 ) }
    dend_24 { pt3dadd( -4.65927, 91.2458, 5.5753, 0.22 ) }
    dend_24 { pt3dadd( -4.81167, 91.5961, 5.65716, 0.74 ) }
    dend_24 { pt3dadd( -4.94449, 91.9685, 5.75671, 0.96 ) }
    dend_24 { pt3dadd( -5.0217, 92.2454, 5.84368, 0.96 ) }
    dend_24 { pt3dadd( -5.1992, 93.1892, 6.1635, 0.22 ) }
    dend_24 { pt3dadd( -5.2678, 93.9902, 6.43199, 0.22 ) }
    dend_24 { pt3dadd( -5.28603, 95.3997, 6.88634, 1.47 ) }
    dend_24 { pt3dadd( -5.27576, 95.8983, 7.04089, 1.92 ) }
    dend_24 { pt3dadd( -5.25237, 96.4094, 7.20587, 1.92 ) }
    dend_24 { pt3dadd( -5.21335, 97.0338, 7.42006, 1.25 ) }
    dend_24 { pt3dadd( -5.14523, 98.2862, 7.89545, 0.22 ) }
    dend_24 { pt3dadd( -5.12002, 99.8051, 8.51201, 0.22 ) }
    dend_24 { pt3dadd( -5.20513, 101.008, 8.99262, 1.4 ) }
    dend_24 { pt3dadd( -5.25019, 101.396, 9.15169, 1.62 ) }
    dend_24 { pt3dadd( -5.34209, 101.835, 9.35034, 1.62 ) }
    dend_24 { pt3dadd( -5.76229, 103.252, 10.0562, 0.22 ) }
    dend_24 { pt3dadd( -6.25009, 104.554, 10.7684, 0.22 ) }
    dend_24 { pt3dadd( -6.82951, 105.894, 11.5321, 1.99 ) }
    dend_24 { pt3dadd( -6.93644, 106.123, 11.6605, 2.5 ) }
    dend_24 { pt3dadd( -7.89086, 108.086, 12.7273, 0.22 ) }
    dend_24 { pt3dadd( -8.3844, 109.038, 13.2442, 1.33 ) }
    dend_24 { pt3dadd( -8.49157, 109.221, 13.3477, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.211858, 85.0926, 4.44403, 0.29 ) }
    dend_23 { pt3dadd( 0.476889, 87.6081, 5.32485, 0.29 ) }
    dend_23 { pt3dadd( 0.609254, 88.7714, 5.81665, 0.29 ) }
    dend_23 { pt3dadd( 0.722963, 89.6943, 6.24605, 0.29 ) }
    dend_23 { pt3dadd( 0.84387, 90.6722, 6.68771, 0.29 ) }
    dend_23 { pt3dadd( 1.03118, 92.0336, 7.28996, 1.18 ) }
    dend_23 { pt3dadd( 1.16295, 92.7986, 7.62767, 1.77 ) }
    dend_23 { pt3dadd( 1.29349, 93.3819, 7.90253, 1.77 ) }
    dend_23 { pt3dadd( 1.40212, 93.7772, 8.08594, 1.92 ) }
    dend_23 { pt3dadd( 2.00203, 95.5237, 8.79901, 0.22 ) }
    dend_23 { pt3dadd( 2.32258, 96.2609, 9.0275, 0.22 ) }
    dend_23 { pt3dadd( 2.92953, 97.3674, 9.25965, 1.11 ) }
    dend_23 { pt3dadd( 3.26813, 97.8598, 9.33711, 1.33 ) }
    dend_23 { pt3dadd( 3.63604, 98.2991, 9.41308, 1.33 ) }
    dend_23 { pt3dadd( 4.09892, 98.7656, 9.52347, 1.11 ) }
    dend_23 { pt3dadd( 4.6706, 99.2509, 9.70698, 0.88 ) }
    dend_23 { pt3dadd( 5.60259, 100.059, 10.0972, 0.37 ) }
    dend_23 { pt3dadd( 5.98715, 100.399, 10.2888, 0.37 ) }
    dend_23 { pt3dadd( 6.9172, 101.241, 10.8296, 0.96 ) }
    dend_23 { pt3dadd( 7.55853, 101.868, 11.2407, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 8.68113, 103.055, 12.0341, 0.29 ) }
    dend_23 { pt3dadd( 9.5136, 103.974, 12.64, 1.11 ) }
    dend_23 { pt3dadd( 9.93989, 104.454, 12.9465, 1.33 ) }
    dend_23 { pt3dadd( 10.6614, 105.259, 13.44, 0.81 ) }
    dend_23 { pt3dadd( 11.2093, 105.87, 13.7901, 0.37 ) }
    dend_23 { pt3dadd( 11.9653, 106.727, 14.2159, 0.74 ) }
    dend_23 { pt3dadd( 12.6719, 107.539, 14.5665, 0.44 ) }
    dend_23 { pt3dadd( 13.7043, 108.725, 15.0259, 1.47 ) }
    dend_23 { pt3dadd( 13.9264, 108.988, 15.1189, 1.99 ) }
    dend_23 { pt3dadd( 14.3623, 109.506, 15.2881, 1.99 ) }
    dend_23 { pt3dadd( 15.6413, 111.029, 15.8156, 0.22 ) }
    dend_23 { pt3dadd( 16.0774, 111.562, 16.0028, 0.22 ) }
    dend_23 { pt3dadd( 16.801, 112.497, 16.3045, 1.4 ) }
    dend_23 { pt3dadd( 17.1402, 112.944, 16.4329, 1.4 ) }
    dend_23 { pt3dadd( 18.128, 114.238, 16.7684, 0.29 ) }
    dend_23 { pt3dadd( 19.2074, 115.599, 17.0687, 0.22 ) }
    dend_23 { pt3dadd( 19.8125, 116.343, 17.2161, 0.22 ) }
    dend_23 { pt3dadd( 20.526, 117.222, 17.3229, 1.18 ) }
    dend_23 { pt3dadd( 20.9213, 117.705, 17.3608, 1.84 ) }
    dend_23 { pt3dadd( 21.3591, 118.226, 17.3734, 1.47 ) }
    dend_23 { pt3dadd( 22.2157, 119.23, 17.273, 0.22 ) }
    dend_23 { pt3dadd( 22.6594, 119.72, 17.148, 0.22 ) }
    dend_23 { pt3dadd( 23.4988, 120.589, 16.9079, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 23/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 23.6035, -0.965525, -6.89397, 0.66 ) }
    dend_12 { pt3dadd( 23.7905, -0.0459733, -9.71063, 0.66 ) }
    dend_12 { pt3dadd( 24.0723, 1.1101, -13.1947, 0.66 ) }
    dend_12 { pt3dadd( 24.155, 1.37036, -14.0383, 1.62 ) }
    dend_12 { pt3dadd( 24.2194, 1.59437, -14.7922, 2.65 ) }
    dend_12 { pt3dadd( 24.3198, 1.9437, -15.9677, 2.95 ) }
    dend_12 { pt3dadd( 24.5446, 2.72609, -18.6005, 0.81 ) }
    dend_12 { pt3dadd( 24.8299, 3.85263, -22.8776, 2.28 ) }
    dend_12 { pt3dadd( 24.9027, 4.10356, -23.8394, 3.17 ) }
    dend_12 { pt3dadd( 24.9806, 4.33285, -24.6289, 3.46 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 33/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 23.6035, -0.965525, -6.89397, 0.66 ) }
    dend_11 { pt3dadd( 24.0746, -2.09725, -7.3467, 0.66 ) }
    dend_11 { pt3dadd( 24.2845, -2.65784, -7.58752, 0.74 ) }
    dend_11 { pt3dadd( 24.4276, -3.06027, -7.78118, 0.81 ) }
    dend_11 { pt3dadd( 24.6515, -3.71731, -8.1178, 0.59 ) }
    dend_11 { pt3dadd( 24.8394, -4.28758, -8.42027, 0.52 ) }
    dend_11 { pt3dadd( 25.0069, -4.81606, -8.71116, 0.29 ) }
    dend_11 { pt3dadd( 25.1627, -5.38603, -9.05435, 0.29 ) }
    dend_11 { pt3dadd( 25.3527, -6.15455, -9.5365, 1.33 ) }
    dend_11 { pt3dadd( 25.4398, -6.57963, -9.81559, 1.92 ) }
    dend_11 { pt3dadd( 25.471, -6.768, -9.94631, 2.14 ) }
    dend_11 { pt3dadd( 25.5127, -7.09394, -10.1705, 1.92 ) }
    dend_11 { pt3dadd( 25.5716, -7.67882, -10.5672, 0.96 ) }
    dend_11 { pt3dadd( 25.612, -8.28694, -10.9733, 0.22 ) }
    dend_11 { pt3dadd( 25.6345, -8.80409, -11.3096, 0.22 ) }
    dend_11 { pt3dadd( 25.6594, -9.04678, -11.4711, 0.88 ) }
    dend_11 { pt3dadd( 25.7567, -9.54834, -11.8063, 1.55 ) }
    dend_11 { pt3dadd( 25.8134, -9.73093, -11.9283, 1.69 ) }
    dend_11 { pt3dadd( 25.9633, -10.0841, -12.1668, 1.33 ) }
    dend_11 { pt3dadd( 26.3476, -10.8013, -12.6551, 0.29 ) }
    dend_11 { pt3dadd( 26.8198, -11.5683, -13.1711, 0.29 ) }
    dend_11 { pt3dadd( 27.2635, -12.2279, -13.609, 0.29 ) }
    dend_11 { pt3dadd( 27.7221, -12.8498, -14.0167, 1.33 ) }
    dend_11 { pt3dadd( 28.0412, -13.2397, -14.2687, 1.62 ) }
    dend_11 { pt3dadd( 28.2593, -13.4825, -14.4229, 1.69 ) }
    dend_11 { pt3dadd( 28.9213, -14.1516, -14.8532, 0.29 ) }
    dend_11 { pt3dadd( 29.5533, -14.7493, -15.2446, 0.29 ) }
    dend_11 { pt3dadd( 29.9446, -15.09, -15.4766, 0.29 ) }
    dend_11 { pt3dadd( 30.7476, -15.7479, -15.9114, 1.77 ) }
    dend_11 { pt3dadd( 30.9962, -15.9357, -16.0311, 2.58 ) }
    dend_11 { pt3dadd( 31.4197, -16.2296, -16.2123, 3.02 ) }
    dend_11 { pt3dadd( 31.6707, -16.3871, -16.2966, 3.17 ) }
    dend_11 { pt3dadd( 31.8632, -16.5035, -16.3492, 3.17 ) }
    dend_11 { pt3dadd( 32.7, -17.018, -16.5478, 1.55 ) }
    dend_11 { pt3dadd( 33.5638, -17.5526, -16.7204, 0.22 ) }
    dend_11 { pt3dadd( 33.8678, -17.7395, -16.774, 0.22 ) }
    dend_11 { pt3dadd( 34.5025, -18.1527, -16.8678, 1.03 ) }
    dend_11 { pt3dadd( 34.7424, -18.323, -16.8954, 1.25 ) }
    dend_11 { pt3dadd( 34.9969, -18.5146, -16.9239, 1.33 ) }
    dend_11 { pt3dadd( 35.3571, -18.7992, -16.954, 0.88 ) }
    dend_11 { pt3dadd( 35.5933, -19.0013, -16.9677, 0.29 ) }
    dend_11 { pt3dadd( 36.3753, -19.6963, -17.0235, 0.22 ) }
    dend_11 { pt3dadd( 37.1849, -20.4581, -17.1111, 1.84 ) }
    dend_11 { pt3dadd( 37.6394, -20.9133, -17.18, 2.65 ) }
    dend_11 { pt3dadd( 38.0135, -21.3165, -17.2477, 2.5 ) }
    dend_11 { pt3dadd( 38.2555, -21.5979, -17.3002, 1.92 ) }
    dend_11 { pt3dadd( 38.9926, -22.5036, -17.4696, 0.29 ) }
    dend_11 { pt3dadd( 39.5134, -23.1848, -17.5847, 0.29 ) }
    dend_11 { pt3dadd( 40.036, -23.9022, -17.6727, 0.22 ) }
    dend_11 { pt3dadd( 40.5264, -24.5198, -17.7333, 0.22 ) }
    dend_11 { pt3dadd( 41.1589, -25.2579, -17.8038, 2.73 ) }
    dend_11 { pt3dadd( 41.5979, -25.7413, -17.8434, 3.24 ) }
    dend_11 { pt3dadd( 42.1425, -26.3164, -17.877, 2.58 ) }
    dend_11 { pt3dadd( 43.5505, -27.6785, -17.9506, 0.22 ) }
    dend_11 { pt3dadd( 45.4529, -29.3746, -18.0981, 0.22 ) }
    dend_11 { pt3dadd( 46.3046, -30.0907, -18.2007, 2.06 ) }
    dend_11 { pt3dadd( 46.5985, -30.3289, -18.2451, 2.65 ) }
    dend_11 { pt3dadd( 47.0349, -30.6708, -18.3223, 2.8 ) }
    dend_11 { pt3dadd( 48.4155, -31.7149, -18.6112, 0.22 ) }
    dend_11 { pt3dadd( 50.2123, -33.0454, -19.0451, 0.22 ) }
    dend_11 { pt3dadd( 50.9631, -33.6307, -19.2397, 1.25 ) }
    dend_11 { pt3dadd( 51.3668, -33.9472, -19.3517, 1.69 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 95/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 25.1145, 14.5357, -0.0243862, 0.88 ) }
    dend_6 { pt3dadd( 26.171, 14.512, -0.712383, 0.88 ) }
    dend_6 { pt3dadd( 26.9312, 14.4677, -1.0348, 0.29 ) }
    dend_6 { pt3dadd( 28.2962, 14.3263, -1.2798, 0.37 ) }
    dend_6 { pt3dadd( 28.8018, 14.2313, -1.2212, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_6 { pt3dadd( 29.5744, 14.0102, -0.878258, 0.44 ) }
    dend_6 { pt3dadd( 30.2653, 13.7855, -0.480202, 0.74 ) }
    dend_6 { pt3dadd( 32.0296, 13.1349, 0.944216, 1.03 ) }
    dend_6 { pt3dadd( 32.5639, 12.9158, 1.46209, 1.03 ) }
    dend_6 { pt3dadd( 33.3979, 12.5811, 2.30785, 0.66 ) }
    dend_6 { pt3dadd( 34.3697, 12.2211, 3.25163, 0.44 ) }
    dend_6 { pt3dadd( 34.7762, 12.096, 3.6168, 0.59 ) }
    dend_6 { pt3dadd( 35.3117, 11.9819, 4.01955, 0.29 ) }
    dend_6 { pt3dadd( 36.035, 11.8942, 4.36283, 0.29 ) }
    dend_6 { pt3dadd( 36.9633, 11.8398, 4.70558, 1.4 ) }
    dend_6 { pt3dadd( 37.6956, 11.8558, 4.87809, 1.92 ) }
    dend_6 { pt3dadd( 38.3781, 11.909, 4.96633, 1.62 ) }
    dend_6 { pt3dadd( 38.9235, 11.9643, 5.03124, 0.81 ) }
    dend_6 { pt3dadd( 39.2183, 12.0016, 5.05964, 0.81 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 14/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 25.1145, 14.5357, -0.0243862, 1.69 ) }
    dend_3 { pt3dadd( 25.4188, 17.1117, 0.87835, 1.69 ) }
    dend_3 { pt3dadd( 25.5989, 18.6361, 1.41252, 1.25 ) }
    dend_3 { pt3dadd( 25.7931, 20.2802, 1.98869, 1.33 ) }
    dend_3 { pt3dadd( 25.9006, 21.1903, 2.30761, 1.33 ) }
    dend_3 { pt3dadd( 25.9986, 22.0199, 2.59834, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 24.9806, 4.33285, -24.6289, 0.44 ) }
    dend_14 { pt3dadd( 25.0356, 3.62212, -25.418, 0.44 ) }
    dend_14 { pt3dadd( 25.369, 2.49349, -26.5129, 0.29 ) }
    dend_14 { pt3dadd( 25.5286, 2.07357, -26.9293, 1.03 ) }
    dend_14 { pt3dadd( 25.6548, 1.7588, -27.2359, 1.33 ) }
    dend_14 { pt3dadd( 25.8805, 1.20599, -27.7573, 0.22 ) }
    dend_14 { pt3dadd( 26.2672, 0.27862, -28.6044, 0.22 ) }
    dend_14 { pt3dadd( 26.6776, -0.553552, -29.3424, 1.47 ) }
    dend_14 { pt3dadd( 26.9631, -1.1011, -29.7948, 1.77 ) }
    dend_14 { pt3dadd( 27.2999, -1.75039, -30.4065, 0.15 ) }
    dend_14 { pt3dadd( 27.4436, -2.04565, -30.7436, 0.15 ) }
    dend_14 { pt3dadd( 27.6788, -2.63027, -31.5346, 2.36 ) }
    dend_14 { pt3dadd( 27.7477, -2.85927, -31.8761, 2.95 ) }
    dend_14 { pt3dadd( 27.8174, -3.15071, -32.3359, 2.95 ) }
    dend_14 { pt3dadd( 27.9839, -3.87772, -33.5325, 0.66 ) }
    dend_14 { pt3dadd( 28.1037, -4.42117, -34.5363, 0.22 ) }
    dend_14 { pt3dadd( 28.1789, -4.81638, -35.3324, 0.22 ) }
    dend_14 { pt3dadd( 28.2095, -5.03223, -35.7998, 1.11 ) }
    dend_14 { pt3dadd( 28.2282, -5.16663, -36.078, 1.33 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 39/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 24.9806, 4.33285, -24.6289, 0.22 ) }
    dend_13 { pt3dadd( 26.7073, 6.56282, -25.2647, 0.22 ) }
    dend_13 { pt3dadd( 28.0072, 8.12361, -25.7392, 0.22 ) }
    dend_13 { pt3dadd( 29.5795, 9.90707, -26.2364, 1.99 ) }
    dend_13 { pt3dadd( 30.2072, 10.611, -26.4156, 2.43 ) }
    dend_13 { pt3dadd( 31.9042, 12.5632, -26.8938, 0.44 ) }
    dend_13 { pt3dadd( 32.4418, 13.2106, -27.0695, 0.96 ) }
    dend_13 { pt3dadd( 33.4087, 14.4432, -27.3928, 0.22 ) }
    dend_13 { pt3dadd( 35.0487, 16.6557, -27.8889, 0.22 ) }
    dend_13 { pt3dadd( 35.6988, 17.5732, -28.0537, 1.47 ) }
    dend_13 { pt3dadd( 36.267, 18.5952, -28.3325, 1.47 ) }
    dend_13 { pt3dadd( 37.6509, 21.4553, -29.0989, 0.15 ) }
    dend_13 { pt3dadd( 38.3851, 23.1319, -29.5374, 0.15 ) }
    dend_13 { pt3dadd( 39.0268, 24.7361, -29.9232, 1.84 ) }
    dend_13 { pt3dadd( 39.2345, 25.3023, -30.0432, 2.14 ) }
    dend_13 { pt3dadd( 41.4286, 31.3162, -31.1552, 0.22 ) }
    dend_13 { pt3dadd( 42.3558, 33.841, -31.5712, 0.22 ) }
    dend_13 { pt3dadd( 42.561, 34.4073, -31.6577, 0.22 ) }
    dend_13 { pt3dadd( 43.1583, 36.0039, -31.9237, 0.22 ) }
    dend_13 { pt3dadd( 43.858, 37.8172, -32.1665, 1.55 ) }
    dend_13 { pt3dadd( 44.1031, 38.4251, -32.2133, 1.55 ) }
    dend_13 { pt3dadd( 45.4677, 41.5874, -32.2083, 0.22 ) }
    dend_13 { pt3dadd( 45.9785, 42.81, -32.3765, 0.22 ) }
    dend_13 { pt3dadd( 46.4174, 43.7905, -32.5466, 0.22 ) }
    dend_13 { pt3dadd( 46.8674, 44.7393, -32.7485, 0.96 ) }
    dend_13 { pt3dadd( 47.5049, 46.0181, -33.0273, 1.77 ) }
    dend_13 { pt3dadd( 47.7708, 46.5067, -33.1549, 1.77 ) }
    dend_13 { pt3dadd( 49.3312, 49.2036, -33.9745, 0.22 ) }
    dend_13 { pt3dadd( 49.958, 50.2574, -34.3436, 0.81 ) }
    dend_13 { pt3dadd( 50.6545, 51.4085, -34.8061, 0.22 ) }
    dend_13 { pt3dadd( 51.8439, 53.3669, -35.6705, 1.62 ) }
    dend_13 { pt3dadd( 54.2234, 57.2578, -37.4249, 0.22 ) }
    dend_13 { pt3dadd( 55.3494, 59.1133, -38.3366, 0.66 ) }
    dend_13 { pt3dadd( 56.1242, 60.3974, -39.0287, 1.18 ) }
    dend_13 { pt3dadd( 56.6188, 61.2297, -39.5044, 1.18 ) }
    dend_13 { pt3dadd( 57.6373, 62.9651, -40.5204, 0.81 ) }
    dend_13 { pt3dadd( 58.0716, 63.7129, -40.9617, 1.33 ) }
    dend_13 { pt3dadd( 59.2091, 65.7702, -42.1508, 1.18 ) }
    dend_13 { pt3dadd( 60.1525, 67.4948, -43.1043, 0.29 ) }
    dend_13 { pt3dadd( 60.7368, 68.5697, -43.6544, 0.81 ) }
    dend_13 { pt3dadd( 61.022, 69.0928, -43.8927, 0.81 ) }
    dend_13 { pt3dadd( 62.3938, 71.5333, -44.8677, 0.22 ) }
    dend_13 { pt3dadd( 62.8735, 72.3915, -45.1891, 0.22 ) }
    dend_13 { pt3dadd( 63.2535, 73.0542, -45.3749, 0.66 ) }
    dend_13 { pt3dadd( 63.6775, 73.8069, -45.5562, 0.66 ) }
    dend_13 { pt3dadd( 64.2131, 74.7169, -45.7608, 0.29 ) }
    dend_13 { pt3dadd( 64.9367, 75.8738, -45.9678, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 39.2183, 12.0016, 5.05964, 0.66 ) }
    dend_8 { pt3dadd( 39.7292, 11.5811, 6.50384, 0.66 ) }
    dend_8 { pt3dadd( 40.0017, 11.3889, 7.16567, 0.66 ) }
    dend_8 { pt3dadd( 40.357, 11.1566, 7.93993, 0.66 ) }
    dend_8 { pt3dadd( 40.8727, 10.8552, 8.83832, 0.44 ) }
    dend_8 { pt3dadd( 41.5925, 10.4346, 10.0921, 0.66 ) }
    dend_8 { pt3dadd( 42.6176, 9.83562, 11.8778, 1.55 ) }
    dend_8 { pt3dadd( 43.1436, 9.59363, 12.642, 2.14 ) }
    dend_8 { pt3dadd( 43.5361, 9.43543, 13.1656, 2.36 ) }
    dend_8 { pt3dadd( 44.8266, 8.91559, 14.7508, 0.59 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 96/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 39.2183, 12.0016, 5.05964, 0.22 ) }
    dend_7 { pt3dadd( 41.4083, 11.5234, 4.1091, 0.22 ) }
    dend_7 { pt3dadd( 43.3253, 11.1631, 3.45924, 1.47 ) }
    dend_7 { pt3dadd( 44.0564, 11.0422, 3.24495, 1.69 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 44.6544, 10.9498, 3.08886, 1.84 ) }
    dend_7 { pt3dadd( 45.5472, 10.8188, 2.88286, 0.74 ) }
    dend_7 { pt3dadd( 46.7698, 10.6504, 2.61909, 0.22 ) }
    dend_7 { pt3dadd( 47.853, 10.5396, 2.55858, 0.22 ) }
    dend_7 { pt3dadd( 48.9919, 10.4472, 2.59728, 0.88 ) }
    dend_7 { pt3dadd( 49.6327, 10.3919, 2.63957, 0.88 ) }
    dend_7 { pt3dadd( 50.4366, 10.3214, 2.76366, 0.29 ) }
    dend_7 { pt3dadd( 51.0699, 10.2731, 2.97091, 0.22 ) }
    dend_7 { pt3dadd( 52.6624, 10.1123, 3.68664, 1.18 ) }
    dend_7 { pt3dadd( 53.185, 10.0519, 3.97976, 1.47 ) }
    dend_7 { pt3dadd( 53.7301, 9.96788, 4.33295, 0.96 ) }
    dend_7 { pt3dadd( 55.5041, 9.64066, 5.49772, 0.22 ) }
    dend_7 { pt3dadd( 57.6214, 9.22079, 6.89371, 1.69 ) }
    dend_7 { pt3dadd( 58.7564, 8.97762, 7.6263, 2.73 ) }
    dend_7 { pt3dadd( 59.8008, 8.74495, 8.24932, 3.02 ) }
    dend_7 { pt3dadd( 61.8599, 8.28275, 9.35492, 0.15 ) }
    dend_7 { pt3dadd( 63.1828, 8.0012, 9.97575, 0.15 ) }
    dend_7 { pt3dadd( 64.75, 7.69493, 10.5926, 1.4 ) }
    dend_7 { pt3dadd( 65.3992, 7.59372, 10.8066, 1.92 ) }
    dend_7 { pt3dadd( 66.5111, 7.49763, 11.1475, 0.96 ) }
    dend_7 { pt3dadd( 68.5865, 7.41308, 11.7144, 0.22 ) }
    dend_7 { pt3dadd( 70.2102, 7.41986, 12.113, 0.22 ) }
    dend_7 { pt3dadd( 71.3599, 7.4454, 12.378, 1.47 ) }
    dend_7 { pt3dadd( 72.784, 7.47356, 12.6598, 2.5 ) }
    dend_7 { pt3dadd( 75.0528, 7.51189, 13.0639, 0.22 ) }
    dend_7 { pt3dadd( 75.2346, 7.51356, 13.0911, 0.44 ) }
    dend_7 { pt3dadd( 76.9621, 7.50682, 13.2711, 0.22 ) }
    dend_7 { pt3dadd( 78.6739, 7.41467, 13.3432, 0.22 ) }
    dend_7 { pt3dadd( 80.7541, 7.21528, 13.3086, 2.36 ) }
    dend_7 { pt3dadd( 81.5124, 7.11914, 13.2643, 2.95 ) }
    dend_7 { pt3dadd( 82.0322, 7.0391, 13.2134, 3.02 ) }
    dend_7 { pt3dadd( 83.3593, 6.8261, 13.0885, 1.33 ) }
    dend_7 { pt3dadd( 85.8089, 6.41457, 12.8614, 0.22 ) }
    dend_7 { pt3dadd( 87.5386, 6.10513, 12.6927, 0.44 ) }
    dend_7 { pt3dadd( 88.5449, 5.92079, 12.5946, 0.37 ) }
    dend_7 { pt3dadd( 89.3475, 5.77213, 12.5306, 1.47 ) }
    dend_7 { pt3dadd( 90.2911, 5.59261, 12.4752, 1.92 ) }
    dend_7 { pt3dadd( 90.9075, 5.46643, 12.4429, 1.92 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 38/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 25.9986, 22.0199, 2.59834, 0.15 ) }
    dend_5 { pt3dadd( 26.5737, 22.3501, 3.06296, 0.15 ) }
    dend_5 { pt3dadd( 27.3902, 22.9538, 3.95615, 1.4 ) }
    dend_5 { pt3dadd( 27.6374, 23.1642, 4.28906, 1.99 ) }
    dend_5 { pt3dadd( 28.1572, 23.6589, 5.04844, 2.21 ) }
    dend_5 { pt3dadd( 28.3067, 23.8175, 5.26984, 2.5 ) }
    dend_5 { pt3dadd( 28.5722, 24.1226, 5.65292, 2.14 ) }
    dend_5 { pt3dadd( 29.2504, 25.1316, 6.73452, 0.66 ) }
    dend_5 { pt3dadd( 29.6026, 25.8621, 7.30775, 0.52 ) }
    dend_5 { pt3dadd( 29.7465, 26.2302, 7.50903, 0.52 ) }
    dend_5 { pt3dadd( 29.9086, 26.7802, 7.67553, 0.44 ) }
    dend_5 { pt3dadd( 30.0248, 27.2529, 7.76395, 0.29 ) }
    dend_5 { pt3dadd( 30.178, 28.0543, 7.89626, 0.29 ) }
    dend_5 { pt3dadd( 30.2777, 28.7674, 8.00282, 0.59 ) }
    dend_5 { pt3dadd( 30.3285, 29.1568, 8.1445, 0.59 ) }
    dend_5 { pt3dadd( 30.4074, 29.6095, 8.53441, 0.37 ) }
    dend_5 { pt3dadd( 30.4904, 29.9545, 9.00441, 0.37 ) }
    dend_5 { pt3dadd( 30.716, 30.6914, 10.2258, 2.14 ) }
    dend_5 { pt3dadd( 30.8176, 30.9617, 10.7273, 2.95 ) }
    dend_5 { pt3dadd( 31.0463, 31.4345, 11.658, 3.17 ) }
    dend_5 { pt3dadd( 31.3455, 31.9389, 12.644, 3.02 ) }
    dend_5 { pt3dadd( 31.7612, 32.45, 13.6134, 0.66 ) }
    dend_5 { pt3dadd( 31.9649, 32.6472, 13.9456, 0.52 ) }
    dend_5 { pt3dadd( 32.28, 32.9002, 14.2893, 0.81 ) }
    dend_5 { pt3dadd( 32.6549, 33.1763, 14.5896, 0.81 ) }
    dend_5 { pt3dadd( 32.9885, 33.4079, 14.7871, 0.52 ) }
    dend_5 { pt3dadd( 34.2125, 34.1879, 15.3755, 0.44 ) }
    dend_5 { pt3dadd( 34.883, 34.6058, 15.6879, 1.47 ) }
    dend_5 { pt3dadd( 35.517, 35.0249, 16.0027, 2.65 ) }
    dend_5 { pt3dadd( 35.8976, 35.2997, 16.2037, 3.17 ) }
    dend_5 { pt3dadd( 36.1711, 35.5327, 16.3719, 2.95 ) }
    dend_5 { pt3dadd( 37.0382, 36.3936, 16.9504, 0.96 ) }
    dend_5 { pt3dadd( 37.5391, 36.9944, 17.3023, 0.29 ) }
    dend_5 { pt3dadd( 37.8114, 37.3739, 17.4956, 0.29 ) }
    dend_5 { pt3dadd( 38.0583, 37.7696, 17.672, 0.29 ) }
    dend_5 { pt3dadd( 38.6692, 38.8336, 18.0834, 1.55 ) }
    dend_5 { pt3dadd( 38.8593, 39.1923, 18.2135, 2.06 ) }
    dend_5 { pt3dadd( 39.088, 39.6628, 18.3751, 1.99 ) }
    dend_5 { pt3dadd( 39.7037, 40.9329, 18.8113, 0.22 ) }
    dend_5 { pt3dadd( 40.1291, 41.8187, 19.1268, 0.22 ) }
    dend_5 { pt3dadd( 40.3773, 42.3576, 19.3189, 0.22 ) }
    dend_5 { pt3dadd( 41.0218, 43.8019, 19.8151, 2.36 ) }
    dend_5 { pt3dadd( 41.283, 44.4083, 20.0242, 2.95 ) }
    dend_5 { pt3dadd( 41.463, 44.8438, 20.1694, 3.17 ) }
    dend_5 { pt3dadd( 42.0703, 46.3648, 20.6609, 0.29 ) }
    dend_5 { pt3dadd( 42.3166, 46.9645, 20.8298, 0.22 ) }
    dend_5 { pt3dadd( 42.6278, 47.7717, 20.9268, 0.22 ) }
    dend_5 { pt3dadd( 42.8043, 48.2761, 20.9046, 1.25 ) }
    dend_5 { pt3dadd( 43.0603, 49.1366, 20.8119, 1.92 ) }
    dend_5 { pt3dadd( 43.152, 49.5102, 20.7538, 2.65 ) }
    dend_5 { pt3dadd( 43.2713, 50.0334, 20.6673, 2.5 ) }
    dend_5 { pt3dadd( 43.802, 52.2551, 20.3548, 0.22 ) }
    dend_5 { pt3dadd( 44.0428, 53.1342, 20.2712, 0.22 ) }
    dend_5 { pt3dadd( 44.4407, 54.4031, 20.2408, 0.22 ) }
    dend_5 { pt3dadd( 44.6267, 54.9268, 20.2633, 0.22 ) }
    dend_5 { pt3dadd( 45.0808, 56.1023, 20.4027, 1.99 ) }
    dend_5 { pt3dadd( 45.2103, 56.4143, 20.4659, 2.5 ) }
    dend_5 { pt3dadd( 45.8076, 57.6496, 20.8239, 0.22 ) }
    dend_5 { pt3dadd( 46.2506, 58.5078, 21.0657, 0.22 ) }
    dend_5 { pt3dadd( 46.4813, 58.9358, 21.1832, 0.22 ) }
    dend_5 { pt3dadd( 46.9822, 59.8901, 21.4408, 2.28 ) }
    dend_5 { pt3dadd( 47.6951, 61.3962, 21.7974, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( 48.1148, 62.3371, 22.0218, 1.47 ) }
    dend_5 { pt3dadd( 48.2742, 62.73, 22.1137, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 2/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 25.9986, 22.0199, 2.59834, 0.96 ) }
    dend_4 { pt3dadd( 25.7877, 22.4433, 2.24475, 0.96 ) }
    dend_4 { pt3dadd( 25.5861, 23.0123, 1.82112, 0.81 ) }
    dend_4 { pt3dadd( 25.3849, 23.8736, 1.24614, 0.52 ) }
    dend_4 { pt3dadd( 25.3062, 24.5362, 0.851984, 0.52 ) }
    dend_4 { pt3dadd( 25.2918, 25.2883, 0.415072, 0.52 ) }
    dend_4 { pt3dadd( 25.322, 25.9698, 0.0228251, 0.66 ) }
    dend_4 { pt3dadd( 25.4555, 26.762, -0.431419, 0.96 ) }
    dend_4 { pt3dadd( 25.6246, 27.2749, -0.705006, 1.11 ) }
    dend_4 { pt3dadd( 25.9012, 27.8637, -0.960179, 1.25 ) }
    dend_4 { pt3dadd( 26.2706, 28.5734, -1.20888, 1.25 ) }
    dend_4 { pt3dadd( 26.3565, 28.7501, -1.25626, 1.33 ) }
    dend_4 { pt3dadd( 26.5735, 29.2914, -1.3779, 0.88 ) }
    dend_4 { pt3dadd( 26.7472, 29.9487, -1.49991, 0.59 ) }
    dend_4 { pt3dadd( 26.8529, 30.734, -1.59818, 0.52 ) }
    dend_4 { pt3dadd( 26.8803, 31.5293, -1.66679, 0.52 ) }
    dend_4 { pt3dadd( 26.8491, 32.5025, -1.71237, 1.25 ) }
    dend_4 { pt3dadd( 26.8039, 33.0979, -1.74161, 1.77 ) }
    dend_4 { pt3dadd( 26.7063, 33.8613, -1.78105, 1.77 ) }
    dend_4 { pt3dadd( 26.5418, 34.8057, -1.80857, 1.47 ) }
    dend_4 { pt3dadd( 26.3113, 35.923, -1.79206, 1.99 ) }
    dend_4 { pt3dadd( 26.2044, 36.4017, -1.76382, 2.58 ) }
    dend_4 { pt3dadd( 26.0885, 36.875, -1.71424, 2.87 ) }
    dend_4 { pt3dadd( 25.98, 37.2629, -1.65506, 2.87 ) }
    dend_4 { pt3dadd( 25.708, 38.1137, -1.4765, 2.06 ) }
    dend_4 { pt3dadd( 25.3895, 38.9042, -1.26093, 1.25 ) }
    dend_4 { pt3dadd( 25.107, 39.5108, -1.07361, 0.81 ) }
    dend_4 { pt3dadd( 24.8427, 40.0609, -0.91491, 0.59 ) }
    dend_4 { pt3dadd( 24.5433, 40.682, -0.761358, 0.29 ) }
    dend_4 { pt3dadd( 24.4064, 40.9776, -0.705543, 0.29 ) }
    dend_4 { pt3dadd( 24.1879, 41.4729, -0.638073, 0.44 ) }
    dend_4 { pt3dadd( 23.8886, 42.2464, -0.553018, 0.59 ) }
    dend_4 { pt3dadd( 23.6756, 42.8829, -0.46019, 1.11 ) }
    dend_4 { pt3dadd( 23.5433, 43.3768, -0.354073, 1.33 ) }
    dend_4 { pt3dadd( 23.4734, 43.7412, -0.230387, 1.47 ) }
    dend_4 { pt3dadd( 23.4137, 44.2367, 0.00629618, 1.33 ) }
    dend_4 { pt3dadd( 23.3804, 44.6943, 0.308178, 0.81 ) }
    dend_4 { pt3dadd( 23.3714, 45.0287, 0.594338, 0.59 ) }
    dend_4 { pt3dadd( 23.3636, 45.5522, 1.12539, 0.37 ) }
    dend_4 { pt3dadd( 23.3217, 46.1747, 1.81359, 0.37 ) }
    dend_4 { pt3dadd( 23.2551, 46.7423, 2.4544, 1.47 ) }
    dend_4 { pt3dadd( 23.1976, 47.089, 2.82818, 1.77 ) }
    dend_4 { pt3dadd( 23.0928, 47.5908, 3.34289, 1.77 ) }
    dend_4 { pt3dadd( 22.961, 48.1395, 3.86713, 1.4 ) }
    dend_4 { pt3dadd( 22.7162, 48.989, 4.57771, 0.29 ) }
    dend_4 { pt3dadd( 22.6567, 49.1671, 4.69485, 0.29 ) }
    dend_4 { pt3dadd( 22.4239, 49.8599, 5.04093, 1.03 ) }
    dend_4 { pt3dadd( 22.3204, 50.1875, 5.17221, 1.18 ) }
    dend_4 { pt3dadd( 22.2564, 50.4064, 5.24311, 1.18 ) }
    dend_4 { pt3dadd( 22.1106, 50.9962, 5.40562, 0.22 ) }
    dend_4 { pt3dadd( 22.0269, 51.5185, 5.52896, 0.22 ) }
    dend_4 { pt3dadd( 21.8863, 52.732, 5.80183, 2.43 ) }
    dend_4 { pt3dadd( 21.8426, 53.2544, 5.91186, 2.65 ) }
    dend_4 { pt3dadd( 21.8217, 53.6076, 5.98076, 2.8 ) }
    dend_4 { pt3dadd( 21.8126, 53.8474, 6.01537, 2.8 ) }
    dend_4 { pt3dadd( 21.7862, 55.2967, 6.09263, 0.37 ) }
    dend_4 { pt3dadd( 21.7791, 55.9504, 6.04935, 0.29 ) }
    dend_4 { pt3dadd( 21.771, 56.5983, 5.93007, 0.29 ) }
    dend_4 { pt3dadd( 21.76, 57.4209, 5.70611, 0.88 ) }
    dend_4 { pt3dadd( 21.7358, 58.3886, 5.4248, 1.47 ) }
    dend_4 { pt3dadd( 21.6965, 59.2515, 5.17701, 2.28 ) }
    dend_4 { pt3dadd( 21.6415, 60.0525, 4.98596, 2.5 ) }
    dend_4 { pt3dadd( 21.6056, 60.5265, 4.90796, 2.8 ) }
    dend_4 { pt3dadd( 21.516, 61.6792, 4.85507, 0.88 ) }
    dend_4 { pt3dadd( 21.4228, 62.7196, 4.97238, 0.44 ) }
    dend_4 { pt3dadd( 21.307, 63.8846, 5.28377, 0.44 ) }
    dend_4 { pt3dadd( 21.1893, 64.9513, 5.69735, 0.37 ) }
    dend_4 { pt3dadd( 21.0904, 65.7671, 6.0897, 0.37 ) }
    dend_4 { pt3dadd( 20.9393, 66.8522, 6.675, 1.55 ) }
    dend_4 { pt3dadd( 20.7344, 67.9987, 7.22899, 3.09 ) }
    dend_4 { pt3dadd( 20.6124, 68.567, 7.44045, 3.68 ) }
    dend_4 { pt3dadd( 20.4294, 69.2724, 7.6028, 4.13 ) }
    dend_4 { pt3dadd( 20.2854, 69.7447, 7.6352, 4.13 ) }
    dend_4 { pt3dadd( 20.0014, 70.5686, 7.57839, 3.76 ) }
    dend_4 { pt3dadd( 19.0845, 72.9508, 7.12728, 0.44 ) }
    dend_4 { pt3dadd( 18.741, 73.8185, 6.87858, 0.37 ) }
    dend_4 { pt3dadd( 18.3082, 74.9036, 6.50734, 1.03 ) }
    dend_4 { pt3dadd( 18.0428, 75.5746, 6.24946, 1.11 ) }
    dend_4 { pt3dadd( 17.8195, 76.1489, 6.01567, 1.11 ) }
    dend_4 { pt3dadd( 17.5013, 77.0306, 5.64738, 0.22 ) }
    dend_4 { pt3dadd( 17.3013, 77.7777, 5.42416, 0.74 ) }
    dend_4 { pt3dadd( 17.2463, 78.0921, 5.36456, 0.74 ) }
    dend_4 { pt3dadd( 17.2096, 78.4511, 5.33939, 0.44 ) }
    dend_4 { pt3dadd( 17.1857, 78.7528, 5.34896, 0.22 ) }
    dend_4 { pt3dadd( 17.1172, 79.6314, 5.42619, 0.22 ) }
    dend_4 { pt3dadd( 16.9696, 81.356, 5.63345, 3.39 ) }
    dend_4 { pt3dadd( 16.8741, 82.2511, 5.7664, 4.13 ) }
    dend_4 { pt3dadd( 16.8308, 82.637, 5.82945, 4.35 ) }
    dend_4 { pt3dadd( 16.5886, 84.8528, 6.17206, 0.29 ) }
    dend_4 { pt3dadd( 16.5333, 85.4147, 6.24857, 0.52 ) }
    dend_4 { pt3dadd( 16.4702, 86.0736, 6.32666, 0.59 ) }
    dend_4 { pt3dadd( 16.4304, 86.4969, 6.34923, 0.59 ) }
    dend_4 { pt3dadd( 16.3542, 87.375, 6.34991, 0.29 ) }
    dend_4 { pt3dadd( 16.2942, 88.1655, 6.32412, 0.29 ) }
    dend_4 { pt3dadd( 16.2261, 89.2479, 6.2308, 1.62 ) }
    dend_4 { pt3dadd( 16.1634, 90.2343, 6.11077, 2.43 ) }
    dend_4 { pt3dadd( 16.1319, 90.7651, 6.04622, 2.43 ) }
    dend_4 { pt3dadd( 16.0608, 92.0329, 5.90756, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_4 { pt3dadd( 16.0291, 92.6407, 5.85424, 0.29 ) }
    dend_4 { pt3dadd( 16.0079, 93.1853, 5.83914, 0.22 ) }
    dend_4 { pt3dadd( 16.0002, 93.6536, 5.83831, 0.22 ) }
    dend_4 { pt3dadd( 16.0004, 94.6513, 5.83629, 0.22 ) }
    dend_4 { pt3dadd( 16.0075, 95.7903, 5.84961, 1.84 ) }
    dend_4 { pt3dadd( 16.014, 96.354, 5.84077, 2.8 ) }
    dend_4 { pt3dadd( 16.0185, 96.903, 5.81973, 2.87 ) }
    dend_4 { pt3dadd( 16.0191, 97.5792, 5.78503, 2.28 ) }
    dend_4 { pt3dadd( 15.9837, 99.035, 5.6599, 0.29 ) }
    dend_4 { pt3dadd( 15.9556, 99.504, 5.58558, 0.22 ) }
    dend_4 { pt3dadd( 15.891, 100.337, 5.42412, 0.81 ) }
    dend_4 { pt3dadd( 15.8585, 100.69, 5.35147, 0.96 ) }
    dend_4 { pt3dadd( 15.818, 101.105, 5.26844, 0.37 ) }
    dend_4 { pt3dadd( 15.7687, 101.631, 5.21281, 0.15 ) }
    dend_4 { pt3dadd( 15.7072, 102.31, 5.20032, 0.29 ) }
    dend_4 { pt3dadd( 15.6677, 102.738, 5.22308, 0.29 ) }
    dend_4 { pt3dadd( 15.6092, 103.397, 5.30562, 0.15 ) }
    dend_4 { pt3dadd( 15.5842, 103.753, 5.35742, 0.15 ) }
    dend_4 { pt3dadd( 15.5268, 104.946, 5.56018, 1.84 ) }
    dend_4 { pt3dadd( 15.5121, 105.412, 5.65385, 2.36 ) }
    dend_4 { pt3dadd( 15.4996, 105.888, 5.76201, 2.5 ) }
    dend_4 { pt3dadd( 15.4777, 106.593, 5.92322, 1.84 ) }
    dend_4 { pt3dadd( 15.4384, 107.754, 6.21346, 0.22 ) }
    dend_4 { pt3dadd( 15.4202, 108.191, 6.3241, 0.22 ) }
    dend_4 { pt3dadd( 15.3912, 109.107, 6.54118, 1.11 ) }
    dend_4 { pt3dadd( 15.3835, 109.401, 6.61744, 1.25 ) }
    dend_4 { pt3dadd( 15.377, 109.693, 6.69629, 0.66 ) }
    dend_4 { pt3dadd( 15.3609, 110.642, 6.97837, 0.22 ) }
    dend_4 { pt3dadd( 15.3856, 111.335, 7.18201, 0.22 ) }
    dend_4 { pt3dadd( 15.4531, 112.232, 7.42875, 0.22 ) }
    dend_4 { pt3dadd( 15.6236, 113.798, 7.83832, 2.43 ) }
    dend_4 { pt3dadd( 15.6931, 114.384, 7.98241, 2.87 ) }
    dend_4 { pt3dadd( 15.7158, 114.571, 8.02501, 2.87 ) }
    dend_4 { pt3dadd( 15.9377, 116.511, 8.46935, 0.22 ) }
    dend_4 { pt3dadd( 15.9925, 117.139, 8.62244, 0.74 ) }
    dend_4 { pt3dadd( 16.0091, 117.492, 8.71073, 0.74 ) }
    dend_4 { pt3dadd( 16.0089, 118.371, 8.91878, 0.22 ) }
    dend_4 { pt3dadd( 15.9588, 118.969, 9.04584, 0.22 ) }
    dend_4 { pt3dadd( 15.7355, 120.233, 9.26122, 2.14 ) }
    dend_4 { pt3dadd( 15.5608, 120.798, 9.33034, 2.87 ) }
    dend_4 { pt3dadd( 15.4554, 121.078, 9.34996, 3.09 ) }
    dend_4 { pt3dadd( 15.2081, 121.68, 9.34861, 2.43 ) }
    dend_4 { pt3dadd( 14.6564, 123.006, 9.26484, 0.37 ) }
    dend_4 { pt3dadd( 14.4238, 123.603, 9.19903, 0.29 ) }
    dend_4 { pt3dadd( 14.2356, 124.148, 9.11816, 0.37 ) }
    dend_4 { pt3dadd( 14.0843, 124.718, 9.06125, 0.29 ) }
    dend_4 { pt3dadd( 13.9752, 125.318, 9.04057, 0.29 ) }
    dend_4 { pt3dadd( 13.8985, 126.007, 9.07033, 0.37 ) }
    dend_4 { pt3dadd( 13.8717, 126.556, 9.14585, 0.59 ) }
    dend_4 { pt3dadd( 13.8476, 127.008, 9.22606, 0.59 ) }
    dend_4 { pt3dadd( 13.7959, 127.741, 9.36402, 0.22 ) }
    dend_4 { pt3dadd( 13.7158, 128.511, 9.50403, 1.33 ) }
    dend_4 { pt3dadd( 13.6249, 129.066, 9.59865, 1.62 ) }
    dend_4 { pt3dadd( 13.5317, 129.545, 9.65892, 1.25 ) }
    dend_4 { pt3dadd( 13.2781, 130.764, 9.77666, 0.29 ) }
    dend_4 { pt3dadd( 13.1775, 131.251, 9.816, 0.52 ) }
    dend_4 { pt3dadd( 13.1078, 131.624, 9.84799, 0.52 ) }
    dend_4 { pt3dadd( 12.9874, 132.403, 9.86856, 0.22 ) }
    dend_4 { pt3dadd( 12.8682, 133.419, 9.85307, 1.92 ) }
    dend_4 { pt3dadd( 12.8119, 134.084, 9.82417, 2.73 ) }
    dend_4 { pt3dadd( 12.7948, 134.404, 9.80289, 2.95 ) }
    dend_4 { pt3dadd( 12.7773, 134.848, 9.76809, 3.24 ) }
    dend_4 { pt3dadd( 12.7215, 137.014, 9.55821, 0.29 ) }
    dend_4 { pt3dadd( 12.7176, 137.499, 9.50445, 0.29 ) }
    dend_4 { pt3dadd( 12.738, 138.275, 9.42083, 0.88 ) }
    dend_4 { pt3dadd( 12.7682, 138.812, 9.36734, 0.88 ) }
    dend_4 { pt3dadd( 12.8048, 139.291, 9.31496, 0.88 ) }
    dend_4 { pt3dadd( 12.9282, 140.277, 9.30379, 0.29 ) }
    dend_4 { pt3dadd( 13.052, 141.064, 9.3747, 0.29 ) }
    dend_4 { pt3dadd( 13.3014, 142.645, 9.56854, 2.43 ) }
    dend_4 { pt3dadd( 13.3675, 143.053, 9.6291, 3.02 ) }
    dend_4 { pt3dadd( 13.4776, 143.668, 9.73532, 3.24 ) }
    dend_4 { pt3dadd( 13.9661, 146.229, 10.2815, 0.22 ) }
    dend_4 { pt3dadd( 14.1334, 147.073, 10.4998, 0.52 ) }
    dend_4 { pt3dadd( 14.2017, 147.42, 10.5996, 0.52 ) }
    dend_4 { pt3dadd( 14.312, 147.925, 10.7496, 0.22 ) }
    dend_4 { pt3dadd( 14.4101, 148.318, 10.8575, 0.22 ) }
    dend_4 { pt3dadd( 14.6781, 149.303, 11.1004, 1.33 ) }
    dend_4 { pt3dadd( 14.8, 149.713, 11.1553, 1.69 ) }
    dend_4 { pt3dadd( 14.9015, 150.053, 11.2019, 1.69 ) }
    dend_4 { pt3dadd( 15.2483, 151.348, 11.3752, 0.22 ) }
    dend_4 { pt3dadd( 15.3555, 151.892, 11.4767, 0.66 ) }
    dend_4 { pt3dadd( 15.3939, 152.189, 11.5453, 0.66 ) }
    dend_4 { pt3dadd( 15.434, 152.661, 11.6735, 0.66 ) }
    dend_4 { pt3dadd( 15.4616, 153.371, 11.9035, 0.22 ) }
    dend_4 { pt3dadd( 15.4611, 153.723, 12.0082, 0.22 ) }
    dend_4 { pt3dadd( 15.3838, 155.236, 12.481, 1.99 ) }
    dend_4 { pt3dadd( 15.3583, 155.686, 12.6139, 2.65 ) }
    dend_4 { pt3dadd( 15.3434, 156.02, 12.7045, 2.8 ) }
    dend_4 { pt3dadd( 15.3319, 156.607, 12.8544, 2.14 ) }
    dend_4 { pt3dadd( 15.3918, 157.954, 13.2566, 0.22 ) }
    dend_4 { pt3dadd( 15.4939, 158.861, 13.5469, 0.22 ) }
    dend_4 { pt3dadd( 15.6619, 159.826, 13.8527, 1.25 ) }
    dend_4 { pt3dadd( 15.7336, 160.179, 13.9736, 1.47 ) }
    dend_4 { pt3dadd( 15.8083, 160.521, 14.1154, 1.25 ) }
    dend_4 { pt3dadd( 16.0922, 161.75, 14.7626, 0.52 ) }
    dend_4 { pt3dadd( 16.2, 162.229, 15.0668, 0.29 ) }
    dend_4 { pt3dadd( 16.2933, 162.689, 15.3551, 0.29 ) }
    dend_4 { pt3dadd( 16.4017, 163.208, 15.6702, 0.29 ) }
    dend_4 { pt3dadd( 16.6347, 164.358, 16.3045, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_4 { pt3dadd( 16.7294, 164.915, 16.5769, 2.28 ) }
    dend_4 { pt3dadd( 16.7802, 165.378, 16.7703, 2.5 ) }
    dend_4 { pt3dadd( 16.8979, 167.034, 17.4997, 0.29 ) }
    dend_4 { pt3dadd( 16.9398, 167.852, 17.8697, 0.22 ) }
    dend_4 { pt3dadd( 16.9579, 168.495, 18.1678, 0.22 ) }
    dend_4 { pt3dadd( 16.9499, 168.919, 18.367, 0.22 ) }
    dend_4 { pt3dadd( 16.9186, 169.635, 18.7651, 0.22 ) }
    dend_4 { pt3dadd( 16.8272, 170.847, 19.5334, 1.77 ) }
    dend_4 { pt3dadd( 16.7901, 171.238, 19.8009, 2.36 ) }
    dend_4 { pt3dadd( 16.7651, 171.623, 20.0789, 2.65 ) }
    dend_4 { pt3dadd( 16.7702, 172.17, 20.4836, 2.8 ) }
    dend_4 { pt3dadd( 17.0106, 173.915, 21.7424, 0.29 ) }
    dend_4 { pt3dadd( 17.1405, 174.413, 22.0843, 0.22 ) }
    dend_4 { pt3dadd( 17.3414, 174.974, 22.4386, 0.22 ) }
    dend_4 { pt3dadd( 17.5347, 175.37, 22.6959, 0.22 ) }
    dend_4 { pt3dadd( 17.7546, 175.713, 22.912, 0.22 ) }
    dend_4 { pt3dadd( 18.5055, 176.637, 23.464, 1.47 ) }
    dend_4 { pt3dadd( 18.7036, 176.838, 23.5827, 1.99 ) }
    dend_4 { pt3dadd( 18.9505, 177.068, 23.735, 1.99 ) }
    dend_4 { pt3dadd( 20.1383, 178.153, 24.5291, 0.15 ) }
    dend_4 { pt3dadd( 20.5736, 178.548, 24.8333, 0.29 ) }
    dend_4 { pt3dadd( 20.7728, 178.708, 24.9662, 0.29 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 28.2282, -5.16663, -36.078, 0.22 ) }
    dend_16 { pt3dadd( 28.2633, -7.34576, -38.0818, 0.22 ) }
    dend_16 { pt3dadd( 28.271, -7.8972, -38.5659, 1.11 ) }
    dend_16 { pt3dadd( 28.2748, -8.19704, -38.8331, 1.11 ) }
    dend_16 { pt3dadd( 28.3087, -9.16441, -39.6586, 0.22 ) }
    dend_16 { pt3dadd( 28.4331, -11.3015, -41.4084, 0.22 ) }
    dend_16 { pt3dadd( 28.5113, -12.2257, -42.1926, 2.06 ) }
    dend_16 { pt3dadd( 28.6041, -12.8533, -42.7047, 2.65 ) }
    dend_16 { pt3dadd( 28.7047, -13.3756, -43.1515, 2.65 ) }
    dend_16 { pt3dadd( 28.9281, -14.3285, -43.9727, 1.03 ) }
    dend_16 { pt3dadd( 29.1318, -15.0083, -44.56, 0.22 ) }
    dend_16 { pt3dadd( 29.6135, -16.1894, -45.4898, 0.52 ) }
    dend_16 { pt3dadd( 29.7504, -16.4678, -45.6995, 0.52 ) }
    dend_16 { pt3dadd( 29.9103, -16.7545, -45.912, 0.29 ) }
    dend_16 { pt3dadd( 30.247, -17.388, -46.4132, 1.03 ) }
    dend_16 { pt3dadd( 30.4636, -17.8276, -46.7844, 0.96 ) }
    dend_16 { pt3dadd( 30.6999, -18.3925, -47.3075, 0.59 ) }
    dend_16 { pt3dadd( 30.8655, -18.9462, -47.8869, 1.84 ) }
    dend_16 { pt3dadd( 30.9667, -19.3572, -48.3725, 2.36 ) }
    dend_16 { pt3dadd( 31.1861, -20.5244, -49.9363, 0.88 ) }
    dend_16 { pt3dadd( 31.2718, -20.9011, -50.4942, 0.29 ) }
    dend_16 { pt3dadd( 31.4796, -21.7033, -51.7004, 0.29 ) }
    dend_16 { pt3dadd( 31.803, -22.7957, -53.3666, 1.69 ) }
    dend_16 { pt3dadd( 31.9146, -23.108, -53.8373, 2.21 ) }
    dend_16 { pt3dadd( 32.1493, -23.6722, -54.6592, 2.21 ) }
    dend_16 { pt3dadd( 33.3141, -26.1197, -58.0646, 0.44 ) }
    dend_16 { pt3dadd( 33.4971, -26.4764, -58.5392, 0.74 ) }
    dend_16 { pt3dadd( 33.5515, -26.5749, -58.6597, 0.74 ) }
    dend_16 { pt3dadd( 33.8855, -27.1414, -59.3341, 0.22 ) }
    dend_16 { pt3dadd( 34.3625, -27.9759, -60.2994, 0.88 ) }
    dend_16 { pt3dadd( 34.4504, -28.1351, -60.4792, 0.88 ) }
    dend_16 { pt3dadd( 34.8209, -28.9199, -61.4159, 0.22 ) }
    dend_16 { pt3dadd( 35.0668, -29.4992, -62.1041, 0.22 ) }
    dend_16 { pt3dadd( 35.4465, -30.5408, -63.317, 1.84 ) }
    dend_16 { pt3dadd( 35.5578, -30.9263, -63.7525, 2.21 ) }
    dend_16 { pt3dadd( 35.7039, -31.4363, -64.3135, 2.21 ) }
    dend_16 { pt3dadd( 36.2485, -33.2672, -66.3516, 0.29 ) }
    dend_16 { pt3dadd( 36.4585, -33.9907, -67.1852, 0.15 ) }
    dend_16 { pt3dadd( 36.6821, -34.8083, -68.1152, 0.96 ) }
    dend_16 { pt3dadd( 36.9672, -35.9456, -69.3995, 0.22 ) }
    dend_16 { pt3dadd( 37.423, -38.0565, -71.8712, 0.22 ) }
    dend_16 { pt3dadd( 37.6259, -39.2268, -73.2462, 2.21 ) }
    dend_16 { pt3dadd( 37.7458, -40.1443, -74.3623, 2.8 ) }
    dend_16 { pt3dadd( 37.8866, -41.6478, -76.2728, 0.22 ) }
    dend_16 { pt3dadd( 37.9288, -42.3751, -77.1867, 1.03 ) }
    dend_16 { pt3dadd( 37.9538, -44.3877, -79.6945, 0.22 ) }
    dend_16 { pt3dadd( 37.8946, -45.4014, -80.9408, 1.77 ) }
    dend_16 { pt3dadd( 37.8327, -46.1614, -81.8561, 2.06 ) }
    dend_16 { pt3dadd( 37.7041, -47.7676, -83.7678, 0.22 ) }
    dend_16 { pt3dadd( 37.6509, -48.4139, -84.5584, 1.33 ) }
    dend_16 { pt3dadd( 37.5979, -49.1918, -85.4867, 1.62 ) }
    dend_16 { pt3dadd( 37.5185, -50.968, -87.4646, 0.22 ) }
    dend_16 { pt3dadd( 37.5087, -51.2749, -87.7957, 0.74 ) }
    dend_16 { pt3dadd( 37.493, -51.6189, -88.1585, 0.74 ) }
    dend_16 { pt3dadd( 37.4532, -52.5553, -89.159, 0.22 ) }
    dend_16 { pt3dadd( 37.4558, -53.1988, -89.8234, 0.22 ) }
    dend_16 { pt3dadd( 37.4885, -53.8066, -90.3892, 1.03 ) }
    dend_16 { pt3dadd( 37.5519, -54.3772, -90.8676, 1.11 ) }
    dend_16 { pt3dadd( 37.7361, -55.7303, -92.084, 0.22 ) }
    dend_16 { pt3dadd( 37.9387, -56.9276, -93.0958, 0.22 ) }
    dend_16 { pt3dadd( 38.1347, -57.9099, -93.8945, 1.92 ) }
    dend_16 { pt3dadd( 38.2221, -58.3259, -94.2253, 2.58 ) }
    dend_16 { pt3dadd( 38.3038, -58.684, -94.5054, 2.58 ) }
    dend_16 { pt3dadd( 38.918, -61.2358, -96.3849, 0.29 ) }
    dend_16 { pt3dadd( 39.4251, -63.2482, -97.8033, 0.29 ) }
    dend_16 { pt3dadd( 39.5573, -63.7777, -98.206, 1.03 ) }
    dend_16 { pt3dadd( 39.7181, -64.4318, -98.7454, 1.25 ) }
    dend_16 { pt3dadd( 40.4262, -67.143, -101.023, 0.22 ) }
    dend_16 { pt3dadd( 40.6563, -67.8857, -101.729, 0.74 ) }
    dend_16 { pt3dadd( 40.7565, -68.1538, -102.003, 0.74 ) }
    dend_16 { pt3dadd( 41.3078, -69.4706, -103.544, 0.22 ) }
    dend_16 { pt3dadd( 41.5948, -70.1032, -104.315, 1.69 ) }
    dend_16 { pt3dadd( 41.82, -70.5452, -104.883, 2.5 ) }
    dend_16 { pt3dadd( 43.5176, -73.5324, -108.78, 0.22 ) }
    dend_16 { pt3dadd( 43.8089, -74.0185, -109.396, 0.74 ) }
    dend_16 { pt3dadd( 44.0933, -74.4675, -109.916, 0.74 ) }
    dend_16 { pt3dadd( 44.4212, -74.9523, -110.428, 0.22 ) }
    dend_16 { pt3dadd( 45.7479, -76.8311, -112.311, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_16 { pt3dadd( 46.3599, -77.6537, -113.063, 1.99 ) }
    dend_16 { pt3dadd( 46.691, -78.0745, -113.379, 2.21 ) }
    dend_16 { pt3dadd( 47.5727, -79.2114, -114.208, 0.22 ) }
    dend_16 { pt3dadd( 48.1253, -79.9194, -114.707, 0.96 ) }
    dend_16 { pt3dadd( 48.3644, -80.236, -114.919, 1.18 ) }
    dend_16 { pt3dadd( 49.4745, -81.7611, -115.876, 0.22 ) }
    dend_16 { pt3dadd( 49.8093, -82.2439, -116.19, 0.22 ) }
    dend_16 { pt3dadd( 50.2571, -82.891, -116.619, 0.81 ) }
    dend_16 { pt3dadd( 50.5368, -83.2891, -116.906, 0.81 ) }
    dend_16 { pt3dadd( 51.6363, -84.78, -118.298, 0.22 ) }
    dend_16 { pt3dadd( 52.0461, -85.3076, -118.895, 0.44 ) }
    dend_16 { pt3dadd( 52.332, -85.6585, -119.353, 0.15 ) }
    dend_16 { pt3dadd( 52.9482, -86.3431, -120.35, 1.11 ) }
    dend_16 { pt3dadd( 53.7689, -87.1656, -121.708, 0.22 ) }
    dend_16 { pt3dadd( 55.2151, -88.4971, -124.082, 1.03 ) }
    dend_16 { pt3dadd( 55.6694, -88.8616, -124.831, 0.81 ) }
    dend_16 { pt3dadd( 55.9514, -89.0693, -125.376, 0.52 ) }
    dend_16 { pt3dadd( 56.2225, -89.2545, -125.977, 0.81 ) }
    dend_16 { pt3dadd( 56.4301, -89.382, -126.483, 0.81 ) }
    dend_16 { pt3dadd( 56.907, -89.7036, -127.615, 0.22 ) }
    dend_16 { pt3dadd( 57.4183, -90.0933, -128.802, 0.96 ) }
    dend_16 { pt3dadd( 58.8941, -91.315, -132.402, 0.37 ) }
    dend_16 { pt3dadd( 59.6831, -92.0319, -134.393, 1.4 ) }
    dend_16 { pt3dadd( 60.3091, -92.6662, -136.016, 1.03 ) }
    dend_16 { pt3dadd( 61.0675, -93.5116, -138.038, 0.22 ) }
    dend_16 { pt3dadd( 61.335, -93.8483, -138.821, 0.96 ) }
    dend_16 { pt3dadd( 61.5418, -94.1401, -139.427, 0.96 ) }
    dend_16 { pt3dadd( 61.8504, -94.6239, -140.28, 0.59 ) }
    dend_16 { pt3dadd( 62.2115, -95.2102, -141.319, 1.18 ) }
    dend_16 { pt3dadd( 62.5647, -95.7553, -142.32, 1.33 ) }
    dend_16 { pt3dadd( 64.0876, -97.826, -146.326, 0.22 ) }
    dend_16 { pt3dadd( 64.3116, -98.1021, -146.844, 0.88 ) }
    dend_16 { pt3dadd( 64.5089, -98.3212, -147.238, 0.88 ) }
    dend_16 { pt3dadd( 65.4183, -99.2051, -148.799, 0.22 ) }
    dend_16 { pt3dadd( 66.6148, -100.119, -150.36, 0.22 ) }
    dend_16 { pt3dadd( 67.3335, -100.554, -151.059, 1.18 ) }
    dend_16 { pt3dadd( 67.7458, -100.748, -151.358, 1.47 ) }
    dend_16 { pt3dadd( 68.5442, -100.982, -151.904, 0.15 ) }
    dend_16 { pt3dadd( 69.4764, -101.148, -152.579, 0.44 ) }
    dend_16 { pt3dadd( 71.7527, -101.347, -154.238, 0.22 ) }
    dend_16 { pt3dadd( 72.4238, -101.363, -154.773, 0.74 ) }
    dend_16 { pt3dadd( 72.8785, -101.357, -155.17, 0.74 ) }
    dend_16 { pt3dadd( 76.7193, -101.191, -158.768, 0.29 ) }
    dend_16 { pt3dadd( 78.4613, -101.076, -160.463, 1.03 ) }
    dend_16 { pt3dadd( 78.8471, -101.04, -160.848, 1.03 ) }
    dend_16 { pt3dadd( 80.4026, -100.918, -162.387, 0.29 ) }
    dend_16 { pt3dadd( 81.1753, -100.893, -163.121, 0.74 ) }
    dend_16 { pt3dadd( 82.3619, -100.939, -164.168, 0.22 ) }
    dend_16 { pt3dadd( 83.4877, -101.096, -165.045, 1.84 ) }
    dend_16 { pt3dadd( 84.07, -101.219, -165.418, 1.84 ) }
    dend_16 { pt3dadd( 86.6745, -101.917, -166.922, 0.15 ) }
    dend_16 { pt3dadd( 87.5239, -102.216, -167.318, 0.74 ) }
    dend_16 { pt3dadd( 88.0243, -102.439, -167.527, 0.74 ) }
    dend_16 { pt3dadd( 88.6535, -102.788, -167.762, 0.22 ) }
    dend_16 { pt3dadd( 89.2851, -103.209, -168.006, 0.59 ) }
    dend_16 { pt3dadd( 89.5167, -103.386, -168.095, 0.59 ) }
    dend_16 { pt3dadd( 90.5114, -104.272, -168.553, 0.22 ) }
    dend_16 { pt3dadd( 90.9393, -104.691, -168.78, 0.74 ) }
    dend_16 { pt3dadd( 91.147, -104.91, -168.916, 0.74 ) }
    dend_16 { pt3dadd( 91.9958, -105.889, -169.56, 0.15 ) }
    dend_16 { pt3dadd( 92.5827, -106.613, -170.047, 0.15 ) }
    dend_16 { pt3dadd( 93.0529, -107.209, -170.489, 0.59 ) }
    dend_16 { pt3dadd( 93.3724, -107.617, -170.804, 0.59 ) }
    dend_16 { pt3dadd( 94.6157, -109.201, -172.018, 0.22 ) }
    dend_16 { pt3dadd( 95.0135, -109.713, -172.408, 0.74 ) }
    dend_16 { pt3dadd( 95.2471, -110.018, -172.635, 0.74 ) }
    dend_16 { pt3dadd( 96.6771, -111.893, -174.039, 0.22 ) }
    dend_16 { pt3dadd( 97.7502, -113.248, -175.022, 0.22 ) }
    dend_16 { pt3dadd( 98.1462, -113.73, -175.375, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 69/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 28.2282, -5.16663, -36.078, 0.22 ) }
    dend_15 { pt3dadd( 29.248, -5.87603, -36.4371, 0.22 ) }
    dend_15 { pt3dadd( 30.6198, -6.83028, -36.9201, 0.22 ) }
    dend_15 { pt3dadd( 31.0368, -7.12039, -37.0669, 0.74 ) }
    dend_15 { pt3dadd( 31.5266, -7.46109, -37.2394, 0.74 ) }
    dend_15 { pt3dadd( 33.0172, -8.49796, -37.7642, 0.22 ) }
    dend_15 { pt3dadd( 33.4599, -8.80592, -37.9201, 0.44 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_48, dend_43, dend_32, dend_27, dend_20, dend_0, dend_47, dend_44, dend_40, dend_33, dend_29, dend_28, dend_26, dend_21, dend_17, dend_1, dend_46, dend_45, dend_42, dend_41, dend_37, dend_34, dend_31, dend_30, dend_25, dend_22, dend_19, dend_18, dend_10, dend_9, dend_2, dend_39, dend_38, dend_36, dend_35, dend_24, dend_23, dend_12, dend_11, dend_6, dend_3, dend_14, dend_13, dend_8, dend_7, dend_5, dend_4, dend_16, dend_15]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_17 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_42 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_41 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_34 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_22 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_11 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_5 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_43 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_10 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_20 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_45 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_33 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_21 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_12 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_3 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_25 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_28 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_47 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_31 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_8 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_30 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_32, dend_32, dend_32, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_0, dend_0, dend_0, axon_0, axon_0, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 7
    dend_26 nseg = 9
    dend_17 nseg = 3
    dend_42 nseg = 3
    dend_41 nseg = 9
    dend_34 nseg = 7
    dend_22 nseg = 3
    dend_23 nseg = 3
    dend_11 nseg = 3
    dend_13 nseg = 5
    dend_7 nseg = 3
    dend_5 nseg = 3
    dend_4 nseg = 9
    dend_16 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_NBC_73114eff1a_0_0


