// Cell: cNAC187_L23_MC_3110386c07_0_0
/*
{
  "id" : "cNAC187_L23_MC_3110386c07_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "3.34882, 12.029, -0.642028, 3.69835", "3.08658, 10.8571, -0.568212, 6.33024", "2.82434, 9.68521, -0.494396, 9.66608", "2.5621, 8.5133, -0.42058, 11.4094", "2.29985, 7.34139, -0.346764, 12.0713", "2.03761, 6.16948, -0.272948, 12.6528", "1.77537, 4.99757, -0.199132, 13.2267", "1.51312, 3.82567, -0.125316, 13.3167", "1.25088, 2.65376, -0.0515004, 13.3743", "0.988638, 1.48185, 0.0223156, 13.432", "0.726396, 0.309937, 0.0961315, 13.4121", "0.464153, -0.861972, 0.169947, 12.7316", "0.20191, -2.03388, 0.243763, 11.8873", "-0.0603331, -3.20579, 0.317579, 11.0397", "-0.322576, -4.3777, 0.391395, 10.1912", "-0.584819, -5.54961, 0.465211, 9.43883", "-0.847062, -6.72152, 0.539027, 9.02818", "-1.1093, -7.89343, 0.612843, 8.43865", "-1.37155, -9.06534, 0.686659, 7.05745", "-1.63379, -10.2372, 0.760475, 5.04619", "-1.89603, -11.4092, 0.834291, 3.06009" ]
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-2.23711, -12.0403, -0.844794, 2.67", "-2.70921, -13.9257, -0.844794, 2.67", "-3.51715, -17.1524, -0.844794, 2.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999984932561256
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.04289, 10.2097, -3.1748, 2.0", "9.54633, 14.085, -3.9022, 2.0", "13.1336, 19.6381, -4.94453, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999984932561256
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.527105, 11.5697, -7.8548, 5.33", "-1.26711, 11.5397, -7.8548, 5.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999984932561256
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.89603, -11.4092, 0.834291, 0.881223", "-5.17162, -26.0472, 0.834291, 0.881223", "-8.44722, -40.6852, 0.834291, 0.881223" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-3.51715, -17.1524, -0.844794, 1.33", "-5.44843, -21.4589, -3.94111, 1.33", "-7.77703, -26.6513, -7.67445, 1.33", "-10.0095, -31.6296, -11.2537, 1.33" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-3.51715, -17.1524, -0.844794, 2.0", "-2.81715, -22.9424, 3.0552, 2.0" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "13.1336, 19.6381, -4.94453, 1.33", "18.2531, 18.434, -5.05276, 1.33", "21.0265, 17.7816, -5.1114, 1.33", "23.7321, 17.1453, -5.16859, 0.67", "31.4184, 15.3374, -5.33109, 1.33" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "13.1336, 19.6381, -4.94453, 1.33", "18.1842, 30.2445, -1.66222, 1.33", "19.4261, 32.8526, -0.855105, 2.0", "20.3998, 34.8974, -0.222287, 1.33", "22.0883, 38.4433, 0.875042, 2.0" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.26711, 11.5397, -7.8548, 1.33", "-9.09548, 13.5093, -11.0135, 1.33", "-14.8298, 14.952, -13.3273, 1.33", "-21.9672, 16.7477, -16.2072, 1.33", "-25.1562, 17.5501, -17.4939, 0.67", "-27.9298, 18.2479, -18.6131, 1.33", "-29.7588, 18.708, -19.3511, 2.0" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.26711, 11.5397, -7.8548, 3.33", "0.532892, 21.3197, -18.3148, 3.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.44722, -40.6852, 0.834291, 0.33", "-11.7228, -55.3231, 0.834291, 0.33", "-14.9984, -69.9611, 0.834291, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-10.0095, -31.6296, -11.2537, 0.33", "-13.6146, -34.5532, -9.74715, 0.33", "-14.75, -35.4529, -9.3917, 0.67", "-16.6079, -36.9353, -8.90333, 0.33", "-18.107, -38.1238, -8.55994, 0.33", "-18.6817, -38.5881, -8.4499, 0.67", "-20.1773, -39.707, -8.183, 0.33", "-21.3849, -40.5648, -8.0747, 0.67", "-23.524, -42.0816, -7.85365, 0.33", "-24.4895, -42.7789, -7.74633, 0.67", "-26.8114, -44.3668, -7.29006, 1.33", "-29.447, -46.1189, -6.61348, 0.33", "-30.2343, -46.6651, -6.33435, 0.67", "-31.7482, -47.7157, -5.71218, 0.33", "-33.1335, -48.6896, -5.11316, 1.33", "-36.1979, -50.9704, -3.72994, 0.33", "-37.6632, -52.1128, -3.15551, 0.67", "-40.166, -54.1737, -2.37511, 0.33", "-42.1998, -55.7264, -1.89789, 1.33", "-44.5862, -57.4812, -1.54305, 0.33", "-45.9549, -58.4346, -1.49002, 0.67", "-48.8, -60.2492, -1.84083, 0.33", "-50.2519, -61.0199, -2.15382, 0.67", "-52.1621, -61.6707, -2.75258, 0.67", "-53.7984, -61.8757, -3.17309, 0.67", "-55.1934, -61.7935, -3.39642, 0.33", "-56.882, -61.5033, -3.62477, 0.67", "-59.0878, -61.1603, -3.81969, 0.33", "-60.8014, -60.944, -3.97813, 0.67", "-64.7734, -60.5865, -4.34133, 0.67", "-67.7403, -60.401, -4.58736, 0.33", "-70.4512, -60.3433, -4.77336, 1.33", "-75.4437, -60.5438, -4.99935, 0.33", "-76.6295, -60.6637, -5.10829, 0.33", "-77.087, -60.7355, -5.1978, 1.33", "-79.0982, -61.1623, -5.78402, 0.33", "-79.7305, -61.2932, -5.95131, 1.33", "-82.6046, -61.823, -6.54826, 0.33", "-85.6253, -62.2173, -7.12186, 1.33", "-90.2267, -62.8815, -7.796, 0.33", "-91.7227, -63.1085, -7.95503, 0.67", "-94.6228, -63.5125, -8.13182, 0.67", "-96.8324, -63.8293, -8.14128, 0.33", "-97.9154, -63.9855, -8.06172, 0.67", "-100.098, -64.3071, -7.68899, 0.33", "-100.815, -64.4259, -7.5462, 0.67", "-102.148, -64.6989, -7.39977, 0.33", "-102.474, -64.7973, -7.40063, 0.67", "-105.21, -65.7639, -7.45691, 0.33", "-105.653, -65.9232, -7.47293, 0.67", "-106.651, -66.2724, -7.56555, 0.33", "-107.636, -66.6279, -7.69501, 0.67", "-110.229, -67.6212, -8.22178, 0.33", "-110.656, -67.7527, -8.37416, 0.67", "-112.379, -68.1604, -9.17916, 0.33", "-113.987, -68.4641, -10.0433, 0.67", "-116.616, -68.83, -11.6042, 0.33", "-117.988, -68.9384, -12.4552, 1.33", "-121.498, -69.0468, -14.761, 0.33", "-121.84, -69.035, -14.971, 1.33", "-123.408, -68.9366, -15.8399, 0.33", "-124.367, -68.862, -16.2754, 1.33", "-125.929, -68.6721, -16.8471, 0.67", "-127.719, -68.427, -17.2776, 1.33", "-130.119, -68.1237, -17.5559, 0.33", "-131.582, -67.8909, -17.7332, 0.33", "-132.045, -67.8027, -17.733, 1.33", "-134.416, -67.3383, -17.5308, 0.33", "-134.872, -67.2444, -17.4575, 0.67", "-138.608, -66.3768, -16.7536, 0.33", "-140.31, -66.0188, -16.3047, 1.33", "-144.466, -64.9317, -14.9902, 0.33", "-145.076, -64.7695, -14.7762, 1.33", "-147.427, -64.0871, -13.6712, 0.33", "-148.914, -63.7018, -12.8696, 0.67", "-152.015, -62.9268, -11.0218, 0.33", "-153.804, -62.5098, -9.94518, 0.67", "-155.233, -62.1735, -9.14593, 0.33", "-158.262, -61.484, -7.32717, 1.33", "-164.502, -60.1163, -3.22642, 0.33", "-164.502, -60.1163, -3.22642, 0.67" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-10.0095, -31.6296, -11.2537, 1.33", "-12.8267, -31.1521, -11.4513, 1.33", "-16.8241, -30.7067, -11.7195, 1.33", "-21.5015, -30.2644, -12.5721, 1.33", "-25.3909, -29.7866, -13.5123, 1.33", "-30.82, -28.9897, -14.9808, 1.33", "-32.6198, -28.7255, -15.4676, 1.33", "-35.7838, -28.1902, -16.4476, 1.33", "-42.7601, -27.108, -19.0493, 1.33", "-45.5497, -26.6217, -20.4244, 0.67", "-46.4385, -26.4088, -20.995, 0.67" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-2.81715, -22.9424, 3.0552, 0.67", "-4.85075, -26.6463, 6.31794, 0.67", "-6.9215, -30.06, 9.19963, 0.67", "-9.86813, -34.2024, 12.7391, 0.67", "-11.7589, -36.6851, 14.7678, 1.33", "-13.5314, -38.8437, 16.4875, 0.67", "-17.1986, -42.6776, 19.3753, 0.67", "-18.3497, -43.7141, 20.0148, 1.33", "-21.9108, -46.4911, 21.4997, 0.33", "-23.9833, -48.108, 22.0986, 0.67", "-25.4752, -49.3143, 22.4801, 1.33", "-31.2043, -54.1434, 23.5559, 0.67", "-34.7985, -57.2643, 24.0098, 0.67", "-36.765, -59.0773, 24.2084, 0.67", "-39.5981, -61.8963, 24.3441, 0.67", "-41.7812, -64.2007, 24.4354, 0.67", "-43.9382, -66.9467, 24.4826, 0.67" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-2.81715, -22.9424, 3.0552, 1.33", "-2.71715, -25.1824, 0.825206, 1.33" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "31.4184, 15.3374, -5.33109, 0.67", "33.3274, 16.0532, -2.56672, 0.67", "34.5924, 16.6753, -0.476846, 1.33", "35.6213, 17.2945, 1.26915, 0.67", "36.182, 17.5895, 2.16795, 0.67", "41.1265, 20.1211, 9.41329, 0.67", "42.0645, 20.6556, 10.6795, 1.33", "44.4863, 22.0222, 13.8489, 0.67", "45.5509, 22.5516, 15.0633, 0.67", "48.1305, 23.9326, 17.5601, 1.33", "49.982, 24.907, 18.9886, 0.67", "52.6459, 26.3084, 20.478, 0.67", "54.7763, 27.3979, 21.7187, 0.67", "57.6404, 28.6181, 23.2926, 1.33", "60.4779, 29.6821, 24.8267, 1.33", "63.2876, 30.7743, 26.4008, 0.33", "65.9035, 31.655, 27.9642, 0.67", "67.6608, 32.1561, 29.062, 0.67", "72.0035, 33.493, 31.8823, 0.67", "75.2596, 34.3555, 33.8528, 0.67", "81.9586, 37.336, 40.6528, 0.67", "88.7574, 39.3083, 47.7159, 0.67", "94.7825, 40.2701, 55.6389, 0.67", "101.174, 41.5514, 63.2227, 0.67" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "31.4184, 15.3374, -5.33109, 0.67", "33.6914, 15.705, -6.38784, 0.67", "34.8782, 15.9351, -6.96167, 0.67", "38.36, 16.7785, -8.40284, 0.33", "42.8485, 17.6349, -9.7266, 0.67", "49.1081, 18.6738, -11.0668, 1.33", "51.279, 19.0531, -11.4224, 0.33", "52.569, 19.3113, -11.5798, 0.67", "56.1645, 20.0022, -11.8571, 0.67", "63.5201, 21.1859, -12.0026, 0.67", "68.2765, 21.7888, -11.6163, 0.67", "70.845, 22.0854, -11.1901, 0.67", "72.029, 22.1972, -10.9858, 0.33", "73.6988, 22.2988, -10.6793, 0.67", "75.6849, 22.4332, -10.3066, 0.33", "82.7522, 23.1185, -8.7231, 0.67", "85.3715, 23.2419, -8.10729, 0.33", "87.0034, 23.2702, -7.66538, 0.67", "88.919, 23.3626, -7.06733, 0.33", "92.0984, 23.5956, -5.66752, 0.33", "93.2657, 23.6801, -5.00846, 0.67", "95.6061, 23.8533, -3.34284, 0.67", "98.398, 24.1236, -0.674947, 0.33", "101.052, 24.4283, 2.32783, 0.67", "104.461, 24.7715, 6.63648, 0.33", "105.165, 24.828, 7.60284, 0.33", "106.445, 24.9858, 9.46736, 0.67", "110.154, 25.6351, 15.2076, 0.33", "111.467, 25.7806, 17.3241, 0.67", "112.666, 25.8282, 19.4456, 1.33", "121.465, 27.5228, 23.8852, 1.33", "129.683, 29.9244, 29.0527, 1.33", "138.133, 30.495, 34.3692, 1.33", "146.484, 29.1562, 39.7048, 1.33", "154.831, 28.43, 45.1642, 1.33", "163.546, 26.5035, 49.6743, 1.33" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "22.0883, 38.4433, 0.875042, 1.33", "23.4542, 37.816, 3.04576, 1.33", "25.4293, 36.909, 6.1846, 1.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "22.0883, 38.4433, 0.875042, 1.33", "24.7385, 40.0373, 1.08505, 1.33", "26.3818, 41.2111, 1.168, 0.67", "28.6941, 43.2267, 1.2591, 0.67", "31.0544, 45.3419, 1.4511, 1.33", "33.3642, 47.4703, 1.66236, 1.33", "37.9465, 51.9218, 2.10445, 1.33", "40.7327, 54.7006, 2.46311, 1.33", "43.1773, 57.3176, 2.74473, 0.67", "46.5889, 61.3653, 3.09277, 0.67", "47.8401, 62.9924, 3.17395, 0.67", "49.2977, 64.9352, 3.33164, 1.33" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-29.7588, 18.708, -19.3511, 0.67", "-32.2266, 19.2428, -22.3219, 0.67", "-36.1565, 20.0045, -26.8067, 0.67", "-39.4979, 20.6651, -30.3703, 0.67", "-41.686, 21.0124, -32.5816, 0.67", "-43.0199, 21.1654, -33.9073, 0.67", "-44.5199, 21.2387, -35.3888, 0.33", "-45.0435, 21.2156, -35.9204, 1.33", "-46.0465, 20.8674, -36.7958, 0.33", "-47.2323, 20.3606, -37.9315, 0.33", "-48.4978, 19.8614, -39.1545, 2.0", "-51.4717, 18.8264, -41.992, 0.33", "-52.1916, 18.5546, -42.7133, 1.33", "-54.5688, 17.649, -45.1076, 0.33", "-57.0308, 16.7176, -47.4182, 1.33", "-58.5499, 16.1798, -48.6609, 1.33", "-60.3773, 15.5297, -49.8363, 0.33", "-60.965, 15.3192, -50.0713, 0.67", "-63.1921, 14.6067, -50.4109, 0.33", "-67.2909, 13.4537, -49.506, 0.67", "-69.1031, 12.9774, -48.8177, 0.33", "-70.1515, 12.8087, -48.4205, 1.33", "-71.5929, 12.6556, -47.8572, 0.33", "-73.727, 12.6011, -47.0917, 0.67", "-76.1595, 12.6254, -46.1053, 0.33", "-76.9238, 12.6652, -45.8255, 0.67", "-79.9239, 12.912, -44.3889, 0.33", "-81.2918, 12.9991, -43.571, 1.33", "-83.7635, 13.1142, -41.7051, 0.33", "-86.6031, 13.294, -39.2132, 0.33", "-87.5977, 13.3492, -38.3257, 0.67", "-90.3533, 13.4772, -35.9234, 0.33", "-92.0143, 13.5151, -34.4982, 1.33", "-95.8721, 13.6491, -31.6122, 0.33", "-97.1453, 13.6195, -30.8356, 0.33", "-99.8699, 13.4764, -29.5366, 1.33", "-102.421, 13.1558, -28.7698, 0.33", "-103.146, 12.9814, -28.7331, 0.67", "-104.794, 12.2968, -28.8905, 0.33", "-106.727, 11.2194, -29.2244, 0.33", "-108.837, 9.71993, -29.4997, 1.33", "-111.561, 7.45616, -29.5072, 0.33", "-113.31, 5.85708, -29.5201, 0.67", "-116.653, 2.65367, -29.5663, 0.33", "-116.889, 2.40935, -29.5722, 0.67", "-119.42, -0.255989, -29.684, 0.33", "-121.43, -2.38542, -29.8272, 0.67" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-29.7588, 18.708, -19.3511, 1.33", "-31.2689, 22.3495, -16.7891, 1.33", "-33.0149, 27.6261, -13.4001, 1.33", "-34.1216, 30.8127, -11.1825, 1.33", "-35.2677, 33.5735, -9.1335, 1.33", "-37.1454, 37.5238, -6.18101, 1.33", "-38.6421, 40.4582, -3.89083, 1.33", "-39.9708, 42.7985, -1.99352, 1.33", "-42.2904, 46.5295, 0.925352, 0.67", "-44.413, 49.8807, 3.60521, 0.67", "-45.6808, 51.7757, 5.30306, 0.67", "-47.9258, 54.5075, 8.37447, 0.67", "-48.6866, 55.1998, 9.23047, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "0.532892, 21.3197, -18.3148, 1.33", "0.995539, 29.5427, -29.4936, 1.33", "0.355624, 31.1323, -33.1302, 0.67", "-0.388241, 32.0103, -35.9228, 0.67", "-1.49343, 33.3148, -40.0718, 0.67", "-3.06669, 35.1717, -45.9779, 0.67", "-4.79156, 37.2076, -52.4533, 1.33", "-7.89201, 37.0408, -57.9758, 0.67", "-8.43186, 36.9277, -58.8748, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.532892, 21.3197, -18.3148, 3.33", "0.310844, 22.5492, -16.9378, 3.33", "-0.247709, 25.6419, -13.474, 3.33", "-1.27574, 31.3342, -7.09874, 2.0" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-46.4385, -26.4088, -20.995, 0.67", "-48.4177, -25.3251, -17.6466, 0.67", "-49.2512, -25.0728, -16.5875, 0.33", "-49.7701, -25.0642, -16.1684, 0.67", "-51.2935, -25.039, -14.9379, 0.33", "-55.8404, -24.9637, -11.2653, 0.33", "-57.1376, -24.9422, -10.2175, 0.67", "-59.6526, -25.5264, -8.98825, 0.33", "-63.3013, -26.8134, -7.38328, 0.33" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-46.4385, -26.4088, -20.995, 0.33", "-47.7261, -26.8886, -22.4829, 0.33", "-50.7536, -28.0167, -25.9812, 0.67", "-51.6044, -28.3337, -26.9644, 0.67", "-52.8247, -28.7885, -28.3745, 1.33" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-43.9382, -66.9467, 24.4826, 0.33", "-46.3785, -65.8586, 24.4298, 0.33", "-49.1191, -64.6364, 24.3706, 0.33", "-58.2002, -60.4496, 24.3076, 0.33", "-67.5382, -56.8855, 24.6223, 0.33" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-43.9382, -66.9467, 24.4826, 0.67", "-45.1648, -70.7824, 26.1946, 0.67", "-46.3556, -74.5061, 27.8566, 0.67", "-47.324, -77.5344, 29.2082, 0.33", "-50.5924, -85.1889, 34.7512, 0.33" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-2.71715, -25.1824, 0.825206, 0.67", "-0.201676, -28.7034, 1.59071, 0.67", "0.491387, -29.8115, 1.8583, 1.33", "2.40524, -32.8967, 2.43044, 0.67", "4.08703, -35.4559, 2.83956, 1.33", "6.41299, -38.8664, 3.20983, 0.67", "9.78774, -43.6198, 3.42078, 0.67", "11.2208, -45.5145, 3.28381, 1.33", "13.403, -48.33, 2.95456, 0.67", "14.5314, -49.6971, 2.69848, 0.67", "16.073, -51.3876, 2.27213, 0.67", "17.7539, -53.0746, 1.6201, 1.33", "18.9481, -54.1429, 1.16672, 0.33", "19.8867, -55.0266, 0.822853, 1.33", "23.2564, -58.3815, -0.141462, 0.67", "24.538, -59.7359, -0.429425, 0.33", "25.2537, -60.5098, -0.464848, 1.33", "27.3629, -62.8389, -0.272762, 0.33", "27.9999, -63.5273, -0.21257, 1.33", "29.1623, -64.7632, -0.0957127, 0.33", "30.1825, -65.845, 0.021825, 1.33", "33.4667, -69.2995, 0.309151, 0.33", "34.5616, -70.4297, 0.377167, 1.33", "37.0487, -72.963, 0.464624, 0.33", "37.5745, -73.4949, 0.467217, 1.33", "39.4393, -75.3163, 0.369948, 0.33", "40.4791, -76.2092, 0.246594, 2.0", "42.3253, -77.5589, -0.260596, 0.33", "43.2941, -78.2296, -0.508585, 0.67", "44.4165, -78.9328, -0.669727, 0.33", "46.005, -79.7285, -0.901574, 0.67", "47.1372, -80.0764, -1.11876, 0.33", "49.1598, -80.4861, -1.66646, 0.67" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-2.71715, -25.1824, 0.825206, 0.67", "-0.324925, -27.3525, 1.74043, 0.67", "0.68805, -28.2561, 2.12748, 0.33", "3.04434, -30.3717, 2.80314, 0.67", "6.52394, -33.3979, 3.88881, 0.67", "7.88412, -34.497, 4.3209, 0.33", "10.625, -36.667, 5.20507, 0.67", "15.2418, -40.2845, 6.49156, 1.33", "17.931, -42.3138, 7.22914, 0.67", "20.9678, -44.6896, 7.88488, 0.67", "22.6301, -46.0124, 8.15339, 0.67", "23.3716, -46.6881, 8.15155, 0.67", "25.2082, -48.5723, 7.66298, 0.67", "26.4943, -50.0068, 7.10675, 0.67", "29.1205, -52.9592, 5.27128, 0.67", "29.9053, -53.8827, 4.54082, 0.67", "32.0508, -56.3436, 2.48676, 2.0", "32.8602, -57.1269, 1.70991, 0.67", "34.9242, -58.8517, -0.262324, 1.33", "39.3934, -62.0652, -4.23278, 1.33", "40.6019, -62.846, -5.06409, 0.33", "42.0974, -63.8285, -5.96038, 1.33", "44.3735, -65.3694, -7.24736, 0.67", "45.135, -65.8811, -7.66319, 1.33", "46.5731, -66.8488, -8.41159, 0.67", "50.0883, -69.0616, -9.90148, 0.67", "55.6713, -72.3452, -12.2943, 0.67", "58.2432, -73.828, -13.3905, 0.33", "59.2259, -74.3869, -13.7833, 0.33", "59.5057, -74.5383, -13.9037, 1.33", "62.3972, -75.9321, -15.1056, 0.33", "63.3179, -76.2738, -15.4905, 0.33", "63.9376, -76.4682, -15.6596, 0.67", "64.9257, -76.8071, -15.8057, 0.33", "66.3835, -77.4462, -16.1445, 1.33", "68.7177, -78.6402, -16.8044, 0.33", "69.3434, -79.0023, -16.9907, 1.33", "71.0201, -79.9825, -17.5647, 0.33", "71.5367, -80.3036, -17.8386, 0.67", "74.4045, -82.1152, -19.6189, 0.33", "75.3876, -82.7323, -20.2767, 0.67", "76.6037, -83.4729, -21.1889, 0.33", "77.5045, -83.9391, -21.8477, 1.33", "80.876, -85.4873, -24.2695, 0.33", "81.7057, -85.7948, -24.8146, 1.33", "82.8819, -86.0824, -25.4787, 0.33", "83.9468, -86.2635, -25.998, 1.33", "86.5319, -86.513, -27.0112, 0.33", "86.5319, -86.513, -27.0112, 0.67", "88.3483, -86.3887, -27.2954, 0.33", "90.9069, -86.2066, -27.7419, 0.67", "93.9029, -85.946, -28.1925, 0.33", "95.0901, -85.8331, -28.2934, 0.67", "97.6838, -85.507, -28.0805, 0.33", "102.553, -84.7507, -27.2152, 0.67" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "25.4293, 36.909, 6.1846, 0.67", "31.6834, 36.8555, 9.64688, 0.67", "39.8985, 36.7851, 14.1948, 0.67", "42.2809, 36.7647, 15.5137, 1.33", "44.4311, 36.7463, 16.7041, 0.67" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "25.4293, 36.909, 6.1846, 0.67", "28.2886, 39.8802, 6.18568, 0.67", "30.8297, 42.5207, 6.18664, 0.33" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "49.2977, 64.9352, 3.33164, 0.67", "48.8504, 66.9935, 3.33164, 0.67", "48.0028, 70.7886, 3.33164, 0.33", "47.7184, 71.8042, 3.33164, 0.67", "47.3486, 73.1245, 3.33164, 0.33", "47.258, 73.4482, 3.33164, 0.67", "46.6837, 75.499, 3.33164, 0.33", "46.596, 75.8182, 3.33164, 0.67", "46.0183, 77.38, 3.33164, 0.33", "44.7454, 87.2298, 4.49825, 0.33", "43.0205, 96.7421, 7.05588, 0.33", "41.2946, 106.523, 8.22088, 0.33", "41.0218, 116.465, 9.26311, 0.33", "40.7047, 126.459, 9.12045, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "49.2977, 64.9352, 3.33164, 0.67", "51.234, 66.7792, 1.10754, 0.67", "54.4769, 69.9504, -2.66813, 0.67", "55.7801, 71.1532, -3.94777, 0.67", "57.6247, 72.771, -5.72337, 0.67", "62.0625, 76.473, -9.67177, 2.0", "63.5331, 77.7337, -10.9413, 0.67", "65.6512, 79.6714, -12.7764, 1.33", "68.7708, 82.5992, -15.3645, 0.33", "71.573, 85.322, -17.4619, 1.33", "73.7344, 87.4723, -18.8024, 0.67", "76.4287, 90.2121, -20.2162, 1.33", "78.4758, 92.4071, -21.3086, 0.67", "79.8408, 93.9852, -22.102, 1.33", "81.4546, 96.0617, -22.9875, 2.0", "82.7948, 97.9364, -23.7302, 0.67", "84.4003, 100.35, -24.7529, 0.33", "86.7044, 103.844, -26.2569, 0.33", "87.6559, 105.405, -26.922, 1.33", "89.167, 108.024, -27.9608, 0.67", "91.778, 112.952, -29.6811, 1.33", "92.6059, 114.701, -30.2743, 0.33", "92.9659, 115.593, -30.5379, 0.67", "93.6298, 117.47, -31.246, 0.33", "93.7341, 117.757, -31.3739, 0.67" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-48.6866, 55.1998, 9.23047, 0.67", "-51.6893, 56.4625, 9.77072, 0.67", "-53.5616, 57.3905, 10.0593, 0.67", "-57.9809, 59.8854, 10.7087, 0.67", "-59.4469, 60.7213, 10.9111, 0.67", "-63.9833, 63.361, 11.4362, 0.67", "-66.6374, 64.6962, 11.6241, 0.67", "-68.5845, 65.5421, 11.793, 1.33", "-71.2644, 66.6304, 12.0315, 0.67", "-72.8379, 67.1817, 12.1507, 0.67", "-76.1069, 68.1581, 12.4787, 0.67", "-81.8572, 69.8956, 13.1541, 0.67", "-87.2871, 71.4386, 13.8009, 0.67", "-88.294, 71.7296, 13.9198, 0.67", "-92.6832, 73.2274, 14.4305, 0.67", "-95.1434, 74.2343, 14.7987, 0.67", "-99.507, 76.2253, 15.5277, 0.33", "-102.694, 78.0712, 16.0842, 0.33", "-103.947, 78.8708, 16.2172, 0.67", "-106.443, 80.6454, 16.5282, 0.33", "-108.471, 82.3362, 16.8861, 1.33", "-117.25, 87.0629, 16.1119, 1.33", "-126.269, 90.8087, 13.9603, 1.33", "-134.27, 96.0634, 11.0679, 1.33", "-142.394, 101.424, 8.7744, 1.33", "-149.874, 107.388, 5.86276, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-48.6866, 55.1998, 9.23047, 0.67", "-46.8753, 58.426, 12.2694, 0.67", "-46.3957, 59.5639, 13.1055, 0.67", "-46.0564, 60.3686, 13.6969, 0.33", "-45.1633, 62.4875, 15.2539, 0.67", "-44.5214, 64.0103, 16.3728, 0.67", "-43.4597, 66.5287, 18.2235, 0.67", "-43.0919, 67.7403, 18.6874, 1.33" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-8.43186, 36.9277, -58.8748, 0.67", "-11.7493, 34.8787, -69.6515, 0.67", "-12.9025, 34.1665, -73.3976, 1.33", "-13.6812, 33.6855, -75.9273, 0.33", "-13.6812, 33.6855, -75.9273, 1.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-8.43186, 36.9277, -58.8748, 1.33", "-8.84994, 39.5429, -60.2642, 1.33", "-9.69773, 42.1064, -61.7794, 0.33", "-10.2508, 43.4753, -62.6041, 1.33", "-11.5453, 46.7354, -64.7421, 0.33", "-12.3892, 48.9693, -66.2973, 0.33", "-13.4202, 51.9573, -68.2454, 1.33", "-14.2112, 54.6466, -70.0433, 0.33", "-14.3516, 55.2514, -70.4481, 0.67", "-15.0473, 59.0924, -72.7315, 0.33", "-15.374, 61.8841, -74.1014, 1.33", "-15.4256, 65.4798, -75.5882, 0.33", "-15.2147, 69.1176, -76.7073, 1.33", "-15.0014, 70.8486, -77.373, 0.67", "-14.6654, 73.1906, -78.298, 0.33", "-14.4166, 74.8418, -78.9465, 1.33", "-14.1359, 76.9787, -79.8379, 0.33", "-13.8249, 79.8495, -81.1315, 1.33", "-13.3312, 87.3029, -84.4049, 0.33", "-13.3218, 89.3434, -85.4867, 0.67", "-13.4346, 91.1241, -86.5676, 0.67", "-13.6686, 92.8526, -87.7592, 0.33", "-14.2247, 95.2274, -89.5457, 0.33", "-14.5057, 96.0634, -90.2197, 0.67", "-16.3403, 100.669, -94.0489, 0.33", "-17.0218, 102.3, -95.6294, 1.33", "-18.0653, 104.755, -98.2894, 0.33", "-18.4449, 105.684, -99.2875, 0.33", "-19.1274, 107.271, -100.84, 0.67", "-20.3408, 110.266, -103.113, 0.33", "-20.7076, 111.277, -103.637, 0.33", "-21.6218, 113.653, -104.51, 1.33", "-23.1267, 117.232, -105.714, 0.33", "-24.3401, 119.824, -106.557, 1.33", "-26.2558, 123.133, -107.794, 0.33", "-26.6794, 123.683, -108.023, 0.67", "-28.7562, 126.111, -109.167, 0.33", "-31.9613, 129.293, -110.979, 1.33", "-33.8555, 130.689, -112.278, 0.33", "-36.8655, 132.395, -114.747, 1.33", "-38.9281, 133.187, -116.594, 0.33" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.27574, 31.3342, -7.09874, 0.67", "-4.76669, 38.012, -9.24886, 0.67", "-5.62766, 39.5658, -9.79803, 0.67", "-8.60223, 44.7315, -11.5003, 1.33", "-11.1024, 49.0734, -12.931, 0.67", "-14.0415, 54.1777, -14.613, 0.67", "-15.1586, 56.1177, -15.2523, 0.67", "-18.6163, 62.2177, -16.5076, 0.67", "-21.6579, 67.295, -17.5471, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-1.27574, 31.3342, -7.09874, 2.0", "-0.300206, 35.9935, 2.76665, 2.0", "0.0901882, 37.858, 6.71461, 3.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-52.8247, -28.7885, -28.3745, 0.67", "-54.0788, -30.8688, -32.1117, 0.67", "-54.5325, -31.5704, -33.2883, 0.33", "-55.29, -32.6172, -35.099, 1.33", "-56.4171, -34.0436, -37.4637, 0.67", "-57.4316, -35.2821, -39.5206, 0.33", "-57.5627, -35.433, -39.7793, 0.67", "-58.1665, -36.0485, -40.8496, 0.33", "-59.2443, -37.1735, -42.9627, 0.67", "-59.9675, -37.9754, -44.4641, 0.33", "-60.6523, -38.8812, -46.1271, 1.33", "-61.8163, -40.7553, -49.4883, 0.33", "-61.9293, -40.9808, -49.8869, 1.33", "-62.7849, -43.11, -53.5814, 0.33", "-62.9833, -43.717, -54.5998, 1.33", "-63.4534, -45.577, -57.7559, 0.33", "-63.5188, -45.9286, -58.319, 0.67", "-63.6327, -47.66, -60.9209, 0.33", "-63.6485, -48.0368, -61.4747, 0.67" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-52.8247, -28.7885, -28.3745, 1.33", "-54.1981, -28.2067, -28.3948, 1.33", "-57.5602, -26.9366, -28.4372, 0.67", "-59.168, -26.5169, -28.4462, 0.33", "-60.3561, -26.2913, -28.4258, 0.67", "-61.6833, -26.1258, -28.3828, 0.67", "-63.3571, -26.0287, -28.1502, 1.33", "-64.2557, -26.1058, -27.8734, 1.33", "-66.2933, -26.4246, -26.9971, 0.33", "-66.9215, -26.5417, -26.6398, 0.67", "-69.2716, -27.0741, -25.1271, 0.67", "-72.2589, -27.9275, -23.0556, 0.67", "-74.5453, -28.701, -21.4239, 0.67", "-76.1496, -29.2874, -20.3733, 0.33", "-78.6045, -30.2044, -18.9494, 0.67", "-81.1453, -31.1258, -17.8121, 1.33", "-84.3234, -32.3087, -16.9402, 0.33", "-85.6091, -32.7875, -16.8527, 0.67", "-88.7952, -33.9507, -17.1148, 0.33", "-90.4582, -34.5614, -17.3807, 1.33", "-93.1036, -35.364, -18.1939, 0.67", "-95.2028, -35.8808, -19.0446, 0.33", "-96.1707, -36.0723, -19.4774, 0.33", "-97.4589, -36.3157, -20.0037, 1.33", "-99.2538, -36.7486, -20.948, 1.33", "-102.613, -37.7299, -23.0408, 0.33", "-103.314, -37.9696, -23.5001, 0.67", "-104.462, -38.3349, -24.2496, 0.33", "-105.31, -38.5769, -24.8286, 0.67", "-109.828, -39.8341, -28.0111, 0.33", "-110.643, -40.0312, -28.5736, 0.67", "-112.053, -40.3349, -29.397, 0.33", "-112.985, -40.5179, -29.8593, 0.67", "-114.841, -40.7895, -30.6382, 0.33", "-115.852, -40.8819, -30.9219, 0.67", "-117.633, -40.9924, -31.0831, 0.33", "-118.684, -41.0543, -31.1483, 0.67", "-120.624, -41.1347, -31.1959, 0.33", "-120.957, -41.1283, -31.15, 0.67", "-122.465, -41.0196, -30.7894, 0.33", "-123.612, -40.8656, -30.4751, 0.67", "-125.539, -40.5527, -29.9026, 0.33", "-127.662, -40.2168, -29.257, 2.0", "-133.011, -39.2409, -27.6191, 0.33", "-134.249, -39.002, -27.1708, 1.33", "-136.35, -38.4513, -26.3198, 0.67", "-137.253, -38.153, -25.8653, 0.67", "-138.7, -37.4765, -25.043, 0.33", "-139.811, -36.7601, -24.3664, 0.67", "-142.698, -34.3355, -22.5599, 0.67", "-144.795, -32.2312, -21.0498, 0.67", "-146.607, -30.1699, -19.6217, 0.67", "-149.042, -27.1672, -17.6416, 0.33", "-149.93, -25.9753, -16.8986, 0.67", "-150.694, -24.9103, -16.271, 1.33", "-152.951, -21.5146, -14.6659, 0.33", "-153.129, -21.2463, -14.531, 0.67" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-67.5382, -56.8855, 24.6223, 0.33", "-76.6973, -52.8974, 25.0758, 0.33", "-86.0895, -49.5223, 25.704, 0.33", "-95.0125, -45.1934, 26.985, 0.33", "-104.714, -42.8526, 27.6069, 0.33", "-114.237, -39.8079, 27.3953, 0.33", "-123.899, -37.6572, 25.9696, 0.33", "-133.268, -34.6704, 24.1553, 0.33", "-142.957, -32.2037, 24.3587, 0.33", "-152.262, -28.7731, 23.0747, 0.33" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-67.5382, -56.8855, 24.6223, 0.33", "-76.77, -53.0999, 23.9568, 0.33", "-86.5208, -51.3021, 22.6568, 0.33", "-96.4339, -50.2762, 21.8337, 0.33", "-106.431, -50.0358, 21.8609, 0.33", "-116.246, -49.3479, 20.0774, 0.33", "-126.045, -47.9047, 18.6981, 0.33", "-135.87, -46.187, 17.9839, 0.33", "-145.384, -43.7031, 16.1638, 0.33" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "44.4311, 36.7463, 16.7041, 0.33", "46.4452, 37.4898, 19.506, 0.33", "47.5217, 37.8872, 21.0037, 0.67", "48.9646, 38.4198, 23.011, 0.67", "56.0935, 40.792, 29.6104, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "44.4311, 36.7463, 16.7041, 0.67", "45.648, 40.3056, 19.4624, 0.67", "46.7165, 43.431, 21.8844, 0.67", "48.0338, 47.284, 24.8704, 0.67", "48.766, 49.4255, 26.53, 0.67", "49.4041, 51.292, 27.9764, 0.67", "50.4014, 54.2092, 30.2372, 0.67", "54.1152, 60.6966, 36.8796, 0.67", "59.3058, 66.4977, 43.157, 0.67", "63.7961, 71.9397, 50.2437, 0.67", "68.8801, 77.8436, 56.5125, 0.67", "75.0538, 83.5616, 61.9153, 0.67", "81.7441, 89.6248, 66.2138, 0.67", "87.7267, 95.2224, 71.9475, 0.67", "93.9147, 101.194, 77.052, 0.67" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "30.8297, 42.5207, 6.18664, 0.33", "32.5493, 43.2034, 7.95848, 0.33", "32.9572, 43.4869, 8.52118, 0.67", "34.5465, 44.7579, 10.6636, 0.33", "36.1451, 46.2316, 12.7342, 0.67", "37.5318, 47.718, 14.4881, 0.67", "39.6833, 50.0239, 17.2091, 0.67", "42.0283, 52.8942, 20.3839, 0.67", "43.5465, 54.9726, 22.4939, 0.67", "44.5592, 56.5838, 23.8918, 0.67", "45.5582, 58.1574, 25.1413, 0.67", "50.5045, 64.347, 31.2424, 0.67", "54.4447, 70.6671, 37.9157, 0.67", "57.7469, 77.1741, 44.7533, 0.67" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "30.8297, 42.5207, 6.18664, 0.33", "32.3562, 49.5603, 12.4817, 0.33", "32.8179, 51.783, 13.9127, 0.33", "33.0246, 52.7785, 14.5537, 0.33", "33.4091, 54.6297, 15.7455, 0.67", "33.8142, 56.5801, 17.0013, 0.67", "34.647, 60.5897, 19.5828, 0.33", "35.4113, 63.8162, 20.2447, 0.33", "36.0827, 71.6001, 26.4866, 0.33", "36.9535, 79.2197, 32.9041, 0.33", "37.7378, 86.2957, 39.9265, 0.33" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "93.7341, 117.757, -31.3739, 0.33", "92.7348, 120.327, -28.7803, 0.33", "92.5587, 120.78, -28.3233, 0.67", "91.5736, 123.313, -25.7665, 0.67" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "93.7341, 117.757, -31.3739, 0.67", "95.1309, 119.285, -32.4956, 0.67", "96.1819, 120.419, -33.41, 0.33", "97.3668, 121.732, -34.3907, 1.33", "99.3364, 124.091, -35.7426, 0.33", "99.9498, 124.862, -36.0976, 1.33", "102.583, 128.443, -37.1524, 0.33", "102.842, 128.834, -37.203, 0.67", "105.2, 132.689, -36.6048, 0.33", "107.071, 135.755, -35.2648, 0.67", "107.661, 136.729, -34.5055, 0.67", "109.444, 139.292, -31.6089, 0.33", "110.462, 140.568, -29.8417, 0.33", "112.325, 142.691, -26.6954, 0.67", "112.928, 143.339, -25.6973, 0.67", "115.023, 145.474, -22.8033, 0.33", "116.982, 147.604, -20.3386, 0.67", "118.649, 149.643, -18.5979, 0.33", "119.361, 150.59, -17.8797, 0.67", "121.379, 153.517, -16.2742, 0.33", "122.445, 155.371, -15.487, 0.67", "123.348, 157.376, -15.1016, 0.33", "124.122, 160.133, -14.9224, 1.33" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-43.0919, 67.7403, 18.6874, 0.67", "-45.8517, 72.8201, 22.5386, 0.67", "-46.5663, 74.0657, 23.4455, 0.67", "-47.709, 76.0576, 24.8958, 0.67", "-49.6924, 79.5148, 27.413, 0.33", "-50.5797, 81.0615, 28.539, 0.33", "-51.9368, 83.4272, 30.2615, 0.33", "-52.5048, 84.6692, 30.8613, 0.33", "-57.2902, 92.8396, 34.0777, 0.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-43.0919, 67.7403, 18.6874, 0.67", "-43.3913, 72.3399, 15.6053, 0.67", "-43.5663, 75.3455, 13.6012, 0.67", "-43.7872, 78.275, 11.7043, 0.67", "-44.0493, 80.8397, 10.1095, 0.67", "-44.6285, 85.8886, 7.2493, 0.67", "-44.9152, 87.6726, 6.22933, 0.33", "-45.2017, 89.1415, 5.43747, 0.67", "-45.527, 90.4267, 4.75373, 0.67", "-45.8005, 91.7548, 4.11393, 0.33", "-46.2477, 94.777, 2.9204, 0.67", "-46.2567, 99.4801, 1.74167, 0.33", "-46.0304, 101.405, 1.35862, 0.67", "-45.2434, 105.965, 0.44504, 0.33", "-44.6263, 108.25, 0.0150152, 0.33", "-43.3184, 111.496, -0.480491, 0.67", "-41.9689, 113.646, -0.580683, 0.33", "-40.7967, 114.992, -0.38428, 1.33" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-13.6812, 33.6855, -75.9273, 0.67", "-13.4238, 32.5733, -77.1708, 0.67", "-13.3249, 31.8175, -78.0958, 0.33", "-12.9989, 29.7584, -81.1352, 1.33", "-12.3865, 27.3678, -85.641, 0.33", "-12.2224, 26.7649, -87.3374, 1.33", "-11.914, 25.5113, -91.5147, 0.33", "-11.7849, 24.4816, -95.7849, 1.33", "-11.9238, 22.9856, -103.41, 0.67", "-12.2239, 22.0749, -108.996, 0.67", "-13.3092, 20.3135, -121.631, 0.67", "-13.4235, 20.1711, -122.724, 1.33", "-14.4351, 19.1746, -130.358, 0.67", "-15.0668, 18.6476, -133.95, 0.67", "-15.8029, 18.0355, -137.023, 0.67", "-16.3481, 17.4425, -139.003, 0.33", "-16.5956, 17.1229, -139.883, 1.33", "-17.8665, 15.2264, -145.468, 0.33", "-17.9649, 15.0739, -146.103, 0.67", "-18.7584, 13.9908, -152.239, 0.33", "-18.8862, 13.8737, -153.302, 0.67", "-19.6568, 13.3601, -160.248, 0.33", "-20.0767, 13.1435, -164.19, 0.67", "-21.2558, 12.7435, -175.315, 0.33", "-21.6955, 12.6358, -179.522, 0.33", "-22.395, 12.5902, -186.451, 0.33", "-22.6259, 12.6039, -189.001, 0.67", "-23.3631, 12.718, -199.909, 0.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-13.6812, 33.6855, -75.9273, 0.67", "-15.3179, 34.6049, -76.8797, 0.67", "-17.3787, 35.6586, -78.6701, 0.67", "-19.0442, 36.321, -80.203, 0.33", "-19.7518, 36.5892, -80.9377, 0.67", "-21.0908, 37.1213, -82.4798, 0.33", "-23.9625, 38.2707, -85.7479, 1.33", "-26.9008, 39.3458, -89.3184, 0.33", "-28.0758, 39.6859, -90.932, 0.67", "-30.3832, 40.1896, -94.4113, 0.67", "-32.3338, 40.3801, -97.6177, 1.33", "-33.5155, 40.3671, -99.6588, 0.33", "-33.9602, 40.3338, -100.454, 0.67", "-36.263, 39.9958, -105.104, 0.33", "-36.5624, 39.9741, -105.779, 1.33", "-38.9272, 39.5415, -111.04, 0.33", "-39.2331, 39.4685, -111.724, 0.67", "-40.6931, 39.0546, -115.381, 0.33", "-42.3615, 38.6698, -119.495, 1.33", "-44.2415, 38.4014, -123.976, 0.33", "-45.5523, 38.2484, -127.19, 0.33", "-46.5286, 38.1584, -129.623, 1.33", "-49.8201, 37.6138, -137.942, 0.33" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-21.6579, 67.295, -17.5471, 0.67", "-23.6789, 70.3669, -18.1533, 0.67", "-24.5227, 71.7204, -18.6471, 0.67", "-25.3686, 73.3681, -19.2214, 0.33", "-25.7344, 74.1971, -19.4838, 0.67", "-26.4531, 76.1241, -20.0674, 0.33", "-26.6797, 76.7907, -20.2387, 2.0", "-28.1528, 81.828, -21.396, 0.33", "-28.9044, 84.971, -22.0129, 0.67", "-29.3625, 87.1079, -22.4677, 0.33", "-29.8781, 89.5431, -23.0042, 0.67", "-30.3914, 92.0936, -23.5583, 0.33", "-30.9019, 94.6374, -24.0849, 1.33", "-31.5959, 98.144, -24.7642, 0.33", "-32.2562, 100.919, -25.4037, 1.33", "-33.0002, 103.856, -26.1465, 0.33", "-33.2687, 104.837, -26.4264, 0.67", "-33.6225, 106.246, -26.866, 0.33", "-33.7298, 106.687, -26.9971, 0.67", "-34.4165, 109.397, -27.784, 0.33", "-34.7448, 110.657, -28.0767, 1.33", "-35.9936, 114.98, -29.0332, 0.33", "-36.636, 116.861, -29.4675, 0.67", "-36.7524, 117.159, -29.5352, 0.67", "-37.2793, 118.356, -29.7999, 0.33", "-37.8594, 119.395, -30.0118, 0.67", "-38.8155, 120.863, -30.4109, 0.33", "-39.6718, 122.072, -30.7965, 0.67", "-40.3056, 123.003, -31.2134, 0.33", "-41.057, 124.296, -31.9605, 0.67", "-41.8294, 125.81, -33.0002, 0.67", "-43.0158, 128.029, -34.6346, 0.33", "-43.4726, 128.885, -35.3513, 0.67", "-44.5181, 130.88, -37.0742, 0.33", "-45.4852, 132.722, -38.7749, 2.0", "-46.4826, 134.596, -40.6178, 0.67", "-47.2833, 136.148, -42.1668, 0.33", "-48.9829, 138.961, -44.8587, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.6579, 67.295, -17.5471, 0.33", "-25.1314, 67.2546, -17.1541, 0.33", "-27.4348, 67.2279, -16.8935, 1.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "0.0901882, 37.858, 6.71461, 2.0", "-1.57981, 42.868, 7.27461, 2.0" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "0.0901882, 37.858, 6.71461, 1.33", "5.16496, 41.9111, 4.34638, 1.33", "15.1623, 49.8956, -0.319061, 2.0", "19.2901, 53.1923, -2.24537, 2.0" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "56.0935, 40.792, 29.6104, 0.67", "62.1974, 43.4511, 37.0717, 0.67", "67.3058, 46.6768, 45.0403, 0.67", "72.2274, 48.6289, 53.5237, 0.67", "75.8145, 50.9751, 62.5585, 0.67", "77.6908, 51.5337, 72.365, 0.67", "78.5054, 52.5686, 82.2779, 0.67", "78.6612, 54.0402, 92.1678, 0.67", "78.0129, 57.3443, 101.584, 0.67", "77.4452, 61.4787, 110.672, 0.67", "78.5838, 64.6203, 120.097, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "56.0935, 40.792, 29.6104, 0.67", "63.1843, 42.4832, 36.4558, 0.67", "71.0794, 44.3181, 42.3126, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.57981, 42.868, 7.27461, 0.67", "-0.369064, 45.2932, 7.6532, 0.67", "1.57921, 48.7939, 8.38757, 0.67", "4.12614, 53.4243, 9.46226, 1.33", "5.38607, 55.7291, 10.0333, 0.67", "9.68292, 63.8505, 12.2081, 1.33", "12.4397, 69.3951, 13.7018, 1.33", "14.9801, 74.3463, 15.2615, 1.33", "16.2302, 76.6897, 16.0338, 0.67", "19.7115, 83.4214, 18.286, 1.33", "21.3176, 86.8672, 19.5677, 0.67", "22.4942, 90.3423, 20.8564, 0.67", "23.3658, 94.2681, 22.1363, 0.67", "23.6842, 96.6599, 22.9425, 0.67", "23.8486, 98.903, 23.6524, 0.67", "23.7755, 105.034, 25.1846, 0.67", "23.2434, 113.091, 26.6104, 0.67", "23.014, 115.464, 26.9067, 0.67", "22.4335, 120.229, 27.2322, 0.67", "22.041, 123.15, 27.3492, 0.67", "21.5203, 127.354, 27.2175, 0.67", "21.3104, 129.976, 26.8442, 0.33", "21.2508, 132.057, 26.4863, 0.33", "21.2826, 133.728, 26.088, 0.67", "21.4409, 136.31, 25.3804, 0.67", "21.688, 138.684, 24.9373, 0.67", "22.198, 142.501, 24.3894, 0.67", "22.4547, 144.171, 24.148, 0.67", "23.0144, 148.419, 23.466, 0.67", "23.693, 153.471, 22.5784, 0.67", "24.3269, 157.037, 21.8852, 0.67", "26.8891, 166.633, 23.0504, 0.67", "27.7235, 176.482, 24.569, 0.67", "27.4603, 186.009, 27.5962, 0.67", "27.0596, 195.039, 31.8745, 0.67", "28.1836, 203.681, 36.7787, 0.67" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.57981, 42.868, 7.27461, 2.0", "-4.03476, 45.5287, 9.19561, 2.0", "-5.10647, 46.6903, 10.0343, 2.0" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.2901, 53.1923, -2.24537, 1.33", "20.1944, 59.1959, -3.60453, 1.33", "20.4728, 61.0441, -4.02295, 1.33", "21.2075, 65.922, -5.12725, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "19.2901, 53.1923, -2.24537, 1.33", "22.5482, 54.5979, 0.311096, 1.33", "26.1619, 56.1569, 3.14665, 1.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "71.0794, 44.3181, 42.3126, 0.67", "79.0392, 45.7656, 48.1901, 0.67", "86.7994, 48.8041, 53.7172, 0.67", "95.5364, 49.9387, 58.4475, 0.67", "104.465, 52.3916, 62.2254, 0.67", "113.48, 55.7253, 64.9859, 0.67", "122.613, 59.5982, 66.2455, 0.67", "131.789, 63.5622, 66.5365, 0.67", "141.416, 66.2164, 67.0589, 0.67", "151.007, 69.0416, 67.2385, 0.67", "160.839, 70.7012, 68.0031, 0.67", "170.436, 72.8082, 69.8607, 0.67", "180.016, 75.6765, 69.8571, 0.67", "189.55, 78.6396, 70.4237, 0.67" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "71.0794, 44.3181, 42.3126, 0.67", "78.108, 46.3869, 49.1183, 0.67", "84.219, 47.8327, 56.9007, 0.67", "90.6471, 48.4039, 64.5396, 0.67", "96.2995, 47.1353, 72.6907, 0.67", "103.328, 44.8988, 79.4443, 0.67", "110.477, 41.1434, 85.3415, 0.67", "117.705, 36.6318, 90.5766, 0.67", "123.628, 30.3563, 95.6302, 0.67", "128.842, 24.5883, 101.919, 0.67", "132.195, 17.3216, 107.915, 0.67", "136.477, 9.5279, 112.489, 0.67", "141.131, 2.03183, 117.195, 0.67", "144.801, -5.35764, 122.846, 0.67", "147.984, -13.1077, 128.305, 0.67", "151.907, -20.9985, 133.032, 0.67", "153.795, -29.058, 138.643, 0.67", "154.402, -37.7803, 143.496, 0.67" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.10647, 46.6903, 10.0343, 0.67", "-6.00913, 47.3859, 11.7629, 0.67", "-7.63024, 48.7962, 14.8912, 0.67", "-9.13358, 50.3489, 18.0281, 0.67", "-9.78816, 51.064, 19.3776, 0.67", "-11.065, 52.2943, 21.7371, 0.67", "-15.6358, 56.6981, 30.1827, 0.67", "-16.5711, 57.6796, 32.1629, 0.67", "-17.4728, 58.823, 34.4187, 0.33", "-17.9128, 59.3687, 35.6922, 0.67", "-18.933, 60.4219, 38.3965, 0.33", "-21.3825, 64.4404, 47.22, 0.33", "-22.0366, 68.153, 56.4822, 0.33", "-22.4097, 72.75, 65.355, 0.33", "-22.4057, 77.0688, 74.3744, 0.33", "-20.8506, 80.2782, 83.7168, 0.33", "-19.0225, 83.9733, 92.8275, 0.33", "-18.1366, 88.1113, 101.888, 0.33", "-16.4482, 92.7032, 110.609, 0.33", "-15.1736, 97.5007, 119.29, 0.33", "-13.701, 100.993, 128.545, 0.33", "-11.7078, 104.115, 137.833, 0.33", "-11.2566, 107.248, 147.319, 0.33", "-9.63305, 109.782, 156.856, 0.33", "-9.407, 112.264, 166.54, 0.33", "-11.0027, 115.414, 175.896, 0.33" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.10647, 46.6903, 10.0343, 1.33", "-10.547, 54.5883, 4.28833, 1.33", "-13.8473, 59.3795, 0.802799, 1.33", "-15.1117, 61.2151, -0.532583, 0.67", "-16.9647, 63.9051, -2.48956, 1.33" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "21.2075, 65.922, -5.12725, 0.67", "24.4351, 65.8064, -5.97715, 0.67", "25.9546, 65.9947, -6.64767, 0.67", "27.6512, 66.5279, -7.56539, 0.67", "29.5767, 67.2689, -8.96527, 0.67", "31.3685, 68.0328, -10.2479, 0.67", "32.6333, 68.6005, -11.164, 0.67", "36.3461, 70.7627, -14.0851, 1.33", "38.0001, 71.9506, -15.3999, 0.67", "41.1391, 74.5533, -18.3118, 0.67", "42.7524, 76.0143, -19.9227, 0.67", "45.2218, 78.4367, -22.5163, 1.33", "46.1663, 79.3095, -23.6292, 0.33", "48.3458, 80.9923, -26.0636, 1.33", "51.7362, 83.4597, -29.995, 0.33", "52.3217, 83.8877, -30.6807, 1.33", "53.9234, 84.8932, -32.7131, 0.33", "57.7545, 86.8559, -37.5636, 1.33", "59.7192, 87.6016, -39.8963, 0.33", "59.9389, 87.6532, -40.1508, 0.67", "60.9875, 87.8319, -41.1964, 0.67", "64.0281, 88.2334, -44.0542, 1.33", "66.6094, 88.5422, -46.5023, 0.33", "67.9518, 88.6892, -47.6794, 1.33", "71.7742, 89.1057, -51.223, 0.33", "73.8728, 89.4293, -53.2127, 1.33", "75.134, 89.7004, -54.4524, 0.67", "78.5147, 90.6612, -58.019, 1.33", "79.9732, 91.1775, -59.7991, 0.33", "80.6082, 91.4403, -60.5992, 1.33", "82.3056, 92.1809, -62.7607, 0.33", "83.8967, 92.8242, -64.7326, 1.33", "86.6745, 93.8913, -68.0312, 0.67", "89.3182, 94.9867, -70.909, 0.33", "90.6992, 95.659, -72.3842, 1.33", "93.0634, 96.9057, -74.9087, 0.33", "94.5551, 97.8441, -76.576, 0.67", "95.9643, 98.8851, -78.2275, 0.33", "97.0969, 99.8245, -79.5749, 1.33", "98.3834, 101.021, -81.1841, 0.33", "100.6, 103.148, -84.2713, 1.33", "102.96, 105.2, -87.3718, 0.33", "104.05, 106.005, -88.7703, 0.33", "104.707, 106.382, -89.5042, 1.33", "106.075, 106.954, -90.9942, 0.33", "109.058, 107.991, -94.2654, 1.33", "111.254, 108.74, -96.5836, 0.33", "112.448, 109.228, -97.9622, 0.67", "113.45, 109.815, -99.4445, 0.33", "115.88, 111.829, -104.061, 1.33", "117.178, 113.379, -107.41, 0.33", "117.449, 113.947, -108.428, 0.67", "117.855, 115.758, -111.496, 0.33", "118.102, 117.697, -114.466, 1.33", "118.127, 118.8, -116.067, 0.33", "118.061, 119.668, -117.129, 1.33", "117.896, 120.963, -118.674, 0.33", "117.649, 123.297, -121.59, 1.33", "117.569, 124.954, -123.544, 0.67" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "21.2075, 65.922, -5.12725, 0.33", "21.2575, 67.8916, -5.60539, 0.33", "21.195, 70.1771, -6.16949, 0.67", "21.2477, 71.8376, -6.87493, 0.33", "21.2746, 72.4417, -7.15631, 0.67", "21.5002, 74.8256, -8.39, 0.33", "21.6102, 76.1472, -9.07296, 1.33", "21.708, 78.2706, -10.1947, 0.33", "21.9644, 82.2893, -12.1862, 1.33", "22.0862, 84.0654, -12.9693, 0.67", "22.4281, 88.9067, -14.7266, 0.67", "22.5965, 90.7821, -15.2452, 0.33", "22.929, 93.3146, -15.7221, 1.33", "23.4367, 96.9106, -16.2255, 0.33", "23.6724, 98.6435, -16.4355, 1.33", "24.1023, 101.426, -16.8473, 0.33", "24.6031, 104.012, -17.2703, 1.33", "25.3687, 107.207, -17.9245, 0.67", "26.2628, 110.751, -18.8461, 1.33", "27.0186, 114.384, -19.9051, 0.33", "27.2813, 115.694, -20.269, 1.33", "27.8934, 118.955, -21.0601, 0.33", "28.1784, 120.708, -21.4722, 1.33", "28.7438, 124.482, -22.1372, 0.33", "29.3222, 128.04, -22.376, 0.33", "29.681, 130.33, -22.3665, 1.33", "30.1359, 133.462, -22.3838, 0.33", "30.4674, 136.124, -22.419, 0.67", "30.8652, 138.899, -22.5007, 0.33", "30.985, 139.636, -22.5236, 1.33", "31.1201, 140.371, -22.5898, 1.33", "31.5342, 142.857, -22.9615, 0.33", "31.7272, 143.884, -23.1064, 0.67", "32.0834, 145.952, -23.3362, 0.33", "32.1663, 146.403, -23.4443, 0.67", "32.4164, 147.673, -23.77, 0.33", "32.5893, 148.627, -24.0062, 0.67", "32.8538, 150.264, -24.3841, 0.33", "33.0208, 151.413, -24.6692, 2.0", "33.7014, 156.091, -25.8544, 0.33", "33.8141, 157.054, -26.089, 0.67", "33.9792, 159.346, -26.6032, 0.33", "33.9901, 159.681, -26.6612, 0.67", "33.9937, 160.727, -26.7968, 0.33", "33.9521, 163.056, -26.9742, 0.67", "33.8464, 164.537, -26.9872, 0.33", "33.6713, 166.474, -27.0026, 0.67", "33.2726, 170.787, -26.9952, 0.33", "33.2218, 171.252, -26.9899, 0.67", "33.0399, 172.732, -26.9595, 0.33", "32.943, 173.47, -27.0157, 0.67", "32.7817, 175.329, -27.2961, 0.33", "32.7537, 175.769, -27.3882, 0.67", "32.6418, 178.368, -28.0478, 0.33", "32.6005, 180.024, -28.4316, 1.33", "32.4542, 185.105, -29.5067, 0.33", "32.4265, 186.762, -29.7089, 1.33", "32.4372, 188.987, -29.8961, 0.33", "32.4719, 190.039, -29.9491, 1.33", "32.6555, 192.87, -29.9251, 0.33", "32.8559, 194.975, -29.6759, 0.67", "33.3902, 200.485, -28.3991, 0.33", "33.5144, 202.194, -27.9696, 0.67", "33.6112, 203.945, -27.5799, 0.33", "33.6434, 204.995, -27.3535, 0.67", "33.7536, 208.616, -26.6802, 0.33", "33.7609, 210.6, -26.3674, 1.33", "33.5293, 213.437, -26.0215, 0.33", "33.1593, 216.21, -25.6626, 0.67", "32.6062, 219.218, -25.3762, 0.33", "32.3207, 220.623, -25.3367, 0.67", "31.9535, 222.472, -25.4763, 0.33", "31.8103, 224.03, -25.542, 1.33" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "26.1619, 56.1569, 3.14665, 0.67", "28.0177, 58.1836, 5.02852, 0.67", "31.7819, 62.2944, 8.84571, 1.33", "33.4599, 64.127, 10.5475, 1.33", "37.2266, 68.2406, 14.3672, 1.33", "39.8645, 71.1216, 17.0422, 1.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "26.1619, 56.1569, 3.14665, 0.67", "30.2896, 56.133, 5.17008, 0.67", "33.4093, 56.1405, 6.73255, 0.67", "36.0259, 56.1816, 7.94712, 0.67", "41.9352, 56.2305, 10.508, 0.67", "43.4768, 56.251, 11.1266, 0.67", "48.7595, 56.5518, 13.2672, 0.67", "51.9749, 56.7908, 14.4634, 0.33", "55.6126, 57.259, 15.7552, 0.67", "57.4977, 57.5972, 16.3357, 0.33", "60.013, 58.0548, 16.8531, 0.67", "64.867, 58.93, 17.5461, 0.67", "67.573, 59.4121, 17.6627, 0.33", "69.2314, 59.6518, 17.6182, 0.67", "71.4508, 59.8013, 17.4016, 0.33", "74.1149, 59.8611, 16.9825, 2.0", "75.7551, 59.7449, 16.5812, 0.67", "77.1639, 59.5131, 16.1492, 0.67", "80.6765, 58.815, 15.1451, 0.33", "82.8175, 58.2478, 14.3594, 0.67", "84.8154, 57.5943, 13.5911, 0.67", "86.5846, 56.9436, 12.9292, 0.67", "88.6448, 56.1026, 12.2309, 0.33", "89.7286, 55.6214, 12.0213, 0.67", "92.433, 54.4469, 11.9328, 0.33", "94.6334, 53.4335, 12.0753, 1.33", "95.8511, 52.8918, 12.3975, 0.67", "96.4306, 52.6834, 12.6541, 1.33", "100.071, 51.5549, 14.5413, 0.33", "100.704, 51.3853, 14.8871, 0.67", "102.48, 50.9218, 15.8972, 0.33", "106.059, 50.0646, 17.986, 0.33", "107.762, 49.667, 19.0085, 0.67", "112.669, 48.4972, 21.8689, 0.67", "113.256, 48.3629, 22.1892, 0.67", "114.318, 48.1262, 22.6839, 0.67", "117.168, 47.5243, 23.7407, 0.33", "119.074, 47.087, 24.3029, 1.33", "121.621, 46.5752, 25.0998, 0.33", "122.73, 46.3717, 25.523, 0.67", "124.731, 45.9027, 26.5496, 0.33", "125.014, 45.8346, 26.6967, 0.67", "127.035, 45.2343, 27.7233, 0.33", "127.832, 44.9791, 28.2675, 0.67", "130.208, 44.1281, 30.4685, 0.33", "132.237, 43.2586, 32.7853, 0.33", "141.599, 43.6301, 36.2816, 0.33", "150.365, 45.1787, 40.838, 0.33", "158.662, 48.2151, 45.5211, 0.33", "167.278, 51.4269, 49.4532, 0.33", "176.095, 55.8181, 51.1748, 0.33", "184.559, 61.0887, 51.9414, 0.33", "193.137, 66.2234, 51.7142, 0.33", "202.295, 70.2227, 52.09, 0.33" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-16.9647, 63.9051, -2.48956, 0.67", "-21.91, 66.0127, -2.79144, 0.67", "-25.3993, 67.7189, -2.97729, 0.67", "-27.2355, 68.9418, -2.63715, 0.33", "-29.3662, 70.9274, -1.67255, 0.67", "-29.3662, 70.9274, -1.67255, 0.67", "-30.3585, 71.9032, -1.13681, 0.33", "-32.1458, 73.828, -0.0829429, 0.67", "-36.0896, 79.0126, 1.95729, 0.67", "-38.1157, 82.0551, 2.69014, 0.67", "-39.6717, 84.703, 2.82217, 0.67", "-41.9397, 88.5244, 2.28754, 0.67", "-44.0391, 92.056, 0.791847, 1.33", "-45.9303, 94.7457, -1.5071, 0.67", "-47.4725, 96.6564, -3.80466, 1.33", "-48.8459, 98.1985, -6.06616, 0.67", "-50.1428, 99.7043, -8.31635, 0.67", "-51.7818, 101.566, -11.0334, 0.33", "-54.0545, 103.555, -13.8729, 0.67", "-55.4171, 104.616, -15.2968, 1.33", "-58.0512, 106.535, -17.3639, 0.33", "-59.9223, 107.899, -18.5439, 0.67", "-60.9243, 108.69, -19.0709, 0.33", "-62.4508, 109.944, -19.5156, 1.33", "-65.438, 112.675, -19.8, 0.67", "-67.8484, 114.924, -19.7478, 0.33", "-69.447, 116.482, -19.5396, 0.33", "-70.1552, 117.184, -19.4266, 1.33", "-73.2859, 120.417, -18.815, 0.67", "-75.3265, 122.673, -18.3553, 1.33", "-77.216, 124.756, -17.8845, 0.67", "-78.8084, 126.526, -17.5836, 0.33", "-80.1641, 128.025, -17.4217, 2.0", "-81.6271, 129.543, -17.395, 0.67", "-84.5478, 132.285, -17.667, 0.67", "-85.6714, 133.246, -17.8602, 1.33", "-87.5276, 134.746, -18.3577, 0.33", "-89.8872, 136.536, -19.093, 0.33", "-92.4756, 138.459, -20.0089, 0.33", "-93.0548, 138.883, -20.2298, 0.67", "-95.0698, 140.287, -21.0382, 0.33", "-97.3102, 141.977, -21.9474, 1.33", "-99.309, 143.446, -22.7624, 0.33", "-99.5656, 143.637, -22.8465, 0.67", "-101.261, 145.0, -23.3719, 0.33", "-102.581, 146.084, -23.7149, 2.0", "-104.388, 147.528, -24.0242, 0.33", "-106.922, 149.496, -24.2874, 0.33", "-108.678, 150.849, -24.5793, 0.67", "-110.12, 151.911, -24.711, 0.33", "-110.713, 152.353, -24.7135, 0.67", "-113.096, 154.204, -24.5013, 0.33", "-113.361, 154.393, -24.4647, 0.67", "-115.682, 155.983, -24.1026, 0.33", "-118.21, 157.548, -23.8505, 0.67", "-120.29, 158.735, -23.6324, 0.33", "-121.482, 159.41, -23.5135, 0.67", "-123.801, 160.76, -23.2788, 0.33", "-124.663, 161.256, -23.1899, 0.67", "-126.291, 162.165, -23.0186, 0.33", "-127.447, 162.812, -23.0066, 1.33", "-130.248, 164.297, -22.9706, 0.33", "-131.804, 165.21, -22.9452, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-16.9647, 63.9051, -2.48956, 0.67", "-21.1821, 63.8674, -4.00723, 0.67", "-24.0745, 63.8415, -5.04806, 0.67", "-27.5819, 63.8102, -6.31024, 0.67", "-29.8154, 63.7902, -7.11395, 0.67" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "39.8645, 71.1216, 17.0422, 0.67", "41.9813, 69.6385, 20.6647, 0.67", "44.5196, 67.8602, 25.0086, 0.67", "49.0475, 64.6879, 32.7575, 0.67", "51.8794, 62.7039, 37.6039, 0.67", "55.81, 58.9588, 46.0018, 0.67", "61.1223, 55.8991, 53.9023, 0.67", "66.1591, 52.4561, 61.8254, 0.67", "71.3092, 47.6239, 68.9054, 0.67", "75.92, 42.6219, 76.2348, 0.67", "81.7323, 36.357, 81.4279, 0.67", "88.2184, 32.3807, 87.9179, 0.67", "94.5723, 28.452, 94.5657, 0.67", "99.9998, 23.5983, 101.42, 0.67", "105.099, 18.5609, 108.394, 0.67", "109.915, 13.2807, 115.388, 0.67", "115.378, 7.29775, 121.25, 0.67", "120.1, 2.11587, 128.381, 0.67", "125.83, -1.85531, 135.55, 0.67", "131.129, -6.69029, 142.518, 0.67", "135.077, -11.4669, 150.366, 0.67", "139.851, -17.8527, 156.401, 0.67" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "39.8645, 71.1216, 17.0422, 0.33", "42.0836, 72.2317, 17.843, 0.33", "46.0952, 74.2386, 19.2906, 0.67", "47.2308, 74.8065, 19.7004, 0.33", "49.027, 75.7052, 20.3486, 0.67", "53.2501, 77.8179, 21.8725, 0.67", "55.3163, 78.8515, 22.6181, 0.67" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-29.8154, 63.7902, -7.11395, 0.67", "-32.8015, 65.3923, -7.31621, 0.67", "-35.7974, 66.9837, -7.46576, 0.67", "-37.2586, 67.8311, -7.527, 0.67", "-38.6205, 68.7782, -7.61517, 0.67", "-41.7723, 71.2771, -7.65716, 1.33", "-44.301, 73.4097, -7.60017, 0.67", "-47.2645, 75.8656, -7.40272, 0.67", "-49.0587, 77.3884, -7.246, 1.33", "-51.9472, 79.7937, -7.14337, 0.67", "-54.8707, 82.2859, -7.17526, 1.33", "-57.7092, 84.6198, -7.49867, 0.33", "-59.6141, 85.9155, -7.86207, 0.67", "-61.3841, 86.7569, -8.37289, 0.33", "-65.344, 87.9406, -9.87265, 1.33", "-67.9428, 88.336, -10.9729, 0.67", "-70.9159, 88.6187, -12.4457, 0.67", "-73.5668, 88.8347, -13.8358, 1.33", "-75.0735, 89.0488, -14.7193, 0.33", "-77.1659, 89.3839, -16.1018, 1.33", "-79.2279, 89.8427, -17.849, 0.33", "-80.0572, 90.084, -18.688, 0.67", "-80.7411, 90.3869, -19.4317, 0.33", "-83.2156, 91.7693, -22.2332, 0.67", "-85.2107, 92.8911, -23.9622, 0.33", "-88.5688, 94.6476, -25.9809, 1.33", "-91.3882, 95.7159, -26.7752, 0.33", "-92.6771, 96.0303, -26.8556, 1.33", "-94.3433, 96.3414, -26.7156, 0.67", "-99.1263, 97.028, -25.7401, 0.33", "-100.137, 97.127, -25.4574, 2.0", "-104.711, 97.4702, -24.0279, 0.33", "-105.673, 97.5267, -23.771, 0.33", "-109.228, 97.7576, -22.8657, 0.67", "-110.691, 97.8804, -22.5814, 0.67", "-112.969, 98.1696, -22.3614, 0.33", "-115.282, 98.5533, -22.2141, 0.33", "-117.628, 99.0746, -22.1645, 0.67", "-120.376, 99.7374, -22.1534, 0.67", "-122.632, 100.279, -22.1912, 0.67", "-124.68, 100.734, -22.2923, 0.33", "-127.061, 101.194, -22.4903, 0.33", "-127.528, 101.233, -22.4986, 0.67", "-129.929, 101.301, -22.4049, 0.33", "-129.929, 101.301, -22.4049, 1.33", "-132.483, 101.331, -22.0108, 0.33", "-133.408, 101.37, -21.8465, 0.67", "-137.288, 101.819, -21.0102, 0.67", "-138.716, 102.085, -20.6736, 0.67", "-140.602, 102.58, -20.1245, 0.67", "-142.515, 103.232, -19.5206, 0.33", "-143.172, 103.505, -19.2942, 0.67", "-145.099, 104.303, -18.6538, 0.33", "-145.694, 104.543, -18.4697, 0.67", "-149.115, 105.79, -17.435, 0.33", "-150.608, 106.369, -16.9963, 1.33", "-154.436, 107.803, -15.7436, 0.33", "-155.776, 108.296, -15.3094, 0.33", "-156.072, 108.396, -15.2006, 0.67", "-158.758, 109.226, -14.0955, 0.67", "-160.625, 109.725, -13.1792, 0.67", "-163.13, 110.166, -11.7265, 0.67", "-165.637, 110.448, -9.97536, 0.33", "-168.126, 110.708, -8.98451, 0.67", "-169.436, 110.825, -8.73752, 0.33", "-171.571, 111.014, -8.66115, 0.33", "-172.769, 111.127, -8.75686, 1.33", "-175.55, 111.511, -9.40648, 0.33", "-184.826, 113.111, -12.3111, 0.33", "-185.87, 113.334, -12.7176, 0.67", "-187.128, 113.666, -13.2616, 0.33", "-187.769, 113.862, -13.5761, 0.67", "-190.333, 114.782, -14.8635, 0.33", "-191.256, 115.165, -15.3369, 0.67", "-193.403, 116.183, -16.2273, 0.33", "-195.127, 117.009, -16.9749, 0.67", "-198.234, 118.444, -18.3121, 0.33", "-199.497, 119.04, -18.8457, 0.67", "-202.717, 120.566, -20.1206, 0.33", "-203.052, 120.721, -20.2587, 0.67", "-205.468, 121.828, -21.1809, 0.33", "-206.28, 122.189, -21.496, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-29.8154, 63.7902, -7.11395, 0.67", "-33.8291, 65.9482, -7.0008, 0.67", "-35.3424, 66.7283, -6.96481, 0.33", "-36.8702, 67.4747, -6.93379, 1.33", "-40.2685, 69.1776, -6.87586, 0.33", "-41.1859, 69.698, -6.86298, 0.67", "-42.2941, 70.4996, -6.76602, 0.33", "-43.3043, 71.366, -6.67141, 0.67", "-44.2712, 72.3331, -6.5731, 0.33", "-46.0283, 74.1543, -6.35195, 0.33", "-48.5677, 76.7016, -6.12549, 0.33", "-52.5452, 80.4339, -6.27404, 0.67", "-55.3516, 83.0116, -6.65211, 0.67", "-56.6199, 84.0578, -6.92021, 0.33", "-59.1949, 86.0132, -7.628, 0.67", "-61.6929, 87.6048, -8.46869, 0.33", "-65.6965, 89.8374, -10.0167, 0.67", "-67.2687, 90.6893, -10.7815, 0.33", "-70.2145, 92.5638, -12.2923, 0.33", "-71.6047, 93.6133, -13.0081, 0.33", "-74.5029, 96.3609, -14.0838, 0.33", "-75.6329, 97.5896, -14.1701, 0.33", "-78.2846, 100.372, -13.7246, 1.33", "-80.0142, 102.02, -13.4478, 0.33", "-82.0777, 103.658, -13.1427, 0.67", "-87.254, 106.937, -12.4263, 0.67", "-90.0845, 108.3, -12.0503, 0.67", "-94.3358, 109.795, -11.5649, 0.33", "-99.0323, 110.829, -11.2738, 1.33", "-104.669, 111.333, -11.5254, 0.33", "-105.861, 111.329, -11.715, 1.33", "-108.814, 111.112, -12.5196, 0.33", "-109.526, 111.025, -12.7416, 0.67", "-113.054, 110.477, -13.7887, 0.33", "-114.874, 110.205, -14.1884, 0.33", "-117.854, 109.904, -14.8827, 0.33", "-119.519, 109.891, -15.1761, 0.67", "-121.353, 110.062, -15.3112, 0.33", "-122.838, 110.307, -15.3899, 0.67", "-124.803, 110.799, -15.4119, 0.33", "-125.813, 111.104, -15.4478, 0.67", "-127.911, 111.877, -15.5752, 0.33", "-129.852, 112.841, -15.7343, 0.33", "-133.504, 115.377, -16.1252, 1.33", "-134.58, 116.275, -16.2932, 0.33", "-134.911, 116.606, -16.3549, 0.67", "-136.711, 118.577, -16.616, 0.33", "-137.811, 119.818, -16.8062, 0.67", "-140.368, 122.736, -17.1963, 0.33", "-141.565, 124.116, -17.2924, 0.67", "-143.493, 126.18, -17.4528, 0.33", "-145.137, 127.92, -17.6768, 1.33", "-148.222, 131.092, -18.2428, 0.33", "-149.063, 131.956, -18.4637, 0.33", "-149.517, 132.427, -18.6122, 0.67", "-151.548, 134.617, -19.6598, 0.33", "-153.23, 136.448, -20.6922, 0.67", "-154.649, 138.119, -21.7339, 0.33", "-155.757, 139.575, -22.6049, 1.33", "-157.417, 141.853, -24.0267, 0.33", "-159.799, 144.977, -26.1762, 0.67" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "55.3163, 78.8515, 22.6181, 0.67", "55.2159, 80.0348, 24.229, 0.67", "54.8017, 84.9156, 30.8736, 0.67", "54.5341, 88.0693, 35.1669, 0.67", "54.4085, 89.549, 37.1814, 0.67", "55.5141, 93.4861, 46.307, 0.67", "54.9712, 96.1621, 55.927, 0.67", "53.5171, 97.3329, 65.7512, 0.67", "51.7029, 96.6831, 75.5638, 0.67", "51.4728, 97.5019, 85.5275, 0.67", "51.4082, 97.7924, 95.5231, 0.67", "52.1493, 98.3024, 105.483, 0.67", "54.3155, 100.304, 115.038, 0.67", "57.4926, 102.925, 124.15, 0.67", "59.1672, 105.1, 133.766, 0.67", "60.0528, 106.078, 143.679, 0.67", "60.2945, 107.528, 153.57, 0.67", "61.1565, 110.388, 163.113, 0.67", "61.5667, 114.092, 172.393, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "55.3163, 78.8515, 22.6181, 0.67", "57.2541, 80.577, 25.7401, 0.67", "57.8956, 81.1892, 26.7878, 0.33", "59.0828, 82.3222, 28.7267, 0.33", "61.0647, 84.2136, 31.9636, 0.67", "62.3195, 85.411, 34.0128, 0.67", "64.4179, 87.4137, 37.44, 0.33", "64.9316, 88.0241, 38.4029, 0.67", "70.2047, 91.5215, 46.1464, 0.67", "74.2474, 94.3835, 54.8335, 0.67", "78.2975, 97.0187, 63.5886, 0.67", "81.3706, 99.3723, 72.8091, 0.67", "85.3333, 102.922, 81.2767, 0.67", "87.9108, 106.203, 90.3644, 0.67", "89.365, 109.701, 99.6194, 0.67", "92.7496, 111.973, 108.751, 0.67", "96.3975, 113.346, 117.96, 0.67", "99.5718, 114.488, 127.374, 0.67", "103.297, 115.584, 136.589, 0.67", "108.542, 115.752, 145.102, 0.67" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_60", "dend_39", "dend_0", "dend_70", "dend_61", "dend_57", "dend_40", "dend_32", "dend_1", "dend_76", "dend_71", "dend_65", "dend_62", "dend_59", "dend_58", "dend_46", "dend_41", "dend_38", "dend_33", "dend_27", "dend_2", "dend_75", "dend_72", "dend_67", "dend_66", "dend_64", "dend_63", "dend_50", "dend_47", "dend_45", "dend_42", "dend_37", "dend_34", "dend_29", "dend_28", "dend_24", "dend_3", "dend_74", "dend_73", "dend_69", "dend_68", "dend_52", "dend_51", "dend_49", "dend_48", "dend_44", "dend_43", "dend_36", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_15", "dend_4", "dend_56", "dend_53", "dend_23", "dend_16", "dend_12", "dend_5", "dend_55", "dend_54", "dend_22", "dend_17", "dend_14", "dend_13", "dend_7", "dend_6", "dend_21", "dend_18", "dend_11", "dend_8", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_60", "dend_39", "dend_0", "dend_70", "dend_61", "dend_57", "dend_40", "dend_32", "dend_1", "dend_76", "dend_71", "dend_65", "dend_62", "dend_59", "dend_58", "dend_46", "dend_41", "dend_38", "dend_33", "dend_27", "dend_2", "dend_75", "dend_72", "dend_67", "dend_66", "dend_64", "dend_63", "dend_50", "dend_47", "dend_45", "dend_42", "dend_37", "dend_34", "dend_29", "dend_28", "dend_24", "dend_3", "dend_74", "dend_73", "dend_69", "dend_68", "dend_52", "dend_51", "dend_49", "dend_48", "dend_44", "dend_43", "dend_36", "dend_35", "dend_31", "dend_30", "dend_26", "dend_25", "dend_15", "dend_4", "dend_56", "dend_53", "dend_23", "dend_16", "dend_12", "dend_5", "dend_55", "dend_54", "dend_22", "dend_17", "dend_14", "dend_13", "dend_7", "dend_6", "dend_21", "dend_18", "dend_11", "dend_8", "dend_20", "dend_19", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_60", "dend_60", "dend_39", "dend_39", "dend_0", "axon_0", "axon_0", "dend_70", "dend_70", "dend_70", "dend_61", "dend_57", "dend_57", "dend_57", "dend_57", "dend_40", "dend_40", "dend_40", "dend_40", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_1", "axon_1", "axon_1", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_2", "dend_2", "dend_2", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_72", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_3", "dend_3", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_15", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_MC_3110386c07_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_60, id: dend_60, parent: soma_0
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_70, id: dend_70, parent: dend_60
create dend_70
public dend_70
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_39
create dend_57
public dend_57
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_32, id: dend_32, parent: dend_0
create dend_32
public dend_32
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_76, id: dend_76, parent: dend_70
create dend_76
public dend_76
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_1
create dend_27
public dend_27
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_2
create dend_24
public dend_24
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_15, id: dend_15, parent: dend_3
create dend_15
public dend_15
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_60, dend_39, dend_0, dend_70, dend_61, dend_57, dend_40, dend_32, dend_1, dend_76, dend_71, dend_65, dend_62, dend_59, dend_58, dend_46, dend_41, dend_38, dend_33, dend_27, dend_2, dend_75, dend_72, dend_67, dend_66, dend_64, dend_63, dend_50, dend_47, dend_45, dend_42, dend_37, dend_34, dend_29, dend_28, dend_24, dend_3, dend_74, dend_73, dend_69, dend_68, dend_52, dend_51, dend_49, dend_48, dend_44, dend_43, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_15, dend_4, dend_56, dend_53, dend_23, dend_16, dend_12, dend_5, dend_55, dend_54, dend_22, dend_17, dend_14, dend_13, dend_7, dend_6, dend_21, dend_18, dend_11, dend_8, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_60, dend_39, dend_0, dend_70, dend_61, dend_57, dend_40, dend_32, dend_1, dend_76, dend_71, dend_65, dend_62, dend_59, dend_58, dend_46, dend_41, dend_38, dend_33, dend_27, dend_2, dend_75, dend_72, dend_67, dend_66, dend_64, dend_63, dend_50, dend_47, dend_45, dend_42, dend_37, dend_34, dend_29, dend_28, dend_24, dend_3, dend_74, dend_73, dend_69, dend_68, dend_52, dend_51, dend_49, dend_48, dend_44, dend_43, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_15, dend_4, dend_56, dend_53, dend_23, dend_16, dend_12, dend_5, dend_55, dend_54, dend_22, dend_17, dend_14, dend_13, dend_7, dend_6, dend_21, dend_18, dend_11, dend_8, dend_20, dend_19, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_49
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_60, dend_60, dend_39, dend_39, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_61, dend_57, dend_57, dend_57, dend_57, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_2, dend_2, dend_2, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_3, dend_3, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_15, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_12, dend_12, dend_12, dend_5, dend_5, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_60(0), soma_0(0.4999984932561256)
    connect dend_39(0), soma_0(0.4999984932561256)
    connect dend_0(0), soma_0(0.4999984932561256)
    connect axon_0(0), soma_0(1.0)
    connect dend_70(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_32(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_76(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_15(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 3.34882, 12.029, -0.642028, 3.69835 ) }
    soma_0 { pt3dadd( 3.08658, 10.8571, -0.568212, 6.33024 ) }
    soma_0 { pt3dadd( 2.82434, 9.68521, -0.494396, 9.66608 ) }
    soma_0 { pt3dadd( 2.5621, 8.5133, -0.42058, 11.4094 ) }
    soma_0 { pt3dadd( 2.29985, 7.34139, -0.346764, 12.0713 ) }
    soma_0 { pt3dadd( 2.03761, 6.16948, -0.272948, 12.6528 ) }
    soma_0 { pt3dadd( 1.77537, 4.99757, -0.199132, 13.2267 ) }
    soma_0 { pt3dadd( 1.51312, 3.82567, -0.125316, 13.3167 ) }
    soma_0 { pt3dadd( 1.25088, 2.65376, -0.0515004, 13.3743 ) }
    soma_0 { pt3dadd( 0.988638, 1.48185, 0.0223156, 13.432 ) }
    soma_0 { pt3dadd( 0.726396, 0.309937, 0.0961315, 13.4121 ) }
    soma_0 { pt3dadd( 0.464153, -0.861972, 0.169947, 12.7316 ) }
    soma_0 { pt3dadd( 0.20191, -2.03388, 0.243763, 11.8873 ) }
    soma_0 { pt3dadd( -0.0603331, -3.20579, 0.317579, 11.0397 ) }
    soma_0 { pt3dadd( -0.322576, -4.3777, 0.391395, 10.1912 ) }
    soma_0 { pt3dadd( -0.584819, -5.54961, 0.465211, 9.43883 ) }
    soma_0 { pt3dadd( -0.847062, -6.72152, 0.539027, 9.02818 ) }
    soma_0 { pt3dadd( -1.1093, -7.89343, 0.612843, 8.43865 ) }
    soma_0 { pt3dadd( -1.37155, -9.06534, 0.686659, 7.05745 ) }
    soma_0 { pt3dadd( -1.63379, -10.2372, 0.760475, 5.04619 ) }
    soma_0 { pt3dadd( -1.89603, -11.4092, 0.834291, 3.06009 ) }
    // Section: dend_60, id: dend_60, parent: soma_0 (entry count 21/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -2.23711, -12.0403, -0.844794, 2.67 ) }
    dend_60 { pt3dadd( -2.70921, -13.9257, -0.844794, 2.67 ) }
    dend_60 { pt3dadd( -3.51715, -17.1524, -0.844794, 2.67 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 24/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.04289, 10.2097, -3.1748, 2.0 ) }
    dend_39 { pt3dadd( 9.54633, 14.085, -3.9022, 2.0 ) }
    dend_39 { pt3dadd( 13.1336, 19.6381, -4.94453, 2.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 27/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.527105, 11.5697, -7.8548, 5.33 ) }
    dend_0 { pt3dadd( -1.26711, 11.5397, -7.8548, 5.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.89603, -11.4092, 0.834291, 0.881223 ) }
    axon_0 { pt3dadd( -5.17162, -26.0472, 0.834291, 0.881223 ) }
    axon_0 { pt3dadd( -8.44722, -40.6852, 0.834291, 0.881223 ) }
    // Section: dend_70, id: dend_70, parent: dend_60 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -3.51715, -17.1524, -0.844794, 1.33 ) }
    dend_70 { pt3dadd( -5.44843, -21.4589, -3.94111, 1.33 ) }
    dend_70 { pt3dadd( -7.77703, -26.6513, -7.67445, 1.33 ) }
    dend_70 { pt3dadd( -10.0095, -31.6296, -11.2537, 1.33 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 36/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -3.51715, -17.1524, -0.844794, 2.0 ) }
    dend_61 { pt3dadd( -2.81715, -22.9424, 3.0552, 2.0 ) }
    // Section: dend_57, id: dend_57, parent: dend_39 (entry count 38/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 13.1336, 19.6381, -4.94453, 1.33 ) }
    dend_57 { pt3dadd( 18.2531, 18.434, -5.05276, 1.33 ) }
    dend_57 { pt3dadd( 21.0265, 17.7816, -5.1114, 1.33 ) }
    dend_57 { pt3dadd( 23.7321, 17.1453, -5.16859, 0.67 ) }
    dend_57 { pt3dadd( 31.4184, 15.3374, -5.33109, 1.33 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 43/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 13.1336, 19.6381, -4.94453, 1.33 ) }
    dend_40 { pt3dadd( 18.1842, 30.2445, -1.66222, 1.33 ) }
    dend_40 { pt3dadd( 19.4261, 32.8526, -0.855105, 2.0 ) }
    dend_40 { pt3dadd( 20.3998, 34.8974, -0.222287, 1.33 ) }
    dend_40 { pt3dadd( 22.0883, 38.4433, 0.875042, 2.0 ) }
    // Section: dend_32, id: dend_32, parent: dend_0 (entry count 48/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.26711, 11.5397, -7.8548, 1.33 ) }
    dend_32 { pt3dadd( -9.09548, 13.5093, -11.0135, 1.33 ) }
    dend_32 { pt3dadd( -14.8298, 14.952, -13.3273, 1.33 ) }
    dend_32 { pt3dadd( -21.9672, 16.7477, -16.2072, 1.33 ) }
    dend_32 { pt3dadd( -25.1562, 17.5501, -17.4939, 0.67 ) }
    dend_32 { pt3dadd( -27.9298, 18.2479, -18.6131, 1.33 ) }
    dend_32 { pt3dadd( -29.7588, 18.708, -19.3511, 2.0 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 55/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.26711, 11.5397, -7.8548, 3.33 ) }
    dend_1 { pt3dadd( 0.532892, 21.3197, -18.3148, 3.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 57/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.44722, -40.6852, 0.834291, 0.33 ) }
    axon_1 { pt3dadd( -11.7228, -55.3231, 0.834291, 0.33 ) }
    axon_1 { pt3dadd( -14.9984, -69.9611, 0.834291, 0.33 ) }
    // Section: dend_76, id: dend_76, parent: dend_70 (entry count 60/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -10.0095, -31.6296, -11.2537, 0.33 ) }
    dend_76 { pt3dadd( -13.6146, -34.5532, -9.74715, 0.33 ) }
    dend_76 { pt3dadd( -14.75, -35.4529, -9.3917, 0.67 ) }
    dend_76 { pt3dadd( -16.6079, -36.9353, -8.90333, 0.33 ) }
    dend_76 { pt3dadd( -18.107, -38.1238, -8.55994, 0.33 ) }
    dend_76 { pt3dadd( -18.6817, -38.5881, -8.4499, 0.67 ) }
    dend_76 { pt3dadd( -20.1773, -39.707, -8.183, 0.33 ) }
    dend_76 { pt3dadd( -21.3849, -40.5648, -8.0747, 0.67 ) }
    dend_76 { pt3dadd( -23.524, -42.0816, -7.85365, 0.33 ) }
    dend_76 { pt3dadd( -24.4895, -42.7789, -7.74633, 0.67 ) }
    dend_76 { pt3dadd( -26.8114, -44.3668, -7.29006, 1.33 ) }
    dend_76 { pt3dadd( -29.447, -46.1189, -6.61348, 0.33 ) }
    dend_76 { pt3dadd( -30.2343, -46.6651, -6.33435, 0.67 ) }
    dend_76 { pt3dadd( -31.7482, -47.7157, -5.71218, 0.33 ) }
    dend_76 { pt3dadd( -33.1335, -48.6896, -5.11316, 1.33 ) }
    dend_76 { pt3dadd( -36.1979, -50.9704, -3.72994, 0.33 ) }
    dend_76 { pt3dadd( -37.6632, -52.1128, -3.15551, 0.67 ) }
    dend_76 { pt3dadd( -40.166, -54.1737, -2.37511, 0.33 ) }
    dend_76 { pt3dadd( -42.1998, -55.7264, -1.89789, 1.33 ) }
    dend_76 { pt3dadd( -44.5862, -57.4812, -1.54305, 0.33 ) }
    dend_76 { pt3dadd( -45.9549, -58.4346, -1.49002, 0.67 ) }
    dend_76 { pt3dadd( -48.8, -60.2492, -1.84083, 0.33 ) }
    dend_76 { pt3dadd( -50.2519, -61.0199, -2.15382, 0.67 ) }
    dend_76 { pt3dadd( -52.1621, -61.6707, -2.75258, 0.67 ) }
    dend_76 { pt3dadd( -53.7984, -61.8757, -3.17309, 0.67 ) }
    dend_76 { pt3dadd( -55.1934, -61.7935, -3.39642, 0.33 ) }
    dend_76 { pt3dadd( -56.882, -61.5033, -3.62477, 0.67 ) }
    dend_76 { pt3dadd( -59.0878, -61.1603, -3.81969, 0.33 ) }
    dend_76 { pt3dadd( -60.8014, -60.944, -3.97813, 0.67 ) }
    dend_76 { pt3dadd( -64.7734, -60.5865, -4.34133, 0.67 ) }
    dend_76 { pt3dadd( -67.7403, -60.401, -4.58736, 0.33 ) }
    dend_76 { pt3dadd( -70.4512, -60.3433, -4.77336, 1.33 ) }
    dend_76 { pt3dadd( -75.4437, -60.5438, -4.99935, 0.33 ) }
    dend_76 { pt3dadd( -76.6295, -60.6637, -5.10829, 0.33 ) }
    dend_76 { pt3dadd( -77.087, -60.7355, -5.1978, 1.33 ) }
    dend_76 { pt3dadd( -79.0982, -61.1623, -5.78402, 0.33 ) }
    dend_76 { pt3dadd( -79.7305, -61.2932, -5.95131, 1.33 ) }
    dend_76 { pt3dadd( -82.6046, -61.823, -6.54826, 0.33 ) }
    dend_76 { pt3dadd( -85.6253, -62.2173, -7.12186, 1.33 ) }
    dend_76 { pt3dadd( -90.2267, -62.8815, -7.796, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_76 { pt3dadd( -91.7227, -63.1085, -7.95503, 0.67 ) }
    dend_76 { pt3dadd( -94.6228, -63.5125, -8.13182, 0.67 ) }
    dend_76 { pt3dadd( -96.8324, -63.8293, -8.14128, 0.33 ) }
    dend_76 { pt3dadd( -97.9154, -63.9855, -8.06172, 0.67 ) }
    dend_76 { pt3dadd( -100.098, -64.3071, -7.68899, 0.33 ) }
    dend_76 { pt3dadd( -100.815, -64.4259, -7.5462, 0.67 ) }
    dend_76 { pt3dadd( -102.148, -64.6989, -7.39977, 0.33 ) }
    dend_76 { pt3dadd( -102.474, -64.7973, -7.40063, 0.67 ) }
    dend_76 { pt3dadd( -105.21, -65.7639, -7.45691, 0.33 ) }
    dend_76 { pt3dadd( -105.653, -65.9232, -7.47293, 0.67 ) }
    dend_76 { pt3dadd( -106.651, -66.2724, -7.56555, 0.33 ) }
    dend_76 { pt3dadd( -107.636, -66.6279, -7.69501, 0.67 ) }
    dend_76 { pt3dadd( -110.229, -67.6212, -8.22178, 0.33 ) }
    dend_76 { pt3dadd( -110.656, -67.7527, -8.37416, 0.67 ) }
    dend_76 { pt3dadd( -112.379, -68.1604, -9.17916, 0.33 ) }
    dend_76 { pt3dadd( -113.987, -68.4641, -10.0433, 0.67 ) }
    dend_76 { pt3dadd( -116.616, -68.83, -11.6042, 0.33 ) }
    dend_76 { pt3dadd( -117.988, -68.9384, -12.4552, 1.33 ) }
    dend_76 { pt3dadd( -121.498, -69.0468, -14.761, 0.33 ) }
    dend_76 { pt3dadd( -121.84, -69.035, -14.971, 1.33 ) }
    dend_76 { pt3dadd( -123.408, -68.9366, -15.8399, 0.33 ) }
    dend_76 { pt3dadd( -124.367, -68.862, -16.2754, 1.33 ) }
    dend_76 { pt3dadd( -125.929, -68.6721, -16.8471, 0.67 ) }
    dend_76 { pt3dadd( -127.719, -68.427, -17.2776, 1.33 ) }
    dend_76 { pt3dadd( -130.119, -68.1237, -17.5559, 0.33 ) }
    dend_76 { pt3dadd( -131.582, -67.8909, -17.7332, 0.33 ) }
    dend_76 { pt3dadd( -132.045, -67.8027, -17.733, 1.33 ) }
    dend_76 { pt3dadd( -134.416, -67.3383, -17.5308, 0.33 ) }
    dend_76 { pt3dadd( -134.872, -67.2444, -17.4575, 0.67 ) }
    dend_76 { pt3dadd( -138.608, -66.3768, -16.7536, 0.33 ) }
    dend_76 { pt3dadd( -140.31, -66.0188, -16.3047, 1.33 ) }
    dend_76 { pt3dadd( -144.466, -64.9317, -14.9902, 0.33 ) }
    dend_76 { pt3dadd( -145.076, -64.7695, -14.7762, 1.33 ) }
    dend_76 { pt3dadd( -147.427, -64.0871, -13.6712, 0.33 ) }
    dend_76 { pt3dadd( -148.914, -63.7018, -12.8696, 0.67 ) }
    dend_76 { pt3dadd( -152.015, -62.9268, -11.0218, 0.33 ) }
    dend_76 { pt3dadd( -153.804, -62.5098, -9.94518, 0.67 ) }
    dend_76 { pt3dadd( -155.233, -62.1735, -9.14593, 0.33 ) }
    dend_76 { pt3dadd( -158.262, -61.484, -7.32717, 1.33 ) }
    dend_76 { pt3dadd( -164.502, -60.1163, -3.22642, 0.33 ) }
    dend_76 { pt3dadd( -164.502, -60.1163, -3.22642, 0.67 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 41/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -10.0095, -31.6296, -11.2537, 1.33 ) }
    dend_71 { pt3dadd( -12.8267, -31.1521, -11.4513, 1.33 ) }
    dend_71 { pt3dadd( -16.8241, -30.7067, -11.7195, 1.33 ) }
    dend_71 { pt3dadd( -21.5015, -30.2644, -12.5721, 1.33 ) }
    dend_71 { pt3dadd( -25.3909, -29.7866, -13.5123, 1.33 ) }
    dend_71 { pt3dadd( -30.82, -28.9897, -14.9808, 1.33 ) }
    dend_71 { pt3dadd( -32.6198, -28.7255, -15.4676, 1.33 ) }
    dend_71 { pt3dadd( -35.7838, -28.1902, -16.4476, 1.33 ) }
    dend_71 { pt3dadd( -42.7601, -27.108, -19.0493, 1.33 ) }
    dend_71 { pt3dadd( -45.5497, -26.6217, -20.4244, 0.67 ) }
    dend_71 { pt3dadd( -46.4385, -26.4088, -20.995, 0.67 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 52/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -2.81715, -22.9424, 3.0552, 0.67 ) }
    dend_65 { pt3dadd( -4.85075, -26.6463, 6.31794, 0.67 ) }
    dend_65 { pt3dadd( -6.9215, -30.06, 9.19963, 0.67 ) }
    dend_65 { pt3dadd( -9.86813, -34.2024, 12.7391, 0.67 ) }
    dend_65 { pt3dadd( -11.7589, -36.6851, 14.7678, 1.33 ) }
    dend_65 { pt3dadd( -13.5314, -38.8437, 16.4875, 0.67 ) }
    dend_65 { pt3dadd( -17.1986, -42.6776, 19.3753, 0.67 ) }
    dend_65 { pt3dadd( -18.3497, -43.7141, 20.0148, 1.33 ) }
    dend_65 { pt3dadd( -21.9108, -46.4911, 21.4997, 0.33 ) }
    dend_65 { pt3dadd( -23.9833, -48.108, 22.0986, 0.67 ) }
    dend_65 { pt3dadd( -25.4752, -49.3143, 22.4801, 1.33 ) }
    dend_65 { pt3dadd( -31.2043, -54.1434, 23.5559, 0.67 ) }
    dend_65 { pt3dadd( -34.7985, -57.2643, 24.0098, 0.67 ) }
    dend_65 { pt3dadd( -36.765, -59.0773, 24.2084, 0.67 ) }
    dend_65 { pt3dadd( -39.5981, -61.8963, 24.3441, 0.67 ) }
    dend_65 { pt3dadd( -41.7812, -64.2007, 24.4354, 0.67 ) }
    dend_65 { pt3dadd( -43.9382, -66.9467, 24.4826, 0.67 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 69/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -2.81715, -22.9424, 3.0552, 1.33 ) }
    dend_62 { pt3dadd( -2.71715, -25.1824, 0.825206, 1.33 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 71/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 31.4184, 15.3374, -5.33109, 0.67 ) }
    dend_59 { pt3dadd( 33.3274, 16.0532, -2.56672, 0.67 ) }
    dend_59 { pt3dadd( 34.5924, 16.6753, -0.476846, 1.33 ) }
    dend_59 { pt3dadd( 35.6213, 17.2945, 1.26915, 0.67 ) }
    dend_59 { pt3dadd( 36.182, 17.5895, 2.16795, 0.67 ) }
    dend_59 { pt3dadd( 41.1265, 20.1211, 9.41329, 0.67 ) }
    dend_59 { pt3dadd( 42.0645, 20.6556, 10.6795, 1.33 ) }
    dend_59 { pt3dadd( 44.4863, 22.0222, 13.8489, 0.67 ) }
    dend_59 { pt3dadd( 45.5509, 22.5516, 15.0633, 0.67 ) }
    dend_59 { pt3dadd( 48.1305, 23.9326, 17.5601, 1.33 ) }
    dend_59 { pt3dadd( 49.982, 24.907, 18.9886, 0.67 ) }
    dend_59 { pt3dadd( 52.6459, 26.3084, 20.478, 0.67 ) }
    dend_59 { pt3dadd( 54.7763, 27.3979, 21.7187, 0.67 ) }
    dend_59 { pt3dadd( 57.6404, 28.6181, 23.2926, 1.33 ) }
    dend_59 { pt3dadd( 60.4779, 29.6821, 24.8267, 1.33 ) }
    dend_59 { pt3dadd( 63.2876, 30.7743, 26.4008, 0.33 ) }
    dend_59 { pt3dadd( 65.9035, 31.655, 27.9642, 0.67 ) }
    dend_59 { pt3dadd( 67.6608, 32.1561, 29.062, 0.67 ) }
    dend_59 { pt3dadd( 72.0035, 33.493, 31.8823, 0.67 ) }
    dend_59 { pt3dadd( 75.2596, 34.3555, 33.8528, 0.67 ) }
    dend_59 { pt3dadd( 81.9586, 37.336, 40.6528, 0.67 ) }
    dend_59 { pt3dadd( 88.7574, 39.3083, 47.7159, 0.67 ) }
    dend_59 { pt3dadd( 94.7825, 40.2701, 55.6389, 0.67 ) }
    dend_59 { pt3dadd( 101.174, 41.5514, 63.2227, 0.67 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 95/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 31.4184, 15.3374, -5.33109, 0.67 ) }
    dend_58 { pt3dadd( 33.6914, 15.705, -6.38784, 0.67 ) }
    dend_58 { pt3dadd( 34.8782, 15.9351, -6.96167, 0.67 ) }
    dend_58 { pt3dadd( 38.36, 16.7785, -8.40284, 0.33 ) }
    dend_58 { pt3dadd( 42.8485, 17.6349, -9.7266, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_58 { pt3dadd( 49.1081, 18.6738, -11.0668, 1.33 ) }
    dend_58 { pt3dadd( 51.279, 19.0531, -11.4224, 0.33 ) }
    dend_58 { pt3dadd( 52.569, 19.3113, -11.5798, 0.67 ) }
    dend_58 { pt3dadd( 56.1645, 20.0022, -11.8571, 0.67 ) }
    dend_58 { pt3dadd( 63.5201, 21.1859, -12.0026, 0.67 ) }
    dend_58 { pt3dadd( 68.2765, 21.7888, -11.6163, 0.67 ) }
    dend_58 { pt3dadd( 70.845, 22.0854, -11.1901, 0.67 ) }
    dend_58 { pt3dadd( 72.029, 22.1972, -10.9858, 0.33 ) }
    dend_58 { pt3dadd( 73.6988, 22.2988, -10.6793, 0.67 ) }
    dend_58 { pt3dadd( 75.6849, 22.4332, -10.3066, 0.33 ) }
    dend_58 { pt3dadd( 82.7522, 23.1185, -8.7231, 0.67 ) }
    dend_58 { pt3dadd( 85.3715, 23.2419, -8.10729, 0.33 ) }
    dend_58 { pt3dadd( 87.0034, 23.2702, -7.66538, 0.67 ) }
    dend_58 { pt3dadd( 88.919, 23.3626, -7.06733, 0.33 ) }
    dend_58 { pt3dadd( 92.0984, 23.5956, -5.66752, 0.33 ) }
    dend_58 { pt3dadd( 93.2657, 23.6801, -5.00846, 0.67 ) }
    dend_58 { pt3dadd( 95.6061, 23.8533, -3.34284, 0.67 ) }
    dend_58 { pt3dadd( 98.398, 24.1236, -0.674947, 0.33 ) }
    dend_58 { pt3dadd( 101.052, 24.4283, 2.32783, 0.67 ) }
    dend_58 { pt3dadd( 104.461, 24.7715, 6.63648, 0.33 ) }
    dend_58 { pt3dadd( 105.165, 24.828, 7.60284, 0.33 ) }
    dend_58 { pt3dadd( 106.445, 24.9858, 9.46736, 0.67 ) }
    dend_58 { pt3dadd( 110.154, 25.6351, 15.2076, 0.33 ) }
    dend_58 { pt3dadd( 111.467, 25.7806, 17.3241, 0.67 ) }
    dend_58 { pt3dadd( 112.666, 25.8282, 19.4456, 1.33 ) }
    dend_58 { pt3dadd( 121.465, 27.5228, 23.8852, 1.33 ) }
    dend_58 { pt3dadd( 129.683, 29.9244, 29.0527, 1.33 ) }
    dend_58 { pt3dadd( 138.133, 30.495, 34.3692, 1.33 ) }
    dend_58 { pt3dadd( 146.484, 29.1562, 39.7048, 1.33 ) }
    dend_58 { pt3dadd( 154.831, 28.43, 45.1642, 1.33 ) }
    dend_58 { pt3dadd( 163.546, 26.5035, 49.6743, 1.33 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 22.0883, 38.4433, 0.875042, 1.33 ) }
    dend_46 { pt3dadd( 23.4542, 37.816, 3.04576, 1.33 ) }
    dend_46 { pt3dadd( 25.4293, 36.909, 6.1846, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 22.0883, 38.4433, 0.875042, 1.33 ) }
    dend_41 { pt3dadd( 24.7385, 40.0373, 1.08505, 1.33 ) }
    dend_41 { pt3dadd( 26.3818, 41.2111, 1.168, 0.67 ) }
    dend_41 { pt3dadd( 28.6941, 43.2267, 1.2591, 0.67 ) }
    dend_41 { pt3dadd( 31.0544, 45.3419, 1.4511, 1.33 ) }
    dend_41 { pt3dadd( 33.3642, 47.4703, 1.66236, 1.33 ) }
    dend_41 { pt3dadd( 37.9465, 51.9218, 2.10445, 1.33 ) }
    dend_41 { pt3dadd( 40.7327, 54.7006, 2.46311, 1.33 ) }
    dend_41 { pt3dadd( 43.1773, 57.3176, 2.74473, 0.67 ) }
    dend_41 { pt3dadd( 46.5889, 61.3653, 3.09277, 0.67 ) }
    dend_41 { pt3dadd( 47.8401, 62.9924, 3.17395, 0.67 ) }
    dend_41 { pt3dadd( 49.2977, 64.9352, 3.33164, 1.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 46/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -29.7588, 18.708, -19.3511, 0.67 ) }
    dend_38 { pt3dadd( -32.2266, 19.2428, -22.3219, 0.67 ) }
    dend_38 { pt3dadd( -36.1565, 20.0045, -26.8067, 0.67 ) }
    dend_38 { pt3dadd( -39.4979, 20.6651, -30.3703, 0.67 ) }
    dend_38 { pt3dadd( -41.686, 21.0124, -32.5816, 0.67 ) }
    dend_38 { pt3dadd( -43.0199, 21.1654, -33.9073, 0.67 ) }
    dend_38 { pt3dadd( -44.5199, 21.2387, -35.3888, 0.33 ) }
    dend_38 { pt3dadd( -45.0435, 21.2156, -35.9204, 1.33 ) }
    dend_38 { pt3dadd( -46.0465, 20.8674, -36.7958, 0.33 ) }
    dend_38 { pt3dadd( -47.2323, 20.3606, -37.9315, 0.33 ) }
    dend_38 { pt3dadd( -48.4978, 19.8614, -39.1545, 2.0 ) }
    dend_38 { pt3dadd( -51.4717, 18.8264, -41.992, 0.33 ) }
    dend_38 { pt3dadd( -52.1916, 18.5546, -42.7133, 1.33 ) }
    dend_38 { pt3dadd( -54.5688, 17.649, -45.1076, 0.33 ) }
    dend_38 { pt3dadd( -57.0308, 16.7176, -47.4182, 1.33 ) }
    dend_38 { pt3dadd( -58.5499, 16.1798, -48.6609, 1.33 ) }
    dend_38 { pt3dadd( -60.3773, 15.5297, -49.8363, 0.33 ) }
    dend_38 { pt3dadd( -60.965, 15.3192, -50.0713, 0.67 ) }
    dend_38 { pt3dadd( -63.1921, 14.6067, -50.4109, 0.33 ) }
    dend_38 { pt3dadd( -67.2909, 13.4537, -49.506, 0.67 ) }
    dend_38 { pt3dadd( -69.1031, 12.9774, -48.8177, 0.33 ) }
    dend_38 { pt3dadd( -70.1515, 12.8087, -48.4205, 1.33 ) }
    dend_38 { pt3dadd( -71.5929, 12.6556, -47.8572, 0.33 ) }
    dend_38 { pt3dadd( -73.727, 12.6011, -47.0917, 0.67 ) }
    dend_38 { pt3dadd( -76.1595, 12.6254, -46.1053, 0.33 ) }
    dend_38 { pt3dadd( -76.9238, 12.6652, -45.8255, 0.67 ) }
    dend_38 { pt3dadd( -79.9239, 12.912, -44.3889, 0.33 ) }
    dend_38 { pt3dadd( -81.2918, 12.9991, -43.571, 1.33 ) }
    dend_38 { pt3dadd( -83.7635, 13.1142, -41.7051, 0.33 ) }
    dend_38 { pt3dadd( -86.6031, 13.294, -39.2132, 0.33 ) }
    dend_38 { pt3dadd( -87.5977, 13.3492, -38.3257, 0.67 ) }
    dend_38 { pt3dadd( -90.3533, 13.4772, -35.9234, 0.33 ) }
    dend_38 { pt3dadd( -92.0143, 13.5151, -34.4982, 1.33 ) }
    dend_38 { pt3dadd( -95.8721, 13.6491, -31.6122, 0.33 ) }
    dend_38 { pt3dadd( -97.1453, 13.6195, -30.8356, 0.33 ) }
    dend_38 { pt3dadd( -99.8699, 13.4764, -29.5366, 1.33 ) }
    dend_38 { pt3dadd( -102.421, 13.1558, -28.7698, 0.33 ) }
    dend_38 { pt3dadd( -103.146, 12.9814, -28.7331, 0.67 ) }
    dend_38 { pt3dadd( -104.794, 12.2968, -28.8905, 0.33 ) }
    dend_38 { pt3dadd( -106.727, 11.2194, -29.2244, 0.33 ) }
    dend_38 { pt3dadd( -108.837, 9.71993, -29.4997, 1.33 ) }
    dend_38 { pt3dadd( -111.561, 7.45616, -29.5072, 0.33 ) }
    dend_38 { pt3dadd( -113.31, 5.85708, -29.5201, 0.67 ) }
    dend_38 { pt3dadd( -116.653, 2.65367, -29.5663, 0.33 ) }
    dend_38 { pt3dadd( -116.889, 2.40935, -29.5722, 0.67 ) }
    dend_38 { pt3dadd( -119.42, -0.255989, -29.684, 0.33 ) }
    dend_38 { pt3dadd( -121.43, -2.38542, -29.8272, 0.67 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 93/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -29.7588, 18.708, -19.3511, 1.33 ) }
    dend_33 { pt3dadd( -31.2689, 22.3495, -16.7891, 1.33 ) }
    dend_33 { pt3dadd( -33.0149, 27.6261, -13.4001, 1.33 ) }
    dend_33 { pt3dadd( -34.1216, 30.8127, -11.1825, 1.33 ) }
    dend_33 { pt3dadd( -35.2677, 33.5735, -9.1335, 1.33 ) }
    dend_33 { pt3dadd( -37.1454, 37.5238, -6.18101, 1.33 ) }
    dend_33 { pt3dadd( -38.6421, 40.4582, -3.89083, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_33 { pt3dadd( -39.9708, 42.7985, -1.99352, 1.33 ) }
    dend_33 { pt3dadd( -42.2904, 46.5295, 0.925352, 0.67 ) }
    dend_33 { pt3dadd( -44.413, 49.8807, 3.60521, 0.67 ) }
    dend_33 { pt3dadd( -45.6808, 51.7757, 5.30306, 0.67 ) }
    dend_33 { pt3dadd( -47.9258, 54.5075, 8.37447, 0.67 ) }
    dend_33 { pt3dadd( -48.6866, 55.1998, 9.23047, 1.33 ) }
    // Section: dend_27, id: dend_27, parent: dend_1 (entry count 6/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 0.532892, 21.3197, -18.3148, 1.33 ) }
    dend_27 { pt3dadd( 0.995539, 29.5427, -29.4936, 1.33 ) }
    dend_27 { pt3dadd( 0.355624, 31.1323, -33.1302, 0.67 ) }
    dend_27 { pt3dadd( -0.388241, 32.0103, -35.9228, 0.67 ) }
    dend_27 { pt3dadd( -1.49343, 33.3148, -40.0718, 0.67 ) }
    dend_27 { pt3dadd( -3.06669, 35.1717, -45.9779, 0.67 ) }
    dend_27 { pt3dadd( -4.79156, 37.2076, -52.4533, 1.33 ) }
    dend_27 { pt3dadd( -7.89201, 37.0408, -57.9758, 0.67 ) }
    dend_27 { pt3dadd( -8.43186, 36.9277, -58.8748, 2.0 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 15/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.532892, 21.3197, -18.3148, 3.33 ) }
    dend_2 { pt3dadd( 0.310844, 22.5492, -16.9378, 3.33 ) }
    dend_2 { pt3dadd( -0.247709, 25.6419, -13.474, 3.33 ) }
    dend_2 { pt3dadd( -1.27574, 31.3342, -7.09874, 2.0 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 19/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -46.4385, -26.4088, -20.995, 0.67 ) }
    dend_75 { pt3dadd( -48.4177, -25.3251, -17.6466, 0.67 ) }
    dend_75 { pt3dadd( -49.2512, -25.0728, -16.5875, 0.33 ) }
    dend_75 { pt3dadd( -49.7701, -25.0642, -16.1684, 0.67 ) }
    dend_75 { pt3dadd( -51.2935, -25.039, -14.9379, 0.33 ) }
    dend_75 { pt3dadd( -55.8404, -24.9637, -11.2653, 0.33 ) }
    dend_75 { pt3dadd( -57.1376, -24.9422, -10.2175, 0.67 ) }
    dend_75 { pt3dadd( -59.6526, -25.5264, -8.98825, 0.33 ) }
    dend_75 { pt3dadd( -63.3013, -26.8134, -7.38328, 0.33 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 28/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -46.4385, -26.4088, -20.995, 0.33 ) }
    dend_72 { pt3dadd( -47.7261, -26.8886, -22.4829, 0.33 ) }
    dend_72 { pt3dadd( -50.7536, -28.0167, -25.9812, 0.67 ) }
    dend_72 { pt3dadd( -51.6044, -28.3337, -26.9644, 0.67 ) }
    dend_72 { pt3dadd( -52.8247, -28.7885, -28.3745, 1.33 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 33/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -43.9382, -66.9467, 24.4826, 0.33 ) }
    dend_67 { pt3dadd( -46.3785, -65.8586, 24.4298, 0.33 ) }
    dend_67 { pt3dadd( -49.1191, -64.6364, 24.3706, 0.33 ) }
    dend_67 { pt3dadd( -58.2002, -60.4496, 24.3076, 0.33 ) }
    dend_67 { pt3dadd( -67.5382, -56.8855, 24.6223, 0.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -43.9382, -66.9467, 24.4826, 0.67 ) }
    dend_66 { pt3dadd( -45.1648, -70.7824, 26.1946, 0.67 ) }
    dend_66 { pt3dadd( -46.3556, -74.5061, 27.8566, 0.67 ) }
    dend_66 { pt3dadd( -47.324, -77.5344, 29.2082, 0.33 ) }
    dend_66 { pt3dadd( -50.5924, -85.1889, 34.7512, 0.33 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 43/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -2.71715, -25.1824, 0.825206, 0.67 ) }
    dend_64 { pt3dadd( -0.201676, -28.7034, 1.59071, 0.67 ) }
    dend_64 { pt3dadd( 0.491387, -29.8115, 1.8583, 1.33 ) }
    dend_64 { pt3dadd( 2.40524, -32.8967, 2.43044, 0.67 ) }
    dend_64 { pt3dadd( 4.08703, -35.4559, 2.83956, 1.33 ) }
    dend_64 { pt3dadd( 6.41299, -38.8664, 3.20983, 0.67 ) }
    dend_64 { pt3dadd( 9.78774, -43.6198, 3.42078, 0.67 ) }
    dend_64 { pt3dadd( 11.2208, -45.5145, 3.28381, 1.33 ) }
    dend_64 { pt3dadd( 13.403, -48.33, 2.95456, 0.67 ) }
    dend_64 { pt3dadd( 14.5314, -49.6971, 2.69848, 0.67 ) }
    dend_64 { pt3dadd( 16.073, -51.3876, 2.27213, 0.67 ) }
    dend_64 { pt3dadd( 17.7539, -53.0746, 1.6201, 1.33 ) }
    dend_64 { pt3dadd( 18.9481, -54.1429, 1.16672, 0.33 ) }
    dend_64 { pt3dadd( 19.8867, -55.0266, 0.822853, 1.33 ) }
    dend_64 { pt3dadd( 23.2564, -58.3815, -0.141462, 0.67 ) }
    dend_64 { pt3dadd( 24.538, -59.7359, -0.429425, 0.33 ) }
    dend_64 { pt3dadd( 25.2537, -60.5098, -0.464848, 1.33 ) }
    dend_64 { pt3dadd( 27.3629, -62.8389, -0.272762, 0.33 ) }
    dend_64 { pt3dadd( 27.9999, -63.5273, -0.21257, 1.33 ) }
    dend_64 { pt3dadd( 29.1623, -64.7632, -0.0957127, 0.33 ) }
    dend_64 { pt3dadd( 30.1825, -65.845, 0.021825, 1.33 ) }
    dend_64 { pt3dadd( 33.4667, -69.2995, 0.309151, 0.33 ) }
    dend_64 { pt3dadd( 34.5616, -70.4297, 0.377167, 1.33 ) }
    dend_64 { pt3dadd( 37.0487, -72.963, 0.464624, 0.33 ) }
    dend_64 { pt3dadd( 37.5745, -73.4949, 0.467217, 1.33 ) }
    dend_64 { pt3dadd( 39.4393, -75.3163, 0.369948, 0.33 ) }
    dend_64 { pt3dadd( 40.4791, -76.2092, 0.246594, 2.0 ) }
    dend_64 { pt3dadd( 42.3253, -77.5589, -0.260596, 0.33 ) }
    dend_64 { pt3dadd( 43.2941, -78.2296, -0.508585, 0.67 ) }
    dend_64 { pt3dadd( 44.4165, -78.9328, -0.669727, 0.33 ) }
    dend_64 { pt3dadd( 46.005, -79.7285, -0.901574, 0.67 ) }
    dend_64 { pt3dadd( 47.1372, -80.0764, -1.11876, 0.33 ) }
    dend_64 { pt3dadd( 49.1598, -80.4861, -1.66646, 0.67 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 76/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -2.71715, -25.1824, 0.825206, 0.67 ) }
    dend_63 { pt3dadd( -0.324925, -27.3525, 1.74043, 0.67 ) }
    dend_63 { pt3dadd( 0.68805, -28.2561, 2.12748, 0.33 ) }
    dend_63 { pt3dadd( 3.04434, -30.3717, 2.80314, 0.67 ) }
    dend_63 { pt3dadd( 6.52394, -33.3979, 3.88881, 0.67 ) }
    dend_63 { pt3dadd( 7.88412, -34.497, 4.3209, 0.33 ) }
    dend_63 { pt3dadd( 10.625, -36.667, 5.20507, 0.67 ) }
    dend_63 { pt3dadd( 15.2418, -40.2845, 6.49156, 1.33 ) }
    dend_63 { pt3dadd( 17.931, -42.3138, 7.22914, 0.67 ) }
    dend_63 { pt3dadd( 20.9678, -44.6896, 7.88488, 0.67 ) }
    dend_63 { pt3dadd( 22.6301, -46.0124, 8.15339, 0.67 ) }
    dend_63 { pt3dadd( 23.3716, -46.6881, 8.15155, 0.67 ) }
    dend_63 { pt3dadd( 25.2082, -48.5723, 7.66298, 0.67 ) }
    dend_63 { pt3dadd( 26.4943, -50.0068, 7.10675, 0.67 ) }
    dend_63 { pt3dadd( 29.1205, -52.9592, 5.27128, 0.67 ) }
    dend_63 { pt3dadd( 29.9053, -53.8827, 4.54082, 0.67 ) }
    dend_63 { pt3dadd( 32.0508, -56.3436, 2.48676, 2.0 ) }
    dend_63 { pt3dadd( 32.8602, -57.1269, 1.70991, 0.67 ) }
    dend_63 { pt3dadd( 34.9242, -58.8517, -0.262324, 1.33 ) }
    dend_63 { pt3dadd( 39.3934, -62.0652, -4.23278, 1.33 ) }
    dend_63 { pt3dadd( 40.6019, -62.846, -5.06409, 0.33 ) }
    dend_63 { pt3dadd( 42.0974, -63.8285, -5.96038, 1.33 ) }
    dend_63 { pt3dadd( 44.3735, -65.3694, -7.24736, 0.67 ) }
    dend_63 { pt3dadd( 45.135, -65.8811, -7.66319, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_63 { pt3dadd( 46.5731, -66.8488, -8.41159, 0.67 ) }
    dend_63 { pt3dadd( 50.0883, -69.0616, -9.90148, 0.67 ) }
    dend_63 { pt3dadd( 55.6713, -72.3452, -12.2943, 0.67 ) }
    dend_63 { pt3dadd( 58.2432, -73.828, -13.3905, 0.33 ) }
    dend_63 { pt3dadd( 59.2259, -74.3869, -13.7833, 0.33 ) }
    dend_63 { pt3dadd( 59.5057, -74.5383, -13.9037, 1.33 ) }
    dend_63 { pt3dadd( 62.3972, -75.9321, -15.1056, 0.33 ) }
    dend_63 { pt3dadd( 63.3179, -76.2738, -15.4905, 0.33 ) }
    dend_63 { pt3dadd( 63.9376, -76.4682, -15.6596, 0.67 ) }
    dend_63 { pt3dadd( 64.9257, -76.8071, -15.8057, 0.33 ) }
    dend_63 { pt3dadd( 66.3835, -77.4462, -16.1445, 1.33 ) }
    dend_63 { pt3dadd( 68.7177, -78.6402, -16.8044, 0.33 ) }
    dend_63 { pt3dadd( 69.3434, -79.0023, -16.9907, 1.33 ) }
    dend_63 { pt3dadd( 71.0201, -79.9825, -17.5647, 0.33 ) }
    dend_63 { pt3dadd( 71.5367, -80.3036, -17.8386, 0.67 ) }
    dend_63 { pt3dadd( 74.4045, -82.1152, -19.6189, 0.33 ) }
    dend_63 { pt3dadd( 75.3876, -82.7323, -20.2767, 0.67 ) }
    dend_63 { pt3dadd( 76.6037, -83.4729, -21.1889, 0.33 ) }
    dend_63 { pt3dadd( 77.5045, -83.9391, -21.8477, 1.33 ) }
    dend_63 { pt3dadd( 80.876, -85.4873, -24.2695, 0.33 ) }
    dend_63 { pt3dadd( 81.7057, -85.7948, -24.8146, 1.33 ) }
    dend_63 { pt3dadd( 82.8819, -86.0824, -25.4787, 0.33 ) }
    dend_63 { pt3dadd( 83.9468, -86.2635, -25.998, 1.33 ) }
    dend_63 { pt3dadd( 86.5319, -86.513, -27.0112, 0.33 ) }
    dend_63 { pt3dadd( 86.5319, -86.513, -27.0112, 0.67 ) }
    dend_63 { pt3dadd( 88.3483, -86.3887, -27.2954, 0.33 ) }
    dend_63 { pt3dadd( 90.9069, -86.2066, -27.7419, 0.67 ) }
    dend_63 { pt3dadd( 93.9029, -85.946, -28.1925, 0.33 ) }
    dend_63 { pt3dadd( 95.0901, -85.8331, -28.2934, 0.67 ) }
    dend_63 { pt3dadd( 97.6838, -85.507, -28.0805, 0.33 ) }
    dend_63 { pt3dadd( 102.553, -84.7507, -27.2152, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 31/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 25.4293, 36.909, 6.1846, 0.67 ) }
    dend_50 { pt3dadd( 31.6834, 36.8555, 9.64688, 0.67 ) }
    dend_50 { pt3dadd( 39.8985, 36.7851, 14.1948, 0.67 ) }
    dend_50 { pt3dadd( 42.2809, 36.7647, 15.5137, 1.33 ) }
    dend_50 { pt3dadd( 44.4311, 36.7463, 16.7041, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 36/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 25.4293, 36.909, 6.1846, 0.67 ) }
    dend_47 { pt3dadd( 28.2886, 39.8802, 6.18568, 0.67 ) }
    dend_47 { pt3dadd( 30.8297, 42.5207, 6.18664, 0.33 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 39/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 49.2977, 64.9352, 3.33164, 0.67 ) }
    dend_45 { pt3dadd( 48.8504, 66.9935, 3.33164, 0.67 ) }
    dend_45 { pt3dadd( 48.0028, 70.7886, 3.33164, 0.33 ) }
    dend_45 { pt3dadd( 47.7184, 71.8042, 3.33164, 0.67 ) }
    dend_45 { pt3dadd( 47.3486, 73.1245, 3.33164, 0.33 ) }
    dend_45 { pt3dadd( 47.258, 73.4482, 3.33164, 0.67 ) }
    dend_45 { pt3dadd( 46.6837, 75.499, 3.33164, 0.33 ) }
    dend_45 { pt3dadd( 46.596, 75.8182, 3.33164, 0.67 ) }
    dend_45 { pt3dadd( 46.0183, 77.38, 3.33164, 0.33 ) }
    dend_45 { pt3dadd( 44.7454, 87.2298, 4.49825, 0.33 ) }
    dend_45 { pt3dadd( 43.0205, 96.7421, 7.05588, 0.33 ) }
    dend_45 { pt3dadd( 41.2946, 106.523, 8.22088, 0.33 ) }
    dend_45 { pt3dadd( 41.0218, 116.465, 9.26311, 0.33 ) }
    dend_45 { pt3dadd( 40.7047, 126.459, 9.12045, 0.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 53/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 49.2977, 64.9352, 3.33164, 0.67 ) }
    dend_42 { pt3dadd( 51.234, 66.7792, 1.10754, 0.67 ) }
    dend_42 { pt3dadd( 54.4769, 69.9504, -2.66813, 0.67 ) }
    dend_42 { pt3dadd( 55.7801, 71.1532, -3.94777, 0.67 ) }
    dend_42 { pt3dadd( 57.6247, 72.771, -5.72337, 0.67 ) }
    dend_42 { pt3dadd( 62.0625, 76.473, -9.67177, 2.0 ) }
    dend_42 { pt3dadd( 63.5331, 77.7337, -10.9413, 0.67 ) }
    dend_42 { pt3dadd( 65.6512, 79.6714, -12.7764, 1.33 ) }
    dend_42 { pt3dadd( 68.7708, 82.5992, -15.3645, 0.33 ) }
    dend_42 { pt3dadd( 71.573, 85.322, -17.4619, 1.33 ) }
    dend_42 { pt3dadd( 73.7344, 87.4723, -18.8024, 0.67 ) }
    dend_42 { pt3dadd( 76.4287, 90.2121, -20.2162, 1.33 ) }
    dend_42 { pt3dadd( 78.4758, 92.4071, -21.3086, 0.67 ) }
    dend_42 { pt3dadd( 79.8408, 93.9852, -22.102, 1.33 ) }
    dend_42 { pt3dadd( 81.4546, 96.0617, -22.9875, 2.0 ) }
    dend_42 { pt3dadd( 82.7948, 97.9364, -23.7302, 0.67 ) }
    dend_42 { pt3dadd( 84.4003, 100.35, -24.7529, 0.33 ) }
    dend_42 { pt3dadd( 86.7044, 103.844, -26.2569, 0.33 ) }
    dend_42 { pt3dadd( 87.6559, 105.405, -26.922, 1.33 ) }
    dend_42 { pt3dadd( 89.167, 108.024, -27.9608, 0.67 ) }
    dend_42 { pt3dadd( 91.778, 112.952, -29.6811, 1.33 ) }
    dend_42 { pt3dadd( 92.6059, 114.701, -30.2743, 0.33 ) }
    dend_42 { pt3dadd( 92.9659, 115.593, -30.5379, 0.67 ) }
    dend_42 { pt3dadd( 93.6298, 117.47, -31.246, 0.33 ) }
    dend_42 { pt3dadd( 93.7341, 117.757, -31.3739, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 78/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -48.6866, 55.1998, 9.23047, 0.67 ) }
    dend_37 { pt3dadd( -51.6893, 56.4625, 9.77072, 0.67 ) }
    dend_37 { pt3dadd( -53.5616, 57.3905, 10.0593, 0.67 ) }
    dend_37 { pt3dadd( -57.9809, 59.8854, 10.7087, 0.67 ) }
    dend_37 { pt3dadd( -59.4469, 60.7213, 10.9111, 0.67 ) }
    dend_37 { pt3dadd( -63.9833, 63.361, 11.4362, 0.67 ) }
    dend_37 { pt3dadd( -66.6374, 64.6962, 11.6241, 0.67 ) }
    dend_37 { pt3dadd( -68.5845, 65.5421, 11.793, 1.33 ) }
    dend_37 { pt3dadd( -71.2644, 66.6304, 12.0315, 0.67 ) }
    dend_37 { pt3dadd( -72.8379, 67.1817, 12.1507, 0.67 ) }
    dend_37 { pt3dadd( -76.1069, 68.1581, 12.4787, 0.67 ) }
    dend_37 { pt3dadd( -81.8572, 69.8956, 13.1541, 0.67 ) }
    dend_37 { pt3dadd( -87.2871, 71.4386, 13.8009, 0.67 ) }
    dend_37 { pt3dadd( -88.294, 71.7296, 13.9198, 0.67 ) }
    dend_37 { pt3dadd( -92.6832, 73.2274, 14.4305, 0.67 ) }
    dend_37 { pt3dadd( -95.1434, 74.2343, 14.7987, 0.67 ) }
    dend_37 { pt3dadd( -99.507, 76.2253, 15.5277, 0.33 ) }
    dend_37 { pt3dadd( -102.694, 78.0712, 16.0842, 0.33 ) }
    dend_37 { pt3dadd( -103.947, 78.8708, 16.2172, 0.67 ) }
    dend_37 { pt3dadd( -106.443, 80.6454, 16.5282, 0.33 ) }
    dend_37 { pt3dadd( -108.471, 82.3362, 16.8861, 1.33 ) }
    dend_37 { pt3dadd( -117.25, 87.0629, 16.1119, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_37 { pt3dadd( -126.269, 90.8087, 13.9603, 1.33 ) }
    dend_37 { pt3dadd( -134.27, 96.0634, 11.0679, 1.33 ) }
    dend_37 { pt3dadd( -142.394, 101.424, 8.7744, 1.33 ) }
    dend_37 { pt3dadd( -149.874, 107.388, 5.86276, 1.33 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 4/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -48.6866, 55.1998, 9.23047, 0.67 ) }
    dend_34 { pt3dadd( -46.8753, 58.426, 12.2694, 0.67 ) }
    dend_34 { pt3dadd( -46.3957, 59.5639, 13.1055, 0.67 ) }
    dend_34 { pt3dadd( -46.0564, 60.3686, 13.6969, 0.33 ) }
    dend_34 { pt3dadd( -45.1633, 62.4875, 15.2539, 0.67 ) }
    dend_34 { pt3dadd( -44.5214, 64.0103, 16.3728, 0.67 ) }
    dend_34 { pt3dadd( -43.4597, 66.5287, 18.2235, 0.67 ) }
    dend_34 { pt3dadd( -43.0919, 67.7403, 18.6874, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 12/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -8.43186, 36.9277, -58.8748, 0.67 ) }
    dend_29 { pt3dadd( -11.7493, 34.8787, -69.6515, 0.67 ) }
    dend_29 { pt3dadd( -12.9025, 34.1665, -73.3976, 1.33 ) }
    dend_29 { pt3dadd( -13.6812, 33.6855, -75.9273, 0.33 ) }
    dend_29 { pt3dadd( -13.6812, 33.6855, -75.9273, 1.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 17/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -8.43186, 36.9277, -58.8748, 1.33 ) }
    dend_28 { pt3dadd( -8.84994, 39.5429, -60.2642, 1.33 ) }
    dend_28 { pt3dadd( -9.69773, 42.1064, -61.7794, 0.33 ) }
    dend_28 { pt3dadd( -10.2508, 43.4753, -62.6041, 1.33 ) }
    dend_28 { pt3dadd( -11.5453, 46.7354, -64.7421, 0.33 ) }
    dend_28 { pt3dadd( -12.3892, 48.9693, -66.2973, 0.33 ) }
    dend_28 { pt3dadd( -13.4202, 51.9573, -68.2454, 1.33 ) }
    dend_28 { pt3dadd( -14.2112, 54.6466, -70.0433, 0.33 ) }
    dend_28 { pt3dadd( -14.3516, 55.2514, -70.4481, 0.67 ) }
    dend_28 { pt3dadd( -15.0473, 59.0924, -72.7315, 0.33 ) }
    dend_28 { pt3dadd( -15.374, 61.8841, -74.1014, 1.33 ) }
    dend_28 { pt3dadd( -15.4256, 65.4798, -75.5882, 0.33 ) }
    dend_28 { pt3dadd( -15.2147, 69.1176, -76.7073, 1.33 ) }
    dend_28 { pt3dadd( -15.0014, 70.8486, -77.373, 0.67 ) }
    dend_28 { pt3dadd( -14.6654, 73.1906, -78.298, 0.33 ) }
    dend_28 { pt3dadd( -14.4166, 74.8418, -78.9465, 1.33 ) }
    dend_28 { pt3dadd( -14.1359, 76.9787, -79.8379, 0.33 ) }
    dend_28 { pt3dadd( -13.8249, 79.8495, -81.1315, 1.33 ) }
    dend_28 { pt3dadd( -13.3312, 87.3029, -84.4049, 0.33 ) }
    dend_28 { pt3dadd( -13.3218, 89.3434, -85.4867, 0.67 ) }
    dend_28 { pt3dadd( -13.4346, 91.1241, -86.5676, 0.67 ) }
    dend_28 { pt3dadd( -13.6686, 92.8526, -87.7592, 0.33 ) }
    dend_28 { pt3dadd( -14.2247, 95.2274, -89.5457, 0.33 ) }
    dend_28 { pt3dadd( -14.5057, 96.0634, -90.2197, 0.67 ) }
    dend_28 { pt3dadd( -16.3403, 100.669, -94.0489, 0.33 ) }
    dend_28 { pt3dadd( -17.0218, 102.3, -95.6294, 1.33 ) }
    dend_28 { pt3dadd( -18.0653, 104.755, -98.2894, 0.33 ) }
    dend_28 { pt3dadd( -18.4449, 105.684, -99.2875, 0.33 ) }
    dend_28 { pt3dadd( -19.1274, 107.271, -100.84, 0.67 ) }
    dend_28 { pt3dadd( -20.3408, 110.266, -103.113, 0.33 ) }
    dend_28 { pt3dadd( -20.7076, 111.277, -103.637, 0.33 ) }
    dend_28 { pt3dadd( -21.6218, 113.653, -104.51, 1.33 ) }
    dend_28 { pt3dadd( -23.1267, 117.232, -105.714, 0.33 ) }
    dend_28 { pt3dadd( -24.3401, 119.824, -106.557, 1.33 ) }
    dend_28 { pt3dadd( -26.2558, 123.133, -107.794, 0.33 ) }
    dend_28 { pt3dadd( -26.6794, 123.683, -108.023, 0.67 ) }
    dend_28 { pt3dadd( -28.7562, 126.111, -109.167, 0.33 ) }
    dend_28 { pt3dadd( -31.9613, 129.293, -110.979, 1.33 ) }
    dend_28 { pt3dadd( -33.8555, 130.689, -112.278, 0.33 ) }
    dend_28 { pt3dadd( -36.8655, 132.395, -114.747, 1.33 ) }
    dend_28 { pt3dadd( -38.9281, 133.187, -116.594, 0.33 ) }
    // Section: dend_24, id: dend_24, parent: dend_2 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.27574, 31.3342, -7.09874, 0.67 ) }
    dend_24 { pt3dadd( -4.76669, 38.012, -9.24886, 0.67 ) }
    dend_24 { pt3dadd( -5.62766, 39.5658, -9.79803, 0.67 ) }
    dend_24 { pt3dadd( -8.60223, 44.7315, -11.5003, 1.33 ) }
    dend_24 { pt3dadd( -11.1024, 49.0734, -12.931, 0.67 ) }
    dend_24 { pt3dadd( -14.0415, 54.1777, -14.613, 0.67 ) }
    dend_24 { pt3dadd( -15.1586, 56.1177, -15.2523, 0.67 ) }
    dend_24 { pt3dadd( -18.6163, 62.2177, -16.5076, 0.67 ) }
    dend_24 { pt3dadd( -21.6579, 67.295, -17.5471, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 67/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -1.27574, 31.3342, -7.09874, 2.0 ) }
    dend_3 { pt3dadd( -0.300206, 35.9935, 2.76665, 2.0 ) }
    dend_3 { pt3dadd( 0.0901882, 37.858, 6.71461, 3.33 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 70/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -52.8247, -28.7885, -28.3745, 0.67 ) }
    dend_74 { pt3dadd( -54.0788, -30.8688, -32.1117, 0.67 ) }
    dend_74 { pt3dadd( -54.5325, -31.5704, -33.2883, 0.33 ) }
    dend_74 { pt3dadd( -55.29, -32.6172, -35.099, 1.33 ) }
    dend_74 { pt3dadd( -56.4171, -34.0436, -37.4637, 0.67 ) }
    dend_74 { pt3dadd( -57.4316, -35.2821, -39.5206, 0.33 ) }
    dend_74 { pt3dadd( -57.5627, -35.433, -39.7793, 0.67 ) }
    dend_74 { pt3dadd( -58.1665, -36.0485, -40.8496, 0.33 ) }
    dend_74 { pt3dadd( -59.2443, -37.1735, -42.9627, 0.67 ) }
    dend_74 { pt3dadd( -59.9675, -37.9754, -44.4641, 0.33 ) }
    dend_74 { pt3dadd( -60.6523, -38.8812, -46.1271, 1.33 ) }
    dend_74 { pt3dadd( -61.8163, -40.7553, -49.4883, 0.33 ) }
    dend_74 { pt3dadd( -61.9293, -40.9808, -49.8869, 1.33 ) }
    dend_74 { pt3dadd( -62.7849, -43.11, -53.5814, 0.33 ) }
    dend_74 { pt3dadd( -62.9833, -43.717, -54.5998, 1.33 ) }
    dend_74 { pt3dadd( -63.4534, -45.577, -57.7559, 0.33 ) }
    dend_74 { pt3dadd( -63.5188, -45.9286, -58.319, 0.67 ) }
    dend_74 { pt3dadd( -63.6327, -47.66, -60.9209, 0.33 ) }
    dend_74 { pt3dadd( -63.6485, -48.0368, -61.4747, 0.67 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 89/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -52.8247, -28.7885, -28.3745, 1.33 ) }
    dend_73 { pt3dadd( -54.1981, -28.2067, -28.3948, 1.33 ) }
    dend_73 { pt3dadd( -57.5602, -26.9366, -28.4372, 0.67 ) }
    dend_73 { pt3dadd( -59.168, -26.5169, -28.4462, 0.33 ) }
    dend_73 { pt3dadd( -60.3561, -26.2913, -28.4258, 0.67 ) }
    dend_73 { pt3dadd( -61.6833, -26.1258, -28.3828, 0.67 ) }
    dend_73 { pt3dadd( -63.3571, -26.0287, -28.1502, 1.33 ) }
    dend_73 { pt3dadd( -64.2557, -26.1058, -27.8734, 1.33 ) }
    dend_73 { pt3dadd( -66.2933, -26.4246, -26.9971, 0.33 ) }
    dend_73 { pt3dadd( -66.9215, -26.5417, -26.6398, 0.67 ) }
    dend_73 { pt3dadd( -69.2716, -27.0741, -25.1271, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( -72.2589, -27.9275, -23.0556, 0.67 ) }
    dend_73 { pt3dadd( -74.5453, -28.701, -21.4239, 0.67 ) }
    dend_73 { pt3dadd( -76.1496, -29.2874, -20.3733, 0.33 ) }
    dend_73 { pt3dadd( -78.6045, -30.2044, -18.9494, 0.67 ) }
    dend_73 { pt3dadd( -81.1453, -31.1258, -17.8121, 1.33 ) }
    dend_73 { pt3dadd( -84.3234, -32.3087, -16.9402, 0.33 ) }
    dend_73 { pt3dadd( -85.6091, -32.7875, -16.8527, 0.67 ) }
    dend_73 { pt3dadd( -88.7952, -33.9507, -17.1148, 0.33 ) }
    dend_73 { pt3dadd( -90.4582, -34.5614, -17.3807, 1.33 ) }
    dend_73 { pt3dadd( -93.1036, -35.364, -18.1939, 0.67 ) }
    dend_73 { pt3dadd( -95.2028, -35.8808, -19.0446, 0.33 ) }
    dend_73 { pt3dadd( -96.1707, -36.0723, -19.4774, 0.33 ) }
    dend_73 { pt3dadd( -97.4589, -36.3157, -20.0037, 1.33 ) }
    dend_73 { pt3dadd( -99.2538, -36.7486, -20.948, 1.33 ) }
    dend_73 { pt3dadd( -102.613, -37.7299, -23.0408, 0.33 ) }
    dend_73 { pt3dadd( -103.314, -37.9696, -23.5001, 0.67 ) }
    dend_73 { pt3dadd( -104.462, -38.3349, -24.2496, 0.33 ) }
    dend_73 { pt3dadd( -105.31, -38.5769, -24.8286, 0.67 ) }
    dend_73 { pt3dadd( -109.828, -39.8341, -28.0111, 0.33 ) }
    dend_73 { pt3dadd( -110.643, -40.0312, -28.5736, 0.67 ) }
    dend_73 { pt3dadd( -112.053, -40.3349, -29.397, 0.33 ) }
    dend_73 { pt3dadd( -112.985, -40.5179, -29.8593, 0.67 ) }
    dend_73 { pt3dadd( -114.841, -40.7895, -30.6382, 0.33 ) }
    dend_73 { pt3dadd( -115.852, -40.8819, -30.9219, 0.67 ) }
    dend_73 { pt3dadd( -117.633, -40.9924, -31.0831, 0.33 ) }
    dend_73 { pt3dadd( -118.684, -41.0543, -31.1483, 0.67 ) }
    dend_73 { pt3dadd( -120.624, -41.1347, -31.1959, 0.33 ) }
    dend_73 { pt3dadd( -120.957, -41.1283, -31.15, 0.67 ) }
    dend_73 { pt3dadd( -122.465, -41.0196, -30.7894, 0.33 ) }
    dend_73 { pt3dadd( -123.612, -40.8656, -30.4751, 0.67 ) }
    dend_73 { pt3dadd( -125.539, -40.5527, -29.9026, 0.33 ) }
    dend_73 { pt3dadd( -127.662, -40.2168, -29.257, 2.0 ) }
    dend_73 { pt3dadd( -133.011, -39.2409, -27.6191, 0.33 ) }
    dend_73 { pt3dadd( -134.249, -39.002, -27.1708, 1.33 ) }
    dend_73 { pt3dadd( -136.35, -38.4513, -26.3198, 0.67 ) }
    dend_73 { pt3dadd( -137.253, -38.153, -25.8653, 0.67 ) }
    dend_73 { pt3dadd( -138.7, -37.4765, -25.043, 0.33 ) }
    dend_73 { pt3dadd( -139.811, -36.7601, -24.3664, 0.67 ) }
    dend_73 { pt3dadd( -142.698, -34.3355, -22.5599, 0.67 ) }
    dend_73 { pt3dadd( -144.795, -32.2312, -21.0498, 0.67 ) }
    dend_73 { pt3dadd( -146.607, -30.1699, -19.6217, 0.67 ) }
    dend_73 { pt3dadd( -149.042, -27.1672, -17.6416, 0.33 ) }
    dend_73 { pt3dadd( -149.93, -25.9753, -16.8986, 0.67 ) }
    dend_73 { pt3dadd( -150.694, -24.9103, -16.271, 1.33 ) }
    dend_73 { pt3dadd( -152.951, -21.5146, -14.6659, 0.33 ) }
    dend_73 { pt3dadd( -153.129, -21.2463, -14.531, 0.67 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 46/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -67.5382, -56.8855, 24.6223, 0.33 ) }
    dend_69 { pt3dadd( -76.6973, -52.8974, 25.0758, 0.33 ) }
    dend_69 { pt3dadd( -86.0895, -49.5223, 25.704, 0.33 ) }
    dend_69 { pt3dadd( -95.0125, -45.1934, 26.985, 0.33 ) }
    dend_69 { pt3dadd( -104.714, -42.8526, 27.6069, 0.33 ) }
    dend_69 { pt3dadd( -114.237, -39.8079, 27.3953, 0.33 ) }
    dend_69 { pt3dadd( -123.899, -37.6572, 25.9696, 0.33 ) }
    dend_69 { pt3dadd( -133.268, -34.6704, 24.1553, 0.33 ) }
    dend_69 { pt3dadd( -142.957, -32.2037, 24.3587, 0.33 ) }
    dend_69 { pt3dadd( -152.262, -28.7731, 23.0747, 0.33 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 56/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -67.5382, -56.8855, 24.6223, 0.33 ) }
    dend_68 { pt3dadd( -76.77, -53.0999, 23.9568, 0.33 ) }
    dend_68 { pt3dadd( -86.5208, -51.3021, 22.6568, 0.33 ) }
    dend_68 { pt3dadd( -96.4339, -50.2762, 21.8337, 0.33 ) }
    dend_68 { pt3dadd( -106.431, -50.0358, 21.8609, 0.33 ) }
    dend_68 { pt3dadd( -116.246, -49.3479, 20.0774, 0.33 ) }
    dend_68 { pt3dadd( -126.045, -47.9047, 18.6981, 0.33 ) }
    dend_68 { pt3dadd( -135.87, -46.187, 17.9839, 0.33 ) }
    dend_68 { pt3dadd( -145.384, -43.7031, 16.1638, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 65/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 44.4311, 36.7463, 16.7041, 0.33 ) }
    dend_52 { pt3dadd( 46.4452, 37.4898, 19.506, 0.33 ) }
    dend_52 { pt3dadd( 47.5217, 37.8872, 21.0037, 0.67 ) }
    dend_52 { pt3dadd( 48.9646, 38.4198, 23.011, 0.67 ) }
    dend_52 { pt3dadd( 56.0935, 40.792, 29.6104, 0.67 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 70/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 44.4311, 36.7463, 16.7041, 0.67 ) }
    dend_51 { pt3dadd( 45.648, 40.3056, 19.4624, 0.67 ) }
    dend_51 { pt3dadd( 46.7165, 43.431, 21.8844, 0.67 ) }
    dend_51 { pt3dadd( 48.0338, 47.284, 24.8704, 0.67 ) }
    dend_51 { pt3dadd( 48.766, 49.4255, 26.53, 0.67 ) }
    dend_51 { pt3dadd( 49.4041, 51.292, 27.9764, 0.67 ) }
    dend_51 { pt3dadd( 50.4014, 54.2092, 30.2372, 0.67 ) }
    dend_51 { pt3dadd( 54.1152, 60.6966, 36.8796, 0.67 ) }
    dend_51 { pt3dadd( 59.3058, 66.4977, 43.157, 0.67 ) }
    dend_51 { pt3dadd( 63.7961, 71.9397, 50.2437, 0.67 ) }
    dend_51 { pt3dadd( 68.8801, 77.8436, 56.5125, 0.67 ) }
    dend_51 { pt3dadd( 75.0538, 83.5616, 61.9153, 0.67 ) }
    dend_51 { pt3dadd( 81.7441, 89.6248, 66.2138, 0.67 ) }
    dend_51 { pt3dadd( 87.7267, 95.2224, 71.9475, 0.67 ) }
    dend_51 { pt3dadd( 93.9147, 101.194, 77.052, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 85/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 30.8297, 42.5207, 6.18664, 0.33 ) }
    dend_49 { pt3dadd( 32.5493, 43.2034, 7.95848, 0.33 ) }
    dend_49 { pt3dadd( 32.9572, 43.4869, 8.52118, 0.67 ) }
    dend_49 { pt3dadd( 34.5465, 44.7579, 10.6636, 0.33 ) }
    dend_49 { pt3dadd( 36.1451, 46.2316, 12.7342, 0.67 ) }
    dend_49 { pt3dadd( 37.5318, 47.718, 14.4881, 0.67 ) }
    dend_49 { pt3dadd( 39.6833, 50.0239, 17.2091, 0.67 ) }
    dend_49 { pt3dadd( 42.0283, 52.8942, 20.3839, 0.67 ) }
    dend_49 { pt3dadd( 43.5465, 54.9726, 22.4939, 0.67 ) }
    dend_49 { pt3dadd( 44.5592, 56.5838, 23.8918, 0.67 ) }
    dend_49 { pt3dadd( 45.5582, 58.1574, 25.1413, 0.67 ) }
    dend_49 { pt3dadd( 50.5045, 64.347, 31.2424, 0.67 ) }
    dend_49 { pt3dadd( 54.4447, 70.6671, 37.9157, 0.67 ) }
    dend_49 { pt3dadd( 57.7469, 77.1741, 44.7533, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 99/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 30.8297, 42.5207, 6.18664, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_48 { pt3dadd( 32.3562, 49.5603, 12.4817, 0.33 ) }
    dend_48 { pt3dadd( 32.8179, 51.783, 13.9127, 0.33 ) }
    dend_48 { pt3dadd( 33.0246, 52.7785, 14.5537, 0.33 ) }
    dend_48 { pt3dadd( 33.4091, 54.6297, 15.7455, 0.67 ) }
    dend_48 { pt3dadd( 33.8142, 56.5801, 17.0013, 0.67 ) }
    dend_48 { pt3dadd( 34.647, 60.5897, 19.5828, 0.33 ) }
    dend_48 { pt3dadd( 35.4113, 63.8162, 20.2447, 0.33 ) }
    dend_48 { pt3dadd( 36.0827, 71.6001, 26.4866, 0.33 ) }
    dend_48 { pt3dadd( 36.9535, 79.2197, 32.9041, 0.33 ) }
    dend_48 { pt3dadd( 37.7378, 86.2957, 39.9265, 0.33 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 10/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 93.7341, 117.757, -31.3739, 0.33 ) }
    dend_44 { pt3dadd( 92.7348, 120.327, -28.7803, 0.33 ) }
    dend_44 { pt3dadd( 92.5587, 120.78, -28.3233, 0.67 ) }
    dend_44 { pt3dadd( 91.5736, 123.313, -25.7665, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 14/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 93.7341, 117.757, -31.3739, 0.67 ) }
    dend_43 { pt3dadd( 95.1309, 119.285, -32.4956, 0.67 ) }
    dend_43 { pt3dadd( 96.1819, 120.419, -33.41, 0.33 ) }
    dend_43 { pt3dadd( 97.3668, 121.732, -34.3907, 1.33 ) }
    dend_43 { pt3dadd( 99.3364, 124.091, -35.7426, 0.33 ) }
    dend_43 { pt3dadd( 99.9498, 124.862, -36.0976, 1.33 ) }
    dend_43 { pt3dadd( 102.583, 128.443, -37.1524, 0.33 ) }
    dend_43 { pt3dadd( 102.842, 128.834, -37.203, 0.67 ) }
    dend_43 { pt3dadd( 105.2, 132.689, -36.6048, 0.33 ) }
    dend_43 { pt3dadd( 107.071, 135.755, -35.2648, 0.67 ) }
    dend_43 { pt3dadd( 107.661, 136.729, -34.5055, 0.67 ) }
    dend_43 { pt3dadd( 109.444, 139.292, -31.6089, 0.33 ) }
    dend_43 { pt3dadd( 110.462, 140.568, -29.8417, 0.33 ) }
    dend_43 { pt3dadd( 112.325, 142.691, -26.6954, 0.67 ) }
    dend_43 { pt3dadd( 112.928, 143.339, -25.6973, 0.67 ) }
    dend_43 { pt3dadd( 115.023, 145.474, -22.8033, 0.33 ) }
    dend_43 { pt3dadd( 116.982, 147.604, -20.3386, 0.67 ) }
    dend_43 { pt3dadd( 118.649, 149.643, -18.5979, 0.33 ) }
    dend_43 { pt3dadd( 119.361, 150.59, -17.8797, 0.67 ) }
    dend_43 { pt3dadd( 121.379, 153.517, -16.2742, 0.33 ) }
    dend_43 { pt3dadd( 122.445, 155.371, -15.487, 0.67 ) }
    dend_43 { pt3dadd( 123.348, 157.376, -15.1016, 0.33 ) }
    dend_43 { pt3dadd( 124.122, 160.133, -14.9224, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 37/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -43.0919, 67.7403, 18.6874, 0.67 ) }
    dend_36 { pt3dadd( -45.8517, 72.8201, 22.5386, 0.67 ) }
    dend_36 { pt3dadd( -46.5663, 74.0657, 23.4455, 0.67 ) }
    dend_36 { pt3dadd( -47.709, 76.0576, 24.8958, 0.67 ) }
    dend_36 { pt3dadd( -49.6924, 79.5148, 27.413, 0.33 ) }
    dend_36 { pt3dadd( -50.5797, 81.0615, 28.539, 0.33 ) }
    dend_36 { pt3dadd( -51.9368, 83.4272, 30.2615, 0.33 ) }
    dend_36 { pt3dadd( -52.5048, 84.6692, 30.8613, 0.33 ) }
    dend_36 { pt3dadd( -57.2902, 92.8396, 34.0777, 0.33 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 46/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -43.0919, 67.7403, 18.6874, 0.67 ) }
    dend_35 { pt3dadd( -43.3913, 72.3399, 15.6053, 0.67 ) }
    dend_35 { pt3dadd( -43.5663, 75.3455, 13.6012, 0.67 ) }
    dend_35 { pt3dadd( -43.7872, 78.275, 11.7043, 0.67 ) }
    dend_35 { pt3dadd( -44.0493, 80.8397, 10.1095, 0.67 ) }
    dend_35 { pt3dadd( -44.6285, 85.8886, 7.2493, 0.67 ) }
    dend_35 { pt3dadd( -44.9152, 87.6726, 6.22933, 0.33 ) }
    dend_35 { pt3dadd( -45.2017, 89.1415, 5.43747, 0.67 ) }
    dend_35 { pt3dadd( -45.527, 90.4267, 4.75373, 0.67 ) }
    dend_35 { pt3dadd( -45.8005, 91.7548, 4.11393, 0.33 ) }
    dend_35 { pt3dadd( -46.2477, 94.777, 2.9204, 0.67 ) }
    dend_35 { pt3dadd( -46.2567, 99.4801, 1.74167, 0.33 ) }
    dend_35 { pt3dadd( -46.0304, 101.405, 1.35862, 0.67 ) }
    dend_35 { pt3dadd( -45.2434, 105.965, 0.44504, 0.33 ) }
    dend_35 { pt3dadd( -44.6263, 108.25, 0.0150152, 0.33 ) }
    dend_35 { pt3dadd( -43.3184, 111.496, -0.480491, 0.67 ) }
    dend_35 { pt3dadd( -41.9689, 113.646, -0.580683, 0.33 ) }
    dend_35 { pt3dadd( -40.7967, 114.992, -0.38428, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 64/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -13.6812, 33.6855, -75.9273, 0.67 ) }
    dend_31 { pt3dadd( -13.4238, 32.5733, -77.1708, 0.67 ) }
    dend_31 { pt3dadd( -13.3249, 31.8175, -78.0958, 0.33 ) }
    dend_31 { pt3dadd( -12.9989, 29.7584, -81.1352, 1.33 ) }
    dend_31 { pt3dadd( -12.3865, 27.3678, -85.641, 0.33 ) }
    dend_31 { pt3dadd( -12.2224, 26.7649, -87.3374, 1.33 ) }
    dend_31 { pt3dadd( -11.914, 25.5113, -91.5147, 0.33 ) }
    dend_31 { pt3dadd( -11.7849, 24.4816, -95.7849, 1.33 ) }
    dend_31 { pt3dadd( -11.9238, 22.9856, -103.41, 0.67 ) }
    dend_31 { pt3dadd( -12.2239, 22.0749, -108.996, 0.67 ) }
    dend_31 { pt3dadd( -13.3092, 20.3135, -121.631, 0.67 ) }
    dend_31 { pt3dadd( -13.4235, 20.1711, -122.724, 1.33 ) }
    dend_31 { pt3dadd( -14.4351, 19.1746, -130.358, 0.67 ) }
    dend_31 { pt3dadd( -15.0668, 18.6476, -133.95, 0.67 ) }
    dend_31 { pt3dadd( -15.8029, 18.0355, -137.023, 0.67 ) }
    dend_31 { pt3dadd( -16.3481, 17.4425, -139.003, 0.33 ) }
    dend_31 { pt3dadd( -16.5956, 17.1229, -139.883, 1.33 ) }
    dend_31 { pt3dadd( -17.8665, 15.2264, -145.468, 0.33 ) }
    dend_31 { pt3dadd( -17.9649, 15.0739, -146.103, 0.67 ) }
    dend_31 { pt3dadd( -18.7584, 13.9908, -152.239, 0.33 ) }
    dend_31 { pt3dadd( -18.8862, 13.8737, -153.302, 0.67 ) }
    dend_31 { pt3dadd( -19.6568, 13.3601, -160.248, 0.33 ) }
    dend_31 { pt3dadd( -20.0767, 13.1435, -164.19, 0.67 ) }
    dend_31 { pt3dadd( -21.2558, 12.7435, -175.315, 0.33 ) }
    dend_31 { pt3dadd( -21.6955, 12.6358, -179.522, 0.33 ) }
    dend_31 { pt3dadd( -22.395, 12.5902, -186.451, 0.33 ) }
    dend_31 { pt3dadd( -22.6259, 12.6039, -189.001, 0.67 ) }
    dend_31 { pt3dadd( -23.3631, 12.718, -199.909, 0.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -13.6812, 33.6855, -75.9273, 0.67 ) }
    dend_30 { pt3dadd( -15.3179, 34.6049, -76.8797, 0.67 ) }
    dend_30 { pt3dadd( -17.3787, 35.6586, -78.6701, 0.67 ) }
    dend_30 { pt3dadd( -19.0442, 36.321, -80.203, 0.33 ) }
    dend_30 { pt3dadd( -19.7518, 36.5892, -80.9377, 0.67 ) }
    dend_30 { pt3dadd( -21.0908, 37.1213, -82.4798, 0.33 ) }
    dend_30 { pt3dadd( -23.9625, 38.2707, -85.7479, 1.33 ) }
    dend_30 { pt3dadd( -26.9008, 39.3458, -89.3184, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -28.0758, 39.6859, -90.932, 0.67 ) }
    dend_30 { pt3dadd( -30.3832, 40.1896, -94.4113, 0.67 ) }
    dend_30 { pt3dadd( -32.3338, 40.3801, -97.6177, 1.33 ) }
    dend_30 { pt3dadd( -33.5155, 40.3671, -99.6588, 0.33 ) }
    dend_30 { pt3dadd( -33.9602, 40.3338, -100.454, 0.67 ) }
    dend_30 { pt3dadd( -36.263, 39.9958, -105.104, 0.33 ) }
    dend_30 { pt3dadd( -36.5624, 39.9741, -105.779, 1.33 ) }
    dend_30 { pt3dadd( -38.9272, 39.5415, -111.04, 0.33 ) }
    dend_30 { pt3dadd( -39.2331, 39.4685, -111.724, 0.67 ) }
    dend_30 { pt3dadd( -40.6931, 39.0546, -115.381, 0.33 ) }
    dend_30 { pt3dadd( -42.3615, 38.6698, -119.495, 1.33 ) }
    dend_30 { pt3dadd( -44.2415, 38.4014, -123.976, 0.33 ) }
    dend_30 { pt3dadd( -45.5523, 38.2484, -127.19, 0.33 ) }
    dend_30 { pt3dadd( -46.5286, 38.1584, -129.623, 1.33 ) }
    dend_30 { pt3dadd( -49.8201, 37.6138, -137.942, 0.33 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -21.6579, 67.295, -17.5471, 0.67 ) }
    dend_26 { pt3dadd( -23.6789, 70.3669, -18.1533, 0.67 ) }
    dend_26 { pt3dadd( -24.5227, 71.7204, -18.6471, 0.67 ) }
    dend_26 { pt3dadd( -25.3686, 73.3681, -19.2214, 0.33 ) }
    dend_26 { pt3dadd( -25.7344, 74.1971, -19.4838, 0.67 ) }
    dend_26 { pt3dadd( -26.4531, 76.1241, -20.0674, 0.33 ) }
    dend_26 { pt3dadd( -26.6797, 76.7907, -20.2387, 2.0 ) }
    dend_26 { pt3dadd( -28.1528, 81.828, -21.396, 0.33 ) }
    dend_26 { pt3dadd( -28.9044, 84.971, -22.0129, 0.67 ) }
    dend_26 { pt3dadd( -29.3625, 87.1079, -22.4677, 0.33 ) }
    dend_26 { pt3dadd( -29.8781, 89.5431, -23.0042, 0.67 ) }
    dend_26 { pt3dadd( -30.3914, 92.0936, -23.5583, 0.33 ) }
    dend_26 { pt3dadd( -30.9019, 94.6374, -24.0849, 1.33 ) }
    dend_26 { pt3dadd( -31.5959, 98.144, -24.7642, 0.33 ) }
    dend_26 { pt3dadd( -32.2562, 100.919, -25.4037, 1.33 ) }
    dend_26 { pt3dadd( -33.0002, 103.856, -26.1465, 0.33 ) }
    dend_26 { pt3dadd( -33.2687, 104.837, -26.4264, 0.67 ) }
    dend_26 { pt3dadd( -33.6225, 106.246, -26.866, 0.33 ) }
    dend_26 { pt3dadd( -33.7298, 106.687, -26.9971, 0.67 ) }
    dend_26 { pt3dadd( -34.4165, 109.397, -27.784, 0.33 ) }
    dend_26 { pt3dadd( -34.7448, 110.657, -28.0767, 1.33 ) }
    dend_26 { pt3dadd( -35.9936, 114.98, -29.0332, 0.33 ) }
    dend_26 { pt3dadd( -36.636, 116.861, -29.4675, 0.67 ) }
    dend_26 { pt3dadd( -36.7524, 117.159, -29.5352, 0.67 ) }
    dend_26 { pt3dadd( -37.2793, 118.356, -29.7999, 0.33 ) }
    dend_26 { pt3dadd( -37.8594, 119.395, -30.0118, 0.67 ) }
    dend_26 { pt3dadd( -38.8155, 120.863, -30.4109, 0.33 ) }
    dend_26 { pt3dadd( -39.6718, 122.072, -30.7965, 0.67 ) }
    dend_26 { pt3dadd( -40.3056, 123.003, -31.2134, 0.33 ) }
    dend_26 { pt3dadd( -41.057, 124.296, -31.9605, 0.67 ) }
    dend_26 { pt3dadd( -41.8294, 125.81, -33.0002, 0.67 ) }
    dend_26 { pt3dadd( -43.0158, 128.029, -34.6346, 0.33 ) }
    dend_26 { pt3dadd( -43.4726, 128.885, -35.3513, 0.67 ) }
    dend_26 { pt3dadd( -44.5181, 130.88, -37.0742, 0.33 ) }
    dend_26 { pt3dadd( -45.4852, 132.722, -38.7749, 2.0 ) }
    dend_26 { pt3dadd( -46.4826, 134.596, -40.6178, 0.67 ) }
    dend_26 { pt3dadd( -47.2833, 136.148, -42.1668, 0.33 ) }
    dend_26 { pt3dadd( -48.9829, 138.961, -44.8587, 0.67 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 53/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.6579, 67.295, -17.5471, 0.33 ) }
    dend_25 { pt3dadd( -25.1314, 67.2546, -17.1541, 0.33 ) }
    dend_25 { pt3dadd( -27.4348, 67.2279, -16.8935, 1.33 ) }
    // Section: dend_15, id: dend_15, parent: dend_3 (entry count 56/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 0.0901882, 37.858, 6.71461, 2.0 ) }
    dend_15 { pt3dadd( -1.57981, 42.868, 7.27461, 2.0 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 58/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 0.0901882, 37.858, 6.71461, 1.33 ) }
    dend_4 { pt3dadd( 5.16496, 41.9111, 4.34638, 1.33 ) }
    dend_4 { pt3dadd( 15.1623, 49.8956, -0.319061, 2.0 ) }
    dend_4 { pt3dadd( 19.2901, 53.1923, -2.24537, 2.0 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 62/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 56.0935, 40.792, 29.6104, 0.67 ) }
    dend_56 { pt3dadd( 62.1974, 43.4511, 37.0717, 0.67 ) }
    dend_56 { pt3dadd( 67.3058, 46.6768, 45.0403, 0.67 ) }
    dend_56 { pt3dadd( 72.2274, 48.6289, 53.5237, 0.67 ) }
    dend_56 { pt3dadd( 75.8145, 50.9751, 62.5585, 0.67 ) }
    dend_56 { pt3dadd( 77.6908, 51.5337, 72.365, 0.67 ) }
    dend_56 { pt3dadd( 78.5054, 52.5686, 82.2779, 0.67 ) }
    dend_56 { pt3dadd( 78.6612, 54.0402, 92.1678, 0.67 ) }
    dend_56 { pt3dadd( 78.0129, 57.3443, 101.584, 0.67 ) }
    dend_56 { pt3dadd( 77.4452, 61.4787, 110.672, 0.67 ) }
    dend_56 { pt3dadd( 78.5838, 64.6203, 120.097, 0.67 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 73/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 56.0935, 40.792, 29.6104, 0.67 ) }
    dend_53 { pt3dadd( 63.1843, 42.4832, 36.4558, 0.67 ) }
    dend_53 { pt3dadd( 71.0794, 44.3181, 42.3126, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 76/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.57981, 42.868, 7.27461, 0.67 ) }
    dend_23 { pt3dadd( -0.369064, 45.2932, 7.6532, 0.67 ) }
    dend_23 { pt3dadd( 1.57921, 48.7939, 8.38757, 0.67 ) }
    dend_23 { pt3dadd( 4.12614, 53.4243, 9.46226, 1.33 ) }
    dend_23 { pt3dadd( 5.38607, 55.7291, 10.0333, 0.67 ) }
    dend_23 { pt3dadd( 9.68292, 63.8505, 12.2081, 1.33 ) }
    dend_23 { pt3dadd( 12.4397, 69.3951, 13.7018, 1.33 ) }
    dend_23 { pt3dadd( 14.9801, 74.3463, 15.2615, 1.33 ) }
    dend_23 { pt3dadd( 16.2302, 76.6897, 16.0338, 0.67 ) }
    dend_23 { pt3dadd( 19.7115, 83.4214, 18.286, 1.33 ) }
    dend_23 { pt3dadd( 21.3176, 86.8672, 19.5677, 0.67 ) }
    dend_23 { pt3dadd( 22.4942, 90.3423, 20.8564, 0.67 ) }
    dend_23 { pt3dadd( 23.3658, 94.2681, 22.1363, 0.67 ) }
    dend_23 { pt3dadd( 23.6842, 96.6599, 22.9425, 0.67 ) }
    dend_23 { pt3dadd( 23.8486, 98.903, 23.6524, 0.67 ) }
    dend_23 { pt3dadd( 23.7755, 105.034, 25.1846, 0.67 ) }
    dend_23 { pt3dadd( 23.2434, 113.091, 26.6104, 0.67 ) }
    dend_23 { pt3dadd( 23.014, 115.464, 26.9067, 0.67 ) }
    dend_23 { pt3dadd( 22.4335, 120.229, 27.2322, 0.67 ) }
    dend_23 { pt3dadd( 22.041, 123.15, 27.3492, 0.67 ) }
    dend_23 { pt3dadd( 21.5203, 127.354, 27.2175, 0.67 ) }
    dend_23 { pt3dadd( 21.3104, 129.976, 26.8442, 0.33 ) }
    dend_23 { pt3dadd( 21.2508, 132.057, 26.4863, 0.33 ) }
    dend_23 { pt3dadd( 21.2826, 133.728, 26.088, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( 21.4409, 136.31, 25.3804, 0.67 ) }
    dend_23 { pt3dadd( 21.688, 138.684, 24.9373, 0.67 ) }
    dend_23 { pt3dadd( 22.198, 142.501, 24.3894, 0.67 ) }
    dend_23 { pt3dadd( 22.4547, 144.171, 24.148, 0.67 ) }
    dend_23 { pt3dadd( 23.0144, 148.419, 23.466, 0.67 ) }
    dend_23 { pt3dadd( 23.693, 153.471, 22.5784, 0.67 ) }
    dend_23 { pt3dadd( 24.3269, 157.037, 21.8852, 0.67 ) }
    dend_23 { pt3dadd( 26.8891, 166.633, 23.0504, 0.67 ) }
    dend_23 { pt3dadd( 27.7235, 176.482, 24.569, 0.67 ) }
    dend_23 { pt3dadd( 27.4603, 186.009, 27.5962, 0.67 ) }
    dend_23 { pt3dadd( 27.0596, 195.039, 31.8745, 0.67 ) }
    dend_23 { pt3dadd( 28.1836, 203.681, 36.7787, 0.67 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 12/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.57981, 42.868, 7.27461, 2.0 ) }
    dend_16 { pt3dadd( -4.03476, 45.5287, 9.19561, 2.0 ) }
    dend_16 { pt3dadd( -5.10647, 46.6903, 10.0343, 2.0 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 15/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.2901, 53.1923, -2.24537, 1.33 ) }
    dend_12 { pt3dadd( 20.1944, 59.1959, -3.60453, 1.33 ) }
    dend_12 { pt3dadd( 20.4728, 61.0441, -4.02295, 1.33 ) }
    dend_12 { pt3dadd( 21.2075, 65.922, -5.12725, 1.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 19.2901, 53.1923, -2.24537, 1.33 ) }
    dend_5 { pt3dadd( 22.5482, 54.5979, 0.311096, 1.33 ) }
    dend_5 { pt3dadd( 26.1619, 56.1569, 3.14665, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 22/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 71.0794, 44.3181, 42.3126, 0.67 ) }
    dend_55 { pt3dadd( 79.0392, 45.7656, 48.1901, 0.67 ) }
    dend_55 { pt3dadd( 86.7994, 48.8041, 53.7172, 0.67 ) }
    dend_55 { pt3dadd( 95.5364, 49.9387, 58.4475, 0.67 ) }
    dend_55 { pt3dadd( 104.465, 52.3916, 62.2254, 0.67 ) }
    dend_55 { pt3dadd( 113.48, 55.7253, 64.9859, 0.67 ) }
    dend_55 { pt3dadd( 122.613, 59.5982, 66.2455, 0.67 ) }
    dend_55 { pt3dadd( 131.789, 63.5622, 66.5365, 0.67 ) }
    dend_55 { pt3dadd( 141.416, 66.2164, 67.0589, 0.67 ) }
    dend_55 { pt3dadd( 151.007, 69.0416, 67.2385, 0.67 ) }
    dend_55 { pt3dadd( 160.839, 70.7012, 68.0031, 0.67 ) }
    dend_55 { pt3dadd( 170.436, 72.8082, 69.8607, 0.67 ) }
    dend_55 { pt3dadd( 180.016, 75.6765, 69.8571, 0.67 ) }
    dend_55 { pt3dadd( 189.55, 78.6396, 70.4237, 0.67 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 36/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 71.0794, 44.3181, 42.3126, 0.67 ) }
    dend_54 { pt3dadd( 78.108, 46.3869, 49.1183, 0.67 ) }
    dend_54 { pt3dadd( 84.219, 47.8327, 56.9007, 0.67 ) }
    dend_54 { pt3dadd( 90.6471, 48.4039, 64.5396, 0.67 ) }
    dend_54 { pt3dadd( 96.2995, 47.1353, 72.6907, 0.67 ) }
    dend_54 { pt3dadd( 103.328, 44.8988, 79.4443, 0.67 ) }
    dend_54 { pt3dadd( 110.477, 41.1434, 85.3415, 0.67 ) }
    dend_54 { pt3dadd( 117.705, 36.6318, 90.5766, 0.67 ) }
    dend_54 { pt3dadd( 123.628, 30.3563, 95.6302, 0.67 ) }
    dend_54 { pt3dadd( 128.842, 24.5883, 101.919, 0.67 ) }
    dend_54 { pt3dadd( 132.195, 17.3216, 107.915, 0.67 ) }
    dend_54 { pt3dadd( 136.477, 9.5279, 112.489, 0.67 ) }
    dend_54 { pt3dadd( 141.131, 2.03183, 117.195, 0.67 ) }
    dend_54 { pt3dadd( 144.801, -5.35764, 122.846, 0.67 ) }
    dend_54 { pt3dadd( 147.984, -13.1077, 128.305, 0.67 ) }
    dend_54 { pt3dadd( 151.907, -20.9985, 133.032, 0.67 ) }
    dend_54 { pt3dadd( 153.795, -29.058, 138.643, 0.67 ) }
    dend_54 { pt3dadd( 154.402, -37.7803, 143.496, 0.67 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 54/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.10647, 46.6903, 10.0343, 0.67 ) }
    dend_22 { pt3dadd( -6.00913, 47.3859, 11.7629, 0.67 ) }
    dend_22 { pt3dadd( -7.63024, 48.7962, 14.8912, 0.67 ) }
    dend_22 { pt3dadd( -9.13358, 50.3489, 18.0281, 0.67 ) }
    dend_22 { pt3dadd( -9.78816, 51.064, 19.3776, 0.67 ) }
    dend_22 { pt3dadd( -11.065, 52.2943, 21.7371, 0.67 ) }
    dend_22 { pt3dadd( -15.6358, 56.6981, 30.1827, 0.67 ) }
    dend_22 { pt3dadd( -16.5711, 57.6796, 32.1629, 0.67 ) }
    dend_22 { pt3dadd( -17.4728, 58.823, 34.4187, 0.33 ) }
    dend_22 { pt3dadd( -17.9128, 59.3687, 35.6922, 0.67 ) }
    dend_22 { pt3dadd( -18.933, 60.4219, 38.3965, 0.33 ) }
    dend_22 { pt3dadd( -21.3825, 64.4404, 47.22, 0.33 ) }
    dend_22 { pt3dadd( -22.0366, 68.153, 56.4822, 0.33 ) }
    dend_22 { pt3dadd( -22.4097, 72.75, 65.355, 0.33 ) }
    dend_22 { pt3dadd( -22.4057, 77.0688, 74.3744, 0.33 ) }
    dend_22 { pt3dadd( -20.8506, 80.2782, 83.7168, 0.33 ) }
    dend_22 { pt3dadd( -19.0225, 83.9733, 92.8275, 0.33 ) }
    dend_22 { pt3dadd( -18.1366, 88.1113, 101.888, 0.33 ) }
    dend_22 { pt3dadd( -16.4482, 92.7032, 110.609, 0.33 ) }
    dend_22 { pt3dadd( -15.1736, 97.5007, 119.29, 0.33 ) }
    dend_22 { pt3dadd( -13.701, 100.993, 128.545, 0.33 ) }
    dend_22 { pt3dadd( -11.7078, 104.115, 137.833, 0.33 ) }
    dend_22 { pt3dadd( -11.2566, 107.248, 147.319, 0.33 ) }
    dend_22 { pt3dadd( -9.63305, 109.782, 156.856, 0.33 ) }
    dend_22 { pt3dadd( -9.407, 112.264, 166.54, 0.33 ) }
    dend_22 { pt3dadd( -11.0027, 115.414, 175.896, 0.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.10647, 46.6903, 10.0343, 1.33 ) }
    dend_17 { pt3dadd( -10.547, 54.5883, 4.28833, 1.33 ) }
    dend_17 { pt3dadd( -13.8473, 59.3795, 0.802799, 1.33 ) }
    dend_17 { pt3dadd( -15.1117, 61.2151, -0.532583, 0.67 ) }
    dend_17 { pt3dadd( -16.9647, 63.9051, -2.48956, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 21.2075, 65.922, -5.12725, 0.67 ) }
    dend_14 { pt3dadd( 24.4351, 65.8064, -5.97715, 0.67 ) }
    dend_14 { pt3dadd( 25.9546, 65.9947, -6.64767, 0.67 ) }
    dend_14 { pt3dadd( 27.6512, 66.5279, -7.56539, 0.67 ) }
    dend_14 { pt3dadd( 29.5767, 67.2689, -8.96527, 0.67 ) }
    dend_14 { pt3dadd( 31.3685, 68.0328, -10.2479, 0.67 ) }
    dend_14 { pt3dadd( 32.6333, 68.6005, -11.164, 0.67 ) }
    dend_14 { pt3dadd( 36.3461, 70.7627, -14.0851, 1.33 ) }
    dend_14 { pt3dadd( 38.0001, 71.9506, -15.3999, 0.67 ) }
    dend_14 { pt3dadd( 41.1391, 74.5533, -18.3118, 0.67 ) }
    dend_14 { pt3dadd( 42.7524, 76.0143, -19.9227, 0.67 ) }
    dend_14 { pt3dadd( 45.2218, 78.4367, -22.5163, 1.33 ) }
    dend_14 { pt3dadd( 46.1663, 79.3095, -23.6292, 0.33 ) }
    dend_14 { pt3dadd( 48.3458, 80.9923, -26.0636, 1.33 ) }
    dend_14 { pt3dadd( 51.7362, 83.4597, -29.995, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 52.3217, 83.8877, -30.6807, 1.33 ) }
    dend_14 { pt3dadd( 53.9234, 84.8932, -32.7131, 0.33 ) }
    dend_14 { pt3dadd( 57.7545, 86.8559, -37.5636, 1.33 ) }
    dend_14 { pt3dadd( 59.7192, 87.6016, -39.8963, 0.33 ) }
    dend_14 { pt3dadd( 59.9389, 87.6532, -40.1508, 0.67 ) }
    dend_14 { pt3dadd( 60.9875, 87.8319, -41.1964, 0.67 ) }
    dend_14 { pt3dadd( 64.0281, 88.2334, -44.0542, 1.33 ) }
    dend_14 { pt3dadd( 66.6094, 88.5422, -46.5023, 0.33 ) }
    dend_14 { pt3dadd( 67.9518, 88.6892, -47.6794, 1.33 ) }
    dend_14 { pt3dadd( 71.7742, 89.1057, -51.223, 0.33 ) }
    dend_14 { pt3dadd( 73.8728, 89.4293, -53.2127, 1.33 ) }
    dend_14 { pt3dadd( 75.134, 89.7004, -54.4524, 0.67 ) }
    dend_14 { pt3dadd( 78.5147, 90.6612, -58.019, 1.33 ) }
    dend_14 { pt3dadd( 79.9732, 91.1775, -59.7991, 0.33 ) }
    dend_14 { pt3dadd( 80.6082, 91.4403, -60.5992, 1.33 ) }
    dend_14 { pt3dadd( 82.3056, 92.1809, -62.7607, 0.33 ) }
    dend_14 { pt3dadd( 83.8967, 92.8242, -64.7326, 1.33 ) }
    dend_14 { pt3dadd( 86.6745, 93.8913, -68.0312, 0.67 ) }
    dend_14 { pt3dadd( 89.3182, 94.9867, -70.909, 0.33 ) }
    dend_14 { pt3dadd( 90.6992, 95.659, -72.3842, 1.33 ) }
    dend_14 { pt3dadd( 93.0634, 96.9057, -74.9087, 0.33 ) }
    dend_14 { pt3dadd( 94.5551, 97.8441, -76.576, 0.67 ) }
    dend_14 { pt3dadd( 95.9643, 98.8851, -78.2275, 0.33 ) }
    dend_14 { pt3dadd( 97.0969, 99.8245, -79.5749, 1.33 ) }
    dend_14 { pt3dadd( 98.3834, 101.021, -81.1841, 0.33 ) }
    dend_14 { pt3dadd( 100.6, 103.148, -84.2713, 1.33 ) }
    dend_14 { pt3dadd( 102.96, 105.2, -87.3718, 0.33 ) }
    dend_14 { pt3dadd( 104.05, 106.005, -88.7703, 0.33 ) }
    dend_14 { pt3dadd( 104.707, 106.382, -89.5042, 1.33 ) }
    dend_14 { pt3dadd( 106.075, 106.954, -90.9942, 0.33 ) }
    dend_14 { pt3dadd( 109.058, 107.991, -94.2654, 1.33 ) }
    dend_14 { pt3dadd( 111.254, 108.74, -96.5836, 0.33 ) }
    dend_14 { pt3dadd( 112.448, 109.228, -97.9622, 0.67 ) }
    dend_14 { pt3dadd( 113.45, 109.815, -99.4445, 0.33 ) }
    dend_14 { pt3dadd( 115.88, 111.829, -104.061, 1.33 ) }
    dend_14 { pt3dadd( 117.178, 113.379, -107.41, 0.33 ) }
    dend_14 { pt3dadd( 117.449, 113.947, -108.428, 0.67 ) }
    dend_14 { pt3dadd( 117.855, 115.758, -111.496, 0.33 ) }
    dend_14 { pt3dadd( 118.102, 117.697, -114.466, 1.33 ) }
    dend_14 { pt3dadd( 118.127, 118.8, -116.067, 0.33 ) }
    dend_14 { pt3dadd( 118.061, 119.668, -117.129, 1.33 ) }
    dend_14 { pt3dadd( 117.896, 120.963, -118.674, 0.33 ) }
    dend_14 { pt3dadd( 117.649, 123.297, -121.59, 1.33 ) }
    dend_14 { pt3dadd( 117.569, 124.954, -123.544, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 44/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 21.2075, 65.922, -5.12725, 0.33 ) }
    dend_13 { pt3dadd( 21.2575, 67.8916, -5.60539, 0.33 ) }
    dend_13 { pt3dadd( 21.195, 70.1771, -6.16949, 0.67 ) }
    dend_13 { pt3dadd( 21.2477, 71.8376, -6.87493, 0.33 ) }
    dend_13 { pt3dadd( 21.2746, 72.4417, -7.15631, 0.67 ) }
    dend_13 { pt3dadd( 21.5002, 74.8256, -8.39, 0.33 ) }
    dend_13 { pt3dadd( 21.6102, 76.1472, -9.07296, 1.33 ) }
    dend_13 { pt3dadd( 21.708, 78.2706, -10.1947, 0.33 ) }
    dend_13 { pt3dadd( 21.9644, 82.2893, -12.1862, 1.33 ) }
    dend_13 { pt3dadd( 22.0862, 84.0654, -12.9693, 0.67 ) }
    dend_13 { pt3dadd( 22.4281, 88.9067, -14.7266, 0.67 ) }
    dend_13 { pt3dadd( 22.5965, 90.7821, -15.2452, 0.33 ) }
    dend_13 { pt3dadd( 22.929, 93.3146, -15.7221, 1.33 ) }
    dend_13 { pt3dadd( 23.4367, 96.9106, -16.2255, 0.33 ) }
    dend_13 { pt3dadd( 23.6724, 98.6435, -16.4355, 1.33 ) }
    dend_13 { pt3dadd( 24.1023, 101.426, -16.8473, 0.33 ) }
    dend_13 { pt3dadd( 24.6031, 104.012, -17.2703, 1.33 ) }
    dend_13 { pt3dadd( 25.3687, 107.207, -17.9245, 0.67 ) }
    dend_13 { pt3dadd( 26.2628, 110.751, -18.8461, 1.33 ) }
    dend_13 { pt3dadd( 27.0186, 114.384, -19.9051, 0.33 ) }
    dend_13 { pt3dadd( 27.2813, 115.694, -20.269, 1.33 ) }
    dend_13 { pt3dadd( 27.8934, 118.955, -21.0601, 0.33 ) }
    dend_13 { pt3dadd( 28.1784, 120.708, -21.4722, 1.33 ) }
    dend_13 { pt3dadd( 28.7438, 124.482, -22.1372, 0.33 ) }
    dend_13 { pt3dadd( 29.3222, 128.04, -22.376, 0.33 ) }
    dend_13 { pt3dadd( 29.681, 130.33, -22.3665, 1.33 ) }
    dend_13 { pt3dadd( 30.1359, 133.462, -22.3838, 0.33 ) }
    dend_13 { pt3dadd( 30.4674, 136.124, -22.419, 0.67 ) }
    dend_13 { pt3dadd( 30.8652, 138.899, -22.5007, 0.33 ) }
    dend_13 { pt3dadd( 30.985, 139.636, -22.5236, 1.33 ) }
    dend_13 { pt3dadd( 31.1201, 140.371, -22.5898, 1.33 ) }
    dend_13 { pt3dadd( 31.5342, 142.857, -22.9615, 0.33 ) }
    dend_13 { pt3dadd( 31.7272, 143.884, -23.1064, 0.67 ) }
    dend_13 { pt3dadd( 32.0834, 145.952, -23.3362, 0.33 ) }
    dend_13 { pt3dadd( 32.1663, 146.403, -23.4443, 0.67 ) }
    dend_13 { pt3dadd( 32.4164, 147.673, -23.77, 0.33 ) }
    dend_13 { pt3dadd( 32.5893, 148.627, -24.0062, 0.67 ) }
    dend_13 { pt3dadd( 32.8538, 150.264, -24.3841, 0.33 ) }
    dend_13 { pt3dadd( 33.0208, 151.413, -24.6692, 2.0 ) }
    dend_13 { pt3dadd( 33.7014, 156.091, -25.8544, 0.33 ) }
    dend_13 { pt3dadd( 33.8141, 157.054, -26.089, 0.67 ) }
    dend_13 { pt3dadd( 33.9792, 159.346, -26.6032, 0.33 ) }
    dend_13 { pt3dadd( 33.9901, 159.681, -26.6612, 0.67 ) }
    dend_13 { pt3dadd( 33.9937, 160.727, -26.7968, 0.33 ) }
    dend_13 { pt3dadd( 33.9521, 163.056, -26.9742, 0.67 ) }
    dend_13 { pt3dadd( 33.8464, 164.537, -26.9872, 0.33 ) }
    dend_13 { pt3dadd( 33.6713, 166.474, -27.0026, 0.67 ) }
    dend_13 { pt3dadd( 33.2726, 170.787, -26.9952, 0.33 ) }
    dend_13 { pt3dadd( 33.2218, 171.252, -26.9899, 0.67 ) }
    dend_13 { pt3dadd( 33.0399, 172.732, -26.9595, 0.33 ) }
    dend_13 { pt3dadd( 32.943, 173.47, -27.0157, 0.67 ) }
    dend_13 { pt3dadd( 32.7817, 175.329, -27.2961, 0.33 ) }
    dend_13 { pt3dadd( 32.7537, 175.769, -27.3882, 0.67 ) }
    dend_13 { pt3dadd( 32.6418, 178.368, -28.0478, 0.33 ) }
    dend_13 { pt3dadd( 32.6005, 180.024, -28.4316, 1.33 ) }
    dend_13 { pt3dadd( 32.4542, 185.105, -29.5067, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 32.4265, 186.762, -29.7089, 1.33 ) }
    dend_13 { pt3dadd( 32.4372, 188.987, -29.8961, 0.33 ) }
    dend_13 { pt3dadd( 32.4719, 190.039, -29.9491, 1.33 ) }
    dend_13 { pt3dadd( 32.6555, 192.87, -29.9251, 0.33 ) }
    dend_13 { pt3dadd( 32.8559, 194.975, -29.6759, 0.67 ) }
    dend_13 { pt3dadd( 33.3902, 200.485, -28.3991, 0.33 ) }
    dend_13 { pt3dadd( 33.5144, 202.194, -27.9696, 0.67 ) }
    dend_13 { pt3dadd( 33.6112, 203.945, -27.5799, 0.33 ) }
    dend_13 { pt3dadd( 33.6434, 204.995, -27.3535, 0.67 ) }
    dend_13 { pt3dadd( 33.7536, 208.616, -26.6802, 0.33 ) }
    dend_13 { pt3dadd( 33.7609, 210.6, -26.3674, 1.33 ) }
    dend_13 { pt3dadd( 33.5293, 213.437, -26.0215, 0.33 ) }
    dend_13 { pt3dadd( 33.1593, 216.21, -25.6626, 0.67 ) }
    dend_13 { pt3dadd( 32.6062, 219.218, -25.3762, 0.33 ) }
    dend_13 { pt3dadd( 32.3207, 220.623, -25.3367, 0.67 ) }
    dend_13 { pt3dadd( 31.9535, 222.472, -25.4763, 0.33 ) }
    dend_13 { pt3dadd( 31.8103, 224.03, -25.542, 1.33 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 17/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 26.1619, 56.1569, 3.14665, 0.67 ) }
    dend_7 { pt3dadd( 28.0177, 58.1836, 5.02852, 0.67 ) }
    dend_7 { pt3dadd( 31.7819, 62.2944, 8.84571, 1.33 ) }
    dend_7 { pt3dadd( 33.4599, 64.127, 10.5475, 1.33 ) }
    dend_7 { pt3dadd( 37.2266, 68.2406, 14.3672, 1.33 ) }
    dend_7 { pt3dadd( 39.8645, 71.1216, 17.0422, 1.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 26.1619, 56.1569, 3.14665, 0.67 ) }
    dend_6 { pt3dadd( 30.2896, 56.133, 5.17008, 0.67 ) }
    dend_6 { pt3dadd( 33.4093, 56.1405, 6.73255, 0.67 ) }
    dend_6 { pt3dadd( 36.0259, 56.1816, 7.94712, 0.67 ) }
    dend_6 { pt3dadd( 41.9352, 56.2305, 10.508, 0.67 ) }
    dend_6 { pt3dadd( 43.4768, 56.251, 11.1266, 0.67 ) }
    dend_6 { pt3dadd( 48.7595, 56.5518, 13.2672, 0.67 ) }
    dend_6 { pt3dadd( 51.9749, 56.7908, 14.4634, 0.33 ) }
    dend_6 { pt3dadd( 55.6126, 57.259, 15.7552, 0.67 ) }
    dend_6 { pt3dadd( 57.4977, 57.5972, 16.3357, 0.33 ) }
    dend_6 { pt3dadd( 60.013, 58.0548, 16.8531, 0.67 ) }
    dend_6 { pt3dadd( 64.867, 58.93, 17.5461, 0.67 ) }
    dend_6 { pt3dadd( 67.573, 59.4121, 17.6627, 0.33 ) }
    dend_6 { pt3dadd( 69.2314, 59.6518, 17.6182, 0.67 ) }
    dend_6 { pt3dadd( 71.4508, 59.8013, 17.4016, 0.33 ) }
    dend_6 { pt3dadd( 74.1149, 59.8611, 16.9825, 2.0 ) }
    dend_6 { pt3dadd( 75.7551, 59.7449, 16.5812, 0.67 ) }
    dend_6 { pt3dadd( 77.1639, 59.5131, 16.1492, 0.67 ) }
    dend_6 { pt3dadd( 80.6765, 58.815, 15.1451, 0.33 ) }
    dend_6 { pt3dadd( 82.8175, 58.2478, 14.3594, 0.67 ) }
    dend_6 { pt3dadd( 84.8154, 57.5943, 13.5911, 0.67 ) }
    dend_6 { pt3dadd( 86.5846, 56.9436, 12.9292, 0.67 ) }
    dend_6 { pt3dadd( 88.6448, 56.1026, 12.2309, 0.33 ) }
    dend_6 { pt3dadd( 89.7286, 55.6214, 12.0213, 0.67 ) }
    dend_6 { pt3dadd( 92.433, 54.4469, 11.9328, 0.33 ) }
    dend_6 { pt3dadd( 94.6334, 53.4335, 12.0753, 1.33 ) }
    dend_6 { pt3dadd( 95.8511, 52.8918, 12.3975, 0.67 ) }
    dend_6 { pt3dadd( 96.4306, 52.6834, 12.6541, 1.33 ) }
    dend_6 { pt3dadd( 100.071, 51.5549, 14.5413, 0.33 ) }
    dend_6 { pt3dadd( 100.704, 51.3853, 14.8871, 0.67 ) }
    dend_6 { pt3dadd( 102.48, 50.9218, 15.8972, 0.33 ) }
    dend_6 { pt3dadd( 106.059, 50.0646, 17.986, 0.33 ) }
    dend_6 { pt3dadd( 107.762, 49.667, 19.0085, 0.67 ) }
    dend_6 { pt3dadd( 112.669, 48.4972, 21.8689, 0.67 ) }
    dend_6 { pt3dadd( 113.256, 48.3629, 22.1892, 0.67 ) }
    dend_6 { pt3dadd( 114.318, 48.1262, 22.6839, 0.67 ) }
    dend_6 { pt3dadd( 117.168, 47.5243, 23.7407, 0.33 ) }
    dend_6 { pt3dadd( 119.074, 47.087, 24.3029, 1.33 ) }
    dend_6 { pt3dadd( 121.621, 46.5752, 25.0998, 0.33 ) }
    dend_6 { pt3dadd( 122.73, 46.3717, 25.523, 0.67 ) }
    dend_6 { pt3dadd( 124.731, 45.9027, 26.5496, 0.33 ) }
    dend_6 { pt3dadd( 125.014, 45.8346, 26.6967, 0.67 ) }
    dend_6 { pt3dadd( 127.035, 45.2343, 27.7233, 0.33 ) }
    dend_6 { pt3dadd( 127.832, 44.9791, 28.2675, 0.67 ) }
    dend_6 { pt3dadd( 130.208, 44.1281, 30.4685, 0.33 ) }
    dend_6 { pt3dadd( 132.237, 43.2586, 32.7853, 0.33 ) }
    dend_6 { pt3dadd( 141.599, 43.6301, 36.2816, 0.33 ) }
    dend_6 { pt3dadd( 150.365, 45.1787, 40.838, 0.33 ) }
    dend_6 { pt3dadd( 158.662, 48.2151, 45.5211, 0.33 ) }
    dend_6 { pt3dadd( 167.278, 51.4269, 49.4532, 0.33 ) }
    dend_6 { pt3dadd( 176.095, 55.8181, 51.1748, 0.33 ) }
    dend_6 { pt3dadd( 184.559, 61.0887, 51.9414, 0.33 ) }
    dend_6 { pt3dadd( 193.137, 66.2234, 51.7142, 0.33 ) }
    dend_6 { pt3dadd( 202.295, 70.2227, 52.09, 0.33 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 77/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -16.9647, 63.9051, -2.48956, 0.67 ) }
    dend_21 { pt3dadd( -21.91, 66.0127, -2.79144, 0.67 ) }
    dend_21 { pt3dadd( -25.3993, 67.7189, -2.97729, 0.67 ) }
    dend_21 { pt3dadd( -27.2355, 68.9418, -2.63715, 0.33 ) }
    dend_21 { pt3dadd( -29.3662, 70.9274, -1.67255, 0.67 ) }
    dend_21 { pt3dadd( -29.3662, 70.9274, -1.67255, 0.67 ) }
    dend_21 { pt3dadd( -30.3585, 71.9032, -1.13681, 0.33 ) }
    dend_21 { pt3dadd( -32.1458, 73.828, -0.0829429, 0.67 ) }
    dend_21 { pt3dadd( -36.0896, 79.0126, 1.95729, 0.67 ) }
    dend_21 { pt3dadd( -38.1157, 82.0551, 2.69014, 0.67 ) }
    dend_21 { pt3dadd( -39.6717, 84.703, 2.82217, 0.67 ) }
    dend_21 { pt3dadd( -41.9397, 88.5244, 2.28754, 0.67 ) }
    dend_21 { pt3dadd( -44.0391, 92.056, 0.791847, 1.33 ) }
    dend_21 { pt3dadd( -45.9303, 94.7457, -1.5071, 0.67 ) }
    dend_21 { pt3dadd( -47.4725, 96.6564, -3.80466, 1.33 ) }
    dend_21 { pt3dadd( -48.8459, 98.1985, -6.06616, 0.67 ) }
    dend_21 { pt3dadd( -50.1428, 99.7043, -8.31635, 0.67 ) }
    dend_21 { pt3dadd( -51.7818, 101.566, -11.0334, 0.33 ) }
    dend_21 { pt3dadd( -54.0545, 103.555, -13.8729, 0.67 ) }
    dend_21 { pt3dadd( -55.4171, 104.616, -15.2968, 1.33 ) }
    dend_21 { pt3dadd( -58.0512, 106.535, -17.3639, 0.33 ) }
    dend_21 { pt3dadd( -59.9223, 107.899, -18.5439, 0.67 ) }
    dend_21 { pt3dadd( -60.9243, 108.69, -19.0709, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_21 { pt3dadd( -62.4508, 109.944, -19.5156, 1.33 ) }
    dend_21 { pt3dadd( -65.438, 112.675, -19.8, 0.67 ) }
    dend_21 { pt3dadd( -67.8484, 114.924, -19.7478, 0.33 ) }
    dend_21 { pt3dadd( -69.447, 116.482, -19.5396, 0.33 ) }
    dend_21 { pt3dadd( -70.1552, 117.184, -19.4266, 1.33 ) }
    dend_21 { pt3dadd( -73.2859, 120.417, -18.815, 0.67 ) }
    dend_21 { pt3dadd( -75.3265, 122.673, -18.3553, 1.33 ) }
    dend_21 { pt3dadd( -77.216, 124.756, -17.8845, 0.67 ) }
    dend_21 { pt3dadd( -78.8084, 126.526, -17.5836, 0.33 ) }
    dend_21 { pt3dadd( -80.1641, 128.025, -17.4217, 2.0 ) }
    dend_21 { pt3dadd( -81.6271, 129.543, -17.395, 0.67 ) }
    dend_21 { pt3dadd( -84.5478, 132.285, -17.667, 0.67 ) }
    dend_21 { pt3dadd( -85.6714, 133.246, -17.8602, 1.33 ) }
    dend_21 { pt3dadd( -87.5276, 134.746, -18.3577, 0.33 ) }
    dend_21 { pt3dadd( -89.8872, 136.536, -19.093, 0.33 ) }
    dend_21 { pt3dadd( -92.4756, 138.459, -20.0089, 0.33 ) }
    dend_21 { pt3dadd( -93.0548, 138.883, -20.2298, 0.67 ) }
    dend_21 { pt3dadd( -95.0698, 140.287, -21.0382, 0.33 ) }
    dend_21 { pt3dadd( -97.3102, 141.977, -21.9474, 1.33 ) }
    dend_21 { pt3dadd( -99.309, 143.446, -22.7624, 0.33 ) }
    dend_21 { pt3dadd( -99.5656, 143.637, -22.8465, 0.67 ) }
    dend_21 { pt3dadd( -101.261, 145.0, -23.3719, 0.33 ) }
    dend_21 { pt3dadd( -102.581, 146.084, -23.7149, 2.0 ) }
    dend_21 { pt3dadd( -104.388, 147.528, -24.0242, 0.33 ) }
    dend_21 { pt3dadd( -106.922, 149.496, -24.2874, 0.33 ) }
    dend_21 { pt3dadd( -108.678, 150.849, -24.5793, 0.67 ) }
    dend_21 { pt3dadd( -110.12, 151.911, -24.711, 0.33 ) }
    dend_21 { pt3dadd( -110.713, 152.353, -24.7135, 0.67 ) }
    dend_21 { pt3dadd( -113.096, 154.204, -24.5013, 0.33 ) }
    dend_21 { pt3dadd( -113.361, 154.393, -24.4647, 0.67 ) }
    dend_21 { pt3dadd( -115.682, 155.983, -24.1026, 0.33 ) }
    dend_21 { pt3dadd( -118.21, 157.548, -23.8505, 0.67 ) }
    dend_21 { pt3dadd( -120.29, 158.735, -23.6324, 0.33 ) }
    dend_21 { pt3dadd( -121.482, 159.41, -23.5135, 0.67 ) }
    dend_21 { pt3dadd( -123.801, 160.76, -23.2788, 0.33 ) }
    dend_21 { pt3dadd( -124.663, 161.256, -23.1899, 0.67 ) }
    dend_21 { pt3dadd( -126.291, 162.165, -23.0186, 0.33 ) }
    dend_21 { pt3dadd( -127.447, 162.812, -23.0066, 1.33 ) }
    dend_21 { pt3dadd( -130.248, 164.297, -22.9706, 0.33 ) }
    dend_21 { pt3dadd( -131.804, 165.21, -22.9452, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -16.9647, 63.9051, -2.48956, 0.67 ) }
    dend_18 { pt3dadd( -21.1821, 63.8674, -4.00723, 0.67 ) }
    dend_18 { pt3dadd( -24.0745, 63.8415, -5.04806, 0.67 ) }
    dend_18 { pt3dadd( -27.5819, 63.8102, -6.31024, 0.67 ) }
    dend_18 { pt3dadd( -29.8154, 63.7902, -7.11395, 0.67 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 39.8645, 71.1216, 17.0422, 0.67 ) }
    dend_11 { pt3dadd( 41.9813, 69.6385, 20.6647, 0.67 ) }
    dend_11 { pt3dadd( 44.5196, 67.8602, 25.0086, 0.67 ) }
    dend_11 { pt3dadd( 49.0475, 64.6879, 32.7575, 0.67 ) }
    dend_11 { pt3dadd( 51.8794, 62.7039, 37.6039, 0.67 ) }
    dend_11 { pt3dadd( 55.81, 58.9588, 46.0018, 0.67 ) }
    dend_11 { pt3dadd( 61.1223, 55.8991, 53.9023, 0.67 ) }
    dend_11 { pt3dadd( 66.1591, 52.4561, 61.8254, 0.67 ) }
    dend_11 { pt3dadd( 71.3092, 47.6239, 68.9054, 0.67 ) }
    dend_11 { pt3dadd( 75.92, 42.6219, 76.2348, 0.67 ) }
    dend_11 { pt3dadd( 81.7323, 36.357, 81.4279, 0.67 ) }
    dend_11 { pt3dadd( 88.2184, 32.3807, 87.9179, 0.67 ) }
    dend_11 { pt3dadd( 94.5723, 28.452, 94.5657, 0.67 ) }
    dend_11 { pt3dadd( 99.9998, 23.5983, 101.42, 0.67 ) }
    dend_11 { pt3dadd( 105.099, 18.5609, 108.394, 0.67 ) }
    dend_11 { pt3dadd( 109.915, 13.2807, 115.388, 0.67 ) }
    dend_11 { pt3dadd( 115.378, 7.29775, 121.25, 0.67 ) }
    dend_11 { pt3dadd( 120.1, 2.11587, 128.381, 0.67 ) }
    dend_11 { pt3dadd( 125.83, -1.85531, 135.55, 0.67 ) }
    dend_11 { pt3dadd( 131.129, -6.69029, 142.518, 0.67 ) }
    dend_11 { pt3dadd( 135.077, -11.4669, 150.366, 0.67 ) }
    dend_11 { pt3dadd( 139.851, -17.8527, 156.401, 0.67 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 67/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 39.8645, 71.1216, 17.0422, 0.33 ) }
    dend_8 { pt3dadd( 42.0836, 72.2317, 17.843, 0.33 ) }
    dend_8 { pt3dadd( 46.0952, 74.2386, 19.2906, 0.67 ) }
    dend_8 { pt3dadd( 47.2308, 74.8065, 19.7004, 0.33 ) }
    dend_8 { pt3dadd( 49.027, 75.7052, 20.3486, 0.67 ) }
    dend_8 { pt3dadd( 53.2501, 77.8179, 21.8725, 0.67 ) }
    dend_8 { pt3dadd( 55.3163, 78.8515, 22.6181, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 74/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -29.8154, 63.7902, -7.11395, 0.67 ) }
    dend_20 { pt3dadd( -32.8015, 65.3923, -7.31621, 0.67 ) }
    dend_20 { pt3dadd( -35.7974, 66.9837, -7.46576, 0.67 ) }
    dend_20 { pt3dadd( -37.2586, 67.8311, -7.527, 0.67 ) }
    dend_20 { pt3dadd( -38.6205, 68.7782, -7.61517, 0.67 ) }
    dend_20 { pt3dadd( -41.7723, 71.2771, -7.65716, 1.33 ) }
    dend_20 { pt3dadd( -44.301, 73.4097, -7.60017, 0.67 ) }
    dend_20 { pt3dadd( -47.2645, 75.8656, -7.40272, 0.67 ) }
    dend_20 { pt3dadd( -49.0587, 77.3884, -7.246, 1.33 ) }
    dend_20 { pt3dadd( -51.9472, 79.7937, -7.14337, 0.67 ) }
    dend_20 { pt3dadd( -54.8707, 82.2859, -7.17526, 1.33 ) }
    dend_20 { pt3dadd( -57.7092, 84.6198, -7.49867, 0.33 ) }
    dend_20 { pt3dadd( -59.6141, 85.9155, -7.86207, 0.67 ) }
    dend_20 { pt3dadd( -61.3841, 86.7569, -8.37289, 0.33 ) }
    dend_20 { pt3dadd( -65.344, 87.9406, -9.87265, 1.33 ) }
    dend_20 { pt3dadd( -67.9428, 88.336, -10.9729, 0.67 ) }
    dend_20 { pt3dadd( -70.9159, 88.6187, -12.4457, 0.67 ) }
    dend_20 { pt3dadd( -73.5668, 88.8347, -13.8358, 1.33 ) }
    dend_20 { pt3dadd( -75.0735, 89.0488, -14.7193, 0.33 ) }
    dend_20 { pt3dadd( -77.1659, 89.3839, -16.1018, 1.33 ) }
    dend_20 { pt3dadd( -79.2279, 89.8427, -17.849, 0.33 ) }
    dend_20 { pt3dadd( -80.0572, 90.084, -18.688, 0.67 ) }
    dend_20 { pt3dadd( -80.7411, 90.3869, -19.4317, 0.33 ) }
    dend_20 { pt3dadd( -83.2156, 91.7693, -22.2332, 0.67 ) }
    dend_20 { pt3dadd( -85.2107, 92.8911, -23.9622, 0.33 ) }
    dend_20 { pt3dadd( -88.5688, 94.6476, -25.9809, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_20 { pt3dadd( -91.3882, 95.7159, -26.7752, 0.33 ) }
    dend_20 { pt3dadd( -92.6771, 96.0303, -26.8556, 1.33 ) }
    dend_20 { pt3dadd( -94.3433, 96.3414, -26.7156, 0.67 ) }
    dend_20 { pt3dadd( -99.1263, 97.028, -25.7401, 0.33 ) }
    dend_20 { pt3dadd( -100.137, 97.127, -25.4574, 2.0 ) }
    dend_20 { pt3dadd( -104.711, 97.4702, -24.0279, 0.33 ) }
    dend_20 { pt3dadd( -105.673, 97.5267, -23.771, 0.33 ) }
    dend_20 { pt3dadd( -109.228, 97.7576, -22.8657, 0.67 ) }
    dend_20 { pt3dadd( -110.691, 97.8804, -22.5814, 0.67 ) }
    dend_20 { pt3dadd( -112.969, 98.1696, -22.3614, 0.33 ) }
    dend_20 { pt3dadd( -115.282, 98.5533, -22.2141, 0.33 ) }
    dend_20 { pt3dadd( -117.628, 99.0746, -22.1645, 0.67 ) }
    dend_20 { pt3dadd( -120.376, 99.7374, -22.1534, 0.67 ) }
    dend_20 { pt3dadd( -122.632, 100.279, -22.1912, 0.67 ) }
    dend_20 { pt3dadd( -124.68, 100.734, -22.2923, 0.33 ) }
    dend_20 { pt3dadd( -127.061, 101.194, -22.4903, 0.33 ) }
    dend_20 { pt3dadd( -127.528, 101.233, -22.4986, 0.67 ) }
    dend_20 { pt3dadd( -129.929, 101.301, -22.4049, 0.33 ) }
    dend_20 { pt3dadd( -129.929, 101.301, -22.4049, 1.33 ) }
    dend_20 { pt3dadd( -132.483, 101.331, -22.0108, 0.33 ) }
    dend_20 { pt3dadd( -133.408, 101.37, -21.8465, 0.67 ) }
    dend_20 { pt3dadd( -137.288, 101.819, -21.0102, 0.67 ) }
    dend_20 { pt3dadd( -138.716, 102.085, -20.6736, 0.67 ) }
    dend_20 { pt3dadd( -140.602, 102.58, -20.1245, 0.67 ) }
    dend_20 { pt3dadd( -142.515, 103.232, -19.5206, 0.33 ) }
    dend_20 { pt3dadd( -143.172, 103.505, -19.2942, 0.67 ) }
    dend_20 { pt3dadd( -145.099, 104.303, -18.6538, 0.33 ) }
    dend_20 { pt3dadd( -145.694, 104.543, -18.4697, 0.67 ) }
    dend_20 { pt3dadd( -149.115, 105.79, -17.435, 0.33 ) }
    dend_20 { pt3dadd( -150.608, 106.369, -16.9963, 1.33 ) }
    dend_20 { pt3dadd( -154.436, 107.803, -15.7436, 0.33 ) }
    dend_20 { pt3dadd( -155.776, 108.296, -15.3094, 0.33 ) }
    dend_20 { pt3dadd( -156.072, 108.396, -15.2006, 0.67 ) }
    dend_20 { pt3dadd( -158.758, 109.226, -14.0955, 0.67 ) }
    dend_20 { pt3dadd( -160.625, 109.725, -13.1792, 0.67 ) }
    dend_20 { pt3dadd( -163.13, 110.166, -11.7265, 0.67 ) }
    dend_20 { pt3dadd( -165.637, 110.448, -9.97536, 0.33 ) }
    dend_20 { pt3dadd( -168.126, 110.708, -8.98451, 0.67 ) }
    dend_20 { pt3dadd( -169.436, 110.825, -8.73752, 0.33 ) }
    dend_20 { pt3dadd( -171.571, 111.014, -8.66115, 0.33 ) }
    dend_20 { pt3dadd( -172.769, 111.127, -8.75686, 1.33 ) }
    dend_20 { pt3dadd( -175.55, 111.511, -9.40648, 0.33 ) }
    dend_20 { pt3dadd( -184.826, 113.111, -12.3111, 0.33 ) }
    dend_20 { pt3dadd( -185.87, 113.334, -12.7176, 0.67 ) }
    dend_20 { pt3dadd( -187.128, 113.666, -13.2616, 0.33 ) }
    dend_20 { pt3dadd( -187.769, 113.862, -13.5761, 0.67 ) }
    dend_20 { pt3dadd( -190.333, 114.782, -14.8635, 0.33 ) }
    dend_20 { pt3dadd( -191.256, 115.165, -15.3369, 0.67 ) }
    dend_20 { pt3dadd( -193.403, 116.183, -16.2273, 0.33 ) }
    dend_20 { pt3dadd( -195.127, 117.009, -16.9749, 0.67 ) }
    dend_20 { pt3dadd( -198.234, 118.444, -18.3121, 0.33 ) }
    dend_20 { pt3dadd( -199.497, 119.04, -18.8457, 0.67 ) }
    dend_20 { pt3dadd( -202.717, 120.566, -20.1206, 0.33 ) }
    dend_20 { pt3dadd( -203.052, 120.721, -20.2587, 0.67 ) }
    dend_20 { pt3dadd( -205.468, 121.828, -21.1809, 0.33 ) }
    dend_20 { pt3dadd( -206.28, 122.189, -21.496, 0.67 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 56/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -29.8154, 63.7902, -7.11395, 0.67 ) }
    dend_19 { pt3dadd( -33.8291, 65.9482, -7.0008, 0.67 ) }
    dend_19 { pt3dadd( -35.3424, 66.7283, -6.96481, 0.33 ) }
    dend_19 { pt3dadd( -36.8702, 67.4747, -6.93379, 1.33 ) }
    dend_19 { pt3dadd( -40.2685, 69.1776, -6.87586, 0.33 ) }
    dend_19 { pt3dadd( -41.1859, 69.698, -6.86298, 0.67 ) }
    dend_19 { pt3dadd( -42.2941, 70.4996, -6.76602, 0.33 ) }
    dend_19 { pt3dadd( -43.3043, 71.366, -6.67141, 0.67 ) }
    dend_19 { pt3dadd( -44.2712, 72.3331, -6.5731, 0.33 ) }
    dend_19 { pt3dadd( -46.0283, 74.1543, -6.35195, 0.33 ) }
    dend_19 { pt3dadd( -48.5677, 76.7016, -6.12549, 0.33 ) }
    dend_19 { pt3dadd( -52.5452, 80.4339, -6.27404, 0.67 ) }
    dend_19 { pt3dadd( -55.3516, 83.0116, -6.65211, 0.67 ) }
    dend_19 { pt3dadd( -56.6199, 84.0578, -6.92021, 0.33 ) }
    dend_19 { pt3dadd( -59.1949, 86.0132, -7.628, 0.67 ) }
    dend_19 { pt3dadd( -61.6929, 87.6048, -8.46869, 0.33 ) }
    dend_19 { pt3dadd( -65.6965, 89.8374, -10.0167, 0.67 ) }
    dend_19 { pt3dadd( -67.2687, 90.6893, -10.7815, 0.33 ) }
    dend_19 { pt3dadd( -70.2145, 92.5638, -12.2923, 0.33 ) }
    dend_19 { pt3dadd( -71.6047, 93.6133, -13.0081, 0.33 ) }
    dend_19 { pt3dadd( -74.5029, 96.3609, -14.0838, 0.33 ) }
    dend_19 { pt3dadd( -75.6329, 97.5896, -14.1701, 0.33 ) }
    dend_19 { pt3dadd( -78.2846, 100.372, -13.7246, 1.33 ) }
    dend_19 { pt3dadd( -80.0142, 102.02, -13.4478, 0.33 ) }
    dend_19 { pt3dadd( -82.0777, 103.658, -13.1427, 0.67 ) }
    dend_19 { pt3dadd( -87.254, 106.937, -12.4263, 0.67 ) }
    dend_19 { pt3dadd( -90.0845, 108.3, -12.0503, 0.67 ) }
    dend_19 { pt3dadd( -94.3358, 109.795, -11.5649, 0.33 ) }
    dend_19 { pt3dadd( -99.0323, 110.829, -11.2738, 1.33 ) }
    dend_19 { pt3dadd( -104.669, 111.333, -11.5254, 0.33 ) }
    dend_19 { pt3dadd( -105.861, 111.329, -11.715, 1.33 ) }
    dend_19 { pt3dadd( -108.814, 111.112, -12.5196, 0.33 ) }
    dend_19 { pt3dadd( -109.526, 111.025, -12.7416, 0.67 ) }
    dend_19 { pt3dadd( -113.054, 110.477, -13.7887, 0.33 ) }
    dend_19 { pt3dadd( -114.874, 110.205, -14.1884, 0.33 ) }
    dend_19 { pt3dadd( -117.854, 109.904, -14.8827, 0.33 ) }
    dend_19 { pt3dadd( -119.519, 109.891, -15.1761, 0.67 ) }
    dend_19 { pt3dadd( -121.353, 110.062, -15.3112, 0.33 ) }
    dend_19 { pt3dadd( -122.838, 110.307, -15.3899, 0.67 ) }
    dend_19 { pt3dadd( -124.803, 110.799, -15.4119, 0.33 ) }
    dend_19 { pt3dadd( -125.813, 111.104, -15.4478, 0.67 ) }
    dend_19 { pt3dadd( -127.911, 111.877, -15.5752, 0.33 ) }
    dend_19 { pt3dadd( -129.852, 112.841, -15.7343, 0.33 ) }
    dend_19 { pt3dadd( -133.504, 115.377, -16.1252, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_19 { pt3dadd( -134.58, 116.275, -16.2932, 0.33 ) }
    dend_19 { pt3dadd( -134.911, 116.606, -16.3549, 0.67 ) }
    dend_19 { pt3dadd( -136.711, 118.577, -16.616, 0.33 ) }
    dend_19 { pt3dadd( -137.811, 119.818, -16.8062, 0.67 ) }
    dend_19 { pt3dadd( -140.368, 122.736, -17.1963, 0.33 ) }
    dend_19 { pt3dadd( -141.565, 124.116, -17.2924, 0.67 ) }
    dend_19 { pt3dadd( -143.493, 126.18, -17.4528, 0.33 ) }
    dend_19 { pt3dadd( -145.137, 127.92, -17.6768, 1.33 ) }
    dend_19 { pt3dadd( -148.222, 131.092, -18.2428, 0.33 ) }
    dend_19 { pt3dadd( -149.063, 131.956, -18.4637, 0.33 ) }
    dend_19 { pt3dadd( -149.517, 132.427, -18.6122, 0.67 ) }
    dend_19 { pt3dadd( -151.548, 134.617, -19.6598, 0.33 ) }
    dend_19 { pt3dadd( -153.23, 136.448, -20.6922, 0.67 ) }
    dend_19 { pt3dadd( -154.649, 138.119, -21.7339, 0.33 ) }
    dend_19 { pt3dadd( -155.757, 139.575, -22.6049, 1.33 ) }
    dend_19 { pt3dadd( -157.417, 141.853, -24.0267, 0.33 ) }
    dend_19 { pt3dadd( -159.799, 144.977, -26.1762, 0.67 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 17/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 55.3163, 78.8515, 22.6181, 0.67 ) }
    dend_10 { pt3dadd( 55.2159, 80.0348, 24.229, 0.67 ) }
    dend_10 { pt3dadd( 54.8017, 84.9156, 30.8736, 0.67 ) }
    dend_10 { pt3dadd( 54.5341, 88.0693, 35.1669, 0.67 ) }
    dend_10 { pt3dadd( 54.4085, 89.549, 37.1814, 0.67 ) }
    dend_10 { pt3dadd( 55.5141, 93.4861, 46.307, 0.67 ) }
    dend_10 { pt3dadd( 54.9712, 96.1621, 55.927, 0.67 ) }
    dend_10 { pt3dadd( 53.5171, 97.3329, 65.7512, 0.67 ) }
    dend_10 { pt3dadd( 51.7029, 96.6831, 75.5638, 0.67 ) }
    dend_10 { pt3dadd( 51.4728, 97.5019, 85.5275, 0.67 ) }
    dend_10 { pt3dadd( 51.4082, 97.7924, 95.5231, 0.67 ) }
    dend_10 { pt3dadd( 52.1493, 98.3024, 105.483, 0.67 ) }
    dend_10 { pt3dadd( 54.3155, 100.304, 115.038, 0.67 ) }
    dend_10 { pt3dadd( 57.4926, 102.925, 124.15, 0.67 ) }
    dend_10 { pt3dadd( 59.1672, 105.1, 133.766, 0.67 ) }
    dend_10 { pt3dadd( 60.0528, 106.078, 143.679, 0.67 ) }
    dend_10 { pt3dadd( 60.2945, 107.528, 153.57, 0.67 ) }
    dend_10 { pt3dadd( 61.1565, 110.388, 163.113, 0.67 ) }
    dend_10 { pt3dadd( 61.5667, 114.092, 172.393, 0.67 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 36/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 55.3163, 78.8515, 22.6181, 0.67 ) }
    dend_9 { pt3dadd( 57.2541, 80.577, 25.7401, 0.67 ) }
    dend_9 { pt3dadd( 57.8956, 81.1892, 26.7878, 0.33 ) }
    dend_9 { pt3dadd( 59.0828, 82.3222, 28.7267, 0.33 ) }
    dend_9 { pt3dadd( 61.0647, 84.2136, 31.9636, 0.67 ) }
    dend_9 { pt3dadd( 62.3195, 85.411, 34.0128, 0.67 ) }
    dend_9 { pt3dadd( 64.4179, 87.4137, 37.44, 0.33 ) }
    dend_9 { pt3dadd( 64.9316, 88.0241, 38.4029, 0.67 ) }
    dend_9 { pt3dadd( 70.2047, 91.5215, 46.1464, 0.67 ) }
    dend_9 { pt3dadd( 74.2474, 94.3835, 54.8335, 0.67 ) }
    dend_9 { pt3dadd( 78.2975, 97.0187, 63.5886, 0.67 ) }
    dend_9 { pt3dadd( 81.3706, 99.3723, 72.8091, 0.67 ) }
    dend_9 { pt3dadd( 85.3333, 102.922, 81.2767, 0.67 ) }
    dend_9 { pt3dadd( 87.9108, 106.203, 90.3644, 0.67 ) }
    dend_9 { pt3dadd( 89.365, 109.701, 99.6194, 0.67 ) }
    dend_9 { pt3dadd( 92.7496, 111.973, 108.751, 0.67 ) }
    dend_9 { pt3dadd( 96.3975, 113.346, 117.96, 0.67 ) }
    dend_9 { pt3dadd( 99.5718, 114.488, 127.374, 0.67 ) }
    dend_9 { pt3dadd( 103.297, 115.584, 136.589, 0.67 ) }
    dend_9 { pt3dadd( 108.542, 115.752, 145.102, 0.67 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_60, dend_39, dend_0, dend_70, dend_61, dend_57, dend_40, dend_32, dend_1, dend_76, dend_71, dend_65, dend_62, dend_59, dend_58, dend_46, dend_41, dend_38, dend_33, dend_27, dend_2, dend_75, dend_72, dend_67, dend_66, dend_64, dend_63, dend_50, dend_47, dend_45, dend_42, dend_37, dend_34, dend_29, dend_28, dend_24, dend_3, dend_74, dend_73, dend_69, dend_68, dend_52, dend_51, dend_49, dend_48, dend_44, dend_43, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_15, dend_4, dend_56, dend_53, dend_23, dend_16, dend_12, dend_5, dend_55, dend_54, dend_22, dend_17, dend_14, dend_13, dend_7, dend_6, dend_21, dend_18, dend_11, dend_8, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_60, dend_39, dend_0, dend_70, dend_61, dend_57, dend_40, dend_32, dend_1, dend_76, dend_71, dend_65, dend_62, dend_59, dend_58, dend_46, dend_41, dend_38, dend_33, dend_27, dend_2, dend_75, dend_72, dend_67, dend_66, dend_64, dend_63, dend_50, dend_47, dend_45, dend_42, dend_37, dend_34, dend_29, dend_28, dend_24, dend_3, dend_74, dend_73, dend_69, dend_68, dend_52, dend_51, dend_49, dend_48, dend_44, dend_43, dend_36, dend_35, dend_31, dend_30, dend_26, dend_25, dend_15, dend_4, dend_56, dend_53, dend_23, dend_16, dend_12, dend_5, dend_55, dend_54, dend_22, dend_17, dend_14, dend_13, dend_7, dend_6, dend_21, dend_18, dend_11, dend_8, dend_20, dend_19, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_76 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_65 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_59 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_58 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_27 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_64 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_63 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_45 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_42 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_37 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_74 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_73 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_69 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_68 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_51 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_49 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_31 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_30 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_26 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_56 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_55 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_54 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_22 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_14 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_13 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_6 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_21 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_11 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_20 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_19 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_10 OneSecGrp_SectionRef_79.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_9 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_60 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_61 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_62 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_70 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_57 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_32 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_40 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_46 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_47 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_15 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_71 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_41 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_4 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_72 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_25 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_52 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_17 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_75 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_18 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_53 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_34 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_66 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_67 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_7 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_8 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_36 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_44 OneSecGrp_SectionRef_49.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_60, dend_60, dend_39, dend_39, dend_0, axon_0, axon_0, dend_70, dend_70, dend_70, dend_61, dend_57, dend_57, dend_57, dend_57, dend_40, dend_40, dend_40, dend_40, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_1, axon_1, axon_1, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_2, dend_2, dend_2, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_72, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_3, dend_3, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_15, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_12, dend_12, dend_12, dend_5, dend_5, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_15 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_76 nseg = 9
    dend_65 nseg = 3
    dend_59 nseg = 5
    dend_58 nseg = 7
    dend_38 nseg = 5
    dend_33 nseg = 3
    dend_27 nseg = 3
    dend_64 nseg = 3
    dend_63 nseg = 7
    dend_45 nseg = 3
    dend_42 nseg = 3
    dend_37 nseg = 5
    dend_28 nseg = 7
    dend_24 nseg = 3
    dend_74 nseg = 3
    dend_73 nseg = 7
    dend_69 nseg = 5
    dend_68 nseg = 3
    dend_51 nseg = 5
    dend_49 nseg = 3
    dend_48 nseg = 3
    dend_43 nseg = 3
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 3
    dend_26 nseg = 5
    dend_56 nseg = 5
    dend_23 nseg = 9
    dend_55 nseg = 7
    dend_54 nseg = 9
    dend_22 nseg = 9
    dend_14 nseg = 9
    dend_13 nseg = 9
    dend_6 nseg = 9
    dend_21 nseg = 9
    dend_11 nseg = 9
    dend_20 nseg = 11
    dend_19 nseg = 9
    dend_10 nseg = 7
    dend_9 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_MC_3110386c07_0_0


