// Cell: cNAC187_L5_ChC_6c89541c26_0_0
/*
{
  "id" : "cNAC187_L5_ChC_6c89541c26_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 10.8306, -3.45834, 0.37", "-0.0306642, 12.3576, -3.57133, 0.37", "-0.103137, 12.7724, -3.65296, 0.74", "-0.0564355, 13.0993, -3.77819, 0.74", "0.336645, 14.1031, -4.25453, 0.37", "0.723325, 14.9057, -4.60863, 0.66", "1.17527, 15.734, -4.98689, 1.33", "1.60099, 16.3517, -5.2819, 1.33", "2.3174, 17.3719, -5.77755, 0.74", "2.85256, 18.1874, -6.15081, 0.74", "3.66805, 19.5357, -6.76667, 1.25", "4.18196, 20.6196, -7.24074, 2.06", "4.44266, 21.4289, -7.55737, 2.06", "4.62225, 22.5249, -7.94866, 1.4", "4.55407, 23.7906, -8.38442, 0.74", "4.25356, 24.6208, -8.67285, 1.11", "3.73065, 25.257, -8.89613, 1.11", "2.97675, 25.8007, -9.07292, 0.81", "1.98384, 26.2599, -9.31658, 0.81", "0.770558, 26.6332, -9.63706, 0.81", "-0.412367, 26.9068, -9.9834, 0.96", "-1.38896, 27.1316, -10.2807, 1.11", "-2.26628, 27.3595, -10.598, 1.11", "-4.17212, 27.9762, -11.4304, 1.11", "-4.73523, 28.2297, -11.7365, 1.11", "-5.64357, 28.9038, -12.3654, 0.59", "-6.18034, 29.6267, -12.8199, 0.96", "-6.49781, 30.2942, -13.1207, 1.25", "-6.72187, 30.8961, -13.3268, 1.55", "-6.8578, 31.2753, -13.4155, 1.55", "-7.3432, 32.4396, -13.6627, 0.74", "-8.10584, 33.8477, -13.9571, 0.96", "-8.73742, 34.7013, -14.1695, 0.66", "-9.26158, 35.2383, -14.3352, 0.66", "-10.1033, 35.9057, -14.5977, 0.81", "-10.8019, 36.3441, -14.8227, 0.96", "-11.7212, 36.815, -15.1426, 1.47", "-12.5681, 37.2215, -15.4538, 1.62", "-13.3679, 37.6646, -15.7563, 1.47", "-14.1124, 38.1616, -16.0526, 1.11", "-14.9533, 38.8451, -16.4118, 0.81", "-15.9435, 39.8627, -16.8982, 0.66", "-16.4756, 40.5648, -17.1937, 0.81", "-17.1598, 41.7498, -17.6356, 1.03", "-17.4243, 42.3672, -17.8589, 1.25", "-17.6127, 42.9418, -18.0764, 1.25", "-17.9531, 44.1819, -18.5923, 0.96", "-18.2067, 45.1391, -19.0474, 0.81", "-18.5603, 46.3201, -19.6851, 0.59", "-18.8518, 47.1405, -20.1587, 0.59", "-19.2528, 48.1127, -20.7265, 0.59", "-19.6934, 49.0671, -21.2645, 0.59", "-20.1202, 49.9607, -21.6819, 0.44", "-20.5246, 50.8937, -22.0019, 0.66", "-20.8381, 51.8904, -22.1772, 0.74", "-20.9397, 52.516, -22.2081, 0.96", "-20.9493, 53.2159, -22.185, 0.96", "-20.7924, 54.7695, -22.1542, 0.52", "-20.5755, 56.0293, -22.1721, 0.59", "-20.2882, 57.458, -22.2497, 0.59", "-20.1402, 58.2562, -22.3302, 0.96", "-20.0265, 59.1773, -22.4707, 0.96", "-19.9909, 60.8128, -22.825, 0.66", "-20.1713, 61.937, -23.1898, 0.66", "-20.569, 62.8477, -23.5694, 0.96", "-21.0291, 63.3999, -23.8217, 1.03", "-21.6163, 63.8458, -24.0612, 1.03", "-22.3969, 64.2514, -24.3491, 1.03", "-23.4489, 64.6324, -24.7665, 0.74", "-24.2768, 64.867, -25.1782, 0.74", "-24.8291, 64.9931, -25.5132, 0.52", "-26.0511, 65.2192, -26.4157, 0.52", "-27.0853, 65.3707, -27.2718, 0.52", "-28.1398, 65.4907, -28.1856, 1.11", "-28.7132, 65.5423, -28.6663, 1.4", "-29.3644, 65.5827, -29.155, 1.4", "-30.4775, 65.6111, -29.8491, 0.81", "-31.1637, 65.6253, -30.1297, 0.59", "-32.1971, 65.6744, -30.3504, 0.44", "-33.2353, 65.7704, -30.4103, 0.44", "-34.2881, 65.9314, -30.3795, 0.74", "-35.2941, 66.1999, -30.3008, 1.33", "-36.5177, 66.7288, -30.2297, 0.88", "-37.06, 67.0825, -30.3056, 0.59", "-37.3959, 67.3927, -30.443, 0.59", "-37.8687, 67.9416, -30.7887, 0.74", "-38.4535, 68.7114, -31.3936, 0.96", "-39.2085, 69.7133, -32.3191, 0.59", "-39.9898, 70.6916, -33.3482, 0.59", "-40.3963, 71.1829, -33.8619, 0.81", "-40.9098, 71.7451, -34.425, 0.96", "-41.4019, 72.2011, -34.8465, 1.03", "-42.2354, 72.8945, -35.3805, 0.66", "-42.4907, 73.1143, -35.5131, 0.66", "-43.1764, 73.8056, -35.8433, 0.81", "-43.7813, 74.5541, -36.1994, 0.81", "-44.2413, 75.3266, -36.5494, 0.66", "-44.616, 76.1493, -36.9068, 0.66", "-45.0826, 77.4289, -37.4525, 0.52", "-45.3494, 78.2278, -37.8043, 0.81", "-45.5457, 78.8235, -38.0778, 0.74", "-46.0205, 80.1017, -38.658, 0.59", "-46.3102, 80.7265, -38.9179, 0.74", "-46.6973, 81.3448, -39.1427, 0.96", "-47.2951, 82.0875, -39.3208, 0.96", "-47.8183, 82.661, -39.4067, 0.74", "-48.5425, 83.4061, -39.4659, 1.03", "-49.0652, 83.9279, -39.4192, 1.25", "-49.4319, 84.323, -39.3442, 0.81", "-50.2099, 85.2557, -39.1029, 0.59", "-50.6839, 85.8886, -38.9033, 0.66", "-51.0774, 86.4623, -38.7034, 0.66", "-52.0975, 88.0504, -38.1082, 0.88", "-52.6148, 88.8638, -37.7795, 1.11", "-52.9704, 89.4201, -37.532, 1.03", "-53.4029, 90.0915, -37.2242, 1.25", "-53.5645, 90.3412, -37.0993, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 9.67164, -4.39834, 1.11", "4.98968, 10.4557, -4.90415, 1.11", "5.61431, 11.0818, -5.32097, 1.11", "6.61087, 12.129, -5.98532, 1.11", "7.29441, 12.8833, -6.48546, 0.96", "8.42659, 14.0033, -7.22449, 1.55", "9.41129, 14.8987, -7.81927, 1.62", "9.99119, 15.369, -8.14402, 1.62", "10.8874, 16.0216, -8.53853, 1.25", "12.3898, 17.0027, -8.99975, 0.96", "14.685, 18.3507, -9.41827, 0.88", "15.7624, 18.8985, -9.48365, 1.55", "16.9388, 19.4142, -9.45526, 1.84", "18.7032, 20.107, -9.31704, 1.11", "19.6294, 20.4549, -9.19578, 1.03", "20.6658, 20.8843, -8.99393, 1.25", "21.6684, 21.4231, -8.7838, 0.88", "22.5929, 22.0394, -8.59083, 0.88", "23.4587, 22.7126, -8.41262, 0.88", "24.4752, 23.5503, -8.19637, 0.88", "25.3445, 24.313, -7.91641, 0.96", "26.2439, 25.1673, -7.58031, 0.96", "27.0647, 26.0322, -7.21433, 0.81", "28.2726, 27.3832, -6.56942, 1.11", "29.0646, 28.2394, -6.06812, 1.4", "29.9772, 29.0984, -5.39007, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.33214, 2.16166, 1.62", "4.34337, 8.6405, 2.59011, 1.62", "4.99467, 9.00977, 3.17667, 1.25", "6.17954, 9.52519, 4.36623, 1.25", "6.8061, 9.75959, 5.03749, 1.25", "7.45987, 9.92597, 5.82166, 1.92", "7.73652, 9.97169, 6.17397, 2.5", "8.33813, 9.98721, 7.0067, 2.5", "9.58251, 9.84118, 8.85855, 1.77", "10.4456, 9.58489, 10.1402, 0.96", "11.6634, 9.09708, 11.9441, 0.88", "12.0116, 8.93901, 12.468, 0.88", "12.2863, 8.81919, 12.8689, 1.4", "12.5577, 8.72073, 13.2193, 1.4", "13.548, 8.50894, 14.2222, 0.66", "13.968, 8.53259, 14.5573, 0.66", "14.9655, 8.91047, 15.1477, 0.88", "15.5922, 9.24589, 15.4679, 0.88", "16.3793, 9.74666, 15.7797, 0.74", "16.966, 10.1707, 15.9555, 1.4", "17.6413, 10.7006, 16.0784, 2.06", "18.3062, 11.206, 16.1302, 1.84", "19.1036, 11.7841, 16.0847, 1.18", "19.9333, 12.3421, 16.0596, 1.18", "20.2701, 12.5399, 16.1073, 1.03", "20.8333, 12.8056, 16.3412, 1.03", "21.2059, 12.9496, 16.7168, 0.59", "21.5519, 13.102, 17.271, 0.59", "22.2298, 13.4548, 18.6517, 0.88", "23.0184, 13.9331, 20.4679, 1.62", "23.3573, 14.1675, 21.2577, 1.62", "24.1458, 14.7587, 23.0843, 0.88", "24.513, 15.0333, 23.8803, 0.88", "24.8518, 15.2951, 24.5385, 1.47", "25.0899, 15.4816, 24.9161, 1.47", "25.7022, 15.9245, 25.6521, 0.81", "26.0438, 16.1278, 25.9817, 0.59", "26.4091, 16.2926, 26.2695, 0.59", "27.3002, 16.6504, 26.9797, 1.25", "28.7016, 17.2322, 28.1483, 0.74", "29.1406, 17.4561, 28.5579, 0.29", "29.5313, 17.6727, 28.9718, 0.29", "29.755, 17.797, 29.2418, 0.59", "30.3473, 18.1381, 29.9718, 1.11", "30.6466, 18.2893, 30.33, 1.11", "31.289, 18.8282, 31.099, 1.11", "31.6519, 19.3186, 31.7103, 0.59", "31.6618, 17.9124, 31.811, 0.59", "31.7861, 16.4624, 32.1852, 0.52", "31.8721, 15.4497, 32.444, 0.59", "37.3945, 17.1309, 37.3665, 0.59", "43.1861, 19.4569, 41.6469, 0.59", "47.9727, 22.8234, 46.3788, 0.59", "52.7148, 26.8707, 50.5287, 0.59", "58.2288, 31.2136, 53.0894, 0.59", "63.1964, 35.7845, 56.2567, 0.59", "68.4378, 39.5501, 60.0876, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.11864, 1.60166, 1.69", "-3.56761, 6.11864, 1.60166, 1.69", "-4.00201, 6.36461, 1.87802, 1.69", "-4.53641, 6.61033, 2.25075, 1.4", "-4.91673, 6.76886, 2.5953, 1.03", "-5.43878, 6.99821, 3.12438, 0.88", "-5.79921, 7.17103, 3.51398, 0.88", "-6.25518, 7.3746, 4.07479, 0.59", "-6.67072, 7.55598, 4.63987, 0.44", "-7.43712, 7.88665, 5.75459, 0.37", "-7.70152, 8.00208, 6.15385, 0.37", "-8.13252, 8.19518, 6.82094, 0.37", "-9.15132, 8.67767, 8.47617, 1.03", "-9.38321, 8.80002, 8.86661, 1.62", "-15.4008, 9.42689, 13.442, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.13936, -14.5883, 0.74", "-4.84474, -1.76049, -14.5818, 0.74", "-5.98224, -2.46224, -14.5757, 1.03", "-6.97717, -3.06396, -14.5909, 1.25", "-7.77275, -3.55228, -14.6118, 1.62", "-8.42469, -3.94568, -14.6323, 1.84", "-9.27958, -4.43118, -14.638, 1.84", "-10.0368, -4.81056, -14.6036, 1.99", "-10.8325, -5.15408, -14.5278, 2.21", "-11.7621, -5.48728, -14.3933, 2.65", "-12.4216, -5.68485, -14.2877, 2.5", "-13.5359, -5.97684, -14.1183, 1.77", "-14.7161, -6.27146, -13.977, 1.33", "-15.5185, -6.47711, -13.9391, 1.18", "-16.4698, -6.73044, -13.9995, 1.11", "-17.1459, -6.93334, -14.1906, 1.11", "-17.8423, -7.17176, -14.6161, 1.11", "-18.5077, -7.41869, -15.2688, 1.4", "-19.17, -7.65084, -16.1126, 1.03", "-19.7278, -7.82412, -16.9302, 0.88", "-20.5578, -8.0228, -18.2697, 0.88", "-21.4547, -8.16081, -19.8516, 1.47", "-22.1332, -8.22237, -21.1061, 1.77", "-22.8927, -8.23449, -22.5657, 1.84", "-23.1613, -8.21904, -23.0954, 2.06", "-23.6478, -8.16054, -24.0808, 1.77", "-24.3974, -8.00969, -25.5614, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -1.90886, 9.10166, 2.06", "-5.36761, -1.90886, 9.10166, 2.06", "-6.43102, -1.8079, 9.66413, 2.06", "-7.23049, -1.76795, 10.0548, 2.06", "-9.30496, -1.79793, 11.0195, 1.84", "-10.4598, -1.89916, 11.5409, 1.84", "-11.3433, -2.03977, 11.9356, 1.99", "-12.9332, -2.41928, 12.6439, 1.55", "-14.2267, -2.87022, 13.2055, 1.03", "-15.2723, -3.35325, 13.6247, 0.88", "-16.2876, -3.95795, 13.9192, 1.18", "-17.1081, -4.5089, 14.0983, 1.18", "-17.737, -4.97024, 14.2023, 1.47", "-18.6705, -5.72417, 14.2837, 1.25", "-19.5894, -6.49766, 14.405, 1.03", "-20.4182, -7.18681, 14.5906, 1.62", "-21.2483, -7.86137, 14.899, 1.69", "-21.8883, -8.35048, 15.2284, 1.33", "-23.0315, -9.15483, 16.0063, 1.03", "-24.4396, -9.9843, 17.2312, 0.88", "-25.4242, -10.4252, 18.3221, 1.11", "-26.2772, -10.6451, 19.4423, 1.33", "-26.8091, -10.6674, 20.2296, 1.33", "-27.3335, -10.538, 21.0429, 1.18", "-27.9576, -10.1967, 21.9829, 0.88", "-28.845, -9.56312, 23.1299, 1.18", "-29.3985, -9.18145, 23.7527, 1.33", "-29.8863, -8.93152, 24.2386, 1.33", "-30.7274, -8.69853, 25.0264, 0.59", "-31.881, -8.75661, 26.0068, 0.52", "-32.4663, -9.09463, 26.4348, 0.59", "-33.2824, -10.1477, 27.079, 0.59", "-34.0683, -11.5958, 27.8625, 0.59", "-34.4758, -12.4591, 28.3202, 1.03", "-34.9422, -13.5371, 28.9441, 1.03", "-35.3279, -14.4339, 29.5152, 1.03", "-36.055, -15.932, 30.6802, 1.03", "-36.7442, -16.9203, 31.7832, 0.66", "-37.3247, -17.3764, 32.6317, 0.66", "-38.3479, -17.7539, 33.9762, 0.74", "-39.0713, -17.8736, 34.8633, 0.81", "-39.7441, -17.9179, 35.6577, 0.52", "-40.9635, -17.9348, 36.9843, 0.52", "-41.4859, -17.9708, 37.5581, 0.44", "-42.2462, -18.2884, 38.5692, 0.37", "-42.6119, -18.7802, 39.162, 0.37", "-42.9511, -19.5264, 39.768, 1.11", "-43.2407, -20.2919, 40.2415, 1.4", "-43.5195, -21.3001, 40.7519, 1.4", "-43.8622, -22.8306, 41.4555, 0.81", "-44.093, -23.9832, 41.9266, 0.29", "-44.2987, -24.7454, 42.2512, 0.29", "-44.5418, -25.3573, 42.5286, 0.29", "-51.2315, -29.6468, 49.9682, 0.29", "-59.3274, -34.0435, 55.7582, 0.29", "-66.7342, -38.4306, 62.4142, 0.29", "-73.6078, -41.4592, 70.3564, 0.29", "-80.4977, -44.6223, 78.2259, 0.29", "-88.4248, -49.3194, 83.988, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.47136, 6.85166, 1.77", "-2.19761, -5.47136, 6.85166, 1.77", "-2.18228, -6.38997, 6.9715, 1.77", "-2.1579, -7.96486, 7.16832, 1.47", "-2.14445, -9.54981, 7.34641, 1.25", "-2.16741, -10.7606, 7.46674, 1.62", "-2.21329, -11.7822, 7.5574, 1.92", "-2.2762, -12.6732, 7.63766, 2.14", "-2.39017, -13.7827, 7.73565, 2.14", "-2.62513, -15.3228, 7.87174, 1.55", "-2.9242, -16.7712, 7.99083, 1.33", "-3.19505, -17.8686, 8.09111, 1.55", "-3.39621, -18.5617, 8.15683, 1.92", "-3.68204, -19.4024, 8.26688, 2.21", "-3.89613, -19.9565, 8.35612, 2.5", "-4.14644, -20.6105, 8.48422, 2.5", "-4.37655, -21.3317, 8.63722, 2.36", "-4.62409, -22.3214, 8.85303, 1.69", "-4.86204, -23.619, 9.12481, 1.25", "-4.98306, -24.8315, 9.3698, 1.4", "-4.98819, -25.9075, 9.56073, 1.62", "-4.86375, -27.2207, 9.76273, 2.06", "-4.71226, -28.0301, 9.87771, 2.36", "-4.55903, -28.5548, 9.94252, 2.36", "-4.18098, -29.5548, 10.0466, 2.14", "-3.56539, -30.9582, 10.1806, 1.62", "-3.02217, -32.1402, 10.28, 1.25", "-2.46498, -33.3596, 10.3957, 1.03", "-1.87025, -34.7306, 10.5542, 1.03", "-1.42723, -35.8788, 10.7166, 1.03", "-0.944921, -37.365, 10.9815, 1.03", "-0.734607, -38.2501, 11.1745, 0.96", "-0.670808, -38.9493, 11.3516, 0.96", "-0.757395, -39.5727, 11.5285, 0.96", "-1.15555, -40.3936, 11.823, 0.96", "-1.54496, -40.8397, 12.0082, 0.88", "-1.95346, -41.1694, 12.1532, 1.18", "-2.61292, -41.6273, 12.3383, 1.18", "-3.25173, -42.0456, 12.5022, 1.33", "-3.98725, -42.52, 12.7067, 1.33", "-4.61964, -42.9338, 12.9048, 1.4", "-5.29756, -43.4056, 13.1496, 1.55", "-5.94692, -43.9052, 13.4379, 1.55", "-6.68191, -44.5879, 13.8518, 1.84", "-7.127, -45.0864, 14.1454, 2.14", "-7.56294, -45.6875, 14.4603, 1.99", "-8.17097, -46.773, 14.9639, 0.88", "-8.58616, -47.7754, 15.3598, 0.88", "-8.9362, -48.9596, 15.7547, 0.81", "-9.13211, -50.0065, 16.0227, 0.74", "-9.31396, -51.3283, 16.3171, 0.74", "-9.40309, -52.5632, 16.5518, 1.03", "-9.39961, -53.6727, 16.7025, 1.4", "-9.3599, -54.363, 16.7578, 1.69", "-9.27773, -55.1369, 16.7796, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -9.49936, -2.20834, 3.39", "1.44239, -9.49936, -2.20834, 3.39", "1.80317, -10.5736, -2.31025, 3.39", "2.09448, -11.4403, -2.43492, 3.02", "2.38944, -12.3178, -2.56114, 3.02", "2.7773, -13.4717, -2.72712, 3.02", "3.19393, -14.7112, -2.90541, 3.24", "3.50812, -15.6252, -3.05093, 3.54", "3.86483, -16.61, -3.24443, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-53.5645, 90.3412, -37.0993, 0.44", "-54.7935, 91.7357, -38.2721, 0.44", "-55.3664, 92.4119, -38.777, 0.37", "-55.6588, 92.7771, -38.9555, 0.66", "-56.1506, 93.4326, -39.1745, 0.66", "-56.6606, 94.169, -39.3346, 0.59", "-57.0013, 94.7239, -39.405, 0.81", "-57.3555, 95.4082, -39.3492, 0.81", "-57.9283, 97.0062, -39.0539, 0.52", "-58.0638, 97.779, -38.8508, 0.52", "-58.0455, 99.0034, -38.4738, 0.44", "-57.8028, 100.204, -38.0887, 0.44", "-57.3445, 101.399, -37.7052, 0.74", "-56.8792, 102.258, -37.4227, 0.74", "-56.0366, 103.481, -37.0433, 0.44", "-55.3905, 104.337, -36.7432, 0.59", "-54.7336, 105.18, -36.4496, 0.59", "-54.0682, 106.058, -36.178, 0.59", "-53.5457, 106.83, -35.9942, 0.37", "-53.1633, 107.445, -35.879, 0.37", "-52.5834, 108.415, -35.725, 0.59", "-52.001, 109.353, -35.5882, 0.37", "-51.4685, 110.169, -35.4684, 0.81", "-50.9028, 110.999, -35.3535, 0.81", "-49.8541, 112.536, -35.1777, 0.44", "-49.045, 113.746, -35.0581, 0.44", "-48.4602, 114.596, -35.0053, 0.81", "-47.8631, 115.467, -34.9635, 0.44", "-47.5349, 115.968, -34.9585, 0.59", "-46.7337, 117.253, -35.0145, 0.59", "-46.2181, 118.187, -35.1811, 0.44", "-45.6401, 119.483, -35.5433, 0.44", "-45.2114, 120.61, -36.0159, 0.96", "-45.0293, 121.151, -36.3193, 1.18", "-44.8843, 121.656, -36.6696, 1.18", "-44.4796, 123.09, -38.1005, 0.44", "-44.2368, 124.137, -39.3292, 0.37", "-43.9625, 125.051, -40.6507, 0.66", "-43.831, 125.447, -41.2828, 0.66", "-43.6229, 126.052, -42.3044, 0.66", "-42.6875, 128.371, -46.366, 0.44", "-42.5052, 128.769, -47.0889, 0.44", "-41.4835, 130.858, -50.9207, 0.29", "-41.2708, 131.325, -51.7275, 0.29", "-41.0294, 131.892, -52.6339, 0.29", "-40.5312, 133.199, -54.5207, 0.74", "-40.0135, 134.897, -56.5924, 0.44", "-39.9064, 135.316, -57.0268, 0.44", "-39.7735, 136.286, -57.7846, 0.37", "-39.6947, 137.266, -58.4317, 0.88", "-39.7302, 138.821, -59.2033, 0.29", "-39.8315, 139.421, -59.4217, 0.52", "-40.1265, 140.48, -59.7543, 0.15", "-40.4231, 141.413, -60.0929, 0.22", "-40.9245, 142.866, -60.6506, 0.22", "-41.4314, 144.114, -61.1381, 0.22", "-41.9311, 145.276, -61.5682, 0.22", "-42.6795, 146.987, -62.2737, 1.47", "-43.2209, 148.256, -62.8593, 0.66", "-43.5455, 149.078, -63.2446, 0.96", "-44.0395, 150.445, -63.8517, 0.22", "-44.3766, 151.356, -64.1928, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-53.5645, 90.3412, -37.0993, 0.37", "-53.6443, 91.7925, -36.6074, 0.37", "-53.5925, 92.5269, -36.4179, 0.37", "-53.5739, 93.2122, -36.1726, 0.37", "-53.6444, 94.2203, -35.7336, 0.74", "-53.7965, 95.0616, -35.3408, 0.29", "-54.0957, 96.0394, -34.8792, 0.29", "-54.2597, 96.4958, -34.6588, 0.52", "-54.7466, 97.4699, -34.0156, 0.44", "-55.1099, 98.0768, -33.538, 0.29", "-55.4335, 98.6023, -33.0944, 0.29", "-55.7767, 99.1837, -32.5706, 0.29", "-56.2682, 100.176, -31.6978, 0.44", "-56.6049, 100.987, -30.9954, 0.44", "-56.8939, 102.04, -30.1584, 0.52", "-57.0111, 102.888, -29.4873, 0.37", "-57.0196, 103.572, -28.9405, 0.37", "-56.932, 104.32, -28.3664, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "29.9772, 29.0984, -5.39007, 0.29", "30.5448, 29.024, -4.28849, 0.29", "31.0931, 28.9701, -3.37641, 0.59", "31.6439, 28.9049, -2.57846, 0.74", "31.95, 28.8694, -2.17124, 0.37", "32.4151, 28.835, -1.5099, 0.37", "32.6697, 28.8265, -1.11968, 0.66", "32.857, 28.8473, -0.817477, 0.96", "33.1068, 28.9242, -0.25902, 1.25", "33.4514, 29.1239, 0.779929, 0.37", "33.7398, 29.3997, 1.85416, 0.37", "33.8306, 29.5136, 2.22716, 0.37", "34.0372, 29.7683, 2.98548, 0.74", "34.4391, 30.1795, 4.14453, 0.66", "34.7985, 30.4783, 4.93377, 0.52", "35.1104, 30.6498, 5.39242, 0.66", "35.5238, 30.7864, 5.80069, 0.66", "36.1092, 30.9143, 6.24257, 0.37", "36.8068, 30.9963, 6.64848, 0.52", "37.2018, 31.0093, 6.84072, 0.52", "37.8946, 31.0046, 7.16058, 0.66", "38.2848, 30.9882, 7.33557, 0.88", "38.8063, 30.967, 7.55575, 0.88", "39.4073, 30.9666, 7.83656, 0.66", "40.157, 31.0078, 8.1973, 0.29", "40.8135, 31.0822, 8.50392, 0.29", "41.8081, 31.2808, 8.94443, 0.88", "42.0834, 31.3479, 9.06349, 0.88", "43.1882, 31.6551, 9.5181, 0.29", "44.043, 31.9223, 9.84086, 0.29", "44.8629, 32.2034, 10.1227, 0.96", "45.8401, 32.5598, 10.4366, 0.29", "46.5511, 32.8236, 10.661, 0.29", "47.2115, 33.053, 10.8547, 0.81", "47.735, 33.2182, 10.9778, 0.81", "48.1999, 33.357, 11.0845, 0.81", "48.9053, 33.5511, 11.2442, 0.59", "49.7262, 33.7455, 11.4354, 0.29", "50.449, 33.9431, 11.6106, 0.81", "51.1617, 34.1412, 11.7899, 0.22", "51.7946, 34.305, 11.9496, 0.22", "52.1971, 34.3921, 12.0447, 0.52", "52.7573, 34.4849, 12.1445, 0.22", "58.1033, 36.0291, 16.2719, 0.22", "62.9601, 37.8057, 20.8771, 0.22", "68.7487, 38.3475, 24.6613, 0.22", "74.5266, 37.7134, 28.4312, 0.22", "80.2429, 37.9264, 32.3548, 0.22", "84.7601, 37.4548, 37.5872, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "29.9772, 29.0984, -5.39007, 0.81", "31.9814, 29.1441, -4.98357, 0.81", "32.9218, 29.075, -4.85514, 1.03", "35.3878, 28.8181, -4.75999, 0.96", "36.7305, 28.6988, -4.77783, 0.96", "38.2919, 28.6328, -4.84092, 0.59", "39.3767, 28.645, -4.90329, 0.66", "40.826, 28.677, -5.03301, 0.66", "42.5444, 28.8677, -5.27491, 0.59", "43.4359, 29.1228, -5.4883, 0.81", "44.5645, 29.6455, -5.7685, 0.96", "45.6057, 30.2568, -6.01964, 1.25", "46.3603, 30.7165, -6.18892, 1.4", "47.3143, 31.2692, -6.36151, 1.4", "48.8809, 32.0179, -6.57242, 0.59", "49.518, 32.2143, -6.65519, 0.59", "50.842, 32.3719, -6.82442, 0.59", "52.288, 32.331, -7.00255, 1.03", "53.3156, 32.1973, -7.12135, 1.18", "54.2148, 32.0039, -7.18172, 1.18", "55.6765, 31.5971, -7.2044, 0.74", "57.0938, 31.1621, -7.13732, 0.66", "57.7713, 30.9546, -7.07661, 0.96", "58.6571, 30.7195, -6.987, 0.96", "60.2466, 30.3721, -6.83154, 1.03", "60.9982, 30.2539, -6.75551, 1.03", "63.0896, 30.1488, -6.55482, 0.59", "64.2231, 30.2133, -6.4638, 0.59", "66.2399, 30.4789, -6.35507, 0.59", "67.2232, 30.6785, -6.33467, 0.81", "68.1371, 30.9488, -6.35755, 0.81", "69.9885, 31.6491, -6.49235, 0.37", "71.1448, 32.1348, -6.64441, 0.66", "72.1687, 32.5308, -6.79254, 0.74", "72.8082, 32.7415, -6.90362, 0.74", "74.0514, 33.0299, -7.16033, 0.74", "75.3766, 33.1668, -7.47527, 0.52", "77.2106, 33.1251, -7.95762, 0.74", "78.5937, 33.0062, -8.29973, 0.88", "79.3571, 32.9236, -8.4466, 0.96", "80.1224, 32.844, -8.54353, 1.18", "81.2989, 32.7493, -8.60376, 1.18", "82.2071, 32.7417, -8.55574, 0.66", "83.8497, 32.9609, -8.26161, 0.59", "84.9588, 33.2344, -7.8652, 0.59", "85.7076, 33.4728, -7.50809, 0.74", "86.3024, 33.7015, -7.16421, 0.74", "86.8966, 33.9539, -6.7725, 0.74", "88.0436, 34.4637, -5.92961, 0.59", "89.5822, 35.1698, -4.684, 0.96", "90.316, 35.495, -4.08469, 1.25", "90.7178, 35.6585, -3.73532, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "68.4378, 39.5501, 60.0876, 0.29", "72.8311, 41.7746, 64.554, 0.29", "77.7586, 44.236, 68.2735, 0.29", "82.6869, 47.3082, 71.46, 0.29", "87.1387, 49.7774, 75.7235, 0.29", "91.1719, 52.9308, 79.8999, 0.29", "94.2878, 56.2306, 84.6745, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "68.4378, 39.5501, 60.0876, 0.29", "75.6359, 42.8742, 65.9004, 0.29", "81.421, 47.6736, 72.1199, 0.29", "85.9862, 52.8422, 78.9738, 0.29", "91.4886, 56.5178, 86.206, 0.29", "96.5895, 60.6663, 93.4445, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-24.3974, -8.00969, -25.5614, 0.74", "-26.2065, -9.24059, -25.984, 0.74", "-27.1797, -9.72543, -26.171, 0.74", "-28.004, -10.0341, -26.3383, 0.74", "-29.3075, -10.3, -26.7546, 0.66", "-30.2555, -10.3648, -27.1542, 0.66", "-31.2602, -10.3615, -27.6342, 0.59", "-31.9538, -10.2337, -27.9711, 1.25", "-32.5174, -10.0801, -28.2816, 1.25", "-34.2359, -9.58385, -29.3152, 0.66", "-35.0904, -9.36841, -29.854, 0.66", "-35.5516, -9.31877, -30.1565, 0.96", "-36.236, -9.38298, -30.6047, 0.96", "-36.7133, -9.55329, -31.0322, 0.96", "-37.4391, -10.1023, -32.0939, 0.74", "-37.8235, -10.5666, -32.9159, 0.52", "-38.2074, -11.1457, -33.9461, 0.81", "-38.4544, -11.5724, -34.71, 1.03", "-39.3512, -13.2891, -37.8353, 1.25", "-39.9581, -14.5034, -40.1047, 0.66", "-40.2592, -15.0852, -41.2273, 0.66", "-40.4503, -15.3784, -41.8161, 1.11", "-40.627, -15.553, -42.168, 1.33", "-40.8929, -15.7287, -42.4648, 1.18", "-41.3317, -15.9432, -42.6297, 1.18", "-42.3438, -16.4138, -42.8635, 0.59", "-43.3859, -16.9681, -43.1372, 0.52", "-44.2058, -17.484, -43.4238, 0.52", "-44.8818, -17.9991, -43.7844, 0.81", "-45.5396, -18.6134, -44.3059, 0.66", "-46.1542, -19.2595, -44.9145, 0.66", "-46.5957, -19.775, -45.4476, 1.33", "-46.8913, -20.1387, -45.8346, 1.33", "-47.8132, -21.2798, -47.064, 0.66", "-48.6253, -22.2506, -48.1092, 0.52", "-49.0102, -22.6738, -48.5768, 0.52", "-49.5141, -23.1452, -49.0464, 0.96", "-49.878, -23.4438, -49.2895, 1.18", "-50.1427, -23.6453, -49.3911, 1.18", "-50.7008, -24.0789, -49.4478, 0.81", "-51.4687, -24.7207, -49.3918, 0.74", "-52.4238, -25.5965, -49.223, 0.59", "-52.9036, -26.0304, -49.0996, 0.74", "-53.5447, -26.5816, -48.8983, 0.74", "-54.2339, -27.1123, -48.6692, 0.59", "-54.8847, -27.5813, -48.4414, 0.44", "-55.6145, -28.0999, -48.1769, 0.44", "-56.3173, -28.5942, -47.9548, 0.44", "-57.0592, -29.1684, -47.7275, 0.44", "-58.2788, -30.2263, -47.3665, 0.44", "-58.5829, -30.5465, -47.2725, 0.96", "-59.1403, -31.3371, -47.119, 1.18", "-59.4964, -32.0579, -47.0375, 0.81", "-59.8965, -33.2717, -47.0253, 0.59", "-60.0311, -33.8084, -47.0823, 0.74", "-60.2383, -34.6784, -47.2366, 0.66", "-60.5085, -35.5258, -47.428, 0.66", "-60.7699, -36.1476, -47.5959, 0.81", "-61.3534, -37.2789, -47.9084, 0.59", "-61.9284, -38.2633, -48.1673, 0.52", "-62.468, -39.2181, -48.3882, 0.81", "-62.9439, -40.1485, -48.559, 1.4", "-63.1622, -40.7024, -48.5896, 1.69", "-63.4618, -41.788, -48.5132, 0.52", "-63.6679, -42.6902, -48.4532, 0.44", "-63.8434, -43.6186, -48.5219, 0.44", "-63.9737, -44.2846, -48.7133, 0.29", "-64.2996, -45.5342, -49.2688, 1.4", "-64.3846, -45.7836, -49.4013, 1.4", "-65.3404, -47.997, -50.8878, 0.52", "-65.9661, -49.2175, -51.8086, 0.52", "-66.3247, -49.8473, -52.3081, 0.52", "-66.8686, -50.7843, -53.0502, 0.74", "-67.2264, -51.4116, -53.5285, 0.88", "-67.9771, -52.8322, -54.4424, 0.44", "-68.3184, -53.5395, -54.7763, 0.59", "-68.7202, -54.3267, -55.1136, 0.59", "-69.1791, -55.1235, -55.4891, 0.37", "-69.4697, -55.6043, -55.7321, 0.59", "-70.0207, -56.4567, -56.1565, 0.81", "-70.5641, -57.2237, -56.4749, 1.18", "-70.9198, -57.6936, -56.677, 1.18", "-71.9051, -58.8593, -57.2609, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-24.3974, -8.00969, -25.5614, 0.81", "-24.3745, -5.42051, -26.4096, 0.81", "-24.4882, -4.41537, -26.6551, 0.81", "-24.8124, -3.14399, -26.8999, 0.81", "-25.3073, -2.08514, -27.079, 0.88", "-26.0547, -1.16588, -27.2647, 0.66", "-27.5721, 0.193545, -27.6259, 0.59", "-28.8028, 0.746466, -27.8501, 0.59", "-29.9739, 0.993367, -28.2164, 0.59", "-31.5849, 1.05512, -28.9173, 0.74", "-33.3438, 0.883287, -29.9632, 1.03", "-33.9607, 0.785662, -30.3911, 1.62", "-34.7897, 0.639494, -31.0392, 1.92", "-37.3848, 0.26781, -33.0743, 0.88", "-38.3713, 0.158279, -33.8494, 0.66", "-39.8181, 0.0232241, -34.9429, 0.66", "-41.7716, -0.128228, -36.3482, 0.66", "-42.6336, -0.168028, -36.9523, 0.66", "-44.4774, -0.11826, -38.1851, 0.66", "-45.625, 0.0114925, -38.9256, 0.44", "-47.0324, 0.248801, -39.9268, 0.44", "-48.0312, 0.465509, -40.7352, 0.44", "-49.1655, 0.743114, -41.8489, 0.66", "-49.9403, 0.950682, -42.6835, 0.66", "-50.8289, 1.25539, -43.698, 0.66", "-51.582, 1.58707, -44.5188, 0.66", "-52.4131, 2.07185, -45.4009, 0.44", "-52.9768, 2.45473, -46.0049, 0.74", "-53.8063, 3.06221, -46.883, 0.74", "-54.5413, 3.61515, -47.6615, 0.74", "-55.1689, 4.09232, -48.3041, 0.74", "-55.8926, 4.63685, -49.0167, 0.37", "-57.0274, 5.27997, -50.0747, 0.37", "-57.5645, 5.42511, -50.534, 0.37", "-58.1852, 5.41576, -51.0464, 0.88", "-59.0549, 5.28336, -51.7338, 1.18", "-59.7757, 5.11428, -52.3406, 1.33", "-61.6259, 4.5856, -53.9898, 0.44", "-62.9285, 4.21196, -55.2779, 0.44", "-63.915, 3.96407, -56.4611, 0.44", "-64.7312, 3.86043, -57.6539, 0.88", "-65.5031, 3.96231, -59.0359, 1.03", "-65.7686, 4.12665, -59.6167, 1.03", "-66.3356, 4.93923, -61.0058, 0.44", "-66.659, 5.50641, -61.7948, 0.44", "-67.0798, 6.16543, -62.5814, 0.44", "-67.4779, 6.61927, -63.1586, 0.59", "-68.2237, 7.22991, -63.9752, 0.59", "-69.0652, 7.68348, -64.7368, 0.74", "-70.7542, 8.1996, -65.9896, 0.37", "-71.882, 8.34641, -66.7574, 0.37", "-73.6379, 8.32327, -67.8796, 0.59", "-74.3545, 8.22658, -68.3245, 0.88", "-75.7884, 7.85427, -69.2251, 0.66", "-76.7774, 7.52393, -69.8459, 0.74", "-77.8528, 7.11887, -70.4892, 0.59", "-78.7844, 6.72972, -71.0727, 0.52", "-79.6546, 6.37018, -71.6203, 0.88", "-81.2139, 5.79539, -72.6887, 0.59", "-82.0923, 5.53421, -73.345, 0.44", "-83.0327, 5.32358, -74.1107, 1.03", "-83.6701, 5.23396, -74.657, 1.33", "-84.0543, 5.2166, -74.9904, 1.4", "-85.6561, 5.26423, -76.3244, 0.44", "-86.3034, 5.30434, -76.8415, 0.44", "-87.2571, 5.39664, -77.5737, 0.44", "-88.2571, 5.53799, -78.3078, 0.44", "-89.8747, 5.78225, -79.4936, 0.59", "-90.9813, 5.9219, -80.4021, 0.88", "-91.9585, 6.02855, -81.4062, 1.11", "-93.1782, 6.15596, -82.8661, 0.52", "-94.0185, 6.26984, -84.0101, 0.52", "-94.6977, 6.38264, -85.0161, 1.03", "-96.1787, 6.62273, -87.3786, 1.25", "-97.9629, 6.83706, -90.1515, 0.52", "-98.5892, 6.88987, -91.08, 0.59", "-99.4516, 6.94076, -92.2598, 0.59", "-100.841, 7.07527, -93.942, 0.44", "-101.815, 7.23362, -94.9356, 0.44", "-103.25, 7.59937, -96.2111, 0.44", "-104.0, 7.84424, -96.8826, 0.44", "-104.95, 8.23468, -98.0207, 0.66", "-105.547, 8.56862, -99.0157, 0.88", "-105.817, 8.80171, -99.6279, 0.88", "-106.475, 9.63809, -101.552, 0.52", "-106.806, 10.2459, -102.823, 0.52", "-107.175, 11.1649, -104.805, 0.81", "-107.363, 11.8688, -106.302, 0.44", "-107.438, 12.2943, -107.22, 0.44", "-107.455, 12.8383, -108.359, 0.74", "-107.397, 13.2511, -109.134, 0.96", "-107.068, 14.3486, -110.85, 0.66", "-106.822, 15.035, -111.88, 0.44", "-106.569, 15.7687, -113.06, 0.44", "-106.413, 16.4511, -114.305, 0.44", "-106.422, 16.6864, -114.792, 0.44", "-106.707, 17.2117, -115.951, 0.96", "-107.826, 17.9083, -117.663, 0.66", "-108.672, 18.2475, -118.608, 0.96", "-109.099, 18.4038, -118.996, 1.25", "-109.615, 18.5865, -119.416, 1.25", "-110.425, 18.9052, -120.071, 1.25", "-111.76, 19.5895, -121.247, 0.37", "-112.482, 20.1907, -121.977, 0.37", "-112.909, 20.6644, -122.534, 0.66", "-113.226, 21.0539, -122.964, 0.81", "-113.72, 21.6859, -123.593, 0.81", "-114.5, 22.7084, -124.447, 0.44", "-115.067, 23.4095, -124.91, 0.44", "-116.176, 24.6193, -125.59, 0.44", "-117.441, 25.9423, -126.231, 0.44", "-118.411, 26.9636, -126.654, 0.66", "-119.43, 28.0431, -127.031, 0.96", "-120.472, 29.1548, -127.32, 0.59", "-121.351, 30.1345, -127.532, 0.44", "-122.253, 31.1621, -127.745, 0.44", "-123.125, 32.1338, -128.017, 0.44", "-123.904, 32.8782, -128.349, 0.44", "-124.854, 33.5575, -128.861, 0.74", "-125.348, 33.8138, -129.171, 0.74", "-126.815, 34.3791, -130.101, 0.52", "-127.498, 34.5889, -130.554, 0.59", "-128.77, 34.9368, -131.437, 0.44", "-129.703, 35.2265, -132.127, 0.44", "-130.816, 35.6711, -133.085, 0.37", "-131.881, 36.2254, -134.076, 0.52", "-132.678, 36.7551, -134.895, 1.11", "-133.269, 37.2072, -135.601, 1.25", "-133.934, 37.7581, -136.539, 0.37", "-134.863, 38.5115, -138.027, 0.37", "-135.498, 38.9602, -139.11, 0.29", "-136.008, 39.2607, -140.038, 0.29", "-136.926, 39.7537, -141.781, 0.59", "-137.637, 40.1488, -143.21, 0.59", "-138.031, 40.3878, -144.029, 0.29", "-138.334, 40.6196, -144.639, 0.37", "-138.79, 41.0761, -145.574, 0.37", "-139.402, 41.8256, -146.712, 0.44", "-139.916, 42.5538, -147.514, 0.44", "-140.414, 43.289, -148.174, 0.44", "-141.046, 44.1384, -148.909, 0.37", "-141.322, 44.4547, -149.181, 0.37", "-142.084, 45.1776, -149.782, 0.88", "-142.553, 45.5537, -150.096, 1.11", "-143.411, 46.196, -150.64, 1.11", "-144.748, 47.242, -151.491, 0.37", "-145.759, 48.1129, -152.157, 0.37", "-146.312, 48.6767, -152.546, 0.66", "-147.053, 49.6823, -153.223, 0.66", "-147.556, 50.614, -153.847, 0.37", "-147.894, 51.5402, -154.475, 0.52", "-147.987, 51.9309, -154.744, 0.66", "-148.096, 52.5566, -155.167, 0.66", "-148.377, 54.2871, -156.313, 0.37", "-148.544, 55.0643, -156.779, 0.37", "-148.829, 55.7896, -157.115, 0.37", "-149.216, 56.4436, -157.315, 0.88", "-149.923, 57.3899, -157.498, 0.81", "-150.298, 57.8182, -157.547, 0.81", "-151.279, 58.8487, -157.602, 0.29", "-152.579, 60.1784, -157.653, 0.29", "-153.373, 61.0753, -157.623, 0.52", "-154.303, 62.2327, -157.583, 0.44", "-154.747, 62.818, -157.568, 0.44", "-155.318, 63.6322, -157.528, 0.81", "-155.954, 64.6753, -157.471, 0.81", "-157.054, 66.8398, -157.348, 0.29", "-157.476, 67.7501, -157.296, 0.44", "-157.869, 68.6319, -157.21, 0.29", "-158.317, 69.5794, -157.121, 0.29", "-158.929, 70.7652, -157.039, 0.29", "-159.415, 71.6249, -157.022, 0.29", "-160.013, 72.5731, -157.046, 0.59", "-161.181, 74.3769, -157.061, 0.22", "-161.939, 75.5266, -157.07, 0.22", "-162.358, 76.1094, -157.062, 0.52", "-162.771, 76.6097, -157.028, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-88.4248, -49.3194, 83.988, 0.29", "-95.6758, -53.8775, 90.7986, 0.29", "-101.57, -60.2015, 97.3588, 0.29", "-107.075, -66.5034, 104.278, 0.29", "-112.08, -73.452, 110.885, 0.29", "-115.593, -81.1032, 117.611, 0.29", "-120.022, -88.5166, 124.074, 0.29", "-124.486, -95.9392, 130.501, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-88.4248, -49.3194, 83.988, 0.29", "-94.7394, -52.6946, 89.4908, 0.29", "-100.98, -57.1004, 94.2173, 0.29", "-106.561, -61.9791, 99.2419, 0.29", "-111.33, -67.1018, 104.804, 0.29", "-115.655, -72.7508, 110.159, 0.29", "-119.051, -79.2904, 115.039, 0.29", "-123.136, -85.0683, 120.43, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-9.27773, -55.1369, 16.7796, 0.66", "-10.2501, -57.7642, 15.7291, 0.66", "-10.4976, -58.462, 15.4775, 1.03", "-10.7443, -59.1932, 15.3083, 1.03", "-11.1942, -60.593, 15.1238, 1.03", "-11.4955, -61.6554, 15.0642, 1.03", "-11.8118, -62.9556, 15.0729, 0.81", "-12.0127, -64.1233, 15.2945, 0.81", "-12.1305, -65.8419, 15.7655, 1.4", "-12.1182, -66.5803, 16.021, 1.62", "-12.0091, -67.6851, 16.506, 1.4", "-11.8806, -68.4146, 16.8514, 1.92", "-11.636, -69.4062, 17.3317, 1.4", "-11.1743, -70.9085, 18.0681, 1.69", "-10.8307, -71.9125, 18.5069, 1.11", "-10.3714, -73.2596, 19.0587, 0.81", "-10.1693, -73.8958, 19.2995, 1.11", "-9.95654, -74.6555, 19.5579, 1.25", "-9.57219, -76.3478, 20.0775, 0.96", "-9.45413, -77.205, 20.3016, 0.74", "-9.42768, -78.0256, 20.4786, 0.81", "-9.58259, -79.2726, 20.6605, 0.52", "-9.81863, -80.1651, 20.7314, 0.88", "-10.1106, -80.9188, 20.7074, 0.88", "-10.5118, -81.7471, 20.5478, 0.88", "-10.8837, -82.4826, 20.3341, 0.66", "-11.244, -83.2724, 20.0065, 0.66", "-11.6438, -84.3881, 19.3532, 0.88", "-11.8404, -85.1337, 18.8248, 1.33", "-11.9445, -85.7065, 18.3947, 1.47", "-12.0194, -86.2461, 17.9898, 1.62", "-12.1693, -87.3474, 17.2181, 0.74", "-12.3582, -88.5984, 16.5025, 0.74", "-12.5627, -89.5723, 16.1087, 0.74", "-12.7615, -90.3475, 15.9393, 0.74", "-13.0491, -91.4182, 15.8738, 0.66", "-13.313, -92.5325, 15.9731, 0.66", "-13.605, -94.1441, 16.3438, 0.96", "-13.6854, -94.9754, 16.6123, 0.88", "-13.6797, -95.7222, 16.8739, 0.88", "-13.5266, -97.1184, 17.3481, 0.52", "-13.2692, -98.4041, 17.7633, 1.18", "-13.1215, -99.0341, 17.9228, 1.62", "-12.9658, -99.7439, 18.0417, 1.62", "-12.7844, -100.746, 18.1805, 0.96", "-12.6848, -101.522, 18.2749, 0.96", "-12.6222, -102.695, 18.3983, 0.66", "-12.7038, -104.236, 18.5209, 0.52", "-12.8891, -105.619, 18.6567, 0.59", "-13.2393, -107.208, 18.8438, 0.74", "-13.3673, -107.621, 18.905, 1.11", "-13.6975, -108.41, 19.0795, 1.25", "-14.388, -109.672, 19.4549, 0.88", "-14.8372, -110.3, 19.7155, 0.66", "-15.3217, -110.854, 19.9938, 0.66", "-15.8015, -111.343, 20.2492, 0.59", "-16.7561, -112.33, 20.7125, 0.59", "-17.2924, -112.898, 20.9339, 0.44", "-17.9352, -113.635, 21.1341, 0.44", "-18.4683, -114.322, 21.2283, 0.74", "-18.8989, -114.959, 21.2615, 0.74", "-19.2698, -115.567, 21.2497, 0.66", "-19.7489, -116.456, 21.1611, 1.03", "-20.1086, -117.164, 21.0939, 1.4", "-20.4947, -117.959, 21.0255, 1.4", "-20.8338, -118.649, 20.9729, 1.47", "-21.3717, -119.74, 20.9103, 0.74", "-21.789, -120.589, 20.8531, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-9.27773, -55.1369, 16.7796, 0.44", "-8.86797, -55.6004, 17.7263, 0.44", "-8.6413, -56.0389, 18.357, 0.44", "-8.50781, -56.6552, 18.9305, 0.37", "-8.3809, -57.9091, 19.7511, 0.59", "-8.37201, -58.4132, 19.9862, 0.52", "-8.40429, -59.0742, 20.2225, 0.44", "-8.62115, -60.1706, 20.4999, 0.44", "-8.93519, -61.1139, 20.6914, 0.44", "-9.21733, -61.6973, 20.8039, 0.59", "-9.68955, -62.3782, 20.9792, 0.59", "-10.2952, -62.9604, 21.3005, 0.37", "-11.2118, -63.61, 21.9016, 0.59", "-12.0836, -64.1144, 22.5535, 0.88", "-12.6498, -64.3995, 22.9869, 0.81", "-13.8005, -64.9477, 23.8563, 1.03", "-14.9517, -65.4983, 24.7069, 0.88", "-15.9538, -66.028, 25.3917, 0.44", "-16.7207, -66.5386, 25.8578, 0.44", "-17.1842, -66.9359, 26.1046, 0.66", "-17.7638, -67.526, 26.3216, 0.66", "-18.2247, -68.0599, 26.3708, 0.66", "-18.8352, -68.8238, 26.2886, 0.66", "-19.347, -69.4825, 26.1735, 1.33", "-19.5651, -69.7917, 26.1062, 1.47", "-19.9836, -70.4026, 25.9686, 1.03", "-20.5083, -71.1854, 25.8031, 0.81", "-20.9573, -71.8459, 25.6757, 0.74", "-21.503, -72.6366, 25.5465, 0.52", "-21.8922, -73.217, 25.4748, 0.44", "-26.0528, -79.6588, 29.1217, 0.44", "-29.1324, -86.4591, 33.0775, 0.44", "-32.7363, -93.3446, 36.4019, 0.44", "-37.6278, -100.061, 38.1643, 0.44", "-43.2836, -105.759, 41.1458, 0.44", "-48.4573, -111.372, 45.0161, 0.44", "-53.6239, -117.227, 48.4891, 0.44", "-59.7683, -122.937, 50.2745, 0.44", "-66.5691, -128.227, 50.0576, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.86483, -16.61, -3.24443, 1.47", "3.22607, -18.342, -3.68994, 1.47", "2.57338, -20.5701, -4.08474, 1.33", "2.14823, -22.3451, -4.26535, 1.55", "1.87205, -23.7846, -4.29032, 1.55", "1.64131, -25.2763, -4.13049, 1.77", "1.3787, -27.1846, -3.71952, 1.77", "1.26422, -28.3604, -3.29772, 2.14", "1.1747, -29.3411, -2.83281, 2.58", "1.04602, -30.5954, -2.20128, 2.36", "0.757721, -32.8994, -1.15788, 1.77", "0.459732, -34.8903, -0.474175, 1.47", "0.201893, -36.5632, -0.13407, 1.18", "-0.0471907, -38.343, 0.0306017, 1.11", "-0.231222, -39.9278, 0.00303811, 1.33", "-0.407317, -42.0917, -0.284548, 1.25", "-0.454889, -43.9865, -0.718593, 1.47", "-0.399622, -45.6838, -1.16871, 1.62", "-0.312324, -46.9574, -1.51377, 2.14", "-0.256456, -47.8362, -1.73401, 2.58", "-0.230128, -49.0997, -1.99647, 2.43", "-0.311495, -51.1339, -2.33224, 2.14", "-0.493232, -52.7771, -2.56567, 1.92", "-0.807589, -54.4078, -2.76686, 1.47", "-1.37291, -56.4234, -3.00009, 1.25", "-1.96662, -58.0866, -3.12829, 1.11", "-2.50567, -59.3311, -3.15963, 1.4", "-2.89721, -60.1312, -3.14766, 1.55", "-3.50991, -61.3531, -3.07089, 1.18", "-4.08312, -62.6003, -2.91247, 0.88", "-4.58997, -63.9117, -2.74926, 1.18", "-4.97962, -65.1945, -2.6015, 1.03", "-5.29459, -66.4019, -2.45714, 1.03", "-5.67374, -68.1918, -2.26864, 1.47", "-5.83707, -69.3287, -2.17945, 1.77", "-5.98255, -71.1176, -2.12174, 1.77", "-6.0525, -72.4949, -2.19187, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "3.86483, -16.61, -3.24443, 1.77", "4.50986, -19.1455, -3.86385, 1.77", "4.79691, -20.4142, -4.15987, 1.99", "5.12697, -21.873, -4.50025, 1.99", "5.57732, -23.8635, -4.96467, 3.17", "5.78018, -24.7601, -5.17388, 3.76", "6.12731, -26.2944, -5.53186, 4.2", "6.31663, -27.6502, -5.81068, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205292", "5.97663, 56.3268, -0.359339, 0.205292", "7.46769, 71.2525, -0.359339, 0.205292" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-56.932, 104.32, -28.3664, 0.29", "-57.2616, 105.239, -28.4048, 0.29", "-57.5557, 106.704, -28.6965, 0.29", "-57.7178, 108.045, -28.9898, 0.29", "-57.7963, 109.509, -29.3205, 0.29", "-57.8018, 110.573, -29.5767, 0.29", "-57.7868, 112.326, -29.9893, 0.29", "-57.6132, 115.521, -30.8412, 0.29", "-57.5346, 116.515, -31.1294, 0.37", "-57.4383, 117.718, -31.5076, 0.37", "-57.3289, 119.207, -32.0223, 0.37", "-57.2318, 120.435, -32.4505, 0.22", "-57.1535, 121.707, -32.8783, 0.22", "-57.2271, 123.04, -33.25, 1.03", "-57.2641, 123.277, -33.3313, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-56.932, 104.32, -28.3664, 0.52", "-57.9634, 104.954, -28.1991, 0.52", "-58.4512, 105.296, -28.0862, 0.52", "-58.9474, 105.705, -27.9529, 0.44", "-59.1707, 105.92, -27.8872, 0.59", "-59.4119, 106.186, -27.8089, 0.59", "-59.8576, 106.699, -27.6504, 0.37", "-60.3749, 107.383, -27.479, 0.37", "-60.6923, 107.827, -27.3545, 0.37", "-61.0149, 108.272, -27.2244, 0.37", "-61.3775, 108.755, -27.0697, 0.29", "-61.7167, 109.185, -26.9262, 0.29", "-62.1061, 109.629, -26.7766, 0.81", "-62.2854, 109.803, -26.7243, 0.81", "-62.5896, 110.06, -26.6513, 0.74", "-63.0016, 110.386, -26.5931, 0.74", "-63.3518, 110.645, -26.6023, 0.96", "-63.6952, 110.895, -26.6717, 0.96", "-63.9181, 111.068, -26.7521, 0.59", "-64.3366, 111.448, -26.9696, 0.29", "-64.7054, 111.856, -27.2372, 0.29", "-65.0893, 112.35, -27.578, 0.29", "-65.3562, 112.725, -27.8264, 0.22", "-65.7544, 113.313, -28.2029, 0.22", "-66.0658, 113.796, -28.4991, 0.74", "-66.4257, 114.366, -28.8089, 0.37", "-66.725, 114.861, -29.0227, 0.37", "-67.0053, 115.347, -29.1982, 0.81", "-67.2053, 115.674, -29.3215, 1.18", "-67.3986, 115.926, -29.4303, 1.18", "-67.8915, 116.457, -29.717, 0.29", "-68.4154, 116.981, -30.0177, 0.29", "-68.7451, 117.297, -30.2238, 0.29", "-69.0772, 117.601, -30.4508, 0.29", "-69.5689, 118.014, -30.7901, 0.74", "-69.9217, 118.255, -31.0421, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "84.7601, 37.4548, 37.5872, 0.29", "92.0935, 39.8407, 44.3484, 0.29", "99.0821, 42.2431, 51.4616, 0.29", "106.741, 45.1823, 57.6012, 0.29", "114.012, 49.427, 63.3962, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "84.7601, 37.4548, 37.5872, 0.29", "92.6614, 38.435, 43.5111, 0.29", "100.608, 40.9744, 48.8501, 0.29", "109.446, 43.5733, 52.4768, 0.29", "117.281, 47.5405, 56.9611, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "90.7178, 35.6585, -3.73532, 0.44", "91.8308, 35.7343, -4.33544, 0.44", "92.2405, 35.8427, -4.6071, 0.37", "92.966, 36.1263, -5.1121, 0.59", "93.3607, 36.303, -5.38706, 0.74", "94.3771, 36.7853, -6.06613, 0.37", "95.4304, 37.3032, -6.73027, 0.29", "96.0539, 37.6997, -7.13213, 0.29", "96.5051, 38.0148, -7.38599, 0.88", "96.6717, 38.1451, -7.47326, 1.11", "97.0886, 38.4768, -7.65946, 1.11", "97.4918, 38.7606, -7.75617, 1.18", "98.2513, 39.142, -7.82739, 0.74", "98.7708, 39.3813, -7.85445, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "90.7178, 35.6585, -3.73532, 0.29", "91.7113, 36.5832, -3.33379, 0.29", "92.1787, 37.0202, -3.12413, 0.29", "92.7774, 37.5799, -2.85558, 0.66", "93.4237, 38.1842, -2.56566, 0.29", "93.9076, 38.6366, -2.3486, 0.29", "94.8775, 39.5434, -1.91355, 0.29", "95.4325, 40.0199, -1.60436, 0.29", "103.721, 47.3087, 0.927164, 0.29", "110.867, 55.2513, 4.55088, 0.29", "116.55, 64.4699, 7.31216, 0.29", "123.382, 72.8735, 10.333, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-71.9051, -58.8593, -57.2609, 0.81", "-72.4058, -60.2156, -58.8468, 0.81", "-72.5009, -60.3864, -59.0534, 0.81", "-73.7671, -62.1157, -61.0942, 0.37", "-74.1502, -62.5686, -61.5851, 0.52", "-74.5207, -62.9996, -62.035, 0.66", "-74.9467, -63.5129, -62.5482, 0.66", "-75.9023, -64.527, -63.5083, 0.37", "-76.507, -65.1561, -64.1291, 0.37", "-77.4439, -66.0904, -65.0578, 0.37", "-78.0177, -66.6637, -65.6543, 0.66", "-78.9378, -67.5676, -66.5946, 1.11", "-79.3735, -67.9766, -67.006, 1.25", "-80.8344, -69.2452, -68.4417, 0.22", "-81.4372, -69.6935, -69.0351, 0.29", "-81.9601, -70.018, -69.5373, 0.59", "-82.5544, -70.345, -70.0671, 0.81", "-83.1838, -70.6991, -70.6392, 0.81", "-84.8176, -71.7797, -72.1011, 0.37", "-85.3006, -72.1572, -72.5101, 0.37", "-86.0916, -72.9543, -73.2325, 0.59", "-86.384, -73.3122, -73.5039, 0.81", "-87.4333, -74.8058, -74.4284, 0.44", "-88.1513, -75.9531, -74.9729, 0.44", "-88.7272, -76.9361, -75.319, 0.37", "-89.4227, -78.1656, -75.7085, 0.37", "-89.9412, -79.0689, -75.9929, 0.66", "-90.3606, -79.7342, -76.2304, 0.81", "-90.7766, -80.3444, -76.4342, 0.81", "-91.5553, -81.4162, -76.8196, 0.29", "-92.0106, -82.0012, -77.0199, 0.96", "-93.1264, -83.3615, -77.4031, 0.29", "-93.8401, -84.2476, -77.6121, 0.29", "-94.5515, -85.1291, -77.7587, 0.44", "-94.9568, -85.6147, -77.8267, 0.44", "-95.6172, -86.3872, -77.8855, 0.29", "-95.9795, -86.8211, -77.9432, 0.59", "-96.534, -87.542, -78.0455, 0.59", "-97.049, -88.2744, -78.1904, 0.52", "-97.8658, -89.3769, -78.4894, 0.37", "-98.3886, -90.0662, -78.7119, 0.88", "-99.3668, -91.3531, -79.1675, 0.44", "-99.9132, -92.0949, -79.4246, 0.59", "-100.359, -92.7055, -79.6276, 0.59", "-100.895, -93.4438, -79.832, 0.59", "-101.452, -94.1896, -79.9695, 0.37", "-101.9, -94.7108, -80.0201, 0.37", "-102.642, -95.4447, -79.9915, 0.29", "-102.923, -95.6908, -79.9506, 0.29", "-103.646, -96.2984, -79.773, 0.88", "-104.135, -96.7118, -79.6043, 1.18", "-104.957, -97.3383, -79.2902, 0.29", "-105.564, -97.7606, -79.0652, 0.29", "-106.471, -98.3946, -78.7932, 0.29", "-106.884, -98.7052, -78.6901, 0.88", "-107.287, -99.0304, -78.618, 0.88", "-108.604, -100.141, -78.5181, 0.22", "-109.049, -100.53, -78.5411, 0.22", "-110.029, -101.365, -78.6639, 0.59", "-110.247, -101.549, -78.7068, 0.59", "-111.127, -102.281, -78.9005, 0.22", "-111.632, -102.709, -79.0271, 0.44", "-112.337, -103.378, -79.243, 0.22", "-113.31, -104.289, -79.5269, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-71.9051, -58.8593, -57.2609, 0.29", "-73.2608, -58.8123, -57.2927, 0.29", "-74.1056, -58.8232, -57.2709, 0.29", "-74.9377, -58.868, -57.2535, 0.66", "-75.337, -58.9109, -57.2466, 0.66", "-76.748, -59.1041, -57.2088, 0.29", "-77.3575, -59.199, -57.1969, 0.29", "-77.8141, -59.29, -57.1444, 0.66", "-78.2506, -59.3944, -57.085, 0.66", "-79.7478, -59.783, -56.8752, 0.29", "-80.2763, -59.9036, -56.813, 0.52", "-80.7794, -59.9947, -56.7731, 0.52", "-82.1611, -60.1456, -56.6678, 0.22", "-82.8, -60.1758, -56.6188, 0.59", "-83.2092, -60.1735, -56.5745, 0.74", "-84.0001, -60.1255, -56.4896, 0.29", "-84.3977, -60.0873, -56.4536, 0.29", "-84.915, -60.0146, -56.4133, 0.96", "-85.4143, -59.9088, -56.4207, 0.96", "-86.778, -59.5952, -56.4004, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-21.789, -120.589, 20.8531, 0.29", "-21.9251, -120.537, 21.5899, 0.29", "-22.1704, -120.463, 23.2114, 0.29", "-22.3442, -120.453, 24.3701, 0.59", "-22.6089, -120.542, 25.9789, 0.66", "-22.9599, -120.829, 28.2422, 0.59", "-23.1547, -121.178, 29.7403, 0.29", "-23.197, -121.562, 30.6543, 0.52", "-23.1215, -122.079, 31.0391, 0.66", "-22.8409, -123.276, 31.3241, 0.37", "-22.4093, -124.831, 31.481, 0.29", "-22.0417, -126.072, 31.5139, 0.29", "-21.6667, -127.31, 31.4787, 0.29", "-21.3041, -128.434, 31.4369, 0.29", "-20.8124, -129.756, 31.4071, 0.29", "-20.3374, -130.881, 31.4083, 0.29", "-19.0886, -137.358, 39.6823, 0.29", "-19.1073, -142.501, 49.0297, 0.29", "-16.4521, -147.81, 57.8752, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-21.789, -120.589, 20.8531, 0.74", "-22.2914, -121.442, 20.3731, 0.74", "-22.7241, -122.312, 19.9644, 0.52", "-23.0528, -123.046, 19.668, 0.52", "-23.5634, -124.378, 19.2323, 0.59", "-23.7734, -125.049, 19.0981, 0.96", "-23.9238, -125.77, 19.013, 1.18", "-23.9331, -126.378, 18.9486, 1.18", "-23.8514, -126.947, 18.92, 0.96", "-23.601, -127.776, 18.8664, 0.66", "-23.0294, -128.951, 18.6478, 0.52", "-22.4067, -130.001, 18.4044, 0.52", "-21.6162, -131.109, 18.071, 0.29", "-21.2615, -131.524, 17.9088, 0.37", "-20.2691, -132.486, 17.3853, 0.29", "-19.1443, -133.358, 16.6464, 0.29", "-18.2804, -142.901, 15.1493, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-6.0525, -72.4949, -2.19187, 0.37", "-10.088, -74.1087, -1.82456, 0.37", "-11.9941, -74.9234, -1.03617, 0.37", "-13.4003, -75.5517, -0.269384, 0.37", "-14.3547, -75.9899, 0.269499, 0.37", "-15.5573, -76.5558, 0.997133, 0.59", "-16.7227, -77.1203, 1.71488, 0.74", "-17.6178, -77.5477, 2.44018, 0.52", "-18.294, -77.877, 2.99566, 0.59", "-18.8965, -78.2325, 3.45023, 0.74", "-19.9351, -78.8521, 4.10195, 0.52", "-20.5897, -79.2292, 4.42905, 0.52", "-21.2056, -79.5547, 4.67088, 0.74", "-21.8977, -79.8996, 4.90979, 0.74", "-22.5587, -80.2392, 5.12492, 0.52", "-23.5168, -80.7268, 5.42295, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.0525, -72.4949, -2.19187, 0.88", "-6.29705, -73.6726, -2.24839, 0.88", "-6.77819, -75.1525, -2.18422, 0.66", "-7.27797, -76.1892, -1.87725, 0.74", "-7.71062, -76.8773, -1.58316, 0.88", "-8.46903, -77.9187, -1.10013, 0.88", "-8.95281, -78.5487, -0.812079, 1.03", "-9.54649, -79.2362, -0.43881, 1.03", "-10.8972, -80.8369, 0.456486, 1.03", "-11.663, -81.8438, 0.973645, 1.03", "-12.2874, -82.8614, 1.41166, 0.88", "-12.6294, -83.7354, 1.68187, 0.88", "-12.7348, -84.5511, 1.86769, 0.88", "-12.5155, -86.136, 2.0495, 1.25", "-12.3326, -86.7126, 2.08783, 1.55", "-11.9742, -87.5223, 2.18577, 1.55", "-11.3826, -88.6426, 2.44809, 1.55", "-10.9649, -89.3386, 2.711, 1.55", "-10.1618, -90.5397, 3.36263, 1.03", "-9.51093, -91.3948, 4.01086, 1.03", "-8.95521, -92.0663, 4.62092, 0.81", "-8.05145, -93.0599, 5.6921, 0.81", "-7.40579, -93.7098, 6.47728, 1.03", "-6.76777, -94.2754, 7.20142, 1.03", "-6.02683, -94.8619, 7.95464, 1.03", "-5.40438, -95.3434, 8.48332, 0.88", "-4.43725, -96.1404, 9.19251, 0.88", "-3.94698, -96.5703, 9.49185, 0.96", "-3.37939, -97.1277, 9.8036, 0.96", "-2.60599, -97.9787, 10.1979, 1.33", "-2.19468, -98.4914, 10.3833, 1.62", "-1.85321, -98.957, 10.5369, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.31663, -27.6502, -5.81068, 0.66", "6.31427, -30.3424, -3.62862, 0.66", "6.25229, -31.2235, -3.01398, 0.88", "6.13407, -32.9698, -1.95829, 1.03", "6.10691, -33.8014, -1.49943, 1.03", "6.11556, -34.5337, -1.10996, 1.03", "6.1721, -35.4373, -0.631746, 0.37", "6.2426, -36.4079, -0.232793, 0.37", "6.46259, -37.3752, 0.156991, 0.59", "6.92745, -38.2034, 0.49786, 0.81", "7.33806, -38.6708, 0.753506, 0.81", "7.81587, -39.0824, 1.06745, 0.52", "8.26318, -39.4156, 1.38755, 0.81", "8.9173, -39.8963, 1.899, 1.25", "9.17031, -40.1373, 2.13785, 1.69", "9.44904, -40.5665, 2.48709, 1.69", "9.71407, -41.6048, 3.0919, 0.96", "9.73567, -42.2808, 3.36967, 0.66", "9.70477, -42.8086, 3.54751, 0.81", "9.61312, -43.9148, 3.90103, 0.44", "9.58545, -44.7937, 4.20265, 0.44", "9.62096, -45.4865, 4.46066, 0.44", "9.74818, -46.1101, 4.78105, 0.88", "10.0801, -46.9236, 5.42216, 1.25", "10.5305, -47.6829, 6.19691, 0.66", "10.9616, -48.2593, 6.86721, 0.52", "11.2295, -48.5963, 7.2643, 0.52", "11.8768, -49.4668, 8.24566, 0.74", "12.3993, -50.2438, 9.02808, 1.25", "12.6048, -50.5771, 9.30372, 1.25", "12.9388, -51.1511, 9.67939, 0.52", "13.3598, -51.8939, 10.0335, 0.44", "13.9239, -52.8773, 10.3618, 0.37", "14.2806, -53.4567, 10.4718, 0.37", "14.6686, -54.0376, 10.5376, 0.96", "14.9743, -54.4693, 10.5778, 1.33", "15.901, -55.6424, 10.6844, 0.29", "16.2473, -56.0207, 10.7205, 0.29", "16.6031, -56.3607, 10.749, 0.29", "16.7358, -56.4869, 10.7607, 0.44", "19.9461, -63.553, 13.9288, 0.44", "24.3902, -70.2468, 16.4301, 0.44", "28.1445, -77.5413, 18.0336, 0.44", "32.2407, -84.5648, 20.0841, 0.44", "35.8792, -91.6548, 22.6755, 0.44", "39.3535, -99.0071, 24.5904, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "6.31663, -27.6502, -5.81068, 1.03", "6.28925, -29.6806, -6.24046, 1.03", "6.47393, -31.7106, -6.59166, 1.03", "6.77002, -33.1873, -6.79234, 0.96", "7.1639, -34.5877, -6.94473, 0.96", "7.65234, -35.9466, -7.057, 0.96", "8.04385, -36.8669, -7.07342, 1.18", "8.854, -38.128, -6.87528, 1.47", "9.68266, -39.1428, -6.54394, 2.21", "10.0305, -39.5439, -6.36093, 2.21", "10.5484, -40.2012, -5.99683, 1.99", "11.3981, -41.5043, -5.22105, 1.33", "12.0999, -42.9553, -4.39384, 0.88", "12.4724, -44.1256, -3.7765, 0.74", "12.6353, -45.2289, -3.29352, 0.74", "12.6638, -46.5483, -2.83881, 1.33", "12.6132, -47.3474, -2.63662, 1.62", "12.5174, -48.2176, -2.49442, 1.92", "12.4162, -49.1459, -2.42285, 1.69", "12.338, -50.9091, -2.37867, 1.33", "12.4209, -52.6914, -2.40021, 1.03", "12.6007, -53.915, -2.44914, 0.88", "12.8895, -55.0445, -2.50267, 1.03", "13.4034, -56.5188, -2.58236, 1.03", "14.0475, -57.9938, -2.68533, 1.03", "14.6749, -59.2435, -2.82272, 1.33", "15.1513, -60.179, -2.9903, 1.69", "15.6762, -61.3105, -3.27357, 1.47", "15.9811, -62.0992, -3.53373, 1.03", "16.3309, -63.2957, -4.00827, 0.96", "16.5619, -64.3817, -4.51655, 0.96", "16.7519, -65.7077, -5.19011, 1.4", "16.8859, -67.1141, -5.91224, 1.4", "16.9913, -68.3426, -6.53468, 1.55", "17.0739, -69.0133, -6.83972, 1.77", "17.2976, -70.3084, -7.33591, 0.96", "17.5839, -71.4796, -7.66297, 0.66", "17.9555, -72.5924, -7.79478, 0.66", "18.4571, -73.6751, -7.74557, 0.96", "19.1096, -74.7544, -7.55206, 1.11", "19.4636, -75.228, -7.42648, 1.4", "19.7924, -75.6044, -7.30833, 1.4", "20.4844, -76.3869, -7.06321, 1.4", "21.305, -77.4028, -6.80837, 0.66", "21.6712, -77.9426, -6.74073, 0.52", "22.0881, -78.7059, -6.72694, 0.52", "22.6206, -79.9512, -6.74383, 0.81", "23.0711, -81.3433, -6.73776, 1.03", "23.2809, -82.2601, -6.74508, 1.03", "23.4505, -83.4953, -6.74364, 1.03", "23.5609, -84.7193, -6.81516, 1.03", "23.6384, -85.9871, -6.94704, 0.88", "23.7499, -87.5284, -7.22187, 1.03", "23.8986, -88.8977, -7.5506, 0.52", "24.1108, -90.1882, -7.95257, 0.52", "24.5125, -92.0573, -8.72285, 0.88", "24.7108, -92.8155, -9.11171, 1.11", "25.0511, -94.0102, -9.82028, 0.59", "25.1917, -94.5164, -10.1202, 0.59", "25.4426, -95.6633, -10.6388, 0.52", "25.5695, -96.8985, -10.9541, 0.52", "25.4766, -97.9144, -10.9385, 1.11", "25.2553, -98.7769, -10.7985, 1.25", "24.7601, -100.085, -10.4404, 1.18", "24.2076, -101.365, -10.0174, 0.52", "23.8035, -102.259, -9.65363, 0.52", "23.3127, -103.486, -9.15766, 0.52", "23.165, -103.948, -9.00914, 0.81", "22.9799, -104.79, -8.84216, 0.74", "22.8159, -105.866, -8.79063, 0.74", "22.6695, -106.927, -8.85568, 1.03", "22.4425, -108.32, -9.07662, 0.66", "22.2411, -109.231, -9.28892, 0.52", "21.9039, -110.274, -9.61305, 1.11", "21.5511, -111.136, -10.0018, 1.11", "20.998, -112.344, -10.6836, 0.81", "20.4194, -113.595, -11.509, 0.66", "20.0339, -114.471, -12.1156, 0.88", "19.605, -115.665, -12.9861, 0.66", "19.1799, -117.236, -14.2743, 0.59", "18.9978, -118.262, -15.1949, 0.88", "18.905, -119.158, -16.0426, 1.18", "18.8554, -119.807, -16.6596, 0.96", "18.8028, -120.665, -17.4754, 0.96", "18.6915, -122.239, -18.863, 0.52", "18.6318, -122.761, -19.2752, 0.81", "18.4974, -123.786, -20.0126, 0.66", "18.3749, -124.577, -20.4424, 0.66", "18.2075, -125.568, -20.7812, 0.96", "17.9683, -126.817, -20.7646, 0.88", "17.7649, -127.929, -20.4899, 0.88", "17.5863, -128.903, -20.1821, 0.37", "17.2938, -130.69, -19.55, 1.03", "17.1415, -131.629, -19.2406, 1.03", "16.7357, -133.7, -18.6358, 0.44", "16.4509, -135.192, -18.3704, 0.44", "16.349, -136.048, -18.4106, 0.74", "16.3754, -136.919, -18.731, 0.74", "16.575, -138.109, -19.4698, 0.44", "16.8215, -139.06, -20.1597, 0.66", "17.2772, -140.425, -21.2438, 0.44", "17.9903, -142.38, -22.7932, 0.88", "18.7893, -144.533, -24.3968, 0.52", "19.2104, -145.632, -25.1852, 0.74", "19.7962, -147.113, -26.1938, 1.33", "20.1102, -147.956, -26.7255, 1.33", "20.6276, -149.701, -27.6824, 0.74", "20.8571, -150.816, -28.1733, 0.66", "21.0249, -152.403, -28.7631, 0.66", "21.0359, -153.501, -29.177, 0.81", "20.9246, -154.614, -29.6384, 0.59", "20.7621, -155.356, -29.9468, 1.18", "20.6484, -155.699, -30.0957, 1.18", "20.1746, -156.909, -30.6176, 0.44", "19.7313, -157.969, -30.9705, 0.44", "19.3896, -158.868, -31.1958, 1.03", "19.2102, -159.519, -31.2807, 1.4", "18.9956, -160.925, -31.1789, 0.52", "18.9267, -161.885, -31.0309, 0.52", "18.9851, -163.17, -30.6582, 0.74", "19.0406, -163.641, -30.4435, 0.74", "19.1687, -164.6, -29.8178, 0.59", "19.3457, -165.702, -28.8661, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "6.31663, -27.6502, -5.81068, 0.88", "11.3266, -27.602, -8.90805, 0.88", "12.7489, -27.5451, -9.64685, 0.88", "14.16, -27.4819, -10.2457, 1.03", "15.1085, -27.4381, -10.5717, 1.33", "15.9782, -27.4046, -10.833, 1.62", "17.2307, -27.3754, -11.1745, 1.84", "18.2914, -27.2968, -11.3258, 1.47", "19.5671, -27.2118, -11.6756, 1.18", "20.5272, -27.1181, -12.3347, 0.81", "21.5534, -26.9809, -13.3611, 0.81", "22.2035, -26.9069, -14.1117, 1.11", "23.5815, -26.8289, -15.8743, 1.33", "25.029, -26.8044, -17.8244, 1.77", "28.3222, -26.883, -22.3428, 1.47", "29.3814, -26.9423, -23.7538, 1.11", "30.462, -27.0186, -25.0956, 1.11", "31.9104, -27.1269, -26.6657, 0.81", "32.7865, -27.204, -27.4209, 0.96", "34.167, -27.29, -28.2548, 0.88", "35.297, -27.213, -28.7522, 0.74", "36.1704, -26.9866, -29.1768, 0.59", "37.3101, -26.4701, -29.8668, 1.03", "38.1625, -25.9812, -30.4168, 1.55", "38.9481, -25.5002, -30.9351, 1.69", "41.3008, -24.0445, -32.5604, 1.69", "42.0285, -23.6141, -33.0881, 1.69", "43.8504, -22.6237, -34.3972, 0.88", "44.8799, -22.1498, -35.0858, 0.81", "46.1041, -21.7149, -35.7836, 1.11", "47.689, -21.3362, -36.5287, 1.18", "49.1162, -21.1968, -37.0188, 0.59", "49.7507, -21.2173, -37.2096, 0.59", "51.2806, -21.5158, -37.5443, 0.96", "52.368, -21.9064, -37.7608, 1.18", "53.2853, -22.3777, -37.8972, 1.18", "54.2114, -22.9527, -37.9578, 1.4", "55.271, -23.6713, -37.9782, 1.4", "56.2544, -24.3157, -37.9794, 1.11", "56.9503, -24.7098, -37.959, 1.11", "57.8118, -25.0642, -37.916, 1.03", "58.944, -25.3704, -37.8354, 1.03", "59.9338, -25.5178, -37.7449, 1.03", "61.0772, -25.5814, -37.6198, 0.96", "62.6567, -25.5492, -37.4403, 0.88", "64.3746, -25.4245, -37.2004, 0.88", "65.5133, -25.2845, -37.0157, 1.03", "66.4091, -25.1475, -36.8814, 1.11", "67.1476, -25.0303, -36.8009, 1.18", "67.8209, -24.9529, -36.8121, 1.18", "69.1906, -24.9274, -37.1155, 0.81", "70.18, -25.0398, -37.5406, 0.74", "71.479, -25.3068, -38.2569, 1.18", "72.4721, -25.5596, -38.8724, 1.4", "74.4974, -26.1136, -40.2524, 1.18", "76.0595, -26.5257, -41.3901, 0.88", "77.2316, -26.7876, -42.3169, 0.74", "78.4194, -26.9843, -43.2422, 0.74", "79.503, -27.0608, -44.0204, 1.11", "80.661, -27.0219, -44.8009, 1.4", "81.8135, -26.9181, -45.5343, 1.4", "83.4198, -26.7806, -46.5773, 1.11", "84.3647, -26.738, -47.231, 0.74", "85.5551, -26.7982, -48.1099, 0.66", "86.9727, -27.066, -49.2156, 0.81", "88.3941, -27.5468, -50.2782, 0.74", "89.5752, -28.0671, -51.1487, 1.25", "90.2277, -28.3836, -51.5998, 1.69", "91.0766, -28.7644, -52.1451, 1.69", "91.9549, -29.0521, -52.5968, 1.4", "93.308, -29.2463, -53.0883, 0.88", "95.2712, -29.1594, -53.6001, 0.81", "96.1597, -29.0421, -53.7833, 0.81", "97.391, -28.8651, -53.9703, 0.81", "98.9603, -28.6496, -54.1051, 0.81", "99.9311, -28.5528, -54.1257, 0.81", "101.289, -28.52, -54.0872, 0.81", "102.188, -28.623, -53.9994, 0.96", "103.562, -29.0095, -53.9112, 0.96", "104.495, -29.4222, -53.9487, 1.18", "105.334, -29.8881, -54.0976, 1.47", "106.195, -30.4072, -54.3188, 1.47", "107.457, -31.1711, -54.6953, 0.74", "108.931, -32.0018, -55.1673, 0.74", "110.749, -32.9001, -55.789, 0.66", "112.456, -33.6385, -56.4246, 0.74", "113.527, -34.0192, -56.8261, 0.81", "114.757, -34.3384, -57.2638, 0.81", "115.382, -34.4324, -57.4631, 1.11", "116.887, -34.4859, -57.8985, 1.25", "117.557, -34.4362, -58.1301, 1.62", "118.311, -34.3094, -58.5024, 1.62", "119.799, -33.9937, -59.3942, 0.59", "120.734, -33.7836, -60.0233, 0.59", "122.142, -33.4832, -61.0041, 0.88", "124.033, -33.1209, -62.3334, 1.4", "125.935, -32.824, -63.6222, 0.74", "127.052, -32.698, -64.3438, 0.59", "127.995, -32.6445, -64.8876, 0.81", "128.817, -32.6603, -65.2318, 0.81", "129.584, -32.7309, -65.3849, 0.96", "130.357, -32.8132, -65.411, 0.96", "131.274, -32.8929, -65.3875, 0.59", "132.708, -32.9491, -65.3731, 0.59", "134.097, -32.9289, -65.3598, 0.66", "134.913, -32.8718, -65.4202, 1.03", "136.257, -32.733, -65.5977, 1.03", "137.628, -32.4921, -66.112, 0.59", "138.329, -32.3152, -66.503, 0.59", "139.263, -32.0399, -67.138, 0.59", "140.692, -31.6531, -68.2044, 1.11", "141.332, -31.5212, -68.6896, 1.33", "144.909, -30.9813, -71.2835, 1.03", "145.549, -30.9012, -71.7063, 1.4", "146.806, -30.7603, -72.4355, 0.81", "148.064, -30.6258, -73.0449, 0.74", "149.64, -30.4612, -73.6142, 0.59", "150.676, -30.3516, -73.8843, 0.59", "152.311, -30.1879, -74.0771, 0.59", "154.25, -29.9163, -74.2981, 0.88", "154.94, -29.754, -74.3662, 1.25", "155.553, -29.548, -74.418, 1.55", "156.466, -29.1813, -74.5059, 1.55", "157.208, -28.8714, -74.5967, 1.33", "158.126, -28.4858, -74.716, 0.66", "159.299, -28.0156, -74.8647, 0.66", "160.09, -27.7303, -75.0361, 0.66", "161.553, -27.2239, -75.5183, 0.66", "162.228, -27.0675, -75.9859, 0.66", "162.649, -27.0057, -76.3653, 0.96", "163.154, -26.9638, -76.8713, 0.96", "164.674, -26.9411, -78.4382, 0.74", "165.583, -26.9654, -79.3676, 1.62", "169.195, -27.1372, -82.9057, 0.66", "169.739, -27.1522, -83.4129, 0.66", "170.567, -27.1559, -84.1055, 1.11", "171.636, -27.1458, -84.8867, 1.11", "172.707, -27.0992, -85.4973, 0.52", "173.749, -26.9933, -85.9189, 0.52", "175.053, -26.7275, -86.2544, 1.25", "176.061, -26.4805, -86.5197, 0.88", "177.983, -25.9019, -87.0252, 0.44", "179.081, -25.5059, -87.2943, 0.44", "180.706, -24.8415, -87.6632, 0.52", "181.781, -24.3596, -87.89, 0.88", "182.313, -24.1088, -87.9906, 1.11", "182.775, -23.8636, -88.1296, 1.11", "183.157, -23.632, -88.3027, 1.11", "184.45, -22.787, -89.181, 0.52", "184.989, -22.4435, -89.6976, 0.52", "185.751, -21.9823, -90.5275, 0.81", "187.546, -20.9782, -92.535, 0.81", "188.392, -20.5298, -93.4579, 1.11", "188.759, -20.3492, -93.8173, 1.92", "190.853, -19.436, -95.5058, 0.59", "191.114, -19.3411, -95.662, 0.59", "192.033, -19.0882, -95.9714, 0.88", "193.185, -18.8666, -96.1031, 0.44", "195.055, -18.5925, -96.2144, 0.44", "196.524, -18.4239, -96.2601, 0.74", "197.356, -18.364, -96.3137, 0.74", "198.622, -18.348, -96.597, 0.52", "199.4, -18.3941, -96.931, 0.52", "200.6, -18.5358, -97.6627, 0.59", "201.063, -18.5914, -97.9944, 0.59", "203.103, -18.761, -99.5496, 0.59", "204.45, -18.7953, -100.573, 0.81", "205.717, -18.7398, -101.532, 1.4", "206.388, -18.6383, -101.995, 1.55", "207.917, -18.1717, -102.85, 0.44", "208.557, -17.8645, -103.101, 0.88", "209.324, -17.3981, -103.235, 0.88", "210.155, -16.8852, -103.358, 0.59", "211.443, -16.1444, -103.566, 0.59", "212.326, -15.7324, -103.825, 0.81", "213.347, -15.3757, -104.235, 0.81", "214.72, -14.991, -104.94, 0.52", "216.303, -14.5942, -105.931, 0.74", "216.846, -14.4543, -106.427, 0.74", "218.086, -14.0332, -108.059, 0.37", "218.623, -13.771, -108.97, 0.37", "219.353, -13.2737, -110.47, 0.37", "219.915, -12.7485, -111.809, 0.59", "221.419, -11.1223, -115.479, 0.88", "222.126, -10.3427, -117.143, 0.52", "222.395, -10.0905, -117.728, 0.52", "223.03, -9.65711, -118.999, 0.52", "223.577, -9.37838, -119.921, 0.81", "224.32, -9.08093, -120.965, 0.59", "224.981, -8.87592, -121.746, 0.59", "227.197, -8.35137, -124.239, 1.18", "229.838, -7.84875, -127.377, 0.74", "230.483, -7.75114, -128.211, 0.74", "231.079, -7.67273, -129.06, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-57.2641, 123.277, -33.3313, 0.29", "-57.9247, 123.22, -34.5754, 0.29", "-58.4893, 123.325, -35.557, 0.29", "-58.7643, 123.547, -36.082, 0.59", "-59.0813, 123.952, -36.6751, 0.59", "-59.3567, 124.348, -37.1442, 0.59", "-59.6764, 124.81, -37.6261, 0.44", "-59.9552, 125.321, -37.9718, 0.59", "-60.4136, 126.384, -38.6371, 0.37", "-60.6134, 126.91, -38.9831, 0.29", "-60.8117, 127.396, -39.3441, 0.59", "-61.0293, 127.891, -39.7411, 0.59", "-61.505, 128.934, -40.6067, 0.29", "-61.9324, 129.944, -41.4212, 0.29", "-62.1105, 130.442, -41.816, 0.29", "-62.3657, 131.454, -42.6432, 0.29", "-62.4556, 132.133, -43.2279, 0.29", "-62.5008, 132.878, -43.8885, 0.52", "-62.5202, 133.579, -44.5076, 0.66", "-62.5311, 134.684, -45.4312, 0.44", "-62.478, 135.616, -46.2136, 0.59", "-62.2885, 136.793, -47.2789, 0.96", "-62.2096, 137.183, -47.7036, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-57.2641, 123.277, -33.3313, 0.66", "-55.7304, 123.665, -32.503, 0.66", "-54.5051, 123.976, -31.8412, 0.29", "-53.6156, 124.201, -31.3608, 0.44", "-52.5192, 124.479, -30.7686, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-69.9217, 118.255, -31.0421, 0.29", "-70.2305, 118.729, -31.5064, 0.29", "-70.6179, 119.281, -32.1075, 0.59", "-70.8698, 119.648, -32.5086, 0.44", "-71.2351, 120.213, -33.0901, 0.88", "-71.3961, 120.5, -33.3617, 1.03", "-71.7551, 121.231, -33.9927, 0.52", "-71.8682, 121.5, -34.2135, 0.44", "-72.0976, 122.074, -34.6296, 0.66", "-72.2744, 122.54, -34.9383, 0.88", "-72.6273, 123.441, -35.4754, 0.59", "-72.8711, 124.031, -35.8046, 0.74", "-73.1292, 124.624, -36.1128, 0.74", "-73.4972, 125.403, -36.5244, 0.37", "-73.6713, 125.728, -36.7043, 0.37", "-74.0939, 126.405, -37.0946, 0.66", "-74.3989, 126.801, -37.3358, 0.66", "-74.7268, 127.145, -37.566, 0.52", "-75.2126, 127.555, -37.8663, 0.88", "-75.5518, 127.786, -38.0503, 0.88", "-76.0632, 128.06, -38.2849, 0.52", "-76.6914, 128.336, -38.5306, 0.52", "-77.4826, 128.658, -38.8026, 0.88", "-78.0004, 128.873, -38.9623, 0.88", "-78.6515, 129.147, -39.1418, 0.52", "-79.2114, 129.39, -39.2881, 0.44", "-79.8486, 129.674, -39.4549, 0.37", "-80.4771, 129.981, -39.6116, 0.37", "-81.1059, 130.327, -39.7676, 0.29", "-82.1303, 130.946, -40.0296, 0.29", "-82.608, 131.247, -40.1556, 0.29", "-83.1567, 131.584, -40.3033, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-69.9217, 118.255, -31.0421, 0.29", "-71.9768, 116.614, -30.5272, 0.29", "-73.0952, 115.721, -30.2469, 0.29", "-73.8876, 115.088, -30.0484, 0.22", "-74.8986, 114.281, -29.7951, 0.22", "-76.0235, 113.383, -29.5132, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "114.012, 49.427, 63.3962, 0.29", "117.139, 59.4172, 66.2631, 0.29", "120.444, 68.9536, 70.4251, 0.29", "124.698, 77.8714, 75.1234, 0.29", "127.342, 86.6523, 81.211, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "114.012, 49.427, 63.3962, 0.29", "122.372, 48.5822, 70.9202, 0.29", "131.196, 49.685, 77.8894, 0.29", "139.705, 52.9543, 84.5488, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "98.7708, 39.3813, -7.85445, 0.37", "99.1156, 39.9622, -7.4166, 0.37", "99.5993, 40.8047, -6.7114, 0.37", "99.9498, 41.415, -6.20053, 0.22", "100.687, 42.6982, -5.12647, 0.22", "101.248, 43.6762, -4.30784, 0.66", "101.925, 44.8539, -3.32197, 1.11", "102.085, 45.1368, -3.05043, 1.11", "106.32, 53.027, 1.81919, 1.11", "111.042, 60.8785, 6.30701, 1.11", "116.539, 68.0199, 11.198, 1.11", "122.283, 74.3729, 16.9259, 1.11", "128.626, 81.5009, 20.7259, 1.11", "135.227, 88.3483, 24.6546, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "98.7708, 39.3813, -7.85445, 0.44", "99.6458, 39.5457, -7.96237, 0.44", "100.581, 39.6785, -8.08681, 0.44", "101.601, 39.7733, -8.16737, 0.74", "102.226, 39.8139, -8.1985, 1.03", "102.816, 39.8408, -8.21345, 1.03", "103.279, 39.8639, -8.23987, 1.03", "104.041, 39.9251, -8.35109, 0.66", "105.066, 40.0792, -8.59208, 0.66", "105.415, 40.182, -8.71698, 0.81", "105.934, 40.4189, -8.94527, 0.44", "106.972, 41.0497, -9.45818, 0.44", "108.196, 41.9402, -10.0882, 0.37", "108.62, 42.2916, -10.3259, 0.37", "109.27, 42.8618, -10.7096, 0.37", "110.058, 43.5585, -11.1403, 0.66", "110.528, 43.9681, -11.36, 0.66", "111.214, 44.5114, -11.5779, 0.37", "111.638, 44.8007, -11.6656, 0.37", "112.179, 45.154, -11.7692, 0.59", "112.657, 45.4776, -11.8732, 0.59", "113.097, 45.8206, -12.0506, 0.44", "113.823, 46.3653, -12.424, 0.66", "113.954, 46.4549, -12.499, 0.96", "114.454, 46.7363, -12.7878, 0.96", "115.182, 47.0587, -13.2237, 1.11", "116.872, 47.6446, -14.1927, 0.44", "117.83, 47.9141, -14.7031, 0.44", "118.586, 48.096, -15.0678, 0.37", "119.519, 48.3268, -15.5064, 0.37", "120.092, 48.4752, -15.7532, 0.29", "120.896, 48.7318, -16.0554, 0.22", "121.444, 49.0256, -16.2453, 0.59", "121.724, 49.301, -16.3639, 0.59", "122.493, 50.2723, -16.8331, 0.29", "122.811, 50.6984, -17.0549, 0.37", "123.187, 51.176, -17.3287, 0.52", "123.594, 51.6074, -17.6489, 0.74", "124.138, 52.1384, -18.2122, 0.96", "125.05, 53.0515, -19.4143, 0.29", "125.379, 53.4286, -19.9525, 0.52", "125.513, 53.6215, -20.2303, 0.81", "125.915, 54.3703, -21.2506, 1.11", "126.576, 55.9461, -23.2932, 0.81", "126.836, 56.75, -24.2507, 0.96", "127.09, 57.7368, -25.3046, 0.66", "127.284, 58.5178, -26.0769, 0.52", "127.511, 59.2848, -26.7526, 0.52", "127.639, 59.584, -26.9593, 0.74", "128.069, 60.0962, -27.2238, 0.74", "128.375, 60.334, -27.3477, 0.96", "128.859, 60.6041, -27.5315, 0.96", "129.63, 61.0178, -27.9098, 0.74", "130.37, 61.4643, -28.3492, 0.44", "131.142, 62.0898, -28.9558, 0.44", "131.419, 62.3899, -29.2288, 0.96", "131.876, 63.0929, -29.8431, 1.18", "132.446, 64.3148, -30.8708, 0.66", "132.624, 64.8504, -31.316, 0.66", "132.895, 65.9598, -32.25, 0.59", "132.994, 66.3954, -32.5927, 0.52", "133.306, 67.5727, -33.4618, 0.52", "133.403, 67.9104, -33.6749, 0.96", "133.635, 68.5962, -34.0496, 0.96", "134.109, 69.8688, -34.6457, 0.59", "134.551, 70.9744, -35.045, 0.59", "134.841, 71.6871, -35.26, 0.88", "135.288, 72.7098, -35.4834, 0.74", "135.7, 73.5226, -35.6474, 0.74", "136.212, 74.3262, -35.7849, 0.88", "136.544, 74.7138, -35.8707, 0.88", "137.16, 75.2734, -36.108, 0.37", "137.802, 75.7674, -36.4083, 0.37", "138.804, 76.4248, -36.9357, 0.37", "139.496, 76.8627, -37.3521, 0.37", "140.289, 77.3667, -37.8871, 0.37", "140.767, 77.6876, -38.2117, 0.59", "141.364, 78.1082, -38.601, 0.74", "141.764, 78.4192, -38.8613, 0.74", "142.516, 79.0897, -39.3629, 0.44", "142.919, 79.4476, -39.62, 0.37", "144.136, 80.3509, -40.2645, 0.37", "144.725, 80.6996, -40.5413, 0.74", "145.042, 80.8456, -40.6785, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "123.382, 72.8735, 10.333, 0.29", "131.123, 79.3615, 14.3673, 0.29", "138.633, 86.9438, 16.343, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "123.382, 72.8735, 10.333, 0.29", "129.383, 80.5758, 12.4681, 0.29", "135.429, 87.8874, 15.7504, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-18.2804, -142.901, 15.1493, 0.29", "-14.8894, -152.388, 13.4974, 0.29", "-12.9362, -162.354, 13.2005, 0.29", "-11.3473, -172.228, 11.3239, 0.29", "-11.1513, -182.355, 10.6742, 0.29", "-11.8853, -192.457, 9.941, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-18.2804, -142.901, 15.1493, 0.29", "-17.6052, -154.29, 9.41193, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.85321, -98.957, 10.5369, 0.37", "-2.45638, -100.005, 9.43126, 0.37", "-2.85321, -100.558, 8.85443, 0.37", "-3.26122, -101.037, 8.33272, 0.44", "-3.76939, -101.557, 7.75395, 0.74", "-4.29196, -102.034, 7.21887, 0.59", "-4.85355, -102.478, 6.70721, 0.59", "-5.21667, -102.659, 6.46881, 0.74", "-5.84271, -102.855, 6.13187, 0.88", "-6.25019, -102.932, 5.95621, 1.18", "-6.67131, -102.972, 5.80522, 0.59", "-7.31851, -102.997, 5.59228, 0.44", "-7.95959, -103.011, 5.37786, 0.52", "-8.25361, -103.028, 5.27048, 0.74", "-8.75328, -103.123, 5.0886, 0.74", "-9.10507, -103.259, 4.94044, 0.59", "-9.45587, -103.481, 4.77673, 0.59", "-9.90391, -103.893, 4.55412, 0.59", "-10.3703, -104.46, 4.32559, 0.44", "-10.895, -105.212, 4.0855, 0.37", "-11.194, -105.717, 3.96087, 1.03", "-11.3895, -106.1, 3.88052, 1.03", "-11.5424, -106.451, 3.81904, 0.96", "-11.7945, -107.179, 3.72675, 0.66", "-11.979, -107.834, 3.66114, 0.66", "-12.1476, -108.583, 3.5845, 0.88", "-12.2305, -109.043, 3.54007, 1.03", "-12.3157, -109.696, 3.47248, 0.88", "-12.3896, -110.537, 3.37481, 0.52", "-12.4234, -111.194, 3.28784, 0.52", "-12.4381, -111.694, 3.20992, 0.96", "-12.4488, -112.019, 3.15152, 0.96", "-12.5046, -112.82, 2.97983, 0.59", "-12.5864, -113.458, 2.81983, 0.66", "-12.6887, -113.934, 2.67805, 0.81", "-12.8505, -114.513, 2.47834, 0.81", "-12.9634, -114.836, 2.35048, 0.81", "-13.1753, -115.425, 2.06419, 0.44", "-13.281, -115.734, 1.89183, 0.81", "-13.4022, -116.179, 1.62012, 0.81", "-13.5139, -116.816, 1.22607, 0.52", "-13.5387, -117.333, 0.913956, 0.52", "-13.4759, -118.278, 0.368158, 0.74", "-13.4094, -118.74, 0.117354, 1.11", "-13.3467, -119.166, -0.0949199, 1.11", "-13.2836, -119.708, -0.334023, 0.96", "-13.2557, -120.315, -0.573382, 0.59", "-13.2949, -121.063, -0.841891, 0.44", "-13.4674, -121.891, -1.11655, 0.44", "-13.6731, -122.511, -1.32585, 0.44", "-13.9141, -123.09, -1.51261, 0.74", "-14.0995, -123.516, -1.64195, 0.74", "-14.2822, -123.928, -1.75335, 0.74", "-14.6059, -124.663, -1.92601, 0.66", "-14.8401, -125.211, -2.03684, 0.44", "-15.1369, -125.919, -2.17138, 0.44", "-15.6084, -126.906, -2.34255, 0.44", "-15.8814, -127.363, -2.41274, 0.88", "-16.2061, -127.788, -2.46785, 1.18", "-16.4637, -128.061, -2.49096, 1.18", "-16.7907, -128.357, -2.50798, 1.03", "-17.7267, -129.079, -2.5483, 0.66", "-18.5929, -129.654, -2.57403, 0.66", "-19.3294, -130.125, -2.59338, 1.25", "-19.7208, -130.378, -2.60196, 1.55", "-20.1935, -130.691, -2.61231, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.85321, -98.957, 10.5369, 0.74", "-2.30035, -100.02, 9.70292, 0.74", "-2.82658, -101.24, 8.72621, 0.74", "-3.1049, -101.968, 8.2358, 0.74", "-3.36989, -102.782, 7.76414, 0.81", "-3.85513, -104.648, 6.88151, 0.52", "-4.14037, -106.131, 6.31241, 0.74", "-4.23015, -106.92, 6.09193, 0.74", "-4.05811, -108.662, 6.00909, 0.74", "-3.74246, -109.523, 6.14873, 0.81", "-3.1155, -110.561, 6.5123, 0.66", "-2.72537, -111.072, 6.75966, 1.11", "-2.31316, -111.57, 6.99267, 1.11", "-1.77873, -112.205, 7.21487, 0.81", "-1.09007, -113.07, 7.35462, 0.81", "-0.467067, -113.913, 7.42275, 0.96", "0.0844249, -114.701, 7.45647, 0.88", "0.738606, -115.668, 7.50333, 0.96", "1.19174, -116.39, 7.51941, 1.11", "1.6928, -117.291, 7.48798, 1.11", "2.09884, -118.136, 7.41091, 0.74", "2.61481, -119.457, 7.23818, 0.66", "2.83722, -120.148, 7.13296, 0.66", "3.22521, -121.749, 6.88923, 0.66", "3.47214, -123.43, 6.63048, 0.59", "3.52343, -124.405, 6.46587, 0.96", "3.48616, -125.619, 6.24209, 1.18", "3.38608, -126.524, 6.07796, 1.03", "3.22347, -127.588, 5.90017, 0.88", "3.00826, -128.967, 5.72383, 0.74", "2.86064, -130.164, 5.68984, 0.59", "2.75613, -131.175, 5.73855, 0.59", "2.66088, -132.013, 5.85208, 1.4", "2.56168, -132.631, 5.98674, 1.4", "2.28127, -134.205, 6.47661, 0.88", "1.9568, -136.049, 7.2922, 0.66", "1.81091, -136.821, 7.69705, 0.88", "1.61209, -137.801, 8.24556, 0.88", "1.27238, -139.327, 9.10451, 0.59", "1.01579, -140.301, 9.63162, 0.81", "0.521135, -141.915, 10.433, 0.81", "0.259167, -142.749, 10.7555, 1.11", "0.0590641, -143.435, 10.9754, 1.11", "-0.185163, -144.423, 11.1956, 0.52", "-0.364734, -145.359, 11.3401, 0.74", "-0.50377, -146.195, 11.4206, 1.03", "-0.568955, -146.895, 11.4449, 1.25", "-0.570157, -147.582, 11.5204, 1.33", "-0.48124, -148.707, 11.814, 1.03", "-0.271336, -149.754, 12.2339, 0.74", "0.00754357, -150.599, 12.6674, 0.44", "0.360124, -151.364, 13.1337, 0.29", "1.01378, -152.409, 13.8914, 0.29", "1.9468, -153.55, 14.8753, 0.29", "2.51078, -154.057, 15.4062, 0.29", "3.06239, -154.409, 15.8364, 0.88", "3.53055, -154.657, 16.167, 0.88", "4.31558, -155.037, 16.6775, 0.52", "4.68535, -155.209, 16.8638, 0.52", "5.35848, -155.553, 17.185, 0.52", "5.86473, -155.935, 17.4928, 0.52", "6.5254, -156.655, 17.8921, 0.52", "6.84107, -157.118, 18.062, 0.88", "7.18485, -157.694, 18.198, 0.88", "7.62232, -158.402, 18.2829, 1.11", "8.08858, -159.06, 18.3384, 0.66", "9.01375, -160.108, 18.3846, 0.66", "9.46624, -160.48, 18.4075, 0.66", "10.2648, -161.008, 18.4835, 0.66", "10.9101, -161.381, 18.5723, 0.52", "12.0111, -162.013, 18.7085, 0.66", "12.3592, -162.22, 18.7874, 0.66", "13.0983, -162.682, 19.097, 0.44", "13.6933, -163.084, 19.4586, 0.44", "14.495, -163.692, 20.1026, 0.52", "15.4187, -164.474, 21.0427, 0.66", "16.1943, -165.189, 21.9326, 0.44", "17.0143, -165.969, 22.9506, 0.81", "17.7837, -166.694, 23.8744, 0.52", "18.2989, -167.171, 24.442, 0.74", "18.9406, -167.754, 25.0583, 0.29", "19.2968, -168.075, 25.3111, 0.52", "19.864, -168.583, 25.5039, 0.59", "20.9695, -169.602, 25.7528, 0.37", "21.7837, -170.35, 25.8486, 0.66", "22.2518, -170.773, 25.8776, 1.03", "23.0072, -171.447, 25.8943, 1.03", "23.8344, -172.192, 25.9533, 0.74", "25.1471, -173.382, 26.1819, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.3457, -165.702, -28.8661, 0.44", "19.1317, -167.253, -28.9091, 0.44", "18.9718, -168.336, -28.9425, 0.81", "18.8365, -169.167, -28.9746, 1.18", "18.647, -170.276, -29.0267, 0.74", "18.4494, -171.429, -29.0883, 0.44", "18.2748, -172.443, -29.1477, 0.96", "18.0922, -173.492, -29.2174, 0.96", "17.9151, -174.488, -29.2932, 1.18", "17.5972, -175.969, -29.4335, 0.74", "17.2376, -177.298, -29.6353, 0.66", "16.8803, -178.371, -29.8677, 0.66", "16.3855, -179.701, -30.2573, 0.66", "16.1268, -180.353, -30.494, 1.03", "15.754, -181.25, -30.877, 0.81", "15.2254, -182.67, -31.6018, 0.52", "14.9867, -183.53, -32.0226, 0.44", "14.81, -184.628, -32.4623, 0.37", "14.7707, -185.266, -32.6441, 0.66", "14.7453, -185.977, -32.7697, 0.66", "14.7351, -187.849, -32.9992, 0.44", "14.6936, -189.737, -33.1421, 0.44", "14.5831, -191.243, -33.2371, 0.66", "14.3876, -192.563, -33.3244, 0.81", "14.0561, -193.987, -33.4822, 0.96", "13.516, -195.468, -33.7332, 1.11", "12.9517, -196.603, -33.9944, 0.81", "12.4089, -197.591, -34.3153, 0.88", "11.9988, -198.357, -34.6074, 0.66", "11.4369, -199.434, -35.0568, 0.29", "10.7423, -200.812, -35.6446, 0.29", "10.3325, -201.612, -35.9702, 0.52", "9.6967, -202.852, -36.4902, 0.52", "9.1644, -203.87, -36.9168, 0.37", "8.65412, -204.784, -37.3027, 0.29", "8.14039, -205.579, -37.6363, 0.29", "7.91401, -205.862, -37.7779, 0.88", "7.38065, -206.326, -38.0945, 1.11", "6.71004, -206.713, -38.4611, 0.44", "5.85224, -207.073, -38.9063, 0.37", "5.02461, -207.348, -39.342, 0.59", "4.28616, -207.548, -39.7431, 0.74", "3.31667, -207.785, -40.2823, 0.44", "2.47312, -207.994, -40.7465, 0.37", "1.9113, -208.155, -41.0484, 0.88", "1.2604, -208.393, -41.38, 1.11", "0.787037, -208.608, -41.5987, 1.11", "0.293922, -208.842, -41.7964, 1.11", "-0.937, -209.455, -42.2476, 0.29", "-1.74933, -209.878, -42.5426, 0.59", "-2.28923, -210.168, -42.7345, 0.59", "-3.61879, -210.946, -43.1891, 0.29", "-4.43305, -211.481, -43.4516, 0.29", "-5.07178, -211.957, -43.6512, 0.52", "-5.81777, -212.576, -43.8839, 0.52", "-6.21222, -212.921, -44.0061, 0.81", "-6.87933, -213.608, -44.2186, 0.81", "-7.53921, -214.492, -44.4398, 0.29", "-8.30006, -215.692, -44.6945, 0.29", "-8.72038, -216.396, -44.8249, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "19.3457, -165.702, -28.8661, 0.22", "20.2989, -166.275, -28.5725, 0.22", "21.3041, -166.88, -28.2628, 0.22", "22.5176, -167.61, -27.8889, 0.22", "23.3529, -168.113, -27.6316, 0.22", "24.2393, -168.646, -27.3585, 0.22", "25.1511, -169.195, -27.0776, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "231.079, -7.67273, -129.06, 0.74", "233.424, -9.018, -129.907, 0.74", "234.057, -9.45231, -130.035, 0.44", "234.52, -9.7626, -130.084, 0.74", "235.248, -10.2033, -130.113, 0.52", "236.229, -10.7189, -130.095, 0.52", "237.287, -11.195, -130.074, 0.52", "238.071, -11.4995, -129.943, 0.52", "238.886, -11.75, -129.821, 0.52", "239.922, -11.9462, -129.742, 0.52", "240.788, -11.9922, -129.735, 0.74", "241.691, -11.9318, -129.786, 1.03", "242.025, -11.885, -129.824, 1.4", "242.357, -11.8297, -129.874, 1.4", "243.692, -11.621, -130.128, 0.44", "244.2, -11.553, -130.179, 0.74", "244.951, -11.4769, -130.151, 0.74", "245.463, -11.435, -130.046, 0.96", "245.941, -11.4092, -129.863, 0.96", "246.564, -11.4127, -129.531, 0.96", "248.025, -11.5547, -128.504, 0.66", "248.623, -11.6741, -128.012, 0.81", "248.972, -11.7823, -127.676, 0.81", "249.813, -12.1017, -126.806, 0.52", "250.441, -12.3658, -126.153, 0.52", "251.136, -12.6756, -125.477, 0.52", "251.829, -12.977, -124.926, 0.52", "252.728, -13.3416, -124.298, 0.44", "253.23, -13.5154, -124.031, 0.96", "253.788, -13.6685, -123.894, 1.11", "254.602, -13.8516, -123.892, 0.44", "255.34, -14.0335, -124.071, 0.37", "255.876, -14.2067, -124.318, 0.37", "256.746, -14.5475, -124.885, 0.66", "257.716, -14.9738, -125.651, 0.74", "258.129, -15.1606, -126.019, 0.81", "258.729, -15.4248, -126.612, 0.81", "259.505, -15.7387, -127.418, 0.66", "260.217, -15.9834, -128.126, 0.66", "260.893, -16.1858, -128.74, 0.29", "261.363, -16.3168, -129.129, 0.59", "261.867, -16.4427, -129.514, 0.74", "262.345, -16.5497, -129.874, 0.44", "262.973, -16.6758, -130.322, 0.37", "263.619, -16.8181, -130.767, 0.37", "264.251, -16.9776, -131.177, 0.59", "264.75, -17.1256, -131.489, 0.59", "266.035, -17.599, -132.425, 0.29", "266.859, -17.9806, -133.11, 0.29", "267.281, -18.2158, -133.507, 0.29", "267.645, -18.4402, -133.858, 0.74", "268.006, -18.6821, -134.218, 0.74", "269.433, -19.8308, -135.705, 0.37", "269.853, -20.2585, -136.168, 0.52", "270.17, -20.651, -136.579, 0.81", "270.505, -21.0923, -137.072, 0.37", "270.805, -21.4794, -137.558, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "231.079, -7.67273, -129.06, 0.88", "232.04, -7.24672, -130.4, 0.88", "232.442, -7.17885, -131.011, 1.25", "232.814, -7.17985, -131.648, 1.25", "233.301, -7.1926, -132.563, 0.59", "234.604, -7.22668, -135.012, 0.59", "235.912, -7.26092, -137.472, 0.96", "236.597, -7.36445, -138.809, 1.11", "237.782, -7.6601, -141.286, 1.25", "238.487, -7.91573, -142.881, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-83.1567, 131.584, -40.3033, 0.22", "-83.0924, 129.963, -39.5083, 0.22", "-83.0523, 128.953, -39.013, 0.22", "-82.9626, 126.691, -37.904, 0.22", "-82.9078, 125.311, -37.2274, 0.22", "-82.8608, 124.125, -36.6459, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-83.1567, 131.584, -40.3033, 0.22", "-84.0417, 131.949, -40.2521, 0.22", "-84.8214, 132.293, -40.2068, 0.22", "-85.563, 132.621, -40.1637, 0.22", "-86.2724, 132.934, -40.1225, 0.22", "-87.3404, 133.405, -40.0604, 0.22", "-87.8853, 133.646, -40.0287, 0.37", "-88.4375, 133.922, -39.9677, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "127.342, 86.6523, 81.211, 0.29", "129.046, 91.1636, 84.7858, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "127.342, 86.6523, 81.211, 0.29", "130.315, 95.4216, 84.938, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "139.705, 52.9543, 84.5488, 0.29", "143.996, 48.4715, 77.6233, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "139.705, 52.9543, 84.5488, 0.29", "130.618, 55.6429, 83.4622, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "145.042, 80.8456, -40.6785, 0.37", "144.228, 81.3013, -40.968, 0.37", "143.117, 81.952, -41.686, 0.66", "142.426, 82.3875, -42.4315, 0.29", "141.849, 82.7706, -43.1578, 0.29", "141.145, 83.2636, -44.0771, 0.29", "139.635, 84.3817, -46.0542, 0.29", "138.943, 84.8686, -47.002, 0.81", "136.918, 86.2601, -49.9465, 0.44", "136.242, 86.7339, -51.0123, 0.96", "135.704, 87.1601, -51.9421, 1.18", "135.058, 87.7492, -53.173, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "145.042, 80.8456, -40.6785, 0.37", "146.049, 81.1816, -40.6242, 0.37", "147.194, 81.7392, -40.6078, 0.29", "147.61, 81.9806, -40.6094, 0.66", "148.011, 82.2464, -40.6083, 0.66", "148.502, 82.6291, -40.6283, 0.37", "149.181, 83.1871, -40.6759, 0.37", "149.902, 83.8664, -40.7584, 0.81", "150.191, 84.1766, -40.7766, 1.11", "150.586, 84.6319, -40.7801, 1.33", "151.359, 85.6277, -40.745, 0.44", "151.79, 86.2709, -40.6772, 0.52", "152.318, 87.1971, -40.5306, 1.03", "152.844, 88.2957, -40.3239, 0.52", "153.074, 88.8538, -40.1955, 0.66", "153.284, 89.4764, -40.0288, 0.66", "153.532, 90.4927, -39.7197, 0.44", "153.609, 91.0501, -39.5857, 0.29", "153.68, 91.7371, -39.4749, 0.44", "153.806, 92.5207, -39.4254, 0.66", "153.964, 93.1746, -39.4165, 0.37", "154.183, 93.9262, -39.4486, 0.37", "154.544, 95.1411, -39.5652, 0.29", "154.763, 95.9231, -39.6453, 0.29", "155.048, 97.232, -39.7966, 0.29", "155.171, 98.1282, -39.8757, 0.29", "155.197, 98.8257, -39.9062, 1.55", "155.151, 99.4021, -39.9015, 1.18", "154.988, 100.017, -39.8235, 0.96", "154.506, 101.001, -39.6172, 0.52", "153.695, 102.117, -39.2991, 0.29", "153.065, 102.789, -39.0796, 0.29", "152.735, 103.099, -38.9752, 0.29", "151.822, 103.935, -38.723, 0.22", "151.545, 104.191, -38.6645, 0.66", "151.212, 104.514, -38.6141, 0.66", "150.659, 105.122, -38.5979, 0.37", "150.247, 105.749, -38.6193, 0.29", "149.957, 106.386, -38.6975, 0.22", "149.77, 106.974, -38.7604, 0.22", "149.555, 107.904, -38.7929, 0.22", "149.498, 108.335, -38.7846, 0.29", "149.463, 108.994, -38.7346, 0.29", "149.459, 109.994, -38.6213, 0.29", "149.53, 111.301, -38.4642, 0.29", "149.596, 112.119, -38.3515, 0.29", "149.684, 112.784, -38.2503, 0.29", "149.815, 113.658, -38.0997, 0.29", "150.062, 114.99, -37.8435, 0.29", "150.309, 116.022, -37.6439, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-11.8853, -192.457, 9.941, 0.29", "-11.8642, -200.588, 8.41653, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-11.8853, -192.457, 9.941, 0.29", "-5.22666, -188.263, 19.8313, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-20.1935, -130.691, -2.61231, 0.37", "-20.6456, -131.848, -2.97875, 0.37", "-20.8616, -132.401, -3.15382, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-20.1935, -130.691, -2.61231, 0.29", "-23.2911, -130.408, -4.97595, 0.29", "-24.2069, -130.326, -5.63993, 0.22", "-25.4406, -130.304, -6.46551, 0.22", "-26.1827, -130.35, -6.91543, 1.47", "-26.7329, -130.385, -7.24903, 1.69", "-27.2586, -130.418, -7.56777, 1.69", "-28.7871, -130.483, -8.11069, 0.96", "-29.8662, -130.633, -8.58332, 0.29", "-30.772, -130.904, -9.0573, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "25.1471, -173.382, 26.1819, 0.29", "25.6032, -174.216, 24.8717, 0.29", "26.001, -174.943, 23.7291, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "25.1471, -173.382, 26.1819, 0.29", "25.5297, -171.493, 25.0897, 0.29", "25.9422, -170.346, 23.8373, 0.29", "26.274, -169.872, 22.7433, 0.29", "26.5958, -169.412, 21.6819, 0.52", "27.5062, -168.11, 18.6796, 0.44", "27.8117, -167.673, 17.6722, 0.29", "28.2814, -167.905, 15.9877, 0.29", "28.4447, -168.112, 15.3817, 0.29", "30.2793, -163.447, 6.21187, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.72038, -216.396, -44.8249, 0.22", "-8.79765, -217.146, -44.7747, 0.22", "-8.87687, -218.01, -44.6653, 0.22", "-8.95036, -219.134, -44.5129, 0.22", "-8.9983, -220.057, -44.3859, 0.22", "-9.03638, -221.246, -44.2283, 0.22", "-9.06659, -222.19, -44.1032, 0.22", "-9.09535, -223.29, -43.9688, 0.22", "-9.08705, -223.988, -43.884, 0.37", "-9.07083, -224.229, -43.8483, 0.37", "-9.00414, -224.904, -43.7278, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-8.72038, -216.396, -44.8249, 1.55", "-9.42136, -216.735, -45.0799, 1.55", "-9.83021, -216.985, -45.2462, 1.55", "-10.6409, -217.502, -45.576, 0.29", "-11.8323, -218.26, -46.0284, 0.44", "-12.129, -218.426, -46.1634, 0.44", "-13.3592, -218.989, -46.7888, 0.29", "-14.125, -219.284, -47.2077, 0.29", "-14.8865, -219.529, -47.6171, 0.29", "-15.7351, -219.739, -48.0442, 0.29", "-17.4355, -219.999, -48.7812, 0.29", "-18.9474, -220.077, -49.3662, 0.29", "-19.906, -220.017, -49.6941, 0.22", "-20.8729, -219.893, -49.9867, 0.22", "-21.6315, -219.774, -50.1903, 0.22", "-22.4689, -219.626, -50.3733, 0.22", "-23.5318, -219.455, -50.4841, 0.22", "-24.3307, -219.287, -50.5339, 0.22", "-24.8819, -219.123, -50.5821, 0.52", "-25.3655, -218.935, -50.6405, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "238.487, -7.91573, -142.881, 0.81", "241.43, -7.9381, -144.102, 0.81", "243.648, -8.07539, -144.979, 0.88", "245.396, -8.25672, -145.725, 0.37", "245.902, -8.3096, -145.936, 0.37", "247.007, -8.42515, -146.398, 0.66", "247.726, -8.50037, -146.698, 0.74", "247.976, -8.51773, -146.838, 0.74", "249.328, -8.79573, -147.376, 0.37", "249.991, -8.98549, -147.659, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "238.487, -7.91573, -142.881, 0.44", "239.6, -7.21359, -143.768, 0.44", "240.385, -6.71773, -144.395, 0.44", "240.819, -6.44373, -144.741, 0.44", "241.672, -5.90538, -145.422, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "135.058, 87.7492, -53.173, 0.96", "133.368, 89.7114, -54.907, 0.96", "131.485, 91.6348, -56.5847, 0.59", "131.03, 92.0986, -56.9796, 0.59", "130.614, 92.5506, -57.3552, 0.37", "129.707, 93.6389, -58.2199, 0.29", "129.141, 94.3605, -58.7688, 0.29", "128.783, 94.8723, -59.078, 0.66", "128.217, 95.9447, -59.5784, 0.22", "127.917, 96.5979, -59.9077, 0.22", "127.536, 97.4211, -60.3474, 0.88", "127.294, 97.9211, -60.6095, 0.88", "126.553, 99.2655, -61.3, 0.37", "126.151, 99.8513, -61.6414, 0.96", "125.71, 100.392, -62.0083, 1.11", "124.857, 101.379, -62.7567, 0.44", "124.355, 101.977, -63.2349, 0.37", "123.981, 102.455, -63.6216, 0.52", "122.446, 104.529, -65.2739, 0.37", "121.802, 105.545, -66.0711, 0.96", "121.352, 106.37, -66.6766, 0.96", "120.923, 107.223, -67.2902, 0.52", "120.606, 107.844, -67.7724, 1.33", "120.212, 108.573, -68.3742, 1.33", "118.484, 111.532, -70.821, 0.52", "118.282, 111.862, -71.096, 0.52", "117.83, 112.557, -71.6882, 0.52", "115.827, 115.427, -74.2165, 0.44", "114.866, 116.723, -75.3446, 0.59", "114.275, 117.509, -75.981, 0.59", "113.677, 118.284, -76.5152, 0.88", "113.468, 118.564, -76.674, 1.25", "113.086, 119.098, -76.8631, 1.47", "112.251, 120.311, -76.936, 0.29", "111.51, 121.437, -76.8952, 0.29", "111.212, 121.891, -76.86, 0.29", "110.705, 122.669, -76.76, 0.29", "110.391, 123.183, -76.6879, 0.29", "109.66, 124.446, -76.4865, 0.29", "109.369, 124.939, -76.4104, 0.29", "108.949, 125.537, -76.3298, 0.96", "108.669, 125.957, -76.2941, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "135.058, 87.7492, -53.173, 0.15", "135.889, 89.1048, -52.6441, 0.15", "136.344, 89.8474, -52.3543, 0.15", "136.709, 90.4443, -52.1215, 0.81", "137.027, 90.9624, -51.9193, 1.03", "137.445, 91.6452, -51.6529, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-20.8616, -132.401, -3.15382, 0.52", "-21.0045, -132.693, -3.32893, 0.52", "-21.1978, -133.167, -3.56308, 0.52", "-21.4336, -133.776, -3.78684, 0.37", "-21.5418, -134.056, -3.88391, 0.52", "-21.6877, -134.434, -4.00778, 0.44", "-21.8568, -134.853, -4.14547, 0.37", "-22.0313, -135.28, -4.26381, 0.29", "-22.2134, -135.732, -4.35656, 0.29", "-22.4328, -136.322, -4.46233, 1.03", "-22.4966, -136.487, -4.49271, 1.18", "-22.6981, -136.958, -4.58571, 0.88", "-22.8448, -137.295, -4.66021, 0.44", "-23.0142, -137.732, -4.77473, 0.37", "-23.0836, -137.986, -4.8582, 0.59", "-23.1174, -138.224, -4.94477, 0.44", "-23.1246, -138.705, -5.1458, 0.44", "-23.0923, -139.044, -5.30066, 0.44", "-23.0164, -139.563, -5.54327, 0.52", "-22.9477, -140.046, -5.76227, 0.66", "-22.9047, -140.449, -5.90522, 0.88", "-22.8919, -140.733, -5.96457, 0.88", "-22.9146, -141.173, -5.96937, 0.52", "-23.0032, -141.56, -5.88971, 0.29", "-23.184, -142.028, -5.70912, 0.29", "-23.4541, -142.562, -5.48284, 0.29", "-23.6659, -142.914, -5.34736, 0.96", "-23.8119, -143.147, -5.28953, 1.18", "-23.9619, -143.404, -5.25236, 1.18", "-24.1962, -143.881, -5.25517, 0.59", "-24.3691, -144.381, -5.30264, 0.52", "-24.4902, -144.866, -5.36567, 0.52", "-24.6217, -145.491, -5.47014, 0.66", "-24.6935, -145.905, -5.54101, 0.66", "-24.7488, -146.35, -5.61518, 0.81", "-24.7717, -146.996, -5.69432, 0.81", "-24.7344, -147.465, -5.68413, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-20.8616, -132.401, -3.15382, 0.37", "-21.2357, -132.334, -2.70209, 0.37", "-21.7526, -132.278, -2.13418, 0.37", "-22.0084, -132.253, -1.8766, 0.37", "-22.5942, -132.188, -1.33372, 0.29", "-22.9514, -132.138, -1.02419, 0.29", "-23.3749, -132.078, -0.657224, 0.29", "-23.7818, -132.033, -0.300083, 0.37", "-23.9978, -132.023, -0.14509, 0.37", "-24.2235, -132.021, -0.0143377, 0.29", "-24.4908, -132.007, 0.0880501, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "26.001, -174.943, 23.7291, 0.22", "25.2717, -176.127, 23.1265, 0.22", "24.221, -177.832, 22.2582, 0.22", "23.6237, -178.801, 21.7646, 0.29", "23.2982, -179.329, 21.4956, 0.29", "22.4546, -180.698, 20.7985, 0.22", "21.9034, -181.593, 20.3431, 0.22", "18.0882, -192.894, 15.6894, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "26.001, -174.943, 23.7291, 0.37", "25.7245, -175.911, 24.0047, 0.37", "25.473, -176.783, 24.0916, 0.96", "25.1645, -177.866, 24.0277, 0.59", "24.9587, -178.687, 23.8754, 0.59", "24.7406, -179.558, 23.7139, 0.22", "24.5327, -180.387, 23.56, 0.22", "24.2884, -181.272, 23.2674, 0.22", "24.1069, -182.016, 22.8882, 0.22", "23.9239, -182.775, 22.3476, 0.22", "22.4947, -190.501, 22.3803, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "241.672, -5.90538, -145.422, 0.37", "244.289, -3.75177, -150.154, 0.37", "244.734, -3.36119, -150.945, 0.66", "245.074, -3.01982, -151.546, 0.66", "245.237, -2.84378, -151.827, 0.96", "245.665, -2.35165, -152.511, 1.11", "246.191, -1.73743, -153.266, 1.11", "246.986, -0.804689, -153.954, 0.81", "247.619, -0.0635386, -154.371, 1.4", "247.831, 0.180784, -154.47, 1.4", "248.646, 1.07844, -154.67, 0.37", "249.217, 1.66151, -154.664, 0.37", "249.902, 2.28346, -154.498, 0.37", "250.441, 2.73484, -154.267, 0.66", "250.863, 3.09309, -154.037, 0.66", "251.396, 3.64401, -153.705, 0.29", "251.738, 4.10522, -153.442, 0.52", "251.952, 4.46618, -153.257, 0.52", "252.292, 5.10696, -152.981, 0.29", "252.657, 5.78658, -152.727, 1.03", "253.248, 6.8245, -152.414, 0.66", "253.644, 7.49195, -152.241, 0.44", "253.79, 7.72964, -152.182, 0.66", "254.248, 8.46846, -152.014, 0.37", "254.488, 8.8307, -151.919, 0.52", "254.971, 9.49778, -151.7, 0.37", "255.318, 9.91745, -151.504, 0.37", "255.692, 10.3582, -151.29, 0.37", "256.075, 10.8691, -151.044, 0.37", "256.406, 11.3724, -150.794, 0.96", "256.544, 11.5829, -150.686, 0.96", "257.122, 12.3993, -150.235, 0.29", "257.61, 13.056, -149.877, 0.29", "258.082, 13.6625, -149.553, 0.29", "258.483, 14.1714, -149.288, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "241.672, -5.90538, -145.422, 0.52", "241.35, -0.455418, -149.207, 0.52", "241.314, -0.00114921, -149.496, 0.52", "241.091, 2.15191, -150.77, 0.37", "241.029, 2.75452, -151.127, 0.29", "240.84, 4.57755, -152.206, 0.29", "240.68, 6.12738, -153.123, 0.29", "240.457, 7.70289, -153.541, 0.29", "240.356, 8.38125, -153.738, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "108.669, 125.957, -76.2941, 0.29", "107.671, 128.029, -76.6742, 0.29", "107.324, 128.571, -76.9165, 0.29", "106.821, 129.281, -77.3308, 0.29", "105.924, 130.563, -78.0913, 0.29", "105.588, 131.063, -78.3619, 0.44", "105.133, 131.741, -78.7293, 0.44", "103.717, 133.649, -79.8683, 0.29", "103.036, 134.531, -80.4633, 0.29", "102.647, 135.039, -80.8443, 0.29", "102.057, 135.814, -81.4345, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "108.669, 125.957, -76.2941, 0.22", "107.881, 125.097, -75.9566, 0.22", "107.248, 124.442, -75.6381, 0.22", "106.487, 123.67, -75.1806, 1.4", "105.633, 122.804, -74.6675, 0.22", "104.68, 121.838, -74.0949, 1.84", "103.845, 120.991, -73.5934, 0.22", "103.165, 120.275, -73.0778, 0.22", "102.55, 119.625, -72.5503, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "137.445, 91.6452, -51.6529, 0.74", "137.42, 92.0398, -51.238, 0.74", "137.35, 92.6523, -50.5529, 0.22", "137.267, 93.0154, -50.1332, 0.22", "137.04, 93.71, -49.2864, 0.22", "136.826, 94.2887, -48.4911, 1.33", "136.73, 94.5598, -48.0794, 1.33", "136.534, 95.0598, -47.1897, 0.22", "136.383, 95.3783, -46.5262, 0.22", "136.271, 95.5636, -46.0971, 0.22", "135.984, 95.9671, -45.1762, 0.22", "135.804, 96.2449, -44.4594, 0.22", "135.734, 96.4371, -43.9934, 0.37", "135.718, 96.651, -43.5253, 0.37", "135.774, 96.9095, -42.9997, 0.37", "135.848, 97.1297, -42.6181, 0.15", "136.019, 97.7945, -41.6182, 0.22", "136.141, 98.3665, -40.8176, 0.22", "136.216, 98.7617, -40.2465, 0.22", "136.283, 99.482, -39.215, 0.22", "136.269, 99.9693, -38.4804, 0.22", "136.198, 100.561, -37.5316, 0.22", "136.152, 100.772, -37.1818, 0.74", "135.899, 101.591, -35.7247, 0.29", "135.714, 102.075, -34.8557, 0.29", "135.521, 102.557, -34.0159, 0.29", "135.405, 102.89, -33.3817, 0.29", "135.335, 103.262, -32.5771, 0.52", "135.303, 103.578, -31.8252, 0.37", "135.298, 103.982, -30.826, 0.29", "135.304, 104.077, -30.5769, 0.37", "135.329, 104.448, -29.6047, 0.37", "135.34, 104.928, -28.3, 0.37", "135.334, 105.278, -27.278, 0.22", "135.342, 105.458, -26.7074, 0.22", "135.35, 105.648, -26.091, 0.74", "135.343, 105.76, -25.7537, 0.88", "135.272, 106.165, -24.7437, 0.59", "135.095, 106.71, -23.6406, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "137.445, 91.6452, -51.6529, 0.29", "138.417, 92.1948, -52.2548, 0.29", "139.265, 92.6163, -52.9953, 0.29", "140.093, 92.9928, -53.8204, 1.03", "140.48, 93.1628, -54.2325, 1.03", "141.45, 93.5264, -55.2392, 0.44", "142.2, 93.772, -55.9757, 0.29", "143.201, 94.0082, -56.9772, 0.96", "143.543, 94.0675, -57.3073, 0.96", "144.573, 94.2271, -58.1991, 0.22", "145.377, 94.3704, -58.8228, 0.22", "146.236, 94.5467, -59.3594, 0.22", "147.185, 94.7845, -59.8722, 0.22", "148.293, 95.1277, -60.3981, 0.22", "148.987, 95.3827, -60.7031, 0.52", "149.559, 95.6501, -60.9184, 0.29", "150.276, 96.0942, -61.1303, 1.03", "150.753, 96.4572, -61.1805, 1.03", "151.173, 96.8736, -61.1295, 0.88", "151.596, 97.3314, -61.0013, 0.66", "152.121, 97.9413, -60.7672, 0.37", "152.65, 98.6026, -60.441, 0.59", "153.265, 99.4334, -59.9545, 0.29", "153.804, 100.157, -59.4594, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-24.7344, -147.465, -5.68413, 0.74", "-25.191, -148.453, -5.32321, 0.74", "-26.0126, -149.913, -4.74422, 0.66", "-26.7012, -150.872, -4.33453, 0.52", "-27.7195, -152.033, -3.82703, 0.37", "-28.3101, -152.668, -3.56291, 0.74", "-28.7971, -153.209, -3.32551, 1.03", "-29.4669, -153.925, -2.99935, 0.74", "-30.4214, -154.96, -2.53906, 0.52", "-31.355, -156.114, -2.07259, 0.52", "-31.9561, -157.041, -1.76616, 0.66", "-32.7502, -158.657, -1.34522, 0.88", "-32.9676, -159.234, -1.23055, 1.18", "-33.2318, -160.162, -1.08884, 0.81", "-33.5043, -161.481, -0.947434, 0.52", "-33.7114, -162.595, -0.899198, 0.52", "-33.9911, -163.918, -0.915043, 0.52", "-34.1502, -164.547, -0.966009, 0.52", "-34.4916, -165.784, -1.08113, 0.52", "-34.8675, -167.008, -1.20128, 0.52", "-35.2198, -168.036, -1.32783, 1.03", "-35.5019, -168.784, -1.42393, 1.25", "-35.9231, -169.712, -1.55145, 0.66", "-36.4183, -170.615, -1.69114, 0.29", "-37.1575, -171.499, -1.85434, 0.29", "-37.6747, -171.378, -1.87709, 0.52", "-38.9909, -170.566, -1.87517, 0.29", "-40.0126, -169.802, -1.87014, 0.29", "-41.0832, -168.856, -1.85566, 0.22", "-41.283, -168.654, -1.8538, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-24.7344, -147.465, -5.68413, 0.22", "-25.136, -148.979, -6.22001, 0.22", "-25.2941, -149.583, -6.44214, 0.22", "-25.5572, -150.79, -6.87403, 0.22", "-25.8142, -152.159, -7.34085, 0.22", "-26.0224, -153.268, -7.71913, 0.22", "-26.4267, -155.422, -8.45344, 0.22", "-26.6176, -156.349, -8.73403, 0.22", "-26.982, -158.175, -9.32276, 0.22", "-27.1441, -159.188, -9.68397, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "258.483, 14.1714, -149.288, 0.29", "259.387, 13.4499, -149.571, 0.29", "259.906, 13.0348, -149.733, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "258.483, 14.1714, -149.288, 0.37", "258.942, 14.749, -148.884, 0.37", "259.483, 15.4291, -148.408, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_ChC_6c89541c26_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 10.8306, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( -0.0306642, 12.3576, -3.57133, 0.37 ) }
    dend_78 { pt3dadd( -0.103137, 12.7724, -3.65296, 0.74 ) }
    dend_78 { pt3dadd( -0.0564355, 13.0993, -3.77819, 0.74 ) }
    dend_78 { pt3dadd( 0.336645, 14.1031, -4.25453, 0.37 ) }
    dend_78 { pt3dadd( 0.723325, 14.9057, -4.60863, 0.66 ) }
    dend_78 { pt3dadd( 1.17527, 15.734, -4.98689, 1.33 ) }
    dend_78 { pt3dadd( 1.60099, 16.3517, -5.2819, 1.33 ) }
    dend_78 { pt3dadd( 2.3174, 17.3719, -5.77755, 0.74 ) }
    dend_78 { pt3dadd( 2.85256, 18.1874, -6.15081, 0.74 ) }
    dend_78 { pt3dadd( 3.66805, 19.5357, -6.76667, 1.25 ) }
    dend_78 { pt3dadd( 4.18196, 20.6196, -7.24074, 2.06 ) }
    dend_78 { pt3dadd( 4.44266, 21.4289, -7.55737, 2.06 ) }
    dend_78 { pt3dadd( 4.62225, 22.5249, -7.94866, 1.4 ) }
    dend_78 { pt3dadd( 4.55407, 23.7906, -8.38442, 0.74 ) }
    dend_78 { pt3dadd( 4.25356, 24.6208, -8.67285, 1.11 ) }
    dend_78 { pt3dadd( 3.73065, 25.257, -8.89613, 1.11 ) }
    dend_78 { pt3dadd( 2.97675, 25.8007, -9.07292, 0.81 ) }
    dend_78 { pt3dadd( 1.98384, 26.2599, -9.31658, 0.81 ) }
    dend_78 { pt3dadd( 0.770558, 26.6332, -9.63706, 0.81 ) }
    dend_78 { pt3dadd( -0.412367, 26.9068, -9.9834, 0.96 ) }
    dend_78 { pt3dadd( -1.38896, 27.1316, -10.2807, 1.11 ) }
    dend_78 { pt3dadd( -2.26628, 27.3595, -10.598, 1.11 ) }
    dend_78 { pt3dadd( -4.17212, 27.9762, -11.4304, 1.11 ) }
    dend_78 { pt3dadd( -4.73523, 28.2297, -11.7365, 1.11 ) }
    dend_78 { pt3dadd( -5.64357, 28.9038, -12.3654, 0.59 ) }
    dend_78 { pt3dadd( -6.18034, 29.6267, -12.8199, 0.96 ) }
    dend_78 { pt3dadd( -6.49781, 30.2942, -13.1207, 1.25 ) }
    dend_78 { pt3dadd( -6.72187, 30.8961, -13.3268, 1.55 ) }
    dend_78 { pt3dadd( -6.8578, 31.2753, -13.4155, 1.55 ) }
    dend_78 { pt3dadd( -7.3432, 32.4396, -13.6627, 0.74 ) }
    dend_78 { pt3dadd( -8.10584, 33.8477, -13.9571, 0.96 ) }
    dend_78 { pt3dadd( -8.73742, 34.7013, -14.1695, 0.66 ) }
    dend_78 { pt3dadd( -9.26158, 35.2383, -14.3352, 0.66 ) }
    dend_78 { pt3dadd( -10.1033, 35.9057, -14.5977, 0.81 ) }
    dend_78 { pt3dadd( -10.8019, 36.3441, -14.8227, 0.96 ) }
    dend_78 { pt3dadd( -11.7212, 36.815, -15.1426, 1.47 ) }
    dend_78 { pt3dadd( -12.5681, 37.2215, -15.4538, 1.62 ) }
    dend_78 { pt3dadd( -13.3679, 37.6646, -15.7563, 1.47 ) }
    dend_78 { pt3dadd( -14.1124, 38.1616, -16.0526, 1.11 ) }
    dend_78 { pt3dadd( -14.9533, 38.8451, -16.4118, 0.81 ) }
    dend_78 { pt3dadd( -15.9435, 39.8627, -16.8982, 0.66 ) }
    dend_78 { pt3dadd( -16.4756, 40.5648, -17.1937, 0.81 ) }
    dend_78 { pt3dadd( -17.1598, 41.7498, -17.6356, 1.03 ) }
    dend_78 { pt3dadd( -17.4243, 42.3672, -17.8589, 1.25 ) }
    dend_78 { pt3dadd( -17.6127, 42.9418, -18.0764, 1.25 ) }
    dend_78 { pt3dadd( -17.9531, 44.1819, -18.5923, 0.96 ) }
    dend_78 { pt3dadd( -18.2067, 45.1391, -19.0474, 0.81 ) }
    dend_78 { pt3dadd( -18.5603, 46.3201, -19.6851, 0.59 ) }
    dend_78 { pt3dadd( -18.8518, 47.1405, -20.1587, 0.59 ) }
    dend_78 { pt3dadd( -19.2528, 48.1127, -20.7265, 0.59 ) }
    dend_78 { pt3dadd( -19.6934, 49.0671, -21.2645, 0.59 ) }
    dend_78 { pt3dadd( -20.1202, 49.9607, -21.6819, 0.44 ) }
    dend_78 { pt3dadd( -20.5246, 50.8937, -22.0019, 0.66 ) }
    dend_78 { pt3dadd( -20.8381, 51.8904, -22.1772, 0.74 ) }
    dend_78 { pt3dadd( -20.9397, 52.516, -22.2081, 0.96 ) }
    dend_78 { pt3dadd( -20.9493, 53.2159, -22.185, 0.96 ) }
    dend_78 { pt3dadd( -20.7924, 54.7695, -22.1542, 0.52 ) }
    dend_78 { pt3dadd( -20.5755, 56.0293, -22.1721, 0.59 ) }
    dend_78 { pt3dadd( -20.2882, 57.458, -22.2497, 0.59 ) }
    dend_78 { pt3dadd( -20.1402, 58.2562, -22.3302, 0.96 ) }
    dend_78 { pt3dadd( -20.0265, 59.1773, -22.4707, 0.96 ) }
    dend_78 { pt3dadd( -19.9909, 60.8128, -22.825, 0.66 ) }
    dend_78 { pt3dadd( -20.1713, 61.937, -23.1898, 0.66 ) }
    dend_78 { pt3dadd( -20.569, 62.8477, -23.5694, 0.96 ) }
    dend_78 { pt3dadd( -21.0291, 63.3999, -23.8217, 1.03 ) }
    dend_78 { pt3dadd( -21.6163, 63.8458, -24.0612, 1.03 ) }
    dend_78 { pt3dadd( -22.3969, 64.2514, -24.3491, 1.03 ) }
    dend_78 { pt3dadd( -23.4489, 64.6324, -24.7665, 0.74 ) }
    dend_78 { pt3dadd( -24.2768, 64.867, -25.1782, 0.74 ) }
    dend_78 { pt3dadd( -24.8291, 64.9931, -25.5132, 0.52 ) }
    dend_78 { pt3dadd( -26.0511, 65.2192, -26.4157, 0.52 ) }
    dend_78 { pt3dadd( -27.0853, 65.3707, -27.2718, 0.52 ) }
    dend_78 { pt3dadd( -28.1398, 65.4907, -28.1856, 1.11 ) }
    dend_78 { pt3dadd( -28.7132, 65.5423, -28.6663, 1.4 ) }
    dend_78 { pt3dadd( -29.3644, 65.5827, -29.155, 1.4 ) }
    dend_78 { pt3dadd( -30.4775, 65.6111, -29.8491, 0.81 ) }
    dend_78 { pt3dadd( -31.1637, 65.6253, -30.1297, 0.59 ) }
    dend_78 { pt3dadd( -32.1971, 65.6744, -30.3504, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -33.2353, 65.7704, -30.4103, 0.44 ) }
    dend_78 { pt3dadd( -34.2881, 65.9314, -30.3795, 0.74 ) }
    dend_78 { pt3dadd( -35.2941, 66.1999, -30.3008, 1.33 ) }
    dend_78 { pt3dadd( -36.5177, 66.7288, -30.2297, 0.88 ) }
    dend_78 { pt3dadd( -37.06, 67.0825, -30.3056, 0.59 ) }
    dend_78 { pt3dadd( -37.3959, 67.3927, -30.443, 0.59 ) }
    dend_78 { pt3dadd( -37.8687, 67.9416, -30.7887, 0.74 ) }
    dend_78 { pt3dadd( -38.4535, 68.7114, -31.3936, 0.96 ) }
    dend_78 { pt3dadd( -39.2085, 69.7133, -32.3191, 0.59 ) }
    dend_78 { pt3dadd( -39.9898, 70.6916, -33.3482, 0.59 ) }
    dend_78 { pt3dadd( -40.3963, 71.1829, -33.8619, 0.81 ) }
    dend_78 { pt3dadd( -40.9098, 71.7451, -34.425, 0.96 ) }
    dend_78 { pt3dadd( -41.4019, 72.2011, -34.8465, 1.03 ) }
    dend_78 { pt3dadd( -42.2354, 72.8945, -35.3805, 0.66 ) }
    dend_78 { pt3dadd( -42.4907, 73.1143, -35.5131, 0.66 ) }
    dend_78 { pt3dadd( -43.1764, 73.8056, -35.8433, 0.81 ) }
    dend_78 { pt3dadd( -43.7813, 74.5541, -36.1994, 0.81 ) }
    dend_78 { pt3dadd( -44.2413, 75.3266, -36.5494, 0.66 ) }
    dend_78 { pt3dadd( -44.616, 76.1493, -36.9068, 0.66 ) }
    dend_78 { pt3dadd( -45.0826, 77.4289, -37.4525, 0.52 ) }
    dend_78 { pt3dadd( -45.3494, 78.2278, -37.8043, 0.81 ) }
    dend_78 { pt3dadd( -45.5457, 78.8235, -38.0778, 0.74 ) }
    dend_78 { pt3dadd( -46.0205, 80.1017, -38.658, 0.59 ) }
    dend_78 { pt3dadd( -46.3102, 80.7265, -38.9179, 0.74 ) }
    dend_78 { pt3dadd( -46.6973, 81.3448, -39.1427, 0.96 ) }
    dend_78 { pt3dadd( -47.2951, 82.0875, -39.3208, 0.96 ) }
    dend_78 { pt3dadd( -47.8183, 82.661, -39.4067, 0.74 ) }
    dend_78 { pt3dadd( -48.5425, 83.4061, -39.4659, 1.03 ) }
    dend_78 { pt3dadd( -49.0652, 83.9279, -39.4192, 1.25 ) }
    dend_78 { pt3dadd( -49.4319, 84.323, -39.3442, 0.81 ) }
    dend_78 { pt3dadd( -50.2099, 85.2557, -39.1029, 0.59 ) }
    dend_78 { pt3dadd( -50.6839, 85.8886, -38.9033, 0.66 ) }
    dend_78 { pt3dadd( -51.0774, 86.4623, -38.7034, 0.66 ) }
    dend_78 { pt3dadd( -52.0975, 88.0504, -38.1082, 0.88 ) }
    dend_78 { pt3dadd( -52.6148, 88.8638, -37.7795, 1.11 ) }
    dend_78 { pt3dadd( -52.9704, 89.4201, -37.532, 1.03 ) }
    dend_78 { pt3dadd( -53.4029, 90.0915, -37.2242, 1.25 ) }
    dend_78 { pt3dadd( -53.5645, 90.3412, -37.0993, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 9.67164, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 4.98968, 10.4557, -4.90415, 1.11 ) }
    dend_53 { pt3dadd( 5.61431, 11.0818, -5.32097, 1.11 ) }
    dend_53 { pt3dadd( 6.61087, 12.129, -5.98532, 1.11 ) }
    dend_53 { pt3dadd( 7.29441, 12.8833, -6.48546, 0.96 ) }
    dend_53 { pt3dadd( 8.42659, 14.0033, -7.22449, 1.55 ) }
    dend_53 { pt3dadd( 9.41129, 14.8987, -7.81927, 1.62 ) }
    dend_53 { pt3dadd( 9.99119, 15.369, -8.14402, 1.62 ) }
    dend_53 { pt3dadd( 10.8874, 16.0216, -8.53853, 1.25 ) }
    dend_53 { pt3dadd( 12.3898, 17.0027, -8.99975, 0.96 ) }
    dend_53 { pt3dadd( 14.685, 18.3507, -9.41827, 0.88 ) }
    dend_53 { pt3dadd( 15.7624, 18.8985, -9.48365, 1.55 ) }
    dend_53 { pt3dadd( 16.9388, 19.4142, -9.45526, 1.84 ) }
    dend_53 { pt3dadd( 18.7032, 20.107, -9.31704, 1.11 ) }
    dend_53 { pt3dadd( 19.6294, 20.4549, -9.19578, 1.03 ) }
    dend_53 { pt3dadd( 20.6658, 20.8843, -8.99393, 1.25 ) }
    dend_53 { pt3dadd( 21.6684, 21.4231, -8.7838, 0.88 ) }
    dend_53 { pt3dadd( 22.5929, 22.0394, -8.59083, 0.88 ) }
    dend_53 { pt3dadd( 23.4587, 22.7126, -8.41262, 0.88 ) }
    dend_53 { pt3dadd( 24.4752, 23.5503, -8.19637, 0.88 ) }
    dend_53 { pt3dadd( 25.3445, 24.313, -7.91641, 0.96 ) }
    dend_53 { pt3dadd( 26.2439, 25.1673, -7.58031, 0.96 ) }
    dend_53 { pt3dadd( 27.0647, 26.0322, -7.21433, 0.81 ) }
    dend_53 { pt3dadd( 28.2726, 27.3832, -6.56942, 1.11 ) }
    dend_53 { pt3dadd( 29.0646, 28.2394, -6.06812, 1.4 ) }
    dend_53 { pt3dadd( 29.9772, 29.0984, -5.39007, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.33214, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.34337, 8.6405, 2.59011, 1.62 ) }
    dend_50 { pt3dadd( 4.99467, 9.00977, 3.17667, 1.25 ) }
    dend_50 { pt3dadd( 6.17954, 9.52519, 4.36623, 1.25 ) }
    dend_50 { pt3dadd( 6.8061, 9.75959, 5.03749, 1.25 ) }
    dend_50 { pt3dadd( 7.45987, 9.92597, 5.82166, 1.92 ) }
    dend_50 { pt3dadd( 7.73652, 9.97169, 6.17397, 2.5 ) }
    dend_50 { pt3dadd( 8.33813, 9.98721, 7.0067, 2.5 ) }
    dend_50 { pt3dadd( 9.58251, 9.84118, 8.85855, 1.77 ) }
    dend_50 { pt3dadd( 10.4456, 9.58489, 10.1402, 0.96 ) }
    dend_50 { pt3dadd( 11.6634, 9.09708, 11.9441, 0.88 ) }
    dend_50 { pt3dadd( 12.0116, 8.93901, 12.468, 0.88 ) }
    dend_50 { pt3dadd( 12.2863, 8.81919, 12.8689, 1.4 ) }
    dend_50 { pt3dadd( 12.5577, 8.72073, 13.2193, 1.4 ) }
    dend_50 { pt3dadd( 13.548, 8.50894, 14.2222, 0.66 ) }
    dend_50 { pt3dadd( 13.968, 8.53259, 14.5573, 0.66 ) }
    dend_50 { pt3dadd( 14.9655, 8.91047, 15.1477, 0.88 ) }
    dend_50 { pt3dadd( 15.5922, 9.24589, 15.4679, 0.88 ) }
    dend_50 { pt3dadd( 16.3793, 9.74666, 15.7797, 0.74 ) }
    dend_50 { pt3dadd( 16.966, 10.1707, 15.9555, 1.4 ) }
    dend_50 { pt3dadd( 17.6413, 10.7006, 16.0784, 2.06 ) }
    dend_50 { pt3dadd( 18.3062, 11.206, 16.1302, 1.84 ) }
    dend_50 { pt3dadd( 19.1036, 11.7841, 16.0847, 1.18 ) }
    dend_50 { pt3dadd( 19.9333, 12.3421, 16.0596, 1.18 ) }
    dend_50 { pt3dadd( 20.2701, 12.5399, 16.1073, 1.03 ) }
    dend_50 { pt3dadd( 20.8333, 12.8056, 16.3412, 1.03 ) }
    dend_50 { pt3dadd( 21.2059, 12.9496, 16.7168, 0.59 ) }
    dend_50 { pt3dadd( 21.5519, 13.102, 17.271, 0.59 ) }
    dend_50 { pt3dadd( 22.2298, 13.4548, 18.6517, 0.88 ) }
    dend_50 { pt3dadd( 23.0184, 13.9331, 20.4679, 1.62 ) }
    dend_50 { pt3dadd( 23.3573, 14.1675, 21.2577, 1.62 ) }
    dend_50 { pt3dadd( 24.1458, 14.7587, 23.0843, 0.88 ) }
    dend_50 { pt3dadd( 24.513, 15.0333, 23.8803, 0.88 ) }
    dend_50 { pt3dadd( 24.8518, 15.2951, 24.5385, 1.47 ) }
    dend_50 { pt3dadd( 25.0899, 15.4816, 24.9161, 1.47 ) }
    dend_50 { pt3dadd( 25.7022, 15.9245, 25.6521, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 26.0438, 16.1278, 25.9817, 0.59 ) }
    dend_50 { pt3dadd( 26.4091, 16.2926, 26.2695, 0.59 ) }
    dend_50 { pt3dadd( 27.3002, 16.6504, 26.9797, 1.25 ) }
    dend_50 { pt3dadd( 28.7016, 17.2322, 28.1483, 0.74 ) }
    dend_50 { pt3dadd( 29.1406, 17.4561, 28.5579, 0.29 ) }
    dend_50 { pt3dadd( 29.5313, 17.6727, 28.9718, 0.29 ) }
    dend_50 { pt3dadd( 29.755, 17.797, 29.2418, 0.59 ) }
    dend_50 { pt3dadd( 30.3473, 18.1381, 29.9718, 1.11 ) }
    dend_50 { pt3dadd( 30.6466, 18.2893, 30.33, 1.11 ) }
    dend_50 { pt3dadd( 31.289, 18.8282, 31.099, 1.11 ) }
    dend_50 { pt3dadd( 31.6519, 19.3186, 31.7103, 0.59 ) }
    dend_50 { pt3dadd( 31.6618, 17.9124, 31.811, 0.59 ) }
    dend_50 { pt3dadd( 31.7861, 16.4624, 32.1852, 0.52 ) }
    dend_50 { pt3dadd( 31.8721, 15.4497, 32.444, 0.59 ) }
    dend_50 { pt3dadd( 37.3945, 17.1309, 37.3665, 0.59 ) }
    dend_50 { pt3dadd( 43.1861, 19.4569, 41.6469, 0.59 ) }
    dend_50 { pt3dadd( 47.9727, 22.8234, 46.3788, 0.59 ) }
    dend_50 { pt3dadd( 52.7148, 26.8707, 50.5287, 0.59 ) }
    dend_50 { pt3dadd( 58.2288, 31.2136, 53.0894, 0.59 ) }
    dend_50 { pt3dadd( 63.1964, 35.7845, 56.2567, 0.59 ) }
    dend_50 { pt3dadd( 68.4378, 39.5501, 60.0876, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.11864, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -4.00201, 6.36461, 1.87802, 1.69 ) }
    dend_49 { pt3dadd( -4.53641, 6.61033, 2.25075, 1.4 ) }
    dend_49 { pt3dadd( -4.91673, 6.76886, 2.5953, 1.03 ) }
    dend_49 { pt3dadd( -5.43878, 6.99821, 3.12438, 0.88 ) }
    dend_49 { pt3dadd( -5.79921, 7.17103, 3.51398, 0.88 ) }
    dend_49 { pt3dadd( -6.25518, 7.3746, 4.07479, 0.59 ) }
    dend_49 { pt3dadd( -6.67072, 7.55598, 4.63987, 0.44 ) }
    dend_49 { pt3dadd( -7.43712, 7.88665, 5.75459, 0.37 ) }
    dend_49 { pt3dadd( -7.70152, 8.00208, 6.15385, 0.37 ) }
    dend_49 { pt3dadd( -8.13252, 8.19518, 6.82094, 0.37 ) }
    dend_49 { pt3dadd( -9.15132, 8.67767, 8.47617, 1.03 ) }
    dend_49 { pt3dadd( -9.38321, 8.80002, 8.86661, 1.62 ) }
    dend_49 { pt3dadd( -15.4008, 9.42689, 13.442, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.13936, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -4.84474, -1.76049, -14.5818, 0.74 ) }
    dend_44 { pt3dadd( -5.98224, -2.46224, -14.5757, 1.03 ) }
    dend_44 { pt3dadd( -6.97717, -3.06396, -14.5909, 1.25 ) }
    dend_44 { pt3dadd( -7.77275, -3.55228, -14.6118, 1.62 ) }
    dend_44 { pt3dadd( -8.42469, -3.94568, -14.6323, 1.84 ) }
    dend_44 { pt3dadd( -9.27958, -4.43118, -14.638, 1.84 ) }
    dend_44 { pt3dadd( -10.0368, -4.81056, -14.6036, 1.99 ) }
    dend_44 { pt3dadd( -10.8325, -5.15408, -14.5278, 2.21 ) }
    dend_44 { pt3dadd( -11.7621, -5.48728, -14.3933, 2.65 ) }
    dend_44 { pt3dadd( -12.4216, -5.68485, -14.2877, 2.5 ) }
    dend_44 { pt3dadd( -13.5359, -5.97684, -14.1183, 1.77 ) }
    dend_44 { pt3dadd( -14.7161, -6.27146, -13.977, 1.33 ) }
    dend_44 { pt3dadd( -15.5185, -6.47711, -13.9391, 1.18 ) }
    dend_44 { pt3dadd( -16.4698, -6.73044, -13.9995, 1.11 ) }
    dend_44 { pt3dadd( -17.1459, -6.93334, -14.1906, 1.11 ) }
    dend_44 { pt3dadd( -17.8423, -7.17176, -14.6161, 1.11 ) }
    dend_44 { pt3dadd( -18.5077, -7.41869, -15.2688, 1.4 ) }
    dend_44 { pt3dadd( -19.17, -7.65084, -16.1126, 1.03 ) }
    dend_44 { pt3dadd( -19.7278, -7.82412, -16.9302, 0.88 ) }
    dend_44 { pt3dadd( -20.5578, -8.0228, -18.2697, 0.88 ) }
    dend_44 { pt3dadd( -21.4547, -8.16081, -19.8516, 1.47 ) }
    dend_44 { pt3dadd( -22.1332, -8.22237, -21.1061, 1.77 ) }
    dend_44 { pt3dadd( -22.8927, -8.23449, -22.5657, 1.84 ) }
    dend_44 { pt3dadd( -23.1613, -8.21904, -23.0954, 2.06 ) }
    dend_44 { pt3dadd( -23.6478, -8.16054, -24.0808, 1.77 ) }
    dend_44 { pt3dadd( -24.3974, -8.00969, -25.5614, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -1.90886, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.43102, -1.8079, 9.66413, 2.06 ) }
    dend_41 { pt3dadd( -7.23049, -1.76795, 10.0548, 2.06 ) }
    dend_41 { pt3dadd( -9.30496, -1.79793, 11.0195, 1.84 ) }
    dend_41 { pt3dadd( -10.4598, -1.89916, 11.5409, 1.84 ) }
    dend_41 { pt3dadd( -11.3433, -2.03977, 11.9356, 1.99 ) }
    dend_41 { pt3dadd( -12.9332, -2.41928, 12.6439, 1.55 ) }
    dend_41 { pt3dadd( -14.2267, -2.87022, 13.2055, 1.03 ) }
    dend_41 { pt3dadd( -15.2723, -3.35325, 13.6247, 0.88 ) }
    dend_41 { pt3dadd( -16.2876, -3.95795, 13.9192, 1.18 ) }
    dend_41 { pt3dadd( -17.1081, -4.5089, 14.0983, 1.18 ) }
    dend_41 { pt3dadd( -17.737, -4.97024, 14.2023, 1.47 ) }
    dend_41 { pt3dadd( -18.6705, -5.72417, 14.2837, 1.25 ) }
    dend_41 { pt3dadd( -19.5894, -6.49766, 14.405, 1.03 ) }
    dend_41 { pt3dadd( -20.4182, -7.18681, 14.5906, 1.62 ) }
    dend_41 { pt3dadd( -21.2483, -7.86137, 14.899, 1.69 ) }
    dend_41 { pt3dadd( -21.8883, -8.35048, 15.2284, 1.33 ) }
    dend_41 { pt3dadd( -23.0315, -9.15483, 16.0063, 1.03 ) }
    dend_41 { pt3dadd( -24.4396, -9.9843, 17.2312, 0.88 ) }
    dend_41 { pt3dadd( -25.4242, -10.4252, 18.3221, 1.11 ) }
    dend_41 { pt3dadd( -26.2772, -10.6451, 19.4423, 1.33 ) }
    dend_41 { pt3dadd( -26.8091, -10.6674, 20.2296, 1.33 ) }
    dend_41 { pt3dadd( -27.3335, -10.538, 21.0429, 1.18 ) }
    dend_41 { pt3dadd( -27.9576, -10.1967, 21.9829, 0.88 ) }
    dend_41 { pt3dadd( -28.845, -9.56312, 23.1299, 1.18 ) }
    dend_41 { pt3dadd( -29.3985, -9.18145, 23.7527, 1.33 ) }
    dend_41 { pt3dadd( -29.8863, -8.93152, 24.2386, 1.33 ) }
    dend_41 { pt3dadd( -30.7274, -8.69853, 25.0264, 0.59 ) }
    dend_41 { pt3dadd( -31.881, -8.75661, 26.0068, 0.52 ) }
    dend_41 { pt3dadd( -32.4663, -9.09463, 26.4348, 0.59 ) }
    dend_41 { pt3dadd( -33.2824, -10.1477, 27.079, 0.59 ) }
    dend_41 { pt3dadd( -34.0683, -11.5958, 27.8625, 0.59 ) }
    dend_41 { pt3dadd( -34.4758, -12.4591, 28.3202, 1.03 ) }
    dend_41 { pt3dadd( -34.9422, -13.5371, 28.9441, 1.03 ) }
    dend_41 { pt3dadd( -35.3279, -14.4339, 29.5152, 1.03 ) }
    dend_41 { pt3dadd( -36.055, -15.932, 30.6802, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -36.7442, -16.9203, 31.7832, 0.66 ) }
    dend_41 { pt3dadd( -37.3247, -17.3764, 32.6317, 0.66 ) }
    dend_41 { pt3dadd( -38.3479, -17.7539, 33.9762, 0.74 ) }
    dend_41 { pt3dadd( -39.0713, -17.8736, 34.8633, 0.81 ) }
    dend_41 { pt3dadd( -39.7441, -17.9179, 35.6577, 0.52 ) }
    dend_41 { pt3dadd( -40.9635, -17.9348, 36.9843, 0.52 ) }
    dend_41 { pt3dadd( -41.4859, -17.9708, 37.5581, 0.44 ) }
    dend_41 { pt3dadd( -42.2462, -18.2884, 38.5692, 0.37 ) }
    dend_41 { pt3dadd( -42.6119, -18.7802, 39.162, 0.37 ) }
    dend_41 { pt3dadd( -42.9511, -19.5264, 39.768, 1.11 ) }
    dend_41 { pt3dadd( -43.2407, -20.2919, 40.2415, 1.4 ) }
    dend_41 { pt3dadd( -43.5195, -21.3001, 40.7519, 1.4 ) }
    dend_41 { pt3dadd( -43.8622, -22.8306, 41.4555, 0.81 ) }
    dend_41 { pt3dadd( -44.093, -23.9832, 41.9266, 0.29 ) }
    dend_41 { pt3dadd( -44.2987, -24.7454, 42.2512, 0.29 ) }
    dend_41 { pt3dadd( -44.5418, -25.3573, 42.5286, 0.29 ) }
    dend_41 { pt3dadd( -51.2315, -29.6468, 49.9682, 0.29 ) }
    dend_41 { pt3dadd( -59.3274, -34.0435, 55.7582, 0.29 ) }
    dend_41 { pt3dadd( -66.7342, -38.4306, 62.4142, 0.29 ) }
    dend_41 { pt3dadd( -73.6078, -41.4592, 70.3564, 0.29 ) }
    dend_41 { pt3dadd( -80.4977, -44.6223, 78.2259, 0.29 ) }
    dend_41 { pt3dadd( -88.4248, -49.3194, 83.988, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.47136, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.18228, -6.38997, 6.9715, 1.77 ) }
    dend_32 { pt3dadd( -2.1579, -7.96486, 7.16832, 1.47 ) }
    dend_32 { pt3dadd( -2.14445, -9.54981, 7.34641, 1.25 ) }
    dend_32 { pt3dadd( -2.16741, -10.7606, 7.46674, 1.62 ) }
    dend_32 { pt3dadd( -2.21329, -11.7822, 7.5574, 1.92 ) }
    dend_32 { pt3dadd( -2.2762, -12.6732, 7.63766, 2.14 ) }
    dend_32 { pt3dadd( -2.39017, -13.7827, 7.73565, 2.14 ) }
    dend_32 { pt3dadd( -2.62513, -15.3228, 7.87174, 1.55 ) }
    dend_32 { pt3dadd( -2.9242, -16.7712, 7.99083, 1.33 ) }
    dend_32 { pt3dadd( -3.19505, -17.8686, 8.09111, 1.55 ) }
    dend_32 { pt3dadd( -3.39621, -18.5617, 8.15683, 1.92 ) }
    dend_32 { pt3dadd( -3.68204, -19.4024, 8.26688, 2.21 ) }
    dend_32 { pt3dadd( -3.89613, -19.9565, 8.35612, 2.5 ) }
    dend_32 { pt3dadd( -4.14644, -20.6105, 8.48422, 2.5 ) }
    dend_32 { pt3dadd( -4.37655, -21.3317, 8.63722, 2.36 ) }
    dend_32 { pt3dadd( -4.62409, -22.3214, 8.85303, 1.69 ) }
    dend_32 { pt3dadd( -4.86204, -23.619, 9.12481, 1.25 ) }
    dend_32 { pt3dadd( -4.98306, -24.8315, 9.3698, 1.4 ) }
    dend_32 { pt3dadd( -4.98819, -25.9075, 9.56073, 1.62 ) }
    dend_32 { pt3dadd( -4.86375, -27.2207, 9.76273, 2.06 ) }
    dend_32 { pt3dadd( -4.71226, -28.0301, 9.87771, 2.36 ) }
    dend_32 { pt3dadd( -4.55903, -28.5548, 9.94252, 2.36 ) }
    dend_32 { pt3dadd( -4.18098, -29.5548, 10.0466, 2.14 ) }
    dend_32 { pt3dadd( -3.56539, -30.9582, 10.1806, 1.62 ) }
    dend_32 { pt3dadd( -3.02217, -32.1402, 10.28, 1.25 ) }
    dend_32 { pt3dadd( -2.46498, -33.3596, 10.3957, 1.03 ) }
    dend_32 { pt3dadd( -1.87025, -34.7306, 10.5542, 1.03 ) }
    dend_32 { pt3dadd( -1.42723, -35.8788, 10.7166, 1.03 ) }
    dend_32 { pt3dadd( -0.944921, -37.365, 10.9815, 1.03 ) }
    dend_32 { pt3dadd( -0.734607, -38.2501, 11.1745, 0.96 ) }
    dend_32 { pt3dadd( -0.670808, -38.9493, 11.3516, 0.96 ) }
    dend_32 { pt3dadd( -0.757395, -39.5727, 11.5285, 0.96 ) }
    dend_32 { pt3dadd( -1.15555, -40.3936, 11.823, 0.96 ) }
    dend_32 { pt3dadd( -1.54496, -40.8397, 12.0082, 0.88 ) }
    dend_32 { pt3dadd( -1.95346, -41.1694, 12.1532, 1.18 ) }
    dend_32 { pt3dadd( -2.61292, -41.6273, 12.3383, 1.18 ) }
    dend_32 { pt3dadd( -3.25173, -42.0456, 12.5022, 1.33 ) }
    dend_32 { pt3dadd( -3.98725, -42.52, 12.7067, 1.33 ) }
    dend_32 { pt3dadd( -4.61964, -42.9338, 12.9048, 1.4 ) }
    dend_32 { pt3dadd( -5.29756, -43.4056, 13.1496, 1.55 ) }
    dend_32 { pt3dadd( -5.94692, -43.9052, 13.4379, 1.55 ) }
    dend_32 { pt3dadd( -6.68191, -44.5879, 13.8518, 1.84 ) }
    dend_32 { pt3dadd( -7.127, -45.0864, 14.1454, 2.14 ) }
    dend_32 { pt3dadd( -7.56294, -45.6875, 14.4603, 1.99 ) }
    dend_32 { pt3dadd( -8.17097, -46.773, 14.9639, 0.88 ) }
    dend_32 { pt3dadd( -8.58616, -47.7754, 15.3598, 0.88 ) }
    dend_32 { pt3dadd( -8.9362, -48.9596, 15.7547, 0.81 ) }
    dend_32 { pt3dadd( -9.13211, -50.0065, 16.0227, 0.74 ) }
    dend_32 { pt3dadd( -9.31396, -51.3283, 16.3171, 0.74 ) }
    dend_32 { pt3dadd( -9.40309, -52.5632, 16.5518, 1.03 ) }
    dend_32 { pt3dadd( -9.39961, -53.6727, 16.7025, 1.4 ) }
    dend_32 { pt3dadd( -9.3599, -54.363, 16.7578, 1.69 ) }
    dend_32 { pt3dadd( -9.27773, -55.1369, 16.7796, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -9.49936, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.80317, -10.5736, -2.31025, 3.39 ) }
    dend_0 { pt3dadd( 2.09448, -11.4403, -2.43492, 3.02 ) }
    dend_0 { pt3dadd( 2.38944, -12.3178, -2.56114, 3.02 ) }
    dend_0 { pt3dadd( 2.7773, -13.4717, -2.72712, 3.02 ) }
    dend_0 { pt3dadd( 3.19393, -14.7112, -2.90541, 3.24 ) }
    dend_0 { pt3dadd( 3.50812, -15.6252, -3.05093, 3.54 ) }
    dend_0 { pt3dadd( 3.86483, -16.61, -3.24443, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -53.5645, 90.3412, -37.0993, 0.44 ) }
    dend_88 { pt3dadd( -54.7935, 91.7357, -38.2721, 0.44 ) }
    dend_88 { pt3dadd( -55.3664, 92.4119, -38.777, 0.37 ) }
    dend_88 { pt3dadd( -55.6588, 92.7771, -38.9555, 0.66 ) }
    dend_88 { pt3dadd( -56.1506, 93.4326, -39.1745, 0.66 ) }
    dend_88 { pt3dadd( -56.6606, 94.169, -39.3346, 0.59 ) }
    dend_88 { pt3dadd( -57.0013, 94.7239, -39.405, 0.81 ) }
    dend_88 { pt3dadd( -57.3555, 95.4082, -39.3492, 0.81 ) }
    dend_88 { pt3dadd( -57.9283, 97.0062, -39.0539, 0.52 ) }
    dend_88 { pt3dadd( -58.0638, 97.779, -38.8508, 0.52 ) }
    dend_88 { pt3dadd( -58.0455, 99.0034, -38.4738, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -57.8028, 100.204, -38.0887, 0.44 ) }
    dend_88 { pt3dadd( -57.3445, 101.399, -37.7052, 0.74 ) }
    dend_88 { pt3dadd( -56.8792, 102.258, -37.4227, 0.74 ) }
    dend_88 { pt3dadd( -56.0366, 103.481, -37.0433, 0.44 ) }
    dend_88 { pt3dadd( -55.3905, 104.337, -36.7432, 0.59 ) }
    dend_88 { pt3dadd( -54.7336, 105.18, -36.4496, 0.59 ) }
    dend_88 { pt3dadd( -54.0682, 106.058, -36.178, 0.59 ) }
    dend_88 { pt3dadd( -53.5457, 106.83, -35.9942, 0.37 ) }
    dend_88 { pt3dadd( -53.1633, 107.445, -35.879, 0.37 ) }
    dend_88 { pt3dadd( -52.5834, 108.415, -35.725, 0.59 ) }
    dend_88 { pt3dadd( -52.001, 109.353, -35.5882, 0.37 ) }
    dend_88 { pt3dadd( -51.4685, 110.169, -35.4684, 0.81 ) }
    dend_88 { pt3dadd( -50.9028, 110.999, -35.3535, 0.81 ) }
    dend_88 { pt3dadd( -49.8541, 112.536, -35.1777, 0.44 ) }
    dend_88 { pt3dadd( -49.045, 113.746, -35.0581, 0.44 ) }
    dend_88 { pt3dadd( -48.4602, 114.596, -35.0053, 0.81 ) }
    dend_88 { pt3dadd( -47.8631, 115.467, -34.9635, 0.44 ) }
    dend_88 { pt3dadd( -47.5349, 115.968, -34.9585, 0.59 ) }
    dend_88 { pt3dadd( -46.7337, 117.253, -35.0145, 0.59 ) }
    dend_88 { pt3dadd( -46.2181, 118.187, -35.1811, 0.44 ) }
    dend_88 { pt3dadd( -45.6401, 119.483, -35.5433, 0.44 ) }
    dend_88 { pt3dadd( -45.2114, 120.61, -36.0159, 0.96 ) }
    dend_88 { pt3dadd( -45.0293, 121.151, -36.3193, 1.18 ) }
    dend_88 { pt3dadd( -44.8843, 121.656, -36.6696, 1.18 ) }
    dend_88 { pt3dadd( -44.4796, 123.09, -38.1005, 0.44 ) }
    dend_88 { pt3dadd( -44.2368, 124.137, -39.3292, 0.37 ) }
    dend_88 { pt3dadd( -43.9625, 125.051, -40.6507, 0.66 ) }
    dend_88 { pt3dadd( -43.831, 125.447, -41.2828, 0.66 ) }
    dend_88 { pt3dadd( -43.6229, 126.052, -42.3044, 0.66 ) }
    dend_88 { pt3dadd( -42.6875, 128.371, -46.366, 0.44 ) }
    dend_88 { pt3dadd( -42.5052, 128.769, -47.0889, 0.44 ) }
    dend_88 { pt3dadd( -41.4835, 130.858, -50.9207, 0.29 ) }
    dend_88 { pt3dadd( -41.2708, 131.325, -51.7275, 0.29 ) }
    dend_88 { pt3dadd( -41.0294, 131.892, -52.6339, 0.29 ) }
    dend_88 { pt3dadd( -40.5312, 133.199, -54.5207, 0.74 ) }
    dend_88 { pt3dadd( -40.0135, 134.897, -56.5924, 0.44 ) }
    dend_88 { pt3dadd( -39.9064, 135.316, -57.0268, 0.44 ) }
    dend_88 { pt3dadd( -39.7735, 136.286, -57.7846, 0.37 ) }
    dend_88 { pt3dadd( -39.6947, 137.266, -58.4317, 0.88 ) }
    dend_88 { pt3dadd( -39.7302, 138.821, -59.2033, 0.29 ) }
    dend_88 { pt3dadd( -39.8315, 139.421, -59.4217, 0.52 ) }
    dend_88 { pt3dadd( -40.1265, 140.48, -59.7543, 0.15 ) }
    dend_88 { pt3dadd( -40.4231, 141.413, -60.0929, 0.22 ) }
    dend_88 { pt3dadd( -40.9245, 142.866, -60.6506, 0.22 ) }
    dend_88 { pt3dadd( -41.4314, 144.114, -61.1381, 0.22 ) }
    dend_88 { pt3dadd( -41.9311, 145.276, -61.5682, 0.22 ) }
    dend_88 { pt3dadd( -42.6795, 146.987, -62.2737, 1.47 ) }
    dend_88 { pt3dadd( -43.2209, 148.256, -62.8593, 0.66 ) }
    dend_88 { pt3dadd( -43.5455, 149.078, -63.2446, 0.96 ) }
    dend_88 { pt3dadd( -44.0395, 150.445, -63.8517, 0.22 ) }
    dend_88 { pt3dadd( -44.3766, 151.356, -64.1928, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -53.5645, 90.3412, -37.0993, 0.37 ) }
    dend_79 { pt3dadd( -53.6443, 91.7925, -36.6074, 0.37 ) }
    dend_79 { pt3dadd( -53.5925, 92.5269, -36.4179, 0.37 ) }
    dend_79 { pt3dadd( -53.5739, 93.2122, -36.1726, 0.37 ) }
    dend_79 { pt3dadd( -53.6444, 94.2203, -35.7336, 0.74 ) }
    dend_79 { pt3dadd( -53.7965, 95.0616, -35.3408, 0.29 ) }
    dend_79 { pt3dadd( -54.0957, 96.0394, -34.8792, 0.29 ) }
    dend_79 { pt3dadd( -54.2597, 96.4958, -34.6588, 0.52 ) }
    dend_79 { pt3dadd( -54.7466, 97.4699, -34.0156, 0.44 ) }
    dend_79 { pt3dadd( -55.1099, 98.0768, -33.538, 0.29 ) }
    dend_79 { pt3dadd( -55.4335, 98.6023, -33.0944, 0.29 ) }
    dend_79 { pt3dadd( -55.7767, 99.1837, -32.5706, 0.29 ) }
    dend_79 { pt3dadd( -56.2682, 100.176, -31.6978, 0.44 ) }
    dend_79 { pt3dadd( -56.6049, 100.987, -30.9954, 0.44 ) }
    dend_79 { pt3dadd( -56.8939, 102.04, -30.1584, 0.52 ) }
    dend_79 { pt3dadd( -57.0111, 102.888, -29.4873, 0.37 ) }
    dend_79 { pt3dadd( -57.0196, 103.572, -28.9405, 0.37 ) }
    dend_79 { pt3dadd( -56.932, 104.32, -28.3664, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 29.9772, 29.0984, -5.39007, 0.29 ) }
    dend_69 { pt3dadd( 30.5448, 29.024, -4.28849, 0.29 ) }
    dend_69 { pt3dadd( 31.0931, 28.9701, -3.37641, 0.59 ) }
    dend_69 { pt3dadd( 31.6439, 28.9049, -2.57846, 0.74 ) }
    dend_69 { pt3dadd( 31.95, 28.8694, -2.17124, 0.37 ) }
    dend_69 { pt3dadd( 32.4151, 28.835, -1.5099, 0.37 ) }
    dend_69 { pt3dadd( 32.6697, 28.8265, -1.11968, 0.66 ) }
    dend_69 { pt3dadd( 32.857, 28.8473, -0.817477, 0.96 ) }
    dend_69 { pt3dadd( 33.1068, 28.9242, -0.25902, 1.25 ) }
    dend_69 { pt3dadd( 33.4514, 29.1239, 0.779929, 0.37 ) }
    dend_69 { pt3dadd( 33.7398, 29.3997, 1.85416, 0.37 ) }
    dend_69 { pt3dadd( 33.8306, 29.5136, 2.22716, 0.37 ) }
    dend_69 { pt3dadd( 34.0372, 29.7683, 2.98548, 0.74 ) }
    dend_69 { pt3dadd( 34.4391, 30.1795, 4.14453, 0.66 ) }
    dend_69 { pt3dadd( 34.7985, 30.4783, 4.93377, 0.52 ) }
    dend_69 { pt3dadd( 35.1104, 30.6498, 5.39242, 0.66 ) }
    dend_69 { pt3dadd( 35.5238, 30.7864, 5.80069, 0.66 ) }
    dend_69 { pt3dadd( 36.1092, 30.9143, 6.24257, 0.37 ) }
    dend_69 { pt3dadd( 36.8068, 30.9963, 6.64848, 0.52 ) }
    dend_69 { pt3dadd( 37.2018, 31.0093, 6.84072, 0.52 ) }
    dend_69 { pt3dadd( 37.8946, 31.0046, 7.16058, 0.66 ) }
    dend_69 { pt3dadd( 38.2848, 30.9882, 7.33557, 0.88 ) }
    dend_69 { pt3dadd( 38.8063, 30.967, 7.55575, 0.88 ) }
    dend_69 { pt3dadd( 39.4073, 30.9666, 7.83656, 0.66 ) }
    dend_69 { pt3dadd( 40.157, 31.0078, 8.1973, 0.29 ) }
    dend_69 { pt3dadd( 40.8135, 31.0822, 8.50392, 0.29 ) }
    dend_69 { pt3dadd( 41.8081, 31.2808, 8.94443, 0.88 ) }
    dend_69 { pt3dadd( 42.0834, 31.3479, 9.06349, 0.88 ) }
    dend_69 { pt3dadd( 43.1882, 31.6551, 9.5181, 0.29 ) }
    dend_69 { pt3dadd( 44.043, 31.9223, 9.84086, 0.29 ) }
    dend_69 { pt3dadd( 44.8629, 32.2034, 10.1227, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 45.8401, 32.5598, 10.4366, 0.29 ) }
    dend_69 { pt3dadd( 46.5511, 32.8236, 10.661, 0.29 ) }
    dend_69 { pt3dadd( 47.2115, 33.053, 10.8547, 0.81 ) }
    dend_69 { pt3dadd( 47.735, 33.2182, 10.9778, 0.81 ) }
    dend_69 { pt3dadd( 48.1999, 33.357, 11.0845, 0.81 ) }
    dend_69 { pt3dadd( 48.9053, 33.5511, 11.2442, 0.59 ) }
    dend_69 { pt3dadd( 49.7262, 33.7455, 11.4354, 0.29 ) }
    dend_69 { pt3dadd( 50.449, 33.9431, 11.6106, 0.81 ) }
    dend_69 { pt3dadd( 51.1617, 34.1412, 11.7899, 0.22 ) }
    dend_69 { pt3dadd( 51.7946, 34.305, 11.9496, 0.22 ) }
    dend_69 { pt3dadd( 52.1971, 34.3921, 12.0447, 0.52 ) }
    dend_69 { pt3dadd( 52.7573, 34.4849, 12.1445, 0.22 ) }
    dend_69 { pt3dadd( 58.1033, 36.0291, 16.2719, 0.22 ) }
    dend_69 { pt3dadd( 62.9601, 37.8057, 20.8771, 0.22 ) }
    dend_69 { pt3dadd( 68.7487, 38.3475, 24.6613, 0.22 ) }
    dend_69 { pt3dadd( 74.5266, 37.7134, 28.4312, 0.22 ) }
    dend_69 { pt3dadd( 80.2429, 37.9264, 32.3548, 0.22 ) }
    dend_69 { pt3dadd( 84.7601, 37.4548, 37.5872, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 29.9772, 29.0984, -5.39007, 0.81 ) }
    dend_54 { pt3dadd( 31.9814, 29.1441, -4.98357, 0.81 ) }
    dend_54 { pt3dadd( 32.9218, 29.075, -4.85514, 1.03 ) }
    dend_54 { pt3dadd( 35.3878, 28.8181, -4.75999, 0.96 ) }
    dend_54 { pt3dadd( 36.7305, 28.6988, -4.77783, 0.96 ) }
    dend_54 { pt3dadd( 38.2919, 28.6328, -4.84092, 0.59 ) }
    dend_54 { pt3dadd( 39.3767, 28.645, -4.90329, 0.66 ) }
    dend_54 { pt3dadd( 40.826, 28.677, -5.03301, 0.66 ) }
    dend_54 { pt3dadd( 42.5444, 28.8677, -5.27491, 0.59 ) }
    dend_54 { pt3dadd( 43.4359, 29.1228, -5.4883, 0.81 ) }
    dend_54 { pt3dadd( 44.5645, 29.6455, -5.7685, 0.96 ) }
    dend_54 { pt3dadd( 45.6057, 30.2568, -6.01964, 1.25 ) }
    dend_54 { pt3dadd( 46.3603, 30.7165, -6.18892, 1.4 ) }
    dend_54 { pt3dadd( 47.3143, 31.2692, -6.36151, 1.4 ) }
    dend_54 { pt3dadd( 48.8809, 32.0179, -6.57242, 0.59 ) }
    dend_54 { pt3dadd( 49.518, 32.2143, -6.65519, 0.59 ) }
    dend_54 { pt3dadd( 50.842, 32.3719, -6.82442, 0.59 ) }
    dend_54 { pt3dadd( 52.288, 32.331, -7.00255, 1.03 ) }
    dend_54 { pt3dadd( 53.3156, 32.1973, -7.12135, 1.18 ) }
    dend_54 { pt3dadd( 54.2148, 32.0039, -7.18172, 1.18 ) }
    dend_54 { pt3dadd( 55.6765, 31.5971, -7.2044, 0.74 ) }
    dend_54 { pt3dadd( 57.0938, 31.1621, -7.13732, 0.66 ) }
    dend_54 { pt3dadd( 57.7713, 30.9546, -7.07661, 0.96 ) }
    dend_54 { pt3dadd( 58.6571, 30.7195, -6.987, 0.96 ) }
    dend_54 { pt3dadd( 60.2466, 30.3721, -6.83154, 1.03 ) }
    dend_54 { pt3dadd( 60.9982, 30.2539, -6.75551, 1.03 ) }
    dend_54 { pt3dadd( 63.0896, 30.1488, -6.55482, 0.59 ) }
    dend_54 { pt3dadd( 64.2231, 30.2133, -6.4638, 0.59 ) }
    dend_54 { pt3dadd( 66.2399, 30.4789, -6.35507, 0.59 ) }
    dend_54 { pt3dadd( 67.2232, 30.6785, -6.33467, 0.81 ) }
    dend_54 { pt3dadd( 68.1371, 30.9488, -6.35755, 0.81 ) }
    dend_54 { pt3dadd( 69.9885, 31.6491, -6.49235, 0.37 ) }
    dend_54 { pt3dadd( 71.1448, 32.1348, -6.64441, 0.66 ) }
    dend_54 { pt3dadd( 72.1687, 32.5308, -6.79254, 0.74 ) }
    dend_54 { pt3dadd( 72.8082, 32.7415, -6.90362, 0.74 ) }
    dend_54 { pt3dadd( 74.0514, 33.0299, -7.16033, 0.74 ) }
    dend_54 { pt3dadd( 75.3766, 33.1668, -7.47527, 0.52 ) }
    dend_54 { pt3dadd( 77.2106, 33.1251, -7.95762, 0.74 ) }
    dend_54 { pt3dadd( 78.5937, 33.0062, -8.29973, 0.88 ) }
    dend_54 { pt3dadd( 79.3571, 32.9236, -8.4466, 0.96 ) }
    dend_54 { pt3dadd( 80.1224, 32.844, -8.54353, 1.18 ) }
    dend_54 { pt3dadd( 81.2989, 32.7493, -8.60376, 1.18 ) }
    dend_54 { pt3dadd( 82.2071, 32.7417, -8.55574, 0.66 ) }
    dend_54 { pt3dadd( 83.8497, 32.9609, -8.26161, 0.59 ) }
    dend_54 { pt3dadd( 84.9588, 33.2344, -7.8652, 0.59 ) }
    dend_54 { pt3dadd( 85.7076, 33.4728, -7.50809, 0.74 ) }
    dend_54 { pt3dadd( 86.3024, 33.7015, -7.16421, 0.74 ) }
    dend_54 { pt3dadd( 86.8966, 33.9539, -6.7725, 0.74 ) }
    dend_54 { pt3dadd( 88.0436, 34.4637, -5.92961, 0.59 ) }
    dend_54 { pt3dadd( 89.5822, 35.1698, -4.684, 0.96 ) }
    dend_54 { pt3dadd( 90.316, 35.495, -4.08469, 1.25 ) }
    dend_54 { pt3dadd( 90.7178, 35.6585, -3.73532, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 68.4378, 39.5501, 60.0876, 0.29 ) }
    dend_52 { pt3dadd( 72.8311, 41.7746, 64.554, 0.29 ) }
    dend_52 { pt3dadd( 77.7586, 44.236, 68.2735, 0.29 ) }
    dend_52 { pt3dadd( 82.6869, 47.3082, 71.46, 0.29 ) }
    dend_52 { pt3dadd( 87.1387, 49.7774, 75.7235, 0.29 ) }
    dend_52 { pt3dadd( 91.1719, 52.9308, 79.8999, 0.29 ) }
    dend_52 { pt3dadd( 94.2878, 56.2306, 84.6745, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 68.4378, 39.5501, 60.0876, 0.29 ) }
    dend_51 { pt3dadd( 75.6359, 42.8742, 65.9004, 0.29 ) }
    dend_51 { pt3dadd( 81.421, 47.6736, 72.1199, 0.29 ) }
    dend_51 { pt3dadd( 85.9862, 52.8422, 78.9738, 0.29 ) }
    dend_51 { pt3dadd( 91.4886, 56.5178, 86.206, 0.29 ) }
    dend_51 { pt3dadd( 96.5895, 60.6663, 93.4445, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -24.3974, -8.00969, -25.5614, 0.74 ) }
    dend_46 { pt3dadd( -26.2065, -9.24059, -25.984, 0.74 ) }
    dend_46 { pt3dadd( -27.1797, -9.72543, -26.171, 0.74 ) }
    dend_46 { pt3dadd( -28.004, -10.0341, -26.3383, 0.74 ) }
    dend_46 { pt3dadd( -29.3075, -10.3, -26.7546, 0.66 ) }
    dend_46 { pt3dadd( -30.2555, -10.3648, -27.1542, 0.66 ) }
    dend_46 { pt3dadd( -31.2602, -10.3615, -27.6342, 0.59 ) }
    dend_46 { pt3dadd( -31.9538, -10.2337, -27.9711, 1.25 ) }
    dend_46 { pt3dadd( -32.5174, -10.0801, -28.2816, 1.25 ) }
    dend_46 { pt3dadd( -34.2359, -9.58385, -29.3152, 0.66 ) }
    dend_46 { pt3dadd( -35.0904, -9.36841, -29.854, 0.66 ) }
    dend_46 { pt3dadd( -35.5516, -9.31877, -30.1565, 0.96 ) }
    dend_46 { pt3dadd( -36.236, -9.38298, -30.6047, 0.96 ) }
    dend_46 { pt3dadd( -36.7133, -9.55329, -31.0322, 0.96 ) }
    dend_46 { pt3dadd( -37.4391, -10.1023, -32.0939, 0.74 ) }
    dend_46 { pt3dadd( -37.8235, -10.5666, -32.9159, 0.52 ) }
    dend_46 { pt3dadd( -38.2074, -11.1457, -33.9461, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -38.4544, -11.5724, -34.71, 1.03 ) }
    dend_46 { pt3dadd( -39.3512, -13.2891, -37.8353, 1.25 ) }
    dend_46 { pt3dadd( -39.9581, -14.5034, -40.1047, 0.66 ) }
    dend_46 { pt3dadd( -40.2592, -15.0852, -41.2273, 0.66 ) }
    dend_46 { pt3dadd( -40.4503, -15.3784, -41.8161, 1.11 ) }
    dend_46 { pt3dadd( -40.627, -15.553, -42.168, 1.33 ) }
    dend_46 { pt3dadd( -40.8929, -15.7287, -42.4648, 1.18 ) }
    dend_46 { pt3dadd( -41.3317, -15.9432, -42.6297, 1.18 ) }
    dend_46 { pt3dadd( -42.3438, -16.4138, -42.8635, 0.59 ) }
    dend_46 { pt3dadd( -43.3859, -16.9681, -43.1372, 0.52 ) }
    dend_46 { pt3dadd( -44.2058, -17.484, -43.4238, 0.52 ) }
    dend_46 { pt3dadd( -44.8818, -17.9991, -43.7844, 0.81 ) }
    dend_46 { pt3dadd( -45.5396, -18.6134, -44.3059, 0.66 ) }
    dend_46 { pt3dadd( -46.1542, -19.2595, -44.9145, 0.66 ) }
    dend_46 { pt3dadd( -46.5957, -19.775, -45.4476, 1.33 ) }
    dend_46 { pt3dadd( -46.8913, -20.1387, -45.8346, 1.33 ) }
    dend_46 { pt3dadd( -47.8132, -21.2798, -47.064, 0.66 ) }
    dend_46 { pt3dadd( -48.6253, -22.2506, -48.1092, 0.52 ) }
    dend_46 { pt3dadd( -49.0102, -22.6738, -48.5768, 0.52 ) }
    dend_46 { pt3dadd( -49.5141, -23.1452, -49.0464, 0.96 ) }
    dend_46 { pt3dadd( -49.878, -23.4438, -49.2895, 1.18 ) }
    dend_46 { pt3dadd( -50.1427, -23.6453, -49.3911, 1.18 ) }
    dend_46 { pt3dadd( -50.7008, -24.0789, -49.4478, 0.81 ) }
    dend_46 { pt3dadd( -51.4687, -24.7207, -49.3918, 0.74 ) }
    dend_46 { pt3dadd( -52.4238, -25.5965, -49.223, 0.59 ) }
    dend_46 { pt3dadd( -52.9036, -26.0304, -49.0996, 0.74 ) }
    dend_46 { pt3dadd( -53.5447, -26.5816, -48.8983, 0.74 ) }
    dend_46 { pt3dadd( -54.2339, -27.1123, -48.6692, 0.59 ) }
    dend_46 { pt3dadd( -54.8847, -27.5813, -48.4414, 0.44 ) }
    dend_46 { pt3dadd( -55.6145, -28.0999, -48.1769, 0.44 ) }
    dend_46 { pt3dadd( -56.3173, -28.5942, -47.9548, 0.44 ) }
    dend_46 { pt3dadd( -57.0592, -29.1684, -47.7275, 0.44 ) }
    dend_46 { pt3dadd( -58.2788, -30.2263, -47.3665, 0.44 ) }
    dend_46 { pt3dadd( -58.5829, -30.5465, -47.2725, 0.96 ) }
    dend_46 { pt3dadd( -59.1403, -31.3371, -47.119, 1.18 ) }
    dend_46 { pt3dadd( -59.4964, -32.0579, -47.0375, 0.81 ) }
    dend_46 { pt3dadd( -59.8965, -33.2717, -47.0253, 0.59 ) }
    dend_46 { pt3dadd( -60.0311, -33.8084, -47.0823, 0.74 ) }
    dend_46 { pt3dadd( -60.2383, -34.6784, -47.2366, 0.66 ) }
    dend_46 { pt3dadd( -60.5085, -35.5258, -47.428, 0.66 ) }
    dend_46 { pt3dadd( -60.7699, -36.1476, -47.5959, 0.81 ) }
    dend_46 { pt3dadd( -61.3534, -37.2789, -47.9084, 0.59 ) }
    dend_46 { pt3dadd( -61.9284, -38.2633, -48.1673, 0.52 ) }
    dend_46 { pt3dadd( -62.468, -39.2181, -48.3882, 0.81 ) }
    dend_46 { pt3dadd( -62.9439, -40.1485, -48.559, 1.4 ) }
    dend_46 { pt3dadd( -63.1622, -40.7024, -48.5896, 1.69 ) }
    dend_46 { pt3dadd( -63.4618, -41.788, -48.5132, 0.52 ) }
    dend_46 { pt3dadd( -63.6679, -42.6902, -48.4532, 0.44 ) }
    dend_46 { pt3dadd( -63.8434, -43.6186, -48.5219, 0.44 ) }
    dend_46 { pt3dadd( -63.9737, -44.2846, -48.7133, 0.29 ) }
    dend_46 { pt3dadd( -64.2996, -45.5342, -49.2688, 1.4 ) }
    dend_46 { pt3dadd( -64.3846, -45.7836, -49.4013, 1.4 ) }
    dend_46 { pt3dadd( -65.3404, -47.997, -50.8878, 0.52 ) }
    dend_46 { pt3dadd( -65.9661, -49.2175, -51.8086, 0.52 ) }
    dend_46 { pt3dadd( -66.3247, -49.8473, -52.3081, 0.52 ) }
    dend_46 { pt3dadd( -66.8686, -50.7843, -53.0502, 0.74 ) }
    dend_46 { pt3dadd( -67.2264, -51.4116, -53.5285, 0.88 ) }
    dend_46 { pt3dadd( -67.9771, -52.8322, -54.4424, 0.44 ) }
    dend_46 { pt3dadd( -68.3184, -53.5395, -54.7763, 0.59 ) }
    dend_46 { pt3dadd( -68.7202, -54.3267, -55.1136, 0.59 ) }
    dend_46 { pt3dadd( -69.1791, -55.1235, -55.4891, 0.37 ) }
    dend_46 { pt3dadd( -69.4697, -55.6043, -55.7321, 0.59 ) }
    dend_46 { pt3dadd( -70.0207, -56.4567, -56.1565, 0.81 ) }
    dend_46 { pt3dadd( -70.5641, -57.2237, -56.4749, 1.18 ) }
    dend_46 { pt3dadd( -70.9198, -57.6936, -56.677, 1.18 ) }
    dend_46 { pt3dadd( -71.9051, -58.8593, -57.2609, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -24.3974, -8.00969, -25.5614, 0.81 ) }
    dend_45 { pt3dadd( -24.3745, -5.42051, -26.4096, 0.81 ) }
    dend_45 { pt3dadd( -24.4882, -4.41537, -26.6551, 0.81 ) }
    dend_45 { pt3dadd( -24.8124, -3.14399, -26.8999, 0.81 ) }
    dend_45 { pt3dadd( -25.3073, -2.08514, -27.079, 0.88 ) }
    dend_45 { pt3dadd( -26.0547, -1.16588, -27.2647, 0.66 ) }
    dend_45 { pt3dadd( -27.5721, 0.193545, -27.6259, 0.59 ) }
    dend_45 { pt3dadd( -28.8028, 0.746466, -27.8501, 0.59 ) }
    dend_45 { pt3dadd( -29.9739, 0.993367, -28.2164, 0.59 ) }
    dend_45 { pt3dadd( -31.5849, 1.05512, -28.9173, 0.74 ) }
    dend_45 { pt3dadd( -33.3438, 0.883287, -29.9632, 1.03 ) }
    dend_45 { pt3dadd( -33.9607, 0.785662, -30.3911, 1.62 ) }
    dend_45 { pt3dadd( -34.7897, 0.639494, -31.0392, 1.92 ) }
    dend_45 { pt3dadd( -37.3848, 0.26781, -33.0743, 0.88 ) }
    dend_45 { pt3dadd( -38.3713, 0.158279, -33.8494, 0.66 ) }
    dend_45 { pt3dadd( -39.8181, 0.0232241, -34.9429, 0.66 ) }
    dend_45 { pt3dadd( -41.7716, -0.128228, -36.3482, 0.66 ) }
    dend_45 { pt3dadd( -42.6336, -0.168028, -36.9523, 0.66 ) }
    dend_45 { pt3dadd( -44.4774, -0.11826, -38.1851, 0.66 ) }
    dend_45 { pt3dadd( -45.625, 0.0114925, -38.9256, 0.44 ) }
    dend_45 { pt3dadd( -47.0324, 0.248801, -39.9268, 0.44 ) }
    dend_45 { pt3dadd( -48.0312, 0.465509, -40.7352, 0.44 ) }
    dend_45 { pt3dadd( -49.1655, 0.743114, -41.8489, 0.66 ) }
    dend_45 { pt3dadd( -49.9403, 0.950682, -42.6835, 0.66 ) }
    dend_45 { pt3dadd( -50.8289, 1.25539, -43.698, 0.66 ) }
    dend_45 { pt3dadd( -51.582, 1.58707, -44.5188, 0.66 ) }
    dend_45 { pt3dadd( -52.4131, 2.07185, -45.4009, 0.44 ) }
    dend_45 { pt3dadd( -52.9768, 2.45473, -46.0049, 0.74 ) }
    dend_45 { pt3dadd( -53.8063, 3.06221, -46.883, 0.74 ) }
    dend_45 { pt3dadd( -54.5413, 3.61515, -47.6615, 0.74 ) }
    dend_45 { pt3dadd( -55.1689, 4.09232, -48.3041, 0.74 ) }
    dend_45 { pt3dadd( -55.8926, 4.63685, -49.0167, 0.37 ) }
    dend_45 { pt3dadd( -57.0274, 5.27997, -50.0747, 0.37 ) }
    dend_45 { pt3dadd( -57.5645, 5.42511, -50.534, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -58.1852, 5.41576, -51.0464, 0.88 ) }
    dend_45 { pt3dadd( -59.0549, 5.28336, -51.7338, 1.18 ) }
    dend_45 { pt3dadd( -59.7757, 5.11428, -52.3406, 1.33 ) }
    dend_45 { pt3dadd( -61.6259, 4.5856, -53.9898, 0.44 ) }
    dend_45 { pt3dadd( -62.9285, 4.21196, -55.2779, 0.44 ) }
    dend_45 { pt3dadd( -63.915, 3.96407, -56.4611, 0.44 ) }
    dend_45 { pt3dadd( -64.7312, 3.86043, -57.6539, 0.88 ) }
    dend_45 { pt3dadd( -65.5031, 3.96231, -59.0359, 1.03 ) }
    dend_45 { pt3dadd( -65.7686, 4.12665, -59.6167, 1.03 ) }
    dend_45 { pt3dadd( -66.3356, 4.93923, -61.0058, 0.44 ) }
    dend_45 { pt3dadd( -66.659, 5.50641, -61.7948, 0.44 ) }
    dend_45 { pt3dadd( -67.0798, 6.16543, -62.5814, 0.44 ) }
    dend_45 { pt3dadd( -67.4779, 6.61927, -63.1586, 0.59 ) }
    dend_45 { pt3dadd( -68.2237, 7.22991, -63.9752, 0.59 ) }
    dend_45 { pt3dadd( -69.0652, 7.68348, -64.7368, 0.74 ) }
    dend_45 { pt3dadd( -70.7542, 8.1996, -65.9896, 0.37 ) }
    dend_45 { pt3dadd( -71.882, 8.34641, -66.7574, 0.37 ) }
    dend_45 { pt3dadd( -73.6379, 8.32327, -67.8796, 0.59 ) }
    dend_45 { pt3dadd( -74.3545, 8.22658, -68.3245, 0.88 ) }
    dend_45 { pt3dadd( -75.7884, 7.85427, -69.2251, 0.66 ) }
    dend_45 { pt3dadd( -76.7774, 7.52393, -69.8459, 0.74 ) }
    dend_45 { pt3dadd( -77.8528, 7.11887, -70.4892, 0.59 ) }
    dend_45 { pt3dadd( -78.7844, 6.72972, -71.0727, 0.52 ) }
    dend_45 { pt3dadd( -79.6546, 6.37018, -71.6203, 0.88 ) }
    dend_45 { pt3dadd( -81.2139, 5.79539, -72.6887, 0.59 ) }
    dend_45 { pt3dadd( -82.0923, 5.53421, -73.345, 0.44 ) }
    dend_45 { pt3dadd( -83.0327, 5.32358, -74.1107, 1.03 ) }
    dend_45 { pt3dadd( -83.6701, 5.23396, -74.657, 1.33 ) }
    dend_45 { pt3dadd( -84.0543, 5.2166, -74.9904, 1.4 ) }
    dend_45 { pt3dadd( -85.6561, 5.26423, -76.3244, 0.44 ) }
    dend_45 { pt3dadd( -86.3034, 5.30434, -76.8415, 0.44 ) }
    dend_45 { pt3dadd( -87.2571, 5.39664, -77.5737, 0.44 ) }
    dend_45 { pt3dadd( -88.2571, 5.53799, -78.3078, 0.44 ) }
    dend_45 { pt3dadd( -89.8747, 5.78225, -79.4936, 0.59 ) }
    dend_45 { pt3dadd( -90.9813, 5.9219, -80.4021, 0.88 ) }
    dend_45 { pt3dadd( -91.9585, 6.02855, -81.4062, 1.11 ) }
    dend_45 { pt3dadd( -93.1782, 6.15596, -82.8661, 0.52 ) }
    dend_45 { pt3dadd( -94.0185, 6.26984, -84.0101, 0.52 ) }
    dend_45 { pt3dadd( -94.6977, 6.38264, -85.0161, 1.03 ) }
    dend_45 { pt3dadd( -96.1787, 6.62273, -87.3786, 1.25 ) }
    dend_45 { pt3dadd( -97.9629, 6.83706, -90.1515, 0.52 ) }
    dend_45 { pt3dadd( -98.5892, 6.88987, -91.08, 0.59 ) }
    dend_45 { pt3dadd( -99.4516, 6.94076, -92.2598, 0.59 ) }
    dend_45 { pt3dadd( -100.841, 7.07527, -93.942, 0.44 ) }
    dend_45 { pt3dadd( -101.815, 7.23362, -94.9356, 0.44 ) }
    dend_45 { pt3dadd( -103.25, 7.59937, -96.2111, 0.44 ) }
    dend_45 { pt3dadd( -104.0, 7.84424, -96.8826, 0.44 ) }
    dend_45 { pt3dadd( -104.95, 8.23468, -98.0207, 0.66 ) }
    dend_45 { pt3dadd( -105.547, 8.56862, -99.0157, 0.88 ) }
    dend_45 { pt3dadd( -105.817, 8.80171, -99.6279, 0.88 ) }
    dend_45 { pt3dadd( -106.475, 9.63809, -101.552, 0.52 ) }
    dend_45 { pt3dadd( -106.806, 10.2459, -102.823, 0.52 ) }
    dend_45 { pt3dadd( -107.175, 11.1649, -104.805, 0.81 ) }
    dend_45 { pt3dadd( -107.363, 11.8688, -106.302, 0.44 ) }
    dend_45 { pt3dadd( -107.438, 12.2943, -107.22, 0.44 ) }
    dend_45 { pt3dadd( -107.455, 12.8383, -108.359, 0.74 ) }
    dend_45 { pt3dadd( -107.397, 13.2511, -109.134, 0.96 ) }
    dend_45 { pt3dadd( -107.068, 14.3486, -110.85, 0.66 ) }
    dend_45 { pt3dadd( -106.822, 15.035, -111.88, 0.44 ) }
    dend_45 { pt3dadd( -106.569, 15.7687, -113.06, 0.44 ) }
    dend_45 { pt3dadd( -106.413, 16.4511, -114.305, 0.44 ) }
    dend_45 { pt3dadd( -106.422, 16.6864, -114.792, 0.44 ) }
    dend_45 { pt3dadd( -106.707, 17.2117, -115.951, 0.96 ) }
    dend_45 { pt3dadd( -107.826, 17.9083, -117.663, 0.66 ) }
    dend_45 { pt3dadd( -108.672, 18.2475, -118.608, 0.96 ) }
    dend_45 { pt3dadd( -109.099, 18.4038, -118.996, 1.25 ) }
    dend_45 { pt3dadd( -109.615, 18.5865, -119.416, 1.25 ) }
    dend_45 { pt3dadd( -110.425, 18.9052, -120.071, 1.25 ) }
    dend_45 { pt3dadd( -111.76, 19.5895, -121.247, 0.37 ) }
    dend_45 { pt3dadd( -112.482, 20.1907, -121.977, 0.37 ) }
    dend_45 { pt3dadd( -112.909, 20.6644, -122.534, 0.66 ) }
    dend_45 { pt3dadd( -113.226, 21.0539, -122.964, 0.81 ) }
    dend_45 { pt3dadd( -113.72, 21.6859, -123.593, 0.81 ) }
    dend_45 { pt3dadd( -114.5, 22.7084, -124.447, 0.44 ) }
    dend_45 { pt3dadd( -115.067, 23.4095, -124.91, 0.44 ) }
    dend_45 { pt3dadd( -116.176, 24.6193, -125.59, 0.44 ) }
    dend_45 { pt3dadd( -117.441, 25.9423, -126.231, 0.44 ) }
    dend_45 { pt3dadd( -118.411, 26.9636, -126.654, 0.66 ) }
    dend_45 { pt3dadd( -119.43, 28.0431, -127.031, 0.96 ) }
    dend_45 { pt3dadd( -120.472, 29.1548, -127.32, 0.59 ) }
    dend_45 { pt3dadd( -121.351, 30.1345, -127.532, 0.44 ) }
    dend_45 { pt3dadd( -122.253, 31.1621, -127.745, 0.44 ) }
    dend_45 { pt3dadd( -123.125, 32.1338, -128.017, 0.44 ) }
    dend_45 { pt3dadd( -123.904, 32.8782, -128.349, 0.44 ) }
    dend_45 { pt3dadd( -124.854, 33.5575, -128.861, 0.74 ) }
    dend_45 { pt3dadd( -125.348, 33.8138, -129.171, 0.74 ) }
    dend_45 { pt3dadd( -126.815, 34.3791, -130.101, 0.52 ) }
    dend_45 { pt3dadd( -127.498, 34.5889, -130.554, 0.59 ) }
    dend_45 { pt3dadd( -128.77, 34.9368, -131.437, 0.44 ) }
    dend_45 { pt3dadd( -129.703, 35.2265, -132.127, 0.44 ) }
    dend_45 { pt3dadd( -130.816, 35.6711, -133.085, 0.37 ) }
    dend_45 { pt3dadd( -131.881, 36.2254, -134.076, 0.52 ) }
    dend_45 { pt3dadd( -132.678, 36.7551, -134.895, 1.11 ) }
    dend_45 { pt3dadd( -133.269, 37.2072, -135.601, 1.25 ) }
    dend_45 { pt3dadd( -133.934, 37.7581, -136.539, 0.37 ) }
    dend_45 { pt3dadd( -134.863, 38.5115, -138.027, 0.37 ) }
    dend_45 { pt3dadd( -135.498, 38.9602, -139.11, 0.29 ) }
    dend_45 { pt3dadd( -136.008, 39.2607, -140.038, 0.29 ) }
    dend_45 { pt3dadd( -136.926, 39.7537, -141.781, 0.59 ) }
    dend_45 { pt3dadd( -137.637, 40.1488, -143.21, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -138.031, 40.3878, -144.029, 0.29 ) }
    dend_45 { pt3dadd( -138.334, 40.6196, -144.639, 0.37 ) }
    dend_45 { pt3dadd( -138.79, 41.0761, -145.574, 0.37 ) }
    dend_45 { pt3dadd( -139.402, 41.8256, -146.712, 0.44 ) }
    dend_45 { pt3dadd( -139.916, 42.5538, -147.514, 0.44 ) }
    dend_45 { pt3dadd( -140.414, 43.289, -148.174, 0.44 ) }
    dend_45 { pt3dadd( -141.046, 44.1384, -148.909, 0.37 ) }
    dend_45 { pt3dadd( -141.322, 44.4547, -149.181, 0.37 ) }
    dend_45 { pt3dadd( -142.084, 45.1776, -149.782, 0.88 ) }
    dend_45 { pt3dadd( -142.553, 45.5537, -150.096, 1.11 ) }
    dend_45 { pt3dadd( -143.411, 46.196, -150.64, 1.11 ) }
    dend_45 { pt3dadd( -144.748, 47.242, -151.491, 0.37 ) }
    dend_45 { pt3dadd( -145.759, 48.1129, -152.157, 0.37 ) }
    dend_45 { pt3dadd( -146.312, 48.6767, -152.546, 0.66 ) }
    dend_45 { pt3dadd( -147.053, 49.6823, -153.223, 0.66 ) }
    dend_45 { pt3dadd( -147.556, 50.614, -153.847, 0.37 ) }
    dend_45 { pt3dadd( -147.894, 51.5402, -154.475, 0.52 ) }
    dend_45 { pt3dadd( -147.987, 51.9309, -154.744, 0.66 ) }
    dend_45 { pt3dadd( -148.096, 52.5566, -155.167, 0.66 ) }
    dend_45 { pt3dadd( -148.377, 54.2871, -156.313, 0.37 ) }
    dend_45 { pt3dadd( -148.544, 55.0643, -156.779, 0.37 ) }
    dend_45 { pt3dadd( -148.829, 55.7896, -157.115, 0.37 ) }
    dend_45 { pt3dadd( -149.216, 56.4436, -157.315, 0.88 ) }
    dend_45 { pt3dadd( -149.923, 57.3899, -157.498, 0.81 ) }
    dend_45 { pt3dadd( -150.298, 57.8182, -157.547, 0.81 ) }
    dend_45 { pt3dadd( -151.279, 58.8487, -157.602, 0.29 ) }
    dend_45 { pt3dadd( -152.579, 60.1784, -157.653, 0.29 ) }
    dend_45 { pt3dadd( -153.373, 61.0753, -157.623, 0.52 ) }
    dend_45 { pt3dadd( -154.303, 62.2327, -157.583, 0.44 ) }
    dend_45 { pt3dadd( -154.747, 62.818, -157.568, 0.44 ) }
    dend_45 { pt3dadd( -155.318, 63.6322, -157.528, 0.81 ) }
    dend_45 { pt3dadd( -155.954, 64.6753, -157.471, 0.81 ) }
    dend_45 { pt3dadd( -157.054, 66.8398, -157.348, 0.29 ) }
    dend_45 { pt3dadd( -157.476, 67.7501, -157.296, 0.44 ) }
    dend_45 { pt3dadd( -157.869, 68.6319, -157.21, 0.29 ) }
    dend_45 { pt3dadd( -158.317, 69.5794, -157.121, 0.29 ) }
    dend_45 { pt3dadd( -158.929, 70.7652, -157.039, 0.29 ) }
    dend_45 { pt3dadd( -159.415, 71.6249, -157.022, 0.29 ) }
    dend_45 { pt3dadd( -160.013, 72.5731, -157.046, 0.59 ) }
    dend_45 { pt3dadd( -161.181, 74.3769, -157.061, 0.22 ) }
    dend_45 { pt3dadd( -161.939, 75.5266, -157.07, 0.22 ) }
    dend_45 { pt3dadd( -162.358, 76.1094, -157.062, 0.52 ) }
    dend_45 { pt3dadd( -162.771, 76.6097, -157.028, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -88.4248, -49.3194, 83.988, 0.29 ) }
    dend_43 { pt3dadd( -95.6758, -53.8775, 90.7986, 0.29 ) }
    dend_43 { pt3dadd( -101.57, -60.2015, 97.3588, 0.29 ) }
    dend_43 { pt3dadd( -107.075, -66.5034, 104.278, 0.29 ) }
    dend_43 { pt3dadd( -112.08, -73.452, 110.885, 0.29 ) }
    dend_43 { pt3dadd( -115.593, -81.1032, 117.611, 0.29 ) }
    dend_43 { pt3dadd( -120.022, -88.5166, 124.074, 0.29 ) }
    dend_43 { pt3dadd( -124.486, -95.9392, 130.501, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -88.4248, -49.3194, 83.988, 0.29 ) }
    dend_42 { pt3dadd( -94.7394, -52.6946, 89.4908, 0.29 ) }
    dend_42 { pt3dadd( -100.98, -57.1004, 94.2173, 0.29 ) }
    dend_42 { pt3dadd( -106.561, -61.9791, 99.2419, 0.29 ) }
    dend_42 { pt3dadd( -111.33, -67.1018, 104.804, 0.29 ) }
    dend_42 { pt3dadd( -115.655, -72.7508, 110.159, 0.29 ) }
    dend_42 { pt3dadd( -119.051, -79.2904, 115.039, 0.29 ) }
    dend_42 { pt3dadd( -123.136, -85.0683, 120.43, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -9.27773, -55.1369, 16.7796, 0.66 ) }
    dend_34 { pt3dadd( -10.2501, -57.7642, 15.7291, 0.66 ) }
    dend_34 { pt3dadd( -10.4976, -58.462, 15.4775, 1.03 ) }
    dend_34 { pt3dadd( -10.7443, -59.1932, 15.3083, 1.03 ) }
    dend_34 { pt3dadd( -11.1942, -60.593, 15.1238, 1.03 ) }
    dend_34 { pt3dadd( -11.4955, -61.6554, 15.0642, 1.03 ) }
    dend_34 { pt3dadd( -11.8118, -62.9556, 15.0729, 0.81 ) }
    dend_34 { pt3dadd( -12.0127, -64.1233, 15.2945, 0.81 ) }
    dend_34 { pt3dadd( -12.1305, -65.8419, 15.7655, 1.4 ) }
    dend_34 { pt3dadd( -12.1182, -66.5803, 16.021, 1.62 ) }
    dend_34 { pt3dadd( -12.0091, -67.6851, 16.506, 1.4 ) }
    dend_34 { pt3dadd( -11.8806, -68.4146, 16.8514, 1.92 ) }
    dend_34 { pt3dadd( -11.636, -69.4062, 17.3317, 1.4 ) }
    dend_34 { pt3dadd( -11.1743, -70.9085, 18.0681, 1.69 ) }
    dend_34 { pt3dadd( -10.8307, -71.9125, 18.5069, 1.11 ) }
    dend_34 { pt3dadd( -10.3714, -73.2596, 19.0587, 0.81 ) }
    dend_34 { pt3dadd( -10.1693, -73.8958, 19.2995, 1.11 ) }
    dend_34 { pt3dadd( -9.95654, -74.6555, 19.5579, 1.25 ) }
    dend_34 { pt3dadd( -9.57219, -76.3478, 20.0775, 0.96 ) }
    dend_34 { pt3dadd( -9.45413, -77.205, 20.3016, 0.74 ) }
    dend_34 { pt3dadd( -9.42768, -78.0256, 20.4786, 0.81 ) }
    dend_34 { pt3dadd( -9.58259, -79.2726, 20.6605, 0.52 ) }
    dend_34 { pt3dadd( -9.81863, -80.1651, 20.7314, 0.88 ) }
    dend_34 { pt3dadd( -10.1106, -80.9188, 20.7074, 0.88 ) }
    dend_34 { pt3dadd( -10.5118, -81.7471, 20.5478, 0.88 ) }
    dend_34 { pt3dadd( -10.8837, -82.4826, 20.3341, 0.66 ) }
    dend_34 { pt3dadd( -11.244, -83.2724, 20.0065, 0.66 ) }
    dend_34 { pt3dadd( -11.6438, -84.3881, 19.3532, 0.88 ) }
    dend_34 { pt3dadd( -11.8404, -85.1337, 18.8248, 1.33 ) }
    dend_34 { pt3dadd( -11.9445, -85.7065, 18.3947, 1.47 ) }
    dend_34 { pt3dadd( -12.0194, -86.2461, 17.9898, 1.62 ) }
    dend_34 { pt3dadd( -12.1693, -87.3474, 17.2181, 0.74 ) }
    dend_34 { pt3dadd( -12.3582, -88.5984, 16.5025, 0.74 ) }
    dend_34 { pt3dadd( -12.5627, -89.5723, 16.1087, 0.74 ) }
    dend_34 { pt3dadd( -12.7615, -90.3475, 15.9393, 0.74 ) }
    dend_34 { pt3dadd( -13.0491, -91.4182, 15.8738, 0.66 ) }
    dend_34 { pt3dadd( -13.313, -92.5325, 15.9731, 0.66 ) }
    dend_34 { pt3dadd( -13.605, -94.1441, 16.3438, 0.96 ) }
    dend_34 { pt3dadd( -13.6854, -94.9754, 16.6123, 0.88 ) }
    dend_34 { pt3dadd( -13.6797, -95.7222, 16.8739, 0.88 ) }
    dend_34 { pt3dadd( -13.5266, -97.1184, 17.3481, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -13.2692, -98.4041, 17.7633, 1.18 ) }
    dend_34 { pt3dadd( -13.1215, -99.0341, 17.9228, 1.62 ) }
    dend_34 { pt3dadd( -12.9658, -99.7439, 18.0417, 1.62 ) }
    dend_34 { pt3dadd( -12.7844, -100.746, 18.1805, 0.96 ) }
    dend_34 { pt3dadd( -12.6848, -101.522, 18.2749, 0.96 ) }
    dend_34 { pt3dadd( -12.6222, -102.695, 18.3983, 0.66 ) }
    dend_34 { pt3dadd( -12.7038, -104.236, 18.5209, 0.52 ) }
    dend_34 { pt3dadd( -12.8891, -105.619, 18.6567, 0.59 ) }
    dend_34 { pt3dadd( -13.2393, -107.208, 18.8438, 0.74 ) }
    dend_34 { pt3dadd( -13.3673, -107.621, 18.905, 1.11 ) }
    dend_34 { pt3dadd( -13.6975, -108.41, 19.0795, 1.25 ) }
    dend_34 { pt3dadd( -14.388, -109.672, 19.4549, 0.88 ) }
    dend_34 { pt3dadd( -14.8372, -110.3, 19.7155, 0.66 ) }
    dend_34 { pt3dadd( -15.3217, -110.854, 19.9938, 0.66 ) }
    dend_34 { pt3dadd( -15.8015, -111.343, 20.2492, 0.59 ) }
    dend_34 { pt3dadd( -16.7561, -112.33, 20.7125, 0.59 ) }
    dend_34 { pt3dadd( -17.2924, -112.898, 20.9339, 0.44 ) }
    dend_34 { pt3dadd( -17.9352, -113.635, 21.1341, 0.44 ) }
    dend_34 { pt3dadd( -18.4683, -114.322, 21.2283, 0.74 ) }
    dend_34 { pt3dadd( -18.8989, -114.959, 21.2615, 0.74 ) }
    dend_34 { pt3dadd( -19.2698, -115.567, 21.2497, 0.66 ) }
    dend_34 { pt3dadd( -19.7489, -116.456, 21.1611, 1.03 ) }
    dend_34 { pt3dadd( -20.1086, -117.164, 21.0939, 1.4 ) }
    dend_34 { pt3dadd( -20.4947, -117.959, 21.0255, 1.4 ) }
    dend_34 { pt3dadd( -20.8338, -118.649, 20.9729, 1.47 ) }
    dend_34 { pt3dadd( -21.3717, -119.74, 20.9103, 0.74 ) }
    dend_34 { pt3dadd( -21.789, -120.589, 20.8531, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -9.27773, -55.1369, 16.7796, 0.44 ) }
    dend_33 { pt3dadd( -8.86797, -55.6004, 17.7263, 0.44 ) }
    dend_33 { pt3dadd( -8.6413, -56.0389, 18.357, 0.44 ) }
    dend_33 { pt3dadd( -8.50781, -56.6552, 18.9305, 0.37 ) }
    dend_33 { pt3dadd( -8.3809, -57.9091, 19.7511, 0.59 ) }
    dend_33 { pt3dadd( -8.37201, -58.4132, 19.9862, 0.52 ) }
    dend_33 { pt3dadd( -8.40429, -59.0742, 20.2225, 0.44 ) }
    dend_33 { pt3dadd( -8.62115, -60.1706, 20.4999, 0.44 ) }
    dend_33 { pt3dadd( -8.93519, -61.1139, 20.6914, 0.44 ) }
    dend_33 { pt3dadd( -9.21733, -61.6973, 20.8039, 0.59 ) }
    dend_33 { pt3dadd( -9.68955, -62.3782, 20.9792, 0.59 ) }
    dend_33 { pt3dadd( -10.2952, -62.9604, 21.3005, 0.37 ) }
    dend_33 { pt3dadd( -11.2118, -63.61, 21.9016, 0.59 ) }
    dend_33 { pt3dadd( -12.0836, -64.1144, 22.5535, 0.88 ) }
    dend_33 { pt3dadd( -12.6498, -64.3995, 22.9869, 0.81 ) }
    dend_33 { pt3dadd( -13.8005, -64.9477, 23.8563, 1.03 ) }
    dend_33 { pt3dadd( -14.9517, -65.4983, 24.7069, 0.88 ) }
    dend_33 { pt3dadd( -15.9538, -66.028, 25.3917, 0.44 ) }
    dend_33 { pt3dadd( -16.7207, -66.5386, 25.8578, 0.44 ) }
    dend_33 { pt3dadd( -17.1842, -66.9359, 26.1046, 0.66 ) }
    dend_33 { pt3dadd( -17.7638, -67.526, 26.3216, 0.66 ) }
    dend_33 { pt3dadd( -18.2247, -68.0599, 26.3708, 0.66 ) }
    dend_33 { pt3dadd( -18.8352, -68.8238, 26.2886, 0.66 ) }
    dend_33 { pt3dadd( -19.347, -69.4825, 26.1735, 1.33 ) }
    dend_33 { pt3dadd( -19.5651, -69.7917, 26.1062, 1.47 ) }
    dend_33 { pt3dadd( -19.9836, -70.4026, 25.9686, 1.03 ) }
    dend_33 { pt3dadd( -20.5083, -71.1854, 25.8031, 0.81 ) }
    dend_33 { pt3dadd( -20.9573, -71.8459, 25.6757, 0.74 ) }
    dend_33 { pt3dadd( -21.503, -72.6366, 25.5465, 0.52 ) }
    dend_33 { pt3dadd( -21.8922, -73.217, 25.4748, 0.44 ) }
    dend_33 { pt3dadd( -26.0528, -79.6588, 29.1217, 0.44 ) }
    dend_33 { pt3dadd( -29.1324, -86.4591, 33.0775, 0.44 ) }
    dend_33 { pt3dadd( -32.7363, -93.3446, 36.4019, 0.44 ) }
    dend_33 { pt3dadd( -37.6278, -100.061, 38.1643, 0.44 ) }
    dend_33 { pt3dadd( -43.2836, -105.759, 41.1458, 0.44 ) }
    dend_33 { pt3dadd( -48.4573, -111.372, 45.0161, 0.44 ) }
    dend_33 { pt3dadd( -53.6239, -117.227, 48.4891, 0.44 ) }
    dend_33 { pt3dadd( -59.7683, -122.937, 50.2745, 0.44 ) }
    dend_33 { pt3dadd( -66.5691, -128.227, 50.0576, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.86483, -16.61, -3.24443, 1.47 ) }
    dend_17 { pt3dadd( 3.22607, -18.342, -3.68994, 1.47 ) }
    dend_17 { pt3dadd( 2.57338, -20.5701, -4.08474, 1.33 ) }
    dend_17 { pt3dadd( 2.14823, -22.3451, -4.26535, 1.55 ) }
    dend_17 { pt3dadd( 1.87205, -23.7846, -4.29032, 1.55 ) }
    dend_17 { pt3dadd( 1.64131, -25.2763, -4.13049, 1.77 ) }
    dend_17 { pt3dadd( 1.3787, -27.1846, -3.71952, 1.77 ) }
    dend_17 { pt3dadd( 1.26422, -28.3604, -3.29772, 2.14 ) }
    dend_17 { pt3dadd( 1.1747, -29.3411, -2.83281, 2.58 ) }
    dend_17 { pt3dadd( 1.04602, -30.5954, -2.20128, 2.36 ) }
    dend_17 { pt3dadd( 0.757721, -32.8994, -1.15788, 1.77 ) }
    dend_17 { pt3dadd( 0.459732, -34.8903, -0.474175, 1.47 ) }
    dend_17 { pt3dadd( 0.201893, -36.5632, -0.13407, 1.18 ) }
    dend_17 { pt3dadd( -0.0471907, -38.343, 0.0306017, 1.11 ) }
    dend_17 { pt3dadd( -0.231222, -39.9278, 0.00303811, 1.33 ) }
    dend_17 { pt3dadd( -0.407317, -42.0917, -0.284548, 1.25 ) }
    dend_17 { pt3dadd( -0.454889, -43.9865, -0.718593, 1.47 ) }
    dend_17 { pt3dadd( -0.399622, -45.6838, -1.16871, 1.62 ) }
    dend_17 { pt3dadd( -0.312324, -46.9574, -1.51377, 2.14 ) }
    dend_17 { pt3dadd( -0.256456, -47.8362, -1.73401, 2.58 ) }
    dend_17 { pt3dadd( -0.230128, -49.0997, -1.99647, 2.43 ) }
    dend_17 { pt3dadd( -0.311495, -51.1339, -2.33224, 2.14 ) }
    dend_17 { pt3dadd( -0.493232, -52.7771, -2.56567, 1.92 ) }
    dend_17 { pt3dadd( -0.807589, -54.4078, -2.76686, 1.47 ) }
    dend_17 { pt3dadd( -1.37291, -56.4234, -3.00009, 1.25 ) }
    dend_17 { pt3dadd( -1.96662, -58.0866, -3.12829, 1.11 ) }
    dend_17 { pt3dadd( -2.50567, -59.3311, -3.15963, 1.4 ) }
    dend_17 { pt3dadd( -2.89721, -60.1312, -3.14766, 1.55 ) }
    dend_17 { pt3dadd( -3.50991, -61.3531, -3.07089, 1.18 ) }
    dend_17 { pt3dadd( -4.08312, -62.6003, -2.91247, 0.88 ) }
    dend_17 { pt3dadd( -4.58997, -63.9117, -2.74926, 1.18 ) }
    dend_17 { pt3dadd( -4.97962, -65.1945, -2.6015, 1.03 ) }
    dend_17 { pt3dadd( -5.29459, -66.4019, -2.45714, 1.03 ) }
    dend_17 { pt3dadd( -5.67374, -68.1918, -2.26864, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( -5.83707, -69.3287, -2.17945, 1.77 ) }
    dend_17 { pt3dadd( -5.98255, -71.1176, -2.12174, 1.77 ) }
    dend_17 { pt3dadd( -6.0525, -72.4949, -2.19187, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 3.86483, -16.61, -3.24443, 1.77 ) }
    dend_1 { pt3dadd( 4.50986, -19.1455, -3.86385, 1.77 ) }
    dend_1 { pt3dadd( 4.79691, -20.4142, -4.15987, 1.99 ) }
    dend_1 { pt3dadd( 5.12697, -21.873, -4.50025, 1.99 ) }
    dend_1 { pt3dadd( 5.57732, -23.8635, -4.96467, 3.17 ) }
    dend_1 { pt3dadd( 5.78018, -24.7601, -5.17388, 3.76 ) }
    dend_1 { pt3dadd( 6.12731, -26.2944, -5.53186, 4.2 ) }
    dend_1 { pt3dadd( 6.31663, -27.6502, -5.81068, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205292 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205292 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205292 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -56.932, 104.32, -28.3664, 0.29 ) }
    dend_85 { pt3dadd( -57.2616, 105.239, -28.4048, 0.29 ) }
    dend_85 { pt3dadd( -57.5557, 106.704, -28.6965, 0.29 ) }
    dend_85 { pt3dadd( -57.7178, 108.045, -28.9898, 0.29 ) }
    dend_85 { pt3dadd( -57.7963, 109.509, -29.3205, 0.29 ) }
    dend_85 { pt3dadd( -57.8018, 110.573, -29.5767, 0.29 ) }
    dend_85 { pt3dadd( -57.7868, 112.326, -29.9893, 0.29 ) }
    dend_85 { pt3dadd( -57.6132, 115.521, -30.8412, 0.29 ) }
    dend_85 { pt3dadd( -57.5346, 116.515, -31.1294, 0.37 ) }
    dend_85 { pt3dadd( -57.4383, 117.718, -31.5076, 0.37 ) }
    dend_85 { pt3dadd( -57.3289, 119.207, -32.0223, 0.37 ) }
    dend_85 { pt3dadd( -57.2318, 120.435, -32.4505, 0.22 ) }
    dend_85 { pt3dadd( -57.1535, 121.707, -32.8783, 0.22 ) }
    dend_85 { pt3dadd( -57.2271, 123.04, -33.25, 1.03 ) }
    dend_85 { pt3dadd( -57.2641, 123.277, -33.3313, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -56.932, 104.32, -28.3664, 0.52 ) }
    dend_80 { pt3dadd( -57.9634, 104.954, -28.1991, 0.52 ) }
    dend_80 { pt3dadd( -58.4512, 105.296, -28.0862, 0.52 ) }
    dend_80 { pt3dadd( -58.9474, 105.705, -27.9529, 0.44 ) }
    dend_80 { pt3dadd( -59.1707, 105.92, -27.8872, 0.59 ) }
    dend_80 { pt3dadd( -59.4119, 106.186, -27.8089, 0.59 ) }
    dend_80 { pt3dadd( -59.8576, 106.699, -27.6504, 0.37 ) }
    dend_80 { pt3dadd( -60.3749, 107.383, -27.479, 0.37 ) }
    dend_80 { pt3dadd( -60.6923, 107.827, -27.3545, 0.37 ) }
    dend_80 { pt3dadd( -61.0149, 108.272, -27.2244, 0.37 ) }
    dend_80 { pt3dadd( -61.3775, 108.755, -27.0697, 0.29 ) }
    dend_80 { pt3dadd( -61.7167, 109.185, -26.9262, 0.29 ) }
    dend_80 { pt3dadd( -62.1061, 109.629, -26.7766, 0.81 ) }
    dend_80 { pt3dadd( -62.2854, 109.803, -26.7243, 0.81 ) }
    dend_80 { pt3dadd( -62.5896, 110.06, -26.6513, 0.74 ) }
    dend_80 { pt3dadd( -63.0016, 110.386, -26.5931, 0.74 ) }
    dend_80 { pt3dadd( -63.3518, 110.645, -26.6023, 0.96 ) }
    dend_80 { pt3dadd( -63.6952, 110.895, -26.6717, 0.96 ) }
    dend_80 { pt3dadd( -63.9181, 111.068, -26.7521, 0.59 ) }
    dend_80 { pt3dadd( -64.3366, 111.448, -26.9696, 0.29 ) }
    dend_80 { pt3dadd( -64.7054, 111.856, -27.2372, 0.29 ) }
    dend_80 { pt3dadd( -65.0893, 112.35, -27.578, 0.29 ) }
    dend_80 { pt3dadd( -65.3562, 112.725, -27.8264, 0.22 ) }
    dend_80 { pt3dadd( -65.7544, 113.313, -28.2029, 0.22 ) }
    dend_80 { pt3dadd( -66.0658, 113.796, -28.4991, 0.74 ) }
    dend_80 { pt3dadd( -66.4257, 114.366, -28.8089, 0.37 ) }
    dend_80 { pt3dadd( -66.725, 114.861, -29.0227, 0.37 ) }
    dend_80 { pt3dadd( -67.0053, 115.347, -29.1982, 0.81 ) }
    dend_80 { pt3dadd( -67.2053, 115.674, -29.3215, 1.18 ) }
    dend_80 { pt3dadd( -67.3986, 115.926, -29.4303, 1.18 ) }
    dend_80 { pt3dadd( -67.8915, 116.457, -29.717, 0.29 ) }
    dend_80 { pt3dadd( -68.4154, 116.981, -30.0177, 0.29 ) }
    dend_80 { pt3dadd( -68.7451, 117.297, -30.2238, 0.29 ) }
    dend_80 { pt3dadd( -69.0772, 117.601, -30.4508, 0.29 ) }
    dend_80 { pt3dadd( -69.5689, 118.014, -30.7901, 0.74 ) }
    dend_80 { pt3dadd( -69.9217, 118.255, -31.0421, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 84.7601, 37.4548, 37.5872, 0.29 ) }
    dend_71 { pt3dadd( 92.0935, 39.8407, 44.3484, 0.29 ) }
    dend_71 { pt3dadd( 99.0821, 42.2431, 51.4616, 0.29 ) }
    dend_71 { pt3dadd( 106.741, 45.1823, 57.6012, 0.29 ) }
    dend_71 { pt3dadd( 114.012, 49.427, 63.3962, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 84.7601, 37.4548, 37.5872, 0.29 ) }
    dend_70 { pt3dadd( 92.6614, 38.435, 43.5111, 0.29 ) }
    dend_70 { pt3dadd( 100.608, 40.9744, 48.8501, 0.29 ) }
    dend_70 { pt3dadd( 109.446, 43.5733, 52.4768, 0.29 ) }
    dend_70 { pt3dadd( 117.281, 47.5405, 56.9611, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 90.7178, 35.6585, -3.73532, 0.44 ) }
    dend_58 { pt3dadd( 91.8308, 35.7343, -4.33544, 0.44 ) }
    dend_58 { pt3dadd( 92.2405, 35.8427, -4.6071, 0.37 ) }
    dend_58 { pt3dadd( 92.966, 36.1263, -5.1121, 0.59 ) }
    dend_58 { pt3dadd( 93.3607, 36.303, -5.38706, 0.74 ) }
    dend_58 { pt3dadd( 94.3771, 36.7853, -6.06613, 0.37 ) }
    dend_58 { pt3dadd( 95.4304, 37.3032, -6.73027, 0.29 ) }
    dend_58 { pt3dadd( 96.0539, 37.6997, -7.13213, 0.29 ) }
    dend_58 { pt3dadd( 96.5051, 38.0148, -7.38599, 0.88 ) }
    dend_58 { pt3dadd( 96.6717, 38.1451, -7.47326, 1.11 ) }
    dend_58 { pt3dadd( 97.0886, 38.4768, -7.65946, 1.11 ) }
    dend_58 { pt3dadd( 97.4918, 38.7606, -7.75617, 1.18 ) }
    dend_58 { pt3dadd( 98.2513, 39.142, -7.82739, 0.74 ) }
    dend_58 { pt3dadd( 98.7708, 39.3813, -7.85445, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 90.7178, 35.6585, -3.73532, 0.29 ) }
    dend_55 { pt3dadd( 91.7113, 36.5832, -3.33379, 0.29 ) }
    dend_55 { pt3dadd( 92.1787, 37.0202, -3.12413, 0.29 ) }
    dend_55 { pt3dadd( 92.7774, 37.5799, -2.85558, 0.66 ) }
    dend_55 { pt3dadd( 93.4237, 38.1842, -2.56566, 0.29 ) }
    dend_55 { pt3dadd( 93.9076, 38.6366, -2.3486, 0.29 ) }
    dend_55 { pt3dadd( 94.8775, 39.5434, -1.91355, 0.29 ) }
    dend_55 { pt3dadd( 95.4325, 40.0199, -1.60436, 0.29 ) }
    dend_55 { pt3dadd( 103.721, 47.3087, 0.927164, 0.29 ) }
    dend_55 { pt3dadd( 110.867, 55.2513, 4.55088, 0.29 ) }
    dend_55 { pt3dadd( 116.55, 64.4699, 7.31216, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 123.382, 72.8735, 10.333, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -71.9051, -58.8593, -57.2609, 0.81 ) }
    dend_48 { pt3dadd( -72.4058, -60.2156, -58.8468, 0.81 ) }
    dend_48 { pt3dadd( -72.5009, -60.3864, -59.0534, 0.81 ) }
    dend_48 { pt3dadd( -73.7671, -62.1157, -61.0942, 0.37 ) }
    dend_48 { pt3dadd( -74.1502, -62.5686, -61.5851, 0.52 ) }
    dend_48 { pt3dadd( -74.5207, -62.9996, -62.035, 0.66 ) }
    dend_48 { pt3dadd( -74.9467, -63.5129, -62.5482, 0.66 ) }
    dend_48 { pt3dadd( -75.9023, -64.527, -63.5083, 0.37 ) }
    dend_48 { pt3dadd( -76.507, -65.1561, -64.1291, 0.37 ) }
    dend_48 { pt3dadd( -77.4439, -66.0904, -65.0578, 0.37 ) }
    dend_48 { pt3dadd( -78.0177, -66.6637, -65.6543, 0.66 ) }
    dend_48 { pt3dadd( -78.9378, -67.5676, -66.5946, 1.11 ) }
    dend_48 { pt3dadd( -79.3735, -67.9766, -67.006, 1.25 ) }
    dend_48 { pt3dadd( -80.8344, -69.2452, -68.4417, 0.22 ) }
    dend_48 { pt3dadd( -81.4372, -69.6935, -69.0351, 0.29 ) }
    dend_48 { pt3dadd( -81.9601, -70.018, -69.5373, 0.59 ) }
    dend_48 { pt3dadd( -82.5544, -70.345, -70.0671, 0.81 ) }
    dend_48 { pt3dadd( -83.1838, -70.6991, -70.6392, 0.81 ) }
    dend_48 { pt3dadd( -84.8176, -71.7797, -72.1011, 0.37 ) }
    dend_48 { pt3dadd( -85.3006, -72.1572, -72.5101, 0.37 ) }
    dend_48 { pt3dadd( -86.0916, -72.9543, -73.2325, 0.59 ) }
    dend_48 { pt3dadd( -86.384, -73.3122, -73.5039, 0.81 ) }
    dend_48 { pt3dadd( -87.4333, -74.8058, -74.4284, 0.44 ) }
    dend_48 { pt3dadd( -88.1513, -75.9531, -74.9729, 0.44 ) }
    dend_48 { pt3dadd( -88.7272, -76.9361, -75.319, 0.37 ) }
    dend_48 { pt3dadd( -89.4227, -78.1656, -75.7085, 0.37 ) }
    dend_48 { pt3dadd( -89.9412, -79.0689, -75.9929, 0.66 ) }
    dend_48 { pt3dadd( -90.3606, -79.7342, -76.2304, 0.81 ) }
    dend_48 { pt3dadd( -90.7766, -80.3444, -76.4342, 0.81 ) }
    dend_48 { pt3dadd( -91.5553, -81.4162, -76.8196, 0.29 ) }
    dend_48 { pt3dadd( -92.0106, -82.0012, -77.0199, 0.96 ) }
    dend_48 { pt3dadd( -93.1264, -83.3615, -77.4031, 0.29 ) }
    dend_48 { pt3dadd( -93.8401, -84.2476, -77.6121, 0.29 ) }
    dend_48 { pt3dadd( -94.5515, -85.1291, -77.7587, 0.44 ) }
    dend_48 { pt3dadd( -94.9568, -85.6147, -77.8267, 0.44 ) }
    dend_48 { pt3dadd( -95.6172, -86.3872, -77.8855, 0.29 ) }
    dend_48 { pt3dadd( -95.9795, -86.8211, -77.9432, 0.59 ) }
    dend_48 { pt3dadd( -96.534, -87.542, -78.0455, 0.59 ) }
    dend_48 { pt3dadd( -97.049, -88.2744, -78.1904, 0.52 ) }
    dend_48 { pt3dadd( -97.8658, -89.3769, -78.4894, 0.37 ) }
    dend_48 { pt3dadd( -98.3886, -90.0662, -78.7119, 0.88 ) }
    dend_48 { pt3dadd( -99.3668, -91.3531, -79.1675, 0.44 ) }
    dend_48 { pt3dadd( -99.9132, -92.0949, -79.4246, 0.59 ) }
    dend_48 { pt3dadd( -100.359, -92.7055, -79.6276, 0.59 ) }
    dend_48 { pt3dadd( -100.895, -93.4438, -79.832, 0.59 ) }
    dend_48 { pt3dadd( -101.452, -94.1896, -79.9695, 0.37 ) }
    dend_48 { pt3dadd( -101.9, -94.7108, -80.0201, 0.37 ) }
    dend_48 { pt3dadd( -102.642, -95.4447, -79.9915, 0.29 ) }
    dend_48 { pt3dadd( -102.923, -95.6908, -79.9506, 0.29 ) }
    dend_48 { pt3dadd( -103.646, -96.2984, -79.773, 0.88 ) }
    dend_48 { pt3dadd( -104.135, -96.7118, -79.6043, 1.18 ) }
    dend_48 { pt3dadd( -104.957, -97.3383, -79.2902, 0.29 ) }
    dend_48 { pt3dadd( -105.564, -97.7606, -79.0652, 0.29 ) }
    dend_48 { pt3dadd( -106.471, -98.3946, -78.7932, 0.29 ) }
    dend_48 { pt3dadd( -106.884, -98.7052, -78.6901, 0.88 ) }
    dend_48 { pt3dadd( -107.287, -99.0304, -78.618, 0.88 ) }
    dend_48 { pt3dadd( -108.604, -100.141, -78.5181, 0.22 ) }
    dend_48 { pt3dadd( -109.049, -100.53, -78.5411, 0.22 ) }
    dend_48 { pt3dadd( -110.029, -101.365, -78.6639, 0.59 ) }
    dend_48 { pt3dadd( -110.247, -101.549, -78.7068, 0.59 ) }
    dend_48 { pt3dadd( -111.127, -102.281, -78.9005, 0.22 ) }
    dend_48 { pt3dadd( -111.632, -102.709, -79.0271, 0.44 ) }
    dend_48 { pt3dadd( -112.337, -103.378, -79.243, 0.22 ) }
    dend_48 { pt3dadd( -113.31, -104.289, -79.5269, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -71.9051, -58.8593, -57.2609, 0.29 ) }
    dend_47 { pt3dadd( -73.2608, -58.8123, -57.2927, 0.29 ) }
    dend_47 { pt3dadd( -74.1056, -58.8232, -57.2709, 0.29 ) }
    dend_47 { pt3dadd( -74.9377, -58.868, -57.2535, 0.66 ) }
    dend_47 { pt3dadd( -75.337, -58.9109, -57.2466, 0.66 ) }
    dend_47 { pt3dadd( -76.748, -59.1041, -57.2088, 0.29 ) }
    dend_47 { pt3dadd( -77.3575, -59.199, -57.1969, 0.29 ) }
    dend_47 { pt3dadd( -77.8141, -59.29, -57.1444, 0.66 ) }
    dend_47 { pt3dadd( -78.2506, -59.3944, -57.085, 0.66 ) }
    dend_47 { pt3dadd( -79.7478, -59.783, -56.8752, 0.29 ) }
    dend_47 { pt3dadd( -80.2763, -59.9036, -56.813, 0.52 ) }
    dend_47 { pt3dadd( -80.7794, -59.9947, -56.7731, 0.52 ) }
    dend_47 { pt3dadd( -82.1611, -60.1456, -56.6678, 0.22 ) }
    dend_47 { pt3dadd( -82.8, -60.1758, -56.6188, 0.59 ) }
    dend_47 { pt3dadd( -83.2092, -60.1735, -56.5745, 0.74 ) }
    dend_47 { pt3dadd( -84.0001, -60.1255, -56.4896, 0.29 ) }
    dend_47 { pt3dadd( -84.3977, -60.0873, -56.4536, 0.29 ) }
    dend_47 { pt3dadd( -84.915, -60.0146, -56.4133, 0.96 ) }
    dend_47 { pt3dadd( -85.4143, -59.9088, -56.4207, 0.96 ) }
    dend_47 { pt3dadd( -86.778, -59.5952, -56.4004, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -21.789, -120.589, 20.8531, 0.29 ) }
    dend_40 { pt3dadd( -21.9251, -120.537, 21.5899, 0.29 ) }
    dend_40 { pt3dadd( -22.1704, -120.463, 23.2114, 0.29 ) }
    dend_40 { pt3dadd( -22.3442, -120.453, 24.3701, 0.59 ) }
    dend_40 { pt3dadd( -22.6089, -120.542, 25.9789, 0.66 ) }
    dend_40 { pt3dadd( -22.9599, -120.829, 28.2422, 0.59 ) }
    dend_40 { pt3dadd( -23.1547, -121.178, 29.7403, 0.29 ) }
    dend_40 { pt3dadd( -23.197, -121.562, 30.6543, 0.52 ) }
    dend_40 { pt3dadd( -23.1215, -122.079, 31.0391, 0.66 ) }
    dend_40 { pt3dadd( -22.8409, -123.276, 31.3241, 0.37 ) }
    dend_40 { pt3dadd( -22.4093, -124.831, 31.481, 0.29 ) }
    dend_40 { pt3dadd( -22.0417, -126.072, 31.5139, 0.29 ) }
    dend_40 { pt3dadd( -21.6667, -127.31, 31.4787, 0.29 ) }
    dend_40 { pt3dadd( -21.3041, -128.434, 31.4369, 0.29 ) }
    dend_40 { pt3dadd( -20.8124, -129.756, 31.4071, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -20.3374, -130.881, 31.4083, 0.29 ) }
    dend_40 { pt3dadd( -19.0886, -137.358, 39.6823, 0.29 ) }
    dend_40 { pt3dadd( -19.1073, -142.501, 49.0297, 0.29 ) }
    dend_40 { pt3dadd( -16.4521, -147.81, 57.8752, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -21.789, -120.589, 20.8531, 0.74 ) }
    dend_35 { pt3dadd( -22.2914, -121.442, 20.3731, 0.74 ) }
    dend_35 { pt3dadd( -22.7241, -122.312, 19.9644, 0.52 ) }
    dend_35 { pt3dadd( -23.0528, -123.046, 19.668, 0.52 ) }
    dend_35 { pt3dadd( -23.5634, -124.378, 19.2323, 0.59 ) }
    dend_35 { pt3dadd( -23.7734, -125.049, 19.0981, 0.96 ) }
    dend_35 { pt3dadd( -23.9238, -125.77, 19.013, 1.18 ) }
    dend_35 { pt3dadd( -23.9331, -126.378, 18.9486, 1.18 ) }
    dend_35 { pt3dadd( -23.8514, -126.947, 18.92, 0.96 ) }
    dend_35 { pt3dadd( -23.601, -127.776, 18.8664, 0.66 ) }
    dend_35 { pt3dadd( -23.0294, -128.951, 18.6478, 0.52 ) }
    dend_35 { pt3dadd( -22.4067, -130.001, 18.4044, 0.52 ) }
    dend_35 { pt3dadd( -21.6162, -131.109, 18.071, 0.29 ) }
    dend_35 { pt3dadd( -21.2615, -131.524, 17.9088, 0.37 ) }
    dend_35 { pt3dadd( -20.2691, -132.486, 17.3853, 0.29 ) }
    dend_35 { pt3dadd( -19.1443, -133.358, 16.6464, 0.29 ) }
    dend_35 { pt3dadd( -18.2804, -142.901, 15.1493, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -6.0525, -72.4949, -2.19187, 0.37 ) }
    dend_31 { pt3dadd( -10.088, -74.1087, -1.82456, 0.37 ) }
    dend_31 { pt3dadd( -11.9941, -74.9234, -1.03617, 0.37 ) }
    dend_31 { pt3dadd( -13.4003, -75.5517, -0.269384, 0.37 ) }
    dend_31 { pt3dadd( -14.3547, -75.9899, 0.269499, 0.37 ) }
    dend_31 { pt3dadd( -15.5573, -76.5558, 0.997133, 0.59 ) }
    dend_31 { pt3dadd( -16.7227, -77.1203, 1.71488, 0.74 ) }
    dend_31 { pt3dadd( -17.6178, -77.5477, 2.44018, 0.52 ) }
    dend_31 { pt3dadd( -18.294, -77.877, 2.99566, 0.59 ) }
    dend_31 { pt3dadd( -18.8965, -78.2325, 3.45023, 0.74 ) }
    dend_31 { pt3dadd( -19.9351, -78.8521, 4.10195, 0.52 ) }
    dend_31 { pt3dadd( -20.5897, -79.2292, 4.42905, 0.52 ) }
    dend_31 { pt3dadd( -21.2056, -79.5547, 4.67088, 0.74 ) }
    dend_31 { pt3dadd( -21.8977, -79.8996, 4.90979, 0.74 ) }
    dend_31 { pt3dadd( -22.5587, -80.2392, 5.12492, 0.52 ) }
    dend_31 { pt3dadd( -23.5168, -80.7268, 5.42295, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.0525, -72.4949, -2.19187, 0.88 ) }
    dend_18 { pt3dadd( -6.29705, -73.6726, -2.24839, 0.88 ) }
    dend_18 { pt3dadd( -6.77819, -75.1525, -2.18422, 0.66 ) }
    dend_18 { pt3dadd( -7.27797, -76.1892, -1.87725, 0.74 ) }
    dend_18 { pt3dadd( -7.71062, -76.8773, -1.58316, 0.88 ) }
    dend_18 { pt3dadd( -8.46903, -77.9187, -1.10013, 0.88 ) }
    dend_18 { pt3dadd( -8.95281, -78.5487, -0.812079, 1.03 ) }
    dend_18 { pt3dadd( -9.54649, -79.2362, -0.43881, 1.03 ) }
    dend_18 { pt3dadd( -10.8972, -80.8369, 0.456486, 1.03 ) }
    dend_18 { pt3dadd( -11.663, -81.8438, 0.973645, 1.03 ) }
    dend_18 { pt3dadd( -12.2874, -82.8614, 1.41166, 0.88 ) }
    dend_18 { pt3dadd( -12.6294, -83.7354, 1.68187, 0.88 ) }
    dend_18 { pt3dadd( -12.7348, -84.5511, 1.86769, 0.88 ) }
    dend_18 { pt3dadd( -12.5155, -86.136, 2.0495, 1.25 ) }
    dend_18 { pt3dadd( -12.3326, -86.7126, 2.08783, 1.55 ) }
    dend_18 { pt3dadd( -11.9742, -87.5223, 2.18577, 1.55 ) }
    dend_18 { pt3dadd( -11.3826, -88.6426, 2.44809, 1.55 ) }
    dend_18 { pt3dadd( -10.9649, -89.3386, 2.711, 1.55 ) }
    dend_18 { pt3dadd( -10.1618, -90.5397, 3.36263, 1.03 ) }
    dend_18 { pt3dadd( -9.51093, -91.3948, 4.01086, 1.03 ) }
    dend_18 { pt3dadd( -8.95521, -92.0663, 4.62092, 0.81 ) }
    dend_18 { pt3dadd( -8.05145, -93.0599, 5.6921, 0.81 ) }
    dend_18 { pt3dadd( -7.40579, -93.7098, 6.47728, 1.03 ) }
    dend_18 { pt3dadd( -6.76777, -94.2754, 7.20142, 1.03 ) }
    dend_18 { pt3dadd( -6.02683, -94.8619, 7.95464, 1.03 ) }
    dend_18 { pt3dadd( -5.40438, -95.3434, 8.48332, 0.88 ) }
    dend_18 { pt3dadd( -4.43725, -96.1404, 9.19251, 0.88 ) }
    dend_18 { pt3dadd( -3.94698, -96.5703, 9.49185, 0.96 ) }
    dend_18 { pt3dadd( -3.37939, -97.1277, 9.8036, 0.96 ) }
    dend_18 { pt3dadd( -2.60599, -97.9787, 10.1979, 1.33 ) }
    dend_18 { pt3dadd( -2.19468, -98.4914, 10.3833, 1.62 ) }
    dend_18 { pt3dadd( -1.85321, -98.957, 10.5369, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.31663, -27.6502, -5.81068, 0.66 ) }
    dend_16 { pt3dadd( 6.31427, -30.3424, -3.62862, 0.66 ) }
    dend_16 { pt3dadd( 6.25229, -31.2235, -3.01398, 0.88 ) }
    dend_16 { pt3dadd( 6.13407, -32.9698, -1.95829, 1.03 ) }
    dend_16 { pt3dadd( 6.10691, -33.8014, -1.49943, 1.03 ) }
    dend_16 { pt3dadd( 6.11556, -34.5337, -1.10996, 1.03 ) }
    dend_16 { pt3dadd( 6.1721, -35.4373, -0.631746, 0.37 ) }
    dend_16 { pt3dadd( 6.2426, -36.4079, -0.232793, 0.37 ) }
    dend_16 { pt3dadd( 6.46259, -37.3752, 0.156991, 0.59 ) }
    dend_16 { pt3dadd( 6.92745, -38.2034, 0.49786, 0.81 ) }
    dend_16 { pt3dadd( 7.33806, -38.6708, 0.753506, 0.81 ) }
    dend_16 { pt3dadd( 7.81587, -39.0824, 1.06745, 0.52 ) }
    dend_16 { pt3dadd( 8.26318, -39.4156, 1.38755, 0.81 ) }
    dend_16 { pt3dadd( 8.9173, -39.8963, 1.899, 1.25 ) }
    dend_16 { pt3dadd( 9.17031, -40.1373, 2.13785, 1.69 ) }
    dend_16 { pt3dadd( 9.44904, -40.5665, 2.48709, 1.69 ) }
    dend_16 { pt3dadd( 9.71407, -41.6048, 3.0919, 0.96 ) }
    dend_16 { pt3dadd( 9.73567, -42.2808, 3.36967, 0.66 ) }
    dend_16 { pt3dadd( 9.70477, -42.8086, 3.54751, 0.81 ) }
    dend_16 { pt3dadd( 9.61312, -43.9148, 3.90103, 0.44 ) }
    dend_16 { pt3dadd( 9.58545, -44.7937, 4.20265, 0.44 ) }
    dend_16 { pt3dadd( 9.62096, -45.4865, 4.46066, 0.44 ) }
    dend_16 { pt3dadd( 9.74818, -46.1101, 4.78105, 0.88 ) }
    dend_16 { pt3dadd( 10.0801, -46.9236, 5.42216, 1.25 ) }
    dend_16 { pt3dadd( 10.5305, -47.6829, 6.19691, 0.66 ) }
    dend_16 { pt3dadd( 10.9616, -48.2593, 6.86721, 0.52 ) }
    dend_16 { pt3dadd( 11.2295, -48.5963, 7.2643, 0.52 ) }
    dend_16 { pt3dadd( 11.8768, -49.4668, 8.24566, 0.74 ) }
    dend_16 { pt3dadd( 12.3993, -50.2438, 9.02808, 1.25 ) }
    dend_16 { pt3dadd( 12.6048, -50.5771, 9.30372, 1.25 ) }
    dend_16 { pt3dadd( 12.9388, -51.1511, 9.67939, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 13.3598, -51.8939, 10.0335, 0.44 ) }
    dend_16 { pt3dadd( 13.9239, -52.8773, 10.3618, 0.37 ) }
    dend_16 { pt3dadd( 14.2806, -53.4567, 10.4718, 0.37 ) }
    dend_16 { pt3dadd( 14.6686, -54.0376, 10.5376, 0.96 ) }
    dend_16 { pt3dadd( 14.9743, -54.4693, 10.5778, 1.33 ) }
    dend_16 { pt3dadd( 15.901, -55.6424, 10.6844, 0.29 ) }
    dend_16 { pt3dadd( 16.2473, -56.0207, 10.7205, 0.29 ) }
    dend_16 { pt3dadd( 16.6031, -56.3607, 10.749, 0.29 ) }
    dend_16 { pt3dadd( 16.7358, -56.4869, 10.7607, 0.44 ) }
    dend_16 { pt3dadd( 19.9461, -63.553, 13.9288, 0.44 ) }
    dend_16 { pt3dadd( 24.3902, -70.2468, 16.4301, 0.44 ) }
    dend_16 { pt3dadd( 28.1445, -77.5413, 18.0336, 0.44 ) }
    dend_16 { pt3dadd( 32.2407, -84.5648, 20.0841, 0.44 ) }
    dend_16 { pt3dadd( 35.8792, -91.6548, 22.6755, 0.44 ) }
    dend_16 { pt3dadd( 39.3535, -99.0071, 24.5904, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 6.31663, -27.6502, -5.81068, 1.03 ) }
    dend_11 { pt3dadd( 6.28925, -29.6806, -6.24046, 1.03 ) }
    dend_11 { pt3dadd( 6.47393, -31.7106, -6.59166, 1.03 ) }
    dend_11 { pt3dadd( 6.77002, -33.1873, -6.79234, 0.96 ) }
    dend_11 { pt3dadd( 7.1639, -34.5877, -6.94473, 0.96 ) }
    dend_11 { pt3dadd( 7.65234, -35.9466, -7.057, 0.96 ) }
    dend_11 { pt3dadd( 8.04385, -36.8669, -7.07342, 1.18 ) }
    dend_11 { pt3dadd( 8.854, -38.128, -6.87528, 1.47 ) }
    dend_11 { pt3dadd( 9.68266, -39.1428, -6.54394, 2.21 ) }
    dend_11 { pt3dadd( 10.0305, -39.5439, -6.36093, 2.21 ) }
    dend_11 { pt3dadd( 10.5484, -40.2012, -5.99683, 1.99 ) }
    dend_11 { pt3dadd( 11.3981, -41.5043, -5.22105, 1.33 ) }
    dend_11 { pt3dadd( 12.0999, -42.9553, -4.39384, 0.88 ) }
    dend_11 { pt3dadd( 12.4724, -44.1256, -3.7765, 0.74 ) }
    dend_11 { pt3dadd( 12.6353, -45.2289, -3.29352, 0.74 ) }
    dend_11 { pt3dadd( 12.6638, -46.5483, -2.83881, 1.33 ) }
    dend_11 { pt3dadd( 12.6132, -47.3474, -2.63662, 1.62 ) }
    dend_11 { pt3dadd( 12.5174, -48.2176, -2.49442, 1.92 ) }
    dend_11 { pt3dadd( 12.4162, -49.1459, -2.42285, 1.69 ) }
    dend_11 { pt3dadd( 12.338, -50.9091, -2.37867, 1.33 ) }
    dend_11 { pt3dadd( 12.4209, -52.6914, -2.40021, 1.03 ) }
    dend_11 { pt3dadd( 12.6007, -53.915, -2.44914, 0.88 ) }
    dend_11 { pt3dadd( 12.8895, -55.0445, -2.50267, 1.03 ) }
    dend_11 { pt3dadd( 13.4034, -56.5188, -2.58236, 1.03 ) }
    dend_11 { pt3dadd( 14.0475, -57.9938, -2.68533, 1.03 ) }
    dend_11 { pt3dadd( 14.6749, -59.2435, -2.82272, 1.33 ) }
    dend_11 { pt3dadd( 15.1513, -60.179, -2.9903, 1.69 ) }
    dend_11 { pt3dadd( 15.6762, -61.3105, -3.27357, 1.47 ) }
    dend_11 { pt3dadd( 15.9811, -62.0992, -3.53373, 1.03 ) }
    dend_11 { pt3dadd( 16.3309, -63.2957, -4.00827, 0.96 ) }
    dend_11 { pt3dadd( 16.5619, -64.3817, -4.51655, 0.96 ) }
    dend_11 { pt3dadd( 16.7519, -65.7077, -5.19011, 1.4 ) }
    dend_11 { pt3dadd( 16.8859, -67.1141, -5.91224, 1.4 ) }
    dend_11 { pt3dadd( 16.9913, -68.3426, -6.53468, 1.55 ) }
    dend_11 { pt3dadd( 17.0739, -69.0133, -6.83972, 1.77 ) }
    dend_11 { pt3dadd( 17.2976, -70.3084, -7.33591, 0.96 ) }
    dend_11 { pt3dadd( 17.5839, -71.4796, -7.66297, 0.66 ) }
    dend_11 { pt3dadd( 17.9555, -72.5924, -7.79478, 0.66 ) }
    dend_11 { pt3dadd( 18.4571, -73.6751, -7.74557, 0.96 ) }
    dend_11 { pt3dadd( 19.1096, -74.7544, -7.55206, 1.11 ) }
    dend_11 { pt3dadd( 19.4636, -75.228, -7.42648, 1.4 ) }
    dend_11 { pt3dadd( 19.7924, -75.6044, -7.30833, 1.4 ) }
    dend_11 { pt3dadd( 20.4844, -76.3869, -7.06321, 1.4 ) }
    dend_11 { pt3dadd( 21.305, -77.4028, -6.80837, 0.66 ) }
    dend_11 { pt3dadd( 21.6712, -77.9426, -6.74073, 0.52 ) }
    dend_11 { pt3dadd( 22.0881, -78.7059, -6.72694, 0.52 ) }
    dend_11 { pt3dadd( 22.6206, -79.9512, -6.74383, 0.81 ) }
    dend_11 { pt3dadd( 23.0711, -81.3433, -6.73776, 1.03 ) }
    dend_11 { pt3dadd( 23.2809, -82.2601, -6.74508, 1.03 ) }
    dend_11 { pt3dadd( 23.4505, -83.4953, -6.74364, 1.03 ) }
    dend_11 { pt3dadd( 23.5609, -84.7193, -6.81516, 1.03 ) }
    dend_11 { pt3dadd( 23.6384, -85.9871, -6.94704, 0.88 ) }
    dend_11 { pt3dadd( 23.7499, -87.5284, -7.22187, 1.03 ) }
    dend_11 { pt3dadd( 23.8986, -88.8977, -7.5506, 0.52 ) }
    dend_11 { pt3dadd( 24.1108, -90.1882, -7.95257, 0.52 ) }
    dend_11 { pt3dadd( 24.5125, -92.0573, -8.72285, 0.88 ) }
    dend_11 { pt3dadd( 24.7108, -92.8155, -9.11171, 1.11 ) }
    dend_11 { pt3dadd( 25.0511, -94.0102, -9.82028, 0.59 ) }
    dend_11 { pt3dadd( 25.1917, -94.5164, -10.1202, 0.59 ) }
    dend_11 { pt3dadd( 25.4426, -95.6633, -10.6388, 0.52 ) }
    dend_11 { pt3dadd( 25.5695, -96.8985, -10.9541, 0.52 ) }
    dend_11 { pt3dadd( 25.4766, -97.9144, -10.9385, 1.11 ) }
    dend_11 { pt3dadd( 25.2553, -98.7769, -10.7985, 1.25 ) }
    dend_11 { pt3dadd( 24.7601, -100.085, -10.4404, 1.18 ) }
    dend_11 { pt3dadd( 24.2076, -101.365, -10.0174, 0.52 ) }
    dend_11 { pt3dadd( 23.8035, -102.259, -9.65363, 0.52 ) }
    dend_11 { pt3dadd( 23.3127, -103.486, -9.15766, 0.52 ) }
    dend_11 { pt3dadd( 23.165, -103.948, -9.00914, 0.81 ) }
    dend_11 { pt3dadd( 22.9799, -104.79, -8.84216, 0.74 ) }
    dend_11 { pt3dadd( 22.8159, -105.866, -8.79063, 0.74 ) }
    dend_11 { pt3dadd( 22.6695, -106.927, -8.85568, 1.03 ) }
    dend_11 { pt3dadd( 22.4425, -108.32, -9.07662, 0.66 ) }
    dend_11 { pt3dadd( 22.2411, -109.231, -9.28892, 0.52 ) }
    dend_11 { pt3dadd( 21.9039, -110.274, -9.61305, 1.11 ) }
    dend_11 { pt3dadd( 21.5511, -111.136, -10.0018, 1.11 ) }
    dend_11 { pt3dadd( 20.998, -112.344, -10.6836, 0.81 ) }
    dend_11 { pt3dadd( 20.4194, -113.595, -11.509, 0.66 ) }
    dend_11 { pt3dadd( 20.0339, -114.471, -12.1156, 0.88 ) }
    dend_11 { pt3dadd( 19.605, -115.665, -12.9861, 0.66 ) }
    dend_11 { pt3dadd( 19.1799, -117.236, -14.2743, 0.59 ) }
    dend_11 { pt3dadd( 18.9978, -118.262, -15.1949, 0.88 ) }
    dend_11 { pt3dadd( 18.905, -119.158, -16.0426, 1.18 ) }
    dend_11 { pt3dadd( 18.8554, -119.807, -16.6596, 0.96 ) }
    dend_11 { pt3dadd( 18.8028, -120.665, -17.4754, 0.96 ) }
    dend_11 { pt3dadd( 18.6915, -122.239, -18.863, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 18.6318, -122.761, -19.2752, 0.81 ) }
    dend_11 { pt3dadd( 18.4974, -123.786, -20.0126, 0.66 ) }
    dend_11 { pt3dadd( 18.3749, -124.577, -20.4424, 0.66 ) }
    dend_11 { pt3dadd( 18.2075, -125.568, -20.7812, 0.96 ) }
    dend_11 { pt3dadd( 17.9683, -126.817, -20.7646, 0.88 ) }
    dend_11 { pt3dadd( 17.7649, -127.929, -20.4899, 0.88 ) }
    dend_11 { pt3dadd( 17.5863, -128.903, -20.1821, 0.37 ) }
    dend_11 { pt3dadd( 17.2938, -130.69, -19.55, 1.03 ) }
    dend_11 { pt3dadd( 17.1415, -131.629, -19.2406, 1.03 ) }
    dend_11 { pt3dadd( 16.7357, -133.7, -18.6358, 0.44 ) }
    dend_11 { pt3dadd( 16.4509, -135.192, -18.3704, 0.44 ) }
    dend_11 { pt3dadd( 16.349, -136.048, -18.4106, 0.74 ) }
    dend_11 { pt3dadd( 16.3754, -136.919, -18.731, 0.74 ) }
    dend_11 { pt3dadd( 16.575, -138.109, -19.4698, 0.44 ) }
    dend_11 { pt3dadd( 16.8215, -139.06, -20.1597, 0.66 ) }
    dend_11 { pt3dadd( 17.2772, -140.425, -21.2438, 0.44 ) }
    dend_11 { pt3dadd( 17.9903, -142.38, -22.7932, 0.88 ) }
    dend_11 { pt3dadd( 18.7893, -144.533, -24.3968, 0.52 ) }
    dend_11 { pt3dadd( 19.2104, -145.632, -25.1852, 0.74 ) }
    dend_11 { pt3dadd( 19.7962, -147.113, -26.1938, 1.33 ) }
    dend_11 { pt3dadd( 20.1102, -147.956, -26.7255, 1.33 ) }
    dend_11 { pt3dadd( 20.6276, -149.701, -27.6824, 0.74 ) }
    dend_11 { pt3dadd( 20.8571, -150.816, -28.1733, 0.66 ) }
    dend_11 { pt3dadd( 21.0249, -152.403, -28.7631, 0.66 ) }
    dend_11 { pt3dadd( 21.0359, -153.501, -29.177, 0.81 ) }
    dend_11 { pt3dadd( 20.9246, -154.614, -29.6384, 0.59 ) }
    dend_11 { pt3dadd( 20.7621, -155.356, -29.9468, 1.18 ) }
    dend_11 { pt3dadd( 20.6484, -155.699, -30.0957, 1.18 ) }
    dend_11 { pt3dadd( 20.1746, -156.909, -30.6176, 0.44 ) }
    dend_11 { pt3dadd( 19.7313, -157.969, -30.9705, 0.44 ) }
    dend_11 { pt3dadd( 19.3896, -158.868, -31.1958, 1.03 ) }
    dend_11 { pt3dadd( 19.2102, -159.519, -31.2807, 1.4 ) }
    dend_11 { pt3dadd( 18.9956, -160.925, -31.1789, 0.52 ) }
    dend_11 { pt3dadd( 18.9267, -161.885, -31.0309, 0.52 ) }
    dend_11 { pt3dadd( 18.9851, -163.17, -30.6582, 0.74 ) }
    dend_11 { pt3dadd( 19.0406, -163.641, -30.4435, 0.74 ) }
    dend_11 { pt3dadd( 19.1687, -164.6, -29.8178, 0.59 ) }
    dend_11 { pt3dadd( 19.3457, -165.702, -28.8661, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 6.31663, -27.6502, -5.81068, 0.88 ) }
    dend_2 { pt3dadd( 11.3266, -27.602, -8.90805, 0.88 ) }
    dend_2 { pt3dadd( 12.7489, -27.5451, -9.64685, 0.88 ) }
    dend_2 { pt3dadd( 14.16, -27.4819, -10.2457, 1.03 ) }
    dend_2 { pt3dadd( 15.1085, -27.4381, -10.5717, 1.33 ) }
    dend_2 { pt3dadd( 15.9782, -27.4046, -10.833, 1.62 ) }
    dend_2 { pt3dadd( 17.2307, -27.3754, -11.1745, 1.84 ) }
    dend_2 { pt3dadd( 18.2914, -27.2968, -11.3258, 1.47 ) }
    dend_2 { pt3dadd( 19.5671, -27.2118, -11.6756, 1.18 ) }
    dend_2 { pt3dadd( 20.5272, -27.1181, -12.3347, 0.81 ) }
    dend_2 { pt3dadd( 21.5534, -26.9809, -13.3611, 0.81 ) }
    dend_2 { pt3dadd( 22.2035, -26.9069, -14.1117, 1.11 ) }
    dend_2 { pt3dadd( 23.5815, -26.8289, -15.8743, 1.33 ) }
    dend_2 { pt3dadd( 25.029, -26.8044, -17.8244, 1.77 ) }
    dend_2 { pt3dadd( 28.3222, -26.883, -22.3428, 1.47 ) }
    dend_2 { pt3dadd( 29.3814, -26.9423, -23.7538, 1.11 ) }
    dend_2 { pt3dadd( 30.462, -27.0186, -25.0956, 1.11 ) }
    dend_2 { pt3dadd( 31.9104, -27.1269, -26.6657, 0.81 ) }
    dend_2 { pt3dadd( 32.7865, -27.204, -27.4209, 0.96 ) }
    dend_2 { pt3dadd( 34.167, -27.29, -28.2548, 0.88 ) }
    dend_2 { pt3dadd( 35.297, -27.213, -28.7522, 0.74 ) }
    dend_2 { pt3dadd( 36.1704, -26.9866, -29.1768, 0.59 ) }
    dend_2 { pt3dadd( 37.3101, -26.4701, -29.8668, 1.03 ) }
    dend_2 { pt3dadd( 38.1625, -25.9812, -30.4168, 1.55 ) }
    dend_2 { pt3dadd( 38.9481, -25.5002, -30.9351, 1.69 ) }
    dend_2 { pt3dadd( 41.3008, -24.0445, -32.5604, 1.69 ) }
    dend_2 { pt3dadd( 42.0285, -23.6141, -33.0881, 1.69 ) }
    dend_2 { pt3dadd( 43.8504, -22.6237, -34.3972, 0.88 ) }
    dend_2 { pt3dadd( 44.8799, -22.1498, -35.0858, 0.81 ) }
    dend_2 { pt3dadd( 46.1041, -21.7149, -35.7836, 1.11 ) }
    dend_2 { pt3dadd( 47.689, -21.3362, -36.5287, 1.18 ) }
    dend_2 { pt3dadd( 49.1162, -21.1968, -37.0188, 0.59 ) }
    dend_2 { pt3dadd( 49.7507, -21.2173, -37.2096, 0.59 ) }
    dend_2 { pt3dadd( 51.2806, -21.5158, -37.5443, 0.96 ) }
    dend_2 { pt3dadd( 52.368, -21.9064, -37.7608, 1.18 ) }
    dend_2 { pt3dadd( 53.2853, -22.3777, -37.8972, 1.18 ) }
    dend_2 { pt3dadd( 54.2114, -22.9527, -37.9578, 1.4 ) }
    dend_2 { pt3dadd( 55.271, -23.6713, -37.9782, 1.4 ) }
    dend_2 { pt3dadd( 56.2544, -24.3157, -37.9794, 1.11 ) }
    dend_2 { pt3dadd( 56.9503, -24.7098, -37.959, 1.11 ) }
    dend_2 { pt3dadd( 57.8118, -25.0642, -37.916, 1.03 ) }
    dend_2 { pt3dadd( 58.944, -25.3704, -37.8354, 1.03 ) }
    dend_2 { pt3dadd( 59.9338, -25.5178, -37.7449, 1.03 ) }
    dend_2 { pt3dadd( 61.0772, -25.5814, -37.6198, 0.96 ) }
    dend_2 { pt3dadd( 62.6567, -25.5492, -37.4403, 0.88 ) }
    dend_2 { pt3dadd( 64.3746, -25.4245, -37.2004, 0.88 ) }
    dend_2 { pt3dadd( 65.5133, -25.2845, -37.0157, 1.03 ) }
    dend_2 { pt3dadd( 66.4091, -25.1475, -36.8814, 1.11 ) }
    dend_2 { pt3dadd( 67.1476, -25.0303, -36.8009, 1.18 ) }
    dend_2 { pt3dadd( 67.8209, -24.9529, -36.8121, 1.18 ) }
    dend_2 { pt3dadd( 69.1906, -24.9274, -37.1155, 0.81 ) }
    dend_2 { pt3dadd( 70.18, -25.0398, -37.5406, 0.74 ) }
    dend_2 { pt3dadd( 71.479, -25.3068, -38.2569, 1.18 ) }
    dend_2 { pt3dadd( 72.4721, -25.5596, -38.8724, 1.4 ) }
    dend_2 { pt3dadd( 74.4974, -26.1136, -40.2524, 1.18 ) }
    dend_2 { pt3dadd( 76.0595, -26.5257, -41.3901, 0.88 ) }
    dend_2 { pt3dadd( 77.2316, -26.7876, -42.3169, 0.74 ) }
    dend_2 { pt3dadd( 78.4194, -26.9843, -43.2422, 0.74 ) }
    dend_2 { pt3dadd( 79.503, -27.0608, -44.0204, 1.11 ) }
    dend_2 { pt3dadd( 80.661, -27.0219, -44.8009, 1.4 ) }
    dend_2 { pt3dadd( 81.8135, -26.9181, -45.5343, 1.4 ) }
    dend_2 { pt3dadd( 83.4198, -26.7806, -46.5773, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 84.3647, -26.738, -47.231, 0.74 ) }
    dend_2 { pt3dadd( 85.5551, -26.7982, -48.1099, 0.66 ) }
    dend_2 { pt3dadd( 86.9727, -27.066, -49.2156, 0.81 ) }
    dend_2 { pt3dadd( 88.3941, -27.5468, -50.2782, 0.74 ) }
    dend_2 { pt3dadd( 89.5752, -28.0671, -51.1487, 1.25 ) }
    dend_2 { pt3dadd( 90.2277, -28.3836, -51.5998, 1.69 ) }
    dend_2 { pt3dadd( 91.0766, -28.7644, -52.1451, 1.69 ) }
    dend_2 { pt3dadd( 91.9549, -29.0521, -52.5968, 1.4 ) }
    dend_2 { pt3dadd( 93.308, -29.2463, -53.0883, 0.88 ) }
    dend_2 { pt3dadd( 95.2712, -29.1594, -53.6001, 0.81 ) }
    dend_2 { pt3dadd( 96.1597, -29.0421, -53.7833, 0.81 ) }
    dend_2 { pt3dadd( 97.391, -28.8651, -53.9703, 0.81 ) }
    dend_2 { pt3dadd( 98.9603, -28.6496, -54.1051, 0.81 ) }
    dend_2 { pt3dadd( 99.9311, -28.5528, -54.1257, 0.81 ) }
    dend_2 { pt3dadd( 101.289, -28.52, -54.0872, 0.81 ) }
    dend_2 { pt3dadd( 102.188, -28.623, -53.9994, 0.96 ) }
    dend_2 { pt3dadd( 103.562, -29.0095, -53.9112, 0.96 ) }
    dend_2 { pt3dadd( 104.495, -29.4222, -53.9487, 1.18 ) }
    dend_2 { pt3dadd( 105.334, -29.8881, -54.0976, 1.47 ) }
    dend_2 { pt3dadd( 106.195, -30.4072, -54.3188, 1.47 ) }
    dend_2 { pt3dadd( 107.457, -31.1711, -54.6953, 0.74 ) }
    dend_2 { pt3dadd( 108.931, -32.0018, -55.1673, 0.74 ) }
    dend_2 { pt3dadd( 110.749, -32.9001, -55.789, 0.66 ) }
    dend_2 { pt3dadd( 112.456, -33.6385, -56.4246, 0.74 ) }
    dend_2 { pt3dadd( 113.527, -34.0192, -56.8261, 0.81 ) }
    dend_2 { pt3dadd( 114.757, -34.3384, -57.2638, 0.81 ) }
    dend_2 { pt3dadd( 115.382, -34.4324, -57.4631, 1.11 ) }
    dend_2 { pt3dadd( 116.887, -34.4859, -57.8985, 1.25 ) }
    dend_2 { pt3dadd( 117.557, -34.4362, -58.1301, 1.62 ) }
    dend_2 { pt3dadd( 118.311, -34.3094, -58.5024, 1.62 ) }
    dend_2 { pt3dadd( 119.799, -33.9937, -59.3942, 0.59 ) }
    dend_2 { pt3dadd( 120.734, -33.7836, -60.0233, 0.59 ) }
    dend_2 { pt3dadd( 122.142, -33.4832, -61.0041, 0.88 ) }
    dend_2 { pt3dadd( 124.033, -33.1209, -62.3334, 1.4 ) }
    dend_2 { pt3dadd( 125.935, -32.824, -63.6222, 0.74 ) }
    dend_2 { pt3dadd( 127.052, -32.698, -64.3438, 0.59 ) }
    dend_2 { pt3dadd( 127.995, -32.6445, -64.8876, 0.81 ) }
    dend_2 { pt3dadd( 128.817, -32.6603, -65.2318, 0.81 ) }
    dend_2 { pt3dadd( 129.584, -32.7309, -65.3849, 0.96 ) }
    dend_2 { pt3dadd( 130.357, -32.8132, -65.411, 0.96 ) }
    dend_2 { pt3dadd( 131.274, -32.8929, -65.3875, 0.59 ) }
    dend_2 { pt3dadd( 132.708, -32.9491, -65.3731, 0.59 ) }
    dend_2 { pt3dadd( 134.097, -32.9289, -65.3598, 0.66 ) }
    dend_2 { pt3dadd( 134.913, -32.8718, -65.4202, 1.03 ) }
    dend_2 { pt3dadd( 136.257, -32.733, -65.5977, 1.03 ) }
    dend_2 { pt3dadd( 137.628, -32.4921, -66.112, 0.59 ) }
    dend_2 { pt3dadd( 138.329, -32.3152, -66.503, 0.59 ) }
    dend_2 { pt3dadd( 139.263, -32.0399, -67.138, 0.59 ) }
    dend_2 { pt3dadd( 140.692, -31.6531, -68.2044, 1.11 ) }
    dend_2 { pt3dadd( 141.332, -31.5212, -68.6896, 1.33 ) }
    dend_2 { pt3dadd( 144.909, -30.9813, -71.2835, 1.03 ) }
    dend_2 { pt3dadd( 145.549, -30.9012, -71.7063, 1.4 ) }
    dend_2 { pt3dadd( 146.806, -30.7603, -72.4355, 0.81 ) }
    dend_2 { pt3dadd( 148.064, -30.6258, -73.0449, 0.74 ) }
    dend_2 { pt3dadd( 149.64, -30.4612, -73.6142, 0.59 ) }
    dend_2 { pt3dadd( 150.676, -30.3516, -73.8843, 0.59 ) }
    dend_2 { pt3dadd( 152.311, -30.1879, -74.0771, 0.59 ) }
    dend_2 { pt3dadd( 154.25, -29.9163, -74.2981, 0.88 ) }
    dend_2 { pt3dadd( 154.94, -29.754, -74.3662, 1.25 ) }
    dend_2 { pt3dadd( 155.553, -29.548, -74.418, 1.55 ) }
    dend_2 { pt3dadd( 156.466, -29.1813, -74.5059, 1.55 ) }
    dend_2 { pt3dadd( 157.208, -28.8714, -74.5967, 1.33 ) }
    dend_2 { pt3dadd( 158.126, -28.4858, -74.716, 0.66 ) }
    dend_2 { pt3dadd( 159.299, -28.0156, -74.8647, 0.66 ) }
    dend_2 { pt3dadd( 160.09, -27.7303, -75.0361, 0.66 ) }
    dend_2 { pt3dadd( 161.553, -27.2239, -75.5183, 0.66 ) }
    dend_2 { pt3dadd( 162.228, -27.0675, -75.9859, 0.66 ) }
    dend_2 { pt3dadd( 162.649, -27.0057, -76.3653, 0.96 ) }
    dend_2 { pt3dadd( 163.154, -26.9638, -76.8713, 0.96 ) }
    dend_2 { pt3dadd( 164.674, -26.9411, -78.4382, 0.74 ) }
    dend_2 { pt3dadd( 165.583, -26.9654, -79.3676, 1.62 ) }
    dend_2 { pt3dadd( 169.195, -27.1372, -82.9057, 0.66 ) }
    dend_2 { pt3dadd( 169.739, -27.1522, -83.4129, 0.66 ) }
    dend_2 { pt3dadd( 170.567, -27.1559, -84.1055, 1.11 ) }
    dend_2 { pt3dadd( 171.636, -27.1458, -84.8867, 1.11 ) }
    dend_2 { pt3dadd( 172.707, -27.0992, -85.4973, 0.52 ) }
    dend_2 { pt3dadd( 173.749, -26.9933, -85.9189, 0.52 ) }
    dend_2 { pt3dadd( 175.053, -26.7275, -86.2544, 1.25 ) }
    dend_2 { pt3dadd( 176.061, -26.4805, -86.5197, 0.88 ) }
    dend_2 { pt3dadd( 177.983, -25.9019, -87.0252, 0.44 ) }
    dend_2 { pt3dadd( 179.081, -25.5059, -87.2943, 0.44 ) }
    dend_2 { pt3dadd( 180.706, -24.8415, -87.6632, 0.52 ) }
    dend_2 { pt3dadd( 181.781, -24.3596, -87.89, 0.88 ) }
    dend_2 { pt3dadd( 182.313, -24.1088, -87.9906, 1.11 ) }
    dend_2 { pt3dadd( 182.775, -23.8636, -88.1296, 1.11 ) }
    dend_2 { pt3dadd( 183.157, -23.632, -88.3027, 1.11 ) }
    dend_2 { pt3dadd( 184.45, -22.787, -89.181, 0.52 ) }
    dend_2 { pt3dadd( 184.989, -22.4435, -89.6976, 0.52 ) }
    dend_2 { pt3dadd( 185.751, -21.9823, -90.5275, 0.81 ) }
    dend_2 { pt3dadd( 187.546, -20.9782, -92.535, 0.81 ) }
    dend_2 { pt3dadd( 188.392, -20.5298, -93.4579, 1.11 ) }
    dend_2 { pt3dadd( 188.759, -20.3492, -93.8173, 1.92 ) }
    dend_2 { pt3dadd( 190.853, -19.436, -95.5058, 0.59 ) }
    dend_2 { pt3dadd( 191.114, -19.3411, -95.662, 0.59 ) }
    dend_2 { pt3dadd( 192.033, -19.0882, -95.9714, 0.88 ) }
    dend_2 { pt3dadd( 193.185, -18.8666, -96.1031, 0.44 ) }
    dend_2 { pt3dadd( 195.055, -18.5925, -96.2144, 0.44 ) }
    dend_2 { pt3dadd( 196.524, -18.4239, -96.2601, 0.74 ) }
    dend_2 { pt3dadd( 197.356, -18.364, -96.3137, 0.74 ) }
    dend_2 { pt3dadd( 198.622, -18.348, -96.597, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 199.4, -18.3941, -96.931, 0.52 ) }
    dend_2 { pt3dadd( 200.6, -18.5358, -97.6627, 0.59 ) }
    dend_2 { pt3dadd( 201.063, -18.5914, -97.9944, 0.59 ) }
    dend_2 { pt3dadd( 203.103, -18.761, -99.5496, 0.59 ) }
    dend_2 { pt3dadd( 204.45, -18.7953, -100.573, 0.81 ) }
    dend_2 { pt3dadd( 205.717, -18.7398, -101.532, 1.4 ) }
    dend_2 { pt3dadd( 206.388, -18.6383, -101.995, 1.55 ) }
    dend_2 { pt3dadd( 207.917, -18.1717, -102.85, 0.44 ) }
    dend_2 { pt3dadd( 208.557, -17.8645, -103.101, 0.88 ) }
    dend_2 { pt3dadd( 209.324, -17.3981, -103.235, 0.88 ) }
    dend_2 { pt3dadd( 210.155, -16.8852, -103.358, 0.59 ) }
    dend_2 { pt3dadd( 211.443, -16.1444, -103.566, 0.59 ) }
    dend_2 { pt3dadd( 212.326, -15.7324, -103.825, 0.81 ) }
    dend_2 { pt3dadd( 213.347, -15.3757, -104.235, 0.81 ) }
    dend_2 { pt3dadd( 214.72, -14.991, -104.94, 0.52 ) }
    dend_2 { pt3dadd( 216.303, -14.5942, -105.931, 0.74 ) }
    dend_2 { pt3dadd( 216.846, -14.4543, -106.427, 0.74 ) }
    dend_2 { pt3dadd( 218.086, -14.0332, -108.059, 0.37 ) }
    dend_2 { pt3dadd( 218.623, -13.771, -108.97, 0.37 ) }
    dend_2 { pt3dadd( 219.353, -13.2737, -110.47, 0.37 ) }
    dend_2 { pt3dadd( 219.915, -12.7485, -111.809, 0.59 ) }
    dend_2 { pt3dadd( 221.419, -11.1223, -115.479, 0.88 ) }
    dend_2 { pt3dadd( 222.126, -10.3427, -117.143, 0.52 ) }
    dend_2 { pt3dadd( 222.395, -10.0905, -117.728, 0.52 ) }
    dend_2 { pt3dadd( 223.03, -9.65711, -118.999, 0.52 ) }
    dend_2 { pt3dadd( 223.577, -9.37838, -119.921, 0.81 ) }
    dend_2 { pt3dadd( 224.32, -9.08093, -120.965, 0.59 ) }
    dend_2 { pt3dadd( 224.981, -8.87592, -121.746, 0.59 ) }
    dend_2 { pt3dadd( 227.197, -8.35137, -124.239, 1.18 ) }
    dend_2 { pt3dadd( 229.838, -7.84875, -127.377, 0.74 ) }
    dend_2 { pt3dadd( 230.483, -7.75114, -128.211, 0.74 ) }
    dend_2 { pt3dadd( 231.079, -7.67273, -129.06, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -57.2641, 123.277, -33.3313, 0.29 ) }
    dend_87 { pt3dadd( -57.9247, 123.22, -34.5754, 0.29 ) }
    dend_87 { pt3dadd( -58.4893, 123.325, -35.557, 0.29 ) }
    dend_87 { pt3dadd( -58.7643, 123.547, -36.082, 0.59 ) }
    dend_87 { pt3dadd( -59.0813, 123.952, -36.6751, 0.59 ) }
    dend_87 { pt3dadd( -59.3567, 124.348, -37.1442, 0.59 ) }
    dend_87 { pt3dadd( -59.6764, 124.81, -37.6261, 0.44 ) }
    dend_87 { pt3dadd( -59.9552, 125.321, -37.9718, 0.59 ) }
    dend_87 { pt3dadd( -60.4136, 126.384, -38.6371, 0.37 ) }
    dend_87 { pt3dadd( -60.6134, 126.91, -38.9831, 0.29 ) }
    dend_87 { pt3dadd( -60.8117, 127.396, -39.3441, 0.59 ) }
    dend_87 { pt3dadd( -61.0293, 127.891, -39.7411, 0.59 ) }
    dend_87 { pt3dadd( -61.505, 128.934, -40.6067, 0.29 ) }
    dend_87 { pt3dadd( -61.9324, 129.944, -41.4212, 0.29 ) }
    dend_87 { pt3dadd( -62.1105, 130.442, -41.816, 0.29 ) }
    dend_87 { pt3dadd( -62.3657, 131.454, -42.6432, 0.29 ) }
    dend_87 { pt3dadd( -62.4556, 132.133, -43.2279, 0.29 ) }
    dend_87 { pt3dadd( -62.5008, 132.878, -43.8885, 0.52 ) }
    dend_87 { pt3dadd( -62.5202, 133.579, -44.5076, 0.66 ) }
    dend_87 { pt3dadd( -62.5311, 134.684, -45.4312, 0.44 ) }
    dend_87 { pt3dadd( -62.478, 135.616, -46.2136, 0.59 ) }
    dend_87 { pt3dadd( -62.2885, 136.793, -47.2789, 0.96 ) }
    dend_87 { pt3dadd( -62.2096, 137.183, -47.7036, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -57.2641, 123.277, -33.3313, 0.66 ) }
    dend_86 { pt3dadd( -55.7304, 123.665, -32.503, 0.66 ) }
    dend_86 { pt3dadd( -54.5051, 123.976, -31.8412, 0.29 ) }
    dend_86 { pt3dadd( -53.6156, 124.201, -31.3608, 0.44 ) }
    dend_86 { pt3dadd( -52.5192, 124.479, -30.7686, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -69.9217, 118.255, -31.0421, 0.29 ) }
    dend_82 { pt3dadd( -70.2305, 118.729, -31.5064, 0.29 ) }
    dend_82 { pt3dadd( -70.6179, 119.281, -32.1075, 0.59 ) }
    dend_82 { pt3dadd( -70.8698, 119.648, -32.5086, 0.44 ) }
    dend_82 { pt3dadd( -71.2351, 120.213, -33.0901, 0.88 ) }
    dend_82 { pt3dadd( -71.3961, 120.5, -33.3617, 1.03 ) }
    dend_82 { pt3dadd( -71.7551, 121.231, -33.9927, 0.52 ) }
    dend_82 { pt3dadd( -71.8682, 121.5, -34.2135, 0.44 ) }
    dend_82 { pt3dadd( -72.0976, 122.074, -34.6296, 0.66 ) }
    dend_82 { pt3dadd( -72.2744, 122.54, -34.9383, 0.88 ) }
    dend_82 { pt3dadd( -72.6273, 123.441, -35.4754, 0.59 ) }
    dend_82 { pt3dadd( -72.8711, 124.031, -35.8046, 0.74 ) }
    dend_82 { pt3dadd( -73.1292, 124.624, -36.1128, 0.74 ) }
    dend_82 { pt3dadd( -73.4972, 125.403, -36.5244, 0.37 ) }
    dend_82 { pt3dadd( -73.6713, 125.728, -36.7043, 0.37 ) }
    dend_82 { pt3dadd( -74.0939, 126.405, -37.0946, 0.66 ) }
    dend_82 { pt3dadd( -74.3989, 126.801, -37.3358, 0.66 ) }
    dend_82 { pt3dadd( -74.7268, 127.145, -37.566, 0.52 ) }
    dend_82 { pt3dadd( -75.2126, 127.555, -37.8663, 0.88 ) }
    dend_82 { pt3dadd( -75.5518, 127.786, -38.0503, 0.88 ) }
    dend_82 { pt3dadd( -76.0632, 128.06, -38.2849, 0.52 ) }
    dend_82 { pt3dadd( -76.6914, 128.336, -38.5306, 0.52 ) }
    dend_82 { pt3dadd( -77.4826, 128.658, -38.8026, 0.88 ) }
    dend_82 { pt3dadd( -78.0004, 128.873, -38.9623, 0.88 ) }
    dend_82 { pt3dadd( -78.6515, 129.147, -39.1418, 0.52 ) }
    dend_82 { pt3dadd( -79.2114, 129.39, -39.2881, 0.44 ) }
    dend_82 { pt3dadd( -79.8486, 129.674, -39.4549, 0.37 ) }
    dend_82 { pt3dadd( -80.4771, 129.981, -39.6116, 0.37 ) }
    dend_82 { pt3dadd( -81.1059, 130.327, -39.7676, 0.29 ) }
    dend_82 { pt3dadd( -82.1303, 130.946, -40.0296, 0.29 ) }
    dend_82 { pt3dadd( -82.608, 131.247, -40.1556, 0.29 ) }
    dend_82 { pt3dadd( -83.1567, 131.584, -40.3033, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -69.9217, 118.255, -31.0421, 0.29 ) }
    dend_81 { pt3dadd( -71.9768, 116.614, -30.5272, 0.29 ) }
    dend_81 { pt3dadd( -73.0952, 115.721, -30.2469, 0.29 ) }
    dend_81 { pt3dadd( -73.8876, 115.088, -30.0484, 0.22 ) }
    dend_81 { pt3dadd( -74.8986, 114.281, -29.7951, 0.22 ) }
    dend_81 { pt3dadd( -76.0235, 113.383, -29.5132, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 114.012, 49.427, 63.3962, 0.29 ) }
    dend_75 { pt3dadd( 117.139, 59.4172, 66.2631, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 120.444, 68.9536, 70.4251, 0.29 ) }
    dend_75 { pt3dadd( 124.698, 77.8714, 75.1234, 0.29 ) }
    dend_75 { pt3dadd( 127.342, 86.6523, 81.211, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 114.012, 49.427, 63.3962, 0.29 ) }
    dend_72 { pt3dadd( 122.372, 48.5822, 70.9202, 0.29 ) }
    dend_72 { pt3dadd( 131.196, 49.685, 77.8894, 0.29 ) }
    dend_72 { pt3dadd( 139.705, 52.9543, 84.5488, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 98.7708, 39.3813, -7.85445, 0.37 ) }
    dend_68 { pt3dadd( 99.1156, 39.9622, -7.4166, 0.37 ) }
    dend_68 { pt3dadd( 99.5993, 40.8047, -6.7114, 0.37 ) }
    dend_68 { pt3dadd( 99.9498, 41.415, -6.20053, 0.22 ) }
    dend_68 { pt3dadd( 100.687, 42.6982, -5.12647, 0.22 ) }
    dend_68 { pt3dadd( 101.248, 43.6762, -4.30784, 0.66 ) }
    dend_68 { pt3dadd( 101.925, 44.8539, -3.32197, 1.11 ) }
    dend_68 { pt3dadd( 102.085, 45.1368, -3.05043, 1.11 ) }
    dend_68 { pt3dadd( 106.32, 53.027, 1.81919, 1.11 ) }
    dend_68 { pt3dadd( 111.042, 60.8785, 6.30701, 1.11 ) }
    dend_68 { pt3dadd( 116.539, 68.0199, 11.198, 1.11 ) }
    dend_68 { pt3dadd( 122.283, 74.3729, 16.9259, 1.11 ) }
    dend_68 { pt3dadd( 128.626, 81.5009, 20.7259, 1.11 ) }
    dend_68 { pt3dadd( 135.227, 88.3483, 24.6546, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 98.7708, 39.3813, -7.85445, 0.44 ) }
    dend_59 { pt3dadd( 99.6458, 39.5457, -7.96237, 0.44 ) }
    dend_59 { pt3dadd( 100.581, 39.6785, -8.08681, 0.44 ) }
    dend_59 { pt3dadd( 101.601, 39.7733, -8.16737, 0.74 ) }
    dend_59 { pt3dadd( 102.226, 39.8139, -8.1985, 1.03 ) }
    dend_59 { pt3dadd( 102.816, 39.8408, -8.21345, 1.03 ) }
    dend_59 { pt3dadd( 103.279, 39.8639, -8.23987, 1.03 ) }
    dend_59 { pt3dadd( 104.041, 39.9251, -8.35109, 0.66 ) }
    dend_59 { pt3dadd( 105.066, 40.0792, -8.59208, 0.66 ) }
    dend_59 { pt3dadd( 105.415, 40.182, -8.71698, 0.81 ) }
    dend_59 { pt3dadd( 105.934, 40.4189, -8.94527, 0.44 ) }
    dend_59 { pt3dadd( 106.972, 41.0497, -9.45818, 0.44 ) }
    dend_59 { pt3dadd( 108.196, 41.9402, -10.0882, 0.37 ) }
    dend_59 { pt3dadd( 108.62, 42.2916, -10.3259, 0.37 ) }
    dend_59 { pt3dadd( 109.27, 42.8618, -10.7096, 0.37 ) }
    dend_59 { pt3dadd( 110.058, 43.5585, -11.1403, 0.66 ) }
    dend_59 { pt3dadd( 110.528, 43.9681, -11.36, 0.66 ) }
    dend_59 { pt3dadd( 111.214, 44.5114, -11.5779, 0.37 ) }
    dend_59 { pt3dadd( 111.638, 44.8007, -11.6656, 0.37 ) }
    dend_59 { pt3dadd( 112.179, 45.154, -11.7692, 0.59 ) }
    dend_59 { pt3dadd( 112.657, 45.4776, -11.8732, 0.59 ) }
    dend_59 { pt3dadd( 113.097, 45.8206, -12.0506, 0.44 ) }
    dend_59 { pt3dadd( 113.823, 46.3653, -12.424, 0.66 ) }
    dend_59 { pt3dadd( 113.954, 46.4549, -12.499, 0.96 ) }
    dend_59 { pt3dadd( 114.454, 46.7363, -12.7878, 0.96 ) }
    dend_59 { pt3dadd( 115.182, 47.0587, -13.2237, 1.11 ) }
    dend_59 { pt3dadd( 116.872, 47.6446, -14.1927, 0.44 ) }
    dend_59 { pt3dadd( 117.83, 47.9141, -14.7031, 0.44 ) }
    dend_59 { pt3dadd( 118.586, 48.096, -15.0678, 0.37 ) }
    dend_59 { pt3dadd( 119.519, 48.3268, -15.5064, 0.37 ) }
    dend_59 { pt3dadd( 120.092, 48.4752, -15.7532, 0.29 ) }
    dend_59 { pt3dadd( 120.896, 48.7318, -16.0554, 0.22 ) }
    dend_59 { pt3dadd( 121.444, 49.0256, -16.2453, 0.59 ) }
    dend_59 { pt3dadd( 121.724, 49.301, -16.3639, 0.59 ) }
    dend_59 { pt3dadd( 122.493, 50.2723, -16.8331, 0.29 ) }
    dend_59 { pt3dadd( 122.811, 50.6984, -17.0549, 0.37 ) }
    dend_59 { pt3dadd( 123.187, 51.176, -17.3287, 0.52 ) }
    dend_59 { pt3dadd( 123.594, 51.6074, -17.6489, 0.74 ) }
    dend_59 { pt3dadd( 124.138, 52.1384, -18.2122, 0.96 ) }
    dend_59 { pt3dadd( 125.05, 53.0515, -19.4143, 0.29 ) }
    dend_59 { pt3dadd( 125.379, 53.4286, -19.9525, 0.52 ) }
    dend_59 { pt3dadd( 125.513, 53.6215, -20.2303, 0.81 ) }
    dend_59 { pt3dadd( 125.915, 54.3703, -21.2506, 1.11 ) }
    dend_59 { pt3dadd( 126.576, 55.9461, -23.2932, 0.81 ) }
    dend_59 { pt3dadd( 126.836, 56.75, -24.2507, 0.96 ) }
    dend_59 { pt3dadd( 127.09, 57.7368, -25.3046, 0.66 ) }
    dend_59 { pt3dadd( 127.284, 58.5178, -26.0769, 0.52 ) }
    dend_59 { pt3dadd( 127.511, 59.2848, -26.7526, 0.52 ) }
    dend_59 { pt3dadd( 127.639, 59.584, -26.9593, 0.74 ) }
    dend_59 { pt3dadd( 128.069, 60.0962, -27.2238, 0.74 ) }
    dend_59 { pt3dadd( 128.375, 60.334, -27.3477, 0.96 ) }
    dend_59 { pt3dadd( 128.859, 60.6041, -27.5315, 0.96 ) }
    dend_59 { pt3dadd( 129.63, 61.0178, -27.9098, 0.74 ) }
    dend_59 { pt3dadd( 130.37, 61.4643, -28.3492, 0.44 ) }
    dend_59 { pt3dadd( 131.142, 62.0898, -28.9558, 0.44 ) }
    dend_59 { pt3dadd( 131.419, 62.3899, -29.2288, 0.96 ) }
    dend_59 { pt3dadd( 131.876, 63.0929, -29.8431, 1.18 ) }
    dend_59 { pt3dadd( 132.446, 64.3148, -30.8708, 0.66 ) }
    dend_59 { pt3dadd( 132.624, 64.8504, -31.316, 0.66 ) }
    dend_59 { pt3dadd( 132.895, 65.9598, -32.25, 0.59 ) }
    dend_59 { pt3dadd( 132.994, 66.3954, -32.5927, 0.52 ) }
    dend_59 { pt3dadd( 133.306, 67.5727, -33.4618, 0.52 ) }
    dend_59 { pt3dadd( 133.403, 67.9104, -33.6749, 0.96 ) }
    dend_59 { pt3dadd( 133.635, 68.5962, -34.0496, 0.96 ) }
    dend_59 { pt3dadd( 134.109, 69.8688, -34.6457, 0.59 ) }
    dend_59 { pt3dadd( 134.551, 70.9744, -35.045, 0.59 ) }
    dend_59 { pt3dadd( 134.841, 71.6871, -35.26, 0.88 ) }
    dend_59 { pt3dadd( 135.288, 72.7098, -35.4834, 0.74 ) }
    dend_59 { pt3dadd( 135.7, 73.5226, -35.6474, 0.74 ) }
    dend_59 { pt3dadd( 136.212, 74.3262, -35.7849, 0.88 ) }
    dend_59 { pt3dadd( 136.544, 74.7138, -35.8707, 0.88 ) }
    dend_59 { pt3dadd( 137.16, 75.2734, -36.108, 0.37 ) }
    dend_59 { pt3dadd( 137.802, 75.7674, -36.4083, 0.37 ) }
    dend_59 { pt3dadd( 138.804, 76.4248, -36.9357, 0.37 ) }
    dend_59 { pt3dadd( 139.496, 76.8627, -37.3521, 0.37 ) }
    dend_59 { pt3dadd( 140.289, 77.3667, -37.8871, 0.37 ) }
    dend_59 { pt3dadd( 140.767, 77.6876, -38.2117, 0.59 ) }
    dend_59 { pt3dadd( 141.364, 78.1082, -38.601, 0.74 ) }
    dend_59 { pt3dadd( 141.764, 78.4192, -38.8613, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 142.516, 79.0897, -39.3629, 0.44 ) }
    dend_59 { pt3dadd( 142.919, 79.4476, -39.62, 0.37 ) }
    dend_59 { pt3dadd( 144.136, 80.3509, -40.2645, 0.37 ) }
    dend_59 { pt3dadd( 144.725, 80.6996, -40.5413, 0.74 ) }
    dend_59 { pt3dadd( 145.042, 80.8456, -40.6785, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 123.382, 72.8735, 10.333, 0.29 ) }
    dend_57 { pt3dadd( 131.123, 79.3615, 14.3673, 0.29 ) }
    dend_57 { pt3dadd( 138.633, 86.9438, 16.343, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 123.382, 72.8735, 10.333, 0.29 ) }
    dend_56 { pt3dadd( 129.383, 80.5758, 12.4681, 0.29 ) }
    dend_56 { pt3dadd( 135.429, 87.8874, 15.7504, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -18.2804, -142.901, 15.1493, 0.29 ) }
    dend_37 { pt3dadd( -14.8894, -152.388, 13.4974, 0.29 ) }
    dend_37 { pt3dadd( -12.9362, -162.354, 13.2005, 0.29 ) }
    dend_37 { pt3dadd( -11.3473, -172.228, 11.3239, 0.29 ) }
    dend_37 { pt3dadd( -11.1513, -182.355, 10.6742, 0.29 ) }
    dend_37 { pt3dadd( -11.8853, -192.457, 9.941, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -18.2804, -142.901, 15.1493, 0.29 ) }
    dend_36 { pt3dadd( -17.6052, -154.29, 9.41193, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.85321, -98.957, 10.5369, 0.37 ) }
    dend_24 { pt3dadd( -2.45638, -100.005, 9.43126, 0.37 ) }
    dend_24 { pt3dadd( -2.85321, -100.558, 8.85443, 0.37 ) }
    dend_24 { pt3dadd( -3.26122, -101.037, 8.33272, 0.44 ) }
    dend_24 { pt3dadd( -3.76939, -101.557, 7.75395, 0.74 ) }
    dend_24 { pt3dadd( -4.29196, -102.034, 7.21887, 0.59 ) }
    dend_24 { pt3dadd( -4.85355, -102.478, 6.70721, 0.59 ) }
    dend_24 { pt3dadd( -5.21667, -102.659, 6.46881, 0.74 ) }
    dend_24 { pt3dadd( -5.84271, -102.855, 6.13187, 0.88 ) }
    dend_24 { pt3dadd( -6.25019, -102.932, 5.95621, 1.18 ) }
    dend_24 { pt3dadd( -6.67131, -102.972, 5.80522, 0.59 ) }
    dend_24 { pt3dadd( -7.31851, -102.997, 5.59228, 0.44 ) }
    dend_24 { pt3dadd( -7.95959, -103.011, 5.37786, 0.52 ) }
    dend_24 { pt3dadd( -8.25361, -103.028, 5.27048, 0.74 ) }
    dend_24 { pt3dadd( -8.75328, -103.123, 5.0886, 0.74 ) }
    dend_24 { pt3dadd( -9.10507, -103.259, 4.94044, 0.59 ) }
    dend_24 { pt3dadd( -9.45587, -103.481, 4.77673, 0.59 ) }
    dend_24 { pt3dadd( -9.90391, -103.893, 4.55412, 0.59 ) }
    dend_24 { pt3dadd( -10.3703, -104.46, 4.32559, 0.44 ) }
    dend_24 { pt3dadd( -10.895, -105.212, 4.0855, 0.37 ) }
    dend_24 { pt3dadd( -11.194, -105.717, 3.96087, 1.03 ) }
    dend_24 { pt3dadd( -11.3895, -106.1, 3.88052, 1.03 ) }
    dend_24 { pt3dadd( -11.5424, -106.451, 3.81904, 0.96 ) }
    dend_24 { pt3dadd( -11.7945, -107.179, 3.72675, 0.66 ) }
    dend_24 { pt3dadd( -11.979, -107.834, 3.66114, 0.66 ) }
    dend_24 { pt3dadd( -12.1476, -108.583, 3.5845, 0.88 ) }
    dend_24 { pt3dadd( -12.2305, -109.043, 3.54007, 1.03 ) }
    dend_24 { pt3dadd( -12.3157, -109.696, 3.47248, 0.88 ) }
    dend_24 { pt3dadd( -12.3896, -110.537, 3.37481, 0.52 ) }
    dend_24 { pt3dadd( -12.4234, -111.194, 3.28784, 0.52 ) }
    dend_24 { pt3dadd( -12.4381, -111.694, 3.20992, 0.96 ) }
    dend_24 { pt3dadd( -12.4488, -112.019, 3.15152, 0.96 ) }
    dend_24 { pt3dadd( -12.5046, -112.82, 2.97983, 0.59 ) }
    dend_24 { pt3dadd( -12.5864, -113.458, 2.81983, 0.66 ) }
    dend_24 { pt3dadd( -12.6887, -113.934, 2.67805, 0.81 ) }
    dend_24 { pt3dadd( -12.8505, -114.513, 2.47834, 0.81 ) }
    dend_24 { pt3dadd( -12.9634, -114.836, 2.35048, 0.81 ) }
    dend_24 { pt3dadd( -13.1753, -115.425, 2.06419, 0.44 ) }
    dend_24 { pt3dadd( -13.281, -115.734, 1.89183, 0.81 ) }
    dend_24 { pt3dadd( -13.4022, -116.179, 1.62012, 0.81 ) }
    dend_24 { pt3dadd( -13.5139, -116.816, 1.22607, 0.52 ) }
    dend_24 { pt3dadd( -13.5387, -117.333, 0.913956, 0.52 ) }
    dend_24 { pt3dadd( -13.4759, -118.278, 0.368158, 0.74 ) }
    dend_24 { pt3dadd( -13.4094, -118.74, 0.117354, 1.11 ) }
    dend_24 { pt3dadd( -13.3467, -119.166, -0.0949199, 1.11 ) }
    dend_24 { pt3dadd( -13.2836, -119.708, -0.334023, 0.96 ) }
    dend_24 { pt3dadd( -13.2557, -120.315, -0.573382, 0.59 ) }
    dend_24 { pt3dadd( -13.2949, -121.063, -0.841891, 0.44 ) }
    dend_24 { pt3dadd( -13.4674, -121.891, -1.11655, 0.44 ) }
    dend_24 { pt3dadd( -13.6731, -122.511, -1.32585, 0.44 ) }
    dend_24 { pt3dadd( -13.9141, -123.09, -1.51261, 0.74 ) }
    dend_24 { pt3dadd( -14.0995, -123.516, -1.64195, 0.74 ) }
    dend_24 { pt3dadd( -14.2822, -123.928, -1.75335, 0.74 ) }
    dend_24 { pt3dadd( -14.6059, -124.663, -1.92601, 0.66 ) }
    dend_24 { pt3dadd( -14.8401, -125.211, -2.03684, 0.44 ) }
    dend_24 { pt3dadd( -15.1369, -125.919, -2.17138, 0.44 ) }
    dend_24 { pt3dadd( -15.6084, -126.906, -2.34255, 0.44 ) }
    dend_24 { pt3dadd( -15.8814, -127.363, -2.41274, 0.88 ) }
    dend_24 { pt3dadd( -16.2061, -127.788, -2.46785, 1.18 ) }
    dend_24 { pt3dadd( -16.4637, -128.061, -2.49096, 1.18 ) }
    dend_24 { pt3dadd( -16.7907, -128.357, -2.50798, 1.03 ) }
    dend_24 { pt3dadd( -17.7267, -129.079, -2.5483, 0.66 ) }
    dend_24 { pt3dadd( -18.5929, -129.654, -2.57403, 0.66 ) }
    dend_24 { pt3dadd( -19.3294, -130.125, -2.59338, 1.25 ) }
    dend_24 { pt3dadd( -19.7208, -130.378, -2.60196, 1.55 ) }
    dend_24 { pt3dadd( -20.1935, -130.691, -2.61231, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.85321, -98.957, 10.5369, 0.74 ) }
    dend_19 { pt3dadd( -2.30035, -100.02, 9.70292, 0.74 ) }
    dend_19 { pt3dadd( -2.82658, -101.24, 8.72621, 0.74 ) }
    dend_19 { pt3dadd( -3.1049, -101.968, 8.2358, 0.74 ) }
    dend_19 { pt3dadd( -3.36989, -102.782, 7.76414, 0.81 ) }
    dend_19 { pt3dadd( -3.85513, -104.648, 6.88151, 0.52 ) }
    dend_19 { pt3dadd( -4.14037, -106.131, 6.31241, 0.74 ) }
    dend_19 { pt3dadd( -4.23015, -106.92, 6.09193, 0.74 ) }
    dend_19 { pt3dadd( -4.05811, -108.662, 6.00909, 0.74 ) }
    dend_19 { pt3dadd( -3.74246, -109.523, 6.14873, 0.81 ) }
    dend_19 { pt3dadd( -3.1155, -110.561, 6.5123, 0.66 ) }
    dend_19 { pt3dadd( -2.72537, -111.072, 6.75966, 1.11 ) }
    dend_19 { pt3dadd( -2.31316, -111.57, 6.99267, 1.11 ) }
    dend_19 { pt3dadd( -1.77873, -112.205, 7.21487, 0.81 ) }
    dend_19 { pt3dadd( -1.09007, -113.07, 7.35462, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( -0.467067, -113.913, 7.42275, 0.96 ) }
    dend_19 { pt3dadd( 0.0844249, -114.701, 7.45647, 0.88 ) }
    dend_19 { pt3dadd( 0.738606, -115.668, 7.50333, 0.96 ) }
    dend_19 { pt3dadd( 1.19174, -116.39, 7.51941, 1.11 ) }
    dend_19 { pt3dadd( 1.6928, -117.291, 7.48798, 1.11 ) }
    dend_19 { pt3dadd( 2.09884, -118.136, 7.41091, 0.74 ) }
    dend_19 { pt3dadd( 2.61481, -119.457, 7.23818, 0.66 ) }
    dend_19 { pt3dadd( 2.83722, -120.148, 7.13296, 0.66 ) }
    dend_19 { pt3dadd( 3.22521, -121.749, 6.88923, 0.66 ) }
    dend_19 { pt3dadd( 3.47214, -123.43, 6.63048, 0.59 ) }
    dend_19 { pt3dadd( 3.52343, -124.405, 6.46587, 0.96 ) }
    dend_19 { pt3dadd( 3.48616, -125.619, 6.24209, 1.18 ) }
    dend_19 { pt3dadd( 3.38608, -126.524, 6.07796, 1.03 ) }
    dend_19 { pt3dadd( 3.22347, -127.588, 5.90017, 0.88 ) }
    dend_19 { pt3dadd( 3.00826, -128.967, 5.72383, 0.74 ) }
    dend_19 { pt3dadd( 2.86064, -130.164, 5.68984, 0.59 ) }
    dend_19 { pt3dadd( 2.75613, -131.175, 5.73855, 0.59 ) }
    dend_19 { pt3dadd( 2.66088, -132.013, 5.85208, 1.4 ) }
    dend_19 { pt3dadd( 2.56168, -132.631, 5.98674, 1.4 ) }
    dend_19 { pt3dadd( 2.28127, -134.205, 6.47661, 0.88 ) }
    dend_19 { pt3dadd( 1.9568, -136.049, 7.2922, 0.66 ) }
    dend_19 { pt3dadd( 1.81091, -136.821, 7.69705, 0.88 ) }
    dend_19 { pt3dadd( 1.61209, -137.801, 8.24556, 0.88 ) }
    dend_19 { pt3dadd( 1.27238, -139.327, 9.10451, 0.59 ) }
    dend_19 { pt3dadd( 1.01579, -140.301, 9.63162, 0.81 ) }
    dend_19 { pt3dadd( 0.521135, -141.915, 10.433, 0.81 ) }
    dend_19 { pt3dadd( 0.259167, -142.749, 10.7555, 1.11 ) }
    dend_19 { pt3dadd( 0.0590641, -143.435, 10.9754, 1.11 ) }
    dend_19 { pt3dadd( -0.185163, -144.423, 11.1956, 0.52 ) }
    dend_19 { pt3dadd( -0.364734, -145.359, 11.3401, 0.74 ) }
    dend_19 { pt3dadd( -0.50377, -146.195, 11.4206, 1.03 ) }
    dend_19 { pt3dadd( -0.568955, -146.895, 11.4449, 1.25 ) }
    dend_19 { pt3dadd( -0.570157, -147.582, 11.5204, 1.33 ) }
    dend_19 { pt3dadd( -0.48124, -148.707, 11.814, 1.03 ) }
    dend_19 { pt3dadd( -0.271336, -149.754, 12.2339, 0.74 ) }
    dend_19 { pt3dadd( 0.00754357, -150.599, 12.6674, 0.44 ) }
    dend_19 { pt3dadd( 0.360124, -151.364, 13.1337, 0.29 ) }
    dend_19 { pt3dadd( 1.01378, -152.409, 13.8914, 0.29 ) }
    dend_19 { pt3dadd( 1.9468, -153.55, 14.8753, 0.29 ) }
    dend_19 { pt3dadd( 2.51078, -154.057, 15.4062, 0.29 ) }
    dend_19 { pt3dadd( 3.06239, -154.409, 15.8364, 0.88 ) }
    dend_19 { pt3dadd( 3.53055, -154.657, 16.167, 0.88 ) }
    dend_19 { pt3dadd( 4.31558, -155.037, 16.6775, 0.52 ) }
    dend_19 { pt3dadd( 4.68535, -155.209, 16.8638, 0.52 ) }
    dend_19 { pt3dadd( 5.35848, -155.553, 17.185, 0.52 ) }
    dend_19 { pt3dadd( 5.86473, -155.935, 17.4928, 0.52 ) }
    dend_19 { pt3dadd( 6.5254, -156.655, 17.8921, 0.52 ) }
    dend_19 { pt3dadd( 6.84107, -157.118, 18.062, 0.88 ) }
    dend_19 { pt3dadd( 7.18485, -157.694, 18.198, 0.88 ) }
    dend_19 { pt3dadd( 7.62232, -158.402, 18.2829, 1.11 ) }
    dend_19 { pt3dadd( 8.08858, -159.06, 18.3384, 0.66 ) }
    dend_19 { pt3dadd( 9.01375, -160.108, 18.3846, 0.66 ) }
    dend_19 { pt3dadd( 9.46624, -160.48, 18.4075, 0.66 ) }
    dend_19 { pt3dadd( 10.2648, -161.008, 18.4835, 0.66 ) }
    dend_19 { pt3dadd( 10.9101, -161.381, 18.5723, 0.52 ) }
    dend_19 { pt3dadd( 12.0111, -162.013, 18.7085, 0.66 ) }
    dend_19 { pt3dadd( 12.3592, -162.22, 18.7874, 0.66 ) }
    dend_19 { pt3dadd( 13.0983, -162.682, 19.097, 0.44 ) }
    dend_19 { pt3dadd( 13.6933, -163.084, 19.4586, 0.44 ) }
    dend_19 { pt3dadd( 14.495, -163.692, 20.1026, 0.52 ) }
    dend_19 { pt3dadd( 15.4187, -164.474, 21.0427, 0.66 ) }
    dend_19 { pt3dadd( 16.1943, -165.189, 21.9326, 0.44 ) }
    dend_19 { pt3dadd( 17.0143, -165.969, 22.9506, 0.81 ) }
    dend_19 { pt3dadd( 17.7837, -166.694, 23.8744, 0.52 ) }
    dend_19 { pt3dadd( 18.2989, -167.171, 24.442, 0.74 ) }
    dend_19 { pt3dadd( 18.9406, -167.754, 25.0583, 0.29 ) }
    dend_19 { pt3dadd( 19.2968, -168.075, 25.3111, 0.52 ) }
    dend_19 { pt3dadd( 19.864, -168.583, 25.5039, 0.59 ) }
    dend_19 { pt3dadd( 20.9695, -169.602, 25.7528, 0.37 ) }
    dend_19 { pt3dadd( 21.7837, -170.35, 25.8486, 0.66 ) }
    dend_19 { pt3dadd( 22.2518, -170.773, 25.8776, 1.03 ) }
    dend_19 { pt3dadd( 23.0072, -171.447, 25.8943, 1.03 ) }
    dend_19 { pt3dadd( 23.8344, -172.192, 25.9533, 0.74 ) }
    dend_19 { pt3dadd( 25.1471, -173.382, 26.1819, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.3457, -165.702, -28.8661, 0.44 ) }
    dend_13 { pt3dadd( 19.1317, -167.253, -28.9091, 0.44 ) }
    dend_13 { pt3dadd( 18.9718, -168.336, -28.9425, 0.81 ) }
    dend_13 { pt3dadd( 18.8365, -169.167, -28.9746, 1.18 ) }
    dend_13 { pt3dadd( 18.647, -170.276, -29.0267, 0.74 ) }
    dend_13 { pt3dadd( 18.4494, -171.429, -29.0883, 0.44 ) }
    dend_13 { pt3dadd( 18.2748, -172.443, -29.1477, 0.96 ) }
    dend_13 { pt3dadd( 18.0922, -173.492, -29.2174, 0.96 ) }
    dend_13 { pt3dadd( 17.9151, -174.488, -29.2932, 1.18 ) }
    dend_13 { pt3dadd( 17.5972, -175.969, -29.4335, 0.74 ) }
    dend_13 { pt3dadd( 17.2376, -177.298, -29.6353, 0.66 ) }
    dend_13 { pt3dadd( 16.8803, -178.371, -29.8677, 0.66 ) }
    dend_13 { pt3dadd( 16.3855, -179.701, -30.2573, 0.66 ) }
    dend_13 { pt3dadd( 16.1268, -180.353, -30.494, 1.03 ) }
    dend_13 { pt3dadd( 15.754, -181.25, -30.877, 0.81 ) }
    dend_13 { pt3dadd( 15.2254, -182.67, -31.6018, 0.52 ) }
    dend_13 { pt3dadd( 14.9867, -183.53, -32.0226, 0.44 ) }
    dend_13 { pt3dadd( 14.81, -184.628, -32.4623, 0.37 ) }
    dend_13 { pt3dadd( 14.7707, -185.266, -32.6441, 0.66 ) }
    dend_13 { pt3dadd( 14.7453, -185.977, -32.7697, 0.66 ) }
    dend_13 { pt3dadd( 14.7351, -187.849, -32.9992, 0.44 ) }
    dend_13 { pt3dadd( 14.6936, -189.737, -33.1421, 0.44 ) }
    dend_13 { pt3dadd( 14.5831, -191.243, -33.2371, 0.66 ) }
    dend_13 { pt3dadd( 14.3876, -192.563, -33.3244, 0.81 ) }
    dend_13 { pt3dadd( 14.0561, -193.987, -33.4822, 0.96 ) }
    dend_13 { pt3dadd( 13.516, -195.468, -33.7332, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 12.9517, -196.603, -33.9944, 0.81 ) }
    dend_13 { pt3dadd( 12.4089, -197.591, -34.3153, 0.88 ) }
    dend_13 { pt3dadd( 11.9988, -198.357, -34.6074, 0.66 ) }
    dend_13 { pt3dadd( 11.4369, -199.434, -35.0568, 0.29 ) }
    dend_13 { pt3dadd( 10.7423, -200.812, -35.6446, 0.29 ) }
    dend_13 { pt3dadd( 10.3325, -201.612, -35.9702, 0.52 ) }
    dend_13 { pt3dadd( 9.6967, -202.852, -36.4902, 0.52 ) }
    dend_13 { pt3dadd( 9.1644, -203.87, -36.9168, 0.37 ) }
    dend_13 { pt3dadd( 8.65412, -204.784, -37.3027, 0.29 ) }
    dend_13 { pt3dadd( 8.14039, -205.579, -37.6363, 0.29 ) }
    dend_13 { pt3dadd( 7.91401, -205.862, -37.7779, 0.88 ) }
    dend_13 { pt3dadd( 7.38065, -206.326, -38.0945, 1.11 ) }
    dend_13 { pt3dadd( 6.71004, -206.713, -38.4611, 0.44 ) }
    dend_13 { pt3dadd( 5.85224, -207.073, -38.9063, 0.37 ) }
    dend_13 { pt3dadd( 5.02461, -207.348, -39.342, 0.59 ) }
    dend_13 { pt3dadd( 4.28616, -207.548, -39.7431, 0.74 ) }
    dend_13 { pt3dadd( 3.31667, -207.785, -40.2823, 0.44 ) }
    dend_13 { pt3dadd( 2.47312, -207.994, -40.7465, 0.37 ) }
    dend_13 { pt3dadd( 1.9113, -208.155, -41.0484, 0.88 ) }
    dend_13 { pt3dadd( 1.2604, -208.393, -41.38, 1.11 ) }
    dend_13 { pt3dadd( 0.787037, -208.608, -41.5987, 1.11 ) }
    dend_13 { pt3dadd( 0.293922, -208.842, -41.7964, 1.11 ) }
    dend_13 { pt3dadd( -0.937, -209.455, -42.2476, 0.29 ) }
    dend_13 { pt3dadd( -1.74933, -209.878, -42.5426, 0.59 ) }
    dend_13 { pt3dadd( -2.28923, -210.168, -42.7345, 0.59 ) }
    dend_13 { pt3dadd( -3.61879, -210.946, -43.1891, 0.29 ) }
    dend_13 { pt3dadd( -4.43305, -211.481, -43.4516, 0.29 ) }
    dend_13 { pt3dadd( -5.07178, -211.957, -43.6512, 0.52 ) }
    dend_13 { pt3dadd( -5.81777, -212.576, -43.8839, 0.52 ) }
    dend_13 { pt3dadd( -6.21222, -212.921, -44.0061, 0.81 ) }
    dend_13 { pt3dadd( -6.87933, -213.608, -44.2186, 0.81 ) }
    dend_13 { pt3dadd( -7.53921, -214.492, -44.4398, 0.29 ) }
    dend_13 { pt3dadd( -8.30006, -215.692, -44.6945, 0.29 ) }
    dend_13 { pt3dadd( -8.72038, -216.396, -44.8249, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 19.3457, -165.702, -28.8661, 0.22 ) }
    dend_12 { pt3dadd( 20.2989, -166.275, -28.5725, 0.22 ) }
    dend_12 { pt3dadd( 21.3041, -166.88, -28.2628, 0.22 ) }
    dend_12 { pt3dadd( 22.5176, -167.61, -27.8889, 0.22 ) }
    dend_12 { pt3dadd( 23.3529, -168.113, -27.6316, 0.22 ) }
    dend_12 { pt3dadd( 24.2393, -168.646, -27.3585, 0.22 ) }
    dend_12 { pt3dadd( 25.1511, -169.195, -27.0776, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 231.079, -7.67273, -129.06, 0.74 ) }
    dend_10 { pt3dadd( 233.424, -9.018, -129.907, 0.74 ) }
    dend_10 { pt3dadd( 234.057, -9.45231, -130.035, 0.44 ) }
    dend_10 { pt3dadd( 234.52, -9.7626, -130.084, 0.74 ) }
    dend_10 { pt3dadd( 235.248, -10.2033, -130.113, 0.52 ) }
    dend_10 { pt3dadd( 236.229, -10.7189, -130.095, 0.52 ) }
    dend_10 { pt3dadd( 237.287, -11.195, -130.074, 0.52 ) }
    dend_10 { pt3dadd( 238.071, -11.4995, -129.943, 0.52 ) }
    dend_10 { pt3dadd( 238.886, -11.75, -129.821, 0.52 ) }
    dend_10 { pt3dadd( 239.922, -11.9462, -129.742, 0.52 ) }
    dend_10 { pt3dadd( 240.788, -11.9922, -129.735, 0.74 ) }
    dend_10 { pt3dadd( 241.691, -11.9318, -129.786, 1.03 ) }
    dend_10 { pt3dadd( 242.025, -11.885, -129.824, 1.4 ) }
    dend_10 { pt3dadd( 242.357, -11.8297, -129.874, 1.4 ) }
    dend_10 { pt3dadd( 243.692, -11.621, -130.128, 0.44 ) }
    dend_10 { pt3dadd( 244.2, -11.553, -130.179, 0.74 ) }
    dend_10 { pt3dadd( 244.951, -11.4769, -130.151, 0.74 ) }
    dend_10 { pt3dadd( 245.463, -11.435, -130.046, 0.96 ) }
    dend_10 { pt3dadd( 245.941, -11.4092, -129.863, 0.96 ) }
    dend_10 { pt3dadd( 246.564, -11.4127, -129.531, 0.96 ) }
    dend_10 { pt3dadd( 248.025, -11.5547, -128.504, 0.66 ) }
    dend_10 { pt3dadd( 248.623, -11.6741, -128.012, 0.81 ) }
    dend_10 { pt3dadd( 248.972, -11.7823, -127.676, 0.81 ) }
    dend_10 { pt3dadd( 249.813, -12.1017, -126.806, 0.52 ) }
    dend_10 { pt3dadd( 250.441, -12.3658, -126.153, 0.52 ) }
    dend_10 { pt3dadd( 251.136, -12.6756, -125.477, 0.52 ) }
    dend_10 { pt3dadd( 251.829, -12.977, -124.926, 0.52 ) }
    dend_10 { pt3dadd( 252.728, -13.3416, -124.298, 0.44 ) }
    dend_10 { pt3dadd( 253.23, -13.5154, -124.031, 0.96 ) }
    dend_10 { pt3dadd( 253.788, -13.6685, -123.894, 1.11 ) }
    dend_10 { pt3dadd( 254.602, -13.8516, -123.892, 0.44 ) }
    dend_10 { pt3dadd( 255.34, -14.0335, -124.071, 0.37 ) }
    dend_10 { pt3dadd( 255.876, -14.2067, -124.318, 0.37 ) }
    dend_10 { pt3dadd( 256.746, -14.5475, -124.885, 0.66 ) }
    dend_10 { pt3dadd( 257.716, -14.9738, -125.651, 0.74 ) }
    dend_10 { pt3dadd( 258.129, -15.1606, -126.019, 0.81 ) }
    dend_10 { pt3dadd( 258.729, -15.4248, -126.612, 0.81 ) }
    dend_10 { pt3dadd( 259.505, -15.7387, -127.418, 0.66 ) }
    dend_10 { pt3dadd( 260.217, -15.9834, -128.126, 0.66 ) }
    dend_10 { pt3dadd( 260.893, -16.1858, -128.74, 0.29 ) }
    dend_10 { pt3dadd( 261.363, -16.3168, -129.129, 0.59 ) }
    dend_10 { pt3dadd( 261.867, -16.4427, -129.514, 0.74 ) }
    dend_10 { pt3dadd( 262.345, -16.5497, -129.874, 0.44 ) }
    dend_10 { pt3dadd( 262.973, -16.6758, -130.322, 0.37 ) }
    dend_10 { pt3dadd( 263.619, -16.8181, -130.767, 0.37 ) }
    dend_10 { pt3dadd( 264.251, -16.9776, -131.177, 0.59 ) }
    dend_10 { pt3dadd( 264.75, -17.1256, -131.489, 0.59 ) }
    dend_10 { pt3dadd( 266.035, -17.599, -132.425, 0.29 ) }
    dend_10 { pt3dadd( 266.859, -17.9806, -133.11, 0.29 ) }
    dend_10 { pt3dadd( 267.281, -18.2158, -133.507, 0.29 ) }
    dend_10 { pt3dadd( 267.645, -18.4402, -133.858, 0.74 ) }
    dend_10 { pt3dadd( 268.006, -18.6821, -134.218, 0.74 ) }
    dend_10 { pt3dadd( 269.433, -19.8308, -135.705, 0.37 ) }
    dend_10 { pt3dadd( 269.853, -20.2585, -136.168, 0.52 ) }
    dend_10 { pt3dadd( 270.17, -20.651, -136.579, 0.81 ) }
    dend_10 { pt3dadd( 270.505, -21.0923, -137.072, 0.37 ) }
    dend_10 { pt3dadd( 270.805, -21.4794, -137.558, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 231.079, -7.67273, -129.06, 0.88 ) }
    dend_3 { pt3dadd( 232.04, -7.24672, -130.4, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 232.442, -7.17885, -131.011, 1.25 ) }
    dend_3 { pt3dadd( 232.814, -7.17985, -131.648, 1.25 ) }
    dend_3 { pt3dadd( 233.301, -7.1926, -132.563, 0.59 ) }
    dend_3 { pt3dadd( 234.604, -7.22668, -135.012, 0.59 ) }
    dend_3 { pt3dadd( 235.912, -7.26092, -137.472, 0.96 ) }
    dend_3 { pt3dadd( 236.597, -7.36445, -138.809, 1.11 ) }
    dend_3 { pt3dadd( 237.782, -7.6601, -141.286, 1.25 ) }
    dend_3 { pt3dadd( 238.487, -7.91573, -142.881, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -83.1567, 131.584, -40.3033, 0.22 ) }
    dend_84 { pt3dadd( -83.0924, 129.963, -39.5083, 0.22 ) }
    dend_84 { pt3dadd( -83.0523, 128.953, -39.013, 0.22 ) }
    dend_84 { pt3dadd( -82.9626, 126.691, -37.904, 0.22 ) }
    dend_84 { pt3dadd( -82.9078, 125.311, -37.2274, 0.22 ) }
    dend_84 { pt3dadd( -82.8608, 124.125, -36.6459, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -83.1567, 131.584, -40.3033, 0.22 ) }
    dend_83 { pt3dadd( -84.0417, 131.949, -40.2521, 0.22 ) }
    dend_83 { pt3dadd( -84.8214, 132.293, -40.2068, 0.22 ) }
    dend_83 { pt3dadd( -85.563, 132.621, -40.1637, 0.22 ) }
    dend_83 { pt3dadd( -86.2724, 132.934, -40.1225, 0.22 ) }
    dend_83 { pt3dadd( -87.3404, 133.405, -40.0604, 0.22 ) }
    dend_83 { pt3dadd( -87.8853, 133.646, -40.0287, 0.37 ) }
    dend_83 { pt3dadd( -88.4375, 133.922, -39.9677, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 127.342, 86.6523, 81.211, 0.29 ) }
    dend_77 { pt3dadd( 129.046, 91.1636, 84.7858, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 127.342, 86.6523, 81.211, 0.29 ) }
    dend_76 { pt3dadd( 130.315, 95.4216, 84.938, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 139.705, 52.9543, 84.5488, 0.29 ) }
    dend_74 { pt3dadd( 143.996, 48.4715, 77.6233, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 139.705, 52.9543, 84.5488, 0.29 ) }
    dend_73 { pt3dadd( 130.618, 55.6429, 83.4622, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 145.042, 80.8456, -40.6785, 0.37 ) }
    dend_61 { pt3dadd( 144.228, 81.3013, -40.968, 0.37 ) }
    dend_61 { pt3dadd( 143.117, 81.952, -41.686, 0.66 ) }
    dend_61 { pt3dadd( 142.426, 82.3875, -42.4315, 0.29 ) }
    dend_61 { pt3dadd( 141.849, 82.7706, -43.1578, 0.29 ) }
    dend_61 { pt3dadd( 141.145, 83.2636, -44.0771, 0.29 ) }
    dend_61 { pt3dadd( 139.635, 84.3817, -46.0542, 0.29 ) }
    dend_61 { pt3dadd( 138.943, 84.8686, -47.002, 0.81 ) }
    dend_61 { pt3dadd( 136.918, 86.2601, -49.9465, 0.44 ) }
    dend_61 { pt3dadd( 136.242, 86.7339, -51.0123, 0.96 ) }
    dend_61 { pt3dadd( 135.704, 87.1601, -51.9421, 1.18 ) }
    dend_61 { pt3dadd( 135.058, 87.7492, -53.173, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 145.042, 80.8456, -40.6785, 0.37 ) }
    dend_60 { pt3dadd( 146.049, 81.1816, -40.6242, 0.37 ) }
    dend_60 { pt3dadd( 147.194, 81.7392, -40.6078, 0.29 ) }
    dend_60 { pt3dadd( 147.61, 81.9806, -40.6094, 0.66 ) }
    dend_60 { pt3dadd( 148.011, 82.2464, -40.6083, 0.66 ) }
    dend_60 { pt3dadd( 148.502, 82.6291, -40.6283, 0.37 ) }
    dend_60 { pt3dadd( 149.181, 83.1871, -40.6759, 0.37 ) }
    dend_60 { pt3dadd( 149.902, 83.8664, -40.7584, 0.81 ) }
    dend_60 { pt3dadd( 150.191, 84.1766, -40.7766, 1.11 ) }
    dend_60 { pt3dadd( 150.586, 84.6319, -40.7801, 1.33 ) }
    dend_60 { pt3dadd( 151.359, 85.6277, -40.745, 0.44 ) }
    dend_60 { pt3dadd( 151.79, 86.2709, -40.6772, 0.52 ) }
    dend_60 { pt3dadd( 152.318, 87.1971, -40.5306, 1.03 ) }
    dend_60 { pt3dadd( 152.844, 88.2957, -40.3239, 0.52 ) }
    dend_60 { pt3dadd( 153.074, 88.8538, -40.1955, 0.66 ) }
    dend_60 { pt3dadd( 153.284, 89.4764, -40.0288, 0.66 ) }
    dend_60 { pt3dadd( 153.532, 90.4927, -39.7197, 0.44 ) }
    dend_60 { pt3dadd( 153.609, 91.0501, -39.5857, 0.29 ) }
    dend_60 { pt3dadd( 153.68, 91.7371, -39.4749, 0.44 ) }
    dend_60 { pt3dadd( 153.806, 92.5207, -39.4254, 0.66 ) }
    dend_60 { pt3dadd( 153.964, 93.1746, -39.4165, 0.37 ) }
    dend_60 { pt3dadd( 154.183, 93.9262, -39.4486, 0.37 ) }
    dend_60 { pt3dadd( 154.544, 95.1411, -39.5652, 0.29 ) }
    dend_60 { pt3dadd( 154.763, 95.9231, -39.6453, 0.29 ) }
    dend_60 { pt3dadd( 155.048, 97.232, -39.7966, 0.29 ) }
    dend_60 { pt3dadd( 155.171, 98.1282, -39.8757, 0.29 ) }
    dend_60 { pt3dadd( 155.197, 98.8257, -39.9062, 1.55 ) }
    dend_60 { pt3dadd( 155.151, 99.4021, -39.9015, 1.18 ) }
    dend_60 { pt3dadd( 154.988, 100.017, -39.8235, 0.96 ) }
    dend_60 { pt3dadd( 154.506, 101.001, -39.6172, 0.52 ) }
    dend_60 { pt3dadd( 153.695, 102.117, -39.2991, 0.29 ) }
    dend_60 { pt3dadd( 153.065, 102.789, -39.0796, 0.29 ) }
    dend_60 { pt3dadd( 152.735, 103.099, -38.9752, 0.29 ) }
    dend_60 { pt3dadd( 151.822, 103.935, -38.723, 0.22 ) }
    dend_60 { pt3dadd( 151.545, 104.191, -38.6645, 0.66 ) }
    dend_60 { pt3dadd( 151.212, 104.514, -38.6141, 0.66 ) }
    dend_60 { pt3dadd( 150.659, 105.122, -38.5979, 0.37 ) }
    dend_60 { pt3dadd( 150.247, 105.749, -38.6193, 0.29 ) }
    dend_60 { pt3dadd( 149.957, 106.386, -38.6975, 0.22 ) }
    dend_60 { pt3dadd( 149.77, 106.974, -38.7604, 0.22 ) }
    dend_60 { pt3dadd( 149.555, 107.904, -38.7929, 0.22 ) }
    dend_60 { pt3dadd( 149.498, 108.335, -38.7846, 0.29 ) }
    dend_60 { pt3dadd( 149.463, 108.994, -38.7346, 0.29 ) }
    dend_60 { pt3dadd( 149.459, 109.994, -38.6213, 0.29 ) }
    dend_60 { pt3dadd( 149.53, 111.301, -38.4642, 0.29 ) }
    dend_60 { pt3dadd( 149.596, 112.119, -38.3515, 0.29 ) }
    dend_60 { pt3dadd( 149.684, 112.784, -38.2503, 0.29 ) }
    dend_60 { pt3dadd( 149.815, 113.658, -38.0997, 0.29 ) }
    dend_60 { pt3dadd( 150.062, 114.99, -37.8435, 0.29 ) }
    dend_60 { pt3dadd( 150.309, 116.022, -37.6439, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -11.8853, -192.457, 9.941, 0.29 ) }
    dend_39 { pt3dadd( -11.8642, -200.588, 8.41653, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -11.8853, -192.457, 9.941, 0.29 ) }
    dend_38 { pt3dadd( -5.22666, -188.263, 19.8313, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -20.1935, -130.691, -2.61231, 0.37 ) }
    dend_26 { pt3dadd( -20.6456, -131.848, -2.97875, 0.37 ) }
    dend_26 { pt3dadd( -20.8616, -132.401, -3.15382, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -20.1935, -130.691, -2.61231, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -23.2911, -130.408, -4.97595, 0.29 ) }
    dend_25 { pt3dadd( -24.2069, -130.326, -5.63993, 0.22 ) }
    dend_25 { pt3dadd( -25.4406, -130.304, -6.46551, 0.22 ) }
    dend_25 { pt3dadd( -26.1827, -130.35, -6.91543, 1.47 ) }
    dend_25 { pt3dadd( -26.7329, -130.385, -7.24903, 1.69 ) }
    dend_25 { pt3dadd( -27.2586, -130.418, -7.56777, 1.69 ) }
    dend_25 { pt3dadd( -28.7871, -130.483, -8.11069, 0.96 ) }
    dend_25 { pt3dadd( -29.8662, -130.633, -8.58332, 0.29 ) }
    dend_25 { pt3dadd( -30.772, -130.904, -9.0573, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 25.1471, -173.382, 26.1819, 0.29 ) }
    dend_21 { pt3dadd( 25.6032, -174.216, 24.8717, 0.29 ) }
    dend_21 { pt3dadd( 26.001, -174.943, 23.7291, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 25.1471, -173.382, 26.1819, 0.29 ) }
    dend_20 { pt3dadd( 25.5297, -171.493, 25.0897, 0.29 ) }
    dend_20 { pt3dadd( 25.9422, -170.346, 23.8373, 0.29 ) }
    dend_20 { pt3dadd( 26.274, -169.872, 22.7433, 0.29 ) }
    dend_20 { pt3dadd( 26.5958, -169.412, 21.6819, 0.52 ) }
    dend_20 { pt3dadd( 27.5062, -168.11, 18.6796, 0.44 ) }
    dend_20 { pt3dadd( 27.8117, -167.673, 17.6722, 0.29 ) }
    dend_20 { pt3dadd( 28.2814, -167.905, 15.9877, 0.29 ) }
    dend_20 { pt3dadd( 28.4447, -168.112, 15.3817, 0.29 ) }
    dend_20 { pt3dadd( 30.2793, -163.447, 6.21187, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.72038, -216.396, -44.8249, 0.22 ) }
    dend_15 { pt3dadd( -8.79765, -217.146, -44.7747, 0.22 ) }
    dend_15 { pt3dadd( -8.87687, -218.01, -44.6653, 0.22 ) }
    dend_15 { pt3dadd( -8.95036, -219.134, -44.5129, 0.22 ) }
    dend_15 { pt3dadd( -8.9983, -220.057, -44.3859, 0.22 ) }
    dend_15 { pt3dadd( -9.03638, -221.246, -44.2283, 0.22 ) }
    dend_15 { pt3dadd( -9.06659, -222.19, -44.1032, 0.22 ) }
    dend_15 { pt3dadd( -9.09535, -223.29, -43.9688, 0.22 ) }
    dend_15 { pt3dadd( -9.08705, -223.988, -43.884, 0.37 ) }
    dend_15 { pt3dadd( -9.07083, -224.229, -43.8483, 0.37 ) }
    dend_15 { pt3dadd( -9.00414, -224.904, -43.7278, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -8.72038, -216.396, -44.8249, 1.55 ) }
    dend_14 { pt3dadd( -9.42136, -216.735, -45.0799, 1.55 ) }
    dend_14 { pt3dadd( -9.83021, -216.985, -45.2462, 1.55 ) }
    dend_14 { pt3dadd( -10.6409, -217.502, -45.576, 0.29 ) }
    dend_14 { pt3dadd( -11.8323, -218.26, -46.0284, 0.44 ) }
    dend_14 { pt3dadd( -12.129, -218.426, -46.1634, 0.44 ) }
    dend_14 { pt3dadd( -13.3592, -218.989, -46.7888, 0.29 ) }
    dend_14 { pt3dadd( -14.125, -219.284, -47.2077, 0.29 ) }
    dend_14 { pt3dadd( -14.8865, -219.529, -47.6171, 0.29 ) }
    dend_14 { pt3dadd( -15.7351, -219.739, -48.0442, 0.29 ) }
    dend_14 { pt3dadd( -17.4355, -219.999, -48.7812, 0.29 ) }
    dend_14 { pt3dadd( -18.9474, -220.077, -49.3662, 0.29 ) }
    dend_14 { pt3dadd( -19.906, -220.017, -49.6941, 0.22 ) }
    dend_14 { pt3dadd( -20.8729, -219.893, -49.9867, 0.22 ) }
    dend_14 { pt3dadd( -21.6315, -219.774, -50.1903, 0.22 ) }
    dend_14 { pt3dadd( -22.4689, -219.626, -50.3733, 0.22 ) }
    dend_14 { pt3dadd( -23.5318, -219.455, -50.4841, 0.22 ) }
    dend_14 { pt3dadd( -24.3307, -219.287, -50.5339, 0.22 ) }
    dend_14 { pt3dadd( -24.8819, -219.123, -50.5821, 0.52 ) }
    dend_14 { pt3dadd( -25.3655, -218.935, -50.6405, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 238.487, -7.91573, -142.881, 0.81 ) }
    dend_9 { pt3dadd( 241.43, -7.9381, -144.102, 0.81 ) }
    dend_9 { pt3dadd( 243.648, -8.07539, -144.979, 0.88 ) }
    dend_9 { pt3dadd( 245.396, -8.25672, -145.725, 0.37 ) }
    dend_9 { pt3dadd( 245.902, -8.3096, -145.936, 0.37 ) }
    dend_9 { pt3dadd( 247.007, -8.42515, -146.398, 0.66 ) }
    dend_9 { pt3dadd( 247.726, -8.50037, -146.698, 0.74 ) }
    dend_9 { pt3dadd( 247.976, -8.51773, -146.838, 0.74 ) }
    dend_9 { pt3dadd( 249.328, -8.79573, -147.376, 0.37 ) }
    dend_9 { pt3dadd( 249.991, -8.98549, -147.659, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 238.487, -7.91573, -142.881, 0.44 ) }
    dend_4 { pt3dadd( 239.6, -7.21359, -143.768, 0.44 ) }
    dend_4 { pt3dadd( 240.385, -6.71773, -144.395, 0.44 ) }
    dend_4 { pt3dadd( 240.819, -6.44373, -144.741, 0.44 ) }
    dend_4 { pt3dadd( 241.672, -5.90538, -145.422, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 135.058, 87.7492, -53.173, 0.96 ) }
    dend_65 { pt3dadd( 133.368, 89.7114, -54.907, 0.96 ) }
    dend_65 { pt3dadd( 131.485, 91.6348, -56.5847, 0.59 ) }
    dend_65 { pt3dadd( 131.03, 92.0986, -56.9796, 0.59 ) }
    dend_65 { pt3dadd( 130.614, 92.5506, -57.3552, 0.37 ) }
    dend_65 { pt3dadd( 129.707, 93.6389, -58.2199, 0.29 ) }
    dend_65 { pt3dadd( 129.141, 94.3605, -58.7688, 0.29 ) }
    dend_65 { pt3dadd( 128.783, 94.8723, -59.078, 0.66 ) }
    dend_65 { pt3dadd( 128.217, 95.9447, -59.5784, 0.22 ) }
    dend_65 { pt3dadd( 127.917, 96.5979, -59.9077, 0.22 ) }
    dend_65 { pt3dadd( 127.536, 97.4211, -60.3474, 0.88 ) }
    dend_65 { pt3dadd( 127.294, 97.9211, -60.6095, 0.88 ) }
    dend_65 { pt3dadd( 126.553, 99.2655, -61.3, 0.37 ) }
    dend_65 { pt3dadd( 126.151, 99.8513, -61.6414, 0.96 ) }
    dend_65 { pt3dadd( 125.71, 100.392, -62.0083, 1.11 ) }
    dend_65 { pt3dadd( 124.857, 101.379, -62.7567, 0.44 ) }
    dend_65 { pt3dadd( 124.355, 101.977, -63.2349, 0.37 ) }
    dend_65 { pt3dadd( 123.981, 102.455, -63.6216, 0.52 ) }
    dend_65 { pt3dadd( 122.446, 104.529, -65.2739, 0.37 ) }
    dend_65 { pt3dadd( 121.802, 105.545, -66.0711, 0.96 ) }
    dend_65 { pt3dadd( 121.352, 106.37, -66.6766, 0.96 ) }
    dend_65 { pt3dadd( 120.923, 107.223, -67.2902, 0.52 ) }
    dend_65 { pt3dadd( 120.606, 107.844, -67.7724, 1.33 ) }
    dend_65 { pt3dadd( 120.212, 108.573, -68.3742, 1.33 ) }
    dend_65 { pt3dadd( 118.484, 111.532, -70.821, 0.52 ) }
    dend_65 { pt3dadd( 118.282, 111.862, -71.096, 0.52 ) }
    dend_65 { pt3dadd( 117.83, 112.557, -71.6882, 0.52 ) }
    dend_65 { pt3dadd( 115.827, 115.427, -74.2165, 0.44 ) }
    dend_65 { pt3dadd( 114.866, 116.723, -75.3446, 0.59 ) }
    dend_65 { pt3dadd( 114.275, 117.509, -75.981, 0.59 ) }
    dend_65 { pt3dadd( 113.677, 118.284, -76.5152, 0.88 ) }
    dend_65 { pt3dadd( 113.468, 118.564, -76.674, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 113.086, 119.098, -76.8631, 1.47 ) }
    dend_65 { pt3dadd( 112.251, 120.311, -76.936, 0.29 ) }
    dend_65 { pt3dadd( 111.51, 121.437, -76.8952, 0.29 ) }
    dend_65 { pt3dadd( 111.212, 121.891, -76.86, 0.29 ) }
    dend_65 { pt3dadd( 110.705, 122.669, -76.76, 0.29 ) }
    dend_65 { pt3dadd( 110.391, 123.183, -76.6879, 0.29 ) }
    dend_65 { pt3dadd( 109.66, 124.446, -76.4865, 0.29 ) }
    dend_65 { pt3dadd( 109.369, 124.939, -76.4104, 0.29 ) }
    dend_65 { pt3dadd( 108.949, 125.537, -76.3298, 0.96 ) }
    dend_65 { pt3dadd( 108.669, 125.957, -76.2941, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 135.058, 87.7492, -53.173, 0.15 ) }
    dend_62 { pt3dadd( 135.889, 89.1048, -52.6441, 0.15 ) }
    dend_62 { pt3dadd( 136.344, 89.8474, -52.3543, 0.15 ) }
    dend_62 { pt3dadd( 136.709, 90.4443, -52.1215, 0.81 ) }
    dend_62 { pt3dadd( 137.027, 90.9624, -51.9193, 1.03 ) }
    dend_62 { pt3dadd( 137.445, 91.6452, -51.6529, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -20.8616, -132.401, -3.15382, 0.52 ) }
    dend_28 { pt3dadd( -21.0045, -132.693, -3.32893, 0.52 ) }
    dend_28 { pt3dadd( -21.1978, -133.167, -3.56308, 0.52 ) }
    dend_28 { pt3dadd( -21.4336, -133.776, -3.78684, 0.37 ) }
    dend_28 { pt3dadd( -21.5418, -134.056, -3.88391, 0.52 ) }
    dend_28 { pt3dadd( -21.6877, -134.434, -4.00778, 0.44 ) }
    dend_28 { pt3dadd( -21.8568, -134.853, -4.14547, 0.37 ) }
    dend_28 { pt3dadd( -22.0313, -135.28, -4.26381, 0.29 ) }
    dend_28 { pt3dadd( -22.2134, -135.732, -4.35656, 0.29 ) }
    dend_28 { pt3dadd( -22.4328, -136.322, -4.46233, 1.03 ) }
    dend_28 { pt3dadd( -22.4966, -136.487, -4.49271, 1.18 ) }
    dend_28 { pt3dadd( -22.6981, -136.958, -4.58571, 0.88 ) }
    dend_28 { pt3dadd( -22.8448, -137.295, -4.66021, 0.44 ) }
    dend_28 { pt3dadd( -23.0142, -137.732, -4.77473, 0.37 ) }
    dend_28 { pt3dadd( -23.0836, -137.986, -4.8582, 0.59 ) }
    dend_28 { pt3dadd( -23.1174, -138.224, -4.94477, 0.44 ) }
    dend_28 { pt3dadd( -23.1246, -138.705, -5.1458, 0.44 ) }
    dend_28 { pt3dadd( -23.0923, -139.044, -5.30066, 0.44 ) }
    dend_28 { pt3dadd( -23.0164, -139.563, -5.54327, 0.52 ) }
    dend_28 { pt3dadd( -22.9477, -140.046, -5.76227, 0.66 ) }
    dend_28 { pt3dadd( -22.9047, -140.449, -5.90522, 0.88 ) }
    dend_28 { pt3dadd( -22.8919, -140.733, -5.96457, 0.88 ) }
    dend_28 { pt3dadd( -22.9146, -141.173, -5.96937, 0.52 ) }
    dend_28 { pt3dadd( -23.0032, -141.56, -5.88971, 0.29 ) }
    dend_28 { pt3dadd( -23.184, -142.028, -5.70912, 0.29 ) }
    dend_28 { pt3dadd( -23.4541, -142.562, -5.48284, 0.29 ) }
    dend_28 { pt3dadd( -23.6659, -142.914, -5.34736, 0.96 ) }
    dend_28 { pt3dadd( -23.8119, -143.147, -5.28953, 1.18 ) }
    dend_28 { pt3dadd( -23.9619, -143.404, -5.25236, 1.18 ) }
    dend_28 { pt3dadd( -24.1962, -143.881, -5.25517, 0.59 ) }
    dend_28 { pt3dadd( -24.3691, -144.381, -5.30264, 0.52 ) }
    dend_28 { pt3dadd( -24.4902, -144.866, -5.36567, 0.52 ) }
    dend_28 { pt3dadd( -24.6217, -145.491, -5.47014, 0.66 ) }
    dend_28 { pt3dadd( -24.6935, -145.905, -5.54101, 0.66 ) }
    dend_28 { pt3dadd( -24.7488, -146.35, -5.61518, 0.81 ) }
    dend_28 { pt3dadd( -24.7717, -146.996, -5.69432, 0.81 ) }
    dend_28 { pt3dadd( -24.7344, -147.465, -5.68413, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -20.8616, -132.401, -3.15382, 0.37 ) }
    dend_27 { pt3dadd( -21.2357, -132.334, -2.70209, 0.37 ) }
    dend_27 { pt3dadd( -21.7526, -132.278, -2.13418, 0.37 ) }
    dend_27 { pt3dadd( -22.0084, -132.253, -1.8766, 0.37 ) }
    dend_27 { pt3dadd( -22.5942, -132.188, -1.33372, 0.29 ) }
    dend_27 { pt3dadd( -22.9514, -132.138, -1.02419, 0.29 ) }
    dend_27 { pt3dadd( -23.3749, -132.078, -0.657224, 0.29 ) }
    dend_27 { pt3dadd( -23.7818, -132.033, -0.300083, 0.37 ) }
    dend_27 { pt3dadd( -23.9978, -132.023, -0.14509, 0.37 ) }
    dend_27 { pt3dadd( -24.2235, -132.021, -0.0143377, 0.29 ) }
    dend_27 { pt3dadd( -24.4908, -132.007, 0.0880501, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 26.001, -174.943, 23.7291, 0.22 ) }
    dend_23 { pt3dadd( 25.2717, -176.127, 23.1265, 0.22 ) }
    dend_23 { pt3dadd( 24.221, -177.832, 22.2582, 0.22 ) }
    dend_23 { pt3dadd( 23.6237, -178.801, 21.7646, 0.29 ) }
    dend_23 { pt3dadd( 23.2982, -179.329, 21.4956, 0.29 ) }
    dend_23 { pt3dadd( 22.4546, -180.698, 20.7985, 0.22 ) }
    dend_23 { pt3dadd( 21.9034, -181.593, 20.3431, 0.22 ) }
    dend_23 { pt3dadd( 18.0882, -192.894, 15.6894, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 26.001, -174.943, 23.7291, 0.37 ) }
    dend_22 { pt3dadd( 25.7245, -175.911, 24.0047, 0.37 ) }
    dend_22 { pt3dadd( 25.473, -176.783, 24.0916, 0.96 ) }
    dend_22 { pt3dadd( 25.1645, -177.866, 24.0277, 0.59 ) }
    dend_22 { pt3dadd( 24.9587, -178.687, 23.8754, 0.59 ) }
    dend_22 { pt3dadd( 24.7406, -179.558, 23.7139, 0.22 ) }
    dend_22 { pt3dadd( 24.5327, -180.387, 23.56, 0.22 ) }
    dend_22 { pt3dadd( 24.2884, -181.272, 23.2674, 0.22 ) }
    dend_22 { pt3dadd( 24.1069, -182.016, 22.8882, 0.22 ) }
    dend_22 { pt3dadd( 23.9239, -182.775, 22.3476, 0.22 ) }
    dend_22 { pt3dadd( 22.4947, -190.501, 22.3803, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 241.672, -5.90538, -145.422, 0.37 ) }
    dend_6 { pt3dadd( 244.289, -3.75177, -150.154, 0.37 ) }
    dend_6 { pt3dadd( 244.734, -3.36119, -150.945, 0.66 ) }
    dend_6 { pt3dadd( 245.074, -3.01982, -151.546, 0.66 ) }
    dend_6 { pt3dadd( 245.237, -2.84378, -151.827, 0.96 ) }
    dend_6 { pt3dadd( 245.665, -2.35165, -152.511, 1.11 ) }
    dend_6 { pt3dadd( 246.191, -1.73743, -153.266, 1.11 ) }
    dend_6 { pt3dadd( 246.986, -0.804689, -153.954, 0.81 ) }
    dend_6 { pt3dadd( 247.619, -0.0635386, -154.371, 1.4 ) }
    dend_6 { pt3dadd( 247.831, 0.180784, -154.47, 1.4 ) }
    dend_6 { pt3dadd( 248.646, 1.07844, -154.67, 0.37 ) }
    dend_6 { pt3dadd( 249.217, 1.66151, -154.664, 0.37 ) }
    dend_6 { pt3dadd( 249.902, 2.28346, -154.498, 0.37 ) }
    dend_6 { pt3dadd( 250.441, 2.73484, -154.267, 0.66 ) }
    dend_6 { pt3dadd( 250.863, 3.09309, -154.037, 0.66 ) }
    dend_6 { pt3dadd( 251.396, 3.64401, -153.705, 0.29 ) }
    dend_6 { pt3dadd( 251.738, 4.10522, -153.442, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 251.952, 4.46618, -153.257, 0.52 ) }
    dend_6 { pt3dadd( 252.292, 5.10696, -152.981, 0.29 ) }
    dend_6 { pt3dadd( 252.657, 5.78658, -152.727, 1.03 ) }
    dend_6 { pt3dadd( 253.248, 6.8245, -152.414, 0.66 ) }
    dend_6 { pt3dadd( 253.644, 7.49195, -152.241, 0.44 ) }
    dend_6 { pt3dadd( 253.79, 7.72964, -152.182, 0.66 ) }
    dend_6 { pt3dadd( 254.248, 8.46846, -152.014, 0.37 ) }
    dend_6 { pt3dadd( 254.488, 8.8307, -151.919, 0.52 ) }
    dend_6 { pt3dadd( 254.971, 9.49778, -151.7, 0.37 ) }
    dend_6 { pt3dadd( 255.318, 9.91745, -151.504, 0.37 ) }
    dend_6 { pt3dadd( 255.692, 10.3582, -151.29, 0.37 ) }
    dend_6 { pt3dadd( 256.075, 10.8691, -151.044, 0.37 ) }
    dend_6 { pt3dadd( 256.406, 11.3724, -150.794, 0.96 ) }
    dend_6 { pt3dadd( 256.544, 11.5829, -150.686, 0.96 ) }
    dend_6 { pt3dadd( 257.122, 12.3993, -150.235, 0.29 ) }
    dend_6 { pt3dadd( 257.61, 13.056, -149.877, 0.29 ) }
    dend_6 { pt3dadd( 258.082, 13.6625, -149.553, 0.29 ) }
    dend_6 { pt3dadd( 258.483, 14.1714, -149.288, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 241.672, -5.90538, -145.422, 0.52 ) }
    dend_5 { pt3dadd( 241.35, -0.455418, -149.207, 0.52 ) }
    dend_5 { pt3dadd( 241.314, -0.00114921, -149.496, 0.52 ) }
    dend_5 { pt3dadd( 241.091, 2.15191, -150.77, 0.37 ) }
    dend_5 { pt3dadd( 241.029, 2.75452, -151.127, 0.29 ) }
    dend_5 { pt3dadd( 240.84, 4.57755, -152.206, 0.29 ) }
    dend_5 { pt3dadd( 240.68, 6.12738, -153.123, 0.29 ) }
    dend_5 { pt3dadd( 240.457, 7.70289, -153.541, 0.29 ) }
    dend_5 { pt3dadd( 240.356, 8.38125, -153.738, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 108.669, 125.957, -76.2941, 0.29 ) }
    dend_67 { pt3dadd( 107.671, 128.029, -76.6742, 0.29 ) }
    dend_67 { pt3dadd( 107.324, 128.571, -76.9165, 0.29 ) }
    dend_67 { pt3dadd( 106.821, 129.281, -77.3308, 0.29 ) }
    dend_67 { pt3dadd( 105.924, 130.563, -78.0913, 0.29 ) }
    dend_67 { pt3dadd( 105.588, 131.063, -78.3619, 0.44 ) }
    dend_67 { pt3dadd( 105.133, 131.741, -78.7293, 0.44 ) }
    dend_67 { pt3dadd( 103.717, 133.649, -79.8683, 0.29 ) }
    dend_67 { pt3dadd( 103.036, 134.531, -80.4633, 0.29 ) }
    dend_67 { pt3dadd( 102.647, 135.039, -80.8443, 0.29 ) }
    dend_67 { pt3dadd( 102.057, 135.814, -81.4345, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 108.669, 125.957, -76.2941, 0.22 ) }
    dend_66 { pt3dadd( 107.881, 125.097, -75.9566, 0.22 ) }
    dend_66 { pt3dadd( 107.248, 124.442, -75.6381, 0.22 ) }
    dend_66 { pt3dadd( 106.487, 123.67, -75.1806, 1.4 ) }
    dend_66 { pt3dadd( 105.633, 122.804, -74.6675, 0.22 ) }
    dend_66 { pt3dadd( 104.68, 121.838, -74.0949, 1.84 ) }
    dend_66 { pt3dadd( 103.845, 120.991, -73.5934, 0.22 ) }
    dend_66 { pt3dadd( 103.165, 120.275, -73.0778, 0.22 ) }
    dend_66 { pt3dadd( 102.55, 119.625, -72.5503, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 137.445, 91.6452, -51.6529, 0.74 ) }
    dend_64 { pt3dadd( 137.42, 92.0398, -51.238, 0.74 ) }
    dend_64 { pt3dadd( 137.35, 92.6523, -50.5529, 0.22 ) }
    dend_64 { pt3dadd( 137.267, 93.0154, -50.1332, 0.22 ) }
    dend_64 { pt3dadd( 137.04, 93.71, -49.2864, 0.22 ) }
    dend_64 { pt3dadd( 136.826, 94.2887, -48.4911, 1.33 ) }
    dend_64 { pt3dadd( 136.73, 94.5598, -48.0794, 1.33 ) }
    dend_64 { pt3dadd( 136.534, 95.0598, -47.1897, 0.22 ) }
    dend_64 { pt3dadd( 136.383, 95.3783, -46.5262, 0.22 ) }
    dend_64 { pt3dadd( 136.271, 95.5636, -46.0971, 0.22 ) }
    dend_64 { pt3dadd( 135.984, 95.9671, -45.1762, 0.22 ) }
    dend_64 { pt3dadd( 135.804, 96.2449, -44.4594, 0.22 ) }
    dend_64 { pt3dadd( 135.734, 96.4371, -43.9934, 0.37 ) }
    dend_64 { pt3dadd( 135.718, 96.651, -43.5253, 0.37 ) }
    dend_64 { pt3dadd( 135.774, 96.9095, -42.9997, 0.37 ) }
    dend_64 { pt3dadd( 135.848, 97.1297, -42.6181, 0.15 ) }
    dend_64 { pt3dadd( 136.019, 97.7945, -41.6182, 0.22 ) }
    dend_64 { pt3dadd( 136.141, 98.3665, -40.8176, 0.22 ) }
    dend_64 { pt3dadd( 136.216, 98.7617, -40.2465, 0.22 ) }
    dend_64 { pt3dadd( 136.283, 99.482, -39.215, 0.22 ) }
    dend_64 { pt3dadd( 136.269, 99.9693, -38.4804, 0.22 ) }
    dend_64 { pt3dadd( 136.198, 100.561, -37.5316, 0.22 ) }
    dend_64 { pt3dadd( 136.152, 100.772, -37.1818, 0.74 ) }
    dend_64 { pt3dadd( 135.899, 101.591, -35.7247, 0.29 ) }
    dend_64 { pt3dadd( 135.714, 102.075, -34.8557, 0.29 ) }
    dend_64 { pt3dadd( 135.521, 102.557, -34.0159, 0.29 ) }
    dend_64 { pt3dadd( 135.405, 102.89, -33.3817, 0.29 ) }
    dend_64 { pt3dadd( 135.335, 103.262, -32.5771, 0.52 ) }
    dend_64 { pt3dadd( 135.303, 103.578, -31.8252, 0.37 ) }
    dend_64 { pt3dadd( 135.298, 103.982, -30.826, 0.29 ) }
    dend_64 { pt3dadd( 135.304, 104.077, -30.5769, 0.37 ) }
    dend_64 { pt3dadd( 135.329, 104.448, -29.6047, 0.37 ) }
    dend_64 { pt3dadd( 135.34, 104.928, -28.3, 0.37 ) }
    dend_64 { pt3dadd( 135.334, 105.278, -27.278, 0.22 ) }
    dend_64 { pt3dadd( 135.342, 105.458, -26.7074, 0.22 ) }
    dend_64 { pt3dadd( 135.35, 105.648, -26.091, 0.74 ) }
    dend_64 { pt3dadd( 135.343, 105.76, -25.7537, 0.88 ) }
    dend_64 { pt3dadd( 135.272, 106.165, -24.7437, 0.59 ) }
    dend_64 { pt3dadd( 135.095, 106.71, -23.6406, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 137.445, 91.6452, -51.6529, 0.29 ) }
    dend_63 { pt3dadd( 138.417, 92.1948, -52.2548, 0.29 ) }
    dend_63 { pt3dadd( 139.265, 92.6163, -52.9953, 0.29 ) }
    dend_63 { pt3dadd( 140.093, 92.9928, -53.8204, 1.03 ) }
    dend_63 { pt3dadd( 140.48, 93.1628, -54.2325, 1.03 ) }
    dend_63 { pt3dadd( 141.45, 93.5264, -55.2392, 0.44 ) }
    dend_63 { pt3dadd( 142.2, 93.772, -55.9757, 0.29 ) }
    dend_63 { pt3dadd( 143.201, 94.0082, -56.9772, 0.96 ) }
    dend_63 { pt3dadd( 143.543, 94.0675, -57.3073, 0.96 ) }
    dend_63 { pt3dadd( 144.573, 94.2271, -58.1991, 0.22 ) }
    dend_63 { pt3dadd( 145.377, 94.3704, -58.8228, 0.22 ) }
    dend_63 { pt3dadd( 146.236, 94.5467, -59.3594, 0.22 ) }
    dend_63 { pt3dadd( 147.185, 94.7845, -59.8722, 0.22 ) }
    dend_63 { pt3dadd( 148.293, 95.1277, -60.3981, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 148.987, 95.3827, -60.7031, 0.52 ) }
    dend_63 { pt3dadd( 149.559, 95.6501, -60.9184, 0.29 ) }
    dend_63 { pt3dadd( 150.276, 96.0942, -61.1303, 1.03 ) }
    dend_63 { pt3dadd( 150.753, 96.4572, -61.1805, 1.03 ) }
    dend_63 { pt3dadd( 151.173, 96.8736, -61.1295, 0.88 ) }
    dend_63 { pt3dadd( 151.596, 97.3314, -61.0013, 0.66 ) }
    dend_63 { pt3dadd( 152.121, 97.9413, -60.7672, 0.37 ) }
    dend_63 { pt3dadd( 152.65, 98.6026, -60.441, 0.59 ) }
    dend_63 { pt3dadd( 153.265, 99.4334, -59.9545, 0.29 ) }
    dend_63 { pt3dadd( 153.804, 100.157, -59.4594, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -24.7344, -147.465, -5.68413, 0.74 ) }
    dend_30 { pt3dadd( -25.191, -148.453, -5.32321, 0.74 ) }
    dend_30 { pt3dadd( -26.0126, -149.913, -4.74422, 0.66 ) }
    dend_30 { pt3dadd( -26.7012, -150.872, -4.33453, 0.52 ) }
    dend_30 { pt3dadd( -27.7195, -152.033, -3.82703, 0.37 ) }
    dend_30 { pt3dadd( -28.3101, -152.668, -3.56291, 0.74 ) }
    dend_30 { pt3dadd( -28.7971, -153.209, -3.32551, 1.03 ) }
    dend_30 { pt3dadd( -29.4669, -153.925, -2.99935, 0.74 ) }
    dend_30 { pt3dadd( -30.4214, -154.96, -2.53906, 0.52 ) }
    dend_30 { pt3dadd( -31.355, -156.114, -2.07259, 0.52 ) }
    dend_30 { pt3dadd( -31.9561, -157.041, -1.76616, 0.66 ) }
    dend_30 { pt3dadd( -32.7502, -158.657, -1.34522, 0.88 ) }
    dend_30 { pt3dadd( -32.9676, -159.234, -1.23055, 1.18 ) }
    dend_30 { pt3dadd( -33.2318, -160.162, -1.08884, 0.81 ) }
    dend_30 { pt3dadd( -33.5043, -161.481, -0.947434, 0.52 ) }
    dend_30 { pt3dadd( -33.7114, -162.595, -0.899198, 0.52 ) }
    dend_30 { pt3dadd( -33.9911, -163.918, -0.915043, 0.52 ) }
    dend_30 { pt3dadd( -34.1502, -164.547, -0.966009, 0.52 ) }
    dend_30 { pt3dadd( -34.4916, -165.784, -1.08113, 0.52 ) }
    dend_30 { pt3dadd( -34.8675, -167.008, -1.20128, 0.52 ) }
    dend_30 { pt3dadd( -35.2198, -168.036, -1.32783, 1.03 ) }
    dend_30 { pt3dadd( -35.5019, -168.784, -1.42393, 1.25 ) }
    dend_30 { pt3dadd( -35.9231, -169.712, -1.55145, 0.66 ) }
    dend_30 { pt3dadd( -36.4183, -170.615, -1.69114, 0.29 ) }
    dend_30 { pt3dadd( -37.1575, -171.499, -1.85434, 0.29 ) }
    dend_30 { pt3dadd( -37.6747, -171.378, -1.87709, 0.52 ) }
    dend_30 { pt3dadd( -38.9909, -170.566, -1.87517, 0.29 ) }
    dend_30 { pt3dadd( -40.0126, -169.802, -1.87014, 0.29 ) }
    dend_30 { pt3dadd( -41.0832, -168.856, -1.85566, 0.22 ) }
    dend_30 { pt3dadd( -41.283, -168.654, -1.8538, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -24.7344, -147.465, -5.68413, 0.22 ) }
    dend_29 { pt3dadd( -25.136, -148.979, -6.22001, 0.22 ) }
    dend_29 { pt3dadd( -25.2941, -149.583, -6.44214, 0.22 ) }
    dend_29 { pt3dadd( -25.5572, -150.79, -6.87403, 0.22 ) }
    dend_29 { pt3dadd( -25.8142, -152.159, -7.34085, 0.22 ) }
    dend_29 { pt3dadd( -26.0224, -153.268, -7.71913, 0.22 ) }
    dend_29 { pt3dadd( -26.4267, -155.422, -8.45344, 0.22 ) }
    dend_29 { pt3dadd( -26.6176, -156.349, -8.73403, 0.22 ) }
    dend_29 { pt3dadd( -26.982, -158.175, -9.32276, 0.22 ) }
    dend_29 { pt3dadd( -27.1441, -159.188, -9.68397, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 258.483, 14.1714, -149.288, 0.29 ) }
    dend_8 { pt3dadd( 259.387, 13.4499, -149.571, 0.29 ) }
    dend_8 { pt3dadd( 259.906, 13.0348, -149.733, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 258.483, 14.1714, -149.288, 0.37 ) }
    dend_7 { pt3dadd( 258.942, 14.749, -148.884, 0.37 ) }
    dend_7 { pt3dadd( 259.483, 15.4291, -148.408, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 7
    dend_50 nseg = 5
    dend_41 nseg = 7
    dend_32 nseg = 3
    dend_88 nseg = 5
    dend_69 nseg = 3
    dend_54 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 5
    dend_45 nseg = 11
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_71 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 3
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 7
    dend_2 nseg = 13
    dend_75 nseg = 3
    dend_68 nseg = 3
    dend_59 nseg = 3
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_60 nseg = 3
    dend_65 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_ChC_6c89541c26_0_0


