// Cell: cIR216_L23_NBC_1f21a64cc1_0_0
/*
{
  "id" : "cIR216_L23_NBC_1f21a64cc1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.89093, 6.3846, -1.48625, 2.82016", "-2.66386, 5.61657, -1.27833, 4.98681", "-2.43678, 4.84853, -1.07041, 7.51044", "-2.20971, 4.0805, -0.862483, 8.92538", "-1.98264, 3.31246, -0.65456, 10.0669", "-1.75557, 2.54443, -0.446636, 10.3676", "-1.52849, 1.7764, -0.238713, 10.6171", "-1.30142, 1.00836, -0.0307891, 10.1846", "-1.07435, 0.240325, 0.177134, 9.79445", "-0.847273, -0.52771, 0.385058, 9.58423", "-0.6202, -1.29574, 0.592981, 9.374", "-0.393128, -2.06378, 0.800905, 9.16378", "-0.166055, -2.83181, 1.00883, 8.95369", "0.0610184, -3.59985, 1.21675, 8.74371", "0.288091, -4.36788, 1.42468, 8.44292", "0.515164, -5.13592, 1.6326, 7.88171", "0.742237, -5.90395, 1.84052, 7.32051", "0.96931, -6.67199, 2.04845, 6.7381", "1.19638, -7.44002, 2.25637, 5.93312", "1.42346, -8.20806, 2.46429, 5.04519", "1.65053, -8.97609, 2.67222, 2.76105" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-2.9567, 3.75017, 8.71987, 1.11", "-3.99528, 6.53298, 8.67797, 0.83", "-4.43182, 8.15142, 8.84336, 0.83", "-5.51432, 12.8523, 9.58328, 0.83", "-5.89004, 15.5414, 10.2696, 0.83", "-6.14254, 17.8222, 10.9649, 1.11", "-6.19247, 20.8311, 12.1497, 0.83", "-5.86447, 24.5274, 14.0471, 0.83", "-5.6928, 25.7965, 14.8106, 0.83", "-5.06137, 29.4184, 17.3071, 0.55", "-4.26935, 33.9483, 20.8549, 0.55", "-3.56171, 38.466, 24.5844, 0.55", "-3.12304, 41.8233, 27.4385, 0.55", "-2.83, 43.8597, 29.1225, 0.28", "-2.58689, 45.5763, 30.5985, 0.55", "-2.42904, 47.9035, 32.6258, 0.55", "-3.79147, 58.2377, 35.1122, 0.55", "-6.69667, 68.273, 37.5625, 0.55", "-10.8607, 77.3462, 41.6178, 0.55", "-15.4034, 86.1826, 45.8142, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-5.4967, 3.50642, -7.38013, 1.66", "-8.3983, 4.41827, -9.59609, 1.66", "-12.5218, 5.7141, -12.7452, 1.66", "-15.4204, 6.625, -14.9589, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-4.2067, -0.686075, -10.0602, 1.11", "-6.0815, -0.721027, -9.95762, 1.11", "-8.54889, -0.655839, -9.78252, 1.11", "-11.1687, -0.474481, -9.58638, 1.11", "-13.4107, -0.296969, -9.47618, 1.11", "-16.9079, -0.0297907, -9.37188, 0.83", "-19.4396, 0.126409, -9.35195, 0.83", "-21.2789, 0.231551, -9.38079, 1.39", "-23.3212, 0.359277, -9.46121, 1.11", "-25.1811, 0.508495, -9.59352, 1.11", "-28.2904, 0.700087, -9.8972, 1.11", "-31.24, 0.713604, -10.2465, 1.11", "-33.3938, 0.682455, -10.5972, 0.83", "-34.632, 0.672983, -10.8133, 0.83", "-38.7772, 0.479939, -11.9515, 0.83", "-39.8407, 0.34147, -12.4004, 0.83", "-42.3404, -0.151955, -13.9407, 0.83", "-44.8539, -0.692409, -15.7843, 0.83", "-47.4414, -1.2234, -17.9938, 0.83", "-52.2894, -2.16532, -22.293, 0.83", "-56.5428, -2.96506, -26.3709, 0.83", "-59.7562, -3.48884, -29.5997, 0.83", "-63.8634, -4.05873, -33.9629, 0.55", "-66.6064, -4.41298, -36.9566, 0.28", "-69.3963, -4.69462, -40.0851, 0.55", "-72.1188, -4.66638, -42.8089, 0.55", "-72.7594, -4.58516, -43.4193, 0.55", "-73.7878, -4.44795, -44.3687, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-4.5167, -3.10408, 11.1598, 1.66", "-5.31044, -3.91565, 12.0421, 1.39", "-7.03817, -5.68219, 13.9624, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.0967, -6.10707, 15.1098, 1.39", "-3.23752, -9.57841, 14.5264, 1.39", "-4.43206, -13.2132, 13.9155, 1.39", "-5.25691, -15.7231, 13.4937, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "2.8933, -8.62258, 6.44987, 4.16", "3.32911, -9.08724, 5.42934, 4.16", "4.92359, -10.7873, 1.69553, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "0.0933001, -4.19608, 3.93987, 1.11", "1.50612, -3.86571, 4.47082, 1.11", "2.73031, -3.06915, 5.84743, 1.11", "4.66749, -1.80866, 8.0258, 1.11", "6.24397, -0.782855, 9.79858, 0.83", "8.75619, 0.851804, 12.6235, 0.83", "11.1221, 2.39127, 15.284, 1.11", "13.1598, 4.25031, 18.8152, 1.11", "19.4345, 9.10538, 26.1495, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.8933, 4.74467, 1.41987, 1.39", "4.18041, 7.21184, 1.41987, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999965882319475
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.65053, -8.97609, 2.67222, 0.813942", "5.90337, -23.3606, 2.67222, 0.813942", "10.1562, -37.7451, 2.67222, 0.813942" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-15.4034, 86.1826, 45.8142, 0.55", "-17.8086, 95.5523, 49.6926, 0.55", "-19.3711, 105.662, 51.4889, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-15.4034, 86.1826, 45.8142, 0.55", "-15.6467, 94.7887, 50.1236, 0.55", "-14.8425, 102.416, 56.0167, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-15.4204, 6.625, -14.9589, 0.83", "-17.9003, 9.29684, -16.2567, 0.83", "-21.3856, 13.0518, -18.0807, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-15.4204, 6.625, -14.9589, 1.11", "-22.6962, 8.8559, -16.632, 1.11", "-28.0378, 10.4937, -17.8604, 1.11", "-30.8918, 11.3688, -18.5167, 1.11", "-37.831, 13.4964, -20.1124, 0.83", "-42.0574, 14.7923, -21.0843, 0.83", "-46.044, 16.0147, -22.0011, 1.11" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-73.7878, -4.44795, -44.3687, 0.28", "-73.6174, -6.09112, -47.4479, 0.28", "-73.5803, -6.44821, -48.1171, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-73.7878, -4.44795, -44.3687, 0.28", "-76.048, -7.17369, -49.0399, 0.28", "-77.306, -8.60027, -51.3687, 1.11", "-78.6195, -9.95778, -53.504, 1.11", "-79.6215, -10.9056, -54.9695, 0.28", "-80.4216, -11.4713, -55.9897, 1.39", "-84.1417, -13.6796, -60.6113, 0.28", "-85.9713, -14.5147, -62.5639, 1.11", "-87.2317, -14.9753, -63.7642, 0.55", "-89.0045, -15.5342, -65.3969, 0.28", "-97.2091, -17.7316, -72.8581, 0.28", "-100.11, -18.3942, -75.4038, 0.83", "-102.968, -18.8814, -77.8053, 0.28", "-104.509, -19.0876, -79.1134, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-7.03817, -5.68219, 13.9624, 0.83", "-8.05075, -7.71302, 16.6056, 0.83", "-8.68107, -8.78897, 17.8137, 0.55", "-9.68104, -10.1355, 19.6172, 0.55", "-10.7551, -11.2467, 21.5361, 0.55", "-12.3288, -12.4741, 24.2821, 0.55", "-13.4375, -13.339, 26.2169, 0.55", "-14.7015, -13.9764, 28.0669, 0.55", "-16.6177, -14.5249, 31.0421, 0.55", "-17.6614, -14.4226, 32.4709, 0.55", "-18.7605, -13.9947, 33.9578, 0.55", "-23.7388, -16.8288, 42.0078, 0.55", "-30.3917, -20.5683, 48.2361, 0.55", "-35.8089, -24.5687, 55.4306, 0.55", "-42.6507, -26.2166, 62.3772, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-7.03817, -5.68219, 13.9624, 0.83", "-8.1097, -6.9462, 12.4668, 0.83", "-9.50921, -8.59711, 10.5134, 0.83", "-12.2785, -11.8639, 6.64805, 0.83", "-12.8352, -12.5206, 5.871, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-5.25691, -15.7231, 13.4937, 0.83", "-7.8666, -19.5615, 13.535, 0.83", "-9.52678, -21.5293, 13.5675, 0.83", "-12.3911, -24.7826, 13.5886, 0.83", "-15.8143, -28.6706, 13.6137, 0.83", "-17.0193, -30.0393, 13.6225, 0.83", "-20.2027, -33.6549, 13.6459, 1.11", "-24.7613, -38.4162, 13.6739, 0.83", "-26.6426, -40.2067, 13.6833, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-5.25691, -15.7231, 13.4937, 0.83", "-5.0345, -17.3001, 14.2385, 0.83", "-4.92695, -18.417, 14.6779, 0.83", "-4.81113, -19.244, 14.9438, 0.83", "-4.45334, -21.6599, 15.6257, 0.83", "-4.24221, -22.8196, 15.9231, 0.83", "-3.94458, -24.1449, 16.239, 0.83", "-3.40137, -26.422, 16.7267, 0.83", "-2.8656, -28.6124, 17.1673, 0.83", "-2.74479, -29.4406, 17.3309, 0.83", "-2.63454, -30.868, 17.6282, 0.83", "-2.60384, -31.9139, 17.8762, 0.83", "-2.61948, -33.1119, 18.177, 0.83", "-2.7371, -35.877, 18.8984, 0.83", "-3.06926, -40.0898, 19.9629, 0.55", "-3.17017, -41.8968, 20.3802, 0.55", "-3.24901, -43.4906, 20.7008, 0.55", "-3.29911, -45.3013, 20.9797, 0.55", "-3.248, -47.2284, 21.1702, 0.55", "-3.06199, -48.7543, 21.1971, 0.55", "-2.57753, -50.8808, 21.1521, 0.55", "-2.11734, -52.8641, 21.044, 0.55", "-1.82352, -54.0826, 20.9818, 0.28", "-1.63544, -54.8227, 20.9408, 0.83", "-1.4293, -55.5451, 20.8995, 0.55", "-0.762954, -57.6187, 20.8005, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "4.92359, -10.7873, 1.69553, 2.49", "5.96913, -12.8521, 0.842419, 2.49" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.92359, -10.7873, 1.69553, 1.39", "8.27604, -9.90972, -0.357515, 1.39", "9.91469, -9.48078, -1.36103, 1.11", "11.7698, -8.99518, -2.49711, 1.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "19.4345, 9.10538, 26.1495, 0.55", "23.6068, 12.7129, 31.9036, 0.55", "27.9377, 15.644, 37.9379, 0.55", "33.1787, 19.5252, 42.5095, 0.55", "38.2025, 22.5341, 47.9361, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "19.4345, 9.10538, 26.1495, 0.55", "27.6689, 12.0757, 31.9048, 0.55", "36.7021, 15.1574, 36.2233, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.18041, 7.21184, 1.41987, 1.11", "5.36838, 9.49942, 2.14768, 1.11", "6.37499, 11.4855, 2.46166, 1.11", "7.8341, 14.5018, 2.34582, 1.11", "8.81563, 16.6309, 2.13555, 1.11", "9.78625, 18.7732, 1.8004, 0.83", "11.1297, 21.5212, 1.17259, 0.83", "13.346, 25.6426, -0.395963, 0.83", "15.2127, 28.9255, -2.24988, 0.83", "15.9266, 30.1372, -3.11713, 0.83", "17.1504, 32.2107, -4.8738, 0.55", "18.4425, 34.36, -6.92922, 0.83", "19.876, 36.7264, -9.3225, 0.55", "20.9247, 38.5206, -11.2117, 0.55", "21.4744, 39.5205, -12.2996, 0.55", "22.5266, 41.5234, -14.61, 0.28", "22.7528, 42.0351, -15.2001, 0.83", "23.0088, 42.861, -16.0769, 0.83", "23.9957, 46.9168, -20.2597, 0.55", "24.1883, 47.8338, -21.3284, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.18041, 7.21184, 1.41987, 0.55", "7.10457, 9.32141, -0.727005, 0.55", "8.16928, 10.0801, -1.75775, 0.55", "10.1013, 11.4581, -3.82534, 0.83", "11.327, 12.4204, -5.40637, 0.83", "14.2674, 15.0587, -9.56827, 0.83", "14.8628, 15.6388, -10.4711, 0.83", "16.8989, 17.7995, -14.1076, 0.83", "19.4377, 20.7376, -19.1791, 0.83", "21.5135, 23.6178, -24.0057, 0.83", "22.9522, 25.9471, -27.6739, 0.83", "23.5095, 26.984, -29.1698, 0.83", "24.4665, 29.0093, -31.7628, 0.83", "24.6906, 29.5974, -32.3738, 0.83", "25.0654, 30.7689, -33.4, 0.28", "25.5104, 32.07, -34.3386, 0.83", "26.7283, 35.3575, -36.4644, 0.83", "27.8951, 37.6543, -37.7159, 0.83", "29.8283, 40.6943, -39.356, 0.55", "30.4137, 41.4868, -39.8143, 0.83", "32.0662, 43.5273, -41.2372, 0.55", "32.7847, 44.3706, -41.8893, 0.83", "36.0692, 48.2007, -45.2251, 0.28", "37.7552, 50.254, -47.2148, 0.83", "38.1093, 50.7598, -47.8401, 0.83", "40.1947, 53.9978, -52.4981, 0.28", "40.4442, 54.4356, -53.2149, 0.55", "41.2024, 56.0693, -56.0741, 0.28", "41.4127, 56.7208, -57.2988, 1.11", "42.6376, 60.9064, -64.7945, 0.55", "43.0001, 62.116, -66.8862, 0.28", "43.2577, 62.9248, -68.2982, 0.55", "43.5046, 63.6749, -69.6282, 0.28", "43.9275, 64.8509, -71.6429, 0.55", "44.4697, 66.3479, -74.0777, 0.28", "44.9669, 67.7549, -75.3066, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "10.1562, -37.7451, 2.67222, 0.28", "14.409, -52.1295, 2.67222, 0.28", "18.6619, -66.514, 2.67222, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-21.3856, 13.0518, -18.0807, 0.55", "-24.88, 15.4417, -21.4546, 0.55", "-27.4423, 16.8245, -23.1788, 1.11", "-30.763, 18.6147, -25.2692, 0.83", "-32.8561, 19.6888, -26.5239, 0.83", "-35.6196, 21.1209, -28.206, 0.83", "-39.1595, 23.0159, -30.282, 0.83", "-41.4735, 24.1478, -31.5123, 0.55", "-44.2374, 25.5409, -32.7404, 0.28", "-45.305, 26.1117, -33.1446, 0.83", "-47.4538, 27.4758, -34.0722, 0.83", "-49.1166, 28.7357, -34.9289, 0.55", "-50.9351, 30.4212, -36.2012, 0.83", "-52.7534, 32.1816, -37.5216, 0.28", "-53.8582, 33.3146, -38.3403, 0.28", "-54.852, 34.4251, -39.1499, 0.55", "-55.4369, 35.1162, -39.6667, 0.83", "-57.5228, 37.7687, -41.8337, 0.28", "-58.2487, 38.7268, -42.6148, 0.83", "-59.9363, 41.0286, -44.4471, 0.55", "-60.503, 41.8136, -45.0666, 0.28", "-61.6332, 43.4489, -46.2625, 1.11", "-63.0135, 45.3588, -47.5964, 0.28", "-64.1651, 46.7377, -48.5588, 0.55", "-64.9291, 47.5545, -49.2043, 0.28", "-65.6211, 48.2208, -49.735, 0.83", "-66.64, 49.2261, -50.6834, 0.28", "-67.6794, 50.2075, -51.7312, 0.55", "-69.0722, 51.4342, -53.1246, 0.83", "-72.3797, 54.5103, -56.5671, 0.28", "-73.1707, 55.2596, -57.3822, 0.83", "-76.4989, 58.4845, -60.585, 0.28", "-76.9506, 58.9415, -60.9929, 0.55", "-77.897, 60.0132, -61.7372, 1.11", "-80.2685, 62.9728, -63.2937, 0.28", "-80.725, 63.5871, -63.514, 0.55", "-81.8595, 65.1296, -63.9282, 0.28", "-82.1797, 65.586, -64.0172, 0.55", "-84.1262, 68.4839, -64.7047, 0.28", "-85.3264, 70.3068, -65.3622, 0.83", "-86.1304, 71.4358, -65.8715, 0.28", "-86.4337, 71.8489, -66.0976, 0.83", "-89.2526, 75.5172, -68.2912, 0.28", "-89.6444, 76.0198, -68.6117, 0.83", "-91.7798, 78.6171, -70.4646, 0.28", "-92.4226, 79.3539, -70.998, 0.55", "-94.6594, 81.8672, -72.9591, 0.28", "-95.8208, 83.0983, -73.9655, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-21.3856, 13.0518, -18.0807, 0.83", "-24.7428, 14.6644, -16.6221, 0.83", "-26.9088, 15.8214, -15.7766, 0.55", "-33.4348, 19.3722, -13.7237, 0.55", "-40.6629, 23.4556, -11.9511, 0.55", "-44.6924, 25.6894, -11.2595, 0.55", "-47.4204, 27.1701, -10.9873, 0.55", "-52.5139, 29.8212, -10.9193, 0.55", "-55.4922, 31.2435, -11.2955, 0.55", "-58.1924, 32.3938, -11.9475, 0.55", "-61.0119, 33.4276, -13.1229, 0.55", "-65.4794, 34.7404, -15.247, 0.55", "-70.0872, 35.8087, -17.5898, 0.55", "-71.6921, 36.058, -18.4116, 0.28", "-74.2626, 36.4171, -19.6487, 1.39", "-79.9938, 37.0384, -22.1792, 0.28", "-81.4629, 37.2499, -22.7927, 0.83", "-83.3053, 37.5311, -23.5504, 0.28", "-85.3741, 38.0094, -24.3036, 0.55", "-86.0147, 38.1958, -24.5099, 0.28", "-88.8943, 39.2097, -25.3616, 0.83", "-93.7065, 41.0438, -26.3655, 0.28", "-95.1237, 41.6159, -26.6899, 0.55", "-97.5019, 42.6189, -27.2572, 0.28", "-99.2267, 43.2888, -27.6703, 0.55", "-102.456, 44.4076, -28.4086, 0.28", "-103.365, 44.6075, -28.5597, 0.83", "-107.857, 45.0337, -29.0323, 0.28", "-108.72, 45.0833, -29.1197, 0.55", "-111.388, 45.0801, -29.364, 0.28", "-113.476, 44.983, -29.5106, 0.55", "-121.674, 44.0841, -29.7433, 0.28", "-122.945, 43.8852, -29.7471, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-46.044, 16.0147, -22.0011, 0.55", "-48.9071, 16.9576, -25.4187, 0.55", "-51.5792, 17.8378, -28.3301, 0.55", "-53.8742, 18.572, -30.4934, 0.83", "-55.6075, 19.188, -31.7904, 0.83", "-57.9177, 20.0129, -33.3145, 0.28", "-58.7254, 20.2808, -33.8107, 0.28", "-61.1152, 21.0026, -34.9914, 0.83", "-63.3508, 21.5914, -35.9438, 0.55", "-68.0172, 22.5656, -37.7604, 0.55", "-71.2001, 23.0726, -39.0295, 0.83", "-73.7388, 23.38, -40.2616, 0.28", "-74.3326, 23.4313, -40.6035, 0.55", "-77.6314, 23.5914, -42.5265, 0.28", "-79.091, 23.6064, -43.4499, 0.55", "-81.5373, 23.6697, -45.0512, 0.55", "-84.8001, 23.9432, -47.0266, 0.28", "-85.7629, 24.0774, -47.5697, 0.28", "-90.1218, 24.878, -49.8593, 0.55", "-94.2939, 25.8145, -51.6995, 0.83", "-99.7269, 27.1421, -53.6612, 0.28", "-100.91, 27.4412, -54.0019, 0.55", "-103.719, 28.1736, -54.6407, 0.55", "-105.015, 28.5293, -54.9235, 0.55", "-108.798, 29.5707, -55.7644, 0.83", "-111.81, 30.4302, -56.1522, 0.28", "-112.64, 30.6612, -56.2089, 0.55", "-115.605, 31.5317, -56.398, 0.28", "-117.087, 31.9497, -56.5578, 0.55", "-118.748, 32.3751, -56.8128, 0.28", "-119.812, 32.6513, -57.029, 0.83", "-121.612, 33.1791, -57.4163, 0.28", "-123.339, 33.7635, -57.8038, 0.83", "-127.804, 35.7636, -58.8526, 0.28", "-129.376, 36.6703, -59.3199, 0.28", "-130.408, 37.3688, -59.7199, 0.28", "-132.279, 38.7873, -60.7267, 0.83", "-133.95, 40.1938, -61.8221, 0.28", "-136.43, 42.4925, -63.7564, 0.55", "-139.861, 45.9719, -66.7751, 0.28", "-141.422, 47.6236, -68.203, 0.83", "-143.904, 50.2374, -70.4899, 0.28", "-144.719, 51.0738, -71.1969, 0.55", "-146.517, 52.9115, -72.6128, 0.28", "-146.938, 53.3298, -72.9218, 0.83", "-150.533, 56.8702, -74.9196, 0.28", "-151.287, 57.6213, -75.2123, 0.55", "-153.835, 60.2623, -75.8003, 0.55", "-154.303, 60.7561, -75.8834, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-46.044, 16.0147, -22.0011, 0.55", "-48.8221, 14.0665, -22.2789, 0.55", "-54.2132, 10.7333, -23.5727, 0.83", "-59.4093, 7.77498, -25.1846, 0.83", "-62.3049, 6.26955, -26.322, 0.55", "-63.8551, 5.50803, -27.0048, 0.55", "-68.4424, 3.34493, -29.3591, 0.55", "-74.3102, 1.05796, -32.9182, 0.28", "-75.2907, 0.754595, -33.7381, 0.55", "-77.7412, 0.123284, -36.2562, 0.28", "-78.6997, -0.11807, -37.2817, 0.83", "-81.2091, -0.873321, -40.0676, 0.55", "-82.2603, -1.34822, -41.1792, 0.55", "-85.7628, -3.42503, -43.893, 0.28", "-87.1488, -4.42061, -44.7995, 0.83", "-89.4005, -6.37214, -45.9129, 0.28", "-90.217, -7.15375, -46.1701, 0.83", "-93.9368, -11.0543, -46.5545, 0.28", "-94.8039, -12.0913, -46.6307, 0.83", "-95.6469, -13.205, -46.636, 0.28", "-96.009, -13.7253, -46.6365, 0.83", "-97.7539, -16.3498, -46.6738, 0.28", "-98.6478, -17.6644, -46.8438, 0.55", "-101.046, -20.7596, -48.499, 0.28", "-101.23, -20.9863, -48.6468, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-12.8352, -12.5206, 5.871, 0.83", "-14.0698, -13.2436, 6.81512, 0.83", "-17.5615, -15.5311, 9.00745, 0.55", "-22.302, -18.1308, 11.8961, 0.55", "-24.8429, -19.3775, 13.4539, 0.55", "-26.1699, -19.9577, 14.328, 0.55", "-28.1035, -20.6824, 15.6615, 0.83", "-34.8028, -22.8279, 20.3962, 0.55", "-40.662, -24.5117, 24.4365, 0.55", "-45.6487, -25.7421, 27.5428, 0.55", "-48.8727, -26.3954, 29.5629, 0.55", "-53.5273, -27.1625, 32.4152, 0.55", "-56.391, -27.5154, 34.065, 0.55", "-60.1634, -28.0758, 35.9759, 0.55", "-63.6213, -28.9848, 37.3763, 0.55", "-65.6748, -29.6812, 37.9466, 0.28", "-66.9164, -30.1911, 38.2081, 0.55", "-69.6147, -31.3055, 38.6298, 0.55", "-76.354, -34.1035, 39.768, 0.55", "-79.9955, -35.6247, 40.5541, 0.55", "-83.811, -37.3676, 41.3113, 0.28", "-85.6537, -38.2467, 41.617, 0.55", "-89.53, -39.9969, 42.2068, 0.55", "-99.9395, -45.5402, 48.9656, 0.55", "-109.358, -49.7818, 57.839, 0.55", "-117.47, -54.7015, 67.5979, 0.55", "-125.695, -60.5035, 76.7367, 0.55", "-136.217, -64.7095, 84.2847, 0.55", "-148.527, -67.0531, 89.6455, 0.55", "-161.663, -68.7325, 92.8824, 0.55", "-174.547, -69.529, 97.2779, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-12.8352, -12.5206, 5.871, 0.83", "-14.9691, -14.6951, 3.63703, 0.83", "-16.9331, -16.2825, 1.78867, 0.83", "-19.3222, -17.9781, -0.429582, 0.83", "-22.7441, -20.0986, -3.41418, 0.83", "-25.3646, -21.7555, -5.91736, 0.83", "-26.936, -22.7944, -7.48855, 0.83", "-29.6294, -24.653, -10.3972, 0.83", "-32.0436, -26.2338, -12.9598, 0.83", "-36.1362, -28.8301, -17.0123, 0.83", "-41.0503, -31.8093, -21.3559, 0.28", "-42.2219, -32.5635, -22.3056, 0.83", "-43.2698, -33.3009, -23.1271, 0.83", "-44.4795, -34.2237, -24.0174, 0.55", "-45.5881, -35.0005, -24.6377, 0.28", "-46.7873, -35.7165, -25.0566, 0.55", "-47.5495, -36.055, -25.1846, 0.28", "-48.9443, -36.6318, -25.4537, 0.83", "-53.1768, -38.3618, -26.4541, 0.28", "-54.1373, -38.7266, -26.7882, 0.55", "-55.1951, -39.1181, -27.2212, 0.28", "-55.7007, -39.3075, -27.4855, 0.55", "-56.9878, -39.7872, -28.2605, 0.28", "-57.4162, -39.9528, -28.5851, 0.83", "-59.5989, -40.8992, -30.6453, 0.55", "-60.5526, -41.3347, -31.6628, 0.83", "-62.3094, -42.1399, -33.7611, 0.28", "-62.6606, -42.2989, -34.2184, 0.55", "-64.2209, -42.9806, -36.4596, 0.28", "-65.0047, -43.3816, -37.6579, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-26.6426, -40.2067, 13.6833, 0.55", "-30.7365, -42.4509, 12.2345, 0.55", "-37.4165, -46.0857, 10.1101, 0.55", "-39.4176, -47.1564, 9.52566, 0.55", "-44.2817, -49.8397, 8.25719, 0.28", "-47.1549, -51.4457, 7.57005, 0.55", "-49.3739, -52.7144, 7.05144, 0.28", "-51.5699, -53.9711, 6.6311, 0.28", "-52.4741, -54.5075, 6.53556, 0.55", "-55.7678, -56.469, 6.39111, 0.28", "-56.365, -56.8834, 6.42831, 0.83", "-58.8609, -58.888, 6.66638, 0.28", "-60.2206, -60.069, 6.83152, 0.55", "-62.0289, -61.7379, 7.07842, 0.28", "-63.7619, -63.4048, 7.3504, 0.55", "-66.1396, -65.7451, 7.82509, 0.55", "-66.3668, -65.982, 7.87917, 0.83", "-67.8493, -67.6423, 8.35314, 0.28", "-68.0542, -67.8847, 8.39614, 0.83", "-78.1443, -74.0996, 9.24196, 0.83", "-89.3593, -78.1566, 9.62292, 0.83", "-100.262, -82.8816, 10.5557, 0.83", "-110.287, -88.6466, 13.3475, 0.83", "-119.507, -94.4164, 18.1782, 0.83", "-128.931, -97.6765, 24.7712, 0.83", "-137.882, -100.942, 31.9937, 0.83", "-147.834, -102.652, 38.4258, 0.83", "-158.373, -105.543, 43.2811, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-26.6426, -40.2067, 13.6833, 0.83", "-26.8581, -42.858, 14.7155, 0.83", "-27.326, -46.5878, 16.295, 0.83", "-27.46, -48.4873, 17.1149, 0.83", "-27.7574, -53.0599, 19.0167, 0.83", "-27.7898, -53.6889, 19.2646, 0.83", "-27.9297, -56.3843, 20.2164, 0.83", "-28.147, -59.2976, 21.1851, 0.83", "-28.5445, -63.5666, 22.6366, 0.83", "-28.8388, -67.3552, 23.8445, 0.83", "-28.9329, -69.0291, 24.2852, 0.83", "-29.1455, -73.2833, 25.3372, 0.83", "-29.3379, -77.5763, 26.3617, 0.83", "-27.9025, -85.6798, 30.7725, 0.83", "-26.7878, -93.5145, 35.7502, 0.83", "-25.8014, -101.855, 39.8008, 0.83", "-22.9755, -110.057, 43.2471, 0.83", "-19.1196, -118.039, 46.2052, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-0.762954, -57.6187, 20.8005, 0.28", "-2.20442, -60.4101, 20.4957, 0.28", "-2.47934, -60.9424, 20.4375, 0.83", "-3.94176, -63.7744, 20.1283, 0.28", "-8.43535, -74.3418, 19.6981, 0.28", "-10.6246, -85.5659, 20.4692, 0.28", "-11.448, -96.7292, 22.9573, 0.28", "-12.968, -107.173, 27.5271, 0.28", "-12.4084, -118.292, 30.2923, 0.28", "-10.8095, -129.368, 32.8269, 0.28", "-11.5578, -140.783, 33.3912, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.762954, -57.6187, 20.8005, 0.55", "0.0703077, -60.0672, 20.6586, 0.55", "0.579033, -61.562, 20.5719, 0.55", "1.03865, -62.9126, 20.4937, 0.28", "4.99293, -71.7853, 18.5273, 0.28", "7.64964, -81.2832, 17.9164, 0.28", "9.63936, -90.733, 15.8157, 0.28", "13.0724, -99.8588, 14.105, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "5.96913, -12.8521, 0.842419, 1.94", "10.1896, -16.9814, 0.0387528, 1.94" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.96913, -12.8521, 0.842419, 1.11", "1.80991, -17.9542, -4.64204, 1.11", "1.32993, -18.4576, -5.27101, 1.11", "-1.06787, -21.0887, -8.64191, 1.11", "-1.9545, -22.1146, -10.0348, 1.11", "-3.4495, -23.8298, -12.4415, 1.11", "-5.25092, -25.8799, -15.3396, 1.11", "-7.49886, -28.2503, -18.7761, 1.11", "-8.64717, -29.2828, -20.4704, 0.83", "-10.6897, -30.8445, -23.3612, 0.83", "-11.5116, -31.4805, -24.4739, 0.55", "-11.8843, -31.7586, -24.9392, 0.83", "-13.8108, -33.1398, -27.1088, 1.39", "-16.4867, -34.8549, -29.7103, 1.11", "-18.1654, -35.8906, -31.3137, 0.55", "-19.073, -36.461, -32.1666, 0.83", "-22.2451, -38.6039, -35.3761, 0.55", "-23.4327, -39.4779, -36.6585, 0.28", "-23.9094, -39.8715, -37.2506, 0.55", "-27.4087, -42.8043, -41.6212, 0.28", "-27.8077, -43.1468, -42.1454, 0.55", "-28.6701, -43.9291, -43.3684, 0.28", "-29.6354, -44.9542, -44.8564, 1.39", "-32.9386, -48.3453, -50.1653, 0.28" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.7698, -8.99518, -2.49711, 1.11", "11.2132, -9.27679, -4.95748, 1.11", "10.804, -9.40534, -6.73928, 0.83", "10.4852, -9.47488, -8.82739, 0.83", "9.75596, -9.65259, -14.7555, 0.83", "9.41312, -9.85231, -19.4702, 0.83", "9.35021, -9.90468, -20.9009, 0.83", "9.30286, -9.99388, -22.7922, 0.83", "9.00595, -10.1775, -32.4051, 0.83", "8.86307, -10.0986, -37.1674, 0.83", "8.67652, -9.84626, -40.8807, 0.83", "8.40867, -9.64453, -43.5734, 0.28", "8.1446, -9.51043, -45.3433, 1.39", "7.2845, -9.10601, -49.6401, 0.55", "5.8111, -8.43624, -55.2961, 0.55", "4.7021, -7.95463, -58.9853, 1.11", "1.66595, -6.80273, -67.8582, 0.55", "0.864385, -6.57051, -70.1546, 0.55", "-0.26544, -6.35198, -73.5355, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "11.7698, -8.99518, -2.49711, 1.11", "14.0381, -9.46479, -3.68894, 1.11", "18.4028, -9.90067, -5.60742, 1.11", "21.0329, -10.1918, -6.81377, 0.83", "22.5363, -10.4042, -7.61101, 0.83", "24.5355, -10.7051, -9.01914, 1.11", "26.888, -11.0453, -10.9606, 1.11", "29.7177, -11.3589, -13.4751, 1.11", "32.1612, -11.5664, -15.7724, 0.83", "35.1136, -11.8728, -18.8211, 1.39", "39.5026, -12.5343, -23.8595, 0.83", "42.6066, -13.2387, -27.8458, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "36.7021, 15.1574, 36.2233, 0.55", "43.1672, 17.3947, 39.9682, 0.55", "50.2327, 19.1233, 42.799, 0.55", "57.0297, 21.1004, 46.0806, 0.55", "63.5895, 22.0062, 50.2282, 0.55", "70.2516, 22.1169, 54.3151, 0.55", "76.3663, 23.3709, 59.0116, 0.55", "81.8312, 24.4183, 64.4968, 0.55", "87.1353, 24.7734, 70.2271, 0.55", "91.4062, 24.3593, 76.7594, 0.55", "96.7616, 23.2912, 82.3462, 0.55", "102.427, 23.6014, 87.7221, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "36.7021, 15.1574, 36.2233, 0.55", "45.2263, 16.3813, 41.53, 0.55", "53.894, 18.3004, 46.3645, 0.55", "63.0921, 19.305, 50.4532, 0.55", "72.3142, 21.1262, 54.1694, 0.55", "81.4311, 24.6018, 56.7051, 0.55", "91.0674, 26.3243, 59.2238, 0.55", "100.99, 27.4559, 60.8128, 0.55", "111.005, 26.6165, 62.0069, 0.55", "120.787, 24.8338, 63.8735, 0.55", "130.218, 22.4196, 66.6031, 0.55", "139.188, 18.4202, 68.9121, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "10.1896, -16.9814, 0.0387528, 0.83", "11.562, -16.4198, 0.281682, 0.83", "15.2951, -14.4933, 0.83227, 0.83", "16.4214, -13.7848, 1.10079, 0.83", "17.9719, -12.7128, 1.58109, 0.83", "21.8442, -9.79086, 3.13894, 0.83", "23.7196, -8.36583, 3.97012, 0.83", "25.0944, -7.25987, 4.64819, 0.83", "27.7727, -4.98027, 6.10905, 0.83", "30.1679, -3.06348, 7.35172, 0.55", "33.171, -0.976235, 8.80581, 0.55", "34.7667, -0.100933, 9.50684, 0.55", "36.6213, 0.673419, 10.2081, 0.55", "38.5736, 1.27355, 10.7519, 0.55", "41.1966, 1.92677, 11.2403, 0.55", "43.7071, 2.40363, 11.6283, 0.55", "45.3925, 2.63504, 11.8394, 0.55", "47.9197, 2.90787, 12.1841, 0.55", "50.4552, 3.1981, 12.5836, 0.55", "52.3775, 3.41459, 12.9477, 0.55", "54.5119, 3.74191, 13.468, 0.55", "55.7503, 3.96238, 13.7578, 0.55", "57.294, 4.28968, 14.1086, 0.55", "60.0338, 5.04163, 14.6798, 0.55", "63.9673, 6.37016, 15.467, 0.55", "65.5614, 6.94516, 15.7248, 0.55", "68.4913, 8.13233, 16.1233, 0.55", "70.0859, 8.84707, 16.274, 0.55", "73.0679, 10.2649, 16.4342, 0.55", "74.7974, 11.0881, 16.4736, 0.55", "77.4411, 12.4414, 16.4755, 0.55", "78.5382, 13.0062, 16.4587, 0.55", "80.1444, 13.938, 16.4606, 0.55", "82.1188, 14.9716, 16.4365, 0.55", "83.0502, 15.4548, 16.4195, 0.55", "84.0767, 15.9601, 16.4012, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "10.1896, -16.9814, 0.0387528, 1.39", "12.561, -21.8739, -1.71974, 1.39", "14.4371, -25.7446, -3.11094, 1.39", "15.9163, -28.7965, -4.20789, 1.11", "18.167, -33.44, -5.87686, 1.11" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "42.6066, -13.2387, -27.8458, 0.55", "42.399, -12.176, -34.24, 0.55", "42.311, -11.7793, -36.1271, 0.28", "42.2976, -11.7126, -36.3942, 0.83", "42.1843, -11.1672, -38.3273, 0.28", "42.1381, -10.9861, -38.9994, 0.55", "42.023, -10.5654, -40.5655, 0.28", "41.9608, -10.3811, -41.1581, 0.55", "41.7416, -9.81208, -43.2945, 0.28", "41.701, -9.706, -43.7129, 0.55", "41.2958, -8.70868, -47.8623, 0.28", "41.278, -8.66084, -48.0536, 0.55", "41.0277, -8.02582, -50.4669, 0.28", "40.9786, -7.90394, -50.8829, 0.83", "40.6847, -7.17316, -53.0272, 0.28", "40.6209, -6.99275, -53.4853, 0.55", "39.8507, -4.73268, -58.1542, 0.28", "39.809, -4.60935, -58.3954, 0.55", "39.6484, -4.12705, -59.4417, 0.28", "39.597, -3.96655, -59.799, 0.55", "39.3143, -3.12768, -61.7378, 0.28", "39.2369, -2.8994, -62.3006, 0.55", "39.0494, -2.42705, -63.788, 0.28", "38.5579, -1.08228, -68.8508, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "42.6066, -13.2387, -27.8458, 0.55", "47.1725, -13.4023, -33.2715, 0.55", "52.394, -13.7024, -38.929, 1.39", "53.112, -13.725, -39.6328, 1.39", "54.7492, -13.7455, -41.1346, 0.55", "59.7643, -13.7014, -45.3664, 0.55", "62.8819, -13.6344, -47.84, 0.55", "67.0075, -13.5023, -50.5211, 0.55", "69.7869, -13.4128, -52.0529, 0.28", "70.6785, -13.385, -52.5221, 0.55", "74.7715, -13.2182, -54.5301, 0.28", "75.6529, -13.1699, -54.9372, 0.55", "80.5738, -12.9096, -57.4358, 0.28", "82.5014, -12.8069, -58.6484, 0.28", "83.6405, -12.7635, -59.5307, 0.28", "84.1904, -12.7297, -59.998, 0.55", "87.1885, -12.4597, -62.9097, 0.55", "90.6344, -11.9379, -66.5466, 0.28", "91.8433, -11.6478, -67.9316, 0.55", "93.8731, -11.0904, -70.4278, 0.28", "94.9291, -10.7542, -71.7468, 0.55", "96.2142, -10.2639, -73.3074, 0.55", "97.0382, -9.78213, -74.2293, 0.28", "97.469, -9.46754, -74.7027, 0.55", "98.6649, -8.51574, -76.1231, 0.28", "99.0554, -8.19915, -76.6357, 0.55", "100.477, -7.06811, -78.5124, 0.28", "101.668, -6.12384, -80.0568, 0.55", "103.887, -4.44748, -82.9684, 0.28", "104.066, -4.3114, -83.2082, 0.55", "106.195, -2.69823, -86.0262, 0.28", "107.079, -2.04338, -87.2109, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "84.0767, 15.9601, 16.4012, 0.55", "87.2798, 13.2294, 20.9105, 0.55", "88.8732, 11.8709, 23.1536, 0.55", "91.7306, 9.43497, 27.1762, 0.28", "95.687, 6.22844, 32.5527, 0.28" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "84.0767, 15.9601, 16.4012, 0.28", "83.4102, 18.4713, 19.8643, 0.28", "82.8587, 20.5497, 22.7304, 0.55", "83.0744, 25.4202, 31.4049, 0.55", "82.4528, 30.5583, 39.8982, 0.55" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "18.167, -33.44, -5.87686, 0.83", "20.6421, -36.429, -7.98061, 0.83", "22.1732, -38.388, -8.69533, 0.83", "23.3008, -40.0612, -8.8788, 0.83", "25.7255, -44.1635, -8.58422, 0.83", "28.7695, -49.6331, -7.74484, 0.83", "32.0258, -55.7159, -6.45779, 0.83", "35.4447, -62.6687, -4.34417, 0.83", "37.7194, -67.4074, -2.58726, 1.11", "39.5942, -71.4891, -0.780142, 0.83", "40.2291, -72.9705, 0.0430874, 0.83", "41.3174, -76.0838, 2.05431, 0.83", "42.2488, -80.1454, 4.663, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "18.167, -33.44, -5.87686, 0.83", "18.1614, -34.4836, -10.0713, 0.83", "18.1604, -34.6562, -10.765, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "42.2488, -80.1454, 4.663, 0.83", "42.4374, -81.9471, 5.37767, 0.83", "42.5547, -83.248, 5.7839, 0.83", "42.9967, -88.1539, 7.31577, 0.83", "43.4014, -92.646, 8.71847, 0.83", "43.9422, -98.647, 10.5923, 0.83", "44.4159, -103.904, 12.234, 0.55", "44.9208, -109.403, 13.9827, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "42.2488, -80.1454, 4.663, 0.55", "44.6559, -81.1085, 3.64257, 0.55", "48.4915, -82.8811, 1.87084, 0.55", "50.3263, -84.0824, 0.814326, 0.55", "51.4586, -84.9581, 0.172129, 0.55", "53.1269, -86.3257, -0.626444, 0.55", "54.4836, -87.4884, -1.20339, 0.55", "57.2462, -90.4431, -2.20136, 0.55", "60.4311, -94.5884, -2.91358, 0.55", "62.4691, -97.7551, -3.21957, 0.55", "65.0912, -102.399, -3.44188, 0.55", "66.0646, -104.33, -3.48181, 0.55", "69.2429, -111.276, -3.34982, 0.55", "70.7282, -114.975, -3.12379, 0.55", "71.5692, -117.324, -2.93046, 0.55", "72.1325, -119.413, -2.83204, 0.55", "72.5735, -121.58, -2.89248, 0.28", "72.7114, -122.177, -2.96425, 0.55", "73.4538, -124.308, -3.60167, 0.28", "73.8799, -125.157, -4.02067, 0.55", "74.41, -126.049, -4.51491, 0.55", "75.877, -128.428, -5.74617, 0.55", "76.6087, -129.466, -6.31881, 0.55", "77.817, -131.022, -7.26383, 0.55", "79.885, -133.465, -8.71604, 0.28", "80.2826, -133.891, -8.98708, 0.55", "82.6366, -136.235, -10.5097, 0.55", "85.6287, -138.958, -12.339, 0.55", "89.055, -141.787, -14.3586, 0.28", "90.5852, -142.847, -15.197, 0.55", "92.7508, -144.125, -16.1992, 0.28", "93.2991, -144.381, -16.4025, 0.55", "95.1255, -144.945, -16.8679, 0.28", "95.7562, -145.065, -16.9058, 0.55", "98.6309, -145.482, -16.7333, 0.28", "100.42, -145.732, -16.5992, 0.55", "103.307, -146.118, -16.1801, 0.28", "104.541, -146.301, -15.9663, 0.28", "106.444, -146.66, -15.533, 0.55", "110.629, -147.555, -14.4172, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "18.1604, -34.6562, -10.765, 0.83", "14.483, -39.2395, -19.2953, 0.83", "13.3929, -40.6694, -21.9061, 0.83", "11.7498, -43.0333, -26.5953, 0.55", "11.1281, -44.0515, -28.4858, 0.55", "10.3904, -45.4404, -31.0209, 0.55", "9.17948, -48.0095, -35.5221, 0.55", "8.1336, -50.9178, -39.6446, 0.55", "7.04784, -55.1897, -45.079, 0.28", "6.70452, -57.6369, -47.8261, 0.83", "6.41728, -60.7268, -50.9782, 0.28", "6.34936, -62.0703, -52.2825, 1.11", "6.07418, -69.1053, -58.6575, 0.28", "5.98323, -71.6367, -60.8091, 1.39", "5.58858, -81.9591, -69.095, 0.28", "5.52753, -83.5023, -70.3752, 1.11", "5.33407, -87.428, -73.5935, 0.28", "5.29781, -88.2097, -74.292, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.1604, -34.6562, -10.765, 0.83", "18.7419, -36.9094, -15.9901, 0.83", "19.1036, -38.3109, -19.2405, 0.83", "19.3546, -39.2835, -21.4959, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "44.9208, -109.403, 13.9827, 0.55", "43.1245, -111.908, 10.1748, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "44.9208, -109.403, 13.9827, 0.55", "45.4595, -111.522, 13.8371, 0.55", "45.897, -113.029, 13.7028, 0.55", "46.3788, -114.814, 13.5378, 0.55", "46.7645, -116.295, 13.4006, 0.55", "47.4784, -119.153, 13.0598, 0.28", "47.6809, -120.016, 12.9474, 0.55", "48.0207, -121.646, 12.6416, 0.28", "48.2645, -122.775, 12.4235, 0.28", "48.366, -123.237, 12.3192, 0.55", "48.8949, -125.671, 11.745, 0.28", "48.9758, -126.143, 11.6429, 0.55", "49.2306, -127.772, 11.2566, 0.28", "49.3163, -128.363, 11.0862, 0.55", "49.717, -130.691, 10.3552, 0.28", "49.7982, -131.141, 10.1893, 0.55", "49.9769, -131.941, 9.89106, 0.28", "50.1, -132.395, 9.74466, 0.55", "50.882, -134.553, 9.26487, 0.28", "51.1673, -135.177, 9.17927, 0.55", "52.0218, -136.681, 9.23506, 0.28", "53.5068, -139.094, 9.57366, 0.55", "54.5107, -140.611, 10.0259, 0.55", "56.1335, -143.053, 11.0854, 0.28", "56.6331, -143.781, 11.5131, 0.55", "58.1583, -146.03, 13.0162, 0.28", "58.3885, -146.376, 13.287, 0.55", "59.5832, -148.298, 14.8638, 0.28", "59.8927, -148.879, 15.3127, 0.28", "59.9914, -149.113, 15.4894, 0.55", "60.4192, -150.292, 16.262, 0.28", "60.4281, -150.32, 16.2737, 0.55", "61.1297, -152.352, 17.0357, 0.28", "61.4223, -153.258, 17.2461, 0.55", "63.8239, -160.47, 19.2226, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "19.3546, -39.2835, -21.4959, 0.55", "18.6392, -42.9462, -20.3727, 0.55", "18.1731, -45.1397, -19.8972, 0.55", "17.8028, -47.1934, -19.5223, 0.28", "17.4916, -49.0763, -19.1863, 0.28", "17.3089, -50.0183, -19.1434, 0.83", "16.8198, -52.7962, -19.1245, 0.28", "16.6374, -54.0295, -19.2067, 0.83", "16.2953, -56.7999, -19.388, 0.83", "16.2174, -57.9043, -19.4482, 0.83", "16.05, -63.9669, -19.687, 0.28", "16.0, -67.3636, -19.7945, 0.28", "16.0124, -68.8806, -19.8113, 0.55", "16.0393, -70.2358, -19.8204, 0.55", "16.311, -78.8009, -19.8799, 0.28", "16.3764, -79.7586, -19.8542, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "19.3546, -39.2835, -21.4959, 0.83", "20.7333, -42.641, -26.458, 0.83", "21.2908, -44.2791, -28.1437, 0.28", "21.5827, -45.2726, -28.8639, 0.83", "22.8873, -50.0029, -31.4508, 0.55", "23.2767, -51.4004, -32.0979, 0.55", "23.9906, -54.0726, -33.3796, 0.28", "24.7259, -57.0071, -34.5989, 0.55", "25.5051, -59.9936, -35.8778, 0.55", "26.8257, -64.8801, -38.0294, 0.28", "27.3166, -66.6856, -38.779, 1.11", "29.5824, -74.6914, -42.2342, 0.28", "30.1408, -76.6128, -43.1138, 1.11", "31.557, -81.5558, -45.4025, 0.28", "31.8722, -82.7033, -45.865, 1.11", "33.399, -88.7615, -47.7975, 0.28", "33.5644, -89.5088, -47.9635, 0.83", "33.8073, -90.8677, -48.1105, 0.28", "33.9599, -92.4783, -48.2114, 0.55", "34.0248, -99.884, -48.5216, 0.28", "33.9601, -100.912, -48.5815, 0.55", "33.6251, -102.885, -48.826, 0.28", "32.9969, -106.145, -49.4091, 1.11", "32.1582, -109.86, -50.2879, 0.28", "31.8195, -111.21, -50.753, 0.83", "31.3094, -112.775, -51.5482, 0.28", "30.5711, -115.797, -53.3054, 0.55", "30.3361, -117.991, -54.8885, 0.28", "30.3482, -118.191, -55.048, 0.83", "30.6439, -119.118, -56.0089, 0.28", "30.7562, -119.354, -56.2534, 0.55", "31.7238, -120.82, -57.8521, 0.28", "32.7073, -122.171, -58.9309, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "43.1245, -111.908, 10.1748, 0.55", "40.5135, -114.968, 8.67229, 0.55", "38.1588, -117.947, 7.03226, 0.55", "37.0083, -119.537, 6.00947, 0.55", "35.424, -122.175, 4.25293, 0.55", "33.9878, -124.876, 2.44975, 0.28", "33.4889, -125.962, 1.6892, 0.55", "32.8872, -127.645, 0.476728, 0.28", "32.3976, -129.572, -0.99548, 1.39", "31.7299, -132.624, -3.16171, 0.28", "31.5371, -133.438, -3.66355, 0.83", "30.6861, -136.576, -5.33007, 0.28", "30.3521, -137.643, -5.80578, 0.55", "29.9536, -138.764, -6.1723, 0.55", "28.3358, -142.906, -7.04734, 0.28", "27.5101, -144.77, -7.35337, 0.28", "26.7528, -146.403, -7.5464, 0.55", "25.6327, -148.69, -7.63316, 0.28", "25.14, -149.735, -7.69232, 0.55", "23.9796, -152.514, -7.75417, 0.28" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "43.1245, -111.908, 10.1748, 0.55", "40.8184, -110.84, 10.5441, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_48", "dend_45", "dend_40", "dend_33", "dend_8", "dend_3", "dend_0", "axon_0", "dend_57", "dend_56", "dend_52", "dend_49", "dend_47", "dend_46", "dend_44", "dend_41", "dend_37", "dend_34", "dend_14", "dend_9", "dend_7", "dend_4", "dend_2", "dend_1", "axon_1", "dend_54", "dend_53", "dend_51", "dend_50", "dend_43", "dend_42", "dend_39", "dend_38", "dend_36", "dend_35", "dend_16", "dend_15", "dend_13", "dend_10", "dend_6", "dend_5", "dend_30", "dend_17", "dend_12", "dend_11", "dend_32", "dend_31", "dend_23", "dend_18", "dend_25", "dend_24", "dend_22", "dend_19", "dend_27", "dend_26", "dend_21", "dend_20", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "axon_0", "axon_0", "dend_57", "dend_57", "dend_56", "dend_56", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_14", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L23_NBC_1f21a64cc1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_30, id: dend_30, parent: dend_16
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, axon_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, axon_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_61
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.49999965882319475)
    connect dend_48(0), soma_0(0.49999965882319475)
    connect dend_45(0), soma_0(0.49999965882319475)
    connect dend_40(0), soma_0(0.49999965882319475)
    connect dend_33(0), soma_0(0.49999965882319475)
    connect dend_8(0), soma_0(0.49999965882319475)
    connect dend_3(0), soma_0(0.49999965882319475)
    connect dend_0(0), soma_0(0.49999965882319475)
    connect axon_0(0), soma_0(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_30(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.89093, 6.3846, -1.48625, 2.82016 ) }
    soma_0 { pt3dadd( -2.66386, 5.61657, -1.27833, 4.98681 ) }
    soma_0 { pt3dadd( -2.43678, 4.84853, -1.07041, 7.51044 ) }
    soma_0 { pt3dadd( -2.20971, 4.0805, -0.862483, 8.92538 ) }
    soma_0 { pt3dadd( -1.98264, 3.31246, -0.65456, 10.0669 ) }
    soma_0 { pt3dadd( -1.75557, 2.54443, -0.446636, 10.3676 ) }
    soma_0 { pt3dadd( -1.52849, 1.7764, -0.238713, 10.6171 ) }
    soma_0 { pt3dadd( -1.30142, 1.00836, -0.0307891, 10.1846 ) }
    soma_0 { pt3dadd( -1.07435, 0.240325, 0.177134, 9.79445 ) }
    soma_0 { pt3dadd( -0.847273, -0.52771, 0.385058, 9.58423 ) }
    soma_0 { pt3dadd( -0.6202, -1.29574, 0.592981, 9.374 ) }
    soma_0 { pt3dadd( -0.393128, -2.06378, 0.800905, 9.16378 ) }
    soma_0 { pt3dadd( -0.166055, -2.83181, 1.00883, 8.95369 ) }
    soma_0 { pt3dadd( 0.0610184, -3.59985, 1.21675, 8.74371 ) }
    soma_0 { pt3dadd( 0.288091, -4.36788, 1.42468, 8.44292 ) }
    soma_0 { pt3dadd( 0.515164, -5.13592, 1.6326, 7.88171 ) }
    soma_0 { pt3dadd( 0.742237, -5.90395, 1.84052, 7.32051 ) }
    soma_0 { pt3dadd( 0.96931, -6.67199, 2.04845, 6.7381 ) }
    soma_0 { pt3dadd( 1.19638, -7.44002, 2.25637, 5.93312 ) }
    soma_0 { pt3dadd( 1.42346, -8.20806, 2.46429, 5.04519 ) }
    soma_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 2.76105 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -2.9567, 3.75017, 8.71987, 1.11 ) }
    dend_55 { pt3dadd( -3.99528, 6.53298, 8.67797, 0.83 ) }
    dend_55 { pt3dadd( -4.43182, 8.15142, 8.84336, 0.83 ) }
    dend_55 { pt3dadd( -5.51432, 12.8523, 9.58328, 0.83 ) }
    dend_55 { pt3dadd( -5.89004, 15.5414, 10.2696, 0.83 ) }
    dend_55 { pt3dadd( -6.14254, 17.8222, 10.9649, 1.11 ) }
    dend_55 { pt3dadd( -6.19247, 20.8311, 12.1497, 0.83 ) }
    dend_55 { pt3dadd( -5.86447, 24.5274, 14.0471, 0.83 ) }
    dend_55 { pt3dadd( -5.6928, 25.7965, 14.8106, 0.83 ) }
    dend_55 { pt3dadd( -5.06137, 29.4184, 17.3071, 0.55 ) }
    dend_55 { pt3dadd( -4.26935, 33.9483, 20.8549, 0.55 ) }
    dend_55 { pt3dadd( -3.56171, 38.466, 24.5844, 0.55 ) }
    dend_55 { pt3dadd( -3.12304, 41.8233, 27.4385, 0.55 ) }
    dend_55 { pt3dadd( -2.83, 43.8597, 29.1225, 0.28 ) }
    dend_55 { pt3dadd( -2.58689, 45.5763, 30.5985, 0.55 ) }
    dend_55 { pt3dadd( -2.42904, 47.9035, 32.6258, 0.55 ) }
    dend_55 { pt3dadd( -3.79147, 58.2377, 35.1122, 0.55 ) }
    dend_55 { pt3dadd( -6.69667, 68.273, 37.5625, 0.55 ) }
    dend_55 { pt3dadd( -10.8607, 77.3462, 41.6178, 0.55 ) }
    dend_55 { pt3dadd( -15.4034, 86.1826, 45.8142, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 41/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -5.4967, 3.50642, -7.38013, 1.66 ) }
    dend_48 { pt3dadd( -8.3983, 4.41827, -9.59609, 1.66 ) }
    dend_48 { pt3dadd( -12.5218, 5.7141, -12.7452, 1.66 ) }
    dend_48 { pt3dadd( -15.4204, 6.625, -14.9589, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -4.2067, -0.686075, -10.0602, 1.11 ) }
    dend_45 { pt3dadd( -6.0815, -0.721027, -9.95762, 1.11 ) }
    dend_45 { pt3dadd( -8.54889, -0.655839, -9.78252, 1.11 ) }
    dend_45 { pt3dadd( -11.1687, -0.474481, -9.58638, 1.11 ) }
    dend_45 { pt3dadd( -13.4107, -0.296969, -9.47618, 1.11 ) }
    dend_45 { pt3dadd( -16.9079, -0.0297907, -9.37188, 0.83 ) }
    dend_45 { pt3dadd( -19.4396, 0.126409, -9.35195, 0.83 ) }
    dend_45 { pt3dadd( -21.2789, 0.231551, -9.38079, 1.39 ) }
    dend_45 { pt3dadd( -23.3212, 0.359277, -9.46121, 1.11 ) }
    dend_45 { pt3dadd( -25.1811, 0.508495, -9.59352, 1.11 ) }
    dend_45 { pt3dadd( -28.2904, 0.700087, -9.8972, 1.11 ) }
    dend_45 { pt3dadd( -31.24, 0.713604, -10.2465, 1.11 ) }
    dend_45 { pt3dadd( -33.3938, 0.682455, -10.5972, 0.83 ) }
    dend_45 { pt3dadd( -34.632, 0.672983, -10.8133, 0.83 ) }
    dend_45 { pt3dadd( -38.7772, 0.479939, -11.9515, 0.83 ) }
    dend_45 { pt3dadd( -39.8407, 0.34147, -12.4004, 0.83 ) }
    dend_45 { pt3dadd( -42.3404, -0.151955, -13.9407, 0.83 ) }
    dend_45 { pt3dadd( -44.8539, -0.692409, -15.7843, 0.83 ) }
    dend_45 { pt3dadd( -47.4414, -1.2234, -17.9938, 0.83 ) }
    dend_45 { pt3dadd( -52.2894, -2.16532, -22.293, 0.83 ) }
    dend_45 { pt3dadd( -56.5428, -2.96506, -26.3709, 0.83 ) }
    dend_45 { pt3dadd( -59.7562, -3.48884, -29.5997, 0.83 ) }
    dend_45 { pt3dadd( -63.8634, -4.05873, -33.9629, 0.55 ) }
    dend_45 { pt3dadd( -66.6064, -4.41298, -36.9566, 0.28 ) }
    dend_45 { pt3dadd( -69.3963, -4.69462, -40.0851, 0.55 ) }
    dend_45 { pt3dadd( -72.1188, -4.66638, -42.8089, 0.55 ) }
    dend_45 { pt3dadd( -72.7594, -4.58516, -43.4193, 0.55 ) }
    dend_45 { pt3dadd( -73.7878, -4.44795, -44.3687, 1.11 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 73/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -4.5167, -3.10408, 11.1598, 1.66 ) }
    dend_40 { pt3dadd( -5.31044, -3.91565, 12.0421, 1.39 ) }
    dend_40 { pt3dadd( -7.03817, -5.68219, 13.9624, 1.66 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 76/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.0967, -6.10707, 15.1098, 1.39 ) }
    dend_33 { pt3dadd( -3.23752, -9.57841, 14.5264, 1.39 ) }
    dend_33 { pt3dadd( -4.43206, -13.2132, 13.9155, 1.39 ) }
    dend_33 { pt3dadd( -5.25691, -15.7231, 13.4937, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 80/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 2.8933, -8.62258, 6.44987, 4.16 ) }
    dend_8 { pt3dadd( 3.32911, -9.08724, 5.42934, 4.16 ) }
    dend_8 { pt3dadd( 4.92359, -10.7873, 1.69553, 3.05 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 83/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 0.0933001, -4.19608, 3.93987, 1.11 ) }
    dend_3 { pt3dadd( 1.50612, -3.86571, 4.47082, 1.11 ) }
    dend_3 { pt3dadd( 2.73031, -3.06915, 5.84743, 1.11 ) }
    dend_3 { pt3dadd( 4.66749, -1.80866, 8.0258, 1.11 ) }
    dend_3 { pt3dadd( 6.24397, -0.782855, 9.79858, 0.83 ) }
    dend_3 { pt3dadd( 8.75619, 0.851804, 12.6235, 0.83 ) }
    dend_3 { pt3dadd( 11.1221, 2.39127, 15.284, 1.11 ) }
    dend_3 { pt3dadd( 13.1598, 4.25031, 18.8152, 1.11 ) }
    dend_3 { pt3dadd( 19.4345, 9.10538, 26.1495, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.8933, 4.74467, 1.41987, 1.39 ) }
    dend_0 { pt3dadd( 4.18041, 7.21184, 1.41987, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 94/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.65053, -8.97609, 2.67222, 0.813942 ) }
    axon_0 { pt3dadd( 5.90337, -23.3606, 2.67222, 0.813942 ) }
    axon_0 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.813942 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 97/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -15.4034, 86.1826, 45.8142, 0.55 ) }
    dend_57 { pt3dadd( -17.8086, 95.5523, 49.6926, 0.55 ) }
    dend_57 { pt3dadd( -19.3711, 105.662, 51.4889, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 0/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -15.4034, 86.1826, 45.8142, 0.55 ) }
    dend_56 { pt3dadd( -15.6467, 94.7887, 50.1236, 0.55 ) }
    dend_56 { pt3dadd( -14.8425, 102.416, 56.0167, 0.55 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 3/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -15.4204, 6.625, -14.9589, 0.83 ) }
    dend_52 { pt3dadd( -17.9003, 9.29684, -16.2567, 0.83 ) }
    dend_52 { pt3dadd( -21.3856, 13.0518, -18.0807, 1.11 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -15.4204, 6.625, -14.9589, 1.11 ) }
    dend_49 { pt3dadd( -22.6962, 8.8559, -16.632, 1.11 ) }
    dend_49 { pt3dadd( -28.0378, 10.4937, -17.8604, 1.11 ) }
    dend_49 { pt3dadd( -30.8918, 11.3688, -18.5167, 1.11 ) }
    dend_49 { pt3dadd( -37.831, 13.4964, -20.1124, 0.83 ) }
    dend_49 { pt3dadd( -42.0574, 14.7923, -21.0843, 0.83 ) }
    dend_49 { pt3dadd( -46.044, 16.0147, -22.0011, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -73.7878, -4.44795, -44.3687, 0.28 ) }
    dend_47 { pt3dadd( -73.6174, -6.09112, -47.4479, 0.28 ) }
    dend_47 { pt3dadd( -73.5803, -6.44821, -48.1171, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 16/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -73.7878, -4.44795, -44.3687, 0.28 ) }
    dend_46 { pt3dadd( -76.048, -7.17369, -49.0399, 0.28 ) }
    dend_46 { pt3dadd( -77.306, -8.60027, -51.3687, 1.11 ) }
    dend_46 { pt3dadd( -78.6195, -9.95778, -53.504, 1.11 ) }
    dend_46 { pt3dadd( -79.6215, -10.9056, -54.9695, 0.28 ) }
    dend_46 { pt3dadd( -80.4216, -11.4713, -55.9897, 1.39 ) }
    dend_46 { pt3dadd( -84.1417, -13.6796, -60.6113, 0.28 ) }
    dend_46 { pt3dadd( -85.9713, -14.5147, -62.5639, 1.11 ) }
    dend_46 { pt3dadd( -87.2317, -14.9753, -63.7642, 0.55 ) }
    dend_46 { pt3dadd( -89.0045, -15.5342, -65.3969, 0.28 ) }
    dend_46 { pt3dadd( -97.2091, -17.7316, -72.8581, 0.28 ) }
    dend_46 { pt3dadd( -100.11, -18.3942, -75.4038, 0.83 ) }
    dend_46 { pt3dadd( -102.968, -18.8814, -77.8053, 0.28 ) }
    dend_46 { pt3dadd( -104.509, -19.0876, -79.1134, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -7.03817, -5.68219, 13.9624, 0.83 ) }
    dend_44 { pt3dadd( -8.05075, -7.71302, 16.6056, 0.83 ) }
    dend_44 { pt3dadd( -8.68107, -8.78897, 17.8137, 0.55 ) }
    dend_44 { pt3dadd( -9.68104, -10.1355, 19.6172, 0.55 ) }
    dend_44 { pt3dadd( -10.7551, -11.2467, 21.5361, 0.55 ) }
    dend_44 { pt3dadd( -12.3288, -12.4741, 24.2821, 0.55 ) }
    dend_44 { pt3dadd( -13.4375, -13.339, 26.2169, 0.55 ) }
    dend_44 { pt3dadd( -14.7015, -13.9764, 28.0669, 0.55 ) }
    dend_44 { pt3dadd( -16.6177, -14.5249, 31.0421, 0.55 ) }
    dend_44 { pt3dadd( -17.6614, -14.4226, 32.4709, 0.55 ) }
    dend_44 { pt3dadd( -18.7605, -13.9947, 33.9578, 0.55 ) }
    dend_44 { pt3dadd( -23.7388, -16.8288, 42.0078, 0.55 ) }
    dend_44 { pt3dadd( -30.3917, -20.5683, 48.2361, 0.55 ) }
    dend_44 { pt3dadd( -35.8089, -24.5687, 55.4306, 0.55 ) }
    dend_44 { pt3dadd( -42.6507, -26.2166, 62.3772, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 45/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -7.03817, -5.68219, 13.9624, 0.83 ) }
    dend_41 { pt3dadd( -8.1097, -6.9462, 12.4668, 0.83 ) }
    dend_41 { pt3dadd( -9.50921, -8.59711, 10.5134, 0.83 ) }
    dend_41 { pt3dadd( -12.2785, -11.8639, 6.64805, 0.83 ) }
    dend_41 { pt3dadd( -12.8352, -12.5206, 5.871, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -5.25691, -15.7231, 13.4937, 0.83 ) }
    dend_37 { pt3dadd( -7.8666, -19.5615, 13.535, 0.83 ) }
    dend_37 { pt3dadd( -9.52678, -21.5293, 13.5675, 0.83 ) }
    dend_37 { pt3dadd( -12.3911, -24.7826, 13.5886, 0.83 ) }
    dend_37 { pt3dadd( -15.8143, -28.6706, 13.6137, 0.83 ) }
    dend_37 { pt3dadd( -17.0193, -30.0393, 13.6225, 0.83 ) }
    dend_37 { pt3dadd( -20.2027, -33.6549, 13.6459, 1.11 ) }
    dend_37 { pt3dadd( -24.7613, -38.4162, 13.6739, 0.83 ) }
    dend_37 { pt3dadd( -26.6426, -40.2067, 13.6833, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -5.25691, -15.7231, 13.4937, 0.83 ) }
    dend_34 { pt3dadd( -5.0345, -17.3001, 14.2385, 0.83 ) }
    dend_34 { pt3dadd( -4.92695, -18.417, 14.6779, 0.83 ) }
    dend_34 { pt3dadd( -4.81113, -19.244, 14.9438, 0.83 ) }
    dend_34 { pt3dadd( -4.45334, -21.6599, 15.6257, 0.83 ) }
    dend_34 { pt3dadd( -4.24221, -22.8196, 15.9231, 0.83 ) }
    dend_34 { pt3dadd( -3.94458, -24.1449, 16.239, 0.83 ) }
    dend_34 { pt3dadd( -3.40137, -26.422, 16.7267, 0.83 ) }
    dend_34 { pt3dadd( -2.8656, -28.6124, 17.1673, 0.83 ) }
    dend_34 { pt3dadd( -2.74479, -29.4406, 17.3309, 0.83 ) }
    dend_34 { pt3dadd( -2.63454, -30.868, 17.6282, 0.83 ) }
    dend_34 { pt3dadd( -2.60384, -31.9139, 17.8762, 0.83 ) }
    dend_34 { pt3dadd( -2.61948, -33.1119, 18.177, 0.83 ) }
    dend_34 { pt3dadd( -2.7371, -35.877, 18.8984, 0.83 ) }
    dend_34 { pt3dadd( -3.06926, -40.0898, 19.9629, 0.55 ) }
    dend_34 { pt3dadd( -3.17017, -41.8968, 20.3802, 0.55 ) }
    dend_34 { pt3dadd( -3.24901, -43.4906, 20.7008, 0.55 ) }
    dend_34 { pt3dadd( -3.29911, -45.3013, 20.9797, 0.55 ) }
    dend_34 { pt3dadd( -3.248, -47.2284, 21.1702, 0.55 ) }
    dend_34 { pt3dadd( -3.06199, -48.7543, 21.1971, 0.55 ) }
    dend_34 { pt3dadd( -2.57753, -50.8808, 21.1521, 0.55 ) }
    dend_34 { pt3dadd( -2.11734, -52.8641, 21.044, 0.55 ) }
    dend_34 { pt3dadd( -1.82352, -54.0826, 20.9818, 0.28 ) }
    dend_34 { pt3dadd( -1.63544, -54.8227, 20.9408, 0.83 ) }
    dend_34 { pt3dadd( -1.4293, -55.5451, 20.8995, 0.55 ) }
    dend_34 { pt3dadd( -0.762954, -57.6187, 20.8005, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 4.92359, -10.7873, 1.69553, 2.49 ) }
    dend_14 { pt3dadd( 5.96913, -12.8521, 0.842419, 2.49 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 87/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.92359, -10.7873, 1.69553, 1.39 ) }
    dend_9 { pt3dadd( 8.27604, -9.90972, -0.357515, 1.39 ) }
    dend_9 { pt3dadd( 9.91469, -9.48078, -1.36103, 1.11 ) }
    dend_9 { pt3dadd( 11.7698, -8.99518, -2.49711, 1.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 91/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 19.4345, 9.10538, 26.1495, 0.55 ) }
    dend_7 { pt3dadd( 23.6068, 12.7129, 31.9036, 0.55 ) }
    dend_7 { pt3dadd( 27.9377, 15.644, 37.9379, 0.55 ) }
    dend_7 { pt3dadd( 33.1787, 19.5252, 42.5095, 0.55 ) }
    dend_7 { pt3dadd( 38.2025, 22.5341, 47.9361, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 96/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 19.4345, 9.10538, 26.1495, 0.55 ) }
    dend_4 { pt3dadd( 27.6689, 12.0757, 31.9048, 0.55 ) }
    dend_4 { pt3dadd( 36.7021, 15.1574, 36.2233, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 99/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.18041, 7.21184, 1.41987, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_2 { pt3dadd( 5.36838, 9.49942, 2.14768, 1.11 ) }
    dend_2 { pt3dadd( 6.37499, 11.4855, 2.46166, 1.11 ) }
    dend_2 { pt3dadd( 7.8341, 14.5018, 2.34582, 1.11 ) }
    dend_2 { pt3dadd( 8.81563, 16.6309, 2.13555, 1.11 ) }
    dend_2 { pt3dadd( 9.78625, 18.7732, 1.8004, 0.83 ) }
    dend_2 { pt3dadd( 11.1297, 21.5212, 1.17259, 0.83 ) }
    dend_2 { pt3dadd( 13.346, 25.6426, -0.395963, 0.83 ) }
    dend_2 { pt3dadd( 15.2127, 28.9255, -2.24988, 0.83 ) }
    dend_2 { pt3dadd( 15.9266, 30.1372, -3.11713, 0.83 ) }
    dend_2 { pt3dadd( 17.1504, 32.2107, -4.8738, 0.55 ) }
    dend_2 { pt3dadd( 18.4425, 34.36, -6.92922, 0.83 ) }
    dend_2 { pt3dadd( 19.876, 36.7264, -9.3225, 0.55 ) }
    dend_2 { pt3dadd( 20.9247, 38.5206, -11.2117, 0.55 ) }
    dend_2 { pt3dadd( 21.4744, 39.5205, -12.2996, 0.55 ) }
    dend_2 { pt3dadd( 22.5266, 41.5234, -14.61, 0.28 ) }
    dend_2 { pt3dadd( 22.7528, 42.0351, -15.2001, 0.83 ) }
    dend_2 { pt3dadd( 23.0088, 42.861, -16.0769, 0.83 ) }
    dend_2 { pt3dadd( 23.9957, 46.9168, -20.2597, 0.55 ) }
    dend_2 { pt3dadd( 24.1883, 47.8338, -21.3284, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.18041, 7.21184, 1.41987, 0.55 ) }
    dend_1 { pt3dadd( 7.10457, 9.32141, -0.727005, 0.55 ) }
    dend_1 { pt3dadd( 8.16928, 10.0801, -1.75775, 0.55 ) }
    dend_1 { pt3dadd( 10.1013, 11.4581, -3.82534, 0.83 ) }
    dend_1 { pt3dadd( 11.327, 12.4204, -5.40637, 0.83 ) }
    dend_1 { pt3dadd( 14.2674, 15.0587, -9.56827, 0.83 ) }
    dend_1 { pt3dadd( 14.8628, 15.6388, -10.4711, 0.83 ) }
    dend_1 { pt3dadd( 16.8989, 17.7995, -14.1076, 0.83 ) }
    dend_1 { pt3dadd( 19.4377, 20.7376, -19.1791, 0.83 ) }
    dend_1 { pt3dadd( 21.5135, 23.6178, -24.0057, 0.83 ) }
    dend_1 { pt3dadd( 22.9522, 25.9471, -27.6739, 0.83 ) }
    dend_1 { pt3dadd( 23.5095, 26.984, -29.1698, 0.83 ) }
    dend_1 { pt3dadd( 24.4665, 29.0093, -31.7628, 0.83 ) }
    dend_1 { pt3dadd( 24.6906, 29.5974, -32.3738, 0.83 ) }
    dend_1 { pt3dadd( 25.0654, 30.7689, -33.4, 0.28 ) }
    dend_1 { pt3dadd( 25.5104, 32.07, -34.3386, 0.83 ) }
    dend_1 { pt3dadd( 26.7283, 35.3575, -36.4644, 0.83 ) }
    dend_1 { pt3dadd( 27.8951, 37.6543, -37.7159, 0.83 ) }
    dend_1 { pt3dadd( 29.8283, 40.6943, -39.356, 0.55 ) }
    dend_1 { pt3dadd( 30.4137, 41.4868, -39.8143, 0.83 ) }
    dend_1 { pt3dadd( 32.0662, 43.5273, -41.2372, 0.55 ) }
    dend_1 { pt3dadd( 32.7847, 44.3706, -41.8893, 0.83 ) }
    dend_1 { pt3dadd( 36.0692, 48.2007, -45.2251, 0.28 ) }
    dend_1 { pt3dadd( 37.7552, 50.254, -47.2148, 0.83 ) }
    dend_1 { pt3dadd( 38.1093, 50.7598, -47.8401, 0.83 ) }
    dend_1 { pt3dadd( 40.1947, 53.9978, -52.4981, 0.28 ) }
    dend_1 { pt3dadd( 40.4442, 54.4356, -53.2149, 0.55 ) }
    dend_1 { pt3dadd( 41.2024, 56.0693, -56.0741, 0.28 ) }
    dend_1 { pt3dadd( 41.4127, 56.7208, -57.2988, 1.11 ) }
    dend_1 { pt3dadd( 42.6376, 60.9064, -64.7945, 0.55 ) }
    dend_1 { pt3dadd( 43.0001, 62.116, -66.8862, 0.28 ) }
    dend_1 { pt3dadd( 43.2577, 62.9248, -68.2982, 0.55 ) }
    dend_1 { pt3dadd( 43.5046, 63.6749, -69.6282, 0.28 ) }
    dend_1 { pt3dadd( 43.9275, 64.8509, -71.6429, 0.55 ) }
    dend_1 { pt3dadd( 44.4697, 66.3479, -74.0777, 0.28 ) }
    dend_1 { pt3dadd( 44.9669, 67.7549, -75.3066, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 10.1562, -37.7451, 2.67222, 0.28 ) }
    axon_1 { pt3dadd( 14.409, -52.1295, 2.67222, 0.28 ) }
    axon_1 { pt3dadd( 18.6619, -66.514, 2.67222, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 58/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -21.3856, 13.0518, -18.0807, 0.55 ) }
    dend_54 { pt3dadd( -24.88, 15.4417, -21.4546, 0.55 ) }
    dend_54 { pt3dadd( -27.4423, 16.8245, -23.1788, 1.11 ) }
    dend_54 { pt3dadd( -30.763, 18.6147, -25.2692, 0.83 ) }
    dend_54 { pt3dadd( -32.8561, 19.6888, -26.5239, 0.83 ) }
    dend_54 { pt3dadd( -35.6196, 21.1209, -28.206, 0.83 ) }
    dend_54 { pt3dadd( -39.1595, 23.0159, -30.282, 0.83 ) }
    dend_54 { pt3dadd( -41.4735, 24.1478, -31.5123, 0.55 ) }
    dend_54 { pt3dadd( -44.2374, 25.5409, -32.7404, 0.28 ) }
    dend_54 { pt3dadd( -45.305, 26.1117, -33.1446, 0.83 ) }
    dend_54 { pt3dadd( -47.4538, 27.4758, -34.0722, 0.83 ) }
    dend_54 { pt3dadd( -49.1166, 28.7357, -34.9289, 0.55 ) }
    dend_54 { pt3dadd( -50.9351, 30.4212, -36.2012, 0.83 ) }
    dend_54 { pt3dadd( -52.7534, 32.1816, -37.5216, 0.28 ) }
    dend_54 { pt3dadd( -53.8582, 33.3146, -38.3403, 0.28 ) }
    dend_54 { pt3dadd( -54.852, 34.4251, -39.1499, 0.55 ) }
    dend_54 { pt3dadd( -55.4369, 35.1162, -39.6667, 0.83 ) }
    dend_54 { pt3dadd( -57.5228, 37.7687, -41.8337, 0.28 ) }
    dend_54 { pt3dadd( -58.2487, 38.7268, -42.6148, 0.83 ) }
    dend_54 { pt3dadd( -59.9363, 41.0286, -44.4471, 0.55 ) }
    dend_54 { pt3dadd( -60.503, 41.8136, -45.0666, 0.28 ) }
    dend_54 { pt3dadd( -61.6332, 43.4489, -46.2625, 1.11 ) }
    dend_54 { pt3dadd( -63.0135, 45.3588, -47.5964, 0.28 ) }
    dend_54 { pt3dadd( -64.1651, 46.7377, -48.5588, 0.55 ) }
    dend_54 { pt3dadd( -64.9291, 47.5545, -49.2043, 0.28 ) }
    dend_54 { pt3dadd( -65.6211, 48.2208, -49.735, 0.83 ) }
    dend_54 { pt3dadd( -66.64, 49.2261, -50.6834, 0.28 ) }
    dend_54 { pt3dadd( -67.6794, 50.2075, -51.7312, 0.55 ) }
    dend_54 { pt3dadd( -69.0722, 51.4342, -53.1246, 0.83 ) }
    dend_54 { pt3dadd( -72.3797, 54.5103, -56.5671, 0.28 ) }
    dend_54 { pt3dadd( -73.1707, 55.2596, -57.3822, 0.83 ) }
    dend_54 { pt3dadd( -76.4989, 58.4845, -60.585, 0.28 ) }
    dend_54 { pt3dadd( -76.9506, 58.9415, -60.9929, 0.55 ) }
    dend_54 { pt3dadd( -77.897, 60.0132, -61.7372, 1.11 ) }
    dend_54 { pt3dadd( -80.2685, 62.9728, -63.2937, 0.28 ) }
    dend_54 { pt3dadd( -80.725, 63.5871, -63.514, 0.55 ) }
    dend_54 { pt3dadd( -81.8595, 65.1296, -63.9282, 0.28 ) }
    dend_54 { pt3dadd( -82.1797, 65.586, -64.0172, 0.55 ) }
    dend_54 { pt3dadd( -84.1262, 68.4839, -64.7047, 0.28 ) }
    dend_54 { pt3dadd( -85.3264, 70.3068, -65.3622, 0.83 ) }
    dend_54 { pt3dadd( -86.1304, 71.4358, -65.8715, 0.28 ) }
    dend_54 { pt3dadd( -86.4337, 71.8489, -66.0976, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_54 { pt3dadd( -89.2526, 75.5172, -68.2912, 0.28 ) }
    dend_54 { pt3dadd( -89.6444, 76.0198, -68.6117, 0.83 ) }
    dend_54 { pt3dadd( -91.7798, 78.6171, -70.4646, 0.28 ) }
    dend_54 { pt3dadd( -92.4226, 79.3539, -70.998, 0.55 ) }
    dend_54 { pt3dadd( -94.6594, 81.8672, -72.9591, 0.28 ) }
    dend_54 { pt3dadd( -95.8208, 83.0983, -73.9655, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 6/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -21.3856, 13.0518, -18.0807, 0.83 ) }
    dend_53 { pt3dadd( -24.7428, 14.6644, -16.6221, 0.83 ) }
    dend_53 { pt3dadd( -26.9088, 15.8214, -15.7766, 0.55 ) }
    dend_53 { pt3dadd( -33.4348, 19.3722, -13.7237, 0.55 ) }
    dend_53 { pt3dadd( -40.6629, 23.4556, -11.9511, 0.55 ) }
    dend_53 { pt3dadd( -44.6924, 25.6894, -11.2595, 0.55 ) }
    dend_53 { pt3dadd( -47.4204, 27.1701, -10.9873, 0.55 ) }
    dend_53 { pt3dadd( -52.5139, 29.8212, -10.9193, 0.55 ) }
    dend_53 { pt3dadd( -55.4922, 31.2435, -11.2955, 0.55 ) }
    dend_53 { pt3dadd( -58.1924, 32.3938, -11.9475, 0.55 ) }
    dend_53 { pt3dadd( -61.0119, 33.4276, -13.1229, 0.55 ) }
    dend_53 { pt3dadd( -65.4794, 34.7404, -15.247, 0.55 ) }
    dend_53 { pt3dadd( -70.0872, 35.8087, -17.5898, 0.55 ) }
    dend_53 { pt3dadd( -71.6921, 36.058, -18.4116, 0.28 ) }
    dend_53 { pt3dadd( -74.2626, 36.4171, -19.6487, 1.39 ) }
    dend_53 { pt3dadd( -79.9938, 37.0384, -22.1792, 0.28 ) }
    dend_53 { pt3dadd( -81.4629, 37.2499, -22.7927, 0.83 ) }
    dend_53 { pt3dadd( -83.3053, 37.5311, -23.5504, 0.28 ) }
    dend_53 { pt3dadd( -85.3741, 38.0094, -24.3036, 0.55 ) }
    dend_53 { pt3dadd( -86.0147, 38.1958, -24.5099, 0.28 ) }
    dend_53 { pt3dadd( -88.8943, 39.2097, -25.3616, 0.83 ) }
    dend_53 { pt3dadd( -93.7065, 41.0438, -26.3655, 0.28 ) }
    dend_53 { pt3dadd( -95.1237, 41.6159, -26.6899, 0.55 ) }
    dend_53 { pt3dadd( -97.5019, 42.6189, -27.2572, 0.28 ) }
    dend_53 { pt3dadd( -99.2267, 43.2888, -27.6703, 0.55 ) }
    dend_53 { pt3dadd( -102.456, 44.4076, -28.4086, 0.28 ) }
    dend_53 { pt3dadd( -103.365, 44.6075, -28.5597, 0.83 ) }
    dend_53 { pt3dadd( -107.857, 45.0337, -29.0323, 0.28 ) }
    dend_53 { pt3dadd( -108.72, 45.0833, -29.1197, 0.55 ) }
    dend_53 { pt3dadd( -111.388, 45.0801, -29.364, 0.28 ) }
    dend_53 { pt3dadd( -113.476, 44.983, -29.5106, 0.55 ) }
    dend_53 { pt3dadd( -121.674, 44.0841, -29.7433, 0.28 ) }
    dend_53 { pt3dadd( -122.945, 43.8852, -29.7471, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 39/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -46.044, 16.0147, -22.0011, 0.55 ) }
    dend_51 { pt3dadd( -48.9071, 16.9576, -25.4187, 0.55 ) }
    dend_51 { pt3dadd( -51.5792, 17.8378, -28.3301, 0.55 ) }
    dend_51 { pt3dadd( -53.8742, 18.572, -30.4934, 0.83 ) }
    dend_51 { pt3dadd( -55.6075, 19.188, -31.7904, 0.83 ) }
    dend_51 { pt3dadd( -57.9177, 20.0129, -33.3145, 0.28 ) }
    dend_51 { pt3dadd( -58.7254, 20.2808, -33.8107, 0.28 ) }
    dend_51 { pt3dadd( -61.1152, 21.0026, -34.9914, 0.83 ) }
    dend_51 { pt3dadd( -63.3508, 21.5914, -35.9438, 0.55 ) }
    dend_51 { pt3dadd( -68.0172, 22.5656, -37.7604, 0.55 ) }
    dend_51 { pt3dadd( -71.2001, 23.0726, -39.0295, 0.83 ) }
    dend_51 { pt3dadd( -73.7388, 23.38, -40.2616, 0.28 ) }
    dend_51 { pt3dadd( -74.3326, 23.4313, -40.6035, 0.55 ) }
    dend_51 { pt3dadd( -77.6314, 23.5914, -42.5265, 0.28 ) }
    dend_51 { pt3dadd( -79.091, 23.6064, -43.4499, 0.55 ) }
    dend_51 { pt3dadd( -81.5373, 23.6697, -45.0512, 0.55 ) }
    dend_51 { pt3dadd( -84.8001, 23.9432, -47.0266, 0.28 ) }
    dend_51 { pt3dadd( -85.7629, 24.0774, -47.5697, 0.28 ) }
    dend_51 { pt3dadd( -90.1218, 24.878, -49.8593, 0.55 ) }
    dend_51 { pt3dadd( -94.2939, 25.8145, -51.6995, 0.83 ) }
    dend_51 { pt3dadd( -99.7269, 27.1421, -53.6612, 0.28 ) }
    dend_51 { pt3dadd( -100.91, 27.4412, -54.0019, 0.55 ) }
    dend_51 { pt3dadd( -103.719, 28.1736, -54.6407, 0.55 ) }
    dend_51 { pt3dadd( -105.015, 28.5293, -54.9235, 0.55 ) }
    dend_51 { pt3dadd( -108.798, 29.5707, -55.7644, 0.83 ) }
    dend_51 { pt3dadd( -111.81, 30.4302, -56.1522, 0.28 ) }
    dend_51 { pt3dadd( -112.64, 30.6612, -56.2089, 0.55 ) }
    dend_51 { pt3dadd( -115.605, 31.5317, -56.398, 0.28 ) }
    dend_51 { pt3dadd( -117.087, 31.9497, -56.5578, 0.55 ) }
    dend_51 { pt3dadd( -118.748, 32.3751, -56.8128, 0.28 ) }
    dend_51 { pt3dadd( -119.812, 32.6513, -57.029, 0.83 ) }
    dend_51 { pt3dadd( -121.612, 33.1791, -57.4163, 0.28 ) }
    dend_51 { pt3dadd( -123.339, 33.7635, -57.8038, 0.83 ) }
    dend_51 { pt3dadd( -127.804, 35.7636, -58.8526, 0.28 ) }
    dend_51 { pt3dadd( -129.376, 36.6703, -59.3199, 0.28 ) }
    dend_51 { pt3dadd( -130.408, 37.3688, -59.7199, 0.28 ) }
    dend_51 { pt3dadd( -132.279, 38.7873, -60.7267, 0.83 ) }
    dend_51 { pt3dadd( -133.95, 40.1938, -61.8221, 0.28 ) }
    dend_51 { pt3dadd( -136.43, 42.4925, -63.7564, 0.55 ) }
    dend_51 { pt3dadd( -139.861, 45.9719, -66.7751, 0.28 ) }
    dend_51 { pt3dadd( -141.422, 47.6236, -68.203, 0.83 ) }
    dend_51 { pt3dadd( -143.904, 50.2374, -70.4899, 0.28 ) }
    dend_51 { pt3dadd( -144.719, 51.0738, -71.1969, 0.55 ) }
    dend_51 { pt3dadd( -146.517, 52.9115, -72.6128, 0.28 ) }
    dend_51 { pt3dadd( -146.938, 53.3298, -72.9218, 0.83 ) }
    dend_51 { pt3dadd( -150.533, 56.8702, -74.9196, 0.28 ) }
    dend_51 { pt3dadd( -151.287, 57.6213, -75.2123, 0.55 ) }
    dend_51 { pt3dadd( -153.835, 60.2623, -75.8003, 0.55 ) }
    dend_51 { pt3dadd( -154.303, 60.7561, -75.8834, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 88/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -46.044, 16.0147, -22.0011, 0.55 ) }
    dend_50 { pt3dadd( -48.8221, 14.0665, -22.2789, 0.55 ) }
    dend_50 { pt3dadd( -54.2132, 10.7333, -23.5727, 0.83 ) }
    dend_50 { pt3dadd( -59.4093, 7.77498, -25.1846, 0.83 ) }
    dend_50 { pt3dadd( -62.3049, 6.26955, -26.322, 0.55 ) }
    dend_50 { pt3dadd( -63.8551, 5.50803, -27.0048, 0.55 ) }
    dend_50 { pt3dadd( -68.4424, 3.34493, -29.3591, 0.55 ) }
    dend_50 { pt3dadd( -74.3102, 1.05796, -32.9182, 0.28 ) }
    dend_50 { pt3dadd( -75.2907, 0.754595, -33.7381, 0.55 ) }
    dend_50 { pt3dadd( -77.7412, 0.123284, -36.2562, 0.28 ) }
    dend_50 { pt3dadd( -78.6997, -0.11807, -37.2817, 0.83 ) }
    dend_50 { pt3dadd( -81.2091, -0.873321, -40.0676, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_50 { pt3dadd( -82.2603, -1.34822, -41.1792, 0.55 ) }
    dend_50 { pt3dadd( -85.7628, -3.42503, -43.893, 0.28 ) }
    dend_50 { pt3dadd( -87.1488, -4.42061, -44.7995, 0.83 ) }
    dend_50 { pt3dadd( -89.4005, -6.37214, -45.9129, 0.28 ) }
    dend_50 { pt3dadd( -90.217, -7.15375, -46.1701, 0.83 ) }
    dend_50 { pt3dadd( -93.9368, -11.0543, -46.5545, 0.28 ) }
    dend_50 { pt3dadd( -94.8039, -12.0913, -46.6307, 0.83 ) }
    dend_50 { pt3dadd( -95.6469, -13.205, -46.636, 0.28 ) }
    dend_50 { pt3dadd( -96.009, -13.7253, -46.6365, 0.83 ) }
    dend_50 { pt3dadd( -97.7539, -16.3498, -46.6738, 0.28 ) }
    dend_50 { pt3dadd( -98.6478, -17.6644, -46.8438, 0.55 ) }
    dend_50 { pt3dadd( -101.046, -20.7596, -48.499, 0.28 ) }
    dend_50 { pt3dadd( -101.23, -20.9863, -48.6468, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 13/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -12.8352, -12.5206, 5.871, 0.83 ) }
    dend_43 { pt3dadd( -14.0698, -13.2436, 6.81512, 0.83 ) }
    dend_43 { pt3dadd( -17.5615, -15.5311, 9.00745, 0.55 ) }
    dend_43 { pt3dadd( -22.302, -18.1308, 11.8961, 0.55 ) }
    dend_43 { pt3dadd( -24.8429, -19.3775, 13.4539, 0.55 ) }
    dend_43 { pt3dadd( -26.1699, -19.9577, 14.328, 0.55 ) }
    dend_43 { pt3dadd( -28.1035, -20.6824, 15.6615, 0.83 ) }
    dend_43 { pt3dadd( -34.8028, -22.8279, 20.3962, 0.55 ) }
    dend_43 { pt3dadd( -40.662, -24.5117, 24.4365, 0.55 ) }
    dend_43 { pt3dadd( -45.6487, -25.7421, 27.5428, 0.55 ) }
    dend_43 { pt3dadd( -48.8727, -26.3954, 29.5629, 0.55 ) }
    dend_43 { pt3dadd( -53.5273, -27.1625, 32.4152, 0.55 ) }
    dend_43 { pt3dadd( -56.391, -27.5154, 34.065, 0.55 ) }
    dend_43 { pt3dadd( -60.1634, -28.0758, 35.9759, 0.55 ) }
    dend_43 { pt3dadd( -63.6213, -28.9848, 37.3763, 0.55 ) }
    dend_43 { pt3dadd( -65.6748, -29.6812, 37.9466, 0.28 ) }
    dend_43 { pt3dadd( -66.9164, -30.1911, 38.2081, 0.55 ) }
    dend_43 { pt3dadd( -69.6147, -31.3055, 38.6298, 0.55 ) }
    dend_43 { pt3dadd( -76.354, -34.1035, 39.768, 0.55 ) }
    dend_43 { pt3dadd( -79.9955, -35.6247, 40.5541, 0.55 ) }
    dend_43 { pt3dadd( -83.811, -37.3676, 41.3113, 0.28 ) }
    dend_43 { pt3dadd( -85.6537, -38.2467, 41.617, 0.55 ) }
    dend_43 { pt3dadd( -89.53, -39.9969, 42.2068, 0.55 ) }
    dend_43 { pt3dadd( -99.9395, -45.5402, 48.9656, 0.55 ) }
    dend_43 { pt3dadd( -109.358, -49.7818, 57.839, 0.55 ) }
    dend_43 { pt3dadd( -117.47, -54.7015, 67.5979, 0.55 ) }
    dend_43 { pt3dadd( -125.695, -60.5035, 76.7367, 0.55 ) }
    dend_43 { pt3dadd( -136.217, -64.7095, 84.2847, 0.55 ) }
    dend_43 { pt3dadd( -148.527, -67.0531, 89.6455, 0.55 ) }
    dend_43 { pt3dadd( -161.663, -68.7325, 92.8824, 0.55 ) }
    dend_43 { pt3dadd( -174.547, -69.529, 97.2779, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 44/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -12.8352, -12.5206, 5.871, 0.83 ) }
    dend_42 { pt3dadd( -14.9691, -14.6951, 3.63703, 0.83 ) }
    dend_42 { pt3dadd( -16.9331, -16.2825, 1.78867, 0.83 ) }
    dend_42 { pt3dadd( -19.3222, -17.9781, -0.429582, 0.83 ) }
    dend_42 { pt3dadd( -22.7441, -20.0986, -3.41418, 0.83 ) }
    dend_42 { pt3dadd( -25.3646, -21.7555, -5.91736, 0.83 ) }
    dend_42 { pt3dadd( -26.936, -22.7944, -7.48855, 0.83 ) }
    dend_42 { pt3dadd( -29.6294, -24.653, -10.3972, 0.83 ) }
    dend_42 { pt3dadd( -32.0436, -26.2338, -12.9598, 0.83 ) }
    dend_42 { pt3dadd( -36.1362, -28.8301, -17.0123, 0.83 ) }
    dend_42 { pt3dadd( -41.0503, -31.8093, -21.3559, 0.28 ) }
    dend_42 { pt3dadd( -42.2219, -32.5635, -22.3056, 0.83 ) }
    dend_42 { pt3dadd( -43.2698, -33.3009, -23.1271, 0.83 ) }
    dend_42 { pt3dadd( -44.4795, -34.2237, -24.0174, 0.55 ) }
    dend_42 { pt3dadd( -45.5881, -35.0005, -24.6377, 0.28 ) }
    dend_42 { pt3dadd( -46.7873, -35.7165, -25.0566, 0.55 ) }
    dend_42 { pt3dadd( -47.5495, -36.055, -25.1846, 0.28 ) }
    dend_42 { pt3dadd( -48.9443, -36.6318, -25.4537, 0.83 ) }
    dend_42 { pt3dadd( -53.1768, -38.3618, -26.4541, 0.28 ) }
    dend_42 { pt3dadd( -54.1373, -38.7266, -26.7882, 0.55 ) }
    dend_42 { pt3dadd( -55.1951, -39.1181, -27.2212, 0.28 ) }
    dend_42 { pt3dadd( -55.7007, -39.3075, -27.4855, 0.55 ) }
    dend_42 { pt3dadd( -56.9878, -39.7872, -28.2605, 0.28 ) }
    dend_42 { pt3dadd( -57.4162, -39.9528, -28.5851, 0.83 ) }
    dend_42 { pt3dadd( -59.5989, -40.8992, -30.6453, 0.55 ) }
    dend_42 { pt3dadd( -60.5526, -41.3347, -31.6628, 0.83 ) }
    dend_42 { pt3dadd( -62.3094, -42.1399, -33.7611, 0.28 ) }
    dend_42 { pt3dadd( -62.6606, -42.2989, -34.2184, 0.55 ) }
    dend_42 { pt3dadd( -64.2209, -42.9806, -36.4596, 0.28 ) }
    dend_42 { pt3dadd( -65.0047, -43.3816, -37.6579, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 74/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -26.6426, -40.2067, 13.6833, 0.55 ) }
    dend_39 { pt3dadd( -30.7365, -42.4509, 12.2345, 0.55 ) }
    dend_39 { pt3dadd( -37.4165, -46.0857, 10.1101, 0.55 ) }
    dend_39 { pt3dadd( -39.4176, -47.1564, 9.52566, 0.55 ) }
    dend_39 { pt3dadd( -44.2817, -49.8397, 8.25719, 0.28 ) }
    dend_39 { pt3dadd( -47.1549, -51.4457, 7.57005, 0.55 ) }
    dend_39 { pt3dadd( -49.3739, -52.7144, 7.05144, 0.28 ) }
    dend_39 { pt3dadd( -51.5699, -53.9711, 6.6311, 0.28 ) }
    dend_39 { pt3dadd( -52.4741, -54.5075, 6.53556, 0.55 ) }
    dend_39 { pt3dadd( -55.7678, -56.469, 6.39111, 0.28 ) }
    dend_39 { pt3dadd( -56.365, -56.8834, 6.42831, 0.83 ) }
    dend_39 { pt3dadd( -58.8609, -58.888, 6.66638, 0.28 ) }
    dend_39 { pt3dadd( -60.2206, -60.069, 6.83152, 0.55 ) }
    dend_39 { pt3dadd( -62.0289, -61.7379, 7.07842, 0.28 ) }
    dend_39 { pt3dadd( -63.7619, -63.4048, 7.3504, 0.55 ) }
    dend_39 { pt3dadd( -66.1396, -65.7451, 7.82509, 0.55 ) }
    dend_39 { pt3dadd( -66.3668, -65.982, 7.87917, 0.83 ) }
    dend_39 { pt3dadd( -67.8493, -67.6423, 8.35314, 0.28 ) }
    dend_39 { pt3dadd( -68.0542, -67.8847, 8.39614, 0.83 ) }
    dend_39 { pt3dadd( -78.1443, -74.0996, 9.24196, 0.83 ) }
    dend_39 { pt3dadd( -89.3593, -78.1566, 9.62292, 0.83 ) }
    dend_39 { pt3dadd( -100.262, -82.8816, 10.5557, 0.83 ) }
    dend_39 { pt3dadd( -110.287, -88.6466, 13.3475, 0.83 ) }
    dend_39 { pt3dadd( -119.507, -94.4164, 18.1782, 0.83 ) }
    dend_39 { pt3dadd( -128.931, -97.6765, 24.7712, 0.83 ) }
    dend_39 { pt3dadd( -137.882, -100.942, 31.9937, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_39 { pt3dadd( -147.834, -102.652, 38.4258, 0.83 ) }
    dend_39 { pt3dadd( -158.373, -105.543, 43.2811, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 2/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -26.6426, -40.2067, 13.6833, 0.83 ) }
    dend_38 { pt3dadd( -26.8581, -42.858, 14.7155, 0.83 ) }
    dend_38 { pt3dadd( -27.326, -46.5878, 16.295, 0.83 ) }
    dend_38 { pt3dadd( -27.46, -48.4873, 17.1149, 0.83 ) }
    dend_38 { pt3dadd( -27.7574, -53.0599, 19.0167, 0.83 ) }
    dend_38 { pt3dadd( -27.7898, -53.6889, 19.2646, 0.83 ) }
    dend_38 { pt3dadd( -27.9297, -56.3843, 20.2164, 0.83 ) }
    dend_38 { pt3dadd( -28.147, -59.2976, 21.1851, 0.83 ) }
    dend_38 { pt3dadd( -28.5445, -63.5666, 22.6366, 0.83 ) }
    dend_38 { pt3dadd( -28.8388, -67.3552, 23.8445, 0.83 ) }
    dend_38 { pt3dadd( -28.9329, -69.0291, 24.2852, 0.83 ) }
    dend_38 { pt3dadd( -29.1455, -73.2833, 25.3372, 0.83 ) }
    dend_38 { pt3dadd( -29.3379, -77.5763, 26.3617, 0.83 ) }
    dend_38 { pt3dadd( -27.9025, -85.6798, 30.7725, 0.83 ) }
    dend_38 { pt3dadd( -26.7878, -93.5145, 35.7502, 0.83 ) }
    dend_38 { pt3dadd( -25.8014, -101.855, 39.8008, 0.83 ) }
    dend_38 { pt3dadd( -22.9755, -110.057, 43.2471, 0.83 ) }
    dend_38 { pt3dadd( -19.1196, -118.039, 46.2052, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -0.762954, -57.6187, 20.8005, 0.28 ) }
    dend_36 { pt3dadd( -2.20442, -60.4101, 20.4957, 0.28 ) }
    dend_36 { pt3dadd( -2.47934, -60.9424, 20.4375, 0.83 ) }
    dend_36 { pt3dadd( -3.94176, -63.7744, 20.1283, 0.28 ) }
    dend_36 { pt3dadd( -8.43535, -74.3418, 19.6981, 0.28 ) }
    dend_36 { pt3dadd( -10.6246, -85.5659, 20.4692, 0.28 ) }
    dend_36 { pt3dadd( -11.448, -96.7292, 22.9573, 0.28 ) }
    dend_36 { pt3dadd( -12.968, -107.173, 27.5271, 0.28 ) }
    dend_36 { pt3dadd( -12.4084, -118.292, 30.2923, 0.28 ) }
    dend_36 { pt3dadd( -10.8095, -129.368, 32.8269, 0.28 ) }
    dend_36 { pt3dadd( -11.5578, -140.783, 33.3912, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 31/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.762954, -57.6187, 20.8005, 0.55 ) }
    dend_35 { pt3dadd( 0.0703077, -60.0672, 20.6586, 0.55 ) }
    dend_35 { pt3dadd( 0.579033, -61.562, 20.5719, 0.55 ) }
    dend_35 { pt3dadd( 1.03865, -62.9126, 20.4937, 0.28 ) }
    dend_35 { pt3dadd( 4.99293, -71.7853, 18.5273, 0.28 ) }
    dend_35 { pt3dadd( 7.64964, -81.2832, 17.9164, 0.28 ) }
    dend_35 { pt3dadd( 9.63936, -90.733, 15.8157, 0.28 ) }
    dend_35 { pt3dadd( 13.0724, -99.8588, 14.105, 0.28 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 5.96913, -12.8521, 0.842419, 1.94 ) }
    dend_16 { pt3dadd( 10.1896, -16.9814, 0.0387528, 1.94 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 41/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.96913, -12.8521, 0.842419, 1.11 ) }
    dend_15 { pt3dadd( 1.80991, -17.9542, -4.64204, 1.11 ) }
    dend_15 { pt3dadd( 1.32993, -18.4576, -5.27101, 1.11 ) }
    dend_15 { pt3dadd( -1.06787, -21.0887, -8.64191, 1.11 ) }
    dend_15 { pt3dadd( -1.9545, -22.1146, -10.0348, 1.11 ) }
    dend_15 { pt3dadd( -3.4495, -23.8298, -12.4415, 1.11 ) }
    dend_15 { pt3dadd( -5.25092, -25.8799, -15.3396, 1.11 ) }
    dend_15 { pt3dadd( -7.49886, -28.2503, -18.7761, 1.11 ) }
    dend_15 { pt3dadd( -8.64717, -29.2828, -20.4704, 0.83 ) }
    dend_15 { pt3dadd( -10.6897, -30.8445, -23.3612, 0.83 ) }
    dend_15 { pt3dadd( -11.5116, -31.4805, -24.4739, 0.55 ) }
    dend_15 { pt3dadd( -11.8843, -31.7586, -24.9392, 0.83 ) }
    dend_15 { pt3dadd( -13.8108, -33.1398, -27.1088, 1.39 ) }
    dend_15 { pt3dadd( -16.4867, -34.8549, -29.7103, 1.11 ) }
    dend_15 { pt3dadd( -18.1654, -35.8906, -31.3137, 0.55 ) }
    dend_15 { pt3dadd( -19.073, -36.461, -32.1666, 0.83 ) }
    dend_15 { pt3dadd( -22.2451, -38.6039, -35.3761, 0.55 ) }
    dend_15 { pt3dadd( -23.4327, -39.4779, -36.6585, 0.28 ) }
    dend_15 { pt3dadd( -23.9094, -39.8715, -37.2506, 0.55 ) }
    dend_15 { pt3dadd( -27.4087, -42.8043, -41.6212, 0.28 ) }
    dend_15 { pt3dadd( -27.8077, -43.1468, -42.1454, 0.55 ) }
    dend_15 { pt3dadd( -28.6701, -43.9291, -43.3684, 0.28 ) }
    dend_15 { pt3dadd( -29.6354, -44.9542, -44.8564, 1.39 ) }
    dend_15 { pt3dadd( -32.9386, -48.3453, -50.1653, 0.28 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 65/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.7698, -8.99518, -2.49711, 1.11 ) }
    dend_13 { pt3dadd( 11.2132, -9.27679, -4.95748, 1.11 ) }
    dend_13 { pt3dadd( 10.804, -9.40534, -6.73928, 0.83 ) }
    dend_13 { pt3dadd( 10.4852, -9.47488, -8.82739, 0.83 ) }
    dend_13 { pt3dadd( 9.75596, -9.65259, -14.7555, 0.83 ) }
    dend_13 { pt3dadd( 9.41312, -9.85231, -19.4702, 0.83 ) }
    dend_13 { pt3dadd( 9.35021, -9.90468, -20.9009, 0.83 ) }
    dend_13 { pt3dadd( 9.30286, -9.99388, -22.7922, 0.83 ) }
    dend_13 { pt3dadd( 9.00595, -10.1775, -32.4051, 0.83 ) }
    dend_13 { pt3dadd( 8.86307, -10.0986, -37.1674, 0.83 ) }
    dend_13 { pt3dadd( 8.67652, -9.84626, -40.8807, 0.83 ) }
    dend_13 { pt3dadd( 8.40867, -9.64453, -43.5734, 0.28 ) }
    dend_13 { pt3dadd( 8.1446, -9.51043, -45.3433, 1.39 ) }
    dend_13 { pt3dadd( 7.2845, -9.10601, -49.6401, 0.55 ) }
    dend_13 { pt3dadd( 5.8111, -8.43624, -55.2961, 0.55 ) }
    dend_13 { pt3dadd( 4.7021, -7.95463, -58.9853, 1.11 ) }
    dend_13 { pt3dadd( 1.66595, -6.80273, -67.8582, 0.55 ) }
    dend_13 { pt3dadd( 0.864385, -6.57051, -70.1546, 0.55 ) }
    dend_13 { pt3dadd( -0.26544, -6.35198, -73.5355, 1.11 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 11.7698, -8.99518, -2.49711, 1.11 ) }
    dend_10 { pt3dadd( 14.0381, -9.46479, -3.68894, 1.11 ) }
    dend_10 { pt3dadd( 18.4028, -9.90067, -5.60742, 1.11 ) }
    dend_10 { pt3dadd( 21.0329, -10.1918, -6.81377, 0.83 ) }
    dend_10 { pt3dadd( 22.5363, -10.4042, -7.61101, 0.83 ) }
    dend_10 { pt3dadd( 24.5355, -10.7051, -9.01914, 1.11 ) }
    dend_10 { pt3dadd( 26.888, -11.0453, -10.9606, 1.11 ) }
    dend_10 { pt3dadd( 29.7177, -11.3589, -13.4751, 1.11 ) }
    dend_10 { pt3dadd( 32.1612, -11.5664, -15.7724, 0.83 ) }
    dend_10 { pt3dadd( 35.1136, -11.8728, -18.8211, 1.39 ) }
    dend_10 { pt3dadd( 39.5026, -12.5343, -23.8595, 0.83 ) }
    dend_10 { pt3dadd( 42.6066, -13.2387, -27.8458, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 36.7021, 15.1574, 36.2233, 0.55 ) }
    dend_6 { pt3dadd( 43.1672, 17.3947, 39.9682, 0.55 ) }
    dend_6 { pt3dadd( 50.2327, 19.1233, 42.799, 0.55 ) }
    dend_6 { pt3dadd( 57.0297, 21.1004, 46.0806, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_6 { pt3dadd( 63.5895, 22.0062, 50.2282, 0.55 ) }
    dend_6 { pt3dadd( 70.2516, 22.1169, 54.3151, 0.55 ) }
    dend_6 { pt3dadd( 76.3663, 23.3709, 59.0116, 0.55 ) }
    dend_6 { pt3dadd( 81.8312, 24.4183, 64.4968, 0.55 ) }
    dend_6 { pt3dadd( 87.1353, 24.7734, 70.2271, 0.55 ) }
    dend_6 { pt3dadd( 91.4062, 24.3593, 76.7594, 0.55 ) }
    dend_6 { pt3dadd( 96.7616, 23.2912, 82.3462, 0.55 ) }
    dend_6 { pt3dadd( 102.427, 23.6014, 87.7221, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 8/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 36.7021, 15.1574, 36.2233, 0.55 ) }
    dend_5 { pt3dadd( 45.2263, 16.3813, 41.53, 0.55 ) }
    dend_5 { pt3dadd( 53.894, 18.3004, 46.3645, 0.55 ) }
    dend_5 { pt3dadd( 63.0921, 19.305, 50.4532, 0.55 ) }
    dend_5 { pt3dadd( 72.3142, 21.1262, 54.1694, 0.55 ) }
    dend_5 { pt3dadd( 81.4311, 24.6018, 56.7051, 0.55 ) }
    dend_5 { pt3dadd( 91.0674, 26.3243, 59.2238, 0.55 ) }
    dend_5 { pt3dadd( 100.99, 27.4559, 60.8128, 0.55 ) }
    dend_5 { pt3dadd( 111.005, 26.6165, 62.0069, 0.55 ) }
    dend_5 { pt3dadd( 120.787, 24.8338, 63.8735, 0.55 ) }
    dend_5 { pt3dadd( 130.218, 22.4196, 66.6031, 0.55 ) }
    dend_5 { pt3dadd( 139.188, 18.4202, 68.9121, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_16 (entry count 20/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 10.1896, -16.9814, 0.0387528, 0.83 ) }
    dend_30 { pt3dadd( 11.562, -16.4198, 0.281682, 0.83 ) }
    dend_30 { pt3dadd( 15.2951, -14.4933, 0.83227, 0.83 ) }
    dend_30 { pt3dadd( 16.4214, -13.7848, 1.10079, 0.83 ) }
    dend_30 { pt3dadd( 17.9719, -12.7128, 1.58109, 0.83 ) }
    dend_30 { pt3dadd( 21.8442, -9.79086, 3.13894, 0.83 ) }
    dend_30 { pt3dadd( 23.7196, -8.36583, 3.97012, 0.83 ) }
    dend_30 { pt3dadd( 25.0944, -7.25987, 4.64819, 0.83 ) }
    dend_30 { pt3dadd( 27.7727, -4.98027, 6.10905, 0.83 ) }
    dend_30 { pt3dadd( 30.1679, -3.06348, 7.35172, 0.55 ) }
    dend_30 { pt3dadd( 33.171, -0.976235, 8.80581, 0.55 ) }
    dend_30 { pt3dadd( 34.7667, -0.100933, 9.50684, 0.55 ) }
    dend_30 { pt3dadd( 36.6213, 0.673419, 10.2081, 0.55 ) }
    dend_30 { pt3dadd( 38.5736, 1.27355, 10.7519, 0.55 ) }
    dend_30 { pt3dadd( 41.1966, 1.92677, 11.2403, 0.55 ) }
    dend_30 { pt3dadd( 43.7071, 2.40363, 11.6283, 0.55 ) }
    dend_30 { pt3dadd( 45.3925, 2.63504, 11.8394, 0.55 ) }
    dend_30 { pt3dadd( 47.9197, 2.90787, 12.1841, 0.55 ) }
    dend_30 { pt3dadd( 50.4552, 3.1981, 12.5836, 0.55 ) }
    dend_30 { pt3dadd( 52.3775, 3.41459, 12.9477, 0.55 ) }
    dend_30 { pt3dadd( 54.5119, 3.74191, 13.468, 0.55 ) }
    dend_30 { pt3dadd( 55.7503, 3.96238, 13.7578, 0.55 ) }
    dend_30 { pt3dadd( 57.294, 4.28968, 14.1086, 0.55 ) }
    dend_30 { pt3dadd( 60.0338, 5.04163, 14.6798, 0.55 ) }
    dend_30 { pt3dadd( 63.9673, 6.37016, 15.467, 0.55 ) }
    dend_30 { pt3dadd( 65.5614, 6.94516, 15.7248, 0.55 ) }
    dend_30 { pt3dadd( 68.4913, 8.13233, 16.1233, 0.55 ) }
    dend_30 { pt3dadd( 70.0859, 8.84707, 16.274, 0.55 ) }
    dend_30 { pt3dadd( 73.0679, 10.2649, 16.4342, 0.55 ) }
    dend_30 { pt3dadd( 74.7974, 11.0881, 16.4736, 0.55 ) }
    dend_30 { pt3dadd( 77.4411, 12.4414, 16.4755, 0.55 ) }
    dend_30 { pt3dadd( 78.5382, 13.0062, 16.4587, 0.55 ) }
    dend_30 { pt3dadd( 80.1444, 13.938, 16.4606, 0.55 ) }
    dend_30 { pt3dadd( 82.1188, 14.9716, 16.4365, 0.55 ) }
    dend_30 { pt3dadd( 83.0502, 15.4548, 16.4195, 0.55 ) }
    dend_30 { pt3dadd( 84.0767, 15.9601, 16.4012, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 10.1896, -16.9814, 0.0387528, 1.39 ) }
    dend_17 { pt3dadd( 12.561, -21.8739, -1.71974, 1.39 ) }
    dend_17 { pt3dadd( 14.4371, -25.7446, -3.11094, 1.39 ) }
    dend_17 { pt3dadd( 15.9163, -28.7965, -4.20789, 1.11 ) }
    dend_17 { pt3dadd( 18.167, -33.44, -5.87686, 1.11 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 42.6066, -13.2387, -27.8458, 0.55 ) }
    dend_12 { pt3dadd( 42.399, -12.176, -34.24, 0.55 ) }
    dend_12 { pt3dadd( 42.311, -11.7793, -36.1271, 0.28 ) }
    dend_12 { pt3dadd( 42.2976, -11.7126, -36.3942, 0.83 ) }
    dend_12 { pt3dadd( 42.1843, -11.1672, -38.3273, 0.28 ) }
    dend_12 { pt3dadd( 42.1381, -10.9861, -38.9994, 0.55 ) }
    dend_12 { pt3dadd( 42.023, -10.5654, -40.5655, 0.28 ) }
    dend_12 { pt3dadd( 41.9608, -10.3811, -41.1581, 0.55 ) }
    dend_12 { pt3dadd( 41.7416, -9.81208, -43.2945, 0.28 ) }
    dend_12 { pt3dadd( 41.701, -9.706, -43.7129, 0.55 ) }
    dend_12 { pt3dadd( 41.2958, -8.70868, -47.8623, 0.28 ) }
    dend_12 { pt3dadd( 41.278, -8.66084, -48.0536, 0.55 ) }
    dend_12 { pt3dadd( 41.0277, -8.02582, -50.4669, 0.28 ) }
    dend_12 { pt3dadd( 40.9786, -7.90394, -50.8829, 0.83 ) }
    dend_12 { pt3dadd( 40.6847, -7.17316, -53.0272, 0.28 ) }
    dend_12 { pt3dadd( 40.6209, -6.99275, -53.4853, 0.55 ) }
    dend_12 { pt3dadd( 39.8507, -4.73268, -58.1542, 0.28 ) }
    dend_12 { pt3dadd( 39.809, -4.60935, -58.3954, 0.55 ) }
    dend_12 { pt3dadd( 39.6484, -4.12705, -59.4417, 0.28 ) }
    dend_12 { pt3dadd( 39.597, -3.96655, -59.799, 0.55 ) }
    dend_12 { pt3dadd( 39.3143, -3.12768, -61.7378, 0.28 ) }
    dend_12 { pt3dadd( 39.2369, -2.8994, -62.3006, 0.55 ) }
    dend_12 { pt3dadd( 39.0494, -2.42705, -63.788, 0.28 ) }
    dend_12 { pt3dadd( 38.5579, -1.08228, -68.8508, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 85/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 42.6066, -13.2387, -27.8458, 0.55 ) }
    dend_11 { pt3dadd( 47.1725, -13.4023, -33.2715, 0.55 ) }
    dend_11 { pt3dadd( 52.394, -13.7024, -38.929, 1.39 ) }
    dend_11 { pt3dadd( 53.112, -13.725, -39.6328, 1.39 ) }
    dend_11 { pt3dadd( 54.7492, -13.7455, -41.1346, 0.55 ) }
    dend_11 { pt3dadd( 59.7643, -13.7014, -45.3664, 0.55 ) }
    dend_11 { pt3dadd( 62.8819, -13.6344, -47.84, 0.55 ) }
    dend_11 { pt3dadd( 67.0075, -13.5023, -50.5211, 0.55 ) }
    dend_11 { pt3dadd( 69.7869, -13.4128, -52.0529, 0.28 ) }
    dend_11 { pt3dadd( 70.6785, -13.385, -52.5221, 0.55 ) }
    dend_11 { pt3dadd( 74.7715, -13.2182, -54.5301, 0.28 ) }
    dend_11 { pt3dadd( 75.6529, -13.1699, -54.9372, 0.55 ) }
    dend_11 { pt3dadd( 80.5738, -12.9096, -57.4358, 0.28 ) }
    dend_11 { pt3dadd( 82.5014, -12.8069, -58.6484, 0.28 ) }
    dend_11 { pt3dadd( 83.6405, -12.7635, -59.5307, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 84.1904, -12.7297, -59.998, 0.55 ) }
    dend_11 { pt3dadd( 87.1885, -12.4597, -62.9097, 0.55 ) }
    dend_11 { pt3dadd( 90.6344, -11.9379, -66.5466, 0.28 ) }
    dend_11 { pt3dadd( 91.8433, -11.6478, -67.9316, 0.55 ) }
    dend_11 { pt3dadd( 93.8731, -11.0904, -70.4278, 0.28 ) }
    dend_11 { pt3dadd( 94.9291, -10.7542, -71.7468, 0.55 ) }
    dend_11 { pt3dadd( 96.2142, -10.2639, -73.3074, 0.55 ) }
    dend_11 { pt3dadd( 97.0382, -9.78213, -74.2293, 0.28 ) }
    dend_11 { pt3dadd( 97.469, -9.46754, -74.7027, 0.55 ) }
    dend_11 { pt3dadd( 98.6649, -8.51574, -76.1231, 0.28 ) }
    dend_11 { pt3dadd( 99.0554, -8.19915, -76.6357, 0.55 ) }
    dend_11 { pt3dadd( 100.477, -7.06811, -78.5124, 0.28 ) }
    dend_11 { pt3dadd( 101.668, -6.12384, -80.0568, 0.55 ) }
    dend_11 { pt3dadd( 103.887, -4.44748, -82.9684, 0.28 ) }
    dend_11 { pt3dadd( 104.066, -4.3114, -83.2082, 0.55 ) }
    dend_11 { pt3dadd( 106.195, -2.69823, -86.0262, 0.28 ) }
    dend_11 { pt3dadd( 107.079, -2.04338, -87.2109, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 84.0767, 15.9601, 16.4012, 0.55 ) }
    dend_32 { pt3dadd( 87.2798, 13.2294, 20.9105, 0.55 ) }
    dend_32 { pt3dadd( 88.8732, 11.8709, 23.1536, 0.55 ) }
    dend_32 { pt3dadd( 91.7306, 9.43497, 27.1762, 0.28 ) }
    dend_32 { pt3dadd( 95.687, 6.22844, 32.5527, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 22/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 84.0767, 15.9601, 16.4012, 0.28 ) }
    dend_31 { pt3dadd( 83.4102, 18.4713, 19.8643, 0.28 ) }
    dend_31 { pt3dadd( 82.8587, 20.5497, 22.7304, 0.55 ) }
    dend_31 { pt3dadd( 83.0744, 25.4202, 31.4049, 0.55 ) }
    dend_31 { pt3dadd( 82.4528, 30.5583, 39.8982, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 27/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 18.167, -33.44, -5.87686, 0.83 ) }
    dend_23 { pt3dadd( 20.6421, -36.429, -7.98061, 0.83 ) }
    dend_23 { pt3dadd( 22.1732, -38.388, -8.69533, 0.83 ) }
    dend_23 { pt3dadd( 23.3008, -40.0612, -8.8788, 0.83 ) }
    dend_23 { pt3dadd( 25.7255, -44.1635, -8.58422, 0.83 ) }
    dend_23 { pt3dadd( 28.7695, -49.6331, -7.74484, 0.83 ) }
    dend_23 { pt3dadd( 32.0258, -55.7159, -6.45779, 0.83 ) }
    dend_23 { pt3dadd( 35.4447, -62.6687, -4.34417, 0.83 ) }
    dend_23 { pt3dadd( 37.7194, -67.4074, -2.58726, 1.11 ) }
    dend_23 { pt3dadd( 39.5942, -71.4891, -0.780142, 0.83 ) }
    dend_23 { pt3dadd( 40.2291, -72.9705, 0.0430874, 0.83 ) }
    dend_23 { pt3dadd( 41.3174, -76.0838, 2.05431, 0.83 ) }
    dend_23 { pt3dadd( 42.2488, -80.1454, 4.663, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 40/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 18.167, -33.44, -5.87686, 0.83 ) }
    dend_18 { pt3dadd( 18.1614, -34.4836, -10.0713, 0.83 ) }
    dend_18 { pt3dadd( 18.1604, -34.6562, -10.765, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 43/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 42.2488, -80.1454, 4.663, 0.83 ) }
    dend_25 { pt3dadd( 42.4374, -81.9471, 5.37767, 0.83 ) }
    dend_25 { pt3dadd( 42.5547, -83.248, 5.7839, 0.83 ) }
    dend_25 { pt3dadd( 42.9967, -88.1539, 7.31577, 0.83 ) }
    dend_25 { pt3dadd( 43.4014, -92.646, 8.71847, 0.83 ) }
    dend_25 { pt3dadd( 43.9422, -98.647, 10.5923, 0.83 ) }
    dend_25 { pt3dadd( 44.4159, -103.904, 12.234, 0.55 ) }
    dend_25 { pt3dadd( 44.9208, -109.403, 13.9827, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 42.2488, -80.1454, 4.663, 0.55 ) }
    dend_24 { pt3dadd( 44.6559, -81.1085, 3.64257, 0.55 ) }
    dend_24 { pt3dadd( 48.4915, -82.8811, 1.87084, 0.55 ) }
    dend_24 { pt3dadd( 50.3263, -84.0824, 0.814326, 0.55 ) }
    dend_24 { pt3dadd( 51.4586, -84.9581, 0.172129, 0.55 ) }
    dend_24 { pt3dadd( 53.1269, -86.3257, -0.626444, 0.55 ) }
    dend_24 { pt3dadd( 54.4836, -87.4884, -1.20339, 0.55 ) }
    dend_24 { pt3dadd( 57.2462, -90.4431, -2.20136, 0.55 ) }
    dend_24 { pt3dadd( 60.4311, -94.5884, -2.91358, 0.55 ) }
    dend_24 { pt3dadd( 62.4691, -97.7551, -3.21957, 0.55 ) }
    dend_24 { pt3dadd( 65.0912, -102.399, -3.44188, 0.55 ) }
    dend_24 { pt3dadd( 66.0646, -104.33, -3.48181, 0.55 ) }
    dend_24 { pt3dadd( 69.2429, -111.276, -3.34982, 0.55 ) }
    dend_24 { pt3dadd( 70.7282, -114.975, -3.12379, 0.55 ) }
    dend_24 { pt3dadd( 71.5692, -117.324, -2.93046, 0.55 ) }
    dend_24 { pt3dadd( 72.1325, -119.413, -2.83204, 0.55 ) }
    dend_24 { pt3dadd( 72.5735, -121.58, -2.89248, 0.28 ) }
    dend_24 { pt3dadd( 72.7114, -122.177, -2.96425, 0.55 ) }
    dend_24 { pt3dadd( 73.4538, -124.308, -3.60167, 0.28 ) }
    dend_24 { pt3dadd( 73.8799, -125.157, -4.02067, 0.55 ) }
    dend_24 { pt3dadd( 74.41, -126.049, -4.51491, 0.55 ) }
    dend_24 { pt3dadd( 75.877, -128.428, -5.74617, 0.55 ) }
    dend_24 { pt3dadd( 76.6087, -129.466, -6.31881, 0.55 ) }
    dend_24 { pt3dadd( 77.817, -131.022, -7.26383, 0.55 ) }
    dend_24 { pt3dadd( 79.885, -133.465, -8.71604, 0.28 ) }
    dend_24 { pt3dadd( 80.2826, -133.891, -8.98708, 0.55 ) }
    dend_24 { pt3dadd( 82.6366, -136.235, -10.5097, 0.55 ) }
    dend_24 { pt3dadd( 85.6287, -138.958, -12.339, 0.55 ) }
    dend_24 { pt3dadd( 89.055, -141.787, -14.3586, 0.28 ) }
    dend_24 { pt3dadd( 90.5852, -142.847, -15.197, 0.55 ) }
    dend_24 { pt3dadd( 92.7508, -144.125, -16.1992, 0.28 ) }
    dend_24 { pt3dadd( 93.2991, -144.381, -16.4025, 0.55 ) }
    dend_24 { pt3dadd( 95.1255, -144.945, -16.8679, 0.28 ) }
    dend_24 { pt3dadd( 95.7562, -145.065, -16.9058, 0.55 ) }
    dend_24 { pt3dadd( 98.6309, -145.482, -16.7333, 0.28 ) }
    dend_24 { pt3dadd( 100.42, -145.732, -16.5992, 0.55 ) }
    dend_24 { pt3dadd( 103.307, -146.118, -16.1801, 0.28 ) }
    dend_24 { pt3dadd( 104.541, -146.301, -15.9663, 0.28 ) }
    dend_24 { pt3dadd( 106.444, -146.66, -15.533, 0.55 ) }
    dend_24 { pt3dadd( 110.629, -147.555, -14.4172, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 18.1604, -34.6562, -10.765, 0.83 ) }
    dend_22 { pt3dadd( 14.483, -39.2395, -19.2953, 0.83 ) }
    dend_22 { pt3dadd( 13.3929, -40.6694, -21.9061, 0.83 ) }
    dend_22 { pt3dadd( 11.7498, -43.0333, -26.5953, 0.55 ) }
    dend_22 { pt3dadd( 11.1281, -44.0515, -28.4858, 0.55 ) }
    dend_22 { pt3dadd( 10.3904, -45.4404, -31.0209, 0.55 ) }
    dend_22 { pt3dadd( 9.17948, -48.0095, -35.5221, 0.55 ) }
    dend_22 { pt3dadd( 8.1336, -50.9178, -39.6446, 0.55 ) }
    dend_22 { pt3dadd( 7.04784, -55.1897, -45.079, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_22 { pt3dadd( 6.70452, -57.6369, -47.8261, 0.83 ) }
    dend_22 { pt3dadd( 6.41728, -60.7268, -50.9782, 0.28 ) }
    dend_22 { pt3dadd( 6.34936, -62.0703, -52.2825, 1.11 ) }
    dend_22 { pt3dadd( 6.07418, -69.1053, -58.6575, 0.28 ) }
    dend_22 { pt3dadd( 5.98323, -71.6367, -60.8091, 1.39 ) }
    dend_22 { pt3dadd( 5.58858, -81.9591, -69.095, 0.28 ) }
    dend_22 { pt3dadd( 5.52753, -83.5023, -70.3752, 1.11 ) }
    dend_22 { pt3dadd( 5.33407, -87.428, -73.5935, 0.28 ) }
    dend_22 { pt3dadd( 5.29781, -88.2097, -74.292, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.1604, -34.6562, -10.765, 0.83 ) }
    dend_19 { pt3dadd( 18.7419, -36.9094, -15.9901, 0.83 ) }
    dend_19 { pt3dadd( 19.1036, -38.3109, -19.2405, 0.83 ) }
    dend_19 { pt3dadd( 19.3546, -39.2835, -21.4959, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 44.9208, -109.403, 13.9827, 0.55 ) }
    dend_27 { pt3dadd( 43.1245, -111.908, 10.1748, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 15/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 44.9208, -109.403, 13.9827, 0.55 ) }
    dend_26 { pt3dadd( 45.4595, -111.522, 13.8371, 0.55 ) }
    dend_26 { pt3dadd( 45.897, -113.029, 13.7028, 0.55 ) }
    dend_26 { pt3dadd( 46.3788, -114.814, 13.5378, 0.55 ) }
    dend_26 { pt3dadd( 46.7645, -116.295, 13.4006, 0.55 ) }
    dend_26 { pt3dadd( 47.4784, -119.153, 13.0598, 0.28 ) }
    dend_26 { pt3dadd( 47.6809, -120.016, 12.9474, 0.55 ) }
    dend_26 { pt3dadd( 48.0207, -121.646, 12.6416, 0.28 ) }
    dend_26 { pt3dadd( 48.2645, -122.775, 12.4235, 0.28 ) }
    dend_26 { pt3dadd( 48.366, -123.237, 12.3192, 0.55 ) }
    dend_26 { pt3dadd( 48.8949, -125.671, 11.745, 0.28 ) }
    dend_26 { pt3dadd( 48.9758, -126.143, 11.6429, 0.55 ) }
    dend_26 { pt3dadd( 49.2306, -127.772, 11.2566, 0.28 ) }
    dend_26 { pt3dadd( 49.3163, -128.363, 11.0862, 0.55 ) }
    dend_26 { pt3dadd( 49.717, -130.691, 10.3552, 0.28 ) }
    dend_26 { pt3dadd( 49.7982, -131.141, 10.1893, 0.55 ) }
    dend_26 { pt3dadd( 49.9769, -131.941, 9.89106, 0.28 ) }
    dend_26 { pt3dadd( 50.1, -132.395, 9.74466, 0.55 ) }
    dend_26 { pt3dadd( 50.882, -134.553, 9.26487, 0.28 ) }
    dend_26 { pt3dadd( 51.1673, -135.177, 9.17927, 0.55 ) }
    dend_26 { pt3dadd( 52.0218, -136.681, 9.23506, 0.28 ) }
    dend_26 { pt3dadd( 53.5068, -139.094, 9.57366, 0.55 ) }
    dend_26 { pt3dadd( 54.5107, -140.611, 10.0259, 0.55 ) }
    dend_26 { pt3dadd( 56.1335, -143.053, 11.0854, 0.28 ) }
    dend_26 { pt3dadd( 56.6331, -143.781, 11.5131, 0.55 ) }
    dend_26 { pt3dadd( 58.1583, -146.03, 13.0162, 0.28 ) }
    dend_26 { pt3dadd( 58.3885, -146.376, 13.287, 0.55 ) }
    dend_26 { pt3dadd( 59.5832, -148.298, 14.8638, 0.28 ) }
    dend_26 { pt3dadd( 59.8927, -148.879, 15.3127, 0.28 ) }
    dend_26 { pt3dadd( 59.9914, -149.113, 15.4894, 0.55 ) }
    dend_26 { pt3dadd( 60.4192, -150.292, 16.262, 0.28 ) }
    dend_26 { pt3dadd( 60.4281, -150.32, 16.2737, 0.55 ) }
    dend_26 { pt3dadd( 61.1297, -152.352, 17.0357, 0.28 ) }
    dend_26 { pt3dadd( 61.4223, -153.258, 17.2461, 0.55 ) }
    dend_26 { pt3dadd( 63.8239, -160.47, 19.2226, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 50/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 19.3546, -39.2835, -21.4959, 0.55 ) }
    dend_21 { pt3dadd( 18.6392, -42.9462, -20.3727, 0.55 ) }
    dend_21 { pt3dadd( 18.1731, -45.1397, -19.8972, 0.55 ) }
    dend_21 { pt3dadd( 17.8028, -47.1934, -19.5223, 0.28 ) }
    dend_21 { pt3dadd( 17.4916, -49.0763, -19.1863, 0.28 ) }
    dend_21 { pt3dadd( 17.3089, -50.0183, -19.1434, 0.83 ) }
    dend_21 { pt3dadd( 16.8198, -52.7962, -19.1245, 0.28 ) }
    dend_21 { pt3dadd( 16.6374, -54.0295, -19.2067, 0.83 ) }
    dend_21 { pt3dadd( 16.2953, -56.7999, -19.388, 0.83 ) }
    dend_21 { pt3dadd( 16.2174, -57.9043, -19.4482, 0.83 ) }
    dend_21 { pt3dadd( 16.05, -63.9669, -19.687, 0.28 ) }
    dend_21 { pt3dadd( 16.0, -67.3636, -19.7945, 0.28 ) }
    dend_21 { pt3dadd( 16.0124, -68.8806, -19.8113, 0.55 ) }
    dend_21 { pt3dadd( 16.0393, -70.2358, -19.8204, 0.55 ) }
    dend_21 { pt3dadd( 16.311, -78.8009, -19.8799, 0.28 ) }
    dend_21 { pt3dadd( 16.3764, -79.7586, -19.8542, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 66/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 19.3546, -39.2835, -21.4959, 0.83 ) }
    dend_20 { pt3dadd( 20.7333, -42.641, -26.458, 0.83 ) }
    dend_20 { pt3dadd( 21.2908, -44.2791, -28.1437, 0.28 ) }
    dend_20 { pt3dadd( 21.5827, -45.2726, -28.8639, 0.83 ) }
    dend_20 { pt3dadd( 22.8873, -50.0029, -31.4508, 0.55 ) }
    dend_20 { pt3dadd( 23.2767, -51.4004, -32.0979, 0.55 ) }
    dend_20 { pt3dadd( 23.9906, -54.0726, -33.3796, 0.28 ) }
    dend_20 { pt3dadd( 24.7259, -57.0071, -34.5989, 0.55 ) }
    dend_20 { pt3dadd( 25.5051, -59.9936, -35.8778, 0.55 ) }
    dend_20 { pt3dadd( 26.8257, -64.8801, -38.0294, 0.28 ) }
    dend_20 { pt3dadd( 27.3166, -66.6856, -38.779, 1.11 ) }
    dend_20 { pt3dadd( 29.5824, -74.6914, -42.2342, 0.28 ) }
    dend_20 { pt3dadd( 30.1408, -76.6128, -43.1138, 1.11 ) }
    dend_20 { pt3dadd( 31.557, -81.5558, -45.4025, 0.28 ) }
    dend_20 { pt3dadd( 31.8722, -82.7033, -45.865, 1.11 ) }
    dend_20 { pt3dadd( 33.399, -88.7615, -47.7975, 0.28 ) }
    dend_20 { pt3dadd( 33.5644, -89.5088, -47.9635, 0.83 ) }
    dend_20 { pt3dadd( 33.8073, -90.8677, -48.1105, 0.28 ) }
    dend_20 { pt3dadd( 33.9599, -92.4783, -48.2114, 0.55 ) }
    dend_20 { pt3dadd( 34.0248, -99.884, -48.5216, 0.28 ) }
    dend_20 { pt3dadd( 33.9601, -100.912, -48.5815, 0.55 ) }
    dend_20 { pt3dadd( 33.6251, -102.885, -48.826, 0.28 ) }
    dend_20 { pt3dadd( 32.9969, -106.145, -49.4091, 1.11 ) }
    dend_20 { pt3dadd( 32.1582, -109.86, -50.2879, 0.28 ) }
    dend_20 { pt3dadd( 31.8195, -111.21, -50.753, 0.83 ) }
    dend_20 { pt3dadd( 31.3094, -112.775, -51.5482, 0.28 ) }
    dend_20 { pt3dadd( 30.5711, -115.797, -53.3054, 0.55 ) }
    dend_20 { pt3dadd( 30.3361, -117.991, -54.8885, 0.28 ) }
    dend_20 { pt3dadd( 30.3482, -118.191, -55.048, 0.83 ) }
    dend_20 { pt3dadd( 30.6439, -119.118, -56.0089, 0.28 ) }
    dend_20 { pt3dadd( 30.7562, -119.354, -56.2534, 0.55 ) }
    dend_20 { pt3dadd( 31.7238, -120.82, -57.8521, 0.28 ) }
    dend_20 { pt3dadd( 32.7073, -122.171, -58.9309, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 43.1245, -111.908, 10.1748, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_29 { pt3dadd( 40.5135, -114.968, 8.67229, 0.55 ) }
    dend_29 { pt3dadd( 38.1588, -117.947, 7.03226, 0.55 ) }
    dend_29 { pt3dadd( 37.0083, -119.537, 6.00947, 0.55 ) }
    dend_29 { pt3dadd( 35.424, -122.175, 4.25293, 0.55 ) }
    dend_29 { pt3dadd( 33.9878, -124.876, 2.44975, 0.28 ) }
    dend_29 { pt3dadd( 33.4889, -125.962, 1.6892, 0.55 ) }
    dend_29 { pt3dadd( 32.8872, -127.645, 0.476728, 0.28 ) }
    dend_29 { pt3dadd( 32.3976, -129.572, -0.99548, 1.39 ) }
    dend_29 { pt3dadd( 31.7299, -132.624, -3.16171, 0.28 ) }
    dend_29 { pt3dadd( 31.5371, -133.438, -3.66355, 0.83 ) }
    dend_29 { pt3dadd( 30.6861, -136.576, -5.33007, 0.28 ) }
    dend_29 { pt3dadd( 30.3521, -137.643, -5.80578, 0.55 ) }
    dend_29 { pt3dadd( 29.9536, -138.764, -6.1723, 0.55 ) }
    dend_29 { pt3dadd( 28.3358, -142.906, -7.04734, 0.28 ) }
    dend_29 { pt3dadd( 27.5101, -144.77, -7.35337, 0.28 ) }
    dend_29 { pt3dadd( 26.7528, -146.403, -7.5464, 0.55 ) }
    dend_29 { pt3dadd( 25.6327, -148.69, -7.63316, 0.28 ) }
    dend_29 { pt3dadd( 25.14, -149.735, -7.69232, 0.55 ) }
    dend_29 { pt3dadd( 23.9796, -152.514, -7.75417, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 19/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 43.1245, -111.908, 10.1748, 0.55 ) }
    dend_28 { pt3dadd( 40.8184, -110.84, 10.5441, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_55, dend_48, dend_45, dend_40, dend_33, dend_8, dend_3, dend_0, axon_0, dend_57, dend_56, dend_52, dend_49, dend_47, dend_46, dend_44, dend_41, dend_37, dend_34, dend_14, dend_9, dend_7, dend_4, dend_2, dend_1, axon_1, dend_54, dend_53, dend_51, dend_50, dend_43, dend_42, dend_39, dend_38, dend_36, dend_35, dend_16, dend_15, dend_13, dend_10, dend_6, dend_5, dend_30, dend_17, dend_12, dend_11, dend_32, dend_31, dend_23, dend_18, dend_25, dend_24, dend_22, dend_19, dend_27, dend_26, dend_21, dend_20, dend_29, dend_28]}
    ModelViewParmSubset_5 = new SectionList()
    dend_55 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_45 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_46 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_44 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_54 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_53 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_50 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_43 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_39 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_36 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_35 OneSecGrp_SectionRef_37.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_13 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_10 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_6 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_5 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_30 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_26 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_21 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_20 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_29 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_40 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_8 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_33 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_48 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_9 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_41 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_52 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_17 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_37 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_4 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_7 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_47 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_56 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_57 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_25 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_32 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_28 OneSecGrp_SectionRef_61.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_33, dend_33, dend_33, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, axon_0, axon_0, dend_57, dend_57, dend_56, dend_56, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_14, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 5
    dend_45 nseg = 5
    dend_46 nseg = 3
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_54 nseg = 5
    dend_53 nseg = 5
    dend_51 nseg = 7
    dend_50 nseg = 3
    dend_43 nseg = 11
    dend_42 nseg = 3
    dend_39 nseg = 7
    dend_38 nseg = 5
    dend_36 nseg = 5
    dend_35 nseg = 3
    dend_15 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_6 nseg = 5
    dend_5 nseg = 5
    dend_30 nseg = 5
    dend_12 nseg = 3
    dend_11 nseg = 5
    dend_23 nseg = 3
    dend_24 nseg = 5
    dend_22 nseg = 5
    dend_26 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
    dend_29 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L23_NBC_1f21a64cc1_0_0


