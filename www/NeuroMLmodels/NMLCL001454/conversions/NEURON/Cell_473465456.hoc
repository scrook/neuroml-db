// Cell: Cell_473465456
/*
{
  "id" : "Cell_473465456",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "265.61, 535.163, 25.2, 14.4686", "272.844, 535.163, 25.2, 14.4686", "280.078, 535.163, 25.2, 14.4686" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "272.844, 535.163, 25.2, 1.0", "278.685, 548.979, 25.2, 1.0", "284.527, 562.795, 25.2, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "269.379, 531.483, 37.1182, 0.4068", "268.569, 531.434, 37.1182, 0.5084", "267.707, 531.232, 37.1182, 0.5848", "266.235, 530.476, 37.1182, 0.5592", "265.273, 530.679, 37.1182, 0.4576", "263.63, 530.394, 37.1182, 0.356", "261.506, 529.791, 37.1182, 0.356", "259.733, 529.388, 37.1182, 0.4576", "257.957, 528.935, 37.1182, 0.6102", "257.043, 528.632, 37.1182, 0.7118", "256.43, 527.569, 37.1182, 0.7118", "255.154, 526.505, 37.1182, 0.5592", "251.025, 526.828, 38.493, 0.5592", "249.331, 526.064, 38.493, 0.661", "247.272, 524.634, 38.493, 0.6356", "246.184, 522.867, 39.1801, 0.5338", "245.117, 521.901, 39.1801, 0.4068", "243.948, 521.495, 39.1801, 0.356", "242.828, 520.833, 39.1801, 0.3814", "242.218, 520.069, 39.1801, 0.4322", "241.053, 517.579, 40.5549, 0.4576", "239.165, 515.434, 40.5549, 0.4576", "237.633, 512.881, 40.5549, 0.5084", "235.03, 509.717, 40.5549, 0.5338", "232.477, 508.236, 40.5549, 0.5338", "231.839, 507.872, 41.44, 0.4322", "231.292, 507.618, 41.44, 0.3814", "230.757, 507.351, 41.44, 0.3814", "230.173, 507.135, 41.44, 0.4068", "229.69, 506.932, 41.44, 0.305", "229.41, 506.525, 41.44, 0.2796", "229.041, 506.322, 41.44, 0.2796", "228.8, 505.877, 41.44, 0.2288", "228.711, 505.623, 41.44, 0.2288", "228.33, 505.432, 41.44, 0.2288", "227.999, 505.305, 41.44, 0.2288", "227.529, 504.974, 41.44, 0.2288", "226.906, 504.797, 41.44, 0.2796", "226.398, 504.504, 41.44, 0.3814", "225.813, 504.288, 41.44, 0.483", "225.254, 504.046, 41.44, 0.483", "224.821, 503.678, 41.44, 0.3814", "224.326, 503.373, 41.44, 0.2796", "223.69, 503.208, 41.44, 0.2288", "223.309, 502.902, 41.72, 0.2288", "222.724, 502.686, 41.72, 0.2288", "222.127, 502.597, 42.0, 0.2288", "221.364, 502.559, 42.0, 0.2288", "220.576, 502.547, 42.0, 0.2288", "220.106, 502.33, 42.28, 0.2288", "219.584, 502.064, 42.3111, 0.2288", "219.076, 501.987, 42.84, 0.2288", "218.39, 501.987, 43.12, 0.2542", "217.589, 501.987, 43.12, 0.2796", "216.788, 501.987, 43.12, 0.305", "215.987, 501.987, 43.12, 0.2796", "215.186, 501.987, 43.12, 0.2542", "214.386, 501.987, 43.12, 0.2288", "213.585, 501.987, 43.12, 0.2542", "212.975, 501.796, 43.12, 0.305", "212.212, 501.758, 43.12, 0.4068", "211.717, 501.453, 43.12, 0.4576", "211.17, 501.199, 43.12, 0.4576", "210.382, 501.186, 43.12, 0.356", "209.581, 501.186, 43.12, 0.2796", "209.238, 501.186, 43.12, 0.2288", "208.894, 501.186, 43.12, 0.2288", "208.666, 501.072, 43.12, 0.2288", "208.475, 500.92, 43.12, 0.2288", "207.852, 500.513, 43.12, 0.3304", "207.255, 500.309, 43.12, 0.4576", "206.835, 499.941, 43.1511, 0.5338", "206.517, 499.56, 43.4, 0.5084", "205.716, 498.873, 43.68, 0.3814", "205.234, 498.555, 43.68, 0.4576", "204.674, 498.174, 43.8978, 0.5338", "204.611, 497.678, 44.7689, 0.4322", "204.052, 497.64, 45.2668, 0.4068", "203.594, 497.449, 45.36, 0.4576", "202.831, 496.839, 45.36, 0.4322", "202.361, 496.509, 45.36, 0.4068", "201.802, 496.267, 45.36, 0.3814", "201.103, 496.165, 45.36, 0.4322", "200.531, 496.051, 45.36, 0.6102", "200.162, 495.504, 45.36, 0.6864", "199.297, 494.767, 45.36, 0.6864", "198.598, 493.865, 45.36, 0.6356", "198.255, 493.407, 45.36, 0.5338", "197.925, 492.937, 45.36, 0.3814", "197.492, 492.569, 45.36, 0.2796", "197.238, 492.022, 45.36, 0.2288", "197.099, 491.475, 45.36, 0.2288", "196.691, 491.196, 45.36, 0.2288", "196.31, 490.662, 45.36, 0.3304", "195.853, 490.433, 45.36, 0.3814", "195.154, 490.102, 45.36, 0.356", "194.773, 489.682, 45.36, 0.4068", "194.467, 489.187, 45.36, 0.483", "194.124, 488.729, 45.36, 0.483", "193.73, 488.323, 45.36, 0.4068", "193.222, 488.03, 45.36, 0.3304", "192.65, 487.802, 45.36, 0.3304", "192.179, 487.471, 45.36, 0.356", "191.518, 487.331, 45.36, 0.4068", "191.01, 487.039, 45.36, 0.4576", "190.501, 486.747, 45.36, 0.5084", "190.056, 486.441, 45.2357, 0.5338", "189.561, 486.086, 44.8, 0.4322", "189.103, 485.971, 44.8, 0.3304", "188.531, 485.857, 44.8, 0.4322", "188.124, 485.578, 44.8, 0.5848", "187.425, 485.247, 44.8, 0.5084", "186.93, 484.942, 44.8, 0.3814", "186.231, 484.84, 44.8, 0.2796", "185.9, 484.827, 44.8, 0.2288", "185.671, 484.827, 44.8, 0.2288", "185.442, 484.827, 44.8, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "272.027, 528.344, 26.1201, 0.2796", "272.493, 527.19, 26.1201, 0.3814", "272.732, 526.519, 26.1201, 0.5338", "272.072, 525.735, 26.1201, 0.6102", "268.749, 523.479, 24.7453, 0.6356", "267.156, 522.66, 24.7453, 0.6102", "265.95, 521.802, 24.7453, 0.6356", "264.825, 521.746, 24.7453, 0.661", "263.948, 521.704, 24.7453, 0.6864", "263.115, 520.765, 25.4327, 0.6356", "260.474, 518.647, 25.4327, 0.5848", "258.91, 516.611, 25.4327, 0.5338", "256.719, 514.901, 26.1201, 0.5592", "256.193, 514.388, 26.1201, 0.5848", "254.789, 514.071, 26.1201, 0.6102", "253.64, 513.709, 26.1201, 0.6356", "252.878, 513.128, 26.1201, 0.6864", "251.169, 511.547, 26.8075, 0.7626", "249.813, 510.437, 26.8075, 0.788", "248.941, 508.645, 26.8075, 0.7626", "246.723, 507.554, 26.8075, 0.6864", "245.296, 506.704, 26.1201, 0.661", "242.784, 505.965, 26.1201, 0.661", "242.164, 505.281, 26.1201, 0.6864", "240.886, 504.56, 26.1201, 0.6356", "239.294, 504.12, 26.1201, 0.6102", "238.181, 503.932, 25.76, 0.6102", "237.685, 503.627, 25.76, 0.6102", "236.554, 503.156, 25.76, 0.661", "235.651, 502.457, 25.76, 0.7626", "234.597, 501.911, 25.76, 0.5592", "234.202, 501.504, 25.76, 0.4068", "233.694, 501.212, 25.76, 0.356", "233.376, 500.729, 25.76, 0.3814", "232.956, 500.348, 25.76, 0.4576", "232.537, 499.966, 25.76, 0.483", "231.724, 499.394, 25.2311, 0.356", "231.088, 499.254, 25.1689, 0.305", "230.414, 499.229, 24.92, 0.305", "229.83, 499.013, 24.92, 0.3814", "229.258, 498.784, 24.36, 0.6102", "228.571, 498.098, 24.36, 0.661", "227.796, 497.272, 24.36, 0.5848", "227.007, 496.458, 24.36, 0.5338", "226.716, 495.949, 24.36, 0.5338", "226.372, 495.492, 24.36, 0.5084", "225.508, 494.755, 24.36, 0.4576", "224.91, 494.551, 24.36, 0.4068", "224.402, 494.373, 24.36, 0.4322", "224.11, 493.979, 24.36, 0.4322", "223.575, 493.484, 24.36, 0.356", "223.321, 492.937, 24.36, 0.356", "223.08, 492.378, 24.36, 0.3814", "222.699, 491.958, 24.36, 0.356", "222.177, 491.679, 24.36, 0.3304", "221.491, 491.564, 24.36, 0.305", "220.792, 491.462, 24.36, 0.305", "220.106, 491.462, 24.64, 0.3304", "219.444, 491.323, 24.64, 0.356", "218.962, 491.005, 24.64, 0.3814", "218.466, 490.699, 24.64, 0.356", "218.084, 490.281, 25.2, 0.4068", "217.919, 489.873, 25.2, 0.4068", "217.551, 489.441, 25.2, 0.356", "217.385, 488.806, 25.2, 0.356", "217.093, 488.297, 25.2, 0.3814", "216.902, 487.687, 25.2, 0.4322", "216.788, 487.001, 25.2, 0.4576", "216.788, 486.2, 25.2, 0.4322", "216.788, 485.399, 25.2, 0.4322", "216.788, 485.056, 25.2, 0.4322", "216.788, 484.561, 25.6668, 0.483", "216.865, 483.989, 26.32, 0.356", "217.246, 483.111, 26.32, 0.305", "217.36, 482.425, 26.32, 0.305", "217.36, 481.624, 26.32, 0.356", "217.347, 480.836, 26.32, 0.4576", "216.75, 479.831, 26.32, 0.7118", "216.139, 478.841, 26.32, 0.6864", "215.606, 477.772, 26.32, 0.6356", "214.868, 476.908, 26.32, 0.6864", "214.259, 475.917, 26.32, 0.6356", "213.776, 474.9, 26.0711, 0.5848", "213.445, 474.442, 26.04, 0.5338", "213.229, 473.959, 25.7911, 0.5338", "213.0, 473.476, 25.5732, 0.5084", "212.466, 472.447, 25.48, 0.6102", "211.717, 471.595, 25.48, 0.483", "211.22, 471.29, 25.48, 0.4576", "210.648, 471.061, 25.48, 0.5084", "209.924, 470.985, 25.48, 0.5592", "209.123, 470.985, 25.48, 0.5084", "208.36, 470.947, 25.48, 0.4576", "207.636, 470.87, 25.48, 0.4576", "206.912, 470.794, 25.48, 0.483", "206.276, 470.629, 25.48, 0.483", "205.653, 470.451, 25.48, 0.483", "204.89, 470.413, 25.48, 0.5338", "204.09, 470.413, 25.48, 0.5848", "203.391, 470.311, 25.48, 0.5592", "202.704, 470.197, 25.48, 0.5338", "202.068, 470.032, 25.48, 0.483", "201.458, 469.841, 25.48, 0.5084", "200.772, 469.726, 25.48, 0.483", "199.971, 469.726, 25.48, 0.483", "199.208, 469.689, 25.48, 0.483", "198.561, 469.535, 25.48, 0.5084", "197.95, 469.46, 25.76, 0.5338", "197.454, 469.383, 26.32, 0.5338", "196.92, 469.231, 26.6, 0.5338", "196.348, 469.002, 26.6, 0.5338", "195.903, 468.647, 26.6, 0.5338", "195.472, 468.277, 26.6, 0.5338", "194.9, 467.819, 26.6, 0.5084", "194.557, 467.247, 26.6, 0.356", "194.137, 467.21, 26.6, 0.2796", "193.438, 467.108, 26.6, 0.3304", "192.929, 466.816, 26.6, 0.356", "192.585, 466.358, 26.6, 0.4068", "192.205, 465.939, 26.6, 0.4322", "191.824, 465.519, 26.6, 0.483", "191.582, 464.959, 26.6, 0.5338", "191.162, 463.892, 26.88, 0.661", "191.162, 463.091, 26.88, 0.661", "191.162, 462.29, 26.88, 0.5848", "191.162, 461.49, 26.88, 0.4576", "191.162, 460.689, 26.88, 0.356", "191.162, 459.888, 26.88, 0.3304", "191.125, 459.227, 27.1289, 0.356", "190.819, 458.744, 27.16, 0.4068", "190.59, 458.172, 27.16, 0.4068", "190.476, 457.486, 27.16, 0.4576", "190.26, 457.092, 27.6268, 0.483", "189.65, 456.138, 27.72, 0.6356", "188.735, 455.452, 27.72, 0.6102", "188.226, 455.16, 27.72, 0.5338", "187.616, 455.083, 28.0, 0.4576", "187.006, 454.892, 28.0, 0.3814", "186.37, 454.727, 28.0, 0.356", "185.748, 454.549, 28.0, 0.3814", "185.087, 454.409, 28.0, 0.4322", "184.604, 454.091, 28.0, 0.4068", "184.07, 453.825, 28.0, 0.356", "183.535, 453.558, 28.0, 0.305", "182.938, 453.355, 28.0, 0.356", "182.443, 453.049, 28.0, 0.4068", "181.782, 452.91, 28.0, 0.483", "181.247, 452.643, 28.0, 0.5084", "180.244, 452.147, 27.7511, 0.5592", "179.71, 451.893, 27.72, 0.5338", "179.227, 451.575, 27.72, 0.4576", "178.591, 451.41, 27.72, 0.4576", "177.842, 450.888, 26.9111, 0.5592", "177.256, 450.495, 26.5068, 0.5338", "176.939, 449.859, 26.32, 0.4068", "176.862, 449.02, 26.04, 0.3814", "176.862, 448.219, 26.04, 0.3304", "176.862, 447.597, 25.6043, 0.356", "176.862, 446.961, 25.2, 0.4322", "176.862, 446.553, 24.5157, 0.4322", "177.066, 446.351, 23.8311, 0.2542", "177.447, 445.753, 23.7068, 0.2288", "177.688, 445.384, 23.24, 0.2288", "178.108, 445.003, 23.24, 0.2288", "178.171, 444.723, 23.24, 0.2288", "178.387, 444.596, 23.24, 0.2288", "178.655, 444.521, 23.24, 0.2542", "178.922, 444.444, 23.24, 0.305", "179.837, 444.33, 23.24, 0.4068", "180.409, 444.215, 22.96, 0.3814", "181.133, 444.139, 22.96, 0.3304", "181.782, 443.986, 22.96, 0.3304", "182.582, 443.986, 22.96, 0.3814", "182.963, 443.986, 22.7732, 0.4576", "183.307, 444.406, 22.68, 0.4576", "183.612, 444.787, 22.68, 0.2796", "183.905, 444.837, 22.68, 0.2542", "184.07, 445.13, 22.68, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "272.997, 527.853, 19.873, 0.5084", "273.073, 527.384, 20.44, 0.5338", "273.085, 526.825, 20.44, 0.4322", "273.391, 526.444, 20.44, 0.2796", "274.585, 525.693, 20.44, 0.4576", "275.056, 525.262, 20.6212, 0.5848", "275.448, 524.56, 20.6212, 0.6864", "276.032, 523.347, 20.6212, 0.7626", "276.245, 521.967, 19.9338, 0.788", "276.278, 520.935, 19.9338, 0.7372", "276.741, 520.236, 19.9338, 0.6356", "278.424, 519.305, 19.9338, 0.5848", "280.694, 519.183, 17.1844, 0.5848", "281.421, 518.624, 17.1844, 0.5848", "282.087, 518.258, 17.1844, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "267.125, 538.865, 29.0251, 0.4322", "267.005, 539.766, 30.6513, 0.5084", "267.57, 540.387, 32.3932, 0.6356", "267.99, 541.368, 32.935, 0.7118", "268.057, 542.454, 32.3274, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "270.557, 542.104, 24.5916, 0.6102", "269.831, 542.497, 22.8287, 0.5084", "268.827, 542.566, 21.6093, 0.483", "267.83, 542.95, 20.7665, 0.483", "266.995, 543.678, 20.232, 0.5848", "266.511, 544.634, 19.3323, 0.6102", "265.581, 545.438, 18.5153, 0.6102", "264.757, 546.213, 18.7261, 0.5338", "263.889, 546.859, 19.4457, 0.4576", "263.052, 547.475, 18.6606, 0.4576", "262.267, 548.286, 18.4797, 0.4576", "261.219, 548.734, 18.4786, 0.5084", "260.283, 549.389, 18.4724, 0.483", "259.499, 550.196, 18.4366, 0.483", "258.878, 551.124, 18.118, 0.4576", "257.969, 551.633, 18.3932, 0.483", "256.925, 551.814, 19.2559, 0.5084", "256.258, 552.409, 17.7383, 0.483", "255.574, 553.286, 17.358, 0.4068", "254.688, 554.0, 17.3513, 0.3304", "253.788, 554.704, 17.3194, 0.3304", "252.992, 555.522, 17.1886, 0.3304", "252.27, 556.366, 16.6298, 0.356", "251.347, 555.985, 17.2682, 0.356", "250.422, 555.755, 16.24, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "270.558, 542.352, 25.7855, 0.788", "270.146, 543.398, 25.4895, 0.8898", "270.042, 545.115, 26.6927, 0.788", "269.73, 546.003, 28.1431, 0.6356", "269.464, 547.069, 27.9583, 0.6356", "268.856, 547.985, 28.4102, 0.6356", "268.358, 549.006, 28.6031, 0.661", "267.961, 550.067, 28.8366, 0.5592", "267.448, 550.973, 29.8936, 0.5338", "267.292, 551.997, 31.0495, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "279.947, 536.764, 24.4384, 0.788", "281.032, 536.546, 24.7489, 0.9914", "282.156, 536.573, 25.1821, 1.144", "283.267, 536.789, 25.083, 1.1948", "285.482, 536.994, 24.3006, 1.1948", "286.575, 536.995, 25.0768, 1.144", "287.717, 537.002, 25.2003, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "275.166, 528.606, 29.9869, 0.6864", "275.917, 527.859, 30.7924, 0.7118", "276.547, 526.906, 30.786, 0.7372", "277.29, 526.036, 30.7387, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "284.527, 562.795, 25.2, 1.0", "290.368, 576.611, 25.2, 1.0", "296.209, 590.427, 25.2, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "268.057, 542.454, 32.3274, 0.6864", "268.261, 543.619, 30.8, 0.5338", "268.222, 544.763, 30.8003, 0.5592", "267.948, 545.859, 30.8008, 0.6356", "267.227, 546.743, 30.8042, 0.8136", "266.441, 547.573, 30.8168, 0.8644", "265.755, 548.483, 30.8837, 0.9152", "264.964, 549.279, 31.2306, 0.788", "264.047, 549.865, 32.0695, 0.6864", "263.525, 550.773, 32.9263, 0.5338", "263.046, 551.807, 33.0218, 0.5592", "262.547, 552.832, 32.935, 0.5848", "262.184, 553.878, 32.3789, 0.6356", "261.675, 554.882, 32.1034, 0.5848", "260.934, 555.628, 32.963, 0.6356", "260.241, 556.535, 33.0277, 0.7118", "259.584, 557.469, 32.9795, 0.788", "258.753, 558.246, 32.7726, 0.7372", "257.756, 558.653, 31.9178, 0.6356", "256.484, 559.411, 31.0643, 0.5084", "255.714, 560.189, 31.6467, 0.5084", "254.95, 561.019, 31.9166, 0.5848", "254.163, 561.831, 31.9012, 0.661", "253.319, 562.601, 31.8273, 0.7118", "252.781, 563.577, 31.3348, 0.7118", "252.275, 564.349, 29.7774, 0.661", "251.38, 564.958, 28.9702, 0.6864" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "268.057, 542.454, 32.3274, 0.6864", "267.435, 543.193, 31.9676, 0.6102", "266.428, 543.56, 32.0989, 0.6102", "265.791, 542.731, 32.9451, 0.7372", "264.745, 542.588, 33.5698, 0.839", "264.191, 542.731, 35.8739, 0.9152" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "267.292, 551.997, 31.0495, 0.4576", "266.991, 552.575, 32.5968, 0.3814", "266.679, 553.036, 34.9244, 0.4322", "266.155, 554.01, 35.2948, 0.483", "265.366, 554.824, 35.3811, 0.5592", "265.316, 555.872, 35.924, 0.5848", "265.99, 556.742, 35.4122, 0.6356", "266.651, 557.668, 35.3674, 0.6864", "267.356, 558.541, 35.7759, 0.7372", "268.297, 558.959, 36.6772, 0.7118", "269.403, 558.969, 37.3019, 0.6356", "269.984, 559.073, 38.08, 0.5592", "270.67, 559.187, 38.08, 0.5592", "271.319, 559.339, 38.08, 0.5592", "271.827, 559.632, 38.08, 0.5592", "272.501, 559.759, 38.08, 0.5338", "272.971, 560.09, 38.08, 0.5338", "273.657, 560.204, 38.08, 0.5084", "274.204, 560.458, 38.08, 0.483", "274.637, 560.827, 38.08, 0.4322", "275.246, 561.018, 38.08, 0.4322", "275.895, 561.17, 38.08, 0.4068", "276.505, 561.361, 38.08, 0.4068", "277.204, 561.463, 38.08, 0.356", "277.979, 561.488, 38.08, 0.3814", "278.564, 561.704, 38.08, 0.4576", "279.365, 561.704, 38.08, 0.5848", "279.975, 562.238, 38.64, 0.8644", "280.775, 563.039, 39.2, 0.8898", "281.628, 563.674, 39.48, 0.839", "282.67, 564.005, 40.04, 0.7372", "283.28, 564.196, 40.04, 0.6864", "284.132, 564.945, 40.04, 0.7118", "285.123, 565.556, 40.04, 0.6356", "285.721, 565.758, 40.04, 0.5848", "286.712, 566.14, 40.6, 0.5338", "287.323, 566.33, 40.6, 0.5592", "287.895, 566.559, 40.6, 0.6356", "288.313, 566.941, 40.6, 0.7118", "289.153, 567.703, 40.6, 0.661", "289.33, 568.327, 40.6, 0.5848", "289.482, 568.861, 40.6, 0.7118", "290.271, 569.56, 41.16, 0.9152", "291.262, 570.055, 41.44, 0.661", "292.063, 570.856, 41.44, 0.6102", "292.305, 571.415, 41.44, 0.5848", "292.444, 571.962, 41.72, 0.5084", "292.66, 572.42, 42.0311, 0.5084", "293.169, 572.839, 42.28, 0.5848", "293.983, 573.284, 42.56, 0.6102", "294.503, 573.564, 42.56, 0.661", "295.038, 573.716, 42.56, 0.6864", "295.381, 574.288, 42.56, 0.2542", "295.876, 574.593, 42.56, 0.2542", "296.169, 574.937, 42.6843, 0.5084", "296.525, 574.974, 43.4, 0.661", "297.3, 575.228, 43.4, 0.5848", "297.872, 575.457, 43.4, 0.5592", "298.355, 575.775, 43.4, 0.5338", "298.698, 576.233, 43.4, 0.5848", "299.245, 576.487, 43.4, 0.6356", "299.805, 576.728, 43.4, 0.6864", "300.694, 577.441, 43.4, 0.6356", "300.999, 577.822, 43.68, 0.5848", "301.367, 578.254, 43.68, 0.5338", "301.711, 578.712, 43.68, 0.5848", "302.118, 578.991, 43.96, 0.6356", "302.601, 579.309, 43.96, 0.661", "303.173, 579.538, 43.96, 0.6102", "303.846, 579.665, 43.96, 0.5592", "304.418, 579.894, 43.96, 0.5338", "304.914, 580.199, 43.96, 0.5592", "305.359, 580.555, 43.96, 0.5338", "305.766, 580.948, 43.96, 0.483", "306.249, 581.266, 43.96, 0.356", "306.605, 581.711, 43.96, 0.2796", "307.164, 581.953, 43.96, 0.2288", "307.571, 582.346, 43.96, 0.2288", "307.622, 582.525, 43.96, 0.2288", "307.73, 582.747, 43.9919, 0.2542", "309.16, 586.407, 46.7412, 0.305", "311.814, 588.936, 46.7412, 0.356", "313.745, 589.369, 46.7412, 0.356", "316.514, 592.253, 49.4908, 0.305", "319.904, 593.967, 49.4908, 0.2542", "322.686, 593.391, 51.553, 0.2288", "326.49, 595.319, 51.553, 0.2288", "331.638, 597.151, 54.3024, 0.2288", "338.134, 604.928, 56.3646, 0.2288", "340.531, 607.175, 56.3646, 0.2288", "345.38, 612.529, 57.052, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "267.292, 551.997, 31.0495, 0.4576", "266.978, 552.437, 30.8518, 0.483", "266.304, 553.258, 30.0135, 0.5338", "265.486, 554.04, 29.6808, 0.6102", "264.839, 554.977, 29.6839, 0.6102", "264.189, 555.919, 29.699, 0.5592", "263.976, 557.0, 29.7984, 0.483", "263.684, 558.062, 30.4133, 0.5084", "263.371, 559.141, 30.8207, 0.5848", "263.339, 560.275, 30.9366, 0.661", "263.653, 561.324, 31.6064, 0.661", "263.718, 562.434, 32.2414, 0.6356", "263.883, 563.54, 32.0508, 0.6102", "263.786, 564.676, 31.9869, 0.6356", "264.195, 565.682, 32.3854, 0.661", "264.964, 566.242, 33.7985, 0.7118", "265.057, 567.323, 33.3634, 0.7372", "265.014, 568.455, 33.0425, 0.7626", "264.742, 569.554, 33.056, 0.6864", "264.549, 570.677, 33.1598, 0.5848", "264.606, 571.646, 33.9968, 0.4322", "265.566, 572.249, 34.1642, 0.4068", "265.941, 573.169, 34.1933, 0.3814", "265.419, 574.18, 34.368, 0.4576", "264.747, 575.003, 35.2187, 0.4576", "264.138, 575.929, 35.7977, 0.5084", "263.549, 576.855, 36.4151, 0.5084", "262.987, 577.845, 36.4888, 0.5592", "263.208, 578.83, 37.1437, 0.6102", "263.678, 579.823, 37.5222, 0.661", "263.737, 580.964, 37.5348, 0.6864", "264.019, 582.056, 37.6261, 0.661", "264.696, 582.916, 38.2371, 0.5848", "265.272, 583.876, 38.6442, 0.483", "265.758, 584.907, 38.6649, 0.4068", "266.023, 586.011, 38.8158, 0.4322", "266.384, 586.997, 39.6584, 0.483", "266.916, 588.005, 39.76, 0.5084", "267.519, 588.972, 39.7611, 0.4322", "267.607, 589.02, 40.88, 0.3304", "267.696, 589.274, 40.88, 0.2542", "267.696, 589.618, 40.88, 0.2288", "267.785, 589.872, 40.88, 0.2288", "267.9, 589.986, 40.88, 0.2288", "268.039, 590.647, 40.88, 0.2288", "268.039, 591.448, 40.88, 0.2288", "268.039, 592.249, 40.88, 0.2542", "268.039, 593.012, 40.9732, 0.2796", "268.039, 593.736, 41.16, 0.305", "268.141, 594.435, 41.16, 0.305", "268.23, 594.994, 41.5332, 0.3304", "268.484, 595.465, 41.72, 0.3814", "268.763, 595.986, 41.72, 0.4068", "268.967, 596.583, 41.72, 0.4068", "269.107, 597.245, 41.72, 0.3814", "269.196, 597.956, 41.72, 0.3814", "269.45, 598.503, 41.72, 0.356", "269.653, 599.1, 41.72, 0.305", "269.959, 599.596, 41.72, 0.2796", "270.454, 599.901, 41.72, 0.305", "270.924, 600.232, 41.72, 0.3814", "271.357, 600.587, 41.7511, 0.4068", "271.777, 600.867, 42.0, 0.3814", "272.297, 601.147, 42.0, 0.305", "272.73, 601.515, 42.0, 0.2796", "273.212, 601.833, 42.0, 0.305", "273.595, 602.023, 42.28, 0.5084", "273.823, 602.481, 42.28, 0.5592", "273.874, 603.346, 42.56, 0.3304", "273.874, 604.146, 42.56, 0.2542", "273.874, 604.947, 42.56, 0.2288", "273.874, 605.735, 42.5911, 0.2288", "273.874, 606.32, 43.12, 0.2288", "274.026, 606.867, 43.3689, 0.2288", "274.293, 607.387, 43.4, 0.2288", "274.42, 607.604, 43.4, 0.2288", "274.585, 607.782, 43.4, 0.2288", "274.674, 608.036, 43.4, 0.2288", "274.674, 608.341, 43.4932, 0.2288", "274.674, 608.506, 43.6489, 0.2288", "274.674, 609.294, 43.68, 0.2288", "274.674, 610.057, 43.7732, 0.2542", "274.674, 610.782, 43.96, 0.2796", "274.674, 611.582, 43.96, 0.305", "274.674, 612.383, 43.96, 0.2796", "274.674, 613.184, 43.96, 0.2542", "274.751, 613.908, 43.96, 0.2288", "274.789, 614.671, 43.96, 0.2288", "274.789, 615.472, 43.96, 0.2288", "274.789, 616.273, 43.96, 0.2288", "274.789, 617.074, 43.96, 0.2288", "274.789, 617.874, 43.96, 0.2288", "274.789, 618.675, 43.96, 0.2288", "274.789, 619.476, 43.96, 0.2288", "274.789, 620.277, 43.96, 0.2288", "274.789, 621.078, 43.96, 0.2288", "274.789, 621.878, 43.96, 0.2288", "274.789, 622.222, 43.96, 0.2288", "274.776, 622.552, 43.96, 0.2288", "274.61, 622.729, 43.96, 0.2288", "274.483, 622.946, 43.96, 0.2288", "274.331, 623.251, 43.96, 0.2796", "272.532, 626.549, 48.116, 0.5084", "272.191, 628.979, 49.4908, 0.5592", "268.855, 635.112, 52.2404, 0.5084", "268.623, 637.285, 52.2404, 0.4068", "269.031, 642.804, 53.615, 0.305", "270.228, 645.733, 53.615, 0.2542", "272.104, 648.104, 53.615, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "287.717, 537.002, 25.2003, 0.9152", "288.592, 537.591, 26.1201, 0.5848", "289.538, 538.468, 26.1201, 0.6356", "291.03, 540.672, 24.7453, 0.6864", "291.942, 542.011, 24.7453, 0.6864", "296.687, 544.605, 21.996, 0.6102", "300.167, 546.679, 19.9338, 0.5338", "301.314, 546.944, 19.9338, 0.4576", "301.936, 547.3, 19.9338, 0.4322", "301.921, 548.188, 19.9338, 0.5084", "301.711, 549.211, 19.9338, 0.5848", "303.127, 550.87, 18.559, 0.6356", "304.175, 551.721, 18.559, 0.5592", "305.35, 554.996, 19.2464, 0.5338", "307.983, 559.383, 19.2464, 0.4576", "309.746, 563.117, 17.8716, 0.4068", "309.719, 566.242, 16.497, 0.305", "308.985, 567.708, 16.497, 0.2542", "308.615, 568.637, 16.497, 0.2796", "308.103, 570.248, 16.497, 0.3814", "308.031, 571.291, 16.497, 0.5338", "308.465, 572.125, 16.497, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "287.717, 537.002, 25.2003, 0.9152", "288.86, 537.045, 25.2017, 0.8644", "290.041, 537.31, 25.2146, 0.9406", "291.147, 537.162, 25.2868, 0.9914", "292.365, 537.03, 25.975, 0.966", "293.378, 537.196, 27.1435, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "277.29, 526.036, 30.7387, 0.6864", "278.317, 526.775, 31.9189, 0.8644", "279.209, 527.47, 31.9138, 0.8644", "280.166, 528.077, 31.8746, 0.8136", "281.01, 528.799, 31.4437, 0.788", "281.599, 529.716, 30.7933, 0.7372", "282.338, 530.587, 30.77, 0.7372", "282.979, 531.531, 30.6328, 0.788", "283.727, 532.326, 29.92, 0.8898", "284.517, 533.144, 29.687, 0.9152", "285.266, 534.008, 29.7105, 0.839", "285.66, 535.056, 29.8603, 0.7118", "285.753, 536.071, 30.945, 0.6864" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "277.29, 526.036, 30.7387, 0.6864", "278.255, 524.725, 29.913, 1.2202", "279.282, 522.744, 29.608, 1.4236" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "251.38, 564.958, 28.9702, 0.6864", "246.714, 566.55, 31.619, 0.6356", "245.474, 567.408, 32.9938, 0.5592", "244.435, 567.558, 32.9938, 0.4576", "243.855, 567.557, 32.9938, 0.4576", "243.181, 567.672, 32.9938, 0.4068", "238.102, 567.866, 35.056, 0.4322", "233.951, 567.935, 35.056, 0.4322", "228.791, 567.402, 36.4308, 0.4576", "227.073, 566.919, 37.1182, 0.4576" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "251.38, 564.958, 28.9702, 0.6864", "250.355, 565.381, 28.3702, 0.5338", "249.324, 565.772, 28.3847, 0.5592", "248.708, 566.718, 28.5586, 0.5848", "248.139, 567.851, 28.548, 0.6102", "247.095, 568.269, 28.4757, 0.5848", "246.017, 568.543, 27.9989, 0.5084", "244.909, 568.528, 27.3756, 0.4068", "243.806, 568.351, 26.9657, 0.3814", "242.804, 568.75, 26.3799, 0.4576", "241.786, 569.262, 26.4292, 0.5592", "240.736, 569.075, 27.0108, 0.6102", "239.638, 569.037, 26.2662, 0.5848", "238.538, 569.098, 25.6018, 0.5338", "237.484, 569.449, 25.1174, 0.4322", "236.49, 569.973, 24.7299, 0.3304", "235.571, 570.594, 24.1483, 0.2542", "234.688, 571.318, 24.0803, 0.2542", "233.632, 571.596, 24.0822, 0.305", "232.547, 571.796, 24.0929, 0.4068", "231.633, 572.482, 24.1394, 0.4576", "230.535, 572.69, 24.5123, 0.4576", "229.415, 572.706, 24.934, 0.4068", "228.327, 572.812, 24.192, 0.3814", "227.348, 573.358, 24.2376, 0.3814", "226.626, 574.059, 25.2, 0.3304", "218.963, 577.768, 22.6834, 0.2542", "215.678, 578.666, 20.6212, 0.2796", "212.443, 578.344, 20.6212, 0.3304", "210.798, 578.647, 20.6212, 0.356", "208.706, 578.223, 20.6212, 0.3814", "205.96, 578.353, 21.3086, 0.3814", "205.507, 578.843, 21.3086, 0.4322", "203.931, 579.906, 21.3086, 0.483", "202.478, 580.714, 22.6834, 0.5084", "198.458, 584.117, 23.3708, 0.2288" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "264.191, 542.731, 35.8739, 0.9152", "264.032, 543.74, 36.3726, 0.7626", "263.424, 544.697, 36.1883, 0.7372", "263.21, 545.707, 36.4773, 0.7118", "263.099, 546.603, 38.1716, 0.6864", "262.261, 547.143, 38.7276, 0.5848", "261.275, 547.487, 39.7586, 0.5084", "260.292, 548.014, 40.2721, 0.4576", "259.457, 548.723, 40.8946, 0.5084", "258.582, 549.453, 41.0889, 0.5338", "257.796, 550.174, 41.9947, 0.5592", "256.957, 550.732, 43.162, 0.483", "255.909, 551.021, 43.2118, 0.483", "255.432, 552.008, 43.1491, 0.5084", "255.207, 553.113, 43.3342, 0.5592", "254.541, 553.936, 44.2677, 0.5592", "253.814, 554.738, 45.1066, 0.5338", "253.182, 555.679, 45.3023, 0.5848", "252.411, 556.518, 45.1027, 0.6356", "251.665, 557.31, 44.3226, 0.6864", "250.97, 558.209, 44.2313, 0.7118", "250.496, 559.244, 44.1896, 0.7372", "249.759, 560.113, 44.0042, 0.7626", "249.127, 560.983, 43.2001, 0.7372", "248.739, 562.053, 43.1175, 0.7118", "248.238, 563.078, 43.1068, 0.6864", "247.789, 564.126, 43.0357, 0.6356", "247.573, 565.219, 42.5438, 0.5592", "247.214, 566.273, 42.002, 0.483", "246.882, 567.365, 41.9997, 0.5338", "246.758, 568.497, 41.9975, 0.6356", "246.742, 569.641, 41.9812, 0.7372", "246.649, 570.778, 41.8732, 0.7118", "246.285, 571.819, 41.2513, 0.661", "245.954, 572.896, 40.8778, 0.6102", "245.825, 574.028, 40.8663, 0.5848", "245.66, 575.151, 40.7691, 0.5084", "245.846, 575.89, 39.76, 0.2288" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "264.191, 542.731, 35.8739, 0.9152", "263.915, 541.148, 36.386, 0.7626", "263.063, 540.414, 36.3062, 0.8644", "262.206, 539.739, 35.7515, 0.8898", "261.482, 538.871, 35.4354, 0.8644", "260.616, 538.27, 36.1892, 0.7372", "259.56, 537.853, 36.3997, 0.6356", "258.558, 537.324, 36.3983, 0.5592", "257.71, 536.555, 36.3933, 0.5592", "256.819, 535.84, 36.3706, 0.6356", "255.705, 535.678, 36.2026, 0.6864", "254.657, 535.964, 35.4864, 0.6864", "253.645, 536.472, 35.3388, 0.5592", "252.524, 536.495, 35.7291, 0.4576", "251.45, 536.266, 36.3364, 0.3814", "250.356, 535.964, 36.104, 0.4576" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "293.378, 537.196, 27.1435, 0.6864", "294.841, 537.14, 25.1656, 0.7372", "295.883, 536.822, 24.3796, 0.7626", "296.926, 536.388, 24.0758, 0.7626", "297.802, 535.681, 24.0509, 0.788", "298.82, 535.477, 23.8938, 0.839", "299.844, 535.918, 23.3554, 0.8136", "300.936, 536.104, 24.0036, 0.6864", "302.06, 536.266, 24.0775, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "293.378, 537.196, 27.1435, 0.6864", "293.961, 537.727, 26.7459, 0.966", "294.695, 538.469, 25.6752, 0.9914", "295.525, 539.195, 24.9844, 0.9152", "296.151, 540.098, 24.2642, 0.788", "296.906, 540.951, 24.08, 0.7118", "297.667, 541.804, 24.08, 0.6864", "298.189, 542.812, 24.0806, 0.6864" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_36",
    "id" : "apic_36",
    "points3d" : [ "285.753, 536.071, 30.945, 0.6864", "286.34, 539.246, 30.9319, 0.6102", "287.203, 539.87, 30.9319, 0.6102", "288.517, 539.993, 30.9319, 0.6102", "289.963, 541.703, 30.9319, 0.6356", "292.935, 544.658, 30.9319, 0.661", "294.721, 546.023, 30.9319, 0.6356", "298.513, 549.139, 31.619, 0.5592", "301.73, 551.687, 31.619, 0.483", "303.082, 553.401, 31.619, 0.5084", "306.726, 555.262, 30.2445, 0.5338", "309.898, 556.644, 30.2445, 0.5848", "313.97, 559.175, 28.8697, 0.6102", "315.667, 561.967, 28.1823, 0.6356", "318.674, 566.087, 27.4949, 0.6356", "320.273, 569.775, 28.8697, 0.6102", "321.51, 570.583, 28.8697, 0.6102", "322.879, 570.866, 28.8697, 0.6102", "325.183, 572.309, 28.1823, 0.5848", "325.896, 572.984, 28.1823, 0.5848", "325.865, 573.62, 28.1823, 0.5848", "325.43, 574.82, 28.1823, 0.5592", "325.769, 575.529, 28.1823, 0.5338", "327.08, 576.545, 27.4949, 0.5084", "327.385, 577.892, 27.4949, 0.5338", "327.838, 578.448, 27.4949, 0.483", "330.454, 580.492, 26.8075, 0.4068", "332.99, 580.566, 26.1201, 0.3814", "334.227, 581.32, 26.1201, 0.4068", "335.19, 582.273, 26.1201, 0.483", "337.231, 582.64, 25.4327, 0.4576", "338.56, 582.655, 25.4327, 0.4322", "341.738, 583.183, 24.0582, 0.3304", "344.625, 583.487, 23.3708, 0.305", "347.067, 583.078, 22.6834, 0.2796", "351.066, 581.361, 21.996, 0.305", "353.721, 580.913, 21.3086, 0.3304", "355.584, 581.429, 20.6212, 0.4068", "356.615, 581.006, 20.6212, 0.6864" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "285.753, 536.071, 30.945, 0.6864", "286.188, 536.999, 31.9214, 0.7118", "286.603, 538.057, 31.9287, 0.7372", "286.985, 539.12, 31.9726, 0.788", "287.764, 539.949, 32.1516, 0.8136", "288.631, 540.62, 32.8748, 0.788", "289.258, 541.56, 33.1892, 0.6864", "289.732, 542.543, 33.8534, 0.5338", "289.781, 543.643, 34.5878, 0.4576", "289.812, 544.757, 34.7152, 0.4576", "290.026, 545.842, 35.0118, 0.5338", "290.574, 546.822, 35.4822, 0.6864" ],
    "parent" : "apic_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "279.282, 522.744, 29.608, 1.4236", "280.609, 521.447, 29.6736, 1.322", "281.33, 520.563, 29.7231, 1.0424", "282.314, 520.486, 30.0342, 0.7626", "282.786, 521.399, 31.0475, 0.5592", "282.54, 522.442, 31.8214, 0.5084", "282.179, 523.517, 31.9256, 0.5338", "282.371, 524.633, 31.9561, 0.5848", "282.173, 525.729, 32.1905, 0.6102", "281.556, 526.512, 33.4508, 0.6102", "281.025, 527.442, 34.1634, 0.6356", "280.525, 528.462, 34.1796, 0.6864", "279.945, 529.443, 34.2706, 0.7118", "279.513, 530.428, 35.0132, 0.7118", "279.185, 531.497, 35.4368, 0.6864", "278.827, 532.492, 36.2835, 0.6356", "278.694, 533.625, 36.4, 0.5338", "278.335, 534.706, 36.4, 0.3814", "278.053, 536.365, 36.4308, 0.2542", "277.362, 537.895, 35.056, 0.305", "276.855, 538.666, 36.6624, 0.4068", "276.677, 539.66, 37.427, 0.4322", "276.906, 540.768, 37.5068, 0.4322", "276.568, 541.837, 37.5178, 0.5084", "276.139, 542.883, 37.5197, 0.5848", "275.972, 544.013, 37.52, 0.6864", "275.663, 545.108, 37.52, 0.6864", "275.799, 546.232, 37.5438, 0.661", "276.011, 547.32, 38.1049, 0.6102", "275.879, 548.428, 37.8568, 0.6864", "275.57, 549.425, 38.9116, 0.7626", "275.228, 550.464, 39.37, 0.8136", "275.147, 551.57, 38.7772, 0.7372", "275.224, 552.706, 38.6604, 0.6356", "275.481, 553.806, 38.6434, 0.5848", "275.224, 554.907, 38.8058, 0.6102", "275.148, 556.0, 39.5595, 0.7118", "275.134, 557.141, 39.7314, 0.788", "275.159, 558.283, 39.7555, 0.839", "275.465, 559.379, 39.7594, 0.788", "275.59, 560.461, 39.443, 0.7372", "275.543, 561.251, 39.3182, 0.661", "275.292, 562.325, 39.928, 0.6356", "275.373, 563.403, 40.5594, 0.661", "275.59, 564.483, 40.1442, 0.6356", "275.59, 565.612, 39.7816, 0.6356", "275.59, 566.755, 39.9036, 0.6102", "275.592, 567.854, 40.5936, 0.6356", "275.603, 568.989, 40.8335, 0.6864", "275.688, 570.117, 40.525, 0.6864", "276.071, 571.155, 40.3449, 0.6102", "276.554, 572.17, 40.7473, 0.483", "276.98, 573.192, 40.2041, 0.4322", "277.305, 574.262, 40.2576, 0.4576", "277.396, 575.351, 41.011, 0.5338", "277.142, 576.369, 41.8804, 0.6102", "276.97, 577.483, 42.203, 0.661", "277.01, 578.577, 42.9607, 0.7118", "277.252, 579.682, 43.1203, 0.7118", "277.161, 580.793, 43.1225, 0.7118", "276.855, 581.892, 43.1365, 0.6102", "276.712, 583.001, 43.2337, 0.5084", "276.809, 584.09, 43.862, 0.4068", "276.311, 585.075, 44.543, 0.4322", "276.387, 586.136, 45.2844, 0.5338", "276.518, 587.267, 45.3606, 0.5848", "276.601, 588.406, 45.3639, 0.5592", "276.994, 589.471, 45.3827, 0.4322", "277.499, 590.493, 45.4975, 0.356", "277.94, 591.47, 46.2683, 0.2796", "278.335, 592.363, 45.36, 0.2542", "278.106, 592.363, 47.04, 0.2288", "277.979, 592.579, 47.04, 0.2288", "277.776, 592.719, 47.04, 0.2288", "277.763, 593.05, 47.04, 0.2288", "277.763, 593.393, 47.04, 0.2288", "277.763, 593.622, 47.04, 0.2288", "277.763, 594.422, 47.04, 0.2288", "277.763, 595.223, 47.04, 0.2288", "277.687, 595.947, 47.04, 0.2288", "277.534, 596.596, 47.04, 0.2288", "277.395, 597.257, 47.04, 0.2288", "277.306, 597.969, 47.04, 0.2288", "277.191, 598.655, 47.04, 0.2288", "277.077, 599.342, 47.04, 0.2288", "276.962, 600.028, 47.04, 0.2288", "276.848, 600.714, 47.04, 0.2288", "276.746, 601.413, 47.04, 0.2288", "276.619, 602.087, 47.04, 0.2288", "276.543, 602.811, 47.04, 0.2288", "276.276, 603.346, 47.04, 0.2288", "276.174, 604.045, 47.04, 0.2288", "276.162, 604.833, 47.04, 0.2288", "276.162, 605.634, 47.04, 0.2288", "276.162, 606.434, 47.04, 0.2288", "276.162, 607.235, 47.04, 0.2288", "276.162, 608.036, 47.04, 0.2288", "276.162, 608.837, 47.04, 0.2288", "276.162, 609.638, 47.04, 0.2288", "276.162, 610.438, 47.04, 0.2288", "276.162, 611.239, 47.04, 0.2288", "276.162, 612.04, 47.04, 0.2288", "276.162, 612.841, 47.04, 0.2288", "276.162, 613.642, 47.04, 0.2288", "276.162, 614.442, 47.04, 0.2288", "276.162, 615.243, 47.04, 0.2288", "276.162, 616.044, 47.04, 0.2288", "276.162, 616.845, 47.04, 0.2288", "276.162, 617.646, 47.04, 0.2288", "276.199, 618.409, 47.04, 0.2288", "276.505, 618.904, 47.04, 0.2288", "276.771, 619.438, 47.04, 0.2288", "277.039, 619.971, 47.04, 0.2288", "277.42, 620.391, 47.04, 0.2288", "277.661, 620.951, 47.04, 0.2288", "277.725, 621.115, 47.04, 0.2288", "277.763, 621.306, 47.04, 0.2288", "277.89, 621.523, 47.04, 0.2288", "278.106, 621.535, 47.04, 0.2288", "278.503, 621.654, 47.4286, 0.3814", "279.165, 626.563, 48.8034, 0.4576", "280.503, 632.159, 48.8034, 0.4322", "281.938, 639.106, 48.8034, 0.4576", "283.522, 647.56, 50.1782, 0.483", "283.682, 651.761, 50.1782, 0.483", "286.541, 658.947, 51.553, 0.4068", "288.675, 662.203, 51.553, 0.3304", "291.41, 664.329, 51.553, 0.305", "294.03, 670.453, 54.9898, 0.2796", "295.478, 671.585, 54.9898, 0.2542", "299.209, 671.383, 55.6772, 0.2288", "305.852, 672.425, 55.6772, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "279.282, 522.744, 29.608, 1.4236", "280.869, 520.626, 28.5911, 1.5254" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "227.073, 566.919, 37.1182, 0.4576", "224.524, 569.559, 35.056, 0.3304", "223.825, 570.584, 35.056, 0.305", "223.224, 573.545, 31.619, 0.305", "221.99, 574.97, 31.619, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "227.073, 566.919, 37.1182, 0.4576", "225.395, 567.343, 37.1182, 0.4576", "224.546, 567.423, 37.1182, 0.5592", "223.499, 566.557, 37.1182, 0.6864" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "250.356, 535.964, 36.104, 0.4576", "243.234, 535.568, 35.7434, 0.5592", "239.135, 535.557, 35.7434, 0.5592", "237.84, 535.144, 35.7434, 0.5338", "235.867, 533.421, 35.7434, 0.4322", "233.558, 532.358, 35.7434, 0.3814", "226.168, 531.538, 37.1182, 0.356", "221.807, 531.626, 37.1182, 0.4322", "217.811, 531.874, 37.1182, 0.483", "213.798, 532.689, 38.493, 0.5848", "211.158, 533.969, 38.493, 0.6356", "205.698, 536.655, 39.8675, 0.6356", "204.687, 537.127, 39.8675, 0.5338", "204.185, 538.156, 39.8675, 0.3814", "203.268, 539.415, 41.2423, 0.305", "200.6, 540.979, 41.2423, 0.305", "199.015, 542.247, 41.9297, 0.356", "198.097, 542.953, 41.9297, 0.3814", "196.608, 542.707, 41.9297, 0.3814", "192.354, 541.503, 41.9297, 0.4322", "189.945, 540.784, 42.6171, 0.4576", "188.916, 541.258, 42.6171, 0.4576", "187.096, 541.101, 42.6171, 0.356", "184.88, 539.913, 42.6171, 0.2796", "179.02, 535.965, 43.9919, 0.2796", "177.829, 534.854, 43.9919, 0.3814", "176.243, 533.824, 43.9919, 0.483", "175.371, 533.586, 43.9919, 0.483", "172.01, 535.5, 46.0538, 0.3814", "170.418, 536.694, 46.0538, 0.305", "169.622, 536.853, 46.0538, 0.2796", "168.986, 536.932, 46.0538, 0.3304", "165.014, 535.915, 48.8034, 0.3304", "164.774, 535.195, 48.8034, 0.3304", "164.694, 533.357, 48.8034, 0.2796", "166.517, 531.277, 49.4908, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "250.356, 535.964, 36.104, 0.4576", "249.85, 535.304, 34.5075, 0.5338", "249.365, 534.302, 34.1678, 0.4322", "248.633, 533.424, 34.195, 0.3814", "247.758, 532.691, 34.3022, 0.3814", "246.691, 532.404, 34.5374, 0.4576", "245.566, 532.316, 34.8594, 0.5338", "244.547, 531.967, 34.1706, 0.5848", "243.404, 531.943, 34.0726, 0.5848", "242.295, 531.859, 33.5493, 0.5592", "241.228, 531.532, 33.0411, 0.5084", "240.094, 531.393, 33.0484, 0.5338", "239.031, 530.987, 33.0882, 0.5338", "237.994, 530.537, 33.3502, 0.5848", "237.015, 530.047, 33.598, 0.5592", "236.09, 529.432, 33.8173, 0.5592", "235.164, 528.775, 33.9508, 0.5338", "234.284, 528.156, 33.1428, 0.483", "233.288, 527.609, 33.04, 0.4322", "232.303, 527.035, 33.0397, 0.4068", "231.415, 526.314, 33.0389, 0.4576", "230.474, 525.67, 33.0344, 0.5592", "229.574, 524.963, 33.0151, 0.6102", "228.583, 524.407, 32.9241, 0.661", "227.496, 524.166, 32.779, 0.6102", "226.362, 524.084, 33.0445, 0.6102", "225.282, 523.723, 33.0672, 0.5592", "224.198, 523.379, 33.2128, 0.5338", "223.117, 523.172, 33.8988, 0.4576", "222.032, 522.85, 33.9018, 0.4068", "220.929, 522.76, 33.3071, 0.4322", "219.872, 522.508, 33.9696, 0.4576", "218.831, 522.053, 34.16, 0.5084", "217.703, 521.893, 34.16, 0.5084", "216.559, 521.893, 34.16, 0.6102", "215.415, 521.893, 34.16, 0.6864", "213.942, 521.54, 34.1569, 0.788", "212.838, 521.779, 34.139, 0.788", "211.706, 521.76, 34.0211, 0.7372", "210.647, 521.448, 33.4191, 0.7118", "209.543, 521.333, 33.6843, 0.661", "208.47, 521.022, 34.16, 0.6356", "207.328, 520.996, 34.16, 0.6102", "206.191, 521.098, 34.16, 0.6356", "205.078, 521.293, 34.16, 0.6864", "204.031, 520.863, 34.16, 0.7626", "203.104, 520.197, 34.16, 0.8136", "202.179, 519.527, 34.16, 0.8136", "201.496, 518.62, 34.16, 0.7372", "200.817, 517.701, 34.16, 0.661", "200.064, 516.858, 34.16, 0.6102", "199.119, 516.214, 34.16, 0.6356", "198.136, 515.63, 34.16, 0.661", "197.14, 515.076, 34.16, 0.6864", "196.162, 514.492, 34.16, 0.661", "195.086, 514.132, 34.16, 0.6356", "193.947, 514.044, 34.1597, 0.5848", "192.872, 513.69, 34.1586, 0.5592", "191.864, 513.156, 34.1513, 0.5084", "190.939, 512.493, 34.1172, 0.4576", "190.122, 511.694, 33.9721, 0.3814", "189.371, 510.9, 33.2727, 0.356", "188.548, 510.176, 33.7182, 0.4068", "187.56, 509.669, 33.1996, 0.5084", "186.533, 509.182, 33.04, 0.5848", "185.47, 508.769, 33.0408, 0.5848", "184.54, 508.105, 33.0436, 0.5848", "183.487, 507.723, 33.0607, 0.5592", "182.346, 507.74, 33.1808, 0.5592", "181.258, 507.936, 33.7366, 0.5084", "180.166, 508.165, 33.3049, 0.483", "179.064, 508.165, 33.8808, 0.4576", "177.931, 508.167, 34.1625, 0.483", "176.787, 508.182, 34.1785, 0.5084", "175.648, 508.27, 34.2826, 0.5592", "174.588, 508.58, 34.8779, 0.5848", "173.469, 508.606, 34.8228, 0.6356", "172.361, 508.524, 34.8911, 0.6356", "171.265, 508.39, 35.1974, 0.6102", "170.173, 508.617, 34.7158, 0.5084", "169.053, 508.621, 34.8331, 0.4576", "167.946, 508.611, 34.4285, 0.4322", "166.854, 508.553, 35.1711, 0.483", "165.767, 508.23, 35.28, 0.483", "164.678, 507.889, 35.28, 0.4576", "163.559, 507.672, 35.28, 0.3814", "162.445, 507.46, 35.28, 0.305", "161.326, 507.26, 35.28, 0.2542", "160.184, 507.32, 35.28, 0.2288", "159.13, 507.707, 35.28, 0.2288", "158.787, 507.822, 33.6, 0.2288", "157.986, 507.822, 33.6, 0.2288", "157.186, 507.822, 33.6, 0.2542", "156.385, 507.822, 33.6, 0.305", "155.775, 507.631, 33.6, 0.356", "155.203, 507.402, 33.6, 0.356", "154.631, 507.173, 33.6, 0.305", "153.945, 507.059, 33.6, 0.2542" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "302.06, 536.266, 24.0775, 0.2288", "302.27, 536.282, 25.2, 0.5848", "302.893, 536.688, 25.2, 0.6102", "303.732, 536.879, 25.2, 0.356", "304.075, 536.879, 25.2, 0.356", "304.533, 537.108, 25.2, 0.6102", "305.219, 537.794, 25.2, 0.9152", "306.058, 538.557, 25.2, 0.5592", "306.554, 538.862, 25.2, 0.356", "307.05, 539.053, 25.2, 0.305", "307.278, 539.498, 25.2311, 0.4322", "307.355, 539.891, 25.48, 0.5338", "307.545, 540.388, 25.48, 0.6356", "308.333, 540.972, 25.48, 0.6864", "308.994, 541.913, 25.48, 0.966", "309.884, 542.624, 25.48, 1.0168", "310.596, 543.171, 25.76, 0.839", "310.863, 543.82, 26.04, 0.7372", "311.409, 544.875, 26.04, 0.7626", "311.651, 545.434, 26.04, 0.7372", "311.74, 546.489, 27.16, 0.7118", "312.248, 547.481, 27.4089, 0.839", "312.859, 548.23, 28.0, 0.9914", "313.227, 549.006, 28.56, 0.6102", "313.227, 549.921, 28.84, 0.5848", "313.329, 550.468, 29.2132, 0.7118", "313.824, 551.383, 29.68, 0.9152", "314.523, 552.171, 29.96, 1.0678", "315.515, 552.438, 30.24, 0.9914", "316.43, 552.552, 30.24, 0.8136", "317.04, 552.972, 30.24, 0.5592", "317.676, 553.709, 30.24, 0.6864", "318.477, 554.509, 30.24, 0.7118", "319.29, 555.298, 30.24, 0.7626", "320.002, 556.188, 30.24, 0.788", "320.46, 556.874, 30.24, 0.8136", "321.006, 557.242, 30.24, 0.5848", "321.121, 557.7, 31.08, 0.661", "322.061, 558.476, 31.08, 0.7372", "323.001, 559.137, 31.08, 0.6356", "323.409, 559.53, 31.08, 0.5338", "323.841, 559.899, 31.08, 0.4322", "324.311, 560.115, 31.08, 0.4322", "324.553, 560.217, 31.08, 0.5084", "325.087, 561.055, 31.08, 0.6864", "325.595, 562.149, 31.08, 0.5592", "326.027, 562.517, 31.08, 0.5848", "326.294, 563.052, 31.08, 0.661", "326.574, 563.572, 31.08, 0.6864", "327.095, 564.424, 31.64, 0.6102", "327.324, 564.882, 31.92, 0.6102", "327.413, 565.556, 32.0132, 0.5338", "327.706, 565.987, 32.2, 0.5084", "328.074, 566.42, 32.2, 0.4576", "328.303, 566.877, 32.48, 0.5084", "328.646, 567.233, 32.7289, 0.6356", "329.205, 567.424, 32.8532, 0.7626", "330.133, 568.021, 33.04, 0.7626", "330.959, 568.606, 33.5068, 0.6864", "331.849, 569.127, 33.9732, 0.6864", "333.018, 569.369, 34.44, 0.6356", "333.705, 569.369, 34.72, 0.6102", "334.315, 569.483, 34.9068, 0.661", "334.785, 569.674, 35.2489, 0.6864", "335.371, 569.839, 35.3732, 0.6864", "336.413, 570.322, 35.56, 0.5338", "336.908, 570.627, 35.56, 0.4576", "337.455, 570.881, 35.56, 0.356", "338.039, 571.097, 35.56, 0.305", "338.624, 571.314, 35.56, 0.2796", "339.082, 571.657, 35.56, 0.305", "339.539, 572.0, 35.56, 0.2796", "339.972, 572.368, 35.56, 0.2796", "340.34, 572.801, 35.56, 0.3304", "340.696, 573.246, 35.56, 0.4576", "340.95, 573.793, 35.56, 0.6102", "341.179, 574.365, 35.56, 0.7372", "341.713, 574.86, 35.56, 0.9152", "342.476, 575.813, 35.56, 0.5848", "342.819, 576.271, 35.56, 0.483", "343.175, 576.678, 35.4668, 0.483", "343.556, 576.907, 35.0, 0.483", "343.874, 577.071, 34.2222, 0.4576", "344.331, 577.161, 33.88, 0.3814", "344.712, 577.466, 33.88, 0.4576", "345.157, 577.949, 33.6311, 0.4068", "345.526, 578.292, 33.4132, 0.4068", "346.022, 578.444, 33.04, 0.3814", "346.441, 578.826, 33.04, 0.4322", "347.039, 579.029, 33.04, 0.4068", "347.471, 579.398, 33.04, 0.4322", "347.674, 579.881, 33.04, 0.3814", "348.221, 580.021, 33.04, 0.305", "348.793, 580.478, 33.04, 0.5084", "349.225, 580.847, 33.04, 0.5592", "349.708, 581.165, 33.04, 0.5338", "350.0, 581.674, 33.04, 0.5338", "350.407, 582.067, 33.04, 0.6102", "350.877, 582.398, 33.04, 0.7372", "351.64, 583.236, 33.04, 0.7626", "352.314, 584.164, 33.04, 0.6864", "352.949, 585.131, 33.04, 0.6864" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "302.06, 536.266, 24.0775, 0.2288", "303.141, 536.053, 24.0638, 0.6102", "304.161, 535.559, 23.9862, 0.7626", "305.211, 535.188, 23.4878, 0.788", "306.268, 534.823, 23.0283, 0.7118", "307.273, 534.399, 23.583, 0.5848", "308.271, 533.915, 24.0232, 0.5338", "309.397, 533.862, 23.7188, 0.5084", "309.223, 533.79, 21.84, 0.5338", "310.024, 533.79, 21.84, 0.5592", "310.825, 533.79, 21.84, 0.5592", "311.626, 533.79, 21.84, 0.6356", "312.426, 533.79, 21.84, 0.6102", "313.227, 533.79, 21.84, 0.5848", "314.028, 533.79, 21.84, 0.4068", "314.829, 533.79, 21.84, 0.305", "315.63, 533.79, 21.84, 0.305", "316.43, 533.79, 21.84, 0.4068", "317.231, 533.79, 21.84, 0.5338", "317.892, 533.651, 21.84, 0.6356", "319.074, 533.231, 21.84, 1.0932" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "298.189, 542.812, 24.0806, 0.6864", "298.28, 548.264, 24.7453, 0.6864", "297.409, 551.811, 26.1201, 0.6864", "296.183, 555.928, 26.1201, 0.661", "295.851, 560.532, 26.8075, 0.5592", "295.586, 564.157, 26.8075, 0.483", "295.097, 572.746, 28.1823, 0.4068", "294.071, 577.21, 28.8697, 0.4068", "292.979, 580.762, 29.5571, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "298.189, 542.812, 24.0806, 0.6864", "298.889, 543.703, 24.0825, 0.839", "299.842, 544.331, 24.0923, 0.9152" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_42",
    "id" : "apic_42",
    "points3d" : [ "356.615, 581.006, 20.6212, 0.6864", "357.561, 580.041, 20.6212, 0.3814", "358.329, 578.492, 20.6212, 0.2796", "358.48, 577.6, 20.6212, 0.2288", "359.915, 575.974, 19.9338, 0.2288" ],
    "parent" : "apic_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_37",
    "id" : "apic_37",
    "points3d" : [ "356.615, 581.006, 20.6212, 0.6864", "358.416, 580.446, 19.9338, 0.3814", "359.882, 580.895, 19.9338, 0.2796", "361.92, 580.25, 19.9338, 0.2288" ],
    "parent" : "apic_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_31",
    "id" : "apic_31",
    "points3d" : [ "290.574, 546.822, 35.4822, 0.6864", "290.8, 547.889, 36.2239, 0.483", "291.165, 548.964, 36.4034, 0.483", "291.466, 550.065, 36.4221, 0.483", "291.339, 551.174, 36.5392, 0.5338", "291.324, 552.255, 37.2159, 0.483", "291.6, 553.348, 37.5194, 0.2288" ],
    "parent" : "apic_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "290.574, 546.822, 35.4822, 0.6864", "290.944, 545.942, 36.12, 0.4576", "291.262, 545.459, 36.12, 0.3304", "291.568, 544.964, 36.12, 0.2542", "291.898, 544.494, 36.12, 0.2288", "292.356, 544.151, 36.12, 0.2288", "292.787, 543.781, 36.12, 0.2542", "293.22, 543.413, 36.12, 0.2796", "293.576, 542.968, 36.12, 0.305", "293.894, 542.485, 36.12, 0.305", "294.401, 542.192, 36.12, 0.3304", "294.898, 541.888, 36.12, 0.4068", "295.304, 541.493, 36.12, 0.5084", "295.915, 541.074, 36.12, 0.4576", "296.08, 540.667, 36.12, 0.2796", "296.346, 540.133, 36.12, 0.305", "296.677, 539.663, 36.12, 0.4068", "297.097, 539.282, 36.12, 0.4576", "297.427, 538.811, 36.12, 0.4576", "297.605, 538.188, 36.12, 0.356", "298.012, 537.794, 36.12, 0.2796", "298.457, 537.439, 36.12, 0.2288", "298.686, 536.867, 36.12, 0.2288", "298.94, 536.32, 36.12, 0.2796", "299.054, 535.633, 36.12, 0.3814", "299.169, 534.947, 36.12, 0.5084", "299.27, 534.248, 36.12, 0.5848", "299.499, 533.676, 36.12, 0.6102", "299.957, 532.99, 36.12, 0.5084", "300.109, 532.455, 36.12, 0.2796", "300.338, 532.341, 36.12, 0.2288", "300.783, 531.756, 36.12, 0.2796", "301.088, 531.261, 36.12, 0.3814", "301.469, 530.841, 36.12, 0.483", "301.876, 530.448, 36.12, 0.483", "302.207, 529.977, 36.12, 0.4322", "302.511, 529.481, 36.12, 0.3814", "302.804, 528.973, 36.12, 0.3814", "303.02, 528.388, 36.12, 0.3814", "303.351, 527.918, 36.12, 0.4068", "303.732, 527.498, 36.12, 0.483", "304.444, 526.608, 36.12, 0.661", "305.105, 525.668, 36.12, 0.5338", "305.435, 525.198, 36.12, 0.4322", "305.753, 524.715, 36.12, 0.4322", "306.007, 524.168, 36.12, 0.483", "306.287, 523.647, 36.12, 0.5338", "306.49, 523.049, 36.12, 0.483", "306.744, 522.503, 36.12, 0.4068", "306.973, 521.931, 36.12, 0.3304", "307.266, 521.423, 36.12, 0.3304", "307.507, 520.863, 36.12, 0.356", "307.507, 520.52, 36.12, 0.2542", "307.507, 520.291, 36.12, 0.2288", "307.572, 516.281, 39.1801, 0.5338", "307.557, 514.086, 39.1801, 0.5848", "307.296, 512.628, 39.8675, 0.5592", "307.912, 512.01, 39.8675, 0.6102", "308.53, 512.01, 39.8675, 0.661", "309.641, 511.282, 41.2423, 0.6864", "310.466, 510.147, 41.2423, 0.6356", "311.397, 506.815, 43.3045, 0.5084", "312.971, 503.175, 44.6793, 0.2288" ],
    "parent" : "apic_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "280.869, 520.626, 28.5911, 1.5254", "281.549, 519.137, 28.56, 1.1948", "282.356, 518.328, 28.5611, 1.0932", "283.165, 517.518, 28.5648, 1.0168", "283.97, 516.706, 28.579, 0.9914", "284.766, 515.885, 28.6334, 0.9406", "285.52, 515.029, 28.8403, 0.966", "286.063, 514.077, 29.6089, 1.0424", "286.667, 513.121, 29.9032, 1.0932", "287.354, 512.314, 30.8487, 1.0932", "287.937, 511.418, 31.759, 1.0932", "288.675, 510.549, 31.8816, 1.144" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "280.869, 520.626, 28.5911, 1.5254", "280.831, 518.446, 28.67, 0.8644", "280.278, 517.525, 29.3815, 0.6864", "279.34, 516.911, 29.554, 0.6864", "278.269, 516.669, 28.9117, 0.788", "277.275, 516.137, 28.5194, 0.839", "276.401, 515.404, 28.3679, 0.8136", "275.582, 514.691, 27.5979, 0.788", "274.591, 514.135, 27.433, 0.7372", "273.637, 513.514, 27.4039, 0.7118", "272.784, 512.753, 27.2896, 0.661", "271.88, 512.119, 26.7162, 0.6356", "270.94, 511.483, 26.5023, 0.6102", "270.0, 510.969, 27.3316, 0.6102", "269.015, 510.396, 27.4487, 0.6102", "267.957, 510.007, 27.491, 0.6102", "266.824, 509.962, 27.7796, 0.6356", "265.751, 509.771, 28.4978, 0.661", "264.667, 509.418, 28.56, 0.6864", "263.612, 508.979, 28.56, 0.6864", "262.53, 508.645, 28.56, 0.6864", "261.387, 508.618, 28.56, 0.7118", "260.244, 508.588, 28.56, 0.7626", "259.116, 508.412, 28.56, 0.9152" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "223.499, 566.557, 37.1182, 0.6864", "224.534, 561.532, 37.8056, 0.356", "225.053, 558.409, 40.5549, 0.305", "224.866, 549.745, 45.3667, 0.305", "225.207, 545.299, 47.4286, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "223.499, 566.557, 37.1182, 0.6864", "222.095, 566.473, 37.1182, 0.5592", "216.602, 564.041, 37.8056, 0.7626", "215.444, 563.182, 37.8056, 0.9406", "214.858, 562.108, 37.8056, 0.9914", "212.035, 558.633, 38.493, 0.9152", "208.192, 555.907, 39.8675, 0.7372", "206.248, 554.402, 40.5549, 0.5592", "202.361, 553.877, 41.9297, 0.4068", "198.967, 553.157, 41.9297, 0.3304", "194.319, 552.661, 41.9297, 0.305", "184.316, 552.084, 43.3045, 0.305", "182.275, 551.943, 43.3045, 0.356", "180.018, 552.475, 42.6171, 0.4322", "178.176, 552.948, 43.9919, 0.483", "174.515, 554.083, 45.3667, 0.4322", "173.961, 553.474, 45.3667, 0.2542", "172.418, 550.897, 46.7412, 0.2542", "170.28, 549.628, 48.8034, 0.305", "166.492, 547.958, 50.1782, 0.356", "162.263, 546.485, 50.8656, 0.356", "158.648, 544.709, 50.8656, 0.305", "157.942, 543.717, 50.8656, 0.2542", "158.577, 542.767, 50.8656, 0.2288", "158.364, 541.673, 50.8656, 0.2288", "157.31, 540.545, 50.8656, 0.2288", "155.505, 538.537, 50.8656, 0.2288", "154.669, 538.138, 50.68, 0.2288", "153.868, 538.138, 50.68, 0.2288", "153.525, 538.138, 50.68, 0.2288", "153.182, 538.138, 50.68, 0.2288", "152.889, 538.087, 50.68, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "352.949, 585.131, 33.04, 0.6864", "353.463, 585.646, 32.9938, 0.6102", "354.159, 586.115, 33.6812, 0.4322", "355.329, 586.493, 33.6812, 0.305", "355.61, 585.622, 33.6812, 0.2288", "357.608, 581.118, 37.1182, 0.2288", "358.952, 579.126, 37.1182, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "352.949, 585.131, 33.04, 0.6864", "353.267, 585.728, 33.04, 0.6864" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "319.074, 533.231, 21.84, 1.0932", "319.655, 532.676, 21.996, 0.7372", "322.153, 532.881, 20.6212, 0.5338", "323.073, 533.614, 20.6212, 0.356", "323.922, 533.375, 20.6212, 0.2796", "329.29, 530.79, 18.559, 0.305", "332.589, 529.266, 18.559, 0.3814", "333.69, 528.204, 18.559, 0.4068", "334.916, 526.883, 18.559, 0.3814", "338.321, 526.799, 16.497, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "319.074, 533.231, 21.84, 1.0932", "324.976, 529.304, 20.6212, 0.788", "331.029, 524.367, 21.3086, 0.7626", "331.68, 524.061, 21.3086, 0.7626", "332.918, 523.642, 21.3086, 0.6864" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "292.979, 580.762, 29.5571, 0.2288", "292.978, 580.938, 29.5571, 0.2288", "302.5, 584.306, 29.5571, 0.2288", "310.645, 583.451, 29.5571, 0.2288", "315.093, 583.832, 29.5571, 0.2288", "318.812, 585.164, 29.5571, 0.2542", "327.371, 585.648, 32.3064, 0.2796", "331.716, 586.214, 32.3064, 0.305", "341.527, 589.551, 30.2445, 0.2796", "348.934, 594.445, 29.5571, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "292.979, 580.762, 29.5571, 0.2288", "289.409, 588.794, 29.5571, 0.305", "287.586, 594.094, 29.5571, 0.2796", "288.097, 601.679, 28.8697, 0.2542", "288.923, 604.237, 30.2445, 0.2288", "286.562, 606.151, 30.2445, 0.2288", "285.987, 607.811, 30.2445, 0.2288", "287.327, 611.065, 30.2445, 0.2288", "288.477, 613.044, 30.2445, 0.2288", "290.137, 614.095, 30.9319, 0.2542", "290.583, 614.925, 30.9319, 0.305", "290.968, 616.785, 31.619, 0.356", "288.791, 622.699, 32.9938, 0.356", "288.708, 622.641, 33.6, 0.356", "288.415, 623.035, 33.6, 0.4322", "288.402, 623.366, 33.6, 0.4068", "288.402, 624.395, 33.6, 0.2542", "288.402, 625.196, 33.6, 0.2288", "288.402, 625.997, 33.6, 0.2288", "288.402, 626.798, 33.6, 0.2288", "288.402, 627.598, 33.6, 0.2288", "288.402, 628.399, 33.6, 0.2288", "288.453, 629.15, 33.6, 0.2288", "288.631, 629.772, 33.6, 0.2288", "288.631, 630.573, 33.6, 0.2288", "288.631, 631.374, 33.6, 0.2288", "288.631, 632.174, 33.6, 0.2542", "288.631, 632.975, 33.6, 0.305", "288.708, 633.699, 33.6, 0.356", "289.039, 634.169, 33.6, 0.3814", "289.318, 634.691, 33.6, 0.356", "289.482, 635.327, 33.6, 0.3304", "289.661, 635.95, 33.6, 0.3304", "289.661, 636.75, 33.6, 0.3814", "289.711, 637.386, 33.32, 0.4576", "289.89, 637.716, 32.8843, 0.4576", "289.89, 638.352, 32.76, 0.305", "289.89, 638.581, 32.76, 0.2542", "289.89, 639.267, 32.48, 0.2542", "289.89, 640.068, 32.48, 0.305", "289.89, 640.869, 32.48, 0.356", "289.89, 641.453, 31.9511, 0.356", "289.89, 642.0, 31.6089, 0.2542", "289.89, 642.127, 31.08, 0.2288", "289.89, 642.254, 30.5511, 0.2288", "289.89, 642.623, 30.0532, 0.2288", "289.89, 642.928, 29.96, 0.2288", "289.89, 643.157, 29.96, 0.2288", "289.89, 643.386, 29.96, 0.2288", "289.813, 643.652, 29.96, 0.2288", "289.648, 643.831, 29.96, 0.2288", "289.318, 643.843, 29.96, 0.2288", "288.758, 643.856, 29.96, 0.305", "288.517, 644.301, 29.96, 0.305", "288.288, 644.644, 29.96, 0.2796", "288.072, 645.229, 29.96, 0.2542", "287.932, 645.89, 29.96, 0.2288", "287.564, 646.322, 29.96, 0.2288", "287.144, 646.703, 29.96, 0.2288", "286.763, 647.009, 29.96, 0.356", "286.686, 647.275, 29.96, 0.4576", "286.267, 648.228, 29.96, 0.5848", "285.975, 648.61, 29.9911, 0.4576", "285.886, 648.889, 30.7689, 0.2542", "285.721, 649.284, 30.8, 0.2288", "285.555, 649.461, 30.8, 0.2288", "285.314, 650.135, 30.8, 0.2288", "285.314, 650.936, 30.8, 0.2288", "285.314, 651.737, 30.8, 0.2288", "285.301, 652.067, 30.8, 0.2288", "285.123, 652.423, 30.4268, 0.3304", "284.742, 652.766, 29.96, 0.3304", "284.589, 653.072, 29.96, 0.2288", "284.284, 653.567, 29.96, 0.2288", "284.017, 654.101, 29.96, 0.2288", "283.648, 654.533, 29.96, 0.2288", "283.369, 655.054, 29.96, 0.2288", "283.038, 655.525, 29.96, 0.2288", "283.026, 655.855, 29.96, 0.2542", "282.695, 656.211, 29.96, 0.4322", "282.491, 656.579, 29.96, 0.4322", "282.301, 657.19, 29.96, 0.3304", "282.009, 657.698, 29.96, 0.2542", "281.691, 658.181, 29.96, 0.2288", "281.501, 658.792, 29.96, 0.2288", "281.424, 659.516, 29.96, 0.2288", "281.31, 660.202, 29.96, 0.2288", "281.31, 660.546, 29.96, 0.2542", "281.081, 661.003, 29.96, 0.305", "280.788, 661.282, 29.96, 0.2542", "280.28, 661.575, 29.96, 0.2288", "279.987, 661.625, 29.96, 0.2288", "279.86, 661.842, 29.96, 0.2542", "279.822, 662.147, 29.96, 0.305", "279.822, 662.49, 29.96, 0.356", "279.708, 663.406, 29.96, 0.305", "279.708, 664.206, 29.96, 0.305", "279.708, 665.007, 29.96, 0.356", "279.708, 665.808, 29.96, 0.4322", "279.708, 666.151, 29.96, 0.4322", "280.039, 666.507, 29.96, 0.3814", "280.293, 667.168, 29.96, 0.3304", "280.42, 667.384, 29.96, 0.305", "280.547, 668.173, 29.96, 0.2796", "280.852, 668.668, 29.96, 0.2542", "281.081, 669.24, 29.96, 0.2542", "281.437, 669.608, 29.7732, 0.2796", "281.615, 669.862, 29.1511, 0.3814", "281.653, 670.155, 29.12, 0.4068", "281.742, 670.638, 29.12, 0.2796", "281.882, 671.299, 29.12, 0.2288", "282.11, 671.871, 29.12, 0.2542", "282.53, 672.252, 29.12, 0.305", "282.772, 672.812, 29.12, 0.356", "283.026, 673.358, 29.12, 0.356", "283.178, 674.007, 29.12, 0.305", "283.369, 674.617, 29.12, 0.2542", "283.369, 675.418, 29.12, 0.2288", "283.369, 676.218, 29.12, 0.2288", "283.369, 676.562, 29.12, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "299.842, 544.331, 24.0923, 0.9152", "299.159, 545.571, 23.6751, 0.5592", "299.099, 546.544, 22.0192, 0.4576", "299.449, 547.04, 22.0074, 0.3814", "299.943, 547.985, 22.6929, 0.3814", "299.902, 548.987, 21.9355, 0.3814", "299.68, 550.039, 21.7364, 0.3304", "300.112, 551.057, 21.2279, 0.305", "299.905, 552.138, 20.6413, 0.3304", "299.956, 553.245, 20.1284, 0.4068", "300.394, 554.224, 19.2242, 0.4576", "301.118, 554.853, 17.7909, 0.4576", "301.898, 555.596, 18.1927, 0.4576", "302.229, 556.62, 17.355, 0.4576", "302.897, 557.42, 16.6208, 0.4576", "303.915, 557.859, 17.0666, 0.4576", "304.974, 558.044, 16.1778, 0.4576", "308.754, 558.029, 15.8096, 0.4322", "310.501, 558.374, 15.8096, 0.4576", "311.339, 557.559, 15.8096, 0.5084", "312.185, 556.909, 15.8096, 0.5338", "313.41, 556.136, 15.8096, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "299.842, 544.331, 24.0923, 0.9152", "301.219, 545.3, 24.2122, 0.8136", "302.245, 545.697, 24.8178, 0.7118", "303.318, 546.015, 24.8508, 0.7372", "304.083, 546.627, 23.5416, 0.788", "304.766, 547.501, 22.9642, 0.8136", "305.327, 548.484, 22.9589, 0.788", "305.607, 549.583, 22.9524, 0.7372", "306.157, 550.582, 22.9208, 0.6864" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_39",
    "id" : "apic_39",
    "points3d" : [ "361.92, 580.25, 19.9338, 0.2288", "364.822, 580.756, 19.9338, 0.2288" ],
    "parent" : "apic_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_38",
    "id" : "apic_38",
    "points3d" : [ "361.92, 580.25, 19.9338, 0.2288", "363.196, 577.736, 19.9338, 0.305", "367.94, 577.013, 18.559, 0.356", "371.258, 576.924, 18.559, 0.356", "373.432, 577.528, 18.559, 0.2288" ],
    "parent" : "apic_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_35",
    "id" : "apic_35",
    "points3d" : [ "291.6, 553.348, 37.5194, 0.2288", "289.287, 553.828, 33.6812, 0.3304", "287.643, 554.461, 33.6812, 0.3814", "286.215, 554.024, 33.6812, 0.4322", "282.012, 553.972, 29.5571, 0.4322", "279.784, 554.786, 29.5571, 0.4068", "276.287, 556.247, 28.1823, 0.4068", "273.541, 559.101, 28.1823, 0.4322", "272.024, 561.713, 26.1201, 0.4576", "267.426, 565.284, 22.6834, 0.4576" ],
    "parent" : "apic_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_32",
    "id" : "apic_32",
    "points3d" : [ "291.6, 553.348, 37.5194, 0.2288", "291.66, 554.49, 37.5172, 0.4576", "291.964, 555.576, 37.5021, 0.483", "292.639, 556.497, 37.4329, 0.5084", "293.013, 557.535, 36.9821, 0.5084", "293.238, 558.619, 37.1902, 0.5592", "293.88, 559.55, 37.52, 0.5848", "294.273, 560.592, 37.5208, 0.6102", "294.137, 561.715, 37.5259, 0.5848", "294.73, 562.688, 37.5519, 0.5592", "294.98, 563.72, 37.7168, 0.5592", "294.46, 564.67, 38.386, 0.6102", "294.302, 565.758, 37.7518, 0.6102", "294.03, 566.795, 38.2813, 0.5338", "294.224, 567.733, 39.4929, 0.4322", "294.088, 569.194, 39.8675, 0.5338", "294.043, 570.314, 39.8675, 0.6864" ],
    "parent" : "apic_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "288.675, 510.549, 31.8816, 1.144", "289.179, 508.831, 30.6583, 0.7118", "288.931, 507.8, 29.7766, 0.6102", "289.302, 506.797, 29.0839, 0.5338", "289.774, 505.931, 27.8656, 0.5084", "289.884, 504.826, 28.3909, 0.5338", "290.404, 503.887, 27.8258, 0.5592", "291.23, 503.119, 27.4039, 0.6102", "292.158, 502.463, 27.2507, 0.5848", "292.998, 501.779, 26.4667, 0.483", "293.874, 501.05, 26.3152, 0.4322", "294.949, 500.847, 26.2836, 0.483", "295.512, 501.731, 26.0534, 0.661", "294.993, 502.409, 24.4286, 0.7372", "294.756, 503.295, 22.9919, 0.6356", "294.411, 504.354, 22.6926, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "288.675, 510.549, 31.8816, 1.144", "289.782, 509.231, 31.418, 1.0932", "290.625, 508.791, 29.9415, 1.0678", "291.622, 508.261, 29.6937, 1.0932", "292.668, 507.808, 29.766, 1.1186", "293.753, 507.547, 30.2599, 1.1186", "294.705, 506.978, 30.7616, 1.0678", "295.641, 506.324, 30.7426, 1.0168", "296.426, 505.499, 30.5525, 0.9914", "296.969, 504.544, 29.8284, 0.9914", "297.419, 503.501, 29.68, 0.9914", "297.602, 502.374, 29.6803, 0.9914", "297.868, 501.273, 29.6814, 0.966", "298.095, 500.153, 29.6909, 0.9152", "298.403, 499.059, 29.7444, 0.8644", "298.438, 497.937, 30.1512, 0.8644", "298.259, 496.875, 31.0108, 0.8898", "298.137, 495.813, 31.9323, 0.9406", "298.518, 494.787, 32.7037, 0.9406", "298.922, 493.734, 33.04, 0.966", "299.384, 492.692, 33.0403, 0.966", "299.81, 491.637, 33.0417, 0.966", "300.442, 490.691, 33.0478, 0.9152", "301.259, 489.892, 33.0722, 0.8136", "302.196, 489.249, 33.2013, 0.788", "303.135, 488.674, 33.8453, 0.788", "303.877, 487.835, 34.16, 0.8644", "304.327, 486.788, 34.16, 0.8898", "304.934, 485.823, 34.16, 0.9406", "305.473, 484.816, 34.16, 0.966", "306.126, 483.878, 34.16, 1.0168", "306.68, 482.878, 34.16, 1.0168", "307.254, 481.892, 34.16, 0.9914", "307.717, 480.856, 34.1611, 0.8898", "308.134, 479.794, 34.1659, 0.8136", "308.674, 478.798, 34.1942, 0.8136", "309.489, 477.999, 34.3039, 0.9152", "310.399, 477.368, 34.867, 0.966", "311.364, 476.776, 35.1165, 0.8898", "312.436, 476.59, 34.4109, 0.7118", "313.578, 475.735, 34.16, 0.6356", "314.463, 475.009, 34.1606, 0.7118", "315.273, 474.203, 34.1625, 0.7626", "316.084, 473.395, 34.1698, 0.7626", "316.902, 472.596, 34.1998, 0.788", "317.749, 471.832, 34.3398, 0.839", "318.547, 471.097, 35.0804, 0.8898", "319.463, 470.43, 35.3402, 0.8898", "320.341, 469.701, 35.5365, 0.8136", "321.262, 469.106, 36.2883, 0.6864", "322.179, 468.444, 36.671, 0.4576" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "259.116, 508.412, 28.56, 0.9152", "257.784, 509.013, 28.6208, 0.6356", "256.662, 509.046, 29.0116, 0.4576", "255.591, 508.852, 29.7598, 0.356", "254.508, 508.694, 30.4181, 0.305", "253.446, 509.044, 30.8003, 0.356", "252.352, 509.03, 30.8025, 0.4322", "251.305, 508.581, 30.8143, 0.5338", "250.266, 508.119, 30.8882, 0.5848", "249.234, 507.733, 31.3384, 0.6356", "248.122, 507.739, 31.9248, 0.661", "247.008, 507.944, 31.9544, 0.6356", "245.966, 508.407, 32.104, 0.5592", "244.891, 508.683, 32.6206, 0.483", "243.821, 508.961, 32.0116, 0.5338", "242.688, 509.057, 32.0519, 0.6102", "241.6, 508.92, 32.7149, 0.6864", "240.508, 508.649, 33.0352, 0.6356", "239.366, 508.682, 33.0078, 0.6102", "238.261, 508.938, 32.8395, 0.5338", "237.193, 508.804, 32.1577, 0.5338", "236.092, 508.632, 32.4044, 0.5084", "234.967, 508.681, 32.592, 0.5592", "233.904, 508.98, 33.1948, 0.5848", "232.889, 509.397, 33.8677, 0.6102", "232.048, 510.148, 34.2014, 0.5848", "231.416, 511.092, 34.3781, 0.5592", "230.858, 512.008, 35.2061, 0.483", "230.651, 513.128, 35.3438, 0.4322", "230.136, 514.09, 35.7314, 0.356", "229.314, 514.802, 36.5308, 0.3304", "228.886, 515.787, 37.3117, 0.3304", "228.615, 516.881, 37.5847, 0.3304", "228.457, 517.988, 37.9999, 0.3304", "228.457, 519.097, 38.6263, 0.305", "228.457, 520.241, 38.64, 0.3304", "228.454, 521.385, 38.6403, 0.3814", "228.44, 522.529, 38.642, 0.4068", "228.349, 523.668, 38.6523, 0.4068", "228.015, 524.757, 38.7218, 0.4068", "227.869, 525.864, 39.2151, 0.483", "227.413, 526.878, 39.7499, 0.5592", "226.725, 527.79, 39.7729, 0.6102", "226.043, 528.702, 39.8205, 0.6102", "225.311, 529.558, 40.1416, 0.6356", "224.433, 530.188, 40.9097, 0.6356", "223.901, 531.169, 41.0561, 0.5848", "223.781, 532.26, 41.7861, 0.483", "223.423, 533.333, 42.0, 0.3814", "218.387, 541.169, 43.9919, 0.3304", "216.334, 543.445, 43.9919, 0.4068", "211.55, 550.942, 46.0538, 0.5338", "210.493, 553.057, 47.4286, 0.5848", "208.52, 554.101, 47.4286, 0.3814", "207.993, 554.583, 47.4286, 0.2796", "206.915, 556.33, 47.4286, 0.2288", "206.171, 558.248, 48.8034, 0.2288", "206.872, 559.422, 50.1782, 0.2288", "207.885, 559.449, 50.1782, 0.2288", "207.276, 561.361, 52.9276, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "259.116, 508.412, 28.56, 0.9152", "258.247, 507.769, 28.5594, 0.661", "257.402, 506.998, 28.5575, 0.5848", "256.439, 506.405, 28.548, 0.5338", "255.304, 506.303, 28.4729, 0.5592", "254.204, 506.148, 27.9577, 0.6102", "253.288, 505.52, 27.4708, 0.661", "252.488, 504.705, 27.44, 0.6864", "251.736, 503.843, 27.4397, 0.7118", "251.307, 502.803, 27.438, 0.7372", "251.053, 501.695, 27.4263, 0.788", "251.074, 500.577, 27.3451, 0.788", "251.209, 499.482, 26.8106, 0.788", "250.807, 498.431, 26.7257, 0.7372", "250.311, 497.417, 26.4048, 0.7118", "249.871, 496.375, 26.4415, 0.6864", "249.52, 495.328, 27.0528, 0.6864", "249.26, 494.238, 27.4355, 0.6356", "248.746, 493.218, 27.4151, 0.5848", "248.231, 492.207, 27.3039, 0.5084", "248.302, 491.126, 26.6134, 0.483", "248.652, 490.062, 26.0834, 0.4068", "249.088, 489.093, 25.2314, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "338.321, 526.799, 16.497, 0.2288", "338.123, 526.783, 17.1844, 0.305", "340.414, 525.752, 15.8096, 0.2796", "341.165, 524.184, 15.8096, 0.2796", "342.311, 522.801, 15.8096, 0.305", "343.487, 522.101, 15.8096, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "338.321, 526.799, 16.497, 0.2288", "338.871, 528.07, 17.8716, 0.305", "337.715, 529.709, 17.8716, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "306.157, 550.582, 22.9208, 0.6864", "308.62, 551.037, 22.6834, 0.4068", "312.02, 551.67, 23.3708, 0.3304", "321.223, 554.228, 24.7453, 0.305", "328.766, 555.745, 26.1201, 0.2796", "334.881, 557.48, 25.4327, 0.2542", "337.827, 558.529, 24.7453, 0.2288", "341.215, 558.304, 23.3708, 0.2542", "345.48, 557.626, 25.4327, 0.2796", "350.857, 557.554, 26.1201, 0.305", "354.499, 558.52, 26.1201, 0.3304", "360.788, 558.969, 26.8075, 0.356", "362.76, 559.08, 26.8075, 0.3304", "364.651, 558.79, 26.8075, 0.2796", "366.242, 559.816, 27.4949, 0.2288", "366.808, 561.171, 27.4949, 0.2288", "368.636, 564.567, 27.4949, 0.2542", "370.727, 566.547, 27.4949, 0.3304", "373.214, 568.867, 27.4949, 0.4576", "377.874, 570.691, 26.1201, 0.5592", "381.535, 575.347, 25.4327, 0.5592", "390.094, 581.774, 25.4327, 0.4576", "395.548, 586.655, 25.4327, 0.3304", "399.636, 593.211, 25.4327, 0.2542", "402.535, 596.023, 26.1201, 0.2542", "405.27, 599.163, 26.1201, 0.2796", "412.043, 602.671, 26.1201, 0.305", "416.462, 605.792, 26.1201, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "306.157, 550.582, 22.9208, 0.6864", "306.848, 551.493, 22.7858, 0.5338", "307.19, 552.538, 22.2726, 0.5084", "307.425, 553.57, 23.1708, 0.5848", "307.679, 554.614, 23.977, 0.6102", "308.031, 555.667, 23.7544, 0.7118", "308.764, 556.469, 22.9888, 0.7118", "309.608, 557.193, 22.8718, 0.6864", "310.588, 557.668, 22.2096, 0.483", "311.584, 558.146, 22.5061, 0.3814", "312.425, 558.876, 22.916, 0.3814", "313.457, 559.343, 22.6929, 0.483", "318.228, 562.669, 22.6834, 0.483", "319.589, 563.522, 22.6834, 0.483", "320.964, 563.532, 22.6834, 0.483", "324.659, 564.63, 24.0582, 0.5338", "330.497, 566.83, 22.6834, 0.5084", "341.411, 573.694, 24.7453, 0.4576", "347.937, 577.031, 22.6834, 0.4322", "352.535, 577.206, 21.3086, 0.4576" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_41",
    "id" : "apic_41",
    "points3d" : [ "364.822, 580.756, 19.9338, 0.2288", "368.826, 580.478, 19.9338, 0.4322", "374.862, 580.356, 18.559, 0.5084", "379.004, 580.191, 17.8716, 0.483", "383.735, 579.192, 17.1844, 0.4322", "387.719, 578.386, 17.8716, 0.3814", "388.928, 577.226, 17.1844, 0.3814", "392.857, 574.593, 16.497, 0.356", "397.158, 574.593, 16.497, 0.305", "398.906, 575.143, 16.497, 0.2288" ],
    "parent" : "apic_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_40",
    "id" : "apic_40",
    "points3d" : [ "364.822, 580.756, 19.9338, 0.2288", "366.907, 582.365, 19.9338, 0.356", "369.549, 583.955, 19.9338, 0.356", "370.643, 583.622, 19.9338, 0.2288" ],
    "parent" : "apic_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_34",
    "id" : "apic_34",
    "points3d" : [ "294.043, 570.314, 39.8675, 0.6864", "293.302, 575.934, 37.8056, 0.3814", "291.916, 578.618, 40.5549, 0.3304", "291.855, 579.508, 40.5549, 0.3814", "292.374, 580.644, 40.5549, 0.483", "292.655, 582.601, 40.5549, 0.483", "291.582, 588.434, 42.6171, 0.3814", "291.042, 592.478, 42.6171, 0.2796", "287.658, 599.695, 43.9919, 0.2288", "286.764, 602.554, 43.9919, 0.2288", "287.067, 604.599, 44.6793, 0.2288", "287.578, 606.358, 44.6793, 0.2288", "288.613, 607.194, 44.6793, 0.2288", "289.99, 607.821, 44.6793, 0.2288" ],
    "parent" : "apic_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_33",
    "id" : "apic_33",
    "points3d" : [ "294.043, 570.314, 39.8675, 0.6864", "294.795, 570.877, 39.8675, 0.661", "295.579, 571.944, 39.8675, 0.5592", "296.565, 578.515, 43.9919, 0.5338", "298.081, 579.912, 44.6793, 0.4576", "300.126, 584.214, 47.4286, 0.305", "301.862, 589.081, 50.1782, 0.2542", "304.015, 593.743, 52.2404, 0.2288", "305.277, 595.435, 52.2404, 0.2288", "305.358, 596.794, 52.2404, 0.2288", "304.567, 597.476, 52.2404, 0.2288", "304.049, 598.544, 52.2404, 0.2288", "305.024, 602.791, 54.9898, 0.2288", "305.009, 606.814, 54.9898, 0.2288", "306.17, 608.551, 58.4268, 0.2288" ],
    "parent" : "apic_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "294.411, 504.354, 22.6926, 0.2288", "293.899, 505.423, 22.9337, 0.305", "293.937, 506.563, 22.757, 0.483", "294.167, 507.626, 22.0254, 0.7118", "294.427, 508.732, 21.9198, 0.839", "294.747, 509.798, 22.3681, 0.8136", "295.023, 510.877, 22.9418, 0.788", "295.618, 511.581, 22.8875, 0.7626", "296.596, 512.151, 22.5918, 0.8136", "297.535, 512.539, 21.3511, 0.7626", "298.197, 513.398, 21.6107, 0.788", "298.571, 514.455, 22.0875, 0.788", "298.466, 515.537, 21.8518, 0.839", "297.574, 519.519, 21.3086, 0.6102", "298.322, 522.529, 19.9338, 0.4576", "298.28, 527.124, 18.559, 0.4068", "298.298, 527.942, 18.559, 0.4576", "298.974, 529.822, 18.559, 0.4576", "300.807, 532.048, 17.8716, 0.4068", "302.548, 534.655, 17.8716, 0.3814", "304.855, 536.465, 17.8716, 0.483", "304.783, 538.364, 17.1844, 0.9152" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "294.411, 504.354, 22.6926, 0.2288", "293.974, 504.734, 22.0802, 0.483", "292.93, 504.934, 21.9167, 0.5338", "291.893, 504.52, 22.1726, 0.5084", "290.788, 504.403, 21.5345, 0.5084", "290.225, 503.914, 20.6058, 0.483", "289.902, 502.918, 19.5745, 0.5084", "289.127, 502.226, 18.6469, 0.5338", "288.174, 501.652, 19.0775, 0.6356", "287.678, 500.732, 19.5566, 0.661", "287.91, 499.628, 19.2559, 0.6102", "287.817, 498.509, 19.5028, 0.4576", "287.111, 497.699, 19.5944, 0.3814", "285.99, 497.489, 19.5569, 0.4068", "285.225, 496.733, 19.3292, 0.5338", "285.01, 495.665, 18.5469, 0.6356", "284.61, 494.599, 18.368, 0.661", "284.618, 493.511, 17.7545, 0.5848", "284.313, 492.447, 17.3603, 0.5084", "283.815, 491.421, 17.3617, 0.483", "283.328, 490.391, 17.3695, 0.483", "282.662, 489.517, 17.435, 0.5338", "281.575, 489.286, 17.9141, 0.5338", "280.575, 488.984, 17.1842, 0.5848", "279.564, 489.228, 16.1638, 0.5338", "278.793, 489.861, 15.12, 0.4576" ],
    "parent" : "apic_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "322.179, 468.444, 36.671, 0.4576", "323.152, 467.303, 36.4, 0.5592", "324.104, 466.683, 36.4, 0.6102", "325.173, 466.304, 36.3997, 0.6864", "326.305, 466.147, 36.3978, 0.6864", "327.295, 465.587, 36.3843, 0.661", "327.835, 464.614, 36.297, 0.6356", "328.176, 463.558, 35.7518, 0.7118", "328.32, 462.446, 35.7434, 0.7626", "328.726, 461.427, 36.4045, 0.7626", "329.34, 460.469, 36.6352, 0.7118", "329.849, 459.496, 37.3562, 0.661", "330.061, 458.383, 37.52, 0.6356", "330.154, 457.243, 37.52, 0.6102", "330.523, 456.164, 37.52, 0.6356", "330.857, 455.074, 37.52, 0.6864", "331.708, 453.645, 37.5206, 0.6864", "332.398, 452.735, 37.5222, 0.6356", "333.175, 451.896, 37.5295, 0.5338", "333.87, 450.995, 37.5628, 0.5084", "334.306, 449.948, 37.7544, 0.5338", "334.375, 448.86, 38.528, 0.5848", "334.284, 447.723, 38.64, 0.6102", "333.891, 446.655, 38.64, 0.5848", "333.54, 445.579, 38.6408, 0.5848", "333.649, 444.447, 38.6453, 0.6356", "334.257, 443.49, 38.6666, 0.7372", "334.905, 442.556, 38.7702, 0.7626", "335.377, 441.56, 39.3733, 0.7118", "335.73, 440.498, 39.76, 0.6356", "335.748, 439.357, 39.76, 0.6102", "335.639, 438.222, 39.7608, 0.6102", "335.662, 437.122, 39.7642, 0.5848", "336.273, 436.164, 39.7832, 0.5848", "337.196, 435.51, 39.8868, 0.5848", "338.204, 435.038, 40.4172, 0.661", "338.974, 434.268, 39.888, 0.7118", "339.681, 433.372, 39.76, 0.788", "340.095, 432.312, 39.76, 0.788", "340.625, 431.299, 39.76, 0.788", "341.275, 430.36, 39.76, 0.7372", "341.928, 429.423, 39.76, 0.7118", "342.567, 428.483, 39.76, 0.6864", "342.948, 427.409, 39.7606, 0.661", "343.301, 426.323, 39.7639, 0.6356", "343.774, 425.283, 39.783, 0.6356", "344.14, 424.206, 39.8983, 0.7118", "344.597, 423.2, 40.5275, 0.7626", "345.106, 422.193, 40.88, 0.7626", "345.608, 421.169, 40.88, 0.7118", "346.005, 420.1, 40.88, 0.7118", "346.61, 419.132, 40.88, 0.7626", "347.118, 418.109, 40.88, 0.788", "347.492, 417.031, 40.88, 0.8136", "347.997, 416.008, 40.88, 0.8136", "348.5, 414.985, 40.88, 0.839", "348.968, 413.945, 40.8803, 0.8136", "349.366, 412.878, 40.8825, 0.7626", "349.95, 411.898, 40.8923, 0.6864", "350.714, 411.048, 40.9324, 0.6356", "351.475, 410.197, 41.097, 0.6102", "352.029, 409.249, 41.7824, 0.661", "352.425, 408.186, 42.0, 0.7372", "353.062, 407.239, 42.0, 0.8644", "353.732, 406.316, 42.0, 0.9406", "354.596, 405.573, 42.0, 0.966", "355.646, 405.127, 42.0, 0.8898", "356.591, 404.486, 42.0, 0.788", "357.498, 403.794, 42.0, 0.7118", "358.293, 402.972, 42.0, 0.661", "358.955, 402.051, 42.0, 0.6356", "359.129, 400.928, 42.0, 0.6102", "359.297, 399.805, 42.0003, 0.6356", "359.714, 398.74, 42.0022, 0.661", "360.35, 397.801, 42.0109, 0.7118", "361.159, 396.993, 42.0448, 0.7626", "362.0, 396.221, 42.1837, 0.8136", "362.923, 395.619, 42.8162, 0.8136", "363.903, 395.056, 43.1208, 0.7626", "364.801, 394.348, 43.1242, 0.7372", "365.769, 393.749, 43.1424, 0.6864", "366.789, 393.242, 43.246, 0.6864", "367.806, 392.82, 43.8802, 0.6102", "368.541, 391.993, 44.24, 0.6102", "368.611, 390.867, 44.2389, 0.5592", "368.303, 389.771, 44.2327, 0.5592", "368.321, 388.63, 44.1902, 0.5084", "368.673, 387.567, 43.9421, 0.483", "369.323, 386.683, 43.3017, 0.4322", "370.314, 386.222, 43.6671, 0.483", "371.398, 386.114, 44.4965, 0.5592", "372.293, 385.568, 45.278, 0.7372", "372.767, 384.534, 45.36, 0.8136", "372.987, 383.415, 45.3603, 0.8644", "373.412, 382.353, 45.362, 0.839", "374.016, 381.395, 45.3701, 0.8644", "374.818, 380.58, 45.4006, 0.8898", "375.65, 379.797, 45.5241, 0.8644", "376.538, 379.141, 46.1255, 0.8136", "377.383, 378.392, 46.513, 0.7626", "378.037, 377.463, 46.657, 0.8136", "378.682, 376.595, 47.4429, 0.839", "379.314, 375.65, 47.6003, 0.8644", "380.087, 374.808, 47.6008, 0.839", "380.843, 373.95, 47.6036, 0.839", "381.398, 372.952, 47.619, 0.8136", "381.804, 371.888, 47.742, 0.7626", "382.309, 371.13, 47.6, 0.7372", "383.046, 370.257, 47.6008, 0.7626", "383.822, 369.417, 47.6034, 0.839", "384.448, 368.467, 47.6179, 0.9152", "384.993, 367.465, 47.6994, 0.966", "385.585, 366.515, 48.1216, 0.9914", "386.025, 365.497, 48.7175, 0.9406", "386.633, 364.534, 48.8502, 0.8898", "387.171, 363.565, 49.4362, 0.839", "387.871, 362.679, 49.8316, 0.8644", "388.624, 361.819, 49.84, 0.8898", "389.174, 360.819, 49.84, 0.8898", "389.546, 359.739, 49.84, 0.839", "390.102, 358.745, 49.84, 0.788", "390.846, 357.878, 49.84, 0.7118", "391.616, 357.031, 49.8408, 0.6864", "392.202, 356.057, 49.8442, 0.6356", "392.496, 354.964, 49.866, 0.6864", "392.506, 353.822, 50.0192, 0.6864", "392.509, 352.726, 50.7587, 0.7372", "392.519, 351.591, 51.0339, 0.6864", "392.588, 350.475, 51.5004, 0.6864", "392.97, 349.447, 52.061, 0.6356", "393.738, 348.604, 52.08, 0.7118", "394.55, 347.797, 52.08, 0.7372", "395.365, 346.993, 52.08, 0.8136", "396.199, 346.212, 52.08, 0.788", "397.134, 345.562, 52.08, 0.788", "398.08, 344.929, 52.08, 0.7626", "398.558, 343.92, 52.0814, 0.788", "398.879, 342.827, 52.0884, 0.8136", "398.915, 341.685, 52.1349, 0.8136", "398.927, 340.555, 52.4762, 0.8136", "398.997, 339.456, 53.1605, 0.8136", "399.406, 338.408, 53.2, 0.8898", "400.175, 337.561, 53.2003, 0.8898", "400.936, 336.708, 53.2011, 0.9152", "401.514, 335.725, 53.2056, 0.8898", "401.998, 334.692, 53.2322, 0.966", "402.362, 333.613, 53.3988, 1.0424", "402.847, 332.626, 54.087, 1.1186", "403.408, 331.641, 54.3211, 1.1186", "404.056, 330.701, 54.3256, 1.0678", "404.759, 329.8, 54.346, 0.966", "405.538, 328.963, 54.4306, 0.8898", "406.201, 328.067, 54.8514, 0.8136", "406.621, 327.041, 55.4428, 0.7626", "406.7, 325.906, 55.6184, 0.7118", "406.743, 324.81, 56.35, 0.7118", "407.023, 323.72, 56.5642, 0.7626", "407.357, 322.629, 56.5894, 0.7626", "407.669, 321.534, 56.7518, 0.7118", "408.034, 320.621, 57.9659, 0.661", "408.453, 319.619, 58.515, 0.7118", "408.989, 318.662, 57.7889, 0.7626", "409.539, 317.668, 57.68, 0.7626", "410.13, 316.703, 57.68, 0.7118", "410.957, 315.914, 57.68, 0.7372", "411.905, 315.283, 57.68, 0.7626", "412.854, 314.656, 57.68, 0.788", "413.415, 313.693, 57.68, 0.7626", "413.285, 312.568, 57.6811, 0.8136", "413.972, 311.716, 57.6859, 0.8898", "414.856, 310.991, 57.7072, 0.9406", "415.642, 310.16, 57.7968, 0.9152", "416.292, 309.259, 58.2529, 0.839", "416.712, 308.229, 58.7964, 0.8136", "416.848, 307.094, 58.842, 0.839", "417.201, 306.017, 59.0388, 0.8898", "417.582, 304.994, 59.7948, 0.9152", "418.086, 303.973, 59.9278, 0.9152", "418.606, 302.959, 59.9634, 0.9152", "419.207, 301.993, 60.132, 0.9406", "419.752, 301.036, 60.8174, 0.9406", "420.165, 299.978, 61.0459, 0.9152", "420.839, 299.06, 61.0686, 0.788", "421.61, 298.216, 61.1646, 0.661", "422.175, 297.274, 61.698, 0.5848", "422.237, 296.158, 62.162, 0.5848", "422.166, 295.016, 62.1718, 0.661", "421.929, 293.907, 62.239, 0.661", "422.306, 292.872, 62.6623, 0.661", "422.985, 291.996, 63.2251, 0.5848", "423.91, 291.346, 63.2811, 0.5848", "425.02, 291.086, 63.2867, 0.6102", "426.007, 290.518, 63.3198, 0.6102", "426.703, 289.638, 63.4872, 0.5592", "426.83, 288.557, 64.2242, 0.483", "426.854, 287.417, 64.2093, 0.5084", "426.99, 286.331, 63.4749, 0.5848", "427.584, 285.368, 63.3391, 0.6356", "428.206, 284.433, 63.6868, 0.6102", "428.981, 283.657, 64.3614, 0.5338", "429.866, 282.939, 64.4003, 0.5592", "430.703, 282.169, 64.4017, 0.6102", "431.094, 281.104, 64.4112, 0.7118", "431.39, 280.004, 64.4714, 0.6864", "431.452, 278.878, 64.8491, 0.6864", "431.665, 277.909, 66.192, 0.661", "432.347, 277.022, 66.6579, 0.661", "433.116, 276.175, 66.7181, 0.6356", "433.645, 275.201, 67.0751, 0.6102", "433.691, 274.068, 66.7198, 0.6102", "433.702, 272.927, 66.8217, 0.6102", "433.765, 271.854, 67.6959, 0.6356", "434.164, 270.911, 68.7302, 0.661", "435.242, 270.597, 68.9004, 0.6356", "436.236, 270.126, 69.0315, 0.5338", "436.436, 269.06, 69.7432, 0.483", "436.436, 267.925, 70.0, 0.5084", "436.436, 266.781, 70.0, 0.5848", "436.436, 265.637, 70.0, 0.5338", "436.55, 265.294, 71.12, 0.4322", "436.868, 264.925, 71.12, 0.3304", "437.237, 264.378, 71.12, 0.356", "437.237, 264.035, 71.12, 0.305", "437.389, 263.73, 71.12, 0.2542", "437.923, 263.006, 71.12, 0.483", "438.114, 262.408, 71.1511, 0.5338", "438.266, 261.061, 71.4, 0.5338", "438.483, 260.476, 71.4, 0.5338", "438.622, 259.815, 71.4, 0.5338", "438.889, 259.281, 71.4, 0.5338", "439.283, 258.875, 71.4, 0.5338", "439.83, 257.82, 71.4, 0.5338", "440.173, 257.362, 71.4, 0.5084", "440.517, 256.917, 71.4311, 0.4068", "440.872, 256.574, 71.68, 0.3814", "441.203, 256.104, 71.68, 0.3814", "441.609, 255.709, 71.68, 0.483", "442.36, 255.087, 72.24, 0.7118", "442.83, 254.756, 72.8, 0.5338", "443.173, 254.527, 72.8, 0.4576", "443.72, 254.273, 72.8, 0.5848", "444.571, 253.968, 73.8889, 0.7626", "445.283, 253.891, 73.92, 0.7626", "445.969, 253.777, 73.92, 0.7626", "446.618, 253.625, 73.92, 0.7118", "447.418, 253.625, 73.92, 0.5848", "448.219, 253.625, 73.92, 0.4068", "448.715, 253.548, 74.2, 0.2542", "448.982, 253.129, 74.2, 0.4068", "449.211, 252.774, 75.0089, 0.5084", "449.351, 252.202, 75.2268, 0.4576", "449.592, 251.566, 75.32, 0.6356", "449.783, 250.956, 75.32, 0.6102", "449.948, 250.32, 75.32, 0.5338", "450.291, 249.977, 75.32, 0.4068", "450.393, 249.392, 75.32, 0.2796", "450.393, 249.163, 75.32, 0.2288", "450.393, 248.362, 75.32, 0.2288", "450.393, 247.562, 75.32, 0.2796", "450.393, 246.761, 75.32, 0.3304", "450.393, 245.973, 75.3511, 0.3814", "450.393, 245.375, 75.8489, 0.3304", "450.393, 244.587, 75.88, 0.305", "450.393, 243.786, 75.88, 0.356", "450.393, 242.986, 75.88, 0.5338", "450.393, 242.299, 75.88, 0.7372", "451.206, 241.397, 75.88, 0.5848", "451.651, 240.926, 76.16, 0.6864", "451.842, 240.088, 77.0, 0.4576", "452.071, 239.618, 77.2489, 0.4068", "452.325, 239.083, 77.28, 0.4576", "452.579, 238.537, 77.28, 0.5084", "452.974, 238.13, 77.28, 0.5338", "453.673, 237.355, 77.5911, 0.5592", "453.939, 236.922, 78.4, 0.5848", "454.638, 236.922, 78.9289, 0.9406", "455.401, 236.554, 80.08, 0.661", "455.998, 236.007, 80.36, 0.5848", "456.558, 235.766, 80.36, 0.5848", "457.003, 235.512, 80.6089, 0.5592", "457.46, 235.181, 80.64, 0.5338", "457.854, 234.774, 80.64, 0.5338", "458.147, 234.38, 80.92, 0.5338", "458.592, 234.062, 81.0132, 0.5338", "459.087, 233.834, 81.2, 0.5592", "459.736, 233.681, 81.2, 0.6102", "460.485, 233.058, 81.76, 0.7626", "461.109, 232.309, 82.32, 0.5848", "461.35, 231.749, 82.32, 0.483", "461.668, 231.266, 82.32, 0.5084", "461.718, 230.516, 82.32, 0.5592", "461.833, 229.83, 82.32, 0.6102", "461.833, 229.029, 82.32, 0.5848", "461.833, 228.228, 82.32, 0.5338", "461.922, 227.77, 82.6622, 0.5338", "462.519, 227.656, 83.16, 0.7626", "463.778, 227.656, 84.0, 0.6102", "464.578, 227.656, 84.0, 0.5338", "465.15, 227.542, 84.0, 0.483", "465.43, 227.134, 84.0, 0.305", "465.837, 226.512, 84.0, 0.5338", "466.066, 225.94, 84.0, 0.7118", "466.18, 225.254, 84.0, 0.7372", "466.612, 224.199, 84.28, 0.5338", "466.943, 223.843, 84.56, 0.5084", "467.235, 223.334, 84.56, 0.4576", "467.565, 222.864, 84.56, 0.4322", "467.896, 222.431, 84.6532, 0.3814", "468.214, 222.14, 84.84, 0.483", "468.43, 221.441, 84.84, 0.7118", "469.053, 220.461, 84.84, 0.6356", "469.612, 219.419, 84.84, 0.5338", "469.726, 218.733, 84.84, 0.5592", "469.917, 218.123, 84.84, 0.6102", "469.955, 217.36, 84.84, 0.7118", "470.413, 216.33, 85.12, 0.9914", "470.908, 215.224, 85.12, 0.8898", "471.366, 214.08, 85.12, 0.5592", "471.595, 213.623, 85.12, 0.5084", "472.091, 213.089, 85.68, 0.7118", "472.434, 212.276, 85.9289, 0.7372", "472.51, 211.513, 86.3957, 0.6356", "473.031, 210.941, 87.08, 0.7118", "474.009, 210.318, 87.08, 0.7626", "475.23, 209.937, 87.08, 0.3814", "475.484, 209.847, 87.08, 0.2542", "475.663, 209.683, 87.08, 0.2542", "475.675, 209.009, 87.08, 0.4576", "475.675, 208.17, 87.5468, 0.7372", "475.827, 207.216, 88.76, 0.9914", "475.942, 206.06, 89.2889, 1.1948", "476.655, 205.298, 90.72, 1.1186", "477.518, 204.903, 90.72, 0.9406", "478.446, 204.801, 90.72, 0.5338", "478.98, 204.42, 90.72, 0.2542", "479.222, 204.318, 90.72, 0.2288", "479.413, 204.166, 90.72, 0.2542", "479.565, 203.746, 90.72, 0.4322", "479.565, 202.946, 90.72, 0.5338", "479.565, 202.145, 90.72, 0.5338", "479.565, 201.344, 90.72, 0.483", "479.692, 200.785, 90.72, 0.2796", "479.908, 200.658, 90.72, 0.2288", "480.099, 200.505, 90.72, 0.2288", "480.264, 200.441, 90.72, 0.2288", "480.874, 200.25, 90.72, 0.2288", "481.331, 199.907, 90.72, 0.2288", "481.751, 199.526, 90.72, 0.2288", "482.005, 199.437, 90.72, 0.2288", "482.298, 199.387, 90.72, 0.2288", "482.552, 199.297, 90.72, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "322.179, 468.444, 36.671, 0.4576", "322.88, 468.973, 37.5052, 0.4576", "323.48, 469.941, 37.5486, 0.5084", "324.007, 470.954, 37.6841, 0.5338", "324.419, 471.973, 38.3541, 0.5084", "325.121, 472.86, 38.6487, 0.5338", "325.84, 473.745, 38.6781, 0.5592", "326.339, 474.769, 38.8478, 0.6356", "326.729, 475.793, 39.5685, 0.6102", "327.237, 476.804, 39.7614, 0.5338", "327.258, 477.944, 39.7695, 0.4322", "327.026, 479.053, 39.8177, 0.4322", "326.841, 480.161, 40.1682, 0.5084", "326.84, 481.264, 40.8556, 0.5848", "326.834, 482.406, 40.9578, 0.5848", "326.794, 483.523, 41.4425, 0.5848", "326.541, 484.597, 42.0042, 0.6102", "326.343, 485.722, 42.0305, 0.6864", "326.097, 486.825, 42.1792, 0.7118", "325.926, 487.802, 42.0, 0.6356", "325.62, 487.839, 43.12, 0.483", "325.175, 488.081, 43.12, 0.2542", "325.112, 488.361, 43.12, 0.2288", "324.782, 489.06, 43.12, 0.356", "324.782, 489.861, 43.12, 0.4576", "324.667, 490.547, 43.12, 0.483", "324.667, 491.348, 43.12, 0.4576", "324.553, 492.034, 43.12, 0.4068", "324.553, 492.835, 43.12, 0.356", "324.553, 493.636, 43.12, 0.3814", "324.553, 494.437, 43.12, 0.4068", "324.553, 495.238, 43.12, 0.483", "324.553, 496.038, 43.12, 0.4576", "324.553, 496.839, 43.12, 0.4068", "324.553, 497.64, 43.12, 0.305", "324.553, 498.441, 43.12, 0.2542", "324.667, 499.127, 43.12, 0.2288", "324.667, 499.928, 43.12, 0.2288", "324.819, 500.577, 43.12, 0.2288", "324.896, 501.301, 43.12, 0.2288", "324.896, 502.102, 43.12, 0.2288", "324.896, 502.902, 43.12, 0.2288", "324.896, 503.703, 43.12, 0.2288", "324.896, 504.504, 43.12, 0.2288", "324.896, 505.305, 43.12, 0.2288", "324.896, 506.106, 43.12, 0.2288", "324.896, 506.906, 43.12, 0.2288", "325.048, 507.555, 43.12, 0.2288", "325.125, 508.279, 43.12, 0.2288", "325.125, 509.08, 43.12, 0.2288", "325.125, 509.881, 43.12, 0.2288", "325.125, 510.682, 43.12, 0.2288", "325.125, 511.482, 43.12, 0.2288", "325.201, 512.207, 43.12, 0.2288", "325.239, 512.97, 43.12, 0.2288", "325.239, 513.77, 43.12, 0.2288", "325.239, 514.571, 43.12, 0.2288", "325.252, 515.359, 43.12, 0.2288", "325.455, 515.957, 43.12, 0.2288", "325.582, 516.63, 43.12, 0.2288", "325.697, 517.317, 43.12, 0.2288", "325.811, 518.003, 43.12, 0.2288", "325.951, 518.664, 43.12, 0.2288", "326.142, 519.274, 43.12, 0.2288", "326.383, 519.834, 43.12, 0.2288", "326.612, 519.948, 43.12, 0.2288", "326.803, 520.1, 43.12, 0.2288", "326.841, 520.406, 43.12, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "249.088, 489.093, 25.2314, 0.2288", "249.041, 488.167, 26.2791, 0.5084", "248.961, 487.065, 25.783, 0.5848", "248.623, 486.03, 25.1636, 0.6102", "248.588, 484.89, 24.9771, 0.6102", "248.571, 483.786, 24.3874, 0.5592", "248.464, 482.662, 24.2393, 0.4576", "248.016, 481.619, 24.0495, 0.356", "247.44, 480.639, 23.8983, 0.305", "247.724, 479.692, 23.0611, 0.3304", "248.41, 478.786, 22.9222, 0.356", "248.591, 477.672, 22.7181, 0.4322", "248.591, 476.59, 21.84, 0.483", "248.463, 476.028, 21.7106, 0.5084", "248.159, 475.421, 21.0, 0.483", "247.828, 474.951, 21.0, 0.4576", "247.599, 474.379, 21.0, 0.4576", "247.193, 473.984, 21.0, 0.4322", "246.684, 473.693, 21.0, 0.3814", "246.278, 473.412, 21.0, 0.3304", "246.062, 472.942, 21.0, 0.3814", "245.731, 472.243, 21.0, 0.3304", "245.477, 471.696, 21.0, 0.2796", "245.045, 471.328, 21.0, 0.2288", "244.739, 471.29, 21.0, 0.2288", "244.473, 471.214, 21.0, 0.2288", "244.257, 471.087, 21.0, 0.2288", "244.244, 470.756, 21.0, 0.2288", "244.244, 469.726, 21.0, 0.3814", "244.244, 468.926, 21.0, 0.4068", "244.244, 468.125, 21.0, 0.3814", "244.358, 467.553, 21.0, 0.2542", "244.435, 467.324, 20.9068, 0.2288", "244.676, 466.956, 20.16, 0.2542", "244.93, 466.866, 20.16, 0.2796", "245.388, 466.866, 20.16, 0.2796", "245.719, 466.854, 20.16, 0.2542", "245.96, 466.752, 20.16, 0.2288", "246.074, 466.536, 20.16, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "249.088, 489.093, 25.2314, 0.2288", "249.389, 488.919, 25.0491, 0.356", "250.328, 488.432, 24.1335, 0.356", "251.219, 488.217, 22.7612, 0.3304", "252.267, 488.074, 21.9467, 0.3304", "253.292, 487.606, 21.7568, 0.356", "254.405, 487.548, 21.2512, 0.356", "255.509, 487.413, 20.7049, 0.305", "256.559, 486.964, 20.6262, 0.305", "257.628, 486.7, 20.1113, 0.3304", "258.726, 486.859, 19.6, 0.3814", "259.702, 487.446, 19.6, 0.356", "260.375, 488.361, 19.5994, 0.3304", "261.095, 489.22, 19.5964, 0.356", "262.184, 489.461, 19.5734, 0.3814", "262.929, 490.3, 19.4396, 0.4576", "263.695, 491.046, 18.6421, 0.4576", "264.801, 491.289, 18.4794, 0.483", "265.922, 491.474, 18.4761, 0.4068", "266.947, 490.992, 18.4576, 0.356", "268.054, 490.954, 18.3198, 0.356", "269.015, 490.882, 17.2267, 0.4576", "270.033, 490.672, 16.2596, 0.5338", "271.125, 490.349, 16.2574, 0.5338", "272.264, 490.273, 16.3747, 0.4576", "272.835, 489.625, 17.2637, 0.4322", "272.778, 488.489, 17.1422, 0.4322", "272.386, 487.573, 17.36, 0.4576" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "343.487, 522.101, 15.8096, 0.4576", "342.77, 521.854, 15.8096, 0.356", "341.84, 521.204, 15.8096, 0.3304", "341.081, 520.383, 15.8096, 0.2796", "340.468, 518.819, 15.8096, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "343.487, 522.101, 15.8096, 0.4576", "344.673, 520.673, 15.8096, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "482.552, 199.297, 90.72, 0.2288", "482.425, 199.151, 95.5447, 1.3728" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "482.552, 199.297, 90.72, 0.2288", "482.755, 199.158, 90.72, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "482.425, 199.151, 95.5447, 1.3728", "481.844, 190.577, 100.356, 0.9406", "481.777, 183.785, 103.793, 0.6356", "482.516, 179.323, 108.605, 0.483", "478.916, 174.589, 112.729, 0.4576" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "482.425, 199.151, 95.5447, 1.3728", "482.425, 199.056, 98.0, 0.8644", "482.87, 198.471, 98.0, 0.5084", "483.81, 198.039, 98.0, 0.6864", "484.675, 197.302, 98.0, 0.5338", "485.361, 197.188, 98.0, 0.4068", "485.946, 196.972, 98.0, 0.3814", "486.2, 196.882, 98.0, 0.4576", "486.836, 196.489, 98.0, 0.6102", "487.319, 195.942, 98.0, 0.4576", "487.802, 195.624, 98.0, 0.4322", "488.45, 195.472, 98.0, 0.483", "488.946, 194.938, 98.0, 0.661", "489.06, 194.137, 98.0, 0.5848", "489.403, 193.45, 98.0, 0.6102", "489.772, 192.904, 98.0, 0.5084", "490.445, 192.662, 98.84, 0.7372", "491.335, 192.294, 98.84, 0.6864", "492.009, 191.48, 99.12, 0.4576", "492.442, 191.112, 99.12, 0.356", "492.683, 190.59, 99.2132, 0.356", "493.039, 190.222, 99.4, 0.3814", "493.509, 189.891, 99.96, 0.6356", "494.615, 189.777, 100.333, 0.7372", "495.81, 189.675, 101.08, 0.661", "496.534, 189.599, 101.08, 0.5084", "497.132, 189.51, 101.08, 0.3814", "497.411, 189.103, 101.08, 0.3814", "497.767, 188.429, 101.08, 0.356", "498.06, 187.921, 101.08, 0.3304", "498.098, 187.171, 101.111, 0.3304", "498.098, 186.586, 101.64, 0.4068", "498.098, 185.9, 101.64, 0.661", "498.098, 185.442, 102.76, 0.7372", "498.314, 184.743, 103.88, 0.6864", "498.695, 184.095, 103.88, 0.5338", "498.975, 183.574, 103.88, 0.4068", "499.369, 183.281, 103.88, 0.3814", "499.597, 182.938, 104.16, 0.4322", "500.08, 182.391, 104.16, 0.4068", "500.614, 182.125, 104.16, 0.4322", "500.958, 181.667, 104.16, 0.4322", "501.313, 181.222, 104.16, 0.356", "501.835, 181.057, 104.16, 0.2288", "501.962, 180.841, 104.16, 0.2542", "502.114, 180.675, 104.782, 0.4068", "502.445, 180.23, 105.404, 0.483", "502.788, 180.066, 106.4, 0.305", "503.41, 179.875, 107.489, 0.5084", "504.084, 179.837, 107.707, 0.6356", "504.771, 179.837, 107.987, 0.6864", "505.432, 179.837, 108.329, 0.6102", "506.22, 179.837, 108.36, 0.6356", "506.83, 179.417, 108.64, 0.7372", "507.059, 178.922, 109.387, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "478.916, 174.589, 112.729, 0.4576", "473.99, 175.385, 116.853, 0.6356", "472.375, 176.026, 119.603, 0.6356", "471.484, 176.066, 119.603, 0.5338", "470.483, 174.294, 125.789, 0.4576" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "478.916, 174.589, 112.729, 0.4576", "477.701, 166.781, 118.228, 0.9152" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "507.059, 178.922, 109.387, 0.2288", "506.894, 179.163, 110.32, 0.2288", "507.021, 179.379, 110.32, 0.2288", "507.237, 179.735, 110.32, 0.3304", "507.682, 180.091, 110.32, 0.3814", "508.177, 180.396, 110.32, 0.3304", "508.864, 180.511, 110.32, 0.2796", "509.118, 180.6, 110.32, 0.2542", "509.411, 180.65, 110.32, 0.3304", "509.766, 180.981, 110.32, 0.5338", "510.237, 181.426, 110.6, 0.5338", "510.707, 181.756, 110.6, 0.483", "511.127, 182.137, 110.6, 0.483", "511.368, 182.697, 110.6, 0.4576", "511.368, 183.421, 110.787, 0.4322", "511.368, 183.726, 110.88, 0.4576", "511.699, 184.298, 111.191, 0.6102", "511.826, 184.985, 111.44, 0.5084", "511.826, 185.9, 111.44, 0.305", "511.826, 186.586, 111.72, 0.2542", "511.826, 187.387, 111.72, 0.2288", "511.826, 188.188, 111.72, 0.2288", "511.826, 188.989, 111.72, 0.2288", "511.826, 189.79, 111.72, 0.2288", "511.826, 190.59, 111.72, 0.2288", "511.826, 191.391, 111.72, 0.2288", "511.826, 191.734, 111.72, 0.2288", "511.863, 192.04, 111.72, 0.2288", "511.99, 192.256, 111.72, 0.2288", "512.245, 192.344, 111.72, 0.2288", "512.435, 192.726, 111.72, 0.2288", "512.55, 192.955, 111.72, 0.2288", "512.626, 193.794, 111.72, 0.2542", "512.626, 194.594, 111.72, 0.2796", "512.626, 195.395, 111.72, 0.305", "512.741, 196.082, 111.72, 0.2796", "512.741, 196.882, 111.72, 0.2796", "512.741, 197.683, 111.72, 0.2796", "512.741, 198.484, 111.72, 0.305", "512.741, 199.285, 111.72, 0.305", "512.741, 200.086, 111.72, 0.356", "512.741, 200.886, 111.72, 0.4576", "512.741, 201.687, 111.72, 0.5338", "512.741, 202.374, 112.0, 0.5084", "512.741, 203.174, 112.0, 0.3814", "512.741, 203.975, 112.0, 0.2796", "512.741, 204.318, 112.0, 0.2288", "512.753, 204.649, 112.0, 0.2288", "512.893, 204.853, 112.0, 0.2288", "513.122, 204.967, 112.0, 0.2288", "513.263, 205.055, 112.0, 0.2542", "513.758, 205.361, 112.0, 0.2796", "514.164, 205.755, 112.0, 0.305", "514.546, 206.174, 112.0, 0.2796", "515.004, 206.517, 112.0, 0.2542", "515.41, 206.912, 112.0, 0.2288", "515.601, 207.522, 112.0, 0.2288", "515.601, 208.322, 112.0, 0.2288", "515.613, 209.111, 112.0, 0.2288", "515.817, 209.708, 112.0, 0.2288", "515.83, 209.924, 112.0, 0.2288", "515.83, 210.153, 112.0, 0.2288", "515.919, 210.407, 112.0, 0.2288", "516.071, 210.483, 112.0, 0.2288", "516.287, 210.496, 112.0, 0.2288", "516.516, 210.496, 112.0, 0.2288", "516.745, 210.496, 112.0, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "507.059, 178.922, 109.387, 0.2288", "507.262, 178.82, 110.04, 0.2542", "507.898, 178.197, 110.04, 0.305", "508.406, 177.905, 110.04, 0.305", "509.003, 177.701, 110.04, 0.356", "509.639, 177.536, 110.04, 0.4068", "510.224, 177.32, 110.04, 0.4576", "510.898, 177.206, 110.071, 0.4068", "511.381, 177.104, 110.6, 0.3304", "511.94, 176.862, 110.6, 0.2542", "512.589, 176.71, 110.6, 0.2288", "513.046, 176.367, 110.6, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "477.701, 166.781, 118.228, 0.9152", "477.7, 165.326, 118.228, 0.5338", "474.069, 161.544, 122.352, 0.356", "469.646, 157.944, 122.352, 0.2542", "469.643, 156.34, 122.352, 0.2288", "464.215, 147.737, 119.603, 0.2288", "462.097, 143.949, 118.228, 0.2288", "457.227, 137.874, 118.228, 0.2288", "456.931, 137.003, 118.228, 0.2288", "455.752, 135.7, 118.228, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "477.701, 166.781, 118.228, 0.9152", "480.835, 164.237, 122.352, 0.483", "482.58, 159.27, 122.352, 0.356", "484.867, 153.122, 128.539, 0.3304", "485.596, 151.951, 128.539, 0.3304", "487.357, 151.644, 128.539, 0.3304", "494.163, 145.984, 132.663, 0.2796", "496.506, 146.113, 132.663, 0.2542", "498.261, 146.099, 132.663, 0.2288", "500.158, 145.65, 132.663, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "513.046, 176.367, 110.6, 0.2288", "513.77, 176.176, 109.76, 0.305", "514.533, 176.138, 109.76, 0.3814", "515.143, 175.947, 109.76, 0.4068", "515.639, 175.642, 109.76, 0.3814", "516.287, 175.49, 109.76, 0.305", "516.745, 175.146, 109.76, 0.2542", "517.126, 174.727, 109.76, 0.2288", "517.647, 174.447, 109.76, 0.2288", "517.812, 174.383, 109.76, 0.2288", "518.003, 174.346, 109.76, 0.2288", "518.334, 174.219, 109.76, 0.4068", "518.423, 173.736, 109.76, 0.4576", "518.69, 173.087, 109.76, 0.4322", "518.804, 172.401, 109.76, 0.3814", "519.122, 171.918, 109.76, 0.305", "519.478, 171.587, 109.76, 0.305", "519.49, 170.914, 109.76, 0.4576", "519.694, 170.088, 109.76, 0.661", "520.062, 169.655, 109.76, 0.7372", "520.749, 169.312, 108.92, 0.6864", "521.778, 169.312, 108.92, 0.483", "522.286, 169.019, 108.92, 0.356", "522.656, 168.702, 108.92, 0.2288", "522.694, 168.397, 108.92, 0.2288", "522.694, 168.054, 108.92, 0.2288", "522.694, 167.825, 108.92, 0.2288", "522.694, 167.482, 108.92, 0.2288", "522.694, 167.101, 108.173, 0.4322", "522.681, 166.77, 106.773, 0.8644", "522.465, 165.766, 106.68, 0.8136", "522.186, 165.231, 105.871, 0.5848", "521.651, 165.079, 105.031, 0.5848", "520.863, 165.079, 104.44, 0.5592", "520.241, 164.901, 103.88, 0.6102", "519.44, 164.329, 103.88, 0.6864", "518.511, 163.656, 103.88, 0.7118", "517.774, 162.791, 103.88, 0.5592", "517.431, 162.334, 103.88, 0.4576", "517.088, 161.876, 103.88, 0.4068", "517.088, 161.533, 103.88, 0.483", "516.668, 160.923, 103.88, 0.6864", "516.287, 159.588, 103.6, 0.4576", "516.287, 158.864, 103.413, 0.3814", "516.173, 158.33, 103.04, 0.4322", "516.046, 157.758, 102.791, 0.5848", "515.817, 157.414, 101.671, 0.483", "515.193, 157.25, 101.36, 0.356", "514.775, 156.88, 101.329, 0.356", "514.686, 156.614, 100.52, 0.2288", "514.686, 156.499, 99.96, 0.2288", "514.673, 156.092, 99.5868, 0.2288", "514.114, 155.47, 99.4, 0.2288", "513.77, 155.126, 99.4, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "513.046, 176.367, 110.6, 0.2288", "513.465, 176.201, 111.129, 0.2288", "513.987, 175.947, 111.191, 0.2288", "514.049, 175.756, 111.409, 0.2288", "514.292, 175.706, 111.533, 0.2288", "514.342, 175.579, 111.938, 0.2288", "514.38, 175.49, 112.467, 0.2288", "514.648, 175.337, 112.84, 0.2288", "514.825, 175.172, 112.84, 0.2288", "515.308, 174.739, 112.84, 0.2796", "515.931, 174.562, 112.84, 0.4068", "516.63, 174.46, 112.84, 0.5848", "517.304, 174.333, 112.84, 0.7372", "518.346, 173.774, 112.84, 0.6864", "518.944, 173.583, 112.871, 0.5084", "519.44, 173.43, 113.244, 0.356", "519.528, 173.418, 113.836, 0.2542", "519.719, 173.316, 113.96, 0.2288", "519.923, 173.176, 113.96, 0.2288", "520.177, 173.087, 113.96, 0.2288", "520.406, 173.087, 113.96, 0.2288", "521.092, 172.973, 113.96, 0.2288", "521.435, 172.973, 113.96, 0.2542", "521.893, 172.744, 113.96, 0.356", "522.134, 172.413, 113.96, 0.356", "522.554, 172.07, 114.053, 0.4322", "522.999, 171.905, 114.52, 0.6102", "523.761, 171.409, 115.36, 0.7372", "524.829, 170.876, 115.36, 0.483", "525.325, 170.57, 115.36, 0.4068", "525.757, 170.202, 115.36, 0.4322", "526.202, 169.961, 115.64, 0.483", "526.672, 169.668, 115.733, 0.5084", "527.13, 169.401, 115.92, 0.4068", "527.384, 168.969, 115.92, 0.2288", "527.625, 168.867, 115.92, 0.2288", "527.943, 168.842, 115.92, 0.2288", "528.223, 168.549, 115.92, 0.2288", "528.388, 168.372, 115.92, 0.2288", "528.782, 167.85, 115.92, 0.2542", "529.214, 167.482, 115.92, 0.305", "529.583, 167.049, 115.92, 0.4322", "530.04, 166.706, 115.92, 0.5592", "530.498, 166.363, 115.92, 0.661", "531.057, 166.121, 115.92, 0.6102", "531.515, 165.778, 115.92, 0.5338", "532.074, 165.537, 115.92, 0.5084", "532.837, 165.308, 115.547, 0.6102", "533.333, 165.27, 115.173, 0.356", "533.562, 164.622, 115.08, 0.3304", "533.562, 164.278, 115.08, 0.4576", "533.562, 163.363, 115.08, 0.661", "533.841, 162.613, 115.08, 0.6356", "534.248, 162.448, 115.08, 0.4322", "534.655, 162.055, 115.08, 0.4322", "534.833, 161.431, 115.08, 0.5084", "534.947, 160.897, 114.707, 0.5338", "535.24, 160.465, 114.52, 0.5084", "535.519, 159.944, 114.52, 0.4322", "535.964, 159.588, 114.52, 0.4068", "536.498, 159.436, 114.52, 0.2796", "536.638, 159.232, 114.52, 0.2288", "536.74, 158.991, 114.52, 0.2288", "537.031, 158.253, 114.52, 0.2288", "537.26, 157.783, 114.271, 0.2288", "537.337, 157.529, 114.24, 0.2288", "537.337, 157.186, 114.24, 0.2288", "537.451, 156.957, 114.24, 0.2288", "537.603, 156.766, 114.24, 0.2288", "538.023, 156.156, 114.24, 0.2288", "538.15, 155.482, 114.24, 0.2288", "538.443, 154.987, 114.271, 0.2288", "538.684, 154.529, 114.52, 0.2288", "539.065, 154.109, 114.52, 0.2288", "539.6, 153.843, 114.52, 0.2288", "539.803, 153.703, 114.52, 0.2288", "539.968, 153.525, 114.52, 0.2288", "540.159, 153.373, 114.52, 0.2288", "540.197, 153.067, 114.52, 0.2288", "540.197, 152.838, 114.52, 0.2288", "540.197, 152.139, 114.769, 0.2288", "540.209, 151.821, 114.8, 0.2288", "540.299, 151.567, 114.8, 0.2288", "540.426, 151.351, 114.8, 0.2288", "540.59, 151.173, 114.8, 0.2288", "540.769, 150.779, 114.8, 0.2288", "540.769, 150.436, 114.8, 0.2288", "540.769, 149.521, 114.8, 0.2288", "540.769, 148.72, 114.8, 0.2288", "540.667, 148.021, 114.8, 0.2288", "540.654, 147.462, 114.24, 0.2288", "540.654, 146.673, 114.209, 0.2542", "540.654, 145.987, 113.929, 0.305", "540.667, 145.644, 113.12, 0.356", "540.769, 145.059, 113.12, 0.2542", "541.137, 144.398, 113.12, 0.2288", "541.341, 143.801, 113.12, 0.2288", "541.455, 143.114, 113.12, 0.2288", "541.709, 142.568, 113.12, 0.2288", "541.888, 142.403, 113.12, 0.2288", "542.091, 142.263, 113.12, 0.2288", "542.154, 141.983, 113.12, 0.2288", "542.243, 141.729, 113.12, 0.2288", "542.485, 141.055, 113.4, 0.2288", "542.599, 140.369, 113.4, 0.2288", "542.701, 139.67, 113.4, 0.2288", "542.714, 138.882, 113.4, 0.2288", "542.714, 138.081, 113.4, 0.2288", "542.714, 137.623, 113.4, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_388",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_389",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_27", "dend_26", "dend_23", "dend_0", "apic_0", "dend_33", "dend_28", "dend_25", "dend_24", "dend_22", "dend_1", "apic_28", "apic_1", "dend_35", "dend_34", "dend_32", "dend_29", "dend_11", "dend_2", "apic_36", "apic_29", "apic_27", "apic_2", "dend_39", "dend_36", "dend_31", "dend_30", "dend_19", "dend_12", "dend_8", "dend_3", "apic_42", "apic_37", "apic_31", "apic_30", "apic_8", "apic_3", "dend_38", "dend_37", "dend_21", "dend_20", "dend_14", "dend_13", "dend_10", "dend_9", "dend_7", "dend_4", "apic_39", "apic_38", "apic_35", "apic_32", "apic_24", "apic_9", "apic_7", "apic_4", "dend_16", "dend_15", "dend_6", "dend_5", "apic_41", "apic_40", "apic_34", "apic_33", "apic_26", "apic_25", "apic_11", "apic_10", "apic_6", "apic_5", "dend_18", "dend_17", "apic_13", "apic_12", "apic_19", "apic_14", "apic_23", "apic_20", "apic_18", "apic_15", "apic_22", "apic_21", "apic_17", "apic_16" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_28", "apic_1", "apic_36", "apic_29", "apic_27", "apic_2", "apic_42", "apic_37", "apic_31", "apic_30", "apic_8", "apic_3", "apic_39", "apic_38", "apic_35", "apic_32", "apic_24", "apic_9", "apic_7", "apic_4", "apic_41", "apic_40", "apic_34", "apic_33", "apic_26", "apic_25", "apic_11", "apic_10", "apic_6", "apic_5", "apic_13", "apic_12", "apic_19", "apic_14", "apic_23", "apic_20", "apic_18", "apic_15", "apic_22", "apic_21", "apic_17", "apic_16" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_41", "dend_40", "dend_27", "dend_26", "dend_23", "dend_0", "dend_33", "dend_28", "dend_25", "dend_24", "dend_22", "dend_1", "dend_35", "dend_34", "dend_32", "dend_29", "dend_11", "dend_2", "dend_39", "dend_36", "dend_31", "dend_30", "dend_19", "dend_12", "dend_8", "dend_3", "dend_38", "dend_37", "dend_21", "dend_20", "dend_14", "dend_13", "dend_10", "dend_9", "dend_7", "dend_4", "dend_16", "dend_15", "dend_6", "dend_5", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18337",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_28", "apic_1", "apic_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_29", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "apic_42", "apic_42", "apic_42", "apic_42", "apic_37", "apic_37", "apic_37", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_31", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_39", "apic_38", "apic_38", "apic_38", "apic_38", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_35", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_41", "apic_41", "apic_41", "apic_41", "apic_41", "apic_41", "apic_41", "apic_41", "apic_41", "apic_40", "apic_40", "apic_40", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_33", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "apic_13", "apic_12", "apic_19", "apic_19", "apic_19", "apic_19", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_23", "apic_23", "apic_23", "apic_23", "apic_20", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "3.56"
  }, {
    "group" : "dend",
    "value" : "3.56"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "277.21"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.005248199",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.012950052",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.26587296",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0013365134",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.008420958",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "4.4367576E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.2556668E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0070762695",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "8.825644E-4",
    "erev" : "-75.50921"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.8096174E-4",
    "erev" : "-75.50921"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "6.824969E-4",
    "erev" : "-75.50921"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "5.5955007E-4",
    "erev" : "-75.50921"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "3.23393E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.002333243",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473465456

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_33, id: dend_33, parent: dend_27
create dend_33
public dend_33
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_28, id: apic_28, parent: apic_0
create apic_28
public apic_28
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_36, id: apic_36, parent: apic_28
create apic_36
public apic_36
// Section: apic_29, id: apic_29, parent: apic_28
create apic_29
public apic_29
// Section: apic_27, id: apic_27, parent: apic_1
create apic_27
public apic_27
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_42, id: apic_42, parent: apic_36
create apic_42
public apic_42
// Section: apic_37, id: apic_37, parent: apic_36
create apic_37
public apic_37
// Section: apic_31, id: apic_31, parent: apic_29
create apic_31
public apic_31
// Section: apic_30, id: apic_30, parent: apic_29
create apic_30
public apic_30
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_39, id: apic_39, parent: apic_37
create apic_39
public apic_39
// Section: apic_38, id: apic_38, parent: apic_37
create apic_38
public apic_38
// Section: apic_35, id: apic_35, parent: apic_31
create apic_35
public apic_35
// Section: apic_32, id: apic_32, parent: apic_31
create apic_32
public apic_32
// Section: apic_24, id: apic_24, parent: apic_8
create apic_24
public apic_24
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_3
create apic_7
public apic_7
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_41, id: apic_41, parent: apic_39
create apic_41
public apic_41
// Section: apic_40, id: apic_40, parent: apic_39
create apic_40
public apic_40
// Section: apic_34, id: apic_34, parent: apic_32
create apic_34
public apic_34
// Section: apic_33, id: apic_33, parent: apic_32
create apic_33
public apic_33
// Section: apic_26, id: apic_26, parent: apic_24
create apic_26
public apic_26
// Section: apic_25, id: apic_25, parent: apic_24
create apic_25
public apic_25
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_19, id: apic_19, parent: apic_13
create apic_19
public apic_19
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_23, id: apic_23, parent: apic_19
create apic_23
public apic_23
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_18, id: apic_18, parent: apic_14
create apic_18
public apic_18
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_22, id: apic_22, parent: apic_20
create apic_22
public apic_22
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_388, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_388
// Group: {name=ModelViewParmSubset_389, groups=[], sections=[dend_42, dend_41, dend_40, dend_27, dend_26, dend_23, dend_0, apic_0, dend_33, dend_28, dend_25, dend_24, dend_22, dend_1, apic_28, apic_1, dend_35, dend_34, dend_32, dend_29, dend_11, dend_2, apic_36, apic_29, apic_27, apic_2, dend_39, dend_36, dend_31, dend_30, dend_19, dend_12, dend_8, dend_3, apic_42, apic_37, apic_31, apic_30, apic_8, apic_3, dend_38, dend_37, dend_21, dend_20, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, apic_39, apic_38, apic_35, apic_32, apic_24, apic_9, apic_7, apic_4, dend_16, dend_15, dend_6, dend_5, apic_41, apic_40, apic_34, apic_33, apic_26, apic_25, apic_11, apic_10, apic_6, apic_5, dend_18, dend_17, apic_13, apic_12, apic_19, apic_14, apic_23, apic_20, apic_18, apic_15, apic_22, apic_21, apic_17, apic_16]}
objref ModelViewParmSubset_389
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_28, apic_1, apic_36, apic_29, apic_27, apic_2, apic_42, apic_37, apic_31, apic_30, apic_8, apic_3, apic_39, apic_38, apic_35, apic_32, apic_24, apic_9, apic_7, apic_4, apic_41, apic_40, apic_34, apic_33, apic_26, apic_25, apic_11, apic_10, apic_6, apic_5, apic_13, apic_12, apic_19, apic_14, apic_23, apic_20, apic_18, apic_15, apic_22, apic_21, apic_17, apic_16]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_42, dend_41, dend_40, dend_27, dend_26, dend_23, dend_0, dend_33, dend_28, dend_25, dend_24, dend_22, dend_1, dend_35, dend_34, dend_32, dend_29, dend_11, dend_2, dend_39, dend_36, dend_31, dend_30, dend_19, dend_12, dend_8, dend_3, dend_38, dend_37, dend_21, dend_20, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, dend_16, dend_15, dend_6, dend_5, dend_18, dend_17]}
objref dend
// Group: {name=OneSecGrp_SectionRef_18337, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_18337
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, dend_1, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_1, apic_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_2, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, apic_42, apic_42, apic_42, apic_42, apic_37, apic_37, apic_37, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_39, apic_38, apic_38, apic_38, apic_38, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_40, apic_40, apic_40, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_18, dend_18, dend_18, dend_18, dend_17, apic_13, apic_12, apic_19, apic_19, apic_19, apic_19, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_23, apic_23, apic_23, apic_23, apic_20, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_42(0), soma_0(0.5)
    connect dend_41(0), soma_0(0.5)
    connect dend_40(0), soma_0(0.5)
    connect dend_27(0), soma_0(0.5)
    connect dend_26(0), soma_0(0.5)
    connect dend_23(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect apic_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_33(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_28(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_36(0), apic_28(1.0)
    connect apic_29(0), apic_28(1.0)
    connect apic_27(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_42(0), apic_36(1.0)
    connect apic_37(0), apic_36(1.0)
    connect apic_31(0), apic_29(1.0)
    connect apic_30(0), apic_29(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_39(0), apic_37(1.0)
    connect apic_38(0), apic_37(1.0)
    connect apic_35(0), apic_31(1.0)
    connect apic_32(0), apic_31(1.0)
    connect apic_24(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_41(0), apic_39(1.0)
    connect apic_40(0), apic_39(1.0)
    connect apic_34(0), apic_32(1.0)
    connect apic_33(0), apic_32(1.0)
    connect apic_26(0), apic_24(1.0)
    connect apic_25(0), apic_24(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_19(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_23(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_18(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_22(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 265.61, 535.163, 25.2, 14.4686 ) }
    soma_0 { pt3dadd( 272.844, 535.163, 25.2, 14.4686 ) }
    soma_0 { pt3dadd( 280.078, 535.163, 25.2, 14.4686 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 272.844, 535.163, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 278.685, 548.979, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 284.527, 562.795, 25.2, 1.0 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 269.379, 531.483, 37.1182, 0.4068 ) }
    dend_42 { pt3dadd( 268.569, 531.434, 37.1182, 0.5084 ) }
    dend_42 { pt3dadd( 267.707, 531.232, 37.1182, 0.5848 ) }
    dend_42 { pt3dadd( 266.235, 530.476, 37.1182, 0.5592 ) }
    dend_42 { pt3dadd( 265.273, 530.679, 37.1182, 0.4576 ) }
    dend_42 { pt3dadd( 263.63, 530.394, 37.1182, 0.356 ) }
    dend_42 { pt3dadd( 261.506, 529.791, 37.1182, 0.356 ) }
    dend_42 { pt3dadd( 259.733, 529.388, 37.1182, 0.4576 ) }
    dend_42 { pt3dadd( 257.957, 528.935, 37.1182, 0.6102 ) }
    dend_42 { pt3dadd( 257.043, 528.632, 37.1182, 0.7118 ) }
    dend_42 { pt3dadd( 256.43, 527.569, 37.1182, 0.7118 ) }
    dend_42 { pt3dadd( 255.154, 526.505, 37.1182, 0.5592 ) }
    dend_42 { pt3dadd( 251.025, 526.828, 38.493, 0.5592 ) }
    dend_42 { pt3dadd( 249.331, 526.064, 38.493, 0.661 ) }
    dend_42 { pt3dadd( 247.272, 524.634, 38.493, 0.6356 ) }
    dend_42 { pt3dadd( 246.184, 522.867, 39.1801, 0.5338 ) }
    dend_42 { pt3dadd( 245.117, 521.901, 39.1801, 0.4068 ) }
    dend_42 { pt3dadd( 243.948, 521.495, 39.1801, 0.356 ) }
    dend_42 { pt3dadd( 242.828, 520.833, 39.1801, 0.3814 ) }
    dend_42 { pt3dadd( 242.218, 520.069, 39.1801, 0.4322 ) }
    dend_42 { pt3dadd( 241.053, 517.579, 40.5549, 0.4576 ) }
    dend_42 { pt3dadd( 239.165, 515.434, 40.5549, 0.4576 ) }
    dend_42 { pt3dadd( 237.633, 512.881, 40.5549, 0.5084 ) }
    dend_42 { pt3dadd( 235.03, 509.717, 40.5549, 0.5338 ) }
    dend_42 { pt3dadd( 232.477, 508.236, 40.5549, 0.5338 ) }
    dend_42 { pt3dadd( 231.839, 507.872, 41.44, 0.4322 ) }
    dend_42 { pt3dadd( 231.292, 507.618, 41.44, 0.3814 ) }
    dend_42 { pt3dadd( 230.757, 507.351, 41.44, 0.3814 ) }
    dend_42 { pt3dadd( 230.173, 507.135, 41.44, 0.4068 ) }
    dend_42 { pt3dadd( 229.69, 506.932, 41.44, 0.305 ) }
    dend_42 { pt3dadd( 229.41, 506.525, 41.44, 0.2796 ) }
    dend_42 { pt3dadd( 229.041, 506.322, 41.44, 0.2796 ) }
    dend_42 { pt3dadd( 228.8, 505.877, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 228.711, 505.623, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 228.33, 505.432, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 227.999, 505.305, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 227.529, 504.974, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 226.906, 504.797, 41.44, 0.2796 ) }
    dend_42 { pt3dadd( 226.398, 504.504, 41.44, 0.3814 ) }
    dend_42 { pt3dadd( 225.813, 504.288, 41.44, 0.483 ) }
    dend_42 { pt3dadd( 225.254, 504.046, 41.44, 0.483 ) }
    dend_42 { pt3dadd( 224.821, 503.678, 41.44, 0.3814 ) }
    dend_42 { pt3dadd( 224.326, 503.373, 41.44, 0.2796 ) }
    dend_42 { pt3dadd( 223.69, 503.208, 41.44, 0.2288 ) }
    dend_42 { pt3dadd( 223.309, 502.902, 41.72, 0.2288 ) }
    dend_42 { pt3dadd( 222.724, 502.686, 41.72, 0.2288 ) }
    dend_42 { pt3dadd( 222.127, 502.597, 42.0, 0.2288 ) }
    dend_42 { pt3dadd( 221.364, 502.559, 42.0, 0.2288 ) }
    dend_42 { pt3dadd( 220.576, 502.547, 42.0, 0.2288 ) }
    dend_42 { pt3dadd( 220.106, 502.33, 42.28, 0.2288 ) }
    dend_42 { pt3dadd( 219.584, 502.064, 42.3111, 0.2288 ) }
    dend_42 { pt3dadd( 219.076, 501.987, 42.84, 0.2288 ) }
    dend_42 { pt3dadd( 218.39, 501.987, 43.12, 0.2542 ) }
    dend_42 { pt3dadd( 217.589, 501.987, 43.12, 0.2796 ) }
    dend_42 { pt3dadd( 216.788, 501.987, 43.12, 0.305 ) }
    dend_42 { pt3dadd( 215.987, 501.987, 43.12, 0.2796 ) }
    dend_42 { pt3dadd( 215.186, 501.987, 43.12, 0.2542 ) }
    dend_42 { pt3dadd( 214.386, 501.987, 43.12, 0.2288 ) }
    dend_42 { pt3dadd( 213.585, 501.987, 43.12, 0.2542 ) }
    dend_42 { pt3dadd( 212.975, 501.796, 43.12, 0.305 ) }
    dend_42 { pt3dadd( 212.212, 501.758, 43.12, 0.4068 ) }
    dend_42 { pt3dadd( 211.717, 501.453, 43.12, 0.4576 ) }
    dend_42 { pt3dadd( 211.17, 501.199, 43.12, 0.4576 ) }
    dend_42 { pt3dadd( 210.382, 501.186, 43.12, 0.356 ) }
    dend_42 { pt3dadd( 209.581, 501.186, 43.12, 0.2796 ) }
    dend_42 { pt3dadd( 209.238, 501.186, 43.12, 0.2288 ) }
    dend_42 { pt3dadd( 208.894, 501.186, 43.12, 0.2288 ) }
    dend_42 { pt3dadd( 208.666, 501.072, 43.12, 0.2288 ) }
    dend_42 { pt3dadd( 208.475, 500.92, 43.12, 0.2288 ) }
    dend_42 { pt3dadd( 207.852, 500.513, 43.12, 0.3304 ) }
    dend_42 { pt3dadd( 207.255, 500.309, 43.12, 0.4576 ) }
    dend_42 { pt3dadd( 206.835, 499.941, 43.1511, 0.5338 ) }
    dend_42 { pt3dadd( 206.517, 499.56, 43.4, 0.5084 ) }
    dend_42 { pt3dadd( 205.716, 498.873, 43.68, 0.3814 ) }
    dend_42 { pt3dadd( 205.234, 498.555, 43.68, 0.4576 ) }
    dend_42 { pt3dadd( 204.674, 498.174, 43.8978, 0.5338 ) }
    dend_42 { pt3dadd( 204.611, 497.678, 44.7689, 0.4322 ) }
    dend_42 { pt3dadd( 204.052, 497.64, 45.2668, 0.4068 ) }
    dend_42 { pt3dadd( 203.594, 497.449, 45.36, 0.4576 ) }
    dend_42 { pt3dadd( 202.831, 496.839, 45.36, 0.4322 ) }
    dend_42 { pt3dadd( 202.361, 496.509, 45.36, 0.4068 ) }
    dend_42 { pt3dadd( 201.802, 496.267, 45.36, 0.3814 ) }
    dend_42 { pt3dadd( 201.103, 496.165, 45.36, 0.4322 ) }
    dend_42 { pt3dadd( 200.531, 496.051, 45.36, 0.6102 ) }
    dend_42 { pt3dadd( 200.162, 495.504, 45.36, 0.6864 ) }
    dend_42 { pt3dadd( 199.297, 494.767, 45.36, 0.6864 ) }
    dend_42 { pt3dadd( 198.598, 493.865, 45.36, 0.6356 ) }
    dend_42 { pt3dadd( 198.255, 493.407, 45.36, 0.5338 ) }
    dend_42 { pt3dadd( 197.925, 492.937, 45.36, 0.3814 ) }
    dend_42 { pt3dadd( 197.492, 492.569, 45.36, 0.2796 ) }
    dend_42 { pt3dadd( 197.238, 492.022, 45.36, 0.2288 ) }
    dend_42 { pt3dadd( 197.099, 491.475, 45.36, 0.2288 ) }
    dend_42 { pt3dadd( 196.691, 491.196, 45.36, 0.2288 ) }
    dend_42 { pt3dadd( 196.31, 490.662, 45.36, 0.3304 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_42 { pt3dadd( 195.853, 490.433, 45.36, 0.3814 ) }
    dend_42 { pt3dadd( 195.154, 490.102, 45.36, 0.356 ) }
    dend_42 { pt3dadd( 194.773, 489.682, 45.36, 0.4068 ) }
    dend_42 { pt3dadd( 194.467, 489.187, 45.36, 0.483 ) }
    dend_42 { pt3dadd( 194.124, 488.729, 45.36, 0.483 ) }
    dend_42 { pt3dadd( 193.73, 488.323, 45.36, 0.4068 ) }
    dend_42 { pt3dadd( 193.222, 488.03, 45.36, 0.3304 ) }
    dend_42 { pt3dadd( 192.65, 487.802, 45.36, 0.3304 ) }
    dend_42 { pt3dadd( 192.179, 487.471, 45.36, 0.356 ) }
    dend_42 { pt3dadd( 191.518, 487.331, 45.36, 0.4068 ) }
    dend_42 { pt3dadd( 191.01, 487.039, 45.36, 0.4576 ) }
    dend_42 { pt3dadd( 190.501, 486.747, 45.36, 0.5084 ) }
    dend_42 { pt3dadd( 190.056, 486.441, 45.2357, 0.5338 ) }
    dend_42 { pt3dadd( 189.561, 486.086, 44.8, 0.4322 ) }
    dend_42 { pt3dadd( 189.103, 485.971, 44.8, 0.3304 ) }
    dend_42 { pt3dadd( 188.531, 485.857, 44.8, 0.4322 ) }
    dend_42 { pt3dadd( 188.124, 485.578, 44.8, 0.5848 ) }
    dend_42 { pt3dadd( 187.425, 485.247, 44.8, 0.5084 ) }
    dend_42 { pt3dadd( 186.93, 484.942, 44.8, 0.3814 ) }
    dend_42 { pt3dadd( 186.231, 484.84, 44.8, 0.2796 ) }
    dend_42 { pt3dadd( 185.9, 484.827, 44.8, 0.2288 ) }
    dend_42 { pt3dadd( 185.671, 484.827, 44.8, 0.2288 ) }
    dend_42 { pt3dadd( 185.442, 484.827, 44.8, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 23/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 272.027, 528.344, 26.1201, 0.2796 ) }
    dend_41 { pt3dadd( 272.493, 527.19, 26.1201, 0.3814 ) }
    dend_41 { pt3dadd( 272.732, 526.519, 26.1201, 0.5338 ) }
    dend_41 { pt3dadd( 272.072, 525.735, 26.1201, 0.6102 ) }
    dend_41 { pt3dadd( 268.749, 523.479, 24.7453, 0.6356 ) }
    dend_41 { pt3dadd( 267.156, 522.66, 24.7453, 0.6102 ) }
    dend_41 { pt3dadd( 265.95, 521.802, 24.7453, 0.6356 ) }
    dend_41 { pt3dadd( 264.825, 521.746, 24.7453, 0.661 ) }
    dend_41 { pt3dadd( 263.948, 521.704, 24.7453, 0.6864 ) }
    dend_41 { pt3dadd( 263.115, 520.765, 25.4327, 0.6356 ) }
    dend_41 { pt3dadd( 260.474, 518.647, 25.4327, 0.5848 ) }
    dend_41 { pt3dadd( 258.91, 516.611, 25.4327, 0.5338 ) }
    dend_41 { pt3dadd( 256.719, 514.901, 26.1201, 0.5592 ) }
    dend_41 { pt3dadd( 256.193, 514.388, 26.1201, 0.5848 ) }
    dend_41 { pt3dadd( 254.789, 514.071, 26.1201, 0.6102 ) }
    dend_41 { pt3dadd( 253.64, 513.709, 26.1201, 0.6356 ) }
    dend_41 { pt3dadd( 252.878, 513.128, 26.1201, 0.6864 ) }
    dend_41 { pt3dadd( 251.169, 511.547, 26.8075, 0.7626 ) }
    dend_41 { pt3dadd( 249.813, 510.437, 26.8075, 0.788 ) }
    dend_41 { pt3dadd( 248.941, 508.645, 26.8075, 0.7626 ) }
    dend_41 { pt3dadd( 246.723, 507.554, 26.8075, 0.6864 ) }
    dend_41 { pt3dadd( 245.296, 506.704, 26.1201, 0.661 ) }
    dend_41 { pt3dadd( 242.784, 505.965, 26.1201, 0.661 ) }
    dend_41 { pt3dadd( 242.164, 505.281, 26.1201, 0.6864 ) }
    dend_41 { pt3dadd( 240.886, 504.56, 26.1201, 0.6356 ) }
    dend_41 { pt3dadd( 239.294, 504.12, 26.1201, 0.6102 ) }
    dend_41 { pt3dadd( 238.181, 503.932, 25.76, 0.6102 ) }
    dend_41 { pt3dadd( 237.685, 503.627, 25.76, 0.6102 ) }
    dend_41 { pt3dadd( 236.554, 503.156, 25.76, 0.661 ) }
    dend_41 { pt3dadd( 235.651, 502.457, 25.76, 0.7626 ) }
    dend_41 { pt3dadd( 234.597, 501.911, 25.76, 0.5592 ) }
    dend_41 { pt3dadd( 234.202, 501.504, 25.76, 0.4068 ) }
    dend_41 { pt3dadd( 233.694, 501.212, 25.76, 0.356 ) }
    dend_41 { pt3dadd( 233.376, 500.729, 25.76, 0.3814 ) }
    dend_41 { pt3dadd( 232.956, 500.348, 25.76, 0.4576 ) }
    dend_41 { pt3dadd( 232.537, 499.966, 25.76, 0.483 ) }
    dend_41 { pt3dadd( 231.724, 499.394, 25.2311, 0.356 ) }
    dend_41 { pt3dadd( 231.088, 499.254, 25.1689, 0.305 ) }
    dend_41 { pt3dadd( 230.414, 499.229, 24.92, 0.305 ) }
    dend_41 { pt3dadd( 229.83, 499.013, 24.92, 0.3814 ) }
    dend_41 { pt3dadd( 229.258, 498.784, 24.36, 0.6102 ) }
    dend_41 { pt3dadd( 228.571, 498.098, 24.36, 0.661 ) }
    dend_41 { pt3dadd( 227.796, 497.272, 24.36, 0.5848 ) }
    dend_41 { pt3dadd( 227.007, 496.458, 24.36, 0.5338 ) }
    dend_41 { pt3dadd( 226.716, 495.949, 24.36, 0.5338 ) }
    dend_41 { pt3dadd( 226.372, 495.492, 24.36, 0.5084 ) }
    dend_41 { pt3dadd( 225.508, 494.755, 24.36, 0.4576 ) }
    dend_41 { pt3dadd( 224.91, 494.551, 24.36, 0.4068 ) }
    dend_41 { pt3dadd( 224.402, 494.373, 24.36, 0.4322 ) }
    dend_41 { pt3dadd( 224.11, 493.979, 24.36, 0.4322 ) }
    dend_41 { pt3dadd( 223.575, 493.484, 24.36, 0.356 ) }
    dend_41 { pt3dadd( 223.321, 492.937, 24.36, 0.356 ) }
    dend_41 { pt3dadd( 223.08, 492.378, 24.36, 0.3814 ) }
    dend_41 { pt3dadd( 222.699, 491.958, 24.36, 0.356 ) }
    dend_41 { pt3dadd( 222.177, 491.679, 24.36, 0.3304 ) }
    dend_41 { pt3dadd( 221.491, 491.564, 24.36, 0.305 ) }
    dend_41 { pt3dadd( 220.792, 491.462, 24.36, 0.305 ) }
    dend_41 { pt3dadd( 220.106, 491.462, 24.64, 0.3304 ) }
    dend_41 { pt3dadd( 219.444, 491.323, 24.64, 0.356 ) }
    dend_41 { pt3dadd( 218.962, 491.005, 24.64, 0.3814 ) }
    dend_41 { pt3dadd( 218.466, 490.699, 24.64, 0.356 ) }
    dend_41 { pt3dadd( 218.084, 490.281, 25.2, 0.4068 ) }
    dend_41 { pt3dadd( 217.919, 489.873, 25.2, 0.4068 ) }
    dend_41 { pt3dadd( 217.551, 489.441, 25.2, 0.356 ) }
    dend_41 { pt3dadd( 217.385, 488.806, 25.2, 0.356 ) }
    dend_41 { pt3dadd( 217.093, 488.297, 25.2, 0.3814 ) }
    dend_41 { pt3dadd( 216.902, 487.687, 25.2, 0.4322 ) }
    dend_41 { pt3dadd( 216.788, 487.001, 25.2, 0.4576 ) }
    dend_41 { pt3dadd( 216.788, 486.2, 25.2, 0.4322 ) }
    dend_41 { pt3dadd( 216.788, 485.399, 25.2, 0.4322 ) }
    dend_41 { pt3dadd( 216.788, 485.056, 25.2, 0.4322 ) }
    dend_41 { pt3dadd( 216.788, 484.561, 25.6668, 0.483 ) }
    dend_41 { pt3dadd( 216.865, 483.989, 26.32, 0.356 ) }
    dend_41 { pt3dadd( 217.246, 483.111, 26.32, 0.305 ) }
    dend_41 { pt3dadd( 217.36, 482.425, 26.32, 0.305 ) }
    dend_41 { pt3dadd( 217.36, 481.624, 26.32, 0.356 ) }
    dend_41 { pt3dadd( 217.347, 480.836, 26.32, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_41 { pt3dadd( 216.75, 479.831, 26.32, 0.7118 ) }
    dend_41 { pt3dadd( 216.139, 478.841, 26.32, 0.6864 ) }
    dend_41 { pt3dadd( 215.606, 477.772, 26.32, 0.6356 ) }
    dend_41 { pt3dadd( 214.868, 476.908, 26.32, 0.6864 ) }
    dend_41 { pt3dadd( 214.259, 475.917, 26.32, 0.6356 ) }
    dend_41 { pt3dadd( 213.776, 474.9, 26.0711, 0.5848 ) }
    dend_41 { pt3dadd( 213.445, 474.442, 26.04, 0.5338 ) }
    dend_41 { pt3dadd( 213.229, 473.959, 25.7911, 0.5338 ) }
    dend_41 { pt3dadd( 213.0, 473.476, 25.5732, 0.5084 ) }
    dend_41 { pt3dadd( 212.466, 472.447, 25.48, 0.6102 ) }
    dend_41 { pt3dadd( 211.717, 471.595, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 211.22, 471.29, 25.48, 0.4576 ) }
    dend_41 { pt3dadd( 210.648, 471.061, 25.48, 0.5084 ) }
    dend_41 { pt3dadd( 209.924, 470.985, 25.48, 0.5592 ) }
    dend_41 { pt3dadd( 209.123, 470.985, 25.48, 0.5084 ) }
    dend_41 { pt3dadd( 208.36, 470.947, 25.48, 0.4576 ) }
    dend_41 { pt3dadd( 207.636, 470.87, 25.48, 0.4576 ) }
    dend_41 { pt3dadd( 206.912, 470.794, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 206.276, 470.629, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 205.653, 470.451, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 204.89, 470.413, 25.48, 0.5338 ) }
    dend_41 { pt3dadd( 204.09, 470.413, 25.48, 0.5848 ) }
    dend_41 { pt3dadd( 203.391, 470.311, 25.48, 0.5592 ) }
    dend_41 { pt3dadd( 202.704, 470.197, 25.48, 0.5338 ) }
    dend_41 { pt3dadd( 202.068, 470.032, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 201.458, 469.841, 25.48, 0.5084 ) }
    dend_41 { pt3dadd( 200.772, 469.726, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 199.971, 469.726, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 199.208, 469.689, 25.48, 0.483 ) }
    dend_41 { pt3dadd( 198.561, 469.535, 25.48, 0.5084 ) }
    dend_41 { pt3dadd( 197.95, 469.46, 25.76, 0.5338 ) }
    dend_41 { pt3dadd( 197.454, 469.383, 26.32, 0.5338 ) }
    dend_41 { pt3dadd( 196.92, 469.231, 26.6, 0.5338 ) }
    dend_41 { pt3dadd( 196.348, 469.002, 26.6, 0.5338 ) }
    dend_41 { pt3dadd( 195.903, 468.647, 26.6, 0.5338 ) }
    dend_41 { pt3dadd( 195.472, 468.277, 26.6, 0.5338 ) }
    dend_41 { pt3dadd( 194.9, 467.819, 26.6, 0.5084 ) }
    dend_41 { pt3dadd( 194.557, 467.247, 26.6, 0.356 ) }
    dend_41 { pt3dadd( 194.137, 467.21, 26.6, 0.2796 ) }
    dend_41 { pt3dadd( 193.438, 467.108, 26.6, 0.3304 ) }
    dend_41 { pt3dadd( 192.929, 466.816, 26.6, 0.356 ) }
    dend_41 { pt3dadd( 192.585, 466.358, 26.6, 0.4068 ) }
    dend_41 { pt3dadd( 192.205, 465.939, 26.6, 0.4322 ) }
    dend_41 { pt3dadd( 191.824, 465.519, 26.6, 0.483 ) }
    dend_41 { pt3dadd( 191.582, 464.959, 26.6, 0.5338 ) }
    dend_41 { pt3dadd( 191.162, 463.892, 26.88, 0.661 ) }
    dend_41 { pt3dadd( 191.162, 463.091, 26.88, 0.661 ) }
    dend_41 { pt3dadd( 191.162, 462.29, 26.88, 0.5848 ) }
    dend_41 { pt3dadd( 191.162, 461.49, 26.88, 0.4576 ) }
    dend_41 { pt3dadd( 191.162, 460.689, 26.88, 0.356 ) }
    dend_41 { pt3dadd( 191.162, 459.888, 26.88, 0.3304 ) }
    dend_41 { pt3dadd( 191.125, 459.227, 27.1289, 0.356 ) }
    dend_41 { pt3dadd( 190.819, 458.744, 27.16, 0.4068 ) }
    dend_41 { pt3dadd( 190.59, 458.172, 27.16, 0.4068 ) }
    dend_41 { pt3dadd( 190.476, 457.486, 27.16, 0.4576 ) }
    dend_41 { pt3dadd( 190.26, 457.092, 27.6268, 0.483 ) }
    dend_41 { pt3dadd( 189.65, 456.138, 27.72, 0.6356 ) }
    dend_41 { pt3dadd( 188.735, 455.452, 27.72, 0.6102 ) }
    dend_41 { pt3dadd( 188.226, 455.16, 27.72, 0.5338 ) }
    dend_41 { pt3dadd( 187.616, 455.083, 28.0, 0.4576 ) }
    dend_41 { pt3dadd( 187.006, 454.892, 28.0, 0.3814 ) }
    dend_41 { pt3dadd( 186.37, 454.727, 28.0, 0.356 ) }
    dend_41 { pt3dadd( 185.748, 454.549, 28.0, 0.3814 ) }
    dend_41 { pt3dadd( 185.087, 454.409, 28.0, 0.4322 ) }
    dend_41 { pt3dadd( 184.604, 454.091, 28.0, 0.4068 ) }
    dend_41 { pt3dadd( 184.07, 453.825, 28.0, 0.356 ) }
    dend_41 { pt3dadd( 183.535, 453.558, 28.0, 0.305 ) }
    dend_41 { pt3dadd( 182.938, 453.355, 28.0, 0.356 ) }
    dend_41 { pt3dadd( 182.443, 453.049, 28.0, 0.4068 ) }
    dend_41 { pt3dadd( 181.782, 452.91, 28.0, 0.483 ) }
    dend_41 { pt3dadd( 181.247, 452.643, 28.0, 0.5084 ) }
    dend_41 { pt3dadd( 180.244, 452.147, 27.7511, 0.5592 ) }
    dend_41 { pt3dadd( 179.71, 451.893, 27.72, 0.5338 ) }
    dend_41 { pt3dadd( 179.227, 451.575, 27.72, 0.4576 ) }
    dend_41 { pt3dadd( 178.591, 451.41, 27.72, 0.4576 ) }
    dend_41 { pt3dadd( 177.842, 450.888, 26.9111, 0.5592 ) }
    dend_41 { pt3dadd( 177.256, 450.495, 26.5068, 0.5338 ) }
    dend_41 { pt3dadd( 176.939, 449.859, 26.32, 0.4068 ) }
    dend_41 { pt3dadd( 176.862, 449.02, 26.04, 0.3814 ) }
    dend_41 { pt3dadd( 176.862, 448.219, 26.04, 0.3304 ) }
    dend_41 { pt3dadd( 176.862, 447.597, 25.6043, 0.356 ) }
    dend_41 { pt3dadd( 176.862, 446.961, 25.2, 0.4322 ) }
    dend_41 { pt3dadd( 176.862, 446.553, 24.5157, 0.4322 ) }
    dend_41 { pt3dadd( 177.066, 446.351, 23.8311, 0.2542 ) }
    dend_41 { pt3dadd( 177.447, 445.753, 23.7068, 0.2288 ) }
    dend_41 { pt3dadd( 177.688, 445.384, 23.24, 0.2288 ) }
    dend_41 { pt3dadd( 178.108, 445.003, 23.24, 0.2288 ) }
    dend_41 { pt3dadd( 178.171, 444.723, 23.24, 0.2288 ) }
    dend_41 { pt3dadd( 178.387, 444.596, 23.24, 0.2288 ) }
    dend_41 { pt3dadd( 178.655, 444.521, 23.24, 0.2542 ) }
    dend_41 { pt3dadd( 178.922, 444.444, 23.24, 0.305 ) }
    dend_41 { pt3dadd( 179.837, 444.33, 23.24, 0.4068 ) }
    dend_41 { pt3dadd( 180.409, 444.215, 22.96, 0.3814 ) }
    dend_41 { pt3dadd( 181.133, 444.139, 22.96, 0.3304 ) }
    dend_41 { pt3dadd( 181.782, 443.986, 22.96, 0.3304 ) }
    dend_41 { pt3dadd( 182.582, 443.986, 22.96, 0.3814 ) }
    dend_41 { pt3dadd( 182.963, 443.986, 22.7732, 0.4576 ) }
    dend_41 { pt3dadd( 183.307, 444.406, 22.68, 0.4576 ) }
    dend_41 { pt3dadd( 183.612, 444.787, 22.68, 0.2796 ) }
    dend_41 { pt3dadd( 183.905, 444.837, 22.68, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( 184.07, 445.13, 22.68, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 1/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 272.997, 527.853, 19.873, 0.5084 ) }
    dend_40 { pt3dadd( 273.073, 527.384, 20.44, 0.5338 ) }
    dend_40 { pt3dadd( 273.085, 526.825, 20.44, 0.4322 ) }
    dend_40 { pt3dadd( 273.391, 526.444, 20.44, 0.2796 ) }
    dend_40 { pt3dadd( 274.585, 525.693, 20.44, 0.4576 ) }
    dend_40 { pt3dadd( 275.056, 525.262, 20.6212, 0.5848 ) }
    dend_40 { pt3dadd( 275.448, 524.56, 20.6212, 0.6864 ) }
    dend_40 { pt3dadd( 276.032, 523.347, 20.6212, 0.7626 ) }
    dend_40 { pt3dadd( 276.245, 521.967, 19.9338, 0.788 ) }
    dend_40 { pt3dadd( 276.278, 520.935, 19.9338, 0.7372 ) }
    dend_40 { pt3dadd( 276.741, 520.236, 19.9338, 0.6356 ) }
    dend_40 { pt3dadd( 278.424, 519.305, 19.9338, 0.5848 ) }
    dend_40 { pt3dadd( 280.694, 519.183, 17.1844, 0.5848 ) }
    dend_40 { pt3dadd( 281.421, 518.624, 17.1844, 0.5848 ) }
    dend_40 { pt3dadd( 282.087, 518.258, 17.1844, 0.4576 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 16/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 267.125, 538.865, 29.0251, 0.4322 ) }
    dend_27 { pt3dadd( 267.005, 539.766, 30.6513, 0.5084 ) }
    dend_27 { pt3dadd( 267.57, 540.387, 32.3932, 0.6356 ) }
    dend_27 { pt3dadd( 267.99, 541.368, 32.935, 0.7118 ) }
    dend_27 { pt3dadd( 268.057, 542.454, 32.3274, 0.6864 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 270.557, 542.104, 24.5916, 0.6102 ) }
    dend_26 { pt3dadd( 269.831, 542.497, 22.8287, 0.5084 ) }
    dend_26 { pt3dadd( 268.827, 542.566, 21.6093, 0.483 ) }
    dend_26 { pt3dadd( 267.83, 542.95, 20.7665, 0.483 ) }
    dend_26 { pt3dadd( 266.995, 543.678, 20.232, 0.5848 ) }
    dend_26 { pt3dadd( 266.511, 544.634, 19.3323, 0.6102 ) }
    dend_26 { pt3dadd( 265.581, 545.438, 18.5153, 0.6102 ) }
    dend_26 { pt3dadd( 264.757, 546.213, 18.7261, 0.5338 ) }
    dend_26 { pt3dadd( 263.889, 546.859, 19.4457, 0.4576 ) }
    dend_26 { pt3dadd( 263.052, 547.475, 18.6606, 0.4576 ) }
    dend_26 { pt3dadd( 262.267, 548.286, 18.4797, 0.4576 ) }
    dend_26 { pt3dadd( 261.219, 548.734, 18.4786, 0.5084 ) }
    dend_26 { pt3dadd( 260.283, 549.389, 18.4724, 0.483 ) }
    dend_26 { pt3dadd( 259.499, 550.196, 18.4366, 0.483 ) }
    dend_26 { pt3dadd( 258.878, 551.124, 18.118, 0.4576 ) }
    dend_26 { pt3dadd( 257.969, 551.633, 18.3932, 0.483 ) }
    dend_26 { pt3dadd( 256.925, 551.814, 19.2559, 0.5084 ) }
    dend_26 { pt3dadd( 256.258, 552.409, 17.7383, 0.483 ) }
    dend_26 { pt3dadd( 255.574, 553.286, 17.358, 0.4068 ) }
    dend_26 { pt3dadd( 254.688, 554.0, 17.3513, 0.3304 ) }
    dend_26 { pt3dadd( 253.788, 554.704, 17.3194, 0.3304 ) }
    dend_26 { pt3dadd( 252.992, 555.522, 17.1886, 0.3304 ) }
    dend_26 { pt3dadd( 252.27, 556.366, 16.6298, 0.356 ) }
    dend_26 { pt3dadd( 251.347, 555.985, 17.2682, 0.356 ) }
    dend_26 { pt3dadd( 250.422, 555.755, 16.24, 0.4576 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 46/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 270.558, 542.352, 25.7855, 0.788 ) }
    dend_23 { pt3dadd( 270.146, 543.398, 25.4895, 0.8898 ) }
    dend_23 { pt3dadd( 270.042, 545.115, 26.6927, 0.788 ) }
    dend_23 { pt3dadd( 269.73, 546.003, 28.1431, 0.6356 ) }
    dend_23 { pt3dadd( 269.464, 547.069, 27.9583, 0.6356 ) }
    dend_23 { pt3dadd( 268.856, 547.985, 28.4102, 0.6356 ) }
    dend_23 { pt3dadd( 268.358, 549.006, 28.6031, 0.661 ) }
    dend_23 { pt3dadd( 267.961, 550.067, 28.8366, 0.5592 ) }
    dend_23 { pt3dadd( 267.448, 550.973, 29.8936, 0.5338 ) }
    dend_23 { pt3dadd( 267.292, 551.997, 31.0495, 0.4576 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 56/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 279.947, 536.764, 24.4384, 0.788 ) }
    dend_0 { pt3dadd( 281.032, 536.546, 24.7489, 0.9914 ) }
    dend_0 { pt3dadd( 282.156, 536.573, 25.1821, 1.144 ) }
    dend_0 { pt3dadd( 283.267, 536.789, 25.083, 1.1948 ) }
    dend_0 { pt3dadd( 285.482, 536.994, 24.3006, 1.1948 ) }
    dend_0 { pt3dadd( 286.575, 536.995, 25.0768, 1.144 ) }
    dend_0 { pt3dadd( 287.717, 537.002, 25.2003, 0.9152 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 63/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 275.166, 528.606, 29.9869, 0.6864 ) }
    apic_0 { pt3dadd( 275.917, 527.859, 30.7924, 0.7118 ) }
    apic_0 { pt3dadd( 276.547, 526.906, 30.786, 0.7372 ) }
    apic_0 { pt3dadd( 277.29, 526.036, 30.7387, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 284.527, 562.795, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 290.368, 576.611, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 296.209, 590.427, 25.2, 1.0 ) }
    // Section: dend_33, id: dend_33, parent: dend_27 (entry count 70/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 268.057, 542.454, 32.3274, 0.6864 ) }
    dend_33 { pt3dadd( 268.261, 543.619, 30.8, 0.5338 ) }
    dend_33 { pt3dadd( 268.222, 544.763, 30.8003, 0.5592 ) }
    dend_33 { pt3dadd( 267.948, 545.859, 30.8008, 0.6356 ) }
    dend_33 { pt3dadd( 267.227, 546.743, 30.8042, 0.8136 ) }
    dend_33 { pt3dadd( 266.441, 547.573, 30.8168, 0.8644 ) }
    dend_33 { pt3dadd( 265.755, 548.483, 30.8837, 0.9152 ) }
    dend_33 { pt3dadd( 264.964, 549.279, 31.2306, 0.788 ) }
    dend_33 { pt3dadd( 264.047, 549.865, 32.0695, 0.6864 ) }
    dend_33 { pt3dadd( 263.525, 550.773, 32.9263, 0.5338 ) }
    dend_33 { pt3dadd( 263.046, 551.807, 33.0218, 0.5592 ) }
    dend_33 { pt3dadd( 262.547, 552.832, 32.935, 0.5848 ) }
    dend_33 { pt3dadd( 262.184, 553.878, 32.3789, 0.6356 ) }
    dend_33 { pt3dadd( 261.675, 554.882, 32.1034, 0.5848 ) }
    dend_33 { pt3dadd( 260.934, 555.628, 32.963, 0.6356 ) }
    dend_33 { pt3dadd( 260.241, 556.535, 33.0277, 0.7118 ) }
    dend_33 { pt3dadd( 259.584, 557.469, 32.9795, 0.788 ) }
    dend_33 { pt3dadd( 258.753, 558.246, 32.7726, 0.7372 ) }
    dend_33 { pt3dadd( 257.756, 558.653, 31.9178, 0.6356 ) }
    dend_33 { pt3dadd( 256.484, 559.411, 31.0643, 0.5084 ) }
    dend_33 { pt3dadd( 255.714, 560.189, 31.6467, 0.5084 ) }
    dend_33 { pt3dadd( 254.95, 561.019, 31.9166, 0.5848 ) }
    dend_33 { pt3dadd( 254.163, 561.831, 31.9012, 0.661 ) }
    dend_33 { pt3dadd( 253.319, 562.601, 31.8273, 0.7118 ) }
    dend_33 { pt3dadd( 252.781, 563.577, 31.3348, 0.7118 ) }
    dend_33 { pt3dadd( 252.275, 564.349, 29.7774, 0.661 ) }
    dend_33 { pt3dadd( 251.38, 564.958, 28.9702, 0.6864 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 97/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 268.057, 542.454, 32.3274, 0.6864 ) }
    dend_28 { pt3dadd( 267.435, 543.193, 31.9676, 0.6102 ) }
    dend_28 { pt3dadd( 266.428, 543.56, 32.0989, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( 265.791, 542.731, 32.9451, 0.7372 ) }
    dend_28 { pt3dadd( 264.745, 542.588, 33.5698, 0.839 ) }
    dend_28 { pt3dadd( 264.191, 542.731, 35.8739, 0.9152 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 3/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 267.292, 551.997, 31.0495, 0.4576 ) }
    dend_25 { pt3dadd( 266.991, 552.575, 32.5968, 0.3814 ) }
    dend_25 { pt3dadd( 266.679, 553.036, 34.9244, 0.4322 ) }
    dend_25 { pt3dadd( 266.155, 554.01, 35.2948, 0.483 ) }
    dend_25 { pt3dadd( 265.366, 554.824, 35.3811, 0.5592 ) }
    dend_25 { pt3dadd( 265.316, 555.872, 35.924, 0.5848 ) }
    dend_25 { pt3dadd( 265.99, 556.742, 35.4122, 0.6356 ) }
    dend_25 { pt3dadd( 266.651, 557.668, 35.3674, 0.6864 ) }
    dend_25 { pt3dadd( 267.356, 558.541, 35.7759, 0.7372 ) }
    dend_25 { pt3dadd( 268.297, 558.959, 36.6772, 0.7118 ) }
    dend_25 { pt3dadd( 269.403, 558.969, 37.3019, 0.6356 ) }
    dend_25 { pt3dadd( 269.984, 559.073, 38.08, 0.5592 ) }
    dend_25 { pt3dadd( 270.67, 559.187, 38.08, 0.5592 ) }
    dend_25 { pt3dadd( 271.319, 559.339, 38.08, 0.5592 ) }
    dend_25 { pt3dadd( 271.827, 559.632, 38.08, 0.5592 ) }
    dend_25 { pt3dadd( 272.501, 559.759, 38.08, 0.5338 ) }
    dend_25 { pt3dadd( 272.971, 560.09, 38.08, 0.5338 ) }
    dend_25 { pt3dadd( 273.657, 560.204, 38.08, 0.5084 ) }
    dend_25 { pt3dadd( 274.204, 560.458, 38.08, 0.483 ) }
    dend_25 { pt3dadd( 274.637, 560.827, 38.08, 0.4322 ) }
    dend_25 { pt3dadd( 275.246, 561.018, 38.08, 0.4322 ) }
    dend_25 { pt3dadd( 275.895, 561.17, 38.08, 0.4068 ) }
    dend_25 { pt3dadd( 276.505, 561.361, 38.08, 0.4068 ) }
    dend_25 { pt3dadd( 277.204, 561.463, 38.08, 0.356 ) }
    dend_25 { pt3dadd( 277.979, 561.488, 38.08, 0.3814 ) }
    dend_25 { pt3dadd( 278.564, 561.704, 38.08, 0.4576 ) }
    dend_25 { pt3dadd( 279.365, 561.704, 38.08, 0.5848 ) }
    dend_25 { pt3dadd( 279.975, 562.238, 38.64, 0.8644 ) }
    dend_25 { pt3dadd( 280.775, 563.039, 39.2, 0.8898 ) }
    dend_25 { pt3dadd( 281.628, 563.674, 39.48, 0.839 ) }
    dend_25 { pt3dadd( 282.67, 564.005, 40.04, 0.7372 ) }
    dend_25 { pt3dadd( 283.28, 564.196, 40.04, 0.6864 ) }
    dend_25 { pt3dadd( 284.132, 564.945, 40.04, 0.7118 ) }
    dend_25 { pt3dadd( 285.123, 565.556, 40.04, 0.6356 ) }
    dend_25 { pt3dadd( 285.721, 565.758, 40.04, 0.5848 ) }
    dend_25 { pt3dadd( 286.712, 566.14, 40.6, 0.5338 ) }
    dend_25 { pt3dadd( 287.323, 566.33, 40.6, 0.5592 ) }
    dend_25 { pt3dadd( 287.895, 566.559, 40.6, 0.6356 ) }
    dend_25 { pt3dadd( 288.313, 566.941, 40.6, 0.7118 ) }
    dend_25 { pt3dadd( 289.153, 567.703, 40.6, 0.661 ) }
    dend_25 { pt3dadd( 289.33, 568.327, 40.6, 0.5848 ) }
    dend_25 { pt3dadd( 289.482, 568.861, 40.6, 0.7118 ) }
    dend_25 { pt3dadd( 290.271, 569.56, 41.16, 0.9152 ) }
    dend_25 { pt3dadd( 291.262, 570.055, 41.44, 0.661 ) }
    dend_25 { pt3dadd( 292.063, 570.856, 41.44, 0.6102 ) }
    dend_25 { pt3dadd( 292.305, 571.415, 41.44, 0.5848 ) }
    dend_25 { pt3dadd( 292.444, 571.962, 41.72, 0.5084 ) }
    dend_25 { pt3dadd( 292.66, 572.42, 42.0311, 0.5084 ) }
    dend_25 { pt3dadd( 293.169, 572.839, 42.28, 0.5848 ) }
    dend_25 { pt3dadd( 293.983, 573.284, 42.56, 0.6102 ) }
    dend_25 { pt3dadd( 294.503, 573.564, 42.56, 0.661 ) }
    dend_25 { pt3dadd( 295.038, 573.716, 42.56, 0.6864 ) }
    dend_25 { pt3dadd( 295.381, 574.288, 42.56, 0.2542 ) }
    dend_25 { pt3dadd( 295.876, 574.593, 42.56, 0.2542 ) }
    dend_25 { pt3dadd( 296.169, 574.937, 42.6843, 0.5084 ) }
    dend_25 { pt3dadd( 296.525, 574.974, 43.4, 0.661 ) }
    dend_25 { pt3dadd( 297.3, 575.228, 43.4, 0.5848 ) }
    dend_25 { pt3dadd( 297.872, 575.457, 43.4, 0.5592 ) }
    dend_25 { pt3dadd( 298.355, 575.775, 43.4, 0.5338 ) }
    dend_25 { pt3dadd( 298.698, 576.233, 43.4, 0.5848 ) }
    dend_25 { pt3dadd( 299.245, 576.487, 43.4, 0.6356 ) }
    dend_25 { pt3dadd( 299.805, 576.728, 43.4, 0.6864 ) }
    dend_25 { pt3dadd( 300.694, 577.441, 43.4, 0.6356 ) }
    dend_25 { pt3dadd( 300.999, 577.822, 43.68, 0.5848 ) }
    dend_25 { pt3dadd( 301.367, 578.254, 43.68, 0.5338 ) }
    dend_25 { pt3dadd( 301.711, 578.712, 43.68, 0.5848 ) }
    dend_25 { pt3dadd( 302.118, 578.991, 43.96, 0.6356 ) }
    dend_25 { pt3dadd( 302.601, 579.309, 43.96, 0.661 ) }
    dend_25 { pt3dadd( 303.173, 579.538, 43.96, 0.6102 ) }
    dend_25 { pt3dadd( 303.846, 579.665, 43.96, 0.5592 ) }
    dend_25 { pt3dadd( 304.418, 579.894, 43.96, 0.5338 ) }
    dend_25 { pt3dadd( 304.914, 580.199, 43.96, 0.5592 ) }
    dend_25 { pt3dadd( 305.359, 580.555, 43.96, 0.5338 ) }
    dend_25 { pt3dadd( 305.766, 580.948, 43.96, 0.483 ) }
    dend_25 { pt3dadd( 306.249, 581.266, 43.96, 0.356 ) }
    dend_25 { pt3dadd( 306.605, 581.711, 43.96, 0.2796 ) }
    dend_25 { pt3dadd( 307.164, 581.953, 43.96, 0.2288 ) }
    dend_25 { pt3dadd( 307.571, 582.346, 43.96, 0.2288 ) }
    dend_25 { pt3dadd( 307.622, 582.525, 43.96, 0.2288 ) }
    dend_25 { pt3dadd( 307.73, 582.747, 43.9919, 0.2542 ) }
    dend_25 { pt3dadd( 309.16, 586.407, 46.7412, 0.305 ) }
    dend_25 { pt3dadd( 311.814, 588.936, 46.7412, 0.356 ) }
    dend_25 { pt3dadd( 313.745, 589.369, 46.7412, 0.356 ) }
    dend_25 { pt3dadd( 316.514, 592.253, 49.4908, 0.305 ) }
    dend_25 { pt3dadd( 319.904, 593.967, 49.4908, 0.2542 ) }
    dend_25 { pt3dadd( 322.686, 593.391, 51.553, 0.2288 ) }
    dend_25 { pt3dadd( 326.49, 595.319, 51.553, 0.2288 ) }
    dend_25 { pt3dadd( 331.638, 597.151, 54.3024, 0.2288 ) }
    dend_25 { pt3dadd( 338.134, 604.928, 56.3646, 0.2288 ) }
    dend_25 { pt3dadd( 340.531, 607.175, 56.3646, 0.2288 ) }
    dend_25 { pt3dadd( 345.38, 612.529, 57.052, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 94/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 267.292, 551.997, 31.0495, 0.4576 ) }
    dend_24 { pt3dadd( 266.978, 552.437, 30.8518, 0.483 ) }
    dend_24 { pt3dadd( 266.304, 553.258, 30.0135, 0.5338 ) }
    dend_24 { pt3dadd( 265.486, 554.04, 29.6808, 0.6102 ) }
    dend_24 { pt3dadd( 264.839, 554.977, 29.6839, 0.6102 ) }
    dend_24 { pt3dadd( 264.189, 555.919, 29.699, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_24 { pt3dadd( 263.976, 557.0, 29.7984, 0.483 ) }
    dend_24 { pt3dadd( 263.684, 558.062, 30.4133, 0.5084 ) }
    dend_24 { pt3dadd( 263.371, 559.141, 30.8207, 0.5848 ) }
    dend_24 { pt3dadd( 263.339, 560.275, 30.9366, 0.661 ) }
    dend_24 { pt3dadd( 263.653, 561.324, 31.6064, 0.661 ) }
    dend_24 { pt3dadd( 263.718, 562.434, 32.2414, 0.6356 ) }
    dend_24 { pt3dadd( 263.883, 563.54, 32.0508, 0.6102 ) }
    dend_24 { pt3dadd( 263.786, 564.676, 31.9869, 0.6356 ) }
    dend_24 { pt3dadd( 264.195, 565.682, 32.3854, 0.661 ) }
    dend_24 { pt3dadd( 264.964, 566.242, 33.7985, 0.7118 ) }
    dend_24 { pt3dadd( 265.057, 567.323, 33.3634, 0.7372 ) }
    dend_24 { pt3dadd( 265.014, 568.455, 33.0425, 0.7626 ) }
    dend_24 { pt3dadd( 264.742, 569.554, 33.056, 0.6864 ) }
    dend_24 { pt3dadd( 264.549, 570.677, 33.1598, 0.5848 ) }
    dend_24 { pt3dadd( 264.606, 571.646, 33.9968, 0.4322 ) }
    dend_24 { pt3dadd( 265.566, 572.249, 34.1642, 0.4068 ) }
    dend_24 { pt3dadd( 265.941, 573.169, 34.1933, 0.3814 ) }
    dend_24 { pt3dadd( 265.419, 574.18, 34.368, 0.4576 ) }
    dend_24 { pt3dadd( 264.747, 575.003, 35.2187, 0.4576 ) }
    dend_24 { pt3dadd( 264.138, 575.929, 35.7977, 0.5084 ) }
    dend_24 { pt3dadd( 263.549, 576.855, 36.4151, 0.5084 ) }
    dend_24 { pt3dadd( 262.987, 577.845, 36.4888, 0.5592 ) }
    dend_24 { pt3dadd( 263.208, 578.83, 37.1437, 0.6102 ) }
    dend_24 { pt3dadd( 263.678, 579.823, 37.5222, 0.661 ) }
    dend_24 { pt3dadd( 263.737, 580.964, 37.5348, 0.6864 ) }
    dend_24 { pt3dadd( 264.019, 582.056, 37.6261, 0.661 ) }
    dend_24 { pt3dadd( 264.696, 582.916, 38.2371, 0.5848 ) }
    dend_24 { pt3dadd( 265.272, 583.876, 38.6442, 0.483 ) }
    dend_24 { pt3dadd( 265.758, 584.907, 38.6649, 0.4068 ) }
    dend_24 { pt3dadd( 266.023, 586.011, 38.8158, 0.4322 ) }
    dend_24 { pt3dadd( 266.384, 586.997, 39.6584, 0.483 ) }
    dend_24 { pt3dadd( 266.916, 588.005, 39.76, 0.5084 ) }
    dend_24 { pt3dadd( 267.519, 588.972, 39.7611, 0.4322 ) }
    dend_24 { pt3dadd( 267.607, 589.02, 40.88, 0.3304 ) }
    dend_24 { pt3dadd( 267.696, 589.274, 40.88, 0.2542 ) }
    dend_24 { pt3dadd( 267.696, 589.618, 40.88, 0.2288 ) }
    dend_24 { pt3dadd( 267.785, 589.872, 40.88, 0.2288 ) }
    dend_24 { pt3dadd( 267.9, 589.986, 40.88, 0.2288 ) }
    dend_24 { pt3dadd( 268.039, 590.647, 40.88, 0.2288 ) }
    dend_24 { pt3dadd( 268.039, 591.448, 40.88, 0.2288 ) }
    dend_24 { pt3dadd( 268.039, 592.249, 40.88, 0.2542 ) }
    dend_24 { pt3dadd( 268.039, 593.012, 40.9732, 0.2796 ) }
    dend_24 { pt3dadd( 268.039, 593.736, 41.16, 0.305 ) }
    dend_24 { pt3dadd( 268.141, 594.435, 41.16, 0.305 ) }
    dend_24 { pt3dadd( 268.23, 594.994, 41.5332, 0.3304 ) }
    dend_24 { pt3dadd( 268.484, 595.465, 41.72, 0.3814 ) }
    dend_24 { pt3dadd( 268.763, 595.986, 41.72, 0.4068 ) }
    dend_24 { pt3dadd( 268.967, 596.583, 41.72, 0.4068 ) }
    dend_24 { pt3dadd( 269.107, 597.245, 41.72, 0.3814 ) }
    dend_24 { pt3dadd( 269.196, 597.956, 41.72, 0.3814 ) }
    dend_24 { pt3dadd( 269.45, 598.503, 41.72, 0.356 ) }
    dend_24 { pt3dadd( 269.653, 599.1, 41.72, 0.305 ) }
    dend_24 { pt3dadd( 269.959, 599.596, 41.72, 0.2796 ) }
    dend_24 { pt3dadd( 270.454, 599.901, 41.72, 0.305 ) }
    dend_24 { pt3dadd( 270.924, 600.232, 41.72, 0.3814 ) }
    dend_24 { pt3dadd( 271.357, 600.587, 41.7511, 0.4068 ) }
    dend_24 { pt3dadd( 271.777, 600.867, 42.0, 0.3814 ) }
    dend_24 { pt3dadd( 272.297, 601.147, 42.0, 0.305 ) }
    dend_24 { pt3dadd( 272.73, 601.515, 42.0, 0.2796 ) }
    dend_24 { pt3dadd( 273.212, 601.833, 42.0, 0.305 ) }
    dend_24 { pt3dadd( 273.595, 602.023, 42.28, 0.5084 ) }
    dend_24 { pt3dadd( 273.823, 602.481, 42.28, 0.5592 ) }
    dend_24 { pt3dadd( 273.874, 603.346, 42.56, 0.3304 ) }
    dend_24 { pt3dadd( 273.874, 604.146, 42.56, 0.2542 ) }
    dend_24 { pt3dadd( 273.874, 604.947, 42.56, 0.2288 ) }
    dend_24 { pt3dadd( 273.874, 605.735, 42.5911, 0.2288 ) }
    dend_24 { pt3dadd( 273.874, 606.32, 43.12, 0.2288 ) }
    dend_24 { pt3dadd( 274.026, 606.867, 43.3689, 0.2288 ) }
    dend_24 { pt3dadd( 274.293, 607.387, 43.4, 0.2288 ) }
    dend_24 { pt3dadd( 274.42, 607.604, 43.4, 0.2288 ) }
    dend_24 { pt3dadd( 274.585, 607.782, 43.4, 0.2288 ) }
    dend_24 { pt3dadd( 274.674, 608.036, 43.4, 0.2288 ) }
    dend_24 { pt3dadd( 274.674, 608.341, 43.4932, 0.2288 ) }
    dend_24 { pt3dadd( 274.674, 608.506, 43.6489, 0.2288 ) }
    dend_24 { pt3dadd( 274.674, 609.294, 43.68, 0.2288 ) }
    dend_24 { pt3dadd( 274.674, 610.057, 43.7732, 0.2542 ) }
    dend_24 { pt3dadd( 274.674, 610.782, 43.96, 0.2796 ) }
    dend_24 { pt3dadd( 274.674, 611.582, 43.96, 0.305 ) }
    dend_24 { pt3dadd( 274.674, 612.383, 43.96, 0.2796 ) }
    dend_24 { pt3dadd( 274.674, 613.184, 43.96, 0.2542 ) }
    dend_24 { pt3dadd( 274.751, 613.908, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 614.671, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 615.472, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 616.273, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 617.074, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 617.874, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 618.675, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 619.476, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 620.277, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 621.078, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 621.878, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.789, 622.222, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.776, 622.552, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.61, 622.729, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.483, 622.946, 43.96, 0.2288 ) }
    dend_24 { pt3dadd( 274.331, 623.251, 43.96, 0.2796 ) }
    dend_24 { pt3dadd( 272.532, 626.549, 48.116, 0.5084 ) }
    dend_24 { pt3dadd( 272.191, 628.979, 49.4908, 0.5592 ) }
    dend_24 { pt3dadd( 268.855, 635.112, 52.2404, 0.5084 ) }
    dend_24 { pt3dadd( 268.623, 637.285, 52.2404, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_24 { pt3dadd( 269.031, 642.804, 53.615, 0.305 ) }
    dend_24 { pt3dadd( 270.228, 645.733, 53.615, 0.2542 ) }
    dend_24 { pt3dadd( 272.104, 648.104, 53.615, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 3/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 287.717, 537.002, 25.2003, 0.9152 ) }
    dend_22 { pt3dadd( 288.592, 537.591, 26.1201, 0.5848 ) }
    dend_22 { pt3dadd( 289.538, 538.468, 26.1201, 0.6356 ) }
    dend_22 { pt3dadd( 291.03, 540.672, 24.7453, 0.6864 ) }
    dend_22 { pt3dadd( 291.942, 542.011, 24.7453, 0.6864 ) }
    dend_22 { pt3dadd( 296.687, 544.605, 21.996, 0.6102 ) }
    dend_22 { pt3dadd( 300.167, 546.679, 19.9338, 0.5338 ) }
    dend_22 { pt3dadd( 301.314, 546.944, 19.9338, 0.4576 ) }
    dend_22 { pt3dadd( 301.936, 547.3, 19.9338, 0.4322 ) }
    dend_22 { pt3dadd( 301.921, 548.188, 19.9338, 0.5084 ) }
    dend_22 { pt3dadd( 301.711, 549.211, 19.9338, 0.5848 ) }
    dend_22 { pt3dadd( 303.127, 550.87, 18.559, 0.6356 ) }
    dend_22 { pt3dadd( 304.175, 551.721, 18.559, 0.5592 ) }
    dend_22 { pt3dadd( 305.35, 554.996, 19.2464, 0.5338 ) }
    dend_22 { pt3dadd( 307.983, 559.383, 19.2464, 0.4576 ) }
    dend_22 { pt3dadd( 309.746, 563.117, 17.8716, 0.4068 ) }
    dend_22 { pt3dadd( 309.719, 566.242, 16.497, 0.305 ) }
    dend_22 { pt3dadd( 308.985, 567.708, 16.497, 0.2542 ) }
    dend_22 { pt3dadd( 308.615, 568.637, 16.497, 0.2796 ) }
    dend_22 { pt3dadd( 308.103, 570.248, 16.497, 0.3814 ) }
    dend_22 { pt3dadd( 308.031, 571.291, 16.497, 0.5338 ) }
    dend_22 { pt3dadd( 308.465, 572.125, 16.497, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 25/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 287.717, 537.002, 25.2003, 0.9152 ) }
    dend_1 { pt3dadd( 288.86, 537.045, 25.2017, 0.8644 ) }
    dend_1 { pt3dadd( 290.041, 537.31, 25.2146, 0.9406 ) }
    dend_1 { pt3dadd( 291.147, 537.162, 25.2868, 0.9914 ) }
    dend_1 { pt3dadd( 292.365, 537.03, 25.975, 0.966 ) }
    dend_1 { pt3dadd( 293.378, 537.196, 27.1435, 0.6864 ) }
    // Section: apic_28, id: apic_28, parent: apic_0 (entry count 31/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 277.29, 526.036, 30.7387, 0.6864 ) }
    apic_28 { pt3dadd( 278.317, 526.775, 31.9189, 0.8644 ) }
    apic_28 { pt3dadd( 279.209, 527.47, 31.9138, 0.8644 ) }
    apic_28 { pt3dadd( 280.166, 528.077, 31.8746, 0.8136 ) }
    apic_28 { pt3dadd( 281.01, 528.799, 31.4437, 0.788 ) }
    apic_28 { pt3dadd( 281.599, 529.716, 30.7933, 0.7372 ) }
    apic_28 { pt3dadd( 282.338, 530.587, 30.77, 0.7372 ) }
    apic_28 { pt3dadd( 282.979, 531.531, 30.6328, 0.788 ) }
    apic_28 { pt3dadd( 283.727, 532.326, 29.92, 0.8898 ) }
    apic_28 { pt3dadd( 284.517, 533.144, 29.687, 0.9152 ) }
    apic_28 { pt3dadd( 285.266, 534.008, 29.7105, 0.839 ) }
    apic_28 { pt3dadd( 285.66, 535.056, 29.8603, 0.7118 ) }
    apic_28 { pt3dadd( 285.753, 536.071, 30.945, 0.6864 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 44/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 277.29, 526.036, 30.7387, 0.6864 ) }
    apic_1 { pt3dadd( 278.255, 524.725, 29.913, 1.2202 ) }
    apic_1 { pt3dadd( 279.282, 522.744, 29.608, 1.4236 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 47/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 251.38, 564.958, 28.9702, 0.6864 ) }
    dend_35 { pt3dadd( 246.714, 566.55, 31.619, 0.6356 ) }
    dend_35 { pt3dadd( 245.474, 567.408, 32.9938, 0.5592 ) }
    dend_35 { pt3dadd( 244.435, 567.558, 32.9938, 0.4576 ) }
    dend_35 { pt3dadd( 243.855, 567.557, 32.9938, 0.4576 ) }
    dend_35 { pt3dadd( 243.181, 567.672, 32.9938, 0.4068 ) }
    dend_35 { pt3dadd( 238.102, 567.866, 35.056, 0.4322 ) }
    dend_35 { pt3dadd( 233.951, 567.935, 35.056, 0.4322 ) }
    dend_35 { pt3dadd( 228.791, 567.402, 36.4308, 0.4576 ) }
    dend_35 { pt3dadd( 227.073, 566.919, 37.1182, 0.4576 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 57/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 251.38, 564.958, 28.9702, 0.6864 ) }
    dend_34 { pt3dadd( 250.355, 565.381, 28.3702, 0.5338 ) }
    dend_34 { pt3dadd( 249.324, 565.772, 28.3847, 0.5592 ) }
    dend_34 { pt3dadd( 248.708, 566.718, 28.5586, 0.5848 ) }
    dend_34 { pt3dadd( 248.139, 567.851, 28.548, 0.6102 ) }
    dend_34 { pt3dadd( 247.095, 568.269, 28.4757, 0.5848 ) }
    dend_34 { pt3dadd( 246.017, 568.543, 27.9989, 0.5084 ) }
    dend_34 { pt3dadd( 244.909, 568.528, 27.3756, 0.4068 ) }
    dend_34 { pt3dadd( 243.806, 568.351, 26.9657, 0.3814 ) }
    dend_34 { pt3dadd( 242.804, 568.75, 26.3799, 0.4576 ) }
    dend_34 { pt3dadd( 241.786, 569.262, 26.4292, 0.5592 ) }
    dend_34 { pt3dadd( 240.736, 569.075, 27.0108, 0.6102 ) }
    dend_34 { pt3dadd( 239.638, 569.037, 26.2662, 0.5848 ) }
    dend_34 { pt3dadd( 238.538, 569.098, 25.6018, 0.5338 ) }
    dend_34 { pt3dadd( 237.484, 569.449, 25.1174, 0.4322 ) }
    dend_34 { pt3dadd( 236.49, 569.973, 24.7299, 0.3304 ) }
    dend_34 { pt3dadd( 235.571, 570.594, 24.1483, 0.2542 ) }
    dend_34 { pt3dadd( 234.688, 571.318, 24.0803, 0.2542 ) }
    dend_34 { pt3dadd( 233.632, 571.596, 24.0822, 0.305 ) }
    dend_34 { pt3dadd( 232.547, 571.796, 24.0929, 0.4068 ) }
    dend_34 { pt3dadd( 231.633, 572.482, 24.1394, 0.4576 ) }
    dend_34 { pt3dadd( 230.535, 572.69, 24.5123, 0.4576 ) }
    dend_34 { pt3dadd( 229.415, 572.706, 24.934, 0.4068 ) }
    dend_34 { pt3dadd( 228.327, 572.812, 24.192, 0.3814 ) }
    dend_34 { pt3dadd( 227.348, 573.358, 24.2376, 0.3814 ) }
    dend_34 { pt3dadd( 226.626, 574.059, 25.2, 0.3304 ) }
    dend_34 { pt3dadd( 218.963, 577.768, 22.6834, 0.2542 ) }
    dend_34 { pt3dadd( 215.678, 578.666, 20.6212, 0.2796 ) }
    dend_34 { pt3dadd( 212.443, 578.344, 20.6212, 0.3304 ) }
    dend_34 { pt3dadd( 210.798, 578.647, 20.6212, 0.356 ) }
    dend_34 { pt3dadd( 208.706, 578.223, 20.6212, 0.3814 ) }
    dend_34 { pt3dadd( 205.96, 578.353, 21.3086, 0.3814 ) }
    dend_34 { pt3dadd( 205.507, 578.843, 21.3086, 0.4322 ) }
    dend_34 { pt3dadd( 203.931, 579.906, 21.3086, 0.483 ) }
    dend_34 { pt3dadd( 202.478, 580.714, 22.6834, 0.5084 ) }
    dend_34 { pt3dadd( 198.458, 584.117, 23.3708, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 264.191, 542.731, 35.8739, 0.9152 ) }
    dend_32 { pt3dadd( 264.032, 543.74, 36.3726, 0.7626 ) }
    dend_32 { pt3dadd( 263.424, 544.697, 36.1883, 0.7372 ) }
    dend_32 { pt3dadd( 263.21, 545.707, 36.4773, 0.7118 ) }
    dend_32 { pt3dadd( 263.099, 546.603, 38.1716, 0.6864 ) }
    dend_32 { pt3dadd( 262.261, 547.143, 38.7276, 0.5848 ) }
    dend_32 { pt3dadd( 261.275, 547.487, 39.7586, 0.5084 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_32 { pt3dadd( 260.292, 548.014, 40.2721, 0.4576 ) }
    dend_32 { pt3dadd( 259.457, 548.723, 40.8946, 0.5084 ) }
    dend_32 { pt3dadd( 258.582, 549.453, 41.0889, 0.5338 ) }
    dend_32 { pt3dadd( 257.796, 550.174, 41.9947, 0.5592 ) }
    dend_32 { pt3dadd( 256.957, 550.732, 43.162, 0.483 ) }
    dend_32 { pt3dadd( 255.909, 551.021, 43.2118, 0.483 ) }
    dend_32 { pt3dadd( 255.432, 552.008, 43.1491, 0.5084 ) }
    dend_32 { pt3dadd( 255.207, 553.113, 43.3342, 0.5592 ) }
    dend_32 { pt3dadd( 254.541, 553.936, 44.2677, 0.5592 ) }
    dend_32 { pt3dadd( 253.814, 554.738, 45.1066, 0.5338 ) }
    dend_32 { pt3dadd( 253.182, 555.679, 45.3023, 0.5848 ) }
    dend_32 { pt3dadd( 252.411, 556.518, 45.1027, 0.6356 ) }
    dend_32 { pt3dadd( 251.665, 557.31, 44.3226, 0.6864 ) }
    dend_32 { pt3dadd( 250.97, 558.209, 44.2313, 0.7118 ) }
    dend_32 { pt3dadd( 250.496, 559.244, 44.1896, 0.7372 ) }
    dend_32 { pt3dadd( 249.759, 560.113, 44.0042, 0.7626 ) }
    dend_32 { pt3dadd( 249.127, 560.983, 43.2001, 0.7372 ) }
    dend_32 { pt3dadd( 248.739, 562.053, 43.1175, 0.7118 ) }
    dend_32 { pt3dadd( 248.238, 563.078, 43.1068, 0.6864 ) }
    dend_32 { pt3dadd( 247.789, 564.126, 43.0357, 0.6356 ) }
    dend_32 { pt3dadd( 247.573, 565.219, 42.5438, 0.5592 ) }
    dend_32 { pt3dadd( 247.214, 566.273, 42.002, 0.483 ) }
    dend_32 { pt3dadd( 246.882, 567.365, 41.9997, 0.5338 ) }
    dend_32 { pt3dadd( 246.758, 568.497, 41.9975, 0.6356 ) }
    dend_32 { pt3dadd( 246.742, 569.641, 41.9812, 0.7372 ) }
    dend_32 { pt3dadd( 246.649, 570.778, 41.8732, 0.7118 ) }
    dend_32 { pt3dadd( 246.285, 571.819, 41.2513, 0.661 ) }
    dend_32 { pt3dadd( 245.954, 572.896, 40.8778, 0.6102 ) }
    dend_32 { pt3dadd( 245.825, 574.028, 40.8663, 0.5848 ) }
    dend_32 { pt3dadd( 245.66, 575.151, 40.7691, 0.5084 ) }
    dend_32 { pt3dadd( 245.846, 575.89, 39.76, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 264.191, 542.731, 35.8739, 0.9152 ) }
    dend_29 { pt3dadd( 263.915, 541.148, 36.386, 0.7626 ) }
    dend_29 { pt3dadd( 263.063, 540.414, 36.3062, 0.8644 ) }
    dend_29 { pt3dadd( 262.206, 539.739, 35.7515, 0.8898 ) }
    dend_29 { pt3dadd( 261.482, 538.871, 35.4354, 0.8644 ) }
    dend_29 { pt3dadd( 260.616, 538.27, 36.1892, 0.7372 ) }
    dend_29 { pt3dadd( 259.56, 537.853, 36.3997, 0.6356 ) }
    dend_29 { pt3dadd( 258.558, 537.324, 36.3983, 0.5592 ) }
    dend_29 { pt3dadd( 257.71, 536.555, 36.3933, 0.5592 ) }
    dend_29 { pt3dadd( 256.819, 535.84, 36.3706, 0.6356 ) }
    dend_29 { pt3dadd( 255.705, 535.678, 36.2026, 0.6864 ) }
    dend_29 { pt3dadd( 254.657, 535.964, 35.4864, 0.6864 ) }
    dend_29 { pt3dadd( 253.645, 536.472, 35.3388, 0.5592 ) }
    dend_29 { pt3dadd( 252.524, 536.495, 35.7291, 0.4576 ) }
    dend_29 { pt3dadd( 251.45, 536.266, 36.3364, 0.3814 ) }
    dend_29 { pt3dadd( 250.356, 535.964, 36.104, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 293.378, 537.196, 27.1435, 0.6864 ) }
    dend_11 { pt3dadd( 294.841, 537.14, 25.1656, 0.7372 ) }
    dend_11 { pt3dadd( 295.883, 536.822, 24.3796, 0.7626 ) }
    dend_11 { pt3dadd( 296.926, 536.388, 24.0758, 0.7626 ) }
    dend_11 { pt3dadd( 297.802, 535.681, 24.0509, 0.788 ) }
    dend_11 { pt3dadd( 298.82, 535.477, 23.8938, 0.839 ) }
    dend_11 { pt3dadd( 299.844, 535.918, 23.3554, 0.8136 ) }
    dend_11 { pt3dadd( 300.936, 536.104, 24.0036, 0.6864 ) }
    dend_11 { pt3dadd( 302.06, 536.266, 24.0775, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 56/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 293.378, 537.196, 27.1435, 0.6864 ) }
    dend_2 { pt3dadd( 293.961, 537.727, 26.7459, 0.966 ) }
    dend_2 { pt3dadd( 294.695, 538.469, 25.6752, 0.9914 ) }
    dend_2 { pt3dadd( 295.525, 539.195, 24.9844, 0.9152 ) }
    dend_2 { pt3dadd( 296.151, 540.098, 24.2642, 0.788 ) }
    dend_2 { pt3dadd( 296.906, 540.951, 24.08, 0.7118 ) }
    dend_2 { pt3dadd( 297.667, 541.804, 24.08, 0.6864 ) }
    dend_2 { pt3dadd( 298.189, 542.812, 24.0806, 0.6864 ) }
    // Section: apic_36, id: apic_36, parent: apic_28 (entry count 64/100)
    apic_36 { pt3dclear() }
    apic_36 { pt3dadd( 285.753, 536.071, 30.945, 0.6864 ) }
    apic_36 { pt3dadd( 286.34, 539.246, 30.9319, 0.6102 ) }
    apic_36 { pt3dadd( 287.203, 539.87, 30.9319, 0.6102 ) }
    apic_36 { pt3dadd( 288.517, 539.993, 30.9319, 0.6102 ) }
    apic_36 { pt3dadd( 289.963, 541.703, 30.9319, 0.6356 ) }
    apic_36 { pt3dadd( 292.935, 544.658, 30.9319, 0.661 ) }
    apic_36 { pt3dadd( 294.721, 546.023, 30.9319, 0.6356 ) }
    apic_36 { pt3dadd( 298.513, 549.139, 31.619, 0.5592 ) }
    apic_36 { pt3dadd( 301.73, 551.687, 31.619, 0.483 ) }
    apic_36 { pt3dadd( 303.082, 553.401, 31.619, 0.5084 ) }
    apic_36 { pt3dadd( 306.726, 555.262, 30.2445, 0.5338 ) }
    apic_36 { pt3dadd( 309.898, 556.644, 30.2445, 0.5848 ) }
    apic_36 { pt3dadd( 313.97, 559.175, 28.8697, 0.6102 ) }
    apic_36 { pt3dadd( 315.667, 561.967, 28.1823, 0.6356 ) }
    apic_36 { pt3dadd( 318.674, 566.087, 27.4949, 0.6356 ) }
    apic_36 { pt3dadd( 320.273, 569.775, 28.8697, 0.6102 ) }
    apic_36 { pt3dadd( 321.51, 570.583, 28.8697, 0.6102 ) }
    apic_36 { pt3dadd( 322.879, 570.866, 28.8697, 0.6102 ) }
    apic_36 { pt3dadd( 325.183, 572.309, 28.1823, 0.5848 ) }
    apic_36 { pt3dadd( 325.896, 572.984, 28.1823, 0.5848 ) }
    apic_36 { pt3dadd( 325.865, 573.62, 28.1823, 0.5848 ) }
    apic_36 { pt3dadd( 325.43, 574.82, 28.1823, 0.5592 ) }
    apic_36 { pt3dadd( 325.769, 575.529, 28.1823, 0.5338 ) }
    apic_36 { pt3dadd( 327.08, 576.545, 27.4949, 0.5084 ) }
    apic_36 { pt3dadd( 327.385, 577.892, 27.4949, 0.5338 ) }
    apic_36 { pt3dadd( 327.838, 578.448, 27.4949, 0.483 ) }
    apic_36 { pt3dadd( 330.454, 580.492, 26.8075, 0.4068 ) }
    apic_36 { pt3dadd( 332.99, 580.566, 26.1201, 0.3814 ) }
    apic_36 { pt3dadd( 334.227, 581.32, 26.1201, 0.4068 ) }
    apic_36 { pt3dadd( 335.19, 582.273, 26.1201, 0.483 ) }
    apic_36 { pt3dadd( 337.231, 582.64, 25.4327, 0.4576 ) }
    apic_36 { pt3dadd( 338.56, 582.655, 25.4327, 0.4322 ) }
    apic_36 { pt3dadd( 341.738, 583.183, 24.0582, 0.3304 ) }
    apic_36 { pt3dadd( 344.625, 583.487, 23.3708, 0.305 ) }
    apic_36 { pt3dadd( 347.067, 583.078, 22.6834, 0.2796 ) }
    apic_36 { pt3dadd( 351.066, 581.361, 21.996, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_36 { pt3dadd( 353.721, 580.913, 21.3086, 0.3304 ) }
    apic_36 { pt3dadd( 355.584, 581.429, 20.6212, 0.4068 ) }
    apic_36 { pt3dadd( 356.615, 581.006, 20.6212, 0.6864 ) }
    // Section: apic_29, id: apic_29, parent: apic_28 (entry count 3/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 285.753, 536.071, 30.945, 0.6864 ) }
    apic_29 { pt3dadd( 286.188, 536.999, 31.9214, 0.7118 ) }
    apic_29 { pt3dadd( 286.603, 538.057, 31.9287, 0.7372 ) }
    apic_29 { pt3dadd( 286.985, 539.12, 31.9726, 0.788 ) }
    apic_29 { pt3dadd( 287.764, 539.949, 32.1516, 0.8136 ) }
    apic_29 { pt3dadd( 288.631, 540.62, 32.8748, 0.788 ) }
    apic_29 { pt3dadd( 289.258, 541.56, 33.1892, 0.6864 ) }
    apic_29 { pt3dadd( 289.732, 542.543, 33.8534, 0.5338 ) }
    apic_29 { pt3dadd( 289.781, 543.643, 34.5878, 0.4576 ) }
    apic_29 { pt3dadd( 289.812, 544.757, 34.7152, 0.4576 ) }
    apic_29 { pt3dadd( 290.026, 545.842, 35.0118, 0.5338 ) }
    apic_29 { pt3dadd( 290.574, 546.822, 35.4822, 0.6864 ) }
    // Section: apic_27, id: apic_27, parent: apic_1 (entry count 15/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 279.282, 522.744, 29.608, 1.4236 ) }
    apic_27 { pt3dadd( 280.609, 521.447, 29.6736, 1.322 ) }
    apic_27 { pt3dadd( 281.33, 520.563, 29.7231, 1.0424 ) }
    apic_27 { pt3dadd( 282.314, 520.486, 30.0342, 0.7626 ) }
    apic_27 { pt3dadd( 282.786, 521.399, 31.0475, 0.5592 ) }
    apic_27 { pt3dadd( 282.54, 522.442, 31.8214, 0.5084 ) }
    apic_27 { pt3dadd( 282.179, 523.517, 31.9256, 0.5338 ) }
    apic_27 { pt3dadd( 282.371, 524.633, 31.9561, 0.5848 ) }
    apic_27 { pt3dadd( 282.173, 525.729, 32.1905, 0.6102 ) }
    apic_27 { pt3dadd( 281.556, 526.512, 33.4508, 0.6102 ) }
    apic_27 { pt3dadd( 281.025, 527.442, 34.1634, 0.6356 ) }
    apic_27 { pt3dadd( 280.525, 528.462, 34.1796, 0.6864 ) }
    apic_27 { pt3dadd( 279.945, 529.443, 34.2706, 0.7118 ) }
    apic_27 { pt3dadd( 279.513, 530.428, 35.0132, 0.7118 ) }
    apic_27 { pt3dadd( 279.185, 531.497, 35.4368, 0.6864 ) }
    apic_27 { pt3dadd( 278.827, 532.492, 36.2835, 0.6356 ) }
    apic_27 { pt3dadd( 278.694, 533.625, 36.4, 0.5338 ) }
    apic_27 { pt3dadd( 278.335, 534.706, 36.4, 0.3814 ) }
    apic_27 { pt3dadd( 278.053, 536.365, 36.4308, 0.2542 ) }
    apic_27 { pt3dadd( 277.362, 537.895, 35.056, 0.305 ) }
    apic_27 { pt3dadd( 276.855, 538.666, 36.6624, 0.4068 ) }
    apic_27 { pt3dadd( 276.677, 539.66, 37.427, 0.4322 ) }
    apic_27 { pt3dadd( 276.906, 540.768, 37.5068, 0.4322 ) }
    apic_27 { pt3dadd( 276.568, 541.837, 37.5178, 0.5084 ) }
    apic_27 { pt3dadd( 276.139, 542.883, 37.5197, 0.5848 ) }
    apic_27 { pt3dadd( 275.972, 544.013, 37.52, 0.6864 ) }
    apic_27 { pt3dadd( 275.663, 545.108, 37.52, 0.6864 ) }
    apic_27 { pt3dadd( 275.799, 546.232, 37.5438, 0.661 ) }
    apic_27 { pt3dadd( 276.011, 547.32, 38.1049, 0.6102 ) }
    apic_27 { pt3dadd( 275.879, 548.428, 37.8568, 0.6864 ) }
    apic_27 { pt3dadd( 275.57, 549.425, 38.9116, 0.7626 ) }
    apic_27 { pt3dadd( 275.228, 550.464, 39.37, 0.8136 ) }
    apic_27 { pt3dadd( 275.147, 551.57, 38.7772, 0.7372 ) }
    apic_27 { pt3dadd( 275.224, 552.706, 38.6604, 0.6356 ) }
    apic_27 { pt3dadd( 275.481, 553.806, 38.6434, 0.5848 ) }
    apic_27 { pt3dadd( 275.224, 554.907, 38.8058, 0.6102 ) }
    apic_27 { pt3dadd( 275.148, 556.0, 39.5595, 0.7118 ) }
    apic_27 { pt3dadd( 275.134, 557.141, 39.7314, 0.788 ) }
    apic_27 { pt3dadd( 275.159, 558.283, 39.7555, 0.839 ) }
    apic_27 { pt3dadd( 275.465, 559.379, 39.7594, 0.788 ) }
    apic_27 { pt3dadd( 275.59, 560.461, 39.443, 0.7372 ) }
    apic_27 { pt3dadd( 275.543, 561.251, 39.3182, 0.661 ) }
    apic_27 { pt3dadd( 275.292, 562.325, 39.928, 0.6356 ) }
    apic_27 { pt3dadd( 275.373, 563.403, 40.5594, 0.661 ) }
    apic_27 { pt3dadd( 275.59, 564.483, 40.1442, 0.6356 ) }
    apic_27 { pt3dadd( 275.59, 565.612, 39.7816, 0.6356 ) }
    apic_27 { pt3dadd( 275.59, 566.755, 39.9036, 0.6102 ) }
    apic_27 { pt3dadd( 275.592, 567.854, 40.5936, 0.6356 ) }
    apic_27 { pt3dadd( 275.603, 568.989, 40.8335, 0.6864 ) }
    apic_27 { pt3dadd( 275.688, 570.117, 40.525, 0.6864 ) }
    apic_27 { pt3dadd( 276.071, 571.155, 40.3449, 0.6102 ) }
    apic_27 { pt3dadd( 276.554, 572.17, 40.7473, 0.483 ) }
    apic_27 { pt3dadd( 276.98, 573.192, 40.2041, 0.4322 ) }
    apic_27 { pt3dadd( 277.305, 574.262, 40.2576, 0.4576 ) }
    apic_27 { pt3dadd( 277.396, 575.351, 41.011, 0.5338 ) }
    apic_27 { pt3dadd( 277.142, 576.369, 41.8804, 0.6102 ) }
    apic_27 { pt3dadd( 276.97, 577.483, 42.203, 0.661 ) }
    apic_27 { pt3dadd( 277.01, 578.577, 42.9607, 0.7118 ) }
    apic_27 { pt3dadd( 277.252, 579.682, 43.1203, 0.7118 ) }
    apic_27 { pt3dadd( 277.161, 580.793, 43.1225, 0.7118 ) }
    apic_27 { pt3dadd( 276.855, 581.892, 43.1365, 0.6102 ) }
    apic_27 { pt3dadd( 276.712, 583.001, 43.2337, 0.5084 ) }
    apic_27 { pt3dadd( 276.809, 584.09, 43.862, 0.4068 ) }
    apic_27 { pt3dadd( 276.311, 585.075, 44.543, 0.4322 ) }
    apic_27 { pt3dadd( 276.387, 586.136, 45.2844, 0.5338 ) }
    apic_27 { pt3dadd( 276.518, 587.267, 45.3606, 0.5848 ) }
    apic_27 { pt3dadd( 276.601, 588.406, 45.3639, 0.5592 ) }
    apic_27 { pt3dadd( 276.994, 589.471, 45.3827, 0.4322 ) }
    apic_27 { pt3dadd( 277.499, 590.493, 45.4975, 0.356 ) }
    apic_27 { pt3dadd( 277.94, 591.47, 46.2683, 0.2796 ) }
    apic_27 { pt3dadd( 278.335, 592.363, 45.36, 0.2542 ) }
    apic_27 { pt3dadd( 278.106, 592.363, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.979, 592.579, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.776, 592.719, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.763, 593.05, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.763, 593.393, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.763, 593.622, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.763, 594.422, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.763, 595.223, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.687, 595.947, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.534, 596.596, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.395, 597.257, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.306, 597.969, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.191, 598.655, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.077, 599.342, 47.04, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_27 { pt3dadd( 276.962, 600.028, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.848, 600.714, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.746, 601.413, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.619, 602.087, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.543, 602.811, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.276, 603.346, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.174, 604.045, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 604.833, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 605.634, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 606.434, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 607.235, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 608.036, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 608.837, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 609.638, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 610.438, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 611.239, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 612.04, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 612.841, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 613.642, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 614.442, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 615.243, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 616.044, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 616.845, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.162, 617.646, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.199, 618.409, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.505, 618.904, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 276.771, 619.438, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.039, 619.971, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.42, 620.391, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.661, 620.951, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.725, 621.115, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.763, 621.306, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 277.89, 621.523, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 278.106, 621.535, 47.04, 0.2288 ) }
    apic_27 { pt3dadd( 278.503, 621.654, 47.4286, 0.3814 ) }
    apic_27 { pt3dadd( 279.165, 626.563, 48.8034, 0.4576 ) }
    apic_27 { pt3dadd( 280.503, 632.159, 48.8034, 0.4322 ) }
    apic_27 { pt3dadd( 281.938, 639.106, 48.8034, 0.4576 ) }
    apic_27 { pt3dadd( 283.522, 647.56, 50.1782, 0.483 ) }
    apic_27 { pt3dadd( 283.682, 651.761, 50.1782, 0.483 ) }
    apic_27 { pt3dadd( 286.541, 658.947, 51.553, 0.4068 ) }
    apic_27 { pt3dadd( 288.675, 662.203, 51.553, 0.3304 ) }
    apic_27 { pt3dadd( 291.41, 664.329, 51.553, 0.305 ) }
    apic_27 { pt3dadd( 294.03, 670.453, 54.9898, 0.2796 ) }
    apic_27 { pt3dadd( 295.478, 671.585, 54.9898, 0.2542 ) }
    apic_27 { pt3dadd( 299.209, 671.383, 55.6772, 0.2288 ) }
    apic_27 { pt3dadd( 305.852, 672.425, 55.6772, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 47/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 279.282, 522.744, 29.608, 1.4236 ) }
    apic_2 { pt3dadd( 280.869, 520.626, 28.5911, 1.5254 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 49/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 227.073, 566.919, 37.1182, 0.4576 ) }
    dend_39 { pt3dadd( 224.524, 569.559, 35.056, 0.3304 ) }
    dend_39 { pt3dadd( 223.825, 570.584, 35.056, 0.305 ) }
    dend_39 { pt3dadd( 223.224, 573.545, 31.619, 0.305 ) }
    dend_39 { pt3dadd( 221.99, 574.97, 31.619, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 227.073, 566.919, 37.1182, 0.4576 ) }
    dend_36 { pt3dadd( 225.395, 567.343, 37.1182, 0.4576 ) }
    dend_36 { pt3dadd( 224.546, 567.423, 37.1182, 0.5592 ) }
    dend_36 { pt3dadd( 223.499, 566.557, 37.1182, 0.6864 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 58/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 250.356, 535.964, 36.104, 0.4576 ) }
    dend_31 { pt3dadd( 243.234, 535.568, 35.7434, 0.5592 ) }
    dend_31 { pt3dadd( 239.135, 535.557, 35.7434, 0.5592 ) }
    dend_31 { pt3dadd( 237.84, 535.144, 35.7434, 0.5338 ) }
    dend_31 { pt3dadd( 235.867, 533.421, 35.7434, 0.4322 ) }
    dend_31 { pt3dadd( 233.558, 532.358, 35.7434, 0.3814 ) }
    dend_31 { pt3dadd( 226.168, 531.538, 37.1182, 0.356 ) }
    dend_31 { pt3dadd( 221.807, 531.626, 37.1182, 0.4322 ) }
    dend_31 { pt3dadd( 217.811, 531.874, 37.1182, 0.483 ) }
    dend_31 { pt3dadd( 213.798, 532.689, 38.493, 0.5848 ) }
    dend_31 { pt3dadd( 211.158, 533.969, 38.493, 0.6356 ) }
    dend_31 { pt3dadd( 205.698, 536.655, 39.8675, 0.6356 ) }
    dend_31 { pt3dadd( 204.687, 537.127, 39.8675, 0.5338 ) }
    dend_31 { pt3dadd( 204.185, 538.156, 39.8675, 0.3814 ) }
    dend_31 { pt3dadd( 203.268, 539.415, 41.2423, 0.305 ) }
    dend_31 { pt3dadd( 200.6, 540.979, 41.2423, 0.305 ) }
    dend_31 { pt3dadd( 199.015, 542.247, 41.9297, 0.356 ) }
    dend_31 { pt3dadd( 198.097, 542.953, 41.9297, 0.3814 ) }
    dend_31 { pt3dadd( 196.608, 542.707, 41.9297, 0.3814 ) }
    dend_31 { pt3dadd( 192.354, 541.503, 41.9297, 0.4322 ) }
    dend_31 { pt3dadd( 189.945, 540.784, 42.6171, 0.4576 ) }
    dend_31 { pt3dadd( 188.916, 541.258, 42.6171, 0.4576 ) }
    dend_31 { pt3dadd( 187.096, 541.101, 42.6171, 0.356 ) }
    dend_31 { pt3dadd( 184.88, 539.913, 42.6171, 0.2796 ) }
    dend_31 { pt3dadd( 179.02, 535.965, 43.9919, 0.2796 ) }
    dend_31 { pt3dadd( 177.829, 534.854, 43.9919, 0.3814 ) }
    dend_31 { pt3dadd( 176.243, 533.824, 43.9919, 0.483 ) }
    dend_31 { pt3dadd( 175.371, 533.586, 43.9919, 0.483 ) }
    dend_31 { pt3dadd( 172.01, 535.5, 46.0538, 0.3814 ) }
    dend_31 { pt3dadd( 170.418, 536.694, 46.0538, 0.305 ) }
    dend_31 { pt3dadd( 169.622, 536.853, 46.0538, 0.2796 ) }
    dend_31 { pt3dadd( 168.986, 536.932, 46.0538, 0.3304 ) }
    dend_31 { pt3dadd( 165.014, 535.915, 48.8034, 0.3304 ) }
    dend_31 { pt3dadd( 164.774, 535.195, 48.8034, 0.3304 ) }
    dend_31 { pt3dadd( 164.694, 533.357, 48.8034, 0.2796 ) }
    dend_31 { pt3dadd( 166.517, 531.277, 49.4908, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 250.356, 535.964, 36.104, 0.4576 ) }
    dend_30 { pt3dadd( 249.85, 535.304, 34.5075, 0.5338 ) }
    dend_30 { pt3dadd( 249.365, 534.302, 34.1678, 0.4322 ) }
    dend_30 { pt3dadd( 248.633, 533.424, 34.195, 0.3814 ) }
    dend_30 { pt3dadd( 247.758, 532.691, 34.3022, 0.3814 ) }
    dend_30 { pt3dadd( 246.691, 532.404, 34.5374, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_30 { pt3dadd( 245.566, 532.316, 34.8594, 0.5338 ) }
    dend_30 { pt3dadd( 244.547, 531.967, 34.1706, 0.5848 ) }
    dend_30 { pt3dadd( 243.404, 531.943, 34.0726, 0.5848 ) }
    dend_30 { pt3dadd( 242.295, 531.859, 33.5493, 0.5592 ) }
    dend_30 { pt3dadd( 241.228, 531.532, 33.0411, 0.5084 ) }
    dend_30 { pt3dadd( 240.094, 531.393, 33.0484, 0.5338 ) }
    dend_30 { pt3dadd( 239.031, 530.987, 33.0882, 0.5338 ) }
    dend_30 { pt3dadd( 237.994, 530.537, 33.3502, 0.5848 ) }
    dend_30 { pt3dadd( 237.015, 530.047, 33.598, 0.5592 ) }
    dend_30 { pt3dadd( 236.09, 529.432, 33.8173, 0.5592 ) }
    dend_30 { pt3dadd( 235.164, 528.775, 33.9508, 0.5338 ) }
    dend_30 { pt3dadd( 234.284, 528.156, 33.1428, 0.483 ) }
    dend_30 { pt3dadd( 233.288, 527.609, 33.04, 0.4322 ) }
    dend_30 { pt3dadd( 232.303, 527.035, 33.0397, 0.4068 ) }
    dend_30 { pt3dadd( 231.415, 526.314, 33.0389, 0.4576 ) }
    dend_30 { pt3dadd( 230.474, 525.67, 33.0344, 0.5592 ) }
    dend_30 { pt3dadd( 229.574, 524.963, 33.0151, 0.6102 ) }
    dend_30 { pt3dadd( 228.583, 524.407, 32.9241, 0.661 ) }
    dend_30 { pt3dadd( 227.496, 524.166, 32.779, 0.6102 ) }
    dend_30 { pt3dadd( 226.362, 524.084, 33.0445, 0.6102 ) }
    dend_30 { pt3dadd( 225.282, 523.723, 33.0672, 0.5592 ) }
    dend_30 { pt3dadd( 224.198, 523.379, 33.2128, 0.5338 ) }
    dend_30 { pt3dadd( 223.117, 523.172, 33.8988, 0.4576 ) }
    dend_30 { pt3dadd( 222.032, 522.85, 33.9018, 0.4068 ) }
    dend_30 { pt3dadd( 220.929, 522.76, 33.3071, 0.4322 ) }
    dend_30 { pt3dadd( 219.872, 522.508, 33.9696, 0.4576 ) }
    dend_30 { pt3dadd( 218.831, 522.053, 34.16, 0.5084 ) }
    dend_30 { pt3dadd( 217.703, 521.893, 34.16, 0.5084 ) }
    dend_30 { pt3dadd( 216.559, 521.893, 34.16, 0.6102 ) }
    dend_30 { pt3dadd( 215.415, 521.893, 34.16, 0.6864 ) }
    dend_30 { pt3dadd( 213.942, 521.54, 34.1569, 0.788 ) }
    dend_30 { pt3dadd( 212.838, 521.779, 34.139, 0.788 ) }
    dend_30 { pt3dadd( 211.706, 521.76, 34.0211, 0.7372 ) }
    dend_30 { pt3dadd( 210.647, 521.448, 33.4191, 0.7118 ) }
    dend_30 { pt3dadd( 209.543, 521.333, 33.6843, 0.661 ) }
    dend_30 { pt3dadd( 208.47, 521.022, 34.16, 0.6356 ) }
    dend_30 { pt3dadd( 207.328, 520.996, 34.16, 0.6102 ) }
    dend_30 { pt3dadd( 206.191, 521.098, 34.16, 0.6356 ) }
    dend_30 { pt3dadd( 205.078, 521.293, 34.16, 0.6864 ) }
    dend_30 { pt3dadd( 204.031, 520.863, 34.16, 0.7626 ) }
    dend_30 { pt3dadd( 203.104, 520.197, 34.16, 0.8136 ) }
    dend_30 { pt3dadd( 202.179, 519.527, 34.16, 0.8136 ) }
    dend_30 { pt3dadd( 201.496, 518.62, 34.16, 0.7372 ) }
    dend_30 { pt3dadd( 200.817, 517.701, 34.16, 0.661 ) }
    dend_30 { pt3dadd( 200.064, 516.858, 34.16, 0.6102 ) }
    dend_30 { pt3dadd( 199.119, 516.214, 34.16, 0.6356 ) }
    dend_30 { pt3dadd( 198.136, 515.63, 34.16, 0.661 ) }
    dend_30 { pt3dadd( 197.14, 515.076, 34.16, 0.6864 ) }
    dend_30 { pt3dadd( 196.162, 514.492, 34.16, 0.661 ) }
    dend_30 { pt3dadd( 195.086, 514.132, 34.16, 0.6356 ) }
    dend_30 { pt3dadd( 193.947, 514.044, 34.1597, 0.5848 ) }
    dend_30 { pt3dadd( 192.872, 513.69, 34.1586, 0.5592 ) }
    dend_30 { pt3dadd( 191.864, 513.156, 34.1513, 0.5084 ) }
    dend_30 { pt3dadd( 190.939, 512.493, 34.1172, 0.4576 ) }
    dend_30 { pt3dadd( 190.122, 511.694, 33.9721, 0.3814 ) }
    dend_30 { pt3dadd( 189.371, 510.9, 33.2727, 0.356 ) }
    dend_30 { pt3dadd( 188.548, 510.176, 33.7182, 0.4068 ) }
    dend_30 { pt3dadd( 187.56, 509.669, 33.1996, 0.5084 ) }
    dend_30 { pt3dadd( 186.533, 509.182, 33.04, 0.5848 ) }
    dend_30 { pt3dadd( 185.47, 508.769, 33.0408, 0.5848 ) }
    dend_30 { pt3dadd( 184.54, 508.105, 33.0436, 0.5848 ) }
    dend_30 { pt3dadd( 183.487, 507.723, 33.0607, 0.5592 ) }
    dend_30 { pt3dadd( 182.346, 507.74, 33.1808, 0.5592 ) }
    dend_30 { pt3dadd( 181.258, 507.936, 33.7366, 0.5084 ) }
    dend_30 { pt3dadd( 180.166, 508.165, 33.3049, 0.483 ) }
    dend_30 { pt3dadd( 179.064, 508.165, 33.8808, 0.4576 ) }
    dend_30 { pt3dadd( 177.931, 508.167, 34.1625, 0.483 ) }
    dend_30 { pt3dadd( 176.787, 508.182, 34.1785, 0.5084 ) }
    dend_30 { pt3dadd( 175.648, 508.27, 34.2826, 0.5592 ) }
    dend_30 { pt3dadd( 174.588, 508.58, 34.8779, 0.5848 ) }
    dend_30 { pt3dadd( 173.469, 508.606, 34.8228, 0.6356 ) }
    dend_30 { pt3dadd( 172.361, 508.524, 34.8911, 0.6356 ) }
    dend_30 { pt3dadd( 171.265, 508.39, 35.1974, 0.6102 ) }
    dend_30 { pt3dadd( 170.173, 508.617, 34.7158, 0.5084 ) }
    dend_30 { pt3dadd( 169.053, 508.621, 34.8331, 0.4576 ) }
    dend_30 { pt3dadd( 167.946, 508.611, 34.4285, 0.4322 ) }
    dend_30 { pt3dadd( 166.854, 508.553, 35.1711, 0.483 ) }
    dend_30 { pt3dadd( 165.767, 508.23, 35.28, 0.483 ) }
    dend_30 { pt3dadd( 164.678, 507.889, 35.28, 0.4576 ) }
    dend_30 { pt3dadd( 163.559, 507.672, 35.28, 0.3814 ) }
    dend_30 { pt3dadd( 162.445, 507.46, 35.28, 0.305 ) }
    dend_30 { pt3dadd( 161.326, 507.26, 35.28, 0.2542 ) }
    dend_30 { pt3dadd( 160.184, 507.32, 35.28, 0.2288 ) }
    dend_30 { pt3dadd( 159.13, 507.707, 35.28, 0.2288 ) }
    dend_30 { pt3dadd( 158.787, 507.822, 33.6, 0.2288 ) }
    dend_30 { pt3dadd( 157.986, 507.822, 33.6, 0.2288 ) }
    dend_30 { pt3dadd( 157.186, 507.822, 33.6, 0.2542 ) }
    dend_30 { pt3dadd( 156.385, 507.822, 33.6, 0.305 ) }
    dend_30 { pt3dadd( 155.775, 507.631, 33.6, 0.356 ) }
    dend_30 { pt3dadd( 155.203, 507.402, 33.6, 0.356 ) }
    dend_30 { pt3dadd( 154.631, 507.173, 33.6, 0.305 ) }
    dend_30 { pt3dadd( 153.945, 507.059, 33.6, 0.2542 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 92/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 302.06, 536.266, 24.0775, 0.2288 ) }
    dend_19 { pt3dadd( 302.27, 536.282, 25.2, 0.5848 ) }
    dend_19 { pt3dadd( 302.893, 536.688, 25.2, 0.6102 ) }
    dend_19 { pt3dadd( 303.732, 536.879, 25.2, 0.356 ) }
    dend_19 { pt3dadd( 304.075, 536.879, 25.2, 0.356 ) }
    dend_19 { pt3dadd( 304.533, 537.108, 25.2, 0.6102 ) }
    dend_19 { pt3dadd( 305.219, 537.794, 25.2, 0.9152 ) }
    dend_19 { pt3dadd( 306.058, 538.557, 25.2, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( 306.554, 538.862, 25.2, 0.356 ) }
    dend_19 { pt3dadd( 307.05, 539.053, 25.2, 0.305 ) }
    dend_19 { pt3dadd( 307.278, 539.498, 25.2311, 0.4322 ) }
    dend_19 { pt3dadd( 307.355, 539.891, 25.48, 0.5338 ) }
    dend_19 { pt3dadd( 307.545, 540.388, 25.48, 0.6356 ) }
    dend_19 { pt3dadd( 308.333, 540.972, 25.48, 0.6864 ) }
    dend_19 { pt3dadd( 308.994, 541.913, 25.48, 0.966 ) }
    dend_19 { pt3dadd( 309.884, 542.624, 25.48, 1.0168 ) }
    dend_19 { pt3dadd( 310.596, 543.171, 25.76, 0.839 ) }
    dend_19 { pt3dadd( 310.863, 543.82, 26.04, 0.7372 ) }
    dend_19 { pt3dadd( 311.409, 544.875, 26.04, 0.7626 ) }
    dend_19 { pt3dadd( 311.651, 545.434, 26.04, 0.7372 ) }
    dend_19 { pt3dadd( 311.74, 546.489, 27.16, 0.7118 ) }
    dend_19 { pt3dadd( 312.248, 547.481, 27.4089, 0.839 ) }
    dend_19 { pt3dadd( 312.859, 548.23, 28.0, 0.9914 ) }
    dend_19 { pt3dadd( 313.227, 549.006, 28.56, 0.6102 ) }
    dend_19 { pt3dadd( 313.227, 549.921, 28.84, 0.5848 ) }
    dend_19 { pt3dadd( 313.329, 550.468, 29.2132, 0.7118 ) }
    dend_19 { pt3dadd( 313.824, 551.383, 29.68, 0.9152 ) }
    dend_19 { pt3dadd( 314.523, 552.171, 29.96, 1.0678 ) }
    dend_19 { pt3dadd( 315.515, 552.438, 30.24, 0.9914 ) }
    dend_19 { pt3dadd( 316.43, 552.552, 30.24, 0.8136 ) }
    dend_19 { pt3dadd( 317.04, 552.972, 30.24, 0.5592 ) }
    dend_19 { pt3dadd( 317.676, 553.709, 30.24, 0.6864 ) }
    dend_19 { pt3dadd( 318.477, 554.509, 30.24, 0.7118 ) }
    dend_19 { pt3dadd( 319.29, 555.298, 30.24, 0.7626 ) }
    dend_19 { pt3dadd( 320.002, 556.188, 30.24, 0.788 ) }
    dend_19 { pt3dadd( 320.46, 556.874, 30.24, 0.8136 ) }
    dend_19 { pt3dadd( 321.006, 557.242, 30.24, 0.5848 ) }
    dend_19 { pt3dadd( 321.121, 557.7, 31.08, 0.661 ) }
    dend_19 { pt3dadd( 322.061, 558.476, 31.08, 0.7372 ) }
    dend_19 { pt3dadd( 323.001, 559.137, 31.08, 0.6356 ) }
    dend_19 { pt3dadd( 323.409, 559.53, 31.08, 0.5338 ) }
    dend_19 { pt3dadd( 323.841, 559.899, 31.08, 0.4322 ) }
    dend_19 { pt3dadd( 324.311, 560.115, 31.08, 0.4322 ) }
    dend_19 { pt3dadd( 324.553, 560.217, 31.08, 0.5084 ) }
    dend_19 { pt3dadd( 325.087, 561.055, 31.08, 0.6864 ) }
    dend_19 { pt3dadd( 325.595, 562.149, 31.08, 0.5592 ) }
    dend_19 { pt3dadd( 326.027, 562.517, 31.08, 0.5848 ) }
    dend_19 { pt3dadd( 326.294, 563.052, 31.08, 0.661 ) }
    dend_19 { pt3dadd( 326.574, 563.572, 31.08, 0.6864 ) }
    dend_19 { pt3dadd( 327.095, 564.424, 31.64, 0.6102 ) }
    dend_19 { pt3dadd( 327.324, 564.882, 31.92, 0.6102 ) }
    dend_19 { pt3dadd( 327.413, 565.556, 32.0132, 0.5338 ) }
    dend_19 { pt3dadd( 327.706, 565.987, 32.2, 0.5084 ) }
    dend_19 { pt3dadd( 328.074, 566.42, 32.2, 0.4576 ) }
    dend_19 { pt3dadd( 328.303, 566.877, 32.48, 0.5084 ) }
    dend_19 { pt3dadd( 328.646, 567.233, 32.7289, 0.6356 ) }
    dend_19 { pt3dadd( 329.205, 567.424, 32.8532, 0.7626 ) }
    dend_19 { pt3dadd( 330.133, 568.021, 33.04, 0.7626 ) }
    dend_19 { pt3dadd( 330.959, 568.606, 33.5068, 0.6864 ) }
    dend_19 { pt3dadd( 331.849, 569.127, 33.9732, 0.6864 ) }
    dend_19 { pt3dadd( 333.018, 569.369, 34.44, 0.6356 ) }
    dend_19 { pt3dadd( 333.705, 569.369, 34.72, 0.6102 ) }
    dend_19 { pt3dadd( 334.315, 569.483, 34.9068, 0.661 ) }
    dend_19 { pt3dadd( 334.785, 569.674, 35.2489, 0.6864 ) }
    dend_19 { pt3dadd( 335.371, 569.839, 35.3732, 0.6864 ) }
    dend_19 { pt3dadd( 336.413, 570.322, 35.56, 0.5338 ) }
    dend_19 { pt3dadd( 336.908, 570.627, 35.56, 0.4576 ) }
    dend_19 { pt3dadd( 337.455, 570.881, 35.56, 0.356 ) }
    dend_19 { pt3dadd( 338.039, 571.097, 35.56, 0.305 ) }
    dend_19 { pt3dadd( 338.624, 571.314, 35.56, 0.2796 ) }
    dend_19 { pt3dadd( 339.082, 571.657, 35.56, 0.305 ) }
    dend_19 { pt3dadd( 339.539, 572.0, 35.56, 0.2796 ) }
    dend_19 { pt3dadd( 339.972, 572.368, 35.56, 0.2796 ) }
    dend_19 { pt3dadd( 340.34, 572.801, 35.56, 0.3304 ) }
    dend_19 { pt3dadd( 340.696, 573.246, 35.56, 0.4576 ) }
    dend_19 { pt3dadd( 340.95, 573.793, 35.56, 0.6102 ) }
    dend_19 { pt3dadd( 341.179, 574.365, 35.56, 0.7372 ) }
    dend_19 { pt3dadd( 341.713, 574.86, 35.56, 0.9152 ) }
    dend_19 { pt3dadd( 342.476, 575.813, 35.56, 0.5848 ) }
    dend_19 { pt3dadd( 342.819, 576.271, 35.56, 0.483 ) }
    dend_19 { pt3dadd( 343.175, 576.678, 35.4668, 0.483 ) }
    dend_19 { pt3dadd( 343.556, 576.907, 35.0, 0.483 ) }
    dend_19 { pt3dadd( 343.874, 577.071, 34.2222, 0.4576 ) }
    dend_19 { pt3dadd( 344.331, 577.161, 33.88, 0.3814 ) }
    dend_19 { pt3dadd( 344.712, 577.466, 33.88, 0.4576 ) }
    dend_19 { pt3dadd( 345.157, 577.949, 33.6311, 0.4068 ) }
    dend_19 { pt3dadd( 345.526, 578.292, 33.4132, 0.4068 ) }
    dend_19 { pt3dadd( 346.022, 578.444, 33.04, 0.3814 ) }
    dend_19 { pt3dadd( 346.441, 578.826, 33.04, 0.4322 ) }
    dend_19 { pt3dadd( 347.039, 579.029, 33.04, 0.4068 ) }
    dend_19 { pt3dadd( 347.471, 579.398, 33.04, 0.4322 ) }
    dend_19 { pt3dadd( 347.674, 579.881, 33.04, 0.3814 ) }
    dend_19 { pt3dadd( 348.221, 580.021, 33.04, 0.305 ) }
    dend_19 { pt3dadd( 348.793, 580.478, 33.04, 0.5084 ) }
    dend_19 { pt3dadd( 349.225, 580.847, 33.04, 0.5592 ) }
    dend_19 { pt3dadd( 349.708, 581.165, 33.04, 0.5338 ) }
    dend_19 { pt3dadd( 350.0, 581.674, 33.04, 0.5338 ) }
    dend_19 { pt3dadd( 350.407, 582.067, 33.04, 0.6102 ) }
    dend_19 { pt3dadd( 350.877, 582.398, 33.04, 0.7372 ) }
    dend_19 { pt3dadd( 351.64, 583.236, 33.04, 0.7626 ) }
    dend_19 { pt3dadd( 352.314, 584.164, 33.04, 0.6864 ) }
    dend_19 { pt3dadd( 352.949, 585.131, 33.04, 0.6864 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 94/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 302.06, 536.266, 24.0775, 0.2288 ) }
    dend_12 { pt3dadd( 303.141, 536.053, 24.0638, 0.6102 ) }
    dend_12 { pt3dadd( 304.161, 535.559, 23.9862, 0.7626 ) }
    dend_12 { pt3dadd( 305.211, 535.188, 23.4878, 0.788 ) }
    dend_12 { pt3dadd( 306.268, 534.823, 23.0283, 0.7118 ) }
    dend_12 { pt3dadd( 307.273, 534.399, 23.583, 0.5848 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 308.271, 533.915, 24.0232, 0.5338 ) }
    dend_12 { pt3dadd( 309.397, 533.862, 23.7188, 0.5084 ) }
    dend_12 { pt3dadd( 309.223, 533.79, 21.84, 0.5338 ) }
    dend_12 { pt3dadd( 310.024, 533.79, 21.84, 0.5592 ) }
    dend_12 { pt3dadd( 310.825, 533.79, 21.84, 0.5592 ) }
    dend_12 { pt3dadd( 311.626, 533.79, 21.84, 0.6356 ) }
    dend_12 { pt3dadd( 312.426, 533.79, 21.84, 0.6102 ) }
    dend_12 { pt3dadd( 313.227, 533.79, 21.84, 0.5848 ) }
    dend_12 { pt3dadd( 314.028, 533.79, 21.84, 0.4068 ) }
    dend_12 { pt3dadd( 314.829, 533.79, 21.84, 0.305 ) }
    dend_12 { pt3dadd( 315.63, 533.79, 21.84, 0.305 ) }
    dend_12 { pt3dadd( 316.43, 533.79, 21.84, 0.4068 ) }
    dend_12 { pt3dadd( 317.231, 533.79, 21.84, 0.5338 ) }
    dend_12 { pt3dadd( 317.892, 533.651, 21.84, 0.6356 ) }
    dend_12 { pt3dadd( 319.074, 533.231, 21.84, 1.0932 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 15/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 298.189, 542.812, 24.0806, 0.6864 ) }
    dend_8 { pt3dadd( 298.28, 548.264, 24.7453, 0.6864 ) }
    dend_8 { pt3dadd( 297.409, 551.811, 26.1201, 0.6864 ) }
    dend_8 { pt3dadd( 296.183, 555.928, 26.1201, 0.661 ) }
    dend_8 { pt3dadd( 295.851, 560.532, 26.8075, 0.5592 ) }
    dend_8 { pt3dadd( 295.586, 564.157, 26.8075, 0.483 ) }
    dend_8 { pt3dadd( 295.097, 572.746, 28.1823, 0.4068 ) }
    dend_8 { pt3dadd( 294.071, 577.21, 28.8697, 0.4068 ) }
    dend_8 { pt3dadd( 292.979, 580.762, 29.5571, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 24/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 298.189, 542.812, 24.0806, 0.6864 ) }
    dend_3 { pt3dadd( 298.889, 543.703, 24.0825, 0.839 ) }
    dend_3 { pt3dadd( 299.842, 544.331, 24.0923, 0.9152 ) }
    // Section: apic_42, id: apic_42, parent: apic_36 (entry count 27/100)
    apic_42 { pt3dclear() }
    apic_42 { pt3dadd( 356.615, 581.006, 20.6212, 0.6864 ) }
    apic_42 { pt3dadd( 357.561, 580.041, 20.6212, 0.3814 ) }
    apic_42 { pt3dadd( 358.329, 578.492, 20.6212, 0.2796 ) }
    apic_42 { pt3dadd( 358.48, 577.6, 20.6212, 0.2288 ) }
    apic_42 { pt3dadd( 359.915, 575.974, 19.9338, 0.2288 ) }
    // Section: apic_37, id: apic_37, parent: apic_36 (entry count 32/100)
    apic_37 { pt3dclear() }
    apic_37 { pt3dadd( 356.615, 581.006, 20.6212, 0.6864 ) }
    apic_37 { pt3dadd( 358.416, 580.446, 19.9338, 0.3814 ) }
    apic_37 { pt3dadd( 359.882, 580.895, 19.9338, 0.2796 ) }
    apic_37 { pt3dadd( 361.92, 580.25, 19.9338, 0.2288 ) }
    // Section: apic_31, id: apic_31, parent: apic_29 (entry count 36/100)
    apic_31 { pt3dclear() }
    apic_31 { pt3dadd( 290.574, 546.822, 35.4822, 0.6864 ) }
    apic_31 { pt3dadd( 290.8, 547.889, 36.2239, 0.483 ) }
    apic_31 { pt3dadd( 291.165, 548.964, 36.4034, 0.483 ) }
    apic_31 { pt3dadd( 291.466, 550.065, 36.4221, 0.483 ) }
    apic_31 { pt3dadd( 291.339, 551.174, 36.5392, 0.5338 ) }
    apic_31 { pt3dadd( 291.324, 552.255, 37.2159, 0.483 ) }
    apic_31 { pt3dadd( 291.6, 553.348, 37.5194, 0.2288 ) }
    // Section: apic_30, id: apic_30, parent: apic_29 (entry count 43/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 290.574, 546.822, 35.4822, 0.6864 ) }
    apic_30 { pt3dadd( 290.944, 545.942, 36.12, 0.4576 ) }
    apic_30 { pt3dadd( 291.262, 545.459, 36.12, 0.3304 ) }
    apic_30 { pt3dadd( 291.568, 544.964, 36.12, 0.2542 ) }
    apic_30 { pt3dadd( 291.898, 544.494, 36.12, 0.2288 ) }
    apic_30 { pt3dadd( 292.356, 544.151, 36.12, 0.2288 ) }
    apic_30 { pt3dadd( 292.787, 543.781, 36.12, 0.2542 ) }
    apic_30 { pt3dadd( 293.22, 543.413, 36.12, 0.2796 ) }
    apic_30 { pt3dadd( 293.576, 542.968, 36.12, 0.305 ) }
    apic_30 { pt3dadd( 293.894, 542.485, 36.12, 0.305 ) }
    apic_30 { pt3dadd( 294.401, 542.192, 36.12, 0.3304 ) }
    apic_30 { pt3dadd( 294.898, 541.888, 36.12, 0.4068 ) }
    apic_30 { pt3dadd( 295.304, 541.493, 36.12, 0.5084 ) }
    apic_30 { pt3dadd( 295.915, 541.074, 36.12, 0.4576 ) }
    apic_30 { pt3dadd( 296.08, 540.667, 36.12, 0.2796 ) }
    apic_30 { pt3dadd( 296.346, 540.133, 36.12, 0.305 ) }
    apic_30 { pt3dadd( 296.677, 539.663, 36.12, 0.4068 ) }
    apic_30 { pt3dadd( 297.097, 539.282, 36.12, 0.4576 ) }
    apic_30 { pt3dadd( 297.427, 538.811, 36.12, 0.4576 ) }
    apic_30 { pt3dadd( 297.605, 538.188, 36.12, 0.356 ) }
    apic_30 { pt3dadd( 298.012, 537.794, 36.12, 0.2796 ) }
    apic_30 { pt3dadd( 298.457, 537.439, 36.12, 0.2288 ) }
    apic_30 { pt3dadd( 298.686, 536.867, 36.12, 0.2288 ) }
    apic_30 { pt3dadd( 298.94, 536.32, 36.12, 0.2796 ) }
    apic_30 { pt3dadd( 299.054, 535.633, 36.12, 0.3814 ) }
    apic_30 { pt3dadd( 299.169, 534.947, 36.12, 0.5084 ) }
    apic_30 { pt3dadd( 299.27, 534.248, 36.12, 0.5848 ) }
    apic_30 { pt3dadd( 299.499, 533.676, 36.12, 0.6102 ) }
    apic_30 { pt3dadd( 299.957, 532.99, 36.12, 0.5084 ) }
    apic_30 { pt3dadd( 300.109, 532.455, 36.12, 0.2796 ) }
    apic_30 { pt3dadd( 300.338, 532.341, 36.12, 0.2288 ) }
    apic_30 { pt3dadd( 300.783, 531.756, 36.12, 0.2796 ) }
    apic_30 { pt3dadd( 301.088, 531.261, 36.12, 0.3814 ) }
    apic_30 { pt3dadd( 301.469, 530.841, 36.12, 0.483 ) }
    apic_30 { pt3dadd( 301.876, 530.448, 36.12, 0.483 ) }
    apic_30 { pt3dadd( 302.207, 529.977, 36.12, 0.4322 ) }
    apic_30 { pt3dadd( 302.511, 529.481, 36.12, 0.3814 ) }
    apic_30 { pt3dadd( 302.804, 528.973, 36.12, 0.3814 ) }
    apic_30 { pt3dadd( 303.02, 528.388, 36.12, 0.3814 ) }
    apic_30 { pt3dadd( 303.351, 527.918, 36.12, 0.4068 ) }
    apic_30 { pt3dadd( 303.732, 527.498, 36.12, 0.483 ) }
    apic_30 { pt3dadd( 304.444, 526.608, 36.12, 0.661 ) }
    apic_30 { pt3dadd( 305.105, 525.668, 36.12, 0.5338 ) }
    apic_30 { pt3dadd( 305.435, 525.198, 36.12, 0.4322 ) }
    apic_30 { pt3dadd( 305.753, 524.715, 36.12, 0.4322 ) }
    apic_30 { pt3dadd( 306.007, 524.168, 36.12, 0.483 ) }
    apic_30 { pt3dadd( 306.287, 523.647, 36.12, 0.5338 ) }
    apic_30 { pt3dadd( 306.49, 523.049, 36.12, 0.483 ) }
    apic_30 { pt3dadd( 306.744, 522.503, 36.12, 0.4068 ) }
    apic_30 { pt3dadd( 306.973, 521.931, 36.12, 0.3304 ) }
    apic_30 { pt3dadd( 307.266, 521.423, 36.12, 0.3304 ) }
    apic_30 { pt3dadd( 307.507, 520.863, 36.12, 0.356 ) }
    apic_30 { pt3dadd( 307.507, 520.52, 36.12, 0.2542 ) }
    apic_30 { pt3dadd( 307.507, 520.291, 36.12, 0.2288 ) }
    apic_30 { pt3dadd( 307.572, 516.281, 39.1801, 0.5338 ) }
    apic_30 { pt3dadd( 307.557, 514.086, 39.1801, 0.5848 ) }
    apic_30 { pt3dadd( 307.296, 512.628, 39.8675, 0.5592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_30 { pt3dadd( 307.912, 512.01, 39.8675, 0.6102 ) }
    apic_30 { pt3dadd( 308.53, 512.01, 39.8675, 0.661 ) }
    apic_30 { pt3dadd( 309.641, 511.282, 41.2423, 0.6864 ) }
    apic_30 { pt3dadd( 310.466, 510.147, 41.2423, 0.6356 ) }
    apic_30 { pt3dadd( 311.397, 506.815, 43.3045, 0.5084 ) }
    apic_30 { pt3dadd( 312.971, 503.175, 44.6793, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 6/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 280.869, 520.626, 28.5911, 1.5254 ) }
    apic_8 { pt3dadd( 281.549, 519.137, 28.56, 1.1948 ) }
    apic_8 { pt3dadd( 282.356, 518.328, 28.5611, 1.0932 ) }
    apic_8 { pt3dadd( 283.165, 517.518, 28.5648, 1.0168 ) }
    apic_8 { pt3dadd( 283.97, 516.706, 28.579, 0.9914 ) }
    apic_8 { pt3dadd( 284.766, 515.885, 28.6334, 0.9406 ) }
    apic_8 { pt3dadd( 285.52, 515.029, 28.8403, 0.966 ) }
    apic_8 { pt3dadd( 286.063, 514.077, 29.6089, 1.0424 ) }
    apic_8 { pt3dadd( 286.667, 513.121, 29.9032, 1.0932 ) }
    apic_8 { pt3dadd( 287.354, 512.314, 30.8487, 1.0932 ) }
    apic_8 { pt3dadd( 287.937, 511.418, 31.759, 1.0932 ) }
    apic_8 { pt3dadd( 288.675, 510.549, 31.8816, 1.144 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 18/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 280.869, 520.626, 28.5911, 1.5254 ) }
    apic_3 { pt3dadd( 280.831, 518.446, 28.67, 0.8644 ) }
    apic_3 { pt3dadd( 280.278, 517.525, 29.3815, 0.6864 ) }
    apic_3 { pt3dadd( 279.34, 516.911, 29.554, 0.6864 ) }
    apic_3 { pt3dadd( 278.269, 516.669, 28.9117, 0.788 ) }
    apic_3 { pt3dadd( 277.275, 516.137, 28.5194, 0.839 ) }
    apic_3 { pt3dadd( 276.401, 515.404, 28.3679, 0.8136 ) }
    apic_3 { pt3dadd( 275.582, 514.691, 27.5979, 0.788 ) }
    apic_3 { pt3dadd( 274.591, 514.135, 27.433, 0.7372 ) }
    apic_3 { pt3dadd( 273.637, 513.514, 27.4039, 0.7118 ) }
    apic_3 { pt3dadd( 272.784, 512.753, 27.2896, 0.661 ) }
    apic_3 { pt3dadd( 271.88, 512.119, 26.7162, 0.6356 ) }
    apic_3 { pt3dadd( 270.94, 511.483, 26.5023, 0.6102 ) }
    apic_3 { pt3dadd( 270.0, 510.969, 27.3316, 0.6102 ) }
    apic_3 { pt3dadd( 269.015, 510.396, 27.4487, 0.6102 ) }
    apic_3 { pt3dadd( 267.957, 510.007, 27.491, 0.6102 ) }
    apic_3 { pt3dadd( 266.824, 509.962, 27.7796, 0.6356 ) }
    apic_3 { pt3dadd( 265.751, 509.771, 28.4978, 0.661 ) }
    apic_3 { pt3dadd( 264.667, 509.418, 28.56, 0.6864 ) }
    apic_3 { pt3dadd( 263.612, 508.979, 28.56, 0.6864 ) }
    apic_3 { pt3dadd( 262.53, 508.645, 28.56, 0.6864 ) }
    apic_3 { pt3dadd( 261.387, 508.618, 28.56, 0.7118 ) }
    apic_3 { pt3dadd( 260.244, 508.588, 28.56, 0.7626 ) }
    apic_3 { pt3dadd( 259.116, 508.412, 28.56, 0.9152 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 223.499, 566.557, 37.1182, 0.6864 ) }
    dend_38 { pt3dadd( 224.534, 561.532, 37.8056, 0.356 ) }
    dend_38 { pt3dadd( 225.053, 558.409, 40.5549, 0.305 ) }
    dend_38 { pt3dadd( 224.866, 549.745, 45.3667, 0.305 ) }
    dend_38 { pt3dadd( 225.207, 545.299, 47.4286, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 47/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 223.499, 566.557, 37.1182, 0.6864 ) }
    dend_37 { pt3dadd( 222.095, 566.473, 37.1182, 0.5592 ) }
    dend_37 { pt3dadd( 216.602, 564.041, 37.8056, 0.7626 ) }
    dend_37 { pt3dadd( 215.444, 563.182, 37.8056, 0.9406 ) }
    dend_37 { pt3dadd( 214.858, 562.108, 37.8056, 0.9914 ) }
    dend_37 { pt3dadd( 212.035, 558.633, 38.493, 0.9152 ) }
    dend_37 { pt3dadd( 208.192, 555.907, 39.8675, 0.7372 ) }
    dend_37 { pt3dadd( 206.248, 554.402, 40.5549, 0.5592 ) }
    dend_37 { pt3dadd( 202.361, 553.877, 41.9297, 0.4068 ) }
    dend_37 { pt3dadd( 198.967, 553.157, 41.9297, 0.3304 ) }
    dend_37 { pt3dadd( 194.319, 552.661, 41.9297, 0.305 ) }
    dend_37 { pt3dadd( 184.316, 552.084, 43.3045, 0.305 ) }
    dend_37 { pt3dadd( 182.275, 551.943, 43.3045, 0.356 ) }
    dend_37 { pt3dadd( 180.018, 552.475, 42.6171, 0.4322 ) }
    dend_37 { pt3dadd( 178.176, 552.948, 43.9919, 0.483 ) }
    dend_37 { pt3dadd( 174.515, 554.083, 45.3667, 0.4322 ) }
    dend_37 { pt3dadd( 173.961, 553.474, 45.3667, 0.2542 ) }
    dend_37 { pt3dadd( 172.418, 550.897, 46.7412, 0.2542 ) }
    dend_37 { pt3dadd( 170.28, 549.628, 48.8034, 0.305 ) }
    dend_37 { pt3dadd( 166.492, 547.958, 50.1782, 0.356 ) }
    dend_37 { pt3dadd( 162.263, 546.485, 50.8656, 0.356 ) }
    dend_37 { pt3dadd( 158.648, 544.709, 50.8656, 0.305 ) }
    dend_37 { pt3dadd( 157.942, 543.717, 50.8656, 0.2542 ) }
    dend_37 { pt3dadd( 158.577, 542.767, 50.8656, 0.2288 ) }
    dend_37 { pt3dadd( 158.364, 541.673, 50.8656, 0.2288 ) }
    dend_37 { pt3dadd( 157.31, 540.545, 50.8656, 0.2288 ) }
    dend_37 { pt3dadd( 155.505, 538.537, 50.8656, 0.2288 ) }
    dend_37 { pt3dadd( 154.669, 538.138, 50.68, 0.2288 ) }
    dend_37 { pt3dadd( 153.868, 538.138, 50.68, 0.2288 ) }
    dend_37 { pt3dadd( 153.525, 538.138, 50.68, 0.2288 ) }
    dend_37 { pt3dadd( 153.182, 538.138, 50.68, 0.2288 ) }
    dend_37 { pt3dadd( 152.889, 538.087, 50.68, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 79/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 352.949, 585.131, 33.04, 0.6864 ) }
    dend_21 { pt3dadd( 353.463, 585.646, 32.9938, 0.6102 ) }
    dend_21 { pt3dadd( 354.159, 586.115, 33.6812, 0.4322 ) }
    dend_21 { pt3dadd( 355.329, 586.493, 33.6812, 0.305 ) }
    dend_21 { pt3dadd( 355.61, 585.622, 33.6812, 0.2288 ) }
    dend_21 { pt3dadd( 357.608, 581.118, 37.1182, 0.2288 ) }
    dend_21 { pt3dadd( 358.952, 579.126, 37.1182, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 86/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 352.949, 585.131, 33.04, 0.6864 ) }
    dend_20 { pt3dadd( 353.267, 585.728, 33.04, 0.6864 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 88/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 319.074, 533.231, 21.84, 1.0932 ) }
    dend_14 { pt3dadd( 319.655, 532.676, 21.996, 0.7372 ) }
    dend_14 { pt3dadd( 322.153, 532.881, 20.6212, 0.5338 ) }
    dend_14 { pt3dadd( 323.073, 533.614, 20.6212, 0.356 ) }
    dend_14 { pt3dadd( 323.922, 533.375, 20.6212, 0.2796 ) }
    dend_14 { pt3dadd( 329.29, 530.79, 18.559, 0.305 ) }
    dend_14 { pt3dadd( 332.589, 529.266, 18.559, 0.3814 ) }
    dend_14 { pt3dadd( 333.69, 528.204, 18.559, 0.4068 ) }
    dend_14 { pt3dadd( 334.916, 526.883, 18.559, 0.3814 ) }
    dend_14 { pt3dadd( 338.321, 526.799, 16.497, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 319.074, 533.231, 21.84, 1.0932 ) }
    dend_13 { pt3dadd( 324.976, 529.304, 20.6212, 0.788 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_13 { pt3dadd( 331.029, 524.367, 21.3086, 0.7626 ) }
    dend_13 { pt3dadd( 331.68, 524.061, 21.3086, 0.7626 ) }
    dend_13 { pt3dadd( 332.918, 523.642, 21.3086, 0.6864 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 3/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 292.979, 580.762, 29.5571, 0.2288 ) }
    dend_10 { pt3dadd( 292.978, 580.938, 29.5571, 0.2288 ) }
    dend_10 { pt3dadd( 302.5, 584.306, 29.5571, 0.2288 ) }
    dend_10 { pt3dadd( 310.645, 583.451, 29.5571, 0.2288 ) }
    dend_10 { pt3dadd( 315.093, 583.832, 29.5571, 0.2288 ) }
    dend_10 { pt3dadd( 318.812, 585.164, 29.5571, 0.2542 ) }
    dend_10 { pt3dadd( 327.371, 585.648, 32.3064, 0.2796 ) }
    dend_10 { pt3dadd( 331.716, 586.214, 32.3064, 0.305 ) }
    dend_10 { pt3dadd( 341.527, 589.551, 30.2445, 0.2796 ) }
    dend_10 { pt3dadd( 348.934, 594.445, 29.5571, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 13/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 292.979, 580.762, 29.5571, 0.2288 ) }
    dend_9 { pt3dadd( 289.409, 588.794, 29.5571, 0.305 ) }
    dend_9 { pt3dadd( 287.586, 594.094, 29.5571, 0.2796 ) }
    dend_9 { pt3dadd( 288.097, 601.679, 28.8697, 0.2542 ) }
    dend_9 { pt3dadd( 288.923, 604.237, 30.2445, 0.2288 ) }
    dend_9 { pt3dadd( 286.562, 606.151, 30.2445, 0.2288 ) }
    dend_9 { pt3dadd( 285.987, 607.811, 30.2445, 0.2288 ) }
    dend_9 { pt3dadd( 287.327, 611.065, 30.2445, 0.2288 ) }
    dend_9 { pt3dadd( 288.477, 613.044, 30.2445, 0.2288 ) }
    dend_9 { pt3dadd( 290.137, 614.095, 30.9319, 0.2542 ) }
    dend_9 { pt3dadd( 290.583, 614.925, 30.9319, 0.305 ) }
    dend_9 { pt3dadd( 290.968, 616.785, 31.619, 0.356 ) }
    dend_9 { pt3dadd( 288.791, 622.699, 32.9938, 0.356 ) }
    dend_9 { pt3dadd( 288.708, 622.641, 33.6, 0.356 ) }
    dend_9 { pt3dadd( 288.415, 623.035, 33.6, 0.4322 ) }
    dend_9 { pt3dadd( 288.402, 623.366, 33.6, 0.4068 ) }
    dend_9 { pt3dadd( 288.402, 624.395, 33.6, 0.2542 ) }
    dend_9 { pt3dadd( 288.402, 625.196, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.402, 625.997, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.402, 626.798, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.402, 627.598, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.402, 628.399, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.453, 629.15, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.631, 629.772, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.631, 630.573, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.631, 631.374, 33.6, 0.2288 ) }
    dend_9 { pt3dadd( 288.631, 632.174, 33.6, 0.2542 ) }
    dend_9 { pt3dadd( 288.631, 632.975, 33.6, 0.305 ) }
    dend_9 { pt3dadd( 288.708, 633.699, 33.6, 0.356 ) }
    dend_9 { pt3dadd( 289.039, 634.169, 33.6, 0.3814 ) }
    dend_9 { pt3dadd( 289.318, 634.691, 33.6, 0.356 ) }
    dend_9 { pt3dadd( 289.482, 635.327, 33.6, 0.3304 ) }
    dend_9 { pt3dadd( 289.661, 635.95, 33.6, 0.3304 ) }
    dend_9 { pt3dadd( 289.661, 636.75, 33.6, 0.3814 ) }
    dend_9 { pt3dadd( 289.711, 637.386, 33.32, 0.4576 ) }
    dend_9 { pt3dadd( 289.89, 637.716, 32.8843, 0.4576 ) }
    dend_9 { pt3dadd( 289.89, 638.352, 32.76, 0.305 ) }
    dend_9 { pt3dadd( 289.89, 638.581, 32.76, 0.2542 ) }
    dend_9 { pt3dadd( 289.89, 639.267, 32.48, 0.2542 ) }
    dend_9 { pt3dadd( 289.89, 640.068, 32.48, 0.305 ) }
    dend_9 { pt3dadd( 289.89, 640.869, 32.48, 0.356 ) }
    dend_9 { pt3dadd( 289.89, 641.453, 31.9511, 0.356 ) }
    dend_9 { pt3dadd( 289.89, 642.0, 31.6089, 0.2542 ) }
    dend_9 { pt3dadd( 289.89, 642.127, 31.08, 0.2288 ) }
    dend_9 { pt3dadd( 289.89, 642.254, 30.5511, 0.2288 ) }
    dend_9 { pt3dadd( 289.89, 642.623, 30.0532, 0.2288 ) }
    dend_9 { pt3dadd( 289.89, 642.928, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 289.89, 643.157, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 289.89, 643.386, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 289.813, 643.652, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 289.648, 643.831, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 289.318, 643.843, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 288.758, 643.856, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 288.517, 644.301, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 288.288, 644.644, 29.96, 0.2796 ) }
    dend_9 { pt3dadd( 288.072, 645.229, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 287.932, 645.89, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 287.564, 646.322, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 287.144, 646.703, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 286.763, 647.009, 29.96, 0.356 ) }
    dend_9 { pt3dadd( 286.686, 647.275, 29.96, 0.4576 ) }
    dend_9 { pt3dadd( 286.267, 648.228, 29.96, 0.5848 ) }
    dend_9 { pt3dadd( 285.975, 648.61, 29.9911, 0.4576 ) }
    dend_9 { pt3dadd( 285.886, 648.889, 30.7689, 0.2542 ) }
    dend_9 { pt3dadd( 285.721, 649.284, 30.8, 0.2288 ) }
    dend_9 { pt3dadd( 285.555, 649.461, 30.8, 0.2288 ) }
    dend_9 { pt3dadd( 285.314, 650.135, 30.8, 0.2288 ) }
    dend_9 { pt3dadd( 285.314, 650.936, 30.8, 0.2288 ) }
    dend_9 { pt3dadd( 285.314, 651.737, 30.8, 0.2288 ) }
    dend_9 { pt3dadd( 285.301, 652.067, 30.8, 0.2288 ) }
    dend_9 { pt3dadd( 285.123, 652.423, 30.4268, 0.3304 ) }
    dend_9 { pt3dadd( 284.742, 652.766, 29.96, 0.3304 ) }
    dend_9 { pt3dadd( 284.589, 653.072, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 284.284, 653.567, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 284.017, 654.101, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 283.648, 654.533, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 283.369, 655.054, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 283.038, 655.525, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 283.026, 655.855, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 282.695, 656.211, 29.96, 0.4322 ) }
    dend_9 { pt3dadd( 282.491, 656.579, 29.96, 0.4322 ) }
    dend_9 { pt3dadd( 282.301, 657.19, 29.96, 0.3304 ) }
    dend_9 { pt3dadd( 282.009, 657.698, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 281.691, 658.181, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 281.501, 658.792, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 281.424, 659.516, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 281.31, 660.202, 29.96, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 281.31, 660.546, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 281.081, 661.003, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 280.788, 661.282, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 280.28, 661.575, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 279.987, 661.625, 29.96, 0.2288 ) }
    dend_9 { pt3dadd( 279.86, 661.842, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 279.822, 662.147, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 279.822, 662.49, 29.96, 0.356 ) }
    dend_9 { pt3dadd( 279.708, 663.406, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 279.708, 664.206, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 279.708, 665.007, 29.96, 0.356 ) }
    dend_9 { pt3dadd( 279.708, 665.808, 29.96, 0.4322 ) }
    dend_9 { pt3dadd( 279.708, 666.151, 29.96, 0.4322 ) }
    dend_9 { pt3dadd( 280.039, 666.507, 29.96, 0.3814 ) }
    dend_9 { pt3dadd( 280.293, 667.168, 29.96, 0.3304 ) }
    dend_9 { pt3dadd( 280.42, 667.384, 29.96, 0.305 ) }
    dend_9 { pt3dadd( 280.547, 668.173, 29.96, 0.2796 ) }
    dend_9 { pt3dadd( 280.852, 668.668, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 281.081, 669.24, 29.96, 0.2542 ) }
    dend_9 { pt3dadd( 281.437, 669.608, 29.7732, 0.2796 ) }
    dend_9 { pt3dadd( 281.615, 669.862, 29.1511, 0.3814 ) }
    dend_9 { pt3dadd( 281.653, 670.155, 29.12, 0.4068 ) }
    dend_9 { pt3dadd( 281.742, 670.638, 29.12, 0.2796 ) }
    dend_9 { pt3dadd( 281.882, 671.299, 29.12, 0.2288 ) }
    dend_9 { pt3dadd( 282.11, 671.871, 29.12, 0.2542 ) }
    dend_9 { pt3dadd( 282.53, 672.252, 29.12, 0.305 ) }
    dend_9 { pt3dadd( 282.772, 672.812, 29.12, 0.356 ) }
    dend_9 { pt3dadd( 283.026, 673.358, 29.12, 0.356 ) }
    dend_9 { pt3dadd( 283.178, 674.007, 29.12, 0.305 ) }
    dend_9 { pt3dadd( 283.369, 674.617, 29.12, 0.2542 ) }
    dend_9 { pt3dadd( 283.369, 675.418, 29.12, 0.2288 ) }
    dend_9 { pt3dadd( 283.369, 676.218, 29.12, 0.2288 ) }
    dend_9 { pt3dadd( 283.369, 676.562, 29.12, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 299.842, 544.331, 24.0923, 0.9152 ) }
    dend_7 { pt3dadd( 299.159, 545.571, 23.6751, 0.5592 ) }
    dend_7 { pt3dadd( 299.099, 546.544, 22.0192, 0.4576 ) }
    dend_7 { pt3dadd( 299.449, 547.04, 22.0074, 0.3814 ) }
    dend_7 { pt3dadd( 299.943, 547.985, 22.6929, 0.3814 ) }
    dend_7 { pt3dadd( 299.902, 548.987, 21.9355, 0.3814 ) }
    dend_7 { pt3dadd( 299.68, 550.039, 21.7364, 0.3304 ) }
    dend_7 { pt3dadd( 300.112, 551.057, 21.2279, 0.305 ) }
    dend_7 { pt3dadd( 299.905, 552.138, 20.6413, 0.3304 ) }
    dend_7 { pt3dadd( 299.956, 553.245, 20.1284, 0.4068 ) }
    dend_7 { pt3dadd( 300.394, 554.224, 19.2242, 0.4576 ) }
    dend_7 { pt3dadd( 301.118, 554.853, 17.7909, 0.4576 ) }
    dend_7 { pt3dadd( 301.898, 555.596, 18.1927, 0.4576 ) }
    dend_7 { pt3dadd( 302.229, 556.62, 17.355, 0.4576 ) }
    dend_7 { pt3dadd( 302.897, 557.42, 16.6208, 0.4576 ) }
    dend_7 { pt3dadd( 303.915, 557.859, 17.0666, 0.4576 ) }
    dend_7 { pt3dadd( 304.974, 558.044, 16.1778, 0.4576 ) }
    dend_7 { pt3dadd( 308.754, 558.029, 15.8096, 0.4322 ) }
    dend_7 { pt3dadd( 310.501, 558.374, 15.8096, 0.4576 ) }
    dend_7 { pt3dadd( 311.339, 557.559, 15.8096, 0.5084 ) }
    dend_7 { pt3dadd( 312.185, 556.909, 15.8096, 0.5338 ) }
    dend_7 { pt3dadd( 313.41, 556.136, 15.8096, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 55/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 299.842, 544.331, 24.0923, 0.9152 ) }
    dend_4 { pt3dadd( 301.219, 545.3, 24.2122, 0.8136 ) }
    dend_4 { pt3dadd( 302.245, 545.697, 24.8178, 0.7118 ) }
    dend_4 { pt3dadd( 303.318, 546.015, 24.8508, 0.7372 ) }
    dend_4 { pt3dadd( 304.083, 546.627, 23.5416, 0.788 ) }
    dend_4 { pt3dadd( 304.766, 547.501, 22.9642, 0.8136 ) }
    dend_4 { pt3dadd( 305.327, 548.484, 22.9589, 0.788 ) }
    dend_4 { pt3dadd( 305.607, 549.583, 22.9524, 0.7372 ) }
    dend_4 { pt3dadd( 306.157, 550.582, 22.9208, 0.6864 ) }
    // Section: apic_39, id: apic_39, parent: apic_37 (entry count 64/100)
    apic_39 { pt3dclear() }
    apic_39 { pt3dadd( 361.92, 580.25, 19.9338, 0.2288 ) }
    apic_39 { pt3dadd( 364.822, 580.756, 19.9338, 0.2288 ) }
    // Section: apic_38, id: apic_38, parent: apic_37 (entry count 66/100)
    apic_38 { pt3dclear() }
    apic_38 { pt3dadd( 361.92, 580.25, 19.9338, 0.2288 ) }
    apic_38 { pt3dadd( 363.196, 577.736, 19.9338, 0.305 ) }
    apic_38 { pt3dadd( 367.94, 577.013, 18.559, 0.356 ) }
    apic_38 { pt3dadd( 371.258, 576.924, 18.559, 0.356 ) }
    apic_38 { pt3dadd( 373.432, 577.528, 18.559, 0.2288 ) }
    // Section: apic_35, id: apic_35, parent: apic_31 (entry count 71/100)
    apic_35 { pt3dclear() }
    apic_35 { pt3dadd( 291.6, 553.348, 37.5194, 0.2288 ) }
    apic_35 { pt3dadd( 289.287, 553.828, 33.6812, 0.3304 ) }
    apic_35 { pt3dadd( 287.643, 554.461, 33.6812, 0.3814 ) }
    apic_35 { pt3dadd( 286.215, 554.024, 33.6812, 0.4322 ) }
    apic_35 { pt3dadd( 282.012, 553.972, 29.5571, 0.4322 ) }
    apic_35 { pt3dadd( 279.784, 554.786, 29.5571, 0.4068 ) }
    apic_35 { pt3dadd( 276.287, 556.247, 28.1823, 0.4068 ) }
    apic_35 { pt3dadd( 273.541, 559.101, 28.1823, 0.4322 ) }
    apic_35 { pt3dadd( 272.024, 561.713, 26.1201, 0.4576 ) }
    apic_35 { pt3dadd( 267.426, 565.284, 22.6834, 0.4576 ) }
    // Section: apic_32, id: apic_32, parent: apic_31 (entry count 81/100)
    apic_32 { pt3dclear() }
    apic_32 { pt3dadd( 291.6, 553.348, 37.5194, 0.2288 ) }
    apic_32 { pt3dadd( 291.66, 554.49, 37.5172, 0.4576 ) }
    apic_32 { pt3dadd( 291.964, 555.576, 37.5021, 0.483 ) }
    apic_32 { pt3dadd( 292.639, 556.497, 37.4329, 0.5084 ) }
    apic_32 { pt3dadd( 293.013, 557.535, 36.9821, 0.5084 ) }
    apic_32 { pt3dadd( 293.238, 558.619, 37.1902, 0.5592 ) }
    apic_32 { pt3dadd( 293.88, 559.55, 37.52, 0.5848 ) }
    apic_32 { pt3dadd( 294.273, 560.592, 37.5208, 0.6102 ) }
    apic_32 { pt3dadd( 294.137, 561.715, 37.5259, 0.5848 ) }
    apic_32 { pt3dadd( 294.73, 562.688, 37.5519, 0.5592 ) }
    apic_32 { pt3dadd( 294.98, 563.72, 37.7168, 0.5592 ) }
    apic_32 { pt3dadd( 294.46, 564.67, 38.386, 0.6102 ) }
    apic_32 { pt3dadd( 294.302, 565.758, 37.7518, 0.6102 ) }
    apic_32 { pt3dadd( 294.03, 566.795, 38.2813, 0.5338 ) }
    apic_32 { pt3dadd( 294.224, 567.733, 39.4929, 0.4322 ) }
    apic_32 { pt3dadd( 294.088, 569.194, 39.8675, 0.5338 ) }
    apic_32 { pt3dadd( 294.043, 570.314, 39.8675, 0.6864 ) }
    // Section: apic_24, id: apic_24, parent: apic_8 (entry count 98/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 288.675, 510.549, 31.8816, 1.144 ) }
    apic_24 { pt3dadd( 289.179, 508.831, 30.6583, 0.7118 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_24 { pt3dadd( 288.931, 507.8, 29.7766, 0.6102 ) }
    apic_24 { pt3dadd( 289.302, 506.797, 29.0839, 0.5338 ) }
    apic_24 { pt3dadd( 289.774, 505.931, 27.8656, 0.5084 ) }
    apic_24 { pt3dadd( 289.884, 504.826, 28.3909, 0.5338 ) }
    apic_24 { pt3dadd( 290.404, 503.887, 27.8258, 0.5592 ) }
    apic_24 { pt3dadd( 291.23, 503.119, 27.4039, 0.6102 ) }
    apic_24 { pt3dadd( 292.158, 502.463, 27.2507, 0.5848 ) }
    apic_24 { pt3dadd( 292.998, 501.779, 26.4667, 0.483 ) }
    apic_24 { pt3dadd( 293.874, 501.05, 26.3152, 0.4322 ) }
    apic_24 { pt3dadd( 294.949, 500.847, 26.2836, 0.483 ) }
    apic_24 { pt3dadd( 295.512, 501.731, 26.0534, 0.661 ) }
    apic_24 { pt3dadd( 294.993, 502.409, 24.4286, 0.7372 ) }
    apic_24 { pt3dadd( 294.756, 503.295, 22.9919, 0.6356 ) }
    apic_24 { pt3dadd( 294.411, 504.354, 22.6926, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 14/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 288.675, 510.549, 31.8816, 1.144 ) }
    apic_9 { pt3dadd( 289.782, 509.231, 31.418, 1.0932 ) }
    apic_9 { pt3dadd( 290.625, 508.791, 29.9415, 1.0678 ) }
    apic_9 { pt3dadd( 291.622, 508.261, 29.6937, 1.0932 ) }
    apic_9 { pt3dadd( 292.668, 507.808, 29.766, 1.1186 ) }
    apic_9 { pt3dadd( 293.753, 507.547, 30.2599, 1.1186 ) }
    apic_9 { pt3dadd( 294.705, 506.978, 30.7616, 1.0678 ) }
    apic_9 { pt3dadd( 295.641, 506.324, 30.7426, 1.0168 ) }
    apic_9 { pt3dadd( 296.426, 505.499, 30.5525, 0.9914 ) }
    apic_9 { pt3dadd( 296.969, 504.544, 29.8284, 0.9914 ) }
    apic_9 { pt3dadd( 297.419, 503.501, 29.68, 0.9914 ) }
    apic_9 { pt3dadd( 297.602, 502.374, 29.6803, 0.9914 ) }
    apic_9 { pt3dadd( 297.868, 501.273, 29.6814, 0.966 ) }
    apic_9 { pt3dadd( 298.095, 500.153, 29.6909, 0.9152 ) }
    apic_9 { pt3dadd( 298.403, 499.059, 29.7444, 0.8644 ) }
    apic_9 { pt3dadd( 298.438, 497.937, 30.1512, 0.8644 ) }
    apic_9 { pt3dadd( 298.259, 496.875, 31.0108, 0.8898 ) }
    apic_9 { pt3dadd( 298.137, 495.813, 31.9323, 0.9406 ) }
    apic_9 { pt3dadd( 298.518, 494.787, 32.7037, 0.9406 ) }
    apic_9 { pt3dadd( 298.922, 493.734, 33.04, 0.966 ) }
    apic_9 { pt3dadd( 299.384, 492.692, 33.0403, 0.966 ) }
    apic_9 { pt3dadd( 299.81, 491.637, 33.0417, 0.966 ) }
    apic_9 { pt3dadd( 300.442, 490.691, 33.0478, 0.9152 ) }
    apic_9 { pt3dadd( 301.259, 489.892, 33.0722, 0.8136 ) }
    apic_9 { pt3dadd( 302.196, 489.249, 33.2013, 0.788 ) }
    apic_9 { pt3dadd( 303.135, 488.674, 33.8453, 0.788 ) }
    apic_9 { pt3dadd( 303.877, 487.835, 34.16, 0.8644 ) }
    apic_9 { pt3dadd( 304.327, 486.788, 34.16, 0.8898 ) }
    apic_9 { pt3dadd( 304.934, 485.823, 34.16, 0.9406 ) }
    apic_9 { pt3dadd( 305.473, 484.816, 34.16, 0.966 ) }
    apic_9 { pt3dadd( 306.126, 483.878, 34.16, 1.0168 ) }
    apic_9 { pt3dadd( 306.68, 482.878, 34.16, 1.0168 ) }
    apic_9 { pt3dadd( 307.254, 481.892, 34.16, 0.9914 ) }
    apic_9 { pt3dadd( 307.717, 480.856, 34.1611, 0.8898 ) }
    apic_9 { pt3dadd( 308.134, 479.794, 34.1659, 0.8136 ) }
    apic_9 { pt3dadd( 308.674, 478.798, 34.1942, 0.8136 ) }
    apic_9 { pt3dadd( 309.489, 477.999, 34.3039, 0.9152 ) }
    apic_9 { pt3dadd( 310.399, 477.368, 34.867, 0.966 ) }
    apic_9 { pt3dadd( 311.364, 476.776, 35.1165, 0.8898 ) }
    apic_9 { pt3dadd( 312.436, 476.59, 34.4109, 0.7118 ) }
    apic_9 { pt3dadd( 313.578, 475.735, 34.16, 0.6356 ) }
    apic_9 { pt3dadd( 314.463, 475.009, 34.1606, 0.7118 ) }
    apic_9 { pt3dadd( 315.273, 474.203, 34.1625, 0.7626 ) }
    apic_9 { pt3dadd( 316.084, 473.395, 34.1698, 0.7626 ) }
    apic_9 { pt3dadd( 316.902, 472.596, 34.1998, 0.788 ) }
    apic_9 { pt3dadd( 317.749, 471.832, 34.3398, 0.839 ) }
    apic_9 { pt3dadd( 318.547, 471.097, 35.0804, 0.8898 ) }
    apic_9 { pt3dadd( 319.463, 470.43, 35.3402, 0.8898 ) }
    apic_9 { pt3dadd( 320.341, 469.701, 35.5365, 0.8136 ) }
    apic_9 { pt3dadd( 321.262, 469.106, 36.2883, 0.6864 ) }
    apic_9 { pt3dadd( 322.179, 468.444, 36.671, 0.4576 ) }
    // Section: apic_7, id: apic_7, parent: apic_3 (entry count 65/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 259.116, 508.412, 28.56, 0.9152 ) }
    apic_7 { pt3dadd( 257.784, 509.013, 28.6208, 0.6356 ) }
    apic_7 { pt3dadd( 256.662, 509.046, 29.0116, 0.4576 ) }
    apic_7 { pt3dadd( 255.591, 508.852, 29.7598, 0.356 ) }
    apic_7 { pt3dadd( 254.508, 508.694, 30.4181, 0.305 ) }
    apic_7 { pt3dadd( 253.446, 509.044, 30.8003, 0.356 ) }
    apic_7 { pt3dadd( 252.352, 509.03, 30.8025, 0.4322 ) }
    apic_7 { pt3dadd( 251.305, 508.581, 30.8143, 0.5338 ) }
    apic_7 { pt3dadd( 250.266, 508.119, 30.8882, 0.5848 ) }
    apic_7 { pt3dadd( 249.234, 507.733, 31.3384, 0.6356 ) }
    apic_7 { pt3dadd( 248.122, 507.739, 31.9248, 0.661 ) }
    apic_7 { pt3dadd( 247.008, 507.944, 31.9544, 0.6356 ) }
    apic_7 { pt3dadd( 245.966, 508.407, 32.104, 0.5592 ) }
    apic_7 { pt3dadd( 244.891, 508.683, 32.6206, 0.483 ) }
    apic_7 { pt3dadd( 243.821, 508.961, 32.0116, 0.5338 ) }
    apic_7 { pt3dadd( 242.688, 509.057, 32.0519, 0.6102 ) }
    apic_7 { pt3dadd( 241.6, 508.92, 32.7149, 0.6864 ) }
    apic_7 { pt3dadd( 240.508, 508.649, 33.0352, 0.6356 ) }
    apic_7 { pt3dadd( 239.366, 508.682, 33.0078, 0.6102 ) }
    apic_7 { pt3dadd( 238.261, 508.938, 32.8395, 0.5338 ) }
    apic_7 { pt3dadd( 237.193, 508.804, 32.1577, 0.5338 ) }
    apic_7 { pt3dadd( 236.092, 508.632, 32.4044, 0.5084 ) }
    apic_7 { pt3dadd( 234.967, 508.681, 32.592, 0.5592 ) }
    apic_7 { pt3dadd( 233.904, 508.98, 33.1948, 0.5848 ) }
    apic_7 { pt3dadd( 232.889, 509.397, 33.8677, 0.6102 ) }
    apic_7 { pt3dadd( 232.048, 510.148, 34.2014, 0.5848 ) }
    apic_7 { pt3dadd( 231.416, 511.092, 34.3781, 0.5592 ) }
    apic_7 { pt3dadd( 230.858, 512.008, 35.2061, 0.483 ) }
    apic_7 { pt3dadd( 230.651, 513.128, 35.3438, 0.4322 ) }
    apic_7 { pt3dadd( 230.136, 514.09, 35.7314, 0.356 ) }
    apic_7 { pt3dadd( 229.314, 514.802, 36.5308, 0.3304 ) }
    apic_7 { pt3dadd( 228.886, 515.787, 37.3117, 0.3304 ) }
    apic_7 { pt3dadd( 228.615, 516.881, 37.5847, 0.3304 ) }
    apic_7 { pt3dadd( 228.457, 517.988, 37.9999, 0.3304 ) }
    apic_7 { pt3dadd( 228.457, 519.097, 38.6263, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_7 { pt3dadd( 228.457, 520.241, 38.64, 0.3304 ) }
    apic_7 { pt3dadd( 228.454, 521.385, 38.6403, 0.3814 ) }
    apic_7 { pt3dadd( 228.44, 522.529, 38.642, 0.4068 ) }
    apic_7 { pt3dadd( 228.349, 523.668, 38.6523, 0.4068 ) }
    apic_7 { pt3dadd( 228.015, 524.757, 38.7218, 0.4068 ) }
    apic_7 { pt3dadd( 227.869, 525.864, 39.2151, 0.483 ) }
    apic_7 { pt3dadd( 227.413, 526.878, 39.7499, 0.5592 ) }
    apic_7 { pt3dadd( 226.725, 527.79, 39.7729, 0.6102 ) }
    apic_7 { pt3dadd( 226.043, 528.702, 39.8205, 0.6102 ) }
    apic_7 { pt3dadd( 225.311, 529.558, 40.1416, 0.6356 ) }
    apic_7 { pt3dadd( 224.433, 530.188, 40.9097, 0.6356 ) }
    apic_7 { pt3dadd( 223.901, 531.169, 41.0561, 0.5848 ) }
    apic_7 { pt3dadd( 223.781, 532.26, 41.7861, 0.483 ) }
    apic_7 { pt3dadd( 223.423, 533.333, 42.0, 0.3814 ) }
    apic_7 { pt3dadd( 218.387, 541.169, 43.9919, 0.3304 ) }
    apic_7 { pt3dadd( 216.334, 543.445, 43.9919, 0.4068 ) }
    apic_7 { pt3dadd( 211.55, 550.942, 46.0538, 0.5338 ) }
    apic_7 { pt3dadd( 210.493, 553.057, 47.4286, 0.5848 ) }
    apic_7 { pt3dadd( 208.52, 554.101, 47.4286, 0.3814 ) }
    apic_7 { pt3dadd( 207.993, 554.583, 47.4286, 0.2796 ) }
    apic_7 { pt3dadd( 206.915, 556.33, 47.4286, 0.2288 ) }
    apic_7 { pt3dadd( 206.171, 558.248, 48.8034, 0.2288 ) }
    apic_7 { pt3dadd( 206.872, 559.422, 50.1782, 0.2288 ) }
    apic_7 { pt3dadd( 207.885, 559.449, 50.1782, 0.2288 ) }
    apic_7 { pt3dadd( 207.276, 561.361, 52.9276, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 25/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 259.116, 508.412, 28.56, 0.9152 ) }
    apic_4 { pt3dadd( 258.247, 507.769, 28.5594, 0.661 ) }
    apic_4 { pt3dadd( 257.402, 506.998, 28.5575, 0.5848 ) }
    apic_4 { pt3dadd( 256.439, 506.405, 28.548, 0.5338 ) }
    apic_4 { pt3dadd( 255.304, 506.303, 28.4729, 0.5592 ) }
    apic_4 { pt3dadd( 254.204, 506.148, 27.9577, 0.6102 ) }
    apic_4 { pt3dadd( 253.288, 505.52, 27.4708, 0.661 ) }
    apic_4 { pt3dadd( 252.488, 504.705, 27.44, 0.6864 ) }
    apic_4 { pt3dadd( 251.736, 503.843, 27.4397, 0.7118 ) }
    apic_4 { pt3dadd( 251.307, 502.803, 27.438, 0.7372 ) }
    apic_4 { pt3dadd( 251.053, 501.695, 27.4263, 0.788 ) }
    apic_4 { pt3dadd( 251.074, 500.577, 27.3451, 0.788 ) }
    apic_4 { pt3dadd( 251.209, 499.482, 26.8106, 0.788 ) }
    apic_4 { pt3dadd( 250.807, 498.431, 26.7257, 0.7372 ) }
    apic_4 { pt3dadd( 250.311, 497.417, 26.4048, 0.7118 ) }
    apic_4 { pt3dadd( 249.871, 496.375, 26.4415, 0.6864 ) }
    apic_4 { pt3dadd( 249.52, 495.328, 27.0528, 0.6864 ) }
    apic_4 { pt3dadd( 249.26, 494.238, 27.4355, 0.6356 ) }
    apic_4 { pt3dadd( 248.746, 493.218, 27.4151, 0.5848 ) }
    apic_4 { pt3dadd( 248.231, 492.207, 27.3039, 0.5084 ) }
    apic_4 { pt3dadd( 248.302, 491.126, 26.6134, 0.483 ) }
    apic_4 { pt3dadd( 248.652, 490.062, 26.0834, 0.4068 ) }
    apic_4 { pt3dadd( 249.088, 489.093, 25.2314, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 48/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 338.321, 526.799, 16.497, 0.2288 ) }
    dend_16 { pt3dadd( 338.123, 526.783, 17.1844, 0.305 ) }
    dend_16 { pt3dadd( 340.414, 525.752, 15.8096, 0.2796 ) }
    dend_16 { pt3dadd( 341.165, 524.184, 15.8096, 0.2796 ) }
    dend_16 { pt3dadd( 342.311, 522.801, 15.8096, 0.305 ) }
    dend_16 { pt3dadd( 343.487, 522.101, 15.8096, 0.4576 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 54/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 338.321, 526.799, 16.497, 0.2288 ) }
    dend_15 { pt3dadd( 338.871, 528.07, 17.8716, 0.305 ) }
    dend_15 { pt3dadd( 337.715, 529.709, 17.8716, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 306.157, 550.582, 22.9208, 0.6864 ) }
    dend_6 { pt3dadd( 308.62, 551.037, 22.6834, 0.4068 ) }
    dend_6 { pt3dadd( 312.02, 551.67, 23.3708, 0.3304 ) }
    dend_6 { pt3dadd( 321.223, 554.228, 24.7453, 0.305 ) }
    dend_6 { pt3dadd( 328.766, 555.745, 26.1201, 0.2796 ) }
    dend_6 { pt3dadd( 334.881, 557.48, 25.4327, 0.2542 ) }
    dend_6 { pt3dadd( 337.827, 558.529, 24.7453, 0.2288 ) }
    dend_6 { pt3dadd( 341.215, 558.304, 23.3708, 0.2542 ) }
    dend_6 { pt3dadd( 345.48, 557.626, 25.4327, 0.2796 ) }
    dend_6 { pt3dadd( 350.857, 557.554, 26.1201, 0.305 ) }
    dend_6 { pt3dadd( 354.499, 558.52, 26.1201, 0.3304 ) }
    dend_6 { pt3dadd( 360.788, 558.969, 26.8075, 0.356 ) }
    dend_6 { pt3dadd( 362.76, 559.08, 26.8075, 0.3304 ) }
    dend_6 { pt3dadd( 364.651, 558.79, 26.8075, 0.2796 ) }
    dend_6 { pt3dadd( 366.242, 559.816, 27.4949, 0.2288 ) }
    dend_6 { pt3dadd( 366.808, 561.171, 27.4949, 0.2288 ) }
    dend_6 { pt3dadd( 368.636, 564.567, 27.4949, 0.2542 ) }
    dend_6 { pt3dadd( 370.727, 566.547, 27.4949, 0.3304 ) }
    dend_6 { pt3dadd( 373.214, 568.867, 27.4949, 0.4576 ) }
    dend_6 { pt3dadd( 377.874, 570.691, 26.1201, 0.5592 ) }
    dend_6 { pt3dadd( 381.535, 575.347, 25.4327, 0.5592 ) }
    dend_6 { pt3dadd( 390.094, 581.774, 25.4327, 0.4576 ) }
    dend_6 { pt3dadd( 395.548, 586.655, 25.4327, 0.3304 ) }
    dend_6 { pt3dadd( 399.636, 593.211, 25.4327, 0.2542 ) }
    dend_6 { pt3dadd( 402.535, 596.023, 26.1201, 0.2542 ) }
    dend_6 { pt3dadd( 405.27, 599.163, 26.1201, 0.2796 ) }
    dend_6 { pt3dadd( 412.043, 602.671, 26.1201, 0.305 ) }
    dend_6 { pt3dadd( 416.462, 605.792, 26.1201, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 85/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 306.157, 550.582, 22.9208, 0.6864 ) }
    dend_5 { pt3dadd( 306.848, 551.493, 22.7858, 0.5338 ) }
    dend_5 { pt3dadd( 307.19, 552.538, 22.2726, 0.5084 ) }
    dend_5 { pt3dadd( 307.425, 553.57, 23.1708, 0.5848 ) }
    dend_5 { pt3dadd( 307.679, 554.614, 23.977, 0.6102 ) }
    dend_5 { pt3dadd( 308.031, 555.667, 23.7544, 0.7118 ) }
    dend_5 { pt3dadd( 308.764, 556.469, 22.9888, 0.7118 ) }
    dend_5 { pt3dadd( 309.608, 557.193, 22.8718, 0.6864 ) }
    dend_5 { pt3dadd( 310.588, 557.668, 22.2096, 0.483 ) }
    dend_5 { pt3dadd( 311.584, 558.146, 22.5061, 0.3814 ) }
    dend_5 { pt3dadd( 312.425, 558.876, 22.916, 0.3814 ) }
    dend_5 { pt3dadd( 313.457, 559.343, 22.6929, 0.483 ) }
    dend_5 { pt3dadd( 318.228, 562.669, 22.6834, 0.483 ) }
    dend_5 { pt3dadd( 319.589, 563.522, 22.6834, 0.483 ) }
    dend_5 { pt3dadd( 320.964, 563.532, 22.6834, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_5 { pt3dadd( 324.659, 564.63, 24.0582, 0.5338 ) }
    dend_5 { pt3dadd( 330.497, 566.83, 22.6834, 0.5084 ) }
    dend_5 { pt3dadd( 341.411, 573.694, 24.7453, 0.4576 ) }
    dend_5 { pt3dadd( 347.937, 577.031, 22.6834, 0.4322 ) }
    dend_5 { pt3dadd( 352.535, 577.206, 21.3086, 0.4576 ) }
    // Section: apic_41, id: apic_41, parent: apic_39 (entry count 5/100)
    apic_41 { pt3dclear() }
    apic_41 { pt3dadd( 364.822, 580.756, 19.9338, 0.2288 ) }
    apic_41 { pt3dadd( 368.826, 580.478, 19.9338, 0.4322 ) }
    apic_41 { pt3dadd( 374.862, 580.356, 18.559, 0.5084 ) }
    apic_41 { pt3dadd( 379.004, 580.191, 17.8716, 0.483 ) }
    apic_41 { pt3dadd( 383.735, 579.192, 17.1844, 0.4322 ) }
    apic_41 { pt3dadd( 387.719, 578.386, 17.8716, 0.3814 ) }
    apic_41 { pt3dadd( 388.928, 577.226, 17.1844, 0.3814 ) }
    apic_41 { pt3dadd( 392.857, 574.593, 16.497, 0.356 ) }
    apic_41 { pt3dadd( 397.158, 574.593, 16.497, 0.305 ) }
    apic_41 { pt3dadd( 398.906, 575.143, 16.497, 0.2288 ) }
    // Section: apic_40, id: apic_40, parent: apic_39 (entry count 15/100)
    apic_40 { pt3dclear() }
    apic_40 { pt3dadd( 364.822, 580.756, 19.9338, 0.2288 ) }
    apic_40 { pt3dadd( 366.907, 582.365, 19.9338, 0.356 ) }
    apic_40 { pt3dadd( 369.549, 583.955, 19.9338, 0.356 ) }
    apic_40 { pt3dadd( 370.643, 583.622, 19.9338, 0.2288 ) }
    // Section: apic_34, id: apic_34, parent: apic_32 (entry count 19/100)
    apic_34 { pt3dclear() }
    apic_34 { pt3dadd( 294.043, 570.314, 39.8675, 0.6864 ) }
    apic_34 { pt3dadd( 293.302, 575.934, 37.8056, 0.3814 ) }
    apic_34 { pt3dadd( 291.916, 578.618, 40.5549, 0.3304 ) }
    apic_34 { pt3dadd( 291.855, 579.508, 40.5549, 0.3814 ) }
    apic_34 { pt3dadd( 292.374, 580.644, 40.5549, 0.483 ) }
    apic_34 { pt3dadd( 292.655, 582.601, 40.5549, 0.483 ) }
    apic_34 { pt3dadd( 291.582, 588.434, 42.6171, 0.3814 ) }
    apic_34 { pt3dadd( 291.042, 592.478, 42.6171, 0.2796 ) }
    apic_34 { pt3dadd( 287.658, 599.695, 43.9919, 0.2288 ) }
    apic_34 { pt3dadd( 286.764, 602.554, 43.9919, 0.2288 ) }
    apic_34 { pt3dadd( 287.067, 604.599, 44.6793, 0.2288 ) }
    apic_34 { pt3dadd( 287.578, 606.358, 44.6793, 0.2288 ) }
    apic_34 { pt3dadd( 288.613, 607.194, 44.6793, 0.2288 ) }
    apic_34 { pt3dadd( 289.99, 607.821, 44.6793, 0.2288 ) }
    // Section: apic_33, id: apic_33, parent: apic_32 (entry count 33/100)
    apic_33 { pt3dclear() }
    apic_33 { pt3dadd( 294.043, 570.314, 39.8675, 0.6864 ) }
    apic_33 { pt3dadd( 294.795, 570.877, 39.8675, 0.661 ) }
    apic_33 { pt3dadd( 295.579, 571.944, 39.8675, 0.5592 ) }
    apic_33 { pt3dadd( 296.565, 578.515, 43.9919, 0.5338 ) }
    apic_33 { pt3dadd( 298.081, 579.912, 44.6793, 0.4576 ) }
    apic_33 { pt3dadd( 300.126, 584.214, 47.4286, 0.305 ) }
    apic_33 { pt3dadd( 301.862, 589.081, 50.1782, 0.2542 ) }
    apic_33 { pt3dadd( 304.015, 593.743, 52.2404, 0.2288 ) }
    apic_33 { pt3dadd( 305.277, 595.435, 52.2404, 0.2288 ) }
    apic_33 { pt3dadd( 305.358, 596.794, 52.2404, 0.2288 ) }
    apic_33 { pt3dadd( 304.567, 597.476, 52.2404, 0.2288 ) }
    apic_33 { pt3dadd( 304.049, 598.544, 52.2404, 0.2288 ) }
    apic_33 { pt3dadd( 305.024, 602.791, 54.9898, 0.2288 ) }
    apic_33 { pt3dadd( 305.009, 606.814, 54.9898, 0.2288 ) }
    apic_33 { pt3dadd( 306.17, 608.551, 58.4268, 0.2288 ) }
    // Section: apic_26, id: apic_26, parent: apic_24 (entry count 48/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 294.411, 504.354, 22.6926, 0.2288 ) }
    apic_26 { pt3dadd( 293.899, 505.423, 22.9337, 0.305 ) }
    apic_26 { pt3dadd( 293.937, 506.563, 22.757, 0.483 ) }
    apic_26 { pt3dadd( 294.167, 507.626, 22.0254, 0.7118 ) }
    apic_26 { pt3dadd( 294.427, 508.732, 21.9198, 0.839 ) }
    apic_26 { pt3dadd( 294.747, 509.798, 22.3681, 0.8136 ) }
    apic_26 { pt3dadd( 295.023, 510.877, 22.9418, 0.788 ) }
    apic_26 { pt3dadd( 295.618, 511.581, 22.8875, 0.7626 ) }
    apic_26 { pt3dadd( 296.596, 512.151, 22.5918, 0.8136 ) }
    apic_26 { pt3dadd( 297.535, 512.539, 21.3511, 0.7626 ) }
    apic_26 { pt3dadd( 298.197, 513.398, 21.6107, 0.788 ) }
    apic_26 { pt3dadd( 298.571, 514.455, 22.0875, 0.788 ) }
    apic_26 { pt3dadd( 298.466, 515.537, 21.8518, 0.839 ) }
    apic_26 { pt3dadd( 297.574, 519.519, 21.3086, 0.6102 ) }
    apic_26 { pt3dadd( 298.322, 522.529, 19.9338, 0.4576 ) }
    apic_26 { pt3dadd( 298.28, 527.124, 18.559, 0.4068 ) }
    apic_26 { pt3dadd( 298.298, 527.942, 18.559, 0.4576 ) }
    apic_26 { pt3dadd( 298.974, 529.822, 18.559, 0.4576 ) }
    apic_26 { pt3dadd( 300.807, 532.048, 17.8716, 0.4068 ) }
    apic_26 { pt3dadd( 302.548, 534.655, 17.8716, 0.3814 ) }
    apic_26 { pt3dadd( 304.855, 536.465, 17.8716, 0.483 ) }
    apic_26 { pt3dadd( 304.783, 538.364, 17.1844, 0.9152 ) }
    // Section: apic_25, id: apic_25, parent: apic_24 (entry count 70/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 294.411, 504.354, 22.6926, 0.2288 ) }
    apic_25 { pt3dadd( 293.974, 504.734, 22.0802, 0.483 ) }
    apic_25 { pt3dadd( 292.93, 504.934, 21.9167, 0.5338 ) }
    apic_25 { pt3dadd( 291.893, 504.52, 22.1726, 0.5084 ) }
    apic_25 { pt3dadd( 290.788, 504.403, 21.5345, 0.5084 ) }
    apic_25 { pt3dadd( 290.225, 503.914, 20.6058, 0.483 ) }
    apic_25 { pt3dadd( 289.902, 502.918, 19.5745, 0.5084 ) }
    apic_25 { pt3dadd( 289.127, 502.226, 18.6469, 0.5338 ) }
    apic_25 { pt3dadd( 288.174, 501.652, 19.0775, 0.6356 ) }
    apic_25 { pt3dadd( 287.678, 500.732, 19.5566, 0.661 ) }
    apic_25 { pt3dadd( 287.91, 499.628, 19.2559, 0.6102 ) }
    apic_25 { pt3dadd( 287.817, 498.509, 19.5028, 0.4576 ) }
    apic_25 { pt3dadd( 287.111, 497.699, 19.5944, 0.3814 ) }
    apic_25 { pt3dadd( 285.99, 497.489, 19.5569, 0.4068 ) }
    apic_25 { pt3dadd( 285.225, 496.733, 19.3292, 0.5338 ) }
    apic_25 { pt3dadd( 285.01, 495.665, 18.5469, 0.6356 ) }
    apic_25 { pt3dadd( 284.61, 494.599, 18.368, 0.661 ) }
    apic_25 { pt3dadd( 284.618, 493.511, 17.7545, 0.5848 ) }
    apic_25 { pt3dadd( 284.313, 492.447, 17.3603, 0.5084 ) }
    apic_25 { pt3dadd( 283.815, 491.421, 17.3617, 0.483 ) }
    apic_25 { pt3dadd( 283.328, 490.391, 17.3695, 0.483 ) }
    apic_25 { pt3dadd( 282.662, 489.517, 17.435, 0.5338 ) }
    apic_25 { pt3dadd( 281.575, 489.286, 17.9141, 0.5338 ) }
    apic_25 { pt3dadd( 280.575, 488.984, 17.1842, 0.5848 ) }
    apic_25 { pt3dadd( 279.564, 489.228, 16.1638, 0.5338 ) }
    apic_25 { pt3dadd( 278.793, 489.861, 15.12, 0.4576 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 96/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 322.179, 468.444, 36.671, 0.4576 ) }
    apic_11 { pt3dadd( 323.152, 467.303, 36.4, 0.5592 ) }
    apic_11 { pt3dadd( 324.104, 466.683, 36.4, 0.6102 ) }
    apic_11 { pt3dadd( 325.173, 466.304, 36.3997, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_11 { pt3dadd( 326.305, 466.147, 36.3978, 0.6864 ) }
    apic_11 { pt3dadd( 327.295, 465.587, 36.3843, 0.661 ) }
    apic_11 { pt3dadd( 327.835, 464.614, 36.297, 0.6356 ) }
    apic_11 { pt3dadd( 328.176, 463.558, 35.7518, 0.7118 ) }
    apic_11 { pt3dadd( 328.32, 462.446, 35.7434, 0.7626 ) }
    apic_11 { pt3dadd( 328.726, 461.427, 36.4045, 0.7626 ) }
    apic_11 { pt3dadd( 329.34, 460.469, 36.6352, 0.7118 ) }
    apic_11 { pt3dadd( 329.849, 459.496, 37.3562, 0.661 ) }
    apic_11 { pt3dadd( 330.061, 458.383, 37.52, 0.6356 ) }
    apic_11 { pt3dadd( 330.154, 457.243, 37.52, 0.6102 ) }
    apic_11 { pt3dadd( 330.523, 456.164, 37.52, 0.6356 ) }
    apic_11 { pt3dadd( 330.857, 455.074, 37.52, 0.6864 ) }
    apic_11 { pt3dadd( 331.708, 453.645, 37.5206, 0.6864 ) }
    apic_11 { pt3dadd( 332.398, 452.735, 37.5222, 0.6356 ) }
    apic_11 { pt3dadd( 333.175, 451.896, 37.5295, 0.5338 ) }
    apic_11 { pt3dadd( 333.87, 450.995, 37.5628, 0.5084 ) }
    apic_11 { pt3dadd( 334.306, 449.948, 37.7544, 0.5338 ) }
    apic_11 { pt3dadd( 334.375, 448.86, 38.528, 0.5848 ) }
    apic_11 { pt3dadd( 334.284, 447.723, 38.64, 0.6102 ) }
    apic_11 { pt3dadd( 333.891, 446.655, 38.64, 0.5848 ) }
    apic_11 { pt3dadd( 333.54, 445.579, 38.6408, 0.5848 ) }
    apic_11 { pt3dadd( 333.649, 444.447, 38.6453, 0.6356 ) }
    apic_11 { pt3dadd( 334.257, 443.49, 38.6666, 0.7372 ) }
    apic_11 { pt3dadd( 334.905, 442.556, 38.7702, 0.7626 ) }
    apic_11 { pt3dadd( 335.377, 441.56, 39.3733, 0.7118 ) }
    apic_11 { pt3dadd( 335.73, 440.498, 39.76, 0.6356 ) }
    apic_11 { pt3dadd( 335.748, 439.357, 39.76, 0.6102 ) }
    apic_11 { pt3dadd( 335.639, 438.222, 39.7608, 0.6102 ) }
    apic_11 { pt3dadd( 335.662, 437.122, 39.7642, 0.5848 ) }
    apic_11 { pt3dadd( 336.273, 436.164, 39.7832, 0.5848 ) }
    apic_11 { pt3dadd( 337.196, 435.51, 39.8868, 0.5848 ) }
    apic_11 { pt3dadd( 338.204, 435.038, 40.4172, 0.661 ) }
    apic_11 { pt3dadd( 338.974, 434.268, 39.888, 0.7118 ) }
    apic_11 { pt3dadd( 339.681, 433.372, 39.76, 0.788 ) }
    apic_11 { pt3dadd( 340.095, 432.312, 39.76, 0.788 ) }
    apic_11 { pt3dadd( 340.625, 431.299, 39.76, 0.788 ) }
    apic_11 { pt3dadd( 341.275, 430.36, 39.76, 0.7372 ) }
    apic_11 { pt3dadd( 341.928, 429.423, 39.76, 0.7118 ) }
    apic_11 { pt3dadd( 342.567, 428.483, 39.76, 0.6864 ) }
    apic_11 { pt3dadd( 342.948, 427.409, 39.7606, 0.661 ) }
    apic_11 { pt3dadd( 343.301, 426.323, 39.7639, 0.6356 ) }
    apic_11 { pt3dadd( 343.774, 425.283, 39.783, 0.6356 ) }
    apic_11 { pt3dadd( 344.14, 424.206, 39.8983, 0.7118 ) }
    apic_11 { pt3dadd( 344.597, 423.2, 40.5275, 0.7626 ) }
    apic_11 { pt3dadd( 345.106, 422.193, 40.88, 0.7626 ) }
    apic_11 { pt3dadd( 345.608, 421.169, 40.88, 0.7118 ) }
    apic_11 { pt3dadd( 346.005, 420.1, 40.88, 0.7118 ) }
    apic_11 { pt3dadd( 346.61, 419.132, 40.88, 0.7626 ) }
    apic_11 { pt3dadd( 347.118, 418.109, 40.88, 0.788 ) }
    apic_11 { pt3dadd( 347.492, 417.031, 40.88, 0.8136 ) }
    apic_11 { pt3dadd( 347.997, 416.008, 40.88, 0.8136 ) }
    apic_11 { pt3dadd( 348.5, 414.985, 40.88, 0.839 ) }
    apic_11 { pt3dadd( 348.968, 413.945, 40.8803, 0.8136 ) }
    apic_11 { pt3dadd( 349.366, 412.878, 40.8825, 0.7626 ) }
    apic_11 { pt3dadd( 349.95, 411.898, 40.8923, 0.6864 ) }
    apic_11 { pt3dadd( 350.714, 411.048, 40.9324, 0.6356 ) }
    apic_11 { pt3dadd( 351.475, 410.197, 41.097, 0.6102 ) }
    apic_11 { pt3dadd( 352.029, 409.249, 41.7824, 0.661 ) }
    apic_11 { pt3dadd( 352.425, 408.186, 42.0, 0.7372 ) }
    apic_11 { pt3dadd( 353.062, 407.239, 42.0, 0.8644 ) }
    apic_11 { pt3dadd( 353.732, 406.316, 42.0, 0.9406 ) }
    apic_11 { pt3dadd( 354.596, 405.573, 42.0, 0.966 ) }
    apic_11 { pt3dadd( 355.646, 405.127, 42.0, 0.8898 ) }
    apic_11 { pt3dadd( 356.591, 404.486, 42.0, 0.788 ) }
    apic_11 { pt3dadd( 357.498, 403.794, 42.0, 0.7118 ) }
    apic_11 { pt3dadd( 358.293, 402.972, 42.0, 0.661 ) }
    apic_11 { pt3dadd( 358.955, 402.051, 42.0, 0.6356 ) }
    apic_11 { pt3dadd( 359.129, 400.928, 42.0, 0.6102 ) }
    apic_11 { pt3dadd( 359.297, 399.805, 42.0003, 0.6356 ) }
    apic_11 { pt3dadd( 359.714, 398.74, 42.0022, 0.661 ) }
    apic_11 { pt3dadd( 360.35, 397.801, 42.0109, 0.7118 ) }
    apic_11 { pt3dadd( 361.159, 396.993, 42.0448, 0.7626 ) }
    apic_11 { pt3dadd( 362.0, 396.221, 42.1837, 0.8136 ) }
    apic_11 { pt3dadd( 362.923, 395.619, 42.8162, 0.8136 ) }
    apic_11 { pt3dadd( 363.903, 395.056, 43.1208, 0.7626 ) }
    apic_11 { pt3dadd( 364.801, 394.348, 43.1242, 0.7372 ) }
    apic_11 { pt3dadd( 365.769, 393.749, 43.1424, 0.6864 ) }
    apic_11 { pt3dadd( 366.789, 393.242, 43.246, 0.6864 ) }
    apic_11 { pt3dadd( 367.806, 392.82, 43.8802, 0.6102 ) }
    apic_11 { pt3dadd( 368.541, 391.993, 44.24, 0.6102 ) }
    apic_11 { pt3dadd( 368.611, 390.867, 44.2389, 0.5592 ) }
    apic_11 { pt3dadd( 368.303, 389.771, 44.2327, 0.5592 ) }
    apic_11 { pt3dadd( 368.321, 388.63, 44.1902, 0.5084 ) }
    apic_11 { pt3dadd( 368.673, 387.567, 43.9421, 0.483 ) }
    apic_11 { pt3dadd( 369.323, 386.683, 43.3017, 0.4322 ) }
    apic_11 { pt3dadd( 370.314, 386.222, 43.6671, 0.483 ) }
    apic_11 { pt3dadd( 371.398, 386.114, 44.4965, 0.5592 ) }
    apic_11 { pt3dadd( 372.293, 385.568, 45.278, 0.7372 ) }
    apic_11 { pt3dadd( 372.767, 384.534, 45.36, 0.8136 ) }
    apic_11 { pt3dadd( 372.987, 383.415, 45.3603, 0.8644 ) }
    apic_11 { pt3dadd( 373.412, 382.353, 45.362, 0.839 ) }
    apic_11 { pt3dadd( 374.016, 381.395, 45.3701, 0.8644 ) }
    apic_11 { pt3dadd( 374.818, 380.58, 45.4006, 0.8898 ) }
    apic_11 { pt3dadd( 375.65, 379.797, 45.5241, 0.8644 ) }
    apic_11 { pt3dadd( 376.538, 379.141, 46.1255, 0.8136 ) }
    apic_11 { pt3dadd( 377.383, 378.392, 46.513, 0.7626 ) }
    apic_11 { pt3dadd( 378.037, 377.463, 46.657, 0.8136 ) }
    apic_11 { pt3dadd( 378.682, 376.595, 47.4429, 0.839 ) }
    apic_11 { pt3dadd( 379.314, 375.65, 47.6003, 0.8644 ) }
    apic_11 { pt3dadd( 380.087, 374.808, 47.6008, 0.839 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_11 { pt3dadd( 380.843, 373.95, 47.6036, 0.839 ) }
    apic_11 { pt3dadd( 381.398, 372.952, 47.619, 0.8136 ) }
    apic_11 { pt3dadd( 381.804, 371.888, 47.742, 0.7626 ) }
    apic_11 { pt3dadd( 382.309, 371.13, 47.6, 0.7372 ) }
    apic_11 { pt3dadd( 383.046, 370.257, 47.6008, 0.7626 ) }
    apic_11 { pt3dadd( 383.822, 369.417, 47.6034, 0.839 ) }
    apic_11 { pt3dadd( 384.448, 368.467, 47.6179, 0.9152 ) }
    apic_11 { pt3dadd( 384.993, 367.465, 47.6994, 0.966 ) }
    apic_11 { pt3dadd( 385.585, 366.515, 48.1216, 0.9914 ) }
    apic_11 { pt3dadd( 386.025, 365.497, 48.7175, 0.9406 ) }
    apic_11 { pt3dadd( 386.633, 364.534, 48.8502, 0.8898 ) }
    apic_11 { pt3dadd( 387.171, 363.565, 49.4362, 0.839 ) }
    apic_11 { pt3dadd( 387.871, 362.679, 49.8316, 0.8644 ) }
    apic_11 { pt3dadd( 388.624, 361.819, 49.84, 0.8898 ) }
    apic_11 { pt3dadd( 389.174, 360.819, 49.84, 0.8898 ) }
    apic_11 { pt3dadd( 389.546, 359.739, 49.84, 0.839 ) }
    apic_11 { pt3dadd( 390.102, 358.745, 49.84, 0.788 ) }
    apic_11 { pt3dadd( 390.846, 357.878, 49.84, 0.7118 ) }
    apic_11 { pt3dadd( 391.616, 357.031, 49.8408, 0.6864 ) }
    apic_11 { pt3dadd( 392.202, 356.057, 49.8442, 0.6356 ) }
    apic_11 { pt3dadd( 392.496, 354.964, 49.866, 0.6864 ) }
    apic_11 { pt3dadd( 392.506, 353.822, 50.0192, 0.6864 ) }
    apic_11 { pt3dadd( 392.509, 352.726, 50.7587, 0.7372 ) }
    apic_11 { pt3dadd( 392.519, 351.591, 51.0339, 0.6864 ) }
    apic_11 { pt3dadd( 392.588, 350.475, 51.5004, 0.6864 ) }
    apic_11 { pt3dadd( 392.97, 349.447, 52.061, 0.6356 ) }
    apic_11 { pt3dadd( 393.738, 348.604, 52.08, 0.7118 ) }
    apic_11 { pt3dadd( 394.55, 347.797, 52.08, 0.7372 ) }
    apic_11 { pt3dadd( 395.365, 346.993, 52.08, 0.8136 ) }
    apic_11 { pt3dadd( 396.199, 346.212, 52.08, 0.788 ) }
    apic_11 { pt3dadd( 397.134, 345.562, 52.08, 0.788 ) }
    apic_11 { pt3dadd( 398.08, 344.929, 52.08, 0.7626 ) }
    apic_11 { pt3dadd( 398.558, 343.92, 52.0814, 0.788 ) }
    apic_11 { pt3dadd( 398.879, 342.827, 52.0884, 0.8136 ) }
    apic_11 { pt3dadd( 398.915, 341.685, 52.1349, 0.8136 ) }
    apic_11 { pt3dadd( 398.927, 340.555, 52.4762, 0.8136 ) }
    apic_11 { pt3dadd( 398.997, 339.456, 53.1605, 0.8136 ) }
    apic_11 { pt3dadd( 399.406, 338.408, 53.2, 0.8898 ) }
    apic_11 { pt3dadd( 400.175, 337.561, 53.2003, 0.8898 ) }
    apic_11 { pt3dadd( 400.936, 336.708, 53.2011, 0.9152 ) }
    apic_11 { pt3dadd( 401.514, 335.725, 53.2056, 0.8898 ) }
    apic_11 { pt3dadd( 401.998, 334.692, 53.2322, 0.966 ) }
    apic_11 { pt3dadd( 402.362, 333.613, 53.3988, 1.0424 ) }
    apic_11 { pt3dadd( 402.847, 332.626, 54.087, 1.1186 ) }
    apic_11 { pt3dadd( 403.408, 331.641, 54.3211, 1.1186 ) }
    apic_11 { pt3dadd( 404.056, 330.701, 54.3256, 1.0678 ) }
    apic_11 { pt3dadd( 404.759, 329.8, 54.346, 0.966 ) }
    apic_11 { pt3dadd( 405.538, 328.963, 54.4306, 0.8898 ) }
    apic_11 { pt3dadd( 406.201, 328.067, 54.8514, 0.8136 ) }
    apic_11 { pt3dadd( 406.621, 327.041, 55.4428, 0.7626 ) }
    apic_11 { pt3dadd( 406.7, 325.906, 55.6184, 0.7118 ) }
    apic_11 { pt3dadd( 406.743, 324.81, 56.35, 0.7118 ) }
    apic_11 { pt3dadd( 407.023, 323.72, 56.5642, 0.7626 ) }
    apic_11 { pt3dadd( 407.357, 322.629, 56.5894, 0.7626 ) }
    apic_11 { pt3dadd( 407.669, 321.534, 56.7518, 0.7118 ) }
    apic_11 { pt3dadd( 408.034, 320.621, 57.9659, 0.661 ) }
    apic_11 { pt3dadd( 408.453, 319.619, 58.515, 0.7118 ) }
    apic_11 { pt3dadd( 408.989, 318.662, 57.7889, 0.7626 ) }
    apic_11 { pt3dadd( 409.539, 317.668, 57.68, 0.7626 ) }
    apic_11 { pt3dadd( 410.13, 316.703, 57.68, 0.7118 ) }
    apic_11 { pt3dadd( 410.957, 315.914, 57.68, 0.7372 ) }
    apic_11 { pt3dadd( 411.905, 315.283, 57.68, 0.7626 ) }
    apic_11 { pt3dadd( 412.854, 314.656, 57.68, 0.788 ) }
    apic_11 { pt3dadd( 413.415, 313.693, 57.68, 0.7626 ) }
    apic_11 { pt3dadd( 413.285, 312.568, 57.6811, 0.8136 ) }
    apic_11 { pt3dadd( 413.972, 311.716, 57.6859, 0.8898 ) }
    apic_11 { pt3dadd( 414.856, 310.991, 57.7072, 0.9406 ) }
    apic_11 { pt3dadd( 415.642, 310.16, 57.7968, 0.9152 ) }
    apic_11 { pt3dadd( 416.292, 309.259, 58.2529, 0.839 ) }
    apic_11 { pt3dadd( 416.712, 308.229, 58.7964, 0.8136 ) }
    apic_11 { pt3dadd( 416.848, 307.094, 58.842, 0.839 ) }
    apic_11 { pt3dadd( 417.201, 306.017, 59.0388, 0.8898 ) }
    apic_11 { pt3dadd( 417.582, 304.994, 59.7948, 0.9152 ) }
    apic_11 { pt3dadd( 418.086, 303.973, 59.9278, 0.9152 ) }
    apic_11 { pt3dadd( 418.606, 302.959, 59.9634, 0.9152 ) }
    apic_11 { pt3dadd( 419.207, 301.993, 60.132, 0.9406 ) }
    apic_11 { pt3dadd( 419.752, 301.036, 60.8174, 0.9406 ) }
    apic_11 { pt3dadd( 420.165, 299.978, 61.0459, 0.9152 ) }
    apic_11 { pt3dadd( 420.839, 299.06, 61.0686, 0.788 ) }
    apic_11 { pt3dadd( 421.61, 298.216, 61.1646, 0.661 ) }
    apic_11 { pt3dadd( 422.175, 297.274, 61.698, 0.5848 ) }
    apic_11 { pt3dadd( 422.237, 296.158, 62.162, 0.5848 ) }
    apic_11 { pt3dadd( 422.166, 295.016, 62.1718, 0.661 ) }
    apic_11 { pt3dadd( 421.929, 293.907, 62.239, 0.661 ) }
    apic_11 { pt3dadd( 422.306, 292.872, 62.6623, 0.661 ) }
    apic_11 { pt3dadd( 422.985, 291.996, 63.2251, 0.5848 ) }
    apic_11 { pt3dadd( 423.91, 291.346, 63.2811, 0.5848 ) }
    apic_11 { pt3dadd( 425.02, 291.086, 63.2867, 0.6102 ) }
    apic_11 { pt3dadd( 426.007, 290.518, 63.3198, 0.6102 ) }
    apic_11 { pt3dadd( 426.703, 289.638, 63.4872, 0.5592 ) }
    apic_11 { pt3dadd( 426.83, 288.557, 64.2242, 0.483 ) }
    apic_11 { pt3dadd( 426.854, 287.417, 64.2093, 0.5084 ) }
    apic_11 { pt3dadd( 426.99, 286.331, 63.4749, 0.5848 ) }
    apic_11 { pt3dadd( 427.584, 285.368, 63.3391, 0.6356 ) }
    apic_11 { pt3dadd( 428.206, 284.433, 63.6868, 0.6102 ) }
    apic_11 { pt3dadd( 428.981, 283.657, 64.3614, 0.5338 ) }
    apic_11 { pt3dadd( 429.866, 282.939, 64.4003, 0.5592 ) }
    apic_11 { pt3dadd( 430.703, 282.169, 64.4017, 0.6102 ) }
    apic_11 { pt3dadd( 431.094, 281.104, 64.4112, 0.7118 ) }
    apic_11 { pt3dadd( 431.39, 280.004, 64.4714, 0.6864 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_11 { pt3dadd( 431.452, 278.878, 64.8491, 0.6864 ) }
    apic_11 { pt3dadd( 431.665, 277.909, 66.192, 0.661 ) }
    apic_11 { pt3dadd( 432.347, 277.022, 66.6579, 0.661 ) }
    apic_11 { pt3dadd( 433.116, 276.175, 66.7181, 0.6356 ) }
    apic_11 { pt3dadd( 433.645, 275.201, 67.0751, 0.6102 ) }
    apic_11 { pt3dadd( 433.691, 274.068, 66.7198, 0.6102 ) }
    apic_11 { pt3dadd( 433.702, 272.927, 66.8217, 0.6102 ) }
    apic_11 { pt3dadd( 433.765, 271.854, 67.6959, 0.6356 ) }
    apic_11 { pt3dadd( 434.164, 270.911, 68.7302, 0.661 ) }
    apic_11 { pt3dadd( 435.242, 270.597, 68.9004, 0.6356 ) }
    apic_11 { pt3dadd( 436.236, 270.126, 69.0315, 0.5338 ) }
    apic_11 { pt3dadd( 436.436, 269.06, 69.7432, 0.483 ) }
    apic_11 { pt3dadd( 436.436, 267.925, 70.0, 0.5084 ) }
    apic_11 { pt3dadd( 436.436, 266.781, 70.0, 0.5848 ) }
    apic_11 { pt3dadd( 436.436, 265.637, 70.0, 0.5338 ) }
    apic_11 { pt3dadd( 436.55, 265.294, 71.12, 0.4322 ) }
    apic_11 { pt3dadd( 436.868, 264.925, 71.12, 0.3304 ) }
    apic_11 { pt3dadd( 437.237, 264.378, 71.12, 0.356 ) }
    apic_11 { pt3dadd( 437.237, 264.035, 71.12, 0.305 ) }
    apic_11 { pt3dadd( 437.389, 263.73, 71.12, 0.2542 ) }
    apic_11 { pt3dadd( 437.923, 263.006, 71.12, 0.483 ) }
    apic_11 { pt3dadd( 438.114, 262.408, 71.1511, 0.5338 ) }
    apic_11 { pt3dadd( 438.266, 261.061, 71.4, 0.5338 ) }
    apic_11 { pt3dadd( 438.483, 260.476, 71.4, 0.5338 ) }
    apic_11 { pt3dadd( 438.622, 259.815, 71.4, 0.5338 ) }
    apic_11 { pt3dadd( 438.889, 259.281, 71.4, 0.5338 ) }
    apic_11 { pt3dadd( 439.283, 258.875, 71.4, 0.5338 ) }
    apic_11 { pt3dadd( 439.83, 257.82, 71.4, 0.5338 ) }
    apic_11 { pt3dadd( 440.173, 257.362, 71.4, 0.5084 ) }
    apic_11 { pt3dadd( 440.517, 256.917, 71.4311, 0.4068 ) }
    apic_11 { pt3dadd( 440.872, 256.574, 71.68, 0.3814 ) }
    apic_11 { pt3dadd( 441.203, 256.104, 71.68, 0.3814 ) }
    apic_11 { pt3dadd( 441.609, 255.709, 71.68, 0.483 ) }
    apic_11 { pt3dadd( 442.36, 255.087, 72.24, 0.7118 ) }
    apic_11 { pt3dadd( 442.83, 254.756, 72.8, 0.5338 ) }
    apic_11 { pt3dadd( 443.173, 254.527, 72.8, 0.4576 ) }
    apic_11 { pt3dadd( 443.72, 254.273, 72.8, 0.5848 ) }
    apic_11 { pt3dadd( 444.571, 253.968, 73.8889, 0.7626 ) }
    apic_11 { pt3dadd( 445.283, 253.891, 73.92, 0.7626 ) }
    apic_11 { pt3dadd( 445.969, 253.777, 73.92, 0.7626 ) }
    apic_11 { pt3dadd( 446.618, 253.625, 73.92, 0.7118 ) }
    apic_11 { pt3dadd( 447.418, 253.625, 73.92, 0.5848 ) }
    apic_11 { pt3dadd( 448.219, 253.625, 73.92, 0.4068 ) }
    apic_11 { pt3dadd( 448.715, 253.548, 74.2, 0.2542 ) }
    apic_11 { pt3dadd( 448.982, 253.129, 74.2, 0.4068 ) }
    apic_11 { pt3dadd( 449.211, 252.774, 75.0089, 0.5084 ) }
    apic_11 { pt3dadd( 449.351, 252.202, 75.2268, 0.4576 ) }
    apic_11 { pt3dadd( 449.592, 251.566, 75.32, 0.6356 ) }
    apic_11 { pt3dadd( 449.783, 250.956, 75.32, 0.6102 ) }
    apic_11 { pt3dadd( 449.948, 250.32, 75.32, 0.5338 ) }
    apic_11 { pt3dadd( 450.291, 249.977, 75.32, 0.4068 ) }
    apic_11 { pt3dadd( 450.393, 249.392, 75.32, 0.2796 ) }
    apic_11 { pt3dadd( 450.393, 249.163, 75.32, 0.2288 ) }
    apic_11 { pt3dadd( 450.393, 248.362, 75.32, 0.2288 ) }
    apic_11 { pt3dadd( 450.393, 247.562, 75.32, 0.2796 ) }
    apic_11 { pt3dadd( 450.393, 246.761, 75.32, 0.3304 ) }
    apic_11 { pt3dadd( 450.393, 245.973, 75.3511, 0.3814 ) }
    apic_11 { pt3dadd( 450.393, 245.375, 75.8489, 0.3304 ) }
    apic_11 { pt3dadd( 450.393, 244.587, 75.88, 0.305 ) }
    apic_11 { pt3dadd( 450.393, 243.786, 75.88, 0.356 ) }
    apic_11 { pt3dadd( 450.393, 242.986, 75.88, 0.5338 ) }
    apic_11 { pt3dadd( 450.393, 242.299, 75.88, 0.7372 ) }
    apic_11 { pt3dadd( 451.206, 241.397, 75.88, 0.5848 ) }
    apic_11 { pt3dadd( 451.651, 240.926, 76.16, 0.6864 ) }
    apic_11 { pt3dadd( 451.842, 240.088, 77.0, 0.4576 ) }
    apic_11 { pt3dadd( 452.071, 239.618, 77.2489, 0.4068 ) }
    apic_11 { pt3dadd( 452.325, 239.083, 77.28, 0.4576 ) }
    apic_11 { pt3dadd( 452.579, 238.537, 77.28, 0.5084 ) }
    apic_11 { pt3dadd( 452.974, 238.13, 77.28, 0.5338 ) }
    apic_11 { pt3dadd( 453.673, 237.355, 77.5911, 0.5592 ) }
    apic_11 { pt3dadd( 453.939, 236.922, 78.4, 0.5848 ) }
    apic_11 { pt3dadd( 454.638, 236.922, 78.9289, 0.9406 ) }
    apic_11 { pt3dadd( 455.401, 236.554, 80.08, 0.661 ) }
    apic_11 { pt3dadd( 455.998, 236.007, 80.36, 0.5848 ) }
    apic_11 { pt3dadd( 456.558, 235.766, 80.36, 0.5848 ) }
    apic_11 { pt3dadd( 457.003, 235.512, 80.6089, 0.5592 ) }
    apic_11 { pt3dadd( 457.46, 235.181, 80.64, 0.5338 ) }
    apic_11 { pt3dadd( 457.854, 234.774, 80.64, 0.5338 ) }
    apic_11 { pt3dadd( 458.147, 234.38, 80.92, 0.5338 ) }
    apic_11 { pt3dadd( 458.592, 234.062, 81.0132, 0.5338 ) }
    apic_11 { pt3dadd( 459.087, 233.834, 81.2, 0.5592 ) }
    apic_11 { pt3dadd( 459.736, 233.681, 81.2, 0.6102 ) }
    apic_11 { pt3dadd( 460.485, 233.058, 81.76, 0.7626 ) }
    apic_11 { pt3dadd( 461.109, 232.309, 82.32, 0.5848 ) }
    apic_11 { pt3dadd( 461.35, 231.749, 82.32, 0.483 ) }
    apic_11 { pt3dadd( 461.668, 231.266, 82.32, 0.5084 ) }
    apic_11 { pt3dadd( 461.718, 230.516, 82.32, 0.5592 ) }
    apic_11 { pt3dadd( 461.833, 229.83, 82.32, 0.6102 ) }
    apic_11 { pt3dadd( 461.833, 229.029, 82.32, 0.5848 ) }
    apic_11 { pt3dadd( 461.833, 228.228, 82.32, 0.5338 ) }
    apic_11 { pt3dadd( 461.922, 227.77, 82.6622, 0.5338 ) }
    apic_11 { pt3dadd( 462.519, 227.656, 83.16, 0.7626 ) }
    apic_11 { pt3dadd( 463.778, 227.656, 84.0, 0.6102 ) }
    apic_11 { pt3dadd( 464.578, 227.656, 84.0, 0.5338 ) }
    apic_11 { pt3dadd( 465.15, 227.542, 84.0, 0.483 ) }
    apic_11 { pt3dadd( 465.43, 227.134, 84.0, 0.305 ) }
    apic_11 { pt3dadd( 465.837, 226.512, 84.0, 0.5338 ) }
    apic_11 { pt3dadd( 466.066, 225.94, 84.0, 0.7118 ) }
    apic_11 { pt3dadd( 466.18, 225.254, 84.0, 0.7372 ) }
    apic_11 { pt3dadd( 466.612, 224.199, 84.28, 0.5338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_11 { pt3dadd( 466.943, 223.843, 84.56, 0.5084 ) }
    apic_11 { pt3dadd( 467.235, 223.334, 84.56, 0.4576 ) }
    apic_11 { pt3dadd( 467.565, 222.864, 84.56, 0.4322 ) }
    apic_11 { pt3dadd( 467.896, 222.431, 84.6532, 0.3814 ) }
    apic_11 { pt3dadd( 468.214, 222.14, 84.84, 0.483 ) }
    apic_11 { pt3dadd( 468.43, 221.441, 84.84, 0.7118 ) }
    apic_11 { pt3dadd( 469.053, 220.461, 84.84, 0.6356 ) }
    apic_11 { pt3dadd( 469.612, 219.419, 84.84, 0.5338 ) }
    apic_11 { pt3dadd( 469.726, 218.733, 84.84, 0.5592 ) }
    apic_11 { pt3dadd( 469.917, 218.123, 84.84, 0.6102 ) }
    apic_11 { pt3dadd( 469.955, 217.36, 84.84, 0.7118 ) }
    apic_11 { pt3dadd( 470.413, 216.33, 85.12, 0.9914 ) }
    apic_11 { pt3dadd( 470.908, 215.224, 85.12, 0.8898 ) }
    apic_11 { pt3dadd( 471.366, 214.08, 85.12, 0.5592 ) }
    apic_11 { pt3dadd( 471.595, 213.623, 85.12, 0.5084 ) }
    apic_11 { pt3dadd( 472.091, 213.089, 85.68, 0.7118 ) }
    apic_11 { pt3dadd( 472.434, 212.276, 85.9289, 0.7372 ) }
    apic_11 { pt3dadd( 472.51, 211.513, 86.3957, 0.6356 ) }
    apic_11 { pt3dadd( 473.031, 210.941, 87.08, 0.7118 ) }
    apic_11 { pt3dadd( 474.009, 210.318, 87.08, 0.7626 ) }
    apic_11 { pt3dadd( 475.23, 209.937, 87.08, 0.3814 ) }
    apic_11 { pt3dadd( 475.484, 209.847, 87.08, 0.2542 ) }
    apic_11 { pt3dadd( 475.663, 209.683, 87.08, 0.2542 ) }
    apic_11 { pt3dadd( 475.675, 209.009, 87.08, 0.4576 ) }
    apic_11 { pt3dadd( 475.675, 208.17, 87.5468, 0.7372 ) }
    apic_11 { pt3dadd( 475.827, 207.216, 88.76, 0.9914 ) }
    apic_11 { pt3dadd( 475.942, 206.06, 89.2889, 1.1948 ) }
    apic_11 { pt3dadd( 476.655, 205.298, 90.72, 1.1186 ) }
    apic_11 { pt3dadd( 477.518, 204.903, 90.72, 0.9406 ) }
    apic_11 { pt3dadd( 478.446, 204.801, 90.72, 0.5338 ) }
    apic_11 { pt3dadd( 478.98, 204.42, 90.72, 0.2542 ) }
    apic_11 { pt3dadd( 479.222, 204.318, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 479.413, 204.166, 90.72, 0.2542 ) }
    apic_11 { pt3dadd( 479.565, 203.746, 90.72, 0.4322 ) }
    apic_11 { pt3dadd( 479.565, 202.946, 90.72, 0.5338 ) }
    apic_11 { pt3dadd( 479.565, 202.145, 90.72, 0.5338 ) }
    apic_11 { pt3dadd( 479.565, 201.344, 90.72, 0.483 ) }
    apic_11 { pt3dadd( 479.692, 200.785, 90.72, 0.2796 ) }
    apic_11 { pt3dadd( 479.908, 200.658, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 480.099, 200.505, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 480.264, 200.441, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 480.874, 200.25, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 481.331, 199.907, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 481.751, 199.526, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 482.005, 199.437, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 482.298, 199.387, 90.72, 0.2288 ) }
    apic_11 { pt3dadd( 482.552, 199.297, 90.72, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 47/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 322.179, 468.444, 36.671, 0.4576 ) }
    apic_10 { pt3dadd( 322.88, 468.973, 37.5052, 0.4576 ) }
    apic_10 { pt3dadd( 323.48, 469.941, 37.5486, 0.5084 ) }
    apic_10 { pt3dadd( 324.007, 470.954, 37.6841, 0.5338 ) }
    apic_10 { pt3dadd( 324.419, 471.973, 38.3541, 0.5084 ) }
    apic_10 { pt3dadd( 325.121, 472.86, 38.6487, 0.5338 ) }
    apic_10 { pt3dadd( 325.84, 473.745, 38.6781, 0.5592 ) }
    apic_10 { pt3dadd( 326.339, 474.769, 38.8478, 0.6356 ) }
    apic_10 { pt3dadd( 326.729, 475.793, 39.5685, 0.6102 ) }
    apic_10 { pt3dadd( 327.237, 476.804, 39.7614, 0.5338 ) }
    apic_10 { pt3dadd( 327.258, 477.944, 39.7695, 0.4322 ) }
    apic_10 { pt3dadd( 327.026, 479.053, 39.8177, 0.4322 ) }
    apic_10 { pt3dadd( 326.841, 480.161, 40.1682, 0.5084 ) }
    apic_10 { pt3dadd( 326.84, 481.264, 40.8556, 0.5848 ) }
    apic_10 { pt3dadd( 326.834, 482.406, 40.9578, 0.5848 ) }
    apic_10 { pt3dadd( 326.794, 483.523, 41.4425, 0.5848 ) }
    apic_10 { pt3dadd( 326.541, 484.597, 42.0042, 0.6102 ) }
    apic_10 { pt3dadd( 326.343, 485.722, 42.0305, 0.6864 ) }
    apic_10 { pt3dadd( 326.097, 486.825, 42.1792, 0.7118 ) }
    apic_10 { pt3dadd( 325.926, 487.802, 42.0, 0.6356 ) }
    apic_10 { pt3dadd( 325.62, 487.839, 43.12, 0.483 ) }
    apic_10 { pt3dadd( 325.175, 488.081, 43.12, 0.2542 ) }
    apic_10 { pt3dadd( 325.112, 488.361, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.782, 489.06, 43.12, 0.356 ) }
    apic_10 { pt3dadd( 324.782, 489.861, 43.12, 0.4576 ) }
    apic_10 { pt3dadd( 324.667, 490.547, 43.12, 0.483 ) }
    apic_10 { pt3dadd( 324.667, 491.348, 43.12, 0.4576 ) }
    apic_10 { pt3dadd( 324.553, 492.034, 43.12, 0.4068 ) }
    apic_10 { pt3dadd( 324.553, 492.835, 43.12, 0.356 ) }
    apic_10 { pt3dadd( 324.553, 493.636, 43.12, 0.3814 ) }
    apic_10 { pt3dadd( 324.553, 494.437, 43.12, 0.4068 ) }
    apic_10 { pt3dadd( 324.553, 495.238, 43.12, 0.483 ) }
    apic_10 { pt3dadd( 324.553, 496.038, 43.12, 0.4576 ) }
    apic_10 { pt3dadd( 324.553, 496.839, 43.12, 0.4068 ) }
    apic_10 { pt3dadd( 324.553, 497.64, 43.12, 0.305 ) }
    apic_10 { pt3dadd( 324.553, 498.441, 43.12, 0.2542 ) }
    apic_10 { pt3dadd( 324.667, 499.127, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.667, 499.928, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.819, 500.577, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 501.301, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 502.102, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 502.902, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 503.703, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 504.504, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 505.305, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 506.106, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 324.896, 506.906, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.048, 507.555, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.125, 508.279, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.125, 509.08, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.125, 509.881, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.125, 510.682, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.125, 511.482, 43.12, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_10 { pt3dadd( 325.201, 512.207, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.239, 512.97, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.239, 513.77, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.239, 514.571, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.252, 515.359, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.455, 515.957, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.582, 516.63, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.697, 517.317, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.811, 518.003, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 325.951, 518.664, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 326.142, 519.274, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 326.383, 519.834, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 326.612, 519.948, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 326.803, 520.1, 43.12, 0.2288 ) }
    apic_10 { pt3dadd( 326.841, 520.406, 43.12, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 15/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 249.088, 489.093, 25.2314, 0.2288 ) }
    apic_6 { pt3dadd( 249.041, 488.167, 26.2791, 0.5084 ) }
    apic_6 { pt3dadd( 248.961, 487.065, 25.783, 0.5848 ) }
    apic_6 { pt3dadd( 248.623, 486.03, 25.1636, 0.6102 ) }
    apic_6 { pt3dadd( 248.588, 484.89, 24.9771, 0.6102 ) }
    apic_6 { pt3dadd( 248.571, 483.786, 24.3874, 0.5592 ) }
    apic_6 { pt3dadd( 248.464, 482.662, 24.2393, 0.4576 ) }
    apic_6 { pt3dadd( 248.016, 481.619, 24.0495, 0.356 ) }
    apic_6 { pt3dadd( 247.44, 480.639, 23.8983, 0.305 ) }
    apic_6 { pt3dadd( 247.724, 479.692, 23.0611, 0.3304 ) }
    apic_6 { pt3dadd( 248.41, 478.786, 22.9222, 0.356 ) }
    apic_6 { pt3dadd( 248.591, 477.672, 22.7181, 0.4322 ) }
    apic_6 { pt3dadd( 248.591, 476.59, 21.84, 0.483 ) }
    apic_6 { pt3dadd( 248.463, 476.028, 21.7106, 0.5084 ) }
    apic_6 { pt3dadd( 248.159, 475.421, 21.0, 0.483 ) }
    apic_6 { pt3dadd( 247.828, 474.951, 21.0, 0.4576 ) }
    apic_6 { pt3dadd( 247.599, 474.379, 21.0, 0.4576 ) }
    apic_6 { pt3dadd( 247.193, 473.984, 21.0, 0.4322 ) }
    apic_6 { pt3dadd( 246.684, 473.693, 21.0, 0.3814 ) }
    apic_6 { pt3dadd( 246.278, 473.412, 21.0, 0.3304 ) }
    apic_6 { pt3dadd( 246.062, 472.942, 21.0, 0.3814 ) }
    apic_6 { pt3dadd( 245.731, 472.243, 21.0, 0.3304 ) }
    apic_6 { pt3dadd( 245.477, 471.696, 21.0, 0.2796 ) }
    apic_6 { pt3dadd( 245.045, 471.328, 21.0, 0.2288 ) }
    apic_6 { pt3dadd( 244.739, 471.29, 21.0, 0.2288 ) }
    apic_6 { pt3dadd( 244.473, 471.214, 21.0, 0.2288 ) }
    apic_6 { pt3dadd( 244.257, 471.087, 21.0, 0.2288 ) }
    apic_6 { pt3dadd( 244.244, 470.756, 21.0, 0.2288 ) }
    apic_6 { pt3dadd( 244.244, 469.726, 21.0, 0.3814 ) }
    apic_6 { pt3dadd( 244.244, 468.926, 21.0, 0.4068 ) }
    apic_6 { pt3dadd( 244.244, 468.125, 21.0, 0.3814 ) }
    apic_6 { pt3dadd( 244.358, 467.553, 21.0, 0.2542 ) }
    apic_6 { pt3dadd( 244.435, 467.324, 20.9068, 0.2288 ) }
    apic_6 { pt3dadd( 244.676, 466.956, 20.16, 0.2542 ) }
    apic_6 { pt3dadd( 244.93, 466.866, 20.16, 0.2796 ) }
    apic_6 { pt3dadd( 245.388, 466.866, 20.16, 0.2796 ) }
    apic_6 { pt3dadd( 245.719, 466.854, 20.16, 0.2542 ) }
    apic_6 { pt3dadd( 245.96, 466.752, 20.16, 0.2288 ) }
    apic_6 { pt3dadd( 246.074, 466.536, 20.16, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 54/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 249.088, 489.093, 25.2314, 0.2288 ) }
    apic_5 { pt3dadd( 249.389, 488.919, 25.0491, 0.356 ) }
    apic_5 { pt3dadd( 250.328, 488.432, 24.1335, 0.356 ) }
    apic_5 { pt3dadd( 251.219, 488.217, 22.7612, 0.3304 ) }
    apic_5 { pt3dadd( 252.267, 488.074, 21.9467, 0.3304 ) }
    apic_5 { pt3dadd( 253.292, 487.606, 21.7568, 0.356 ) }
    apic_5 { pt3dadd( 254.405, 487.548, 21.2512, 0.356 ) }
    apic_5 { pt3dadd( 255.509, 487.413, 20.7049, 0.305 ) }
    apic_5 { pt3dadd( 256.559, 486.964, 20.6262, 0.305 ) }
    apic_5 { pt3dadd( 257.628, 486.7, 20.1113, 0.3304 ) }
    apic_5 { pt3dadd( 258.726, 486.859, 19.6, 0.3814 ) }
    apic_5 { pt3dadd( 259.702, 487.446, 19.6, 0.356 ) }
    apic_5 { pt3dadd( 260.375, 488.361, 19.5994, 0.3304 ) }
    apic_5 { pt3dadd( 261.095, 489.22, 19.5964, 0.356 ) }
    apic_5 { pt3dadd( 262.184, 489.461, 19.5734, 0.3814 ) }
    apic_5 { pt3dadd( 262.929, 490.3, 19.4396, 0.4576 ) }
    apic_5 { pt3dadd( 263.695, 491.046, 18.6421, 0.4576 ) }
    apic_5 { pt3dadd( 264.801, 491.289, 18.4794, 0.483 ) }
    apic_5 { pt3dadd( 265.922, 491.474, 18.4761, 0.4068 ) }
    apic_5 { pt3dadd( 266.947, 490.992, 18.4576, 0.356 ) }
    apic_5 { pt3dadd( 268.054, 490.954, 18.3198, 0.356 ) }
    apic_5 { pt3dadd( 269.015, 490.882, 17.2267, 0.4576 ) }
    apic_5 { pt3dadd( 270.033, 490.672, 16.2596, 0.5338 ) }
    apic_5 { pt3dadd( 271.125, 490.349, 16.2574, 0.5338 ) }
    apic_5 { pt3dadd( 272.264, 490.273, 16.3747, 0.4576 ) }
    apic_5 { pt3dadd( 272.835, 489.625, 17.2637, 0.4322 ) }
    apic_5 { pt3dadd( 272.778, 488.489, 17.1422, 0.4322 ) }
    apic_5 { pt3dadd( 272.386, 487.573, 17.36, 0.4576 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 82/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 343.487, 522.101, 15.8096, 0.4576 ) }
    dend_18 { pt3dadd( 342.77, 521.854, 15.8096, 0.356 ) }
    dend_18 { pt3dadd( 341.84, 521.204, 15.8096, 0.3304 ) }
    dend_18 { pt3dadd( 341.081, 520.383, 15.8096, 0.2796 ) }
    dend_18 { pt3dadd( 340.468, 518.819, 15.8096, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 87/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 343.487, 522.101, 15.8096, 0.4576 ) }
    dend_17 { pt3dadd( 344.673, 520.673, 15.8096, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 89/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 482.552, 199.297, 90.72, 0.2288 ) }
    apic_13 { pt3dadd( 482.425, 199.151, 95.5447, 1.3728 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 91/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 482.552, 199.297, 90.72, 0.2288 ) }
    apic_12 { pt3dadd( 482.755, 199.158, 90.72, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_13 (entry count 93/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 482.425, 199.151, 95.5447, 1.3728 ) }
    apic_19 { pt3dadd( 481.844, 190.577, 100.356, 0.9406 ) }
    apic_19 { pt3dadd( 481.777, 183.785, 103.793, 0.6356 ) }
    apic_19 { pt3dadd( 482.516, 179.323, 108.605, 0.483 ) }
    apic_19 { pt3dadd( 478.916, 174.589, 112.729, 0.4576 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 98/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 482.425, 199.151, 95.5447, 1.3728 ) }
    apic_14 { pt3dadd( 482.425, 199.056, 98.0, 0.8644 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_14 { pt3dadd( 482.87, 198.471, 98.0, 0.5084 ) }
    apic_14 { pt3dadd( 483.81, 198.039, 98.0, 0.6864 ) }
    apic_14 { pt3dadd( 484.675, 197.302, 98.0, 0.5338 ) }
    apic_14 { pt3dadd( 485.361, 197.188, 98.0, 0.4068 ) }
    apic_14 { pt3dadd( 485.946, 196.972, 98.0, 0.3814 ) }
    apic_14 { pt3dadd( 486.2, 196.882, 98.0, 0.4576 ) }
    apic_14 { pt3dadd( 486.836, 196.489, 98.0, 0.6102 ) }
    apic_14 { pt3dadd( 487.319, 195.942, 98.0, 0.4576 ) }
    apic_14 { pt3dadd( 487.802, 195.624, 98.0, 0.4322 ) }
    apic_14 { pt3dadd( 488.45, 195.472, 98.0, 0.483 ) }
    apic_14 { pt3dadd( 488.946, 194.938, 98.0, 0.661 ) }
    apic_14 { pt3dadd( 489.06, 194.137, 98.0, 0.5848 ) }
    apic_14 { pt3dadd( 489.403, 193.45, 98.0, 0.6102 ) }
    apic_14 { pt3dadd( 489.772, 192.904, 98.0, 0.5084 ) }
    apic_14 { pt3dadd( 490.445, 192.662, 98.84, 0.7372 ) }
    apic_14 { pt3dadd( 491.335, 192.294, 98.84, 0.6864 ) }
    apic_14 { pt3dadd( 492.009, 191.48, 99.12, 0.4576 ) }
    apic_14 { pt3dadd( 492.442, 191.112, 99.12, 0.356 ) }
    apic_14 { pt3dadd( 492.683, 190.59, 99.2132, 0.356 ) }
    apic_14 { pt3dadd( 493.039, 190.222, 99.4, 0.3814 ) }
    apic_14 { pt3dadd( 493.509, 189.891, 99.96, 0.6356 ) }
    apic_14 { pt3dadd( 494.615, 189.777, 100.333, 0.7372 ) }
    apic_14 { pt3dadd( 495.81, 189.675, 101.08, 0.661 ) }
    apic_14 { pt3dadd( 496.534, 189.599, 101.08, 0.5084 ) }
    apic_14 { pt3dadd( 497.132, 189.51, 101.08, 0.3814 ) }
    apic_14 { pt3dadd( 497.411, 189.103, 101.08, 0.3814 ) }
    apic_14 { pt3dadd( 497.767, 188.429, 101.08, 0.356 ) }
    apic_14 { pt3dadd( 498.06, 187.921, 101.08, 0.3304 ) }
    apic_14 { pt3dadd( 498.098, 187.171, 101.111, 0.3304 ) }
    apic_14 { pt3dadd( 498.098, 186.586, 101.64, 0.4068 ) }
    apic_14 { pt3dadd( 498.098, 185.9, 101.64, 0.661 ) }
    apic_14 { pt3dadd( 498.098, 185.442, 102.76, 0.7372 ) }
    apic_14 { pt3dadd( 498.314, 184.743, 103.88, 0.6864 ) }
    apic_14 { pt3dadd( 498.695, 184.095, 103.88, 0.5338 ) }
    apic_14 { pt3dadd( 498.975, 183.574, 103.88, 0.4068 ) }
    apic_14 { pt3dadd( 499.369, 183.281, 103.88, 0.3814 ) }
    apic_14 { pt3dadd( 499.597, 182.938, 104.16, 0.4322 ) }
    apic_14 { pt3dadd( 500.08, 182.391, 104.16, 0.4068 ) }
    apic_14 { pt3dadd( 500.614, 182.125, 104.16, 0.4322 ) }
    apic_14 { pt3dadd( 500.958, 181.667, 104.16, 0.4322 ) }
    apic_14 { pt3dadd( 501.313, 181.222, 104.16, 0.356 ) }
    apic_14 { pt3dadd( 501.835, 181.057, 104.16, 0.2288 ) }
    apic_14 { pt3dadd( 501.962, 180.841, 104.16, 0.2542 ) }
    apic_14 { pt3dadd( 502.114, 180.675, 104.782, 0.4068 ) }
    apic_14 { pt3dadd( 502.445, 180.23, 105.404, 0.483 ) }
    apic_14 { pt3dadd( 502.788, 180.066, 106.4, 0.305 ) }
    apic_14 { pt3dadd( 503.41, 179.875, 107.489, 0.5084 ) }
    apic_14 { pt3dadd( 504.084, 179.837, 107.707, 0.6356 ) }
    apic_14 { pt3dadd( 504.771, 179.837, 107.987, 0.6864 ) }
    apic_14 { pt3dadd( 505.432, 179.837, 108.329, 0.6102 ) }
    apic_14 { pt3dadd( 506.22, 179.837, 108.36, 0.6356 ) }
    apic_14 { pt3dadd( 506.83, 179.417, 108.64, 0.7372 ) }
    apic_14 { pt3dadd( 507.059, 178.922, 109.387, 0.2288 ) }
    // Section: apic_23, id: apic_23, parent: apic_19 (entry count 53/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 478.916, 174.589, 112.729, 0.4576 ) }
    apic_23 { pt3dadd( 473.99, 175.385, 116.853, 0.6356 ) }
    apic_23 { pt3dadd( 472.375, 176.026, 119.603, 0.6356 ) }
    apic_23 { pt3dadd( 471.484, 176.066, 119.603, 0.5338 ) }
    apic_23 { pt3dadd( 470.483, 174.294, 125.789, 0.4576 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 58/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 478.916, 174.589, 112.729, 0.4576 ) }
    apic_20 { pt3dadd( 477.701, 166.781, 118.228, 0.9152 ) }
    // Section: apic_18, id: apic_18, parent: apic_14 (entry count 60/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 507.059, 178.922, 109.387, 0.2288 ) }
    apic_18 { pt3dadd( 506.894, 179.163, 110.32, 0.2288 ) }
    apic_18 { pt3dadd( 507.021, 179.379, 110.32, 0.2288 ) }
    apic_18 { pt3dadd( 507.237, 179.735, 110.32, 0.3304 ) }
    apic_18 { pt3dadd( 507.682, 180.091, 110.32, 0.3814 ) }
    apic_18 { pt3dadd( 508.177, 180.396, 110.32, 0.3304 ) }
    apic_18 { pt3dadd( 508.864, 180.511, 110.32, 0.2796 ) }
    apic_18 { pt3dadd( 509.118, 180.6, 110.32, 0.2542 ) }
    apic_18 { pt3dadd( 509.411, 180.65, 110.32, 0.3304 ) }
    apic_18 { pt3dadd( 509.766, 180.981, 110.32, 0.5338 ) }
    apic_18 { pt3dadd( 510.237, 181.426, 110.6, 0.5338 ) }
    apic_18 { pt3dadd( 510.707, 181.756, 110.6, 0.483 ) }
    apic_18 { pt3dadd( 511.127, 182.137, 110.6, 0.483 ) }
    apic_18 { pt3dadd( 511.368, 182.697, 110.6, 0.4576 ) }
    apic_18 { pt3dadd( 511.368, 183.421, 110.787, 0.4322 ) }
    apic_18 { pt3dadd( 511.368, 183.726, 110.88, 0.4576 ) }
    apic_18 { pt3dadd( 511.699, 184.298, 111.191, 0.6102 ) }
    apic_18 { pt3dadd( 511.826, 184.985, 111.44, 0.5084 ) }
    apic_18 { pt3dadd( 511.826, 185.9, 111.44, 0.305 ) }
    apic_18 { pt3dadd( 511.826, 186.586, 111.72, 0.2542 ) }
    apic_18 { pt3dadd( 511.826, 187.387, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.826, 188.188, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.826, 188.989, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.826, 189.79, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.826, 190.59, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.826, 191.391, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.826, 191.734, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.863, 192.04, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 511.99, 192.256, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 512.245, 192.344, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 512.435, 192.726, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 512.55, 192.955, 111.72, 0.2288 ) }
    apic_18 { pt3dadd( 512.626, 193.794, 111.72, 0.2542 ) }
    apic_18 { pt3dadd( 512.626, 194.594, 111.72, 0.2796 ) }
    apic_18 { pt3dadd( 512.626, 195.395, 111.72, 0.305 ) }
    apic_18 { pt3dadd( 512.741, 196.082, 111.72, 0.2796 ) }
    apic_18 { pt3dadd( 512.741, 196.882, 111.72, 0.2796 ) }
    apic_18 { pt3dadd( 512.741, 197.683, 111.72, 0.2796 ) }
    apic_18 { pt3dadd( 512.741, 198.484, 111.72, 0.305 ) }
    apic_18 { pt3dadd( 512.741, 199.285, 111.72, 0.305 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_18 { pt3dadd( 512.741, 200.086, 111.72, 0.356 ) }
    apic_18 { pt3dadd( 512.741, 200.886, 111.72, 0.4576 ) }
    apic_18 { pt3dadd( 512.741, 201.687, 111.72, 0.5338 ) }
    apic_18 { pt3dadd( 512.741, 202.374, 112.0, 0.5084 ) }
    apic_18 { pt3dadd( 512.741, 203.174, 112.0, 0.3814 ) }
    apic_18 { pt3dadd( 512.741, 203.975, 112.0, 0.2796 ) }
    apic_18 { pt3dadd( 512.741, 204.318, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 512.753, 204.649, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 512.893, 204.853, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 513.122, 204.967, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 513.263, 205.055, 112.0, 0.2542 ) }
    apic_18 { pt3dadd( 513.758, 205.361, 112.0, 0.2796 ) }
    apic_18 { pt3dadd( 514.164, 205.755, 112.0, 0.305 ) }
    apic_18 { pt3dadd( 514.546, 206.174, 112.0, 0.2796 ) }
    apic_18 { pt3dadd( 515.004, 206.517, 112.0, 0.2542 ) }
    apic_18 { pt3dadd( 515.41, 206.912, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.601, 207.522, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.601, 208.322, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.613, 209.111, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.817, 209.708, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.83, 209.924, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.83, 210.153, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 515.919, 210.407, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 516.071, 210.483, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 516.287, 210.496, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 516.516, 210.496, 112.0, 0.2288 ) }
    apic_18 { pt3dadd( 516.745, 210.496, 112.0, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 27/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 507.059, 178.922, 109.387, 0.2288 ) }
    apic_15 { pt3dadd( 507.262, 178.82, 110.04, 0.2542 ) }
    apic_15 { pt3dadd( 507.898, 178.197, 110.04, 0.305 ) }
    apic_15 { pt3dadd( 508.406, 177.905, 110.04, 0.305 ) }
    apic_15 { pt3dadd( 509.003, 177.701, 110.04, 0.356 ) }
    apic_15 { pt3dadd( 509.639, 177.536, 110.04, 0.4068 ) }
    apic_15 { pt3dadd( 510.224, 177.32, 110.04, 0.4576 ) }
    apic_15 { pt3dadd( 510.898, 177.206, 110.071, 0.4068 ) }
    apic_15 { pt3dadd( 511.381, 177.104, 110.6, 0.3304 ) }
    apic_15 { pt3dadd( 511.94, 176.862, 110.6, 0.2542 ) }
    apic_15 { pt3dadd( 512.589, 176.71, 110.6, 0.2288 ) }
    apic_15 { pt3dadd( 513.046, 176.367, 110.6, 0.2288 ) }
    // Section: apic_22, id: apic_22, parent: apic_20 (entry count 39/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 477.701, 166.781, 118.228, 0.9152 ) }
    apic_22 { pt3dadd( 477.7, 165.326, 118.228, 0.5338 ) }
    apic_22 { pt3dadd( 474.069, 161.544, 122.352, 0.356 ) }
    apic_22 { pt3dadd( 469.646, 157.944, 122.352, 0.2542 ) }
    apic_22 { pt3dadd( 469.643, 156.34, 122.352, 0.2288 ) }
    apic_22 { pt3dadd( 464.215, 147.737, 119.603, 0.2288 ) }
    apic_22 { pt3dadd( 462.097, 143.949, 118.228, 0.2288 ) }
    apic_22 { pt3dadd( 457.227, 137.874, 118.228, 0.2288 ) }
    apic_22 { pt3dadd( 456.931, 137.003, 118.228, 0.2288 ) }
    apic_22 { pt3dadd( 455.752, 135.7, 118.228, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 49/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 477.701, 166.781, 118.228, 0.9152 ) }
    apic_21 { pt3dadd( 480.835, 164.237, 122.352, 0.483 ) }
    apic_21 { pt3dadd( 482.58, 159.27, 122.352, 0.356 ) }
    apic_21 { pt3dadd( 484.867, 153.122, 128.539, 0.3304 ) }
    apic_21 { pt3dadd( 485.596, 151.951, 128.539, 0.3304 ) }
    apic_21 { pt3dadd( 487.357, 151.644, 128.539, 0.3304 ) }
    apic_21 { pt3dadd( 494.163, 145.984, 132.663, 0.2796 ) }
    apic_21 { pt3dadd( 496.506, 146.113, 132.663, 0.2542 ) }
    apic_21 { pt3dadd( 498.261, 146.099, 132.663, 0.2288 ) }
    apic_21 { pt3dadd( 500.158, 145.65, 132.663, 0.2288 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 59/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 513.046, 176.367, 110.6, 0.2288 ) }
    apic_17 { pt3dadd( 513.77, 176.176, 109.76, 0.305 ) }
    apic_17 { pt3dadd( 514.533, 176.138, 109.76, 0.3814 ) }
    apic_17 { pt3dadd( 515.143, 175.947, 109.76, 0.4068 ) }
    apic_17 { pt3dadd( 515.639, 175.642, 109.76, 0.3814 ) }
    apic_17 { pt3dadd( 516.287, 175.49, 109.76, 0.305 ) }
    apic_17 { pt3dadd( 516.745, 175.146, 109.76, 0.2542 ) }
    apic_17 { pt3dadd( 517.126, 174.727, 109.76, 0.2288 ) }
    apic_17 { pt3dadd( 517.647, 174.447, 109.76, 0.2288 ) }
    apic_17 { pt3dadd( 517.812, 174.383, 109.76, 0.2288 ) }
    apic_17 { pt3dadd( 518.003, 174.346, 109.76, 0.2288 ) }
    apic_17 { pt3dadd( 518.334, 174.219, 109.76, 0.4068 ) }
    apic_17 { pt3dadd( 518.423, 173.736, 109.76, 0.4576 ) }
    apic_17 { pt3dadd( 518.69, 173.087, 109.76, 0.4322 ) }
    apic_17 { pt3dadd( 518.804, 172.401, 109.76, 0.3814 ) }
    apic_17 { pt3dadd( 519.122, 171.918, 109.76, 0.305 ) }
    apic_17 { pt3dadd( 519.478, 171.587, 109.76, 0.305 ) }
    apic_17 { pt3dadd( 519.49, 170.914, 109.76, 0.4576 ) }
    apic_17 { pt3dadd( 519.694, 170.088, 109.76, 0.661 ) }
    apic_17 { pt3dadd( 520.062, 169.655, 109.76, 0.7372 ) }
    apic_17 { pt3dadd( 520.749, 169.312, 108.92, 0.6864 ) }
    apic_17 { pt3dadd( 521.778, 169.312, 108.92, 0.483 ) }
    apic_17 { pt3dadd( 522.286, 169.019, 108.92, 0.356 ) }
    apic_17 { pt3dadd( 522.656, 168.702, 108.92, 0.2288 ) }
    apic_17 { pt3dadd( 522.694, 168.397, 108.92, 0.2288 ) }
    apic_17 { pt3dadd( 522.694, 168.054, 108.92, 0.2288 ) }
    apic_17 { pt3dadd( 522.694, 167.825, 108.92, 0.2288 ) }
    apic_17 { pt3dadd( 522.694, 167.482, 108.92, 0.2288 ) }
    apic_17 { pt3dadd( 522.694, 167.101, 108.173, 0.4322 ) }
    apic_17 { pt3dadd( 522.681, 166.77, 106.773, 0.8644 ) }
    apic_17 { pt3dadd( 522.465, 165.766, 106.68, 0.8136 ) }
    apic_17 { pt3dadd( 522.186, 165.231, 105.871, 0.5848 ) }
    apic_17 { pt3dadd( 521.651, 165.079, 105.031, 0.5848 ) }
    apic_17 { pt3dadd( 520.863, 165.079, 104.44, 0.5592 ) }
    apic_17 { pt3dadd( 520.241, 164.901, 103.88, 0.6102 ) }
    apic_17 { pt3dadd( 519.44, 164.329, 103.88, 0.6864 ) }
    apic_17 { pt3dadd( 518.511, 163.656, 103.88, 0.7118 ) }
    apic_17 { pt3dadd( 517.774, 162.791, 103.88, 0.5592 ) }
    apic_17 { pt3dadd( 517.431, 162.334, 103.88, 0.4576 ) }
    apic_17 { pt3dadd( 517.088, 161.876, 103.88, 0.4068 ) }
    apic_17 { pt3dadd( 517.088, 161.533, 103.88, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_17 { pt3dadd( 516.668, 160.923, 103.88, 0.6864 ) }
    apic_17 { pt3dadd( 516.287, 159.588, 103.6, 0.4576 ) }
    apic_17 { pt3dadd( 516.287, 158.864, 103.413, 0.3814 ) }
    apic_17 { pt3dadd( 516.173, 158.33, 103.04, 0.4322 ) }
    apic_17 { pt3dadd( 516.046, 157.758, 102.791, 0.5848 ) }
    apic_17 { pt3dadd( 515.817, 157.414, 101.671, 0.483 ) }
    apic_17 { pt3dadd( 515.193, 157.25, 101.36, 0.356 ) }
    apic_17 { pt3dadd( 514.775, 156.88, 101.329, 0.356 ) }
    apic_17 { pt3dadd( 514.686, 156.614, 100.52, 0.2288 ) }
    apic_17 { pt3dadd( 514.686, 156.499, 99.96, 0.2288 ) }
    apic_17 { pt3dadd( 514.673, 156.092, 99.5868, 0.2288 ) }
    apic_17 { pt3dadd( 514.114, 155.47, 99.4, 0.2288 ) }
    apic_17 { pt3dadd( 513.77, 155.126, 99.4, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 13/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 513.046, 176.367, 110.6, 0.2288 ) }
    apic_16 { pt3dadd( 513.465, 176.201, 111.129, 0.2288 ) }
    apic_16 { pt3dadd( 513.987, 175.947, 111.191, 0.2288 ) }
    apic_16 { pt3dadd( 514.049, 175.756, 111.409, 0.2288 ) }
    apic_16 { pt3dadd( 514.292, 175.706, 111.533, 0.2288 ) }
    apic_16 { pt3dadd( 514.342, 175.579, 111.938, 0.2288 ) }
    apic_16 { pt3dadd( 514.38, 175.49, 112.467, 0.2288 ) }
    apic_16 { pt3dadd( 514.648, 175.337, 112.84, 0.2288 ) }
    apic_16 { pt3dadd( 514.825, 175.172, 112.84, 0.2288 ) }
    apic_16 { pt3dadd( 515.308, 174.739, 112.84, 0.2796 ) }
    apic_16 { pt3dadd( 515.931, 174.562, 112.84, 0.4068 ) }
    apic_16 { pt3dadd( 516.63, 174.46, 112.84, 0.5848 ) }
    apic_16 { pt3dadd( 517.304, 174.333, 112.84, 0.7372 ) }
    apic_16 { pt3dadd( 518.346, 173.774, 112.84, 0.6864 ) }
    apic_16 { pt3dadd( 518.944, 173.583, 112.871, 0.5084 ) }
    apic_16 { pt3dadd( 519.44, 173.43, 113.244, 0.356 ) }
    apic_16 { pt3dadd( 519.528, 173.418, 113.836, 0.2542 ) }
    apic_16 { pt3dadd( 519.719, 173.316, 113.96, 0.2288 ) }
    apic_16 { pt3dadd( 519.923, 173.176, 113.96, 0.2288 ) }
    apic_16 { pt3dadd( 520.177, 173.087, 113.96, 0.2288 ) }
    apic_16 { pt3dadd( 520.406, 173.087, 113.96, 0.2288 ) }
    apic_16 { pt3dadd( 521.092, 172.973, 113.96, 0.2288 ) }
    apic_16 { pt3dadd( 521.435, 172.973, 113.96, 0.2542 ) }
    apic_16 { pt3dadd( 521.893, 172.744, 113.96, 0.356 ) }
    apic_16 { pt3dadd( 522.134, 172.413, 113.96, 0.356 ) }
    apic_16 { pt3dadd( 522.554, 172.07, 114.053, 0.4322 ) }
    apic_16 { pt3dadd( 522.999, 171.905, 114.52, 0.6102 ) }
    apic_16 { pt3dadd( 523.761, 171.409, 115.36, 0.7372 ) }
    apic_16 { pt3dadd( 524.829, 170.876, 115.36, 0.483 ) }
    apic_16 { pt3dadd( 525.325, 170.57, 115.36, 0.4068 ) }
    apic_16 { pt3dadd( 525.757, 170.202, 115.36, 0.4322 ) }
    apic_16 { pt3dadd( 526.202, 169.961, 115.64, 0.483 ) }
    apic_16 { pt3dadd( 526.672, 169.668, 115.733, 0.5084 ) }
    apic_16 { pt3dadd( 527.13, 169.401, 115.92, 0.4068 ) }
    apic_16 { pt3dadd( 527.384, 168.969, 115.92, 0.2288 ) }
    apic_16 { pt3dadd( 527.625, 168.867, 115.92, 0.2288 ) }
    apic_16 { pt3dadd( 527.943, 168.842, 115.92, 0.2288 ) }
    apic_16 { pt3dadd( 528.223, 168.549, 115.92, 0.2288 ) }
    apic_16 { pt3dadd( 528.388, 168.372, 115.92, 0.2288 ) }
    apic_16 { pt3dadd( 528.782, 167.85, 115.92, 0.2542 ) }
    apic_16 { pt3dadd( 529.214, 167.482, 115.92, 0.305 ) }
    apic_16 { pt3dadd( 529.583, 167.049, 115.92, 0.4322 ) }
    apic_16 { pt3dadd( 530.04, 166.706, 115.92, 0.5592 ) }
    apic_16 { pt3dadd( 530.498, 166.363, 115.92, 0.661 ) }
    apic_16 { pt3dadd( 531.057, 166.121, 115.92, 0.6102 ) }
    apic_16 { pt3dadd( 531.515, 165.778, 115.92, 0.5338 ) }
    apic_16 { pt3dadd( 532.074, 165.537, 115.92, 0.5084 ) }
    apic_16 { pt3dadd( 532.837, 165.308, 115.547, 0.6102 ) }
    apic_16 { pt3dadd( 533.333, 165.27, 115.173, 0.356 ) }
    apic_16 { pt3dadd( 533.562, 164.622, 115.08, 0.3304 ) }
    apic_16 { pt3dadd( 533.562, 164.278, 115.08, 0.4576 ) }
    apic_16 { pt3dadd( 533.562, 163.363, 115.08, 0.661 ) }
    apic_16 { pt3dadd( 533.841, 162.613, 115.08, 0.6356 ) }
    apic_16 { pt3dadd( 534.248, 162.448, 115.08, 0.4322 ) }
    apic_16 { pt3dadd( 534.655, 162.055, 115.08, 0.4322 ) }
    apic_16 { pt3dadd( 534.833, 161.431, 115.08, 0.5084 ) }
    apic_16 { pt3dadd( 534.947, 160.897, 114.707, 0.5338 ) }
    apic_16 { pt3dadd( 535.24, 160.465, 114.52, 0.5084 ) }
    apic_16 { pt3dadd( 535.519, 159.944, 114.52, 0.4322 ) }
    apic_16 { pt3dadd( 535.964, 159.588, 114.52, 0.4068 ) }
    apic_16 { pt3dadd( 536.498, 159.436, 114.52, 0.2796 ) }
    apic_16 { pt3dadd( 536.638, 159.232, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 536.74, 158.991, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 537.031, 158.253, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 537.26, 157.783, 114.271, 0.2288 ) }
    apic_16 { pt3dadd( 537.337, 157.529, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 537.337, 157.186, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 537.451, 156.957, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 537.603, 156.766, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 538.023, 156.156, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 538.15, 155.482, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 538.443, 154.987, 114.271, 0.2288 ) }
    apic_16 { pt3dadd( 538.684, 154.529, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 539.065, 154.109, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 539.6, 153.843, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 539.803, 153.703, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 539.968, 153.525, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 540.159, 153.373, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 540.197, 153.067, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 540.197, 152.838, 114.52, 0.2288 ) }
    apic_16 { pt3dadd( 540.197, 152.139, 114.769, 0.2288 ) }
    apic_16 { pt3dadd( 540.209, 151.821, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.299, 151.567, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.426, 151.351, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.59, 151.173, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.769, 150.779, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.769, 150.436, 114.8, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_16 { pt3dadd( 540.769, 149.521, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.769, 148.72, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.667, 148.021, 114.8, 0.2288 ) }
    apic_16 { pt3dadd( 540.654, 147.462, 114.24, 0.2288 ) }
    apic_16 { pt3dadd( 540.654, 146.673, 114.209, 0.2542 ) }
    apic_16 { pt3dadd( 540.654, 145.987, 113.929, 0.305 ) }
    apic_16 { pt3dadd( 540.667, 145.644, 113.12, 0.356 ) }
    apic_16 { pt3dadd( 540.769, 145.059, 113.12, 0.2542 ) }
    apic_16 { pt3dadd( 541.137, 144.398, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 541.341, 143.801, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 541.455, 143.114, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 541.709, 142.568, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 541.888, 142.403, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 542.091, 142.263, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 542.154, 141.983, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 542.243, 141.729, 113.12, 0.2288 ) }
    apic_16 { pt3dadd( 542.485, 141.055, 113.4, 0.2288 ) }
    apic_16 { pt3dadd( 542.599, 140.369, 113.4, 0.2288 ) }
    apic_16 { pt3dadd( 542.701, 139.67, 113.4, 0.2288 ) }
    apic_16 { pt3dadd( 542.714, 138.882, 113.4, 0.2288 ) }
    apic_16 { pt3dadd( 542.714, 138.081, 113.4, 0.2288 ) }
    apic_16 { pt3dadd( 542.714, 137.623, 113.4, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_388, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_388 = new SectionList()
    soma_0 ModelViewParmSubset_388.append()
    axon_0 ModelViewParmSubset_388.append()
    axon_1 ModelViewParmSubset_388.append()

    // Group: {name=ModelViewParmSubset_389, groups=[], sections=[dend_42, dend_41, dend_40, dend_27, dend_26, dend_23, dend_0, apic_0, dend_33, dend_28, dend_25, dend_24, dend_22, dend_1, apic_28, apic_1, dend_35, dend_34, dend_32, dend_29, dend_11, dend_2, apic_36, apic_29, apic_27, apic_2, dend_39, dend_36, dend_31, dend_30, dend_19, dend_12, dend_8, dend_3, apic_42, apic_37, apic_31, apic_30, apic_8, apic_3, dend_38, dend_37, dend_21, dend_20, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, apic_39, apic_38, apic_35, apic_32, apic_24, apic_9, apic_7, apic_4, dend_16, dend_15, dend_6, dend_5, apic_41, apic_40, apic_34, apic_33, apic_26, apic_25, apic_11, apic_10, apic_6, apic_5, dend_18, dend_17, apic_13, apic_12, apic_19, apic_14, apic_23, apic_20, apic_18, apic_15, apic_22, apic_21, apic_17, apic_16]}
    ModelViewParmSubset_389 = new SectionList()
    dend_42 ModelViewParmSubset_389.append()
    dend_41 ModelViewParmSubset_389.append()
    dend_40 ModelViewParmSubset_389.append()
    dend_27 ModelViewParmSubset_389.append()
    dend_26 ModelViewParmSubset_389.append()
    dend_23 ModelViewParmSubset_389.append()
    dend_0 ModelViewParmSubset_389.append()
    apic_0 ModelViewParmSubset_389.append()
    dend_33 ModelViewParmSubset_389.append()
    dend_28 ModelViewParmSubset_389.append()
    dend_25 ModelViewParmSubset_389.append()
    dend_24 ModelViewParmSubset_389.append()
    dend_22 ModelViewParmSubset_389.append()
    dend_1 ModelViewParmSubset_389.append()
    apic_28 ModelViewParmSubset_389.append()
    apic_1 ModelViewParmSubset_389.append()
    dend_35 ModelViewParmSubset_389.append()
    dend_34 ModelViewParmSubset_389.append()
    dend_32 ModelViewParmSubset_389.append()
    dend_29 ModelViewParmSubset_389.append()
    dend_11 ModelViewParmSubset_389.append()
    dend_2 ModelViewParmSubset_389.append()
    apic_36 ModelViewParmSubset_389.append()
    apic_29 ModelViewParmSubset_389.append()
    apic_27 ModelViewParmSubset_389.append()
    apic_2 ModelViewParmSubset_389.append()
    dend_39 ModelViewParmSubset_389.append()
    dend_36 ModelViewParmSubset_389.append()
    dend_31 ModelViewParmSubset_389.append()
    dend_30 ModelViewParmSubset_389.append()
    dend_19 ModelViewParmSubset_389.append()
    dend_12 ModelViewParmSubset_389.append()
    dend_8 ModelViewParmSubset_389.append()
    dend_3 ModelViewParmSubset_389.append()
    apic_42 ModelViewParmSubset_389.append()
    apic_37 ModelViewParmSubset_389.append()
    apic_31 ModelViewParmSubset_389.append()
    apic_30 ModelViewParmSubset_389.append()
    apic_8 ModelViewParmSubset_389.append()
    apic_3 ModelViewParmSubset_389.append()
    dend_38 ModelViewParmSubset_389.append()
    dend_37 ModelViewParmSubset_389.append()
    dend_21 ModelViewParmSubset_389.append()
    dend_20 ModelViewParmSubset_389.append()
    dend_14 ModelViewParmSubset_389.append()
    dend_13 ModelViewParmSubset_389.append()
    dend_10 ModelViewParmSubset_389.append()
    dend_9 ModelViewParmSubset_389.append()
    dend_7 ModelViewParmSubset_389.append()
    dend_4 ModelViewParmSubset_389.append()
    apic_39 ModelViewParmSubset_389.append()
    apic_38 ModelViewParmSubset_389.append()
    apic_35 ModelViewParmSubset_389.append()
    apic_32 ModelViewParmSubset_389.append()
    apic_24 ModelViewParmSubset_389.append()
    apic_9 ModelViewParmSubset_389.append()
    apic_7 ModelViewParmSubset_389.append()
    apic_4 ModelViewParmSubset_389.append()
    dend_16 ModelViewParmSubset_389.append()
    dend_15 ModelViewParmSubset_389.append()
    dend_6 ModelViewParmSubset_389.append()
    dend_5 ModelViewParmSubset_389.append()
    apic_41 ModelViewParmSubset_389.append()
    apic_40 ModelViewParmSubset_389.append()
    apic_34 ModelViewParmSubset_389.append()
    apic_33 ModelViewParmSubset_389.append()
    apic_26 ModelViewParmSubset_389.append()
    apic_25 ModelViewParmSubset_389.append()
    apic_11 ModelViewParmSubset_389.append()
    apic_10 ModelViewParmSubset_389.append()
    apic_6 ModelViewParmSubset_389.append()
    apic_5 ModelViewParmSubset_389.append()
    dend_18 ModelViewParmSubset_389.append()
    dend_17 ModelViewParmSubset_389.append()
    apic_13 ModelViewParmSubset_389.append()
    apic_12 ModelViewParmSubset_389.append()
    apic_19 ModelViewParmSubset_389.append()
    apic_14 ModelViewParmSubset_389.append()
    apic_23 ModelViewParmSubset_389.append()
    apic_20 ModelViewParmSubset_389.append()
    apic_18 ModelViewParmSubset_389.append()
    apic_15 ModelViewParmSubset_389.append()
    apic_22 ModelViewParmSubset_389.append()
    apic_21 ModelViewParmSubset_389.append()
    apic_17 ModelViewParmSubset_389.append()
    apic_16 ModelViewParmSubset_389.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_28, apic_1, apic_36, apic_29, apic_27, apic_2, apic_42, apic_37, apic_31, apic_30, apic_8, apic_3, apic_39, apic_38, apic_35, apic_32, apic_24, apic_9, apic_7, apic_4, apic_41, apic_40, apic_34, apic_33, apic_26, apic_25, apic_11, apic_10, apic_6, apic_5, apic_13, apic_12, apic_19, apic_14, apic_23, apic_20, apic_18, apic_15, apic_22, apic_21, apic_17, apic_16]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_28 apic.append()
    apic_1 apic.append()
    apic_36 apic.append()
    apic_29 apic.append()
    apic_27 apic.append()
    apic_2 apic.append()
    apic_42 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_37 apic.append()
    apic_31 apic.append()
    apic_30 apic.append()
    apic_8 apic.append()
    apic_3 apic.append()
    apic_39 apic.append()
    apic_38 apic.append()
    apic_35 apic.append()
    apic_32 apic.append()
    apic_24 apic.append()
    apic_9 apic.append()
    apic_7 apic.append()
    apic_4 apic.append()
    apic_41 apic.append()
    apic_40 apic.append()
    apic_34 apic.append()
    apic_33 apic.append()
    apic_26 apic.append()
    apic_25 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()
    apic_19 apic.append()
    apic_14 apic.append()
    apic_23 apic.append()
    apic_20 apic.append()
    apic_18 apic.append()
    apic_15 apic.append()
    apic_22 apic.append()
    apic_21 apic.append()
    apic_17 apic.append()
    apic_16 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_42, dend_41, dend_40, dend_27, dend_26, dend_23, dend_0, dend_33, dend_28, dend_25, dend_24, dend_22, dend_1, dend_35, dend_34, dend_32, dend_29, dend_11, dend_2, dend_39, dend_36, dend_31, dend_30, dend_19, dend_12, dend_8, dend_3, dend_38, dend_37, dend_21, dend_20, dend_14, dend_13, dend_10, dend_9, dend_7, dend_4, dend_16, dend_15, dend_6, dend_5, dend_18, dend_17]}
    dend = new SectionList()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_0 dend.append()
    dend_33 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_1 dend.append()
    dend_35 dend.append()
    dend_34 dend.append()
    dend_32 dend.append()
    dend_29 dend.append()
    dend_11 dend.append()
    dend_2 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_31 dend.append()
    dend_30 dend.append()
    dend_19 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_3 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()

    // Group: {name=OneSecGrp_SectionRef_18337, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_18337 = new SectionList()
    soma_0 OneSecGrp_SectionRef_18337.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, dend_1, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_28, apic_1, apic_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_29, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_2, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, apic_42, apic_42, apic_42, apic_42, apic_37, apic_37, apic_37, apic_31, apic_31, apic_31, apic_31, apic_31, apic_31, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_39, apic_38, apic_38, apic_38, apic_38, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_35, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_41, apic_40, apic_40, apic_40, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_33, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_18, dend_18, dend_18, dend_18, dend_17, apic_13, apic_12, apic_19, apic_19, apic_19, apic_19, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_23, apic_23, apic_23, apic_23, apic_20, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_28 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_2 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_42 all.append()
    apic_42 all.append()
    apic_42 all.append()
    apic_42 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_39 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_41 all.append()
    apic_40 all.append()
    apic_40 all.append()
    apic_40 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_20 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 3.56  // units: uF/cm2
    forsec dend cm = 3.56  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 277.21  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.005248199  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 0.012950052  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.26587296  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0013365134  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.008420958  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 4.4367576E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 3.2556668E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.0070762695  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 8.825644E-4  // units: S cm-2
        e_pas_nml2 = -75.50921  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.8096174E-4  // units: S cm-2
        e_pas_nml2 = -75.50921  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 6.824969E-4  // units: S cm-2
        e_pas_nml2 = -75.50921  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 5.5955007E-4  // units: S cm-2
        e_pas_nml2 = -75.50921  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 3.23393E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.002333243  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_42 nseg = 5
    dend_41 nseg = 7
    dend_25 nseg = 5
    dend_24 nseg = 5
    dend_22 nseg = 3
    dend_34 nseg = 3
    dend_32 nseg = 3
    apic_36 nseg = 5
    apic_27 nseg = 9
    dend_31 nseg = 5
    dend_30 nseg = 5
    dend_19 nseg = 3
    apic_30 nseg = 3
    dend_37 nseg = 5
    dend_10 nseg = 3
    dend_9 nseg = 5
    apic_9 nseg = 3
    apic_7 nseg = 5
    dend_6 nseg = 7
    dend_5 nseg = 3
    apic_34 nseg = 3
    apic_33 nseg = 3
    apic_26 nseg = 3
    apic_11 nseg = 17
    apic_10 nseg = 3
    apic_14 nseg = 3
    apic_22 nseg = 3
    apic_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473465456


