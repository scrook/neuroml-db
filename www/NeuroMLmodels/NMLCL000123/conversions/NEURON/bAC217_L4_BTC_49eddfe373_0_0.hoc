// Cell: bAC217_L4_BTC_49eddfe373_0_0
/*
{
  "id" : "bAC217_L4_BTC_49eddfe373_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.465097, 8.04727, -0.0175891, 2.59198", "0.424424, 7.2054, -0.0170165, 4.38773", "0.383751, 6.36352, -0.0164438, 5.44399", "0.343077, 5.52165, -0.0158711, 6.50025", "0.302404, 4.67978, -0.0152984, 7.50099", "0.261731, 3.83791, -0.0147257, 8.3937", "0.221058, 2.99604, -0.014153, 9.3444", "0.180384, 2.15416, -0.0135803, 10.2953", "0.139711, 1.31229, -0.0130077, 10.7907", "0.0990378, 0.470419, -0.012435, 10.75", "0.0583646, -0.371454, -0.0118623, 10.6053", "0.0176913, -1.21333, -0.0112896, 10.4607", "-0.0229819, -2.0552, -0.0107169, 10.316", "-0.0636552, -2.89707, -0.0101442, 9.78436", "-0.104328, -3.73894, -0.00957155, 9.07182", "-0.145002, -4.58081, -0.00899886, 8.12082", "-0.185675, -5.42269, -0.00842618, 7.10426", "-0.226348, -6.26456, -0.00785349, 5.9023", "-0.267021, -7.10643, -0.0072808, 4.68096", "-0.307695, -7.9483, -0.00670812, 3.08046", "-0.348368, -8.79018, -0.00613543, 1.81235" ]
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.46257, 6.73541, -0.101719, 1.82", "-1.57287, 7.30467, 0.927977, 1.82", "-1.64745, 7.59391, 1.40218, 1.82", "-1.84054, 8.26162, 2.35831, 1.68", "-2.0453, 8.93544, 3.25688, 1.82", "-2.0453, 8.93544, 3.25688, 1.96", "-2.25795, 9.63524, 4.19009, 1.4", "-2.39712, 9.96499, 4.60877, 1.26", "-2.57239, 10.304, 5.02296, 1.4", "-2.57239, 10.304, 5.02296, 1.26" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.682563, -8.18459, 0.898281, 2.1", "-0.293566, -8.93816, 1.49838, 2.1", "0.0701283, -9.91129, 2.05393, 1.96", "0.237432, -10.4702, 2.291, 2.1", "0.305386, -10.7258, 2.37963, 1.96", "0.409841, -11.2573, 2.53378, 1.82", "0.490684, -11.8555, 2.6825, 1.68", "0.518441, -12.4824, 2.73491, 1.54", "0.502331, -13.0426, 2.73491, 1.4", "0.487208, -13.3142, 2.73491, 1.4", "0.446325, -13.9426, 2.73491, 2.38", "0.421954, -14.3313, 2.73491, 2.24", "0.40793, -14.8916, 2.73491, 2.38", "0.41828, -15.4547, 2.73491, 2.24", "0.435124, -16.0149, 2.73491, 2.1", "0.462023, -16.4122, 2.73491, 1.96", "0.497042, -16.6916, 2.73491, 1.82", "0.56467, -17.2383, 2.73491, 1.54", "0.6263, -17.7953, 2.73491, 1.68", "0.661631, -18.1905, 2.76915, 1.82", "0.697786, -18.7464, 2.85238, 1.68", "0.730097, -19.2864, 2.95578, 1.68", "0.744744, -19.8896, 3.13599, 1.82", "0.746716, -20.4127, 3.3372, 1.82", "0.729302, -21.4553, 3.88209, 1.82", "0.722874, -21.9955, 4.20901, 1.68", "0.718591, -22.2297, 4.36535, 1.68", "0.70366, -23.1004, 4.99257, 1.12", "0.688414, -23.5508, 5.32577, 0.98", "0.62223, -24.5224, 5.99517, 1.12", "0.575482, -25.0079, 6.27125, 0.98", "0.547049, -25.2594, 6.39456, 1.12", "0.547049, -25.2594, 6.39456, 1.26", "0.491268, -25.8706, 6.50115, 1.26", "0.449635, -26.4981, 6.55853, 1.12", "0.445007, -26.8876, 6.55853, 0.98", "0.473989, -27.4473, 6.55853, 1.12", "0.536579, -28.007, 6.55853, 1.26", "0.624282, -28.5605, 6.55853, 1.4", "0.756939, -29.098, 6.55853, 1.26", "0.924719, -29.6328, 6.55853, 1.4", "1.06264, -30.0064, 6.55853, 1.4", "1.06264, -30.0064, 6.55853, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999994045921775
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.348368, -8.79018, -0.00613543, 0.28", "-1.07222, -23.7727, -0.00613543, 0.28", "-1.79606, -38.7552, -0.00613543, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-2.57239, 10.304, 5.02296, 0.84", "-2.73614, 10.7798, 4.65579, 0.84", "-3.04379, 11.7026, 4.04927, 0.7", "-3.19727, 12.1755, 3.78469, 0.84", "-3.4891, 13.1633, 3.28151, 0.98", "-3.63664, 13.6576, 3.05559, 1.12", "-3.78053, 14.1372, 2.82589, 1.26", "-3.93025, 14.6325, 2.60361, 1.4", "-4.09518, 15.136, 2.42077, 1.54", "-4.185, 15.3947, 2.35526, 1.68", "-4.40068, 15.9859, 2.33422, 1.68", "-4.80259, 17.0542, 2.4406, 1.54", "-5.02267, 17.6233, 2.56593, 1.4", "-5.2301, 18.1206, 2.72997, 1.4", "-5.69099, 19.1174, 3.05865, 1.26", "-6.16068, 20.0203, 3.25377, 1.12", "-6.44342, 20.504, 3.23873, 0.98", "-6.44342, 20.504, 3.23873, 0.98", "-6.69358, 20.7786, 2.73028, 0.7", "-7.08323, 21.2399, 1.8409, 0.56", "-7.47131, 21.7636, 0.855188, 0.42", "-7.78645, 22.2643, -0.0401809, 0.56", "-8.28464, 23.2619, -1.74758, 0.56", "-8.3916, 23.5549, -2.21318, 1.26", "-8.48622, 23.9117, -2.71111, 1.12", "-8.56132, 24.3474, -3.16204, 0.98", "-8.61787, 24.8831, -3.4881, 0.84", "-8.74145, 25.9438, -3.59509, 0.7", "-8.78334, 26.2127, -3.52279, 0.84", "-9.09598, 27.3197, -2.97765, 0.1", "-9.52567, 28.0168, -2.27627, 0.1", "-9.70667, 28.1934, -1.98005, 0.14", "-9.70667, 28.1934, -1.98005, 0.28" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.57239, 10.304, 5.02296, 3.22", "-2.36135, 10.567, 4.81104, 3.22", "-2.06977, 11.0122, 4.47332, 3.08", "-1.57799, 11.9039, 3.87367, 2.94", "-1.43642, 12.2159, 3.6886, 2.8", "-1.22861, 12.7108, 3.37247, 2.66", "-0.859925, 13.66, 2.77097, 2.52", "-0.712579, 14.1243, 2.48818, 2.38", "-0.57842, 14.655, 2.19351, 2.24", "-0.473442, 15.1596, 1.96642, 2.1", "-0.296745, 16.0759, 1.50981, 1.96", "-0.193194, 16.6259, 1.21738, 0.28", "-0.0744687, 17.1717, 0.948642, 0.42", "0.015638, 17.5113, 0.761106, 0.56", "0.167143, 18.0269, 0.448443, 0.7", "0.444073, 18.8505, -0.0464351, 0.84", "0.514638, 19.1005, -0.148087, 0.84" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.06264, -30.0064, 6.55853, 1.4", "1.13927, -30.2774, 6.55853, 1.4", "1.26331, -30.8239, 6.55853, 1.54", "1.34699, -31.3487, 6.38054, 1.68", "1.37566, -31.5606, 6.19724, 1.54", "1.41316, -31.9807, 5.82826, 1.4", "1.41316, -31.9807, 5.82826, 1.54", "1.43189, -32.3152, 5.60403, 1.4", "1.47153, -33.3147, 5.0413, 1.26", "1.52193, -34.3637, 4.5937, 1.12", "1.55161, -34.9676, 4.4176, 0.98", "1.58684, -35.5176, 4.31617, 0.84", "1.68164, -36.674, 4.12111, 0.7", "1.70491, -36.9525, 4.08683, 0.56", "1.73578, -37.5116, 4.06227, 0.56", "1.76575, -38.1401, 4.0397, 0.7", "1.78688, -38.6802, 3.9336, 0.84", "1.82203, -39.7698, 3.57918, 0.98", "1.83848, -40.1367, 3.42521, 0.56", "1.85659, -40.7275, 3.20813, 0.7", "1.87205, -41.2625, 3.07772, 0.84", "1.92813, -42.4389, 2.98025, 0.84", "1.96475, -42.9956, 3.03331, 0.98", "2.01576, -43.5384, 3.1746, 1.12", "2.15129, -44.5494, 3.51387, 0.56", "2.3272, -45.5997, 3.94185, 0.42", "2.42243, -46.1019, 4.1717, 0.42", "2.53304, -46.6071, 4.39455, 0.56", "2.59347, -46.8672, 4.47511, 0.7", "2.663, -47.139, 4.50022, 1.12", "2.81373, -47.6634, 4.40657, 1.26", "2.96085, -48.1767, 4.23635, 1.12", "3.2407, -49.1506, 4.00723, 1.12", "3.2407, -49.1506, 4.00723, 1.12", "3.29575, -49.424, 4.0067, 1.12", "3.3723, -49.9799, 4.05531, 0.98", "3.42208, -50.5303, 4.14822, 1.12", "3.48836, -51.6145, 4.50406, 1.12", "3.51951, -52.1932, 4.75508, 1.26", "3.55258, -52.7675, 5.01122, 1.26", "3.57554, -53.1227, 5.16921, 1.4", "3.58847, -53.3755, 5.28634, 1.4", "3.63283, -54.3196, 5.71772, 1.26", "3.66755, -54.8418, 5.91815, 1.26", "3.73778, -55.349, 6.1527, 1.26", "3.84445, -55.8351, 6.41051, 1.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.06264, -30.0064, 6.55853, 2.24", "0.674138, -30.3606, 5.53833, 2.24", "0.357489, -30.7325, 4.50128, 2.38", "0.0404655, -31.1049, 3.46299, 2.52", "-0.0373202, -31.1963, 3.20823, 2.38", "-0.362306, -31.578, 2.14387, 2.24", "-0.66013, -31.9278, 1.16846, 2.1", "-0.883515, -32.3095, 0.228391, 1.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.79606, -38.7552, -0.00613543, 0.28", "-2.51991, -53.7378, -0.00613543, 0.28", "-3.24376, -68.7203, -0.00613543, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-9.70667, 28.1934, -1.98005, 0.28", "-9.98586, 29.1637, -2.52579, 0.28", "-10.2913, 30.2254, -2.81377, 0.42", "-10.4455, 30.7615, -2.89118, 0.56", "-10.6001, 31.2994, -2.92129, 0.56", "-10.678, 31.57, -2.92228, 0.56", "-10.9946, 32.6714, -2.89485, 0.56", "-11.1345, 33.2073, -2.79253, 0.7", "-11.1345, 33.2073, -2.79253, 0.7", "-11.2532, 33.7345, -2.68574, 0.56", "-11.359, 34.2865, -2.65043, 0.42", "-11.4519, 34.8378, -2.68993, 0.28", "-11.546, 35.4488, -2.80959, 0.14", "-11.6246, 35.9698, -2.97024, 0.1", "-11.7061, 36.4887, -3.1657, 0.1", "-11.8416, 37.4389, -3.65285, 0.14", "-11.9058, 37.9147, -3.94717, 0.84", "-11.9689, 38.3731, -4.26339, 0.7", "-12.1053, 39.2737, -4.95394, 0.56", "-12.1676, 39.7017, -5.31038, 0.7", "-12.2991, 40.587, -6.08348, 0.84", "-12.2991, 40.587, -6.08348, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-9.70667, 28.1934, -1.98005, 0.56", "-9.97048, 28.3775, -3.11716, 0.56", "-10.1966, 28.5673, -4.14894, 0.42", "-10.5792, 28.9426, -6.11651, 0.28", "-10.7648, 29.1476, -7.15676, 0.14", "-11.1236, 29.5672, -9.11912, 0.28", "-11.3118, 29.8029, -10.1133, 0.42", "-11.5128, 30.0959, -11.1982, 0.56", "-11.8722, 30.7221, -13.0845, 0.42", "-12.0621, 31.1195, -14.0254, 0.56", "-12.1771, 31.3932, -14.573, 0.84", "-12.2987, 31.6932, -15.0339, 0.7", "-12.4493, 32.0246, -15.46, 0.56", "-12.6357, 32.3701, -15.8639, 0.42", "-13.058, 33.0426, -16.5326, 0.56", "-13.1723, 33.2073, -16.7265, 0.7", "-13.4266, 33.5234, -17.1992, 1.12", "-13.9295, 34.0098, -18.1471, 0.98", "-14.3808, 34.3139, -19.0758, 0.84", "-14.6571, 34.4338, -19.621, 0.7", "-15.142, 34.5659, -20.5303, 0.84", "-15.3353, 34.6068, -20.8659, 0.56", "-15.6536, 34.6429, -21.4101, 0.42", "-16.2941, 34.7173, -22.3596, 0.56", "-16.7784, 34.806, -22.9807, 0.28", "-17.4796, 35.0086, -23.7718, 0.14", "-18.0351, 35.2427, -24.2789, 0.1", "-18.7969, 35.6894, -24.8943, 0.14", "-19.2348, 36.0199, -25.2046, 0.28", "-19.5148, 36.2515, -25.3677, 0.14", "-19.9443, 36.6353, -25.6048, 0.1", "-20.2197, 36.9045, -25.7061, 0.14", "-20.5874, 37.3135, -25.814, 0.84", "-20.8379, 37.6231, -25.814, 0.98" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "0.514638, 19.1005, -0.148087, 1.4", "0.515328, 20.2826, -0.109237, 1.4", "0.480752, 20.8977, -0.176981, 1.4", "0.439984, 21.4967, -0.372958, 1.26", "0.396396, 22.0182, -0.581025, 1.12", "0.370478, 22.275, -0.686738, 0.98", "0.246253, 23.3339, -1.11157, 0.84", "0.180365, 23.8235, -1.35516, 0.7", "0.0224534, 24.8698, -1.88142, 0.56", "-0.047605, 25.373, -2.11805, 0.56", "-0.0978851, 25.8946, -2.32437, 0.42", "-0.122426, 26.4227, -2.47911, 0.56", "-0.118605, 26.7011, -2.52106, 0.7", "-0.0806238, 27.2612, -2.56648, 0.56", "-0.00649903, 27.8883, -2.56648, 0.56", "0.112632, 28.4945, -2.51552, 0.7", "0.209366, 28.8816, -2.45862, 0.56", "0.377223, 29.4678, -2.34731, 0.56", "0.552417, 30.0611, -2.2201, 0.56", "0.668277, 30.4233, -2.13582, 0.42", "1.07373, 31.6156, -1.91579, 0.56", "1.27687, 32.1987, -1.84396, 0.7", "1.41544, 32.5715, -1.82358, 0.56", "1.64906, 33.1455, -1.83458, 0.42", "1.90083, 33.7141, -1.94465, 0.28", "2.32004, 34.6128, -2.25443, 0.14", "2.57179, 35.1223, -2.5019, 0.56", "2.84024, 35.6458, -2.7263, 0.42", "3.014, 35.9799, -2.84367, 0.56", "3.59119, 37.0999, -3.02525, 0.7", "3.76726, 37.4566, -3.00673, 0.56", "3.92455, 37.8122, -2.92062, 0.42", "4.34422, 38.8574, -2.57723, 0.98", "4.46905, 39.2196, -2.46836, 0.98", "4.81432, 40.3023, -2.16374, 0.84", "4.92529, 40.6833, -2.09277, 0.84", "5.09255, 41.2903, -2.08988, 0.98", "5.23937, 41.891, -2.15397, 0.84", "5.4911, 43.0328, -2.32592, 0.7", "5.56143, 43.4156, -2.34061, 0.56", "5.7616, 44.5794, -2.27485, 0.7", "5.7616, 44.5794, -2.27485, 0.84", "5.91084, 45.5622, -1.70126, 0.84", "6.07296, 46.4897, -0.99428, 0.7", "6.22964, 47.2278, -0.280095, 0.56", "6.28302, 47.4201, -0.0813897, 0.56", "6.43845, 47.8207, 0.378882, 0.98", "6.64617, 48.2245, 0.803478, 0.84", "6.77193, 48.4097, 0.974338, 0.98", "7.35607, 49.1042, 1.54709, 0.42", "7.72318, 49.5155, 1.85138, 0.56", "8.39587, 50.3015, 2.41496, 0.7", "8.74258, 50.7299, 2.70532, 0.56", "8.88775, 50.941, 2.82221, 0.7", "9.12421, 51.4203, 2.99982, 0.84", "9.27715, 51.9421, 3.08799, 0.56", "9.36243, 52.4967, 3.13568, 0.42", "9.39674, 53.0561, 3.13568, 0.28", "9.40693, 53.6857, 3.13568, 0.42", "9.41549, 54.2348, 3.09281, 0.56", "9.43407, 54.7921, 3.01373, 0.7", "9.46162, 55.0672, 2.96007, 0.56", "9.5614, 55.6743, 2.81772, 0.84", "9.70308, 56.2584, 2.66599, 0.84", "10.0288, 57.2505, 2.39763, 0.7", "10.2628, 57.8043, 2.24691, 0.56", "10.5192, 58.3616, 2.10463, 0.7", "10.6788, 58.7142, 2.02831, 0.7", "10.9384, 59.2804, 1.93631, 0.84", "11.1946, 59.8393, 1.83604, 0.7", "11.2976, 60.1006, 1.8167, 0.56", "11.463, 60.6388, 1.83207, 0.42", "11.5732, 61.2458, 1.90881, 0.28", "11.6091, 61.8621, 2.03293, 0.14", "11.5441, 62.9016, 2.29883, 0.28", "11.4019, 64.0342, 2.61948, 0.1", "11.2529, 65.1214, 2.9346, 0.1", "11.1891, 65.6584, 3.09191, 0.1", "11.1623, 65.9258, 3.16639, 0.14", "11.1189, 66.4697, 3.30597, 0.84", "11.0996, 67.0851, 3.44656, 0.7", "11.1233, 67.7025, 3.49573, 0.7", "11.1741, 68.332, 3.49573, 0.56", "11.2331, 68.949, 3.49573, 0.56", "11.2614, 69.2292, 3.49573, 0.7", "11.2911, 69.5092, 3.49573, 0.84", "11.3326, 70.0681, 3.49573, 0.56", "11.367, 70.687, 3.49573, 0.42", "11.3984, 71.2466, 3.49573, 0.56", "11.4403, 71.8748, 3.49573, 0.42", "11.4806, 72.4952, 3.49573, 0.28", "11.5056, 73.0579, 3.49573, 0.42", "11.5264, 73.689, 3.49573, 0.28", "11.5334, 74.0785, 3.49573, 0.42", "11.5334, 74.71, 3.49573, 0.56", "11.517, 75.2729, 3.49573, 0.56", "11.4727, 75.822, 3.49573, 0.42", "11.4003, 76.3805, 3.49573, 0.56", "11.2774, 76.9999, 3.49573, 0.7", "11.1394, 77.5441, 3.45053, 0.84", "11.1394, 77.5441, 3.45053, 0.7", "10.9748, 78.132, 3.32707, 0.28", "10.8432, 78.6615, 3.19886, 0.14", "10.7241, 79.1853, 3.0649, 0.1", "10.494, 80.2505, 2.70921, 0.14", "10.3941, 80.7701, 2.51622, 0.28", "10.3077, 81.338, 2.25395, 0.42", "10.2445, 81.8977, 1.99511, 0.56", "10.1924, 82.4088, 1.77126, 0.56", "10.0829, 83.4772, 1.36643, 0.56", "10.02, 84.0137, 1.21713, 0.56", "9.87366, 85.0119, 0.972455, 0.7", "9.67144, 86.0977, 0.660364, 1.12", "9.54587, 86.6212, 0.504632, 0.98", "9.40234, 87.1476, 0.364897, 0.84", "9.22769, 87.6704, 0.263335, 0.7", "9.03235, 88.1754, 0.162219, 0.56", "8.65233, 89.0653, -0.0901032, 0.42", "8.41176, 89.6044, -0.329385, 0.28", "8.19701, 90.0738, -0.521695, 0.14", "7.95694, 90.6323, -0.711888, 0.1", "7.76918, 91.1445, -0.788029, 0.1", "7.47435, 92.2502, -0.719678, 0.14", "7.47435, 92.2502, -0.719678, 0.28", "7.37397, 93.3457, -0.392505, 0.28", "7.36458, 93.9429, -0.18756, 0.42", "7.4241, 95.0483, 0.211104, 0.56", "7.48017, 95.6402, 0.423869, 0.56", "7.50804, 95.905, 0.515443, 0.7", "7.57368, 96.5037, 0.662134, 0.7", "7.63723, 97.1271, 0.740466, 0.56", "7.69336, 97.7443, 0.742353, 0.42", "7.73681, 98.3696, 0.664719, 0.28", "7.75925, 98.9244, 0.570767, 0.42", "7.76267, 99.5239, 0.406232, 0.28", "7.74858, 100.054, 0.215252, 0.14", "7.68677, 101.046, -0.200155, 0.1", "7.64836, 101.551, -0.424445, 0.1", "7.61238, 102.063, -0.649792, 0.14", "7.54541, 103.123, -1.08443, 0.28", "7.51215, 103.718, -1.29424, 0.14", "7.48707, 104.251, -1.43867, 0.28", "7.46331, 104.874, -1.54196, 0.42", "7.45215, 105.499, -1.62058, 0.42", "7.45378, 106.048, -1.65916, 0.28", "7.46775, 106.678, -1.65916, 0.42", "7.48722, 107.238, -1.65916, 0.56", "7.52489, 107.856, -1.65916, 0.56", "7.54097, 108.135, -1.65916, 0.7", "7.57184, 108.764, -1.65916, 0.56", "7.59468, 109.385, -1.65916, 0.42", "7.59688, 110.013, -1.70319, 0.56", "7.57829, 110.63, -1.7818, 0.7", "7.53712, 111.183, -1.8777, 0.84", "7.48372, 111.73, -1.9897, 0.7", "7.41175, 112.273, -2.12013, 0.84", "7.25002, 113.371, -2.40814, 0.7", "7.17693, 113.91, -2.55201, 0.56", "7.15225, 114.179, -2.62092, 0.56", "7.16037, 114.785, -2.75144, 0.7", "7.16037, 114.785, -2.75144, 0.56", "7.25261, 115.41, -2.74935, 0.14", "7.35532, 116.013, -2.65188, 0.1", "7.40788, 116.399, -2.56835, 0.1", "7.46182, 117.166, -2.37611, 0.1", "7.45818, 117.438, -2.30234, 0.14", "7.35836, 118.56, -2.09122, 0.28", "7.30825, 118.836, -2.06182, 0.42", "7.15055, 119.437, -2.10819, 0.56", "6.99871, 119.951, -2.2794, 0.7", "6.84888, 120.431, -2.50421, 0.56", "6.59136, 121.409, -3.04718, 0.42", "6.49821, 121.871, -3.35027, 0.28", "6.34505, 122.825, -3.9702, 0.42", "6.23986, 123.738, -4.53084, 0.56", "6.13102, 124.751, -5.05571, 0.56", "6.04709, 125.309, -5.31237, 0.42", "5.99381, 125.572, -5.39766, 0.28", "5.84432, 126.155, -5.55806, 0.1", "5.68371, 126.684, -5.66394, 0.1", "5.50524, 127.205, -5.77132, 0.1", "5.10617, 128.262, -6.11514, 0.1", "4.89164, 128.75, -6.28807, 0.1", "4.66759, 129.228, -6.45637, 0.14", "4.44693, 129.716, -6.62006, 0.28", "4.33804, 129.957, -6.71748, 0.42", "4.13457, 130.432, -6.90893, 0.56", "3.92159, 130.988, -7.09273, 0.84", "3.73844, 131.481, -7.26423, 0.7", "3.55963, 131.986, -7.43017, 0.56", "3.20535, 133.032, -7.73632, 0.42", "3.03647, 133.552, -7.87058, 0.28", "2.87278, 134.082, -7.95315, 0.14", "2.72843, 134.625, -7.98515, 0.28", "2.60746, 135.162, -7.9614, 0.42", "2.51357, 135.712, -7.88173, 0.56", "2.47824, 135.981, -7.81838, 0.56", "2.38825, 137.093, -7.54756, 0.56", "2.37231, 137.707, -7.40272, 0.42", "2.38964, 138.321, -7.31624, 0.56", "2.43402, 138.95, -7.28145, 0.42", "2.48862, 139.501, -7.27743, 0.28", "2.5361, 139.895, -7.30627, 0.14", "2.62437, 140.505, -7.44308, 0.14", "2.78424, 141.624, -7.76926, 0.28", "2.78424, 141.624, -7.76926, 0.42" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "0.514638, 19.1005, -0.148087, 1.26", "1.35753, 19.6525, -0.767411, 1.26", "1.64432, 19.8137, -0.991893, 1.4", "2.05788, 20.0695, -1.38117, 1.54", "2.41968, 20.3146, -1.73201, 1.4", "3.10162, 20.7811, -2.36185, 1.26", "3.85222, 21.3354, -3.0277, 1.12", "4.21478, 21.605, -3.36402, 0.98", "5.01294, 22.237, -4.12817, 0.84", "5.25866, 22.4448, -4.36281, 0.7", "5.59717, 22.7732, -4.66561, 0.56", "5.97872, 23.1892, -4.94462, 0.7", "6.34809, 23.6477, -5.16976, 0.56", "7.01556, 24.5401, -5.55194, 0.7", "7.17725, 24.7568, -5.63064, 0.7", "7.53016, 25.2426, -5.82033, 0.1", "7.7367, 25.5489, -5.94363, 0.1", "8.16502, 26.1804, -6.18824, 0.1", "8.16502, 26.1804, -6.18824, 0.14", "8.51, 26.9037, -6.18824, 0.1", "8.67348, 27.2572, -6.18824, 0.1", "8.8531, 27.6126, -6.18824, 0.1", "8.99165, 27.8578, -6.18824, 0.1", "9.32735, 28.3808, -6.28943, 0.7", "9.54967, 28.6864, -6.38354, 0.56", "10.0447, 29.28, -6.59509, 0.42", "10.2922, 29.5628, -6.69736, 0.28", "10.7038, 30.012, -6.85646, 0.42", "11.4051, 30.7349, -7.10832, 0.98", "11.8619, 31.1423, -7.25576, 0.84", "12.282, 31.4931, -7.37659, 0.7", "12.5888, 31.7364, -7.44932, 0.56", "13.0726, 32.1202, -7.53128, 0.42", "13.5508, 32.5168, -7.57531, 0.28", "13.9751, 32.8872, -7.57531, 0.42", "14.2704, 33.1544, -7.57531, 0.28", "14.7321, 33.5725, -7.57531, 0.14", "15.2133, 33.9797, -7.57531, 0.28", "15.5219, 34.2314, -7.57531, 0.14", "16.0088, 34.6198, -7.57531, 0.1", "16.4994, 35.0146, -7.57531, 0.14", "16.9398, 35.3613, -7.57531, 0.28", "17.3837, 35.7033, -7.57531, 0.42", "17.8738, 36.0963, -7.61861, 0.28", "18.3368, 36.4931, -7.74582, 0.14", "18.5972, 36.7467, -7.90868, 0.1", "18.8941, 37.0921, -8.3335, 0.1", "19.0032, 37.2351, -8.55022, 0.14", "19.4038, 37.8048, -9.49964, 0.84", "19.7541, 38.3109, -10.3827, 0.98", "20.1092, 38.8168, -11.264, 0.84", "20.8075, 39.7954, -12.9091, 0.84", "21.0346, 40.1064, -13.4073, 0.7", "21.1927, 40.3097, -13.6994, 0.56", "21.5252, 40.6687, -14.1073, 0.42", "21.9382, 41.0465, -14.3807, 0.28", "22.2507, 41.2817, -14.4555, 0.14", "22.4873, 41.4274, -14.4806, 0.28", "22.7314, 41.5598, -14.5267, 0.7", "23.2198, 41.8074, -14.6466, 0.56", "23.6986, 42.0497, -14.7826, 0.42", "24.1753, 42.3057, -14.9285, 0.28", "25.1071, 42.8603, -15.3045, 0.28", "25.4078, 43.0645, -15.4445, 0.56", "25.8588, 43.4102, -15.7157, 0.42", "26.2787, 43.7683, -16.0046, 0.28", "26.5381, 44.0111, -16.1951, 0.42", "27.2818, 44.7517, -16.7302, 0.56", "27.68, 45.158, -16.9839, 0.56", "28.4388, 45.9318, -17.4551, 0.56", "28.847, 46.339, -17.6908, 0.56", "29.11, 46.607, -17.8235, 0.7", "29.5256, 47.042, -17.985, 0.56", "29.934, 47.5034, -18.1177, 0.42", "30.1806, 47.8043, -18.2025, 0.28", "30.5141, 48.2331, -18.3512, 0.28", "30.8668, 48.6952, -18.5665, 0.1", "31.084, 48.9736, -18.7505, 0.1", "31.7438, 49.8254, -19.4342, 0.14", "31.9466, 50.0821, -19.6613, 0.28", "32.5692, 50.8128, -20.3442, 0.42", "32.9093, 51.1703, -20.7244, 0.28", "33.5299, 51.7084, -21.3605, 0.28", "33.7914, 51.8988, -21.5928, 0.56", "34.2505, 52.1714, -21.9137, 0.42", "34.6954, 52.3971, -22.169, 0.28", "35.6619, 52.8645, -22.5748, 0.14", "36.142, 53.1017, -22.7399, 0.28", "36.629, 53.3598, -22.8561, 0.14", "37.0998, 53.6283, -22.9542, 0.1", "37.5623, 53.9282, -23.0696, 0.14", "38.1805, 54.3971, -23.2314, 0.28", "38.4819, 54.6476, -23.3021, 0.14", "38.9374, 55.0527, -23.4303, 0.1", "39.2268, 55.3116, -23.5187, 0.1", "40.0874, 56.0713, -23.7839, 0.14", "40.558, 56.4559, -23.9201, 0.28", "41.0029, 56.7826, -24.0323, 0.42", "41.5067, 57.1341, -24.1349, 0.56", "41.9695, 57.4424, -24.205, 0.42", "42.4923, 57.7826, -24.2916, 0.28", "42.9563, 58.089, -24.3612, 0.14", "43.4571, 58.4392, -24.5129, 0.28", "43.926, 58.7949, -24.717, 0.42", "44.124, 58.9629, -24.8259, 0.56", "44.9014, 59.7005, -25.3155, 0.7", "45.2977, 60.0978, -25.5859, 0.84", "45.9569, 60.8106, -26.0548, 0.7", "46.341, 61.2261, -26.3152, 0.7", "46.7465, 61.6472, -26.5492, 0.56", "47.1777, 62.06, -26.7271, 0.42", "47.3928, 62.2367, -26.7696, 0.28", "47.7164, 62.4666, -26.8014, 0.1", "48.1966, 62.7556, -26.8014, 0.1", "48.6959, 63.0101, -26.8014, 0.1", "49.2063, 63.2442, -26.7572, 0.1", "49.7092, 63.4794, -26.6809, 0.14", "50.2687, 63.7471, -26.5721, 0.28", "50.7567, 63.9793, -26.4236, 0.28", "51.2348, 64.2118, -26.2378, 0.28", "52.2204, 64.6884, -25.8026, 0.28", "52.7358, 64.9416, -25.5612, 0.42", "53.1972, 65.1763, -25.3392, 0.28", "54.1309, 65.6688, -24.9045, 0.14", "54.5896, 65.9327, -24.7119, 0.1", "55.0471, 66.2178, -24.5586, 0.14", "55.5558, 66.5604, -24.4495, 0.28", "55.8722, 66.7966, -24.3979, 0.42", "56.3532, 67.2017, -24.354, 0.28", "56.8148, 67.6275, -24.3995, 0.28", "57.2602, 68.0557, -24.479, 0.42", "57.5458, 68.3246, -24.5474, 0.56", "57.9972, 68.734, -24.6766, 0.7", "58.4543, 69.1326, -24.8186, 0.7", "59.3264, 69.8784, -25.101, 0.84", "59.534, 70.0529, -25.1659, 0.98", "59.9575, 70.4049, -25.2843, 0.7", "60.2644, 70.6489, -25.3539, 0.56", "60.7572, 71.0214, -25.4339, 0.42", "61.2649, 71.3798, -25.4768, 0.28", "61.79, 71.7374, -25.4308, 0.14", "62.2995, 72.0872, -25.3528, 0.1", "62.7576, 72.3958, -25.2579, 0.14", "63.2057, 72.7006, -25.1448, 0.28", "63.6485, 73.0175, -25.012, 0.42", "64.5687, 73.7248, -24.7896, 0.56", "64.8654, 73.98, -24.7399, 0.56", "65.0586, 74.1708, -24.7556, 0.56", "65.4706, 74.6146, -24.8966, 0.56", "65.721, 74.8925, -25.033, 0.42", "66.4596, 75.6696, -25.5215, 0.28", "66.7143, 75.9165, -25.7024, 0.14", "67.5226, 76.615, -26.2085, 0.1", "67.9283, 76.9252, -26.4223, 0.1", "68.4236, 77.2433, -26.6259, 0.14", "68.9072, 77.5139, -26.7267, 0.28", "69.4672, 77.7866, -26.7259, 0.42", "69.9795, 78.0066, -26.6687, 0.56", "70.4898, 78.2163, -26.5555, 0.42", "70.9992, 78.4321, -26.466, 0.28", "72.0417, 78.8948, -26.3381, 0.14", "72.5428, 79.1455, -26.3504, 0.28", "73.0184, 79.4166, -26.4328, 0.42", "73.3347, 79.6297, -26.5336, 0.56", "74.2172, 80.3123, -26.9229, 0.42", "74.6444, 80.6723, -27.1985, 0.28", "75.3914, 81.3514, -27.8058, 0.14", "75.6364, 81.587, -28.0134, 0.1", "76.0208, 81.9651, -28.3253, 0.1", "76.426, 82.3557, -28.6075, 0.1", "77.1187, 83.0325, -28.9817, 0.14", "77.3827, 83.2924, -29.1279, 0.1", "77.7938, 83.7211, -29.3389, 0.1", "78.196, 84.156, -29.5522, 0.1", "78.5717, 84.5892, -29.7955, 0.1", "78.7967, 84.8759, -29.9561, 0.14", "79.4434, 85.7531, -30.4037, 0.28", "79.7599, 86.2196, -30.6884, 0.14", "80.0444, 86.6803, -30.9963, 0.1", "80.4939, 87.4911, -31.5432, 0.1", "80.7376, 87.9529, -31.8771, 0.1", "80.9763, 88.4294, -32.2138, 0.1", "81.4138, 89.3501, -32.8115, 0.14", "81.5585, 89.654, -33.0244, 0.28", "81.7794, 90.1312, -33.3561, 0.42", "82.2195, 91.0604, -33.9385, 0.28", "82.4576, 91.5483, -34.2376, 0.14", "82.616, 91.8536, -34.4384, 0.1", "83.1595, 92.8267, -35.0596, 0.14", "83.333, 93.1264, -35.2563, 0.28", "83.6827, 93.7249, -35.6304, 0.42", "83.8687, 94.0418, -35.7963, 0.56", "84.3743, 94.8981, -36.2046, 0.56", "84.6708, 95.4177, -36.4069, 0.84", "84.8648, 95.744, -36.5271, 0.7", "85.1869, 96.2327, -36.7311, 0.56", "85.5469, 96.7058, -36.9407, 0.42", "85.9377, 97.1602, -37.134, 0.56", "86.2092, 97.4334, -37.2352, 0.7", "87.0847, 98.1086, -37.5379, 0.7", "87.5487, 98.389, -37.68, 0.7", "88.0463, 98.6196, -37.8081, 0.84", "88.2983, 98.7208, -37.8827, 1.26", "88.7984, 98.8974, -38.0314, 1.12", "89.3099, 99.0856, -38.1733, 0.98", "89.8146, 99.2985, -38.2918, 0.84", "90.3108, 99.5265, -38.4177, 0.7", "91.3383, 100.047, -38.6824, 0.56", "91.8167, 100.313, -38.8007, 0.42", "92.346, 100.631, -38.9249, 0.28", "92.8679, 100.952, -39.0372, 0.14", "93.3298, 101.259, -39.1196, 0.1", "93.8338, 101.622, -39.2196, 0.1", "94.3005, 102.009, -39.363, 0.14", "94.4838, 102.194, -39.4699, 0.28", "94.6399, 102.387, -39.6037, 0.42", "94.9355, 102.826, -39.9258, 0.7", "95.3719, 103.596, -40.5385, 0.56", "95.8123, 104.449, -41.2298, 0.56", "95.9608, 104.731, -41.4538, 0.42", "96.2882, 105.313, -41.8805, 0.28", "96.4724, 105.609, -42.0727, 0.14", "97.1405, 106.556, -42.5994, 0.1", "97.3758, 106.856, -42.7156, 0.1", "97.7309, 107.274, -42.8286, 0.1", "98.1373, 107.743, -42.9364, 0.1", "98.5487, 108.204, -43.0157, 0.1", "98.819, 108.502, -43.0439, 0.14", "99.2352, 108.963, -43.0863, 0.28", "99.7514, 109.55, -43.1832, 0.14", "100.011, 109.845, -43.2492, 0.1", "100.423, 110.296, -43.3723, 0.14", "100.855, 110.744, -43.509, 0.1", "101.605, 111.475, -43.7419, 0.1", "102.058, 111.89, -43.8788, 0.1", "102.479, 112.241, -43.9961, 0.1", "102.955, 112.625, -44.112, 0.1", "103.443, 113.013, -44.203, 0.1", "103.929, 113.399, -44.2529, 0.14", "104.149, 113.575, -44.2529, 0.28", "104.364, 113.757, -44.2529, 0.42", "104.653, 114.019, -44.2529, 0.56", "105.099, 114.46, -44.3052, 0.42", "105.516, 114.914, -44.3975, 0.28", "105.904, 115.386, -44.5156, 0.14", "106.135, 115.705, -44.5996, 0.1", "106.468, 116.214, -44.7364, 0.1", "107.049, 117.208, -45.0008, 0.1", "107.219, 117.549, -45.0856, 0.1", "107.535, 118.253, -45.3001, 0.1", "107.779, 118.792, -45.4839, 0.1", "107.95, 119.131, -45.6052, 0.1", "108.236, 119.635, -45.8291, 0.1", "108.548, 120.101, -46.1164, 0.1", "109.051, 120.745, -46.7575, 0.1", "109.307, 121.02, -47.1737, 0.1", "109.564, 121.261, -47.6129, 0.1", "110.07, 121.683, -48.4602, 0.1", "110.605, 122.088, -49.3021, 0.14", "111.232, 122.53, -50.1957, 0.1", "111.838, 122.97, -50.9156, 0.1", "112.239, 123.258, -51.3085, 0.1", "112.654, 123.535, -51.5477, 0.1", "113.192, 123.847, -51.5674, 0.1", "113.673, 124.108, -51.4312, 0.1", "114.643, 124.61, -50.9909, 0.1", "115.098, 124.836, -50.7538, 0.1", "116.043, 125.276, -50.2733, 0.1", "116.275, 125.381, -50.1591, 0.1", "116.803, 125.606, -49.902, 0.1", "117.283, 125.808, -49.6931, 0.1", "117.79, 126.008, -49.5543, 0.1", "118.301, 126.216, -49.4523, 0.1", "118.301, 126.216, -49.4523, 0.14" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.84445, -55.8351, 6.41051, 0.98", "4.10765, -56.3221, 6.41051, 0.98", "4.3854, -56.8797, 6.41051, 0.84", "4.62201, -57.3908, 6.41051, 0.98", "4.86996, -57.9622, 6.41051, 1.12", "4.97711, -58.2226, 6.41051, 1.68", "5.18234, -58.7441, 6.41051, 1.54", "5.3624, -59.2749, 6.41051, 1.4", "5.51621, -59.8167, 6.41051, 1.26", "5.65379, -60.36, 6.41051, 1.12", "5.76616, -60.9104, 6.45092, 1.26", "5.86544, -61.4477, 6.52049, 1.12", "5.96809, -62.0503, 6.67159, 0.98", "6.05368, -62.5743, 6.85096, 0.84", "6.13487, -63.0885, 7.06582, 0.7", "6.30074, -64.1392, 7.5709, 0.84", "6.38313, -64.6332, 7.82852, 0.84", "6.57225, -65.6547, 8.31323, 0.7", "6.68385, -66.1668, 8.51166, 0.84", "6.68385, -66.1668, 8.51166, 0.98", "6.76383, -66.4264, 8.52539, 1.12", "6.95122, -66.9572, 8.5058, 0.98", "7.3414, -68.0343, 8.46506, 0.84", "7.53382, -68.56, 8.43825, 0.7", "7.76142, -69.1471, 8.44487, 0.56", "7.96917, -69.6676, 8.43687, 0.7", "8.39655, -70.7135, 8.23573, 0.84", "8.60617, -71.2175, 8.10854, 0.98", "8.81481, -71.7223, 8.01812, 0.84", "9.04701, -72.3049, 7.95526, 0.98", "9.40523, -73.2768, 7.92263, 1.12", "10.0904, -75.1755, 7.97993, 0.98", "10.4429, -76.1521, 7.94358, 0.84", "10.8111, -77.2163, 8.15785, 0.84", "11.0938, -78.1236, 8.80143, 0.98", "11.2011, -78.4986, 9.20384, 0.84", "11.3038, -78.857, 9.62597, 0.98" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.84445, -55.8351, 6.41051, 1.82", "3.23589, -56.7238, 6.88783, 1.82", "2.93767, -57.2063, 7.14524, 1.68", "2.76361, -57.5042, 7.34405, 1.54", "2.44107, -58.104, 7.74959, 1.4", "2.32543, -58.3191, 7.88978, 1.26", "1.81042, -59.2159, 8.45421, 0.1", "1.53037, -59.7057, 8.73381, 0.1", "1.02007, -60.5261, 9.21231, 0.1", "0.708942, -60.9913, 9.47876, 0.14", "0.360587, -61.4462, 9.72309, 0.28", "-0.00121133, -61.8423, 9.89455, 0.42", "-0.286467, -62.1116, 9.96329, 0.28", "-0.724036, -62.4567, 10.0226, 0.14", "-0.954128, -62.6169, 10.0492, 0.28", "-1.40063, -62.907, 10.224, 0.56", "-1.7892, -63.2076, 10.4993, 0.56", "-1.7892, -63.2076, 10.4993, 0.56", "-1.7892, -63.2076, 10.4993, 0.56", "-2.30792, -63.853, 11.3374, 0.56", "-2.75323, -64.4671, 12.1011, 0.42", "-2.98253, -64.8535, 12.5308, 0.28", "-3.38574, -65.6629, 13.2916, 0.42", "-3.51574, -65.9576, 13.5105, 0.28", "-3.60374, -66.1917, 13.64, 0.42", "-3.71538, -66.5594, 13.7617, 0.7", "-3.8617, -67.1422, 13.9138, 0.56", "-3.9679, -67.7442, 14.0723, 0.42", "-4.00732, -68.3303, 14.2702, 0.28", "-4.00414, -68.5857, 14.3888, 0.14", "-4.00414, -68.5857, 14.3888, 0.28", "-3.86368, -69.4772, 14.9019, 0.1", "-3.74645, -69.9527, 15.18, 0.14", "-3.44733, -70.9158, 15.7251, 0.1", "-3.26975, -71.3931, 15.9657, 0.1", "-3.07599, -71.8805, 16.1632, 0.1", "-2.86129, -72.3707, 16.3048, 0.1", "-2.59526, -72.9358, 16.3896, 0.1", "-2.46611, -73.1852, 16.4102, 0.28", "-2.16768, -73.732, 16.4102, 0.14", "-1.89178, -74.2087, 16.4102, 0.1", "-1.56916, -74.758, 16.4102, 0.1", "-1.28694, -75.231, 16.4102, 0.1", "-0.958279, -75.7749, 16.3655, 0.14", "-0.680765, -76.2459, 16.2982, 0.1", "-0.391476, -76.7875, 16.1936, 0.14", "-0.149976, -77.2834, 16.0796, 0.1", "0.0765154, -77.8463, 15.9389, 0.1", "0.444312, -78.9387, 15.6608, 0.1", "0.543669, -79.3096, 15.5705, 0.28", "0.676905, -79.9084, 15.4284, 0.14", "0.765931, -80.448, 15.3062, 0.1", "0.841977, -81.0525, 15.192, 0.1", "0.886908, -81.6073, 15.1268, 0.1", "0.933955, -82.1686, 15.1268, 0.14", "0.977903, -82.4467, 15.1268, 0.28", "1.03854, -82.7217, 15.1268, 0.28", "1.17698, -83.2676, 15.1268, 0.42", "1.25401, -83.5357, 15.1268, 0.42", "1.40686, -84.0678, 15.1268, 0.28", "1.54739, -84.6104, 15.1268, 0.14", "1.68079, -85.1575, 15.1268, 0.1", "1.79717, -85.7058, 15.1268, 0.14", "1.90113, -86.2593, 15.1268, 0.1", "1.9853, -86.812, 15.0877, 0.1", "2.06188, -87.4221, 15.0097, 0.1", "2.12231, -87.9713, 14.9157, 0.1", "2.18707, -88.587, 14.7913, 0.1", "2.23566, -89.1315, 14.7035, 0.1", "2.31483, -90.304, 14.5698, 0.1", "2.33985, -90.8655, 14.5349, 0.1", "2.35236, -91.4258, 14.5312, 0.1", "2.34329, -91.9787, 14.5584, 0.14", "2.3053, -93.0485, 14.6708, 0.1", "2.27355, -93.6713, 14.7705, 0.1", "2.23283, -94.2652, 14.9432, 0.14", "2.18344, -94.8644, 15.1364, 0.1", "2.13257, -95.4365, 15.3694, 0.1", "2.11569, -95.6909, 15.4826, 0.14", "2.10831, -96.2071, 15.7077, 0.28", "2.13559, -97.1723, 16.1834, 0.1", "2.1658, -97.6559, 16.4453, 0.1", "2.26835, -98.6844, 17.0181, 0.1", "2.33362, -99.1767, 17.2779, 0.1", "2.40752, -99.6779, 17.5175, 0.1", "2.45114, -99.9296, 17.6371, 0.14", "2.45114, -99.9296, 17.6371, 0.28", "2.57173, -100.409, 17.8858, 0.28", "2.70779, -100.883, 18.1517, 0.28", "2.70779, -100.883, 18.1517, 0.42", "2.98752, -101.693, 18.7395, 0.1", "3.13731, -102.12, 19.0702, 0.1", "3.44259, -102.975, 19.7721, 0.1", "3.58993, -103.374, 20.1371, 0.1", "3.69588, -103.65, 20.4037, 0.1", "3.69588, -103.65, 20.4037, 0.1" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.883515, -32.3095, 0.228391, 0.56", "-1.159, -32.5826, -0.176099, 0.56", "-1.48449, -32.8777, -0.627168, 0.42", "-1.81561, -33.1486, -1.07994, 0.28", "-2.46421, -33.6096, -1.94874, 0.7", "-3.06008, -33.9133, -2.79211, 0.84", "-3.63434, -33.998, -3.69856, 0.98", "-4.0895, -33.8217, -4.73727, 1.12", "-4.31076, -33.6471, -5.30241, 1.26", "-4.51209, -33.451, -5.79045, 1.12", "-4.94378, -33.0372, -6.64002, 0.98", "-5.50359, -32.6513, -7.60213, 0.84", "-5.99519, -32.4141, -8.44003, 0.7", "-6.2798, -32.3256, -8.91789, 0.56", "-6.57291, -32.2648, -9.39171, 0.56", "-6.86126, -32.1982, -9.8596, 0.56", "-7.39549, -32.0042, -10.7721, 0.7", "-7.50927, -31.9408, -11.0187, 0.84", "-7.75752, -31.7679, -11.5717, 1.26", "-8.18931, -31.4436, -12.5791, 1.12", "-8.63297, -31.0922, -13.6169, 0.98", "-9.03036, -30.7734, -14.5193, 1.12", "-9.47272, -30.469, -15.3629, 0.98", "-10.0411, -30.2123, -16.3192, 0.84", "-10.5888, -30.4299, -16.5427, 0.7", "-11.6095, -31.0131, -16.6635, 0.56", "-11.9426, -31.1889, -16.7628, 0.42", "-12.3609, -31.2727, -17.2259, 0.56", "-12.4913, -31.2678, -17.4755, 0.56", "-12.9604, -31.2012, -18.5581, 0.56", "-13.2913, -31.0933, -19.5751, 0.42", "-13.5482, -30.9605, -20.612, 0.28", "-13.7574, -30.816, -21.6546, 0.14", "-13.9392, -30.6802, -22.6285, 0.1", "-14.1446, -30.5463, -23.6766, 0.84", "-14.5517, -30.3562, -25.6457, 0.7", "-15.0122, -30.2144, -27.6071, 0.56", "-15.2712, -30.181, -28.5724, 0.7", "-15.4296, -30.1803, -29.1, 0.56", "-15.6235, -30.1896, -29.6287, 0.56", "-16.1119, -30.23, -30.665, 0.42", "-16.4483, -30.2495, -31.1163, 0.28", "-17.2639, -30.1859, -31.8108, 0.42", "-17.4761, -30.1111, -31.9757, 0.56", "-17.9114, -29.8374, -32.3403, 0.28", "-18.3276, -29.4968, -32.6677, 0.14", "-18.7369, -29.1431, -32.9767, 0.28", "-19.1664, -28.8116, -33.2962, 0.42", "-19.9799, -28.3182, -33.9356, 0.56", "-19.9799, -28.3182, -33.9356, 0.7", "-20.3668, -28.2994, -34.3445, 2.1", "-21.1, -28.4688, -35.2092, 1.96", "-21.4112, -28.6372, -35.635, 1.82", "-21.9694, -29.0226, -36.421, 1.68", "-22.3067, -29.2996, -36.885, 0.7", "-22.8967, -29.8302, -37.7536, 0.56", "-23.0727, -30.0224, -38.0547, 0.56", "-23.5257, -30.6751, -38.9238, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.883515, -32.3095, 0.228391, 0.7", "-0.896498, -32.8726, 0.228391, 0.7", "-0.905807, -33.2669, 0.228391, 0.56", "-0.908169, -33.8966, 0.228391, 0.42", "-0.900458, -34.4543, 0.173912, 0.28", "-0.882504, -35.0724, 0.130416, 0.14", "-0.855173, -35.632, 0.143533, 0.1", "-0.804186, -36.2562, 0.208796, 0.1", "-0.743411, -36.7956, 0.302411, 0.1", "-0.607074, -37.7988, 0.535402, 0.14", "-0.457443, -38.7909, 0.804979, 0.42", "-0.264734, -39.8753, 1.12284, 0.28", "-0.174796, -40.4062, 1.27825, 0.14", "-0.07285, -40.9955, 1.44123, 0.1", "0.0175658, -41.5406, 1.53471, 0.14", "0.107542, -42.0965, 1.54168, 0.1", "0.184506, -42.6358, 1.40977, 0.1", "0.246885, -43.2038, 1.16971, 0.1", "0.29257, -43.7038, 0.920573, 0.1", "0.361571, -44.7124, 0.377371, 0.1", "0.394182, -45.5856, -0.10894, 0.14", "0.398443, -45.9315, -0.306274, 0.56", "0.402193, -46.4789, -0.601029, 0.42", "0.408892, -46.9846, -0.842394, 0.28", "0.413656, -47.5815, -1.04276, 0.42", "0.424067, -47.8614, -1.0725, 0.56", "0.424067, -47.8614, -1.0725, 0.42", "0.518255, -48.4041, -1.0725, 0.84", "0.518255, -48.4041, -1.0725, 0.7", "0.597677, -48.6722, -1.10555, 0.28", "0.777995, -49.192, -1.21262, 0.14", "0.963558, -49.7075, -1.34307, 0.1", "1.15052, -50.2167, -1.48376, 0.1", "1.33958, -50.7263, -1.63148, 0.1", "1.73361, -51.7952, -1.93156, 0.14", "1.82542, -52.0456, -2.02203, 0.28", "1.91423, -52.2882, -2.12719, 0.1", "2.08958, -52.7744, -2.32563, 0.1", "2.27574, -53.2754, -2.49438, 0.1", "2.46829, -53.7937, -2.60154, 0.1", "2.84778, -54.7593, -2.6392, 0.14", "2.84778, -54.7593, -2.6392, 0.1", "3.25998, -55.712, -2.59891, 0.28", "3.50324, -56.2833, -2.5496, 0.14", "3.71463, -56.8015, -2.48591, 0.1", "3.93445, -57.3781, -2.40149, 0.1", "4.02056, -57.6431, -2.36036, 0.14", "4.11764, -58.0281, -2.32957, 0.28", "4.22151, -58.569, -2.32957, 0.14", "4.28702, -59.1284, -2.32957, 0.1", "4.32126, -59.6878, -2.32957, 0.14", "4.32648, -60.3175, -2.32957, 0.1", "4.32239, -60.9391, -2.32957, 0.1", "4.32231, -61.5023, -2.32957, 0.1", "4.31633, -62.1327, -2.29198, 0.1", "4.31671, -62.7478, -2.21591, 0.1", "4.33998, -63.3681, -2.09955, 0.14", "4.36909, -63.6402, -2.03297, 0.28", "4.41557, -63.9075, -1.95765, 0.42", "4.63594, -64.8813, -1.67324, 0.56", "4.7884, -65.4149, -1.57673, 0.42", "4.95519, -65.9388, -1.54343, 0.28", "5.12621, -66.4701, -1.61833, 0.14", "5.28708, -66.9972, -1.72061, 0.28", "5.44073, -67.5317, -1.80906, 0.14", "5.75373, -68.6193, -1.99185, 0.1", "5.91926, -69.1551, -2.04349, 0.1", "6.2746, -70.2399, -2.06236, 0.1", "6.61083, -71.2209, -1.99919, 0.1", "6.98923, -72.2919, -1.84526, 0.1", "7.1864, -72.8075, -1.73318, 0.1", "7.39565, -73.358, -1.5303, 0.14", "7.5786, -73.8476, -1.32819, 0.28", "7.75701, -74.3395, -1.11979, 0.14", "7.93419, -74.8484, -0.965591, 0.1", "8.11443, -75.4347, -0.823529, 0.14", "8.38394, -76.4449, -0.573537, 0.1", "8.50561, -76.9799, -0.446543, 0.1", "8.60956, -77.5186, -0.331935, 0.1", "8.70102, -78.066, -0.235997, 0.1", "8.79269, -78.6761, -0.159163, 0.14", "8.86096, -79.2339, -0.12214, 0.1", "8.93236, -79.7898, -0.12214, 0.1", "9.00704, -80.4137, -0.163305, 0.1", "9.07164, -80.9565, -0.230389, 0.14", "9.14288, -81.5041, -0.326297, 0.28", "9.23807, -82.1124, -0.458443, 0.28", "9.32948, -82.6494, -0.589901, 0.14", "9.52227, -83.6382, -0.843773, 0.28", "9.58125, -83.8957, -0.908609, 0.56", "9.72102, -84.4132, -1.07238, 0.42", "9.87937, -84.924, -1.24895, 0.28", "10.054, -85.428, -1.42088, 0.14", "10.235, -85.9383, -1.57594, 0.1", "10.4188, -86.4529, -1.70038, 0.1", "10.8073, -87.5311, -1.97373, 0.14", "10.9942, -88.0447, -2.10943, 0.28", "11.1761, -88.5482, -2.23915, 0.14", "11.3677, -89.0531, -2.39919, 0.28", "11.5601, -89.551, -2.56978, 0.42", "11.5601, -89.551, -2.56978, 0.56", "11.6556, -89.789, -2.68623, 0.56", "11.8406, -90.244, -2.95613, 0.42", "12.2197, -91.1869, -3.55926, 0.28", "12.3952, -91.6366, -3.84396, 0.14", "12.7121, -92.4901, -4.41808, 0.1", "12.8271, -92.7928, -4.64998, 0.56", "12.9882, -93.2161, -4.96343, 0.42", "13.1533, -93.6615, -5.26095, 0.56", "13.319, -94.1397, -5.50792, 0.7", "13.6821, -95.1042, -6.00998, 0.56", "14.0539, -95.9809, -6.51167, 0.42", "14.4415, -96.7821, -7.04761, 0.42", "14.6361, -97.1895, -7.37969, 0.56", "14.8198, -97.5882, -7.72805, 0.56", "15.1708, -98.4484, -8.4584, 0.42", "15.4913, -99.3533, -9.14127, 0.28", "15.5594, -99.5776, -9.29737, 0.98", "15.8227, -100.522, -9.95033, 0.84", "15.9411, -100.994, -10.233, 0.7", "16.0651, -101.559, -10.4878, 0.56", "16.1665, -102.096, -10.6247, 0.42", "16.2587, -102.638, -10.6557, 0.28", "16.3586, -103.191, -10.6229, 0.14", "16.4667, -103.733, -10.528, 0.28", "16.5783, -104.273, -10.4159, 0.14", "16.6961, -104.808, -10.2944, 0.1", "16.9411, -105.928, -10.0328, 0.1", "17.0688, -106.46, -9.91127, 0.1", "17.2178, -106.989, -9.7995, 0.1", "17.3873, -107.517, -9.70157, 0.1", "17.5662, -108.042, -9.6251, 0.1", "17.754, -108.561, -9.58172, 0.1", "17.9802, -109.15, -9.58172, 0.1", "18.1992, -109.733, -9.58172, 0.1", "18.2948, -109.998, -9.58172, 0.1", "18.4285, -110.364, -9.58172, 0.84", "18.6184, -110.891, -9.58172, 0.7", "18.8146, -111.419, -9.58172, 0.56", "19.0092, -111.944, -9.58172, 0.42", "19.2068, -112.461, -9.58172, 0.28", "19.4324, -113.048, -9.62781, 0.14", "19.6159, -113.555, -9.74313, 0.1", "19.7786, -114.115, -9.9979, 0.14", "19.8238, -114.343, -10.1397, 0.7", "19.8656, -114.777, -10.4919, 0.56", "19.8815, -115.605, -11.3365, 0.42", "19.8402, -116.389, -12.2126, 0.28", "19.7688, -117.072, -13.0416, 0.14", "19.7121, -117.474, -13.5249, 0.1", "19.6053, -118.248, -14.4049, 0.1", "19.5139, -118.977, -15.1388, 0.1", "19.4775, -119.485, -15.5123, 0.14", "19.4618, -120.575, -15.9555, 0.28", "19.5079, -121.589, -16.1717, 0.1", "19.5585, -122.139, -16.2833, 0.1", "19.7006, -123.245, -16.5513, 0.1", "19.7813, -123.774, -16.7256, 0.1", "19.8713, -124.326, -16.9978, 0.14", "20.0316, -125.296, -17.5903, 0.28", "20.1779, -126.216, -18.2574, 0.42", "20.289, -127.034, -18.8888, 0.56", "20.3165, -127.252, -19.0605, 0.7", "20.3576, -127.573, -19.2766, 0.28", "20.4292, -128.059, -19.5518, 0.14", "20.4928, -128.578, -19.7532, 0.1", "20.5484, -129.174, -19.9162, 0.1", "20.5834, -129.72, -20.0382, 0.1", "20.6017, -130.268, -20.1655, 0.1", "20.603, -131.364, -20.5018, 0.14", "20.5917, -131.739, -20.6353, 0.1", "20.5655, -132.319, -20.859, 0.1", "20.5317, -132.904, -21.0873, 0.1", "20.4932, -133.487, -21.3002, 0.1", "20.4161, -134.588, -21.7239, 0.1", "20.3916, -135.114, -21.9148, 0.14", "20.3917, -135.368, -22.0127, 0.1", "20.4191, -135.956, -22.2421, 0.1", "20.4567, -136.47, -22.4684, 0.1", "20.5627, -137.541, -22.9456, 0.1", "20.6191, -138.042, -23.1962, 0.14", "20.6746, -138.523, -23.4796, 0.28", "20.7457, -138.993, -23.7817, 0.28", "20.9377, -139.957, -24.4291, 0.14", "21.0434, -140.405, -24.7548, 0.1", "21.2679, -141.199, -25.3194, 0.14", "21.3289, -141.42, -25.4778, 0.56", "21.4688, -141.931, -25.818, 0.56", "21.5897, -142.409, -26.0846, 0.42", "21.8172, -143.454, -26.5013, 0.56", "21.9087, -143.981, -26.6684, 0.42", "21.9824, -144.583, -26.7977, 0.28", "22.0268, -145.133, -26.8961, 0.14", "22.0509, -145.756, -26.9814, 0.1", "22.0704, -146.376, -27.0294, 0.1", "22.0873, -146.657, -27.0294, 0.1", "22.1546, -147.285, -27.0294, 0.1", "22.2622, -147.837, -27.0294, 0.14", "22.3343, -148.107, -27.0294, 0.56", "22.5141, -148.63, -27.0294, 0.42", "22.7405, -149.209, -27.0779, 0.28", "22.9426, -149.729, -27.1537, 0.14", "23.1648, -150.3, -27.2659, 0.1", "23.3401, -150.819, -27.3844, 0.1", "23.4927, -151.346, -27.5122, 0.1", "23.7467, -152.408, -27.8598, 0.1", "23.8172, -152.775, -27.9988, 0.84", "23.9047, -153.282, -28.2029, 0.7", "23.9958, -153.862, -28.4341, 0.56", "24.0842, -154.384, -28.6269, 0.42", "24.3083, -155.456, -28.9655, 0.28", "24.4406, -155.977, -29.0874, 0.14", "24.5988, -156.506, -29.1997, 0.1", "24.7799, -157.027, -29.2944, 0.1", "24.9848, -157.547, -29.3672, 0.1", "25.213, -158.125, -29.4139, 0.1", "25.4176, -158.649, -29.4139, 0.1", "25.605, -159.178, -29.4139, 0.1", "25.7922, -159.772, -29.4139, 0.14", "25.8666, -160.042, -29.4369, 0.28", "25.954, -160.417, -29.4951, 0.28", "26.058, -160.956, -29.6082, 0.14", "26.168, -161.558, -29.7569, 0.1", "26.2639, -162.092, -29.8977, 0.1", "26.4546, -163.179, -30.1972, 0.14", "26.5022, -163.444, -30.2704, 0.28", "26.6083, -163.978, -30.4113, 0.1", "26.7158, -164.514, -30.536, 0.1", "26.8303, -165.046, -30.6816, 0.14", "26.8303, -165.046, -30.6816, 0.28", "26.8889, -165.426, -30.7711, 0.28", "26.9668, -165.964, -30.9157, 0.28", "27.0416, -166.483, -31.1149, 0.42", "27.2024, -167.52, -31.5782, 0.42", "27.2713, -167.863, -31.7699, 0.1", "27.3815, -168.322, -32.0527, 0.1", "27.5098, -168.78, -32.3494, 0.1", "27.8087, -169.709, -32.9543, 0.1", "27.9743, -170.166, -33.2323, 0.1", "28.3893, -171.15, -33.7383, 0.1", "28.4983, -171.383, -33.8471, 0.1", "28.7337, -171.844, -34.0682, 0.1", "29.0067, -172.357, -34.2936, 0.14", "29.2609, -172.831, -34.4592, 0.1", "29.531, -173.353, -34.6672, 0.1", "29.7621, -173.826, -34.8586, 0.1", "30.2465, -174.803, -35.3131, 0.1", "30.479, -175.257, -35.5453, 0.1", "30.7138, -175.701, -35.7795, 0.1", "31.2372, -176.603, -36.2555, 0.14", "31.3766, -176.823, -36.3621, 0.28", "31.5827, -177.119, -36.5094, 0.1", "31.9336, -177.596, -36.7229, 0.1", "32.3039, -178.058, -36.938, 0.1", "32.5495, -178.346, -37.0617, 0.1", "32.9484, -178.799, -37.2157, 0.1", "33.6181, -179.551, -37.473, 0.1", "33.7948, -179.759, -37.5406, 0.1", "34.1717, -180.236, -37.6787, 0.1", "34.53, -180.732, -37.7939, 0.1", "34.8692, -181.256, -37.8777, 0.1", "35.0688, -181.59, -37.8765, 0.14", "35.3372, -182.08, -37.8008, 0.56", "35.5788, -182.575, -37.6994, 0.42", "35.7767, -183.088, -37.5767, 0.28", "35.9365, -183.608, -37.4442, 0.14", "36.1866, -184.599, -37.269, 0.1", "36.3084, -185.146, -37.2587, 0.1", "36.4144, -185.694, -37.3296, 0.1", "36.5052, -186.299, -37.4886, 0.1", "36.5681, -186.815, -37.6778, 0.1", "36.6605, -187.863, -38.1346, 0.1", "36.7351, -188.894, -38.63, 0.1", "36.7512, -189.246, -38.8147, 0.56", "36.7715, -189.794, -39.104, 0.42", "36.795, -190.296, -39.3519, 0.28", "36.8247, -190.877, -39.5938, 0.14", "36.8529, -191.422, -39.7191, 0.1", "36.9355, -192.589, -39.8419, 0.14", "36.9839, -193.147, -39.871, 0.28", "37.039, -193.705, -39.8711, 0.14", "37.0877, -194.265, -39.8418, 0.1", "37.1706, -195.439, -39.7984, 0.1", "37.1882, -196.001, -39.7778, 0.1", "37.1948, -196.632, -39.7469, 0.1", "37.1769, -197.185, -39.7592, 0.1", "37.1314, -197.812, -39.819, 0.1", "37.0137, -198.867, -39.9975, 0.14", "36.9621, -199.242, -40.0876, 0.28", "36.8592, -199.781, -40.2036, 0.14", "36.7306, -200.387, -40.3148, 0.28", "36.5912, -200.988, -40.395, 0.42", "36.5092, -201.377, -40.4224, 0.28", "36.3934, -201.986, -40.4224, 0.14", "36.2645, -202.776, -40.4224, 0.1", "36.2259, -203.046, -40.4224, 0.1", "36.1639, -203.672, -40.4224, 0.1", "36.1426, -204.232, -40.4224, 0.1", "36.1626, -204.852, -40.4224, 0.1", "36.2208, -205.409, -40.4224, 0.1", "36.2627, -205.688, -40.4224, 0.1", "36.3076, -205.963, -40.4224, 0.1", "36.4109, -206.517, -40.4224, 0.1", "36.5064, -207.067, -40.4681, 0.14", "36.6014, -207.616, -40.5484, 0.28", "36.6995, -208.22, -40.6618, 0.14", "36.787, -208.764, -40.7764, 0.1", "36.8725, -209.304, -40.902, 0.1", "37.0337, -210.448, -41.124, 0.1", "37.1067, -210.998, -41.2015, 0.1", "37.183, -211.555, -41.2414, 0.1", "37.2576, -212.11, -41.2344, 0.1", "37.2576, -212.11, -41.2344, 0.1", "37.3609, -213.161, -41.0418, 0.1", "37.4132, -213.702, -40.9057, 0.1", "37.4616, -214.25, -40.7851, 0.1", "37.5078, -214.877, -40.7261, 0.1", "37.5502, -215.429, -40.7368, 0.14", "37.6086, -216.054, -40.8065, 0.28", "37.6724, -216.602, -40.9173, 0.42", "37.7319, -217.146, -41.0371, 0.28", "37.8642, -218.287, -41.2956, 0.14", "37.9384, -218.829, -41.4161, 0.1", "38.0192, -219.372, -41.5271, 0.1", "38.1133, -219.919, -41.6223, 0.1", "38.2116, -220.528, -41.7029, 0.1", "38.3013, -221.082, -41.7441, 0.14", "38.3973, -221.634, -41.7441, 0.1", "38.4822, -222.191, -41.7441, 0.14", "38.5612, -222.746, -41.7441, 0.28", "38.6166, -223.132, -41.7441, 0.1", "38.7039, -223.685, -41.7441, 0.1", "38.792, -224.241, -41.7441, 0.1", "38.8943, -224.855, -41.7441, 0.1", "38.9959, -225.409, -41.7441, 0.1", "39.0985, -225.96, -41.7441, 0.1", "39.2086, -226.512, -41.7441, 0.1", "39.3077, -227.064, -41.7441, 0.1", "39.4019, -227.616, -41.7441, 0.1", "39.4957, -228.16, -41.7825, 0.1", "39.5958, -228.779, -41.8618, 0.1", "39.6829, -229.327, -41.9566, 0.1", "39.7809, -229.929, -42.0797, 0.1", "39.8752, -230.47, -42.2011, 0.1", "40.0799, -231.567, -42.4662, 0.1", "40.1909, -232.102, -42.6017, 0.1", "40.319, -232.631, -42.7337, 0.1", "40.4554, -233.155, -42.8507, 0.1", "40.6054, -233.677, -42.9881, 0.1", "40.6054, -233.677, -42.9881, 0.1", "40.6812, -233.942, -43.0486, 0.1", "40.8304, -234.464, -43.1869, 0.1", "40.9632, -234.977, -43.377, 0.1", "41.21, -236.008, -43.8143, 0.1", "41.3252, -236.51, -44.0349, 0.1", "41.4371, -237.009, -44.2468, 0.1", "41.5495, -237.518, -44.4522, 0.1", "41.7876, -238.605, -44.8501, 0.1", "41.9032, -239.13, -45.0086, 0.1", "42.0229, -239.659, -45.1191, 0.1", "42.1494, -240.197, -45.2143, 0.1", "42.284, -240.739, -45.2857, 0.1", "42.4276, -241.279, -45.3248, 0.1", "42.5821, -241.818, -45.3248, 0.1", "42.7374, -242.359, -45.3248, 0.1", "42.8888, -242.889, -45.3248, 0.1", "43.044, -243.43, -45.3248, 0.1", "43.1982, -243.969, -45.3248, 0.1", "43.3535, -244.51, -45.3248, 0.1", "43.5081, -245.049, -45.3248, 0.14", "43.662, -245.587, -45.3643, 0.1", "43.8245, -246.111, -45.4391, 0.14", "43.9972, -246.633, -45.5441, 0.1", "44.0871, -246.893, -45.6072, 0.1", "44.1793, -247.15, -45.676, 0.1", "44.5599, -248.193, -45.9604, 0.1", "44.7826, -248.763, -46.1091, 0.1", "44.9889, -249.269, -46.2306, 0.14", "45.1997, -249.779, -46.3328, 0.1", "45.408, -250.286, -46.4075, 0.1", "45.6158, -250.805, -46.4497, 0.1", "45.8408, -251.391, -46.4966, 0.14", "45.9339, -251.651, -46.5346, 0.56", "46.1176, -252.174, -46.6376, 0.42", "46.279, -252.686, -46.7983, 0.28", "46.4216, -253.193, -46.9971, 0.28", "46.6786, -254.218, -47.4419, 0.42", "46.7831, -254.726, -47.6351, 0.42", "46.8813, -255.252, -47.8014, 0.28", "47.0761, -256.384, -48.0791, 0.14", "47.1556, -256.932, -48.1648, 0.1", "47.227, -257.487, -48.1944, 0.1", "47.3485, -258.656, -48.1264, 0.14", "47.3903, -259.212, -48.0733, 0.28", "47.4257, -259.769, -47.9998, 0.14", "47.4679, -260.381, -47.8968, 0.28", "47.4963, -260.939, -47.8275, 0.14", "47.5273, -261.568, -47.7847, 0.1", "47.5669, -262.187, -47.7847, 0.1", "47.608, -262.746, -47.7847, 0.1", "47.6624, -263.306, -47.7847, 0.1", "47.7341, -263.924, -47.7847, 0.1", "47.8049, -264.483, -47.7847, 0.1", "47.8797, -265.038, -47.7847, 0.1", "47.9556, -265.593, -47.7847, 0.1", "48.0282, -266.152, -47.7847, 0.1", "48.0987, -266.77, -47.7847, 0.1", "48.1306, -267.049, -47.7847, 0.1", "48.1966, -267.676, -47.7847, 0.1", "48.257, -268.233, -47.7847, 0.1", "48.3136, -268.784, -47.7847, 0.1", "48.3836, -269.411, -47.7847, 0.1", "48.459, -269.969, -47.7847, 0.1", "48.5417, -270.524, -47.7847, 0.1", "48.6247, -271.067, -47.8228, 0.1", "48.7142, -271.685, -47.9017, 0.1", "48.792, -272.232, -47.9988, 0.1", "48.8643, -272.777, -48.1213, 0.1", "48.9235, -273.316, -48.2626, 0.1", "49.0355, -274.442, -48.584, 0.1", "49.0637, -274.708, -48.661, 0.1", "49.0637, -274.708, -48.661, 0.1", "49.1183, -275.094, -48.7464, 0.1", "49.2079, -275.633, -48.83, 0.1", "49.317, -276.182, -48.8721, 0.1", "49.4325, -276.731, -48.8238, 0.1", "49.5462, -277.274, -48.7448, 0.1", "49.6621, -277.813, -48.6471, 0.1", "49.7826, -278.351, -48.5313, 0.1", "49.8854, -278.876, -48.4015, 0.1", "50.0574, -280.007, -48.1017, 0.1", "50.1215, -280.553, -47.9948, 0.1", "50.1611, -281.112, -47.9363, 0.1", "50.1611, -281.112, -47.9363, 0.1", "50.174, -281.498, -48.014, 0.1", "50.1985, -282.088, -48.2325, 0.1", "50.2392, -283.112, -48.7464, 0.1", "50.2602, -283.661, -49.0341, 0.1", "50.2773, -284.16, -49.2874, 0.1", "50.3322, -285.202, -49.7658, 0.14", "50.3482, -285.456, -49.8867, 0.1", "50.365, -285.815, -50.0488, 0.1", "50.3809, -286.342, -50.2478, 0.1", "50.39, -286.937, -50.4594, 0.1", "50.3804, -287.476, -50.6232, 0.1", "50.3509, -288.622, -50.8896, 0.1", "50.3295, -289.237, -51.0257, 0.1", "50.3153, -289.786, -51.1376, 0.1", "50.3024, -290.396, -51.2452, 0.1", "50.2917, -291.021, -51.331, 0.1", "50.2861, -291.573, -51.3742, 0.14", "50.2951, -291.971, -51.3742, 0.1", "50.3156, -292.531, -51.3742, 0.1", "50.3436, -293.091, -51.3742, 0.14", "50.3764, -293.479, -51.3742, 0.1", "50.4356, -294.039, -51.3742, 0.1", "50.4896, -294.597, -51.3742, 0.1", "50.5433, -295.225, -51.3742, 0.1", "50.5662, -295.775, -51.3742, 0.1", "50.5628, -296.335, -51.3742, 0.1", "50.5628, -296.335, -51.3742, 0.14", "50.5173, -296.729, -51.3382, 0.84", "50.4172, -297.333, -51.2394, 0.7", "50.3114, -297.942, -51.1106, 0.56", "50.2409, -298.324, -51.0214, 0.42", "50.1429, -298.919, -50.8792, 0.28", "50.0058, -300.064, -50.6148, 0.14", "49.9678, -300.668, -50.4809, 0.1", "49.955, -301.217, -50.3696, 0.1", "49.9548, -301.837, -50.2613, 0.1", "49.9608, -302.383, -50.1898, 0.1", "49.9743, -302.942, -50.1489, 0.1", "49.9862, -303.505, -50.1489, 0.1", "49.9952, -304.135, -50.1924, 0.1", "49.9885, -304.521, -50.2427, 0.1", "49.9598, -305.14, -50.3562, 0.1", "49.9102, -305.685, -50.4764, 0.1", "49.8348, -306.283, -50.6201, 0.1", "49.7073, -307.284, -50.8655, 0.1", "49.663, -307.67, -50.9554, 0.1", "49.5924, -308.272, -51.0827, 0.1", "49.5214, -308.89, -51.1927, 0.1", "49.4494, -309.493, -51.3174, 0.1", "49.3992, -310.039, -51.4311, 0.1", "49.3554, -310.657, -51.5424, 0.1", "49.3384, -311.038, -51.623, 0.1", "49.3267, -311.58, -51.7667, 0.1", "49.3325, -312.525, -52.0921, 0.1", "49.3483, -313.034, -52.3276, 0.56", "49.3483, -313.034, -52.3276, 0.42" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-12.2991, 40.587, -6.08348, 0.84", "-12.6104, 41.6678, -5.85505, 0.84", "-12.7403, 42.1955, -5.76491, 0.7", "-12.8638, 42.7382, -5.67871, 0.56", "-12.9812, 43.2808, -5.60237, 0.42", "-13.0824, 43.831, -5.53674, 0.28", "-13.1749, 44.381, -5.48178, 0.42", "-13.2193, 44.7679, -5.48178, 0.56", "-13.2385, 45.0393, -5.48178, 0.7", "-13.264, 45.5923, -5.48178, 0.84", "-13.2748, 46.2198, -5.41125, 0.7", "-13.2698, 46.7728, -5.30451, 0.56", "-13.2603, 47.0439, -5.23957, 0.7", "-13.2273, 47.5844, -5.09528, 0.56", "-13.1855, 48.1258, -4.9457, 0.7", "-13.0821, 49.278, -4.69982, 0.84", "-13.0402, 49.8958, -4.67198, 0.7", "-13.0263, 50.295, -4.72643, 0.56", "-13.0238, 50.566, -4.8028, 0.7", "-13.0125, 51.0762, -5.0176, 0.98", "-13.0026, 52.1222, -5.48634, 0.98", "-13.0134, 53.1663, -5.96273, 0.84", "-13.0212, 53.7076, -6.10792, 0.84", "-13.0184, 54.1052, -6.13051, 0.7", "-12.9954, 54.4901, -6.07598, 0.56", "-12.9092, 55.5693, -5.6992, 0.7", "-12.8829, 56.1291, -5.41195, 0.84", "-12.898, 57.1716, -4.8647, 0.98", "-12.9424, 57.5345, -4.70693, 0.84", "-13.0233, 57.7929, -4.63979, 0.7", "-13.3838, 58.4952, -4.71016, 0.1", "-13.7026, 58.9987, -4.91356, 0.14", "-14.3177, 59.8887, -5.37997, 0.28", "-14.5238, 60.1806, -5.55576, 0.42", "-14.849, 60.6557, -5.79348, 0.56", "-15.4223, 61.5846, -6.14827, 0.56", "-15.6656, 62.0746, -6.26972, 0.42", "-15.8789, 62.5906, -6.31782, 0.56", "-15.9715, 62.8561, -6.30172, 0.56", "-16.3306, 63.939, -6.17683, 0.56", "-16.4999, 64.4556, -6.08844, 0.56", "-16.6772, 64.9746, -5.97324, 0.56", "-16.8611, 65.4981, -5.8766, 0.7", "-17.0475, 66.0219, -5.80616, 0.84", "-17.2583, 66.6137, -5.76248, 0.98", "-17.4453, 67.142, -5.76248, 1.12", "-17.6229, 67.6765, -5.76248, 0.98", "-17.7976, 68.209, -5.76248, 0.84", "-17.9641, 68.7341, -5.76248, 0.7", "-18.123, 69.2744, -5.76248, 0.84", "-18.2568, 69.8186, -5.76248, 0.7", "-18.3212, 70.0928, -5.76248, 0.84" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-12.2991, 40.587, -6.08348, 0.7", "-12.382, 40.6324, -7.1557, 0.7", "-12.5329, 40.7351, -9.14736, 0.56", "-12.6744, 40.8411, -11.179, 0.42", "-12.8227, 40.9534, -13.1703, 0.28", "-12.9727, 41.0776, -15.1608, 0.14", "-13.1238, 41.2175, -17.1879, 0.1", "-13.259, 41.3616, -19.198, 0.1", "-13.3994, 41.518, -21.1869, 0.1", "-13.4735, 41.6088, -22.2587, 0.1", "-13.6191, 41.8004, -24.2623, 0.1", "-13.7633, 42.0097, -26.266, 0.1", "-13.8952, 42.2277, -28.2497, 0.1", "-14.0284, 42.4658, -30.2716, 0.1", "-14.1545, 42.72, -32.27, 0.1", "-14.2117, 42.8491, -33.2985, 0.1", "-14.3466, 43.1192, -35.2955, 0.1", "-14.5146, 43.4193, -37.2858, 0.1", "-14.6245, 43.5966, -38.3028, 0.1", "-14.8838, 43.9867, -40.2674, 0.14", "-14.934, 44.0473, -40.5378, 0.28", "-15.2278, 44.3437, -41.7494, 0.1", "-15.3355, 44.442, -42.1106, 0.1", "-16.3011, 44.8861, -41.5941, 0.1", "-16.7861, 45.1012, -41.2677, 0.1", "-17.2526, 45.3045, -40.8938, 0.14", "-17.2526, 45.3045, -40.8938, 0.28" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-20.8379, 37.6231, -25.814, 0.7", "-21.2805, 38.0824, -26.2762, 0.7", "-21.9661, 38.822, -26.8923, 0.56", "-22.1933, 39.078, -27.0782, 0.42", "-22.8837, 39.8741, -27.613, 0.28", "-23.223, 40.256, -27.8434, 0.14", "-23.6001, 40.6805, -28.1156, 0.1", "-23.9652, 41.1131, -28.3756, 0.1", "-24.1358, 41.315, -28.4727, 0.14", "-24.1358, 41.315, -28.4727, 0.28", "-24.5946, 41.9025, -28.7421, 0.42", "-25.1699, 42.6547, -29.1692, 0.42", "-25.4878, 43.1109, -29.45, 0.28", "-25.7817, 43.5808, -29.7344, 0.14", "-26.0373, 44.0093, -29.9956, 0.14", "-26.5265, 44.8914, -30.5303, 0.28", "-26.5265, 44.8914, -30.5303, 0.42", "-26.7517, 45.3654, -30.7349, 0.56", "-26.9577, 45.849, -30.9292, 0.42", "-27.2018, 46.333, -31.0716, 0.28", "-27.355, 46.5671, -31.1031, 0.42", "-27.7414, 47.0651, -31.1031, 0.28", "-28.0991, 47.4877, -31.1031, 0.28", "-28.4801, 47.8987, -31.1031, 0.42", "-29.027, 48.4691, -31.1641, 0.42", "-29.4588, 48.92, -31.2465, 0.28", "-29.727, 49.1944, -31.3134, 0.14", "-30.1579, 49.6156, -31.4962, 0.1", "-30.4245, 49.86, -31.6407, 0.1", "-31.0639, 50.4483, -32.1358, 0.1", "-31.4253, 50.8171, -32.4961, 0.28", "-31.7574, 51.177, -32.8811, 0.42", "-32.361, 51.8741, -33.6207, 0.28", "-32.5572, 52.1205, -33.8644, 0.14", "-33.0518, 52.7898, -34.4863, 0.28", "-33.3119, 53.1702, -34.788, 1.12", "-33.3119, 53.1702, -34.788, 0.98", "-33.6077, 53.6653, -35.0585, 0.1", "-33.867, 54.1296, -35.2021, 0.1", "-34.4245, 55.1521, -35.4048, 0.1", "-34.6889, 55.6346, -35.4662, 0.1", "-34.9803, 56.1787, -35.5498, 0.1", "-35.4788, 57.1987, -35.7177, 0.14", "-35.578, 57.4467, -35.7982, 0.28", "-35.6569, 57.69, -35.9096, 0.42", "-35.9538, 58.7173, -36.4125, 0.28", "-36.0908, 59.1844, -36.6958, 0.28", "-36.2118, 59.6268, -37.0179, 0.14", "-36.4571, 60.4935, -37.727, 0.1", "-36.5913, 60.9319, -38.0541, 0.1", "-36.7605, 61.4395, -38.3729, 0.1", "-36.8536, 61.6814, -38.4829, 0.1" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-20.8379, 37.6231, -25.814, 0.84", "-20.6399, 37.7239, -26.8263, 0.84", "-20.1218, 37.8817, -28.772, 0.98", "-19.4418, 37.9945, -30.6705, 0.84", "-19.3293, 38.0134, -30.928, 0.28", "-19.0581, 38.0724, -31.4952, 0.14", "-18.8019, 38.1386, -32.0557, 0.1", "-18.6091, 38.1791, -32.4018, 0.1", "-18.2458, 38.2501, -32.9135, 0.14", "-17.5725, 38.4279, -33.8682, 0.28", "-17.0593, 38.6143, -34.7921, 0.42", "-16.3143, 39.033, -36.6221, 0.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "2.78424, 141.624, -7.76926, 0.1", "2.26953, 142.649, -7.49824, 0.1", "2.0148, 143.137, -7.39287, 0.1", "1.71034, 143.68, -7.29867, 0.1", "1.43436, 144.162, -7.22801, 0.14", "1.15253, 144.645, -7.16188, 0.28", "1.15253, 144.645, -7.16188, 0.42", "0.81336, 145.168, -7.16188, 0.1", "0.461407, 145.678, -7.22721, 0.14", "0.299756, 145.902, -7.28172, 0.28", "0.144383, 146.115, -7.38017, 0.42", "-0.185319, 146.574, -7.65732, 0.56", "-0.500038, 147.044, -7.91924, 0.42", "-1.02152, 147.953, -8.38349, 0.28", "-1.26766, 148.486, -8.61119, 0.14", "-1.64099, 149.54, -8.86223, 0.28", "-1.64099, 149.54, -8.86223, 0.42", "-1.7392, 150.677, -8.73563, 0.1", "-1.71943, 151.288, -8.57697, 0.1", "-1.65596, 151.861, -8.34989, 0.1", "-1.47694, 152.919, -7.85272, 0.1", "-1.4094, 153.254, -7.666, 0.1", "-1.28594, 153.802, -7.38192, 0.14", "-1.18528, 154.154, -7.23526, 0.28", "-1.11217, 154.389, -7.12444, 0.42" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "2.78424, 141.624, -7.76926, 0.28", "3.15385, 142.72, -7.52017, 0.28", "3.30877, 143.311, -7.41572, 0.14", "3.38283, 143.703, -7.36073, 0.1", "3.47796, 144.48, -7.27298, 0.14", "3.51315, 144.875, -7.23683, 0.1", "3.5547, 145.432, -7.19486, 0.1", "3.56824, 145.995, -7.19486, 0.14", "3.56214, 146.546, -7.19486, 0.1", "3.53388, 147.109, -7.19486, 0.1", "3.49087, 147.739, -7.19486, 0.1", "3.46299, 148.358, -7.19486, 0.1", "3.46417, 148.918, -7.19486, 0.1", "3.4943, 149.547, -7.19486, 0.1", "3.54771, 150.096, -7.19486, 0.14", "3.62444, 150.721, -7.19486, 0.1", "3.67149, 151.121, -7.19486, 0.1", "3.7344, 151.738, -7.19486, 0.14", "3.784, 152.367, -7.19486, 0.28", "3.79046, 152.635, -7.21706, 0.28", "3.77166, 153.189, -7.30133, 0.1", "3.71027, 153.735, -7.41251, 0.1", "3.61348, 154.275, -7.53824, 0.1", "3.49062, 154.806, -7.67017, 0.1", "3.22317, 155.89, -7.93642, 0.14", "3.1032, 156.414, -8.05555, 0.28", "3.00505, 156.957, -8.16985, 0.14", "2.93821, 157.505, -8.26761, 0.1", "2.89636, 158.059, -8.34082, 0.1", "2.8685, 158.686, -8.38611, 0.1", "2.86306, 159.308, -8.38611, 0.1", "2.87759, 159.705, -8.41241, 0.1", "2.91555, 160.323, -8.44725, 0.1", "2.96105, 160.881, -8.47188, 0.1", "3.01275, 161.441, -8.48879, 0.1", "3.05553, 162.061, -8.49844, 0.1", "3.11406, 163.099, -8.4991, 0.1", "3.15532, 164.246, -8.48393, 0.14", "3.16624, 164.877, -8.46685, 0.1", "3.16522, 165.496, -8.44223, 0.1", "3.13303, 166.055, -8.41321, 0.1", "3.05822, 166.67, -8.41591, 0.1", "2.94887, 167.215, -8.48676, 0.1", "2.81085, 167.717, -8.70297, 0.1", "2.64546, 168.149, -9.01867, 0.14", "2.45005, 168.579, -9.42447, 0.1", "2.10494, 169.246, -10.1432, 0.1", "1.69414, 169.971, -10.9759, 0.1", "1.29217, 170.646, -11.8119, 0.1", "0.877917, 171.332, -12.676, 0.14", "0.781237, 171.502, -12.8787, 0.28", "0.581833, 171.921, -13.2936, 0.42", "0.417463, 172.382, -13.5735, 0.56", "0.358735, 172.647, -13.6485, 0.7", "0.279573, 173.2, -13.695, 0.84", "0.221649, 173.817, -13.695, 0.7", "0.16787, 174.444, -13.748, 0.56", "0.116602, 175.055, -13.8365, 0.42", "0.0558297, 175.603, -13.9368, 0.28", "-0.0117972, 176.142, -14.0854, 0.14", "-0.0887531, 176.665, -14.2708, 0.1", "-0.270954, 177.682, -14.7703, 0.1", "-0.368108, 178.159, -15.0495, 0.1", "-0.464162, 178.601, -15.3678, 0.14", "-0.654207, 179.48, -16.1356, 0.28", "-0.742224, 179.884, -16.5184, 0.28", "-0.893532, 180.628, -17.2267, 0.14", "-0.970289, 181.056, -17.5849, 0.1", "-1.10221, 181.947, -18.2857, 0.1", "-1.20495, 182.897, -18.922, 0.1", "-1.23481, 183.405, -19.1556, 0.1", "-1.22197, 184.009, -19.3353, 0.14", "-1.10599, 185.176, -19.4425, 0.28", "-1.05859, 185.453, -19.4344, 0.42", "-0.926282, 186.052, -19.3465, 0.14", "-0.779232, 186.656, -19.2327, 0.1", "-0.684609, 187.039, -19.1794, 0.1", "-0.547765, 187.642, -19.135, 0.1", "-0.432993, 188.263, -19.135, 0.1", "-0.342852, 188.874, -19.1798, 0.1", "-0.312534, 189.149, -19.2165, 0.1", "-0.263551, 189.757, -19.3731, 0.1", "-0.223496, 190.343, -19.577, 0.1", "-0.187503, 190.862, -19.7923, 0.1", "-0.103715, 191.938, -20.2761, 0.1", "-0.0659617, 192.441, -20.5057, 0.1", "0.00498168, 193.521, -20.9809, 0.1", "0.0196999, 193.89, -21.1316, 0.1", "0.0254729, 194.475, -21.3359, 0.1", "0.0242831, 195.087, -21.4912, 0.1", "0.0137135, 195.646, -21.5626, 0.1", "-0.00348033, 196.195, -21.6016, 0.1", "-0.0301849, 196.755, -21.6016, 0.1", "-0.0675169, 197.316, -21.6016, 0.1", "-0.118307, 197.946, -21.6016, 0.1", "-0.161542, 198.563, -21.556, 0.1", "-0.176963, 198.841, -21.5184, 0.1", "-0.211901, 199.462, -21.4059, 0.1", "-0.2355, 200.002, -21.287, 0.1", "-0.280643, 200.533, -21.1129, 0.1", "-0.485909, 201.562, -20.5685, 0.14", "-0.645635, 201.999, -20.2505, 0.1", "-0.869327, 202.378, -19.9031, 0.1", "-1.01288, 202.536, -19.7239, 0.14", "-1.75375, 203.14, -19.0273, 0.1", "-2.63411, 203.679, -18.4519, 0.1", "-3.17231, 203.95, -18.2994, 0.14", "-3.74156, 204.214, -18.3494, 0.14", "-4.07228, 204.376, -18.4768, 0.1", "-4.95787, 204.848, -19.1011, 0.1", "-5.21132, 204.996, -19.3642, 0.1", "-5.89567, 205.429, -20.2252, 0.1", "-6.51826, 205.854, -21.1281, 0.1", "-6.82418, 206.077, -21.6317, 0.1", "-7.28722, 206.41, -22.453, 0.1", "-7.46927, 206.532, -22.7854, 0.14" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "11.3038, -78.857, 9.62597, 1.12", "11.392, -79.4007, 9.62597, 1.12", "11.4997, -80.0211, 9.62597, 1.26", "11.6043, -80.5717, 9.62597, 1.4", "11.7397, -81.1184, 9.62597, 1.54", "11.8157, -81.3868, 9.62597, 1.4", "11.8157, -81.3868, 9.62597, 1.26", "11.9153, -81.6351, 9.57704, 1.12", "12.1399, -82.1323, 9.44874, 0.98", "12.4006, -82.6651, 9.23734, 0.84", "12.6321, -83.1277, 9.02167, 0.7", "13.1124, -84.0995, 8.55111, 0.84", "13.3437, -84.5596, 8.33007, 0.98", "13.5808, -85.0281, 8.13402, 1.12", "14.1022, -86.027, 7.77781, 1.12", "14.346, -86.5047, 7.61501, 1.12", "14.5978, -86.9896, 7.47839, 0.98", "14.8798, -87.5411, 7.41322, 1.12", "15.3763, -88.4525, 7.36588, 0.98", "15.5682, -88.7879, 7.41422, 1.12" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.3038, -78.857, 9.62597, 0.28", "11.6686, -78.9934, 9.62597, 0.28", "12.2594, -79.2113, 9.62597, 0.42", "12.6293, -79.3502, 9.67596, 0.56", "13.1945, -79.5833, 9.78874, 0.42", "13.5517, -79.7396, 9.86986, 0.28", "14.252, -80.0719, 10.035, 0.14", "14.7929, -80.3621, 10.1757, 0.28", "15.6882, -80.8992, 10.4239, 0.28", "16.205, -81.2311, 10.5626, 0.14", "16.5236, -81.4494, 10.6428, 0.1", "17.0267, -81.8123, 10.7509, 0.1", "17.5216, -82.188, 10.7953, 0.1", "17.8335, -82.435, 10.7781, 0.1", "18.4503, -82.9173, 10.6914, 0.1", "18.7686, -83.1474, 10.6554, 0.1", "19.2913, -83.4981, 10.6729, 0.14", "20.1478, -83.9852, 10.8433, 0.28", "20.1478, -83.9852, 10.8433, 0.42", "21.0733, -84.3698, 11.2272, 0.42", "21.5828, -84.5716, 11.5372, 0.56", "22.4185, -84.9224, 12.1213, 0.42", "22.88, -85.1441, 12.4707, 0.28", "23.3442, -85.3988, 12.8148, 0.14", "23.6364, -85.577, 13.0008, 0.28", "24.4317, -86.1159, 13.3962, 0.56", "24.9074, -86.4683, 13.5899, 0.7", "25.3286, -86.8046, 13.7533, 0.56", "25.8842, -87.3043, 14.0025, 0.42", "26.1505, -87.5724, 14.1283, 0.28", "26.4014, -87.8482, 14.2409, 0.14", "26.9092, -88.439, 14.4285, 0.14", "27.5397, -89.225, 14.6783, 0.28", "27.8658, -89.6541, 14.805, 0.14", "28.1822, -90.1016, 14.9222, 0.14", "28.4885, -90.5535, 15.0608, 0.1", "28.8239, -91.0531, 15.2215, 0.1", "29.1668, -91.5502, 15.3744, 0.1", "29.5332, -92.0315, 15.5492, 0.1", "29.7719, -92.3136, 15.6872, 0.1", "30.4026, -93.03, 16.0975, 0.1", "30.7801, -93.4525, 16.3564, 0.1", "31.1602, -93.878, 16.6227, 0.1", "31.8464, -94.6611, 17.174, 0.1", "32.0696, -94.9302, 17.3646, 0.1", "32.3729, -95.3271, 17.6187, 0.14", "32.7036, -95.7812, 17.9033, 0.28", "32.8978, -96.0622, 18.0904, 0.42", "33.4114, -96.8153, 18.5887, 0.1", "33.697, -97.23, 18.8348, 0.1", "33.9834, -97.6503, 19.0767, 0.14", "34.5866, -98.5432, 19.5531, 0.1", "34.9008, -99.0307, 19.7803, 0.1", "35.0993, -99.3556, 19.897, 0.1", "35.4097, -99.8826, 20.0147, 0.14", "35.6934, -100.368, 20.058, 0.28", "35.9659, -100.857, 20.0702, 0.28", "36.0907, -101.109, 20.055, 0.42", "36.3272, -101.617, 20.0826, 0.28", "36.5534, -102.126, 20.1609, 0.14", "36.9886, -103.054, 20.4899, 0.1", "37.4335, -103.893, 20.9098, 0.28", "37.6898, -104.326, 21.163, 0.14", "38.2398, -105.206, 21.7203, 0.1", "38.5117, -105.615, 21.9901, 0.1", "39.1094, -106.463, 22.556, 0.1", "39.4203, -106.904, 22.8675, 0.1", "39.7594, -107.36, 23.1383, 0.1", "39.9173, -107.561, 23.2506, 0.1", "40.2974, -108.03, 23.4285, 0.1", "40.5473, -108.316, 23.5177, 0.1" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-23.5257, -30.6751, -38.9238, 0.28", "-23.6672, -31.0474, -38.9238, 0.28", "-23.9311, -31.7895, -38.9238, 0.14", "-24.0637, -32.1651, -38.9238, 0.28", "-24.2612, -32.7545, -38.9238, 0.14", "-24.4483, -33.3558, -38.9238, 0.1", "-24.5536, -33.7449, -38.9238, 0.1", "-24.658, -34.3559, -38.9238, 0.14", "-24.6775, -34.7537, -38.9238, 0.28", "-24.6539, -35.0316, -38.9238, 0.42", "-24.5953, -35.307, -38.9238, 0.98", "-24.4286, -35.835, -38.9238, 0.84", "-24.1893, -36.4181, -38.9238, 0.7", "-23.9555, -36.9168, -38.9238, 0.56", "-23.6758, -37.4892, -38.9238, 0.42", "-23.4389, -37.985, -38.8851, 0.28", "-23.2061, -38.4929, -38.8151, 0.14", "-22.9629, -39.0569, -38.7107, 0.1", "-22.7618, -39.568, -38.5995, 0.1", "-22.5711, -40.0838, -38.4778, 0.1", "-22.2118, -41.1407, -38.2171, 0.1", "-22.041, -41.6613, -38.0867, 0.1", "-21.8916, -42.1771, -37.9643, 0.1", "-21.7588, -42.7133, -37.8542, 0.1", "-21.6453, -43.2557, -37.7708, 0.14", "-21.5963, -43.5321, -37.7477, 0.28", "-21.5532, -43.8076, -37.7477, 0.7", "-21.4665, -44.4214, -37.7477, 0.56", "-21.3902, -44.9766, -37.7477, 0.42", "-21.3165, -45.602, -37.7477, 0.28", "-21.2536, -46.1589, -37.7477, 0.14", "-21.185, -46.7179, -37.7477, 0.1", "-21.1471, -46.9845, -37.7477, 0.1", "-21.0634, -47.5414, -37.7477, 0.1", "-21.0138, -47.9366, -37.7477, 0.1", "-20.9475, -48.4931, -37.7477, 0.1", "-20.9004, -49.0543, -37.7477, 0.1", "-20.8634, -49.6039, -37.7477, 0.1", "-20.8327, -50.2328, -37.7477, 0.1", "-20.8167, -50.8641, -37.7477, 0.1", "-20.8139, -51.4177, -37.7477, 0.1", "-20.8248, -52.0491, -37.7477, 0.1", "-20.8397, -52.6094, -37.7477, 0.1", "-20.8494, -53.2292, -37.7477, 0.14", "-20.8384, -53.8587, -37.7477, 0.28", "-20.8209, -54.4802, -37.7477, 0.42", "-20.8105, -55.0405, -37.7477, 0.56", "-20.8008, -55.322, -37.7477, 0.42", "-20.7728, -55.8828, -37.7914, 0.42", "-20.7272, -56.4355, -37.8719, 0.56", "-20.6843, -56.815, -37.9485, 0.1", "-20.6011, -57.4237, -38.0945, 0.1", "-20.5214, -57.9636, -38.2336, 0.1", "-20.3385, -59.0595, -38.5159, 0.1", "-20.2931, -59.3289, -38.5844, 0.1", "-20.1964, -59.8569, -38.7078, 0.7", "-20.083, -60.3982, -38.8142, 0.56", "-19.9626, -60.9399, -38.8928, 0.42", "-19.844, -61.4888, -38.9352, 0.42", "-19.7621, -61.8684, -38.9048, 0.56", "-19.643, -62.4106, -38.828, 0.56", "-19.5255, -62.9511, -38.7376, 0.42", "-19.4078, -63.4912, -38.6296, 0.28", "-19.2877, -64.0234, -38.5013, 0.14", "-19.0252, -65.0959, -38.1881, 0.1", "-18.8818, -65.5977, -38.0121, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-23.5257, -30.6751, -38.9238, 0.1", "-24.0375, -29.6492, -38.6525, 0.1", "-24.3154, -29.1736, -38.549, 0.1", "-24.6191, -28.7185, -38.4643, 0.1", "-24.9811, -28.2098, -38.378, 0.1", "-25.3129, -27.7714, -38.3133, 0.1", "-25.3129, -27.7714, -38.3133, 0.1", "-25.794, -27.1415, -38.3133, 0.1", "-26.0415, -26.8295, -38.3133, 0.1", "-26.0415, -26.8295, -38.3133, 0.1", "-26.3934, -26.3155, -38.3133, 0.1", "-26.6942, -25.8427, -38.3133, 0.1", "-26.9688, -25.3509, -38.3133, 0.1", "-27.2309, -24.7858, -38.3133, 0.1", "-27.4463, -24.2655, -38.3133, 0.1", "-27.6313, -23.7485, -38.3573, 0.1", "-27.6313, -23.7485, -38.3573, 0.1", "-27.7609, -23.2148, -38.4687, 0.1", "-27.8655, -22.6766, -38.5977, 0.1", "-27.9381, -22.1374, -38.7324, 0.1", "-28.0655, -20.9966, -39.0128, 0.1", "-28.1207, -20.4623, -39.1351, 0.1", "-28.1714, -19.8569, -39.3004, 0.1", "-28.209, -19.3216, -39.4621, 0.1", "-28.2506, -18.7302, -39.6432, 0.1", "-28.2969, -18.1928, -39.7954, 0.1", "-28.3508, -17.6464, -39.9207, 0.1", "-28.4613, -16.6028, -40.168, 0.1", "-28.5299, -16.0676, -40.2919, 0.1", "-28.6074, -15.5244, -40.4064, 0.1", "-28.6866, -14.9837, -40.5426, 0.1", "-28.7734, -14.3787, -40.7015, 0.1", "-28.8536, -13.8469, -40.8327, 0.1", "-28.9348, -13.3036, -40.9438, 0.1", "-29.0094, -12.7586, -41.0648, 0.1", "-29.1639, -11.6154, -41.3255, 0.1", "-29.2407, -11.0802, -41.4446, 0.1", "-29.3173, -10.5449, -41.5918, 0.1", "-29.3978, -9.94489, -41.7715, 0.1", "-29.4706, -9.40992, -41.9319, 0.1", "-29.54, -8.87352, -42.0787, 0.1", "-29.6134, -8.33783, -42.1977, 0.1", "-29.7683, -7.19466, -42.4584, 0.1", "-29.8469, -6.65029, -42.5795, 0.1", "-29.9243, -6.11506, -42.7267, 0.1", "-30.0039, -5.52628, -42.9032, 0.1", "-30.0767, -4.99401, -43.0629, 0.1", "-30.144, -4.45615, -43.2158, 0.1", "-30.2137, -3.91518, -43.3446, 0.1", "-30.352, -2.78244, -43.6309, 0.1", "-30.4214, -2.24331, -43.7674, 0.1", "-30.5016, -1.70359, -43.8954, 0.1", "-30.5443, -1.43074, -43.9504, 0.1", "-30.6381, -0.891009, -44.0304, 0.1", "-30.7487, -0.343289, -44.0737, 0.1", "-30.8654, 0.205825, -44.1191, 0.1", "-30.9792, 0.748932, -44.1977, 0.1", "-31.0956, 1.29069, -44.2984, 0.1", "-31.2163, 1.82606, -44.412, 0.1", "-31.3313, 2.35317, -44.5362, 0.1", "-31.5737, 3.47723, -44.8129, 0.1", "-31.689, 4.01022, -44.9423, 0.1", "-31.797, 4.54972, -45.0626, 0.1", "-31.8475, 4.8124, -45.1121, 0.1", "-31.9409, 5.3595, -45.19, 0.1", "-32.0293, 5.91399, -45.2336, 0.1", "-32.1189, 6.46723, -45.2336, 0.1", "-32.2131, 7.09168, -45.2336, 0.1", "-32.283, 7.64087, -45.2336, 0.1", "-32.3296, 8.03638, -45.2336, 0.1", "-32.3942, 8.59309, -45.2336, 0.1", "-32.4648, 9.15186, -45.2336, 0.1", "-32.5321, 9.69855, -45.2336, 0.1", "-32.6167, 10.3225, -45.2336, 0.1", "-32.6941, 10.8776, -45.2336, 0.1", "-32.781, 11.4313, -45.2336, 0.1", "-32.8697, 11.9856, -45.2785, 0.1", "-32.9165, 12.2575, -45.3194, 0.1", "-33.0216, 12.7968, -45.4298, 0.1", "-33.1421, 13.3318, -45.5586, 0.1", "-33.2673, 13.8609, -45.6942, 0.1", "-33.539, 14.9414, -45.9699, 0.1", "-33.6779, 15.4598, -46.0939, 0.1", "-33.8277, 15.9819, -46.2429, 0.1", "-33.9757, 16.4979, -46.4039, 0.1", "-34.1237, 17.0139, -46.5649, 0.1", "-34.2736, 17.5359, -46.7138, 0.1", "-34.4241, 18.0619, -46.8354, 0.1", "-34.7309, 19.1333, -47.0895, 0.1", "-34.8815, 19.6593, -47.211, 0.1", "-35.0313, 20.1814, -47.36, 0.1", "-35.179, 20.6967, -47.5234, 0.1", "-35.3265, 21.2113, -47.6892, 0.1", "-35.4756, 21.7318, -47.8443, 0.1", "-35.6232, 22.2476, -47.9692, 0.1", "-35.9014, 23.3051, -48.3176, 0.1", "-35.9635, 23.5589, -48.4152, 0.1", "-36.0777, 24.0537, -48.6589, 0.1", "-36.1847, 24.5359, -48.9238, 0.1", "-36.2754, 25.004, -49.2234, 0.1", "-36.4411, 25.9623, -49.8874, 0.1", "-36.5317, 26.4185, -50.205, 0.1", "-36.7565, 27.3277, -50.866, 0.1", "-36.8923, 27.7639, -51.1954, 0.1", "-37.2764, 28.6587, -51.8573, 0.1", "-37.2764, 28.6587, -51.8573, 0.1", "-37.7145, 29.2021, -52.2329, 0.1", "-38.1133, 29.6072, -52.5037, 0.1", "-38.3896, 29.8474, -52.6365, 0.1", "-38.9746, 30.303, -52.9274, 0.1", "-39.7931, 30.8881, -53.3008, 0.1", "-40.2725, 31.237, -53.5336, 0.1", "-40.5624, 31.4501, -53.6829, 0.1", "-41.0373, 31.7926, -53.9145, 0.1", "-41.8395, 32.3681, -54.3351, 0.1", "-42.4372, 32.8023, -54.6455, 0.1", "-42.9112, 33.1426, -54.8636, 0.1", "-43.2146, 33.3558, -55.0088, 0.1", "-43.8076, 33.791, -55.2906, 0.1", "-44.6008, 34.4214, -55.6444, 0.1", "-45.0515, 34.84, -55.81, 0.1", "-45.2994, 35.1238, -55.9086, 0.1", "-45.2994, 35.1238, -55.9086, 0.1", "-45.5829, 35.6018, -55.9999, 0.1", "-45.8208, 36.0965, -56.0453, 0.1", "-46.04, 36.6153, -56.0453, 0.1", "-46.2522, 37.1318, -56.0941, 0.1", "-46.3577, 37.3896, -56.135, 0.1", "-46.5923, 37.9436, -56.2965, 0.1", "-46.8236, 38.4165, -56.4965, 0.1", "-47.08, 38.8302, -56.7744, 0.1", "-47.6472, 39.52, -57.5428, 0.1", "-47.9366, 39.7834, -57.9479, 0.1", "-48.5138, 40.1805, -58.7149, 0.1", "-48.8423, 40.3528, -59.1259, 0.1", "-49.5662, 40.6378, -59.9679, 0.1", "-50.2749, 40.8628, -60.6935, 0.1", "-50.8696, 41.0406, -61.1784, 0.1", "-51.3785, 41.2145, -61.5095, 0.1", "-51.7171, 41.3652, -61.6551, 0.1", "-51.7171, 41.3652, -61.6551, 0.1", "-52.2124, 41.74, -61.7022, 0.1", "-52.6886, 42.1416, -61.7022, 0.1", "-53.1626, 42.556, -61.7022, 0.1", "-53.464, 42.8106, -61.7022, 0.1", "-53.9687, 43.1871, -61.7022, 0.1", "-54.4893, 43.5291, -61.7022, 0.1", "-54.4893, 43.5291, -61.7022, 0.1", "-55.0624, 43.79, -61.7022, 0.1", "-55.636, 44.0298, -61.7022, 0.1", "-56.2195, 44.2663, -61.7022, 0.1", "-56.579, 44.4162, -61.7022, 0.1", "-56.8306, 44.5347, -61.7246, 0.1", "-57.5169, 44.9057, -61.8332, 0.1", "-58.0326, 45.2265, -61.9993, 0.1", "-58.3352, 45.4317, -62.1337, 0.1", "-58.7942, 45.7674, -62.4207, 0.1", "-59.6022, 46.3895, -63.0108, 0.1", "-59.8667, 46.6, -63.2213, 0.1", "-60.6949, 47.2725, -63.9158, 0.1", "-60.9453, 47.4756, -64.1496, 0.1", "-61.689, 48.0722, -64.8483, 0.1", "-62.0896, 48.3913, -65.203, 0.1", "-62.3578, 48.6047, -65.4057, 0.1", "-62.7924, 48.9499, -65.6886, 0.1", "-63.5073, 49.5069, -66.1112, 0.1", "-64.0843, 49.9473, -66.439, 0.1", "-64.5631, 50.2849, -66.6717, 0.1", "-64.8698, 50.4945, -66.8153, 0.1", "-65.4857, 50.9089, -67.0787, 0.1", "-66.3234, 51.4716, -67.4531, 0.1", "-66.8151, 51.7955, -67.6564, 0.1", "-67.3002, 52.1168, -67.8753, 0.1", "-67.7927, 52.439, -68.0992, 0.1", "-68.0899, 52.636, -68.2559, 0.1", "-68.9731, 53.2418, -68.7554, 0.1", "-69.4364, 53.5737, -69.0037, 0.1", "-69.8932, 53.9188, -69.266, 0.1", "-70.1585, 54.1391, -69.447, 0.1", "-70.8086, 54.7295, -69.9255, 0.1", "-71.1877, 55.1073, -70.2571, 0.1", "-71.5262, 55.5073, -70.5939, 0.1", "-71.8113, 55.9294, -70.9524, 0.1", "-72.2974, 56.7672, -71.6362, 0.1", "-72.5023, 57.1832, -71.9335, 0.1", "-72.8469, 57.9978, -72.4, 0.1", "-73.0309, 58.5329, -72.6762, 0.1", "-73.1323, 58.8908, -72.8317, 0.1", "-73.2759, 59.4772, -73.0106, 0.1", "-73.4038, 60.0173, -73.0879, 0.1", "-73.5418, 60.5521, -73.1264, 0.1", "-73.693, 61.0918, -73.1264, 0.1", "-73.7759, 61.3609, -73.1264, 0.1", "-73.9544, 61.8922, -73.1264, 0.1", "-74.1425, 62.421, -73.1719, 0.1", "-74.3471, 62.9359, -73.2566, 0.1", "-74.5682, 63.4175, -73.4169, 0.1", "-74.5682, 63.4175, -73.4169, 0.1", "-74.8354, 63.8988, -73.7239, 0.1", "-75.3546, 64.736, -74.37, 0.1", "-75.6017, 65.0965, -74.7099, 0.1", "-76.128, 65.8397, -75.4634, 0.1", "-76.3712, 66.1881, -75.814, 0.1", "-76.8261, 66.8607, -76.5233, 0.1", "-77.0834, 67.2491, -76.9369, 0.1", "-77.5761, 68.0171, -77.6878, 0.1", "-77.8098, 68.3941, -78.0303, 0.1", "-78.0425, 68.7881, -78.3587, 0.1", "-78.4476, 69.5084, -78.9218, 0.1", "-78.6904, 69.9894, -79.2343, 0.1", "-78.8955, 70.4314, -79.4912, 0.1", "-79.1057, 70.8886, -79.744, 0.1", "-79.5486, 71.8411, -80.2776, 0.1", "-79.76, 72.3042, -80.5184, 0.1", "-79.9713, 72.7648, -80.7579, 0.1", "-80.1774, 73.2211, -81.0157, 0.1", "-80.609, 74.1729, -81.5597, 0.1", "-80.8127, 74.6327, -81.8071, 0.1", "-81.0083, 75.0984, -82.0561, 0.1", "-81.4076, 76.054, -82.6178, 0.1", "-81.6014, 76.5067, -82.8911, 0.1", "-81.7922, 76.9555, -83.1471, 0.1", "-81.9848, 77.4305, -83.3737, 0.1", "-82.4025, 78.4085, -83.8054, 0.1", "-82.4025, 78.4085, -83.8054, 0.1", "-82.6533, 78.9624, -83.9408, 0.1", "-82.8938, 79.4615, -84.0418, 0.1", "-83.1473, 79.9479, -84.157, 0.1", "-83.4357, 80.4854, -84.2831, 0.1", "-83.6958, 80.9752, -84.3817, 0.1", "-83.9829, 81.5144, -84.5032, 0.1", "-84.2378, 82.0021, -84.6231, 0.1", "-84.7706, 83.0194, -84.8863, 0.1", "-85.018, 83.5065, -85.0112, 0.1", "-85.2528, 84.0046, -85.1296, 0.1", "-85.5017, 84.5642, -85.2429, 0.1", "-85.7068, 85.0728, -85.319, 0.1", "-85.8061, 85.3325, -85.3415, 0.1", "-86.0021, 85.8605, -85.3415, 0.1", "-86.2117, 86.3802, -85.3415, 0.1", "-86.4426, 86.8939, -85.3415, 0.1", "-86.6954, 87.3941, -85.3415, 0.1", "-86.6954, 87.3941, -85.3415, 0.1", "-87.0485, 87.9073, -85.3415, 0.1", "-87.4385, 88.4016, -85.3415, 0.1", "-87.8398, 88.878, -85.3415, 0.1", "-88.2556, 89.3509, -85.3415, 0.1", "-88.6709, 89.8152, -85.3415, 0.1", "-88.9291, 90.1183, -85.3415, 0.1", "-89.3171, 90.6151, -85.3415, 0.1", "-89.6384, 91.0602, -85.3866, 0.1", "-89.6384, 91.0602, -85.3866, 0.1", "-89.941, 91.59, -85.5698, 0.1", "-90.1713, 92.047, -85.7736, 0.1", "-90.3749, 92.4996, -86.0399, 0.1", "-90.7589, 93.4192, -86.6683, 0.1", "-90.9229, 93.8543, -86.9811, 0.1", "-91.1947, 94.7607, -87.6306, 0.1", "-91.2874, 95.2098, -87.9528, 0.1", "-91.3802, 96.1544, -88.598, 0.1", "-91.3723, 96.3939, -88.7408, 0.1", "-91.2623, 96.9507, -88.9899, 0.1", "-91.0982, 97.518, -89.188, 0.1", "-90.9813, 97.8845, -89.2908, 0.1", "-90.8246, 98.4716, -89.4586, 0.1", "-90.7874, 98.8428, -89.5977, 0.1", "-90.8125, 99.0898, -89.7308, 0.1", "-90.9839, 99.5978, -90.0611, 0.1", "-91.4558, 100.493, -90.6644, 0.1", "-91.7493, 100.93, -90.9962, 0.1", "-92.3697, 101.724, -91.6135, 0.1", "-92.5215, 101.901, -91.7668, 0.1", "-92.8737, 102.293, -92.1123, 0.1", "-93.217, 102.668, -92.4717, 0.1", "-93.8669, 103.392, -93.1424, 0.1", "-94.2128, 103.776, -93.5034, 0.1", "-94.8069, 104.452, -94.0941, 0.1", "-95.1361, 104.833, -94.461, 0.1", "-95.7402, 105.576, -95.1467, 0.1", "-96.0215, 105.957, -95.4515, 0.1", "-96.2108, 106.253, -95.6196, 0.1", "-96.4522, 106.727, -95.8055, 0.1", "-96.8115, 107.646, -95.9675, 0.1", "-97.1488, 108.738, -96.0482, 0.1", "-97.3002, 109.281, -96.0285, 0.1", "-97.4581, 109.808, -96.0021, 0.1", "-97.6589, 110.403, -95.9656, 0.1", "-97.8711, 110.921, -95.9279, 0.1", "-97.9892, 111.175, -95.9072, 0.1", "-98.2768, 111.728, -95.9072, 0.1", "-98.5943, 112.264, -95.9072, 0.1", "-98.9359, 112.793, -95.9072, 0.1", "-99.2842, 113.309, -95.9072, 0.1", "-99.5888, 113.783, -95.9072, 0.1", "-99.5888, 113.783, -95.9072, 0.1", "-99.8794, 114.334, -95.9072, 0.1", "-100.111, 114.844, -95.9072, 0.1", "-100.316, 115.369, -95.9072, 0.1", "-100.5, 115.898, -95.9072, 0.1", "-100.5, 115.898, -95.9072, 0.1", "-100.664, 116.427, -95.9072, 0.1", "-100.819, 116.966, -95.9072, 0.1", "-100.961, 117.508, -95.9072, 0.1", "-101.095, 118.055, -95.9072, 0.1", "-101.223, 118.6, -95.9072, 0.1", "-101.348, 119.15, -95.9072, 0.1", "-101.466, 119.687, -95.9072, 0.1", "-101.598, 120.303, -95.9072, 0.1", "-101.71, 120.852, -95.9072, 0.1", "-101.818, 121.405, -95.9072, 0.1", "-101.92, 121.946, -95.9072, 0.1", "-101.971, 122.223, -95.9072, 0.1" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "49.3483, -313.034, -52.3276, 0.1", "49.3575, -313.409, -52.4597, 0.1", "49.3651, -313.943, -52.6396, 0.1", "49.3624, -314.537, -52.8215, 0.1", "49.3629, -315.08, -52.9707, 0.1", "49.3574, -316.229, -53.2512, 0.1", "49.3585, -316.77, -53.3691, 0.1", "49.3614, -317.381, -53.5303, 0.1", "49.3608, -317.976, -53.7043, 0.1", "49.3591, -318.513, -53.8638, 0.1", "49.3456, -319.12, -54.0299, 0.1", "49.3368, -319.667, -54.1517, 0.1", "49.3275, -320.813, -54.4169, 0.1", "49.3337, -321.085, -54.4789, 0.14", "49.3545, -321.701, -54.6076, 0.14", "49.3817, -322.313, -54.715, 0.1", "49.4116, -322.871, -54.7863, 0.1", "49.4464, -323.429, -54.8245, 0.1", "49.4956, -323.99, -54.8245, 0.1", "49.5623, -324.608, -54.8245, 0.1", "49.64, -325.166, -54.8245, 0.1", "49.7526, -325.787, -54.8245, 0.1", "49.8538, -326.332, -54.8245, 0.1", "49.9631, -326.881, -54.8245, 0.1", "50.0839, -327.429, -54.8245, 0.1", "50.21, -327.976, -54.8659, 0.1", "50.3459, -328.578, -54.9502, 0.1", "50.4333, -328.96, -55.0228, 0.1", "50.5488, -329.495, -55.1426, 0.1", "50.6489, -330.032, -55.2325, 0.1", "50.841, -331.192, -55.3595, 0.1", "50.9148, -331.75, -55.3883, 0.14", "50.9777, -332.306, -55.3869, 0.1", "51.0362, -332.856, -55.3577, 0.1", "51.1231, -334.029, -55.2365, 0.1", "51.1536, -334.585, -55.1502, 0.1", "51.1751, -335.194, -55.0245, 0.1", "51.1822, -335.748, -54.9264, 0.1", "51.1756, -336.374, -54.8439, 0.1", "51.1677, -336.992, -54.7987, 0.14", "51.17, -337.271, -54.7987, 0.1", "51.175, -337.901, -54.7987, 0.1", "51.1703, -338.461, -54.7987, 0.1", "51.1444, -339.081, -54.7987, 0.1", "51.1186, -339.639, -54.838, 0.1", "51.0909, -340.2, -54.8841, 0.14", "51.0517, -340.817, -54.9432, 0.28", "50.9904, -341.606, -55.0369, 0.14", "50.9455, -341.989, -55.0942, 0.1", "50.7802, -343.102, -55.3137, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "49.3483, -313.034, -52.3276, 0.1", "48.8383, -313.386, -52.3276, 0.1", "48.3971, -313.719, -52.2365, 0.1", "47.91, -314.083, -52.0996, 0.1", "47.4201, -314.45, -51.9529, 0.1", "47.1252, -314.674, -51.8325, 0.1", "46.6526, -315.031, -51.6182, 0.1", "45.8006, -315.717, -51.1709, 0.1", "45.4106, -316.04, -50.9472, 0.1", "44.9671, -316.406, -50.6887, 0.1", "44.1501, -317.115, -50.2216, 0.1", "43.9574, -317.3, -50.1322, 0.1", "43.5355, -317.724, -49.9583, 0.1", "43.2713, -318.014, -49.8913, 0.1", "42.8849, -318.497, -49.8147, 0.1", "42.5225, -319.011, -49.8136, 0.1", "41.9589, -319.974, -50.0763, 0.1" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-18.3212, 70.0928, -5.76248, 0.28", "-19.4326, 70.6686, -5.50269, 0.28", "-19.9617, 70.9801, -5.40509, 0.14", "-20.2973, 71.1884, -5.35393, 0.28", "-20.9504, 71.6209, -5.27114, 0.42", "-21.2749, 71.8492, -5.23668, 0.42", "-21.7794, 72.2243, -5.19125, 0.28", "-22.2522, 72.6299, -5.19125, 0.14", "-22.5408, 72.9043, -5.19125, 0.1", "-22.9705, 73.3552, -5.19125, 0.1", "-23.384, 73.8301, -5.19125, 0.14", "-23.7814, 74.3097, -5.19125, 0.28", "-24.1466, 74.7385, -5.19125, 0.14", "-24.4047, 75.0302, -5.19125, 0.1", "-24.7959, 75.4354, -5.19125, 0.14", "-25.2542, 75.8572, -5.19125, 0.28", "-25.7343, 76.2519, -5.23316, 0.42", "-26.2414, 76.6265, -5.26928, 0.56", "-26.563, 76.8457, -5.28605, 0.42", "-27.0838, 77.1992, -5.30328, 0.28", "-27.4173, 77.4255, -5.30784, 0.28", "-28.2222, 78.0189, -5.30265, 0.42", "-29.1276, 78.7724, -5.27805, 0.1", "-29.5763, 79.2038, -5.25638, 0.1", "-30.0013, 79.6675, -5.22725, 0.1", "-30.3973, 80.1471, -5.19231, 0.1", "-30.7853, 80.6344, -5.19855, 0.14", "-30.9608, 80.854, -5.21407, 0.28", "-31.354, 81.325, -5.32128, 0.42", "-31.7192, 81.7378, -5.43745, 0.56", "-32.1316, 82.1809, -5.58434, 0.7", "-32.9345, 82.9959, -5.88045, 0.56", "-33.2066, 83.2574, -5.97676, 0.42", "-33.7822, 83.7849, -6.15718, 0.42", "-34.0627, 84.0442, -6.23308, 0.56", "-34.0627, 84.0442, -6.23308, 0.7", "-34.506, 84.4888, -6.28147, 0.56", "-34.9197, 84.9518, -6.33104, 0.42", "-35.3081, 85.4312, -6.41674, 0.28", "-35.6389, 85.875, -6.52075, 0.14", "-35.9972, 86.3675, -6.65152, 0.1", "-36.3467, 86.8639, -6.79054, 0.1", "-36.9529, 87.7719, -7.14462, 0.14", "-36.9529, 87.7719, -7.14462, 0.28", "-37.3036, 88.2571, -7.31667, 0.56", "-37.6951, 88.7327, -7.40875, 0.42", "-38.0767, 89.147, -7.40891, 0.56", "-38.8193, 89.8583, -7.26143, 0.7", "-39.7684, 90.652, -6.94903, 0.14", "-40.0732, 90.8857, -6.84399, 0.1", "-41.0662, 91.5825, -6.45799, 0.1", "-41.3778, 91.7798, -6.33263, 0.14", "-41.706, 91.9752, -6.20395, 0.28", "-42.3465, 92.3675, -5.96656, 0.42", "-42.6751, 92.5819, -5.89797, 0.56", "-42.998, 92.8115, -5.85817, 0.42", "-43.6224, 93.306, -5.85817, 0.7", "-44.0959, 93.7176, -5.91927, 0.56", "-44.5483, 94.1329, -6.02311, 0.42", "-44.5483, 94.1329, -6.02311, 0.28", "-44.9797, 94.5481, -6.21796, 0.1", "-45.4205, 94.9475, -6.40298, 0.1", "-46.2989, 95.6819, -6.68082, 0.1", "-46.623, 95.9117, -6.70733, 0.1", "-47.1568, 96.2253, -6.63879, 0.14", "-48.08, 96.7051, -6.36302, 0.28", "-49.0215, 97.1321, -5.78841, 0.84", "-49.8233, 97.4926, -5.00656, 0.7", "-50.5341, 97.8563, -4.13404, 0.84", "-50.6838, 97.9484, -3.91398, 0.98", "-50.8155, 98.0417, -3.6832, 1.12", "-51.3122, 98.4474, -2.69498, 0.56", "-51.806, 98.9195, -1.73508, 0.42", "-52.0496, 99.1783, -1.29824, 0.28", "-52.5926, 99.768, -0.434899, 0.28", "-53.1345, 100.336, 0.301625, 0.42", "-53.1345, 100.336, 0.301625, 0.56", "-53.6387, 100.821, 0.673665, 0.7", "-54.0632, 101.231, 0.87177, 0.56", "-54.3368, 101.509, 0.953104, 0.42", "-54.745, 101.978, 0.993711, 0.28", "-55.1242, 102.479, 1.0387, 0.14", "-55.4338, 102.94, 1.10863, 0.1", "-55.7283, 103.468, 1.2619, 0.1", "-55.9582, 103.946, 1.44979, 0.1", "-56.1591, 104.418, 1.67484, 0.1", "-56.5199, 105.36, 2.22363, 0.14", "-56.5972, 105.583, 2.37658, 0.28", "-56.8936, 106.414, 3.10093, 0.42", "-57.03, 106.801, 3.48263, 0.56", "-57.1057, 106.977, 3.68536, 0.56", "-57.2755, 107.323, 4.09661, 0.7", "-57.4691, 107.66, 4.50387, 0.98", "-57.9189, 108.365, 5.33342, 0.84", "-58.1505, 108.717, 5.70304, 0.7", "-58.6656, 109.446, 6.47801, 0.56", "-58.7956, 109.621, 6.65611, 0.42", "-59.3747, 110.357, 7.37086, 0.1", "-59.7188, 110.742, 7.73259, 0.1", "-60.0499, 111.08, 8.01968, 0.14", "-60.9073, 111.854, 8.56243, 0.1", "-61.2061, 112.1, 8.65569, 0.1", "-61.5106, 112.334, 8.71972, 0.1", "-62.1587, 112.79, 8.71354, 0.14", "-62.1587, 112.79, 8.71354, 0.28", "-63.2064, 113.372, 8.26866, 0.84", "-63.8926, 113.752, 7.64819, 0.84" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-18.3212, 70.0928, -5.76248, 0.84", "-18.3399, 70.6557, -5.76248, 0.84", "-18.3716, 71.2765, -5.76248, 0.98", "-18.3979, 71.9057, -5.76248, 0.84", "-18.4255, 72.4558, -5.76248, 0.84", "-18.4617, 73.0178, -5.76248, 0.84", "-18.5124, 73.6473, -5.76248, 0.7", "-18.5707, 74.2075, -5.76248, 0.56", "-18.6542, 74.8236, -5.76248, 0.56", "-18.7378, 75.3805, -5.76248, 0.56", "-18.8209, 75.9348, -5.76248, 0.7", "-18.91, 76.4881, -5.76248, 0.84", "-19.0212, 77.0402, -5.76248, 0.84", "-19.0212, 77.0402, -5.76248, 0.98" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-36.8536, 61.6814, -38.4829, 1.12", "-36.7143, 62.2144, -38.4829, 1.12", "-36.5364, 62.8184, -38.4829, 0.98", "-36.3293, 63.4045, -38.4829, 0.84", "-36.1846, 63.7756, -38.4829, 0.7", "-35.9319, 64.3523, -38.4829, 0.56", "-35.658, 64.9118, -38.4829, 0.7", "-35.34, 65.4574, -38.4829, 0.1", "-34.9939, 65.9753, -38.4829, 0.14", "-34.7555, 66.293, -38.5117, 0.1", "-34.3776, 66.7816, -38.5921, 0.1", "-33.997, 67.2625, -38.7007, 0.1", "-33.7574, 67.5761, -38.783, 0.1", "-33.3929, 68.0618, -38.9216, 0.1", "-32.7345, 69.0069, -39.186, 0.14", "-32.4014, 69.5122, -39.3196, 0.42", "-32.1973, 69.8447, -39.3999, 0.28", "-31.8057, 70.5205, -39.5345, 0.14", "-31.6124, 70.8649, -39.5853, 0.1", "-31.2394, 71.5564, -39.6423, 0.1", "-31.0453, 71.9097, -39.6423, 0.1", "-30.8572, 72.2508, -39.6423, 0.1", "-30.4977, 72.9517, -39.6423, 0.1", "-30.3349, 73.3133, -39.6784, 0.14", "-30.1945, 73.6848, -39.7474, 0.28", "-30.1173, 73.9445, -39.8137, 0.42", "-29.9867, 74.4515, -40.0137, 0.1", "-29.8628, 75.0015, -40.2715, 0.14", "-29.6429, 76.037, -40.7988, 0.1", "-29.5271, 76.582, -41.0705, 0.1", "-29.4669, 76.8284, -41.1865, 0.1", "-29.1618, 77.9365, -41.7338, 0.14", "-28.9866, 78.4751, -42.009, 0.1", "-28.8601, 78.82, -42.1748, 0.1", "-28.642, 79.3567, -42.3953, 0.1", "-28.3949, 79.8964, -42.6055, 0.1", "-27.9037, 80.9116, -42.9438, 0.1", "-27.7251, 81.2569, -43.0304, 0.14", "-27.3518, 81.9322, -43.1891, 0.28", "-27.1545, 82.2771, -43.2568, 0.42", "-26.8393, 82.8086, -43.3354, 0.56", "-26.5192, 83.349, -43.38, 0.42", "-26.195, 83.8809, -43.38, 0.28", "-25.9939, 84.2246, -43.38, 0.14", "-25.6054, 84.9154, -43.38, 0.1", "-25.4256, 85.2599, -43.4072, 0.1", "-25.2533, 85.6153, -43.4582, 0.1", "-24.9369, 86.3151, -43.6539, 0.1", "-24.7111, 86.8643, -43.8633, 0.1", "-24.5775, 87.1986, -44.012, 0.1", "-24.1846, 88.1999, -44.504, 0.1", "-24.0496, 88.5362, -44.669, 0.1", "-23.6381, 89.5298, -45.1461, 0.1", "-23.494, 89.8737, -45.2994, 0.1", "-23.1853, 90.5521, -45.5541, 0.1", "-23.022, 90.9029, -45.6485, 0.1", "-22.6837, 91.6034, -45.8004, 0.1", "-22.5079, 91.9523, -45.8773, 0.1", "-22.236, 92.4993, -45.9825, 0.1", "-21.9791, 93.0592, -46.1129, 0.1", "-21.7564, 93.6068, -46.3055, 0.1", "-21.4092, 94.5422, -46.7093, 0.1", "-21.3332, 94.7747, -46.8433, 0.1", "-21.1987, 95.2331, -47.1364, 0.1", "-21.0481, 95.7418, -47.4756, 0.1", "-20.7703, 96.735, -48.0438, 0.1", "-20.6676, 97.0847, -48.2042, 0.1", "-20.3382, 98.1897, -48.463, 0.1", "-20.1526, 98.7808, -48.515, 0.1", "-19.9367, 99.3637, -48.4755, 0.1", "-19.5225, 100.456, -48.3001, 0.1", "-19.3839, 100.817, -48.2027, 0.1", "-18.9575, 101.871, -47.8983, 0.1", "-18.7947, 102.217, -47.7854, 0.14", "-18.6596, 102.458, -47.7353, 0.14", "-18.0334, 103.413, -47.7035, 0.28", "-17.7806, 103.717, -47.7497, 0.28", "-17.3511, 104.158, -47.8419, 0.14", "-16.9445, 104.535, -47.9411, 0.1", "-16.4765, 104.939, -48.0211, 0.1", "-15.9884, 105.323, -48.0647, 0.1", "-15.5314, 105.652, -48.0647, 0.1", "-15.0176, 106.004, -48.0647, 0.1", "-14.6884, 106.228, -48.0647, 0.14", "-14.4543, 106.385, -48.0647, 0.28", "-13.9855, 106.688, -48.1131, 0.7", "-13.6507, 106.895, -48.1747, 0.56", "-13.1836, 107.184, -48.2862, 0.42", "-12.6598, 107.491, -48.4251, 0.28", "-12.1827, 107.76, -48.5571, 0.14", "-11.1869, 108.319, -48.8468, 0.1", "-10.7191, 108.598, -48.9892, 0.1", "-10.2074, 108.92, -49.1404, 0.1", "-9.76945, 109.232, -49.3066, 0.1", "-9.56264, 109.397, -49.3956, 0.1", "-9.56264, 109.397, -49.3956, 0.1", "-9.18456, 109.824, -49.6617, 0.1", "-8.86644, 110.273, -49.9538, 0.1", "-8.39104, 111.09, -50.4685, 0.1", "-8.14065, 111.589, -50.7608, 0.1", "-7.73978, 112.446, -51.2753, 0.14", "-7.51306, 112.942, -51.5702, 0.1", "-7.29802, 113.44, -51.8923, 0.1", "-7.10184, 113.936, -52.2081, 0.14", "-6.97109, 114.262, -52.396, 0.28", "-6.54333, 115.308, -52.9885, 0.14", "-6.39559, 115.638, -53.1555, 0.1", "-5.90618, 116.593, -53.6378, 0.1", "-5.72295, 116.917, -53.7928, 0.1", "-5.42588, 117.424, -53.9992, 0.1", "-5.2307, 117.757, -54.0992, 0.1", "-4.83467, 118.43, -54.2, 0.1", "-4.52075, 118.983, -54.2439, 0.1", "-4.33224, 119.323, -54.2439, 0.1", "-4.04956, 119.884, -54.2876, 0.1", "-3.88971, 120.246, -54.338, 0.1", "-3.59409, 120.969, -54.4725, 0.1", "-3.38577, 121.539, -54.5986, 0.1", "-3.26576, 121.908, -54.6856, 0.1", "-2.91018, 123.004, -54.9551, 0.1", "-2.7167, 123.582, -55.0636, 0.1", "-2.58169, 123.96, -55.1058, 0.1", "-2.34495, 124.533, -55.1157, 0.1", "-2.05863, 125.093, -55.0643, 0.1", "-1.92227, 125.324, -55.0183, 0.14", "-1.32711, 126.179, -54.753, 0.28", "-0.941748, 126.645, -54.6051, 0.14", "-0.547796, 127.102, -54.4238, 0.1", "-0.174878, 127.539, -54.1837, 0.1", "0.0392909, 127.808, -53.9821, 0.1", "0.331586, 128.233, -53.6336, 0.1", "0.549276, 128.615, -53.2808, 0.14", "0.912267, 129.367, -52.503, 0.1", "1.24284, 130.172, -51.7027, 0.1", "1.51433, 130.934, -50.9925, 0.1", "1.65878, 131.39, -50.5954, 0.1", "1.87344, 132.222, -49.7841, 0.1", "1.94992, 132.451, -50.0956, 0.14", "2.36352, 133.697, -51.6308, 0.28", "2.58157, 134.332, -52.4719, 0.14", "2.81159, 134.965, -53.3119, 0.28", "2.87632, 135.126, -53.5333, 0.42", "3.02805, 135.496, -54.0071, 0.14", "3.20446, 135.942, -54.418, 0.1", "3.32812, 136.271, -54.5862, 0.1", "3.56857, 136.993, -54.8372, 0.1", "3.86509, 137.991, -55.0965, 0.1", "4.02084, 138.573, -55.278, 0.1", "4.16193, 139.145, -55.4779, 0.1", "4.21939, 139.405, -55.5703, 0.1", "4.34198, 139.988, -55.7724, 0.1", "4.44884, 140.573, -55.9558, 0.1", "4.64631, 141.704, -56.2345, 0.1", "4.74155, 142.301, -56.38, 0.1", "4.83182, 142.909, -56.5157, 0.1", "4.87115, 143.183, -56.5667, 0.1", "4.93285, 143.735, -56.6429, 0.1", "4.98659, 144.351, -56.6885, 0.1", "5.02675, 144.91, -56.6885, 0.1", "5.05996, 145.529, -56.6885, 0.1", "5.07739, 146.16, -56.6885, 0.1", "5.07635, 146.723, -56.6885, 0.1", "5.07453, 147.345, -56.6885, 0.1", "5.07049, 147.974, -56.6885, 0.1", "5.07358, 148.253, -56.6885, 0.1", "5.08607, 148.815, -56.73, 0.14", "5.1008, 149.37, -56.8061, 0.1", "5.12906, 149.979, -56.9184, 0.1", "5.15281, 150.596, -57.0519, 0.1", "5.17009, 150.975, -57.1394, 0.1", "5.22441, 152.125, -57.404, 0.1", "5.25408, 152.672, -57.5251, 0.1", "5.28722, 153.279, -57.6467, 0.1", "5.30583, 153.831, -57.7419, 0.1", "5.32053, 154.448, -57.8649, 0.1", "5.3242, 154.988, -57.9723, 0.1", "5.31954, 155.61, -58.0798, 0.1", "5.3062, 156.217, -58.2056, 0.1", "5.29639, 156.495, -58.2496, 0.1", "5.26205, 157.671, -58.3717, 0.1", "5.23695, 158.233, -58.3989, 0.1", "5.22071, 158.793, -58.3987, 0.1", "5.20088, 159.346, -58.3661, 0.14", "5.15102, 160.519, -58.2229, 0.1", "5.12094, 161.144, -58.1574, 0.1", "5.08392, 161.691, -58.0991, 0.1", "5.05981, 162.086, -58.1374, 0.1", "5.03282, 162.627, -58.2921, 0.1", "5.01502, 163.124, -58.5514, 0.1", "4.97655, 164.075, -59.192, 0.1", "4.96315, 164.533, -59.5152, 0.1", "4.95889, 165.502, -60.1819, 0.1", "4.96507, 166.048, -60.4992, 0.1", "5.03325, 167.104, -61.0143, 0.1", "5.0595, 167.366, -61.1054, 0.1", "5.13982, 167.989, -61.1515, 0.1", "5.22682, 168.599, -61.0731, 0.1", "5.36361, 169.722, -60.7291, 0.1", "5.40478, 170.072, -60.5643, 0.1", "5.46836, 170.549, -60.2772, 0.1", "5.58453, 171.541, -59.645, 0.1", "5.62509, 172.061, -59.3071, 0.1", "5.6398, 172.555, -59.0361, 0.1", "5.60681, 173.567, -58.6662, 0.14", "5.58055, 173.832, -58.6273, 0.28", "5.4799, 174.45, -58.7025, 0.1", "5.36981, 174.914, -58.978, 0.1", "5.12979, 175.788, -59.682, 0.1", "5.02167, 176.193, -60.0535, 0.1", "4.80519, 177.006, -60.8347, 0.1", "4.70829, 177.41, -61.2104, 0.14", "4.4075, 178.95, -62.573, 0.28", "4.33955, 179.379, -62.911, 0.28", "4.29855, 179.711, -63.1268, 0.14", "4.25068, 180.204, -63.3894, 0.1", "4.21551, 180.793, -63.5811, 0.1", "4.20421, 181.345, -63.6772, 0.1", "4.20325, 181.974, -63.6772, 0.1", "4.20325, 181.974, -63.6772, 0.1", "4.2005, 182.535, -63.6772, 0.1", "4.2107, 183.155, -63.6772, 0.1", "4.21904, 183.786, -63.6772, 0.1" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-36.8536, 61.6814, -38.4829, 0.7", "-37.5322, 61.9937, -38.7329, 0.7", "-38.0614, 62.2703, -38.933, 0.56", "-38.3915, 62.4539, -39.0466, 0.42", "-38.9186, 62.7555, -39.213, 0.28", "-39.8991, 63.345, -39.4942, 0.14", "-40.2274, 63.5536, -39.5794, 0.1", "-40.736, 63.9038, -39.7059, 0.1", "-41.3628, 64.3763, -39.841, 0.14", "-41.664, 64.6184, -39.8897, 0.1", "-42.1407, 65.0206, -39.9763, 0.1", "-42.6038, 65.43, -40.0537, 0.1", "-42.893, 65.7025, -40.1215, 0.1", "-43.325, 66.1332, -40.2476, 0.1", "-43.7402, 66.5766, -40.3852, 0.1", "-44.4514, 67.3473, -40.6279, 0.1", "-44.8183, 67.7386, -40.7902, 0.14", "-45.2221, 68.1718, -41.0041, 0.28", "-45.6145, 68.598, -41.233, 0.14", "-45.9991, 69.0282, -41.4675, 0.1", "-46.2441, 69.3103, -41.6054, 0.14", "-46.8975, 70.1169, -41.8969, 0.28", "-47.131, 70.4131, -42.0391, 0.42", "-47.4604, 70.8819, -42.2837, 0.7", "-47.7326, 71.3226, -42.5046, 0.56", "-48.0128, 71.8098, -42.7732, 0.42", "-48.2541, 72.2593, -43.0119, 0.28", "-48.7473, 73.2256, -43.4712, 0.14", "-48.9796, 73.6724, -43.7172, 0.1", "-49.2016, 74.1148, -43.9859, 0.1", "-49.6531, 75.0378, -44.5622, 0.1", "-49.8683, 75.4832, -44.8315, 0.1", "-50.0873, 75.9335, -45.0832, 0.1", "-50.57, 76.9092, -45.5338, 0.1", "-50.8119, 77.3752, -45.7376, 0.1", "-51.0688, 77.8427, -45.9095, 0.1", "-51.3687, 78.3813, -46.0379, 0.1", "-51.5054, 78.6204, -46.0819, 0.1", "-51.812, 79.1676, -46.1376, 0.1", "-51.812, 79.1676, -46.1376, 0.1", "-52.1066, 79.7075, -46.2359, 0.1", "-52.3576, 80.1816, -46.3984, 0.1", "-52.6037, 80.6306, -46.6088, 0.1", "-52.8624, 81.0678, -46.8456, 0.1", "-53.4302, 81.9575, -47.3771, 0.14", "-53.7107, 82.3534, -47.6576, 0.28", "-54.2356, 83.0194, -48.1875, 0.42", "-54.6692, 83.4985, -48.6465, 0.1", "-55.0295, 83.8587, -49.0167, 0.1", "-55.2612, 84.0632, -49.2537, 0.1", "-55.9676, 84.6471, -49.9997, 0.1", "-56.3411, 84.9385, -50.4042, 0.1", "-56.9938, 85.4501, -51.0904, 0.1", "-57.365, 85.7464, -51.4934, 0.1", "-58.0813, 86.3233, -52.2369, 0.14", "-58.8205, 86.9242, -52.9301, 0.1", "-59.0755, 87.135, -53.1518, 0.1", "-59.4823, 87.4741, -53.4798, 0.1", "-59.8931, 87.8213, -53.7939, 0.1", "-60.2957, 88.1668, -54.1464, 0.1", "-60.5392, 88.3808, -54.3624, 0.14", "-61.1746, 88.9069, -54.9939, 0.28", "-61.6437, 89.2772, -55.5071, 0.28", "-62.2922, 89.7416, -56.2297, 0.14", "-63.0195, 90.2328, -57.0157, 0.1", "-63.282, 90.397, -57.2739, 0.1", "-64.1678, 90.9225, -58.022, 0.1", "-64.4611, 91.0907, -58.2325, 0.1", "-64.9289, 91.3664, -58.5353, 0.1", "-65.4255, 91.6631, -58.7839, 0.14", "-65.9244, 91.9713, -58.9846, 0.1", "-66.2332, 92.1801, -59.1248, 0.1", "-67.0921, 92.8284, -59.614, 0.1", "-67.5176, 93.176, -59.9217, 0.14", "-67.7638, 93.3952, -60.1291, 0.1", "-68.1473, 93.7561, -60.4743, 0.1", "-68.8328, 94.4734, -61.1096, 0.14", "-69.5165, 95.2296, -61.7002, 0.28", "-69.5165, 95.2296, -61.7002, 0.42", "-69.8656, 95.673, -61.9794, 0.28", "-70.1956, 96.1317, -62.2416, 0.14", "-70.4804, 96.5679, -62.4483, 0.1", "-70.7871, 97.0901, -62.6205, 0.1", "-71.0429, 97.573, -62.745, 0.1", "-71.565, 98.6013, -63.0032, 0.1", "-71.7985, 99.0964, -63.1233, 0.1", "-72.0174, 99.591, -63.2701, 0.1", "-72.2294, 100.087, -63.433, 0.1", "-72.4372, 100.58, -63.5977, 0.1", "-72.685, 101.133, -63.7695, 0.1", "-72.9085, 101.62, -63.9341, 0.1", "-73.3914, 102.574, -64.3338, 0.1", "-73.514, 102.804, -64.4409, 0.1", "-73.7924, 103.294, -64.7205, 0.1", "-74.0797, 103.771, -65.0167, 0.1", "-74.6059, 104.625, -65.5617, 0.1", "-74.9168, 105.1, -65.851, 0.1", "-75.2035, 105.516, -66.0705, 0.1", "-75.8544, 106.395, -66.5074, 0.1", "-76.2272, 106.865, -66.7213, 0.1", "-76.3983, 107.064, -66.7944, 0.1", "-76.8278, 107.512, -66.9029, 0.1", "-77.2697, 107.944, -66.983, 0.1", "-77.8502, 108.477, -67.0959, 0.1", "-78.1395, 108.733, -67.146, 0.1", "-78.6084, 109.139, -67.2541, 0.1", "-78.8961, 109.388, -67.3594, 0.1", "-79.3459, 109.764, -67.5703, 0.1", "-80.1784, 110.465, -68.0307, 0.1", "-80.4423, 110.695, -68.2018, 0.1", "-80.8669, 111.06, -68.4893, 0.14", "-81.6857, 111.714, -69.0274, 0.1", "-82.1431, 112.055, -69.2985, 0.1", "-82.3624, 112.195, -69.3991, 0.14", "-82.7026, 112.374, -69.4879, 0.28", "-83.3998, 112.691, -69.6912, 0.7", "-83.9705, 112.905, -69.8494, 0.56", "-84.3375, 113.023, -69.9336, 0.42", "-84.9254, 113.196, -70.0775, 0.28", "-85.5084, 113.359, -70.2195, 0.14", "-86.5212, 113.636, -70.4568, 0.14", "-87.117, 113.787, -70.5935, 0.1", "-87.7046, 113.948, -70.7169, 0.1", "-88.3017, 114.118, -70.8215, 0.1", "-88.671, 114.232, -70.8701, 0.1", "-89.2657, 114.44, -70.9135, 0.14", "-89.8385, 114.673, -70.9564, 0.28", "-90.4027, 114.941, -71.037, 0.14", "-90.9297, 115.233, -71.1902, 0.1", "-91.2527, 115.422, -71.3261, 0.14", "-91.7481, 115.701, -71.5807, 0.14", "-92.6809, 116.178, -72.127, 0.1", "-92.9985, 116.309, -72.3213, 0.1", "-93.8924, 116.541, -72.7915, 0.14", "-94.4147, 116.58, -72.991, 0.1", "-94.9601, 116.492, -73.085, 0.1", "-95.4786, 116.298, -73.0768, 0.1", "-95.9598, 116.04, -72.9499, 0.1", "-96.9149, 115.451, -72.5795, 0.1", "-97.3916, 115.14, -72.3087, 0.1", "-97.8421, 114.829, -72.012, 0.1", "-98.1255, 114.63, -71.8147, 0.1", "-98.9729, 114.054, -71.234, 0.1", "-99.3895, 113.779, -70.9722, 0.1", "-100.288, 113.241, -70.5076, 0.1", "-100.807, 112.948, -70.3029, 0.1", "-101.291, 112.692, -70.1834, 0.1", "-101.782, 112.447, -70.1423, 0.1", "-102.344, 112.166, -70.192, 0.1", "-102.836, 111.914, -70.279, 0.1", "-103.862, 111.392, -70.5483, 0.14", "-104.349, 111.145, -70.6748, 0.1", "-104.836, 110.894, -70.7924, 0.1", "-105.375, 110.609, -70.9491, 0.1", "-105.613, 110.478, -71.0238, 0.1", "-106.087, 110.212, -71.1621, 0.1", "-106.62, 109.913, -71.2818, 0.1", "-107.09, 109.632, -71.4128, 0.1", "-108.048, 109.034, -71.7471, 0.14", "-108.365, 108.836, -71.8855, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-16.3143, 39.033, -36.6221, 1.12", "-17.461, 39.7488, -38.2223, 1.12", "-17.6078, 39.8391, -38.445, 1.12", "-17.9968, 40.0759, -39.0878, 0.14", "-18.5227, 40.4271, -39.961, 0.1", "-19.0325, 40.7976, -40.8297, 0.1", "-19.6219, 41.256, -41.8674, 0.1", "-20.0785, 41.6221, -42.7669, 0.1", "-20.5392, 41.9973, -43.6667, 0.1", "-20.7765, 42.1988, -44.1211, 0.1", "-21.3323, 42.6733, -45.0548, 0.1", "-21.9246, 43.2022, -45.925, 0.1", "-21.9246, 43.2022, -45.925, 0.14", "-22.3558, 43.608, -46.4446, 0.1", "-22.5709, 43.817, -46.7066, 0.1", "-23.2561, 44.4896, -47.547, 0.1", "-23.5551, 44.8117, -47.8992, 0.1", "-24.0922, 45.4491, -48.5751, 0.1", "-24.3538, 45.797, -48.9325, 0.14", "-24.7857, 46.4437, -49.6176, 0.28", "-25.0343, 46.853, -50.0274, 0.7", "-25.2362, 47.2214, -50.3837, 0.56", "-25.6425, 47.9966, -51.1835, 0.42", "-25.822, 48.3593, -51.5572, 0.28", "-26.2215, 49.119, -52.3642, 0.14", "-26.4326, 49.4809, -52.7406, 0.1", "-26.8938, 50.1936, -53.511, 0.1", "-27.4151, 50.8894, -54.2602, 0.14", "-27.4151, 50.8894, -54.2602, 0.28", "-27.8443, 51.3418, -54.7415, 0.1", "-28.2127, 51.681, -55.1262, 0.1", "-28.4523, 51.8769, -55.3626, 0.1", "-28.7174, 52.0757, -55.5836, 0.14", "-28.9082, 52.2214, -55.7308, 0.28", "-29.6165, 52.8132, -56.2846, 0.84", "-30.3357, 53.4653, -56.9521, 0.7", "-30.7003, 53.8135, -57.318, 0.56", "-30.9386, 54.0429, -57.5483, 0.42", "-31.3067, 54.3967, -57.9051, 0.28", "-31.6788, 54.7405, -58.2791, 0.14", "-32.2851, 55.3079, -58.9589, 0.28", "-32.2851, 55.3079, -58.9589, 0.42", "-32.5945, 55.6098, -59.4168, 0.1", "-33.1352, 56.1887, -60.2888, 0.1", "-33.5661, 56.736, -61.1095, 0.1", "-33.9743, 57.3948, -62.002, 0.1", "-33.9743, 57.3948, -62.002, 0.14", "-34.1056, 57.7709, -62.3824, 0.1", "-34.1917, 58.1856, -62.7536, 0.1", "-34.2601, 59.1203, -63.4751, 0.14", "-34.256, 59.6261, -63.8333, 0.1", "-34.2328, 60.0893, -64.148, 0.1", "-34.1856, 61.0664, -64.811, 0.1", "-34.1735, 61.3793, -65.0425, 0.1", "-34.1678, 62.3291, -65.7473, 0.14", "-34.1678, 62.3291, -65.7473, 0.28", "-34.1998, 62.7722, -66.0934, 0.28", "-34.2369, 63.2154, -66.4184, 0.14", "-34.3208, 64.1452, -67.0837, 0.1", "-34.3555, 64.6048, -67.4073, 0.1", "-34.3956, 65.5989, -68.0469, 0.14", "-34.3926, 66.0802, -68.3393, 0.1", "-34.3568, 66.619, -68.6474, 0.1", "-34.2385, 67.5792, -69.1193, 0.14", "-34.149, 68.1554, -69.3295, 0.1", "-34.0553, 68.7555, -69.5024, 0.1", "-33.9756, 69.3513, -69.6535, 0.1", "-33.9301, 69.7333, -69.7565, 0.14", "-33.8723, 70.3284, -69.9598, 0.28", "-33.8318, 70.8267, -70.1911, 0.42", "-33.7892, 71.3025, -70.4893, 0.56", "-33.7047, 72.1028, -71.1464, 0.42", "-33.652, 72.5333, -71.6053, 0.14", "-33.5543, 73.191, -72.4477, 0.1", "-33.4398, 73.8617, -73.4151, 0.1", "-33.395, 74.0771, -73.7365, 0.1", "-33.2394, 74.75, -74.6954, 0.14", "-33.0956, 75.3843, -75.455, 0.28", "-33.0574, 75.575, -75.6587, 0.42", "-32.989, 76.0068, -76.0137, 1.26", "-32.9199, 76.5143, -76.3832, 1.12", "-32.854, 76.9993, -76.7635, 0.98", "-32.7825, 77.4791, -77.1678, 0.84", "-32.6384, 78.3128, -77.9854, 0.7", "-32.6026, 78.4902, -78.1976, 0.84", "-32.4443, 79.1559, -79.1611, 1.12", "-32.3129, 79.7248, -80.0615, 0.98", "-32.1732, 80.343, -81.0601, 0.84", "-32.0553, 80.9175, -81.9588, 0.7", "-31.9427, 81.5254, -82.8399, 0.56", "-31.8242, 82.2206, -83.7894, 0.42", "-31.7794, 82.5773, -84.2104, 0.28", "-31.7424, 83.0354, -84.6435, 0.14", "-31.7193, 83.4941, -84.9694, 0.1", "-31.6849, 84.5523, -85.4848, 0.1", "-31.6849, 84.5523, -85.4848, 0.14", "-31.6477, 85.1014, -85.6043, 0.56", "-31.5931, 85.7101, -85.7635, 0.42", "-31.5442, 86.3059, -85.9273, 0.28", "-31.5025, 86.916, -86.0847, 0.14", "-31.4808, 87.5103, -86.2596, 0.1", "-31.4724, 87.8842, -86.3965, 0.1", "-31.4503, 88.902, -86.9234, 0.1", "-31.4431, 89.3568, -87.2508, 0.1", "-31.4297, 89.7639, -87.6398, 0.1", "-31.4062, 90.4657, -88.402, 0.14", "-31.396, 90.8673, -88.8892, 0.28", "-31.3685, 91.5111, -89.7514, 0.14", "-31.3249, 92.2052, -90.7016, 0.1", "-31.2876, 92.838, -91.5715, 0.1", "-31.275, 93.181, -92.018, 0.14", "-31.2819, 93.9358, -92.8745, 0.1", "-31.3378, 94.6969, -93.6337, 0.1", "-31.3963, 95.136, -93.9769, 0.1", "-31.4859, 95.6189, -94.2525, 0.1", "-31.5975, 96.1172, -94.4836, 0.1", "-31.7172, 96.6178, -94.6874, 0.1", "-31.8538, 97.1395, -94.84, 0.1", "-31.8538, 97.1395, -94.84, 0.14", "-32.0037, 97.6617, -94.9778, 0.1", "-32.3101, 98.7303, -95.2631, 0.1", "-32.4454, 99.2451, -95.4384, 0.1", "-32.5706, 99.7588, -95.6325, 0.1", "-32.6766, 100.264, -95.8244, 0.1", "-32.7741, 100.787, -96.0091, 0.1", "-32.8515, 101.317, -96.1735, 0.1", "-32.9471, 102.34, -96.4955, 0.1", "-32.9685, 102.866, -96.6864, 0.1", "-32.9708, 103.428, -96.9482, 0.1", "-32.955, 103.924, -97.2077, 0.1", "-32.921, 104.452, -97.5315, 0.1", "-32.8333, 105.444, -98.1697, 0.1", "-32.7769, 105.956, -98.5314, 0.1", "-32.6559, 106.761, -99.1724, 0.1", "-32.5706, 107.229, -99.5876, 0.1", "-32.4014, 108.056, -100.415, 0.1", "-32.3123, 108.482, -100.859, 0.1", "-32.143, 109.236, -101.608, 0.1", "-32.0761, 109.516, -101.871, 0.14", "-32.0213, 109.735, -102.038, 0.28", "-31.783, 110.669, -102.659, 0.7", "-31.6424, 111.226, -102.916, 0.56", "-31.5455, 111.572, -103.067, 0.42", "-31.3966, 112.13, -103.323, 0.28", "-31.2727, 112.658, -103.643, 0.14", "-31.2072, 112.964, -103.875, 0.1", "-31.1171, 113.44, -104.28, 0.1", "-31.0004, 114.296, -105.081, 0.14", "-30.917, 115.114, -105.88, 0.28", "-30.867, 115.929, -106.686, 0.14", "-30.8564, 116.782, -107.498, 0.1", "-30.8679, 117.199, -107.877, 0.1", "-30.8985, 117.635, -108.227, 0.1", "-30.9345, 117.97, -108.439, 0.1", "-31.0052, 118.465, -108.677, 0.1", "-31.1177, 118.967, -108.899, 0.14", "-31.466, 119.993, -109.373, 0.28", "-31.672, 120.434, -109.657, 0.42", "-31.672, 120.434, -109.657, 0.56", "-32.0111, 120.899, -110.195, 0.28", "-32.4935, 121.501, -111.089, 0.14", "-32.6368, 121.667, -111.411, 0.1", "-33.0284, 122.107, -112.436, 0.1", "-33.377, 122.51, -113.491, 0.1", "-33.6716, 122.856, -114.423, 0.1", "-33.9532, 123.194, -115.363, 0.1", "-34.5634, 123.889, -117.247, 0.14", "-34.8921, 124.243, -118.163, 0.28", "-34.8921, 124.243, -118.163, 0.42", "-35.2711, 124.532, -118.807, 0.7", "-35.5068, 124.663, -119.088, 0.56", "-36.0571, 124.878, -119.622, 0.42", "-36.3414, 124.944, -119.888, 0.56", "-36.5353, 124.972, -120.09, 0.7", "-37.2799, 125.043, -121.005, 1.68", "-37.9351, 125.061, -121.94, 1.54", "-38.4828, 125.042, -122.822, 1.4", "-39.0242, 124.981, -123.831, 1.26", "-39.0242, 124.981, -123.831, 1.12", "-39.1388, 124.961, -124.087, 0.98" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-16.3143, 39.033, -36.6221, 1.4", "-16.1695, 39.4778, -37.6687, 1.4", "-16.0401, 39.8703, -38.6591, 1.26", "-15.8897, 40.2735, -39.7597, 1.12", "-15.7456, 40.6193, -40.7707, 0.98", "-15.586, 40.9209, -41.7882, 0.84", "-15.4143, 41.1679, -42.8217, 0.7", "-15.0185, 41.4562, -44.8575, 0.56", "-14.8006, 41.5284, -45.8707, 0.56", "-14.733, 41.5313, -46.144, 0.1", "-14.4097, 41.5122, -47.2768, 0.1", "-14.0602, 41.4892, -48.3697, 0.1", "-13.6428, 41.4757, -49.4713, 0.14", "-13.4798, 41.4907, -49.8344, 0.84", "-12.9889, 41.6421, -50.899, 0.7", "-12.4998, 41.9131, -51.9401, 0.56", "-12.0565, 42.291, -52.8414, 0.42", "-11.8232, 42.5461, -53.2861, 0.28", "-11.3689, 43.1533, -54.1877, 0.14", "-10.9715, 43.7188, -55.0128, 0.28", "-10.7599, 44.0794, -55.4704, 0.42", "-10.5882, 44.4813, -55.9262, 0.28", "-10.5164, 44.7393, -56.2091, 0.14", "-10.4271, 45.4484, -56.963, 0.1", "-10.4194, 45.6397, -57.1696, 0.14", "-10.4134, 46.0215, -57.5798, 0.1", "-10.3719, 46.7603, -58.4571, 0.1", "-10.2943, 47.4798, -59.3926, 0.1", "-10.2298, 47.7967, -59.8419, 0.14", "-10.0506, 48.3796, -60.7289, 0.28", "-9.91895, 48.6953, -61.2597, 1.4", "-9.62739, 49.2215, -62.2727, 1.26", "-9.3153, 49.65, -63.2095, 1.12", "-8.93856, 50.0638, -64.21, 0.98", "-8.54691, 50.4121, -65.1501, 1.12", "-8.06882, 50.7665, -66.1669, 0.98", "-7.5957, 51.0416, -67.0959, 0.84", "-7.0437, 51.3161, -68.0568, 0.7", "-6.74536, 51.4483, -68.5124, 0.56", "-6.52633, 51.5452, -68.8306, 0.42", "-6.213, 51.686, -69.2769, 0.28", "-5.65563, 51.9732, -70.1479, 0.42", "-5.46941, 52.0891, -70.4757, 0.56", "-4.95139, 52.4814, -71.4628, 0.42", "-4.5075, 52.8714, -72.3586, 0.28", "-4.03834, 53.3352, -73.3347, 0.14", "-3.61583, 53.7914, -74.2134, 0.1", "-3.12777, 54.3447, -75.1319, 0.1", "-2.85678, 54.6558, -75.6075, 0.1", "-2.67361, 54.8665, -75.8862, 0.1", "-2.09689, 55.5634, -76.6466, 0.1", "-1.91297, 55.8133, -76.882, 0.1", "-1.65227, 56.2382, -77.2667, 0.1", "-1.23236, 57.0874, -78.117, 0.14", "-1.16194, 57.2731, -78.3167, 0.14", "-1.04716, 57.6308, -78.7326, 0.1", "-0.851169, 58.3923, -79.6078, 0.1", "-0.684601, 59.1076, -80.4879, 0.1", "-0.551122, 59.7567, -81.3361, 0.1", "-0.483494, 60.0762, -81.7797, 0.1", "-0.322448, 60.7493, -82.7376, 0.14", "-0.223305, 61.0932, -83.2436, 0.28", "-0.0357173, 61.6925, -84.1201, 0.14", "0.173788, 62.3689, -85.0662, 0.1", "0.346969, 62.9924, -85.9223, 0.1", "0.403178, 63.2278, -86.2386, 0.1", "0.544457, 63.9518, -87.1564, 0.1", "0.683776, 64.7, -88.0604, 0.1", "0.758238, 65.0748, -88.4704, 0.1", "0.942656, 65.8665, -89.321, 0.14", "1.05136, 66.2304, -89.733, 0.14", "1.12253, 66.4029, -89.944, 0.28", "1.25642, 66.6335, -90.2278, 0.56", "1.77956, 67.2925, -91.0576, 0.42", "2.33737, 67.8467, -91.788, 0.28", "3.02803, 68.4232, -92.5542, 0.14", "3.3623, 68.6664, -92.9327, 0.28", "3.7189, 68.9004, -93.3959, 0.14", "4.00656, 69.0245, -93.8606, 0.28", "4.11189, 69.0173, -94.1217, 0.42", "4.11189, 69.0173, -94.1217, 0.56", "4.3382, 68.7161, -95.13, 0.84", "4.57387, 68.4167, -96.1367, 0.7", "4.86552, 68.0899, -97.191, 0.56", "5.19126, 67.8271, -98.1418, 0.42", "5.30091, 67.7738, -98.3927, 0.56", "5.59976, 67.6935, -98.9298, 0.42", "6.26048, 67.6451, -99.8653, 0.28", "6.63886, 67.6605, -100.368, 0.14", "7.33286, 67.7625, -101.275, 0.1", "7.99945, 67.9055, -102.192, 0.1", "8.15085, 67.9451, -102.426, 0.1", "8.7083, 68.1215, -103.412, 0.1", "9.16643, 68.31, -104.281, 0.14", "9.3318, 68.3997, -104.632, 0.28", "9.76454, 68.7124, -105.647, 0.14", "10.1504, 69.0686, -106.665, 0.1", "10.4626, 69.4163, -107.593, 0.1", "10.6357, 69.6357, -108.158, 0.42", "10.9096, 70.0378, -109.116, 0.42", "11.1672, 70.5115, -110.168, 0.28", "11.3509, 71.0055, -111.106, 0.14", "11.4917, 71.5469, -112.024, 0.28", "11.5888, 72.0975, -112.897, 0.42", "11.6178, 72.3959, -113.37, 0.1", "11.6213, 72.7016, -113.84, 0.1", "11.5917, 73.0004, -114.305, 0.1", "11.4819, 73.5714, -115.211, 0.14", "11.3115, 74.1804, -116.167, 0.7", "11.1137, 74.7674, -117.133, 0.56", "10.9194, 75.2601, -118.026, 0.42", "10.6841, 75.7927, -119.055, 0.28", "10.4388, 76.2961, -120.055, 0.14", "10.2993, 76.5701, -120.597, 0.1", "10.0895, 77.0209, -121.509, 0.1", "9.9166, 77.5267, -122.559, 0.1", "9.83329, 77.9995, -123.601, 0.1", "9.83329, 77.9995, -123.601, 0.14", "9.96003, 78.382, -124.596, 0.56", "10.1632, 78.7548, -125.585, 0.42", "10.4678, 79.1685, -126.649, 0.28", "10.8081, 79.5409, -127.558, 0.14", "11.2411, 79.9628, -128.569, 0.1", "11.7061, 80.3948, -129.566, 0.1", "11.8722, 80.5484, -129.883, 0.1", "12.4237, 81.0636, -130.792, 0.1", "12.7322, 81.3631, -131.243, 0.1", "13.2759, 81.919, -131.932, 0.14", "13.4307, 82.0809, -132.098, 0.28", "13.7874, 82.4569, -132.456, 0.7", "14.1512, 82.8323, -132.808, 0.56", "14.8583, 83.5493, -133.426, 0.42", "15.1042, 83.7771, -133.624, 0.28", "15.5322, 84.1085, -133.946, 0.14", "16.3788, 84.6187, -134.587, 0.1", "16.59, 84.6977, -134.756, 0.1", "16.8012, 84.7561, -134.928, 0.1", "17.288, 84.8648, -135.296, 0.1", "18.1786, 85.0688, -136.047, 0.1", "18.4721, 85.1486, -136.305, 0.1", "19.3013, 85.4597, -137.079, 0.1", "19.7122, 85.6691, -137.496, 0.56", "20.1094, 85.9317, -137.908, 0.42", "20.7268, 86.4604, -138.609, 0.28", "21.0746, 86.809, -139.001, 0.14", "21.7045, 87.5004, -139.717, 0.1", "21.9132, 87.7385, -139.959, 0.1", "22.2432, 88.0772, -140.376, 0.1", "22.7757, 88.6071, -141.147, 0.1", "22.9106, 88.7296, -141.358, 0.14", "23.086, 88.8832, -141.681, 0.28", "23.5673, 89.279, -142.681, 0.14", "24.0082, 89.6502, -143.673, 0.1", "24.4001, 90.0106, -144.605, 0.14", "24.8175, 90.4273, -145.589, 0.1", "25.1948, 90.8591, -146.497, 0.14", "25.5659, 91.329, -147.346, 0.28", "25.7881, 91.6749, -147.823, 0.1", "26.0104, 92.0797, -148.239, 0.1", "26.1625, 92.3554, -148.482, 0.1", "26.412, 92.7745, -148.868, 0.1", "26.6997, 93.1187, -149.31, 0.1", "27.2546, 93.5256, -150.264, 0.1", "27.3839, 93.5778, -150.509, 0.14", "27.8757, 93.6906, -151.46, 0.56", "28.3591, 93.7637, -152.415, 0.42", "28.8741, 93.8243, -153.478, 0.28", "29.3295, 93.8921, -154.451, 0.14", "29.8085, 93.9854, -155.483, 0.28", "29.9251, 94.019, -155.737, 0.42", "30.4332, 94.2221, -156.78, 0.28", "30.9277, 94.4646, -157.707, 0.14", "31.4973, 94.776, -158.69, 0.1", "32.0484, 95.0793, -159.517, 0.1", "32.2141, 95.1631, -159.729, 0.42", "32.5651, 95.3175, -160.124, 0.28", "32.9675, 95.4641, -160.49, 0.14", "33.8416, 95.7749, -161.164, 0.1", "34.2604, 95.9506, -161.497, 0.1", "34.6407, 96.17, -161.845, 0.1", "35.1871, 96.7049, -162.699, 0.14", "35.2417, 96.8559, -162.919, 0.28", "35.2038, 97.2257, -163.418, 0.1", "34.9574, 97.9263, -164.333, 0.1", "34.7845, 98.308, -164.813, 0.1", "34.464, 98.9296, -165.627, 0.1", "34.2932, 99.2646, -166.046, 0.1", "33.9891, 99.9562, -166.902, 0.1", "33.743, 100.651, -167.781, 0.1", "33.6497, 100.989, -168.219, 0.1", "33.5191, 101.565, -169.025, 0.14", "33.4525, 101.893, -169.559, 0.14", "33.414, 102.075, -169.907, 0.1", "33.3021, 102.574, -170.972, 0.1", "33.2105, 102.954, -171.934, 0.1", "33.1089, 103.35, -173.006, 0.1", "32.918, 104.023, -174.901, 0.1", "32.8051, 104.37, -175.988, 0.1", "32.7034, 104.663, -176.979, 0.1", "32.5484, 105.208, -178.917, 0.1" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "15.5682, -88.7879, 7.41422, 0.84", "15.6828, -89.721, 7.93843, 0.84", "15.7308, -90.2148, 8.18413, 0.98", "15.7807, -90.7264, 8.40753, 1.12", "15.8234, -91.2513, 8.607, 0.98", "15.9139, -92.3702, 8.97948, 0.84", "15.9514, -92.907, 9.13594, 0.7", "15.9948, -93.5134, 9.25697, 0.7", "16.0209, -94.0704, 9.31355, 0.84", "16.0449, -94.6897, 9.31364, 0.84", "16.0712, -95.2467, 9.25716, 0.84", "16.1046, -95.8635, 9.13461, 0.84", "16.1251, -96.4104, 9.01415, 0.7", "16.17, -97.5363, 8.67551, 0.56", "16.1808, -98.0738, 8.51731, 0.7", "16.1821, -98.6173, 8.36982, 0.84", "16.162, -99.2233, 8.23212, 0.7", "16.1426, -99.6153, 8.16479, 0.84", "16.0751, -100.754, 8.04911, 0.98", "15.9797, -101.826, 8.0533, 0.98", "15.8959, -102.44, 8.06667, 0.84", "15.7986, -103.064, 8.03593, 0.98", "15.7593, -103.342, 8.03158, 0.84", "15.7296, -103.622, 8.03837, 0.84", "15.6885, -104.242, 8.08033, 0.98", "15.6963, -104.874, 8.06576, 1.12", "15.7821, -105.909, 8.06435, 1.26", "15.889, -106.942, 8.08111, 1.12", "15.9387, -107.491, 8.0969, 0.98", "15.9927, -108.051, 8.11879, 1.12", "16.0568, -108.607, 8.14724, 0.98", "16.1168, -109.166, 8.18212, 1.12", "16.1548, -109.566, 8.21034, 1.12", "16.1841, -110.185, 8.21034, 0.98", "16.1807, -110.746, 8.21034, 1.12", "16.1429, -111.363, 8.16584, 0.98", "16.0828, -111.915, 8.09172, 0.84", "16.0064, -112.464, 7.99024, 0.98", "15.9177, -113.064, 7.84959, 0.7", "15.8181, -113.662, 7.67205, 0.84", "15.5908, -114.649, 7.30945, 0.98", "15.4328, -115.202, 7.07277, 0.84", "15.4328, -115.202, 7.07277, 0.98", "15.2025, -115.722, 6.82164, 0.84", "15.1079, -115.96, 6.7051, 0.84", "14.854, -116.499, 6.52083, 0.98", "14.5608, -117.058, 6.52083, 0.84", "14.3771, -117.401, 6.52083, 0.7", "14.2662, -117.65, 6.52083, 0.7", "14.0776, -118.25, 6.52083, 0.84", "14.0036, -118.638, 6.52083, 0.7", "13.9806, -119.251, 6.62848, 0.7", "13.9863, -119.852, 6.78603, 0.84", "14.0097, -120.456, 6.96507, 0.7", "14.0428, -120.992, 7.12532, 0.7", "14.0842, -121.529, 7.28007, 0.56", "14.2215, -122.622, 7.5838, 0.7", "14.2215, -122.622, 7.5838, 0.84", "14.2874, -122.875, 7.68982, 0.84", "14.4222, -123.386, 7.87397, 0.98", "14.5425, -123.921, 7.99206, 0.84", "14.6199, -124.467, 7.87871, 0.84", "14.623, -125.239, 7.03077, 0.98", "14.5946, -125.55, 6.56209, 0.98", "14.5005, -126.087, 5.63795, 0.84", "14.3905, -126.58, 4.73038, 0.7", "14.1664, -127.528, 2.96072, 0.56", "14.051, -128.012, 2.04969, 0.56", "14.0103, -128.195, 1.70842, 0.84", "13.9565, -128.533, 1.17995, 0.84", "13.9517, -128.946, 0.800229, 0.84", "13.9976, -129.463, 0.608062, 0.98", "14.0358, -129.738, 0.586254, 1.12", "14.081, -130.016, 0.586254, 0.98", "14.1876, -130.569, 0.586254, 0.98", "14.2898, -131.12, 0.586254, 0.98", "14.3903, -131.734, 0.586254, 0.84", "14.4625, -132.292, 0.586254, 0.84", "14.5248, -132.849, 0.586254, 0.84", "14.5471, -133.13, 0.586254, 0.98", "14.5674, -133.528, 0.586254, 0.84", "14.5751, -134.078, 0.586254, 0.84", "14.5586, -134.705, 0.528893, 0.98", "14.5238, -135.243, 0.373176, 1.12", "14.4869, -135.61, 0.249541, 0.98", "14.4869, -135.61, 0.249541, 1.12", "14.452, -135.984, 0.118058, 0.84", "14.3554, -137.102, -0.255831, 0.84", "14.3031, -138.197, -0.579809, 0.84", "14.2731, -139.262, -0.735927, 0.56", "14.2807, -139.822, -0.743127, 0.56", "14.3105, -140.438, -0.684423, 0.56", "14.3601, -140.986, -0.576461, 0.56", "14.4142, -141.51, -0.385169, 0.7", "14.5352, -142.59, 0.0798165, 0.84", "14.5959, -143.108, 0.283115, 0.98", "14.6524, -143.618, 0.492767, 1.12", "14.7119, -144.132, 0.707439, 1.12", "14.8367, -145.246, 1.08107, 1.12", "14.9131, -145.795, 1.16203, 0.98", "15.0273, -146.401, 1.09535, 0.84", "15.0857, -146.665, 1.02523, 0.7", "15.1562, -146.908, 0.902589, 0.56", "15.481, -147.855, 0.341617, 0.7", "15.8483, -148.793, -0.268755, 0.84", "16.0418, -149.255, -0.521148, 0.98", "16.2555, -149.74, -0.712289, 0.84", "16.6668, -150.823, -0.927397, 0.84", "16.965, -151.814, -1.01269, 0.98", "17.0864, -152.351, -1.02529, 0.98", "17.2609, -153.484, -0.958211, 0.98", "17.3213, -154.04, -0.934123, 0.98", "17.3788, -154.826, -0.914739, 0.98", "17.4505, -155.9, -0.906708, 0.84", "17.5736, -156.922, -1.0369, 0.98", "17.7886, -157.924, -1.20686, 0.84", "17.956, -158.448, -1.31362, 0.84", "18.1871, -158.948, -1.37211, 0.84", "18.3903, -159.296, -1.37874, 1.12", "18.7281, -159.818, -1.33933, 0.98", "19.0815, -160.331, -1.34511, 0.84", "19.3967, -160.781, -1.46808, 0.98", "19.6129, -161.09, -1.56599, 1.12", "19.918, -161.549, -1.68312, 0.98", "20.2337, -162.077, -1.78082, 0.84", "20.8085, -163.098, -1.89856, 0.84", "21.3434, -164.113, -1.94198, 0.98", "21.8068, -165.042, -1.91701, 0.84", "22.2786, -166.083, -1.8238, 0.84", "22.4936, -166.587, -1.74532, 0.84", "22.704, -167.159, -1.6174, 0.98", "22.8611, -167.677, -1.4702, 1.12", "22.9893, -168.209, -1.34021, 0.98", "23.0902, -168.761, -1.33483, 0.98", "23.1251, -169.037, -1.37496, 0.98", "23.143, -169.426, -1.45705, 0.98", "23.1286, -170.027, -1.61669, 1.12", "23.1018, -170.629, -1.79896, 1.26", "23.0675, -171.619, -2.10895, 1.12", "23.0675, -171.619, -2.10895, 0.98", "23.065, -171.987, -2.23766, 0.56", "23.0814, -172.496, -2.47931, 0.7", "23.0835, -172.987, -2.74896, 0.84", "23.0464, -173.452, -3.06447, 0.84", "22.9483, -173.922, -3.45928, 0.98", "22.7052, -174.735, -4.28216, 0.84", "22.4457, -175.468, -5.12397, 0.98", "22.2976, -175.793, -5.55632, 1.12", "21.954, -176.383, -6.47696, 1.26", "21.5609, -176.913, -7.457, 1.12", "21.5609, -176.913, -7.457, 0.98" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "15.5682, -88.7879, 7.41422, 0.98", "15.9834, -89.6174, 6.94641, 0.98", "16.2244, -90.0394, 6.66174, 1.12", "16.4834, -90.4529, 6.38592, 1.26", "16.7917, -90.9123, 6.09984, 1.12", "17.3951, -91.7541, 5.60538, 0.98", "18.0461, -92.6177, 5.13819, 1.12", "18.2766, -92.8981, 4.97409, 0.98", "18.6653, -93.3247, 4.73991, 0.84", "19.0807, -93.747, 4.54731, 0.7", "19.3592, -94.0197, 4.46542, 0.56", "19.8142, -94.4428, 4.4205, 0.42", "20.2807, -94.8765, 4.4205, 0.28", "20.5639, -95.1439, 4.4205, 0.42", "21.0208, -95.5772, 4.4205, 0.28", "21.4807, -95.9974, 4.4205, 0.14", "21.7769, -96.2636, 4.4205, 0.1", "22.2482, -96.6708, 4.4205, 0.1", "22.7211, -97.0762, 4.4205, 0.1", "23.1998, -97.4853, 4.4205, 0.14", "23.6775, -97.8832, 4.4205, 0.1", "24.1655, -98.2811, 4.4205, 0.14", "24.4681, -98.5263, 4.4205, 0.28", "24.6919, -98.6973, 4.4205, 0.42" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-18.8818, -65.5977, -38.0121, 0.1", "-18.8606, -66.2271, -38.0121, 0.1", "-18.8534, -66.7817, -37.9319, 0.1", "-18.8417, -67.388, -37.8038, 0.1", "-18.8368, -67.9174, -37.6199, 0.1", "-18.8267, -68.502, -37.3862, 0.1", "-18.82, -69.0206, -37.1738, 0.1", "-18.8035, -69.9958, -36.7262, 0.1", "-18.7981, -70.4968, -36.475, 0.1", "-18.7763, -71.5091, -35.8657, 0.1", "-18.7612, -71.9686, -35.5623, 0.1", "-18.7252, -72.4914, -35.2132, 0.1", "-18.7013, -72.7293, -35.0695, 0.1", "-18.7013, -72.7293, -35.0695, 0.1", "-18.4922, -73.6759, -34.696, 0.1", "-18.3388, -74.198, -34.5508, 0.1", "-18.1701, -74.7079, -34.4285, 0.1", "-17.9804, -75.2327, -34.3765, 0.1", "-17.7889, -75.7622, -34.3882, 0.1", "-17.5803, -76.3449, -34.4584, 0.1", "-17.3961, -76.8652, -34.5705, 0.1", "-17.2264, -77.3853, -34.692, 0.1", "-16.9048, -78.4571, -34.9473, 0.1", "-16.7704, -78.9875, -35.0687, 0.1", "-16.6589, -79.5157, -35.1781, 0.1", "-16.5641, -80.0627, -35.2728, 0.1", "-16.4765, -80.6761, -35.3946, 0.1", "-16.4087, -81.2246, -35.5031, 0.1", "-16.3388, -81.8335, -35.6074, 0.14", "-16.285, -82.3831, -35.7179, 0.28", "-16.2331, -82.9282, -35.8374, 0.42", "-16.1135, -84.0698, -36.0956, 0.28", "-16.0462, -84.6035, -36.253, 0.14", "-15.9841, -85.1329, -36.4346, 0.1", "-15.9112, -85.7216, -36.6513, 0.1", "-15.8487, -86.2385, -36.8394, 0.1", "-15.7789, -86.767, -37.0125, 0.1", "-15.6219, -87.7622, -37.2659, 0.1", "-15.5569, -88.1435, -37.3606, 0.1", "-15.4539, -88.681, -37.4815, 0.1", "-15.3248, -89.2074, -37.5797, 0.1", "-15.1764, -89.746, -37.651, 0.1", "-15.0138, -90.2811, -37.6876, 0.1", "-14.8377, -90.8161, -37.6876, 0.1", "-14.6508, -91.3444, -37.6876, 0.1", "-14.4417, -91.9312, -37.6876, 0.1", "-14.2535, -92.462, -37.6876, 0.14", "-14.0798, -92.9934, -37.6487, 0.28", "-13.9326, -93.5225, -37.5786, 0.14", "-13.8067, -94.0602, -37.4833, 0.1", "-13.7012, -94.6015, -37.3689, 0.1", "-13.6182, -95.1403, -37.239, 0.1", "-13.4652, -96.2674, -36.9381, 0.1", "-13.3784, -96.8696, -36.7688, 0.14", "-13.2793, -97.4038, -36.6205, 0.28", "-13.2157, -97.6674, -36.5552, 0.42", "-13.2157, -97.6674, -36.5552, 0.56", "-13.1163, -97.9296, -36.5293, 0.56", "-12.8658, -98.4999, -36.5293, 0.56", "-12.6057, -99.0705, -36.5869, 0.7", "-12.3855, -99.5787, -36.6724, 0.56", "-12.1772, -100.092, -36.7772, 0.42", "-11.9868, -100.596, -36.8894, 0.28", "-11.807, -101.112, -37.0154, 0.14", "-11.4959, -102.18, -37.2969, 0.1", "-11.3648, -102.706, -37.4385, 0.1", "-11.2406, -103.238, -37.5756, 0.1", "-11.123, -103.773, -37.6957, 0.14", "-11.123, -103.773, -37.6957, 0.28", "-11.0433, -104.153, -37.73, 0.56", "-10.9261, -104.701, -37.73, 0.56", "-10.8034, -105.25, -37.73, 0.42", "-10.675, -105.796, -37.73, 0.28", "-10.5402, -106.333, -37.73, 0.14", "-10.3854, -106.872, -37.73, 0.28", "-10.2218, -107.409, -37.6933, 0.28", "-10.0638, -107.935, -37.5792, 0.14", "-9.92492, -108.447, -37.4001, 0.1", "-9.80767, -108.93, -37.1348, 0.1", "-9.73581, -109.254, -36.9145, 0.1", "-9.57775, -110.107, -36.2793, 0.84", "-9.43086, -111.029, -35.6128, 0.7", "-9.36331, -111.56, -35.2766, 0.56", "-9.26902, -112.575, -34.7489, 0.42", "-9.30177, -112.846, -35.2271, 0.28", "-9.34277, -113.116, -35.7946, 0.14", "-9.41094, -113.52, -36.7485, 0.1", "-9.54587, -114.231, -38.6548, 0.1", "-9.65417, -114.882, -40.5828, 0.1", "-9.7012, -115.21, -41.6066, 0.1", "-9.73184, -115.518, -42.5577, 0.14", "-9.73184, -115.518, -42.5577, 0.28", "-9.72261, -115.646, -42.8086, 0.84", "-9.63086, -116.129, -43.1905, 0.7", "-9.52683, -116.668, -43.3029, 0.56", "-9.43334, -117.222, -43.3364, 0.42", "-9.36764, -117.769, -43.3364, 0.28", "-9.32645, -118.398, -43.3364, 0.14", "-9.32567, -119.019, -43.3364, 0.1", "-9.35969, -119.647, -43.379, 0.1", "-9.38613, -119.924, -43.3952, 0.1", "-9.46653, -120.538, -43.4239, 0.1", "-9.55048, -121.161, -43.3975, 0.1", "-9.62776, -121.783, -43.3187, 0.1", "-9.72851, -122.795, -43.1209, 0.14", "-9.79674, -123.839, -42.8663, 0.56", "-9.81336, -124.448, -42.701, 0.42", "-9.78317, -125.55, -42.3798, 0.28", "-9.72341, -126.143, -42.2038, 0.14", "-9.63532, -126.675, -42.0529, 0.28", "-9.5206, -127.21, -41.9168, 0.42", "-9.37382, -127.746, -41.8457, 0.28", "-9.20774, -128.273, -41.8049, 0.28", "-9.00782, -128.863, -41.8049, 0.28", "-8.81401, -129.391, -41.8049, 0.42", "-8.62267, -129.918, -41.8049, 0.28", "-8.43635, -130.447, -41.8049, 0.42", "-8.43635, -130.447, -41.8049, 0.56", "-8.34587, -130.712, -41.7791, 0.56", "-8.16814, -131.239, -41.6875, 0.42", "-7.98582, -131.755, -41.5704, 0.28", "-7.80369, -132.259, -41.4427, 0.14", "-7.61697, -132.774, -41.3095, 0.1", "-7.2081, -133.846, -41.042, 0.1", "-7.0063, -134.357, -40.9204, 0.1", "-6.80132, -134.867, -40.809, 0.1", "-6.58428, -135.378, -40.7142, 0.1", "-6.36035, -135.89, -40.6773, 0.1", "-6.11957, -136.465, -40.6661, 0.1", "-5.91508, -136.989, -40.6933, 0.1", "-5.73091, -137.508, -40.7134, 0.14", "-5.53901, -138.115, -40.7278, 0.28", "-5.26444, -139.113, -40.7355, 0.42", "-5.01866, -140.161, -40.7266, 0.84", "-4.9098, -140.714, -40.7135, 0.7", "-4.79484, -141.324, -40.6906, 0.56", "-4.70431, -141.877, -40.6633, 0.42", "-4.62098, -142.433, -40.6304, 0.28", "-4.52922, -142.984, -40.5932, 0.14", "-4.4237, -143.537, -40.5932, 0.1", "-4.31335, -144.086, -40.6319, 0.14", "-4.18215, -144.686, -40.7097, 0.1", "-4.06684, -145.229, -40.7924, 0.1", "-3.95438, -145.771, -40.8915, 0.1", "-3.84464, -146.308, -41.0109, 0.1", "-3.62085, -147.386, -41.311, 0.14", "-3.56201, -147.646, -41.4043, 0.28" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-18.8818, -65.5977, -38.0121, 0.1", "-18.8142, -65.7231, -38.255, 0.1", "-18.6751, -65.9267, -38.7583, 0.1", "-18.3953, -66.2762, -39.8151, 0.1", "-18.257, -66.4309, -40.3357, 0.1", "-17.7668, -66.9668, -42.2413, 0.1", "-17.5162, -67.2371, -43.2492, 0.1", "-17.2766, -67.4875, -44.2278, 0.1", "-16.7903, -67.9944, -46.2034, 0.1", "-16.5344, -68.273, -47.2077, 0.14", "-16.2832, -68.5714, -48.1706, 0.1", "-15.7539, -69.3292, -50.0504, 0.14", "-15.608, -69.5809, -50.5326, 0.1", "-15.453, -69.8949, -50.9702, 0.1", "-15.2751, -70.2866, -51.3186, 0.1", "-15.1665, -70.5115, -51.4429, 0.1", "-14.8959, -70.9887, -51.5704, 0.1", "-14.571, -71.4451, -51.5853, 0.1", "-13.7781, -72.3213, -51.5967, 0.14", "-12.982, -73.0363, -51.6783, 0.1", "-12.5084, -73.4029, -51.8785, 0.1", "-12.225, -73.6, -52.0588, 0.1", "-11.6931, -73.9491, -52.538, 0.1", "-11.4457, -74.1079, -52.801, 0.1", "-10.8334, -74.524, -53.5824, 0.1", "-9.72527, -75.3173, -55.1733, 0.1", "-9.52532, -75.4667, -55.4836, 0.1", "-8.92884, -75.8905, -56.407, 0.1", "-8.72762, -76.0257, -56.7229, 0.1", "-8.08936, -76.4039, -57.6381, 0.1", "-7.84759, -76.5226, -57.9381, 0.1", "-7.00668, -76.8587, -58.8327, 0.1", "-6.62083, -76.9886, -59.2179, 0.1", "-5.82235, -77.2015, -59.9076, 0.1", "-5.38503, -77.3036, -60.2475, 0.1", "-4.40181, -77.4979, -60.8656, 0.14", "-4.05324, -77.5645, -61.0463, 0.28", "-3.49445, -77.6783, -61.2939, 0.14", "-2.92651, -77.8176, -61.5274, 0.1", "-2.56673, -77.9095, -61.6449, 0.1", "-1.9843, -78.0762, -61.8232, 0.1", "-1.39421, -78.2474, -61.961, 0.1", "-0.399106, -78.5326, -62.2441, 0.1", "-0.0362026, -78.6433, -62.3803, 0.14" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-63.8926, 113.752, 7.64819, 0.1", "-64.0439, 114.526, 8.48005, 0.1", "-64.2278, 115.34, 9.26775, 0.1", "-64.3308, 115.754, 9.61627, 0.1", "-64.5959, 116.657, 10.2711, 0.1", "-64.7623, 117.174, 10.5902, 0.1", "-64.7623, 117.174, 10.5902, 0.1", "-64.9576, 117.709, 10.8419, 0.1", "-65.1481, 118.205, 11.0292, 0.1", "-65.3542, 118.761, 11.2195, 0.1", "-65.5253, 119.279, 11.3594, 0.1", "-65.8273, 120.364, 11.5739, 0.1", "-65.8821, 120.625, 11.6249, 0.14", "-65.9584, 121.171, 11.7259, 0.1", "-66.0215, 121.79, 11.8255, 0.1", "-66.0549, 122.406, 11.9002, 0.1", "-66.0808, 123.48, 11.9744, 0.14", "-66.1003, 124.626, 11.9848, 0.28", "-66.1033, 125.189, 11.9969, 0.14", "-66.12, 125.736, 12.0563, 0.1", "-66.1673, 126.353, 12.1717, 0.1", "-66.2401, 126.962, 12.3233, 0.1", "-66.3195, 127.476, 12.5139, 0.14", "-66.3827, 127.831, 12.682, 0.1", "-66.5885, 128.828, 13.2748, 0.1", "-66.6973, 129.283, 13.5839, 0.1", "-66.8214, 129.728, 13.9059, 0.1", "-67.0784, 130.636, 14.5575, 0.1", "-67.3112, 131.554, 15.197, 0.1", "-67.4227, 132.005, 15.5101, 0.1", "-67.4773, 132.239, 15.6574, 0.1", "-67.5941, 132.707, 15.9425, 0.1", "-67.7637, 133.243, 16.2268, 0.1", "-67.8634, 133.485, 16.3219, 0.1", "-68.3934, 134.487, 16.6436, 0.28", "-68.7453, 134.993, 16.8063, 0.14", "-69.0871, 135.392, 16.9693, 0.28", "-69.6155, 135.929, 17.2171, 0.14", "-69.8878, 136.18, 17.364, 0.1", "-70.1569, 136.429, 17.5181, 0.1", "-70.6754, 136.944, 17.8264, 0.1", "-71.4055, 137.711, 18.3426, 0.1", "-71.5737, 137.891, 18.4782, 0.1", "-72.2158, 138.658, 19.1014, 0.1", "-72.4987, 139.029, 19.4167, 0.1", "-72.7468, 139.399, 19.7409, 0.14", "-72.7468, 139.399, 19.7409, 0.28" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-63.8926, 113.752, 7.64819, 0.1", "-64.7475, 113.631, 8.44731, 0.1", "-65.1915, 113.555, 8.88992, 0.1", "-65.5657, 113.468, 9.30162, 0.1", "-66.3269, 113.267, 10.1286, 0.1", "-67.1092, 113.048, 10.9372, 0.1", "-67.5019, 112.934, 11.3246, 0.1", "-68.3185, 112.66, 12.081, 0.14", "-69.1751, 112.35, 12.8337, 0.28", "-69.5981, 112.188, 13.1639, 0.14", "-70.0492, 112.018, 13.4552, 0.1", "-70.2854, 111.938, 13.5801, 0.1", "-70.7592, 111.811, 13.8365, 0.14", "-71.2558, 111.708, 14.075, 0.28", "-71.6181, 111.652, 14.2427, 0.42", "-72.6707, 111.528, 14.7557, 0.1", "-73.2358, 111.474, 15.0283, 0.1", "-74.2784, 111.404, 15.571, 0.14", "-74.7758, 111.379, 15.8339, 0.1", "-75.2771, 111.364, 16.084, 0.1", "-75.8452, 111.348, 16.3316, 0.1", "-76.3735, 111.32, 16.5166, 0.1", "-77.4941, 111.245, 16.8841, 0.1", "-78.0359, 111.221, 17.0253, 0.14", "-78.6358, 111.227, 17.1812, 0.1", "-79.1796, 111.276, 17.3074, 0.14", "-79.4528, 111.324, 17.357, 0.1", "-79.7237, 111.396, 17.3839, 0.1", "-80.4777, 111.624, 17.3839, 0.1", "-80.8593, 111.748, 17.422, 0.1", "-81.5969, 111.994, 17.5482, 0.1", "-81.9678, 112.116, 17.6269, 0.1", "-82.5474, 112.293, 17.7649, 0.1", "-83.0763, 112.435, 17.8971, 0.1", "-84.1933, 112.687, 18.1931, 0.1", "-84.5649, 112.753, 18.2891, 0.1", "-85.1713, 112.832, 18.4389, 0.14", "-85.1713, 112.832, 18.4389, 0.28", "-85.7848, 112.859, 18.5361, 0.28", "-86.4122, 112.855, 18.5892, 0.14", "-86.9708, 112.81, 18.5892, 0.1", "-87.2495, 112.77, 18.5892, 0.14", "-87.7998, 112.664, 18.5892, 0.1", "-88.3356, 112.531, 18.631, 0.1", "-88.8664, 112.368, 18.7071, 0.1", "-89.3907, 112.188, 18.8076, 0.1", "-89.9082, 112.006, 18.9224, 0.14", "-90.411, 111.816, 19.0809, 0.28", "-91.4448, 111.404, 19.4783, 0.42", "-91.9237, 111.197, 19.6828, 0.28", "-92.3874, 110.975, 19.8889, 0.14", "-92.8496, 110.731, 20.0904, 0.1", "-93.8115, 110.182, 20.493, 0.1", "-94.2646, 109.914, 20.6924, 0.1", "-94.7652, 109.605, 20.8977, 0.1", "-95.2625, 109.286, 21.1151, 0.1", "-95.753, 108.954, 21.3311, 0.14", "-95.753, 108.954, 21.3311, 0.28", "-96.6496, 108.305, 21.6109, 0.1", "-97.1396, 107.928, 21.7649, 0.1", "-97.5604, 107.594, 21.8866, 0.14", "-97.8658, 107.342, 21.9597, 0.28", "-98.3404, 106.946, 22.0408, 0.14", "-98.8194, 106.54, 22.0855, 0.1", "-99.1127, 106.284, 22.0855, 0.14", "-99.5942, 105.878, 22.0855, 0.1", "-100.081, 105.49, 22.0855, 0.1", "-100.538, 105.165, 22.0855, 0.1", "-101.071, 104.83, 22.0855, 0.1", "-101.616, 104.528, 22.0855, 0.1", "-102.125, 104.294, 22.0855, 0.1", "-102.65, 104.09, 22.0855, 0.1", "-103.182, 103.914, 22.0855, 0.1", "-103.727, 103.77, 22.0855, 0.1", "-104.267, 103.661, 22.0855, 0.1", "-104.888, 103.561, 22.0855, 0.1", "-105.165, 103.526, 22.0855, 0.1", "-105.726, 103.481, 22.0855, 0.1", "-106.347, 103.448, 22.0855, 0.1", "-106.91, 103.436, 22.0855, 0.14", "-106.91, 103.436, 22.0855, 0.28", "-107.541, 103.457, 22.0855, 0.1", "-108.16, 103.489, 22.0855, 0.1", "-108.719, 103.53, 22.0855, 0.1", "-109.347, 103.585, 22.0855, 0.1", "-109.965, 103.652, 22.0855, 0.1", "-110.591, 103.714, 22.0855, 0.1", "-110.872, 103.74, 22.0855, 0.1", "-111.49, 103.806, 22.0855, 0.1", "-112.115, 103.884, 22.0855, 0.1", "-112.733, 103.953, 22.0855, 0.1", "-113.293, 104.012, 22.0855, 0.1", "-113.92, 104.081, 22.0855, 0.1", "-114.307, 104.125, 22.0855, 0.1", "-114.935, 104.193, 22.0855, 0.1", "-115.495, 104.252, 22.0855, 0.14", "-116.113, 104.32, 22.0855, 0.28", "-116.389, 104.359, 22.0855, 0.14" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-19.0212, 77.0402, -5.76248, 0.98", "-18.809, 78.1725, -5.51863, 0.98", "-18.7081, 78.786, -5.41889, 0.84", "-18.6312, 79.3979, -5.34048, 0.7", "-18.5884, 79.7917, -5.30003, 0.56", "-18.5375, 80.4073, -5.24791, 0.7", "-18.4976, 80.9649, -5.20855, 0.56", "-18.4756, 81.5942, -5.20855, 0.42", "-18.4761, 82.1547, -5.20855, 0.28", "-18.5129, 82.772, -5.16676, 0.14", "-18.5778, 83.3242, -5.09663, 0.1", "-18.6801, 83.9359, -4.98724, 0.14", "-18.7996, 84.4611, -4.87218, 0.28", "-18.877, 84.724, -4.80759, 0.14", "-19.2458, 85.8083, -4.53101, 0.1", "-19.4428, 86.3202, -4.40359, 0.1", "-19.6374, 86.833, -4.28829, 0.1", "-19.8406, 87.412, -4.18092, 0.1", "-19.9945, 87.9525, -4.14503, 0.1", "-20.1064, 88.501, -4.17202, 0.1", "-20.1735, 89.0569, -4.23288, 0.1", "-20.2159, 89.6771, -4.23879, 0.1", "-20.2329, 90.3038, -4.17939, 0.14", "-20.235, 91.3583, -3.98021, 0.28", "-20.2405, 91.6303, -3.9074, 0.42", "-20.3291, 92.7163, -3.55135, 0.1", "-20.4954, 93.7834, -3.16291, 0.14", "-20.6171, 94.2955, -2.9705, 0.1", "-20.7646, 94.7923, -2.78387, 0.1", "-20.9346, 95.2986, -2.60498, 0.1", "-21.1401, 95.8712, -2.47132, 0.1", "-21.3298, 96.3998, -2.4288, 0.1", "-21.5165, 96.9282, -2.4288, 0.1", "-21.603, 97.1962, -2.4288, 0.14", "-21.7695, 97.7297, -2.38647, 0.7", "-21.9281, 98.2643, -2.30735, 0.7", "-22.073, 98.7854, -2.20308, 0.84", "-22.2222, 99.314, -2.07883, 0.98", "-22.3301, 99.6907, -1.98398, 0.98", "-22.6273, 100.8, -1.70667, 0.84", "-22.7616, 101.329, -1.5796, 0.84", "-22.8923, 101.864, -1.46379, 0.7", "-23.0075, 102.396, -1.32837, 0.56", "-23.1009, 102.921, -1.19062, 0.56", "-23.1819, 103.527, -1.04091, 0.56", "-23.2124, 104.075, -0.927717, 0.42", "-23.2176, 104.624, -0.798898, 0.42", "-23.1925, 105.712, -0.351033, 0.56", "-23.17, 106.261, -0.0427348, 0.56", "-23.1516, 106.584, 0.173664, 0.7", "-23.117, 107.095, 0.54383, 0.7", "-23.117, 107.095, 0.54383, 0.84", "-22.8721, 108.849, 1.62988, 1.12", "-22.8284, 109.1, 1.74431, 1.12", "-22.7298, 109.677, 1.94799, 0.98", "-22.6513, 110.29, 2.07493, 0.84", "-22.6189, 110.678, 2.08738, 0.84", "-22.6043, 111.947, 1.93433, 0.84", "-22.6215, 112.216, 1.86132, 0.7", "-22.709, 112.813, 1.7079, 0.56", "-22.8645, 113.416, 1.57379, 0.42", "-23.0473, 113.929, 1.49079, 0.28", "-23.2743, 114.507, 1.44101, 0.14", "-23.4874, 115.029, 1.44101, 0.28", "-23.4874, 115.029, 1.44101, 0.42", "-23.625, 115.572, 1.44101, 0.1", "-23.7316, 116.125, 1.44101, 0.1", "-23.8333, 116.748, 1.44101, 0.1", "-23.8983, 117.298, 1.44101, 0.1", "-23.9508, 117.927, 1.44101, 0.14", "-23.9765, 118.488, 1.48206, 0.28", "-23.9748, 118.764, 1.5212, 0.42", "-23.9418, 119.306, 1.62956, 0.56", "-23.8767, 119.917, 1.77796, 0.56", "-23.8333, 120.186, 1.84876, 0.42", "-23.6221, 121.321, 2.07319, 0.56", "-23.4886, 121.937, 2.11473, 0.42", "-23.3973, 122.314, 2.14695, 0.28", "-23.2332, 122.92, 2.19592, 0.42", "-23.0833, 123.533, 2.22339, 0.56", "-22.9065, 124.554, 2.18807, 0.7", "-22.8231, 125.529, 1.98285, 0.7", "-22.8427, 127.542, 1.83578, 0.56", "-22.8574, 127.808, 1.92539, 0.7", "-22.8728, 128.299, 2.18126, 0.7", "-22.8656, 128.758, 2.50273, 0.7", "-22.8375, 129.211, 2.83662, 0.56", "-22.8127, 129.733, 3.19069, 0.42", "-22.7868, 130.782, 3.72265, 0.28", "-22.7918, 131.139, 3.89921, 0.14", "-22.84, 132.196, 4.41653, 0.1", "-22.8811, 132.556, 4.58109, 0.14", "-23.0076, 133.125, 4.80139, 0.56", "-23.1866, 133.64, 4.9435, 0.42", "-23.4327, 134.198, 5.06809, 0.28", "-23.68, 134.691, 5.1803, 0.14", "-23.9612, 135.237, 5.28899, 0.1", "-24.2132, 135.791, 5.4206, 0.1", "-24.3872, 136.308, 5.56138, 0.1", "-24.5865, 137.39, 5.88091, 0.14", "-24.5865, 137.39, 5.88091, 0.28", "-24.478, 137.979, 6.04145, 0.84", "-24.271, 138.556, 6.18625, 0.7", "-24.1032, 138.906, 6.25622, 0.56", "-23.8156, 139.463, 6.31978, 0.42", "-23.5523, 140.024, 6.31978, 0.56", "-23.4573, 140.289, 6.31978, 0.56", "-23.3882, 140.562, 6.31978, 0.7", "-23.3065, 141.119, 6.31978, 0.84", "-23.276, 141.679, 6.31978, 0.7", "-23.3101, 142.238, 6.31978, 0.56", "-23.3868, 142.853, 6.31978, 0.7", "-23.3868, 142.853, 6.31978, 0.84" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-19.0212, 77.0402, -5.76248, 0.84", "-19.26, 77.3581, -6.24198, 0.84", "-19.7131, 77.9611, -7.15169, 0.7", "-20.1526, 78.5461, -8.03415, 0.56", "-20.5653, 79.0954, -8.86275, 0.42", "-20.8041, 79.4132, -9.34226, 0.56", "-21.019, 79.6992, -9.77369, 0.42" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "4.21904, 183.786, -63.6772, 0.14", "4.28046, 184.946, -63.4928, 0.14", "4.29967, 185.495, -63.3824, 0.28", "4.3239, 186.112, -63.2588, 0.42", "4.33765, 186.386, -63.2078, 0.42", "4.38518, 187.545, -63.0096, 0.28", "4.41122, 188.169, -62.9132, 0.14", "4.4312, 188.71, -62.8014, 0.1", "4.45983, 189.332, -62.6924, 0.1", "4.4788, 189.956, -62.6108, 0.1", "4.48414, 190.501, -62.5322, 0.1", "4.46708, 191.125, -62.451, 0.1", "4.45446, 191.402, -62.4015, 0.1", "4.429, 192.01, -62.273, 0.1", "4.40851, 192.555, -62.1451, 0.1", "4.39021, 193.671, -61.8758, 0.1", "4.40141, 194.224, -61.7864, 0.1", "4.43268, 194.841, -61.7388, 0.1", "4.49286, 195.47, -61.7403, 0.1", "4.54763, 195.863, -61.7739, 0.1", "4.66047, 196.464, -61.8717, 0.14", "4.90803, 197.591, -62.1329, 0.14", "5.04811, 198.188, -62.2252, 0.1", "5.13454, 198.575, -62.2573, 0.1", "5.26089, 199.184, -62.2592, 0.1", "5.37744, 199.795, -62.1649, 0.1", "5.47509, 200.393, -61.9867, 0.1", "5.62736, 201.472, -61.543, 0.1", "5.65422, 201.727, -61.4326, 0.1", "5.68929, 202.305, -61.1846, 0.1", "5.72417, 203.395, -60.7414, 0.1", "5.72284, 203.925, -60.5521, 0.1", "5.69829, 204.524, -60.3855, 0.1", "5.66781, 205.078, -60.288, 0.1", "5.63596, 205.632, -60.2086, 0.1", "5.58821, 206.252, -60.1126, 0.1", "5.54678, 206.806, -60.0374, 0.1", "5.52434, 207.348, -59.929, 0.1", "5.51116, 207.739, -59.8318, 0.1", "5.5118, 208.008, -59.7583, 0.1", "5.54853, 209.114, -59.4572, 0.1", "5.58211, 209.714, -59.3068, 0.1", "5.62731, 210.329, -59.1711, 0.1", "5.67316, 210.882, -59.0737, 0.1", "5.71185, 211.498, -58.9962, 0.1", "5.75083, 212.126, -58.9951, 0.1", "5.79551, 212.734, -59.1202, 0.1", "5.81082, 213.002, -59.2054, 0.1", "5.84175, 213.588, -59.4377, 0.1", "5.86676, 214.101, -59.6694, 0.1", "5.92653, 215.13, -60.2382, 0.14", "6.0013, 216.14, -60.8475, 0.28", "6.04923, 216.614, -61.1427, 0.14", "6.12008, 217.142, -61.4596, 0.1", "6.15976, 217.386, -61.5939, 0.1", "6.38568, 218.531, -62.11, 0.1", "6.50704, 219.121, -62.2934, 0.1", "6.58902, 219.502, -62.3761, 0.1", "6.73788, 220.094, -62.4932, 0.1", "6.8881, 220.698, -62.5887, 0.14", "7.03192, 221.3, -62.6448, 0.1", "7.08388, 221.577, -62.6448, 0.1", "7.18349, 222.201, -62.6448, 0.1", "7.23559, 222.587, -62.6448, 0.1", "7.30933, 223.132, -62.6448, 0.1", "7.39652, 223.753, -62.7011, 0.1", "7.48257, 224.301, -62.7873, 0.1", "7.58656, 224.9, -62.9067, 0.1", "7.68287, 225.509, -63.0439, 0.1", "7.73136, 225.885, -63.1312, 0.1", "7.86333, 227.028, -63.4062, 0.1", "7.89915, 227.413, -63.502, 0.1", "7.94047, 228.013, -63.6497, 0.14", "7.96121, 228.557, -63.7849, 0.1", "7.95845, 229.106, -63.9106, 0.1", "7.9242, 229.658, -64.0005, 0.1", "7.9242, 229.658, -64.0005, 0.14", "7.86731, 229.934, -64.0005, 0.56" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.21904, 183.786, -63.6772, 0.1", "3.42453, 182.947, -63.4288, 0.1", "3.00238, 182.5, -63.3279, 0.1", "2.72932, 182.204, -63.3231, 0.1", "2.32103, 181.736, -63.3724, 0.1", "1.92961, 181.257, -63.4475, 0.1", "1.69589, 180.94, -63.5041, 0.1", "1.37847, 180.416, -63.6161, 0.1", "0.935748, 179.445, -63.7577, 0.1", "0.719344, 178.684, -63.8133, 0.1", "0.679358, 178.407, -63.7862, 0.1", "0.651511, 177.863, -63.6539, 0.1", "0.636283, 176.78, -63.2751, 0.1", "0.627557, 176.264, -63.0567, 0.1", "0.60796, 175.7, -62.7761, 0.14", "0.565864, 174.654, -62.2373, 0.84", "0.520054, 174.089, -61.9583, 0.7", "0.484249, 173.733, -61.8037, 0.56", "0.416129, 172.966, -61.5816, 0.42", "0.416129, 172.966, -61.5816, 0.28", "0.459005, 172.69, -61.55, 0.42", "0.550547, 172.424, -61.55, 0.56", "0.800812, 171.853, -61.55, 0.42", "1.04283, 171.345, -61.55, 0.28", "1.313, 170.783, -61.55, 0.42", "1.55132, 170.275, -61.5892, 0.28", "1.77447, 169.772, -61.621, 0.14", "1.99722, 169.255, -61.6475, 0.1", "2.21809, 168.741, -61.6671, 0.1", "2.4435, 168.228, -61.6785, 0.1", "2.85654, 167.274, -61.6827, 0.1", "3.27435, 166.33, -61.5728, 0.28", "3.49524, 165.826, -61.465, 0.14", "3.72504, 165.279, -61.2536, 0.1", "3.91258, 164.805, -61.0216, 0.1", "4.08619, 164.332, -60.7689, 0.1", "4.41265, 163.366, -60.2454, 0.1", "4.57154, 162.878, -60.0387, 0.1", "4.91103, 161.837, -59.6984, 0.1", "5.09464, 161.307, -59.7028, 0.1", "5.28554, 160.855, -59.9785, 0.1", "5.47622, 160.474, -60.343, 0.1", "5.84044, 159.852, -61.0907, 0.1", "6.24529, 159.262, -61.8949, 0.1", "7.11256, 158.193, -63.4737, 0.1", "7.11256, 158.193, -63.4737, 0.14", "7.77666, 157.632, -64.1085, 0.42", "8.08609, 157.405, -64.176, 0.28", "8.57197, 157.024, -64.0532, 0.14", "9.40841, 156.297, -63.6543, 0.1", "9.84214, 155.898, -63.4325, 0.1", "10.1184, 155.636, -63.3506, 0.1", "10.5822, 155.211, -63.3327, 0.1", "11.0589, 154.799, -63.3804, 0.14", "11.2747, 154.621, -63.4117, 0.1", "12.0888, 153.925, -63.481, 0.1", "12.5574, 153.511, -63.3926, 0.1", "12.9369, 153.134, -63.2162, 0.1", "13.1707, 152.869, -63.0527, 0.1", "13.732, 152.137, -62.5745, 0.1", "14.2635, 151.275, -62.0357, 0.1", "14.4795, 150.827, -61.7763, 0.1", "14.6584, 150.344, -61.5569, 0.14", "14.8191, 149.823, -61.4135, 0.1", "14.9608, 149.293, -61.3631, 0.1", "15.0853, 148.747, -61.4189, 0.1", "15.1778, 148.207, -61.5376, 0.1", "15.237, 147.654, -61.6286, 0.1", "15.2957, 146.623, -61.736, 0.1", "15.3055, 146.234, -61.7523, 0.1", "15.3133, 145.605, -61.7408, 0.1", "15.3116, 144.985, -61.6946, 0.1", "15.3153, 143.812, -61.5488, 0.1", "15.3265, 143.26, -61.4538, 0.1", "15.3567, 142.71, -61.3361, 0.1", "15.4152, 142.162, -61.2354, 0.1", "15.5088, 141.555, -61.1504, 0.1", "15.6149, 141.011, -61.066, 0.1", "15.6757, 140.739, -61.0275, 0.1", "15.801, 140.202, -60.9249, 0.1", "15.931, 139.677, -60.8067, 0.1", "16.0703, 139.151, -60.6753, 0.1", "16.3552, 138.077, -60.392, 0.1", "16.4869, 137.547, -60.2541, 0.1", "16.6006, 137.013, -60.1272, 0.1", "16.6883, 136.468, -60.017, 0.1", "16.7211, 136.194, -59.9764, 0.1", "16.7484, 135.807, -59.9458, 0.7", "16.7591, 135.244, -59.9458, 0.56", "16.7546, 134.612, -59.9458, 0.42", "16.7352, 133.994, -59.9926, 0.28", "16.7141, 133.439, -60.0654, 0.14", "16.6863, 132.823, -60.1316, 0.1", "16.654, 132.195, -60.1843, 0.1", "16.611, 131.633, -60.176, 0.1", "16.5038, 130.468, -60.0455, 0.1", "16.4699, 130.194, -59.9913, 0.1", "16.3236, 129.164, -59.7156, 0.1", "16.2421, 128.569, -59.5193, 0.1", "16.0817, 127.49, -59.0783, 0.1", "15.9868, 126.932, -58.798, 0.1", "15.9308, 126.604, -58.5955, 0.1", "15.8472, 126.123, -58.3212, 0.1", "15.8116, 125.863, -58.2193, 0.14" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "21.5609, -176.913, -7.457, 0.98", "21.6203, -177.253, -6.93799, 0.98", "21.6537, -177.422, -6.71546, 1.12", "21.796, -178.11, -5.95041, 1.82", "21.9839, -178.931, -5.17275, 1.68", "22.2084, -179.824, -4.48923, 1.54", "22.3433, -180.313, -4.24579, 1.4", "22.5157, -180.83, -4.16609, 1.26", "22.8512, -181.788, -4.39043, 1.12", "23.1667, -182.637, -4.97223, 1.12", "23.2397, -182.824, -5.16596, 1.12", "23.511, -183.482, -6.06569, 1.12", "23.75, -184.024, -6.9645, 1.12" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "21.5609, -176.913, -7.457, 0.98", "21.1938, -177.232, -7.06777, 0.98", "21.0384, -177.374, -6.88064, 1.12", "20.3862, -177.946, -6.12879, 1.4", "20.0316, -178.274, -5.73574, 1.26", "19.3473, -178.928, -5.03417, 1.12", "18.9771, -179.293, -4.67947, 0.98", "18.3423, -179.956, -4.11951, 0.84", "18.0101, -180.322, -3.87055, 0.7", "17.6538, -180.771, -3.6295, 0.56", "17.3068, -181.242, -3.39681, 0.1", "17.094, -181.546, -3.27766, 0.1", "16.6695, -182.175, -3.05037, 0.1", "16.4497, -182.501, -2.98305, 0.1", "15.7488, -183.552, -2.8291, 0.14", "15.7488, -183.552, -2.8291, 0.28", "15.4188, -184.079, -2.93035, 0.28", "15.2379, -184.405, -3.04286, 0.14", "14.7953, -185.398, -3.51657, 0.1", "14.6885, -185.727, -3.69512, 0.1", "14.4876, -186.736, -4.27538, 0.14", "14.4671, -186.987, -4.39717, 0.56", "14.5049, -187.494, -4.63831, 0.42", "14.599, -187.994, -4.84898, 0.28", "14.7339, -188.512, -5.02383, 0.14", "14.8738, -189.031, -5.18246, 0.1", "15.0037, -189.564, -5.3132, 0.14", "15.2128, -190.69, -5.58815, 0.28", "15.2863, -191.23, -5.71861, 0.42", "15.3224, -191.617, -5.80744, 0.1", "15.3588, -192.223, -5.92874, 0.1", "15.3961, -192.847, -6.02351, 0.1", "15.4404, -193.463, -6.07516, 0.1", "15.4745, -193.742, -6.07516, 0.1", "15.5314, -194.015, -6.07516, 0.84", "15.7063, -194.551, -6.07516, 0.7", "15.9482, -195.125, -6.07516, 0.56", "16.1932, -195.629, -6.07516, 0.42", "16.48, -196.189, -6.07516, 0.28", "16.7397, -196.686, -6.07516, 0.14", "17.03, -197.245, -6.07516, 0.28", "17.155, -197.494, -6.07516, 0.28", "17.3923, -198.005, -6.07516, 0.14", "17.6137, -198.509, -6.07516, 0.1", "17.8506, -199.101, -6.07516, 0.1", "18.0456, -199.616, -6.07516, 0.1", "18.2307, -200.145, -6.07516, 0.14", "18.411, -200.677, -6.1143, 0.28", "18.5826, -201.206, -6.18519, 0.28", "18.7457, -201.736, -6.28075, 0.14", "18.8941, -202.254, -6.39417, 0.1", "19.0359, -202.783, -6.52711, 0.1", "19.2835, -203.863, -6.81941, 0.14", "19.3864, -204.395, -6.96451, 0.28", "19.4749, -204.934, -7.10232, 0.42", "19.4749, -204.934, -7.10232, 0.56", "19.5264, -205.315, -7.16277, 0.56", "19.6116, -205.939, -7.21472, 0.56", "19.6954, -206.496, -7.21472, 0.56", "19.7904, -207.048, -7.21472, 0.7", "19.9102, -207.588, -7.21472, 0.56", "20.0552, -208.13, -7.21472, 0.42", "20.2347, -208.661, -7.21472, 0.56", "20.4384, -209.186, -7.21472, 0.42", "20.6498, -209.705, -7.21472, 0.28", "20.8944, -210.284, -7.25607, 0.14", "21.1166, -210.794, -7.32378, 0.1", "21.3562, -211.358, -7.43147, 0.1", "21.5497, -211.872, -7.55576, 0.1", "21.7129, -212.389, -7.6999, 0.1", "21.9273, -213.362, -7.9844, 0.1", "21.9273, -213.362, -7.9844, 0.1", "21.9414, -213.759, -8.00951, 0.1", "21.9227, -214.39, -7.98027, 0.1", "21.901, -214.938, -7.90745, 0.1", "21.873, -215.557, -7.78698, 0.1", "21.8118, -216.705, -7.5104, 0.14", "21.7804, -217.241, -7.39016, 0.1", "21.7408, -217.857, -7.26482, 0.14", "21.6937, -218.408, -7.16989, 0.1", "21.6297, -219.019, -7.08925, 0.14", "21.5917, -219.414, -7.05984, 0.28", "21.5268, -220.032, -7.05984, 0.14", "21.4606, -220.659, -7.05984, 0.1", "21.4129, -221.288, -7.05984, 0.14", "21.391, -221.568, -7.03721, 0.28", "21.3534, -222.112, -6.95743, 0.42", "21.3245, -222.502, -6.88163, 0.1", "21.2736, -223.046, -6.75661, 0.1", "21.22, -223.59, -6.62168, 0.1", "21.0961, -224.817, -6.30819, 0.14", "21.0348, -225.406, -6.11848, 0.1", "21.0017, -225.778, -5.98081, 0.14", "20.9746, -226.366, -5.752, 0.28", "20.9718, -226.883, -5.55326, 0.42", "20.9946, -227.148, -5.46112, 0.56", "21.1754, -228.136, -5.19607, 0.56", "21.302, -228.667, -5.06013, 0.42", "21.4351, -229.199, -4.94142, 0.28", "21.5581, -229.74, -4.8439, 0.14", "21.6755, -230.346, -4.76734, 0.1", "21.7798, -230.958, -4.7253, 0.1", "21.864, -231.514, -4.68873, 0.1", "21.9478, -232.134, -4.6097, 0.1", "22.025, -232.74, -4.50089, 0.1", "22.0822, -233.273, -4.3387, 0.1", "22.1087, -233.534, -4.23549, 0.1", "22.2133, -234.475, -3.80813, 0.1", "22.2609, -234.98, -3.56899, 0.14", "22.3002, -235.49, -3.33347, 0.1", "22.3449, -236.575, -2.87982, 0.14", "22.3473, -237.105, -2.68906, 0.1", "22.3291, -237.714, -2.52108, 0.1", "22.2884, -238.329, -2.45607, 0.1", "22.2241, -238.957, -2.45511, 0.1", "22.1557, -239.57, -2.51779, 0.1", "22.1258, -239.842, -2.57273, 0.1", "22.0498, -240.452, -2.70951, 0.1", "21.9074, -241.59, -2.97593, 0.14", "21.8284, -242.199, -3.115, 0.1", "21.7622, -242.75, -3.1931, 0.14", "21.7009, -243.366, -3.22364, 0.1", "21.6727, -243.763, -3.20706, 0.1", "21.6468, -244.378, -3.12263, 0.1", "21.6267, -244.992, -2.98206, 0.1", "21.6075, -246.121, -2.78618, 0.14", "21.5858, -246.68, -2.72334, 0.28", "21.5557, -247.23, -2.69705, 0.42", "21.4918, -247.856, -2.7137, 0.56", "21.4233, -248.246, -2.78947, 0.42", "21.1807, -249.302, -3.15348, 0.28", "21.0376, -249.86, -3.40785, 0.42", "20.9447, -250.203, -3.56753, 0.28", "20.7685, -250.916, -3.88659, 0.14", "20.5959, -251.872, -4.34243, 0.1", "20.5293, -252.377, -4.57648, 0.1", "20.4893, -252.897, -4.7899, 0.1", "20.4935, -253.482, -5.0275, 0.1", "20.5204, -254.01, -5.19007, 0.1", "20.6059, -255.134, -5.39967, 0.1", "20.6283, -255.531, -5.41921, 0.1", "20.647, -256.091, -5.41499, 0.1", "20.652, -256.644, -5.38059, 0.1", "20.6618, -257.819, -5.24713, 0.1", "20.6519, -258.441, -5.14629, 0.1", "20.6405, -259.049, -5.01947, 0.1", "20.6305, -259.604, -4.92169, 0.1", "20.6058, -260.229, -4.8392, 0.1", "20.5757, -260.781, -4.79908, 0.1", "20.5517, -261.178, -4.79908, 0.1", "20.5061, -261.735, -4.83816, 0.1", "20.4376, -262.346, -4.91765, 0.1", "20.3574, -262.963, -5.02577, 0.1", "20.2751, -263.565, -5.14962, 0.1", "20.1838, -264.175, -5.28385, 0.1", "20.0218, -265.213, -5.5182, 0.1", "19.9171, -265.812, -5.65121, 0.1", "19.8227, -266.346, -5.79979, 0.1", "19.7121, -266.94, -5.98367, 0.1", "19.6004, -267.508, -6.20574, 0.14", "19.517, -267.866, -6.35983, 0.28", "19.3713, -268.423, -6.595, 0.14", "19.0744, -269.456, -7.08535, 0.14", "18.9673, -269.79, -7.25446, 0.28", "18.6368, -270.803, -7.76871, 0.14", "18.4627, -271.344, -8.02311, 0.1", "18.3057, -271.895, -8.284, 0.14", "18.2357, -272.142, -8.39299, 0.28", "18.1383, -272.5, -8.51244, 0.1", "17.9955, -273.088, -8.68745, 0.1", "17.8693, -273.695, -8.80278, 0.1", "17.7199, -274.795, -9.07302, 0.14" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "24.6919, -98.6973, 4.4205, 0.84", "24.6389, -99.1937, 3.46685, 0.84", "24.5809, -99.7366, 2.42361, 0.98", "24.5297, -100.216, 1.50317, 0.84", "24.4715, -100.761, 0.456178, 0.7", "24.4578, -100.89, 0.20906, 0.84", "24.4578, -100.89, 0.20906, 0.98" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "24.6919, -98.6973, 4.4205, 0.56", "24.831, -98.8823, 4.26015, 0.56", "25.451, -99.6694, 3.64039, 0.7", "25.7804, -100.072, 3.29713, 0.56", "26.0769, -100.436, 2.98622, 0.42", "26.7101, -101.198, 2.34853, 0.28", "26.9308, -101.455, 2.13945, 0.14", "27.2982, -101.838, 1.79938, 0.1", "28.0317, -102.523, 1.17538, 0.1", "28.2053, -102.669, 1.01327, 0.14", "28.4598, -102.867, 0.779508, 0.28", "28.7225, -103.069, 0.558318, 0.14", "29.5038, -103.681, -0.0734608, 0.1", "29.7749, -103.898, -0.278366, 0.14", "30.5738, -104.589, -0.800534, 0.28", "30.9821, -104.985, -1.05299, 0.14", "31.3678, -105.432, -1.27188, 0.1", "31.7066, -105.929, -1.43435, 0.1", "31.8355, -106.173, -1.49377, 0.28", "32.0538, -106.675, -1.61341, 0.14", "32.2354, -107.197, -1.71904, 0.1", "32.3773, -107.711, -1.89169, 0.14", "32.5054, -108.269, -2.13061, 0.1", "32.6937, -109.153, -2.64001, 0.1", "32.745, -109.385, -2.79163, 0.1", "32.8507, -109.839, -3.10769, 0.14", "33.0786, -110.763, -3.74719, 0.1", "33.196, -111.208, -4.04934, 0.1", "33.4389, -112.124, -4.69679, 0.14", "33.5269, -112.541, -5.06124, 0.28", "33.5824, -112.896, -5.4948, 0.42", "33.6124, -113.198, -5.96565, 0.56", "33.6124, -113.198, -5.96565, 0.56", "33.6327, -113.629, -6.90986, 0.56", "33.7151, -114.424, -8.7862, 0.42", "33.7989, -114.796, -9.75235, 0.56", "33.7989, -114.796, -9.75235, 0.56", "33.8528, -114.908, -10.0055, 0.28", "34.1875, -115.47, -10.985, 0.42", "34.4586, -115.855, -11.3927, 0.28", "35.0679, -116.641, -11.8049, 0.14", "35.4408, -117.117, -11.9539, 0.1", "35.7799, -117.558, -12.0413, 0.14", "36.4698, -118.503, -12.1805, 0.1", "36.7748, -118.973, -12.1986, 0.1", "36.9751, -119.312, -12.2589, 0.1", "36.9751, -119.312, -12.2589, 0.1", "37.0889, -119.547, -12.364, 0.1", "37.5119, -120.482, -12.8754, 0.1", "37.7014, -120.938, -13.1454, 0.14", "38.0758, -121.952, -13.6141, 0.28", "38.2405, -122.462, -13.777, 0.42", "38.3998, -122.994, -13.8739, 0.56", "38.55, -123.533, -13.8995, 0.42", "38.6867, -124.067, -13.8437, 0.28", "38.9541, -125.202, -13.6444, 0.42", "39.07, -125.737, -13.5144, 0.56", "39.1887, -126.272, -13.3945, 0.42", "39.2511, -126.541, -13.3431, 0.42", "39.3813, -127.071, -13.2686, 0.56", "39.5248, -127.614, -13.2272, 0.42", "39.6792, -128.153, -13.2272, 0.28", "39.8445, -128.69, -13.1876, 0.14", "40.0171, -129.218, -13.1158, 0.28", "40.2058, -129.737, -13.0183, 0.42", "40.4158, -130.236, -12.9011, 0.42", "40.6473, -130.729, -12.7696, 0.28", "41.137, -131.652, -12.5098, 0.14", "41.2798, -131.89, -12.4653, 0.84", "41.615, -132.413, -12.4226, 0.7", "41.9726, -132.932, -12.4337, 0.56", "42.2971, -133.378, -12.4887, 0.42", "42.6674, -133.867, -12.5941, 0.28", "43.37, -134.784, -12.86, 0.14", "43.6919, -135.204, -13.0134, 0.1", "43.9209, -135.51, -13.1417, 0.1", "44.2585, -135.988, -13.3556, 0.1", "44.5796, -136.477, -13.5705, 0.1", "44.8547, -136.988, -13.814, 0.1", "45.2712, -137.96, -14.2571, 0.1", "45.3548, -138.201, -14.375, 0.14", "45.4374, -138.545, -14.5388, 0.1", "45.52, -139.051, -14.7654, 0.1", "45.6453, -140.114, -15.267, 0.14", "45.6958, -140.62, -15.5011, 0.1", "45.754, -141.127, -15.7086, 0.1", "45.8356, -141.706, -15.9415, 0.14", "45.9254, -142.211, -16.1687, 0.1", "46.1329, -143.258, -16.59, 0.1", "46.1962, -143.51, -16.6693, 0.56", "46.3544, -144.027, -16.8181, 0.56", "46.5522, -144.537, -16.9401, 0.42", "47.009, -145.574, -17.121, 0.56", "47.4403, -146.516, -17.1998, 0.56", "47.6879, -147.086, -17.2381, 0.42", "47.9197, -147.66, -17.3084, 0.28", "48.1368, -148.244, -17.403, 0.14", "48.2609, -148.613, -17.5055, 0.1", "48.4125, -149.123, -17.6912, 0.1", "48.6837, -150.154, -18.1905, 0.1", "48.7805, -150.64, -18.4596, 0.1", "48.8485, -151.109, -18.7577, 0.1", "48.9457, -151.948, -19.3634, 0.1", "48.9457, -151.948, -19.3634, 0.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.56201, -147.646, -41.4043, 0.84", "-2.93391, -148.1, -40.655, 0.84", "-2.70701, -148.264, -40.3844, 0.7", "-2.01858, -148.762, -39.5631, 0.56", "-1.79169, -148.927, -39.2925, 0.42", "-1.55968, -149.095, -39.0157, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.56201, -147.646, -41.4043, 0.56", "-3.55352, -148.021, -41.2724, 0.56", "-3.54619, -148.552, -41.0934, 0.42", "-3.5303, -149.144, -40.9105, 0.28", "-3.50475, -149.684, -40.7602, 0.14", "-3.42631, -150.828, -40.4741, 0.1", "-3.37765, -151.372, -40.352, 0.1", "-3.3018, -151.975, -40.2292, 0.1", "-3.22873, -152.523, -40.1346, 0.1", "-3.15371, -153.076, -40.0638, 0.1", "-3.0815, -153.631, -40.0237, 0.14", "-3.01473, -154.19, -40.0237, 0.1", "-2.95828, -154.738, -40.0237, 0.1", "-2.89513, -155.364, -40.0237, 0.1", "-2.85131, -155.985, -40.0237, 0.1", "-2.84138, -156.266, -40.0237, 0.1", "-2.82851, -156.897, -40.0237, 0.1", "-2.81524, -157.459, -40.0644, 0.14", "-2.78958, -158.014, -40.1375, 0.28", "-2.73739, -158.622, -40.2453, 0.42", "-2.66383, -159.236, -40.3724, 0.28", "-2.59632, -159.773, -40.4908, 0.14", "-2.44048, -160.879, -40.7491, 0.1", "-2.35991, -161.429, -40.8415, 0.1", "-2.26881, -161.979, -40.8924, 0.1", "-2.16388, -162.529, -40.9287, 0.1", "-2.03879, -163.136, -40.9352, 0.1", "-1.98588, -163.411, -40.9078, 0.1", "-1.79197, -164.495, -40.5895, 0.1", "-1.70642, -165.015, -40.3916, 0.14" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-23.3868, 142.853, 6.31978, 0.42", "-22.9271, 143.766, 6.91509, 0.42", "-22.7693, 144.074, 7.09387, 0.28", "-22.42, 144.711, 7.41893, 0.14", "-21.9217, 145.585, 7.79342, 0.1", "-21.5426, 146.237, 8.0365, 0.1", "-21.3441, 146.566, 8.14357, 0.1", "-21.1268, 146.892, 8.21346, 0.14", "-20.7774, 147.399, 8.30599, 0.28", "-20.3171, 148.04, 8.3824, 0.14", "-20.0759, 148.357, 8.3824, 0.1", "-19.6843, 148.839, 8.43283, 0.14", "-19.5021, 149.046, 8.48703, 0.28", "-19.0917, 149.476, 8.67397, 0.56", "-19.0917, 149.476, 8.67397, 0.42", "-18.9034, 149.653, 8.77901, 0.56", "-18.1696, 150.355, 9.13651, 0.56", "-17.7421, 150.774, 9.30829, 0.42", "-17.3072, 151.186, 9.50282, 0.28", "-16.8632, 151.578, 9.69451, 0.14", "-16.571, 151.821, 9.81381, 0.1", "-16.1057, 152.209, 9.98798, 0.1", "-15.636, 152.593, 10.1301, 0.1", "-14.7834, 153.301, 10.4088, 0.14", "-14.378, 153.646, 10.5844, 0.28", "-14.1846, 153.825, 10.6835, 0.42", "-13.7597, 154.232, 10.9128, 0.56", "-13.3532, 154.643, 11.1456, 0.42", "-13.1032, 154.917, 11.2902, 0.56", "-12.4024, 155.792, 11.6509, 0.42", "-12.0587, 156.263, 11.8665, 0.28", "-11.7599, 156.677, 12.0816, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-23.3868, 142.853, 6.31978, 0.98", "-23.6978, 143.932, 6.5484, 0.98", "-23.8516, 144.467, 6.63503, 0.84", "-23.9881, 145.011, 6.63497, 0.7", "-24.1138, 145.548, 6.58958, 0.56", "-24.2371, 146.091, 6.52216, 0.42", "-24.3601, 146.635, 6.44531, 0.28", "-24.4778, 147.169, 6.32382, 0.42", "-24.7229, 148.291, 6.06204, 0.28", "-24.8413, 148.828, 5.93999, 0.14", "-24.9705, 149.353, 5.79195, 0.1", "-25.1126, 149.873, 5.63023, 0.1", "-25.2667, 150.387, 5.46926, 0.1", "-25.4358, 150.903, 5.32042, 0.1", "-25.6096, 151.418, 5.23145, 0.1", "-25.9704, 152.536, 5.09332, 0.1", "-26.125, 153.066, 5.05114, 0.1", "-26.2735, 153.605, 5.08209, 0.1", "-26.4109, 154.14, 5.19443, 0.1", "-26.672, 155.125, 5.54106, 0.1", "-26.8067, 155.619, 5.76905, 0.1", "-26.8727, 155.857, 5.89691, 0.1", "-27.177, 156.863, 6.42941, 0.1", "-27.3334, 157.341, 6.68457, 0.1", "-27.529, 157.871, 6.9464, 0.1", "-27.7422, 158.361, 7.12459, 0.1", "-27.9695, 158.845, 7.29249, 0.1", "-27.9695, 158.845, 7.29249, 0.14" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-21.019, 79.6992, -9.77369, 0.28", "-21.0867, 80.3756, -8.84899, 0.28", "-21.1115, 81.0942, -8.0991, 0.42", "-21.1115, 81.0942, -8.0991, 0.56", "-21.1419, 82.0456, -7.4688, 0.28", "-21.1685, 82.6152, -7.20161, 0.28", "-21.2079, 83.2061, -7.01225, 0.14", "-21.2478, 83.834, -7.03612, 0.1", "-21.2897, 84.3778, -7.16533, 0.1", "-21.3397, 84.9085, -7.34706, 0.1", "-21.46, 85.9142, -7.87383, 0.1", "-21.5325, 86.3847, -8.16957, 0.1", "-21.7139, 87.3694, -8.79717, 0.1", "-21.8017, 87.8429, -9.08396, 0.1", "-21.8389, 88.0906, -9.21258, 0.14", "-21.9457, 89.1578, -9.60381, 0.1", "-21.9457, 89.1578, -9.60381, 0.1", "-21.9443, 90.304, -9.6631, 0.1", "-21.9306, 90.9335, -9.61464, 0.1", "-21.9066, 91.5493, -9.5478, 0.1", "-21.874, 92.1745, -9.46507, 0.1", "-21.8457, 92.7862, -9.36928, 0.14", "-21.8415, 93.0572, -9.34568, 0.28", "-21.8432, 93.6108, -9.34568, 0.28", "-21.8713, 94.1705, -9.34568, 0.14", "-21.9305, 94.7974, -9.34568, 0.1", "-21.9909, 95.3528, -9.39082, 0.1", "-22.0556, 95.8975, -9.46592, 0.1", "-22.1316, 96.5154, -9.57188, 0.1", "-22.2018, 97.063, -9.68294, 0.14", "-22.2797, 97.6048, -9.80349, 0.28", "-22.4533, 98.7542, -9.99087, 0.42", "-22.5361, 99.3086, -10.046, 0.28", "-22.6237, 99.8618, -10.0645, 0.14", "-22.7225, 100.416, -10.0458, 0.1", "-22.8123, 100.956, -9.99174, 0.14", "-23.0034, 102.117, -9.88325, 0.1", "-23.097, 102.669, -9.8553, 0.1", "-23.1838, 103.224, -9.8937, 0.1", "-23.2656, 103.766, -10.0125, 0.1", "-23.3557, 104.34, -10.2289, 0.1", "-23.5325, 105.347, -10.7462, 0.1", "-23.7044, 106.187, -11.2611, 0.14", "-23.7044, 106.187, -11.2611, 0.28", "-23.8264, 106.706, -11.4351, 0.7", "-23.9681, 107.247, -11.4993, 0.56", "-24.1193, 107.775, -11.4592, 0.42", "-24.2715, 108.306, -11.3483, 0.28", "-24.5788, 109.378, -11.0817, 0.14", "-24.7304, 109.906, -10.9595, 0.28", "-24.8818, 110.434, -10.8476, 0.14", "-25.034, 110.965, -10.7525, 0.1", "-25.1853, 111.493, -10.6825, 0.1", "-25.3395, 112.03, -10.6435, 0.1", "-25.5052, 112.567, -10.6827, 0.1", "-25.6776, 113.096, -10.7537, 0.1", "-25.8565, 113.621, -10.8493, 0.1", "-26.0383, 114.139, -10.963, 0.1", "-26.2214, 114.645, -11.0936, 0.14", "-26.6166, 115.712, -11.4004, 0.28", "-26.7899, 116.209, -11.5915, 0.42", "-26.9481, 116.702, -11.814, 0.28", "-27.0189, 116.945, -11.9305, 0.42", "-27.0886, 117.189, -12.0469, 0.56", "-27.2429, 117.699, -12.2189, 0.84", "-27.6278, 118.806, -12.3733, 0.7", "-27.8358, 119.315, -12.407, 0.56", "-28.0709, 119.822, -12.3412, 0.56", "-28.2376, 120.161, -12.2451, 0.42", "-28.7164, 121.174, -11.8575, 0.28", "-28.9565, 121.69, -11.6045, 0.14", "-28.9565, 121.69, -11.6045, 0.14", "-29.3282, 122.681, -11.1767, 0.1", "-29.4813, 123.204, -11.0352, 0.1", "-29.6012, 123.821, -10.9731, 0.1", "-29.675, 124.379, -11.003, 0.1", "-29.7235, 124.924, -11.0644, 0.1", "-29.7895, 126.088, -11.258, 0.1", "-29.802, 126.632, -11.3936, 0.1", "-29.8121, 127.232, -11.5464, 0.14", "-29.8304, 127.777, -11.677, 0.14", "-29.8726, 128.394, -11.7977, 0.1", "-29.9102, 128.671, -11.8293, 0.14", "-29.9734, 128.944, -11.8605, 0.28", "-30.1307, 129.534, -11.9823, 0.84", "-30.2741, 130.061, -12.1194, 0.7", "-30.4109, 130.647, -12.2811, 0.56", "-30.5244, 131.168, -12.4293, 0.42", "-30.7362, 132.255, -12.7238, 0.28", "-30.8326, 132.861, -12.8757, 0.14", "-30.9009, 133.461, -13.0157, 0.1", "-30.9482, 134.077, -13.1377, 0.1", "-30.9482, 134.077, -13.1377, 0.14", "-30.9536, 134.635, -13.1812, 0.1", "-30.9459, 135.194, -13.2245, 0.1", "-30.9416, 135.742, -13.3023, 0.1", "-30.9559, 136.362, -13.4196, 0.1", "-30.9872, 136.977, -13.5535, 0.1", "-31.0424, 137.588, -13.652, 0.1", "-31.1813, 138.649, -13.7683, 0.14", "-31.2831, 139.202, -13.7972, 0.28", "-31.4297, 139.808, -13.795, 0.42", "-31.5993, 140.341, -13.7579, 0.28", "-32.0129, 141.437, -13.6065, 0.14", "-32.2177, 141.939, -13.5056, 0.1", "-32.4173, 142.457, -13.4153, 0.1", "-32.4173, 142.457, -13.4153, 0.1", "-32.5623, 142.998, -13.4491, 0.1", "-32.6907, 143.538, -13.5404, 0.1", "-32.8034, 144.07, -13.676, 0.1", "-33.0413, 145.189, -13.9584, 0.1", "-33.1558, 145.724, -14.0917, 0.1", "-33.2732, 146.258, -14.2141, 0.14", "-33.3963, 146.797, -14.323, 0.28", "-33.5129, 147.33, -14.4484, 0.14", "-33.6276, 147.857, -14.5733, 0.1", "-33.6276, 147.857, -14.5733, 0.14", "-33.7204, 148.395, -14.7017, 0.84", "-33.8053, 148.943, -14.7987, 0.7", "-33.975, 150.106, -14.9305, 0.56", "-34.0414, 150.661, -14.9676, 0.42", "-34.1057, 151.277, -14.9278, 0.28", "-34.1628, 151.824, -14.8223, 0.14", "-34.2823, 152.909, -14.4681, 0.1", "-34.3487, 153.419, -14.2445, 0.14", "-34.4056, 153.765, -14.0638, 0.28", "-34.5917, 154.773, -13.552, 0.56", "-34.6934, 155.266, -13.2983, 0.7", "-34.7972, 155.763, -13.0621, 0.56", "-34.9118, 156.283, -12.8854, 0.42", "-35.0406, 156.806, -12.723, 0.28", "-35.1137, 157.062, -12.6643, 0.14" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-21.019, 79.6992, -9.77369, 0.1", "-21.533, 79.469, -9.77369, 0.1", "-22.0445, 79.2399, -9.77369, 0.14", "-22.3015, 79.1248, -9.77369, 0.28" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "23.75, -184.024, -6.9645, 1.12", "23.5293, -184.938, -6.25581, 1.12", "23.4457, -185.265, -6.04334, 0.98", "23.3883, -185.518, -5.93504, 0.84", "23.2315, -186.575, -5.78714, 1.12", "23.1759, -187.19, -5.74373, 0.98", "23.1506, -187.814, -5.65961, 0.84", "23.1677, -188.207, -5.63842, 0.84", "23.327, -189.342, -5.56488, 0.7", "23.573, -190.492, -5.49796, 0.84", "23.8468, -191.493, -5.46541, 0.84", "24.1962, -192.579, -5.34619, 0.84", "24.378, -193.103, -5.25044, 0.7", "24.5758, -193.677, -5.11223, 0.56", "24.6509, -193.938, -5.03528, 0.7", "24.7378, -194.306, -4.94532, 0.56", "24.8282, -194.858, -4.9018, 0.7", "24.8766, -195.416, -4.9018, 0.84", "24.8919, -195.978, -4.94351, 0.84", "24.8692, -196.603, -5.02795, 0.98", "24.8393, -197.147, -5.12683, 0.84", "24.7975, -197.929, -5.2977, 0.84", "24.7746, -198.312, -5.36289, 0.98", "24.7318, -199.344, -5.47913, 0.84", "24.738, -199.741, -5.50068, 1.12", "24.7977, -200.298, -5.49108, 1.12", "24.9016, -200.84, -5.44272, 0.98", "25.2105, -201.931, -5.27747, 0.84", "25.3682, -202.459, -5.1723, 0.7", "25.4794, -202.83, -5.0814, 0.56", "25.6427, -203.365, -5.01295, 0.98", "25.786, -203.905, -4.96534, 0.98", "25.9088, -204.448, -4.90064, 0.98", "25.9823, -204.827, -4.85563, 0.84", "26.0721, -205.374, -4.75165, 0.7", "26.2304, -206.477, -4.48468, 0.84", "26.3871, -207.521, -4.27562, 0.84", "26.5756, -208.64, -4.10714, 0.98", "26.6828, -209.183, -4.10641, 0.98", "26.7459, -209.452, -4.14255, 0.98", "26.8793, -209.983, -4.27298, 0.84", "27.1872, -211.033, -4.61537, 0.98", "27.3491, -211.528, -4.83055, 0.98", "27.6847, -212.516, -5.30384, 0.84", "27.8531, -213.001, -5.5132, 0.84", "28.0389, -213.498, -5.69289, 0.84", "28.264, -214.067, -5.81038, 0.84", "28.4884, -214.583, -5.81485, 0.84", "28.7321, -215.085, -5.75791, 0.98", "28.9962, -215.569, -5.64427, 0.84", "29.3073, -216.099, -5.54377, 0.98", "29.8305, -216.988, -5.41633, 0.56", "30.137, -217.53, -5.4196, 0.7", "30.4346, -218.077, -5.51237, 0.84", "30.69, -218.619, -5.68299, 0.7", "31.0567, -219.543, -5.98447, 0.84", "31.1657, -219.912, -6.10375, 0.84", "31.414, -220.999, -6.37672, 0.7", "31.4843, -221.544, -6.41341, 0.84", "31.5136, -222.169, -6.34289, 0.84", "31.5308, -223.3, -6.1565, 0.7", "31.5297, -223.905, -6.02115, 0.56", "31.5285, -224.918, -5.79533, 0.42", "31.5205, -225.531, -5.65014, 0.42", "31.5057, -226.139, -5.5316, 0.56", "31.4814, -227.281, -5.42915, 0.56", "31.4689, -227.676, -5.47704, 0.84", "31.46, -228.218, -5.62009, 0.84", "31.4567, -228.473, -5.73799, 0.98" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "23.75, -184.024, -6.9645, 0.14", "24.0409, -184.283, -6.9645, 0.14", "24.5181, -184.694, -6.9645, 0.28", "24.8083, -184.949, -6.91564, 0.42", "25.2662, -185.364, -6.79399, 0.28", "25.7067, -185.793, -6.65501, 0.14", "25.9781, -186.07, -6.56543, 0.14", "26.2335, -186.349, -6.47185, 0.28", "26.9046, -187.099, -6.21413, 0.28", "27.3027, -187.555, -6.06703, 0.14", "27.6752, -187.96, -5.94618, 0.1", "28.1, -188.402, -5.83698, 0.1", "28.5382, -188.837, -5.75769, 0.14", "28.8297, -189.107, -5.72984, 0.28", "29.3066, -189.508, -5.72984, 0.14", "29.8092, -189.891, -5.72984, 0.1", "30.3248, -190.24, -5.72984, 0.1", "30.6604, -190.452, -5.76089, 0.1", "30.9984, -190.655, -5.81827, 0.1", "31.3325, -190.851, -5.89327, 0.1", "31.6697, -191.043, -5.98299, 0.1", "32.3335, -191.423, -6.17108, 0.14", "33.2471, -191.93, -6.4299, 0.28", "33.9227, -192.305, -6.60653, 0.14", "34.2633, -192.494, -6.68951, 0.1", "34.5977, -192.679, -6.76379, 0.1", "35.2848, -193.071, -6.89181, 0.14", "35.6132, -193.277, -6.93036, 0.28", "36.2461, -193.746, -6.93036, 0.14", "36.2461, -193.746, -6.93036, 0.28", "36.2461, -193.746, -6.93036, 0.42", "36.4068, -193.977, -6.93036, 0.56", "36.6678, -194.476, -6.93036, 0.42", "36.911, -194.981, -6.93036, 0.28", "37.0273, -195.237, -6.93036, 0.28", "37.0273, -195.237, -6.93036, 0.28", "37.1653, -195.48, -6.93036, 0.28", "37.5057, -196.009, -6.93036, 0.14", "37.86, -196.522, -6.93036, 0.1", "38.1864, -196.981, -6.93036, 0.1", "38.5415, -197.492, -6.93036, 0.1", "38.8831, -198.013, -6.93036, 0.14", "39.2095, -198.552, -6.93036, 0.28", "39.3407, -198.798, -6.93036, 0.42", "39.4594, -199.052, -6.95318, 0.28", "39.6758, -199.566, -7.03608, 0.14", "39.8584, -200.073, -7.14907, 0.1", "40.0202, -200.591, -7.28795, 0.1", "40.1695, -201.113, -7.43989, 0.1", "40.4736, -202.174, -7.7496, 0.14", "40.4736, -202.174, -7.7496, 0.28", "40.5669, -202.431, -7.81579, 0.56", "40.7849, -202.936, -7.92293, 0.42", "41.0246, -203.429, -8.00177, 0.28", "41.2816, -203.924, -8.04929, 0.14", "41.5818, -204.478, -8.04929, 0.1", "41.8899, -205.028, -8.04929, 0.14", "42.21, -205.562, -8.04929, 0.1", "42.21, -205.562, -8.04929, 0.14", "42.5843, -206.048, -8.15976, 0.1", "42.9331, -206.519, -8.39109, 0.14", "42.9331, -206.519, -8.39109, 0.28", "43.0796, -206.73, -8.49987, 0.56", "43.4098, -207.222, -8.71283, 0.42", "44.0351, -208.111, -9.1773, 0.28", "44.3296, -208.517, -9.40461, 0.14", "44.6676, -208.979, -9.66745, 0.1", "45.0007, -209.444, -9.93248, 0.1", "45.2849, -209.861, -10.1606, 0.1", "45.784, -210.683, -10.5508, 0.1", "45.784, -210.683, -10.5508, 0.1", "45.9158, -210.919, -10.619, 0.1", "46.1657, -211.402, -10.7249, 0.1", "46.4222, -211.895, -10.7945, 0.1", "46.6935, -212.388, -10.8271, 0.1", "47.007, -212.926, -10.8271, 0.1", "47.3429, -213.451, -10.8271, 0.14", "47.6711, -213.908, -10.8271, 0.1", "48.0633, -214.39, -10.8681, 0.1", "48.4847, -214.843, -10.945, 0.1", "48.7783, -215.11, -11.0165, 0.1", "49.2645, -215.473, -11.1554, 0.1", "49.5861, -215.668, -11.2873, 0.14", "50.4711, -216.103, -11.7181, 0.28", "50.7033, -216.202, -11.8431, 0.7", "51.2232, -216.394, -12.1249, 0.56", "51.7628, -216.572, -12.396, 0.42", "52.709, -216.86, -12.8175, 0.28", "53.0704, -216.968, -12.9448, 0.7", "53.443, -217.079, -13.0316, 0.7", "54.0251, -217.26, -13.1442, 0.56", "54.6154, -217.441, -13.2767, 0.42", "54.9797, -217.552, -13.3583, 0.28", "55.5784, -217.726, -13.4586, 0.14", "56.1651, -217.89, -13.5724, 0.1", "56.5397, -217.994, -13.6594, 0.1", "57.6333, -218.308, -13.9821, 0.1", "57.9845, -218.411, -14.1153, 0.14" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "48.9457, -151.948, -19.3634, 0.1", "49.4221, -152.85, -19.169, 0.1", "49.6708, -153.346, -19.0881, 0.1", "49.9362, -153.905, -19.0165, 0.1", "50.1662, -154.416, -18.9636, 0.1", "50.4257, -154.98, -18.9134, 0.1", "50.6573, -155.482, -18.8738, 0.1", "50.8905, -155.991, -18.8738, 0.1", "51.1179, -156.506, -18.8738, 0.1", "51.3295, -157.025, -18.8738, 0.1", "51.465, -157.398, -18.906, 0.1", "51.5475, -157.662, -18.9475, 0.7", "51.701, -158.192, -19.0589, 0.7", "51.8425, -158.719, -19.1863, 0.56", "51.9748, -159.25, -19.3211, 0.7", "52.2331, -160.362, -19.6066, 0.56", "52.3489, -160.898, -19.7369, 0.42", "52.4681, -161.433, -19.8557, 0.28", "52.593, -161.972, -19.9587, 0.14", "52.7337, -162.499, -20.0345, 0.28", "52.8155, -162.768, -20.0558, 0.28", "52.9971, -163.298, -20.0558, 0.28", "53.1954, -163.825, -20.0558, 0.14", "53.4039, -164.345, -20.0558, 0.1", "53.6427, -164.921, -20.0558, 0.1", "53.8708, -165.434, -20.0959, 0.1", "54.1029, -165.939, -20.1662, 0.1", "54.3682, -166.5, -20.2738, 0.1", "54.6047, -166.994, -20.3919, 0.14", "54.8312, -167.479, -20.5248, 0.28", "55.2895, -168.524, -20.8318, 0.42", "55.5112, -169.017, -20.9778, 0.84", "55.5112, -169.017, -20.9778, 0.7", "55.6253, -169.272, -21.0117, 0.28", "55.8725, -169.771, -20.9436, 0.14", "56.1126, -170.226, -20.7149, 0.1", "56.3566, -170.658, -20.338, 0.1", "56.5708, -171.022, -19.9657, 0.1", "56.9907, -171.731, -19.1234, 0.1", "57.4041, -172.403, -18.2487, 0.1", "57.782, -172.99, -17.479, 0.1", "58.227, -173.674, -16.6297, 0.1", "58.4495, -174.017, -16.2423, 0.1", "58.9183, -174.735, -15.6557, 0.1", "59.2512, -175.242, -15.7969, 0.1", "59.7876, -176.049, -16.4671, 0.1", "60.2833, -176.774, -17.2064, 0.1", "60.7367, -177.415, -17.9375, 0.1", "60.9838, -177.746, -18.3208, 0.1", "61.4626, -178.388, -19.035, 0.1", "61.5938, -178.562, -19.2129, 0.1", "61.9058, -178.964, -19.5728, 0.1", "62.2358, -179.386, -19.903, 0.1", "62.5548, -179.803, -20.2384, 0.1", "62.8336, -180.177, -20.5547, 0.1", "63.3371, -180.879, -21.1914, 0.1", "63.8634, -181.631, -21.9415, 0.1", "64.0827, -181.967, -22.3187, 0.1", "64.512, -182.651, -23.1769, 0.1", "64.7061, -182.971, -23.5974, 0.14", "65.119, -183.651, -24.4666, 0.28", "65.2194, -183.826, -24.6633, 0.14", "65.6487, -184.573, -25.4192, 0.1", "66.1148, -185.343, -26.1847, 0.1", "66.2299, -185.534, -26.3521, 0.1", "66.5066, -185.988, -26.6892, 0.1", "66.7793, -186.435, -26.8903, 0.1", "67.1007, -186.959, -26.9909, 0.1", "67.7212, -187.96, -26.8916, 0.14", "68.0012, -188.43, -26.7692, 0.28", "68.5095, -189.314, -26.5737, 0.84", "69.044, -190.359, -26.4661, 0.7", "69.2807, -190.87, -26.4678, 0.56", "69.4896, -191.443, -26.5938, 0.42", "69.6343, -191.948, -26.7955, 0.28", "69.8332, -192.884, -27.4272, 0.14", "69.9861, -193.79, -28.1624, 0.1", "70.0122, -193.991, -28.3539, 0.1", "70.1056, -194.831, -29.18, 0.1", "70.1383, -195.236, -29.566, 0.1", "70.2103, -196.122, -30.337, 0.1", "70.2543, -196.576, -30.6618, 0.1", "70.3766, -197.557, -31.2459, 0.1", "70.4463, -198.05, -31.5015, 0.1", "70.5437, -198.622, -31.7214, 0.1", "70.6433, -199.151, -31.8768, 0.1", "70.7582, -199.684, -32.004, 0.1", "70.8183, -199.952, -32.0691, 0.1", "70.883, -200.224, -32.1044, 0.56", "71.023, -200.763, -32.1596, 0.42", "71.1885, -201.29, -32.1955, 0.28", "71.5203, -202.274, -32.2254, 0.14", "71.7076, -202.805, -32.2224, 0.1", "72.0827, -203.773, -32.187, 0.1", "72.2951, -204.291, -32.1534, 0.1", "72.5502, -204.856, -32.1006, 0.1", "72.79, -205.363, -32.0412, 0.1", "73.0311, -205.864, -31.9726, 0.1", "73.3029, -206.43, -31.9314, 0.1", "73.5394, -206.938, -31.9314, 0.1", "73.792, -207.508, -31.9314, 0.14", "74.016, -208.025, -31.9314, 0.28", "74.2352, -208.53, -31.9314, 0.14", "74.4536, -209.049, -31.9314, 0.1", "74.6584, -209.571, -31.9314, 0.1", "74.8607, -210.096, -31.9314, 0.1", "74.9956, -210.462, -31.9314, 0.1", "75.1958, -210.988, -31.9314, 0.84", "75.4004, -211.51, -31.9314, 0.7", "75.6095, -212.03, -31.9314, 0.56", "75.6095, -212.03, -31.9314, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "48.9457, -151.948, -19.3634, 0.28", "49.6287, -152.326, -17.4795, 0.28", "49.9961, -152.53, -16.492, 0.14", "50.3841, -152.745, -15.5112, 0.1", "50.7727, -152.96, -14.5288, 0.1", "51.2314, -153.214, -13.3689, 0.1", "51.6182, -153.429, -12.3911, 0.14", "52.0454, -153.666, -11.432, 0.28", "52.211, -153.758, -11.0761, 0.42" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.70642, -165.015, -40.3916, 0.14", "-1.39811, -165.113, -40.6088, 0.14", "-0.888136, -165.263, -40.9493, 0.28", "0.00716168, -165.514, -41.4855, 0.14", "0.543759, -165.665, -41.7784, 0.1", "0.886614, -165.761, -41.9564, 0.1", "1.90432, -166.065, -42.4648, 0.1", "2.45017, -166.246, -42.7215, 0.1", "2.9908, -166.464, -42.9374, 0.1", "3.34048, -166.631, -43.0297, 0.1", "3.34048, -166.631, -43.0297, 0.1", "3.5675, -166.795, -43.0559, 0.1", "4.04228, -167.199, -43.0559, 0.1", "4.50244, -167.614, -42.9971, 0.1", "4.79164, -167.881, -42.9353, 0.1", "5.25315, -168.293, -42.8159, 0.1", "5.71839, -168.697, -42.6864, 0.1", "6.00827, -168.944, -42.6022, 0.1", "6.96137, -169.738, -42.3162, 0.1", "7.43295, -170.131, -42.1782, 0.1", "7.72907, -170.379, -42.0975, 0.1", "8.20397, -170.772, -41.9692, 0.1", "8.67439, -171.164, -41.8531, 0.1", "8.97331, -171.421, -41.7996, 0.1", "9.43638, -171.838, -41.7996, 0.1", "9.73407, -172.102, -41.7996, 0.1" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-1.70642, -165.015, -40.3916, 0.1", "-1.47092, -166.047, -40.1833, 0.1", "-1.34208, -166.579, -40.1017, 0.1", "-1.20659, -167.119, -40.0363, 0.1", "-1.06656, -167.661, -39.9829, 0.1", "-0.937486, -168.205, -39.9387, 0.1", "-0.823374, -168.755, -39.9014, 0.1", "-0.713854, -169.305, -39.9014, 0.1", "-0.617576, -169.847, -39.9014, 0.1", "-0.526782, -170.403, -39.9014, 0.1", "-0.429197, -171.027, -39.9014, 0.1", "-0.333271, -171.639, -39.9014, 0.1", "-0.242958, -172.193, -39.9014, 0.1", "-0.154897, -172.749, -39.9014, 0.1", "-0.0645416, -173.302, -39.9014, 0.1", "0.0348996, -173.856, -39.9014, 0.1", "0.145842, -174.396, -39.9014, 0.14", "0.254928, -174.944, -39.8626, 0.28", "0.364984, -175.559, -39.7815, 0.14", "0.442125, -176.096, -39.6407, 0.1", "0.506024, -176.622, -39.4506, 0.1", "0.533951, -176.871, -39.3442, 0.1", "0.656439, -177.938, -38.8491, 0.1", "0.721323, -178.443, -38.6091, 0.1", "0.882583, -179.503, -38.1207, 0.1", "0.959137, -180.026, -37.9349, 0.1", "1.03099, -180.571, -37.8135, 0.1", "1.10253, -181.125, -37.7681, 0.1", "1.17799, -181.681, -37.8122, 0.14", "1.24762, -182.22, -37.9039, 0.1", "1.40195, -183.352, -38.2064, 0.14", "1.4806, -183.957, -38.3704, 0.1", "1.51696, -184.227, -38.4395, 0.14", "1.55598, -184.484, -38.5191, 0.28", "1.60321, -184.746, -38.6045, 0.28", "1.71897, -185.273, -38.7663, 0.14", "1.85849, -185.799, -38.9, 0.1", "2.00909, -186.324, -39.0381, 0.1", "2.31574, -187.394, -39.3093, 0.1", "2.47376, -187.91, -39.4349, 0.1", "2.64241, -188.431, -39.5518, 0.1", "2.81861, -188.952, -39.6587, 0.1", "2.99595, -189.484, -39.7124, 0.1", "3.15698, -190.021, -39.6886, 0.1", "3.2519, -190.389, -39.5721, 0.1", "3.34717, -190.892, -39.3436, 1.12", "3.34717, -190.892, -39.3436, 0.98", "3.44627, -191.821, -38.8154, 0.28", "3.49536, -192.37, -38.5101, 0.14", "3.58235, -193.388, -37.9902, 0.1", "3.63117, -193.951, -37.7359, 0.1", "3.70235, -194.471, -37.5404, 0.1", "3.81659, -195.003, -37.3951, 0.1", "3.98497, -195.532, -37.3162, 0.1", "4.18367, -196.049, -37.2306, 0.1", "4.28778, -196.308, -37.1922, 0.1", "4.51197, -196.884, -37.0712, 0.1", "4.69879, -197.459, -36.9228, 0.1", "4.7925, -197.822, -36.8189, 0.1", "4.99236, -198.838, -36.5248, 0.1", "5.07898, -199.431, -36.3645, 0.1", "5.1462, -200.042, -36.2215, 0.1", "5.17597, -200.424, -36.1495, 0.1", "5.22099, -200.98, -36.0752, 0.1", "5.28471, -201.536, -36.0356, 0.1", "5.3699, -202.088, -35.9958, 0.1", "5.47281, -202.637, -35.9217, 0.1", "5.57343, -203.17, -35.7797, 0.1", "5.66641, -203.683, -35.5945, 0.1", "5.74866, -204.193, -35.3759, 0.1", "5.86887, -205.132, -34.8639, 0.1", "5.92102, -205.608, -34.5732, 0.1", "6.00298, -206.601, -33.9475, 0.1", "6.02828, -207.079, -33.6553, 0.1", "6.04631, -207.567, -33.3752, 0.1", "6.06845, -208.624, -32.8561, 0.1", "6.08215, -209.153, -32.6635, 0.1", "6.09708, -209.747, -32.4499, 0.1", "6.12222, -210.338, -32.2652, 0.1", "6.13736, -210.606, -32.1808, 0.1", "6.18888, -211.211, -32.0059, 0.1", "6.26017, -211.752, -31.8784, 0.1", "6.44492, -212.853, -31.6118, 0.1", "6.55676, -213.377, -31.4853, 0.1", "6.68854, -213.911, -31.3655, 0.1", "6.81898, -214.447, -31.2641, 0.1", "6.95341, -214.988, -31.187, 0.1", "7.06954, -215.535, -31.1446, 0.1", "7.12047, -215.812, -31.1446, 0.1", "7.19874, -216.357, -31.1446, 0.1", "7.27128, -216.983, -31.1446, 0.1", "7.31695, -217.541, -31.1446, 0.1", "7.35633, -218.16, -31.1446, 0.1", "7.39074, -218.719, -31.1446, 0.1", "7.42476, -219.348, -31.1446, 0.1", "7.45765, -219.907, -31.1446, 0.1", "7.50457, -220.524, -31.1846, 0.14", "7.54988, -221.079, -31.2515, 0.1", "7.60612, -221.631, -31.3482, 0.1", "7.67674, -222.233, -31.4842, 0.1", "7.75873, -222.769, -31.6273, 0.1", "7.93404, -223.753, -31.9114, 0.14", "7.93404, -223.753, -31.9114, 0.28", "7.98797, -224.013, -32.0052, 0.28", "8.09519, -224.526, -32.2031, 0.14", "8.20927, -225.043, -32.3938, 0.1", "8.31626, -225.543, -32.5992, 0.1", "8.40266, -226.06, -32.8063, 0.1", "8.53069, -227.141, -33.2672, 0.1", "8.56207, -227.655, -33.4971, 0.1", "8.56043, -228.165, -33.7282, 0.1", "8.51109, -229.213, -34.1797, 0.1", "8.47599, -229.797, -34.4108, 0.1", "8.44516, -230.387, -34.6005, 0.1", "8.44623, -230.777, -34.6804, 0.1", "8.48202, -231.39, -34.7744, 0.1", "8.55729, -231.946, -34.8202, 0.1", "8.64268, -232.326, -34.8202, 0.1", "8.80053, -232.867, -34.8202, 0.1", "8.99131, -233.46, -34.8202, 0.1", "9.15762, -233.998, -34.8202, 0.1", "9.31096, -234.537, -34.8202, 0.1", "9.44019, -235.081, -34.7823, 0.1", "9.55606, -235.685, -34.7041, 0.1", "9.65701, -236.218, -34.5611, 0.1", "9.76778, -236.796, -34.3397, 0.1", "9.82277, -237.047, -34.2232, 0.1", "10.0653, -237.909, -33.6986, 0.1", "10.2135, -238.348, -33.3955, 0.1", "10.569, -239.263, -32.7372, 0.1", "10.7461, -239.693, -32.4369, 0.1", "10.9372, -240.138, -32.1547, 0.1", "11.3444, -241.118, -31.6413, 0.1", "11.5405, -241.611, -31.4535, 0.1", "11.7317, -242.124, -31.3357, 0.1", "11.9121, -242.657, -31.3092, 0.1", "12.0742, -243.193, -31.3352, 0.1", "12.2181, -243.729, -31.4116, 0.1", "12.3418, -244.255, -31.534, 0.1", "12.5842, -245.341, -31.8102, 0.14", "12.6882, -245.876, -31.9531, 0.28", "12.79, -246.478, -32.1118, 0.14", "12.8696, -247.011, -32.2378, 0.1", "12.9075, -247.283, -32.2872, 0.14", "12.9075, -247.283, -32.2872, 0.28", "12.9692, -247.67, -32.2166, 0.1", "13.0849, -248.206, -32.0875, 0.1", "13.2269, -248.73, -31.9457, 0.1", "13.3796, -249.243, -31.8047, 0.1", "13.7169, -250.303, -31.5286, 0.1", "13.891, -250.821, -31.4048, 0.1", "14.0982, -251.402, -31.2795, 0.1", "14.2826, -251.923, -31.1845, 0.1", "14.4665, -252.45, -31.1133, 0.1", "14.6354, -252.983, -31.0743, 0.1", "14.7907, -253.525, -31.0743, 0.1", "14.918, -254.061, -31.0743, 0.1", "15.0115, -254.613, -31.0743, 0.1", "15.0746, -255.173, -31.0743, 0.1", "15.119, -255.803, -31.0743, 0.14", "15.1437, -256.356, -31.0743, 0.1", "15.1569, -256.754, -31.0743, 0.1", "15.1683, -257.385, -31.0743, 0.1", "15.1816, -258.005, -31.0743, 0.1", "15.2053, -258.565, -31.0743, 0.1", "15.2405, -259.127, -31.0743, 0.1", "15.2856, -259.686, -31.0743, 0.1", "15.3573, -260.303, -31.0743, 0.1", "15.4271, -260.862, -31.0743, 0.14", "15.4986, -261.418, -31.0743, 0.1", "15.5746, -262.033, -31.0743, 0.14", "15.6359, -262.59, -31.0743, 0.1", "15.687, -263.151, -31.0743, 0.1", "15.7414, -263.78, -31.0743, 0.1", "15.7832, -264.332, -31.0743, 0.1", "15.8254, -264.89, -31.0374, 0.1", "15.8824, -265.512, -30.9572, 0.1", "15.9441, -266.121, -30.8465, 0.1", "15.9781, -266.393, -30.7856, 0.1", "16.0661, -266.93, -30.6516, 0.14", "16.253, -267.92, -30.3969, 0.42", "16.3719, -268.452, -30.2648, 0.28", "16.513, -268.984, -30.1458, 0.14", "16.6518, -269.508, -30.0504, 0.1", "16.7864, -270.051, -29.9802, 0.1", "16.9145, -270.595, -29.943, 0.1", "17.0394, -271.144, -29.943, 0.1", "17.1606, -271.691, -29.943, 0.1", "17.2935, -272.297, -29.943, 0.1", "17.4036, -272.845, -29.9059, 0.1", "17.5062, -273.391, -29.8362, 0.1", "17.5952, -273.939, -29.7399, 1.26", "17.6754, -274.482, -29.6254, 1.12", "17.7431, -275.027, -29.4994, 0.98", "17.8638, -276.064, -29.2526, 0.84", "17.9075, -276.609, -29.1284, 0.7", "17.9445, -277.225, -29.0019, 0.56", "17.9743, -277.767, -28.9093, 0.42", "18.015, -278.392, -28.8318, 0.28", "18.0751, -278.951, -28.7945, 0.14", "18.1739, -279.565, -28.7945, 0.1", "18.2955, -280.113, -28.8333, 0.1", "18.4492, -280.651, -28.8668, 0.1", "18.6271, -281.185, -28.8944, 0.1", "18.8501, -281.766, -28.8724, 0.1", "19.0616, -282.284, -28.8093, 0.1", "19.5174, -283.351, -28.6043, 0.1", "19.9046, -284.287, -28.3744, 0.56", "20.1021, -284.792, -28.2327, 0.42", "20.4434, -285.811, -27.8457, 0.28", "20.5782, -286.294, -27.5905, 0.14", "20.6947, -286.762, -27.3039, 0.1", "20.7986, -287.226, -27.0023, 0.1", "20.9025, -287.702, -26.7248, 0.1", "21.1193, -288.71, -26.1581, 0.1", "21.3365, -289.717, -25.6567, 0.1", "21.4366, -290.218, -25.4182, 0.14", "21.5344, -290.725, -25.2014, 0.28", "21.5835, -290.981, -25.094, 0.98", "21.687, -291.498, -24.9043, 1.12", "21.7868, -292.012, -24.725, 0.98", "21.8892, -292.597, -24.5102, 0.84", "21.9719, -293.094, -24.2578, 0.7", "22.1342, -294.07, -23.6801, 0.56", "22.2024, -294.518, -23.3664, 0.42", "22.3399, -295.449, -22.6521, 0.28", "22.4066, -295.886, -22.3074, 0.14", "22.5576, -296.787, -21.6124, 0.1", "22.6319, -297.23, -21.2936, 0.1", "22.794, -298.205, -20.6466, 0.14", "22.8734, -298.67, -20.3433, 0.1", "22.9666, -299.154, -20.0704, 0.1", "23.0544, -299.632, -19.8126, 0.14", "23.1012, -299.893, -19.7161, 0.28" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-22.3015, 79.1248, -9.77369, 0.28", "-22.2393, 78.7612, -9.61099, 0.28", "-22.0747, 78.2151, -9.3684, 0.14", "-21.8751, 77.7299, -9.17137, 0.1", "-21.7557, 77.49, -9.08486, 0.1", "-21.2858, 76.6095, -8.79631, 0.1", "-21.0041, 76.0816, -8.6233, 0.1", "-20.6866, 75.5756, -8.44667, 0.1", "-20.3304, 75.0882, -8.26759, 0.1", "-19.9559, 74.618, -8.10437, 0.1", "-19.7782, 74.4061, -8.05142, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-22.3015, 79.1248, -9.77369, 0.1", "-22.8763, 79.4927, -10.1844, 0.1", "-23.1528, 79.6821, -10.3924, 0.1", "-23.7219, 80.0762, -10.7864, 0.1", "-24.49, 80.6287, -11.2927, 0.1", "-24.9545, 80.976, -11.538, 0.1", "-25.7663, 81.6091, -11.8411, 0.1", "-26.2454, 82.0131, -11.9552, 0.1", "-26.8347, 82.5358, -11.9468, 0.1", "-27.0344, 82.7233, -11.8816, 0.1", "-27.8281, 83.4703, -11.4343, 0.1", "-28.526, 84.0986, -10.99, 0.1", "-28.526, 84.0986, -10.99, 0.1", "-29.0801, 84.5574, -10.6691, 0.1", "-29.5512, 84.9317, -10.5079, 0.1", "-29.8719, 85.1747, -10.4834, 0.1", "-30.5094, 85.6267, -10.5826, 0.1", "-30.8298, 85.8492, -10.6626, 0.1", "-31.3281, 86.1961, -10.8016, 0.1", "-32.1783, 86.7912, -11.0943, 0.1", "-32.6653, 87.1238, -11.2947, 0.1", "-33.143, 87.4586, -11.5317, 0.1" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "31.4567, -228.473, -5.73799, 0.84", "31.5927, -228.695, -5.6303, 0.84", "31.8661, -229.132, -5.43635, 0.98", "32.1422, -229.587, -5.2597, 0.84", "32.7529, -230.569, -5.01835, 0.7", "33.0687, -231.1, -4.939, 0.56", "33.38, -231.655, -4.89708, 0.42", "33.5069, -231.892, -4.90016, 0.56", "33.7538, -232.395, -4.95513, 0.7", "34.1775, -233.36, -5.15963, 0.56", "34.3123, -233.724, -5.247, 0.84", "34.4907, -234.254, -5.31834, 0.84", "34.6643, -234.786, -5.32201, 0.84", "34.8582, -235.309, -5.26182, 0.84", "34.8582, -235.309, -5.26182, 0.98", "35.2882, -236.212, -4.98073, 0.1", "35.5642, -236.753, -4.81445, 0.14", "35.8063, -237.229, -4.67953, 0.1", "36.0773, -237.783, -4.55075, 0.14", "36.3345, -238.351, -4.45876, 0.28", "36.44, -238.608, -4.43666, 0.42", "36.5825, -238.97, -4.43666, 0.84", "36.7744, -239.5, -4.43666, 0.84", "36.9592, -240.029, -4.43666, 0.84", "37.1324, -240.562, -4.43666, 0.7", "37.3177, -241.094, -4.43666, 0.56", "37.4622, -241.465, -4.43666, 0.56", "37.5711, -241.722, -4.43666, 0.84", "37.7994, -242.224, -4.48243, 0.84", "38.0363, -242.725, -4.56436, 0.7", "38.3099, -243.272, -4.68405, 0.84", "38.5577, -243.762, -4.80772, 0.7", "38.808, -244.247, -4.93627, 0.84", "39.3501, -245.261, -5.20806, 0.7", "39.4854, -245.501, -5.2519, 0.84", "39.7967, -246.046, -5.30034, 0.7", "40.0678, -246.537, -5.29648, 0.84", "40.3658, -247.089, -5.24113, 0.7", "40.619, -247.58, -5.14888, 0.56", "41.1246, -248.603, -4.85438, 0.7", "41.3611, -249.091, -4.70174, 0.84", "41.5829, -249.577, -4.53292, 0.98", "41.7999, -250.063, -4.34829, 0.84", "41.8971, -250.306, -4.25314, 0.84" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "31.4567, -228.473, -5.73799, 1.26", "31.2526, -229.062, -5.73799, 1.26", "31.0765, -229.668, -5.73799, 1.12", "30.9919, -230.048, -5.73799, 0.98", "30.8932, -230.67, -5.73799, 0.84", "30.8223, -231.288, -5.73799, 0.7", "30.7907, -231.684, -5.70959, 0.56", "30.799, -232.239, -5.63184, 0.1", "30.8607, -232.788, -5.52176, 0.1", "30.9675, -233.313, -5.39474, 0.1", "31.0476, -233.574, -5.32394, 0.1", "31.4086, -234.51, -5.05591, 0.1", "31.6089, -235.001, -4.87365, 0.1", "31.8251, -235.538, -4.64351, 0.1", "32.0025, -236.027, -4.42784, 0.1", "32.1808, -236.579, -4.20033, 0.1", "32.2484, -236.837, -4.11076, 0.1", "32.461, -237.859, -3.84675, 0.28", "32.5346, -238.389, -3.71781, 0.14", "32.5863, -239.003, -3.587, 0.28", "32.6198, -239.553, -3.48896, 0.42", "32.6488, -240.167, -3.40686, 0.56", "32.6978, -240.724, -3.36477, 0.42", "32.7985, -241.345, -3.36477, 0.28", "32.9334, -241.889, -3.36477, 0.14", "33.0307, -242.154, -3.36477, 0.28", "33.1405, -242.403, -3.36477, 0.98", "33.4167, -242.969, -3.36477, 0.84", "33.6925, -243.528, -3.36477, 0.7", "33.955, -244.1, -3.36477, 0.56", "34.0865, -244.467, -3.36477, 0.42", "34.1815, -244.852, -3.33181, 0.1", "34.2549, -245.46, -3.23859, 0.14", "34.2584, -246.009, -3.12485, 0.28", "34.2207, -246.619, -2.97093, 0.42", "34.1497, -247.212, -2.79982, 0.28", "34.0159, -248.252, -2.55533, 0.14", "33.9653, -248.863, -2.45401, 0.1", "33.9653, -248.863, -2.45401, 0.14", "33.9718, -249.129, -2.37057, 0.14", "34.0138, -249.465, -2.17875, 0.14", "34.1859, -250.311, -1.42178, 0.28", "34.2715, -250.705, -1.03262, 0.28", "34.4296, -251.532, -0.254472, 0.42", "34.5619, -252.322, 0.407325, 0.56", "34.6935, -253.22, 1.10166, 0.42", "34.8198, -254.054, 1.70633, 0.28", "34.8922, -254.579, 2.04653, 0.14", "35.0373, -255.709, 2.34322, 0.1", "35.1479, -256.704, 2.06567, 0.14", "35.1772, -256.957, 1.94527, 0.56", "35.2376, -257.423, 1.63981, 0.42", "35.306, -257.875, 1.31091, 0.28", "35.3803, -258.331, 0.992974, 0.28", "35.5477, -259.334, 0.400713, 0.14", "35.6151, -259.828, 0.146197, 0.1", "35.7344, -260.85, -0.359693, 0.1", "35.7569, -261.111, -0.461856, 0.14", "35.7832, -261.497, -0.557381, 0.28", "35.8093, -262.046, -0.596407, 0.14", "35.8392, -262.672, -0.532176, 0.1", "35.8655, -263.223, -0.434413, 0.14", "35.9366, -264.365, -0.161682, 0.1", "35.9853, -264.91, -0.0393662, 0.1", "36.0624, -265.522, 0.0853584, 0.1", "36.1422, -266.059, 0.181075, 0.1", "36.2328, -266.609, 0.258177, 0.1", "36.3274, -267.16, 0.302504, 0.1", "36.422, -267.715, 0.302504, 0.1", "36.5097, -268.269, 0.302504, 0.1", "36.5477, -268.548, 0.302504, 0.14", "36.5885, -268.935, 0.302504, 0.1", "36.6257, -269.494, 0.302504, 0.14", "36.6562, -270.125, 0.302504, 0.1", "36.6826, -270.688, 0.302504, 0.1", "36.7213, -271.307, 0.25711, 0.1", "36.7687, -271.863, 0.185981, 0.1", "36.8291, -272.478, 0.119394, 0.1", "36.8873, -273.036, 0.0701393, 0.1", "36.9469, -273.593, 0.0347334, 0.1", "37.0659, -274.733, -0.00584193, 0.14", "37.0928, -275.011, -0.00725224, 0.28", "37.1592, -276.085, 0.0205027, 0.7", "37.1865, -276.637, 0.0508376, 0.56", "37.1955, -277.266, 0.101382, 0.42", "37.1967, -277.827, 0.158621, 0.28", "37.202, -278.444, 0.233265, 0.14", "37.219, -279.072, 0.275463, 0.1", "37.2519, -279.631, 0.275463, 0.1", "37.3033, -280.249, 0.275463, 0.1", "37.3731, -280.805, 0.275463, 0.1", "37.462, -281.359, 0.275463, 0.1", "37.5256, -281.633, 0.275463, 0.56", "37.6803, -282.174, 0.275463, 0.42", "37.8377, -282.702, 0.275463, 0.28", "37.9947, -283.24, 0.275463, 0.14", "38.1387, -283.785, 0.275463, 0.14", "38.2701, -284.394, 0.275463, 0.28", "38.3196, -284.671, 0.275463, 0.42", "38.3772, -285.065, 0.275463, 0.1", "38.4512, -285.682, 0.275463, 0.1", "38.5094, -286.242, 0.275463, 0.1", "38.5718, -286.871, 0.275463, 0.1", "38.6448, -287.429, 0.275463, 0.1", "38.696, -287.694, 0.275463, 0.14", "38.7677, -287.966, 0.275463, 0.56", "38.9364, -288.501, 0.322224, 0.42", "39.1151, -289.026, 0.404703, 0.28", "39.324, -289.601, 0.522987, 0.14", "39.5094, -290.119, 0.64338, 0.1", "39.6868, -290.625, 0.806694, 0.1", "40.0336, -291.645, 1.20167, 0.14", "40.1919, -292.129, 1.41083, 0.1", "40.3448, -292.624, 1.63237, 0.1", "40.4778, -293.124, 1.84858, 0.1", "40.7116, -294.066, 2.2173, 0.56", "40.8355, -294.597, 2.34907, 0.7", "40.9559, -295.14, 2.43543, 0.56", "41.0728, -295.683, 2.51032, 0.42", "41.2013, -296.286, 2.57134, 0.28", "41.308, -296.836, 2.5988, 0.14", "41.5155, -297.963, 2.58705, 0.28", "41.6773, -298.987, 2.51069, 0.7", "41.7558, -299.53, 2.44296, 0.56", "41.8342, -300.079, 2.3558, 0.42", "41.9268, -300.681, 2.19891, 0.28", "41.9972, -301.22, 2.06173, 0.14", "42.1103, -302.362, 1.79643, 0.1", "42.1458, -302.904, 1.64935, 0.1", "42.1675, -303.448, 1.51477, 0.1", "42.1938, -304.568, 1.26824, 0.1", "42.1973, -305.626, 1.08867, 0.1", "42.1836, -306.256, 1.03645, 0.1", "42.1557, -306.874, 1.05995, 0.1", "42.1381, -307.152, 1.07588, 0.1", "42.1381, -307.152, 1.07588, 0.1", "42.1189, -307.548, 1.03831, 0.1", "42.1216, -308.098, 0.914112, 0.1", "42.1525, -308.699, 0.760802, 0.1", "42.1865, -309.243, 0.616857, 0.1", "42.2704, -310.386, 0.324561, 0.1", "42.3217, -310.929, 0.195205, 0.1", "42.3883, -311.466, 0.0779662, 0.1", "42.4666, -312.011, -0.0242063, 0.1", "42.5352, -312.4, -0.0786449, 0.1", "42.6438, -312.951, -0.120847, 0.1", "42.7785, -313.495, -0.120847, 0.1", "42.9134, -314.027, -0.081496, 0.1", "43.0552, -314.567, -0.00726563, 0.14", "43.2022, -315.099, 0.0919315, 0.28", "43.3572, -315.628, 0.207798, 0.28", "43.5136, -316.214, 0.348517, 0.42", "43.7628, -317.231, 0.598788, 0.56", "43.8819, -317.754, 0.722994, 0.42", "43.9973, -318.293, 0.838551, 0.28", "44.1074, -318.834, 0.937457, 0.14", "44.2012, -319.443, 1.06597, 0.1", "44.2518, -319.98, 1.17897, 0.1", "44.2786, -320.523, 1.32308, 0.1", "44.2651, -321.047, 1.52143, 0.14", "44.2408, -321.303, 1.63761, 0.28", "44.0755, -322.344, 2.16356, 0.1", "43.9675, -322.892, 2.45799, 0.1", "43.7507, -323.818, 2.96303, 0.1", "43.6224, -324.356, 3.24184, 0.1", "43.5114, -324.936, 3.46664, 0.1", "43.4788, -325.317, 3.53748, 0.1", "43.4971, -325.598, 3.52064, 0.14", "43.5429, -325.868, 3.47035, 0.56", "43.6717, -326.395, 3.3196, 0.42", "43.9799, -327.484, 2.99195, 0.28", "44.1252, -328.004, 2.84164, 0.14", "44.251, -328.536, 2.70692, 0.1", "44.3475, -329.066, 2.55108, 0.14", "44.3831, -329.333, 2.46792, 0.28", "44.4146, -329.705, 2.35608, 0.7", "44.4431, -330.316, 2.20271, 0.56", "44.4911, -330.895, 1.98583, 0.42", "44.6135, -331.835, 1.55953, 0.28", "44.659, -332.082, 1.43907, 0.1", "44.7779, -332.578, 1.20053, 0.1", "44.9358, -333.067, 0.977087, 0.1", "45.3202, -334.122, 0.606772, 0.1", "45.5058, -334.639, 0.499271, 0.1", "45.6684, -335.175, 0.473877, 0.1", "45.7943, -335.714, 0.488659, 0.1", "45.8986, -336.325, 0.55078, 0.14", "46.0229, -337.378, 0.73369, 0.1", "46.066, -337.988, 0.883816, 0.1", "46.1106, -338.592, 1.02503, 0.1", "46.1649, -339.207, 1.14972, 0.1", "46.2408, -339.756, 1.23335, 0.1", "46.294, -340.022, 1.25521, 0.1", "46.3785, -340.287, 1.23303, 0.1", "46.6254, -340.866, 1.13907, 0.1", "46.8621, -341.351, 1.0252, 0.1", "47.1409, -341.892, 0.866037, 0.1", "47.3771, -342.376, 0.709524, 0.1", "47.7966, -343.32, 0.406509, 0.1", "47.7966, -343.32, 0.406509, 0.14", "47.9189, -343.691, 0.308383, 0.28", "48.0747, -344.221, 0.19861, 0.28", "48.2144, -344.759, 0.124775, 0.14", "48.3529, -345.303, 0.0888089, 0.1", "48.4866, -345.838, 0.0888089, 0.1", "48.6207, -346.383, 0.127342, 0.1", "48.7446, -346.926, 0.19742, 0.1", "48.8514, -347.47, 0.294279, 0.1", "48.9335, -348.012, 0.409242, 0.1", "48.9977, -348.555, 0.534856, 0.1", "49.0998, -349.594, 0.781359, 0.1", "49.1545, -350.206, 0.921641, 0.1", "49.2049, -350.752, 1.03564, 0.1", "49.2587, -351.366, 1.09819, 0.1", "49.3135, -351.924, 1.094, 0.1", "49.3818, -352.48, 1.03192, 0.1", "49.4675, -353.022, 0.92091, 0.1", "49.5609, -353.542, 0.763886, 0.1", "49.7513, -354.654, 0.411006, 0.1", "49.8427, -355.18, 0.243504, 0.1", "49.9287, -355.714, 0.0853863, 0.1", "50.0132, -356.252, -0.049126, 0.1", "50.1506, -357.227, -0.220632, 0.1", "50.2976, -358.287, -0.304375, 0.1", "50.3818, -358.841, -0.288278, 0.1", "50.4533, -359.399, -0.264571, 0.1", "50.5078, -359.956, -0.235187, 0.1", "50.5617, -360.568, -0.149899, 0.1", "50.6135, -361.115, -0.0418655, 0.1", "50.6732, -361.667, 0.0523685, 0.1", "50.7402, -362.273, 0.174614, 0.1", "50.8122, -362.883, 0.312175, 0.1", "50.9411, -363.99, 0.579777, 0.1", "51.0018, -364.534, 0.712665, 0.1", "51.0445, -365.07, 0.835042, 0.1", "51.0682, -365.621, 0.945821, 0.1", "51.0761, -365.899, 0.966704, 0.1", "51.0702, -366.297, 0.97343, 0.1", "51.0353, -366.915, 0.939258, 0.1", "50.9898, -367.545, 0.914259, 0.1", "50.9659, -367.941, 0.939649, 0.1", "50.9412, -369.07, 1.10921, 0.1", "50.9826, -370.098, 1.42476, 0.1", "51.0406, -370.615, 1.64259, 0.1", "51.1256, -371.11, 1.89098, 0.1", "51.3418, -372.1, 2.42637, 0.1", "51.4503, -372.574, 2.6903, 0.1", "51.6575, -373.561, 3.23588, 0.1", "51.7508, -374.071, 3.45584, 0.1", "51.8146, -374.593, 3.65008, 0.1", "51.843, -375.144, 3.76225, 0.14", "51.8315, -375.537, 3.79341, 0.1", "51.7789, -376.164, 3.81037, 0.1", "51.7096, -376.782, 3.78669, 0.1", "51.6648, -377.177, 3.7771, 0.1", "51.5622, -378.355, 3.76563, 0.1", "51.5251, -379.427, 3.77086, 0.1", "51.5555, -379.986, 3.73981, 0.1", "51.6201, -380.542, 3.72299, 0.1", "51.719, -381.097, 3.72245, 0.1", "51.831, -381.642, 3.78622, 0.1", "51.9482, -382.17, 3.90374, 0.1", "52.1579, -383.204, 4.11434, 0.1", "52.3486, -384.223, 4.38855, 0.28", "52.4415, -384.753, 4.55738, 0.28", "52.63, -385.855, 4.94131, 0.14", "52.7099, -386.384, 5.08467, 0.1", "52.7976, -386.999, 5.19556, 0.14", "52.8381, -387.277, 5.21981, 0.7", "52.9368, -387.819, 5.11557, 0.56", "53.0283, -388.343, 4.92981, 0.56", "53.1927, -389.397, 4.43177, 0.42", "53.2489, -389.901, 4.18795, 0.28", "53.2815, -390.407, 3.94833, 0.14", "53.2819, -391.461, 3.49469, 0.1", "53.2609, -391.833, 3.35431, 0.1", "53.1972, -392.427, 3.18153, 0.1", "53.1071, -393.041, 3.07449, 0.1", "53.0314, -393.425, 3.02528, 0.14", "52.896, -394.034, 2.93927, 0.1", "52.7562, -394.635, 2.86451, 0.1", "52.6086, -395.238, 2.75715, 0.14", "52.4483, -395.823, 2.62135, 0.14", "52.3303, -396.19, 2.52232, 0.28", "51.9923, -397.105, 2.165, 0.42", "51.9923, -397.105, 2.165, 0.56", "51.766, -397.622, 1.90082, 0.56", "51.6163, -397.952, 1.73493, 0.42", "51.3221, -398.619, 1.42543, 0.28", "50.9119, -399.548, 1.06775, 0.42", "50.6735, -400.099, 0.914136, 0.28", "50.4514, -400.661, 0.730815, 0.14", "50.3342, -401.02, 0.604835, 0.1", "50.2665, -401.279, 0.515453, 0.14", "50.1524, -401.861, 0.327412, 0.7", "50.0454, -402.454, 0.171078, 0.56", "49.8173, -403.571, -0.139387, 0.42", "49.6959, -404.098, -0.285083, 0.28", "49.5551, -404.613, -0.457109, 0.14", "49.4732, -404.866, -0.549441, 0.28", "49.2796, -405.421, -0.753634, 0.28", "49.0531, -405.97, -0.942995, 0.14", "48.892, -406.32, -1.04168, 0.1", "48.324, -407.42, -1.35337, 0.1", "48.1433, -407.763, -1.44464, 0.1", "47.8762, -408.306, -1.57608, 0.1", "47.7187, -408.669, -1.65473, 0.1", "47.4914, -409.247, -1.75869, 0.1", "47.2734, -409.827, -1.82454, 0.1", "47.0691, -410.414, -1.82454, 0.14", "46.9822, -410.682, -1.82454, 0.28", "46.9822, -410.682, -1.82454, 0.84", "46.9822, -410.682, -1.82454, 0.84", "46.8963, -411.071, -1.82454, 0.28", "46.784, -411.692, -1.82454, 0.14", "46.6751, -412.302, -1.82454, 0.1", "46.5506, -412.921, -1.82454, 0.14", "46.4189, -413.527, -1.82454, 0.1", "46.3542, -413.801, -1.82454, 0.1", "46.1912, -414.411, -1.82454, 0.14", "46.0065, -415.003, -1.82454, 0.28", "45.7337, -415.747, -1.82454, 0.14", "45.5804, -416.115, -1.82454, 0.1", "45.4173, -416.478, -1.82454, 0.1", "45.0796, -417.19, -1.82454, 0.1", "44.9061, -417.553, -1.82454, 0.1", "44.5798, -418.27, -1.82454, 0.1", "44.4292, -418.639, -1.82454, 0.1", "44.2088, -419.22, -1.82454, 0.1", "44.0793, -419.597, -1.82454, 0.1", "43.8924, -420.188, -1.82454, 0.1", "43.7143, -420.794, -1.82454, 0.1", "43.5521, -421.392, -1.82454, 0.1", "43.4509, -421.782, -1.82454, 0.1", "43.2969, -422.393, -1.82454, 0.1", "43.2083, -422.772, -1.82454, 0.1", "43.0717, -423.389, -1.82454, 0.1", "42.9462, -423.996, -1.82454, 0.14", "42.8281, -424.614, -1.87034, 0.1", "42.7465, -425.224, -1.94648, 0.1", "42.7166, -425.501, -1.98777, 0.1", "42.6551, -426.122, -2.08806, 0.1", "42.5954, -426.73, -2.19042, 0.1", "42.4738, -427.89, -2.38815, 0.1", "42.2157, -430.156, -2.76447, 0.1", "42.1279, -430.761, -2.86079, 0.1", "42.0521, -431.153, -2.9174, 0.1", "41.8982, -431.749, -2.98954, 0.1", "41.7641, -432.123, -3.0187, 0.14", "41.4809, -432.686, -3.05746, 0.14", "41.1571, -433.137, -3.13368, 0.28", "40.778, -433.622, -3.2323, 0.14", "40.3811, -434.097, -3.34806, 0.1", "39.9696, -434.544, -3.48404, 0.1", "39.2483, -435.293, -3.76372, 0.1", "39.0592, -435.48, -3.85499, 0.1" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-33.143, 87.4586, -11.5317, 0.14", "-33.7817, 87.9717, -10.685, 0.14", "-34.085, 88.2091, -10.1955, 0.1", "-34.2856, 88.3705, -9.88526, 0.14", "-34.6113, 88.6428, -9.42945, 0.28", "-35.2049, 89.1568, -8.69322, 0.14", "-36.3836, 90.211, -7.40557, 0.1", "-36.3836, 90.211, -7.40557, 0.14", "-36.7511, 90.5455, -7.03006, 0.28", "-37.1504, 90.9098, -6.72047, 0.14", "-37.62, 91.3085, -6.58984, 0.1", "-38.0743, 91.6233, -6.8928, 0.1", "-38.3064, 91.7465, -7.19208, 0.1", "-38.5872, 91.8485, -7.73866, 0.14", "-39.0378, 91.9474, -8.6695, 0.1", "-39.5247, 91.9875, -9.70653, 0.1", "-40.3275, 91.9707, -11.5598, 0.1", "-40.6922, 91.9304, -12.5317, 0.1", "-41.2489, 91.8414, -14.4694, 0.1", "-41.4382, 91.8327, -16.5385, 0.1", "-41.8256, 91.6514, -15.5488, 0.1", "-42.9506, 91.1737, -13.8726, 0.14", "-43.1101, 91.1075, -13.6536, 0.28", "-43.4573, 90.9763, -13.1549, 0.84", "-43.7625, 90.8786, -12.6917, 0.7", "-44.2603, 90.851, -12.4357, 0.56", "-45.2117, 91.2165, -12.6368, 0.42", "-45.4227, 91.353, -12.764, 0.28", "-45.8512, 91.7397, -12.998, 0.1", "-46.1892, 92.1783, -13.1011, 0.1", "-46.4998, 92.7087, -13.0003, 0.1", "-46.721, 93.1488, -12.7328, 0.1", "-47.0807, 93.8038, -12.0683, 0.14", "-47.5319, 94.4899, -11.2185, 0.56", "-47.9645, 95.0593, -10.3226, 0.42", "-48.424, 95.5613, -9.40418, 0.28", "-48.8771, 95.9742, -8.56635, 0.42", "-49.4521, 96.3955, -7.62254, 0.56", "-49.8809, 96.6468, -7.01142, 0.42", "-50.5971, 96.9586, -6.27084, 0.56", "-51.1083, 97.1006, -5.94678, 0.7", "-51.7055, 97.1909, -5.76878, 0.84", "-52.2649, 97.2225, -5.7813, 0.7", "-52.8104, 97.2066, -5.92032, 0.84", "-53.7804, 97.0968, -6.37065, 0.7", "-54.2588, 97.0187, -6.65733, 0.56", "-54.701, 96.918, -6.98665, 0.42", "-55.5735, 96.6966, -7.69865, 0.28", "-55.9866, 96.5867, -8.06111, 0.14", "-56.8102, 96.348, -8.8168, 0.1", "-57.2153, 96.2109, -9.17906, 0.1", "-57.9448, 95.954, -9.92769, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-33.143, 87.4586, -11.5317, 0.1", "-32.4049, 87.563, -9.65457, 0.1", "-31.9296, 87.6187, -8.61286, 0.1", "-31.4535, 87.6577, -7.69035, 0.1", "-30.3982, 87.6792, -5.87859, 0.1", "-30.0976, 87.6694, -5.41712, 0.1", "-29.9288, 87.6534, -5.19225, 0.1", "-29.4527, 87.5592, -4.78826, 0.1", "-29.1211, 87.4596, -4.60988, 0.28", "-28.5484, 87.2353, -4.47495, 0.14", "-28.2005, 87.0602, -4.47495, 0.1", "-27.514, 86.647, -4.47495, 0.1", "-27.514, 86.647, -4.47495, 0.14", "-27.514, 86.647, -4.47495, 0.28", "-27.1955, 86.4227, -4.47495, 0.14", "-26.6647, 86.0839, -4.47495, 0.1", "-26.3285, 85.8909, -4.51198, 0.1", "-25.7686, 85.6211, -4.61352, 0.1", "-25.2176, 85.3898, -4.78493, 0.1", "-24.6561, 85.1702, -4.96662, 0.1", "-24.1532, 84.981, -5.09984, 0.1", "-23.0597, 84.5529, -5.24029, 0.1", "-22.5542, 84.3133, -5.20526, 0.1", "-21.6563, 83.7941, -4.92964, 0.1", "-20.8894, 83.2262, -4.51909, 0.1", "-20.063, 82.5305, -4.04009, 0.1", "-19.3052, 81.7953, -3.59364, 0.1", "-18.8979, 81.3713, -3.38767, 0.1", "-18.6326, 81.0939, -3.28184, 0.1", "-18.1795, 80.6808, -3.17176, 0.1", "-17.3016, 80.058, -3.16513, 0.1", "-16.7477, 79.7784, -3.2203, 0.1", "-15.7107, 79.4888, -3.16409, 0.1", "-14.7239, 79.3619, -2.86492, 0.1", "-14.2105, 79.326, -2.63621, 0.1", "-13.2003, 79.2895, -2.10552, 0.1", "-12.7103, 79.2725, -1.82849, 0.1", "-11.706, 79.2295, -1.27742, 0.1", "-11.0091, 79.1699, -0.9151, 0.1", "-10.6445, 79.1179, -0.751271, 0.1", "-10.0727, 79.0149, -0.508453, 0.1", "-9.49549, 78.8953, -0.310783, 0.1", "-9.12222, 78.8225, -0.192613, 0.14", "-8.74821, 78.7698, -0.0974972, 0.28", "-7.74764, 78.6923, 0.1711, 0.28", "-7.20742, 78.6707, 0.318757, 0.14", "-6.59957, 78.6693, 0.483114, 0.1", "-6.05487, 78.6938, 0.612799, 0.1", "-5.51208, 78.7449, 0.709037, 0.1", "-5.11432, 78.7977, 0.747524, 0.14", "-5.11432, 78.7977, 0.747524, 0.28", "-4.83437, 78.8284, 0.747524, 0.28", "-4.27752, 78.8917, 0.747524, 0.28", "-3.71637, 78.9398, 0.747524, 0.14", "-3.16747, 78.9858, 0.747524, 0.1", "-2.54049, 79.044, 0.747524, 0.1", "-1.911, 79.0944, 0.747524, 0.1", "-1.3582, 79.1248, 0.747524, 0.1", "-0.726784, 79.1349, 0.747524, 0.14" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "41.8971, -250.306, -4.25314, 0.84", "41.7973, -251.208, -3.68043, 0.84", "41.7096, -252.22, -3.14535, 0.84", "41.6995, -252.798, -2.89198, 0.98", "41.7238, -253.381, -2.68302, 0.84", "41.764, -253.764, -2.56491, 0.7", "41.8402, -254.302, -2.4146, 0.7", "41.8999, -254.567, -2.40676, 0.56", "42.0767, -255.149, -2.57181, 0.56", "42.2321, -255.531, -2.93739, 0.7", "42.3442, -255.775, -3.23779, 0.84", "42.3442, -255.775, -3.23779, 0.98", "42.6305, -256.414, -4.00516, 1.12", "42.9045, -257.081, -4.74841, 0.98", "43.3669, -258.387, -6.29755, 0.84", "43.5121, -259.217, -5.69018, 0.84", "43.6082, -260.142, -5.0207, 0.7", "43.6828, -261.073, -4.35611, 0.56", "43.6975, -261.297, -4.18527, 0.42", "43.7428, -262.126, -3.50588, 0.1", "43.765, -262.622, -3.1176, 0.14", "43.7927, -263.204, -2.87461, 0.28", "43.8267, -263.753, -2.86123, 0.42", "43.8534, -264.022, -2.94045, 0.56", "43.8912, -264.275, -3.05977, 0.84", "44.0845, -265.19, -3.72168, 0.84", "44.1933, -265.61, -4.08165, 0.84", "44.3988, -266.324, -4.75039, 0.84", "44.4542, -266.517, -4.94798, 0.84", "44.5616, -266.891, -5.35108, 0.84", "44.78, -267.654, -6.1722, 0.7", "44.8381, -267.856, -6.35888, 0.56", "45.0789, -268.702, -7.0947, 0.56", "45.1757, -269.145, -7.41245, 0.7", "45.2536, -269.596, -7.73591, 0.84", "45.2536, -269.596, -7.73591, 0.84", "45.296, -269.846, -7.85707, 0.98", "45.3807, -270.331, -8.12516, 1.12", "45.5549, -271.354, -8.68195, 0.98", "45.6405, -271.846, -8.94287, 0.84", "45.7278, -272.337, -9.1978, 0.84", "45.8151, -272.828, -9.46, 0.7", "45.9744, -273.719, -9.96737, 0.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "41.8971, -250.306, -4.25314, 1.26", "42.1822, -250.405, -4.51304, 1.26", "43.0284, -250.697, -5.28427, 1.4", "43.3074, -250.794, -5.53846, 1.26", "44.1543, -251.087, -6.31033, 1.12", "44.4332, -251.183, -6.56452, 0.7", "44.7183, -251.282, -6.82442, 0.84" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "39.0592, -435.48, -3.85499, 0.1", "38.5313, -434.598, -3.2725, 0.1", "37.9885, -433.63, -2.86596, 0.1", "37.7343, -433.176, -2.67556, 0.1", "37.4448, -432.66, -2.45878, 0.1", "37.1918, -432.209, -2.26934, 0.1", "36.9332, -431.747, -2.07564, 0.1", "36.479, -430.814, -2.0386, 0.1" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "39.0592, -435.48, -3.85499, 0.1", "38.8683, -436.031, -4.09523, 0.1", "38.682, -436.597, -4.29833, 0.1", "38.3774, -437.584, -4.58793, 0.1", "38.1834, -438.168, -4.73256, 0.1", "37.9885, -438.744, -4.85314, 0.1", "37.8675, -439.111, -4.94793, 0.1", "37.6895, -439.685, -5.10607, 0.1", "37.5077, -440.268, -5.26001, 0.1", "37.3317, -440.852, -5.38763, 0.1", "37.155, -441.45, -5.48573, 0.1", "36.8654, -442.442, -5.59362, 0.1", "36.7612, -442.817, -5.6116, 0.1", "36.5927, -443.423, -5.55218, 0.1", "36.4218, -444.013, -5.41406, 0.1", "36.1121, -445.091, -5.05672, 0.14", "36.0072, -445.447, -4.91107, 0.28", "35.8547, -445.994, -4.65895, 0.14", "35.6168, -446.952, -4.22934, 0.1", "35.4268, -447.669, -3.96345, 0.1", "35.2775, -448.261, -3.80507, 0.1", "35.2204, -448.533, -3.75862, 0.14", "35.1293, -449.076, -3.69803, 0.28", "35.0886, -449.351, -3.67535, 0.42", "34.8798, -451.014, -3.57906, 0.83", "34.6825, -453.18, -3.43042, 0.28", "34.5965, -454.579, -3.32803, 0.55", "34.4053, -458.166, -3.03375, 0.55", "34.3488, -459.652, -2.88746, 0.28", "34.3352, -461.059, -2.73634, 0.55", "34.3812, -463.062, -2.55248, 0.28", "34.4591, -464.44, -2.45642, 0.55", "34.5622, -465.657, -2.40508, 0.28", "34.7767, -467.448, -2.37303, 0.55", "35.0468, -469.649, -2.35715, 0.55", "35.2495, -471.627, -2.36299, 0.28", "35.4772, -473.855, -2.4133, 0.55", "35.6715, -475.882, -2.47626, 0.28", "35.8617, -478.111, -2.56598, 0.55", "35.9155, -479.258, -2.61487, 0.28", "35.8654, -481.728, -2.66464, 0.55", "35.7137, -483.256, -2.62731, 0.28", "35.4723, -484.609, -2.62373, 0.55", "35.1637, -485.749, -2.6322, 0.28", "34.8668, -486.71, -2.65538, 0.55", "34.4204, -488.062, -2.7088, 0.28", "33.2918, -491.126, -2.83219, 0.55", "31.7797, -494.88, -2.97121, 0.55", "30.9732, -496.975, -3.06864, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "45.9744, -273.719, -9.96737, 0.7", "45.7452, -274.299, -9.96737, 0.7", "45.612, -274.674, -9.96737, 0.84", "45.3977, -275.432, -9.96737, 0.7", "45.3127, -275.809, -10.0128, 0.56", "45.216, -276.352, -10.1153, 0.7", "45.1822, -276.625, -10.1765, 0.56", "45.1835, -277.009, -10.2813, 0.56", "45.2375, -277.526, -10.491, 0.56", "45.4043, -278.438, -10.9596, 0.7", "45.4508, -278.676, -11.0764, 0.84", "45.5353, -279.186, -11.2988, 0.7", "45.6139, -279.712, -11.4779, 0.56", "45.7487, -280.824, -11.7248, 0.42", "45.7487, -280.824, -11.7248, 0.56", "45.8205, -281.898, -11.6903, 0.56", "45.8431, -282.512, -11.5967, 0.7", "45.8425, -283.055, -11.4597, 0.56", "45.8367, -283.655, -11.2681, 0.7", "45.8277, -284.174, -11.0834, 0.84", "45.8176, -284.713, -10.9214, 0.84", "45.8129, -285.762, -10.68, 0.84", "45.8172, -286.369, -10.5442, 0.7", "45.8266, -286.921, -10.4316, 0.56", "45.8543, -287.543, -10.3252, 0.56", "45.8963, -288.156, -10.2484, 0.56", "45.9553, -288.712, -10.211, 0.56", "46.043, -289.267, -10.1724, 0.7", "46.1394, -289.808, -10.0622, 0.84", "46.2387, -290.333, -9.89377, 0.7", "46.3342, -290.837, -9.68429, 0.56", "46.4243, -291.335, -9.44365, 0.56", "46.5649, -292.347, -8.92178, 0.42", "46.668, -293.299, -8.42837, 0.56", "46.7033, -293.801, -8.1829, 0.7", "46.7132, -294.16, -8.03093, 0.56", "46.7051, -294.692, -7.85741, 0.42", "46.6701, -295.308, -7.72988, 0.56", "46.621, -295.857, -7.73362, 0.7", "46.5539, -296.477, -7.81483, 0.56", "46.4693, -297.084, -7.9197, 0.56", "46.3802, -297.695, -8.04378, 0.56", "46.3191, -298.079, -8.13217, 0.7", "46.1429, -299.222, -8.35373, 0.56", "46.0589, -299.84, -8.44115, 0.7", "46.0245, -300.46, -8.43401, 0.56", "46.0393, -300.736, -8.37789, 0.7", "46.0886, -300.995, -8.27985, 0.7", "46.3773, -301.889, -7.83793, 0.56", "46.5699, -302.348, -7.57384, 0.56", "47.0459, -303.322, -7.1136, 0.42", "47.293, -303.799, -6.95295, 0.56", "47.576, -304.351, -6.84337, 0.56", "47.836, -304.916, -6.81299, 0.56", "48.0374, -305.439, -6.86922, 0.42", "48.337, -306.525, -7.07958, 0.56", "48.417, -307.068, -7.19176, 0.42", "48.4206, -307.339, -7.22069, 0.56", "48.3581, -307.965, -7.21896, 0.56", "48.3, -308.349, -7.17921, 0.7", "48.2013, -308.96, -7.05795, 0.56", "48.0494, -309.984, -6.76339, 0.56", "47.989, -310.578, -6.59674, 0.42", "47.9771, -311.122, -6.45958, 0.28", "48.0229, -311.671, -6.34405, 0.28", "48.0658, -311.943, -6.30247, 0.42", "48.1262, -312.218, -6.28046, 0.56", "48.269, -312.76, -6.28046, 0.56", "48.4216, -313.292, -6.28046, 0.56", "48.5765, -313.83, -6.28046, 0.56", "48.7322, -314.372, -6.28046, 0.7", "48.887, -314.91, -6.28046, 0.56", "49.0425, -315.452, -6.28046, 0.56", "49.2039, -315.977, -6.31704, 0.7", "49.3665, -316.512, -6.38679, 0.7", "49.5121, -317.035, -6.52589, 0.7", "49.6412, -317.545, -6.71943, 0.56", "49.7581, -318.045, -6.94959, 0.56", "49.9633, -318.985, -7.42438, 0.56", "50.0378, -319.343, -7.5841, 0.84", "50.2582, -320.428, -7.98097, 0.84", "50.3633, -320.957, -8.13168, 0.7", "50.4721, -321.503, -8.22145, 0.7", "50.5861, -322.051, -8.23179, 0.7", "50.833, -323.164, -8.09645, 0.84", "50.9712, -323.689, -8.00177, 0.7", "50.9712, -323.689, -8.00177, 0.84", "51.1217, -324.214, -7.87788, 0.56", "51.2869, -324.743, -7.77991, 0.56", "51.4648, -325.272, -7.72572, 0.42", "51.6677, -325.798, -7.72572, 0.56", "51.6677, -325.798, -7.72572, 0.56", "51.7812, -326.051, -7.70185, 0.56", "52.045, -326.613, -7.59801, 0.56", "52.2787, -327.107, -7.47288, 0.56", "52.5189, -327.667, -7.31172, 0.56", "52.616, -327.917, -7.23616, 0.7", "52.9652, -328.851, -6.95576, 0.7", "53.1556, -329.357, -6.80756, 0.56", "53.3534, -329.865, -6.66494, 0.42", "53.6069, -330.427, -6.52865, 0.28", "53.7297, -330.676, -6.48315, 0.14", "53.9126, -331.028, -6.44661, 0.7", "54.1933, -331.584, -6.44661, 0.7", "54.3569, -331.947, -6.44661, 0.56", "54.5693, -332.533, -6.44661, 0.42", "54.6356, -332.807, -6.44661, 0.56", "54.6713, -333.203, -6.44661, 0.84", "54.6446, -333.822, -6.38861, 0.7", "54.5731, -334.44, -6.29182, 0.7", "54.5161, -334.831, -6.21506, 0.7", "54.4403, -335.432, -6.07986, 0.56", "54.4007, -336.044, -5.93215, 0.7", "54.4299, -337.184, -5.64049, 0.84", "54.4911, -337.722, -5.49657, 0.7", "54.5455, -337.989, -5.42569, 0.56", "54.7291, -338.568, -5.2878, 0.42", "54.9589, -339.073, -5.19371, 0.28", "55.1639, -339.415, -5.19299, 0.28", "55.3269, -339.636, -5.23919, 1.12", "55.4966, -339.857, -5.27989, 0.7", "55.8666, -340.353, -5.35091, 0.56", "56.2095, -340.879, -5.40196, 0.42", "56.7341, -341.814, -5.44506, 0.28", "56.8999, -342.176, -5.44498, 0.42", "57.2627, -343.189, -5.40698, 0.56", "57.4092, -343.729, -5.37032, 0.56", "57.5268, -344.337, -5.36353, 0.42", "57.5943, -344.893, -5.33308, 0.42", "57.6314, -345.453, -5.28186, 0.28", "57.6462, -346.083, -5.25474, 0.28", "57.6585, -346.646, -5.26592, 0.28", "57.6727, -347.682, -5.27165, 0.42", "57.701, -348.758, -5.26199, 0.42", "57.7108, -349.387, -5.24743, 0.28", "57.7263, -350.008, -5.22483, 0.42", "57.7455, -350.57, -5.19771, 0.28", "57.7694, -351.129, -5.16519, 0.42", "57.8051, -351.687, -5.12692, 0.56", "57.8538, -352.305, -5.12692, 0.56", "57.9041, -352.864, -5.12692, 0.42", "57.9526, -353.491, -5.12692, 0.28", "57.9845, -354.041, -5.12692, 0.28", "58.0004, -354.322, -5.12692, 0.14", "58.0291, -354.72, -5.12692, 0.56", "58.0883, -355.277, -5.12692, 0.42", "58.1688, -355.892, -5.12692, 0.56", "58.2494, -356.446, -5.12692, 0.56", "58.3219, -357.005, -5.12692, 0.42", "58.3941, -357.561, -5.12692, 0.28", "58.4719, -358.117, -5.16395, 0.14", "58.5458, -358.668, -5.23186, 0.1", "58.6294, -359.279, -5.30094, 0.14", "58.7079, -359.902, -5.36072, 0.1", "58.7762, -360.448, -5.39936, 0.1", "58.9189, -361.476, -5.43894, 0.1", "58.9189, -361.476, -5.43894, 0.14", "59.1333, -362.492, -5.40022, 0.1", "59.2751, -363.033, -5.36068, 0.14", "59.4301, -363.571, -5.30681, 0.1", "59.5838, -364.107, -5.2438, 0.14", "59.7378, -364.644, -5.1726, 0.28", "59.8795, -365.174, -5.13276, 0.42", "60.0049, -365.723, -5.13276, 0.28", "60.1003, -366.276, -5.13276, 0.28", "60.1585, -366.833, -5.13276, 0.42", "60.1729, -367.114, -5.13276, 0.56", "60.1742, -367.504, -5.13276, 0.42", "60.1395, -368.134, -5.13276, 0.28", "60.0814, -368.761, -5.13276, 0.14", "60.0134, -369.379, -5.13276, 0.1", "59.9848, -369.658, -5.10789, 0.14", "59.9848, -369.658, -5.10789, 0.28", "59.994, -370.044, -5.00891, 0.56", "60.0312, -370.566, -4.83777, 0.56", "60.063, -370.825, -4.73033, 0.7", "60.2167, -371.742, -4.2673, 0.56", "60.3042, -372.224, -3.99608, 0.42", "60.3541, -372.461, -3.85092, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "45.9744, -273.719, -9.96737, 2.38", "46.2288, -273.785, -10.0691, 2.38", "46.7781, -273.959, -10.3232, 2.24", "47.3042, -274.191, -10.5836, 2.1", "47.7976, -274.481, -10.8215, 1.96", "48.5753, -275.07, -11.1797, 1.82", "48.5753, -275.07, -11.1797, 1.68", "48.7423, -275.262, -11.2941, 0.1", "49.0367, -275.685, -11.5199, 0.1", "49.3425, -276.179, -11.7454, 0.1", "49.6237, -276.634, -11.9208, 0.1", "50.2611, -277.582, -12.2112, 0.1", "50.6187, -278.07, -12.3579, 0.1", "50.9634, -278.498, -12.4807, 0.1", "51.3708, -278.954, -12.6015, 0.1", "51.6445, -279.237, -12.6608, 0.14", "51.9252, -279.505, -12.693, 0.28", "52.2199, -279.778, -12.7265, 0.7", "52.6726, -280.196, -12.8185, 0.56", "52.9474, -280.462, -12.9282, 0.42", "53.3345, -280.865, -13.2032, 0.28", "53.6878, -281.259, -13.545, 0.14", "54.3086, -282.0, -14.2187, 0.1", "54.4468, -282.181, -14.3846, 0.14", "54.9833, -282.924, -15.0727, 0.1", "55.4636, -283.633, -15.725, 0.14", "55.4636, -283.633, -15.725, 0.28", "55.9337, -284.394, -16.2526, 0.28", "56.2021, -284.846, -16.4469, 0.42", "56.4052, -285.171, -16.5562, 0.56", "56.4052, -285.171, -16.5562, 0.7", "56.5461, -285.387, -16.6626, 0.84", "56.8639, -285.85, -16.9477, 0.7", "57.4505, -286.644, -17.5297, 0.56", "57.7752, -287.055, -17.88, 0.42", "58.4123, -287.788, -18.5472, 0.28", "58.5747, -287.958, -18.7016, 0.42", "58.8081, -288.177, -18.9237, 0.7", "59.0659, -288.39, -19.1482, 0.56", "59.8865, -288.989, -19.7451, 0.42", "60.3476, -289.299, -20.0418, 0.28", "60.8288, -289.602, -20.2961, 0.14", "61.6756, -290.129, -20.6997, 0.28", "62.3145, -290.519, -20.9604, 0.42", "62.6424, -290.72, -21.0642, 0.28", "63.3054, -291.125, -21.1958, 0.14", "63.6476, -291.332, -21.2464, 0.28", "64.183, -291.65, -21.2465, 0.42", "64.7061, -291.973, -21.1686, 0.28", "65.2292, -292.307, -21.0598, 0.14", "65.5537, -292.516, -20.9807, 0.28", "66.0683, -292.851, -20.8414, 0.14", "67.0405, -293.462, -20.5767, 0.14", "67.571, -293.772, -20.4388, 0.1", "67.9031, -293.959, -20.3593, 0.1", "68.5969, -294.335, -20.2197, 0.1", "68.937, -294.518, -20.168, 0.14", "69.4926, -294.814, -20.1221, 0.1", "70.0452, -295.095, -20.1221, 0.14", "70.3986, -295.279, -20.1221, 0.28", "70.9403, -295.586, -20.1221, 0.14", "71.2793, -295.795, -20.1221, 0.1", "71.9326, -296.24, -20.0647, 0.14", "72.246, -296.48, -20.0123, 0.14", "72.7214, -296.868, -19.9034, 0.28", "73.193, -297.265, -19.7755, 0.14", "73.4831, -297.518, -19.6885, 0.1", "74.3519, -298.274, -19.4233, 0.14", "74.8012, -298.667, -19.2454, 0.28", "75.0821, -298.919, -19.1196, 0.14", "75.5086, -299.302, -18.8757, 0.1", "75.9251, -299.681, -18.6091, 0.1", "76.3285, -300.058, -18.3027, 0.1", "77.0652, -300.761, -17.7099, 0.14", "77.4075, -301.09, -17.407, 0.28", "78.0497, -301.72, -16.822, 0.28", "78.4268, -302.095, -16.4846, 0.14", "79.1436, -302.813, -15.8857, 0.1", "79.5339, -303.212, -15.6096, 0.1", "79.8015, -303.477, -15.4794, 0.14", "80.24, -303.892, -15.3259, 0.28", "80.6986, -304.325, -15.2369, 0.14", "80.9781, -304.594, -15.2046, 0.1", "81.4268, -305.036, -15.2046, 0.1", "81.8512, -305.49, -15.162, 0.1", "82.0963, -305.798, -15.1022, 0.1", "82.0963, -305.798, -15.1022, 0.14", "82.3223, -306.283, -14.9347, 0.84", "82.3223, -306.283, -14.9347, 0.7", "82.5781, -307.263, -14.5718, 0.1", "82.6873, -307.775, -14.399, 0.1", "82.7957, -308.307, -14.2492, 0.1", "82.9287, -308.838, -14.132, 0.1", "83.0125, -309.104, -14.0894, 0.1", "83.1167, -309.364, -14.0665, 0.56", "83.3706, -309.864, -14.0665, 0.42", "83.653, -310.348, -14.0665, 0.28", "83.9909, -310.879, -14.0665, 0.28", "84.2045, -311.205, -14.0665, 0.56", "84.5443, -311.735, -14.0665, 0.42", "84.7542, -312.063, -14.0665, 0.28", "84.9036, -312.302, -14.0665, 0.56", "85.1884, -312.788, -14.0665, 0.42", "85.4547, -313.281, -14.0665, 0.28", "85.7155, -313.777, -14.0665, 0.42", "86.0033, -314.337, -14.0665, 0.56", "86.135, -314.583, -14.0665, 0.7", "86.2795, -314.825, -14.0665, 0.84", "86.6312, -315.347, -14.0665, 0.7", "87.0137, -315.839, -14.0665, 0.56", "87.366, -316.275, -14.0665, 0.42", "87.7559, -316.769, -14.0665, 0.28", "87.9913, -317.079, -14.0665, 0.14", "88.3533, -317.595, -14.0665, 0.1", "88.7676, -318.262, -14.1264, 0.1", "88.9578, -318.607, -14.1824, 0.84", "89.2006, -319.101, -14.2912, 0.7", "89.4138, -319.592, -14.4664, 0.56", "89.6013, -320.074, -14.6818, 0.42", "89.9687, -321.037, -15.1724, 0.28", "90.0591, -321.272, -15.2977, 0.42", "90.1659, -321.51, -15.405, 0.56", "90.6562, -322.521, -15.7585, 0.42", "90.9052, -323.015, -15.866, 0.28", "91.1858, -323.569, -15.9047, 0.14", "91.4441, -324.066, -15.8684, 0.1", "91.9862, -325.107, -15.7344, 0.1", "92.2355, -325.6, -15.6416, 0.1", "92.4705, -326.096, -15.5151, 0.1", "92.6965, -326.597, -15.4049, 0.1", "92.8544, -326.958, -15.3458, 0.1", "92.9664, -327.215, -15.3228, 0.56", "93.17, -327.737, -15.3228, 0.42", "93.3635, -328.263, -15.3228, 0.28", "93.5433, -328.787, -15.3228, 0.14", "93.7436, -329.377, -15.3228, 0.1", "93.9299, -329.908, -15.3228, 0.1", "94.1512, -330.5, -15.3228, 0.14", "94.3677, -331.018, -15.3631, 0.1", "94.4819, -331.27, -15.4005, 0.1", "94.7477, -331.828, -15.5188, 0.1", "95.0121, -332.374, -15.6604, 0.1", "95.2681, -332.853, -15.7994, 0.1", "95.7813, -333.76, -16.0698, 0.1", "95.9194, -334.001, -16.1162, 0.56", "96.1998, -334.484, -16.1558, 0.42", "96.4705, -334.967, -16.1441, 0.28", "96.7808, -335.512, -16.0785, 0.42", "97.0629, -335.975, -15.9831, 0.28", "97.6839, -336.944, -15.7138, 0.14", "98.0389, -337.446, -15.574, 0.1", "98.3805, -337.866, -15.4609, 0.1", "98.8032, -338.328, -15.3896, 0.1", "99.0802, -338.615, -15.3867, 0.42", "99.5162, -339.055, -15.4513, 0.28", "99.7919, -339.337, -15.5074, 0.14", "100.329, -339.913, -15.5274, 0.1", "101.027, -340.706, -15.3286, 0.1", "101.348, -341.113, -15.1346, 0.14", "101.644, -341.514, -14.8792, 0.28", "102.204, -342.295, -14.1904, 0.28", "102.712, -343.011, -13.4535, 0.14", "103.218, -343.717, -12.6576, 0.1", "103.343, -343.878, -12.4636, 0.14", "103.527, -344.096, -12.1856, 0.28", "104.027, -344.669, -11.4256, 0.7", "104.309, -345.011, -10.9784, 0.56", "104.579, -345.362, -10.5404, 0.42", "104.744, -345.594, -10.2615, 0.56", "105.166, -346.202, -9.53361, 0.1", "105.597, -346.871, -8.70662, 0.1", "106.003, -347.563, -7.88815, 0.1", "106.195, -347.9, -7.49295, 0.1", "106.332, -348.153, -7.22278, 0.14", "106.484, -348.43, -6.98051, 0.28", "106.945, -349.222, -6.49168, 0.28", "107.198, -349.666, -6.26227, 0.14", "107.471, -350.181, -6.02428, 0.1", "107.68, -350.633, -5.76698, 0.1", "107.879, -351.14, -5.4645, 0.14", "107.959, -351.373, -5.32702, 0.28", "108.228, -352.28, -4.8221, 0.1", "108.35, -352.767, -4.57199, 0.1", "108.559, -353.816, -4.15554, 0.1", "108.648, -354.329, -3.94805, 0.1", "108.684, -354.591, -3.85214, 0.1", "108.739, -354.969, -3.77447, 0.1", "108.922, -356.065, -4.05622, 0.1", "109.03, -356.893, -4.67404, 0.1" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "60.3541, -372.461, -3.85092, 0.28", "61.3499, -372.444, -3.55551, 0.28", "61.9459, -372.435, -3.37872, 0.14", "62.4858, -372.426, -3.21858, 0.1", "63.0911, -372.416, -3.039, 0.1", "63.3611, -372.412, -2.95893, 0.1" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "60.3541, -372.461, -3.85092, 0.42", "60.4175, -372.985, -3.66329, 0.42", "60.4478, -373.516, -3.47784, 0.28", "60.4491, -374.048, -3.30216, 0.14", "60.4284, -374.578, -3.14413, 0.1", "60.3554, -375.617, -2.87025, 0.14", "60.2945, -376.228, -2.72437, 0.14", "60.1975, -376.826, -2.59418, 0.28", "60.1154, -377.214, -2.52398, 0.28", "59.9622, -377.802, -2.40131, 0.14", "59.7872, -378.396, -2.27723, 0.1", "59.6769, -378.764, -2.21078, 0.14", "59.5057, -379.357, -2.08447, 0.28", "59.3463, -379.951, -1.94423, 0.28", "59.0443, -381.152, -1.64656, 0.14", "58.9618, -381.521, -1.55355, 0.28", "58.8465, -382.125, -1.41069, 0.42", "58.7714, -382.672, -1.3001, 0.56", "58.7509, -382.947, -1.25823, 0.7", "58.7516, -383.335, -1.22636, 0.56", "58.7973, -383.897, -1.22636, 0.42", "58.8786, -384.523, -1.22636, 0.56", "58.9712, -385.078, -1.22636, 0.42", "59.0733, -385.62, -1.22636, 0.28", "59.192, -386.167, -1.22636, 0.28", "59.3282, -386.714, -1.22636, 0.42", "59.472, -387.256, -1.22636, 0.56", "59.6272, -387.797, -1.22636, 0.56", "59.7814, -388.336, -1.22636, 0.56", "59.9339, -388.868, -1.22636, 0.56", "60.0884, -389.407, -1.22636, 0.56", "60.2429, -389.946, -1.22636, 0.56", "60.3982, -390.487, -1.22636, 0.7", "60.5529, -391.026, -1.22636, 0.56", "60.7083, -391.567, -1.22636, 0.56", "60.86, -392.096, -1.22636, 0.42", "61.0154, -392.638, -1.22636, 0.56", "61.17, -393.176, -1.22636, 0.42", "61.3253, -393.718, -1.22636, 0.56", "61.4797, -394.257, -1.22636, 0.7", "61.6339, -394.795, -1.22636, 0.7", "61.7862, -395.328, -1.22636, 0.56", "61.94, -395.867, -1.22636, 0.7" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "61.94, -395.867, -1.22636, 1.12", "62.4788, -395.713, -1.22636, 1.12", "63.0084, -395.609, -1.38769, 0.98", "63.0084, -395.609, -1.38769, 0.84", "63.4897, -395.554, -1.66938, 0.28", "63.4897, -395.554, -1.66938, 0.28", "63.7443, -395.497, -1.77585, 0.28", "64.8386, -395.192, -2.08513, 0.14", "65.9515, -394.821, -2.22793, 0.1", "66.9479, -394.423, -2.2265, 0.42", "67.5195, -394.166, -2.16551, 0.28", "68.0181, -393.927, -2.07356, 0.14", "69.0338, -393.398, -1.78082, 0.1", "69.487, -393.137, -1.57995, 0.1", "69.9722, -392.842, -1.32407, 0.1", "70.4375, -392.582, -1.14236, 0.1", "70.6716, -392.457, -1.04778, 0.1" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "61.94, -395.867, -1.22636, 0.56", "62.1148, -396.908, -1.01814, 0.56", "62.1806, -397.461, -0.935625, 0.56", "62.2404, -398.015, -0.870871, 0.7", "62.2866, -398.561, -0.819552, 0.56", "62.332, -399.121, -0.776027, 0.56", "62.3867, -399.749, -0.734756, 0.56", "62.4372, -400.366, -0.734756, 0.56", "62.4756, -400.926, -0.734756, 0.56", "62.5074, -401.554, -0.734756, 0.56", "62.5245, -402.105, -0.734756, 0.42", "62.5417, -402.668, -0.734756, 0.28", "62.5708, -403.297, -0.77536, 0.42", "62.6047, -403.856, -0.843541, 0.56", "62.6457, -404.467, -0.948187, 0.56", "62.6913, -405.086, -1.05396, 0.56", "62.727, -405.637, -1.15098, 0.42", "62.7976, -406.657, -1.33674, 0.56", "62.8572, -407.196, -1.42954, 0.7", "62.9086, -407.471, -1.46326, 0.84", "63.2585, -408.563, -1.4806, 0.84", "63.2585, -408.563, -1.4806, 0.84", "63.3807, -408.81, -1.43895, 0.84", "63.6432, -409.299, -1.34574, 0.7", "63.9549, -409.835, -1.28584, 0.7", "64.237, -410.319, -1.26113, 0.56", "64.5478, -410.867, -1.26113, 0.56", "64.8192, -411.357, -1.26113, 0.7", "65.1302, -411.903, -1.29962, 0.56", "65.4312, -412.447, -1.33411, 0.7", "65.6853, -412.947, -1.32131, 0.84", "65.9125, -413.458, -1.2612, 0.7", "66.0903, -413.966, -1.10309, 0.84", "66.3487, -414.879, -0.679469, 0.98", "66.5528, -415.803, -0.167007, 0.84", "66.7122, -416.773, 0.423148, 0.7", "66.7867, -417.295, 0.748801, 0.7", "66.8993, -418.3, 1.2873, 0.56", "66.9486, -418.817, 1.50513, 0.7", "66.9881, -419.355, 1.65886, 0.84", "67.0196, -419.743, 1.67624, 0.56", "67.0539, -420.305, 1.6609, 0.56", "67.1246, -421.485, 1.622, 0.56", "67.1553, -422.034, 1.63658, 0.7", "67.2221, -422.654, 1.728, 0.56", "67.2915, -423.199, 1.84052, 0.56", "67.461, -424.33, 2.11438, 0.56", "67.5407, -424.865, 2.26146, 0.56", "67.6989, -425.953, 2.59011, 0.7", "68.0076, -428.36, 3.25743, 0.56", "68.0821, -428.968, 3.40384, 0.7", "68.1372, -429.516, 3.50584, 0.7", "68.1661, -429.902, 3.54693, 0.56", "68.1913, -430.53, 3.58822, 0.42", "68.196, -431.152, 3.58822, 0.28", "68.1774, -431.713, 3.62552, 0.42", "68.1794, -432.34, 3.704, 0.56", "68.2044, -432.95, 3.80894, 0.7", "68.2575, -433.497, 3.92136, 0.56", "68.3458, -434.035, 4.0494, 0.7", "68.5646, -435.018, 4.30677, 0.84", "68.6977, -435.555, 4.41107, 0.7", "68.8512, -436.091, 4.46737, 0.56", "69.0107, -436.618, 4.46749, 0.42", "69.1234, -437.003, 4.42709, 0.56", "69.1961, -437.26, 4.37545, 0.7", "69.4737, -438.366, 4.05927, 0.56", "69.579, -438.898, 3.90982, 0.56", "69.6617, -439.436, 3.77348, 0.56", "69.7148, -439.984, 3.65631, 0.56", "69.7301, -440.249, 3.61466, 0.56", "69.7428, -440.642, 3.54683, 0.98", "69.7584, -441.264, 3.44963, 0.84", "69.7602, -441.791, 3.29058, 0.84", "69.7623, -442.158, 3.13657, 0.28", "69.7771, -442.66, 2.88832, 0.28", "69.8379, -443.69, 2.3217, 0.28", "69.885, -444.166, 2.02949, 0.28", "70.0251, -445.048, 1.5795, 0.42", "70.1251, -445.578, 1.41847, 0.84", "70.2243, -446.123, 1.33269, 0.84", "70.2243, -446.123, 1.33269, 0.7", "70.2243, -446.123, 1.33269, 0.84", "70.5716, -448.562, 1.25672, 0.55", "70.9141, -451.045, 1.24813, 0.83", "71.2807, -453.851, 1.23807, 0.83", "71.3571, -454.464, 1.23581, 0.83" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "71.3571, -454.464, 1.23581, 0.55", "70.2046, -456.83, 1.48363, 0.55", "69.1976, -458.814, 1.58413, 0.83", "68.1862, -460.904, 1.52857, 0.83", "66.7498, -463.873, 1.44965, 0.55", "65.8687, -465.694, 1.40124, 0.28", "64.7754, -467.953, 1.34117, 0.55", "64.0114, -469.805, 1.14177, 0.28", "63.2068, -471.707, 0.742625, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "71.3571, -454.464, 1.23581, 0.83", "71.4614, -457.507, 1.35704, 0.83", "71.6144, -459.674, 1.48685, 0.55", "71.7504, -461.528, 1.60136, 0.83", "71.8629, -462.668, 1.69921, 0.55", "72.1458, -465.148, 1.93305, 0.83", "72.4203, -467.668, 2.15903, 0.83", "72.7373, -470.234, 2.4136, 0.83", "73.1904, -473.7, 2.7637, 0.83", "73.4653, -475.923, 3.01288, 0.83", "73.7202, -478.132, 3.24232, 0.83", "74.3891, -483.581, 3.84119, 0.83", "74.6551, -485.417, 4.03791, 0.55", "75.1524, -488.251, 4.3149, 0.83", "75.4989, -489.88, 4.47561, 0.83", "76.0812, -492.267, 4.68671, 0.55", "77.0259, -495.582, 4.97281, 0.55", "78.0015, -498.47, 5.22243, 0.55", "78.6098, -500.228, 5.30296, 0.55", "79.0838, -501.581, 5.31817, 0.55", "79.9571, -504.218, 5.27414, 0.83", "80.768, -506.934, 5.18061, 0.55", "81.4238, -509.388, 5.0161, 0.55", "82.0444, -511.885, 4.8225, 0.55", "83.0979, -516.47, 4.41832, 0.55", "83.4218, -517.915, 4.27182, 0.55", "83.8277, -519.798, 4.06598, 0.55", "84.7299, -523.85, 3.61513, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "84.7299, -523.85, 3.61513, 0.28", "85.6498, -524.389, 2.72454, 0.28", "86.7254, -525.181, 1.03517, 0.55", "87.2242, -525.498, 0.204978, 0.28", "87.9633, -525.9, -0.930582, 0.55", "91.0539, -527.46, -5.50999, 0.28", "91.9951, -527.924, -6.82352, 0.55", "94.6422, -529.196, -10.9495, 0.28", "95.51, -529.587, -12.452, 0.55", "96.4026, -529.94, -14.0469, 0.55", "97.2735, -530.223, -15.5665, 0.28", "98.4172, -530.615, -17.0468, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "84.7299, -523.85, 3.61513, 0.55", "85.2663, -525.917, 3.4864, 0.55", "86.1791, -529.437, 3.2673, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_45", "dend_0", "dend_51", "dend_46", "dend_14", "dend_1", "dend_61", "dend_52", "dend_48", "dend_47", "dend_16", "dend_15", "dend_5", "dend_2", "dend_63", "dend_62", "dend_56", "dend_53", "dend_50", "dend_49", "dend_18", "dend_17", "dend_7", "dend_6", "dend_4", "dend_3", "dend_75", "dend_64", "dend_58", "dend_57", "dend_55", "dend_54", "dend_24", "dend_19", "dend_9", "dend_8", "dend_77", "dend_76", "dend_72", "dend_65", "dend_60", "dend_59", "dend_26", "dend_25", "dend_23", "dend_20", "dend_13", "dend_10", "dend_74", "dend_73", "dend_71", "dend_66", "dend_28", "dend_27", "dend_22", "dend_21", "dend_12", "dend_11", "dend_70", "dend_67", "dend_32", "dend_29", "dend_69", "dend_68", "dend_34", "dend_33", "dend_31", "dend_30", "dend_36", "dend_35", "dend_44", "dend_37", "dend_43", "dend_38", "dend_42", "dend_39", "dend_41", "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_66", "dend_66", "dend_66", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L4_BTC_49eddfe373_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_45, id: dend_45, parent: soma_0
create dend_45
public dend_45
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_51
create dend_61
public dend_61
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_75, id: dend_75, parent: dend_63
create dend_75
public dend_75
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_64
create dend_72
public dend_72
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_65
create dend_71
public dend_71
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_70, id: dend_70, parent: dend_66
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_80
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_45(0), soma_0(0.49999994045921775)
    connect dend_0(0), soma_0(0.49999994045921775)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_75(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_70(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.465097, 8.04727, -0.0175891, 2.59198 ) }
    soma_0 { pt3dadd( 0.424424, 7.2054, -0.0170165, 4.38773 ) }
    soma_0 { pt3dadd( 0.383751, 6.36352, -0.0164438, 5.44399 ) }
    soma_0 { pt3dadd( 0.343077, 5.52165, -0.0158711, 6.50025 ) }
    soma_0 { pt3dadd( 0.302404, 4.67978, -0.0152984, 7.50099 ) }
    soma_0 { pt3dadd( 0.261731, 3.83791, -0.0147257, 8.3937 ) }
    soma_0 { pt3dadd( 0.221058, 2.99604, -0.014153, 9.3444 ) }
    soma_0 { pt3dadd( 0.180384, 2.15416, -0.0135803, 10.2953 ) }
    soma_0 { pt3dadd( 0.139711, 1.31229, -0.0130077, 10.7907 ) }
    soma_0 { pt3dadd( 0.0990378, 0.470419, -0.012435, 10.75 ) }
    soma_0 { pt3dadd( 0.0583646, -0.371454, -0.0118623, 10.6053 ) }
    soma_0 { pt3dadd( 0.0176913, -1.21333, -0.0112896, 10.4607 ) }
    soma_0 { pt3dadd( -0.0229819, -2.0552, -0.0107169, 10.316 ) }
    soma_0 { pt3dadd( -0.0636552, -2.89707, -0.0101442, 9.78436 ) }
    soma_0 { pt3dadd( -0.104328, -3.73894, -0.00957155, 9.07182 ) }
    soma_0 { pt3dadd( -0.145002, -4.58081, -0.00899886, 8.12082 ) }
    soma_0 { pt3dadd( -0.185675, -5.42269, -0.00842618, 7.10426 ) }
    soma_0 { pt3dadd( -0.226348, -6.26456, -0.00785349, 5.9023 ) }
    soma_0 { pt3dadd( -0.267021, -7.10643, -0.0072808, 4.68096 ) }
    soma_0 { pt3dadd( -0.307695, -7.9483, -0.00670812, 3.08046 ) }
    soma_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 1.81235 ) }
    // Section: dend_45, id: dend_45, parent: soma_0 (entry count 21/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.46257, 6.73541, -0.101719, 1.82 ) }
    dend_45 { pt3dadd( -1.57287, 7.30467, 0.927977, 1.82 ) }
    dend_45 { pt3dadd( -1.64745, 7.59391, 1.40218, 1.82 ) }
    dend_45 { pt3dadd( -1.84054, 8.26162, 2.35831, 1.68 ) }
    dend_45 { pt3dadd( -2.0453, 8.93544, 3.25688, 1.82 ) }
    dend_45 { pt3dadd( -2.0453, 8.93544, 3.25688, 1.96 ) }
    dend_45 { pt3dadd( -2.25795, 9.63524, 4.19009, 1.4 ) }
    dend_45 { pt3dadd( -2.39712, 9.96499, 4.60877, 1.26 ) }
    dend_45 { pt3dadd( -2.57239, 10.304, 5.02296, 1.4 ) }
    dend_45 { pt3dadd( -2.57239, 10.304, 5.02296, 1.26 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 31/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.682563, -8.18459, 0.898281, 2.1 ) }
    dend_0 { pt3dadd( -0.293566, -8.93816, 1.49838, 2.1 ) }
    dend_0 { pt3dadd( 0.0701283, -9.91129, 2.05393, 1.96 ) }
    dend_0 { pt3dadd( 0.237432, -10.4702, 2.291, 2.1 ) }
    dend_0 { pt3dadd( 0.305386, -10.7258, 2.37963, 1.96 ) }
    dend_0 { pt3dadd( 0.409841, -11.2573, 2.53378, 1.82 ) }
    dend_0 { pt3dadd( 0.490684, -11.8555, 2.6825, 1.68 ) }
    dend_0 { pt3dadd( 0.518441, -12.4824, 2.73491, 1.54 ) }
    dend_0 { pt3dadd( 0.502331, -13.0426, 2.73491, 1.4 ) }
    dend_0 { pt3dadd( 0.487208, -13.3142, 2.73491, 1.4 ) }
    dend_0 { pt3dadd( 0.446325, -13.9426, 2.73491, 2.38 ) }
    dend_0 { pt3dadd( 0.421954, -14.3313, 2.73491, 2.24 ) }
    dend_0 { pt3dadd( 0.40793, -14.8916, 2.73491, 2.38 ) }
    dend_0 { pt3dadd( 0.41828, -15.4547, 2.73491, 2.24 ) }
    dend_0 { pt3dadd( 0.435124, -16.0149, 2.73491, 2.1 ) }
    dend_0 { pt3dadd( 0.462023, -16.4122, 2.73491, 1.96 ) }
    dend_0 { pt3dadd( 0.497042, -16.6916, 2.73491, 1.82 ) }
    dend_0 { pt3dadd( 0.56467, -17.2383, 2.73491, 1.54 ) }
    dend_0 { pt3dadd( 0.6263, -17.7953, 2.73491, 1.68 ) }
    dend_0 { pt3dadd( 0.661631, -18.1905, 2.76915, 1.82 ) }
    dend_0 { pt3dadd( 0.697786, -18.7464, 2.85238, 1.68 ) }
    dend_0 { pt3dadd( 0.730097, -19.2864, 2.95578, 1.68 ) }
    dend_0 { pt3dadd( 0.744744, -19.8896, 3.13599, 1.82 ) }
    dend_0 { pt3dadd( 0.746716, -20.4127, 3.3372, 1.82 ) }
    dend_0 { pt3dadd( 0.729302, -21.4553, 3.88209, 1.82 ) }
    dend_0 { pt3dadd( 0.722874, -21.9955, 4.20901, 1.68 ) }
    dend_0 { pt3dadd( 0.718591, -22.2297, 4.36535, 1.68 ) }
    dend_0 { pt3dadd( 0.70366, -23.1004, 4.99257, 1.12 ) }
    dend_0 { pt3dadd( 0.688414, -23.5508, 5.32577, 0.98 ) }
    dend_0 { pt3dadd( 0.62223, -24.5224, 5.99517, 1.12 ) }
    dend_0 { pt3dadd( 0.575482, -25.0079, 6.27125, 0.98 ) }
    dend_0 { pt3dadd( 0.547049, -25.2594, 6.39456, 1.12 ) }
    dend_0 { pt3dadd( 0.547049, -25.2594, 6.39456, 1.26 ) }
    dend_0 { pt3dadd( 0.491268, -25.8706, 6.50115, 1.26 ) }
    dend_0 { pt3dadd( 0.449635, -26.4981, 6.55853, 1.12 ) }
    dend_0 { pt3dadd( 0.445007, -26.8876, 6.55853, 0.98 ) }
    dend_0 { pt3dadd( 0.473989, -27.4473, 6.55853, 1.12 ) }
    dend_0 { pt3dadd( 0.536579, -28.007, 6.55853, 1.26 ) }
    dend_0 { pt3dadd( 0.624282, -28.5605, 6.55853, 1.4 ) }
    dend_0 { pt3dadd( 0.756939, -29.098, 6.55853, 1.26 ) }
    dend_0 { pt3dadd( 0.924719, -29.6328, 6.55853, 1.4 ) }
    dend_0 { pt3dadd( 1.06264, -30.0064, 6.55853, 1.4 ) }
    dend_0 { pt3dadd( 1.06264, -30.0064, 6.55853, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.348368, -8.79018, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.07222, -23.7727, -0.00613543, 0.28 ) }
    axon_0 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -2.57239, 10.304, 5.02296, 0.84 ) }
    dend_51 { pt3dadd( -2.73614, 10.7798, 4.65579, 0.84 ) }
    dend_51 { pt3dadd( -3.04379, 11.7026, 4.04927, 0.7 ) }
    dend_51 { pt3dadd( -3.19727, 12.1755, 3.78469, 0.84 ) }
    dend_51 { pt3dadd( -3.4891, 13.1633, 3.28151, 0.98 ) }
    dend_51 { pt3dadd( -3.63664, 13.6576, 3.05559, 1.12 ) }
    dend_51 { pt3dadd( -3.78053, 14.1372, 2.82589, 1.26 ) }
    dend_51 { pt3dadd( -3.93025, 14.6325, 2.60361, 1.4 ) }
    dend_51 { pt3dadd( -4.09518, 15.136, 2.42077, 1.54 ) }
    dend_51 { pt3dadd( -4.185, 15.3947, 2.35526, 1.68 ) }
    dend_51 { pt3dadd( -4.40068, 15.9859, 2.33422, 1.68 ) }
    dend_51 { pt3dadd( -4.80259, 17.0542, 2.4406, 1.54 ) }
    dend_51 { pt3dadd( -5.02267, 17.6233, 2.56593, 1.4 ) }
    dend_51 { pt3dadd( -5.2301, 18.1206, 2.72997, 1.4 ) }
    dend_51 { pt3dadd( -5.69099, 19.1174, 3.05865, 1.26 ) }
    dend_51 { pt3dadd( -6.16068, 20.0203, 3.25377, 1.12 ) }
    dend_51 { pt3dadd( -6.44342, 20.504, 3.23873, 0.98 ) }
    dend_51 { pt3dadd( -6.44342, 20.504, 3.23873, 0.98 ) }
    dend_51 { pt3dadd( -6.69358, 20.7786, 2.73028, 0.7 ) }
    dend_51 { pt3dadd( -7.08323, 21.2399, 1.8409, 0.56 ) }
    dend_51 { pt3dadd( -7.47131, 21.7636, 0.855188, 0.42 ) }
    dend_51 { pt3dadd( -7.78645, 22.2643, -0.0401809, 0.56 ) }
    dend_51 { pt3dadd( -8.28464, 23.2619, -1.74758, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_51 { pt3dadd( -8.3916, 23.5549, -2.21318, 1.26 ) }
    dend_51 { pt3dadd( -8.48622, 23.9117, -2.71111, 1.12 ) }
    dend_51 { pt3dadd( -8.56132, 24.3474, -3.16204, 0.98 ) }
    dend_51 { pt3dadd( -8.61787, 24.8831, -3.4881, 0.84 ) }
    dend_51 { pt3dadd( -8.74145, 25.9438, -3.59509, 0.7 ) }
    dend_51 { pt3dadd( -8.78334, 26.2127, -3.52279, 0.84 ) }
    dend_51 { pt3dadd( -9.09598, 27.3197, -2.97765, 0.1 ) }
    dend_51 { pt3dadd( -9.52567, 28.0168, -2.27627, 0.1 ) }
    dend_51 { pt3dadd( -9.70667, 28.1934, -1.98005, 0.14 ) }
    dend_51 { pt3dadd( -9.70667, 28.1934, -1.98005, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 10/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.57239, 10.304, 5.02296, 3.22 ) }
    dend_46 { pt3dadd( -2.36135, 10.567, 4.81104, 3.22 ) }
    dend_46 { pt3dadd( -2.06977, 11.0122, 4.47332, 3.08 ) }
    dend_46 { pt3dadd( -1.57799, 11.9039, 3.87367, 2.94 ) }
    dend_46 { pt3dadd( -1.43642, 12.2159, 3.6886, 2.8 ) }
    dend_46 { pt3dadd( -1.22861, 12.7108, 3.37247, 2.66 ) }
    dend_46 { pt3dadd( -0.859925, 13.66, 2.77097, 2.52 ) }
    dend_46 { pt3dadd( -0.712579, 14.1243, 2.48818, 2.38 ) }
    dend_46 { pt3dadd( -0.57842, 14.655, 2.19351, 2.24 ) }
    dend_46 { pt3dadd( -0.473442, 15.1596, 1.96642, 2.1 ) }
    dend_46 { pt3dadd( -0.296745, 16.0759, 1.50981, 1.96 ) }
    dend_46 { pt3dadd( -0.193194, 16.6259, 1.21738, 0.28 ) }
    dend_46 { pt3dadd( -0.0744687, 17.1717, 0.948642, 0.42 ) }
    dend_46 { pt3dadd( 0.015638, 17.5113, 0.761106, 0.56 ) }
    dend_46 { pt3dadd( 0.167143, 18.0269, 0.448443, 0.7 ) }
    dend_46 { pt3dadd( 0.444073, 18.8505, -0.0464351, 0.84 ) }
    dend_46 { pt3dadd( 0.514638, 19.1005, -0.148087, 0.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 27/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.06264, -30.0064, 6.55853, 1.4 ) }
    dend_14 { pt3dadd( 1.13927, -30.2774, 6.55853, 1.4 ) }
    dend_14 { pt3dadd( 1.26331, -30.8239, 6.55853, 1.54 ) }
    dend_14 { pt3dadd( 1.34699, -31.3487, 6.38054, 1.68 ) }
    dend_14 { pt3dadd( 1.37566, -31.5606, 6.19724, 1.54 ) }
    dend_14 { pt3dadd( 1.41316, -31.9807, 5.82826, 1.4 ) }
    dend_14 { pt3dadd( 1.41316, -31.9807, 5.82826, 1.54 ) }
    dend_14 { pt3dadd( 1.43189, -32.3152, 5.60403, 1.4 ) }
    dend_14 { pt3dadd( 1.47153, -33.3147, 5.0413, 1.26 ) }
    dend_14 { pt3dadd( 1.52193, -34.3637, 4.5937, 1.12 ) }
    dend_14 { pt3dadd( 1.55161, -34.9676, 4.4176, 0.98 ) }
    dend_14 { pt3dadd( 1.58684, -35.5176, 4.31617, 0.84 ) }
    dend_14 { pt3dadd( 1.68164, -36.674, 4.12111, 0.7 ) }
    dend_14 { pt3dadd( 1.70491, -36.9525, 4.08683, 0.56 ) }
    dend_14 { pt3dadd( 1.73578, -37.5116, 4.06227, 0.56 ) }
    dend_14 { pt3dadd( 1.76575, -38.1401, 4.0397, 0.7 ) }
    dend_14 { pt3dadd( 1.78688, -38.6802, 3.9336, 0.84 ) }
    dend_14 { pt3dadd( 1.82203, -39.7698, 3.57918, 0.98 ) }
    dend_14 { pt3dadd( 1.83848, -40.1367, 3.42521, 0.56 ) }
    dend_14 { pt3dadd( 1.85659, -40.7275, 3.20813, 0.7 ) }
    dend_14 { pt3dadd( 1.87205, -41.2625, 3.07772, 0.84 ) }
    dend_14 { pt3dadd( 1.92813, -42.4389, 2.98025, 0.84 ) }
    dend_14 { pt3dadd( 1.96475, -42.9956, 3.03331, 0.98 ) }
    dend_14 { pt3dadd( 2.01576, -43.5384, 3.1746, 1.12 ) }
    dend_14 { pt3dadd( 2.15129, -44.5494, 3.51387, 0.56 ) }
    dend_14 { pt3dadd( 2.3272, -45.5997, 3.94185, 0.42 ) }
    dend_14 { pt3dadd( 2.42243, -46.1019, 4.1717, 0.42 ) }
    dend_14 { pt3dadd( 2.53304, -46.6071, 4.39455, 0.56 ) }
    dend_14 { pt3dadd( 2.59347, -46.8672, 4.47511, 0.7 ) }
    dend_14 { pt3dadd( 2.663, -47.139, 4.50022, 1.12 ) }
    dend_14 { pt3dadd( 2.81373, -47.6634, 4.40657, 1.26 ) }
    dend_14 { pt3dadd( 2.96085, -48.1767, 4.23635, 1.12 ) }
    dend_14 { pt3dadd( 3.2407, -49.1506, 4.00723, 1.12 ) }
    dend_14 { pt3dadd( 3.2407, -49.1506, 4.00723, 1.12 ) }
    dend_14 { pt3dadd( 3.29575, -49.424, 4.0067, 1.12 ) }
    dend_14 { pt3dadd( 3.3723, -49.9799, 4.05531, 0.98 ) }
    dend_14 { pt3dadd( 3.42208, -50.5303, 4.14822, 1.12 ) }
    dend_14 { pt3dadd( 3.48836, -51.6145, 4.50406, 1.12 ) }
    dend_14 { pt3dadd( 3.51951, -52.1932, 4.75508, 1.26 ) }
    dend_14 { pt3dadd( 3.55258, -52.7675, 5.01122, 1.26 ) }
    dend_14 { pt3dadd( 3.57554, -53.1227, 5.16921, 1.4 ) }
    dend_14 { pt3dadd( 3.58847, -53.3755, 5.28634, 1.4 ) }
    dend_14 { pt3dadd( 3.63283, -54.3196, 5.71772, 1.26 ) }
    dend_14 { pt3dadd( 3.66755, -54.8418, 5.91815, 1.26 ) }
    dend_14 { pt3dadd( 3.73778, -55.349, 6.1527, 1.26 ) }
    dend_14 { pt3dadd( 3.84445, -55.8351, 6.41051, 1.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 73/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.06264, -30.0064, 6.55853, 2.24 ) }
    dend_1 { pt3dadd( 0.674138, -30.3606, 5.53833, 2.24 ) }
    dend_1 { pt3dadd( 0.357489, -30.7325, 4.50128, 2.38 ) }
    dend_1 { pt3dadd( 0.0404655, -31.1049, 3.46299, 2.52 ) }
    dend_1 { pt3dadd( -0.0373202, -31.1963, 3.20823, 2.38 ) }
    dend_1 { pt3dadd( -0.362306, -31.578, 2.14387, 2.24 ) }
    dend_1 { pt3dadd( -0.66013, -31.9278, 1.16846, 2.1 ) }
    dend_1 { pt3dadd( -0.883515, -32.3095, 0.228391, 1.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 81/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.79606, -38.7552, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -2.51991, -53.7378, -0.00613543, 0.28 ) }
    axon_1 { pt3dadd( -3.24376, -68.7203, -0.00613543, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_51 (entry count 84/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -9.70667, 28.1934, -1.98005, 0.28 ) }
    dend_61 { pt3dadd( -9.98586, 29.1637, -2.52579, 0.28 ) }
    dend_61 { pt3dadd( -10.2913, 30.2254, -2.81377, 0.42 ) }
    dend_61 { pt3dadd( -10.4455, 30.7615, -2.89118, 0.56 ) }
    dend_61 { pt3dadd( -10.6001, 31.2994, -2.92129, 0.56 ) }
    dend_61 { pt3dadd( -10.678, 31.57, -2.92228, 0.56 ) }
    dend_61 { pt3dadd( -10.9946, 32.6714, -2.89485, 0.56 ) }
    dend_61 { pt3dadd( -11.1345, 33.2073, -2.79253, 0.7 ) }
    dend_61 { pt3dadd( -11.1345, 33.2073, -2.79253, 0.7 ) }
    dend_61 { pt3dadd( -11.2532, 33.7345, -2.68574, 0.56 ) }
    dend_61 { pt3dadd( -11.359, 34.2865, -2.65043, 0.42 ) }
    dend_61 { pt3dadd( -11.4519, 34.8378, -2.68993, 0.28 ) }
    dend_61 { pt3dadd( -11.546, 35.4488, -2.80959, 0.14 ) }
    dend_61 { pt3dadd( -11.6246, 35.9698, -2.97024, 0.1 ) }
    dend_61 { pt3dadd( -11.7061, 36.4887, -3.1657, 0.1 ) }
    dend_61 { pt3dadd( -11.8416, 37.4389, -3.65285, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -11.9058, 37.9147, -3.94717, 0.84 ) }
    dend_61 { pt3dadd( -11.9689, 38.3731, -4.26339, 0.7 ) }
    dend_61 { pt3dadd( -12.1053, 39.2737, -4.95394, 0.56 ) }
    dend_61 { pt3dadd( -12.1676, 39.7017, -5.31038, 0.7 ) }
    dend_61 { pt3dadd( -12.2991, 40.587, -6.08348, 0.84 ) }
    dend_61 { pt3dadd( -12.2991, 40.587, -6.08348, 0.98 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 6/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -9.70667, 28.1934, -1.98005, 0.56 ) }
    dend_52 { pt3dadd( -9.97048, 28.3775, -3.11716, 0.56 ) }
    dend_52 { pt3dadd( -10.1966, 28.5673, -4.14894, 0.42 ) }
    dend_52 { pt3dadd( -10.5792, 28.9426, -6.11651, 0.28 ) }
    dend_52 { pt3dadd( -10.7648, 29.1476, -7.15676, 0.14 ) }
    dend_52 { pt3dadd( -11.1236, 29.5672, -9.11912, 0.28 ) }
    dend_52 { pt3dadd( -11.3118, 29.8029, -10.1133, 0.42 ) }
    dend_52 { pt3dadd( -11.5128, 30.0959, -11.1982, 0.56 ) }
    dend_52 { pt3dadd( -11.8722, 30.7221, -13.0845, 0.42 ) }
    dend_52 { pt3dadd( -12.0621, 31.1195, -14.0254, 0.56 ) }
    dend_52 { pt3dadd( -12.1771, 31.3932, -14.573, 0.84 ) }
    dend_52 { pt3dadd( -12.2987, 31.6932, -15.0339, 0.7 ) }
    dend_52 { pt3dadd( -12.4493, 32.0246, -15.46, 0.56 ) }
    dend_52 { pt3dadd( -12.6357, 32.3701, -15.8639, 0.42 ) }
    dend_52 { pt3dadd( -13.058, 33.0426, -16.5326, 0.56 ) }
    dend_52 { pt3dadd( -13.1723, 33.2073, -16.7265, 0.7 ) }
    dend_52 { pt3dadd( -13.4266, 33.5234, -17.1992, 1.12 ) }
    dend_52 { pt3dadd( -13.9295, 34.0098, -18.1471, 0.98 ) }
    dend_52 { pt3dadd( -14.3808, 34.3139, -19.0758, 0.84 ) }
    dend_52 { pt3dadd( -14.6571, 34.4338, -19.621, 0.7 ) }
    dend_52 { pt3dadd( -15.142, 34.5659, -20.5303, 0.84 ) }
    dend_52 { pt3dadd( -15.3353, 34.6068, -20.8659, 0.56 ) }
    dend_52 { pt3dadd( -15.6536, 34.6429, -21.4101, 0.42 ) }
    dend_52 { pt3dadd( -16.2941, 34.7173, -22.3596, 0.56 ) }
    dend_52 { pt3dadd( -16.7784, 34.806, -22.9807, 0.28 ) }
    dend_52 { pt3dadd( -17.4796, 35.0086, -23.7718, 0.14 ) }
    dend_52 { pt3dadd( -18.0351, 35.2427, -24.2789, 0.1 ) }
    dend_52 { pt3dadd( -18.7969, 35.6894, -24.8943, 0.14 ) }
    dend_52 { pt3dadd( -19.2348, 36.0199, -25.2046, 0.28 ) }
    dend_52 { pt3dadd( -19.5148, 36.2515, -25.3677, 0.14 ) }
    dend_52 { pt3dadd( -19.9443, 36.6353, -25.6048, 0.1 ) }
    dend_52 { pt3dadd( -20.2197, 36.9045, -25.7061, 0.14 ) }
    dend_52 { pt3dadd( -20.5874, 37.3135, -25.814, 0.84 ) }
    dend_52 { pt3dadd( -20.8379, 37.6231, -25.814, 0.98 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 0.514638, 19.1005, -0.148087, 1.4 ) }
    dend_48 { pt3dadd( 0.515328, 20.2826, -0.109237, 1.4 ) }
    dend_48 { pt3dadd( 0.480752, 20.8977, -0.176981, 1.4 ) }
    dend_48 { pt3dadd( 0.439984, 21.4967, -0.372958, 1.26 ) }
    dend_48 { pt3dadd( 0.396396, 22.0182, -0.581025, 1.12 ) }
    dend_48 { pt3dadd( 0.370478, 22.275, -0.686738, 0.98 ) }
    dend_48 { pt3dadd( 0.246253, 23.3339, -1.11157, 0.84 ) }
    dend_48 { pt3dadd( 0.180365, 23.8235, -1.35516, 0.7 ) }
    dend_48 { pt3dadd( 0.0224534, 24.8698, -1.88142, 0.56 ) }
    dend_48 { pt3dadd( -0.047605, 25.373, -2.11805, 0.56 ) }
    dend_48 { pt3dadd( -0.0978851, 25.8946, -2.32437, 0.42 ) }
    dend_48 { pt3dadd( -0.122426, 26.4227, -2.47911, 0.56 ) }
    dend_48 { pt3dadd( -0.118605, 26.7011, -2.52106, 0.7 ) }
    dend_48 { pt3dadd( -0.0806238, 27.2612, -2.56648, 0.56 ) }
    dend_48 { pt3dadd( -0.00649903, 27.8883, -2.56648, 0.56 ) }
    dend_48 { pt3dadd( 0.112632, 28.4945, -2.51552, 0.7 ) }
    dend_48 { pt3dadd( 0.209366, 28.8816, -2.45862, 0.56 ) }
    dend_48 { pt3dadd( 0.377223, 29.4678, -2.34731, 0.56 ) }
    dend_48 { pt3dadd( 0.552417, 30.0611, -2.2201, 0.56 ) }
    dend_48 { pt3dadd( 0.668277, 30.4233, -2.13582, 0.42 ) }
    dend_48 { pt3dadd( 1.07373, 31.6156, -1.91579, 0.56 ) }
    dend_48 { pt3dadd( 1.27687, 32.1987, -1.84396, 0.7 ) }
    dend_48 { pt3dadd( 1.41544, 32.5715, -1.82358, 0.56 ) }
    dend_48 { pt3dadd( 1.64906, 33.1455, -1.83458, 0.42 ) }
    dend_48 { pt3dadd( 1.90083, 33.7141, -1.94465, 0.28 ) }
    dend_48 { pt3dadd( 2.32004, 34.6128, -2.25443, 0.14 ) }
    dend_48 { pt3dadd( 2.57179, 35.1223, -2.5019, 0.56 ) }
    dend_48 { pt3dadd( 2.84024, 35.6458, -2.7263, 0.42 ) }
    dend_48 { pt3dadd( 3.014, 35.9799, -2.84367, 0.56 ) }
    dend_48 { pt3dadd( 3.59119, 37.0999, -3.02525, 0.7 ) }
    dend_48 { pt3dadd( 3.76726, 37.4566, -3.00673, 0.56 ) }
    dend_48 { pt3dadd( 3.92455, 37.8122, -2.92062, 0.42 ) }
    dend_48 { pt3dadd( 4.34422, 38.8574, -2.57723, 0.98 ) }
    dend_48 { pt3dadd( 4.46905, 39.2196, -2.46836, 0.98 ) }
    dend_48 { pt3dadd( 4.81432, 40.3023, -2.16374, 0.84 ) }
    dend_48 { pt3dadd( 4.92529, 40.6833, -2.09277, 0.84 ) }
    dend_48 { pt3dadd( 5.09255, 41.2903, -2.08988, 0.98 ) }
    dend_48 { pt3dadd( 5.23937, 41.891, -2.15397, 0.84 ) }
    dend_48 { pt3dadd( 5.4911, 43.0328, -2.32592, 0.7 ) }
    dend_48 { pt3dadd( 5.56143, 43.4156, -2.34061, 0.56 ) }
    dend_48 { pt3dadd( 5.7616, 44.5794, -2.27485, 0.7 ) }
    dend_48 { pt3dadd( 5.7616, 44.5794, -2.27485, 0.84 ) }
    dend_48 { pt3dadd( 5.91084, 45.5622, -1.70126, 0.84 ) }
    dend_48 { pt3dadd( 6.07296, 46.4897, -0.99428, 0.7 ) }
    dend_48 { pt3dadd( 6.22964, 47.2278, -0.280095, 0.56 ) }
    dend_48 { pt3dadd( 6.28302, 47.4201, -0.0813897, 0.56 ) }
    dend_48 { pt3dadd( 6.43845, 47.8207, 0.378882, 0.98 ) }
    dend_48 { pt3dadd( 6.64617, 48.2245, 0.803478, 0.84 ) }
    dend_48 { pt3dadd( 6.77193, 48.4097, 0.974338, 0.98 ) }
    dend_48 { pt3dadd( 7.35607, 49.1042, 1.54709, 0.42 ) }
    dend_48 { pt3dadd( 7.72318, 49.5155, 1.85138, 0.56 ) }
    dend_48 { pt3dadd( 8.39587, 50.3015, 2.41496, 0.7 ) }
    dend_48 { pt3dadd( 8.74258, 50.7299, 2.70532, 0.56 ) }
    dend_48 { pt3dadd( 8.88775, 50.941, 2.82221, 0.7 ) }
    dend_48 { pt3dadd( 9.12421, 51.4203, 2.99982, 0.84 ) }
    dend_48 { pt3dadd( 9.27715, 51.9421, 3.08799, 0.56 ) }
    dend_48 { pt3dadd( 9.36243, 52.4967, 3.13568, 0.42 ) }
    dend_48 { pt3dadd( 9.39674, 53.0561, 3.13568, 0.28 ) }
    dend_48 { pt3dadd( 9.40693, 53.6857, 3.13568, 0.42 ) }
    dend_48 { pt3dadd( 9.41549, 54.2348, 3.09281, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_48 { pt3dadd( 9.43407, 54.7921, 3.01373, 0.7 ) }
    dend_48 { pt3dadd( 9.46162, 55.0672, 2.96007, 0.56 ) }
    dend_48 { pt3dadd( 9.5614, 55.6743, 2.81772, 0.84 ) }
    dend_48 { pt3dadd( 9.70308, 56.2584, 2.66599, 0.84 ) }
    dend_48 { pt3dadd( 10.0288, 57.2505, 2.39763, 0.7 ) }
    dend_48 { pt3dadd( 10.2628, 57.8043, 2.24691, 0.56 ) }
    dend_48 { pt3dadd( 10.5192, 58.3616, 2.10463, 0.7 ) }
    dend_48 { pt3dadd( 10.6788, 58.7142, 2.02831, 0.7 ) }
    dend_48 { pt3dadd( 10.9384, 59.2804, 1.93631, 0.84 ) }
    dend_48 { pt3dadd( 11.1946, 59.8393, 1.83604, 0.7 ) }
    dend_48 { pt3dadd( 11.2976, 60.1006, 1.8167, 0.56 ) }
    dend_48 { pt3dadd( 11.463, 60.6388, 1.83207, 0.42 ) }
    dend_48 { pt3dadd( 11.5732, 61.2458, 1.90881, 0.28 ) }
    dend_48 { pt3dadd( 11.6091, 61.8621, 2.03293, 0.14 ) }
    dend_48 { pt3dadd( 11.5441, 62.9016, 2.29883, 0.28 ) }
    dend_48 { pt3dadd( 11.4019, 64.0342, 2.61948, 0.1 ) }
    dend_48 { pt3dadd( 11.2529, 65.1214, 2.9346, 0.1 ) }
    dend_48 { pt3dadd( 11.1891, 65.6584, 3.09191, 0.1 ) }
    dend_48 { pt3dadd( 11.1623, 65.9258, 3.16639, 0.14 ) }
    dend_48 { pt3dadd( 11.1189, 66.4697, 3.30597, 0.84 ) }
    dend_48 { pt3dadd( 11.0996, 67.0851, 3.44656, 0.7 ) }
    dend_48 { pt3dadd( 11.1233, 67.7025, 3.49573, 0.7 ) }
    dend_48 { pt3dadd( 11.1741, 68.332, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.2331, 68.949, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.2614, 69.2292, 3.49573, 0.7 ) }
    dend_48 { pt3dadd( 11.2911, 69.5092, 3.49573, 0.84 ) }
    dend_48 { pt3dadd( 11.3326, 70.0681, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.367, 70.687, 3.49573, 0.42 ) }
    dend_48 { pt3dadd( 11.3984, 71.2466, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.4403, 71.8748, 3.49573, 0.42 ) }
    dend_48 { pt3dadd( 11.4806, 72.4952, 3.49573, 0.28 ) }
    dend_48 { pt3dadd( 11.5056, 73.0579, 3.49573, 0.42 ) }
    dend_48 { pt3dadd( 11.5264, 73.689, 3.49573, 0.28 ) }
    dend_48 { pt3dadd( 11.5334, 74.0785, 3.49573, 0.42 ) }
    dend_48 { pt3dadd( 11.5334, 74.71, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.517, 75.2729, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.4727, 75.822, 3.49573, 0.42 ) }
    dend_48 { pt3dadd( 11.4003, 76.3805, 3.49573, 0.56 ) }
    dend_48 { pt3dadd( 11.2774, 76.9999, 3.49573, 0.7 ) }
    dend_48 { pt3dadd( 11.1394, 77.5441, 3.45053, 0.84 ) }
    dend_48 { pt3dadd( 11.1394, 77.5441, 3.45053, 0.7 ) }
    dend_48 { pt3dadd( 10.9748, 78.132, 3.32707, 0.28 ) }
    dend_48 { pt3dadd( 10.8432, 78.6615, 3.19886, 0.14 ) }
    dend_48 { pt3dadd( 10.7241, 79.1853, 3.0649, 0.1 ) }
    dend_48 { pt3dadd( 10.494, 80.2505, 2.70921, 0.14 ) }
    dend_48 { pt3dadd( 10.3941, 80.7701, 2.51622, 0.28 ) }
    dend_48 { pt3dadd( 10.3077, 81.338, 2.25395, 0.42 ) }
    dend_48 { pt3dadd( 10.2445, 81.8977, 1.99511, 0.56 ) }
    dend_48 { pt3dadd( 10.1924, 82.4088, 1.77126, 0.56 ) }
    dend_48 { pt3dadd( 10.0829, 83.4772, 1.36643, 0.56 ) }
    dend_48 { pt3dadd( 10.02, 84.0137, 1.21713, 0.56 ) }
    dend_48 { pt3dadd( 9.87366, 85.0119, 0.972455, 0.7 ) }
    dend_48 { pt3dadd( 9.67144, 86.0977, 0.660364, 1.12 ) }
    dend_48 { pt3dadd( 9.54587, 86.6212, 0.504632, 0.98 ) }
    dend_48 { pt3dadd( 9.40234, 87.1476, 0.364897, 0.84 ) }
    dend_48 { pt3dadd( 9.22769, 87.6704, 0.263335, 0.7 ) }
    dend_48 { pt3dadd( 9.03235, 88.1754, 0.162219, 0.56 ) }
    dend_48 { pt3dadd( 8.65233, 89.0653, -0.0901032, 0.42 ) }
    dend_48 { pt3dadd( 8.41176, 89.6044, -0.329385, 0.28 ) }
    dend_48 { pt3dadd( 8.19701, 90.0738, -0.521695, 0.14 ) }
    dend_48 { pt3dadd( 7.95694, 90.6323, -0.711888, 0.1 ) }
    dend_48 { pt3dadd( 7.76918, 91.1445, -0.788029, 0.1 ) }
    dend_48 { pt3dadd( 7.47435, 92.2502, -0.719678, 0.14 ) }
    dend_48 { pt3dadd( 7.47435, 92.2502, -0.719678, 0.28 ) }
    dend_48 { pt3dadd( 7.37397, 93.3457, -0.392505, 0.28 ) }
    dend_48 { pt3dadd( 7.36458, 93.9429, -0.18756, 0.42 ) }
    dend_48 { pt3dadd( 7.4241, 95.0483, 0.211104, 0.56 ) }
    dend_48 { pt3dadd( 7.48017, 95.6402, 0.423869, 0.56 ) }
    dend_48 { pt3dadd( 7.50804, 95.905, 0.515443, 0.7 ) }
    dend_48 { pt3dadd( 7.57368, 96.5037, 0.662134, 0.7 ) }
    dend_48 { pt3dadd( 7.63723, 97.1271, 0.740466, 0.56 ) }
    dend_48 { pt3dadd( 7.69336, 97.7443, 0.742353, 0.42 ) }
    dend_48 { pt3dadd( 7.73681, 98.3696, 0.664719, 0.28 ) }
    dend_48 { pt3dadd( 7.75925, 98.9244, 0.570767, 0.42 ) }
    dend_48 { pt3dadd( 7.76267, 99.5239, 0.406232, 0.28 ) }
    dend_48 { pt3dadd( 7.74858, 100.054, 0.215252, 0.14 ) }
    dend_48 { pt3dadd( 7.68677, 101.046, -0.200155, 0.1 ) }
    dend_48 { pt3dadd( 7.64836, 101.551, -0.424445, 0.1 ) }
    dend_48 { pt3dadd( 7.61238, 102.063, -0.649792, 0.14 ) }
    dend_48 { pt3dadd( 7.54541, 103.123, -1.08443, 0.28 ) }
    dend_48 { pt3dadd( 7.51215, 103.718, -1.29424, 0.14 ) }
    dend_48 { pt3dadd( 7.48707, 104.251, -1.43867, 0.28 ) }
    dend_48 { pt3dadd( 7.46331, 104.874, -1.54196, 0.42 ) }
    dend_48 { pt3dadd( 7.45215, 105.499, -1.62058, 0.42 ) }
    dend_48 { pt3dadd( 7.45378, 106.048, -1.65916, 0.28 ) }
    dend_48 { pt3dadd( 7.46775, 106.678, -1.65916, 0.42 ) }
    dend_48 { pt3dadd( 7.48722, 107.238, -1.65916, 0.56 ) }
    dend_48 { pt3dadd( 7.52489, 107.856, -1.65916, 0.56 ) }
    dend_48 { pt3dadd( 7.54097, 108.135, -1.65916, 0.7 ) }
    dend_48 { pt3dadd( 7.57184, 108.764, -1.65916, 0.56 ) }
    dend_48 { pt3dadd( 7.59468, 109.385, -1.65916, 0.42 ) }
    dend_48 { pt3dadd( 7.59688, 110.013, -1.70319, 0.56 ) }
    dend_48 { pt3dadd( 7.57829, 110.63, -1.7818, 0.7 ) }
    dend_48 { pt3dadd( 7.53712, 111.183, -1.8777, 0.84 ) }
    dend_48 { pt3dadd( 7.48372, 111.73, -1.9897, 0.7 ) }
    dend_48 { pt3dadd( 7.41175, 112.273, -2.12013, 0.84 ) }
    dend_48 { pt3dadd( 7.25002, 113.371, -2.40814, 0.7 ) }
    dend_48 { pt3dadd( 7.17693, 113.91, -2.55201, 0.56 ) }
    dend_48 { pt3dadd( 7.15225, 114.179, -2.62092, 0.56 ) }
    dend_48 { pt3dadd( 7.16037, 114.785, -2.75144, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( 7.16037, 114.785, -2.75144, 0.56 ) }
    dend_48 { pt3dadd( 7.25261, 115.41, -2.74935, 0.14 ) }
    dend_48 { pt3dadd( 7.35532, 116.013, -2.65188, 0.1 ) }
    dend_48 { pt3dadd( 7.40788, 116.399, -2.56835, 0.1 ) }
    dend_48 { pt3dadd( 7.46182, 117.166, -2.37611, 0.1 ) }
    dend_48 { pt3dadd( 7.45818, 117.438, -2.30234, 0.14 ) }
    dend_48 { pt3dadd( 7.35836, 118.56, -2.09122, 0.28 ) }
    dend_48 { pt3dadd( 7.30825, 118.836, -2.06182, 0.42 ) }
    dend_48 { pt3dadd( 7.15055, 119.437, -2.10819, 0.56 ) }
    dend_48 { pt3dadd( 6.99871, 119.951, -2.2794, 0.7 ) }
    dend_48 { pt3dadd( 6.84888, 120.431, -2.50421, 0.56 ) }
    dend_48 { pt3dadd( 6.59136, 121.409, -3.04718, 0.42 ) }
    dend_48 { pt3dadd( 6.49821, 121.871, -3.35027, 0.28 ) }
    dend_48 { pt3dadd( 6.34505, 122.825, -3.9702, 0.42 ) }
    dend_48 { pt3dadd( 6.23986, 123.738, -4.53084, 0.56 ) }
    dend_48 { pt3dadd( 6.13102, 124.751, -5.05571, 0.56 ) }
    dend_48 { pt3dadd( 6.04709, 125.309, -5.31237, 0.42 ) }
    dend_48 { pt3dadd( 5.99381, 125.572, -5.39766, 0.28 ) }
    dend_48 { pt3dadd( 5.84432, 126.155, -5.55806, 0.1 ) }
    dend_48 { pt3dadd( 5.68371, 126.684, -5.66394, 0.1 ) }
    dend_48 { pt3dadd( 5.50524, 127.205, -5.77132, 0.1 ) }
    dend_48 { pt3dadd( 5.10617, 128.262, -6.11514, 0.1 ) }
    dend_48 { pt3dadd( 4.89164, 128.75, -6.28807, 0.1 ) }
    dend_48 { pt3dadd( 4.66759, 129.228, -6.45637, 0.14 ) }
    dend_48 { pt3dadd( 4.44693, 129.716, -6.62006, 0.28 ) }
    dend_48 { pt3dadd( 4.33804, 129.957, -6.71748, 0.42 ) }
    dend_48 { pt3dadd( 4.13457, 130.432, -6.90893, 0.56 ) }
    dend_48 { pt3dadd( 3.92159, 130.988, -7.09273, 0.84 ) }
    dend_48 { pt3dadd( 3.73844, 131.481, -7.26423, 0.7 ) }
    dend_48 { pt3dadd( 3.55963, 131.986, -7.43017, 0.56 ) }
    dend_48 { pt3dadd( 3.20535, 133.032, -7.73632, 0.42 ) }
    dend_48 { pt3dadd( 3.03647, 133.552, -7.87058, 0.28 ) }
    dend_48 { pt3dadd( 2.87278, 134.082, -7.95315, 0.14 ) }
    dend_48 { pt3dadd( 2.72843, 134.625, -7.98515, 0.28 ) }
    dend_48 { pt3dadd( 2.60746, 135.162, -7.9614, 0.42 ) }
    dend_48 { pt3dadd( 2.51357, 135.712, -7.88173, 0.56 ) }
    dend_48 { pt3dadd( 2.47824, 135.981, -7.81838, 0.56 ) }
    dend_48 { pt3dadd( 2.38825, 137.093, -7.54756, 0.56 ) }
    dend_48 { pt3dadd( 2.37231, 137.707, -7.40272, 0.42 ) }
    dend_48 { pt3dadd( 2.38964, 138.321, -7.31624, 0.56 ) }
    dend_48 { pt3dadd( 2.43402, 138.95, -7.28145, 0.42 ) }
    dend_48 { pt3dadd( 2.48862, 139.501, -7.27743, 0.28 ) }
    dend_48 { pt3dadd( 2.5361, 139.895, -7.30627, 0.14 ) }
    dend_48 { pt3dadd( 2.62437, 140.505, -7.44308, 0.14 ) }
    dend_48 { pt3dadd( 2.78424, 141.624, -7.76926, 0.28 ) }
    dend_48 { pt3dadd( 2.78424, 141.624, -7.76926, 0.42 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 46/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 0.514638, 19.1005, -0.148087, 1.26 ) }
    dend_47 { pt3dadd( 1.35753, 19.6525, -0.767411, 1.26 ) }
    dend_47 { pt3dadd( 1.64432, 19.8137, -0.991893, 1.4 ) }
    dend_47 { pt3dadd( 2.05788, 20.0695, -1.38117, 1.54 ) }
    dend_47 { pt3dadd( 2.41968, 20.3146, -1.73201, 1.4 ) }
    dend_47 { pt3dadd( 3.10162, 20.7811, -2.36185, 1.26 ) }
    dend_47 { pt3dadd( 3.85222, 21.3354, -3.0277, 1.12 ) }
    dend_47 { pt3dadd( 4.21478, 21.605, -3.36402, 0.98 ) }
    dend_47 { pt3dadd( 5.01294, 22.237, -4.12817, 0.84 ) }
    dend_47 { pt3dadd( 5.25866, 22.4448, -4.36281, 0.7 ) }
    dend_47 { pt3dadd( 5.59717, 22.7732, -4.66561, 0.56 ) }
    dend_47 { pt3dadd( 5.97872, 23.1892, -4.94462, 0.7 ) }
    dend_47 { pt3dadd( 6.34809, 23.6477, -5.16976, 0.56 ) }
    dend_47 { pt3dadd( 7.01556, 24.5401, -5.55194, 0.7 ) }
    dend_47 { pt3dadd( 7.17725, 24.7568, -5.63064, 0.7 ) }
    dend_47 { pt3dadd( 7.53016, 25.2426, -5.82033, 0.1 ) }
    dend_47 { pt3dadd( 7.7367, 25.5489, -5.94363, 0.1 ) }
    dend_47 { pt3dadd( 8.16502, 26.1804, -6.18824, 0.1 ) }
    dend_47 { pt3dadd( 8.16502, 26.1804, -6.18824, 0.14 ) }
    dend_47 { pt3dadd( 8.51, 26.9037, -6.18824, 0.1 ) }
    dend_47 { pt3dadd( 8.67348, 27.2572, -6.18824, 0.1 ) }
    dend_47 { pt3dadd( 8.8531, 27.6126, -6.18824, 0.1 ) }
    dend_47 { pt3dadd( 8.99165, 27.8578, -6.18824, 0.1 ) }
    dend_47 { pt3dadd( 9.32735, 28.3808, -6.28943, 0.7 ) }
    dend_47 { pt3dadd( 9.54967, 28.6864, -6.38354, 0.56 ) }
    dend_47 { pt3dadd( 10.0447, 29.28, -6.59509, 0.42 ) }
    dend_47 { pt3dadd( 10.2922, 29.5628, -6.69736, 0.28 ) }
    dend_47 { pt3dadd( 10.7038, 30.012, -6.85646, 0.42 ) }
    dend_47 { pt3dadd( 11.4051, 30.7349, -7.10832, 0.98 ) }
    dend_47 { pt3dadd( 11.8619, 31.1423, -7.25576, 0.84 ) }
    dend_47 { pt3dadd( 12.282, 31.4931, -7.37659, 0.7 ) }
    dend_47 { pt3dadd( 12.5888, 31.7364, -7.44932, 0.56 ) }
    dend_47 { pt3dadd( 13.0726, 32.1202, -7.53128, 0.42 ) }
    dend_47 { pt3dadd( 13.5508, 32.5168, -7.57531, 0.28 ) }
    dend_47 { pt3dadd( 13.9751, 32.8872, -7.57531, 0.42 ) }
    dend_47 { pt3dadd( 14.2704, 33.1544, -7.57531, 0.28 ) }
    dend_47 { pt3dadd( 14.7321, 33.5725, -7.57531, 0.14 ) }
    dend_47 { pt3dadd( 15.2133, 33.9797, -7.57531, 0.28 ) }
    dend_47 { pt3dadd( 15.5219, 34.2314, -7.57531, 0.14 ) }
    dend_47 { pt3dadd( 16.0088, 34.6198, -7.57531, 0.1 ) }
    dend_47 { pt3dadd( 16.4994, 35.0146, -7.57531, 0.14 ) }
    dend_47 { pt3dadd( 16.9398, 35.3613, -7.57531, 0.28 ) }
    dend_47 { pt3dadd( 17.3837, 35.7033, -7.57531, 0.42 ) }
    dend_47 { pt3dadd( 17.8738, 36.0963, -7.61861, 0.28 ) }
    dend_47 { pt3dadd( 18.3368, 36.4931, -7.74582, 0.14 ) }
    dend_47 { pt3dadd( 18.5972, 36.7467, -7.90868, 0.1 ) }
    dend_47 { pt3dadd( 18.8941, 37.0921, -8.3335, 0.1 ) }
    dend_47 { pt3dadd( 19.0032, 37.2351, -8.55022, 0.14 ) }
    dend_47 { pt3dadd( 19.4038, 37.8048, -9.49964, 0.84 ) }
    dend_47 { pt3dadd( 19.7541, 38.3109, -10.3827, 0.98 ) }
    dend_47 { pt3dadd( 20.1092, 38.8168, -11.264, 0.84 ) }
    dend_47 { pt3dadd( 20.8075, 39.7954, -12.9091, 0.84 ) }
    dend_47 { pt3dadd( 21.0346, 40.1064, -13.4073, 0.7 ) }
    dend_47 { pt3dadd( 21.1927, 40.3097, -13.6994, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_47 { pt3dadd( 21.5252, 40.6687, -14.1073, 0.42 ) }
    dend_47 { pt3dadd( 21.9382, 41.0465, -14.3807, 0.28 ) }
    dend_47 { pt3dadd( 22.2507, 41.2817, -14.4555, 0.14 ) }
    dend_47 { pt3dadd( 22.4873, 41.4274, -14.4806, 0.28 ) }
    dend_47 { pt3dadd( 22.7314, 41.5598, -14.5267, 0.7 ) }
    dend_47 { pt3dadd( 23.2198, 41.8074, -14.6466, 0.56 ) }
    dend_47 { pt3dadd( 23.6986, 42.0497, -14.7826, 0.42 ) }
    dend_47 { pt3dadd( 24.1753, 42.3057, -14.9285, 0.28 ) }
    dend_47 { pt3dadd( 25.1071, 42.8603, -15.3045, 0.28 ) }
    dend_47 { pt3dadd( 25.4078, 43.0645, -15.4445, 0.56 ) }
    dend_47 { pt3dadd( 25.8588, 43.4102, -15.7157, 0.42 ) }
    dend_47 { pt3dadd( 26.2787, 43.7683, -16.0046, 0.28 ) }
    dend_47 { pt3dadd( 26.5381, 44.0111, -16.1951, 0.42 ) }
    dend_47 { pt3dadd( 27.2818, 44.7517, -16.7302, 0.56 ) }
    dend_47 { pt3dadd( 27.68, 45.158, -16.9839, 0.56 ) }
    dend_47 { pt3dadd( 28.4388, 45.9318, -17.4551, 0.56 ) }
    dend_47 { pt3dadd( 28.847, 46.339, -17.6908, 0.56 ) }
    dend_47 { pt3dadd( 29.11, 46.607, -17.8235, 0.7 ) }
    dend_47 { pt3dadd( 29.5256, 47.042, -17.985, 0.56 ) }
    dend_47 { pt3dadd( 29.934, 47.5034, -18.1177, 0.42 ) }
    dend_47 { pt3dadd( 30.1806, 47.8043, -18.2025, 0.28 ) }
    dend_47 { pt3dadd( 30.5141, 48.2331, -18.3512, 0.28 ) }
    dend_47 { pt3dadd( 30.8668, 48.6952, -18.5665, 0.1 ) }
    dend_47 { pt3dadd( 31.084, 48.9736, -18.7505, 0.1 ) }
    dend_47 { pt3dadd( 31.7438, 49.8254, -19.4342, 0.14 ) }
    dend_47 { pt3dadd( 31.9466, 50.0821, -19.6613, 0.28 ) }
    dend_47 { pt3dadd( 32.5692, 50.8128, -20.3442, 0.42 ) }
    dend_47 { pt3dadd( 32.9093, 51.1703, -20.7244, 0.28 ) }
    dend_47 { pt3dadd( 33.5299, 51.7084, -21.3605, 0.28 ) }
    dend_47 { pt3dadd( 33.7914, 51.8988, -21.5928, 0.56 ) }
    dend_47 { pt3dadd( 34.2505, 52.1714, -21.9137, 0.42 ) }
    dend_47 { pt3dadd( 34.6954, 52.3971, -22.169, 0.28 ) }
    dend_47 { pt3dadd( 35.6619, 52.8645, -22.5748, 0.14 ) }
    dend_47 { pt3dadd( 36.142, 53.1017, -22.7399, 0.28 ) }
    dend_47 { pt3dadd( 36.629, 53.3598, -22.8561, 0.14 ) }
    dend_47 { pt3dadd( 37.0998, 53.6283, -22.9542, 0.1 ) }
    dend_47 { pt3dadd( 37.5623, 53.9282, -23.0696, 0.14 ) }
    dend_47 { pt3dadd( 38.1805, 54.3971, -23.2314, 0.28 ) }
    dend_47 { pt3dadd( 38.4819, 54.6476, -23.3021, 0.14 ) }
    dend_47 { pt3dadd( 38.9374, 55.0527, -23.4303, 0.1 ) }
    dend_47 { pt3dadd( 39.2268, 55.3116, -23.5187, 0.1 ) }
    dend_47 { pt3dadd( 40.0874, 56.0713, -23.7839, 0.14 ) }
    dend_47 { pt3dadd( 40.558, 56.4559, -23.9201, 0.28 ) }
    dend_47 { pt3dadd( 41.0029, 56.7826, -24.0323, 0.42 ) }
    dend_47 { pt3dadd( 41.5067, 57.1341, -24.1349, 0.56 ) }
    dend_47 { pt3dadd( 41.9695, 57.4424, -24.205, 0.42 ) }
    dend_47 { pt3dadd( 42.4923, 57.7826, -24.2916, 0.28 ) }
    dend_47 { pt3dadd( 42.9563, 58.089, -24.3612, 0.14 ) }
    dend_47 { pt3dadd( 43.4571, 58.4392, -24.5129, 0.28 ) }
    dend_47 { pt3dadd( 43.926, 58.7949, -24.717, 0.42 ) }
    dend_47 { pt3dadd( 44.124, 58.9629, -24.8259, 0.56 ) }
    dend_47 { pt3dadd( 44.9014, 59.7005, -25.3155, 0.7 ) }
    dend_47 { pt3dadd( 45.2977, 60.0978, -25.5859, 0.84 ) }
    dend_47 { pt3dadd( 45.9569, 60.8106, -26.0548, 0.7 ) }
    dend_47 { pt3dadd( 46.341, 61.2261, -26.3152, 0.7 ) }
    dend_47 { pt3dadd( 46.7465, 61.6472, -26.5492, 0.56 ) }
    dend_47 { pt3dadd( 47.1777, 62.06, -26.7271, 0.42 ) }
    dend_47 { pt3dadd( 47.3928, 62.2367, -26.7696, 0.28 ) }
    dend_47 { pt3dadd( 47.7164, 62.4666, -26.8014, 0.1 ) }
    dend_47 { pt3dadd( 48.1966, 62.7556, -26.8014, 0.1 ) }
    dend_47 { pt3dadd( 48.6959, 63.0101, -26.8014, 0.1 ) }
    dend_47 { pt3dadd( 49.2063, 63.2442, -26.7572, 0.1 ) }
    dend_47 { pt3dadd( 49.7092, 63.4794, -26.6809, 0.14 ) }
    dend_47 { pt3dadd( 50.2687, 63.7471, -26.5721, 0.28 ) }
    dend_47 { pt3dadd( 50.7567, 63.9793, -26.4236, 0.28 ) }
    dend_47 { pt3dadd( 51.2348, 64.2118, -26.2378, 0.28 ) }
    dend_47 { pt3dadd( 52.2204, 64.6884, -25.8026, 0.28 ) }
    dend_47 { pt3dadd( 52.7358, 64.9416, -25.5612, 0.42 ) }
    dend_47 { pt3dadd( 53.1972, 65.1763, -25.3392, 0.28 ) }
    dend_47 { pt3dadd( 54.1309, 65.6688, -24.9045, 0.14 ) }
    dend_47 { pt3dadd( 54.5896, 65.9327, -24.7119, 0.1 ) }
    dend_47 { pt3dadd( 55.0471, 66.2178, -24.5586, 0.14 ) }
    dend_47 { pt3dadd( 55.5558, 66.5604, -24.4495, 0.28 ) }
    dend_47 { pt3dadd( 55.8722, 66.7966, -24.3979, 0.42 ) }
    dend_47 { pt3dadd( 56.3532, 67.2017, -24.354, 0.28 ) }
    dend_47 { pt3dadd( 56.8148, 67.6275, -24.3995, 0.28 ) }
    dend_47 { pt3dadd( 57.2602, 68.0557, -24.479, 0.42 ) }
    dend_47 { pt3dadd( 57.5458, 68.3246, -24.5474, 0.56 ) }
    dend_47 { pt3dadd( 57.9972, 68.734, -24.6766, 0.7 ) }
    dend_47 { pt3dadd( 58.4543, 69.1326, -24.8186, 0.7 ) }
    dend_47 { pt3dadd( 59.3264, 69.8784, -25.101, 0.84 ) }
    dend_47 { pt3dadd( 59.534, 70.0529, -25.1659, 0.98 ) }
    dend_47 { pt3dadd( 59.9575, 70.4049, -25.2843, 0.7 ) }
    dend_47 { pt3dadd( 60.2644, 70.6489, -25.3539, 0.56 ) }
    dend_47 { pt3dadd( 60.7572, 71.0214, -25.4339, 0.42 ) }
    dend_47 { pt3dadd( 61.2649, 71.3798, -25.4768, 0.28 ) }
    dend_47 { pt3dadd( 61.79, 71.7374, -25.4308, 0.14 ) }
    dend_47 { pt3dadd( 62.2995, 72.0872, -25.3528, 0.1 ) }
    dend_47 { pt3dadd( 62.7576, 72.3958, -25.2579, 0.14 ) }
    dend_47 { pt3dadd( 63.2057, 72.7006, -25.1448, 0.28 ) }
    dend_47 { pt3dadd( 63.6485, 73.0175, -25.012, 0.42 ) }
    dend_47 { pt3dadd( 64.5687, 73.7248, -24.7896, 0.56 ) }
    dend_47 { pt3dadd( 64.8654, 73.98, -24.7399, 0.56 ) }
    dend_47 { pt3dadd( 65.0586, 74.1708, -24.7556, 0.56 ) }
    dend_47 { pt3dadd( 65.4706, 74.6146, -24.8966, 0.56 ) }
    dend_47 { pt3dadd( 65.721, 74.8925, -25.033, 0.42 ) }
    dend_47 { pt3dadd( 66.4596, 75.6696, -25.5215, 0.28 ) }
    dend_47 { pt3dadd( 66.7143, 75.9165, -25.7024, 0.14 ) }
    dend_47 { pt3dadd( 67.5226, 76.615, -26.2085, 0.1 ) }
    dend_47 { pt3dadd( 67.9283, 76.9252, -26.4223, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_47 { pt3dadd( 68.4236, 77.2433, -26.6259, 0.14 ) }
    dend_47 { pt3dadd( 68.9072, 77.5139, -26.7267, 0.28 ) }
    dend_47 { pt3dadd( 69.4672, 77.7866, -26.7259, 0.42 ) }
    dend_47 { pt3dadd( 69.9795, 78.0066, -26.6687, 0.56 ) }
    dend_47 { pt3dadd( 70.4898, 78.2163, -26.5555, 0.42 ) }
    dend_47 { pt3dadd( 70.9992, 78.4321, -26.466, 0.28 ) }
    dend_47 { pt3dadd( 72.0417, 78.8948, -26.3381, 0.14 ) }
    dend_47 { pt3dadd( 72.5428, 79.1455, -26.3504, 0.28 ) }
    dend_47 { pt3dadd( 73.0184, 79.4166, -26.4328, 0.42 ) }
    dend_47 { pt3dadd( 73.3347, 79.6297, -26.5336, 0.56 ) }
    dend_47 { pt3dadd( 74.2172, 80.3123, -26.9229, 0.42 ) }
    dend_47 { pt3dadd( 74.6444, 80.6723, -27.1985, 0.28 ) }
    dend_47 { pt3dadd( 75.3914, 81.3514, -27.8058, 0.14 ) }
    dend_47 { pt3dadd( 75.6364, 81.587, -28.0134, 0.1 ) }
    dend_47 { pt3dadd( 76.0208, 81.9651, -28.3253, 0.1 ) }
    dend_47 { pt3dadd( 76.426, 82.3557, -28.6075, 0.1 ) }
    dend_47 { pt3dadd( 77.1187, 83.0325, -28.9817, 0.14 ) }
    dend_47 { pt3dadd( 77.3827, 83.2924, -29.1279, 0.1 ) }
    dend_47 { pt3dadd( 77.7938, 83.7211, -29.3389, 0.1 ) }
    dend_47 { pt3dadd( 78.196, 84.156, -29.5522, 0.1 ) }
    dend_47 { pt3dadd( 78.5717, 84.5892, -29.7955, 0.1 ) }
    dend_47 { pt3dadd( 78.7967, 84.8759, -29.9561, 0.14 ) }
    dend_47 { pt3dadd( 79.4434, 85.7531, -30.4037, 0.28 ) }
    dend_47 { pt3dadd( 79.7599, 86.2196, -30.6884, 0.14 ) }
    dend_47 { pt3dadd( 80.0444, 86.6803, -30.9963, 0.1 ) }
    dend_47 { pt3dadd( 80.4939, 87.4911, -31.5432, 0.1 ) }
    dend_47 { pt3dadd( 80.7376, 87.9529, -31.8771, 0.1 ) }
    dend_47 { pt3dadd( 80.9763, 88.4294, -32.2138, 0.1 ) }
    dend_47 { pt3dadd( 81.4138, 89.3501, -32.8115, 0.14 ) }
    dend_47 { pt3dadd( 81.5585, 89.654, -33.0244, 0.28 ) }
    dend_47 { pt3dadd( 81.7794, 90.1312, -33.3561, 0.42 ) }
    dend_47 { pt3dadd( 82.2195, 91.0604, -33.9385, 0.28 ) }
    dend_47 { pt3dadd( 82.4576, 91.5483, -34.2376, 0.14 ) }
    dend_47 { pt3dadd( 82.616, 91.8536, -34.4384, 0.1 ) }
    dend_47 { pt3dadd( 83.1595, 92.8267, -35.0596, 0.14 ) }
    dend_47 { pt3dadd( 83.333, 93.1264, -35.2563, 0.28 ) }
    dend_47 { pt3dadd( 83.6827, 93.7249, -35.6304, 0.42 ) }
    dend_47 { pt3dadd( 83.8687, 94.0418, -35.7963, 0.56 ) }
    dend_47 { pt3dadd( 84.3743, 94.8981, -36.2046, 0.56 ) }
    dend_47 { pt3dadd( 84.6708, 95.4177, -36.4069, 0.84 ) }
    dend_47 { pt3dadd( 84.8648, 95.744, -36.5271, 0.7 ) }
    dend_47 { pt3dadd( 85.1869, 96.2327, -36.7311, 0.56 ) }
    dend_47 { pt3dadd( 85.5469, 96.7058, -36.9407, 0.42 ) }
    dend_47 { pt3dadd( 85.9377, 97.1602, -37.134, 0.56 ) }
    dend_47 { pt3dadd( 86.2092, 97.4334, -37.2352, 0.7 ) }
    dend_47 { pt3dadd( 87.0847, 98.1086, -37.5379, 0.7 ) }
    dend_47 { pt3dadd( 87.5487, 98.389, -37.68, 0.7 ) }
    dend_47 { pt3dadd( 88.0463, 98.6196, -37.8081, 0.84 ) }
    dend_47 { pt3dadd( 88.2983, 98.7208, -37.8827, 1.26 ) }
    dend_47 { pt3dadd( 88.7984, 98.8974, -38.0314, 1.12 ) }
    dend_47 { pt3dadd( 89.3099, 99.0856, -38.1733, 0.98 ) }
    dend_47 { pt3dadd( 89.8146, 99.2985, -38.2918, 0.84 ) }
    dend_47 { pt3dadd( 90.3108, 99.5265, -38.4177, 0.7 ) }
    dend_47 { pt3dadd( 91.3383, 100.047, -38.6824, 0.56 ) }
    dend_47 { pt3dadd( 91.8167, 100.313, -38.8007, 0.42 ) }
    dend_47 { pt3dadd( 92.346, 100.631, -38.9249, 0.28 ) }
    dend_47 { pt3dadd( 92.8679, 100.952, -39.0372, 0.14 ) }
    dend_47 { pt3dadd( 93.3298, 101.259, -39.1196, 0.1 ) }
    dend_47 { pt3dadd( 93.8338, 101.622, -39.2196, 0.1 ) }
    dend_47 { pt3dadd( 94.3005, 102.009, -39.363, 0.14 ) }
    dend_47 { pt3dadd( 94.4838, 102.194, -39.4699, 0.28 ) }
    dend_47 { pt3dadd( 94.6399, 102.387, -39.6037, 0.42 ) }
    dend_47 { pt3dadd( 94.9355, 102.826, -39.9258, 0.7 ) }
    dend_47 { pt3dadd( 95.3719, 103.596, -40.5385, 0.56 ) }
    dend_47 { pt3dadd( 95.8123, 104.449, -41.2298, 0.56 ) }
    dend_47 { pt3dadd( 95.9608, 104.731, -41.4538, 0.42 ) }
    dend_47 { pt3dadd( 96.2882, 105.313, -41.8805, 0.28 ) }
    dend_47 { pt3dadd( 96.4724, 105.609, -42.0727, 0.14 ) }
    dend_47 { pt3dadd( 97.1405, 106.556, -42.5994, 0.1 ) }
    dend_47 { pt3dadd( 97.3758, 106.856, -42.7156, 0.1 ) }
    dend_47 { pt3dadd( 97.7309, 107.274, -42.8286, 0.1 ) }
    dend_47 { pt3dadd( 98.1373, 107.743, -42.9364, 0.1 ) }
    dend_47 { pt3dadd( 98.5487, 108.204, -43.0157, 0.1 ) }
    dend_47 { pt3dadd( 98.819, 108.502, -43.0439, 0.14 ) }
    dend_47 { pt3dadd( 99.2352, 108.963, -43.0863, 0.28 ) }
    dend_47 { pt3dadd( 99.7514, 109.55, -43.1832, 0.14 ) }
    dend_47 { pt3dadd( 100.011, 109.845, -43.2492, 0.1 ) }
    dend_47 { pt3dadd( 100.423, 110.296, -43.3723, 0.14 ) }
    dend_47 { pt3dadd( 100.855, 110.744, -43.509, 0.1 ) }
    dend_47 { pt3dadd( 101.605, 111.475, -43.7419, 0.1 ) }
    dend_47 { pt3dadd( 102.058, 111.89, -43.8788, 0.1 ) }
    dend_47 { pt3dadd( 102.479, 112.241, -43.9961, 0.1 ) }
    dend_47 { pt3dadd( 102.955, 112.625, -44.112, 0.1 ) }
    dend_47 { pt3dadd( 103.443, 113.013, -44.203, 0.1 ) }
    dend_47 { pt3dadd( 103.929, 113.399, -44.2529, 0.14 ) }
    dend_47 { pt3dadd( 104.149, 113.575, -44.2529, 0.28 ) }
    dend_47 { pt3dadd( 104.364, 113.757, -44.2529, 0.42 ) }
    dend_47 { pt3dadd( 104.653, 114.019, -44.2529, 0.56 ) }
    dend_47 { pt3dadd( 105.099, 114.46, -44.3052, 0.42 ) }
    dend_47 { pt3dadd( 105.516, 114.914, -44.3975, 0.28 ) }
    dend_47 { pt3dadd( 105.904, 115.386, -44.5156, 0.14 ) }
    dend_47 { pt3dadd( 106.135, 115.705, -44.5996, 0.1 ) }
    dend_47 { pt3dadd( 106.468, 116.214, -44.7364, 0.1 ) }
    dend_47 { pt3dadd( 107.049, 117.208, -45.0008, 0.1 ) }
    dend_47 { pt3dadd( 107.219, 117.549, -45.0856, 0.1 ) }
    dend_47 { pt3dadd( 107.535, 118.253, -45.3001, 0.1 ) }
    dend_47 { pt3dadd( 107.779, 118.792, -45.4839, 0.1 ) }
    dend_47 { pt3dadd( 107.95, 119.131, -45.6052, 0.1 ) }
    dend_47 { pt3dadd( 108.236, 119.635, -45.8291, 0.1 ) }
    dend_47 { pt3dadd( 108.548, 120.101, -46.1164, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_47 { pt3dadd( 109.051, 120.745, -46.7575, 0.1 ) }
    dend_47 { pt3dadd( 109.307, 121.02, -47.1737, 0.1 ) }
    dend_47 { pt3dadd( 109.564, 121.261, -47.6129, 0.1 ) }
    dend_47 { pt3dadd( 110.07, 121.683, -48.4602, 0.1 ) }
    dend_47 { pt3dadd( 110.605, 122.088, -49.3021, 0.14 ) }
    dend_47 { pt3dadd( 111.232, 122.53, -50.1957, 0.1 ) }
    dend_47 { pt3dadd( 111.838, 122.97, -50.9156, 0.1 ) }
    dend_47 { pt3dadd( 112.239, 123.258, -51.3085, 0.1 ) }
    dend_47 { pt3dadd( 112.654, 123.535, -51.5477, 0.1 ) }
    dend_47 { pt3dadd( 113.192, 123.847, -51.5674, 0.1 ) }
    dend_47 { pt3dadd( 113.673, 124.108, -51.4312, 0.1 ) }
    dend_47 { pt3dadd( 114.643, 124.61, -50.9909, 0.1 ) }
    dend_47 { pt3dadd( 115.098, 124.836, -50.7538, 0.1 ) }
    dend_47 { pt3dadd( 116.043, 125.276, -50.2733, 0.1 ) }
    dend_47 { pt3dadd( 116.275, 125.381, -50.1591, 0.1 ) }
    dend_47 { pt3dadd( 116.803, 125.606, -49.902, 0.1 ) }
    dend_47 { pt3dadd( 117.283, 125.808, -49.6931, 0.1 ) }
    dend_47 { pt3dadd( 117.79, 126.008, -49.5543, 0.1 ) }
    dend_47 { pt3dadd( 118.301, 126.216, -49.4523, 0.1 ) }
    dend_47 { pt3dadd( 118.301, 126.216, -49.4523, 0.14 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 20/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.84445, -55.8351, 6.41051, 0.98 ) }
    dend_16 { pt3dadd( 4.10765, -56.3221, 6.41051, 0.98 ) }
    dend_16 { pt3dadd( 4.3854, -56.8797, 6.41051, 0.84 ) }
    dend_16 { pt3dadd( 4.62201, -57.3908, 6.41051, 0.98 ) }
    dend_16 { pt3dadd( 4.86996, -57.9622, 6.41051, 1.12 ) }
    dend_16 { pt3dadd( 4.97711, -58.2226, 6.41051, 1.68 ) }
    dend_16 { pt3dadd( 5.18234, -58.7441, 6.41051, 1.54 ) }
    dend_16 { pt3dadd( 5.3624, -59.2749, 6.41051, 1.4 ) }
    dend_16 { pt3dadd( 5.51621, -59.8167, 6.41051, 1.26 ) }
    dend_16 { pt3dadd( 5.65379, -60.36, 6.41051, 1.12 ) }
    dend_16 { pt3dadd( 5.76616, -60.9104, 6.45092, 1.26 ) }
    dend_16 { pt3dadd( 5.86544, -61.4477, 6.52049, 1.12 ) }
    dend_16 { pt3dadd( 5.96809, -62.0503, 6.67159, 0.98 ) }
    dend_16 { pt3dadd( 6.05368, -62.5743, 6.85096, 0.84 ) }
    dend_16 { pt3dadd( 6.13487, -63.0885, 7.06582, 0.7 ) }
    dend_16 { pt3dadd( 6.30074, -64.1392, 7.5709, 0.84 ) }
    dend_16 { pt3dadd( 6.38313, -64.6332, 7.82852, 0.84 ) }
    dend_16 { pt3dadd( 6.57225, -65.6547, 8.31323, 0.7 ) }
    dend_16 { pt3dadd( 6.68385, -66.1668, 8.51166, 0.84 ) }
    dend_16 { pt3dadd( 6.68385, -66.1668, 8.51166, 0.98 ) }
    dend_16 { pt3dadd( 6.76383, -66.4264, 8.52539, 1.12 ) }
    dend_16 { pt3dadd( 6.95122, -66.9572, 8.5058, 0.98 ) }
    dend_16 { pt3dadd( 7.3414, -68.0343, 8.46506, 0.84 ) }
    dend_16 { pt3dadd( 7.53382, -68.56, 8.43825, 0.7 ) }
    dend_16 { pt3dadd( 7.76142, -69.1471, 8.44487, 0.56 ) }
    dend_16 { pt3dadd( 7.96917, -69.6676, 8.43687, 0.7 ) }
    dend_16 { pt3dadd( 8.39655, -70.7135, 8.23573, 0.84 ) }
    dend_16 { pt3dadd( 8.60617, -71.2175, 8.10854, 0.98 ) }
    dend_16 { pt3dadd( 8.81481, -71.7223, 8.01812, 0.84 ) }
    dend_16 { pt3dadd( 9.04701, -72.3049, 7.95526, 0.98 ) }
    dend_16 { pt3dadd( 9.40523, -73.2768, 7.92263, 1.12 ) }
    dend_16 { pt3dadd( 10.0904, -75.1755, 7.97993, 0.98 ) }
    dend_16 { pt3dadd( 10.4429, -76.1521, 7.94358, 0.84 ) }
    dend_16 { pt3dadd( 10.8111, -77.2163, 8.15785, 0.84 ) }
    dend_16 { pt3dadd( 11.0938, -78.1236, 8.80143, 0.98 ) }
    dend_16 { pt3dadd( 11.2011, -78.4986, 9.20384, 0.84 ) }
    dend_16 { pt3dadd( 11.3038, -78.857, 9.62597, 0.98 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 57/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.84445, -55.8351, 6.41051, 1.82 ) }
    dend_15 { pt3dadd( 3.23589, -56.7238, 6.88783, 1.82 ) }
    dend_15 { pt3dadd( 2.93767, -57.2063, 7.14524, 1.68 ) }
    dend_15 { pt3dadd( 2.76361, -57.5042, 7.34405, 1.54 ) }
    dend_15 { pt3dadd( 2.44107, -58.104, 7.74959, 1.4 ) }
    dend_15 { pt3dadd( 2.32543, -58.3191, 7.88978, 1.26 ) }
    dend_15 { pt3dadd( 1.81042, -59.2159, 8.45421, 0.1 ) }
    dend_15 { pt3dadd( 1.53037, -59.7057, 8.73381, 0.1 ) }
    dend_15 { pt3dadd( 1.02007, -60.5261, 9.21231, 0.1 ) }
    dend_15 { pt3dadd( 0.708942, -60.9913, 9.47876, 0.14 ) }
    dend_15 { pt3dadd( 0.360587, -61.4462, 9.72309, 0.28 ) }
    dend_15 { pt3dadd( -0.00121133, -61.8423, 9.89455, 0.42 ) }
    dend_15 { pt3dadd( -0.286467, -62.1116, 9.96329, 0.28 ) }
    dend_15 { pt3dadd( -0.724036, -62.4567, 10.0226, 0.14 ) }
    dend_15 { pt3dadd( -0.954128, -62.6169, 10.0492, 0.28 ) }
    dend_15 { pt3dadd( -1.40063, -62.907, 10.224, 0.56 ) }
    dend_15 { pt3dadd( -1.7892, -63.2076, 10.4993, 0.56 ) }
    dend_15 { pt3dadd( -1.7892, -63.2076, 10.4993, 0.56 ) }
    dend_15 { pt3dadd( -1.7892, -63.2076, 10.4993, 0.56 ) }
    dend_15 { pt3dadd( -2.30792, -63.853, 11.3374, 0.56 ) }
    dend_15 { pt3dadd( -2.75323, -64.4671, 12.1011, 0.42 ) }
    dend_15 { pt3dadd( -2.98253, -64.8535, 12.5308, 0.28 ) }
    dend_15 { pt3dadd( -3.38574, -65.6629, 13.2916, 0.42 ) }
    dend_15 { pt3dadd( -3.51574, -65.9576, 13.5105, 0.28 ) }
    dend_15 { pt3dadd( -3.60374, -66.1917, 13.64, 0.42 ) }
    dend_15 { pt3dadd( -3.71538, -66.5594, 13.7617, 0.7 ) }
    dend_15 { pt3dadd( -3.8617, -67.1422, 13.9138, 0.56 ) }
    dend_15 { pt3dadd( -3.9679, -67.7442, 14.0723, 0.42 ) }
    dend_15 { pt3dadd( -4.00732, -68.3303, 14.2702, 0.28 ) }
    dend_15 { pt3dadd( -4.00414, -68.5857, 14.3888, 0.14 ) }
    dend_15 { pt3dadd( -4.00414, -68.5857, 14.3888, 0.28 ) }
    dend_15 { pt3dadd( -3.86368, -69.4772, 14.9019, 0.1 ) }
    dend_15 { pt3dadd( -3.74645, -69.9527, 15.18, 0.14 ) }
    dend_15 { pt3dadd( -3.44733, -70.9158, 15.7251, 0.1 ) }
    dend_15 { pt3dadd( -3.26975, -71.3931, 15.9657, 0.1 ) }
    dend_15 { pt3dadd( -3.07599, -71.8805, 16.1632, 0.1 ) }
    dend_15 { pt3dadd( -2.86129, -72.3707, 16.3048, 0.1 ) }
    dend_15 { pt3dadd( -2.59526, -72.9358, 16.3896, 0.1 ) }
    dend_15 { pt3dadd( -2.46611, -73.1852, 16.4102, 0.28 ) }
    dend_15 { pt3dadd( -2.16768, -73.732, 16.4102, 0.14 ) }
    dend_15 { pt3dadd( -1.89178, -74.2087, 16.4102, 0.1 ) }
    dend_15 { pt3dadd( -1.56916, -74.758, 16.4102, 0.1 ) }
    dend_15 { pt3dadd( -1.28694, -75.231, 16.4102, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_15 { pt3dadd( -0.958279, -75.7749, 16.3655, 0.14 ) }
    dend_15 { pt3dadd( -0.680765, -76.2459, 16.2982, 0.1 ) }
    dend_15 { pt3dadd( -0.391476, -76.7875, 16.1936, 0.14 ) }
    dend_15 { pt3dadd( -0.149976, -77.2834, 16.0796, 0.1 ) }
    dend_15 { pt3dadd( 0.0765154, -77.8463, 15.9389, 0.1 ) }
    dend_15 { pt3dadd( 0.444312, -78.9387, 15.6608, 0.1 ) }
    dend_15 { pt3dadd( 0.543669, -79.3096, 15.5705, 0.28 ) }
    dend_15 { pt3dadd( 0.676905, -79.9084, 15.4284, 0.14 ) }
    dend_15 { pt3dadd( 0.765931, -80.448, 15.3062, 0.1 ) }
    dend_15 { pt3dadd( 0.841977, -81.0525, 15.192, 0.1 ) }
    dend_15 { pt3dadd( 0.886908, -81.6073, 15.1268, 0.1 ) }
    dend_15 { pt3dadd( 0.933955, -82.1686, 15.1268, 0.14 ) }
    dend_15 { pt3dadd( 0.977903, -82.4467, 15.1268, 0.28 ) }
    dend_15 { pt3dadd( 1.03854, -82.7217, 15.1268, 0.28 ) }
    dend_15 { pt3dadd( 1.17698, -83.2676, 15.1268, 0.42 ) }
    dend_15 { pt3dadd( 1.25401, -83.5357, 15.1268, 0.42 ) }
    dend_15 { pt3dadd( 1.40686, -84.0678, 15.1268, 0.28 ) }
    dend_15 { pt3dadd( 1.54739, -84.6104, 15.1268, 0.14 ) }
    dend_15 { pt3dadd( 1.68079, -85.1575, 15.1268, 0.1 ) }
    dend_15 { pt3dadd( 1.79717, -85.7058, 15.1268, 0.14 ) }
    dend_15 { pt3dadd( 1.90113, -86.2593, 15.1268, 0.1 ) }
    dend_15 { pt3dadd( 1.9853, -86.812, 15.0877, 0.1 ) }
    dend_15 { pt3dadd( 2.06188, -87.4221, 15.0097, 0.1 ) }
    dend_15 { pt3dadd( 2.12231, -87.9713, 14.9157, 0.1 ) }
    dend_15 { pt3dadd( 2.18707, -88.587, 14.7913, 0.1 ) }
    dend_15 { pt3dadd( 2.23566, -89.1315, 14.7035, 0.1 ) }
    dend_15 { pt3dadd( 2.31483, -90.304, 14.5698, 0.1 ) }
    dend_15 { pt3dadd( 2.33985, -90.8655, 14.5349, 0.1 ) }
    dend_15 { pt3dadd( 2.35236, -91.4258, 14.5312, 0.1 ) }
    dend_15 { pt3dadd( 2.34329, -91.9787, 14.5584, 0.14 ) }
    dend_15 { pt3dadd( 2.3053, -93.0485, 14.6708, 0.1 ) }
    dend_15 { pt3dadd( 2.27355, -93.6713, 14.7705, 0.1 ) }
    dend_15 { pt3dadd( 2.23283, -94.2652, 14.9432, 0.14 ) }
    dend_15 { pt3dadd( 2.18344, -94.8644, 15.1364, 0.1 ) }
    dend_15 { pt3dadd( 2.13257, -95.4365, 15.3694, 0.1 ) }
    dend_15 { pt3dadd( 2.11569, -95.6909, 15.4826, 0.14 ) }
    dend_15 { pt3dadd( 2.10831, -96.2071, 15.7077, 0.28 ) }
    dend_15 { pt3dadd( 2.13559, -97.1723, 16.1834, 0.1 ) }
    dend_15 { pt3dadd( 2.1658, -97.6559, 16.4453, 0.1 ) }
    dend_15 { pt3dadd( 2.26835, -98.6844, 17.0181, 0.1 ) }
    dend_15 { pt3dadd( 2.33362, -99.1767, 17.2779, 0.1 ) }
    dend_15 { pt3dadd( 2.40752, -99.6779, 17.5175, 0.1 ) }
    dend_15 { pt3dadd( 2.45114, -99.9296, 17.6371, 0.14 ) }
    dend_15 { pt3dadd( 2.45114, -99.9296, 17.6371, 0.28 ) }
    dend_15 { pt3dadd( 2.57173, -100.409, 17.8858, 0.28 ) }
    dend_15 { pt3dadd( 2.70779, -100.883, 18.1517, 0.28 ) }
    dend_15 { pt3dadd( 2.70779, -100.883, 18.1517, 0.42 ) }
    dend_15 { pt3dadd( 2.98752, -101.693, 18.7395, 0.1 ) }
    dend_15 { pt3dadd( 3.13731, -102.12, 19.0702, 0.1 ) }
    dend_15 { pt3dadd( 3.44259, -102.975, 19.7721, 0.1 ) }
    dend_15 { pt3dadd( 3.58993, -103.374, 20.1371, 0.1 ) }
    dend_15 { pt3dadd( 3.69588, -103.65, 20.4037, 0.1 ) }
    dend_15 { pt3dadd( 3.69588, -103.65, 20.4037, 0.1 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 53/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.883515, -32.3095, 0.228391, 0.56 ) }
    dend_5 { pt3dadd( -1.159, -32.5826, -0.176099, 0.56 ) }
    dend_5 { pt3dadd( -1.48449, -32.8777, -0.627168, 0.42 ) }
    dend_5 { pt3dadd( -1.81561, -33.1486, -1.07994, 0.28 ) }
    dend_5 { pt3dadd( -2.46421, -33.6096, -1.94874, 0.7 ) }
    dend_5 { pt3dadd( -3.06008, -33.9133, -2.79211, 0.84 ) }
    dend_5 { pt3dadd( -3.63434, -33.998, -3.69856, 0.98 ) }
    dend_5 { pt3dadd( -4.0895, -33.8217, -4.73727, 1.12 ) }
    dend_5 { pt3dadd( -4.31076, -33.6471, -5.30241, 1.26 ) }
    dend_5 { pt3dadd( -4.51209, -33.451, -5.79045, 1.12 ) }
    dend_5 { pt3dadd( -4.94378, -33.0372, -6.64002, 0.98 ) }
    dend_5 { pt3dadd( -5.50359, -32.6513, -7.60213, 0.84 ) }
    dend_5 { pt3dadd( -5.99519, -32.4141, -8.44003, 0.7 ) }
    dend_5 { pt3dadd( -6.2798, -32.3256, -8.91789, 0.56 ) }
    dend_5 { pt3dadd( -6.57291, -32.2648, -9.39171, 0.56 ) }
    dend_5 { pt3dadd( -6.86126, -32.1982, -9.8596, 0.56 ) }
    dend_5 { pt3dadd( -7.39549, -32.0042, -10.7721, 0.7 ) }
    dend_5 { pt3dadd( -7.50927, -31.9408, -11.0187, 0.84 ) }
    dend_5 { pt3dadd( -7.75752, -31.7679, -11.5717, 1.26 ) }
    dend_5 { pt3dadd( -8.18931, -31.4436, -12.5791, 1.12 ) }
    dend_5 { pt3dadd( -8.63297, -31.0922, -13.6169, 0.98 ) }
    dend_5 { pt3dadd( -9.03036, -30.7734, -14.5193, 1.12 ) }
    dend_5 { pt3dadd( -9.47272, -30.469, -15.3629, 0.98 ) }
    dend_5 { pt3dadd( -10.0411, -30.2123, -16.3192, 0.84 ) }
    dend_5 { pt3dadd( -10.5888, -30.4299, -16.5427, 0.7 ) }
    dend_5 { pt3dadd( -11.6095, -31.0131, -16.6635, 0.56 ) }
    dend_5 { pt3dadd( -11.9426, -31.1889, -16.7628, 0.42 ) }
    dend_5 { pt3dadd( -12.3609, -31.2727, -17.2259, 0.56 ) }
    dend_5 { pt3dadd( -12.4913, -31.2678, -17.4755, 0.56 ) }
    dend_5 { pt3dadd( -12.9604, -31.2012, -18.5581, 0.56 ) }
    dend_5 { pt3dadd( -13.2913, -31.0933, -19.5751, 0.42 ) }
    dend_5 { pt3dadd( -13.5482, -30.9605, -20.612, 0.28 ) }
    dend_5 { pt3dadd( -13.7574, -30.816, -21.6546, 0.14 ) }
    dend_5 { pt3dadd( -13.9392, -30.6802, -22.6285, 0.1 ) }
    dend_5 { pt3dadd( -14.1446, -30.5463, -23.6766, 0.84 ) }
    dend_5 { pt3dadd( -14.5517, -30.3562, -25.6457, 0.7 ) }
    dend_5 { pt3dadd( -15.0122, -30.2144, -27.6071, 0.56 ) }
    dend_5 { pt3dadd( -15.2712, -30.181, -28.5724, 0.7 ) }
    dend_5 { pt3dadd( -15.4296, -30.1803, -29.1, 0.56 ) }
    dend_5 { pt3dadd( -15.6235, -30.1896, -29.6287, 0.56 ) }
    dend_5 { pt3dadd( -16.1119, -30.23, -30.665, 0.42 ) }
    dend_5 { pt3dadd( -16.4483, -30.2495, -31.1163, 0.28 ) }
    dend_5 { pt3dadd( -17.2639, -30.1859, -31.8108, 0.42 ) }
    dend_5 { pt3dadd( -17.4761, -30.1111, -31.9757, 0.56 ) }
    dend_5 { pt3dadd( -17.9114, -29.8374, -32.3403, 0.28 ) }
    dend_5 { pt3dadd( -18.3276, -29.4968, -32.6677, 0.14 ) }
    dend_5 { pt3dadd( -18.7369, -29.1431, -32.9767, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_5 { pt3dadd( -19.1664, -28.8116, -33.2962, 0.42 ) }
    dend_5 { pt3dadd( -19.9799, -28.3182, -33.9356, 0.56 ) }
    dend_5 { pt3dadd( -19.9799, -28.3182, -33.9356, 0.7 ) }
    dend_5 { pt3dadd( -20.3668, -28.2994, -34.3445, 2.1 ) }
    dend_5 { pt3dadd( -21.1, -28.4688, -35.2092, 1.96 ) }
    dend_5 { pt3dadd( -21.4112, -28.6372, -35.635, 1.82 ) }
    dend_5 { pt3dadd( -21.9694, -29.0226, -36.421, 1.68 ) }
    dend_5 { pt3dadd( -22.3067, -29.2996, -36.885, 0.7 ) }
    dend_5 { pt3dadd( -22.8967, -29.8302, -37.7536, 0.56 ) }
    dend_5 { pt3dadd( -23.0727, -30.0224, -38.0547, 0.56 ) }
    dend_5 { pt3dadd( -23.5257, -30.6751, -38.9238, 0.42 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 11/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.883515, -32.3095, 0.228391, 0.7 ) }
    dend_2 { pt3dadd( -0.896498, -32.8726, 0.228391, 0.7 ) }
    dend_2 { pt3dadd( -0.905807, -33.2669, 0.228391, 0.56 ) }
    dend_2 { pt3dadd( -0.908169, -33.8966, 0.228391, 0.42 ) }
    dend_2 { pt3dadd( -0.900458, -34.4543, 0.173912, 0.28 ) }
    dend_2 { pt3dadd( -0.882504, -35.0724, 0.130416, 0.14 ) }
    dend_2 { pt3dadd( -0.855173, -35.632, 0.143533, 0.1 ) }
    dend_2 { pt3dadd( -0.804186, -36.2562, 0.208796, 0.1 ) }
    dend_2 { pt3dadd( -0.743411, -36.7956, 0.302411, 0.1 ) }
    dend_2 { pt3dadd( -0.607074, -37.7988, 0.535402, 0.14 ) }
    dend_2 { pt3dadd( -0.457443, -38.7909, 0.804979, 0.42 ) }
    dend_2 { pt3dadd( -0.264734, -39.8753, 1.12284, 0.28 ) }
    dend_2 { pt3dadd( -0.174796, -40.4062, 1.27825, 0.14 ) }
    dend_2 { pt3dadd( -0.07285, -40.9955, 1.44123, 0.1 ) }
    dend_2 { pt3dadd( 0.0175658, -41.5406, 1.53471, 0.14 ) }
    dend_2 { pt3dadd( 0.107542, -42.0965, 1.54168, 0.1 ) }
    dend_2 { pt3dadd( 0.184506, -42.6358, 1.40977, 0.1 ) }
    dend_2 { pt3dadd( 0.246885, -43.2038, 1.16971, 0.1 ) }
    dend_2 { pt3dadd( 0.29257, -43.7038, 0.920573, 0.1 ) }
    dend_2 { pt3dadd( 0.361571, -44.7124, 0.377371, 0.1 ) }
    dend_2 { pt3dadd( 0.394182, -45.5856, -0.10894, 0.14 ) }
    dend_2 { pt3dadd( 0.398443, -45.9315, -0.306274, 0.56 ) }
    dend_2 { pt3dadd( 0.402193, -46.4789, -0.601029, 0.42 ) }
    dend_2 { pt3dadd( 0.408892, -46.9846, -0.842394, 0.28 ) }
    dend_2 { pt3dadd( 0.413656, -47.5815, -1.04276, 0.42 ) }
    dend_2 { pt3dadd( 0.424067, -47.8614, -1.0725, 0.56 ) }
    dend_2 { pt3dadd( 0.424067, -47.8614, -1.0725, 0.42 ) }
    dend_2 { pt3dadd( 0.518255, -48.4041, -1.0725, 0.84 ) }
    dend_2 { pt3dadd( 0.518255, -48.4041, -1.0725, 0.7 ) }
    dend_2 { pt3dadd( 0.597677, -48.6722, -1.10555, 0.28 ) }
    dend_2 { pt3dadd( 0.777995, -49.192, -1.21262, 0.14 ) }
    dend_2 { pt3dadd( 0.963558, -49.7075, -1.34307, 0.1 ) }
    dend_2 { pt3dadd( 1.15052, -50.2167, -1.48376, 0.1 ) }
    dend_2 { pt3dadd( 1.33958, -50.7263, -1.63148, 0.1 ) }
    dend_2 { pt3dadd( 1.73361, -51.7952, -1.93156, 0.14 ) }
    dend_2 { pt3dadd( 1.82542, -52.0456, -2.02203, 0.28 ) }
    dend_2 { pt3dadd( 1.91423, -52.2882, -2.12719, 0.1 ) }
    dend_2 { pt3dadd( 2.08958, -52.7744, -2.32563, 0.1 ) }
    dend_2 { pt3dadd( 2.27574, -53.2754, -2.49438, 0.1 ) }
    dend_2 { pt3dadd( 2.46829, -53.7937, -2.60154, 0.1 ) }
    dend_2 { pt3dadd( 2.84778, -54.7593, -2.6392, 0.14 ) }
    dend_2 { pt3dadd( 2.84778, -54.7593, -2.6392, 0.1 ) }
    dend_2 { pt3dadd( 3.25998, -55.712, -2.59891, 0.28 ) }
    dend_2 { pt3dadd( 3.50324, -56.2833, -2.5496, 0.14 ) }
    dend_2 { pt3dadd( 3.71463, -56.8015, -2.48591, 0.1 ) }
    dend_2 { pt3dadd( 3.93445, -57.3781, -2.40149, 0.1 ) }
    dend_2 { pt3dadd( 4.02056, -57.6431, -2.36036, 0.14 ) }
    dend_2 { pt3dadd( 4.11764, -58.0281, -2.32957, 0.28 ) }
    dend_2 { pt3dadd( 4.22151, -58.569, -2.32957, 0.14 ) }
    dend_2 { pt3dadd( 4.28702, -59.1284, -2.32957, 0.1 ) }
    dend_2 { pt3dadd( 4.32126, -59.6878, -2.32957, 0.14 ) }
    dend_2 { pt3dadd( 4.32648, -60.3175, -2.32957, 0.1 ) }
    dend_2 { pt3dadd( 4.32239, -60.9391, -2.32957, 0.1 ) }
    dend_2 { pt3dadd( 4.32231, -61.5023, -2.32957, 0.1 ) }
    dend_2 { pt3dadd( 4.31633, -62.1327, -2.29198, 0.1 ) }
    dend_2 { pt3dadd( 4.31671, -62.7478, -2.21591, 0.1 ) }
    dend_2 { pt3dadd( 4.33998, -63.3681, -2.09955, 0.14 ) }
    dend_2 { pt3dadd( 4.36909, -63.6402, -2.03297, 0.28 ) }
    dend_2 { pt3dadd( 4.41557, -63.9075, -1.95765, 0.42 ) }
    dend_2 { pt3dadd( 4.63594, -64.8813, -1.67324, 0.56 ) }
    dend_2 { pt3dadd( 4.7884, -65.4149, -1.57673, 0.42 ) }
    dend_2 { pt3dadd( 4.95519, -65.9388, -1.54343, 0.28 ) }
    dend_2 { pt3dadd( 5.12621, -66.4701, -1.61833, 0.14 ) }
    dend_2 { pt3dadd( 5.28708, -66.9972, -1.72061, 0.28 ) }
    dend_2 { pt3dadd( 5.44073, -67.5317, -1.80906, 0.14 ) }
    dend_2 { pt3dadd( 5.75373, -68.6193, -1.99185, 0.1 ) }
    dend_2 { pt3dadd( 5.91926, -69.1551, -2.04349, 0.1 ) }
    dend_2 { pt3dadd( 6.2746, -70.2399, -2.06236, 0.1 ) }
    dend_2 { pt3dadd( 6.61083, -71.2209, -1.99919, 0.1 ) }
    dend_2 { pt3dadd( 6.98923, -72.2919, -1.84526, 0.1 ) }
    dend_2 { pt3dadd( 7.1864, -72.8075, -1.73318, 0.1 ) }
    dend_2 { pt3dadd( 7.39565, -73.358, -1.5303, 0.14 ) }
    dend_2 { pt3dadd( 7.5786, -73.8476, -1.32819, 0.28 ) }
    dend_2 { pt3dadd( 7.75701, -74.3395, -1.11979, 0.14 ) }
    dend_2 { pt3dadd( 7.93419, -74.8484, -0.965591, 0.1 ) }
    dend_2 { pt3dadd( 8.11443, -75.4347, -0.823529, 0.14 ) }
    dend_2 { pt3dadd( 8.38394, -76.4449, -0.573537, 0.1 ) }
    dend_2 { pt3dadd( 8.50561, -76.9799, -0.446543, 0.1 ) }
    dend_2 { pt3dadd( 8.60956, -77.5186, -0.331935, 0.1 ) }
    dend_2 { pt3dadd( 8.70102, -78.066, -0.235997, 0.1 ) }
    dend_2 { pt3dadd( 8.79269, -78.6761, -0.159163, 0.14 ) }
    dend_2 { pt3dadd( 8.86096, -79.2339, -0.12214, 0.1 ) }
    dend_2 { pt3dadd( 8.93236, -79.7898, -0.12214, 0.1 ) }
    dend_2 { pt3dadd( 9.00704, -80.4137, -0.163305, 0.1 ) }
    dend_2 { pt3dadd( 9.07164, -80.9565, -0.230389, 0.14 ) }
    dend_2 { pt3dadd( 9.14288, -81.5041, -0.326297, 0.28 ) }
    dend_2 { pt3dadd( 9.23807, -82.1124, -0.458443, 0.28 ) }
    dend_2 { pt3dadd( 9.32948, -82.6494, -0.589901, 0.14 ) }
    dend_2 { pt3dadd( 9.52227, -83.6382, -0.843773, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_2 { pt3dadd( 9.58125, -83.8957, -0.908609, 0.56 ) }
    dend_2 { pt3dadd( 9.72102, -84.4132, -1.07238, 0.42 ) }
    dend_2 { pt3dadd( 9.87937, -84.924, -1.24895, 0.28 ) }
    dend_2 { pt3dadd( 10.054, -85.428, -1.42088, 0.14 ) }
    dend_2 { pt3dadd( 10.235, -85.9383, -1.57594, 0.1 ) }
    dend_2 { pt3dadd( 10.4188, -86.4529, -1.70038, 0.1 ) }
    dend_2 { pt3dadd( 10.8073, -87.5311, -1.97373, 0.14 ) }
    dend_2 { pt3dadd( 10.9942, -88.0447, -2.10943, 0.28 ) }
    dend_2 { pt3dadd( 11.1761, -88.5482, -2.23915, 0.14 ) }
    dend_2 { pt3dadd( 11.3677, -89.0531, -2.39919, 0.28 ) }
    dend_2 { pt3dadd( 11.5601, -89.551, -2.56978, 0.42 ) }
    dend_2 { pt3dadd( 11.5601, -89.551, -2.56978, 0.56 ) }
    dend_2 { pt3dadd( 11.6556, -89.789, -2.68623, 0.56 ) }
    dend_2 { pt3dadd( 11.8406, -90.244, -2.95613, 0.42 ) }
    dend_2 { pt3dadd( 12.2197, -91.1869, -3.55926, 0.28 ) }
    dend_2 { pt3dadd( 12.3952, -91.6366, -3.84396, 0.14 ) }
    dend_2 { pt3dadd( 12.7121, -92.4901, -4.41808, 0.1 ) }
    dend_2 { pt3dadd( 12.8271, -92.7928, -4.64998, 0.56 ) }
    dend_2 { pt3dadd( 12.9882, -93.2161, -4.96343, 0.42 ) }
    dend_2 { pt3dadd( 13.1533, -93.6615, -5.26095, 0.56 ) }
    dend_2 { pt3dadd( 13.319, -94.1397, -5.50792, 0.7 ) }
    dend_2 { pt3dadd( 13.6821, -95.1042, -6.00998, 0.56 ) }
    dend_2 { pt3dadd( 14.0539, -95.9809, -6.51167, 0.42 ) }
    dend_2 { pt3dadd( 14.4415, -96.7821, -7.04761, 0.42 ) }
    dend_2 { pt3dadd( 14.6361, -97.1895, -7.37969, 0.56 ) }
    dend_2 { pt3dadd( 14.8198, -97.5882, -7.72805, 0.56 ) }
    dend_2 { pt3dadd( 15.1708, -98.4484, -8.4584, 0.42 ) }
    dend_2 { pt3dadd( 15.4913, -99.3533, -9.14127, 0.28 ) }
    dend_2 { pt3dadd( 15.5594, -99.5776, -9.29737, 0.98 ) }
    dend_2 { pt3dadd( 15.8227, -100.522, -9.95033, 0.84 ) }
    dend_2 { pt3dadd( 15.9411, -100.994, -10.233, 0.7 ) }
    dend_2 { pt3dadd( 16.0651, -101.559, -10.4878, 0.56 ) }
    dend_2 { pt3dadd( 16.1665, -102.096, -10.6247, 0.42 ) }
    dend_2 { pt3dadd( 16.2587, -102.638, -10.6557, 0.28 ) }
    dend_2 { pt3dadd( 16.3586, -103.191, -10.6229, 0.14 ) }
    dend_2 { pt3dadd( 16.4667, -103.733, -10.528, 0.28 ) }
    dend_2 { pt3dadd( 16.5783, -104.273, -10.4159, 0.14 ) }
    dend_2 { pt3dadd( 16.6961, -104.808, -10.2944, 0.1 ) }
    dend_2 { pt3dadd( 16.9411, -105.928, -10.0328, 0.1 ) }
    dend_2 { pt3dadd( 17.0688, -106.46, -9.91127, 0.1 ) }
    dend_2 { pt3dadd( 17.2178, -106.989, -9.7995, 0.1 ) }
    dend_2 { pt3dadd( 17.3873, -107.517, -9.70157, 0.1 ) }
    dend_2 { pt3dadd( 17.5662, -108.042, -9.6251, 0.1 ) }
    dend_2 { pt3dadd( 17.754, -108.561, -9.58172, 0.1 ) }
    dend_2 { pt3dadd( 17.9802, -109.15, -9.58172, 0.1 ) }
    dend_2 { pt3dadd( 18.1992, -109.733, -9.58172, 0.1 ) }
    dend_2 { pt3dadd( 18.2948, -109.998, -9.58172, 0.1 ) }
    dend_2 { pt3dadd( 18.4285, -110.364, -9.58172, 0.84 ) }
    dend_2 { pt3dadd( 18.6184, -110.891, -9.58172, 0.7 ) }
    dend_2 { pt3dadd( 18.8146, -111.419, -9.58172, 0.56 ) }
    dend_2 { pt3dadd( 19.0092, -111.944, -9.58172, 0.42 ) }
    dend_2 { pt3dadd( 19.2068, -112.461, -9.58172, 0.28 ) }
    dend_2 { pt3dadd( 19.4324, -113.048, -9.62781, 0.14 ) }
    dend_2 { pt3dadd( 19.6159, -113.555, -9.74313, 0.1 ) }
    dend_2 { pt3dadd( 19.7786, -114.115, -9.9979, 0.14 ) }
    dend_2 { pt3dadd( 19.8238, -114.343, -10.1397, 0.7 ) }
    dend_2 { pt3dadd( 19.8656, -114.777, -10.4919, 0.56 ) }
    dend_2 { pt3dadd( 19.8815, -115.605, -11.3365, 0.42 ) }
    dend_2 { pt3dadd( 19.8402, -116.389, -12.2126, 0.28 ) }
    dend_2 { pt3dadd( 19.7688, -117.072, -13.0416, 0.14 ) }
    dend_2 { pt3dadd( 19.7121, -117.474, -13.5249, 0.1 ) }
    dend_2 { pt3dadd( 19.6053, -118.248, -14.4049, 0.1 ) }
    dend_2 { pt3dadd( 19.5139, -118.977, -15.1388, 0.1 ) }
    dend_2 { pt3dadd( 19.4775, -119.485, -15.5123, 0.14 ) }
    dend_2 { pt3dadd( 19.4618, -120.575, -15.9555, 0.28 ) }
    dend_2 { pt3dadd( 19.5079, -121.589, -16.1717, 0.1 ) }
    dend_2 { pt3dadd( 19.5585, -122.139, -16.2833, 0.1 ) }
    dend_2 { pt3dadd( 19.7006, -123.245, -16.5513, 0.1 ) }
    dend_2 { pt3dadd( 19.7813, -123.774, -16.7256, 0.1 ) }
    dend_2 { pt3dadd( 19.8713, -124.326, -16.9978, 0.14 ) }
    dend_2 { pt3dadd( 20.0316, -125.296, -17.5903, 0.28 ) }
    dend_2 { pt3dadd( 20.1779, -126.216, -18.2574, 0.42 ) }
    dend_2 { pt3dadd( 20.289, -127.034, -18.8888, 0.56 ) }
    dend_2 { pt3dadd( 20.3165, -127.252, -19.0605, 0.7 ) }
    dend_2 { pt3dadd( 20.3576, -127.573, -19.2766, 0.28 ) }
    dend_2 { pt3dadd( 20.4292, -128.059, -19.5518, 0.14 ) }
    dend_2 { pt3dadd( 20.4928, -128.578, -19.7532, 0.1 ) }
    dend_2 { pt3dadd( 20.5484, -129.174, -19.9162, 0.1 ) }
    dend_2 { pt3dadd( 20.5834, -129.72, -20.0382, 0.1 ) }
    dend_2 { pt3dadd( 20.6017, -130.268, -20.1655, 0.1 ) }
    dend_2 { pt3dadd( 20.603, -131.364, -20.5018, 0.14 ) }
    dend_2 { pt3dadd( 20.5917, -131.739, -20.6353, 0.1 ) }
    dend_2 { pt3dadd( 20.5655, -132.319, -20.859, 0.1 ) }
    dend_2 { pt3dadd( 20.5317, -132.904, -21.0873, 0.1 ) }
    dend_2 { pt3dadd( 20.4932, -133.487, -21.3002, 0.1 ) }
    dend_2 { pt3dadd( 20.4161, -134.588, -21.7239, 0.1 ) }
    dend_2 { pt3dadd( 20.3916, -135.114, -21.9148, 0.14 ) }
    dend_2 { pt3dadd( 20.3917, -135.368, -22.0127, 0.1 ) }
    dend_2 { pt3dadd( 20.4191, -135.956, -22.2421, 0.1 ) }
    dend_2 { pt3dadd( 20.4567, -136.47, -22.4684, 0.1 ) }
    dend_2 { pt3dadd( 20.5627, -137.541, -22.9456, 0.1 ) }
    dend_2 { pt3dadd( 20.6191, -138.042, -23.1962, 0.14 ) }
    dend_2 { pt3dadd( 20.6746, -138.523, -23.4796, 0.28 ) }
    dend_2 { pt3dadd( 20.7457, -138.993, -23.7817, 0.28 ) }
    dend_2 { pt3dadd( 20.9377, -139.957, -24.4291, 0.14 ) }
    dend_2 { pt3dadd( 21.0434, -140.405, -24.7548, 0.1 ) }
    dend_2 { pt3dadd( 21.2679, -141.199, -25.3194, 0.14 ) }
    dend_2 { pt3dadd( 21.3289, -141.42, -25.4778, 0.56 ) }
    dend_2 { pt3dadd( 21.4688, -141.931, -25.818, 0.56 ) }
    dend_2 { pt3dadd( 21.5897, -142.409, -26.0846, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_2 { pt3dadd( 21.8172, -143.454, -26.5013, 0.56 ) }
    dend_2 { pt3dadd( 21.9087, -143.981, -26.6684, 0.42 ) }
    dend_2 { pt3dadd( 21.9824, -144.583, -26.7977, 0.28 ) }
    dend_2 { pt3dadd( 22.0268, -145.133, -26.8961, 0.14 ) }
    dend_2 { pt3dadd( 22.0509, -145.756, -26.9814, 0.1 ) }
    dend_2 { pt3dadd( 22.0704, -146.376, -27.0294, 0.1 ) }
    dend_2 { pt3dadd( 22.0873, -146.657, -27.0294, 0.1 ) }
    dend_2 { pt3dadd( 22.1546, -147.285, -27.0294, 0.1 ) }
    dend_2 { pt3dadd( 22.2622, -147.837, -27.0294, 0.14 ) }
    dend_2 { pt3dadd( 22.3343, -148.107, -27.0294, 0.56 ) }
    dend_2 { pt3dadd( 22.5141, -148.63, -27.0294, 0.42 ) }
    dend_2 { pt3dadd( 22.7405, -149.209, -27.0779, 0.28 ) }
    dend_2 { pt3dadd( 22.9426, -149.729, -27.1537, 0.14 ) }
    dend_2 { pt3dadd( 23.1648, -150.3, -27.2659, 0.1 ) }
    dend_2 { pt3dadd( 23.3401, -150.819, -27.3844, 0.1 ) }
    dend_2 { pt3dadd( 23.4927, -151.346, -27.5122, 0.1 ) }
    dend_2 { pt3dadd( 23.7467, -152.408, -27.8598, 0.1 ) }
    dend_2 { pt3dadd( 23.8172, -152.775, -27.9988, 0.84 ) }
    dend_2 { pt3dadd( 23.9047, -153.282, -28.2029, 0.7 ) }
    dend_2 { pt3dadd( 23.9958, -153.862, -28.4341, 0.56 ) }
    dend_2 { pt3dadd( 24.0842, -154.384, -28.6269, 0.42 ) }
    dend_2 { pt3dadd( 24.3083, -155.456, -28.9655, 0.28 ) }
    dend_2 { pt3dadd( 24.4406, -155.977, -29.0874, 0.14 ) }
    dend_2 { pt3dadd( 24.5988, -156.506, -29.1997, 0.1 ) }
    dend_2 { pt3dadd( 24.7799, -157.027, -29.2944, 0.1 ) }
    dend_2 { pt3dadd( 24.9848, -157.547, -29.3672, 0.1 ) }
    dend_2 { pt3dadd( 25.213, -158.125, -29.4139, 0.1 ) }
    dend_2 { pt3dadd( 25.4176, -158.649, -29.4139, 0.1 ) }
    dend_2 { pt3dadd( 25.605, -159.178, -29.4139, 0.1 ) }
    dend_2 { pt3dadd( 25.7922, -159.772, -29.4139, 0.14 ) }
    dend_2 { pt3dadd( 25.8666, -160.042, -29.4369, 0.28 ) }
    dend_2 { pt3dadd( 25.954, -160.417, -29.4951, 0.28 ) }
    dend_2 { pt3dadd( 26.058, -160.956, -29.6082, 0.14 ) }
    dend_2 { pt3dadd( 26.168, -161.558, -29.7569, 0.1 ) }
    dend_2 { pt3dadd( 26.2639, -162.092, -29.8977, 0.1 ) }
    dend_2 { pt3dadd( 26.4546, -163.179, -30.1972, 0.14 ) }
    dend_2 { pt3dadd( 26.5022, -163.444, -30.2704, 0.28 ) }
    dend_2 { pt3dadd( 26.6083, -163.978, -30.4113, 0.1 ) }
    dend_2 { pt3dadd( 26.7158, -164.514, -30.536, 0.1 ) }
    dend_2 { pt3dadd( 26.8303, -165.046, -30.6816, 0.14 ) }
    dend_2 { pt3dadd( 26.8303, -165.046, -30.6816, 0.28 ) }
    dend_2 { pt3dadd( 26.8889, -165.426, -30.7711, 0.28 ) }
    dend_2 { pt3dadd( 26.9668, -165.964, -30.9157, 0.28 ) }
    dend_2 { pt3dadd( 27.0416, -166.483, -31.1149, 0.42 ) }
    dend_2 { pt3dadd( 27.2024, -167.52, -31.5782, 0.42 ) }
    dend_2 { pt3dadd( 27.2713, -167.863, -31.7699, 0.1 ) }
    dend_2 { pt3dadd( 27.3815, -168.322, -32.0527, 0.1 ) }
    dend_2 { pt3dadd( 27.5098, -168.78, -32.3494, 0.1 ) }
    dend_2 { pt3dadd( 27.8087, -169.709, -32.9543, 0.1 ) }
    dend_2 { pt3dadd( 27.9743, -170.166, -33.2323, 0.1 ) }
    dend_2 { pt3dadd( 28.3893, -171.15, -33.7383, 0.1 ) }
    dend_2 { pt3dadd( 28.4983, -171.383, -33.8471, 0.1 ) }
    dend_2 { pt3dadd( 28.7337, -171.844, -34.0682, 0.1 ) }
    dend_2 { pt3dadd( 29.0067, -172.357, -34.2936, 0.14 ) }
    dend_2 { pt3dadd( 29.2609, -172.831, -34.4592, 0.1 ) }
    dend_2 { pt3dadd( 29.531, -173.353, -34.6672, 0.1 ) }
    dend_2 { pt3dadd( 29.7621, -173.826, -34.8586, 0.1 ) }
    dend_2 { pt3dadd( 30.2465, -174.803, -35.3131, 0.1 ) }
    dend_2 { pt3dadd( 30.479, -175.257, -35.5453, 0.1 ) }
    dend_2 { pt3dadd( 30.7138, -175.701, -35.7795, 0.1 ) }
    dend_2 { pt3dadd( 31.2372, -176.603, -36.2555, 0.14 ) }
    dend_2 { pt3dadd( 31.3766, -176.823, -36.3621, 0.28 ) }
    dend_2 { pt3dadd( 31.5827, -177.119, -36.5094, 0.1 ) }
    dend_2 { pt3dadd( 31.9336, -177.596, -36.7229, 0.1 ) }
    dend_2 { pt3dadd( 32.3039, -178.058, -36.938, 0.1 ) }
    dend_2 { pt3dadd( 32.5495, -178.346, -37.0617, 0.1 ) }
    dend_2 { pt3dadd( 32.9484, -178.799, -37.2157, 0.1 ) }
    dend_2 { pt3dadd( 33.6181, -179.551, -37.473, 0.1 ) }
    dend_2 { pt3dadd( 33.7948, -179.759, -37.5406, 0.1 ) }
    dend_2 { pt3dadd( 34.1717, -180.236, -37.6787, 0.1 ) }
    dend_2 { pt3dadd( 34.53, -180.732, -37.7939, 0.1 ) }
    dend_2 { pt3dadd( 34.8692, -181.256, -37.8777, 0.1 ) }
    dend_2 { pt3dadd( 35.0688, -181.59, -37.8765, 0.14 ) }
    dend_2 { pt3dadd( 35.3372, -182.08, -37.8008, 0.56 ) }
    dend_2 { pt3dadd( 35.5788, -182.575, -37.6994, 0.42 ) }
    dend_2 { pt3dadd( 35.7767, -183.088, -37.5767, 0.28 ) }
    dend_2 { pt3dadd( 35.9365, -183.608, -37.4442, 0.14 ) }
    dend_2 { pt3dadd( 36.1866, -184.599, -37.269, 0.1 ) }
    dend_2 { pt3dadd( 36.3084, -185.146, -37.2587, 0.1 ) }
    dend_2 { pt3dadd( 36.4144, -185.694, -37.3296, 0.1 ) }
    dend_2 { pt3dadd( 36.5052, -186.299, -37.4886, 0.1 ) }
    dend_2 { pt3dadd( 36.5681, -186.815, -37.6778, 0.1 ) }
    dend_2 { pt3dadd( 36.6605, -187.863, -38.1346, 0.1 ) }
    dend_2 { pt3dadd( 36.7351, -188.894, -38.63, 0.1 ) }
    dend_2 { pt3dadd( 36.7512, -189.246, -38.8147, 0.56 ) }
    dend_2 { pt3dadd( 36.7715, -189.794, -39.104, 0.42 ) }
    dend_2 { pt3dadd( 36.795, -190.296, -39.3519, 0.28 ) }
    dend_2 { pt3dadd( 36.8247, -190.877, -39.5938, 0.14 ) }
    dend_2 { pt3dadd( 36.8529, -191.422, -39.7191, 0.1 ) }
    dend_2 { pt3dadd( 36.9355, -192.589, -39.8419, 0.14 ) }
    dend_2 { pt3dadd( 36.9839, -193.147, -39.871, 0.28 ) }
    dend_2 { pt3dadd( 37.039, -193.705, -39.8711, 0.14 ) }
    dend_2 { pt3dadd( 37.0877, -194.265, -39.8418, 0.1 ) }
    dend_2 { pt3dadd( 37.1706, -195.439, -39.7984, 0.1 ) }
    dend_2 { pt3dadd( 37.1882, -196.001, -39.7778, 0.1 ) }
    dend_2 { pt3dadd( 37.1948, -196.632, -39.7469, 0.1 ) }
    dend_2 { pt3dadd( 37.1769, -197.185, -39.7592, 0.1 ) }
    dend_2 { pt3dadd( 37.1314, -197.812, -39.819, 0.1 ) }
    dend_2 { pt3dadd( 37.0137, -198.867, -39.9975, 0.14 ) }
    dend_2 { pt3dadd( 36.9621, -199.242, -40.0876, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 36.8592, -199.781, -40.2036, 0.14 ) }
    dend_2 { pt3dadd( 36.7306, -200.387, -40.3148, 0.28 ) }
    dend_2 { pt3dadd( 36.5912, -200.988, -40.395, 0.42 ) }
    dend_2 { pt3dadd( 36.5092, -201.377, -40.4224, 0.28 ) }
    dend_2 { pt3dadd( 36.3934, -201.986, -40.4224, 0.14 ) }
    dend_2 { pt3dadd( 36.2645, -202.776, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.2259, -203.046, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.1639, -203.672, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.1426, -204.232, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.1626, -204.852, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.2208, -205.409, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.2627, -205.688, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.3076, -205.963, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.4109, -206.517, -40.4224, 0.1 ) }
    dend_2 { pt3dadd( 36.5064, -207.067, -40.4681, 0.14 ) }
    dend_2 { pt3dadd( 36.6014, -207.616, -40.5484, 0.28 ) }
    dend_2 { pt3dadd( 36.6995, -208.22, -40.6618, 0.14 ) }
    dend_2 { pt3dadd( 36.787, -208.764, -40.7764, 0.1 ) }
    dend_2 { pt3dadd( 36.8725, -209.304, -40.902, 0.1 ) }
    dend_2 { pt3dadd( 37.0337, -210.448, -41.124, 0.1 ) }
    dend_2 { pt3dadd( 37.1067, -210.998, -41.2015, 0.1 ) }
    dend_2 { pt3dadd( 37.183, -211.555, -41.2414, 0.1 ) }
    dend_2 { pt3dadd( 37.2576, -212.11, -41.2344, 0.1 ) }
    dend_2 { pt3dadd( 37.2576, -212.11, -41.2344, 0.1 ) }
    dend_2 { pt3dadd( 37.3609, -213.161, -41.0418, 0.1 ) }
    dend_2 { pt3dadd( 37.4132, -213.702, -40.9057, 0.1 ) }
    dend_2 { pt3dadd( 37.4616, -214.25, -40.7851, 0.1 ) }
    dend_2 { pt3dadd( 37.5078, -214.877, -40.7261, 0.1 ) }
    dend_2 { pt3dadd( 37.5502, -215.429, -40.7368, 0.14 ) }
    dend_2 { pt3dadd( 37.6086, -216.054, -40.8065, 0.28 ) }
    dend_2 { pt3dadd( 37.6724, -216.602, -40.9173, 0.42 ) }
    dend_2 { pt3dadd( 37.7319, -217.146, -41.0371, 0.28 ) }
    dend_2 { pt3dadd( 37.8642, -218.287, -41.2956, 0.14 ) }
    dend_2 { pt3dadd( 37.9384, -218.829, -41.4161, 0.1 ) }
    dend_2 { pt3dadd( 38.0192, -219.372, -41.5271, 0.1 ) }
    dend_2 { pt3dadd( 38.1133, -219.919, -41.6223, 0.1 ) }
    dend_2 { pt3dadd( 38.2116, -220.528, -41.7029, 0.1 ) }
    dend_2 { pt3dadd( 38.3013, -221.082, -41.7441, 0.14 ) }
    dend_2 { pt3dadd( 38.3973, -221.634, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 38.4822, -222.191, -41.7441, 0.14 ) }
    dend_2 { pt3dadd( 38.5612, -222.746, -41.7441, 0.28 ) }
    dend_2 { pt3dadd( 38.6166, -223.132, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 38.7039, -223.685, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 38.792, -224.241, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 38.8943, -224.855, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 38.9959, -225.409, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 39.0985, -225.96, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 39.2086, -226.512, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 39.3077, -227.064, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 39.4019, -227.616, -41.7441, 0.1 ) }
    dend_2 { pt3dadd( 39.4957, -228.16, -41.7825, 0.1 ) }
    dend_2 { pt3dadd( 39.5958, -228.779, -41.8618, 0.1 ) }
    dend_2 { pt3dadd( 39.6829, -229.327, -41.9566, 0.1 ) }
    dend_2 { pt3dadd( 39.7809, -229.929, -42.0797, 0.1 ) }
    dend_2 { pt3dadd( 39.8752, -230.47, -42.2011, 0.1 ) }
    dend_2 { pt3dadd( 40.0799, -231.567, -42.4662, 0.1 ) }
    dend_2 { pt3dadd( 40.1909, -232.102, -42.6017, 0.1 ) }
    dend_2 { pt3dadd( 40.319, -232.631, -42.7337, 0.1 ) }
    dend_2 { pt3dadd( 40.4554, -233.155, -42.8507, 0.1 ) }
    dend_2 { pt3dadd( 40.6054, -233.677, -42.9881, 0.1 ) }
    dend_2 { pt3dadd( 40.6054, -233.677, -42.9881, 0.1 ) }
    dend_2 { pt3dadd( 40.6812, -233.942, -43.0486, 0.1 ) }
    dend_2 { pt3dadd( 40.8304, -234.464, -43.1869, 0.1 ) }
    dend_2 { pt3dadd( 40.9632, -234.977, -43.377, 0.1 ) }
    dend_2 { pt3dadd( 41.21, -236.008, -43.8143, 0.1 ) }
    dend_2 { pt3dadd( 41.3252, -236.51, -44.0349, 0.1 ) }
    dend_2 { pt3dadd( 41.4371, -237.009, -44.2468, 0.1 ) }
    dend_2 { pt3dadd( 41.5495, -237.518, -44.4522, 0.1 ) }
    dend_2 { pt3dadd( 41.7876, -238.605, -44.8501, 0.1 ) }
    dend_2 { pt3dadd( 41.9032, -239.13, -45.0086, 0.1 ) }
    dend_2 { pt3dadd( 42.0229, -239.659, -45.1191, 0.1 ) }
    dend_2 { pt3dadd( 42.1494, -240.197, -45.2143, 0.1 ) }
    dend_2 { pt3dadd( 42.284, -240.739, -45.2857, 0.1 ) }
    dend_2 { pt3dadd( 42.4276, -241.279, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 42.5821, -241.818, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 42.7374, -242.359, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 42.8888, -242.889, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 43.044, -243.43, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 43.1982, -243.969, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 43.3535, -244.51, -45.3248, 0.1 ) }
    dend_2 { pt3dadd( 43.5081, -245.049, -45.3248, 0.14 ) }
    dend_2 { pt3dadd( 43.662, -245.587, -45.3643, 0.1 ) }
    dend_2 { pt3dadd( 43.8245, -246.111, -45.4391, 0.14 ) }
    dend_2 { pt3dadd( 43.9972, -246.633, -45.5441, 0.1 ) }
    dend_2 { pt3dadd( 44.0871, -246.893, -45.6072, 0.1 ) }
    dend_2 { pt3dadd( 44.1793, -247.15, -45.676, 0.1 ) }
    dend_2 { pt3dadd( 44.5599, -248.193, -45.9604, 0.1 ) }
    dend_2 { pt3dadd( 44.7826, -248.763, -46.1091, 0.1 ) }
    dend_2 { pt3dadd( 44.9889, -249.269, -46.2306, 0.14 ) }
    dend_2 { pt3dadd( 45.1997, -249.779, -46.3328, 0.1 ) }
    dend_2 { pt3dadd( 45.408, -250.286, -46.4075, 0.1 ) }
    dend_2 { pt3dadd( 45.6158, -250.805, -46.4497, 0.1 ) }
    dend_2 { pt3dadd( 45.8408, -251.391, -46.4966, 0.14 ) }
    dend_2 { pt3dadd( 45.9339, -251.651, -46.5346, 0.56 ) }
    dend_2 { pt3dadd( 46.1176, -252.174, -46.6376, 0.42 ) }
    dend_2 { pt3dadd( 46.279, -252.686, -46.7983, 0.28 ) }
    dend_2 { pt3dadd( 46.4216, -253.193, -46.9971, 0.28 ) }
    dend_2 { pt3dadd( 46.6786, -254.218, -47.4419, 0.42 ) }
    dend_2 { pt3dadd( 46.7831, -254.726, -47.6351, 0.42 ) }
    dend_2 { pt3dadd( 46.8813, -255.252, -47.8014, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 47.0761, -256.384, -48.0791, 0.14 ) }
    dend_2 { pt3dadd( 47.1556, -256.932, -48.1648, 0.1 ) }
    dend_2 { pt3dadd( 47.227, -257.487, -48.1944, 0.1 ) }
    dend_2 { pt3dadd( 47.3485, -258.656, -48.1264, 0.14 ) }
    dend_2 { pt3dadd( 47.3903, -259.212, -48.0733, 0.28 ) }
    dend_2 { pt3dadd( 47.4257, -259.769, -47.9998, 0.14 ) }
    dend_2 { pt3dadd( 47.4679, -260.381, -47.8968, 0.28 ) }
    dend_2 { pt3dadd( 47.4963, -260.939, -47.8275, 0.14 ) }
    dend_2 { pt3dadd( 47.5273, -261.568, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.5669, -262.187, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.608, -262.746, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.6624, -263.306, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.7341, -263.924, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.8049, -264.483, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.8797, -265.038, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 47.9556, -265.593, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.0282, -266.152, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.0987, -266.77, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.1306, -267.049, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.1966, -267.676, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.257, -268.233, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.3136, -268.784, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.3836, -269.411, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.459, -269.969, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.5417, -270.524, -47.7847, 0.1 ) }
    dend_2 { pt3dadd( 48.6247, -271.067, -47.8228, 0.1 ) }
    dend_2 { pt3dadd( 48.7142, -271.685, -47.9017, 0.1 ) }
    dend_2 { pt3dadd( 48.792, -272.232, -47.9988, 0.1 ) }
    dend_2 { pt3dadd( 48.8643, -272.777, -48.1213, 0.1 ) }
    dend_2 { pt3dadd( 48.9235, -273.316, -48.2626, 0.1 ) }
    dend_2 { pt3dadd( 49.0355, -274.442, -48.584, 0.1 ) }
    dend_2 { pt3dadd( 49.0637, -274.708, -48.661, 0.1 ) }
    dend_2 { pt3dadd( 49.0637, -274.708, -48.661, 0.1 ) }
    dend_2 { pt3dadd( 49.1183, -275.094, -48.7464, 0.1 ) }
    dend_2 { pt3dadd( 49.2079, -275.633, -48.83, 0.1 ) }
    dend_2 { pt3dadd( 49.317, -276.182, -48.8721, 0.1 ) }
    dend_2 { pt3dadd( 49.4325, -276.731, -48.8238, 0.1 ) }
    dend_2 { pt3dadd( 49.5462, -277.274, -48.7448, 0.1 ) }
    dend_2 { pt3dadd( 49.6621, -277.813, -48.6471, 0.1 ) }
    dend_2 { pt3dadd( 49.7826, -278.351, -48.5313, 0.1 ) }
    dend_2 { pt3dadd( 49.8854, -278.876, -48.4015, 0.1 ) }
    dend_2 { pt3dadd( 50.0574, -280.007, -48.1017, 0.1 ) }
    dend_2 { pt3dadd( 50.1215, -280.553, -47.9948, 0.1 ) }
    dend_2 { pt3dadd( 50.1611, -281.112, -47.9363, 0.1 ) }
    dend_2 { pt3dadd( 50.1611, -281.112, -47.9363, 0.1 ) }
    dend_2 { pt3dadd( 50.174, -281.498, -48.014, 0.1 ) }
    dend_2 { pt3dadd( 50.1985, -282.088, -48.2325, 0.1 ) }
    dend_2 { pt3dadd( 50.2392, -283.112, -48.7464, 0.1 ) }
    dend_2 { pt3dadd( 50.2602, -283.661, -49.0341, 0.1 ) }
    dend_2 { pt3dadd( 50.2773, -284.16, -49.2874, 0.1 ) }
    dend_2 { pt3dadd( 50.3322, -285.202, -49.7658, 0.14 ) }
    dend_2 { pt3dadd( 50.3482, -285.456, -49.8867, 0.1 ) }
    dend_2 { pt3dadd( 50.365, -285.815, -50.0488, 0.1 ) }
    dend_2 { pt3dadd( 50.3809, -286.342, -50.2478, 0.1 ) }
    dend_2 { pt3dadd( 50.39, -286.937, -50.4594, 0.1 ) }
    dend_2 { pt3dadd( 50.3804, -287.476, -50.6232, 0.1 ) }
    dend_2 { pt3dadd( 50.3509, -288.622, -50.8896, 0.1 ) }
    dend_2 { pt3dadd( 50.3295, -289.237, -51.0257, 0.1 ) }
    dend_2 { pt3dadd( 50.3153, -289.786, -51.1376, 0.1 ) }
    dend_2 { pt3dadd( 50.3024, -290.396, -51.2452, 0.1 ) }
    dend_2 { pt3dadd( 50.2917, -291.021, -51.331, 0.1 ) }
    dend_2 { pt3dadd( 50.2861, -291.573, -51.3742, 0.14 ) }
    dend_2 { pt3dadd( 50.2951, -291.971, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.3156, -292.531, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.3436, -293.091, -51.3742, 0.14 ) }
    dend_2 { pt3dadd( 50.3764, -293.479, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.4356, -294.039, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.4896, -294.597, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.5433, -295.225, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.5662, -295.775, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.5628, -296.335, -51.3742, 0.1 ) }
    dend_2 { pt3dadd( 50.5628, -296.335, -51.3742, 0.14 ) }
    dend_2 { pt3dadd( 50.5173, -296.729, -51.3382, 0.84 ) }
    dend_2 { pt3dadd( 50.4172, -297.333, -51.2394, 0.7 ) }
    dend_2 { pt3dadd( 50.3114, -297.942, -51.1106, 0.56 ) }
    dend_2 { pt3dadd( 50.2409, -298.324, -51.0214, 0.42 ) }
    dend_2 { pt3dadd( 50.1429, -298.919, -50.8792, 0.28 ) }
    dend_2 { pt3dadd( 50.0058, -300.064, -50.6148, 0.14 ) }
    dend_2 { pt3dadd( 49.9678, -300.668, -50.4809, 0.1 ) }
    dend_2 { pt3dadd( 49.955, -301.217, -50.3696, 0.1 ) }
    dend_2 { pt3dadd( 49.9548, -301.837, -50.2613, 0.1 ) }
    dend_2 { pt3dadd( 49.9608, -302.383, -50.1898, 0.1 ) }
    dend_2 { pt3dadd( 49.9743, -302.942, -50.1489, 0.1 ) }
    dend_2 { pt3dadd( 49.9862, -303.505, -50.1489, 0.1 ) }
    dend_2 { pt3dadd( 49.9952, -304.135, -50.1924, 0.1 ) }
    dend_2 { pt3dadd( 49.9885, -304.521, -50.2427, 0.1 ) }
    dend_2 { pt3dadd( 49.9598, -305.14, -50.3562, 0.1 ) }
    dend_2 { pt3dadd( 49.9102, -305.685, -50.4764, 0.1 ) }
    dend_2 { pt3dadd( 49.8348, -306.283, -50.6201, 0.1 ) }
    dend_2 { pt3dadd( 49.7073, -307.284, -50.8655, 0.1 ) }
    dend_2 { pt3dadd( 49.663, -307.67, -50.9554, 0.1 ) }
    dend_2 { pt3dadd( 49.5924, -308.272, -51.0827, 0.1 ) }
    dend_2 { pt3dadd( 49.5214, -308.89, -51.1927, 0.1 ) }
    dend_2 { pt3dadd( 49.4494, -309.493, -51.3174, 0.1 ) }
    dend_2 { pt3dadd( 49.3992, -310.039, -51.4311, 0.1 ) }
    dend_2 { pt3dadd( 49.3554, -310.657, -51.5424, 0.1 ) }
    dend_2 { pt3dadd( 49.3384, -311.038, -51.623, 0.1 ) }
    dend_2 { pt3dadd( 49.3267, -311.58, -51.7667, 0.1 ) }
    dend_2 { pt3dadd( 49.3325, -312.525, -52.0921, 0.1 ) }
    dend_2 { pt3dadd( 49.3483, -313.034, -52.3276, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 49.3483, -313.034, -52.3276, 0.42 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 1/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -12.2991, 40.587, -6.08348, 0.84 ) }
    dend_63 { pt3dadd( -12.6104, 41.6678, -5.85505, 0.84 ) }
    dend_63 { pt3dadd( -12.7403, 42.1955, -5.76491, 0.7 ) }
    dend_63 { pt3dadd( -12.8638, 42.7382, -5.67871, 0.56 ) }
    dend_63 { pt3dadd( -12.9812, 43.2808, -5.60237, 0.42 ) }
    dend_63 { pt3dadd( -13.0824, 43.831, -5.53674, 0.28 ) }
    dend_63 { pt3dadd( -13.1749, 44.381, -5.48178, 0.42 ) }
    dend_63 { pt3dadd( -13.2193, 44.7679, -5.48178, 0.56 ) }
    dend_63 { pt3dadd( -13.2385, 45.0393, -5.48178, 0.7 ) }
    dend_63 { pt3dadd( -13.264, 45.5923, -5.48178, 0.84 ) }
    dend_63 { pt3dadd( -13.2748, 46.2198, -5.41125, 0.7 ) }
    dend_63 { pt3dadd( -13.2698, 46.7728, -5.30451, 0.56 ) }
    dend_63 { pt3dadd( -13.2603, 47.0439, -5.23957, 0.7 ) }
    dend_63 { pt3dadd( -13.2273, 47.5844, -5.09528, 0.56 ) }
    dend_63 { pt3dadd( -13.1855, 48.1258, -4.9457, 0.7 ) }
    dend_63 { pt3dadd( -13.0821, 49.278, -4.69982, 0.84 ) }
    dend_63 { pt3dadd( -13.0402, 49.8958, -4.67198, 0.7 ) }
    dend_63 { pt3dadd( -13.0263, 50.295, -4.72643, 0.56 ) }
    dend_63 { pt3dadd( -13.0238, 50.566, -4.8028, 0.7 ) }
    dend_63 { pt3dadd( -13.0125, 51.0762, -5.0176, 0.98 ) }
    dend_63 { pt3dadd( -13.0026, 52.1222, -5.48634, 0.98 ) }
    dend_63 { pt3dadd( -13.0134, 53.1663, -5.96273, 0.84 ) }
    dend_63 { pt3dadd( -13.0212, 53.7076, -6.10792, 0.84 ) }
    dend_63 { pt3dadd( -13.0184, 54.1052, -6.13051, 0.7 ) }
    dend_63 { pt3dadd( -12.9954, 54.4901, -6.07598, 0.56 ) }
    dend_63 { pt3dadd( -12.9092, 55.5693, -5.6992, 0.7 ) }
    dend_63 { pt3dadd( -12.8829, 56.1291, -5.41195, 0.84 ) }
    dend_63 { pt3dadd( -12.898, 57.1716, -4.8647, 0.98 ) }
    dend_63 { pt3dadd( -12.9424, 57.5345, -4.70693, 0.84 ) }
    dend_63 { pt3dadd( -13.0233, 57.7929, -4.63979, 0.7 ) }
    dend_63 { pt3dadd( -13.3838, 58.4952, -4.71016, 0.1 ) }
    dend_63 { pt3dadd( -13.7026, 58.9987, -4.91356, 0.14 ) }
    dend_63 { pt3dadd( -14.3177, 59.8887, -5.37997, 0.28 ) }
    dend_63 { pt3dadd( -14.5238, 60.1806, -5.55576, 0.42 ) }
    dend_63 { pt3dadd( -14.849, 60.6557, -5.79348, 0.56 ) }
    dend_63 { pt3dadd( -15.4223, 61.5846, -6.14827, 0.56 ) }
    dend_63 { pt3dadd( -15.6656, 62.0746, -6.26972, 0.42 ) }
    dend_63 { pt3dadd( -15.8789, 62.5906, -6.31782, 0.56 ) }
    dend_63 { pt3dadd( -15.9715, 62.8561, -6.30172, 0.56 ) }
    dend_63 { pt3dadd( -16.3306, 63.939, -6.17683, 0.56 ) }
    dend_63 { pt3dadd( -16.4999, 64.4556, -6.08844, 0.56 ) }
    dend_63 { pt3dadd( -16.6772, 64.9746, -5.97324, 0.56 ) }
    dend_63 { pt3dadd( -16.8611, 65.4981, -5.8766, 0.7 ) }
    dend_63 { pt3dadd( -17.0475, 66.0219, -5.80616, 0.84 ) }
    dend_63 { pt3dadd( -17.2583, 66.6137, -5.76248, 0.98 ) }
    dend_63 { pt3dadd( -17.4453, 67.142, -5.76248, 1.12 ) }
    dend_63 { pt3dadd( -17.6229, 67.6765, -5.76248, 0.98 ) }
    dend_63 { pt3dadd( -17.7976, 68.209, -5.76248, 0.84 ) }
    dend_63 { pt3dadd( -17.9641, 68.7341, -5.76248, 0.7 ) }
    dend_63 { pt3dadd( -18.123, 69.2744, -5.76248, 0.84 ) }
    dend_63 { pt3dadd( -18.2568, 69.8186, -5.76248, 0.7 ) }
    dend_63 { pt3dadd( -18.3212, 70.0928, -5.76248, 0.84 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 53/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -12.2991, 40.587, -6.08348, 0.7 ) }
    dend_62 { pt3dadd( -12.382, 40.6324, -7.1557, 0.7 ) }
    dend_62 { pt3dadd( -12.5329, 40.7351, -9.14736, 0.56 ) }
    dend_62 { pt3dadd( -12.6744, 40.8411, -11.179, 0.42 ) }
    dend_62 { pt3dadd( -12.8227, 40.9534, -13.1703, 0.28 ) }
    dend_62 { pt3dadd( -12.9727, 41.0776, -15.1608, 0.14 ) }
    dend_62 { pt3dadd( -13.1238, 41.2175, -17.1879, 0.1 ) }
    dend_62 { pt3dadd( -13.259, 41.3616, -19.198, 0.1 ) }
    dend_62 { pt3dadd( -13.3994, 41.518, -21.1869, 0.1 ) }
    dend_62 { pt3dadd( -13.4735, 41.6088, -22.2587, 0.1 ) }
    dend_62 { pt3dadd( -13.6191, 41.8004, -24.2623, 0.1 ) }
    dend_62 { pt3dadd( -13.7633, 42.0097, -26.266, 0.1 ) }
    dend_62 { pt3dadd( -13.8952, 42.2277, -28.2497, 0.1 ) }
    dend_62 { pt3dadd( -14.0284, 42.4658, -30.2716, 0.1 ) }
    dend_62 { pt3dadd( -14.1545, 42.72, -32.27, 0.1 ) }
    dend_62 { pt3dadd( -14.2117, 42.8491, -33.2985, 0.1 ) }
    dend_62 { pt3dadd( -14.3466, 43.1192, -35.2955, 0.1 ) }
    dend_62 { pt3dadd( -14.5146, 43.4193, -37.2858, 0.1 ) }
    dend_62 { pt3dadd( -14.6245, 43.5966, -38.3028, 0.1 ) }
    dend_62 { pt3dadd( -14.8838, 43.9867, -40.2674, 0.14 ) }
    dend_62 { pt3dadd( -14.934, 44.0473, -40.5378, 0.28 ) }
    dend_62 { pt3dadd( -15.2278, 44.3437, -41.7494, 0.1 ) }
    dend_62 { pt3dadd( -15.3355, 44.442, -42.1106, 0.1 ) }
    dend_62 { pt3dadd( -16.3011, 44.8861, -41.5941, 0.1 ) }
    dend_62 { pt3dadd( -16.7861, 45.1012, -41.2677, 0.1 ) }
    dend_62 { pt3dadd( -17.2526, 45.3045, -40.8938, 0.14 ) }
    dend_62 { pt3dadd( -17.2526, 45.3045, -40.8938, 0.28 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 80/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -20.8379, 37.6231, -25.814, 0.7 ) }
    dend_56 { pt3dadd( -21.2805, 38.0824, -26.2762, 0.7 ) }
    dend_56 { pt3dadd( -21.9661, 38.822, -26.8923, 0.56 ) }
    dend_56 { pt3dadd( -22.1933, 39.078, -27.0782, 0.42 ) }
    dend_56 { pt3dadd( -22.8837, 39.8741, -27.613, 0.28 ) }
    dend_56 { pt3dadd( -23.223, 40.256, -27.8434, 0.14 ) }
    dend_56 { pt3dadd( -23.6001, 40.6805, -28.1156, 0.1 ) }
    dend_56 { pt3dadd( -23.9652, 41.1131, -28.3756, 0.1 ) }
    dend_56 { pt3dadd( -24.1358, 41.315, -28.4727, 0.14 ) }
    dend_56 { pt3dadd( -24.1358, 41.315, -28.4727, 0.28 ) }
    dend_56 { pt3dadd( -24.5946, 41.9025, -28.7421, 0.42 ) }
    dend_56 { pt3dadd( -25.1699, 42.6547, -29.1692, 0.42 ) }
    dend_56 { pt3dadd( -25.4878, 43.1109, -29.45, 0.28 ) }
    dend_56 { pt3dadd( -25.7817, 43.5808, -29.7344, 0.14 ) }
    dend_56 { pt3dadd( -26.0373, 44.0093, -29.9956, 0.14 ) }
    dend_56 { pt3dadd( -26.5265, 44.8914, -30.5303, 0.28 ) }
    dend_56 { pt3dadd( -26.5265, 44.8914, -30.5303, 0.42 ) }
    dend_56 { pt3dadd( -26.7517, 45.3654, -30.7349, 0.56 ) }
    dend_56 { pt3dadd( -26.9577, 45.849, -30.9292, 0.42 ) }
    dend_56 { pt3dadd( -27.2018, 46.333, -31.0716, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_56 { pt3dadd( -27.355, 46.5671, -31.1031, 0.42 ) }
    dend_56 { pt3dadd( -27.7414, 47.0651, -31.1031, 0.28 ) }
    dend_56 { pt3dadd( -28.0991, 47.4877, -31.1031, 0.28 ) }
    dend_56 { pt3dadd( -28.4801, 47.8987, -31.1031, 0.42 ) }
    dend_56 { pt3dadd( -29.027, 48.4691, -31.1641, 0.42 ) }
    dend_56 { pt3dadd( -29.4588, 48.92, -31.2465, 0.28 ) }
    dend_56 { pt3dadd( -29.727, 49.1944, -31.3134, 0.14 ) }
    dend_56 { pt3dadd( -30.1579, 49.6156, -31.4962, 0.1 ) }
    dend_56 { pt3dadd( -30.4245, 49.86, -31.6407, 0.1 ) }
    dend_56 { pt3dadd( -31.0639, 50.4483, -32.1358, 0.1 ) }
    dend_56 { pt3dadd( -31.4253, 50.8171, -32.4961, 0.28 ) }
    dend_56 { pt3dadd( -31.7574, 51.177, -32.8811, 0.42 ) }
    dend_56 { pt3dadd( -32.361, 51.8741, -33.6207, 0.28 ) }
    dend_56 { pt3dadd( -32.5572, 52.1205, -33.8644, 0.14 ) }
    dend_56 { pt3dadd( -33.0518, 52.7898, -34.4863, 0.28 ) }
    dend_56 { pt3dadd( -33.3119, 53.1702, -34.788, 1.12 ) }
    dend_56 { pt3dadd( -33.3119, 53.1702, -34.788, 0.98 ) }
    dend_56 { pt3dadd( -33.6077, 53.6653, -35.0585, 0.1 ) }
    dend_56 { pt3dadd( -33.867, 54.1296, -35.2021, 0.1 ) }
    dend_56 { pt3dadd( -34.4245, 55.1521, -35.4048, 0.1 ) }
    dend_56 { pt3dadd( -34.6889, 55.6346, -35.4662, 0.1 ) }
    dend_56 { pt3dadd( -34.9803, 56.1787, -35.5498, 0.1 ) }
    dend_56 { pt3dadd( -35.4788, 57.1987, -35.7177, 0.14 ) }
    dend_56 { pt3dadd( -35.578, 57.4467, -35.7982, 0.28 ) }
    dend_56 { pt3dadd( -35.6569, 57.69, -35.9096, 0.42 ) }
    dend_56 { pt3dadd( -35.9538, 58.7173, -36.4125, 0.28 ) }
    dend_56 { pt3dadd( -36.0908, 59.1844, -36.6958, 0.28 ) }
    dend_56 { pt3dadd( -36.2118, 59.6268, -37.0179, 0.14 ) }
    dend_56 { pt3dadd( -36.4571, 60.4935, -37.727, 0.1 ) }
    dend_56 { pt3dadd( -36.5913, 60.9319, -38.0541, 0.1 ) }
    dend_56 { pt3dadd( -36.7605, 61.4395, -38.3729, 0.1 ) }
    dend_56 { pt3dadd( -36.8536, 61.6814, -38.4829, 0.1 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 32/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -20.8379, 37.6231, -25.814, 0.84 ) }
    dend_53 { pt3dadd( -20.6399, 37.7239, -26.8263, 0.84 ) }
    dend_53 { pt3dadd( -20.1218, 37.8817, -28.772, 0.98 ) }
    dend_53 { pt3dadd( -19.4418, 37.9945, -30.6705, 0.84 ) }
    dend_53 { pt3dadd( -19.3293, 38.0134, -30.928, 0.28 ) }
    dend_53 { pt3dadd( -19.0581, 38.0724, -31.4952, 0.14 ) }
    dend_53 { pt3dadd( -18.8019, 38.1386, -32.0557, 0.1 ) }
    dend_53 { pt3dadd( -18.6091, 38.1791, -32.4018, 0.1 ) }
    dend_53 { pt3dadd( -18.2458, 38.2501, -32.9135, 0.14 ) }
    dend_53 { pt3dadd( -17.5725, 38.4279, -33.8682, 0.28 ) }
    dend_53 { pt3dadd( -17.0593, 38.6143, -34.7921, 0.42 ) }
    dend_53 { pt3dadd( -16.3143, 39.033, -36.6221, 0.56 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 44/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 2.78424, 141.624, -7.76926, 0.1 ) }
    dend_50 { pt3dadd( 2.26953, 142.649, -7.49824, 0.1 ) }
    dend_50 { pt3dadd( 2.0148, 143.137, -7.39287, 0.1 ) }
    dend_50 { pt3dadd( 1.71034, 143.68, -7.29867, 0.1 ) }
    dend_50 { pt3dadd( 1.43436, 144.162, -7.22801, 0.14 ) }
    dend_50 { pt3dadd( 1.15253, 144.645, -7.16188, 0.28 ) }
    dend_50 { pt3dadd( 1.15253, 144.645, -7.16188, 0.42 ) }
    dend_50 { pt3dadd( 0.81336, 145.168, -7.16188, 0.1 ) }
    dend_50 { pt3dadd( 0.461407, 145.678, -7.22721, 0.14 ) }
    dend_50 { pt3dadd( 0.299756, 145.902, -7.28172, 0.28 ) }
    dend_50 { pt3dadd( 0.144383, 146.115, -7.38017, 0.42 ) }
    dend_50 { pt3dadd( -0.185319, 146.574, -7.65732, 0.56 ) }
    dend_50 { pt3dadd( -0.500038, 147.044, -7.91924, 0.42 ) }
    dend_50 { pt3dadd( -1.02152, 147.953, -8.38349, 0.28 ) }
    dend_50 { pt3dadd( -1.26766, 148.486, -8.61119, 0.14 ) }
    dend_50 { pt3dadd( -1.64099, 149.54, -8.86223, 0.28 ) }
    dend_50 { pt3dadd( -1.64099, 149.54, -8.86223, 0.42 ) }
    dend_50 { pt3dadd( -1.7392, 150.677, -8.73563, 0.1 ) }
    dend_50 { pt3dadd( -1.71943, 151.288, -8.57697, 0.1 ) }
    dend_50 { pt3dadd( -1.65596, 151.861, -8.34989, 0.1 ) }
    dend_50 { pt3dadd( -1.47694, 152.919, -7.85272, 0.1 ) }
    dend_50 { pt3dadd( -1.4094, 153.254, -7.666, 0.1 ) }
    dend_50 { pt3dadd( -1.28594, 153.802, -7.38192, 0.14 ) }
    dend_50 { pt3dadd( -1.18528, 154.154, -7.23526, 0.28 ) }
    dend_50 { pt3dadd( -1.11217, 154.389, -7.12444, 0.42 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 69/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 2.78424, 141.624, -7.76926, 0.28 ) }
    dend_49 { pt3dadd( 3.15385, 142.72, -7.52017, 0.28 ) }
    dend_49 { pt3dadd( 3.30877, 143.311, -7.41572, 0.14 ) }
    dend_49 { pt3dadd( 3.38283, 143.703, -7.36073, 0.1 ) }
    dend_49 { pt3dadd( 3.47796, 144.48, -7.27298, 0.14 ) }
    dend_49 { pt3dadd( 3.51315, 144.875, -7.23683, 0.1 ) }
    dend_49 { pt3dadd( 3.5547, 145.432, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.56824, 145.995, -7.19486, 0.14 ) }
    dend_49 { pt3dadd( 3.56214, 146.546, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.53388, 147.109, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.49087, 147.739, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.46299, 148.358, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.46417, 148.918, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.4943, 149.547, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.54771, 150.096, -7.19486, 0.14 ) }
    dend_49 { pt3dadd( 3.62444, 150.721, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.67149, 151.121, -7.19486, 0.1 ) }
    dend_49 { pt3dadd( 3.7344, 151.738, -7.19486, 0.14 ) }
    dend_49 { pt3dadd( 3.784, 152.367, -7.19486, 0.28 ) }
    dend_49 { pt3dadd( 3.79046, 152.635, -7.21706, 0.28 ) }
    dend_49 { pt3dadd( 3.77166, 153.189, -7.30133, 0.1 ) }
    dend_49 { pt3dadd( 3.71027, 153.735, -7.41251, 0.1 ) }
    dend_49 { pt3dadd( 3.61348, 154.275, -7.53824, 0.1 ) }
    dend_49 { pt3dadd( 3.49062, 154.806, -7.67017, 0.1 ) }
    dend_49 { pt3dadd( 3.22317, 155.89, -7.93642, 0.14 ) }
    dend_49 { pt3dadd( 3.1032, 156.414, -8.05555, 0.28 ) }
    dend_49 { pt3dadd( 3.00505, 156.957, -8.16985, 0.14 ) }
    dend_49 { pt3dadd( 2.93821, 157.505, -8.26761, 0.1 ) }
    dend_49 { pt3dadd( 2.89636, 158.059, -8.34082, 0.1 ) }
    dend_49 { pt3dadd( 2.8685, 158.686, -8.38611, 0.1 ) }
    dend_49 { pt3dadd( 2.86306, 159.308, -8.38611, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_49 { pt3dadd( 2.87759, 159.705, -8.41241, 0.1 ) }
    dend_49 { pt3dadd( 2.91555, 160.323, -8.44725, 0.1 ) }
    dend_49 { pt3dadd( 2.96105, 160.881, -8.47188, 0.1 ) }
    dend_49 { pt3dadd( 3.01275, 161.441, -8.48879, 0.1 ) }
    dend_49 { pt3dadd( 3.05553, 162.061, -8.49844, 0.1 ) }
    dend_49 { pt3dadd( 3.11406, 163.099, -8.4991, 0.1 ) }
    dend_49 { pt3dadd( 3.15532, 164.246, -8.48393, 0.14 ) }
    dend_49 { pt3dadd( 3.16624, 164.877, -8.46685, 0.1 ) }
    dend_49 { pt3dadd( 3.16522, 165.496, -8.44223, 0.1 ) }
    dend_49 { pt3dadd( 3.13303, 166.055, -8.41321, 0.1 ) }
    dend_49 { pt3dadd( 3.05822, 166.67, -8.41591, 0.1 ) }
    dend_49 { pt3dadd( 2.94887, 167.215, -8.48676, 0.1 ) }
    dend_49 { pt3dadd( 2.81085, 167.717, -8.70297, 0.1 ) }
    dend_49 { pt3dadd( 2.64546, 168.149, -9.01867, 0.14 ) }
    dend_49 { pt3dadd( 2.45005, 168.579, -9.42447, 0.1 ) }
    dend_49 { pt3dadd( 2.10494, 169.246, -10.1432, 0.1 ) }
    dend_49 { pt3dadd( 1.69414, 169.971, -10.9759, 0.1 ) }
    dend_49 { pt3dadd( 1.29217, 170.646, -11.8119, 0.1 ) }
    dend_49 { pt3dadd( 0.877917, 171.332, -12.676, 0.14 ) }
    dend_49 { pt3dadd( 0.781237, 171.502, -12.8787, 0.28 ) }
    dend_49 { pt3dadd( 0.581833, 171.921, -13.2936, 0.42 ) }
    dend_49 { pt3dadd( 0.417463, 172.382, -13.5735, 0.56 ) }
    dend_49 { pt3dadd( 0.358735, 172.647, -13.6485, 0.7 ) }
    dend_49 { pt3dadd( 0.279573, 173.2, -13.695, 0.84 ) }
    dend_49 { pt3dadd( 0.221649, 173.817, -13.695, 0.7 ) }
    dend_49 { pt3dadd( 0.16787, 174.444, -13.748, 0.56 ) }
    dend_49 { pt3dadd( 0.116602, 175.055, -13.8365, 0.42 ) }
    dend_49 { pt3dadd( 0.0558297, 175.603, -13.9368, 0.28 ) }
    dend_49 { pt3dadd( -0.0117972, 176.142, -14.0854, 0.14 ) }
    dend_49 { pt3dadd( -0.0887531, 176.665, -14.2708, 0.1 ) }
    dend_49 { pt3dadd( -0.270954, 177.682, -14.7703, 0.1 ) }
    dend_49 { pt3dadd( -0.368108, 178.159, -15.0495, 0.1 ) }
    dend_49 { pt3dadd( -0.464162, 178.601, -15.3678, 0.14 ) }
    dend_49 { pt3dadd( -0.654207, 179.48, -16.1356, 0.28 ) }
    dend_49 { pt3dadd( -0.742224, 179.884, -16.5184, 0.28 ) }
    dend_49 { pt3dadd( -0.893532, 180.628, -17.2267, 0.14 ) }
    dend_49 { pt3dadd( -0.970289, 181.056, -17.5849, 0.1 ) }
    dend_49 { pt3dadd( -1.10221, 181.947, -18.2857, 0.1 ) }
    dend_49 { pt3dadd( -1.20495, 182.897, -18.922, 0.1 ) }
    dend_49 { pt3dadd( -1.23481, 183.405, -19.1556, 0.1 ) }
    dend_49 { pt3dadd( -1.22197, 184.009, -19.3353, 0.14 ) }
    dend_49 { pt3dadd( -1.10599, 185.176, -19.4425, 0.28 ) }
    dend_49 { pt3dadd( -1.05859, 185.453, -19.4344, 0.42 ) }
    dend_49 { pt3dadd( -0.926282, 186.052, -19.3465, 0.14 ) }
    dend_49 { pt3dadd( -0.779232, 186.656, -19.2327, 0.1 ) }
    dend_49 { pt3dadd( -0.684609, 187.039, -19.1794, 0.1 ) }
    dend_49 { pt3dadd( -0.547765, 187.642, -19.135, 0.1 ) }
    dend_49 { pt3dadd( -0.432993, 188.263, -19.135, 0.1 ) }
    dend_49 { pt3dadd( -0.342852, 188.874, -19.1798, 0.1 ) }
    dend_49 { pt3dadd( -0.312534, 189.149, -19.2165, 0.1 ) }
    dend_49 { pt3dadd( -0.263551, 189.757, -19.3731, 0.1 ) }
    dend_49 { pt3dadd( -0.223496, 190.343, -19.577, 0.1 ) }
    dend_49 { pt3dadd( -0.187503, 190.862, -19.7923, 0.1 ) }
    dend_49 { pt3dadd( -0.103715, 191.938, -20.2761, 0.1 ) }
    dend_49 { pt3dadd( -0.0659617, 192.441, -20.5057, 0.1 ) }
    dend_49 { pt3dadd( 0.00498168, 193.521, -20.9809, 0.1 ) }
    dend_49 { pt3dadd( 0.0196999, 193.89, -21.1316, 0.1 ) }
    dend_49 { pt3dadd( 0.0254729, 194.475, -21.3359, 0.1 ) }
    dend_49 { pt3dadd( 0.0242831, 195.087, -21.4912, 0.1 ) }
    dend_49 { pt3dadd( 0.0137135, 195.646, -21.5626, 0.1 ) }
    dend_49 { pt3dadd( -0.00348033, 196.195, -21.6016, 0.1 ) }
    dend_49 { pt3dadd( -0.0301849, 196.755, -21.6016, 0.1 ) }
    dend_49 { pt3dadd( -0.0675169, 197.316, -21.6016, 0.1 ) }
    dend_49 { pt3dadd( -0.118307, 197.946, -21.6016, 0.1 ) }
    dend_49 { pt3dadd( -0.161542, 198.563, -21.556, 0.1 ) }
    dend_49 { pt3dadd( -0.176963, 198.841, -21.5184, 0.1 ) }
    dend_49 { pt3dadd( -0.211901, 199.462, -21.4059, 0.1 ) }
    dend_49 { pt3dadd( -0.2355, 200.002, -21.287, 0.1 ) }
    dend_49 { pt3dadd( -0.280643, 200.533, -21.1129, 0.1 ) }
    dend_49 { pt3dadd( -0.485909, 201.562, -20.5685, 0.14 ) }
    dend_49 { pt3dadd( -0.645635, 201.999, -20.2505, 0.1 ) }
    dend_49 { pt3dadd( -0.869327, 202.378, -19.9031, 0.1 ) }
    dend_49 { pt3dadd( -1.01288, 202.536, -19.7239, 0.14 ) }
    dend_49 { pt3dadd( -1.75375, 203.14, -19.0273, 0.1 ) }
    dend_49 { pt3dadd( -2.63411, 203.679, -18.4519, 0.1 ) }
    dend_49 { pt3dadd( -3.17231, 203.95, -18.2994, 0.14 ) }
    dend_49 { pt3dadd( -3.74156, 204.214, -18.3494, 0.14 ) }
    dend_49 { pt3dadd( -4.07228, 204.376, -18.4768, 0.1 ) }
    dend_49 { pt3dadd( -4.95787, 204.848, -19.1011, 0.1 ) }
    dend_49 { pt3dadd( -5.21132, 204.996, -19.3642, 0.1 ) }
    dend_49 { pt3dadd( -5.89567, 205.429, -20.2252, 0.1 ) }
    dend_49 { pt3dadd( -6.51826, 205.854, -21.1281, 0.1 ) }
    dend_49 { pt3dadd( -6.82418, 206.077, -21.6317, 0.1 ) }
    dend_49 { pt3dadd( -7.28722, 206.41, -22.453, 0.1 ) }
    dend_49 { pt3dadd( -7.46927, 206.532, -22.7854, 0.14 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 85/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 11.3038, -78.857, 9.62597, 1.12 ) }
    dend_18 { pt3dadd( 11.392, -79.4007, 9.62597, 1.12 ) }
    dend_18 { pt3dadd( 11.4997, -80.0211, 9.62597, 1.26 ) }
    dend_18 { pt3dadd( 11.6043, -80.5717, 9.62597, 1.4 ) }
    dend_18 { pt3dadd( 11.7397, -81.1184, 9.62597, 1.54 ) }
    dend_18 { pt3dadd( 11.8157, -81.3868, 9.62597, 1.4 ) }
    dend_18 { pt3dadd( 11.8157, -81.3868, 9.62597, 1.26 ) }
    dend_18 { pt3dadd( 11.9153, -81.6351, 9.57704, 1.12 ) }
    dend_18 { pt3dadd( 12.1399, -82.1323, 9.44874, 0.98 ) }
    dend_18 { pt3dadd( 12.4006, -82.6651, 9.23734, 0.84 ) }
    dend_18 { pt3dadd( 12.6321, -83.1277, 9.02167, 0.7 ) }
    dend_18 { pt3dadd( 13.1124, -84.0995, 8.55111, 0.84 ) }
    dend_18 { pt3dadd( 13.3437, -84.5596, 8.33007, 0.98 ) }
    dend_18 { pt3dadd( 13.5808, -85.0281, 8.13402, 1.12 ) }
    dend_18 { pt3dadd( 14.1022, -86.027, 7.77781, 1.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_18 { pt3dadd( 14.346, -86.5047, 7.61501, 1.12 ) }
    dend_18 { pt3dadd( 14.5978, -86.9896, 7.47839, 0.98 ) }
    dend_18 { pt3dadd( 14.8798, -87.5411, 7.41322, 1.12 ) }
    dend_18 { pt3dadd( 15.3763, -88.4525, 7.36588, 0.98 ) }
    dend_18 { pt3dadd( 15.5682, -88.7879, 7.41422, 1.12 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 5/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.3038, -78.857, 9.62597, 0.28 ) }
    dend_17 { pt3dadd( 11.6686, -78.9934, 9.62597, 0.28 ) }
    dend_17 { pt3dadd( 12.2594, -79.2113, 9.62597, 0.42 ) }
    dend_17 { pt3dadd( 12.6293, -79.3502, 9.67596, 0.56 ) }
    dend_17 { pt3dadd( 13.1945, -79.5833, 9.78874, 0.42 ) }
    dend_17 { pt3dadd( 13.5517, -79.7396, 9.86986, 0.28 ) }
    dend_17 { pt3dadd( 14.252, -80.0719, 10.035, 0.14 ) }
    dend_17 { pt3dadd( 14.7929, -80.3621, 10.1757, 0.28 ) }
    dend_17 { pt3dadd( 15.6882, -80.8992, 10.4239, 0.28 ) }
    dend_17 { pt3dadd( 16.205, -81.2311, 10.5626, 0.14 ) }
    dend_17 { pt3dadd( 16.5236, -81.4494, 10.6428, 0.1 ) }
    dend_17 { pt3dadd( 17.0267, -81.8123, 10.7509, 0.1 ) }
    dend_17 { pt3dadd( 17.5216, -82.188, 10.7953, 0.1 ) }
    dend_17 { pt3dadd( 17.8335, -82.435, 10.7781, 0.1 ) }
    dend_17 { pt3dadd( 18.4503, -82.9173, 10.6914, 0.1 ) }
    dend_17 { pt3dadd( 18.7686, -83.1474, 10.6554, 0.1 ) }
    dend_17 { pt3dadd( 19.2913, -83.4981, 10.6729, 0.14 ) }
    dend_17 { pt3dadd( 20.1478, -83.9852, 10.8433, 0.28 ) }
    dend_17 { pt3dadd( 20.1478, -83.9852, 10.8433, 0.42 ) }
    dend_17 { pt3dadd( 21.0733, -84.3698, 11.2272, 0.42 ) }
    dend_17 { pt3dadd( 21.5828, -84.5716, 11.5372, 0.56 ) }
    dend_17 { pt3dadd( 22.4185, -84.9224, 12.1213, 0.42 ) }
    dend_17 { pt3dadd( 22.88, -85.1441, 12.4707, 0.28 ) }
    dend_17 { pt3dadd( 23.3442, -85.3988, 12.8148, 0.14 ) }
    dend_17 { pt3dadd( 23.6364, -85.577, 13.0008, 0.28 ) }
    dend_17 { pt3dadd( 24.4317, -86.1159, 13.3962, 0.56 ) }
    dend_17 { pt3dadd( 24.9074, -86.4683, 13.5899, 0.7 ) }
    dend_17 { pt3dadd( 25.3286, -86.8046, 13.7533, 0.56 ) }
    dend_17 { pt3dadd( 25.8842, -87.3043, 14.0025, 0.42 ) }
    dend_17 { pt3dadd( 26.1505, -87.5724, 14.1283, 0.28 ) }
    dend_17 { pt3dadd( 26.4014, -87.8482, 14.2409, 0.14 ) }
    dend_17 { pt3dadd( 26.9092, -88.439, 14.4285, 0.14 ) }
    dend_17 { pt3dadd( 27.5397, -89.225, 14.6783, 0.28 ) }
    dend_17 { pt3dadd( 27.8658, -89.6541, 14.805, 0.14 ) }
    dend_17 { pt3dadd( 28.1822, -90.1016, 14.9222, 0.14 ) }
    dend_17 { pt3dadd( 28.4885, -90.5535, 15.0608, 0.1 ) }
    dend_17 { pt3dadd( 28.8239, -91.0531, 15.2215, 0.1 ) }
    dend_17 { pt3dadd( 29.1668, -91.5502, 15.3744, 0.1 ) }
    dend_17 { pt3dadd( 29.5332, -92.0315, 15.5492, 0.1 ) }
    dend_17 { pt3dadd( 29.7719, -92.3136, 15.6872, 0.1 ) }
    dend_17 { pt3dadd( 30.4026, -93.03, 16.0975, 0.1 ) }
    dend_17 { pt3dadd( 30.7801, -93.4525, 16.3564, 0.1 ) }
    dend_17 { pt3dadd( 31.1602, -93.878, 16.6227, 0.1 ) }
    dend_17 { pt3dadd( 31.8464, -94.6611, 17.174, 0.1 ) }
    dend_17 { pt3dadd( 32.0696, -94.9302, 17.3646, 0.1 ) }
    dend_17 { pt3dadd( 32.3729, -95.3271, 17.6187, 0.14 ) }
    dend_17 { pt3dadd( 32.7036, -95.7812, 17.9033, 0.28 ) }
    dend_17 { pt3dadd( 32.8978, -96.0622, 18.0904, 0.42 ) }
    dend_17 { pt3dadd( 33.4114, -96.8153, 18.5887, 0.1 ) }
    dend_17 { pt3dadd( 33.697, -97.23, 18.8348, 0.1 ) }
    dend_17 { pt3dadd( 33.9834, -97.6503, 19.0767, 0.14 ) }
    dend_17 { pt3dadd( 34.5866, -98.5432, 19.5531, 0.1 ) }
    dend_17 { pt3dadd( 34.9008, -99.0307, 19.7803, 0.1 ) }
    dend_17 { pt3dadd( 35.0993, -99.3556, 19.897, 0.1 ) }
    dend_17 { pt3dadd( 35.4097, -99.8826, 20.0147, 0.14 ) }
    dend_17 { pt3dadd( 35.6934, -100.368, 20.058, 0.28 ) }
    dend_17 { pt3dadd( 35.9659, -100.857, 20.0702, 0.28 ) }
    dend_17 { pt3dadd( 36.0907, -101.109, 20.055, 0.42 ) }
    dend_17 { pt3dadd( 36.3272, -101.617, 20.0826, 0.28 ) }
    dend_17 { pt3dadd( 36.5534, -102.126, 20.1609, 0.14 ) }
    dend_17 { pt3dadd( 36.9886, -103.054, 20.4899, 0.1 ) }
    dend_17 { pt3dadd( 37.4335, -103.893, 20.9098, 0.28 ) }
    dend_17 { pt3dadd( 37.6898, -104.326, 21.163, 0.14 ) }
    dend_17 { pt3dadd( 38.2398, -105.206, 21.7203, 0.1 ) }
    dend_17 { pt3dadd( 38.5117, -105.615, 21.9901, 0.1 ) }
    dend_17 { pt3dadd( 39.1094, -106.463, 22.556, 0.1 ) }
    dend_17 { pt3dadd( 39.4203, -106.904, 22.8675, 0.1 ) }
    dend_17 { pt3dadd( 39.7594, -107.36, 23.1383, 0.1 ) }
    dend_17 { pt3dadd( 39.9173, -107.561, 23.2506, 0.1 ) }
    dend_17 { pt3dadd( 40.2974, -108.03, 23.4285, 0.1 ) }
    dend_17 { pt3dadd( 40.5473, -108.316, 23.5177, 0.1 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -23.5257, -30.6751, -38.9238, 0.28 ) }
    dend_7 { pt3dadd( -23.6672, -31.0474, -38.9238, 0.28 ) }
    dend_7 { pt3dadd( -23.9311, -31.7895, -38.9238, 0.14 ) }
    dend_7 { pt3dadd( -24.0637, -32.1651, -38.9238, 0.28 ) }
    dend_7 { pt3dadd( -24.2612, -32.7545, -38.9238, 0.14 ) }
    dend_7 { pt3dadd( -24.4483, -33.3558, -38.9238, 0.1 ) }
    dend_7 { pt3dadd( -24.5536, -33.7449, -38.9238, 0.1 ) }
    dend_7 { pt3dadd( -24.658, -34.3559, -38.9238, 0.14 ) }
    dend_7 { pt3dadd( -24.6775, -34.7537, -38.9238, 0.28 ) }
    dend_7 { pt3dadd( -24.6539, -35.0316, -38.9238, 0.42 ) }
    dend_7 { pt3dadd( -24.5953, -35.307, -38.9238, 0.98 ) }
    dend_7 { pt3dadd( -24.4286, -35.835, -38.9238, 0.84 ) }
    dend_7 { pt3dadd( -24.1893, -36.4181, -38.9238, 0.7 ) }
    dend_7 { pt3dadd( -23.9555, -36.9168, -38.9238, 0.56 ) }
    dend_7 { pt3dadd( -23.6758, -37.4892, -38.9238, 0.42 ) }
    dend_7 { pt3dadd( -23.4389, -37.985, -38.8851, 0.28 ) }
    dend_7 { pt3dadd( -23.2061, -38.4929, -38.8151, 0.14 ) }
    dend_7 { pt3dadd( -22.9629, -39.0569, -38.7107, 0.1 ) }
    dend_7 { pt3dadd( -22.7618, -39.568, -38.5995, 0.1 ) }
    dend_7 { pt3dadd( -22.5711, -40.0838, -38.4778, 0.1 ) }
    dend_7 { pt3dadd( -22.2118, -41.1407, -38.2171, 0.1 ) }
    dend_7 { pt3dadd( -22.041, -41.6613, -38.0867, 0.1 ) }
    dend_7 { pt3dadd( -21.8916, -42.1771, -37.9643, 0.1 ) }
    dend_7 { pt3dadd( -21.7588, -42.7133, -37.8542, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( -21.6453, -43.2557, -37.7708, 0.14 ) }
    dend_7 { pt3dadd( -21.5963, -43.5321, -37.7477, 0.28 ) }
    dend_7 { pt3dadd( -21.5532, -43.8076, -37.7477, 0.7 ) }
    dend_7 { pt3dadd( -21.4665, -44.4214, -37.7477, 0.56 ) }
    dend_7 { pt3dadd( -21.3902, -44.9766, -37.7477, 0.42 ) }
    dend_7 { pt3dadd( -21.3165, -45.602, -37.7477, 0.28 ) }
    dend_7 { pt3dadd( -21.2536, -46.1589, -37.7477, 0.14 ) }
    dend_7 { pt3dadd( -21.185, -46.7179, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -21.1471, -46.9845, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -21.0634, -47.5414, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -21.0138, -47.9366, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.9475, -48.4931, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.9004, -49.0543, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8634, -49.6039, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8327, -50.2328, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8167, -50.8641, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8139, -51.4177, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8248, -52.0491, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8397, -52.6094, -37.7477, 0.1 ) }
    dend_7 { pt3dadd( -20.8494, -53.2292, -37.7477, 0.14 ) }
    dend_7 { pt3dadd( -20.8384, -53.8587, -37.7477, 0.28 ) }
    dend_7 { pt3dadd( -20.8209, -54.4802, -37.7477, 0.42 ) }
    dend_7 { pt3dadd( -20.8105, -55.0405, -37.7477, 0.56 ) }
    dend_7 { pt3dadd( -20.8008, -55.322, -37.7477, 0.42 ) }
    dend_7 { pt3dadd( -20.7728, -55.8828, -37.7914, 0.42 ) }
    dend_7 { pt3dadd( -20.7272, -56.4355, -37.8719, 0.56 ) }
    dend_7 { pt3dadd( -20.6843, -56.815, -37.9485, 0.1 ) }
    dend_7 { pt3dadd( -20.6011, -57.4237, -38.0945, 0.1 ) }
    dend_7 { pt3dadd( -20.5214, -57.9636, -38.2336, 0.1 ) }
    dend_7 { pt3dadd( -20.3385, -59.0595, -38.5159, 0.1 ) }
    dend_7 { pt3dadd( -20.2931, -59.3289, -38.5844, 0.1 ) }
    dend_7 { pt3dadd( -20.1964, -59.8569, -38.7078, 0.7 ) }
    dend_7 { pt3dadd( -20.083, -60.3982, -38.8142, 0.56 ) }
    dend_7 { pt3dadd( -19.9626, -60.9399, -38.8928, 0.42 ) }
    dend_7 { pt3dadd( -19.844, -61.4888, -38.9352, 0.42 ) }
    dend_7 { pt3dadd( -19.7621, -61.8684, -38.9048, 0.56 ) }
    dend_7 { pt3dadd( -19.643, -62.4106, -38.828, 0.56 ) }
    dend_7 { pt3dadd( -19.5255, -62.9511, -38.7376, 0.42 ) }
    dend_7 { pt3dadd( -19.4078, -63.4912, -38.6296, 0.28 ) }
    dend_7 { pt3dadd( -19.2877, -64.0234, -38.5013, 0.14 ) }
    dend_7 { pt3dadd( -19.0252, -65.0959, -38.1881, 0.1 ) }
    dend_7 { pt3dadd( -18.8818, -65.5977, -38.0121, 0.1 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 42/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -23.5257, -30.6751, -38.9238, 0.1 ) }
    dend_6 { pt3dadd( -24.0375, -29.6492, -38.6525, 0.1 ) }
    dend_6 { pt3dadd( -24.3154, -29.1736, -38.549, 0.1 ) }
    dend_6 { pt3dadd( -24.6191, -28.7185, -38.4643, 0.1 ) }
    dend_6 { pt3dadd( -24.9811, -28.2098, -38.378, 0.1 ) }
    dend_6 { pt3dadd( -25.3129, -27.7714, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -25.3129, -27.7714, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -25.794, -27.1415, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -26.0415, -26.8295, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -26.0415, -26.8295, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -26.3934, -26.3155, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -26.6942, -25.8427, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -26.9688, -25.3509, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -27.2309, -24.7858, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -27.4463, -24.2655, -38.3133, 0.1 ) }
    dend_6 { pt3dadd( -27.6313, -23.7485, -38.3573, 0.1 ) }
    dend_6 { pt3dadd( -27.6313, -23.7485, -38.3573, 0.1 ) }
    dend_6 { pt3dadd( -27.7609, -23.2148, -38.4687, 0.1 ) }
    dend_6 { pt3dadd( -27.8655, -22.6766, -38.5977, 0.1 ) }
    dend_6 { pt3dadd( -27.9381, -22.1374, -38.7324, 0.1 ) }
    dend_6 { pt3dadd( -28.0655, -20.9966, -39.0128, 0.1 ) }
    dend_6 { pt3dadd( -28.1207, -20.4623, -39.1351, 0.1 ) }
    dend_6 { pt3dadd( -28.1714, -19.8569, -39.3004, 0.1 ) }
    dend_6 { pt3dadd( -28.209, -19.3216, -39.4621, 0.1 ) }
    dend_6 { pt3dadd( -28.2506, -18.7302, -39.6432, 0.1 ) }
    dend_6 { pt3dadd( -28.2969, -18.1928, -39.7954, 0.1 ) }
    dend_6 { pt3dadd( -28.3508, -17.6464, -39.9207, 0.1 ) }
    dend_6 { pt3dadd( -28.4613, -16.6028, -40.168, 0.1 ) }
    dend_6 { pt3dadd( -28.5299, -16.0676, -40.2919, 0.1 ) }
    dend_6 { pt3dadd( -28.6074, -15.5244, -40.4064, 0.1 ) }
    dend_6 { pt3dadd( -28.6866, -14.9837, -40.5426, 0.1 ) }
    dend_6 { pt3dadd( -28.7734, -14.3787, -40.7015, 0.1 ) }
    dend_6 { pt3dadd( -28.8536, -13.8469, -40.8327, 0.1 ) }
    dend_6 { pt3dadd( -28.9348, -13.3036, -40.9438, 0.1 ) }
    dend_6 { pt3dadd( -29.0094, -12.7586, -41.0648, 0.1 ) }
    dend_6 { pt3dadd( -29.1639, -11.6154, -41.3255, 0.1 ) }
    dend_6 { pt3dadd( -29.2407, -11.0802, -41.4446, 0.1 ) }
    dend_6 { pt3dadd( -29.3173, -10.5449, -41.5918, 0.1 ) }
    dend_6 { pt3dadd( -29.3978, -9.94489, -41.7715, 0.1 ) }
    dend_6 { pt3dadd( -29.4706, -9.40992, -41.9319, 0.1 ) }
    dend_6 { pt3dadd( -29.54, -8.87352, -42.0787, 0.1 ) }
    dend_6 { pt3dadd( -29.6134, -8.33783, -42.1977, 0.1 ) }
    dend_6 { pt3dadd( -29.7683, -7.19466, -42.4584, 0.1 ) }
    dend_6 { pt3dadd( -29.8469, -6.65029, -42.5795, 0.1 ) }
    dend_6 { pt3dadd( -29.9243, -6.11506, -42.7267, 0.1 ) }
    dend_6 { pt3dadd( -30.0039, -5.52628, -42.9032, 0.1 ) }
    dend_6 { pt3dadd( -30.0767, -4.99401, -43.0629, 0.1 ) }
    dend_6 { pt3dadd( -30.144, -4.45615, -43.2158, 0.1 ) }
    dend_6 { pt3dadd( -30.2137, -3.91518, -43.3446, 0.1 ) }
    dend_6 { pt3dadd( -30.352, -2.78244, -43.6309, 0.1 ) }
    dend_6 { pt3dadd( -30.4214, -2.24331, -43.7674, 0.1 ) }
    dend_6 { pt3dadd( -30.5016, -1.70359, -43.8954, 0.1 ) }
    dend_6 { pt3dadd( -30.5443, -1.43074, -43.9504, 0.1 ) }
    dend_6 { pt3dadd( -30.6381, -0.891009, -44.0304, 0.1 ) }
    dend_6 { pt3dadd( -30.7487, -0.343289, -44.0737, 0.1 ) }
    dend_6 { pt3dadd( -30.8654, 0.205825, -44.1191, 0.1 ) }
    dend_6 { pt3dadd( -30.9792, 0.748932, -44.1977, 0.1 ) }
    dend_6 { pt3dadd( -31.0956, 1.29069, -44.2984, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_6 { pt3dadd( -31.2163, 1.82606, -44.412, 0.1 ) }
    dend_6 { pt3dadd( -31.3313, 2.35317, -44.5362, 0.1 ) }
    dend_6 { pt3dadd( -31.5737, 3.47723, -44.8129, 0.1 ) }
    dend_6 { pt3dadd( -31.689, 4.01022, -44.9423, 0.1 ) }
    dend_6 { pt3dadd( -31.797, 4.54972, -45.0626, 0.1 ) }
    dend_6 { pt3dadd( -31.8475, 4.8124, -45.1121, 0.1 ) }
    dend_6 { pt3dadd( -31.9409, 5.3595, -45.19, 0.1 ) }
    dend_6 { pt3dadd( -32.0293, 5.91399, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.1189, 6.46723, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.2131, 7.09168, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.283, 7.64087, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.3296, 8.03638, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.3942, 8.59309, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.4648, 9.15186, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.5321, 9.69855, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.6167, 10.3225, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.6941, 10.8776, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.781, 11.4313, -45.2336, 0.1 ) }
    dend_6 { pt3dadd( -32.8697, 11.9856, -45.2785, 0.1 ) }
    dend_6 { pt3dadd( -32.9165, 12.2575, -45.3194, 0.1 ) }
    dend_6 { pt3dadd( -33.0216, 12.7968, -45.4298, 0.1 ) }
    dend_6 { pt3dadd( -33.1421, 13.3318, -45.5586, 0.1 ) }
    dend_6 { pt3dadd( -33.2673, 13.8609, -45.6942, 0.1 ) }
    dend_6 { pt3dadd( -33.539, 14.9414, -45.9699, 0.1 ) }
    dend_6 { pt3dadd( -33.6779, 15.4598, -46.0939, 0.1 ) }
    dend_6 { pt3dadd( -33.8277, 15.9819, -46.2429, 0.1 ) }
    dend_6 { pt3dadd( -33.9757, 16.4979, -46.4039, 0.1 ) }
    dend_6 { pt3dadd( -34.1237, 17.0139, -46.5649, 0.1 ) }
    dend_6 { pt3dadd( -34.2736, 17.5359, -46.7138, 0.1 ) }
    dend_6 { pt3dadd( -34.4241, 18.0619, -46.8354, 0.1 ) }
    dend_6 { pt3dadd( -34.7309, 19.1333, -47.0895, 0.1 ) }
    dend_6 { pt3dadd( -34.8815, 19.6593, -47.211, 0.1 ) }
    dend_6 { pt3dadd( -35.0313, 20.1814, -47.36, 0.1 ) }
    dend_6 { pt3dadd( -35.179, 20.6967, -47.5234, 0.1 ) }
    dend_6 { pt3dadd( -35.3265, 21.2113, -47.6892, 0.1 ) }
    dend_6 { pt3dadd( -35.4756, 21.7318, -47.8443, 0.1 ) }
    dend_6 { pt3dadd( -35.6232, 22.2476, -47.9692, 0.1 ) }
    dend_6 { pt3dadd( -35.9014, 23.3051, -48.3176, 0.1 ) }
    dend_6 { pt3dadd( -35.9635, 23.5589, -48.4152, 0.1 ) }
    dend_6 { pt3dadd( -36.0777, 24.0537, -48.6589, 0.1 ) }
    dend_6 { pt3dadd( -36.1847, 24.5359, -48.9238, 0.1 ) }
    dend_6 { pt3dadd( -36.2754, 25.004, -49.2234, 0.1 ) }
    dend_6 { pt3dadd( -36.4411, 25.9623, -49.8874, 0.1 ) }
    dend_6 { pt3dadd( -36.5317, 26.4185, -50.205, 0.1 ) }
    dend_6 { pt3dadd( -36.7565, 27.3277, -50.866, 0.1 ) }
    dend_6 { pt3dadd( -36.8923, 27.7639, -51.1954, 0.1 ) }
    dend_6 { pt3dadd( -37.2764, 28.6587, -51.8573, 0.1 ) }
    dend_6 { pt3dadd( -37.2764, 28.6587, -51.8573, 0.1 ) }
    dend_6 { pt3dadd( -37.7145, 29.2021, -52.2329, 0.1 ) }
    dend_6 { pt3dadd( -38.1133, 29.6072, -52.5037, 0.1 ) }
    dend_6 { pt3dadd( -38.3896, 29.8474, -52.6365, 0.1 ) }
    dend_6 { pt3dadd( -38.9746, 30.303, -52.9274, 0.1 ) }
    dend_6 { pt3dadd( -39.7931, 30.8881, -53.3008, 0.1 ) }
    dend_6 { pt3dadd( -40.2725, 31.237, -53.5336, 0.1 ) }
    dend_6 { pt3dadd( -40.5624, 31.4501, -53.6829, 0.1 ) }
    dend_6 { pt3dadd( -41.0373, 31.7926, -53.9145, 0.1 ) }
    dend_6 { pt3dadd( -41.8395, 32.3681, -54.3351, 0.1 ) }
    dend_6 { pt3dadd( -42.4372, 32.8023, -54.6455, 0.1 ) }
    dend_6 { pt3dadd( -42.9112, 33.1426, -54.8636, 0.1 ) }
    dend_6 { pt3dadd( -43.2146, 33.3558, -55.0088, 0.1 ) }
    dend_6 { pt3dadd( -43.8076, 33.791, -55.2906, 0.1 ) }
    dend_6 { pt3dadd( -44.6008, 34.4214, -55.6444, 0.1 ) }
    dend_6 { pt3dadd( -45.0515, 34.84, -55.81, 0.1 ) }
    dend_6 { pt3dadd( -45.2994, 35.1238, -55.9086, 0.1 ) }
    dend_6 { pt3dadd( -45.2994, 35.1238, -55.9086, 0.1 ) }
    dend_6 { pt3dadd( -45.5829, 35.6018, -55.9999, 0.1 ) }
    dend_6 { pt3dadd( -45.8208, 36.0965, -56.0453, 0.1 ) }
    dend_6 { pt3dadd( -46.04, 36.6153, -56.0453, 0.1 ) }
    dend_6 { pt3dadd( -46.2522, 37.1318, -56.0941, 0.1 ) }
    dend_6 { pt3dadd( -46.3577, 37.3896, -56.135, 0.1 ) }
    dend_6 { pt3dadd( -46.5923, 37.9436, -56.2965, 0.1 ) }
    dend_6 { pt3dadd( -46.8236, 38.4165, -56.4965, 0.1 ) }
    dend_6 { pt3dadd( -47.08, 38.8302, -56.7744, 0.1 ) }
    dend_6 { pt3dadd( -47.6472, 39.52, -57.5428, 0.1 ) }
    dend_6 { pt3dadd( -47.9366, 39.7834, -57.9479, 0.1 ) }
    dend_6 { pt3dadd( -48.5138, 40.1805, -58.7149, 0.1 ) }
    dend_6 { pt3dadd( -48.8423, 40.3528, -59.1259, 0.1 ) }
    dend_6 { pt3dadd( -49.5662, 40.6378, -59.9679, 0.1 ) }
    dend_6 { pt3dadd( -50.2749, 40.8628, -60.6935, 0.1 ) }
    dend_6 { pt3dadd( -50.8696, 41.0406, -61.1784, 0.1 ) }
    dend_6 { pt3dadd( -51.3785, 41.2145, -61.5095, 0.1 ) }
    dend_6 { pt3dadd( -51.7171, 41.3652, -61.6551, 0.1 ) }
    dend_6 { pt3dadd( -51.7171, 41.3652, -61.6551, 0.1 ) }
    dend_6 { pt3dadd( -52.2124, 41.74, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -52.6886, 42.1416, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -53.1626, 42.556, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -53.464, 42.8106, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -53.9687, 43.1871, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -54.4893, 43.5291, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -54.4893, 43.5291, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -55.0624, 43.79, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -55.636, 44.0298, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -56.2195, 44.2663, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -56.579, 44.4162, -61.7022, 0.1 ) }
    dend_6 { pt3dadd( -56.8306, 44.5347, -61.7246, 0.1 ) }
    dend_6 { pt3dadd( -57.5169, 44.9057, -61.8332, 0.1 ) }
    dend_6 { pt3dadd( -58.0326, 45.2265, -61.9993, 0.1 ) }
    dend_6 { pt3dadd( -58.3352, 45.4317, -62.1337, 0.1 ) }
    dend_6 { pt3dadd( -58.7942, 45.7674, -62.4207, 0.1 ) }
    dend_6 { pt3dadd( -59.6022, 46.3895, -63.0108, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -59.8667, 46.6, -63.2213, 0.1 ) }
    dend_6 { pt3dadd( -60.6949, 47.2725, -63.9158, 0.1 ) }
    dend_6 { pt3dadd( -60.9453, 47.4756, -64.1496, 0.1 ) }
    dend_6 { pt3dadd( -61.689, 48.0722, -64.8483, 0.1 ) }
    dend_6 { pt3dadd( -62.0896, 48.3913, -65.203, 0.1 ) }
    dend_6 { pt3dadd( -62.3578, 48.6047, -65.4057, 0.1 ) }
    dend_6 { pt3dadd( -62.7924, 48.9499, -65.6886, 0.1 ) }
    dend_6 { pt3dadd( -63.5073, 49.5069, -66.1112, 0.1 ) }
    dend_6 { pt3dadd( -64.0843, 49.9473, -66.439, 0.1 ) }
    dend_6 { pt3dadd( -64.5631, 50.2849, -66.6717, 0.1 ) }
    dend_6 { pt3dadd( -64.8698, 50.4945, -66.8153, 0.1 ) }
    dend_6 { pt3dadd( -65.4857, 50.9089, -67.0787, 0.1 ) }
    dend_6 { pt3dadd( -66.3234, 51.4716, -67.4531, 0.1 ) }
    dend_6 { pt3dadd( -66.8151, 51.7955, -67.6564, 0.1 ) }
    dend_6 { pt3dadd( -67.3002, 52.1168, -67.8753, 0.1 ) }
    dend_6 { pt3dadd( -67.7927, 52.439, -68.0992, 0.1 ) }
    dend_6 { pt3dadd( -68.0899, 52.636, -68.2559, 0.1 ) }
    dend_6 { pt3dadd( -68.9731, 53.2418, -68.7554, 0.1 ) }
    dend_6 { pt3dadd( -69.4364, 53.5737, -69.0037, 0.1 ) }
    dend_6 { pt3dadd( -69.8932, 53.9188, -69.266, 0.1 ) }
    dend_6 { pt3dadd( -70.1585, 54.1391, -69.447, 0.1 ) }
    dend_6 { pt3dadd( -70.8086, 54.7295, -69.9255, 0.1 ) }
    dend_6 { pt3dadd( -71.1877, 55.1073, -70.2571, 0.1 ) }
    dend_6 { pt3dadd( -71.5262, 55.5073, -70.5939, 0.1 ) }
    dend_6 { pt3dadd( -71.8113, 55.9294, -70.9524, 0.1 ) }
    dend_6 { pt3dadd( -72.2974, 56.7672, -71.6362, 0.1 ) }
    dend_6 { pt3dadd( -72.5023, 57.1832, -71.9335, 0.1 ) }
    dend_6 { pt3dadd( -72.8469, 57.9978, -72.4, 0.1 ) }
    dend_6 { pt3dadd( -73.0309, 58.5329, -72.6762, 0.1 ) }
    dend_6 { pt3dadd( -73.1323, 58.8908, -72.8317, 0.1 ) }
    dend_6 { pt3dadd( -73.2759, 59.4772, -73.0106, 0.1 ) }
    dend_6 { pt3dadd( -73.4038, 60.0173, -73.0879, 0.1 ) }
    dend_6 { pt3dadd( -73.5418, 60.5521, -73.1264, 0.1 ) }
    dend_6 { pt3dadd( -73.693, 61.0918, -73.1264, 0.1 ) }
    dend_6 { pt3dadd( -73.7759, 61.3609, -73.1264, 0.1 ) }
    dend_6 { pt3dadd( -73.9544, 61.8922, -73.1264, 0.1 ) }
    dend_6 { pt3dadd( -74.1425, 62.421, -73.1719, 0.1 ) }
    dend_6 { pt3dadd( -74.3471, 62.9359, -73.2566, 0.1 ) }
    dend_6 { pt3dadd( -74.5682, 63.4175, -73.4169, 0.1 ) }
    dend_6 { pt3dadd( -74.5682, 63.4175, -73.4169, 0.1 ) }
    dend_6 { pt3dadd( -74.8354, 63.8988, -73.7239, 0.1 ) }
    dend_6 { pt3dadd( -75.3546, 64.736, -74.37, 0.1 ) }
    dend_6 { pt3dadd( -75.6017, 65.0965, -74.7099, 0.1 ) }
    dend_6 { pt3dadd( -76.128, 65.8397, -75.4634, 0.1 ) }
    dend_6 { pt3dadd( -76.3712, 66.1881, -75.814, 0.1 ) }
    dend_6 { pt3dadd( -76.8261, 66.8607, -76.5233, 0.1 ) }
    dend_6 { pt3dadd( -77.0834, 67.2491, -76.9369, 0.1 ) }
    dend_6 { pt3dadd( -77.5761, 68.0171, -77.6878, 0.1 ) }
    dend_6 { pt3dadd( -77.8098, 68.3941, -78.0303, 0.1 ) }
    dend_6 { pt3dadd( -78.0425, 68.7881, -78.3587, 0.1 ) }
    dend_6 { pt3dadd( -78.4476, 69.5084, -78.9218, 0.1 ) }
    dend_6 { pt3dadd( -78.6904, 69.9894, -79.2343, 0.1 ) }
    dend_6 { pt3dadd( -78.8955, 70.4314, -79.4912, 0.1 ) }
    dend_6 { pt3dadd( -79.1057, 70.8886, -79.744, 0.1 ) }
    dend_6 { pt3dadd( -79.5486, 71.8411, -80.2776, 0.1 ) }
    dend_6 { pt3dadd( -79.76, 72.3042, -80.5184, 0.1 ) }
    dend_6 { pt3dadd( -79.9713, 72.7648, -80.7579, 0.1 ) }
    dend_6 { pt3dadd( -80.1774, 73.2211, -81.0157, 0.1 ) }
    dend_6 { pt3dadd( -80.609, 74.1729, -81.5597, 0.1 ) }
    dend_6 { pt3dadd( -80.8127, 74.6327, -81.8071, 0.1 ) }
    dend_6 { pt3dadd( -81.0083, 75.0984, -82.0561, 0.1 ) }
    dend_6 { pt3dadd( -81.4076, 76.054, -82.6178, 0.1 ) }
    dend_6 { pt3dadd( -81.6014, 76.5067, -82.8911, 0.1 ) }
    dend_6 { pt3dadd( -81.7922, 76.9555, -83.1471, 0.1 ) }
    dend_6 { pt3dadd( -81.9848, 77.4305, -83.3737, 0.1 ) }
    dend_6 { pt3dadd( -82.4025, 78.4085, -83.8054, 0.1 ) }
    dend_6 { pt3dadd( -82.4025, 78.4085, -83.8054, 0.1 ) }
    dend_6 { pt3dadd( -82.6533, 78.9624, -83.9408, 0.1 ) }
    dend_6 { pt3dadd( -82.8938, 79.4615, -84.0418, 0.1 ) }
    dend_6 { pt3dadd( -83.1473, 79.9479, -84.157, 0.1 ) }
    dend_6 { pt3dadd( -83.4357, 80.4854, -84.2831, 0.1 ) }
    dend_6 { pt3dadd( -83.6958, 80.9752, -84.3817, 0.1 ) }
    dend_6 { pt3dadd( -83.9829, 81.5144, -84.5032, 0.1 ) }
    dend_6 { pt3dadd( -84.2378, 82.0021, -84.6231, 0.1 ) }
    dend_6 { pt3dadd( -84.7706, 83.0194, -84.8863, 0.1 ) }
    dend_6 { pt3dadd( -85.018, 83.5065, -85.0112, 0.1 ) }
    dend_6 { pt3dadd( -85.2528, 84.0046, -85.1296, 0.1 ) }
    dend_6 { pt3dadd( -85.5017, 84.5642, -85.2429, 0.1 ) }
    dend_6 { pt3dadd( -85.7068, 85.0728, -85.319, 0.1 ) }
    dend_6 { pt3dadd( -85.8061, 85.3325, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -86.0021, 85.8605, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -86.2117, 86.3802, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -86.4426, 86.8939, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -86.6954, 87.3941, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -86.6954, 87.3941, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -87.0485, 87.9073, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -87.4385, 88.4016, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -87.8398, 88.878, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -88.2556, 89.3509, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -88.6709, 89.8152, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -88.9291, 90.1183, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -89.3171, 90.6151, -85.3415, 0.1 ) }
    dend_6 { pt3dadd( -89.6384, 91.0602, -85.3866, 0.1 ) }
    dend_6 { pt3dadd( -89.6384, 91.0602, -85.3866, 0.1 ) }
    dend_6 { pt3dadd( -89.941, 91.59, -85.5698, 0.1 ) }
    dend_6 { pt3dadd( -90.1713, 92.047, -85.7736, 0.1 ) }
    dend_6 { pt3dadd( -90.3749, 92.4996, -86.0399, 0.1 ) }
    dend_6 { pt3dadd( -90.7589, 93.4192, -86.6683, 0.1 ) }
    dend_6 { pt3dadd( -90.9229, 93.8543, -86.9811, 0.1 ) }
    dend_6 { pt3dadd( -91.1947, 94.7607, -87.6306, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -91.2874, 95.2098, -87.9528, 0.1 ) }
    dend_6 { pt3dadd( -91.3802, 96.1544, -88.598, 0.1 ) }
    dend_6 { pt3dadd( -91.3723, 96.3939, -88.7408, 0.1 ) }
    dend_6 { pt3dadd( -91.2623, 96.9507, -88.9899, 0.1 ) }
    dend_6 { pt3dadd( -91.0982, 97.518, -89.188, 0.1 ) }
    dend_6 { pt3dadd( -90.9813, 97.8845, -89.2908, 0.1 ) }
    dend_6 { pt3dadd( -90.8246, 98.4716, -89.4586, 0.1 ) }
    dend_6 { pt3dadd( -90.7874, 98.8428, -89.5977, 0.1 ) }
    dend_6 { pt3dadd( -90.8125, 99.0898, -89.7308, 0.1 ) }
    dend_6 { pt3dadd( -90.9839, 99.5978, -90.0611, 0.1 ) }
    dend_6 { pt3dadd( -91.4558, 100.493, -90.6644, 0.1 ) }
    dend_6 { pt3dadd( -91.7493, 100.93, -90.9962, 0.1 ) }
    dend_6 { pt3dadd( -92.3697, 101.724, -91.6135, 0.1 ) }
    dend_6 { pt3dadd( -92.5215, 101.901, -91.7668, 0.1 ) }
    dend_6 { pt3dadd( -92.8737, 102.293, -92.1123, 0.1 ) }
    dend_6 { pt3dadd( -93.217, 102.668, -92.4717, 0.1 ) }
    dend_6 { pt3dadd( -93.8669, 103.392, -93.1424, 0.1 ) }
    dend_6 { pt3dadd( -94.2128, 103.776, -93.5034, 0.1 ) }
    dend_6 { pt3dadd( -94.8069, 104.452, -94.0941, 0.1 ) }
    dend_6 { pt3dadd( -95.1361, 104.833, -94.461, 0.1 ) }
    dend_6 { pt3dadd( -95.7402, 105.576, -95.1467, 0.1 ) }
    dend_6 { pt3dadd( -96.0215, 105.957, -95.4515, 0.1 ) }
    dend_6 { pt3dadd( -96.2108, 106.253, -95.6196, 0.1 ) }
    dend_6 { pt3dadd( -96.4522, 106.727, -95.8055, 0.1 ) }
    dend_6 { pt3dadd( -96.8115, 107.646, -95.9675, 0.1 ) }
    dend_6 { pt3dadd( -97.1488, 108.738, -96.0482, 0.1 ) }
    dend_6 { pt3dadd( -97.3002, 109.281, -96.0285, 0.1 ) }
    dend_6 { pt3dadd( -97.4581, 109.808, -96.0021, 0.1 ) }
    dend_6 { pt3dadd( -97.6589, 110.403, -95.9656, 0.1 ) }
    dend_6 { pt3dadd( -97.8711, 110.921, -95.9279, 0.1 ) }
    dend_6 { pt3dadd( -97.9892, 111.175, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -98.2768, 111.728, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -98.5943, 112.264, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -98.9359, 112.793, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -99.2842, 113.309, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -99.5888, 113.783, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -99.5888, 113.783, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -99.8794, 114.334, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.111, 114.844, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.316, 115.369, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.5, 115.898, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.5, 115.898, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.664, 116.427, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.819, 116.966, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -100.961, 117.508, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.095, 118.055, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.223, 118.6, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.348, 119.15, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.466, 119.687, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.598, 120.303, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.71, 120.852, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.818, 121.405, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.92, 121.946, -95.9072, 0.1 ) }
    dend_6 { pt3dadd( -101.971, 122.223, -95.9072, 0.1 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 54/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 49.3483, -313.034, -52.3276, 0.1 ) }
    dend_4 { pt3dadd( 49.3575, -313.409, -52.4597, 0.1 ) }
    dend_4 { pt3dadd( 49.3651, -313.943, -52.6396, 0.1 ) }
    dend_4 { pt3dadd( 49.3624, -314.537, -52.8215, 0.1 ) }
    dend_4 { pt3dadd( 49.3629, -315.08, -52.9707, 0.1 ) }
    dend_4 { pt3dadd( 49.3574, -316.229, -53.2512, 0.1 ) }
    dend_4 { pt3dadd( 49.3585, -316.77, -53.3691, 0.1 ) }
    dend_4 { pt3dadd( 49.3614, -317.381, -53.5303, 0.1 ) }
    dend_4 { pt3dadd( 49.3608, -317.976, -53.7043, 0.1 ) }
    dend_4 { pt3dadd( 49.3591, -318.513, -53.8638, 0.1 ) }
    dend_4 { pt3dadd( 49.3456, -319.12, -54.0299, 0.1 ) }
    dend_4 { pt3dadd( 49.3368, -319.667, -54.1517, 0.1 ) }
    dend_4 { pt3dadd( 49.3275, -320.813, -54.4169, 0.1 ) }
    dend_4 { pt3dadd( 49.3337, -321.085, -54.4789, 0.14 ) }
    dend_4 { pt3dadd( 49.3545, -321.701, -54.6076, 0.14 ) }
    dend_4 { pt3dadd( 49.3817, -322.313, -54.715, 0.1 ) }
    dend_4 { pt3dadd( 49.4116, -322.871, -54.7863, 0.1 ) }
    dend_4 { pt3dadd( 49.4464, -323.429, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 49.4956, -323.99, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 49.5623, -324.608, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 49.64, -325.166, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 49.7526, -325.787, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 49.8538, -326.332, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 49.9631, -326.881, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 50.0839, -327.429, -54.8245, 0.1 ) }
    dend_4 { pt3dadd( 50.21, -327.976, -54.8659, 0.1 ) }
    dend_4 { pt3dadd( 50.3459, -328.578, -54.9502, 0.1 ) }
    dend_4 { pt3dadd( 50.4333, -328.96, -55.0228, 0.1 ) }
    dend_4 { pt3dadd( 50.5488, -329.495, -55.1426, 0.1 ) }
    dend_4 { pt3dadd( 50.6489, -330.032, -55.2325, 0.1 ) }
    dend_4 { pt3dadd( 50.841, -331.192, -55.3595, 0.1 ) }
    dend_4 { pt3dadd( 50.9148, -331.75, -55.3883, 0.14 ) }
    dend_4 { pt3dadd( 50.9777, -332.306, -55.3869, 0.1 ) }
    dend_4 { pt3dadd( 51.0362, -332.856, -55.3577, 0.1 ) }
    dend_4 { pt3dadd( 51.1231, -334.029, -55.2365, 0.1 ) }
    dend_4 { pt3dadd( 51.1536, -334.585, -55.1502, 0.1 ) }
    dend_4 { pt3dadd( 51.1751, -335.194, -55.0245, 0.1 ) }
    dend_4 { pt3dadd( 51.1822, -335.748, -54.9264, 0.1 ) }
    dend_4 { pt3dadd( 51.1756, -336.374, -54.8439, 0.1 ) }
    dend_4 { pt3dadd( 51.1677, -336.992, -54.7987, 0.14 ) }
    dend_4 { pt3dadd( 51.17, -337.271, -54.7987, 0.1 ) }
    dend_4 { pt3dadd( 51.175, -337.901, -54.7987, 0.1 ) }
    dend_4 { pt3dadd( 51.1703, -338.461, -54.7987, 0.1 ) }
    dend_4 { pt3dadd( 51.1444, -339.081, -54.7987, 0.1 ) }
    dend_4 { pt3dadd( 51.1186, -339.639, -54.838, 0.1 ) }
    dend_4 { pt3dadd( 51.0909, -340.2, -54.8841, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_4 { pt3dadd( 51.0517, -340.817, -54.9432, 0.28 ) }
    dend_4 { pt3dadd( 50.9904, -341.606, -55.0369, 0.14 ) }
    dend_4 { pt3dadd( 50.9455, -341.989, -55.0942, 0.1 ) }
    dend_4 { pt3dadd( 50.7802, -343.102, -55.3137, 0.1 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 49.3483, -313.034, -52.3276, 0.1 ) }
    dend_3 { pt3dadd( 48.8383, -313.386, -52.3276, 0.1 ) }
    dend_3 { pt3dadd( 48.3971, -313.719, -52.2365, 0.1 ) }
    dend_3 { pt3dadd( 47.91, -314.083, -52.0996, 0.1 ) }
    dend_3 { pt3dadd( 47.4201, -314.45, -51.9529, 0.1 ) }
    dend_3 { pt3dadd( 47.1252, -314.674, -51.8325, 0.1 ) }
    dend_3 { pt3dadd( 46.6526, -315.031, -51.6182, 0.1 ) }
    dend_3 { pt3dadd( 45.8006, -315.717, -51.1709, 0.1 ) }
    dend_3 { pt3dadd( 45.4106, -316.04, -50.9472, 0.1 ) }
    dend_3 { pt3dadd( 44.9671, -316.406, -50.6887, 0.1 ) }
    dend_3 { pt3dadd( 44.1501, -317.115, -50.2216, 0.1 ) }
    dend_3 { pt3dadd( 43.9574, -317.3, -50.1322, 0.1 ) }
    dend_3 { pt3dadd( 43.5355, -317.724, -49.9583, 0.1 ) }
    dend_3 { pt3dadd( 43.2713, -318.014, -49.8913, 0.1 ) }
    dend_3 { pt3dadd( 42.8849, -318.497, -49.8147, 0.1 ) }
    dend_3 { pt3dadd( 42.5225, -319.011, -49.8136, 0.1 ) }
    dend_3 { pt3dadd( 41.9589, -319.974, -50.0763, 0.1 ) }
    // Section: dend_75, id: dend_75, parent: dend_63 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -18.3212, 70.0928, -5.76248, 0.28 ) }
    dend_75 { pt3dadd( -19.4326, 70.6686, -5.50269, 0.28 ) }
    dend_75 { pt3dadd( -19.9617, 70.9801, -5.40509, 0.14 ) }
    dend_75 { pt3dadd( -20.2973, 71.1884, -5.35393, 0.28 ) }
    dend_75 { pt3dadd( -20.9504, 71.6209, -5.27114, 0.42 ) }
    dend_75 { pt3dadd( -21.2749, 71.8492, -5.23668, 0.42 ) }
    dend_75 { pt3dadd( -21.7794, 72.2243, -5.19125, 0.28 ) }
    dend_75 { pt3dadd( -22.2522, 72.6299, -5.19125, 0.14 ) }
    dend_75 { pt3dadd( -22.5408, 72.9043, -5.19125, 0.1 ) }
    dend_75 { pt3dadd( -22.9705, 73.3552, -5.19125, 0.1 ) }
    dend_75 { pt3dadd( -23.384, 73.8301, -5.19125, 0.14 ) }
    dend_75 { pt3dadd( -23.7814, 74.3097, -5.19125, 0.28 ) }
    dend_75 { pt3dadd( -24.1466, 74.7385, -5.19125, 0.14 ) }
    dend_75 { pt3dadd( -24.4047, 75.0302, -5.19125, 0.1 ) }
    dend_75 { pt3dadd( -24.7959, 75.4354, -5.19125, 0.14 ) }
    dend_75 { pt3dadd( -25.2542, 75.8572, -5.19125, 0.28 ) }
    dend_75 { pt3dadd( -25.7343, 76.2519, -5.23316, 0.42 ) }
    dend_75 { pt3dadd( -26.2414, 76.6265, -5.26928, 0.56 ) }
    dend_75 { pt3dadd( -26.563, 76.8457, -5.28605, 0.42 ) }
    dend_75 { pt3dadd( -27.0838, 77.1992, -5.30328, 0.28 ) }
    dend_75 { pt3dadd( -27.4173, 77.4255, -5.30784, 0.28 ) }
    dend_75 { pt3dadd( -28.2222, 78.0189, -5.30265, 0.42 ) }
    dend_75 { pt3dadd( -29.1276, 78.7724, -5.27805, 0.1 ) }
    dend_75 { pt3dadd( -29.5763, 79.2038, -5.25638, 0.1 ) }
    dend_75 { pt3dadd( -30.0013, 79.6675, -5.22725, 0.1 ) }
    dend_75 { pt3dadd( -30.3973, 80.1471, -5.19231, 0.1 ) }
    dend_75 { pt3dadd( -30.7853, 80.6344, -5.19855, 0.14 ) }
    dend_75 { pt3dadd( -30.9608, 80.854, -5.21407, 0.28 ) }
    dend_75 { pt3dadd( -31.354, 81.325, -5.32128, 0.42 ) }
    dend_75 { pt3dadd( -31.7192, 81.7378, -5.43745, 0.56 ) }
    dend_75 { pt3dadd( -32.1316, 82.1809, -5.58434, 0.7 ) }
    dend_75 { pt3dadd( -32.9345, 82.9959, -5.88045, 0.56 ) }
    dend_75 { pt3dadd( -33.2066, 83.2574, -5.97676, 0.42 ) }
    dend_75 { pt3dadd( -33.7822, 83.7849, -6.15718, 0.42 ) }
    dend_75 { pt3dadd( -34.0627, 84.0442, -6.23308, 0.56 ) }
    dend_75 { pt3dadd( -34.0627, 84.0442, -6.23308, 0.7 ) }
    dend_75 { pt3dadd( -34.506, 84.4888, -6.28147, 0.56 ) }
    dend_75 { pt3dadd( -34.9197, 84.9518, -6.33104, 0.42 ) }
    dend_75 { pt3dadd( -35.3081, 85.4312, -6.41674, 0.28 ) }
    dend_75 { pt3dadd( -35.6389, 85.875, -6.52075, 0.14 ) }
    dend_75 { pt3dadd( -35.9972, 86.3675, -6.65152, 0.1 ) }
    dend_75 { pt3dadd( -36.3467, 86.8639, -6.79054, 0.1 ) }
    dend_75 { pt3dadd( -36.9529, 87.7719, -7.14462, 0.14 ) }
    dend_75 { pt3dadd( -36.9529, 87.7719, -7.14462, 0.28 ) }
    dend_75 { pt3dadd( -37.3036, 88.2571, -7.31667, 0.56 ) }
    dend_75 { pt3dadd( -37.6951, 88.7327, -7.40875, 0.42 ) }
    dend_75 { pt3dadd( -38.0767, 89.147, -7.40891, 0.56 ) }
    dend_75 { pt3dadd( -38.8193, 89.8583, -7.26143, 0.7 ) }
    dend_75 { pt3dadd( -39.7684, 90.652, -6.94903, 0.14 ) }
    dend_75 { pt3dadd( -40.0732, 90.8857, -6.84399, 0.1 ) }
    dend_75 { pt3dadd( -41.0662, 91.5825, -6.45799, 0.1 ) }
    dend_75 { pt3dadd( -41.3778, 91.7798, -6.33263, 0.14 ) }
    dend_75 { pt3dadd( -41.706, 91.9752, -6.20395, 0.28 ) }
    dend_75 { pt3dadd( -42.3465, 92.3675, -5.96656, 0.42 ) }
    dend_75 { pt3dadd( -42.6751, 92.5819, -5.89797, 0.56 ) }
    dend_75 { pt3dadd( -42.998, 92.8115, -5.85817, 0.42 ) }
    dend_75 { pt3dadd( -43.6224, 93.306, -5.85817, 0.7 ) }
    dend_75 { pt3dadd( -44.0959, 93.7176, -5.91927, 0.56 ) }
    dend_75 { pt3dadd( -44.5483, 94.1329, -6.02311, 0.42 ) }
    dend_75 { pt3dadd( -44.5483, 94.1329, -6.02311, 0.28 ) }
    dend_75 { pt3dadd( -44.9797, 94.5481, -6.21796, 0.1 ) }
    dend_75 { pt3dadd( -45.4205, 94.9475, -6.40298, 0.1 ) }
    dend_75 { pt3dadd( -46.2989, 95.6819, -6.68082, 0.1 ) }
    dend_75 { pt3dadd( -46.623, 95.9117, -6.70733, 0.1 ) }
    dend_75 { pt3dadd( -47.1568, 96.2253, -6.63879, 0.14 ) }
    dend_75 { pt3dadd( -48.08, 96.7051, -6.36302, 0.28 ) }
    dend_75 { pt3dadd( -49.0215, 97.1321, -5.78841, 0.84 ) }
    dend_75 { pt3dadd( -49.8233, 97.4926, -5.00656, 0.7 ) }
    dend_75 { pt3dadd( -50.5341, 97.8563, -4.13404, 0.84 ) }
    dend_75 { pt3dadd( -50.6838, 97.9484, -3.91398, 0.98 ) }
    dend_75 { pt3dadd( -50.8155, 98.0417, -3.6832, 1.12 ) }
    dend_75 { pt3dadd( -51.3122, 98.4474, -2.69498, 0.56 ) }
    dend_75 { pt3dadd( -51.806, 98.9195, -1.73508, 0.42 ) }
    dend_75 { pt3dadd( -52.0496, 99.1783, -1.29824, 0.28 ) }
    dend_75 { pt3dadd( -52.5926, 99.768, -0.434899, 0.28 ) }
    dend_75 { pt3dadd( -53.1345, 100.336, 0.301625, 0.42 ) }
    dend_75 { pt3dadd( -53.1345, 100.336, 0.301625, 0.56 ) }
    dend_75 { pt3dadd( -53.6387, 100.821, 0.673665, 0.7 ) }
    dend_75 { pt3dadd( -54.0632, 101.231, 0.87177, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -54.3368, 101.509, 0.953104, 0.42 ) }
    dend_75 { pt3dadd( -54.745, 101.978, 0.993711, 0.28 ) }
    dend_75 { pt3dadd( -55.1242, 102.479, 1.0387, 0.14 ) }
    dend_75 { pt3dadd( -55.4338, 102.94, 1.10863, 0.1 ) }
    dend_75 { pt3dadd( -55.7283, 103.468, 1.2619, 0.1 ) }
    dend_75 { pt3dadd( -55.9582, 103.946, 1.44979, 0.1 ) }
    dend_75 { pt3dadd( -56.1591, 104.418, 1.67484, 0.1 ) }
    dend_75 { pt3dadd( -56.5199, 105.36, 2.22363, 0.14 ) }
    dend_75 { pt3dadd( -56.5972, 105.583, 2.37658, 0.28 ) }
    dend_75 { pt3dadd( -56.8936, 106.414, 3.10093, 0.42 ) }
    dend_75 { pt3dadd( -57.03, 106.801, 3.48263, 0.56 ) }
    dend_75 { pt3dadd( -57.1057, 106.977, 3.68536, 0.56 ) }
    dend_75 { pt3dadd( -57.2755, 107.323, 4.09661, 0.7 ) }
    dend_75 { pt3dadd( -57.4691, 107.66, 4.50387, 0.98 ) }
    dend_75 { pt3dadd( -57.9189, 108.365, 5.33342, 0.84 ) }
    dend_75 { pt3dadd( -58.1505, 108.717, 5.70304, 0.7 ) }
    dend_75 { pt3dadd( -58.6656, 109.446, 6.47801, 0.56 ) }
    dend_75 { pt3dadd( -58.7956, 109.621, 6.65611, 0.42 ) }
    dend_75 { pt3dadd( -59.3747, 110.357, 7.37086, 0.1 ) }
    dend_75 { pt3dadd( -59.7188, 110.742, 7.73259, 0.1 ) }
    dend_75 { pt3dadd( -60.0499, 111.08, 8.01968, 0.14 ) }
    dend_75 { pt3dadd( -60.9073, 111.854, 8.56243, 0.1 ) }
    dend_75 { pt3dadd( -61.2061, 112.1, 8.65569, 0.1 ) }
    dend_75 { pt3dadd( -61.5106, 112.334, 8.71972, 0.1 ) }
    dend_75 { pt3dadd( -62.1587, 112.79, 8.71354, 0.14 ) }
    dend_75 { pt3dadd( -62.1587, 112.79, 8.71354, 0.28 ) }
    dend_75 { pt3dadd( -63.2064, 113.372, 8.26866, 0.84 ) }
    dend_75 { pt3dadd( -63.8926, 113.752, 7.64819, 0.84 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 28/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -18.3212, 70.0928, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -18.3399, 70.6557, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -18.3716, 71.2765, -5.76248, 0.98 ) }
    dend_64 { pt3dadd( -18.3979, 71.9057, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -18.4255, 72.4558, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -18.4617, 73.0178, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -18.5124, 73.6473, -5.76248, 0.7 ) }
    dend_64 { pt3dadd( -18.5707, 74.2075, -5.76248, 0.56 ) }
    dend_64 { pt3dadd( -18.6542, 74.8236, -5.76248, 0.56 ) }
    dend_64 { pt3dadd( -18.7378, 75.3805, -5.76248, 0.56 ) }
    dend_64 { pt3dadd( -18.8209, 75.9348, -5.76248, 0.7 ) }
    dend_64 { pt3dadd( -18.91, 76.4881, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -19.0212, 77.0402, -5.76248, 0.84 ) }
    dend_64 { pt3dadd( -19.0212, 77.0402, -5.76248, 0.98 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 42/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -36.8536, 61.6814, -38.4829, 1.12 ) }
    dend_58 { pt3dadd( -36.7143, 62.2144, -38.4829, 1.12 ) }
    dend_58 { pt3dadd( -36.5364, 62.8184, -38.4829, 0.98 ) }
    dend_58 { pt3dadd( -36.3293, 63.4045, -38.4829, 0.84 ) }
    dend_58 { pt3dadd( -36.1846, 63.7756, -38.4829, 0.7 ) }
    dend_58 { pt3dadd( -35.9319, 64.3523, -38.4829, 0.56 ) }
    dend_58 { pt3dadd( -35.658, 64.9118, -38.4829, 0.7 ) }
    dend_58 { pt3dadd( -35.34, 65.4574, -38.4829, 0.1 ) }
    dend_58 { pt3dadd( -34.9939, 65.9753, -38.4829, 0.14 ) }
    dend_58 { pt3dadd( -34.7555, 66.293, -38.5117, 0.1 ) }
    dend_58 { pt3dadd( -34.3776, 66.7816, -38.5921, 0.1 ) }
    dend_58 { pt3dadd( -33.997, 67.2625, -38.7007, 0.1 ) }
    dend_58 { pt3dadd( -33.7574, 67.5761, -38.783, 0.1 ) }
    dend_58 { pt3dadd( -33.3929, 68.0618, -38.9216, 0.1 ) }
    dend_58 { pt3dadd( -32.7345, 69.0069, -39.186, 0.14 ) }
    dend_58 { pt3dadd( -32.4014, 69.5122, -39.3196, 0.42 ) }
    dend_58 { pt3dadd( -32.1973, 69.8447, -39.3999, 0.28 ) }
    dend_58 { pt3dadd( -31.8057, 70.5205, -39.5345, 0.14 ) }
    dend_58 { pt3dadd( -31.6124, 70.8649, -39.5853, 0.1 ) }
    dend_58 { pt3dadd( -31.2394, 71.5564, -39.6423, 0.1 ) }
    dend_58 { pt3dadd( -31.0453, 71.9097, -39.6423, 0.1 ) }
    dend_58 { pt3dadd( -30.8572, 72.2508, -39.6423, 0.1 ) }
    dend_58 { pt3dadd( -30.4977, 72.9517, -39.6423, 0.1 ) }
    dend_58 { pt3dadd( -30.3349, 73.3133, -39.6784, 0.14 ) }
    dend_58 { pt3dadd( -30.1945, 73.6848, -39.7474, 0.28 ) }
    dend_58 { pt3dadd( -30.1173, 73.9445, -39.8137, 0.42 ) }
    dend_58 { pt3dadd( -29.9867, 74.4515, -40.0137, 0.1 ) }
    dend_58 { pt3dadd( -29.8628, 75.0015, -40.2715, 0.14 ) }
    dend_58 { pt3dadd( -29.6429, 76.037, -40.7988, 0.1 ) }
    dend_58 { pt3dadd( -29.5271, 76.582, -41.0705, 0.1 ) }
    dend_58 { pt3dadd( -29.4669, 76.8284, -41.1865, 0.1 ) }
    dend_58 { pt3dadd( -29.1618, 77.9365, -41.7338, 0.14 ) }
    dend_58 { pt3dadd( -28.9866, 78.4751, -42.009, 0.1 ) }
    dend_58 { pt3dadd( -28.8601, 78.82, -42.1748, 0.1 ) }
    dend_58 { pt3dadd( -28.642, 79.3567, -42.3953, 0.1 ) }
    dend_58 { pt3dadd( -28.3949, 79.8964, -42.6055, 0.1 ) }
    dend_58 { pt3dadd( -27.9037, 80.9116, -42.9438, 0.1 ) }
    dend_58 { pt3dadd( -27.7251, 81.2569, -43.0304, 0.14 ) }
    dend_58 { pt3dadd( -27.3518, 81.9322, -43.1891, 0.28 ) }
    dend_58 { pt3dadd( -27.1545, 82.2771, -43.2568, 0.42 ) }
    dend_58 { pt3dadd( -26.8393, 82.8086, -43.3354, 0.56 ) }
    dend_58 { pt3dadd( -26.5192, 83.349, -43.38, 0.42 ) }
    dend_58 { pt3dadd( -26.195, 83.8809, -43.38, 0.28 ) }
    dend_58 { pt3dadd( -25.9939, 84.2246, -43.38, 0.14 ) }
    dend_58 { pt3dadd( -25.6054, 84.9154, -43.38, 0.1 ) }
    dend_58 { pt3dadd( -25.4256, 85.2599, -43.4072, 0.1 ) }
    dend_58 { pt3dadd( -25.2533, 85.6153, -43.4582, 0.1 ) }
    dend_58 { pt3dadd( -24.9369, 86.3151, -43.6539, 0.1 ) }
    dend_58 { pt3dadd( -24.7111, 86.8643, -43.8633, 0.1 ) }
    dend_58 { pt3dadd( -24.5775, 87.1986, -44.012, 0.1 ) }
    dend_58 { pt3dadd( -24.1846, 88.1999, -44.504, 0.1 ) }
    dend_58 { pt3dadd( -24.0496, 88.5362, -44.669, 0.1 ) }
    dend_58 { pt3dadd( -23.6381, 89.5298, -45.1461, 0.1 ) }
    dend_58 { pt3dadd( -23.494, 89.8737, -45.2994, 0.1 ) }
    dend_58 { pt3dadd( -23.1853, 90.5521, -45.5541, 0.1 ) }
    dend_58 { pt3dadd( -23.022, 90.9029, -45.6485, 0.1 ) }
    dend_58 { pt3dadd( -22.6837, 91.6034, -45.8004, 0.1 ) }
    dend_58 { pt3dadd( -22.5079, 91.9523, -45.8773, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_58 { pt3dadd( -22.236, 92.4993, -45.9825, 0.1 ) }
    dend_58 { pt3dadd( -21.9791, 93.0592, -46.1129, 0.1 ) }
    dend_58 { pt3dadd( -21.7564, 93.6068, -46.3055, 0.1 ) }
    dend_58 { pt3dadd( -21.4092, 94.5422, -46.7093, 0.1 ) }
    dend_58 { pt3dadd( -21.3332, 94.7747, -46.8433, 0.1 ) }
    dend_58 { pt3dadd( -21.1987, 95.2331, -47.1364, 0.1 ) }
    dend_58 { pt3dadd( -21.0481, 95.7418, -47.4756, 0.1 ) }
    dend_58 { pt3dadd( -20.7703, 96.735, -48.0438, 0.1 ) }
    dend_58 { pt3dadd( -20.6676, 97.0847, -48.2042, 0.1 ) }
    dend_58 { pt3dadd( -20.3382, 98.1897, -48.463, 0.1 ) }
    dend_58 { pt3dadd( -20.1526, 98.7808, -48.515, 0.1 ) }
    dend_58 { pt3dadd( -19.9367, 99.3637, -48.4755, 0.1 ) }
    dend_58 { pt3dadd( -19.5225, 100.456, -48.3001, 0.1 ) }
    dend_58 { pt3dadd( -19.3839, 100.817, -48.2027, 0.1 ) }
    dend_58 { pt3dadd( -18.9575, 101.871, -47.8983, 0.1 ) }
    dend_58 { pt3dadd( -18.7947, 102.217, -47.7854, 0.14 ) }
    dend_58 { pt3dadd( -18.6596, 102.458, -47.7353, 0.14 ) }
    dend_58 { pt3dadd( -18.0334, 103.413, -47.7035, 0.28 ) }
    dend_58 { pt3dadd( -17.7806, 103.717, -47.7497, 0.28 ) }
    dend_58 { pt3dadd( -17.3511, 104.158, -47.8419, 0.14 ) }
    dend_58 { pt3dadd( -16.9445, 104.535, -47.9411, 0.1 ) }
    dend_58 { pt3dadd( -16.4765, 104.939, -48.0211, 0.1 ) }
    dend_58 { pt3dadd( -15.9884, 105.323, -48.0647, 0.1 ) }
    dend_58 { pt3dadd( -15.5314, 105.652, -48.0647, 0.1 ) }
    dend_58 { pt3dadd( -15.0176, 106.004, -48.0647, 0.1 ) }
    dend_58 { pt3dadd( -14.6884, 106.228, -48.0647, 0.14 ) }
    dend_58 { pt3dadd( -14.4543, 106.385, -48.0647, 0.28 ) }
    dend_58 { pt3dadd( -13.9855, 106.688, -48.1131, 0.7 ) }
    dend_58 { pt3dadd( -13.6507, 106.895, -48.1747, 0.56 ) }
    dend_58 { pt3dadd( -13.1836, 107.184, -48.2862, 0.42 ) }
    dend_58 { pt3dadd( -12.6598, 107.491, -48.4251, 0.28 ) }
    dend_58 { pt3dadd( -12.1827, 107.76, -48.5571, 0.14 ) }
    dend_58 { pt3dadd( -11.1869, 108.319, -48.8468, 0.1 ) }
    dend_58 { pt3dadd( -10.7191, 108.598, -48.9892, 0.1 ) }
    dend_58 { pt3dadd( -10.2074, 108.92, -49.1404, 0.1 ) }
    dend_58 { pt3dadd( -9.76945, 109.232, -49.3066, 0.1 ) }
    dend_58 { pt3dadd( -9.56264, 109.397, -49.3956, 0.1 ) }
    dend_58 { pt3dadd( -9.56264, 109.397, -49.3956, 0.1 ) }
    dend_58 { pt3dadd( -9.18456, 109.824, -49.6617, 0.1 ) }
    dend_58 { pt3dadd( -8.86644, 110.273, -49.9538, 0.1 ) }
    dend_58 { pt3dadd( -8.39104, 111.09, -50.4685, 0.1 ) }
    dend_58 { pt3dadd( -8.14065, 111.589, -50.7608, 0.1 ) }
    dend_58 { pt3dadd( -7.73978, 112.446, -51.2753, 0.14 ) }
    dend_58 { pt3dadd( -7.51306, 112.942, -51.5702, 0.1 ) }
    dend_58 { pt3dadd( -7.29802, 113.44, -51.8923, 0.1 ) }
    dend_58 { pt3dadd( -7.10184, 113.936, -52.2081, 0.14 ) }
    dend_58 { pt3dadd( -6.97109, 114.262, -52.396, 0.28 ) }
    dend_58 { pt3dadd( -6.54333, 115.308, -52.9885, 0.14 ) }
    dend_58 { pt3dadd( -6.39559, 115.638, -53.1555, 0.1 ) }
    dend_58 { pt3dadd( -5.90618, 116.593, -53.6378, 0.1 ) }
    dend_58 { pt3dadd( -5.72295, 116.917, -53.7928, 0.1 ) }
    dend_58 { pt3dadd( -5.42588, 117.424, -53.9992, 0.1 ) }
    dend_58 { pt3dadd( -5.2307, 117.757, -54.0992, 0.1 ) }
    dend_58 { pt3dadd( -4.83467, 118.43, -54.2, 0.1 ) }
    dend_58 { pt3dadd( -4.52075, 118.983, -54.2439, 0.1 ) }
    dend_58 { pt3dadd( -4.33224, 119.323, -54.2439, 0.1 ) }
    dend_58 { pt3dadd( -4.04956, 119.884, -54.2876, 0.1 ) }
    dend_58 { pt3dadd( -3.88971, 120.246, -54.338, 0.1 ) }
    dend_58 { pt3dadd( -3.59409, 120.969, -54.4725, 0.1 ) }
    dend_58 { pt3dadd( -3.38577, 121.539, -54.5986, 0.1 ) }
    dend_58 { pt3dadd( -3.26576, 121.908, -54.6856, 0.1 ) }
    dend_58 { pt3dadd( -2.91018, 123.004, -54.9551, 0.1 ) }
    dend_58 { pt3dadd( -2.7167, 123.582, -55.0636, 0.1 ) }
    dend_58 { pt3dadd( -2.58169, 123.96, -55.1058, 0.1 ) }
    dend_58 { pt3dadd( -2.34495, 124.533, -55.1157, 0.1 ) }
    dend_58 { pt3dadd( -2.05863, 125.093, -55.0643, 0.1 ) }
    dend_58 { pt3dadd( -1.92227, 125.324, -55.0183, 0.14 ) }
    dend_58 { pt3dadd( -1.32711, 126.179, -54.753, 0.28 ) }
    dend_58 { pt3dadd( -0.941748, 126.645, -54.6051, 0.14 ) }
    dend_58 { pt3dadd( -0.547796, 127.102, -54.4238, 0.1 ) }
    dend_58 { pt3dadd( -0.174878, 127.539, -54.1837, 0.1 ) }
    dend_58 { pt3dadd( 0.0392909, 127.808, -53.9821, 0.1 ) }
    dend_58 { pt3dadd( 0.331586, 128.233, -53.6336, 0.1 ) }
    dend_58 { pt3dadd( 0.549276, 128.615, -53.2808, 0.14 ) }
    dend_58 { pt3dadd( 0.912267, 129.367, -52.503, 0.1 ) }
    dend_58 { pt3dadd( 1.24284, 130.172, -51.7027, 0.1 ) }
    dend_58 { pt3dadd( 1.51433, 130.934, -50.9925, 0.1 ) }
    dend_58 { pt3dadd( 1.65878, 131.39, -50.5954, 0.1 ) }
    dend_58 { pt3dadd( 1.87344, 132.222, -49.7841, 0.1 ) }
    dend_58 { pt3dadd( 1.94992, 132.451, -50.0956, 0.14 ) }
    dend_58 { pt3dadd( 2.36352, 133.697, -51.6308, 0.28 ) }
    dend_58 { pt3dadd( 2.58157, 134.332, -52.4719, 0.14 ) }
    dend_58 { pt3dadd( 2.81159, 134.965, -53.3119, 0.28 ) }
    dend_58 { pt3dadd( 2.87632, 135.126, -53.5333, 0.42 ) }
    dend_58 { pt3dadd( 3.02805, 135.496, -54.0071, 0.14 ) }
    dend_58 { pt3dadd( 3.20446, 135.942, -54.418, 0.1 ) }
    dend_58 { pt3dadd( 3.32812, 136.271, -54.5862, 0.1 ) }
    dend_58 { pt3dadd( 3.56857, 136.993, -54.8372, 0.1 ) }
    dend_58 { pt3dadd( 3.86509, 137.991, -55.0965, 0.1 ) }
    dend_58 { pt3dadd( 4.02084, 138.573, -55.278, 0.1 ) }
    dend_58 { pt3dadd( 4.16193, 139.145, -55.4779, 0.1 ) }
    dend_58 { pt3dadd( 4.21939, 139.405, -55.5703, 0.1 ) }
    dend_58 { pt3dadd( 4.34198, 139.988, -55.7724, 0.1 ) }
    dend_58 { pt3dadd( 4.44884, 140.573, -55.9558, 0.1 ) }
    dend_58 { pt3dadd( 4.64631, 141.704, -56.2345, 0.1 ) }
    dend_58 { pt3dadd( 4.74155, 142.301, -56.38, 0.1 ) }
    dend_58 { pt3dadd( 4.83182, 142.909, -56.5157, 0.1 ) }
    dend_58 { pt3dadd( 4.87115, 143.183, -56.5667, 0.1 ) }
    dend_58 { pt3dadd( 4.93285, 143.735, -56.6429, 0.1 ) }
    dend_58 { pt3dadd( 4.98659, 144.351, -56.6885, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_58 { pt3dadd( 5.02675, 144.91, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.05996, 145.529, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.07739, 146.16, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.07635, 146.723, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.07453, 147.345, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.07049, 147.974, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.07358, 148.253, -56.6885, 0.1 ) }
    dend_58 { pt3dadd( 5.08607, 148.815, -56.73, 0.14 ) }
    dend_58 { pt3dadd( 5.1008, 149.37, -56.8061, 0.1 ) }
    dend_58 { pt3dadd( 5.12906, 149.979, -56.9184, 0.1 ) }
    dend_58 { pt3dadd( 5.15281, 150.596, -57.0519, 0.1 ) }
    dend_58 { pt3dadd( 5.17009, 150.975, -57.1394, 0.1 ) }
    dend_58 { pt3dadd( 5.22441, 152.125, -57.404, 0.1 ) }
    dend_58 { pt3dadd( 5.25408, 152.672, -57.5251, 0.1 ) }
    dend_58 { pt3dadd( 5.28722, 153.279, -57.6467, 0.1 ) }
    dend_58 { pt3dadd( 5.30583, 153.831, -57.7419, 0.1 ) }
    dend_58 { pt3dadd( 5.32053, 154.448, -57.8649, 0.1 ) }
    dend_58 { pt3dadd( 5.3242, 154.988, -57.9723, 0.1 ) }
    dend_58 { pt3dadd( 5.31954, 155.61, -58.0798, 0.1 ) }
    dend_58 { pt3dadd( 5.3062, 156.217, -58.2056, 0.1 ) }
    dend_58 { pt3dadd( 5.29639, 156.495, -58.2496, 0.1 ) }
    dend_58 { pt3dadd( 5.26205, 157.671, -58.3717, 0.1 ) }
    dend_58 { pt3dadd( 5.23695, 158.233, -58.3989, 0.1 ) }
    dend_58 { pt3dadd( 5.22071, 158.793, -58.3987, 0.1 ) }
    dend_58 { pt3dadd( 5.20088, 159.346, -58.3661, 0.14 ) }
    dend_58 { pt3dadd( 5.15102, 160.519, -58.2229, 0.1 ) }
    dend_58 { pt3dadd( 5.12094, 161.144, -58.1574, 0.1 ) }
    dend_58 { pt3dadd( 5.08392, 161.691, -58.0991, 0.1 ) }
    dend_58 { pt3dadd( 5.05981, 162.086, -58.1374, 0.1 ) }
    dend_58 { pt3dadd( 5.03282, 162.627, -58.2921, 0.1 ) }
    dend_58 { pt3dadd( 5.01502, 163.124, -58.5514, 0.1 ) }
    dend_58 { pt3dadd( 4.97655, 164.075, -59.192, 0.1 ) }
    dend_58 { pt3dadd( 4.96315, 164.533, -59.5152, 0.1 ) }
    dend_58 { pt3dadd( 4.95889, 165.502, -60.1819, 0.1 ) }
    dend_58 { pt3dadd( 4.96507, 166.048, -60.4992, 0.1 ) }
    dend_58 { pt3dadd( 5.03325, 167.104, -61.0143, 0.1 ) }
    dend_58 { pt3dadd( 5.0595, 167.366, -61.1054, 0.1 ) }
    dend_58 { pt3dadd( 5.13982, 167.989, -61.1515, 0.1 ) }
    dend_58 { pt3dadd( 5.22682, 168.599, -61.0731, 0.1 ) }
    dend_58 { pt3dadd( 5.36361, 169.722, -60.7291, 0.1 ) }
    dend_58 { pt3dadd( 5.40478, 170.072, -60.5643, 0.1 ) }
    dend_58 { pt3dadd( 5.46836, 170.549, -60.2772, 0.1 ) }
    dend_58 { pt3dadd( 5.58453, 171.541, -59.645, 0.1 ) }
    dend_58 { pt3dadd( 5.62509, 172.061, -59.3071, 0.1 ) }
    dend_58 { pt3dadd( 5.6398, 172.555, -59.0361, 0.1 ) }
    dend_58 { pt3dadd( 5.60681, 173.567, -58.6662, 0.14 ) }
    dend_58 { pt3dadd( 5.58055, 173.832, -58.6273, 0.28 ) }
    dend_58 { pt3dadd( 5.4799, 174.45, -58.7025, 0.1 ) }
    dend_58 { pt3dadd( 5.36981, 174.914, -58.978, 0.1 ) }
    dend_58 { pt3dadd( 5.12979, 175.788, -59.682, 0.1 ) }
    dend_58 { pt3dadd( 5.02167, 176.193, -60.0535, 0.1 ) }
    dend_58 { pt3dadd( 4.80519, 177.006, -60.8347, 0.1 ) }
    dend_58 { pt3dadd( 4.70829, 177.41, -61.2104, 0.14 ) }
    dend_58 { pt3dadd( 4.4075, 178.95, -62.573, 0.28 ) }
    dend_58 { pt3dadd( 4.33955, 179.379, -62.911, 0.28 ) }
    dend_58 { pt3dadd( 4.29855, 179.711, -63.1268, 0.14 ) }
    dend_58 { pt3dadd( 4.25068, 180.204, -63.3894, 0.1 ) }
    dend_58 { pt3dadd( 4.21551, 180.793, -63.5811, 0.1 ) }
    dend_58 { pt3dadd( 4.20421, 181.345, -63.6772, 0.1 ) }
    dend_58 { pt3dadd( 4.20325, 181.974, -63.6772, 0.1 ) }
    dend_58 { pt3dadd( 4.20325, 181.974, -63.6772, 0.1 ) }
    dend_58 { pt3dadd( 4.2005, 182.535, -63.6772, 0.1 ) }
    dend_58 { pt3dadd( 4.2107, 183.155, -63.6772, 0.1 ) }
    dend_58 { pt3dadd( 4.21904, 183.786, -63.6772, 0.1 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 64/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -36.8536, 61.6814, -38.4829, 0.7 ) }
    dend_57 { pt3dadd( -37.5322, 61.9937, -38.7329, 0.7 ) }
    dend_57 { pt3dadd( -38.0614, 62.2703, -38.933, 0.56 ) }
    dend_57 { pt3dadd( -38.3915, 62.4539, -39.0466, 0.42 ) }
    dend_57 { pt3dadd( -38.9186, 62.7555, -39.213, 0.28 ) }
    dend_57 { pt3dadd( -39.8991, 63.345, -39.4942, 0.14 ) }
    dend_57 { pt3dadd( -40.2274, 63.5536, -39.5794, 0.1 ) }
    dend_57 { pt3dadd( -40.736, 63.9038, -39.7059, 0.1 ) }
    dend_57 { pt3dadd( -41.3628, 64.3763, -39.841, 0.14 ) }
    dend_57 { pt3dadd( -41.664, 64.6184, -39.8897, 0.1 ) }
    dend_57 { pt3dadd( -42.1407, 65.0206, -39.9763, 0.1 ) }
    dend_57 { pt3dadd( -42.6038, 65.43, -40.0537, 0.1 ) }
    dend_57 { pt3dadd( -42.893, 65.7025, -40.1215, 0.1 ) }
    dend_57 { pt3dadd( -43.325, 66.1332, -40.2476, 0.1 ) }
    dend_57 { pt3dadd( -43.7402, 66.5766, -40.3852, 0.1 ) }
    dend_57 { pt3dadd( -44.4514, 67.3473, -40.6279, 0.1 ) }
    dend_57 { pt3dadd( -44.8183, 67.7386, -40.7902, 0.14 ) }
    dend_57 { pt3dadd( -45.2221, 68.1718, -41.0041, 0.28 ) }
    dend_57 { pt3dadd( -45.6145, 68.598, -41.233, 0.14 ) }
    dend_57 { pt3dadd( -45.9991, 69.0282, -41.4675, 0.1 ) }
    dend_57 { pt3dadd( -46.2441, 69.3103, -41.6054, 0.14 ) }
    dend_57 { pt3dadd( -46.8975, 70.1169, -41.8969, 0.28 ) }
    dend_57 { pt3dadd( -47.131, 70.4131, -42.0391, 0.42 ) }
    dend_57 { pt3dadd( -47.4604, 70.8819, -42.2837, 0.7 ) }
    dend_57 { pt3dadd( -47.7326, 71.3226, -42.5046, 0.56 ) }
    dend_57 { pt3dadd( -48.0128, 71.8098, -42.7732, 0.42 ) }
    dend_57 { pt3dadd( -48.2541, 72.2593, -43.0119, 0.28 ) }
    dend_57 { pt3dadd( -48.7473, 73.2256, -43.4712, 0.14 ) }
    dend_57 { pt3dadd( -48.9796, 73.6724, -43.7172, 0.1 ) }
    dend_57 { pt3dadd( -49.2016, 74.1148, -43.9859, 0.1 ) }
    dend_57 { pt3dadd( -49.6531, 75.0378, -44.5622, 0.1 ) }
    dend_57 { pt3dadd( -49.8683, 75.4832, -44.8315, 0.1 ) }
    dend_57 { pt3dadd( -50.0873, 75.9335, -45.0832, 0.1 ) }
    dend_57 { pt3dadd( -50.57, 76.9092, -45.5338, 0.1 ) }
    dend_57 { pt3dadd( -50.8119, 77.3752, -45.7376, 0.1 ) }
    dend_57 { pt3dadd( -51.0688, 77.8427, -45.9095, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_57 { pt3dadd( -51.3687, 78.3813, -46.0379, 0.1 ) }
    dend_57 { pt3dadd( -51.5054, 78.6204, -46.0819, 0.1 ) }
    dend_57 { pt3dadd( -51.812, 79.1676, -46.1376, 0.1 ) }
    dend_57 { pt3dadd( -51.812, 79.1676, -46.1376, 0.1 ) }
    dend_57 { pt3dadd( -52.1066, 79.7075, -46.2359, 0.1 ) }
    dend_57 { pt3dadd( -52.3576, 80.1816, -46.3984, 0.1 ) }
    dend_57 { pt3dadd( -52.6037, 80.6306, -46.6088, 0.1 ) }
    dend_57 { pt3dadd( -52.8624, 81.0678, -46.8456, 0.1 ) }
    dend_57 { pt3dadd( -53.4302, 81.9575, -47.3771, 0.14 ) }
    dend_57 { pt3dadd( -53.7107, 82.3534, -47.6576, 0.28 ) }
    dend_57 { pt3dadd( -54.2356, 83.0194, -48.1875, 0.42 ) }
    dend_57 { pt3dadd( -54.6692, 83.4985, -48.6465, 0.1 ) }
    dend_57 { pt3dadd( -55.0295, 83.8587, -49.0167, 0.1 ) }
    dend_57 { pt3dadd( -55.2612, 84.0632, -49.2537, 0.1 ) }
    dend_57 { pt3dadd( -55.9676, 84.6471, -49.9997, 0.1 ) }
    dend_57 { pt3dadd( -56.3411, 84.9385, -50.4042, 0.1 ) }
    dend_57 { pt3dadd( -56.9938, 85.4501, -51.0904, 0.1 ) }
    dend_57 { pt3dadd( -57.365, 85.7464, -51.4934, 0.1 ) }
    dend_57 { pt3dadd( -58.0813, 86.3233, -52.2369, 0.14 ) }
    dend_57 { pt3dadd( -58.8205, 86.9242, -52.9301, 0.1 ) }
    dend_57 { pt3dadd( -59.0755, 87.135, -53.1518, 0.1 ) }
    dend_57 { pt3dadd( -59.4823, 87.4741, -53.4798, 0.1 ) }
    dend_57 { pt3dadd( -59.8931, 87.8213, -53.7939, 0.1 ) }
    dend_57 { pt3dadd( -60.2957, 88.1668, -54.1464, 0.1 ) }
    dend_57 { pt3dadd( -60.5392, 88.3808, -54.3624, 0.14 ) }
    dend_57 { pt3dadd( -61.1746, 88.9069, -54.9939, 0.28 ) }
    dend_57 { pt3dadd( -61.6437, 89.2772, -55.5071, 0.28 ) }
    dend_57 { pt3dadd( -62.2922, 89.7416, -56.2297, 0.14 ) }
    dend_57 { pt3dadd( -63.0195, 90.2328, -57.0157, 0.1 ) }
    dend_57 { pt3dadd( -63.282, 90.397, -57.2739, 0.1 ) }
    dend_57 { pt3dadd( -64.1678, 90.9225, -58.022, 0.1 ) }
    dend_57 { pt3dadd( -64.4611, 91.0907, -58.2325, 0.1 ) }
    dend_57 { pt3dadd( -64.9289, 91.3664, -58.5353, 0.1 ) }
    dend_57 { pt3dadd( -65.4255, 91.6631, -58.7839, 0.14 ) }
    dend_57 { pt3dadd( -65.9244, 91.9713, -58.9846, 0.1 ) }
    dend_57 { pt3dadd( -66.2332, 92.1801, -59.1248, 0.1 ) }
    dend_57 { pt3dadd( -67.0921, 92.8284, -59.614, 0.1 ) }
    dend_57 { pt3dadd( -67.5176, 93.176, -59.9217, 0.14 ) }
    dend_57 { pt3dadd( -67.7638, 93.3952, -60.1291, 0.1 ) }
    dend_57 { pt3dadd( -68.1473, 93.7561, -60.4743, 0.1 ) }
    dend_57 { pt3dadd( -68.8328, 94.4734, -61.1096, 0.14 ) }
    dend_57 { pt3dadd( -69.5165, 95.2296, -61.7002, 0.28 ) }
    dend_57 { pt3dadd( -69.5165, 95.2296, -61.7002, 0.42 ) }
    dend_57 { pt3dadd( -69.8656, 95.673, -61.9794, 0.28 ) }
    dend_57 { pt3dadd( -70.1956, 96.1317, -62.2416, 0.14 ) }
    dend_57 { pt3dadd( -70.4804, 96.5679, -62.4483, 0.1 ) }
    dend_57 { pt3dadd( -70.7871, 97.0901, -62.6205, 0.1 ) }
    dend_57 { pt3dadd( -71.0429, 97.573, -62.745, 0.1 ) }
    dend_57 { pt3dadd( -71.565, 98.6013, -63.0032, 0.1 ) }
    dend_57 { pt3dadd( -71.7985, 99.0964, -63.1233, 0.1 ) }
    dend_57 { pt3dadd( -72.0174, 99.591, -63.2701, 0.1 ) }
    dend_57 { pt3dadd( -72.2294, 100.087, -63.433, 0.1 ) }
    dend_57 { pt3dadd( -72.4372, 100.58, -63.5977, 0.1 ) }
    dend_57 { pt3dadd( -72.685, 101.133, -63.7695, 0.1 ) }
    dend_57 { pt3dadd( -72.9085, 101.62, -63.9341, 0.1 ) }
    dend_57 { pt3dadd( -73.3914, 102.574, -64.3338, 0.1 ) }
    dend_57 { pt3dadd( -73.514, 102.804, -64.4409, 0.1 ) }
    dend_57 { pt3dadd( -73.7924, 103.294, -64.7205, 0.1 ) }
    dend_57 { pt3dadd( -74.0797, 103.771, -65.0167, 0.1 ) }
    dend_57 { pt3dadd( -74.6059, 104.625, -65.5617, 0.1 ) }
    dend_57 { pt3dadd( -74.9168, 105.1, -65.851, 0.1 ) }
    dend_57 { pt3dadd( -75.2035, 105.516, -66.0705, 0.1 ) }
    dend_57 { pt3dadd( -75.8544, 106.395, -66.5074, 0.1 ) }
    dend_57 { pt3dadd( -76.2272, 106.865, -66.7213, 0.1 ) }
    dend_57 { pt3dadd( -76.3983, 107.064, -66.7944, 0.1 ) }
    dend_57 { pt3dadd( -76.8278, 107.512, -66.9029, 0.1 ) }
    dend_57 { pt3dadd( -77.2697, 107.944, -66.983, 0.1 ) }
    dend_57 { pt3dadd( -77.8502, 108.477, -67.0959, 0.1 ) }
    dend_57 { pt3dadd( -78.1395, 108.733, -67.146, 0.1 ) }
    dend_57 { pt3dadd( -78.6084, 109.139, -67.2541, 0.1 ) }
    dend_57 { pt3dadd( -78.8961, 109.388, -67.3594, 0.1 ) }
    dend_57 { pt3dadd( -79.3459, 109.764, -67.5703, 0.1 ) }
    dend_57 { pt3dadd( -80.1784, 110.465, -68.0307, 0.1 ) }
    dend_57 { pt3dadd( -80.4423, 110.695, -68.2018, 0.1 ) }
    dend_57 { pt3dadd( -80.8669, 111.06, -68.4893, 0.14 ) }
    dend_57 { pt3dadd( -81.6857, 111.714, -69.0274, 0.1 ) }
    dend_57 { pt3dadd( -82.1431, 112.055, -69.2985, 0.1 ) }
    dend_57 { pt3dadd( -82.3624, 112.195, -69.3991, 0.14 ) }
    dend_57 { pt3dadd( -82.7026, 112.374, -69.4879, 0.28 ) }
    dend_57 { pt3dadd( -83.3998, 112.691, -69.6912, 0.7 ) }
    dend_57 { pt3dadd( -83.9705, 112.905, -69.8494, 0.56 ) }
    dend_57 { pt3dadd( -84.3375, 113.023, -69.9336, 0.42 ) }
    dend_57 { pt3dadd( -84.9254, 113.196, -70.0775, 0.28 ) }
    dend_57 { pt3dadd( -85.5084, 113.359, -70.2195, 0.14 ) }
    dend_57 { pt3dadd( -86.5212, 113.636, -70.4568, 0.14 ) }
    dend_57 { pt3dadd( -87.117, 113.787, -70.5935, 0.1 ) }
    dend_57 { pt3dadd( -87.7046, 113.948, -70.7169, 0.1 ) }
    dend_57 { pt3dadd( -88.3017, 114.118, -70.8215, 0.1 ) }
    dend_57 { pt3dadd( -88.671, 114.232, -70.8701, 0.1 ) }
    dend_57 { pt3dadd( -89.2657, 114.44, -70.9135, 0.14 ) }
    dend_57 { pt3dadd( -89.8385, 114.673, -70.9564, 0.28 ) }
    dend_57 { pt3dadd( -90.4027, 114.941, -71.037, 0.14 ) }
    dend_57 { pt3dadd( -90.9297, 115.233, -71.1902, 0.1 ) }
    dend_57 { pt3dadd( -91.2527, 115.422, -71.3261, 0.14 ) }
    dend_57 { pt3dadd( -91.7481, 115.701, -71.5807, 0.14 ) }
    dend_57 { pt3dadd( -92.6809, 116.178, -72.127, 0.1 ) }
    dend_57 { pt3dadd( -92.9985, 116.309, -72.3213, 0.1 ) }
    dend_57 { pt3dadd( -93.8924, 116.541, -72.7915, 0.14 ) }
    dend_57 { pt3dadd( -94.4147, 116.58, -72.991, 0.1 ) }
    dend_57 { pt3dadd( -94.9601, 116.492, -73.085, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_57 { pt3dadd( -95.4786, 116.298, -73.0768, 0.1 ) }
    dend_57 { pt3dadd( -95.9598, 116.04, -72.9499, 0.1 ) }
    dend_57 { pt3dadd( -96.9149, 115.451, -72.5795, 0.1 ) }
    dend_57 { pt3dadd( -97.3916, 115.14, -72.3087, 0.1 ) }
    dend_57 { pt3dadd( -97.8421, 114.829, -72.012, 0.1 ) }
    dend_57 { pt3dadd( -98.1255, 114.63, -71.8147, 0.1 ) }
    dend_57 { pt3dadd( -98.9729, 114.054, -71.234, 0.1 ) }
    dend_57 { pt3dadd( -99.3895, 113.779, -70.9722, 0.1 ) }
    dend_57 { pt3dadd( -100.288, 113.241, -70.5076, 0.1 ) }
    dend_57 { pt3dadd( -100.807, 112.948, -70.3029, 0.1 ) }
    dend_57 { pt3dadd( -101.291, 112.692, -70.1834, 0.1 ) }
    dend_57 { pt3dadd( -101.782, 112.447, -70.1423, 0.1 ) }
    dend_57 { pt3dadd( -102.344, 112.166, -70.192, 0.1 ) }
    dend_57 { pt3dadd( -102.836, 111.914, -70.279, 0.1 ) }
    dend_57 { pt3dadd( -103.862, 111.392, -70.5483, 0.14 ) }
    dend_57 { pt3dadd( -104.349, 111.145, -70.6748, 0.1 ) }
    dend_57 { pt3dadd( -104.836, 110.894, -70.7924, 0.1 ) }
    dend_57 { pt3dadd( -105.375, 110.609, -70.9491, 0.1 ) }
    dend_57 { pt3dadd( -105.613, 110.478, -71.0238, 0.1 ) }
    dend_57 { pt3dadd( -106.087, 110.212, -71.1621, 0.1 ) }
    dend_57 { pt3dadd( -106.62, 109.913, -71.2818, 0.1 ) }
    dend_57 { pt3dadd( -107.09, 109.632, -71.4128, 0.1 ) }
    dend_57 { pt3dadd( -108.048, 109.034, -71.7471, 0.14 ) }
    dend_57 { pt3dadd( -108.365, 108.836, -71.8855, 0.28 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 24/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -16.3143, 39.033, -36.6221, 1.12 ) }
    dend_55 { pt3dadd( -17.461, 39.7488, -38.2223, 1.12 ) }
    dend_55 { pt3dadd( -17.6078, 39.8391, -38.445, 1.12 ) }
    dend_55 { pt3dadd( -17.9968, 40.0759, -39.0878, 0.14 ) }
    dend_55 { pt3dadd( -18.5227, 40.4271, -39.961, 0.1 ) }
    dend_55 { pt3dadd( -19.0325, 40.7976, -40.8297, 0.1 ) }
    dend_55 { pt3dadd( -19.6219, 41.256, -41.8674, 0.1 ) }
    dend_55 { pt3dadd( -20.0785, 41.6221, -42.7669, 0.1 ) }
    dend_55 { pt3dadd( -20.5392, 41.9973, -43.6667, 0.1 ) }
    dend_55 { pt3dadd( -20.7765, 42.1988, -44.1211, 0.1 ) }
    dend_55 { pt3dadd( -21.3323, 42.6733, -45.0548, 0.1 ) }
    dend_55 { pt3dadd( -21.9246, 43.2022, -45.925, 0.1 ) }
    dend_55 { pt3dadd( -21.9246, 43.2022, -45.925, 0.14 ) }
    dend_55 { pt3dadd( -22.3558, 43.608, -46.4446, 0.1 ) }
    dend_55 { pt3dadd( -22.5709, 43.817, -46.7066, 0.1 ) }
    dend_55 { pt3dadd( -23.2561, 44.4896, -47.547, 0.1 ) }
    dend_55 { pt3dadd( -23.5551, 44.8117, -47.8992, 0.1 ) }
    dend_55 { pt3dadd( -24.0922, 45.4491, -48.5751, 0.1 ) }
    dend_55 { pt3dadd( -24.3538, 45.797, -48.9325, 0.14 ) }
    dend_55 { pt3dadd( -24.7857, 46.4437, -49.6176, 0.28 ) }
    dend_55 { pt3dadd( -25.0343, 46.853, -50.0274, 0.7 ) }
    dend_55 { pt3dadd( -25.2362, 47.2214, -50.3837, 0.56 ) }
    dend_55 { pt3dadd( -25.6425, 47.9966, -51.1835, 0.42 ) }
    dend_55 { pt3dadd( -25.822, 48.3593, -51.5572, 0.28 ) }
    dend_55 { pt3dadd( -26.2215, 49.119, -52.3642, 0.14 ) }
    dend_55 { pt3dadd( -26.4326, 49.4809, -52.7406, 0.1 ) }
    dend_55 { pt3dadd( -26.8938, 50.1936, -53.511, 0.1 ) }
    dend_55 { pt3dadd( -27.4151, 50.8894, -54.2602, 0.14 ) }
    dend_55 { pt3dadd( -27.4151, 50.8894, -54.2602, 0.28 ) }
    dend_55 { pt3dadd( -27.8443, 51.3418, -54.7415, 0.1 ) }
    dend_55 { pt3dadd( -28.2127, 51.681, -55.1262, 0.1 ) }
    dend_55 { pt3dadd( -28.4523, 51.8769, -55.3626, 0.1 ) }
    dend_55 { pt3dadd( -28.7174, 52.0757, -55.5836, 0.14 ) }
    dend_55 { pt3dadd( -28.9082, 52.2214, -55.7308, 0.28 ) }
    dend_55 { pt3dadd( -29.6165, 52.8132, -56.2846, 0.84 ) }
    dend_55 { pt3dadd( -30.3357, 53.4653, -56.9521, 0.7 ) }
    dend_55 { pt3dadd( -30.7003, 53.8135, -57.318, 0.56 ) }
    dend_55 { pt3dadd( -30.9386, 54.0429, -57.5483, 0.42 ) }
    dend_55 { pt3dadd( -31.3067, 54.3967, -57.9051, 0.28 ) }
    dend_55 { pt3dadd( -31.6788, 54.7405, -58.2791, 0.14 ) }
    dend_55 { pt3dadd( -32.2851, 55.3079, -58.9589, 0.28 ) }
    dend_55 { pt3dadd( -32.2851, 55.3079, -58.9589, 0.42 ) }
    dend_55 { pt3dadd( -32.5945, 55.6098, -59.4168, 0.1 ) }
    dend_55 { pt3dadd( -33.1352, 56.1887, -60.2888, 0.1 ) }
    dend_55 { pt3dadd( -33.5661, 56.736, -61.1095, 0.1 ) }
    dend_55 { pt3dadd( -33.9743, 57.3948, -62.002, 0.1 ) }
    dend_55 { pt3dadd( -33.9743, 57.3948, -62.002, 0.14 ) }
    dend_55 { pt3dadd( -34.1056, 57.7709, -62.3824, 0.1 ) }
    dend_55 { pt3dadd( -34.1917, 58.1856, -62.7536, 0.1 ) }
    dend_55 { pt3dadd( -34.2601, 59.1203, -63.4751, 0.14 ) }
    dend_55 { pt3dadd( -34.256, 59.6261, -63.8333, 0.1 ) }
    dend_55 { pt3dadd( -34.2328, 60.0893, -64.148, 0.1 ) }
    dend_55 { pt3dadd( -34.1856, 61.0664, -64.811, 0.1 ) }
    dend_55 { pt3dadd( -34.1735, 61.3793, -65.0425, 0.1 ) }
    dend_55 { pt3dadd( -34.1678, 62.3291, -65.7473, 0.14 ) }
    dend_55 { pt3dadd( -34.1678, 62.3291, -65.7473, 0.28 ) }
    dend_55 { pt3dadd( -34.1998, 62.7722, -66.0934, 0.28 ) }
    dend_55 { pt3dadd( -34.2369, 63.2154, -66.4184, 0.14 ) }
    dend_55 { pt3dadd( -34.3208, 64.1452, -67.0837, 0.1 ) }
    dend_55 { pt3dadd( -34.3555, 64.6048, -67.4073, 0.1 ) }
    dend_55 { pt3dadd( -34.3956, 65.5989, -68.0469, 0.14 ) }
    dend_55 { pt3dadd( -34.3926, 66.0802, -68.3393, 0.1 ) }
    dend_55 { pt3dadd( -34.3568, 66.619, -68.6474, 0.1 ) }
    dend_55 { pt3dadd( -34.2385, 67.5792, -69.1193, 0.14 ) }
    dend_55 { pt3dadd( -34.149, 68.1554, -69.3295, 0.1 ) }
    dend_55 { pt3dadd( -34.0553, 68.7555, -69.5024, 0.1 ) }
    dend_55 { pt3dadd( -33.9756, 69.3513, -69.6535, 0.1 ) }
    dend_55 { pt3dadd( -33.9301, 69.7333, -69.7565, 0.14 ) }
    dend_55 { pt3dadd( -33.8723, 70.3284, -69.9598, 0.28 ) }
    dend_55 { pt3dadd( -33.8318, 70.8267, -70.1911, 0.42 ) }
    dend_55 { pt3dadd( -33.7892, 71.3025, -70.4893, 0.56 ) }
    dend_55 { pt3dadd( -33.7047, 72.1028, -71.1464, 0.42 ) }
    dend_55 { pt3dadd( -33.652, 72.5333, -71.6053, 0.14 ) }
    dend_55 { pt3dadd( -33.5543, 73.191, -72.4477, 0.1 ) }
    dend_55 { pt3dadd( -33.4398, 73.8617, -73.4151, 0.1 ) }
    dend_55 { pt3dadd( -33.395, 74.0771, -73.7365, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_55 { pt3dadd( -33.2394, 74.75, -74.6954, 0.14 ) }
    dend_55 { pt3dadd( -33.0956, 75.3843, -75.455, 0.28 ) }
    dend_55 { pt3dadd( -33.0574, 75.575, -75.6587, 0.42 ) }
    dend_55 { pt3dadd( -32.989, 76.0068, -76.0137, 1.26 ) }
    dend_55 { pt3dadd( -32.9199, 76.5143, -76.3832, 1.12 ) }
    dend_55 { pt3dadd( -32.854, 76.9993, -76.7635, 0.98 ) }
    dend_55 { pt3dadd( -32.7825, 77.4791, -77.1678, 0.84 ) }
    dend_55 { pt3dadd( -32.6384, 78.3128, -77.9854, 0.7 ) }
    dend_55 { pt3dadd( -32.6026, 78.4902, -78.1976, 0.84 ) }
    dend_55 { pt3dadd( -32.4443, 79.1559, -79.1611, 1.12 ) }
    dend_55 { pt3dadd( -32.3129, 79.7248, -80.0615, 0.98 ) }
    dend_55 { pt3dadd( -32.1732, 80.343, -81.0601, 0.84 ) }
    dend_55 { pt3dadd( -32.0553, 80.9175, -81.9588, 0.7 ) }
    dend_55 { pt3dadd( -31.9427, 81.5254, -82.8399, 0.56 ) }
    dend_55 { pt3dadd( -31.8242, 82.2206, -83.7894, 0.42 ) }
    dend_55 { pt3dadd( -31.7794, 82.5773, -84.2104, 0.28 ) }
    dend_55 { pt3dadd( -31.7424, 83.0354, -84.6435, 0.14 ) }
    dend_55 { pt3dadd( -31.7193, 83.4941, -84.9694, 0.1 ) }
    dend_55 { pt3dadd( -31.6849, 84.5523, -85.4848, 0.1 ) }
    dend_55 { pt3dadd( -31.6849, 84.5523, -85.4848, 0.14 ) }
    dend_55 { pt3dadd( -31.6477, 85.1014, -85.6043, 0.56 ) }
    dend_55 { pt3dadd( -31.5931, 85.7101, -85.7635, 0.42 ) }
    dend_55 { pt3dadd( -31.5442, 86.3059, -85.9273, 0.28 ) }
    dend_55 { pt3dadd( -31.5025, 86.916, -86.0847, 0.14 ) }
    dend_55 { pt3dadd( -31.4808, 87.5103, -86.2596, 0.1 ) }
    dend_55 { pt3dadd( -31.4724, 87.8842, -86.3965, 0.1 ) }
    dend_55 { pt3dadd( -31.4503, 88.902, -86.9234, 0.1 ) }
    dend_55 { pt3dadd( -31.4431, 89.3568, -87.2508, 0.1 ) }
    dend_55 { pt3dadd( -31.4297, 89.7639, -87.6398, 0.1 ) }
    dend_55 { pt3dadd( -31.4062, 90.4657, -88.402, 0.14 ) }
    dend_55 { pt3dadd( -31.396, 90.8673, -88.8892, 0.28 ) }
    dend_55 { pt3dadd( -31.3685, 91.5111, -89.7514, 0.14 ) }
    dend_55 { pt3dadd( -31.3249, 92.2052, -90.7016, 0.1 ) }
    dend_55 { pt3dadd( -31.2876, 92.838, -91.5715, 0.1 ) }
    dend_55 { pt3dadd( -31.275, 93.181, -92.018, 0.14 ) }
    dend_55 { pt3dadd( -31.2819, 93.9358, -92.8745, 0.1 ) }
    dend_55 { pt3dadd( -31.3378, 94.6969, -93.6337, 0.1 ) }
    dend_55 { pt3dadd( -31.3963, 95.136, -93.9769, 0.1 ) }
    dend_55 { pt3dadd( -31.4859, 95.6189, -94.2525, 0.1 ) }
    dend_55 { pt3dadd( -31.5975, 96.1172, -94.4836, 0.1 ) }
    dend_55 { pt3dadd( -31.7172, 96.6178, -94.6874, 0.1 ) }
    dend_55 { pt3dadd( -31.8538, 97.1395, -94.84, 0.1 ) }
    dend_55 { pt3dadd( -31.8538, 97.1395, -94.84, 0.14 ) }
    dend_55 { pt3dadd( -32.0037, 97.6617, -94.9778, 0.1 ) }
    dend_55 { pt3dadd( -32.3101, 98.7303, -95.2631, 0.1 ) }
    dend_55 { pt3dadd( -32.4454, 99.2451, -95.4384, 0.1 ) }
    dend_55 { pt3dadd( -32.5706, 99.7588, -95.6325, 0.1 ) }
    dend_55 { pt3dadd( -32.6766, 100.264, -95.8244, 0.1 ) }
    dend_55 { pt3dadd( -32.7741, 100.787, -96.0091, 0.1 ) }
    dend_55 { pt3dadd( -32.8515, 101.317, -96.1735, 0.1 ) }
    dend_55 { pt3dadd( -32.9471, 102.34, -96.4955, 0.1 ) }
    dend_55 { pt3dadd( -32.9685, 102.866, -96.6864, 0.1 ) }
    dend_55 { pt3dadd( -32.9708, 103.428, -96.9482, 0.1 ) }
    dend_55 { pt3dadd( -32.955, 103.924, -97.2077, 0.1 ) }
    dend_55 { pt3dadd( -32.921, 104.452, -97.5315, 0.1 ) }
    dend_55 { pt3dadd( -32.8333, 105.444, -98.1697, 0.1 ) }
    dend_55 { pt3dadd( -32.7769, 105.956, -98.5314, 0.1 ) }
    dend_55 { pt3dadd( -32.6559, 106.761, -99.1724, 0.1 ) }
    dend_55 { pt3dadd( -32.5706, 107.229, -99.5876, 0.1 ) }
    dend_55 { pt3dadd( -32.4014, 108.056, -100.415, 0.1 ) }
    dend_55 { pt3dadd( -32.3123, 108.482, -100.859, 0.1 ) }
    dend_55 { pt3dadd( -32.143, 109.236, -101.608, 0.1 ) }
    dend_55 { pt3dadd( -32.0761, 109.516, -101.871, 0.14 ) }
    dend_55 { pt3dadd( -32.0213, 109.735, -102.038, 0.28 ) }
    dend_55 { pt3dadd( -31.783, 110.669, -102.659, 0.7 ) }
    dend_55 { pt3dadd( -31.6424, 111.226, -102.916, 0.56 ) }
    dend_55 { pt3dadd( -31.5455, 111.572, -103.067, 0.42 ) }
    dend_55 { pt3dadd( -31.3966, 112.13, -103.323, 0.28 ) }
    dend_55 { pt3dadd( -31.2727, 112.658, -103.643, 0.14 ) }
    dend_55 { pt3dadd( -31.2072, 112.964, -103.875, 0.1 ) }
    dend_55 { pt3dadd( -31.1171, 113.44, -104.28, 0.1 ) }
    dend_55 { pt3dadd( -31.0004, 114.296, -105.081, 0.14 ) }
    dend_55 { pt3dadd( -30.917, 115.114, -105.88, 0.28 ) }
    dend_55 { pt3dadd( -30.867, 115.929, -106.686, 0.14 ) }
    dend_55 { pt3dadd( -30.8564, 116.782, -107.498, 0.1 ) }
    dend_55 { pt3dadd( -30.8679, 117.199, -107.877, 0.1 ) }
    dend_55 { pt3dadd( -30.8985, 117.635, -108.227, 0.1 ) }
    dend_55 { pt3dadd( -30.9345, 117.97, -108.439, 0.1 ) }
    dend_55 { pt3dadd( -31.0052, 118.465, -108.677, 0.1 ) }
    dend_55 { pt3dadd( -31.1177, 118.967, -108.899, 0.14 ) }
    dend_55 { pt3dadd( -31.466, 119.993, -109.373, 0.28 ) }
    dend_55 { pt3dadd( -31.672, 120.434, -109.657, 0.42 ) }
    dend_55 { pt3dadd( -31.672, 120.434, -109.657, 0.56 ) }
    dend_55 { pt3dadd( -32.0111, 120.899, -110.195, 0.28 ) }
    dend_55 { pt3dadd( -32.4935, 121.501, -111.089, 0.14 ) }
    dend_55 { pt3dadd( -32.6368, 121.667, -111.411, 0.1 ) }
    dend_55 { pt3dadd( -33.0284, 122.107, -112.436, 0.1 ) }
    dend_55 { pt3dadd( -33.377, 122.51, -113.491, 0.1 ) }
    dend_55 { pt3dadd( -33.6716, 122.856, -114.423, 0.1 ) }
    dend_55 { pt3dadd( -33.9532, 123.194, -115.363, 0.1 ) }
    dend_55 { pt3dadd( -34.5634, 123.889, -117.247, 0.14 ) }
    dend_55 { pt3dadd( -34.8921, 124.243, -118.163, 0.28 ) }
    dend_55 { pt3dadd( -34.8921, 124.243, -118.163, 0.42 ) }
    dend_55 { pt3dadd( -35.2711, 124.532, -118.807, 0.7 ) }
    dend_55 { pt3dadd( -35.5068, 124.663, -119.088, 0.56 ) }
    dend_55 { pt3dadd( -36.0571, 124.878, -119.622, 0.42 ) }
    dend_55 { pt3dadd( -36.3414, 124.944, -119.888, 0.56 ) }
    dend_55 { pt3dadd( -36.5353, 124.972, -120.09, 0.7 ) }
    dend_55 { pt3dadd( -37.2799, 125.043, -121.005, 1.68 ) }
    dend_55 { pt3dadd( -37.9351, 125.061, -121.94, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_55 { pt3dadd( -38.4828, 125.042, -122.822, 1.4 ) }
    dend_55 { pt3dadd( -39.0242, 124.981, -123.831, 1.26 ) }
    dend_55 { pt3dadd( -39.0242, 124.981, -123.831, 1.12 ) }
    dend_55 { pt3dadd( -39.1388, 124.961, -124.087, 0.98 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 4/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -16.3143, 39.033, -36.6221, 1.4 ) }
    dend_54 { pt3dadd( -16.1695, 39.4778, -37.6687, 1.4 ) }
    dend_54 { pt3dadd( -16.0401, 39.8703, -38.6591, 1.26 ) }
    dend_54 { pt3dadd( -15.8897, 40.2735, -39.7597, 1.12 ) }
    dend_54 { pt3dadd( -15.7456, 40.6193, -40.7707, 0.98 ) }
    dend_54 { pt3dadd( -15.586, 40.9209, -41.7882, 0.84 ) }
    dend_54 { pt3dadd( -15.4143, 41.1679, -42.8217, 0.7 ) }
    dend_54 { pt3dadd( -15.0185, 41.4562, -44.8575, 0.56 ) }
    dend_54 { pt3dadd( -14.8006, 41.5284, -45.8707, 0.56 ) }
    dend_54 { pt3dadd( -14.733, 41.5313, -46.144, 0.1 ) }
    dend_54 { pt3dadd( -14.4097, 41.5122, -47.2768, 0.1 ) }
    dend_54 { pt3dadd( -14.0602, 41.4892, -48.3697, 0.1 ) }
    dend_54 { pt3dadd( -13.6428, 41.4757, -49.4713, 0.14 ) }
    dend_54 { pt3dadd( -13.4798, 41.4907, -49.8344, 0.84 ) }
    dend_54 { pt3dadd( -12.9889, 41.6421, -50.899, 0.7 ) }
    dend_54 { pt3dadd( -12.4998, 41.9131, -51.9401, 0.56 ) }
    dend_54 { pt3dadd( -12.0565, 42.291, -52.8414, 0.42 ) }
    dend_54 { pt3dadd( -11.8232, 42.5461, -53.2861, 0.28 ) }
    dend_54 { pt3dadd( -11.3689, 43.1533, -54.1877, 0.14 ) }
    dend_54 { pt3dadd( -10.9715, 43.7188, -55.0128, 0.28 ) }
    dend_54 { pt3dadd( -10.7599, 44.0794, -55.4704, 0.42 ) }
    dend_54 { pt3dadd( -10.5882, 44.4813, -55.9262, 0.28 ) }
    dend_54 { pt3dadd( -10.5164, 44.7393, -56.2091, 0.14 ) }
    dend_54 { pt3dadd( -10.4271, 45.4484, -56.963, 0.1 ) }
    dend_54 { pt3dadd( -10.4194, 45.6397, -57.1696, 0.14 ) }
    dend_54 { pt3dadd( -10.4134, 46.0215, -57.5798, 0.1 ) }
    dend_54 { pt3dadd( -10.3719, 46.7603, -58.4571, 0.1 ) }
    dend_54 { pt3dadd( -10.2943, 47.4798, -59.3926, 0.1 ) }
    dend_54 { pt3dadd( -10.2298, 47.7967, -59.8419, 0.14 ) }
    dend_54 { pt3dadd( -10.0506, 48.3796, -60.7289, 0.28 ) }
    dend_54 { pt3dadd( -9.91895, 48.6953, -61.2597, 1.4 ) }
    dend_54 { pt3dadd( -9.62739, 49.2215, -62.2727, 1.26 ) }
    dend_54 { pt3dadd( -9.3153, 49.65, -63.2095, 1.12 ) }
    dend_54 { pt3dadd( -8.93856, 50.0638, -64.21, 0.98 ) }
    dend_54 { pt3dadd( -8.54691, 50.4121, -65.1501, 1.12 ) }
    dend_54 { pt3dadd( -8.06882, 50.7665, -66.1669, 0.98 ) }
    dend_54 { pt3dadd( -7.5957, 51.0416, -67.0959, 0.84 ) }
    dend_54 { pt3dadd( -7.0437, 51.3161, -68.0568, 0.7 ) }
    dend_54 { pt3dadd( -6.74536, 51.4483, -68.5124, 0.56 ) }
    dend_54 { pt3dadd( -6.52633, 51.5452, -68.8306, 0.42 ) }
    dend_54 { pt3dadd( -6.213, 51.686, -69.2769, 0.28 ) }
    dend_54 { pt3dadd( -5.65563, 51.9732, -70.1479, 0.42 ) }
    dend_54 { pt3dadd( -5.46941, 52.0891, -70.4757, 0.56 ) }
    dend_54 { pt3dadd( -4.95139, 52.4814, -71.4628, 0.42 ) }
    dend_54 { pt3dadd( -4.5075, 52.8714, -72.3586, 0.28 ) }
    dend_54 { pt3dadd( -4.03834, 53.3352, -73.3347, 0.14 ) }
    dend_54 { pt3dadd( -3.61583, 53.7914, -74.2134, 0.1 ) }
    dend_54 { pt3dadd( -3.12777, 54.3447, -75.1319, 0.1 ) }
    dend_54 { pt3dadd( -2.85678, 54.6558, -75.6075, 0.1 ) }
    dend_54 { pt3dadd( -2.67361, 54.8665, -75.8862, 0.1 ) }
    dend_54 { pt3dadd( -2.09689, 55.5634, -76.6466, 0.1 ) }
    dend_54 { pt3dadd( -1.91297, 55.8133, -76.882, 0.1 ) }
    dend_54 { pt3dadd( -1.65227, 56.2382, -77.2667, 0.1 ) }
    dend_54 { pt3dadd( -1.23236, 57.0874, -78.117, 0.14 ) }
    dend_54 { pt3dadd( -1.16194, 57.2731, -78.3167, 0.14 ) }
    dend_54 { pt3dadd( -1.04716, 57.6308, -78.7326, 0.1 ) }
    dend_54 { pt3dadd( -0.851169, 58.3923, -79.6078, 0.1 ) }
    dend_54 { pt3dadd( -0.684601, 59.1076, -80.4879, 0.1 ) }
    dend_54 { pt3dadd( -0.551122, 59.7567, -81.3361, 0.1 ) }
    dend_54 { pt3dadd( -0.483494, 60.0762, -81.7797, 0.1 ) }
    dend_54 { pt3dadd( -0.322448, 60.7493, -82.7376, 0.14 ) }
    dend_54 { pt3dadd( -0.223305, 61.0932, -83.2436, 0.28 ) }
    dend_54 { pt3dadd( -0.0357173, 61.6925, -84.1201, 0.14 ) }
    dend_54 { pt3dadd( 0.173788, 62.3689, -85.0662, 0.1 ) }
    dend_54 { pt3dadd( 0.346969, 62.9924, -85.9223, 0.1 ) }
    dend_54 { pt3dadd( 0.403178, 63.2278, -86.2386, 0.1 ) }
    dend_54 { pt3dadd( 0.544457, 63.9518, -87.1564, 0.1 ) }
    dend_54 { pt3dadd( 0.683776, 64.7, -88.0604, 0.1 ) }
    dend_54 { pt3dadd( 0.758238, 65.0748, -88.4704, 0.1 ) }
    dend_54 { pt3dadd( 0.942656, 65.8665, -89.321, 0.14 ) }
    dend_54 { pt3dadd( 1.05136, 66.2304, -89.733, 0.14 ) }
    dend_54 { pt3dadd( 1.12253, 66.4029, -89.944, 0.28 ) }
    dend_54 { pt3dadd( 1.25642, 66.6335, -90.2278, 0.56 ) }
    dend_54 { pt3dadd( 1.77956, 67.2925, -91.0576, 0.42 ) }
    dend_54 { pt3dadd( 2.33737, 67.8467, -91.788, 0.28 ) }
    dend_54 { pt3dadd( 3.02803, 68.4232, -92.5542, 0.14 ) }
    dend_54 { pt3dadd( 3.3623, 68.6664, -92.9327, 0.28 ) }
    dend_54 { pt3dadd( 3.7189, 68.9004, -93.3959, 0.14 ) }
    dend_54 { pt3dadd( 4.00656, 69.0245, -93.8606, 0.28 ) }
    dend_54 { pt3dadd( 4.11189, 69.0173, -94.1217, 0.42 ) }
    dend_54 { pt3dadd( 4.11189, 69.0173, -94.1217, 0.56 ) }
    dend_54 { pt3dadd( 4.3382, 68.7161, -95.13, 0.84 ) }
    dend_54 { pt3dadd( 4.57387, 68.4167, -96.1367, 0.7 ) }
    dend_54 { pt3dadd( 4.86552, 68.0899, -97.191, 0.56 ) }
    dend_54 { pt3dadd( 5.19126, 67.8271, -98.1418, 0.42 ) }
    dend_54 { pt3dadd( 5.30091, 67.7738, -98.3927, 0.56 ) }
    dend_54 { pt3dadd( 5.59976, 67.6935, -98.9298, 0.42 ) }
    dend_54 { pt3dadd( 6.26048, 67.6451, -99.8653, 0.28 ) }
    dend_54 { pt3dadd( 6.63886, 67.6605, -100.368, 0.14 ) }
    dend_54 { pt3dadd( 7.33286, 67.7625, -101.275, 0.1 ) }
    dend_54 { pt3dadd( 7.99945, 67.9055, -102.192, 0.1 ) }
    dend_54 { pt3dadd( 8.15085, 67.9451, -102.426, 0.1 ) }
    dend_54 { pt3dadd( 8.7083, 68.1215, -103.412, 0.1 ) }
    dend_54 { pt3dadd( 9.16643, 68.31, -104.281, 0.14 ) }
    dend_54 { pt3dadd( 9.3318, 68.3997, -104.632, 0.28 ) }
    dend_54 { pt3dadd( 9.76454, 68.7124, -105.647, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_54 { pt3dadd( 10.1504, 69.0686, -106.665, 0.1 ) }
    dend_54 { pt3dadd( 10.4626, 69.4163, -107.593, 0.1 ) }
    dend_54 { pt3dadd( 10.6357, 69.6357, -108.158, 0.42 ) }
    dend_54 { pt3dadd( 10.9096, 70.0378, -109.116, 0.42 ) }
    dend_54 { pt3dadd( 11.1672, 70.5115, -110.168, 0.28 ) }
    dend_54 { pt3dadd( 11.3509, 71.0055, -111.106, 0.14 ) }
    dend_54 { pt3dadd( 11.4917, 71.5469, -112.024, 0.28 ) }
    dend_54 { pt3dadd( 11.5888, 72.0975, -112.897, 0.42 ) }
    dend_54 { pt3dadd( 11.6178, 72.3959, -113.37, 0.1 ) }
    dend_54 { pt3dadd( 11.6213, 72.7016, -113.84, 0.1 ) }
    dend_54 { pt3dadd( 11.5917, 73.0004, -114.305, 0.1 ) }
    dend_54 { pt3dadd( 11.4819, 73.5714, -115.211, 0.14 ) }
    dend_54 { pt3dadd( 11.3115, 74.1804, -116.167, 0.7 ) }
    dend_54 { pt3dadd( 11.1137, 74.7674, -117.133, 0.56 ) }
    dend_54 { pt3dadd( 10.9194, 75.2601, -118.026, 0.42 ) }
    dend_54 { pt3dadd( 10.6841, 75.7927, -119.055, 0.28 ) }
    dend_54 { pt3dadd( 10.4388, 76.2961, -120.055, 0.14 ) }
    dend_54 { pt3dadd( 10.2993, 76.5701, -120.597, 0.1 ) }
    dend_54 { pt3dadd( 10.0895, 77.0209, -121.509, 0.1 ) }
    dend_54 { pt3dadd( 9.9166, 77.5267, -122.559, 0.1 ) }
    dend_54 { pt3dadd( 9.83329, 77.9995, -123.601, 0.1 ) }
    dend_54 { pt3dadd( 9.83329, 77.9995, -123.601, 0.14 ) }
    dend_54 { pt3dadd( 9.96003, 78.382, -124.596, 0.56 ) }
    dend_54 { pt3dadd( 10.1632, 78.7548, -125.585, 0.42 ) }
    dend_54 { pt3dadd( 10.4678, 79.1685, -126.649, 0.28 ) }
    dend_54 { pt3dadd( 10.8081, 79.5409, -127.558, 0.14 ) }
    dend_54 { pt3dadd( 11.2411, 79.9628, -128.569, 0.1 ) }
    dend_54 { pt3dadd( 11.7061, 80.3948, -129.566, 0.1 ) }
    dend_54 { pt3dadd( 11.8722, 80.5484, -129.883, 0.1 ) }
    dend_54 { pt3dadd( 12.4237, 81.0636, -130.792, 0.1 ) }
    dend_54 { pt3dadd( 12.7322, 81.3631, -131.243, 0.1 ) }
    dend_54 { pt3dadd( 13.2759, 81.919, -131.932, 0.14 ) }
    dend_54 { pt3dadd( 13.4307, 82.0809, -132.098, 0.28 ) }
    dend_54 { pt3dadd( 13.7874, 82.4569, -132.456, 0.7 ) }
    dend_54 { pt3dadd( 14.1512, 82.8323, -132.808, 0.56 ) }
    dend_54 { pt3dadd( 14.8583, 83.5493, -133.426, 0.42 ) }
    dend_54 { pt3dadd( 15.1042, 83.7771, -133.624, 0.28 ) }
    dend_54 { pt3dadd( 15.5322, 84.1085, -133.946, 0.14 ) }
    dend_54 { pt3dadd( 16.3788, 84.6187, -134.587, 0.1 ) }
    dend_54 { pt3dadd( 16.59, 84.6977, -134.756, 0.1 ) }
    dend_54 { pt3dadd( 16.8012, 84.7561, -134.928, 0.1 ) }
    dend_54 { pt3dadd( 17.288, 84.8648, -135.296, 0.1 ) }
    dend_54 { pt3dadd( 18.1786, 85.0688, -136.047, 0.1 ) }
    dend_54 { pt3dadd( 18.4721, 85.1486, -136.305, 0.1 ) }
    dend_54 { pt3dadd( 19.3013, 85.4597, -137.079, 0.1 ) }
    dend_54 { pt3dadd( 19.7122, 85.6691, -137.496, 0.56 ) }
    dend_54 { pt3dadd( 20.1094, 85.9317, -137.908, 0.42 ) }
    dend_54 { pt3dadd( 20.7268, 86.4604, -138.609, 0.28 ) }
    dend_54 { pt3dadd( 21.0746, 86.809, -139.001, 0.14 ) }
    dend_54 { pt3dadd( 21.7045, 87.5004, -139.717, 0.1 ) }
    dend_54 { pt3dadd( 21.9132, 87.7385, -139.959, 0.1 ) }
    dend_54 { pt3dadd( 22.2432, 88.0772, -140.376, 0.1 ) }
    dend_54 { pt3dadd( 22.7757, 88.6071, -141.147, 0.1 ) }
    dend_54 { pt3dadd( 22.9106, 88.7296, -141.358, 0.14 ) }
    dend_54 { pt3dadd( 23.086, 88.8832, -141.681, 0.28 ) }
    dend_54 { pt3dadd( 23.5673, 89.279, -142.681, 0.14 ) }
    dend_54 { pt3dadd( 24.0082, 89.6502, -143.673, 0.1 ) }
    dend_54 { pt3dadd( 24.4001, 90.0106, -144.605, 0.14 ) }
    dend_54 { pt3dadd( 24.8175, 90.4273, -145.589, 0.1 ) }
    dend_54 { pt3dadd( 25.1948, 90.8591, -146.497, 0.14 ) }
    dend_54 { pt3dadd( 25.5659, 91.329, -147.346, 0.28 ) }
    dend_54 { pt3dadd( 25.7881, 91.6749, -147.823, 0.1 ) }
    dend_54 { pt3dadd( 26.0104, 92.0797, -148.239, 0.1 ) }
    dend_54 { pt3dadd( 26.1625, 92.3554, -148.482, 0.1 ) }
    dend_54 { pt3dadd( 26.412, 92.7745, -148.868, 0.1 ) }
    dend_54 { pt3dadd( 26.6997, 93.1187, -149.31, 0.1 ) }
    dend_54 { pt3dadd( 27.2546, 93.5256, -150.264, 0.1 ) }
    dend_54 { pt3dadd( 27.3839, 93.5778, -150.509, 0.14 ) }
    dend_54 { pt3dadd( 27.8757, 93.6906, -151.46, 0.56 ) }
    dend_54 { pt3dadd( 28.3591, 93.7637, -152.415, 0.42 ) }
    dend_54 { pt3dadd( 28.8741, 93.8243, -153.478, 0.28 ) }
    dend_54 { pt3dadd( 29.3295, 93.8921, -154.451, 0.14 ) }
    dend_54 { pt3dadd( 29.8085, 93.9854, -155.483, 0.28 ) }
    dend_54 { pt3dadd( 29.9251, 94.019, -155.737, 0.42 ) }
    dend_54 { pt3dadd( 30.4332, 94.2221, -156.78, 0.28 ) }
    dend_54 { pt3dadd( 30.9277, 94.4646, -157.707, 0.14 ) }
    dend_54 { pt3dadd( 31.4973, 94.776, -158.69, 0.1 ) }
    dend_54 { pt3dadd( 32.0484, 95.0793, -159.517, 0.1 ) }
    dend_54 { pt3dadd( 32.2141, 95.1631, -159.729, 0.42 ) }
    dend_54 { pt3dadd( 32.5651, 95.3175, -160.124, 0.28 ) }
    dend_54 { pt3dadd( 32.9675, 95.4641, -160.49, 0.14 ) }
    dend_54 { pt3dadd( 33.8416, 95.7749, -161.164, 0.1 ) }
    dend_54 { pt3dadd( 34.2604, 95.9506, -161.497, 0.1 ) }
    dend_54 { pt3dadd( 34.6407, 96.17, -161.845, 0.1 ) }
    dend_54 { pt3dadd( 35.1871, 96.7049, -162.699, 0.14 ) }
    dend_54 { pt3dadd( 35.2417, 96.8559, -162.919, 0.28 ) }
    dend_54 { pt3dadd( 35.2038, 97.2257, -163.418, 0.1 ) }
    dend_54 { pt3dadd( 34.9574, 97.9263, -164.333, 0.1 ) }
    dend_54 { pt3dadd( 34.7845, 98.308, -164.813, 0.1 ) }
    dend_54 { pt3dadd( 34.464, 98.9296, -165.627, 0.1 ) }
    dend_54 { pt3dadd( 34.2932, 99.2646, -166.046, 0.1 ) }
    dend_54 { pt3dadd( 33.9891, 99.9562, -166.902, 0.1 ) }
    dend_54 { pt3dadd( 33.743, 100.651, -167.781, 0.1 ) }
    dend_54 { pt3dadd( 33.6497, 100.989, -168.219, 0.1 ) }
    dend_54 { pt3dadd( 33.5191, 101.565, -169.025, 0.14 ) }
    dend_54 { pt3dadd( 33.4525, 101.893, -169.559, 0.14 ) }
    dend_54 { pt3dadd( 33.414, 102.075, -169.907, 0.1 ) }
    dend_54 { pt3dadd( 33.3021, 102.574, -170.972, 0.1 ) }
    dend_54 { pt3dadd( 33.2105, 102.954, -171.934, 0.1 ) }
    dend_54 { pt3dadd( 33.1089, 103.35, -173.006, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 32.918, 104.023, -174.901, 0.1 ) }
    dend_54 { pt3dadd( 32.8051, 104.37, -175.988, 0.1 ) }
    dend_54 { pt3dadd( 32.7034, 104.663, -176.979, 0.1 ) }
    dend_54 { pt3dadd( 32.5484, 105.208, -178.917, 0.1 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 4/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 15.5682, -88.7879, 7.41422, 0.84 ) }
    dend_24 { pt3dadd( 15.6828, -89.721, 7.93843, 0.84 ) }
    dend_24 { pt3dadd( 15.7308, -90.2148, 8.18413, 0.98 ) }
    dend_24 { pt3dadd( 15.7807, -90.7264, 8.40753, 1.12 ) }
    dend_24 { pt3dadd( 15.8234, -91.2513, 8.607, 0.98 ) }
    dend_24 { pt3dadd( 15.9139, -92.3702, 8.97948, 0.84 ) }
    dend_24 { pt3dadd( 15.9514, -92.907, 9.13594, 0.7 ) }
    dend_24 { pt3dadd( 15.9948, -93.5134, 9.25697, 0.7 ) }
    dend_24 { pt3dadd( 16.0209, -94.0704, 9.31355, 0.84 ) }
    dend_24 { pt3dadd( 16.0449, -94.6897, 9.31364, 0.84 ) }
    dend_24 { pt3dadd( 16.0712, -95.2467, 9.25716, 0.84 ) }
    dend_24 { pt3dadd( 16.1046, -95.8635, 9.13461, 0.84 ) }
    dend_24 { pt3dadd( 16.1251, -96.4104, 9.01415, 0.7 ) }
    dend_24 { pt3dadd( 16.17, -97.5363, 8.67551, 0.56 ) }
    dend_24 { pt3dadd( 16.1808, -98.0738, 8.51731, 0.7 ) }
    dend_24 { pt3dadd( 16.1821, -98.6173, 8.36982, 0.84 ) }
    dend_24 { pt3dadd( 16.162, -99.2233, 8.23212, 0.7 ) }
    dend_24 { pt3dadd( 16.1426, -99.6153, 8.16479, 0.84 ) }
    dend_24 { pt3dadd( 16.0751, -100.754, 8.04911, 0.98 ) }
    dend_24 { pt3dadd( 15.9797, -101.826, 8.0533, 0.98 ) }
    dend_24 { pt3dadd( 15.8959, -102.44, 8.06667, 0.84 ) }
    dend_24 { pt3dadd( 15.7986, -103.064, 8.03593, 0.98 ) }
    dend_24 { pt3dadd( 15.7593, -103.342, 8.03158, 0.84 ) }
    dend_24 { pt3dadd( 15.7296, -103.622, 8.03837, 0.84 ) }
    dend_24 { pt3dadd( 15.6885, -104.242, 8.08033, 0.98 ) }
    dend_24 { pt3dadd( 15.6963, -104.874, 8.06576, 1.12 ) }
    dend_24 { pt3dadd( 15.7821, -105.909, 8.06435, 1.26 ) }
    dend_24 { pt3dadd( 15.889, -106.942, 8.08111, 1.12 ) }
    dend_24 { pt3dadd( 15.9387, -107.491, 8.0969, 0.98 ) }
    dend_24 { pt3dadd( 15.9927, -108.051, 8.11879, 1.12 ) }
    dend_24 { pt3dadd( 16.0568, -108.607, 8.14724, 0.98 ) }
    dend_24 { pt3dadd( 16.1168, -109.166, 8.18212, 1.12 ) }
    dend_24 { pt3dadd( 16.1548, -109.566, 8.21034, 1.12 ) }
    dend_24 { pt3dadd( 16.1841, -110.185, 8.21034, 0.98 ) }
    dend_24 { pt3dadd( 16.1807, -110.746, 8.21034, 1.12 ) }
    dend_24 { pt3dadd( 16.1429, -111.363, 8.16584, 0.98 ) }
    dend_24 { pt3dadd( 16.0828, -111.915, 8.09172, 0.84 ) }
    dend_24 { pt3dadd( 16.0064, -112.464, 7.99024, 0.98 ) }
    dend_24 { pt3dadd( 15.9177, -113.064, 7.84959, 0.7 ) }
    dend_24 { pt3dadd( 15.8181, -113.662, 7.67205, 0.84 ) }
    dend_24 { pt3dadd( 15.5908, -114.649, 7.30945, 0.98 ) }
    dend_24 { pt3dadd( 15.4328, -115.202, 7.07277, 0.84 ) }
    dend_24 { pt3dadd( 15.4328, -115.202, 7.07277, 0.98 ) }
    dend_24 { pt3dadd( 15.2025, -115.722, 6.82164, 0.84 ) }
    dend_24 { pt3dadd( 15.1079, -115.96, 6.7051, 0.84 ) }
    dend_24 { pt3dadd( 14.854, -116.499, 6.52083, 0.98 ) }
    dend_24 { pt3dadd( 14.5608, -117.058, 6.52083, 0.84 ) }
    dend_24 { pt3dadd( 14.3771, -117.401, 6.52083, 0.7 ) }
    dend_24 { pt3dadd( 14.2662, -117.65, 6.52083, 0.7 ) }
    dend_24 { pt3dadd( 14.0776, -118.25, 6.52083, 0.84 ) }
    dend_24 { pt3dadd( 14.0036, -118.638, 6.52083, 0.7 ) }
    dend_24 { pt3dadd( 13.9806, -119.251, 6.62848, 0.7 ) }
    dend_24 { pt3dadd( 13.9863, -119.852, 6.78603, 0.84 ) }
    dend_24 { pt3dadd( 14.0097, -120.456, 6.96507, 0.7 ) }
    dend_24 { pt3dadd( 14.0428, -120.992, 7.12532, 0.7 ) }
    dend_24 { pt3dadd( 14.0842, -121.529, 7.28007, 0.56 ) }
    dend_24 { pt3dadd( 14.2215, -122.622, 7.5838, 0.7 ) }
    dend_24 { pt3dadd( 14.2215, -122.622, 7.5838, 0.84 ) }
    dend_24 { pt3dadd( 14.2874, -122.875, 7.68982, 0.84 ) }
    dend_24 { pt3dadd( 14.4222, -123.386, 7.87397, 0.98 ) }
    dend_24 { pt3dadd( 14.5425, -123.921, 7.99206, 0.84 ) }
    dend_24 { pt3dadd( 14.6199, -124.467, 7.87871, 0.84 ) }
    dend_24 { pt3dadd( 14.623, -125.239, 7.03077, 0.98 ) }
    dend_24 { pt3dadd( 14.5946, -125.55, 6.56209, 0.98 ) }
    dend_24 { pt3dadd( 14.5005, -126.087, 5.63795, 0.84 ) }
    dend_24 { pt3dadd( 14.3905, -126.58, 4.73038, 0.7 ) }
    dend_24 { pt3dadd( 14.1664, -127.528, 2.96072, 0.56 ) }
    dend_24 { pt3dadd( 14.051, -128.012, 2.04969, 0.56 ) }
    dend_24 { pt3dadd( 14.0103, -128.195, 1.70842, 0.84 ) }
    dend_24 { pt3dadd( 13.9565, -128.533, 1.17995, 0.84 ) }
    dend_24 { pt3dadd( 13.9517, -128.946, 0.800229, 0.84 ) }
    dend_24 { pt3dadd( 13.9976, -129.463, 0.608062, 0.98 ) }
    dend_24 { pt3dadd( 14.0358, -129.738, 0.586254, 1.12 ) }
    dend_24 { pt3dadd( 14.081, -130.016, 0.586254, 0.98 ) }
    dend_24 { pt3dadd( 14.1876, -130.569, 0.586254, 0.98 ) }
    dend_24 { pt3dadd( 14.2898, -131.12, 0.586254, 0.98 ) }
    dend_24 { pt3dadd( 14.3903, -131.734, 0.586254, 0.84 ) }
    dend_24 { pt3dadd( 14.4625, -132.292, 0.586254, 0.84 ) }
    dend_24 { pt3dadd( 14.5248, -132.849, 0.586254, 0.84 ) }
    dend_24 { pt3dadd( 14.5471, -133.13, 0.586254, 0.98 ) }
    dend_24 { pt3dadd( 14.5674, -133.528, 0.586254, 0.84 ) }
    dend_24 { pt3dadd( 14.5751, -134.078, 0.586254, 0.84 ) }
    dend_24 { pt3dadd( 14.5586, -134.705, 0.528893, 0.98 ) }
    dend_24 { pt3dadd( 14.5238, -135.243, 0.373176, 1.12 ) }
    dend_24 { pt3dadd( 14.4869, -135.61, 0.249541, 0.98 ) }
    dend_24 { pt3dadd( 14.4869, -135.61, 0.249541, 1.12 ) }
    dend_24 { pt3dadd( 14.452, -135.984, 0.118058, 0.84 ) }
    dend_24 { pt3dadd( 14.3554, -137.102, -0.255831, 0.84 ) }
    dend_24 { pt3dadd( 14.3031, -138.197, -0.579809, 0.84 ) }
    dend_24 { pt3dadd( 14.2731, -139.262, -0.735927, 0.56 ) }
    dend_24 { pt3dadd( 14.2807, -139.822, -0.743127, 0.56 ) }
    dend_24 { pt3dadd( 14.3105, -140.438, -0.684423, 0.56 ) }
    dend_24 { pt3dadd( 14.3601, -140.986, -0.576461, 0.56 ) }
    dend_24 { pt3dadd( 14.4142, -141.51, -0.385169, 0.7 ) }
    dend_24 { pt3dadd( 14.5352, -142.59, 0.0798165, 0.84 ) }
    dend_24 { pt3dadd( 14.5959, -143.108, 0.283115, 0.98 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_24 { pt3dadd( 14.6524, -143.618, 0.492767, 1.12 ) }
    dend_24 { pt3dadd( 14.7119, -144.132, 0.707439, 1.12 ) }
    dend_24 { pt3dadd( 14.8367, -145.246, 1.08107, 1.12 ) }
    dend_24 { pt3dadd( 14.9131, -145.795, 1.16203, 0.98 ) }
    dend_24 { pt3dadd( 15.0273, -146.401, 1.09535, 0.84 ) }
    dend_24 { pt3dadd( 15.0857, -146.665, 1.02523, 0.7 ) }
    dend_24 { pt3dadd( 15.1562, -146.908, 0.902589, 0.56 ) }
    dend_24 { pt3dadd( 15.481, -147.855, 0.341617, 0.7 ) }
    dend_24 { pt3dadd( 15.8483, -148.793, -0.268755, 0.84 ) }
    dend_24 { pt3dadd( 16.0418, -149.255, -0.521148, 0.98 ) }
    dend_24 { pt3dadd( 16.2555, -149.74, -0.712289, 0.84 ) }
    dend_24 { pt3dadd( 16.6668, -150.823, -0.927397, 0.84 ) }
    dend_24 { pt3dadd( 16.965, -151.814, -1.01269, 0.98 ) }
    dend_24 { pt3dadd( 17.0864, -152.351, -1.02529, 0.98 ) }
    dend_24 { pt3dadd( 17.2609, -153.484, -0.958211, 0.98 ) }
    dend_24 { pt3dadd( 17.3213, -154.04, -0.934123, 0.98 ) }
    dend_24 { pt3dadd( 17.3788, -154.826, -0.914739, 0.98 ) }
    dend_24 { pt3dadd( 17.4505, -155.9, -0.906708, 0.84 ) }
    dend_24 { pt3dadd( 17.5736, -156.922, -1.0369, 0.98 ) }
    dend_24 { pt3dadd( 17.7886, -157.924, -1.20686, 0.84 ) }
    dend_24 { pt3dadd( 17.956, -158.448, -1.31362, 0.84 ) }
    dend_24 { pt3dadd( 18.1871, -158.948, -1.37211, 0.84 ) }
    dend_24 { pt3dadd( 18.3903, -159.296, -1.37874, 1.12 ) }
    dend_24 { pt3dadd( 18.7281, -159.818, -1.33933, 0.98 ) }
    dend_24 { pt3dadd( 19.0815, -160.331, -1.34511, 0.84 ) }
    dend_24 { pt3dadd( 19.3967, -160.781, -1.46808, 0.98 ) }
    dend_24 { pt3dadd( 19.6129, -161.09, -1.56599, 1.12 ) }
    dend_24 { pt3dadd( 19.918, -161.549, -1.68312, 0.98 ) }
    dend_24 { pt3dadd( 20.2337, -162.077, -1.78082, 0.84 ) }
    dend_24 { pt3dadd( 20.8085, -163.098, -1.89856, 0.84 ) }
    dend_24 { pt3dadd( 21.3434, -164.113, -1.94198, 0.98 ) }
    dend_24 { pt3dadd( 21.8068, -165.042, -1.91701, 0.84 ) }
    dend_24 { pt3dadd( 22.2786, -166.083, -1.8238, 0.84 ) }
    dend_24 { pt3dadd( 22.4936, -166.587, -1.74532, 0.84 ) }
    dend_24 { pt3dadd( 22.704, -167.159, -1.6174, 0.98 ) }
    dend_24 { pt3dadd( 22.8611, -167.677, -1.4702, 1.12 ) }
    dend_24 { pt3dadd( 22.9893, -168.209, -1.34021, 0.98 ) }
    dend_24 { pt3dadd( 23.0902, -168.761, -1.33483, 0.98 ) }
    dend_24 { pt3dadd( 23.1251, -169.037, -1.37496, 0.98 ) }
    dend_24 { pt3dadd( 23.143, -169.426, -1.45705, 0.98 ) }
    dend_24 { pt3dadd( 23.1286, -170.027, -1.61669, 1.12 ) }
    dend_24 { pt3dadd( 23.1018, -170.629, -1.79896, 1.26 ) }
    dend_24 { pt3dadd( 23.0675, -171.619, -2.10895, 1.12 ) }
    dend_24 { pt3dadd( 23.0675, -171.619, -2.10895, 0.98 ) }
    dend_24 { pt3dadd( 23.065, -171.987, -2.23766, 0.56 ) }
    dend_24 { pt3dadd( 23.0814, -172.496, -2.47931, 0.7 ) }
    dend_24 { pt3dadd( 23.0835, -172.987, -2.74896, 0.84 ) }
    dend_24 { pt3dadd( 23.0464, -173.452, -3.06447, 0.84 ) }
    dend_24 { pt3dadd( 22.9483, -173.922, -3.45928, 0.98 ) }
    dend_24 { pt3dadd( 22.7052, -174.735, -4.28216, 0.84 ) }
    dend_24 { pt3dadd( 22.4457, -175.468, -5.12397, 0.98 ) }
    dend_24 { pt3dadd( 22.2976, -175.793, -5.55632, 1.12 ) }
    dend_24 { pt3dadd( 21.954, -176.383, -6.47696, 1.26 ) }
    dend_24 { pt3dadd( 21.5609, -176.913, -7.457, 1.12 ) }
    dend_24 { pt3dadd( 21.5609, -176.913, -7.457, 0.98 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 55/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 15.5682, -88.7879, 7.41422, 0.98 ) }
    dend_19 { pt3dadd( 15.9834, -89.6174, 6.94641, 0.98 ) }
    dend_19 { pt3dadd( 16.2244, -90.0394, 6.66174, 1.12 ) }
    dend_19 { pt3dadd( 16.4834, -90.4529, 6.38592, 1.26 ) }
    dend_19 { pt3dadd( 16.7917, -90.9123, 6.09984, 1.12 ) }
    dend_19 { pt3dadd( 17.3951, -91.7541, 5.60538, 0.98 ) }
    dend_19 { pt3dadd( 18.0461, -92.6177, 5.13819, 1.12 ) }
    dend_19 { pt3dadd( 18.2766, -92.8981, 4.97409, 0.98 ) }
    dend_19 { pt3dadd( 18.6653, -93.3247, 4.73991, 0.84 ) }
    dend_19 { pt3dadd( 19.0807, -93.747, 4.54731, 0.7 ) }
    dend_19 { pt3dadd( 19.3592, -94.0197, 4.46542, 0.56 ) }
    dend_19 { pt3dadd( 19.8142, -94.4428, 4.4205, 0.42 ) }
    dend_19 { pt3dadd( 20.2807, -94.8765, 4.4205, 0.28 ) }
    dend_19 { pt3dadd( 20.5639, -95.1439, 4.4205, 0.42 ) }
    dend_19 { pt3dadd( 21.0208, -95.5772, 4.4205, 0.28 ) }
    dend_19 { pt3dadd( 21.4807, -95.9974, 4.4205, 0.14 ) }
    dend_19 { pt3dadd( 21.7769, -96.2636, 4.4205, 0.1 ) }
    dend_19 { pt3dadd( 22.2482, -96.6708, 4.4205, 0.1 ) }
    dend_19 { pt3dadd( 22.7211, -97.0762, 4.4205, 0.1 ) }
    dend_19 { pt3dadd( 23.1998, -97.4853, 4.4205, 0.14 ) }
    dend_19 { pt3dadd( 23.6775, -97.8832, 4.4205, 0.1 ) }
    dend_19 { pt3dadd( 24.1655, -98.2811, 4.4205, 0.14 ) }
    dend_19 { pt3dadd( 24.4681, -98.5263, 4.4205, 0.28 ) }
    dend_19 { pt3dadd( 24.6919, -98.6973, 4.4205, 0.42 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -18.8818, -65.5977, -38.0121, 0.1 ) }
    dend_9 { pt3dadd( -18.8606, -66.2271, -38.0121, 0.1 ) }
    dend_9 { pt3dadd( -18.8534, -66.7817, -37.9319, 0.1 ) }
    dend_9 { pt3dadd( -18.8417, -67.388, -37.8038, 0.1 ) }
    dend_9 { pt3dadd( -18.8368, -67.9174, -37.6199, 0.1 ) }
    dend_9 { pt3dadd( -18.8267, -68.502, -37.3862, 0.1 ) }
    dend_9 { pt3dadd( -18.82, -69.0206, -37.1738, 0.1 ) }
    dend_9 { pt3dadd( -18.8035, -69.9958, -36.7262, 0.1 ) }
    dend_9 { pt3dadd( -18.7981, -70.4968, -36.475, 0.1 ) }
    dend_9 { pt3dadd( -18.7763, -71.5091, -35.8657, 0.1 ) }
    dend_9 { pt3dadd( -18.7612, -71.9686, -35.5623, 0.1 ) }
    dend_9 { pt3dadd( -18.7252, -72.4914, -35.2132, 0.1 ) }
    dend_9 { pt3dadd( -18.7013, -72.7293, -35.0695, 0.1 ) }
    dend_9 { pt3dadd( -18.7013, -72.7293, -35.0695, 0.1 ) }
    dend_9 { pt3dadd( -18.4922, -73.6759, -34.696, 0.1 ) }
    dend_9 { pt3dadd( -18.3388, -74.198, -34.5508, 0.1 ) }
    dend_9 { pt3dadd( -18.1701, -74.7079, -34.4285, 0.1 ) }
    dend_9 { pt3dadd( -17.9804, -75.2327, -34.3765, 0.1 ) }
    dend_9 { pt3dadd( -17.7889, -75.7622, -34.3882, 0.1 ) }
    dend_9 { pt3dadd( -17.5803, -76.3449, -34.4584, 0.1 ) }
    dend_9 { pt3dadd( -17.3961, -76.8652, -34.5705, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -17.2264, -77.3853, -34.692, 0.1 ) }
    dend_9 { pt3dadd( -16.9048, -78.4571, -34.9473, 0.1 ) }
    dend_9 { pt3dadd( -16.7704, -78.9875, -35.0687, 0.1 ) }
    dend_9 { pt3dadd( -16.6589, -79.5157, -35.1781, 0.1 ) }
    dend_9 { pt3dadd( -16.5641, -80.0627, -35.2728, 0.1 ) }
    dend_9 { pt3dadd( -16.4765, -80.6761, -35.3946, 0.1 ) }
    dend_9 { pt3dadd( -16.4087, -81.2246, -35.5031, 0.1 ) }
    dend_9 { pt3dadd( -16.3388, -81.8335, -35.6074, 0.14 ) }
    dend_9 { pt3dadd( -16.285, -82.3831, -35.7179, 0.28 ) }
    dend_9 { pt3dadd( -16.2331, -82.9282, -35.8374, 0.42 ) }
    dend_9 { pt3dadd( -16.1135, -84.0698, -36.0956, 0.28 ) }
    dend_9 { pt3dadd( -16.0462, -84.6035, -36.253, 0.14 ) }
    dend_9 { pt3dadd( -15.9841, -85.1329, -36.4346, 0.1 ) }
    dend_9 { pt3dadd( -15.9112, -85.7216, -36.6513, 0.1 ) }
    dend_9 { pt3dadd( -15.8487, -86.2385, -36.8394, 0.1 ) }
    dend_9 { pt3dadd( -15.7789, -86.767, -37.0125, 0.1 ) }
    dend_9 { pt3dadd( -15.6219, -87.7622, -37.2659, 0.1 ) }
    dend_9 { pt3dadd( -15.5569, -88.1435, -37.3606, 0.1 ) }
    dend_9 { pt3dadd( -15.4539, -88.681, -37.4815, 0.1 ) }
    dend_9 { pt3dadd( -15.3248, -89.2074, -37.5797, 0.1 ) }
    dend_9 { pt3dadd( -15.1764, -89.746, -37.651, 0.1 ) }
    dend_9 { pt3dadd( -15.0138, -90.2811, -37.6876, 0.1 ) }
    dend_9 { pt3dadd( -14.8377, -90.8161, -37.6876, 0.1 ) }
    dend_9 { pt3dadd( -14.6508, -91.3444, -37.6876, 0.1 ) }
    dend_9 { pt3dadd( -14.4417, -91.9312, -37.6876, 0.1 ) }
    dend_9 { pt3dadd( -14.2535, -92.462, -37.6876, 0.14 ) }
    dend_9 { pt3dadd( -14.0798, -92.9934, -37.6487, 0.28 ) }
    dend_9 { pt3dadd( -13.9326, -93.5225, -37.5786, 0.14 ) }
    dend_9 { pt3dadd( -13.8067, -94.0602, -37.4833, 0.1 ) }
    dend_9 { pt3dadd( -13.7012, -94.6015, -37.3689, 0.1 ) }
    dend_9 { pt3dadd( -13.6182, -95.1403, -37.239, 0.1 ) }
    dend_9 { pt3dadd( -13.4652, -96.2674, -36.9381, 0.1 ) }
    dend_9 { pt3dadd( -13.3784, -96.8696, -36.7688, 0.14 ) }
    dend_9 { pt3dadd( -13.2793, -97.4038, -36.6205, 0.28 ) }
    dend_9 { pt3dadd( -13.2157, -97.6674, -36.5552, 0.42 ) }
    dend_9 { pt3dadd( -13.2157, -97.6674, -36.5552, 0.56 ) }
    dend_9 { pt3dadd( -13.1163, -97.9296, -36.5293, 0.56 ) }
    dend_9 { pt3dadd( -12.8658, -98.4999, -36.5293, 0.56 ) }
    dend_9 { pt3dadd( -12.6057, -99.0705, -36.5869, 0.7 ) }
    dend_9 { pt3dadd( -12.3855, -99.5787, -36.6724, 0.56 ) }
    dend_9 { pt3dadd( -12.1772, -100.092, -36.7772, 0.42 ) }
    dend_9 { pt3dadd( -11.9868, -100.596, -36.8894, 0.28 ) }
    dend_9 { pt3dadd( -11.807, -101.112, -37.0154, 0.14 ) }
    dend_9 { pt3dadd( -11.4959, -102.18, -37.2969, 0.1 ) }
    dend_9 { pt3dadd( -11.3648, -102.706, -37.4385, 0.1 ) }
    dend_9 { pt3dadd( -11.2406, -103.238, -37.5756, 0.1 ) }
    dend_9 { pt3dadd( -11.123, -103.773, -37.6957, 0.14 ) }
    dend_9 { pt3dadd( -11.123, -103.773, -37.6957, 0.28 ) }
    dend_9 { pt3dadd( -11.0433, -104.153, -37.73, 0.56 ) }
    dend_9 { pt3dadd( -10.9261, -104.701, -37.73, 0.56 ) }
    dend_9 { pt3dadd( -10.8034, -105.25, -37.73, 0.42 ) }
    dend_9 { pt3dadd( -10.675, -105.796, -37.73, 0.28 ) }
    dend_9 { pt3dadd( -10.5402, -106.333, -37.73, 0.14 ) }
    dend_9 { pt3dadd( -10.3854, -106.872, -37.73, 0.28 ) }
    dend_9 { pt3dadd( -10.2218, -107.409, -37.6933, 0.28 ) }
    dend_9 { pt3dadd( -10.0638, -107.935, -37.5792, 0.14 ) }
    dend_9 { pt3dadd( -9.92492, -108.447, -37.4001, 0.1 ) }
    dend_9 { pt3dadd( -9.80767, -108.93, -37.1348, 0.1 ) }
    dend_9 { pt3dadd( -9.73581, -109.254, -36.9145, 0.1 ) }
    dend_9 { pt3dadd( -9.57775, -110.107, -36.2793, 0.84 ) }
    dend_9 { pt3dadd( -9.43086, -111.029, -35.6128, 0.7 ) }
    dend_9 { pt3dadd( -9.36331, -111.56, -35.2766, 0.56 ) }
    dend_9 { pt3dadd( -9.26902, -112.575, -34.7489, 0.42 ) }
    dend_9 { pt3dadd( -9.30177, -112.846, -35.2271, 0.28 ) }
    dend_9 { pt3dadd( -9.34277, -113.116, -35.7946, 0.14 ) }
    dend_9 { pt3dadd( -9.41094, -113.52, -36.7485, 0.1 ) }
    dend_9 { pt3dadd( -9.54587, -114.231, -38.6548, 0.1 ) }
    dend_9 { pt3dadd( -9.65417, -114.882, -40.5828, 0.1 ) }
    dend_9 { pt3dadd( -9.7012, -115.21, -41.6066, 0.1 ) }
    dend_9 { pt3dadd( -9.73184, -115.518, -42.5577, 0.14 ) }
    dend_9 { pt3dadd( -9.73184, -115.518, -42.5577, 0.28 ) }
    dend_9 { pt3dadd( -9.72261, -115.646, -42.8086, 0.84 ) }
    dend_9 { pt3dadd( -9.63086, -116.129, -43.1905, 0.7 ) }
    dend_9 { pt3dadd( -9.52683, -116.668, -43.3029, 0.56 ) }
    dend_9 { pt3dadd( -9.43334, -117.222, -43.3364, 0.42 ) }
    dend_9 { pt3dadd( -9.36764, -117.769, -43.3364, 0.28 ) }
    dend_9 { pt3dadd( -9.32645, -118.398, -43.3364, 0.14 ) }
    dend_9 { pt3dadd( -9.32567, -119.019, -43.3364, 0.1 ) }
    dend_9 { pt3dadd( -9.35969, -119.647, -43.379, 0.1 ) }
    dend_9 { pt3dadd( -9.38613, -119.924, -43.3952, 0.1 ) }
    dend_9 { pt3dadd( -9.46653, -120.538, -43.4239, 0.1 ) }
    dend_9 { pt3dadd( -9.55048, -121.161, -43.3975, 0.1 ) }
    dend_9 { pt3dadd( -9.62776, -121.783, -43.3187, 0.1 ) }
    dend_9 { pt3dadd( -9.72851, -122.795, -43.1209, 0.14 ) }
    dend_9 { pt3dadd( -9.79674, -123.839, -42.8663, 0.56 ) }
    dend_9 { pt3dadd( -9.81336, -124.448, -42.701, 0.42 ) }
    dend_9 { pt3dadd( -9.78317, -125.55, -42.3798, 0.28 ) }
    dend_9 { pt3dadd( -9.72341, -126.143, -42.2038, 0.14 ) }
    dend_9 { pt3dadd( -9.63532, -126.675, -42.0529, 0.28 ) }
    dend_9 { pt3dadd( -9.5206, -127.21, -41.9168, 0.42 ) }
    dend_9 { pt3dadd( -9.37382, -127.746, -41.8457, 0.28 ) }
    dend_9 { pt3dadd( -9.20774, -128.273, -41.8049, 0.28 ) }
    dend_9 { pt3dadd( -9.00782, -128.863, -41.8049, 0.28 ) }
    dend_9 { pt3dadd( -8.81401, -129.391, -41.8049, 0.42 ) }
    dend_9 { pt3dadd( -8.62267, -129.918, -41.8049, 0.28 ) }
    dend_9 { pt3dadd( -8.43635, -130.447, -41.8049, 0.42 ) }
    dend_9 { pt3dadd( -8.43635, -130.447, -41.8049, 0.56 ) }
    dend_9 { pt3dadd( -8.34587, -130.712, -41.7791, 0.56 ) }
    dend_9 { pt3dadd( -8.16814, -131.239, -41.6875, 0.42 ) }
    dend_9 { pt3dadd( -7.98582, -131.755, -41.5704, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_9 { pt3dadd( -7.80369, -132.259, -41.4427, 0.14 ) }
    dend_9 { pt3dadd( -7.61697, -132.774, -41.3095, 0.1 ) }
    dend_9 { pt3dadd( -7.2081, -133.846, -41.042, 0.1 ) }
    dend_9 { pt3dadd( -7.0063, -134.357, -40.9204, 0.1 ) }
    dend_9 { pt3dadd( -6.80132, -134.867, -40.809, 0.1 ) }
    dend_9 { pt3dadd( -6.58428, -135.378, -40.7142, 0.1 ) }
    dend_9 { pt3dadd( -6.36035, -135.89, -40.6773, 0.1 ) }
    dend_9 { pt3dadd( -6.11957, -136.465, -40.6661, 0.1 ) }
    dend_9 { pt3dadd( -5.91508, -136.989, -40.6933, 0.1 ) }
    dend_9 { pt3dadd( -5.73091, -137.508, -40.7134, 0.14 ) }
    dend_9 { pt3dadd( -5.53901, -138.115, -40.7278, 0.28 ) }
    dend_9 { pt3dadd( -5.26444, -139.113, -40.7355, 0.42 ) }
    dend_9 { pt3dadd( -5.01866, -140.161, -40.7266, 0.84 ) }
    dend_9 { pt3dadd( -4.9098, -140.714, -40.7135, 0.7 ) }
    dend_9 { pt3dadd( -4.79484, -141.324, -40.6906, 0.56 ) }
    dend_9 { pt3dadd( -4.70431, -141.877, -40.6633, 0.42 ) }
    dend_9 { pt3dadd( -4.62098, -142.433, -40.6304, 0.28 ) }
    dend_9 { pt3dadd( -4.52922, -142.984, -40.5932, 0.14 ) }
    dend_9 { pt3dadd( -4.4237, -143.537, -40.5932, 0.1 ) }
    dend_9 { pt3dadd( -4.31335, -144.086, -40.6319, 0.14 ) }
    dend_9 { pt3dadd( -4.18215, -144.686, -40.7097, 0.1 ) }
    dend_9 { pt3dadd( -4.06684, -145.229, -40.7924, 0.1 ) }
    dend_9 { pt3dadd( -3.95438, -145.771, -40.8915, 0.1 ) }
    dend_9 { pt3dadd( -3.84464, -146.308, -41.0109, 0.1 ) }
    dend_9 { pt3dadd( -3.62085, -147.386, -41.311, 0.14 ) }
    dend_9 { pt3dadd( -3.56201, -147.646, -41.4043, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 26/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -18.8818, -65.5977, -38.0121, 0.1 ) }
    dend_8 { pt3dadd( -18.8142, -65.7231, -38.255, 0.1 ) }
    dend_8 { pt3dadd( -18.6751, -65.9267, -38.7583, 0.1 ) }
    dend_8 { pt3dadd( -18.3953, -66.2762, -39.8151, 0.1 ) }
    dend_8 { pt3dadd( -18.257, -66.4309, -40.3357, 0.1 ) }
    dend_8 { pt3dadd( -17.7668, -66.9668, -42.2413, 0.1 ) }
    dend_8 { pt3dadd( -17.5162, -67.2371, -43.2492, 0.1 ) }
    dend_8 { pt3dadd( -17.2766, -67.4875, -44.2278, 0.1 ) }
    dend_8 { pt3dadd( -16.7903, -67.9944, -46.2034, 0.1 ) }
    dend_8 { pt3dadd( -16.5344, -68.273, -47.2077, 0.14 ) }
    dend_8 { pt3dadd( -16.2832, -68.5714, -48.1706, 0.1 ) }
    dend_8 { pt3dadd( -15.7539, -69.3292, -50.0504, 0.14 ) }
    dend_8 { pt3dadd( -15.608, -69.5809, -50.5326, 0.1 ) }
    dend_8 { pt3dadd( -15.453, -69.8949, -50.9702, 0.1 ) }
    dend_8 { pt3dadd( -15.2751, -70.2866, -51.3186, 0.1 ) }
    dend_8 { pt3dadd( -15.1665, -70.5115, -51.4429, 0.1 ) }
    dend_8 { pt3dadd( -14.8959, -70.9887, -51.5704, 0.1 ) }
    dend_8 { pt3dadd( -14.571, -71.4451, -51.5853, 0.1 ) }
    dend_8 { pt3dadd( -13.7781, -72.3213, -51.5967, 0.14 ) }
    dend_8 { pt3dadd( -12.982, -73.0363, -51.6783, 0.1 ) }
    dend_8 { pt3dadd( -12.5084, -73.4029, -51.8785, 0.1 ) }
    dend_8 { pt3dadd( -12.225, -73.6, -52.0588, 0.1 ) }
    dend_8 { pt3dadd( -11.6931, -73.9491, -52.538, 0.1 ) }
    dend_8 { pt3dadd( -11.4457, -74.1079, -52.801, 0.1 ) }
    dend_8 { pt3dadd( -10.8334, -74.524, -53.5824, 0.1 ) }
    dend_8 { pt3dadd( -9.72527, -75.3173, -55.1733, 0.1 ) }
    dend_8 { pt3dadd( -9.52532, -75.4667, -55.4836, 0.1 ) }
    dend_8 { pt3dadd( -8.92884, -75.8905, -56.407, 0.1 ) }
    dend_8 { pt3dadd( -8.72762, -76.0257, -56.7229, 0.1 ) }
    dend_8 { pt3dadd( -8.08936, -76.4039, -57.6381, 0.1 ) }
    dend_8 { pt3dadd( -7.84759, -76.5226, -57.9381, 0.1 ) }
    dend_8 { pt3dadd( -7.00668, -76.8587, -58.8327, 0.1 ) }
    dend_8 { pt3dadd( -6.62083, -76.9886, -59.2179, 0.1 ) }
    dend_8 { pt3dadd( -5.82235, -77.2015, -59.9076, 0.1 ) }
    dend_8 { pt3dadd( -5.38503, -77.3036, -60.2475, 0.1 ) }
    dend_8 { pt3dadd( -4.40181, -77.4979, -60.8656, 0.14 ) }
    dend_8 { pt3dadd( -4.05324, -77.5645, -61.0463, 0.28 ) }
    dend_8 { pt3dadd( -3.49445, -77.6783, -61.2939, 0.14 ) }
    dend_8 { pt3dadd( -2.92651, -77.8176, -61.5274, 0.1 ) }
    dend_8 { pt3dadd( -2.56673, -77.9095, -61.6449, 0.1 ) }
    dend_8 { pt3dadd( -1.9843, -78.0762, -61.8232, 0.1 ) }
    dend_8 { pt3dadd( -1.39421, -78.2474, -61.961, 0.1 ) }
    dend_8 { pt3dadd( -0.399106, -78.5326, -62.2441, 0.1 ) }
    dend_8 { pt3dadd( -0.0362026, -78.6433, -62.3803, 0.14 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 70/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -63.8926, 113.752, 7.64819, 0.1 ) }
    dend_77 { pt3dadd( -64.0439, 114.526, 8.48005, 0.1 ) }
    dend_77 { pt3dadd( -64.2278, 115.34, 9.26775, 0.1 ) }
    dend_77 { pt3dadd( -64.3308, 115.754, 9.61627, 0.1 ) }
    dend_77 { pt3dadd( -64.5959, 116.657, 10.2711, 0.1 ) }
    dend_77 { pt3dadd( -64.7623, 117.174, 10.5902, 0.1 ) }
    dend_77 { pt3dadd( -64.7623, 117.174, 10.5902, 0.1 ) }
    dend_77 { pt3dadd( -64.9576, 117.709, 10.8419, 0.1 ) }
    dend_77 { pt3dadd( -65.1481, 118.205, 11.0292, 0.1 ) }
    dend_77 { pt3dadd( -65.3542, 118.761, 11.2195, 0.1 ) }
    dend_77 { pt3dadd( -65.5253, 119.279, 11.3594, 0.1 ) }
    dend_77 { pt3dadd( -65.8273, 120.364, 11.5739, 0.1 ) }
    dend_77 { pt3dadd( -65.8821, 120.625, 11.6249, 0.14 ) }
    dend_77 { pt3dadd( -65.9584, 121.171, 11.7259, 0.1 ) }
    dend_77 { pt3dadd( -66.0215, 121.79, 11.8255, 0.1 ) }
    dend_77 { pt3dadd( -66.0549, 122.406, 11.9002, 0.1 ) }
    dend_77 { pt3dadd( -66.0808, 123.48, 11.9744, 0.14 ) }
    dend_77 { pt3dadd( -66.1003, 124.626, 11.9848, 0.28 ) }
    dend_77 { pt3dadd( -66.1033, 125.189, 11.9969, 0.14 ) }
    dend_77 { pt3dadd( -66.12, 125.736, 12.0563, 0.1 ) }
    dend_77 { pt3dadd( -66.1673, 126.353, 12.1717, 0.1 ) }
    dend_77 { pt3dadd( -66.2401, 126.962, 12.3233, 0.1 ) }
    dend_77 { pt3dadd( -66.3195, 127.476, 12.5139, 0.14 ) }
    dend_77 { pt3dadd( -66.3827, 127.831, 12.682, 0.1 ) }
    dend_77 { pt3dadd( -66.5885, 128.828, 13.2748, 0.1 ) }
    dend_77 { pt3dadd( -66.6973, 129.283, 13.5839, 0.1 ) }
    dend_77 { pt3dadd( -66.8214, 129.728, 13.9059, 0.1 ) }
    dend_77 { pt3dadd( -67.0784, 130.636, 14.5575, 0.1 ) }
    dend_77 { pt3dadd( -67.3112, 131.554, 15.197, 0.1 ) }
    dend_77 { pt3dadd( -67.4227, 132.005, 15.5101, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_77 { pt3dadd( -67.4773, 132.239, 15.6574, 0.1 ) }
    dend_77 { pt3dadd( -67.5941, 132.707, 15.9425, 0.1 ) }
    dend_77 { pt3dadd( -67.7637, 133.243, 16.2268, 0.1 ) }
    dend_77 { pt3dadd( -67.8634, 133.485, 16.3219, 0.1 ) }
    dend_77 { pt3dadd( -68.3934, 134.487, 16.6436, 0.28 ) }
    dend_77 { pt3dadd( -68.7453, 134.993, 16.8063, 0.14 ) }
    dend_77 { pt3dadd( -69.0871, 135.392, 16.9693, 0.28 ) }
    dend_77 { pt3dadd( -69.6155, 135.929, 17.2171, 0.14 ) }
    dend_77 { pt3dadd( -69.8878, 136.18, 17.364, 0.1 ) }
    dend_77 { pt3dadd( -70.1569, 136.429, 17.5181, 0.1 ) }
    dend_77 { pt3dadd( -70.6754, 136.944, 17.8264, 0.1 ) }
    dend_77 { pt3dadd( -71.4055, 137.711, 18.3426, 0.1 ) }
    dend_77 { pt3dadd( -71.5737, 137.891, 18.4782, 0.1 ) }
    dend_77 { pt3dadd( -72.2158, 138.658, 19.1014, 0.1 ) }
    dend_77 { pt3dadd( -72.4987, 139.029, 19.4167, 0.1 ) }
    dend_77 { pt3dadd( -72.7468, 139.399, 19.7409, 0.14 ) }
    dend_77 { pt3dadd( -72.7468, 139.399, 19.7409, 0.28 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 17/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -63.8926, 113.752, 7.64819, 0.1 ) }
    dend_76 { pt3dadd( -64.7475, 113.631, 8.44731, 0.1 ) }
    dend_76 { pt3dadd( -65.1915, 113.555, 8.88992, 0.1 ) }
    dend_76 { pt3dadd( -65.5657, 113.468, 9.30162, 0.1 ) }
    dend_76 { pt3dadd( -66.3269, 113.267, 10.1286, 0.1 ) }
    dend_76 { pt3dadd( -67.1092, 113.048, 10.9372, 0.1 ) }
    dend_76 { pt3dadd( -67.5019, 112.934, 11.3246, 0.1 ) }
    dend_76 { pt3dadd( -68.3185, 112.66, 12.081, 0.14 ) }
    dend_76 { pt3dadd( -69.1751, 112.35, 12.8337, 0.28 ) }
    dend_76 { pt3dadd( -69.5981, 112.188, 13.1639, 0.14 ) }
    dend_76 { pt3dadd( -70.0492, 112.018, 13.4552, 0.1 ) }
    dend_76 { pt3dadd( -70.2854, 111.938, 13.5801, 0.1 ) }
    dend_76 { pt3dadd( -70.7592, 111.811, 13.8365, 0.14 ) }
    dend_76 { pt3dadd( -71.2558, 111.708, 14.075, 0.28 ) }
    dend_76 { pt3dadd( -71.6181, 111.652, 14.2427, 0.42 ) }
    dend_76 { pt3dadd( -72.6707, 111.528, 14.7557, 0.1 ) }
    dend_76 { pt3dadd( -73.2358, 111.474, 15.0283, 0.1 ) }
    dend_76 { pt3dadd( -74.2784, 111.404, 15.571, 0.14 ) }
    dend_76 { pt3dadd( -74.7758, 111.379, 15.8339, 0.1 ) }
    dend_76 { pt3dadd( -75.2771, 111.364, 16.084, 0.1 ) }
    dend_76 { pt3dadd( -75.8452, 111.348, 16.3316, 0.1 ) }
    dend_76 { pt3dadd( -76.3735, 111.32, 16.5166, 0.1 ) }
    dend_76 { pt3dadd( -77.4941, 111.245, 16.8841, 0.1 ) }
    dend_76 { pt3dadd( -78.0359, 111.221, 17.0253, 0.14 ) }
    dend_76 { pt3dadd( -78.6358, 111.227, 17.1812, 0.1 ) }
    dend_76 { pt3dadd( -79.1796, 111.276, 17.3074, 0.14 ) }
    dend_76 { pt3dadd( -79.4528, 111.324, 17.357, 0.1 ) }
    dend_76 { pt3dadd( -79.7237, 111.396, 17.3839, 0.1 ) }
    dend_76 { pt3dadd( -80.4777, 111.624, 17.3839, 0.1 ) }
    dend_76 { pt3dadd( -80.8593, 111.748, 17.422, 0.1 ) }
    dend_76 { pt3dadd( -81.5969, 111.994, 17.5482, 0.1 ) }
    dend_76 { pt3dadd( -81.9678, 112.116, 17.6269, 0.1 ) }
    dend_76 { pt3dadd( -82.5474, 112.293, 17.7649, 0.1 ) }
    dend_76 { pt3dadd( -83.0763, 112.435, 17.8971, 0.1 ) }
    dend_76 { pt3dadd( -84.1933, 112.687, 18.1931, 0.1 ) }
    dend_76 { pt3dadd( -84.5649, 112.753, 18.2891, 0.1 ) }
    dend_76 { pt3dadd( -85.1713, 112.832, 18.4389, 0.14 ) }
    dend_76 { pt3dadd( -85.1713, 112.832, 18.4389, 0.28 ) }
    dend_76 { pt3dadd( -85.7848, 112.859, 18.5361, 0.28 ) }
    dend_76 { pt3dadd( -86.4122, 112.855, 18.5892, 0.14 ) }
    dend_76 { pt3dadd( -86.9708, 112.81, 18.5892, 0.1 ) }
    dend_76 { pt3dadd( -87.2495, 112.77, 18.5892, 0.14 ) }
    dend_76 { pt3dadd( -87.7998, 112.664, 18.5892, 0.1 ) }
    dend_76 { pt3dadd( -88.3356, 112.531, 18.631, 0.1 ) }
    dend_76 { pt3dadd( -88.8664, 112.368, 18.7071, 0.1 ) }
    dend_76 { pt3dadd( -89.3907, 112.188, 18.8076, 0.1 ) }
    dend_76 { pt3dadd( -89.9082, 112.006, 18.9224, 0.14 ) }
    dend_76 { pt3dadd( -90.411, 111.816, 19.0809, 0.28 ) }
    dend_76 { pt3dadd( -91.4448, 111.404, 19.4783, 0.42 ) }
    dend_76 { pt3dadd( -91.9237, 111.197, 19.6828, 0.28 ) }
    dend_76 { pt3dadd( -92.3874, 110.975, 19.8889, 0.14 ) }
    dend_76 { pt3dadd( -92.8496, 110.731, 20.0904, 0.1 ) }
    dend_76 { pt3dadd( -93.8115, 110.182, 20.493, 0.1 ) }
    dend_76 { pt3dadd( -94.2646, 109.914, 20.6924, 0.1 ) }
    dend_76 { pt3dadd( -94.7652, 109.605, 20.8977, 0.1 ) }
    dend_76 { pt3dadd( -95.2625, 109.286, 21.1151, 0.1 ) }
    dend_76 { pt3dadd( -95.753, 108.954, 21.3311, 0.14 ) }
    dend_76 { pt3dadd( -95.753, 108.954, 21.3311, 0.28 ) }
    dend_76 { pt3dadd( -96.6496, 108.305, 21.6109, 0.1 ) }
    dend_76 { pt3dadd( -97.1396, 107.928, 21.7649, 0.1 ) }
    dend_76 { pt3dadd( -97.5604, 107.594, 21.8866, 0.14 ) }
    dend_76 { pt3dadd( -97.8658, 107.342, 21.9597, 0.28 ) }
    dend_76 { pt3dadd( -98.3404, 106.946, 22.0408, 0.14 ) }
    dend_76 { pt3dadd( -98.8194, 106.54, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -99.1127, 106.284, 22.0855, 0.14 ) }
    dend_76 { pt3dadd( -99.5942, 105.878, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -100.081, 105.49, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -100.538, 105.165, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -101.071, 104.83, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -101.616, 104.528, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -102.125, 104.294, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -102.65, 104.09, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -103.182, 103.914, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -103.727, 103.77, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -104.267, 103.661, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -104.888, 103.561, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -105.165, 103.526, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -105.726, 103.481, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -106.347, 103.448, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -106.91, 103.436, 22.0855, 0.14 ) }
    dend_76 { pt3dadd( -106.91, 103.436, 22.0855, 0.28 ) }
    dend_76 { pt3dadd( -107.541, 103.457, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -108.16, 103.489, 22.0855, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_76 { pt3dadd( -108.719, 103.53, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -109.347, 103.585, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -109.965, 103.652, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -110.591, 103.714, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -110.872, 103.74, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -111.49, 103.806, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -112.115, 103.884, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -112.733, 103.953, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -113.293, 104.012, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -113.92, 104.081, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -114.307, 104.125, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -114.935, 104.193, 22.0855, 0.1 ) }
    dend_76 { pt3dadd( -115.495, 104.252, 22.0855, 0.14 ) }
    dend_76 { pt3dadd( -116.113, 104.32, 22.0855, 0.28 ) }
    dend_76 { pt3dadd( -116.389, 104.359, 22.0855, 0.14 ) }
    // Section: dend_72, id: dend_72, parent: dend_64 (entry count 15/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -19.0212, 77.0402, -5.76248, 0.98 ) }
    dend_72 { pt3dadd( -18.809, 78.1725, -5.51863, 0.98 ) }
    dend_72 { pt3dadd( -18.7081, 78.786, -5.41889, 0.84 ) }
    dend_72 { pt3dadd( -18.6312, 79.3979, -5.34048, 0.7 ) }
    dend_72 { pt3dadd( -18.5884, 79.7917, -5.30003, 0.56 ) }
    dend_72 { pt3dadd( -18.5375, 80.4073, -5.24791, 0.7 ) }
    dend_72 { pt3dadd( -18.4976, 80.9649, -5.20855, 0.56 ) }
    dend_72 { pt3dadd( -18.4756, 81.5942, -5.20855, 0.42 ) }
    dend_72 { pt3dadd( -18.4761, 82.1547, -5.20855, 0.28 ) }
    dend_72 { pt3dadd( -18.5129, 82.772, -5.16676, 0.14 ) }
    dend_72 { pt3dadd( -18.5778, 83.3242, -5.09663, 0.1 ) }
    dend_72 { pt3dadd( -18.6801, 83.9359, -4.98724, 0.14 ) }
    dend_72 { pt3dadd( -18.7996, 84.4611, -4.87218, 0.28 ) }
    dend_72 { pt3dadd( -18.877, 84.724, -4.80759, 0.14 ) }
    dend_72 { pt3dadd( -19.2458, 85.8083, -4.53101, 0.1 ) }
    dend_72 { pt3dadd( -19.4428, 86.3202, -4.40359, 0.1 ) }
    dend_72 { pt3dadd( -19.6374, 86.833, -4.28829, 0.1 ) }
    dend_72 { pt3dadd( -19.8406, 87.412, -4.18092, 0.1 ) }
    dend_72 { pt3dadd( -19.9945, 87.9525, -4.14503, 0.1 ) }
    dend_72 { pt3dadd( -20.1064, 88.501, -4.17202, 0.1 ) }
    dend_72 { pt3dadd( -20.1735, 89.0569, -4.23288, 0.1 ) }
    dend_72 { pt3dadd( -20.2159, 89.6771, -4.23879, 0.1 ) }
    dend_72 { pt3dadd( -20.2329, 90.3038, -4.17939, 0.14 ) }
    dend_72 { pt3dadd( -20.235, 91.3583, -3.98021, 0.28 ) }
    dend_72 { pt3dadd( -20.2405, 91.6303, -3.9074, 0.42 ) }
    dend_72 { pt3dadd( -20.3291, 92.7163, -3.55135, 0.1 ) }
    dend_72 { pt3dadd( -20.4954, 93.7834, -3.16291, 0.14 ) }
    dend_72 { pt3dadd( -20.6171, 94.2955, -2.9705, 0.1 ) }
    dend_72 { pt3dadd( -20.7646, 94.7923, -2.78387, 0.1 ) }
    dend_72 { pt3dadd( -20.9346, 95.2986, -2.60498, 0.1 ) }
    dend_72 { pt3dadd( -21.1401, 95.8712, -2.47132, 0.1 ) }
    dend_72 { pt3dadd( -21.3298, 96.3998, -2.4288, 0.1 ) }
    dend_72 { pt3dadd( -21.5165, 96.9282, -2.4288, 0.1 ) }
    dend_72 { pt3dadd( -21.603, 97.1962, -2.4288, 0.14 ) }
    dend_72 { pt3dadd( -21.7695, 97.7297, -2.38647, 0.7 ) }
    dend_72 { pt3dadd( -21.9281, 98.2643, -2.30735, 0.7 ) }
    dend_72 { pt3dadd( -22.073, 98.7854, -2.20308, 0.84 ) }
    dend_72 { pt3dadd( -22.2222, 99.314, -2.07883, 0.98 ) }
    dend_72 { pt3dadd( -22.3301, 99.6907, -1.98398, 0.98 ) }
    dend_72 { pt3dadd( -22.6273, 100.8, -1.70667, 0.84 ) }
    dend_72 { pt3dadd( -22.7616, 101.329, -1.5796, 0.84 ) }
    dend_72 { pt3dadd( -22.8923, 101.864, -1.46379, 0.7 ) }
    dend_72 { pt3dadd( -23.0075, 102.396, -1.32837, 0.56 ) }
    dend_72 { pt3dadd( -23.1009, 102.921, -1.19062, 0.56 ) }
    dend_72 { pt3dadd( -23.1819, 103.527, -1.04091, 0.56 ) }
    dend_72 { pt3dadd( -23.2124, 104.075, -0.927717, 0.42 ) }
    dend_72 { pt3dadd( -23.2176, 104.624, -0.798898, 0.42 ) }
    dend_72 { pt3dadd( -23.1925, 105.712, -0.351033, 0.56 ) }
    dend_72 { pt3dadd( -23.17, 106.261, -0.0427348, 0.56 ) }
    dend_72 { pt3dadd( -23.1516, 106.584, 0.173664, 0.7 ) }
    dend_72 { pt3dadd( -23.117, 107.095, 0.54383, 0.7 ) }
    dend_72 { pt3dadd( -23.117, 107.095, 0.54383, 0.84 ) }
    dend_72 { pt3dadd( -22.8721, 108.849, 1.62988, 1.12 ) }
    dend_72 { pt3dadd( -22.8284, 109.1, 1.74431, 1.12 ) }
    dend_72 { pt3dadd( -22.7298, 109.677, 1.94799, 0.98 ) }
    dend_72 { pt3dadd( -22.6513, 110.29, 2.07493, 0.84 ) }
    dend_72 { pt3dadd( -22.6189, 110.678, 2.08738, 0.84 ) }
    dend_72 { pt3dadd( -22.6043, 111.947, 1.93433, 0.84 ) }
    dend_72 { pt3dadd( -22.6215, 112.216, 1.86132, 0.7 ) }
    dend_72 { pt3dadd( -22.709, 112.813, 1.7079, 0.56 ) }
    dend_72 { pt3dadd( -22.8645, 113.416, 1.57379, 0.42 ) }
    dend_72 { pt3dadd( -23.0473, 113.929, 1.49079, 0.28 ) }
    dend_72 { pt3dadd( -23.2743, 114.507, 1.44101, 0.14 ) }
    dend_72 { pt3dadd( -23.4874, 115.029, 1.44101, 0.28 ) }
    dend_72 { pt3dadd( -23.4874, 115.029, 1.44101, 0.42 ) }
    dend_72 { pt3dadd( -23.625, 115.572, 1.44101, 0.1 ) }
    dend_72 { pt3dadd( -23.7316, 116.125, 1.44101, 0.1 ) }
    dend_72 { pt3dadd( -23.8333, 116.748, 1.44101, 0.1 ) }
    dend_72 { pt3dadd( -23.8983, 117.298, 1.44101, 0.1 ) }
    dend_72 { pt3dadd( -23.9508, 117.927, 1.44101, 0.14 ) }
    dend_72 { pt3dadd( -23.9765, 118.488, 1.48206, 0.28 ) }
    dend_72 { pt3dadd( -23.9748, 118.764, 1.5212, 0.42 ) }
    dend_72 { pt3dadd( -23.9418, 119.306, 1.62956, 0.56 ) }
    dend_72 { pt3dadd( -23.8767, 119.917, 1.77796, 0.56 ) }
    dend_72 { pt3dadd( -23.8333, 120.186, 1.84876, 0.42 ) }
    dend_72 { pt3dadd( -23.6221, 121.321, 2.07319, 0.56 ) }
    dend_72 { pt3dadd( -23.4886, 121.937, 2.11473, 0.42 ) }
    dend_72 { pt3dadd( -23.3973, 122.314, 2.14695, 0.28 ) }
    dend_72 { pt3dadd( -23.2332, 122.92, 2.19592, 0.42 ) }
    dend_72 { pt3dadd( -23.0833, 123.533, 2.22339, 0.56 ) }
    dend_72 { pt3dadd( -22.9065, 124.554, 2.18807, 0.7 ) }
    dend_72 { pt3dadd( -22.8231, 125.529, 1.98285, 0.7 ) }
    dend_72 { pt3dadd( -22.8427, 127.542, 1.83578, 0.56 ) }
    dend_72 { pt3dadd( -22.8574, 127.808, 1.92539, 0.7 ) }
    dend_72 { pt3dadd( -22.8728, 128.299, 2.18126, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_72 { pt3dadd( -22.8656, 128.758, 2.50273, 0.7 ) }
    dend_72 { pt3dadd( -22.8375, 129.211, 2.83662, 0.56 ) }
    dend_72 { pt3dadd( -22.8127, 129.733, 3.19069, 0.42 ) }
    dend_72 { pt3dadd( -22.7868, 130.782, 3.72265, 0.28 ) }
    dend_72 { pt3dadd( -22.7918, 131.139, 3.89921, 0.14 ) }
    dend_72 { pt3dadd( -22.84, 132.196, 4.41653, 0.1 ) }
    dend_72 { pt3dadd( -22.8811, 132.556, 4.58109, 0.14 ) }
    dend_72 { pt3dadd( -23.0076, 133.125, 4.80139, 0.56 ) }
    dend_72 { pt3dadd( -23.1866, 133.64, 4.9435, 0.42 ) }
    dend_72 { pt3dadd( -23.4327, 134.198, 5.06809, 0.28 ) }
    dend_72 { pt3dadd( -23.68, 134.691, 5.1803, 0.14 ) }
    dend_72 { pt3dadd( -23.9612, 135.237, 5.28899, 0.1 ) }
    dend_72 { pt3dadd( -24.2132, 135.791, 5.4206, 0.1 ) }
    dend_72 { pt3dadd( -24.3872, 136.308, 5.56138, 0.1 ) }
    dend_72 { pt3dadd( -24.5865, 137.39, 5.88091, 0.14 ) }
    dend_72 { pt3dadd( -24.5865, 137.39, 5.88091, 0.28 ) }
    dend_72 { pt3dadd( -24.478, 137.979, 6.04145, 0.84 ) }
    dend_72 { pt3dadd( -24.271, 138.556, 6.18625, 0.7 ) }
    dend_72 { pt3dadd( -24.1032, 138.906, 6.25622, 0.56 ) }
    dend_72 { pt3dadd( -23.8156, 139.463, 6.31978, 0.42 ) }
    dend_72 { pt3dadd( -23.5523, 140.024, 6.31978, 0.56 ) }
    dend_72 { pt3dadd( -23.4573, 140.289, 6.31978, 0.56 ) }
    dend_72 { pt3dadd( -23.3882, 140.562, 6.31978, 0.7 ) }
    dend_72 { pt3dadd( -23.3065, 141.119, 6.31978, 0.84 ) }
    dend_72 { pt3dadd( -23.276, 141.679, 6.31978, 0.7 ) }
    dend_72 { pt3dadd( -23.3101, 142.238, 6.31978, 0.56 ) }
    dend_72 { pt3dadd( -23.3868, 142.853, 6.31978, 0.7 ) }
    dend_72 { pt3dadd( -23.3868, 142.853, 6.31978, 0.84 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 28/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -19.0212, 77.0402, -5.76248, 0.84 ) }
    dend_65 { pt3dadd( -19.26, 77.3581, -6.24198, 0.84 ) }
    dend_65 { pt3dadd( -19.7131, 77.9611, -7.15169, 0.7 ) }
    dend_65 { pt3dadd( -20.1526, 78.5461, -8.03415, 0.56 ) }
    dend_65 { pt3dadd( -20.5653, 79.0954, -8.86275, 0.42 ) }
    dend_65 { pt3dadd( -20.8041, 79.4132, -9.34226, 0.56 ) }
    dend_65 { pt3dadd( -21.019, 79.6992, -9.77369, 0.42 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 4.21904, 183.786, -63.6772, 0.14 ) }
    dend_60 { pt3dadd( 4.28046, 184.946, -63.4928, 0.14 ) }
    dend_60 { pt3dadd( 4.29967, 185.495, -63.3824, 0.28 ) }
    dend_60 { pt3dadd( 4.3239, 186.112, -63.2588, 0.42 ) }
    dend_60 { pt3dadd( 4.33765, 186.386, -63.2078, 0.42 ) }
    dend_60 { pt3dadd( 4.38518, 187.545, -63.0096, 0.28 ) }
    dend_60 { pt3dadd( 4.41122, 188.169, -62.9132, 0.14 ) }
    dend_60 { pt3dadd( 4.4312, 188.71, -62.8014, 0.1 ) }
    dend_60 { pt3dadd( 4.45983, 189.332, -62.6924, 0.1 ) }
    dend_60 { pt3dadd( 4.4788, 189.956, -62.6108, 0.1 ) }
    dend_60 { pt3dadd( 4.48414, 190.501, -62.5322, 0.1 ) }
    dend_60 { pt3dadd( 4.46708, 191.125, -62.451, 0.1 ) }
    dend_60 { pt3dadd( 4.45446, 191.402, -62.4015, 0.1 ) }
    dend_60 { pt3dadd( 4.429, 192.01, -62.273, 0.1 ) }
    dend_60 { pt3dadd( 4.40851, 192.555, -62.1451, 0.1 ) }
    dend_60 { pt3dadd( 4.39021, 193.671, -61.8758, 0.1 ) }
    dend_60 { pt3dadd( 4.40141, 194.224, -61.7864, 0.1 ) }
    dend_60 { pt3dadd( 4.43268, 194.841, -61.7388, 0.1 ) }
    dend_60 { pt3dadd( 4.49286, 195.47, -61.7403, 0.1 ) }
    dend_60 { pt3dadd( 4.54763, 195.863, -61.7739, 0.1 ) }
    dend_60 { pt3dadd( 4.66047, 196.464, -61.8717, 0.14 ) }
    dend_60 { pt3dadd( 4.90803, 197.591, -62.1329, 0.14 ) }
    dend_60 { pt3dadd( 5.04811, 198.188, -62.2252, 0.1 ) }
    dend_60 { pt3dadd( 5.13454, 198.575, -62.2573, 0.1 ) }
    dend_60 { pt3dadd( 5.26089, 199.184, -62.2592, 0.1 ) }
    dend_60 { pt3dadd( 5.37744, 199.795, -62.1649, 0.1 ) }
    dend_60 { pt3dadd( 5.47509, 200.393, -61.9867, 0.1 ) }
    dend_60 { pt3dadd( 5.62736, 201.472, -61.543, 0.1 ) }
    dend_60 { pt3dadd( 5.65422, 201.727, -61.4326, 0.1 ) }
    dend_60 { pt3dadd( 5.68929, 202.305, -61.1846, 0.1 ) }
    dend_60 { pt3dadd( 5.72417, 203.395, -60.7414, 0.1 ) }
    dend_60 { pt3dadd( 5.72284, 203.925, -60.5521, 0.1 ) }
    dend_60 { pt3dadd( 5.69829, 204.524, -60.3855, 0.1 ) }
    dend_60 { pt3dadd( 5.66781, 205.078, -60.288, 0.1 ) }
    dend_60 { pt3dadd( 5.63596, 205.632, -60.2086, 0.1 ) }
    dend_60 { pt3dadd( 5.58821, 206.252, -60.1126, 0.1 ) }
    dend_60 { pt3dadd( 5.54678, 206.806, -60.0374, 0.1 ) }
    dend_60 { pt3dadd( 5.52434, 207.348, -59.929, 0.1 ) }
    dend_60 { pt3dadd( 5.51116, 207.739, -59.8318, 0.1 ) }
    dend_60 { pt3dadd( 5.5118, 208.008, -59.7583, 0.1 ) }
    dend_60 { pt3dadd( 5.54853, 209.114, -59.4572, 0.1 ) }
    dend_60 { pt3dadd( 5.58211, 209.714, -59.3068, 0.1 ) }
    dend_60 { pt3dadd( 5.62731, 210.329, -59.1711, 0.1 ) }
    dend_60 { pt3dadd( 5.67316, 210.882, -59.0737, 0.1 ) }
    dend_60 { pt3dadd( 5.71185, 211.498, -58.9962, 0.1 ) }
    dend_60 { pt3dadd( 5.75083, 212.126, -58.9951, 0.1 ) }
    dend_60 { pt3dadd( 5.79551, 212.734, -59.1202, 0.1 ) }
    dend_60 { pt3dadd( 5.81082, 213.002, -59.2054, 0.1 ) }
    dend_60 { pt3dadd( 5.84175, 213.588, -59.4377, 0.1 ) }
    dend_60 { pt3dadd( 5.86676, 214.101, -59.6694, 0.1 ) }
    dend_60 { pt3dadd( 5.92653, 215.13, -60.2382, 0.14 ) }
    dend_60 { pt3dadd( 6.0013, 216.14, -60.8475, 0.28 ) }
    dend_60 { pt3dadd( 6.04923, 216.614, -61.1427, 0.14 ) }
    dend_60 { pt3dadd( 6.12008, 217.142, -61.4596, 0.1 ) }
    dend_60 { pt3dadd( 6.15976, 217.386, -61.5939, 0.1 ) }
    dend_60 { pt3dadd( 6.38568, 218.531, -62.11, 0.1 ) }
    dend_60 { pt3dadd( 6.50704, 219.121, -62.2934, 0.1 ) }
    dend_60 { pt3dadd( 6.58902, 219.502, -62.3761, 0.1 ) }
    dend_60 { pt3dadd( 6.73788, 220.094, -62.4932, 0.1 ) }
    dend_60 { pt3dadd( 6.8881, 220.698, -62.5887, 0.14 ) }
    dend_60 { pt3dadd( 7.03192, 221.3, -62.6448, 0.1 ) }
    dend_60 { pt3dadd( 7.08388, 221.577, -62.6448, 0.1 ) }
    dend_60 { pt3dadd( 7.18349, 222.201, -62.6448, 0.1 ) }
    dend_60 { pt3dadd( 7.23559, 222.587, -62.6448, 0.1 ) }
    dend_60 { pt3dadd( 7.30933, 223.132, -62.6448, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_60 { pt3dadd( 7.39652, 223.753, -62.7011, 0.1 ) }
    dend_60 { pt3dadd( 7.48257, 224.301, -62.7873, 0.1 ) }
    dend_60 { pt3dadd( 7.58656, 224.9, -62.9067, 0.1 ) }
    dend_60 { pt3dadd( 7.68287, 225.509, -63.0439, 0.1 ) }
    dend_60 { pt3dadd( 7.73136, 225.885, -63.1312, 0.1 ) }
    dend_60 { pt3dadd( 7.86333, 227.028, -63.4062, 0.1 ) }
    dend_60 { pt3dadd( 7.89915, 227.413, -63.502, 0.1 ) }
    dend_60 { pt3dadd( 7.94047, 228.013, -63.6497, 0.14 ) }
    dend_60 { pt3dadd( 7.96121, 228.557, -63.7849, 0.1 ) }
    dend_60 { pt3dadd( 7.95845, 229.106, -63.9106, 0.1 ) }
    dend_60 { pt3dadd( 7.9242, 229.658, -64.0005, 0.1 ) }
    dend_60 { pt3dadd( 7.9242, 229.658, -64.0005, 0.14 ) }
    dend_60 { pt3dadd( 7.86731, 229.934, -64.0005, 0.56 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 13/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.21904, 183.786, -63.6772, 0.1 ) }
    dend_59 { pt3dadd( 3.42453, 182.947, -63.4288, 0.1 ) }
    dend_59 { pt3dadd( 3.00238, 182.5, -63.3279, 0.1 ) }
    dend_59 { pt3dadd( 2.72932, 182.204, -63.3231, 0.1 ) }
    dend_59 { pt3dadd( 2.32103, 181.736, -63.3724, 0.1 ) }
    dend_59 { pt3dadd( 1.92961, 181.257, -63.4475, 0.1 ) }
    dend_59 { pt3dadd( 1.69589, 180.94, -63.5041, 0.1 ) }
    dend_59 { pt3dadd( 1.37847, 180.416, -63.6161, 0.1 ) }
    dend_59 { pt3dadd( 0.935748, 179.445, -63.7577, 0.1 ) }
    dend_59 { pt3dadd( 0.719344, 178.684, -63.8133, 0.1 ) }
    dend_59 { pt3dadd( 0.679358, 178.407, -63.7862, 0.1 ) }
    dend_59 { pt3dadd( 0.651511, 177.863, -63.6539, 0.1 ) }
    dend_59 { pt3dadd( 0.636283, 176.78, -63.2751, 0.1 ) }
    dend_59 { pt3dadd( 0.627557, 176.264, -63.0567, 0.1 ) }
    dend_59 { pt3dadd( 0.60796, 175.7, -62.7761, 0.14 ) }
    dend_59 { pt3dadd( 0.565864, 174.654, -62.2373, 0.84 ) }
    dend_59 { pt3dadd( 0.520054, 174.089, -61.9583, 0.7 ) }
    dend_59 { pt3dadd( 0.484249, 173.733, -61.8037, 0.56 ) }
    dend_59 { pt3dadd( 0.416129, 172.966, -61.5816, 0.42 ) }
    dend_59 { pt3dadd( 0.416129, 172.966, -61.5816, 0.28 ) }
    dend_59 { pt3dadd( 0.459005, 172.69, -61.55, 0.42 ) }
    dend_59 { pt3dadd( 0.550547, 172.424, -61.55, 0.56 ) }
    dend_59 { pt3dadd( 0.800812, 171.853, -61.55, 0.42 ) }
    dend_59 { pt3dadd( 1.04283, 171.345, -61.55, 0.28 ) }
    dend_59 { pt3dadd( 1.313, 170.783, -61.55, 0.42 ) }
    dend_59 { pt3dadd( 1.55132, 170.275, -61.5892, 0.28 ) }
    dend_59 { pt3dadd( 1.77447, 169.772, -61.621, 0.14 ) }
    dend_59 { pt3dadd( 1.99722, 169.255, -61.6475, 0.1 ) }
    dend_59 { pt3dadd( 2.21809, 168.741, -61.6671, 0.1 ) }
    dend_59 { pt3dadd( 2.4435, 168.228, -61.6785, 0.1 ) }
    dend_59 { pt3dadd( 2.85654, 167.274, -61.6827, 0.1 ) }
    dend_59 { pt3dadd( 3.27435, 166.33, -61.5728, 0.28 ) }
    dend_59 { pt3dadd( 3.49524, 165.826, -61.465, 0.14 ) }
    dend_59 { pt3dadd( 3.72504, 165.279, -61.2536, 0.1 ) }
    dend_59 { pt3dadd( 3.91258, 164.805, -61.0216, 0.1 ) }
    dend_59 { pt3dadd( 4.08619, 164.332, -60.7689, 0.1 ) }
    dend_59 { pt3dadd( 4.41265, 163.366, -60.2454, 0.1 ) }
    dend_59 { pt3dadd( 4.57154, 162.878, -60.0387, 0.1 ) }
    dend_59 { pt3dadd( 4.91103, 161.837, -59.6984, 0.1 ) }
    dend_59 { pt3dadd( 5.09464, 161.307, -59.7028, 0.1 ) }
    dend_59 { pt3dadd( 5.28554, 160.855, -59.9785, 0.1 ) }
    dend_59 { pt3dadd( 5.47622, 160.474, -60.343, 0.1 ) }
    dend_59 { pt3dadd( 5.84044, 159.852, -61.0907, 0.1 ) }
    dend_59 { pt3dadd( 6.24529, 159.262, -61.8949, 0.1 ) }
    dend_59 { pt3dadd( 7.11256, 158.193, -63.4737, 0.1 ) }
    dend_59 { pt3dadd( 7.11256, 158.193, -63.4737, 0.14 ) }
    dend_59 { pt3dadd( 7.77666, 157.632, -64.1085, 0.42 ) }
    dend_59 { pt3dadd( 8.08609, 157.405, -64.176, 0.28 ) }
    dend_59 { pt3dadd( 8.57197, 157.024, -64.0532, 0.14 ) }
    dend_59 { pt3dadd( 9.40841, 156.297, -63.6543, 0.1 ) }
    dend_59 { pt3dadd( 9.84214, 155.898, -63.4325, 0.1 ) }
    dend_59 { pt3dadd( 10.1184, 155.636, -63.3506, 0.1 ) }
    dend_59 { pt3dadd( 10.5822, 155.211, -63.3327, 0.1 ) }
    dend_59 { pt3dadd( 11.0589, 154.799, -63.3804, 0.14 ) }
    dend_59 { pt3dadd( 11.2747, 154.621, -63.4117, 0.1 ) }
    dend_59 { pt3dadd( 12.0888, 153.925, -63.481, 0.1 ) }
    dend_59 { pt3dadd( 12.5574, 153.511, -63.3926, 0.1 ) }
    dend_59 { pt3dadd( 12.9369, 153.134, -63.2162, 0.1 ) }
    dend_59 { pt3dadd( 13.1707, 152.869, -63.0527, 0.1 ) }
    dend_59 { pt3dadd( 13.732, 152.137, -62.5745, 0.1 ) }
    dend_59 { pt3dadd( 14.2635, 151.275, -62.0357, 0.1 ) }
    dend_59 { pt3dadd( 14.4795, 150.827, -61.7763, 0.1 ) }
    dend_59 { pt3dadd( 14.6584, 150.344, -61.5569, 0.14 ) }
    dend_59 { pt3dadd( 14.8191, 149.823, -61.4135, 0.1 ) }
    dend_59 { pt3dadd( 14.9608, 149.293, -61.3631, 0.1 ) }
    dend_59 { pt3dadd( 15.0853, 148.747, -61.4189, 0.1 ) }
    dend_59 { pt3dadd( 15.1778, 148.207, -61.5376, 0.1 ) }
    dend_59 { pt3dadd( 15.237, 147.654, -61.6286, 0.1 ) }
    dend_59 { pt3dadd( 15.2957, 146.623, -61.736, 0.1 ) }
    dend_59 { pt3dadd( 15.3055, 146.234, -61.7523, 0.1 ) }
    dend_59 { pt3dadd( 15.3133, 145.605, -61.7408, 0.1 ) }
    dend_59 { pt3dadd( 15.3116, 144.985, -61.6946, 0.1 ) }
    dend_59 { pt3dadd( 15.3153, 143.812, -61.5488, 0.1 ) }
    dend_59 { pt3dadd( 15.3265, 143.26, -61.4538, 0.1 ) }
    dend_59 { pt3dadd( 15.3567, 142.71, -61.3361, 0.1 ) }
    dend_59 { pt3dadd( 15.4152, 142.162, -61.2354, 0.1 ) }
    dend_59 { pt3dadd( 15.5088, 141.555, -61.1504, 0.1 ) }
    dend_59 { pt3dadd( 15.6149, 141.011, -61.066, 0.1 ) }
    dend_59 { pt3dadd( 15.6757, 140.739, -61.0275, 0.1 ) }
    dend_59 { pt3dadd( 15.801, 140.202, -60.9249, 0.1 ) }
    dend_59 { pt3dadd( 15.931, 139.677, -60.8067, 0.1 ) }
    dend_59 { pt3dadd( 16.0703, 139.151, -60.6753, 0.1 ) }
    dend_59 { pt3dadd( 16.3552, 138.077, -60.392, 0.1 ) }
    dend_59 { pt3dadd( 16.4869, 137.547, -60.2541, 0.1 ) }
    dend_59 { pt3dadd( 16.6006, 137.013, -60.1272, 0.1 ) }
    dend_59 { pt3dadd( 16.6883, 136.468, -60.017, 0.1 ) }
    dend_59 { pt3dadd( 16.7211, 136.194, -59.9764, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_59 { pt3dadd( 16.7484, 135.807, -59.9458, 0.7 ) }
    dend_59 { pt3dadd( 16.7591, 135.244, -59.9458, 0.56 ) }
    dend_59 { pt3dadd( 16.7546, 134.612, -59.9458, 0.42 ) }
    dend_59 { pt3dadd( 16.7352, 133.994, -59.9926, 0.28 ) }
    dend_59 { pt3dadd( 16.7141, 133.439, -60.0654, 0.14 ) }
    dend_59 { pt3dadd( 16.6863, 132.823, -60.1316, 0.1 ) }
    dend_59 { pt3dadd( 16.654, 132.195, -60.1843, 0.1 ) }
    dend_59 { pt3dadd( 16.611, 131.633, -60.176, 0.1 ) }
    dend_59 { pt3dadd( 16.5038, 130.468, -60.0455, 0.1 ) }
    dend_59 { pt3dadd( 16.4699, 130.194, -59.9913, 0.1 ) }
    dend_59 { pt3dadd( 16.3236, 129.164, -59.7156, 0.1 ) }
    dend_59 { pt3dadd( 16.2421, 128.569, -59.5193, 0.1 ) }
    dend_59 { pt3dadd( 16.0817, 127.49, -59.0783, 0.1 ) }
    dend_59 { pt3dadd( 15.9868, 126.932, -58.798, 0.1 ) }
    dend_59 { pt3dadd( 15.9308, 126.604, -58.5955, 0.1 ) }
    dend_59 { pt3dadd( 15.8472, 126.123, -58.3212, 0.1 ) }
    dend_59 { pt3dadd( 15.8116, 125.863, -58.2193, 0.14 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 17/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 21.5609, -176.913, -7.457, 0.98 ) }
    dend_26 { pt3dadd( 21.6203, -177.253, -6.93799, 0.98 ) }
    dend_26 { pt3dadd( 21.6537, -177.422, -6.71546, 1.12 ) }
    dend_26 { pt3dadd( 21.796, -178.11, -5.95041, 1.82 ) }
    dend_26 { pt3dadd( 21.9839, -178.931, -5.17275, 1.68 ) }
    dend_26 { pt3dadd( 22.2084, -179.824, -4.48923, 1.54 ) }
    dend_26 { pt3dadd( 22.3433, -180.313, -4.24579, 1.4 ) }
    dend_26 { pt3dadd( 22.5157, -180.83, -4.16609, 1.26 ) }
    dend_26 { pt3dadd( 22.8512, -181.788, -4.39043, 1.12 ) }
    dend_26 { pt3dadd( 23.1667, -182.637, -4.97223, 1.12 ) }
    dend_26 { pt3dadd( 23.2397, -182.824, -5.16596, 1.12 ) }
    dend_26 { pt3dadd( 23.511, -183.482, -6.06569, 1.12 ) }
    dend_26 { pt3dadd( 23.75, -184.024, -6.9645, 1.12 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 21.5609, -176.913, -7.457, 0.98 ) }
    dend_25 { pt3dadd( 21.1938, -177.232, -7.06777, 0.98 ) }
    dend_25 { pt3dadd( 21.0384, -177.374, -6.88064, 1.12 ) }
    dend_25 { pt3dadd( 20.3862, -177.946, -6.12879, 1.4 ) }
    dend_25 { pt3dadd( 20.0316, -178.274, -5.73574, 1.26 ) }
    dend_25 { pt3dadd( 19.3473, -178.928, -5.03417, 1.12 ) }
    dend_25 { pt3dadd( 18.9771, -179.293, -4.67947, 0.98 ) }
    dend_25 { pt3dadd( 18.3423, -179.956, -4.11951, 0.84 ) }
    dend_25 { pt3dadd( 18.0101, -180.322, -3.87055, 0.7 ) }
    dend_25 { pt3dadd( 17.6538, -180.771, -3.6295, 0.56 ) }
    dend_25 { pt3dadd( 17.3068, -181.242, -3.39681, 0.1 ) }
    dend_25 { pt3dadd( 17.094, -181.546, -3.27766, 0.1 ) }
    dend_25 { pt3dadd( 16.6695, -182.175, -3.05037, 0.1 ) }
    dend_25 { pt3dadd( 16.4497, -182.501, -2.98305, 0.1 ) }
    dend_25 { pt3dadd( 15.7488, -183.552, -2.8291, 0.14 ) }
    dend_25 { pt3dadd( 15.7488, -183.552, -2.8291, 0.28 ) }
    dend_25 { pt3dadd( 15.4188, -184.079, -2.93035, 0.28 ) }
    dend_25 { pt3dadd( 15.2379, -184.405, -3.04286, 0.14 ) }
    dend_25 { pt3dadd( 14.7953, -185.398, -3.51657, 0.1 ) }
    dend_25 { pt3dadd( 14.6885, -185.727, -3.69512, 0.1 ) }
    dend_25 { pt3dadd( 14.4876, -186.736, -4.27538, 0.14 ) }
    dend_25 { pt3dadd( 14.4671, -186.987, -4.39717, 0.56 ) }
    dend_25 { pt3dadd( 14.5049, -187.494, -4.63831, 0.42 ) }
    dend_25 { pt3dadd( 14.599, -187.994, -4.84898, 0.28 ) }
    dend_25 { pt3dadd( 14.7339, -188.512, -5.02383, 0.14 ) }
    dend_25 { pt3dadd( 14.8738, -189.031, -5.18246, 0.1 ) }
    dend_25 { pt3dadd( 15.0037, -189.564, -5.3132, 0.14 ) }
    dend_25 { pt3dadd( 15.2128, -190.69, -5.58815, 0.28 ) }
    dend_25 { pt3dadd( 15.2863, -191.23, -5.71861, 0.42 ) }
    dend_25 { pt3dadd( 15.3224, -191.617, -5.80744, 0.1 ) }
    dend_25 { pt3dadd( 15.3588, -192.223, -5.92874, 0.1 ) }
    dend_25 { pt3dadd( 15.3961, -192.847, -6.02351, 0.1 ) }
    dend_25 { pt3dadd( 15.4404, -193.463, -6.07516, 0.1 ) }
    dend_25 { pt3dadd( 15.4745, -193.742, -6.07516, 0.1 ) }
    dend_25 { pt3dadd( 15.5314, -194.015, -6.07516, 0.84 ) }
    dend_25 { pt3dadd( 15.7063, -194.551, -6.07516, 0.7 ) }
    dend_25 { pt3dadd( 15.9482, -195.125, -6.07516, 0.56 ) }
    dend_25 { pt3dadd( 16.1932, -195.629, -6.07516, 0.42 ) }
    dend_25 { pt3dadd( 16.48, -196.189, -6.07516, 0.28 ) }
    dend_25 { pt3dadd( 16.7397, -196.686, -6.07516, 0.14 ) }
    dend_25 { pt3dadd( 17.03, -197.245, -6.07516, 0.28 ) }
    dend_25 { pt3dadd( 17.155, -197.494, -6.07516, 0.28 ) }
    dend_25 { pt3dadd( 17.3923, -198.005, -6.07516, 0.14 ) }
    dend_25 { pt3dadd( 17.6137, -198.509, -6.07516, 0.1 ) }
    dend_25 { pt3dadd( 17.8506, -199.101, -6.07516, 0.1 ) }
    dend_25 { pt3dadd( 18.0456, -199.616, -6.07516, 0.1 ) }
    dend_25 { pt3dadd( 18.2307, -200.145, -6.07516, 0.14 ) }
    dend_25 { pt3dadd( 18.411, -200.677, -6.1143, 0.28 ) }
    dend_25 { pt3dadd( 18.5826, -201.206, -6.18519, 0.28 ) }
    dend_25 { pt3dadd( 18.7457, -201.736, -6.28075, 0.14 ) }
    dend_25 { pt3dadd( 18.8941, -202.254, -6.39417, 0.1 ) }
    dend_25 { pt3dadd( 19.0359, -202.783, -6.52711, 0.1 ) }
    dend_25 { pt3dadd( 19.2835, -203.863, -6.81941, 0.14 ) }
    dend_25 { pt3dadd( 19.3864, -204.395, -6.96451, 0.28 ) }
    dend_25 { pt3dadd( 19.4749, -204.934, -7.10232, 0.42 ) }
    dend_25 { pt3dadd( 19.4749, -204.934, -7.10232, 0.56 ) }
    dend_25 { pt3dadd( 19.5264, -205.315, -7.16277, 0.56 ) }
    dend_25 { pt3dadd( 19.6116, -205.939, -7.21472, 0.56 ) }
    dend_25 { pt3dadd( 19.6954, -206.496, -7.21472, 0.56 ) }
    dend_25 { pt3dadd( 19.7904, -207.048, -7.21472, 0.7 ) }
    dend_25 { pt3dadd( 19.9102, -207.588, -7.21472, 0.56 ) }
    dend_25 { pt3dadd( 20.0552, -208.13, -7.21472, 0.42 ) }
    dend_25 { pt3dadd( 20.2347, -208.661, -7.21472, 0.56 ) }
    dend_25 { pt3dadd( 20.4384, -209.186, -7.21472, 0.42 ) }
    dend_25 { pt3dadd( 20.6498, -209.705, -7.21472, 0.28 ) }
    dend_25 { pt3dadd( 20.8944, -210.284, -7.25607, 0.14 ) }
    dend_25 { pt3dadd( 21.1166, -210.794, -7.32378, 0.1 ) }
    dend_25 { pt3dadd( 21.3562, -211.358, -7.43147, 0.1 ) }
    dend_25 { pt3dadd( 21.5497, -211.872, -7.55576, 0.1 ) }
    dend_25 { pt3dadd( 21.7129, -212.389, -7.6999, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_25 { pt3dadd( 21.9273, -213.362, -7.9844, 0.1 ) }
    dend_25 { pt3dadd( 21.9273, -213.362, -7.9844, 0.1 ) }
    dend_25 { pt3dadd( 21.9414, -213.759, -8.00951, 0.1 ) }
    dend_25 { pt3dadd( 21.9227, -214.39, -7.98027, 0.1 ) }
    dend_25 { pt3dadd( 21.901, -214.938, -7.90745, 0.1 ) }
    dend_25 { pt3dadd( 21.873, -215.557, -7.78698, 0.1 ) }
    dend_25 { pt3dadd( 21.8118, -216.705, -7.5104, 0.14 ) }
    dend_25 { pt3dadd( 21.7804, -217.241, -7.39016, 0.1 ) }
    dend_25 { pt3dadd( 21.7408, -217.857, -7.26482, 0.14 ) }
    dend_25 { pt3dadd( 21.6937, -218.408, -7.16989, 0.1 ) }
    dend_25 { pt3dadd( 21.6297, -219.019, -7.08925, 0.14 ) }
    dend_25 { pt3dadd( 21.5917, -219.414, -7.05984, 0.28 ) }
    dend_25 { pt3dadd( 21.5268, -220.032, -7.05984, 0.14 ) }
    dend_25 { pt3dadd( 21.4606, -220.659, -7.05984, 0.1 ) }
    dend_25 { pt3dadd( 21.4129, -221.288, -7.05984, 0.14 ) }
    dend_25 { pt3dadd( 21.391, -221.568, -7.03721, 0.28 ) }
    dend_25 { pt3dadd( 21.3534, -222.112, -6.95743, 0.42 ) }
    dend_25 { pt3dadd( 21.3245, -222.502, -6.88163, 0.1 ) }
    dend_25 { pt3dadd( 21.2736, -223.046, -6.75661, 0.1 ) }
    dend_25 { pt3dadd( 21.22, -223.59, -6.62168, 0.1 ) }
    dend_25 { pt3dadd( 21.0961, -224.817, -6.30819, 0.14 ) }
    dend_25 { pt3dadd( 21.0348, -225.406, -6.11848, 0.1 ) }
    dend_25 { pt3dadd( 21.0017, -225.778, -5.98081, 0.14 ) }
    dend_25 { pt3dadd( 20.9746, -226.366, -5.752, 0.28 ) }
    dend_25 { pt3dadd( 20.9718, -226.883, -5.55326, 0.42 ) }
    dend_25 { pt3dadd( 20.9946, -227.148, -5.46112, 0.56 ) }
    dend_25 { pt3dadd( 21.1754, -228.136, -5.19607, 0.56 ) }
    dend_25 { pt3dadd( 21.302, -228.667, -5.06013, 0.42 ) }
    dend_25 { pt3dadd( 21.4351, -229.199, -4.94142, 0.28 ) }
    dend_25 { pt3dadd( 21.5581, -229.74, -4.8439, 0.14 ) }
    dend_25 { pt3dadd( 21.6755, -230.346, -4.76734, 0.1 ) }
    dend_25 { pt3dadd( 21.7798, -230.958, -4.7253, 0.1 ) }
    dend_25 { pt3dadd( 21.864, -231.514, -4.68873, 0.1 ) }
    dend_25 { pt3dadd( 21.9478, -232.134, -4.6097, 0.1 ) }
    dend_25 { pt3dadd( 22.025, -232.74, -4.50089, 0.1 ) }
    dend_25 { pt3dadd( 22.0822, -233.273, -4.3387, 0.1 ) }
    dend_25 { pt3dadd( 22.1087, -233.534, -4.23549, 0.1 ) }
    dend_25 { pt3dadd( 22.2133, -234.475, -3.80813, 0.1 ) }
    dend_25 { pt3dadd( 22.2609, -234.98, -3.56899, 0.14 ) }
    dend_25 { pt3dadd( 22.3002, -235.49, -3.33347, 0.1 ) }
    dend_25 { pt3dadd( 22.3449, -236.575, -2.87982, 0.14 ) }
    dend_25 { pt3dadd( 22.3473, -237.105, -2.68906, 0.1 ) }
    dend_25 { pt3dadd( 22.3291, -237.714, -2.52108, 0.1 ) }
    dend_25 { pt3dadd( 22.2884, -238.329, -2.45607, 0.1 ) }
    dend_25 { pt3dadd( 22.2241, -238.957, -2.45511, 0.1 ) }
    dend_25 { pt3dadd( 22.1557, -239.57, -2.51779, 0.1 ) }
    dend_25 { pt3dadd( 22.1258, -239.842, -2.57273, 0.1 ) }
    dend_25 { pt3dadd( 22.0498, -240.452, -2.70951, 0.1 ) }
    dend_25 { pt3dadd( 21.9074, -241.59, -2.97593, 0.14 ) }
    dend_25 { pt3dadd( 21.8284, -242.199, -3.115, 0.1 ) }
    dend_25 { pt3dadd( 21.7622, -242.75, -3.1931, 0.14 ) }
    dend_25 { pt3dadd( 21.7009, -243.366, -3.22364, 0.1 ) }
    dend_25 { pt3dadd( 21.6727, -243.763, -3.20706, 0.1 ) }
    dend_25 { pt3dadd( 21.6468, -244.378, -3.12263, 0.1 ) }
    dend_25 { pt3dadd( 21.6267, -244.992, -2.98206, 0.1 ) }
    dend_25 { pt3dadd( 21.6075, -246.121, -2.78618, 0.14 ) }
    dend_25 { pt3dadd( 21.5858, -246.68, -2.72334, 0.28 ) }
    dend_25 { pt3dadd( 21.5557, -247.23, -2.69705, 0.42 ) }
    dend_25 { pt3dadd( 21.4918, -247.856, -2.7137, 0.56 ) }
    dend_25 { pt3dadd( 21.4233, -248.246, -2.78947, 0.42 ) }
    dend_25 { pt3dadd( 21.1807, -249.302, -3.15348, 0.28 ) }
    dend_25 { pt3dadd( 21.0376, -249.86, -3.40785, 0.42 ) }
    dend_25 { pt3dadd( 20.9447, -250.203, -3.56753, 0.28 ) }
    dend_25 { pt3dadd( 20.7685, -250.916, -3.88659, 0.14 ) }
    dend_25 { pt3dadd( 20.5959, -251.872, -4.34243, 0.1 ) }
    dend_25 { pt3dadd( 20.5293, -252.377, -4.57648, 0.1 ) }
    dend_25 { pt3dadd( 20.4893, -252.897, -4.7899, 0.1 ) }
    dend_25 { pt3dadd( 20.4935, -253.482, -5.0275, 0.1 ) }
    dend_25 { pt3dadd( 20.5204, -254.01, -5.19007, 0.1 ) }
    dend_25 { pt3dadd( 20.6059, -255.134, -5.39967, 0.1 ) }
    dend_25 { pt3dadd( 20.6283, -255.531, -5.41921, 0.1 ) }
    dend_25 { pt3dadd( 20.647, -256.091, -5.41499, 0.1 ) }
    dend_25 { pt3dadd( 20.652, -256.644, -5.38059, 0.1 ) }
    dend_25 { pt3dadd( 20.6618, -257.819, -5.24713, 0.1 ) }
    dend_25 { pt3dadd( 20.6519, -258.441, -5.14629, 0.1 ) }
    dend_25 { pt3dadd( 20.6405, -259.049, -5.01947, 0.1 ) }
    dend_25 { pt3dadd( 20.6305, -259.604, -4.92169, 0.1 ) }
    dend_25 { pt3dadd( 20.6058, -260.229, -4.8392, 0.1 ) }
    dend_25 { pt3dadd( 20.5757, -260.781, -4.79908, 0.1 ) }
    dend_25 { pt3dadd( 20.5517, -261.178, -4.79908, 0.1 ) }
    dend_25 { pt3dadd( 20.5061, -261.735, -4.83816, 0.1 ) }
    dend_25 { pt3dadd( 20.4376, -262.346, -4.91765, 0.1 ) }
    dend_25 { pt3dadd( 20.3574, -262.963, -5.02577, 0.1 ) }
    dend_25 { pt3dadd( 20.2751, -263.565, -5.14962, 0.1 ) }
    dend_25 { pt3dadd( 20.1838, -264.175, -5.28385, 0.1 ) }
    dend_25 { pt3dadd( 20.0218, -265.213, -5.5182, 0.1 ) }
    dend_25 { pt3dadd( 19.9171, -265.812, -5.65121, 0.1 ) }
    dend_25 { pt3dadd( 19.8227, -266.346, -5.79979, 0.1 ) }
    dend_25 { pt3dadd( 19.7121, -266.94, -5.98367, 0.1 ) }
    dend_25 { pt3dadd( 19.6004, -267.508, -6.20574, 0.14 ) }
    dend_25 { pt3dadd( 19.517, -267.866, -6.35983, 0.28 ) }
    dend_25 { pt3dadd( 19.3713, -268.423, -6.595, 0.14 ) }
    dend_25 { pt3dadd( 19.0744, -269.456, -7.08535, 0.14 ) }
    dend_25 { pt3dadd( 18.9673, -269.79, -7.25446, 0.28 ) }
    dend_25 { pt3dadd( 18.6368, -270.803, -7.76871, 0.14 ) }
    dend_25 { pt3dadd( 18.4627, -271.344, -8.02311, 0.1 ) }
    dend_25 { pt3dadd( 18.3057, -271.895, -8.284, 0.14 ) }
    dend_25 { pt3dadd( 18.2357, -272.142, -8.39299, 0.28 ) }
    dend_25 { pt3dadd( 18.1383, -272.5, -8.51244, 0.1 ) }
    dend_25 { pt3dadd( 17.9955, -273.088, -8.68745, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_25 { pt3dadd( 17.8693, -273.695, -8.80278, 0.1 ) }
    dend_25 { pt3dadd( 17.7199, -274.795, -9.07302, 0.14 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 2/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 24.6919, -98.6973, 4.4205, 0.84 ) }
    dend_23 { pt3dadd( 24.6389, -99.1937, 3.46685, 0.84 ) }
    dend_23 { pt3dadd( 24.5809, -99.7366, 2.42361, 0.98 ) }
    dend_23 { pt3dadd( 24.5297, -100.216, 1.50317, 0.84 ) }
    dend_23 { pt3dadd( 24.4715, -100.761, 0.456178, 0.7 ) }
    dend_23 { pt3dadd( 24.4578, -100.89, 0.20906, 0.84 ) }
    dend_23 { pt3dadd( 24.4578, -100.89, 0.20906, 0.98 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 9/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 24.6919, -98.6973, 4.4205, 0.56 ) }
    dend_20 { pt3dadd( 24.831, -98.8823, 4.26015, 0.56 ) }
    dend_20 { pt3dadd( 25.451, -99.6694, 3.64039, 0.7 ) }
    dend_20 { pt3dadd( 25.7804, -100.072, 3.29713, 0.56 ) }
    dend_20 { pt3dadd( 26.0769, -100.436, 2.98622, 0.42 ) }
    dend_20 { pt3dadd( 26.7101, -101.198, 2.34853, 0.28 ) }
    dend_20 { pt3dadd( 26.9308, -101.455, 2.13945, 0.14 ) }
    dend_20 { pt3dadd( 27.2982, -101.838, 1.79938, 0.1 ) }
    dend_20 { pt3dadd( 28.0317, -102.523, 1.17538, 0.1 ) }
    dend_20 { pt3dadd( 28.2053, -102.669, 1.01327, 0.14 ) }
    dend_20 { pt3dadd( 28.4598, -102.867, 0.779508, 0.28 ) }
    dend_20 { pt3dadd( 28.7225, -103.069, 0.558318, 0.14 ) }
    dend_20 { pt3dadd( 29.5038, -103.681, -0.0734608, 0.1 ) }
    dend_20 { pt3dadd( 29.7749, -103.898, -0.278366, 0.14 ) }
    dend_20 { pt3dadd( 30.5738, -104.589, -0.800534, 0.28 ) }
    dend_20 { pt3dadd( 30.9821, -104.985, -1.05299, 0.14 ) }
    dend_20 { pt3dadd( 31.3678, -105.432, -1.27188, 0.1 ) }
    dend_20 { pt3dadd( 31.7066, -105.929, -1.43435, 0.1 ) }
    dend_20 { pt3dadd( 31.8355, -106.173, -1.49377, 0.28 ) }
    dend_20 { pt3dadd( 32.0538, -106.675, -1.61341, 0.14 ) }
    dend_20 { pt3dadd( 32.2354, -107.197, -1.71904, 0.1 ) }
    dend_20 { pt3dadd( 32.3773, -107.711, -1.89169, 0.14 ) }
    dend_20 { pt3dadd( 32.5054, -108.269, -2.13061, 0.1 ) }
    dend_20 { pt3dadd( 32.6937, -109.153, -2.64001, 0.1 ) }
    dend_20 { pt3dadd( 32.745, -109.385, -2.79163, 0.1 ) }
    dend_20 { pt3dadd( 32.8507, -109.839, -3.10769, 0.14 ) }
    dend_20 { pt3dadd( 33.0786, -110.763, -3.74719, 0.1 ) }
    dend_20 { pt3dadd( 33.196, -111.208, -4.04934, 0.1 ) }
    dend_20 { pt3dadd( 33.4389, -112.124, -4.69679, 0.14 ) }
    dend_20 { pt3dadd( 33.5269, -112.541, -5.06124, 0.28 ) }
    dend_20 { pt3dadd( 33.5824, -112.896, -5.4948, 0.42 ) }
    dend_20 { pt3dadd( 33.6124, -113.198, -5.96565, 0.56 ) }
    dend_20 { pt3dadd( 33.6124, -113.198, -5.96565, 0.56 ) }
    dend_20 { pt3dadd( 33.6327, -113.629, -6.90986, 0.56 ) }
    dend_20 { pt3dadd( 33.7151, -114.424, -8.7862, 0.42 ) }
    dend_20 { pt3dadd( 33.7989, -114.796, -9.75235, 0.56 ) }
    dend_20 { pt3dadd( 33.7989, -114.796, -9.75235, 0.56 ) }
    dend_20 { pt3dadd( 33.8528, -114.908, -10.0055, 0.28 ) }
    dend_20 { pt3dadd( 34.1875, -115.47, -10.985, 0.42 ) }
    dend_20 { pt3dadd( 34.4586, -115.855, -11.3927, 0.28 ) }
    dend_20 { pt3dadd( 35.0679, -116.641, -11.8049, 0.14 ) }
    dend_20 { pt3dadd( 35.4408, -117.117, -11.9539, 0.1 ) }
    dend_20 { pt3dadd( 35.7799, -117.558, -12.0413, 0.14 ) }
    dend_20 { pt3dadd( 36.4698, -118.503, -12.1805, 0.1 ) }
    dend_20 { pt3dadd( 36.7748, -118.973, -12.1986, 0.1 ) }
    dend_20 { pt3dadd( 36.9751, -119.312, -12.2589, 0.1 ) }
    dend_20 { pt3dadd( 36.9751, -119.312, -12.2589, 0.1 ) }
    dend_20 { pt3dadd( 37.0889, -119.547, -12.364, 0.1 ) }
    dend_20 { pt3dadd( 37.5119, -120.482, -12.8754, 0.1 ) }
    dend_20 { pt3dadd( 37.7014, -120.938, -13.1454, 0.14 ) }
    dend_20 { pt3dadd( 38.0758, -121.952, -13.6141, 0.28 ) }
    dend_20 { pt3dadd( 38.2405, -122.462, -13.777, 0.42 ) }
    dend_20 { pt3dadd( 38.3998, -122.994, -13.8739, 0.56 ) }
    dend_20 { pt3dadd( 38.55, -123.533, -13.8995, 0.42 ) }
    dend_20 { pt3dadd( 38.6867, -124.067, -13.8437, 0.28 ) }
    dend_20 { pt3dadd( 38.9541, -125.202, -13.6444, 0.42 ) }
    dend_20 { pt3dadd( 39.07, -125.737, -13.5144, 0.56 ) }
    dend_20 { pt3dadd( 39.1887, -126.272, -13.3945, 0.42 ) }
    dend_20 { pt3dadd( 39.2511, -126.541, -13.3431, 0.42 ) }
    dend_20 { pt3dadd( 39.3813, -127.071, -13.2686, 0.56 ) }
    dend_20 { pt3dadd( 39.5248, -127.614, -13.2272, 0.42 ) }
    dend_20 { pt3dadd( 39.6792, -128.153, -13.2272, 0.28 ) }
    dend_20 { pt3dadd( 39.8445, -128.69, -13.1876, 0.14 ) }
    dend_20 { pt3dadd( 40.0171, -129.218, -13.1158, 0.28 ) }
    dend_20 { pt3dadd( 40.2058, -129.737, -13.0183, 0.42 ) }
    dend_20 { pt3dadd( 40.4158, -130.236, -12.9011, 0.42 ) }
    dend_20 { pt3dadd( 40.6473, -130.729, -12.7696, 0.28 ) }
    dend_20 { pt3dadd( 41.137, -131.652, -12.5098, 0.14 ) }
    dend_20 { pt3dadd( 41.2798, -131.89, -12.4653, 0.84 ) }
    dend_20 { pt3dadd( 41.615, -132.413, -12.4226, 0.7 ) }
    dend_20 { pt3dadd( 41.9726, -132.932, -12.4337, 0.56 ) }
    dend_20 { pt3dadd( 42.2971, -133.378, -12.4887, 0.42 ) }
    dend_20 { pt3dadd( 42.6674, -133.867, -12.5941, 0.28 ) }
    dend_20 { pt3dadd( 43.37, -134.784, -12.86, 0.14 ) }
    dend_20 { pt3dadd( 43.6919, -135.204, -13.0134, 0.1 ) }
    dend_20 { pt3dadd( 43.9209, -135.51, -13.1417, 0.1 ) }
    dend_20 { pt3dadd( 44.2585, -135.988, -13.3556, 0.1 ) }
    dend_20 { pt3dadd( 44.5796, -136.477, -13.5705, 0.1 ) }
    dend_20 { pt3dadd( 44.8547, -136.988, -13.814, 0.1 ) }
    dend_20 { pt3dadd( 45.2712, -137.96, -14.2571, 0.1 ) }
    dend_20 { pt3dadd( 45.3548, -138.201, -14.375, 0.14 ) }
    dend_20 { pt3dadd( 45.4374, -138.545, -14.5388, 0.1 ) }
    dend_20 { pt3dadd( 45.52, -139.051, -14.7654, 0.1 ) }
    dend_20 { pt3dadd( 45.6453, -140.114, -15.267, 0.14 ) }
    dend_20 { pt3dadd( 45.6958, -140.62, -15.5011, 0.1 ) }
    dend_20 { pt3dadd( 45.754, -141.127, -15.7086, 0.1 ) }
    dend_20 { pt3dadd( 45.8356, -141.706, -15.9415, 0.14 ) }
    dend_20 { pt3dadd( 45.9254, -142.211, -16.1687, 0.1 ) }
    dend_20 { pt3dadd( 46.1329, -143.258, -16.59, 0.1 ) }
    dend_20 { pt3dadd( 46.1962, -143.51, -16.6693, 0.56 ) }
    dend_20 { pt3dadd( 46.3544, -144.027, -16.8181, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_20 { pt3dadd( 46.5522, -144.537, -16.9401, 0.42 ) }
    dend_20 { pt3dadd( 47.009, -145.574, -17.121, 0.56 ) }
    dend_20 { pt3dadd( 47.4403, -146.516, -17.1998, 0.56 ) }
    dend_20 { pt3dadd( 47.6879, -147.086, -17.2381, 0.42 ) }
    dend_20 { pt3dadd( 47.9197, -147.66, -17.3084, 0.28 ) }
    dend_20 { pt3dadd( 48.1368, -148.244, -17.403, 0.14 ) }
    dend_20 { pt3dadd( 48.2609, -148.613, -17.5055, 0.1 ) }
    dend_20 { pt3dadd( 48.4125, -149.123, -17.6912, 0.1 ) }
    dend_20 { pt3dadd( 48.6837, -150.154, -18.1905, 0.1 ) }
    dend_20 { pt3dadd( 48.7805, -150.64, -18.4596, 0.1 ) }
    dend_20 { pt3dadd( 48.8485, -151.109, -18.7577, 0.1 ) }
    dend_20 { pt3dadd( 48.9457, -151.948, -19.3634, 0.1 ) }
    dend_20 { pt3dadd( 48.9457, -151.948, -19.3634, 0.14 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.56201, -147.646, -41.4043, 0.84 ) }
    dend_13 { pt3dadd( -2.93391, -148.1, -40.655, 0.84 ) }
    dend_13 { pt3dadd( -2.70701, -148.264, -40.3844, 0.7 ) }
    dend_13 { pt3dadd( -2.01858, -148.762, -39.5631, 0.56 ) }
    dend_13 { pt3dadd( -1.79169, -148.927, -39.2925, 0.42 ) }
    dend_13 { pt3dadd( -1.55968, -149.095, -39.0157, 0.28 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 19/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.56201, -147.646, -41.4043, 0.56 ) }
    dend_10 { pt3dadd( -3.55352, -148.021, -41.2724, 0.56 ) }
    dend_10 { pt3dadd( -3.54619, -148.552, -41.0934, 0.42 ) }
    dend_10 { pt3dadd( -3.5303, -149.144, -40.9105, 0.28 ) }
    dend_10 { pt3dadd( -3.50475, -149.684, -40.7602, 0.14 ) }
    dend_10 { pt3dadd( -3.42631, -150.828, -40.4741, 0.1 ) }
    dend_10 { pt3dadd( -3.37765, -151.372, -40.352, 0.1 ) }
    dend_10 { pt3dadd( -3.3018, -151.975, -40.2292, 0.1 ) }
    dend_10 { pt3dadd( -3.22873, -152.523, -40.1346, 0.1 ) }
    dend_10 { pt3dadd( -3.15371, -153.076, -40.0638, 0.1 ) }
    dend_10 { pt3dadd( -3.0815, -153.631, -40.0237, 0.14 ) }
    dend_10 { pt3dadd( -3.01473, -154.19, -40.0237, 0.1 ) }
    dend_10 { pt3dadd( -2.95828, -154.738, -40.0237, 0.1 ) }
    dend_10 { pt3dadd( -2.89513, -155.364, -40.0237, 0.1 ) }
    dend_10 { pt3dadd( -2.85131, -155.985, -40.0237, 0.1 ) }
    dend_10 { pt3dadd( -2.84138, -156.266, -40.0237, 0.1 ) }
    dend_10 { pt3dadd( -2.82851, -156.897, -40.0237, 0.1 ) }
    dend_10 { pt3dadd( -2.81524, -157.459, -40.0644, 0.14 ) }
    dend_10 { pt3dadd( -2.78958, -158.014, -40.1375, 0.28 ) }
    dend_10 { pt3dadd( -2.73739, -158.622, -40.2453, 0.42 ) }
    dend_10 { pt3dadd( -2.66383, -159.236, -40.3724, 0.28 ) }
    dend_10 { pt3dadd( -2.59632, -159.773, -40.4908, 0.14 ) }
    dend_10 { pt3dadd( -2.44048, -160.879, -40.7491, 0.1 ) }
    dend_10 { pt3dadd( -2.35991, -161.429, -40.8415, 0.1 ) }
    dend_10 { pt3dadd( -2.26881, -161.979, -40.8924, 0.1 ) }
    dend_10 { pt3dadd( -2.16388, -162.529, -40.9287, 0.1 ) }
    dend_10 { pt3dadd( -2.03879, -163.136, -40.9352, 0.1 ) }
    dend_10 { pt3dadd( -1.98588, -163.411, -40.9078, 0.1 ) }
    dend_10 { pt3dadd( -1.79197, -164.495, -40.5895, 0.1 ) }
    dend_10 { pt3dadd( -1.70642, -165.015, -40.3916, 0.14 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 49/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -23.3868, 142.853, 6.31978, 0.42 ) }
    dend_74 { pt3dadd( -22.9271, 143.766, 6.91509, 0.42 ) }
    dend_74 { pt3dadd( -22.7693, 144.074, 7.09387, 0.28 ) }
    dend_74 { pt3dadd( -22.42, 144.711, 7.41893, 0.14 ) }
    dend_74 { pt3dadd( -21.9217, 145.585, 7.79342, 0.1 ) }
    dend_74 { pt3dadd( -21.5426, 146.237, 8.0365, 0.1 ) }
    dend_74 { pt3dadd( -21.3441, 146.566, 8.14357, 0.1 ) }
    dend_74 { pt3dadd( -21.1268, 146.892, 8.21346, 0.14 ) }
    dend_74 { pt3dadd( -20.7774, 147.399, 8.30599, 0.28 ) }
    dend_74 { pt3dadd( -20.3171, 148.04, 8.3824, 0.14 ) }
    dend_74 { pt3dadd( -20.0759, 148.357, 8.3824, 0.1 ) }
    dend_74 { pt3dadd( -19.6843, 148.839, 8.43283, 0.14 ) }
    dend_74 { pt3dadd( -19.5021, 149.046, 8.48703, 0.28 ) }
    dend_74 { pt3dadd( -19.0917, 149.476, 8.67397, 0.56 ) }
    dend_74 { pt3dadd( -19.0917, 149.476, 8.67397, 0.42 ) }
    dend_74 { pt3dadd( -18.9034, 149.653, 8.77901, 0.56 ) }
    dend_74 { pt3dadd( -18.1696, 150.355, 9.13651, 0.56 ) }
    dend_74 { pt3dadd( -17.7421, 150.774, 9.30829, 0.42 ) }
    dend_74 { pt3dadd( -17.3072, 151.186, 9.50282, 0.28 ) }
    dend_74 { pt3dadd( -16.8632, 151.578, 9.69451, 0.14 ) }
    dend_74 { pt3dadd( -16.571, 151.821, 9.81381, 0.1 ) }
    dend_74 { pt3dadd( -16.1057, 152.209, 9.98798, 0.1 ) }
    dend_74 { pt3dadd( -15.636, 152.593, 10.1301, 0.1 ) }
    dend_74 { pt3dadd( -14.7834, 153.301, 10.4088, 0.14 ) }
    dend_74 { pt3dadd( -14.378, 153.646, 10.5844, 0.28 ) }
    dend_74 { pt3dadd( -14.1846, 153.825, 10.6835, 0.42 ) }
    dend_74 { pt3dadd( -13.7597, 154.232, 10.9128, 0.56 ) }
    dend_74 { pt3dadd( -13.3532, 154.643, 11.1456, 0.42 ) }
    dend_74 { pt3dadd( -13.1032, 154.917, 11.2902, 0.56 ) }
    dend_74 { pt3dadd( -12.4024, 155.792, 11.6509, 0.42 ) }
    dend_74 { pt3dadd( -12.0587, 156.263, 11.8665, 0.28 ) }
    dend_74 { pt3dadd( -11.7599, 156.677, 12.0816, 0.14 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -23.3868, 142.853, 6.31978, 0.98 ) }
    dend_73 { pt3dadd( -23.6978, 143.932, 6.5484, 0.98 ) }
    dend_73 { pt3dadd( -23.8516, 144.467, 6.63503, 0.84 ) }
    dend_73 { pt3dadd( -23.9881, 145.011, 6.63497, 0.7 ) }
    dend_73 { pt3dadd( -24.1138, 145.548, 6.58958, 0.56 ) }
    dend_73 { pt3dadd( -24.2371, 146.091, 6.52216, 0.42 ) }
    dend_73 { pt3dadd( -24.3601, 146.635, 6.44531, 0.28 ) }
    dend_73 { pt3dadd( -24.4778, 147.169, 6.32382, 0.42 ) }
    dend_73 { pt3dadd( -24.7229, 148.291, 6.06204, 0.28 ) }
    dend_73 { pt3dadd( -24.8413, 148.828, 5.93999, 0.14 ) }
    dend_73 { pt3dadd( -24.9705, 149.353, 5.79195, 0.1 ) }
    dend_73 { pt3dadd( -25.1126, 149.873, 5.63023, 0.1 ) }
    dend_73 { pt3dadd( -25.2667, 150.387, 5.46926, 0.1 ) }
    dend_73 { pt3dadd( -25.4358, 150.903, 5.32042, 0.1 ) }
    dend_73 { pt3dadd( -25.6096, 151.418, 5.23145, 0.1 ) }
    dend_73 { pt3dadd( -25.9704, 152.536, 5.09332, 0.1 ) }
    dend_73 { pt3dadd( -26.125, 153.066, 5.05114, 0.1 ) }
    dend_73 { pt3dadd( -26.2735, 153.605, 5.08209, 0.1 ) }
    dend_73 { pt3dadd( -26.4109, 154.14, 5.19443, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_73 { pt3dadd( -26.672, 155.125, 5.54106, 0.1 ) }
    dend_73 { pt3dadd( -26.8067, 155.619, 5.76905, 0.1 ) }
    dend_73 { pt3dadd( -26.8727, 155.857, 5.89691, 0.1 ) }
    dend_73 { pt3dadd( -27.177, 156.863, 6.42941, 0.1 ) }
    dend_73 { pt3dadd( -27.3334, 157.341, 6.68457, 0.1 ) }
    dend_73 { pt3dadd( -27.529, 157.871, 6.9464, 0.1 ) }
    dend_73 { pt3dadd( -27.7422, 158.361, 7.12459, 0.1 ) }
    dend_73 { pt3dadd( -27.9695, 158.845, 7.29249, 0.1 ) }
    dend_73 { pt3dadd( -27.9695, 158.845, 7.29249, 0.14 ) }
    // Section: dend_71, id: dend_71, parent: dend_65 (entry count 9/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -21.019, 79.6992, -9.77369, 0.28 ) }
    dend_71 { pt3dadd( -21.0867, 80.3756, -8.84899, 0.28 ) }
    dend_71 { pt3dadd( -21.1115, 81.0942, -8.0991, 0.42 ) }
    dend_71 { pt3dadd( -21.1115, 81.0942, -8.0991, 0.56 ) }
    dend_71 { pt3dadd( -21.1419, 82.0456, -7.4688, 0.28 ) }
    dend_71 { pt3dadd( -21.1685, 82.6152, -7.20161, 0.28 ) }
    dend_71 { pt3dadd( -21.2079, 83.2061, -7.01225, 0.14 ) }
    dend_71 { pt3dadd( -21.2478, 83.834, -7.03612, 0.1 ) }
    dend_71 { pt3dadd( -21.2897, 84.3778, -7.16533, 0.1 ) }
    dend_71 { pt3dadd( -21.3397, 84.9085, -7.34706, 0.1 ) }
    dend_71 { pt3dadd( -21.46, 85.9142, -7.87383, 0.1 ) }
    dend_71 { pt3dadd( -21.5325, 86.3847, -8.16957, 0.1 ) }
    dend_71 { pt3dadd( -21.7139, 87.3694, -8.79717, 0.1 ) }
    dend_71 { pt3dadd( -21.8017, 87.8429, -9.08396, 0.1 ) }
    dend_71 { pt3dadd( -21.8389, 88.0906, -9.21258, 0.14 ) }
    dend_71 { pt3dadd( -21.9457, 89.1578, -9.60381, 0.1 ) }
    dend_71 { pt3dadd( -21.9457, 89.1578, -9.60381, 0.1 ) }
    dend_71 { pt3dadd( -21.9443, 90.304, -9.6631, 0.1 ) }
    dend_71 { pt3dadd( -21.9306, 90.9335, -9.61464, 0.1 ) }
    dend_71 { pt3dadd( -21.9066, 91.5493, -9.5478, 0.1 ) }
    dend_71 { pt3dadd( -21.874, 92.1745, -9.46507, 0.1 ) }
    dend_71 { pt3dadd( -21.8457, 92.7862, -9.36928, 0.14 ) }
    dend_71 { pt3dadd( -21.8415, 93.0572, -9.34568, 0.28 ) }
    dend_71 { pt3dadd( -21.8432, 93.6108, -9.34568, 0.28 ) }
    dend_71 { pt3dadd( -21.8713, 94.1705, -9.34568, 0.14 ) }
    dend_71 { pt3dadd( -21.9305, 94.7974, -9.34568, 0.1 ) }
    dend_71 { pt3dadd( -21.9909, 95.3528, -9.39082, 0.1 ) }
    dend_71 { pt3dadd( -22.0556, 95.8975, -9.46592, 0.1 ) }
    dend_71 { pt3dadd( -22.1316, 96.5154, -9.57188, 0.1 ) }
    dend_71 { pt3dadd( -22.2018, 97.063, -9.68294, 0.14 ) }
    dend_71 { pt3dadd( -22.2797, 97.6048, -9.80349, 0.28 ) }
    dend_71 { pt3dadd( -22.4533, 98.7542, -9.99087, 0.42 ) }
    dend_71 { pt3dadd( -22.5361, 99.3086, -10.046, 0.28 ) }
    dend_71 { pt3dadd( -22.6237, 99.8618, -10.0645, 0.14 ) }
    dend_71 { pt3dadd( -22.7225, 100.416, -10.0458, 0.1 ) }
    dend_71 { pt3dadd( -22.8123, 100.956, -9.99174, 0.14 ) }
    dend_71 { pt3dadd( -23.0034, 102.117, -9.88325, 0.1 ) }
    dend_71 { pt3dadd( -23.097, 102.669, -9.8553, 0.1 ) }
    dend_71 { pt3dadd( -23.1838, 103.224, -9.8937, 0.1 ) }
    dend_71 { pt3dadd( -23.2656, 103.766, -10.0125, 0.1 ) }
    dend_71 { pt3dadd( -23.3557, 104.34, -10.2289, 0.1 ) }
    dend_71 { pt3dadd( -23.5325, 105.347, -10.7462, 0.1 ) }
    dend_71 { pt3dadd( -23.7044, 106.187, -11.2611, 0.14 ) }
    dend_71 { pt3dadd( -23.7044, 106.187, -11.2611, 0.28 ) }
    dend_71 { pt3dadd( -23.8264, 106.706, -11.4351, 0.7 ) }
    dend_71 { pt3dadd( -23.9681, 107.247, -11.4993, 0.56 ) }
    dend_71 { pt3dadd( -24.1193, 107.775, -11.4592, 0.42 ) }
    dend_71 { pt3dadd( -24.2715, 108.306, -11.3483, 0.28 ) }
    dend_71 { pt3dadd( -24.5788, 109.378, -11.0817, 0.14 ) }
    dend_71 { pt3dadd( -24.7304, 109.906, -10.9595, 0.28 ) }
    dend_71 { pt3dadd( -24.8818, 110.434, -10.8476, 0.14 ) }
    dend_71 { pt3dadd( -25.034, 110.965, -10.7525, 0.1 ) }
    dend_71 { pt3dadd( -25.1853, 111.493, -10.6825, 0.1 ) }
    dend_71 { pt3dadd( -25.3395, 112.03, -10.6435, 0.1 ) }
    dend_71 { pt3dadd( -25.5052, 112.567, -10.6827, 0.1 ) }
    dend_71 { pt3dadd( -25.6776, 113.096, -10.7537, 0.1 ) }
    dend_71 { pt3dadd( -25.8565, 113.621, -10.8493, 0.1 ) }
    dend_71 { pt3dadd( -26.0383, 114.139, -10.963, 0.1 ) }
    dend_71 { pt3dadd( -26.2214, 114.645, -11.0936, 0.14 ) }
    dend_71 { pt3dadd( -26.6166, 115.712, -11.4004, 0.28 ) }
    dend_71 { pt3dadd( -26.7899, 116.209, -11.5915, 0.42 ) }
    dend_71 { pt3dadd( -26.9481, 116.702, -11.814, 0.28 ) }
    dend_71 { pt3dadd( -27.0189, 116.945, -11.9305, 0.42 ) }
    dend_71 { pt3dadd( -27.0886, 117.189, -12.0469, 0.56 ) }
    dend_71 { pt3dadd( -27.2429, 117.699, -12.2189, 0.84 ) }
    dend_71 { pt3dadd( -27.6278, 118.806, -12.3733, 0.7 ) }
    dend_71 { pt3dadd( -27.8358, 119.315, -12.407, 0.56 ) }
    dend_71 { pt3dadd( -28.0709, 119.822, -12.3412, 0.56 ) }
    dend_71 { pt3dadd( -28.2376, 120.161, -12.2451, 0.42 ) }
    dend_71 { pt3dadd( -28.7164, 121.174, -11.8575, 0.28 ) }
    dend_71 { pt3dadd( -28.9565, 121.69, -11.6045, 0.14 ) }
    dend_71 { pt3dadd( -28.9565, 121.69, -11.6045, 0.14 ) }
    dend_71 { pt3dadd( -29.3282, 122.681, -11.1767, 0.1 ) }
    dend_71 { pt3dadd( -29.4813, 123.204, -11.0352, 0.1 ) }
    dend_71 { pt3dadd( -29.6012, 123.821, -10.9731, 0.1 ) }
    dend_71 { pt3dadd( -29.675, 124.379, -11.003, 0.1 ) }
    dend_71 { pt3dadd( -29.7235, 124.924, -11.0644, 0.1 ) }
    dend_71 { pt3dadd( -29.7895, 126.088, -11.258, 0.1 ) }
    dend_71 { pt3dadd( -29.802, 126.632, -11.3936, 0.1 ) }
    dend_71 { pt3dadd( -29.8121, 127.232, -11.5464, 0.14 ) }
    dend_71 { pt3dadd( -29.8304, 127.777, -11.677, 0.14 ) }
    dend_71 { pt3dadd( -29.8726, 128.394, -11.7977, 0.1 ) }
    dend_71 { pt3dadd( -29.9102, 128.671, -11.8293, 0.14 ) }
    dend_71 { pt3dadd( -29.9734, 128.944, -11.8605, 0.28 ) }
    dend_71 { pt3dadd( -30.1307, 129.534, -11.9823, 0.84 ) }
    dend_71 { pt3dadd( -30.2741, 130.061, -12.1194, 0.7 ) }
    dend_71 { pt3dadd( -30.4109, 130.647, -12.2811, 0.56 ) }
    dend_71 { pt3dadd( -30.5244, 131.168, -12.4293, 0.42 ) }
    dend_71 { pt3dadd( -30.7362, 132.255, -12.7238, 0.28 ) }
    dend_71 { pt3dadd( -30.8326, 132.861, -12.8757, 0.14 ) }
    dend_71 { pt3dadd( -30.9009, 133.461, -13.0157, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_71 { pt3dadd( -30.9482, 134.077, -13.1377, 0.1 ) }
    dend_71 { pt3dadd( -30.9482, 134.077, -13.1377, 0.14 ) }
    dend_71 { pt3dadd( -30.9536, 134.635, -13.1812, 0.1 ) }
    dend_71 { pt3dadd( -30.9459, 135.194, -13.2245, 0.1 ) }
    dend_71 { pt3dadd( -30.9416, 135.742, -13.3023, 0.1 ) }
    dend_71 { pt3dadd( -30.9559, 136.362, -13.4196, 0.1 ) }
    dend_71 { pt3dadd( -30.9872, 136.977, -13.5535, 0.1 ) }
    dend_71 { pt3dadd( -31.0424, 137.588, -13.652, 0.1 ) }
    dend_71 { pt3dadd( -31.1813, 138.649, -13.7683, 0.14 ) }
    dend_71 { pt3dadd( -31.2831, 139.202, -13.7972, 0.28 ) }
    dend_71 { pt3dadd( -31.4297, 139.808, -13.795, 0.42 ) }
    dend_71 { pt3dadd( -31.5993, 140.341, -13.7579, 0.28 ) }
    dend_71 { pt3dadd( -32.0129, 141.437, -13.6065, 0.14 ) }
    dend_71 { pt3dadd( -32.2177, 141.939, -13.5056, 0.1 ) }
    dend_71 { pt3dadd( -32.4173, 142.457, -13.4153, 0.1 ) }
    dend_71 { pt3dadd( -32.4173, 142.457, -13.4153, 0.1 ) }
    dend_71 { pt3dadd( -32.5623, 142.998, -13.4491, 0.1 ) }
    dend_71 { pt3dadd( -32.6907, 143.538, -13.5404, 0.1 ) }
    dend_71 { pt3dadd( -32.8034, 144.07, -13.676, 0.1 ) }
    dend_71 { pt3dadd( -33.0413, 145.189, -13.9584, 0.1 ) }
    dend_71 { pt3dadd( -33.1558, 145.724, -14.0917, 0.1 ) }
    dend_71 { pt3dadd( -33.2732, 146.258, -14.2141, 0.14 ) }
    dend_71 { pt3dadd( -33.3963, 146.797, -14.323, 0.28 ) }
    dend_71 { pt3dadd( -33.5129, 147.33, -14.4484, 0.14 ) }
    dend_71 { pt3dadd( -33.6276, 147.857, -14.5733, 0.1 ) }
    dend_71 { pt3dadd( -33.6276, 147.857, -14.5733, 0.14 ) }
    dend_71 { pt3dadd( -33.7204, 148.395, -14.7017, 0.84 ) }
    dend_71 { pt3dadd( -33.8053, 148.943, -14.7987, 0.7 ) }
    dend_71 { pt3dadd( -33.975, 150.106, -14.9305, 0.56 ) }
    dend_71 { pt3dadd( -34.0414, 150.661, -14.9676, 0.42 ) }
    dend_71 { pt3dadd( -34.1057, 151.277, -14.9278, 0.28 ) }
    dend_71 { pt3dadd( -34.1628, 151.824, -14.8223, 0.14 ) }
    dend_71 { pt3dadd( -34.2823, 152.909, -14.4681, 0.1 ) }
    dend_71 { pt3dadd( -34.3487, 153.419, -14.2445, 0.14 ) }
    dend_71 { pt3dadd( -34.4056, 153.765, -14.0638, 0.28 ) }
    dend_71 { pt3dadd( -34.5917, 154.773, -13.552, 0.56 ) }
    dend_71 { pt3dadd( -34.6934, 155.266, -13.2983, 0.7 ) }
    dend_71 { pt3dadd( -34.7972, 155.763, -13.0621, 0.56 ) }
    dend_71 { pt3dadd( -34.9118, 156.283, -12.8854, 0.42 ) }
    dend_71 { pt3dadd( -35.0406, 156.806, -12.723, 0.28 ) }
    dend_71 { pt3dadd( -35.1137, 157.062, -12.6643, 0.14 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 41/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -21.019, 79.6992, -9.77369, 0.1 ) }
    dend_66 { pt3dadd( -21.533, 79.469, -9.77369, 0.1 ) }
    dend_66 { pt3dadd( -22.0445, 79.2399, -9.77369, 0.14 ) }
    dend_66 { pt3dadd( -22.3015, 79.1248, -9.77369, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 45/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 23.75, -184.024, -6.9645, 1.12 ) }
    dend_28 { pt3dadd( 23.5293, -184.938, -6.25581, 1.12 ) }
    dend_28 { pt3dadd( 23.4457, -185.265, -6.04334, 0.98 ) }
    dend_28 { pt3dadd( 23.3883, -185.518, -5.93504, 0.84 ) }
    dend_28 { pt3dadd( 23.2315, -186.575, -5.78714, 1.12 ) }
    dend_28 { pt3dadd( 23.1759, -187.19, -5.74373, 0.98 ) }
    dend_28 { pt3dadd( 23.1506, -187.814, -5.65961, 0.84 ) }
    dend_28 { pt3dadd( 23.1677, -188.207, -5.63842, 0.84 ) }
    dend_28 { pt3dadd( 23.327, -189.342, -5.56488, 0.7 ) }
    dend_28 { pt3dadd( 23.573, -190.492, -5.49796, 0.84 ) }
    dend_28 { pt3dadd( 23.8468, -191.493, -5.46541, 0.84 ) }
    dend_28 { pt3dadd( 24.1962, -192.579, -5.34619, 0.84 ) }
    dend_28 { pt3dadd( 24.378, -193.103, -5.25044, 0.7 ) }
    dend_28 { pt3dadd( 24.5758, -193.677, -5.11223, 0.56 ) }
    dend_28 { pt3dadd( 24.6509, -193.938, -5.03528, 0.7 ) }
    dend_28 { pt3dadd( 24.7378, -194.306, -4.94532, 0.56 ) }
    dend_28 { pt3dadd( 24.8282, -194.858, -4.9018, 0.7 ) }
    dend_28 { pt3dadd( 24.8766, -195.416, -4.9018, 0.84 ) }
    dend_28 { pt3dadd( 24.8919, -195.978, -4.94351, 0.84 ) }
    dend_28 { pt3dadd( 24.8692, -196.603, -5.02795, 0.98 ) }
    dend_28 { pt3dadd( 24.8393, -197.147, -5.12683, 0.84 ) }
    dend_28 { pt3dadd( 24.7975, -197.929, -5.2977, 0.84 ) }
    dend_28 { pt3dadd( 24.7746, -198.312, -5.36289, 0.98 ) }
    dend_28 { pt3dadd( 24.7318, -199.344, -5.47913, 0.84 ) }
    dend_28 { pt3dadd( 24.738, -199.741, -5.50068, 1.12 ) }
    dend_28 { pt3dadd( 24.7977, -200.298, -5.49108, 1.12 ) }
    dend_28 { pt3dadd( 24.9016, -200.84, -5.44272, 0.98 ) }
    dend_28 { pt3dadd( 25.2105, -201.931, -5.27747, 0.84 ) }
    dend_28 { pt3dadd( 25.3682, -202.459, -5.1723, 0.7 ) }
    dend_28 { pt3dadd( 25.4794, -202.83, -5.0814, 0.56 ) }
    dend_28 { pt3dadd( 25.6427, -203.365, -5.01295, 0.98 ) }
    dend_28 { pt3dadd( 25.786, -203.905, -4.96534, 0.98 ) }
    dend_28 { pt3dadd( 25.9088, -204.448, -4.90064, 0.98 ) }
    dend_28 { pt3dadd( 25.9823, -204.827, -4.85563, 0.84 ) }
    dend_28 { pt3dadd( 26.0721, -205.374, -4.75165, 0.7 ) }
    dend_28 { pt3dadd( 26.2304, -206.477, -4.48468, 0.84 ) }
    dend_28 { pt3dadd( 26.3871, -207.521, -4.27562, 0.84 ) }
    dend_28 { pt3dadd( 26.5756, -208.64, -4.10714, 0.98 ) }
    dend_28 { pt3dadd( 26.6828, -209.183, -4.10641, 0.98 ) }
    dend_28 { pt3dadd( 26.7459, -209.452, -4.14255, 0.98 ) }
    dend_28 { pt3dadd( 26.8793, -209.983, -4.27298, 0.84 ) }
    dend_28 { pt3dadd( 27.1872, -211.033, -4.61537, 0.98 ) }
    dend_28 { pt3dadd( 27.3491, -211.528, -4.83055, 0.98 ) }
    dend_28 { pt3dadd( 27.6847, -212.516, -5.30384, 0.84 ) }
    dend_28 { pt3dadd( 27.8531, -213.001, -5.5132, 0.84 ) }
    dend_28 { pt3dadd( 28.0389, -213.498, -5.69289, 0.84 ) }
    dend_28 { pt3dadd( 28.264, -214.067, -5.81038, 0.84 ) }
    dend_28 { pt3dadd( 28.4884, -214.583, -5.81485, 0.84 ) }
    dend_28 { pt3dadd( 28.7321, -215.085, -5.75791, 0.98 ) }
    dend_28 { pt3dadd( 28.9962, -215.569, -5.64427, 0.84 ) }
    dend_28 { pt3dadd( 29.3073, -216.099, -5.54377, 0.98 ) }
    dend_28 { pt3dadd( 29.8305, -216.988, -5.41633, 0.56 ) }
    dend_28 { pt3dadd( 30.137, -217.53, -5.4196, 0.7 ) }
    dend_28 { pt3dadd( 30.4346, -218.077, -5.51237, 0.84 ) }
    dend_28 { pt3dadd( 30.69, -218.619, -5.68299, 0.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_28 { pt3dadd( 31.0567, -219.543, -5.98447, 0.84 ) }
    dend_28 { pt3dadd( 31.1657, -219.912, -6.10375, 0.84 ) }
    dend_28 { pt3dadd( 31.414, -220.999, -6.37672, 0.7 ) }
    dend_28 { pt3dadd( 31.4843, -221.544, -6.41341, 0.84 ) }
    dend_28 { pt3dadd( 31.5136, -222.169, -6.34289, 0.84 ) }
    dend_28 { pt3dadd( 31.5308, -223.3, -6.1565, 0.7 ) }
    dend_28 { pt3dadd( 31.5297, -223.905, -6.02115, 0.56 ) }
    dend_28 { pt3dadd( 31.5285, -224.918, -5.79533, 0.42 ) }
    dend_28 { pt3dadd( 31.5205, -225.531, -5.65014, 0.42 ) }
    dend_28 { pt3dadd( 31.5057, -226.139, -5.5316, 0.56 ) }
    dend_28 { pt3dadd( 31.4814, -227.281, -5.42915, 0.56 ) }
    dend_28 { pt3dadd( 31.4689, -227.676, -5.47704, 0.84 ) }
    dend_28 { pt3dadd( 31.46, -228.218, -5.62009, 0.84 ) }
    dend_28 { pt3dadd( 31.4567, -228.473, -5.73799, 0.98 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 14/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 23.75, -184.024, -6.9645, 0.14 ) }
    dend_27 { pt3dadd( 24.0409, -184.283, -6.9645, 0.14 ) }
    dend_27 { pt3dadd( 24.5181, -184.694, -6.9645, 0.28 ) }
    dend_27 { pt3dadd( 24.8083, -184.949, -6.91564, 0.42 ) }
    dend_27 { pt3dadd( 25.2662, -185.364, -6.79399, 0.28 ) }
    dend_27 { pt3dadd( 25.7067, -185.793, -6.65501, 0.14 ) }
    dend_27 { pt3dadd( 25.9781, -186.07, -6.56543, 0.14 ) }
    dend_27 { pt3dadd( 26.2335, -186.349, -6.47185, 0.28 ) }
    dend_27 { pt3dadd( 26.9046, -187.099, -6.21413, 0.28 ) }
    dend_27 { pt3dadd( 27.3027, -187.555, -6.06703, 0.14 ) }
    dend_27 { pt3dadd( 27.6752, -187.96, -5.94618, 0.1 ) }
    dend_27 { pt3dadd( 28.1, -188.402, -5.83698, 0.1 ) }
    dend_27 { pt3dadd( 28.5382, -188.837, -5.75769, 0.14 ) }
    dend_27 { pt3dadd( 28.8297, -189.107, -5.72984, 0.28 ) }
    dend_27 { pt3dadd( 29.3066, -189.508, -5.72984, 0.14 ) }
    dend_27 { pt3dadd( 29.8092, -189.891, -5.72984, 0.1 ) }
    dend_27 { pt3dadd( 30.3248, -190.24, -5.72984, 0.1 ) }
    dend_27 { pt3dadd( 30.6604, -190.452, -5.76089, 0.1 ) }
    dend_27 { pt3dadd( 30.9984, -190.655, -5.81827, 0.1 ) }
    dend_27 { pt3dadd( 31.3325, -190.851, -5.89327, 0.1 ) }
    dend_27 { pt3dadd( 31.6697, -191.043, -5.98299, 0.1 ) }
    dend_27 { pt3dadd( 32.3335, -191.423, -6.17108, 0.14 ) }
    dend_27 { pt3dadd( 33.2471, -191.93, -6.4299, 0.28 ) }
    dend_27 { pt3dadd( 33.9227, -192.305, -6.60653, 0.14 ) }
    dend_27 { pt3dadd( 34.2633, -192.494, -6.68951, 0.1 ) }
    dend_27 { pt3dadd( 34.5977, -192.679, -6.76379, 0.1 ) }
    dend_27 { pt3dadd( 35.2848, -193.071, -6.89181, 0.14 ) }
    dend_27 { pt3dadd( 35.6132, -193.277, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 36.2461, -193.746, -6.93036, 0.14 ) }
    dend_27 { pt3dadd( 36.2461, -193.746, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 36.2461, -193.746, -6.93036, 0.42 ) }
    dend_27 { pt3dadd( 36.4068, -193.977, -6.93036, 0.56 ) }
    dend_27 { pt3dadd( 36.6678, -194.476, -6.93036, 0.42 ) }
    dend_27 { pt3dadd( 36.911, -194.981, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 37.0273, -195.237, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 37.0273, -195.237, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 37.1653, -195.48, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 37.5057, -196.009, -6.93036, 0.14 ) }
    dend_27 { pt3dadd( 37.86, -196.522, -6.93036, 0.1 ) }
    dend_27 { pt3dadd( 38.1864, -196.981, -6.93036, 0.1 ) }
    dend_27 { pt3dadd( 38.5415, -197.492, -6.93036, 0.1 ) }
    dend_27 { pt3dadd( 38.8831, -198.013, -6.93036, 0.14 ) }
    dend_27 { pt3dadd( 39.2095, -198.552, -6.93036, 0.28 ) }
    dend_27 { pt3dadd( 39.3407, -198.798, -6.93036, 0.42 ) }
    dend_27 { pt3dadd( 39.4594, -199.052, -6.95318, 0.28 ) }
    dend_27 { pt3dadd( 39.6758, -199.566, -7.03608, 0.14 ) }
    dend_27 { pt3dadd( 39.8584, -200.073, -7.14907, 0.1 ) }
    dend_27 { pt3dadd( 40.0202, -200.591, -7.28795, 0.1 ) }
    dend_27 { pt3dadd( 40.1695, -201.113, -7.43989, 0.1 ) }
    dend_27 { pt3dadd( 40.4736, -202.174, -7.7496, 0.14 ) }
    dend_27 { pt3dadd( 40.4736, -202.174, -7.7496, 0.28 ) }
    dend_27 { pt3dadd( 40.5669, -202.431, -7.81579, 0.56 ) }
    dend_27 { pt3dadd( 40.7849, -202.936, -7.92293, 0.42 ) }
    dend_27 { pt3dadd( 41.0246, -203.429, -8.00177, 0.28 ) }
    dend_27 { pt3dadd( 41.2816, -203.924, -8.04929, 0.14 ) }
    dend_27 { pt3dadd( 41.5818, -204.478, -8.04929, 0.1 ) }
    dend_27 { pt3dadd( 41.8899, -205.028, -8.04929, 0.14 ) }
    dend_27 { pt3dadd( 42.21, -205.562, -8.04929, 0.1 ) }
    dend_27 { pt3dadd( 42.21, -205.562, -8.04929, 0.14 ) }
    dend_27 { pt3dadd( 42.5843, -206.048, -8.15976, 0.1 ) }
    dend_27 { pt3dadd( 42.9331, -206.519, -8.39109, 0.14 ) }
    dend_27 { pt3dadd( 42.9331, -206.519, -8.39109, 0.28 ) }
    dend_27 { pt3dadd( 43.0796, -206.73, -8.49987, 0.56 ) }
    dend_27 { pt3dadd( 43.4098, -207.222, -8.71283, 0.42 ) }
    dend_27 { pt3dadd( 44.0351, -208.111, -9.1773, 0.28 ) }
    dend_27 { pt3dadd( 44.3296, -208.517, -9.40461, 0.14 ) }
    dend_27 { pt3dadd( 44.6676, -208.979, -9.66745, 0.1 ) }
    dend_27 { pt3dadd( 45.0007, -209.444, -9.93248, 0.1 ) }
    dend_27 { pt3dadd( 45.2849, -209.861, -10.1606, 0.1 ) }
    dend_27 { pt3dadd( 45.784, -210.683, -10.5508, 0.1 ) }
    dend_27 { pt3dadd( 45.784, -210.683, -10.5508, 0.1 ) }
    dend_27 { pt3dadd( 45.9158, -210.919, -10.619, 0.1 ) }
    dend_27 { pt3dadd( 46.1657, -211.402, -10.7249, 0.1 ) }
    dend_27 { pt3dadd( 46.4222, -211.895, -10.7945, 0.1 ) }
    dend_27 { pt3dadd( 46.6935, -212.388, -10.8271, 0.1 ) }
    dend_27 { pt3dadd( 47.007, -212.926, -10.8271, 0.1 ) }
    dend_27 { pt3dadd( 47.3429, -213.451, -10.8271, 0.14 ) }
    dend_27 { pt3dadd( 47.6711, -213.908, -10.8271, 0.1 ) }
    dend_27 { pt3dadd( 48.0633, -214.39, -10.8681, 0.1 ) }
    dend_27 { pt3dadd( 48.4847, -214.843, -10.945, 0.1 ) }
    dend_27 { pt3dadd( 48.7783, -215.11, -11.0165, 0.1 ) }
    dend_27 { pt3dadd( 49.2645, -215.473, -11.1554, 0.1 ) }
    dend_27 { pt3dadd( 49.5861, -215.668, -11.2873, 0.14 ) }
    dend_27 { pt3dadd( 50.4711, -216.103, -11.7181, 0.28 ) }
    dend_27 { pt3dadd( 50.7033, -216.202, -11.8431, 0.7 ) }
    dend_27 { pt3dadd( 51.2232, -216.394, -12.1249, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_27 { pt3dadd( 51.7628, -216.572, -12.396, 0.42 ) }
    dend_27 { pt3dadd( 52.709, -216.86, -12.8175, 0.28 ) }
    dend_27 { pt3dadd( 53.0704, -216.968, -12.9448, 0.7 ) }
    dend_27 { pt3dadd( 53.443, -217.079, -13.0316, 0.7 ) }
    dend_27 { pt3dadd( 54.0251, -217.26, -13.1442, 0.56 ) }
    dend_27 { pt3dadd( 54.6154, -217.441, -13.2767, 0.42 ) }
    dend_27 { pt3dadd( 54.9797, -217.552, -13.3583, 0.28 ) }
    dend_27 { pt3dadd( 55.5784, -217.726, -13.4586, 0.14 ) }
    dend_27 { pt3dadd( 56.1651, -217.89, -13.5724, 0.1 ) }
    dend_27 { pt3dadd( 56.5397, -217.994, -13.6594, 0.1 ) }
    dend_27 { pt3dadd( 57.6333, -218.308, -13.9821, 0.1 ) }
    dend_27 { pt3dadd( 57.9845, -218.411, -14.1153, 0.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 48.9457, -151.948, -19.3634, 0.1 ) }
    dend_22 { pt3dadd( 49.4221, -152.85, -19.169, 0.1 ) }
    dend_22 { pt3dadd( 49.6708, -153.346, -19.0881, 0.1 ) }
    dend_22 { pt3dadd( 49.9362, -153.905, -19.0165, 0.1 ) }
    dend_22 { pt3dadd( 50.1662, -154.416, -18.9636, 0.1 ) }
    dend_22 { pt3dadd( 50.4257, -154.98, -18.9134, 0.1 ) }
    dend_22 { pt3dadd( 50.6573, -155.482, -18.8738, 0.1 ) }
    dend_22 { pt3dadd( 50.8905, -155.991, -18.8738, 0.1 ) }
    dend_22 { pt3dadd( 51.1179, -156.506, -18.8738, 0.1 ) }
    dend_22 { pt3dadd( 51.3295, -157.025, -18.8738, 0.1 ) }
    dend_22 { pt3dadd( 51.465, -157.398, -18.906, 0.1 ) }
    dend_22 { pt3dadd( 51.5475, -157.662, -18.9475, 0.7 ) }
    dend_22 { pt3dadd( 51.701, -158.192, -19.0589, 0.7 ) }
    dend_22 { pt3dadd( 51.8425, -158.719, -19.1863, 0.56 ) }
    dend_22 { pt3dadd( 51.9748, -159.25, -19.3211, 0.7 ) }
    dend_22 { pt3dadd( 52.2331, -160.362, -19.6066, 0.56 ) }
    dend_22 { pt3dadd( 52.3489, -160.898, -19.7369, 0.42 ) }
    dend_22 { pt3dadd( 52.4681, -161.433, -19.8557, 0.28 ) }
    dend_22 { pt3dadd( 52.593, -161.972, -19.9587, 0.14 ) }
    dend_22 { pt3dadd( 52.7337, -162.499, -20.0345, 0.28 ) }
    dend_22 { pt3dadd( 52.8155, -162.768, -20.0558, 0.28 ) }
    dend_22 { pt3dadd( 52.9971, -163.298, -20.0558, 0.28 ) }
    dend_22 { pt3dadd( 53.1954, -163.825, -20.0558, 0.14 ) }
    dend_22 { pt3dadd( 53.4039, -164.345, -20.0558, 0.1 ) }
    dend_22 { pt3dadd( 53.6427, -164.921, -20.0558, 0.1 ) }
    dend_22 { pt3dadd( 53.8708, -165.434, -20.0959, 0.1 ) }
    dend_22 { pt3dadd( 54.1029, -165.939, -20.1662, 0.1 ) }
    dend_22 { pt3dadd( 54.3682, -166.5, -20.2738, 0.1 ) }
    dend_22 { pt3dadd( 54.6047, -166.994, -20.3919, 0.14 ) }
    dend_22 { pt3dadd( 54.8312, -167.479, -20.5248, 0.28 ) }
    dend_22 { pt3dadd( 55.2895, -168.524, -20.8318, 0.42 ) }
    dend_22 { pt3dadd( 55.5112, -169.017, -20.9778, 0.84 ) }
    dend_22 { pt3dadd( 55.5112, -169.017, -20.9778, 0.7 ) }
    dend_22 { pt3dadd( 55.6253, -169.272, -21.0117, 0.28 ) }
    dend_22 { pt3dadd( 55.8725, -169.771, -20.9436, 0.14 ) }
    dend_22 { pt3dadd( 56.1126, -170.226, -20.7149, 0.1 ) }
    dend_22 { pt3dadd( 56.3566, -170.658, -20.338, 0.1 ) }
    dend_22 { pt3dadd( 56.5708, -171.022, -19.9657, 0.1 ) }
    dend_22 { pt3dadd( 56.9907, -171.731, -19.1234, 0.1 ) }
    dend_22 { pt3dadd( 57.4041, -172.403, -18.2487, 0.1 ) }
    dend_22 { pt3dadd( 57.782, -172.99, -17.479, 0.1 ) }
    dend_22 { pt3dadd( 58.227, -173.674, -16.6297, 0.1 ) }
    dend_22 { pt3dadd( 58.4495, -174.017, -16.2423, 0.1 ) }
    dend_22 { pt3dadd( 58.9183, -174.735, -15.6557, 0.1 ) }
    dend_22 { pt3dadd( 59.2512, -175.242, -15.7969, 0.1 ) }
    dend_22 { pt3dadd( 59.7876, -176.049, -16.4671, 0.1 ) }
    dend_22 { pt3dadd( 60.2833, -176.774, -17.2064, 0.1 ) }
    dend_22 { pt3dadd( 60.7367, -177.415, -17.9375, 0.1 ) }
    dend_22 { pt3dadd( 60.9838, -177.746, -18.3208, 0.1 ) }
    dend_22 { pt3dadd( 61.4626, -178.388, -19.035, 0.1 ) }
    dend_22 { pt3dadd( 61.5938, -178.562, -19.2129, 0.1 ) }
    dend_22 { pt3dadd( 61.9058, -178.964, -19.5728, 0.1 ) }
    dend_22 { pt3dadd( 62.2358, -179.386, -19.903, 0.1 ) }
    dend_22 { pt3dadd( 62.5548, -179.803, -20.2384, 0.1 ) }
    dend_22 { pt3dadd( 62.8336, -180.177, -20.5547, 0.1 ) }
    dend_22 { pt3dadd( 63.3371, -180.879, -21.1914, 0.1 ) }
    dend_22 { pt3dadd( 63.8634, -181.631, -21.9415, 0.1 ) }
    dend_22 { pt3dadd( 64.0827, -181.967, -22.3187, 0.1 ) }
    dend_22 { pt3dadd( 64.512, -182.651, -23.1769, 0.1 ) }
    dend_22 { pt3dadd( 64.7061, -182.971, -23.5974, 0.14 ) }
    dend_22 { pt3dadd( 65.119, -183.651, -24.4666, 0.28 ) }
    dend_22 { pt3dadd( 65.2194, -183.826, -24.6633, 0.14 ) }
    dend_22 { pt3dadd( 65.6487, -184.573, -25.4192, 0.1 ) }
    dend_22 { pt3dadd( 66.1148, -185.343, -26.1847, 0.1 ) }
    dend_22 { pt3dadd( 66.2299, -185.534, -26.3521, 0.1 ) }
    dend_22 { pt3dadd( 66.5066, -185.988, -26.6892, 0.1 ) }
    dend_22 { pt3dadd( 66.7793, -186.435, -26.8903, 0.1 ) }
    dend_22 { pt3dadd( 67.1007, -186.959, -26.9909, 0.1 ) }
    dend_22 { pt3dadd( 67.7212, -187.96, -26.8916, 0.14 ) }
    dend_22 { pt3dadd( 68.0012, -188.43, -26.7692, 0.28 ) }
    dend_22 { pt3dadd( 68.5095, -189.314, -26.5737, 0.84 ) }
    dend_22 { pt3dadd( 69.044, -190.359, -26.4661, 0.7 ) }
    dend_22 { pt3dadd( 69.2807, -190.87, -26.4678, 0.56 ) }
    dend_22 { pt3dadd( 69.4896, -191.443, -26.5938, 0.42 ) }
    dend_22 { pt3dadd( 69.6343, -191.948, -26.7955, 0.28 ) }
    dend_22 { pt3dadd( 69.8332, -192.884, -27.4272, 0.14 ) }
    dend_22 { pt3dadd( 69.9861, -193.79, -28.1624, 0.1 ) }
    dend_22 { pt3dadd( 70.0122, -193.991, -28.3539, 0.1 ) }
    dend_22 { pt3dadd( 70.1056, -194.831, -29.18, 0.1 ) }
    dend_22 { pt3dadd( 70.1383, -195.236, -29.566, 0.1 ) }
    dend_22 { pt3dadd( 70.2103, -196.122, -30.337, 0.1 ) }
    dend_22 { pt3dadd( 70.2543, -196.576, -30.6618, 0.1 ) }
    dend_22 { pt3dadd( 70.3766, -197.557, -31.2459, 0.1 ) }
    dend_22 { pt3dadd( 70.4463, -198.05, -31.5015, 0.1 ) }
    dend_22 { pt3dadd( 70.5437, -198.622, -31.7214, 0.1 ) }
    dend_22 { pt3dadd( 70.6433, -199.151, -31.8768, 0.1 ) }
    dend_22 { pt3dadd( 70.7582, -199.684, -32.004, 0.1 ) }
    dend_22 { pt3dadd( 70.8183, -199.952, -32.0691, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_22 { pt3dadd( 70.883, -200.224, -32.1044, 0.56 ) }
    dend_22 { pt3dadd( 71.023, -200.763, -32.1596, 0.42 ) }
    dend_22 { pt3dadd( 71.1885, -201.29, -32.1955, 0.28 ) }
    dend_22 { pt3dadd( 71.5203, -202.274, -32.2254, 0.14 ) }
    dend_22 { pt3dadd( 71.7076, -202.805, -32.2224, 0.1 ) }
    dend_22 { pt3dadd( 72.0827, -203.773, -32.187, 0.1 ) }
    dend_22 { pt3dadd( 72.2951, -204.291, -32.1534, 0.1 ) }
    dend_22 { pt3dadd( 72.5502, -204.856, -32.1006, 0.1 ) }
    dend_22 { pt3dadd( 72.79, -205.363, -32.0412, 0.1 ) }
    dend_22 { pt3dadd( 73.0311, -205.864, -31.9726, 0.1 ) }
    dend_22 { pt3dadd( 73.3029, -206.43, -31.9314, 0.1 ) }
    dend_22 { pt3dadd( 73.5394, -206.938, -31.9314, 0.1 ) }
    dend_22 { pt3dadd( 73.792, -207.508, -31.9314, 0.14 ) }
    dend_22 { pt3dadd( 74.016, -208.025, -31.9314, 0.28 ) }
    dend_22 { pt3dadd( 74.2352, -208.53, -31.9314, 0.14 ) }
    dend_22 { pt3dadd( 74.4536, -209.049, -31.9314, 0.1 ) }
    dend_22 { pt3dadd( 74.6584, -209.571, -31.9314, 0.1 ) }
    dend_22 { pt3dadd( 74.8607, -210.096, -31.9314, 0.1 ) }
    dend_22 { pt3dadd( 74.9956, -210.462, -31.9314, 0.1 ) }
    dend_22 { pt3dadd( 75.1958, -210.988, -31.9314, 0.84 ) }
    dend_22 { pt3dadd( 75.4004, -211.51, -31.9314, 0.7 ) }
    dend_22 { pt3dadd( 75.6095, -212.03, -31.9314, 0.56 ) }
    dend_22 { pt3dadd( 75.6095, -212.03, -31.9314, 0.56 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 23/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 48.9457, -151.948, -19.3634, 0.28 ) }
    dend_21 { pt3dadd( 49.6287, -152.326, -17.4795, 0.28 ) }
    dend_21 { pt3dadd( 49.9961, -152.53, -16.492, 0.14 ) }
    dend_21 { pt3dadd( 50.3841, -152.745, -15.5112, 0.1 ) }
    dend_21 { pt3dadd( 50.7727, -152.96, -14.5288, 0.1 ) }
    dend_21 { pt3dadd( 51.2314, -153.214, -13.3689, 0.1 ) }
    dend_21 { pt3dadd( 51.6182, -153.429, -12.3911, 0.14 ) }
    dend_21 { pt3dadd( 52.0454, -153.666, -11.432, 0.28 ) }
    dend_21 { pt3dadd( 52.211, -153.758, -11.0761, 0.42 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 32/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.70642, -165.015, -40.3916, 0.14 ) }
    dend_12 { pt3dadd( -1.39811, -165.113, -40.6088, 0.14 ) }
    dend_12 { pt3dadd( -0.888136, -165.263, -40.9493, 0.28 ) }
    dend_12 { pt3dadd( 0.00716168, -165.514, -41.4855, 0.14 ) }
    dend_12 { pt3dadd( 0.543759, -165.665, -41.7784, 0.1 ) }
    dend_12 { pt3dadd( 0.886614, -165.761, -41.9564, 0.1 ) }
    dend_12 { pt3dadd( 1.90432, -166.065, -42.4648, 0.1 ) }
    dend_12 { pt3dadd( 2.45017, -166.246, -42.7215, 0.1 ) }
    dend_12 { pt3dadd( 2.9908, -166.464, -42.9374, 0.1 ) }
    dend_12 { pt3dadd( 3.34048, -166.631, -43.0297, 0.1 ) }
    dend_12 { pt3dadd( 3.34048, -166.631, -43.0297, 0.1 ) }
    dend_12 { pt3dadd( 3.5675, -166.795, -43.0559, 0.1 ) }
    dend_12 { pt3dadd( 4.04228, -167.199, -43.0559, 0.1 ) }
    dend_12 { pt3dadd( 4.50244, -167.614, -42.9971, 0.1 ) }
    dend_12 { pt3dadd( 4.79164, -167.881, -42.9353, 0.1 ) }
    dend_12 { pt3dadd( 5.25315, -168.293, -42.8159, 0.1 ) }
    dend_12 { pt3dadd( 5.71839, -168.697, -42.6864, 0.1 ) }
    dend_12 { pt3dadd( 6.00827, -168.944, -42.6022, 0.1 ) }
    dend_12 { pt3dadd( 6.96137, -169.738, -42.3162, 0.1 ) }
    dend_12 { pt3dadd( 7.43295, -170.131, -42.1782, 0.1 ) }
    dend_12 { pt3dadd( 7.72907, -170.379, -42.0975, 0.1 ) }
    dend_12 { pt3dadd( 8.20397, -170.772, -41.9692, 0.1 ) }
    dend_12 { pt3dadd( 8.67439, -171.164, -41.8531, 0.1 ) }
    dend_12 { pt3dadd( 8.97331, -171.421, -41.7996, 0.1 ) }
    dend_12 { pt3dadd( 9.43638, -171.838, -41.7996, 0.1 ) }
    dend_12 { pt3dadd( 9.73407, -172.102, -41.7996, 0.1 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 58/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -1.70642, -165.015, -40.3916, 0.1 ) }
    dend_11 { pt3dadd( -1.47092, -166.047, -40.1833, 0.1 ) }
    dend_11 { pt3dadd( -1.34208, -166.579, -40.1017, 0.1 ) }
    dend_11 { pt3dadd( -1.20659, -167.119, -40.0363, 0.1 ) }
    dend_11 { pt3dadd( -1.06656, -167.661, -39.9829, 0.1 ) }
    dend_11 { pt3dadd( -0.937486, -168.205, -39.9387, 0.1 ) }
    dend_11 { pt3dadd( -0.823374, -168.755, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.713854, -169.305, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.617576, -169.847, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.526782, -170.403, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.429197, -171.027, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.333271, -171.639, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.242958, -172.193, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.154897, -172.749, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( -0.0645416, -173.302, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( 0.0348996, -173.856, -39.9014, 0.1 ) }
    dend_11 { pt3dadd( 0.145842, -174.396, -39.9014, 0.14 ) }
    dend_11 { pt3dadd( 0.254928, -174.944, -39.8626, 0.28 ) }
    dend_11 { pt3dadd( 0.364984, -175.559, -39.7815, 0.14 ) }
    dend_11 { pt3dadd( 0.442125, -176.096, -39.6407, 0.1 ) }
    dend_11 { pt3dadd( 0.506024, -176.622, -39.4506, 0.1 ) }
    dend_11 { pt3dadd( 0.533951, -176.871, -39.3442, 0.1 ) }
    dend_11 { pt3dadd( 0.656439, -177.938, -38.8491, 0.1 ) }
    dend_11 { pt3dadd( 0.721323, -178.443, -38.6091, 0.1 ) }
    dend_11 { pt3dadd( 0.882583, -179.503, -38.1207, 0.1 ) }
    dend_11 { pt3dadd( 0.959137, -180.026, -37.9349, 0.1 ) }
    dend_11 { pt3dadd( 1.03099, -180.571, -37.8135, 0.1 ) }
    dend_11 { pt3dadd( 1.10253, -181.125, -37.7681, 0.1 ) }
    dend_11 { pt3dadd( 1.17799, -181.681, -37.8122, 0.14 ) }
    dend_11 { pt3dadd( 1.24762, -182.22, -37.9039, 0.1 ) }
    dend_11 { pt3dadd( 1.40195, -183.352, -38.2064, 0.14 ) }
    dend_11 { pt3dadd( 1.4806, -183.957, -38.3704, 0.1 ) }
    dend_11 { pt3dadd( 1.51696, -184.227, -38.4395, 0.14 ) }
    dend_11 { pt3dadd( 1.55598, -184.484, -38.5191, 0.28 ) }
    dend_11 { pt3dadd( 1.60321, -184.746, -38.6045, 0.28 ) }
    dend_11 { pt3dadd( 1.71897, -185.273, -38.7663, 0.14 ) }
    dend_11 { pt3dadd( 1.85849, -185.799, -38.9, 0.1 ) }
    dend_11 { pt3dadd( 2.00909, -186.324, -39.0381, 0.1 ) }
    dend_11 { pt3dadd( 2.31574, -187.394, -39.3093, 0.1 ) }
    dend_11 { pt3dadd( 2.47376, -187.91, -39.4349, 0.1 ) }
    dend_11 { pt3dadd( 2.64241, -188.431, -39.5518, 0.1 ) }
    dend_11 { pt3dadd( 2.81861, -188.952, -39.6587, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_11 { pt3dadd( 2.99595, -189.484, -39.7124, 0.1 ) }
    dend_11 { pt3dadd( 3.15698, -190.021, -39.6886, 0.1 ) }
    dend_11 { pt3dadd( 3.2519, -190.389, -39.5721, 0.1 ) }
    dend_11 { pt3dadd( 3.34717, -190.892, -39.3436, 1.12 ) }
    dend_11 { pt3dadd( 3.34717, -190.892, -39.3436, 0.98 ) }
    dend_11 { pt3dadd( 3.44627, -191.821, -38.8154, 0.28 ) }
    dend_11 { pt3dadd( 3.49536, -192.37, -38.5101, 0.14 ) }
    dend_11 { pt3dadd( 3.58235, -193.388, -37.9902, 0.1 ) }
    dend_11 { pt3dadd( 3.63117, -193.951, -37.7359, 0.1 ) }
    dend_11 { pt3dadd( 3.70235, -194.471, -37.5404, 0.1 ) }
    dend_11 { pt3dadd( 3.81659, -195.003, -37.3951, 0.1 ) }
    dend_11 { pt3dadd( 3.98497, -195.532, -37.3162, 0.1 ) }
    dend_11 { pt3dadd( 4.18367, -196.049, -37.2306, 0.1 ) }
    dend_11 { pt3dadd( 4.28778, -196.308, -37.1922, 0.1 ) }
    dend_11 { pt3dadd( 4.51197, -196.884, -37.0712, 0.1 ) }
    dend_11 { pt3dadd( 4.69879, -197.459, -36.9228, 0.1 ) }
    dend_11 { pt3dadd( 4.7925, -197.822, -36.8189, 0.1 ) }
    dend_11 { pt3dadd( 4.99236, -198.838, -36.5248, 0.1 ) }
    dend_11 { pt3dadd( 5.07898, -199.431, -36.3645, 0.1 ) }
    dend_11 { pt3dadd( 5.1462, -200.042, -36.2215, 0.1 ) }
    dend_11 { pt3dadd( 5.17597, -200.424, -36.1495, 0.1 ) }
    dend_11 { pt3dadd( 5.22099, -200.98, -36.0752, 0.1 ) }
    dend_11 { pt3dadd( 5.28471, -201.536, -36.0356, 0.1 ) }
    dend_11 { pt3dadd( 5.3699, -202.088, -35.9958, 0.1 ) }
    dend_11 { pt3dadd( 5.47281, -202.637, -35.9217, 0.1 ) }
    dend_11 { pt3dadd( 5.57343, -203.17, -35.7797, 0.1 ) }
    dend_11 { pt3dadd( 5.66641, -203.683, -35.5945, 0.1 ) }
    dend_11 { pt3dadd( 5.74866, -204.193, -35.3759, 0.1 ) }
    dend_11 { pt3dadd( 5.86887, -205.132, -34.8639, 0.1 ) }
    dend_11 { pt3dadd( 5.92102, -205.608, -34.5732, 0.1 ) }
    dend_11 { pt3dadd( 6.00298, -206.601, -33.9475, 0.1 ) }
    dend_11 { pt3dadd( 6.02828, -207.079, -33.6553, 0.1 ) }
    dend_11 { pt3dadd( 6.04631, -207.567, -33.3752, 0.1 ) }
    dend_11 { pt3dadd( 6.06845, -208.624, -32.8561, 0.1 ) }
    dend_11 { pt3dadd( 6.08215, -209.153, -32.6635, 0.1 ) }
    dend_11 { pt3dadd( 6.09708, -209.747, -32.4499, 0.1 ) }
    dend_11 { pt3dadd( 6.12222, -210.338, -32.2652, 0.1 ) }
    dend_11 { pt3dadd( 6.13736, -210.606, -32.1808, 0.1 ) }
    dend_11 { pt3dadd( 6.18888, -211.211, -32.0059, 0.1 ) }
    dend_11 { pt3dadd( 6.26017, -211.752, -31.8784, 0.1 ) }
    dend_11 { pt3dadd( 6.44492, -212.853, -31.6118, 0.1 ) }
    dend_11 { pt3dadd( 6.55676, -213.377, -31.4853, 0.1 ) }
    dend_11 { pt3dadd( 6.68854, -213.911, -31.3655, 0.1 ) }
    dend_11 { pt3dadd( 6.81898, -214.447, -31.2641, 0.1 ) }
    dend_11 { pt3dadd( 6.95341, -214.988, -31.187, 0.1 ) }
    dend_11 { pt3dadd( 7.06954, -215.535, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.12047, -215.812, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.19874, -216.357, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.27128, -216.983, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.31695, -217.541, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.35633, -218.16, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.39074, -218.719, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.42476, -219.348, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.45765, -219.907, -31.1446, 0.1 ) }
    dend_11 { pt3dadd( 7.50457, -220.524, -31.1846, 0.14 ) }
    dend_11 { pt3dadd( 7.54988, -221.079, -31.2515, 0.1 ) }
    dend_11 { pt3dadd( 7.60612, -221.631, -31.3482, 0.1 ) }
    dend_11 { pt3dadd( 7.67674, -222.233, -31.4842, 0.1 ) }
    dend_11 { pt3dadd( 7.75873, -222.769, -31.6273, 0.1 ) }
    dend_11 { pt3dadd( 7.93404, -223.753, -31.9114, 0.14 ) }
    dend_11 { pt3dadd( 7.93404, -223.753, -31.9114, 0.28 ) }
    dend_11 { pt3dadd( 7.98797, -224.013, -32.0052, 0.28 ) }
    dend_11 { pt3dadd( 8.09519, -224.526, -32.2031, 0.14 ) }
    dend_11 { pt3dadd( 8.20927, -225.043, -32.3938, 0.1 ) }
    dend_11 { pt3dadd( 8.31626, -225.543, -32.5992, 0.1 ) }
    dend_11 { pt3dadd( 8.40266, -226.06, -32.8063, 0.1 ) }
    dend_11 { pt3dadd( 8.53069, -227.141, -33.2672, 0.1 ) }
    dend_11 { pt3dadd( 8.56207, -227.655, -33.4971, 0.1 ) }
    dend_11 { pt3dadd( 8.56043, -228.165, -33.7282, 0.1 ) }
    dend_11 { pt3dadd( 8.51109, -229.213, -34.1797, 0.1 ) }
    dend_11 { pt3dadd( 8.47599, -229.797, -34.4108, 0.1 ) }
    dend_11 { pt3dadd( 8.44516, -230.387, -34.6005, 0.1 ) }
    dend_11 { pt3dadd( 8.44623, -230.777, -34.6804, 0.1 ) }
    dend_11 { pt3dadd( 8.48202, -231.39, -34.7744, 0.1 ) }
    dend_11 { pt3dadd( 8.55729, -231.946, -34.8202, 0.1 ) }
    dend_11 { pt3dadd( 8.64268, -232.326, -34.8202, 0.1 ) }
    dend_11 { pt3dadd( 8.80053, -232.867, -34.8202, 0.1 ) }
    dend_11 { pt3dadd( 8.99131, -233.46, -34.8202, 0.1 ) }
    dend_11 { pt3dadd( 9.15762, -233.998, -34.8202, 0.1 ) }
    dend_11 { pt3dadd( 9.31096, -234.537, -34.8202, 0.1 ) }
    dend_11 { pt3dadd( 9.44019, -235.081, -34.7823, 0.1 ) }
    dend_11 { pt3dadd( 9.55606, -235.685, -34.7041, 0.1 ) }
    dend_11 { pt3dadd( 9.65701, -236.218, -34.5611, 0.1 ) }
    dend_11 { pt3dadd( 9.76778, -236.796, -34.3397, 0.1 ) }
    dend_11 { pt3dadd( 9.82277, -237.047, -34.2232, 0.1 ) }
    dend_11 { pt3dadd( 10.0653, -237.909, -33.6986, 0.1 ) }
    dend_11 { pt3dadd( 10.2135, -238.348, -33.3955, 0.1 ) }
    dend_11 { pt3dadd( 10.569, -239.263, -32.7372, 0.1 ) }
    dend_11 { pt3dadd( 10.7461, -239.693, -32.4369, 0.1 ) }
    dend_11 { pt3dadd( 10.9372, -240.138, -32.1547, 0.1 ) }
    dend_11 { pt3dadd( 11.3444, -241.118, -31.6413, 0.1 ) }
    dend_11 { pt3dadd( 11.5405, -241.611, -31.4535, 0.1 ) }
    dend_11 { pt3dadd( 11.7317, -242.124, -31.3357, 0.1 ) }
    dend_11 { pt3dadd( 11.9121, -242.657, -31.3092, 0.1 ) }
    dend_11 { pt3dadd( 12.0742, -243.193, -31.3352, 0.1 ) }
    dend_11 { pt3dadd( 12.2181, -243.729, -31.4116, 0.1 ) }
    dend_11 { pt3dadd( 12.3418, -244.255, -31.534, 0.1 ) }
    dend_11 { pt3dadd( 12.5842, -245.341, -31.8102, 0.14 ) }
    dend_11 { pt3dadd( 12.6882, -245.876, -31.9531, 0.28 ) }
    dend_11 { pt3dadd( 12.79, -246.478, -32.1118, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_11 { pt3dadd( 12.8696, -247.011, -32.2378, 0.1 ) }
    dend_11 { pt3dadd( 12.9075, -247.283, -32.2872, 0.14 ) }
    dend_11 { pt3dadd( 12.9075, -247.283, -32.2872, 0.28 ) }
    dend_11 { pt3dadd( 12.9692, -247.67, -32.2166, 0.1 ) }
    dend_11 { pt3dadd( 13.0849, -248.206, -32.0875, 0.1 ) }
    dend_11 { pt3dadd( 13.2269, -248.73, -31.9457, 0.1 ) }
    dend_11 { pt3dadd( 13.3796, -249.243, -31.8047, 0.1 ) }
    dend_11 { pt3dadd( 13.7169, -250.303, -31.5286, 0.1 ) }
    dend_11 { pt3dadd( 13.891, -250.821, -31.4048, 0.1 ) }
    dend_11 { pt3dadd( 14.0982, -251.402, -31.2795, 0.1 ) }
    dend_11 { pt3dadd( 14.2826, -251.923, -31.1845, 0.1 ) }
    dend_11 { pt3dadd( 14.4665, -252.45, -31.1133, 0.1 ) }
    dend_11 { pt3dadd( 14.6354, -252.983, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 14.7907, -253.525, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 14.918, -254.061, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.0115, -254.613, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.0746, -255.173, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.119, -255.803, -31.0743, 0.14 ) }
    dend_11 { pt3dadd( 15.1437, -256.356, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.1569, -256.754, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.1683, -257.385, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.1816, -258.005, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.2053, -258.565, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.2405, -259.127, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.2856, -259.686, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.3573, -260.303, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.4271, -260.862, -31.0743, 0.14 ) }
    dend_11 { pt3dadd( 15.4986, -261.418, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.5746, -262.033, -31.0743, 0.14 ) }
    dend_11 { pt3dadd( 15.6359, -262.59, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.687, -263.151, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.7414, -263.78, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.7832, -264.332, -31.0743, 0.1 ) }
    dend_11 { pt3dadd( 15.8254, -264.89, -31.0374, 0.1 ) }
    dend_11 { pt3dadd( 15.8824, -265.512, -30.9572, 0.1 ) }
    dend_11 { pt3dadd( 15.9441, -266.121, -30.8465, 0.1 ) }
    dend_11 { pt3dadd( 15.9781, -266.393, -30.7856, 0.1 ) }
    dend_11 { pt3dadd( 16.0661, -266.93, -30.6516, 0.14 ) }
    dend_11 { pt3dadd( 16.253, -267.92, -30.3969, 0.42 ) }
    dend_11 { pt3dadd( 16.3719, -268.452, -30.2648, 0.28 ) }
    dend_11 { pt3dadd( 16.513, -268.984, -30.1458, 0.14 ) }
    dend_11 { pt3dadd( 16.6518, -269.508, -30.0504, 0.1 ) }
    dend_11 { pt3dadd( 16.7864, -270.051, -29.9802, 0.1 ) }
    dend_11 { pt3dadd( 16.9145, -270.595, -29.943, 0.1 ) }
    dend_11 { pt3dadd( 17.0394, -271.144, -29.943, 0.1 ) }
    dend_11 { pt3dadd( 17.1606, -271.691, -29.943, 0.1 ) }
    dend_11 { pt3dadd( 17.2935, -272.297, -29.943, 0.1 ) }
    dend_11 { pt3dadd( 17.4036, -272.845, -29.9059, 0.1 ) }
    dend_11 { pt3dadd( 17.5062, -273.391, -29.8362, 0.1 ) }
    dend_11 { pt3dadd( 17.5952, -273.939, -29.7399, 1.26 ) }
    dend_11 { pt3dadd( 17.6754, -274.482, -29.6254, 1.12 ) }
    dend_11 { pt3dadd( 17.7431, -275.027, -29.4994, 0.98 ) }
    dend_11 { pt3dadd( 17.8638, -276.064, -29.2526, 0.84 ) }
    dend_11 { pt3dadd( 17.9075, -276.609, -29.1284, 0.7 ) }
    dend_11 { pt3dadd( 17.9445, -277.225, -29.0019, 0.56 ) }
    dend_11 { pt3dadd( 17.9743, -277.767, -28.9093, 0.42 ) }
    dend_11 { pt3dadd( 18.015, -278.392, -28.8318, 0.28 ) }
    dend_11 { pt3dadd( 18.0751, -278.951, -28.7945, 0.14 ) }
    dend_11 { pt3dadd( 18.1739, -279.565, -28.7945, 0.1 ) }
    dend_11 { pt3dadd( 18.2955, -280.113, -28.8333, 0.1 ) }
    dend_11 { pt3dadd( 18.4492, -280.651, -28.8668, 0.1 ) }
    dend_11 { pt3dadd( 18.6271, -281.185, -28.8944, 0.1 ) }
    dend_11 { pt3dadd( 18.8501, -281.766, -28.8724, 0.1 ) }
    dend_11 { pt3dadd( 19.0616, -282.284, -28.8093, 0.1 ) }
    dend_11 { pt3dadd( 19.5174, -283.351, -28.6043, 0.1 ) }
    dend_11 { pt3dadd( 19.9046, -284.287, -28.3744, 0.56 ) }
    dend_11 { pt3dadd( 20.1021, -284.792, -28.2327, 0.42 ) }
    dend_11 { pt3dadd( 20.4434, -285.811, -27.8457, 0.28 ) }
    dend_11 { pt3dadd( 20.5782, -286.294, -27.5905, 0.14 ) }
    dend_11 { pt3dadd( 20.6947, -286.762, -27.3039, 0.1 ) }
    dend_11 { pt3dadd( 20.7986, -287.226, -27.0023, 0.1 ) }
    dend_11 { pt3dadd( 20.9025, -287.702, -26.7248, 0.1 ) }
    dend_11 { pt3dadd( 21.1193, -288.71, -26.1581, 0.1 ) }
    dend_11 { pt3dadd( 21.3365, -289.717, -25.6567, 0.1 ) }
    dend_11 { pt3dadd( 21.4366, -290.218, -25.4182, 0.14 ) }
    dend_11 { pt3dadd( 21.5344, -290.725, -25.2014, 0.28 ) }
    dend_11 { pt3dadd( 21.5835, -290.981, -25.094, 0.98 ) }
    dend_11 { pt3dadd( 21.687, -291.498, -24.9043, 1.12 ) }
    dend_11 { pt3dadd( 21.7868, -292.012, -24.725, 0.98 ) }
    dend_11 { pt3dadd( 21.8892, -292.597, -24.5102, 0.84 ) }
    dend_11 { pt3dadd( 21.9719, -293.094, -24.2578, 0.7 ) }
    dend_11 { pt3dadd( 22.1342, -294.07, -23.6801, 0.56 ) }
    dend_11 { pt3dadd( 22.2024, -294.518, -23.3664, 0.42 ) }
    dend_11 { pt3dadd( 22.3399, -295.449, -22.6521, 0.28 ) }
    dend_11 { pt3dadd( 22.4066, -295.886, -22.3074, 0.14 ) }
    dend_11 { pt3dadd( 22.5576, -296.787, -21.6124, 0.1 ) }
    dend_11 { pt3dadd( 22.6319, -297.23, -21.2936, 0.1 ) }
    dend_11 { pt3dadd( 22.794, -298.205, -20.6466, 0.14 ) }
    dend_11 { pt3dadd( 22.8734, -298.67, -20.3433, 0.1 ) }
    dend_11 { pt3dadd( 22.9666, -299.154, -20.0704, 0.1 ) }
    dend_11 { pt3dadd( 23.0544, -299.632, -19.8126, 0.14 ) }
    dend_11 { pt3dadd( 23.1012, -299.893, -19.7161, 0.28 ) }
    // Section: dend_70, id: dend_70, parent: dend_66 (entry count 92/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -22.3015, 79.1248, -9.77369, 0.28 ) }
    dend_70 { pt3dadd( -22.2393, 78.7612, -9.61099, 0.28 ) }
    dend_70 { pt3dadd( -22.0747, 78.2151, -9.3684, 0.14 ) }
    dend_70 { pt3dadd( -21.8751, 77.7299, -9.17137, 0.1 ) }
    dend_70 { pt3dadd( -21.7557, 77.49, -9.08486, 0.1 ) }
    dend_70 { pt3dadd( -21.2858, 76.6095, -8.79631, 0.1 ) }
    dend_70 { pt3dadd( -21.0041, 76.0816, -8.6233, 0.1 ) }
    dend_70 { pt3dadd( -20.6866, 75.5756, -8.44667, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_70 { pt3dadd( -20.3304, 75.0882, -8.26759, 0.1 ) }
    dend_70 { pt3dadd( -19.9559, 74.618, -8.10437, 0.1 ) }
    dend_70 { pt3dadd( -19.7782, 74.4061, -8.05142, 0.1 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 3/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -22.3015, 79.1248, -9.77369, 0.1 ) }
    dend_67 { pt3dadd( -22.8763, 79.4927, -10.1844, 0.1 ) }
    dend_67 { pt3dadd( -23.1528, 79.6821, -10.3924, 0.1 ) }
    dend_67 { pt3dadd( -23.7219, 80.0762, -10.7864, 0.1 ) }
    dend_67 { pt3dadd( -24.49, 80.6287, -11.2927, 0.1 ) }
    dend_67 { pt3dadd( -24.9545, 80.976, -11.538, 0.1 ) }
    dend_67 { pt3dadd( -25.7663, 81.6091, -11.8411, 0.1 ) }
    dend_67 { pt3dadd( -26.2454, 82.0131, -11.9552, 0.1 ) }
    dend_67 { pt3dadd( -26.8347, 82.5358, -11.9468, 0.1 ) }
    dend_67 { pt3dadd( -27.0344, 82.7233, -11.8816, 0.1 ) }
    dend_67 { pt3dadd( -27.8281, 83.4703, -11.4343, 0.1 ) }
    dend_67 { pt3dadd( -28.526, 84.0986, -10.99, 0.1 ) }
    dend_67 { pt3dadd( -28.526, 84.0986, -10.99, 0.1 ) }
    dend_67 { pt3dadd( -29.0801, 84.5574, -10.6691, 0.1 ) }
    dend_67 { pt3dadd( -29.5512, 84.9317, -10.5079, 0.1 ) }
    dend_67 { pt3dadd( -29.8719, 85.1747, -10.4834, 0.1 ) }
    dend_67 { pt3dadd( -30.5094, 85.6267, -10.5826, 0.1 ) }
    dend_67 { pt3dadd( -30.8298, 85.8492, -10.6626, 0.1 ) }
    dend_67 { pt3dadd( -31.3281, 86.1961, -10.8016, 0.1 ) }
    dend_67 { pt3dadd( -32.1783, 86.7912, -11.0943, 0.1 ) }
    dend_67 { pt3dadd( -32.6653, 87.1238, -11.2947, 0.1 ) }
    dend_67 { pt3dadd( -33.143, 87.4586, -11.5317, 0.1 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 25/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 31.4567, -228.473, -5.73799, 0.84 ) }
    dend_32 { pt3dadd( 31.5927, -228.695, -5.6303, 0.84 ) }
    dend_32 { pt3dadd( 31.8661, -229.132, -5.43635, 0.98 ) }
    dend_32 { pt3dadd( 32.1422, -229.587, -5.2597, 0.84 ) }
    dend_32 { pt3dadd( 32.7529, -230.569, -5.01835, 0.7 ) }
    dend_32 { pt3dadd( 33.0687, -231.1, -4.939, 0.56 ) }
    dend_32 { pt3dadd( 33.38, -231.655, -4.89708, 0.42 ) }
    dend_32 { pt3dadd( 33.5069, -231.892, -4.90016, 0.56 ) }
    dend_32 { pt3dadd( 33.7538, -232.395, -4.95513, 0.7 ) }
    dend_32 { pt3dadd( 34.1775, -233.36, -5.15963, 0.56 ) }
    dend_32 { pt3dadd( 34.3123, -233.724, -5.247, 0.84 ) }
    dend_32 { pt3dadd( 34.4907, -234.254, -5.31834, 0.84 ) }
    dend_32 { pt3dadd( 34.6643, -234.786, -5.32201, 0.84 ) }
    dend_32 { pt3dadd( 34.8582, -235.309, -5.26182, 0.84 ) }
    dend_32 { pt3dadd( 34.8582, -235.309, -5.26182, 0.98 ) }
    dend_32 { pt3dadd( 35.2882, -236.212, -4.98073, 0.1 ) }
    dend_32 { pt3dadd( 35.5642, -236.753, -4.81445, 0.14 ) }
    dend_32 { pt3dadd( 35.8063, -237.229, -4.67953, 0.1 ) }
    dend_32 { pt3dadd( 36.0773, -237.783, -4.55075, 0.14 ) }
    dend_32 { pt3dadd( 36.3345, -238.351, -4.45876, 0.28 ) }
    dend_32 { pt3dadd( 36.44, -238.608, -4.43666, 0.42 ) }
    dend_32 { pt3dadd( 36.5825, -238.97, -4.43666, 0.84 ) }
    dend_32 { pt3dadd( 36.7744, -239.5, -4.43666, 0.84 ) }
    dend_32 { pt3dadd( 36.9592, -240.029, -4.43666, 0.84 ) }
    dend_32 { pt3dadd( 37.1324, -240.562, -4.43666, 0.7 ) }
    dend_32 { pt3dadd( 37.3177, -241.094, -4.43666, 0.56 ) }
    dend_32 { pt3dadd( 37.4622, -241.465, -4.43666, 0.56 ) }
    dend_32 { pt3dadd( 37.5711, -241.722, -4.43666, 0.84 ) }
    dend_32 { pt3dadd( 37.7994, -242.224, -4.48243, 0.84 ) }
    dend_32 { pt3dadd( 38.0363, -242.725, -4.56436, 0.7 ) }
    dend_32 { pt3dadd( 38.3099, -243.272, -4.68405, 0.84 ) }
    dend_32 { pt3dadd( 38.5577, -243.762, -4.80772, 0.7 ) }
    dend_32 { pt3dadd( 38.808, -244.247, -4.93627, 0.84 ) }
    dend_32 { pt3dadd( 39.3501, -245.261, -5.20806, 0.7 ) }
    dend_32 { pt3dadd( 39.4854, -245.501, -5.2519, 0.84 ) }
    dend_32 { pt3dadd( 39.7967, -246.046, -5.30034, 0.7 ) }
    dend_32 { pt3dadd( 40.0678, -246.537, -5.29648, 0.84 ) }
    dend_32 { pt3dadd( 40.3658, -247.089, -5.24113, 0.7 ) }
    dend_32 { pt3dadd( 40.619, -247.58, -5.14888, 0.56 ) }
    dend_32 { pt3dadd( 41.1246, -248.603, -4.85438, 0.7 ) }
    dend_32 { pt3dadd( 41.3611, -249.091, -4.70174, 0.84 ) }
    dend_32 { pt3dadd( 41.5829, -249.577, -4.53292, 0.98 ) }
    dend_32 { pt3dadd( 41.7999, -250.063, -4.34829, 0.84 ) }
    dend_32 { pt3dadd( 41.8971, -250.306, -4.25314, 0.84 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 69/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 31.4567, -228.473, -5.73799, 1.26 ) }
    dend_29 { pt3dadd( 31.2526, -229.062, -5.73799, 1.26 ) }
    dend_29 { pt3dadd( 31.0765, -229.668, -5.73799, 1.12 ) }
    dend_29 { pt3dadd( 30.9919, -230.048, -5.73799, 0.98 ) }
    dend_29 { pt3dadd( 30.8932, -230.67, -5.73799, 0.84 ) }
    dend_29 { pt3dadd( 30.8223, -231.288, -5.73799, 0.7 ) }
    dend_29 { pt3dadd( 30.7907, -231.684, -5.70959, 0.56 ) }
    dend_29 { pt3dadd( 30.799, -232.239, -5.63184, 0.1 ) }
    dend_29 { pt3dadd( 30.8607, -232.788, -5.52176, 0.1 ) }
    dend_29 { pt3dadd( 30.9675, -233.313, -5.39474, 0.1 ) }
    dend_29 { pt3dadd( 31.0476, -233.574, -5.32394, 0.1 ) }
    dend_29 { pt3dadd( 31.4086, -234.51, -5.05591, 0.1 ) }
    dend_29 { pt3dadd( 31.6089, -235.001, -4.87365, 0.1 ) }
    dend_29 { pt3dadd( 31.8251, -235.538, -4.64351, 0.1 ) }
    dend_29 { pt3dadd( 32.0025, -236.027, -4.42784, 0.1 ) }
    dend_29 { pt3dadd( 32.1808, -236.579, -4.20033, 0.1 ) }
    dend_29 { pt3dadd( 32.2484, -236.837, -4.11076, 0.1 ) }
    dend_29 { pt3dadd( 32.461, -237.859, -3.84675, 0.28 ) }
    dend_29 { pt3dadd( 32.5346, -238.389, -3.71781, 0.14 ) }
    dend_29 { pt3dadd( 32.5863, -239.003, -3.587, 0.28 ) }
    dend_29 { pt3dadd( 32.6198, -239.553, -3.48896, 0.42 ) }
    dend_29 { pt3dadd( 32.6488, -240.167, -3.40686, 0.56 ) }
    dend_29 { pt3dadd( 32.6978, -240.724, -3.36477, 0.42 ) }
    dend_29 { pt3dadd( 32.7985, -241.345, -3.36477, 0.28 ) }
    dend_29 { pt3dadd( 32.9334, -241.889, -3.36477, 0.14 ) }
    dend_29 { pt3dadd( 33.0307, -242.154, -3.36477, 0.28 ) }
    dend_29 { pt3dadd( 33.1405, -242.403, -3.36477, 0.98 ) }
    dend_29 { pt3dadd( 33.4167, -242.969, -3.36477, 0.84 ) }
    dend_29 { pt3dadd( 33.6925, -243.528, -3.36477, 0.7 ) }
    dend_29 { pt3dadd( 33.955, -244.1, -3.36477, 0.56 ) }
    dend_29 { pt3dadd( 34.0865, -244.467, -3.36477, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_29 { pt3dadd( 34.1815, -244.852, -3.33181, 0.1 ) }
    dend_29 { pt3dadd( 34.2549, -245.46, -3.23859, 0.14 ) }
    dend_29 { pt3dadd( 34.2584, -246.009, -3.12485, 0.28 ) }
    dend_29 { pt3dadd( 34.2207, -246.619, -2.97093, 0.42 ) }
    dend_29 { pt3dadd( 34.1497, -247.212, -2.79982, 0.28 ) }
    dend_29 { pt3dadd( 34.0159, -248.252, -2.55533, 0.14 ) }
    dend_29 { pt3dadd( 33.9653, -248.863, -2.45401, 0.1 ) }
    dend_29 { pt3dadd( 33.9653, -248.863, -2.45401, 0.14 ) }
    dend_29 { pt3dadd( 33.9718, -249.129, -2.37057, 0.14 ) }
    dend_29 { pt3dadd( 34.0138, -249.465, -2.17875, 0.14 ) }
    dend_29 { pt3dadd( 34.1859, -250.311, -1.42178, 0.28 ) }
    dend_29 { pt3dadd( 34.2715, -250.705, -1.03262, 0.28 ) }
    dend_29 { pt3dadd( 34.4296, -251.532, -0.254472, 0.42 ) }
    dend_29 { pt3dadd( 34.5619, -252.322, 0.407325, 0.56 ) }
    dend_29 { pt3dadd( 34.6935, -253.22, 1.10166, 0.42 ) }
    dend_29 { pt3dadd( 34.8198, -254.054, 1.70633, 0.28 ) }
    dend_29 { pt3dadd( 34.8922, -254.579, 2.04653, 0.14 ) }
    dend_29 { pt3dadd( 35.0373, -255.709, 2.34322, 0.1 ) }
    dend_29 { pt3dadd( 35.1479, -256.704, 2.06567, 0.14 ) }
    dend_29 { pt3dadd( 35.1772, -256.957, 1.94527, 0.56 ) }
    dend_29 { pt3dadd( 35.2376, -257.423, 1.63981, 0.42 ) }
    dend_29 { pt3dadd( 35.306, -257.875, 1.31091, 0.28 ) }
    dend_29 { pt3dadd( 35.3803, -258.331, 0.992974, 0.28 ) }
    dend_29 { pt3dadd( 35.5477, -259.334, 0.400713, 0.14 ) }
    dend_29 { pt3dadd( 35.6151, -259.828, 0.146197, 0.1 ) }
    dend_29 { pt3dadd( 35.7344, -260.85, -0.359693, 0.1 ) }
    dend_29 { pt3dadd( 35.7569, -261.111, -0.461856, 0.14 ) }
    dend_29 { pt3dadd( 35.7832, -261.497, -0.557381, 0.28 ) }
    dend_29 { pt3dadd( 35.8093, -262.046, -0.596407, 0.14 ) }
    dend_29 { pt3dadd( 35.8392, -262.672, -0.532176, 0.1 ) }
    dend_29 { pt3dadd( 35.8655, -263.223, -0.434413, 0.14 ) }
    dend_29 { pt3dadd( 35.9366, -264.365, -0.161682, 0.1 ) }
    dend_29 { pt3dadd( 35.9853, -264.91, -0.0393662, 0.1 ) }
    dend_29 { pt3dadd( 36.0624, -265.522, 0.0853584, 0.1 ) }
    dend_29 { pt3dadd( 36.1422, -266.059, 0.181075, 0.1 ) }
    dend_29 { pt3dadd( 36.2328, -266.609, 0.258177, 0.1 ) }
    dend_29 { pt3dadd( 36.3274, -267.16, 0.302504, 0.1 ) }
    dend_29 { pt3dadd( 36.422, -267.715, 0.302504, 0.1 ) }
    dend_29 { pt3dadd( 36.5097, -268.269, 0.302504, 0.1 ) }
    dend_29 { pt3dadd( 36.5477, -268.548, 0.302504, 0.14 ) }
    dend_29 { pt3dadd( 36.5885, -268.935, 0.302504, 0.1 ) }
    dend_29 { pt3dadd( 36.6257, -269.494, 0.302504, 0.14 ) }
    dend_29 { pt3dadd( 36.6562, -270.125, 0.302504, 0.1 ) }
    dend_29 { pt3dadd( 36.6826, -270.688, 0.302504, 0.1 ) }
    dend_29 { pt3dadd( 36.7213, -271.307, 0.25711, 0.1 ) }
    dend_29 { pt3dadd( 36.7687, -271.863, 0.185981, 0.1 ) }
    dend_29 { pt3dadd( 36.8291, -272.478, 0.119394, 0.1 ) }
    dend_29 { pt3dadd( 36.8873, -273.036, 0.0701393, 0.1 ) }
    dend_29 { pt3dadd( 36.9469, -273.593, 0.0347334, 0.1 ) }
    dend_29 { pt3dadd( 37.0659, -274.733, -0.00584193, 0.14 ) }
    dend_29 { pt3dadd( 37.0928, -275.011, -0.00725224, 0.28 ) }
    dend_29 { pt3dadd( 37.1592, -276.085, 0.0205027, 0.7 ) }
    dend_29 { pt3dadd( 37.1865, -276.637, 0.0508376, 0.56 ) }
    dend_29 { pt3dadd( 37.1955, -277.266, 0.101382, 0.42 ) }
    dend_29 { pt3dadd( 37.1967, -277.827, 0.158621, 0.28 ) }
    dend_29 { pt3dadd( 37.202, -278.444, 0.233265, 0.14 ) }
    dend_29 { pt3dadd( 37.219, -279.072, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 37.2519, -279.631, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 37.3033, -280.249, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 37.3731, -280.805, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 37.462, -281.359, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 37.5256, -281.633, 0.275463, 0.56 ) }
    dend_29 { pt3dadd( 37.6803, -282.174, 0.275463, 0.42 ) }
    dend_29 { pt3dadd( 37.8377, -282.702, 0.275463, 0.28 ) }
    dend_29 { pt3dadd( 37.9947, -283.24, 0.275463, 0.14 ) }
    dend_29 { pt3dadd( 38.1387, -283.785, 0.275463, 0.14 ) }
    dend_29 { pt3dadd( 38.2701, -284.394, 0.275463, 0.28 ) }
    dend_29 { pt3dadd( 38.3196, -284.671, 0.275463, 0.42 ) }
    dend_29 { pt3dadd( 38.3772, -285.065, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 38.4512, -285.682, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 38.5094, -286.242, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 38.5718, -286.871, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 38.6448, -287.429, 0.275463, 0.1 ) }
    dend_29 { pt3dadd( 38.696, -287.694, 0.275463, 0.14 ) }
    dend_29 { pt3dadd( 38.7677, -287.966, 0.275463, 0.56 ) }
    dend_29 { pt3dadd( 38.9364, -288.501, 0.322224, 0.42 ) }
    dend_29 { pt3dadd( 39.1151, -289.026, 0.404703, 0.28 ) }
    dend_29 { pt3dadd( 39.324, -289.601, 0.522987, 0.14 ) }
    dend_29 { pt3dadd( 39.5094, -290.119, 0.64338, 0.1 ) }
    dend_29 { pt3dadd( 39.6868, -290.625, 0.806694, 0.1 ) }
    dend_29 { pt3dadd( 40.0336, -291.645, 1.20167, 0.14 ) }
    dend_29 { pt3dadd( 40.1919, -292.129, 1.41083, 0.1 ) }
    dend_29 { pt3dadd( 40.3448, -292.624, 1.63237, 0.1 ) }
    dend_29 { pt3dadd( 40.4778, -293.124, 1.84858, 0.1 ) }
    dend_29 { pt3dadd( 40.7116, -294.066, 2.2173, 0.56 ) }
    dend_29 { pt3dadd( 40.8355, -294.597, 2.34907, 0.7 ) }
    dend_29 { pt3dadd( 40.9559, -295.14, 2.43543, 0.56 ) }
    dend_29 { pt3dadd( 41.0728, -295.683, 2.51032, 0.42 ) }
    dend_29 { pt3dadd( 41.2013, -296.286, 2.57134, 0.28 ) }
    dend_29 { pt3dadd( 41.308, -296.836, 2.5988, 0.14 ) }
    dend_29 { pt3dadd( 41.5155, -297.963, 2.58705, 0.28 ) }
    dend_29 { pt3dadd( 41.6773, -298.987, 2.51069, 0.7 ) }
    dend_29 { pt3dadd( 41.7558, -299.53, 2.44296, 0.56 ) }
    dend_29 { pt3dadd( 41.8342, -300.079, 2.3558, 0.42 ) }
    dend_29 { pt3dadd( 41.9268, -300.681, 2.19891, 0.28 ) }
    dend_29 { pt3dadd( 41.9972, -301.22, 2.06173, 0.14 ) }
    dend_29 { pt3dadd( 42.1103, -302.362, 1.79643, 0.1 ) }
    dend_29 { pt3dadd( 42.1458, -302.904, 1.64935, 0.1 ) }
    dend_29 { pt3dadd( 42.1675, -303.448, 1.51477, 0.1 ) }
    dend_29 { pt3dadd( 42.1938, -304.568, 1.26824, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_29 { pt3dadd( 42.1973, -305.626, 1.08867, 0.1 ) }
    dend_29 { pt3dadd( 42.1836, -306.256, 1.03645, 0.1 ) }
    dend_29 { pt3dadd( 42.1557, -306.874, 1.05995, 0.1 ) }
    dend_29 { pt3dadd( 42.1381, -307.152, 1.07588, 0.1 ) }
    dend_29 { pt3dadd( 42.1381, -307.152, 1.07588, 0.1 ) }
    dend_29 { pt3dadd( 42.1189, -307.548, 1.03831, 0.1 ) }
    dend_29 { pt3dadd( 42.1216, -308.098, 0.914112, 0.1 ) }
    dend_29 { pt3dadd( 42.1525, -308.699, 0.760802, 0.1 ) }
    dend_29 { pt3dadd( 42.1865, -309.243, 0.616857, 0.1 ) }
    dend_29 { pt3dadd( 42.2704, -310.386, 0.324561, 0.1 ) }
    dend_29 { pt3dadd( 42.3217, -310.929, 0.195205, 0.1 ) }
    dend_29 { pt3dadd( 42.3883, -311.466, 0.0779662, 0.1 ) }
    dend_29 { pt3dadd( 42.4666, -312.011, -0.0242063, 0.1 ) }
    dend_29 { pt3dadd( 42.5352, -312.4, -0.0786449, 0.1 ) }
    dend_29 { pt3dadd( 42.6438, -312.951, -0.120847, 0.1 ) }
    dend_29 { pt3dadd( 42.7785, -313.495, -0.120847, 0.1 ) }
    dend_29 { pt3dadd( 42.9134, -314.027, -0.081496, 0.1 ) }
    dend_29 { pt3dadd( 43.0552, -314.567, -0.00726563, 0.14 ) }
    dend_29 { pt3dadd( 43.2022, -315.099, 0.0919315, 0.28 ) }
    dend_29 { pt3dadd( 43.3572, -315.628, 0.207798, 0.28 ) }
    dend_29 { pt3dadd( 43.5136, -316.214, 0.348517, 0.42 ) }
    dend_29 { pt3dadd( 43.7628, -317.231, 0.598788, 0.56 ) }
    dend_29 { pt3dadd( 43.8819, -317.754, 0.722994, 0.42 ) }
    dend_29 { pt3dadd( 43.9973, -318.293, 0.838551, 0.28 ) }
    dend_29 { pt3dadd( 44.1074, -318.834, 0.937457, 0.14 ) }
    dend_29 { pt3dadd( 44.2012, -319.443, 1.06597, 0.1 ) }
    dend_29 { pt3dadd( 44.2518, -319.98, 1.17897, 0.1 ) }
    dend_29 { pt3dadd( 44.2786, -320.523, 1.32308, 0.1 ) }
    dend_29 { pt3dadd( 44.2651, -321.047, 1.52143, 0.14 ) }
    dend_29 { pt3dadd( 44.2408, -321.303, 1.63761, 0.28 ) }
    dend_29 { pt3dadd( 44.0755, -322.344, 2.16356, 0.1 ) }
    dend_29 { pt3dadd( 43.9675, -322.892, 2.45799, 0.1 ) }
    dend_29 { pt3dadd( 43.7507, -323.818, 2.96303, 0.1 ) }
    dend_29 { pt3dadd( 43.6224, -324.356, 3.24184, 0.1 ) }
    dend_29 { pt3dadd( 43.5114, -324.936, 3.46664, 0.1 ) }
    dend_29 { pt3dadd( 43.4788, -325.317, 3.53748, 0.1 ) }
    dend_29 { pt3dadd( 43.4971, -325.598, 3.52064, 0.14 ) }
    dend_29 { pt3dadd( 43.5429, -325.868, 3.47035, 0.56 ) }
    dend_29 { pt3dadd( 43.6717, -326.395, 3.3196, 0.42 ) }
    dend_29 { pt3dadd( 43.9799, -327.484, 2.99195, 0.28 ) }
    dend_29 { pt3dadd( 44.1252, -328.004, 2.84164, 0.14 ) }
    dend_29 { pt3dadd( 44.251, -328.536, 2.70692, 0.1 ) }
    dend_29 { pt3dadd( 44.3475, -329.066, 2.55108, 0.14 ) }
    dend_29 { pt3dadd( 44.3831, -329.333, 2.46792, 0.28 ) }
    dend_29 { pt3dadd( 44.4146, -329.705, 2.35608, 0.7 ) }
    dend_29 { pt3dadd( 44.4431, -330.316, 2.20271, 0.56 ) }
    dend_29 { pt3dadd( 44.4911, -330.895, 1.98583, 0.42 ) }
    dend_29 { pt3dadd( 44.6135, -331.835, 1.55953, 0.28 ) }
    dend_29 { pt3dadd( 44.659, -332.082, 1.43907, 0.1 ) }
    dend_29 { pt3dadd( 44.7779, -332.578, 1.20053, 0.1 ) }
    dend_29 { pt3dadd( 44.9358, -333.067, 0.977087, 0.1 ) }
    dend_29 { pt3dadd( 45.3202, -334.122, 0.606772, 0.1 ) }
    dend_29 { pt3dadd( 45.5058, -334.639, 0.499271, 0.1 ) }
    dend_29 { pt3dadd( 45.6684, -335.175, 0.473877, 0.1 ) }
    dend_29 { pt3dadd( 45.7943, -335.714, 0.488659, 0.1 ) }
    dend_29 { pt3dadd( 45.8986, -336.325, 0.55078, 0.14 ) }
    dend_29 { pt3dadd( 46.0229, -337.378, 0.73369, 0.1 ) }
    dend_29 { pt3dadd( 46.066, -337.988, 0.883816, 0.1 ) }
    dend_29 { pt3dadd( 46.1106, -338.592, 1.02503, 0.1 ) }
    dend_29 { pt3dadd( 46.1649, -339.207, 1.14972, 0.1 ) }
    dend_29 { pt3dadd( 46.2408, -339.756, 1.23335, 0.1 ) }
    dend_29 { pt3dadd( 46.294, -340.022, 1.25521, 0.1 ) }
    dend_29 { pt3dadd( 46.3785, -340.287, 1.23303, 0.1 ) }
    dend_29 { pt3dadd( 46.6254, -340.866, 1.13907, 0.1 ) }
    dend_29 { pt3dadd( 46.8621, -341.351, 1.0252, 0.1 ) }
    dend_29 { pt3dadd( 47.1409, -341.892, 0.866037, 0.1 ) }
    dend_29 { pt3dadd( 47.3771, -342.376, 0.709524, 0.1 ) }
    dend_29 { pt3dadd( 47.7966, -343.32, 0.406509, 0.1 ) }
    dend_29 { pt3dadd( 47.7966, -343.32, 0.406509, 0.14 ) }
    dend_29 { pt3dadd( 47.9189, -343.691, 0.308383, 0.28 ) }
    dend_29 { pt3dadd( 48.0747, -344.221, 0.19861, 0.28 ) }
    dend_29 { pt3dadd( 48.2144, -344.759, 0.124775, 0.14 ) }
    dend_29 { pt3dadd( 48.3529, -345.303, 0.0888089, 0.1 ) }
    dend_29 { pt3dadd( 48.4866, -345.838, 0.0888089, 0.1 ) }
    dend_29 { pt3dadd( 48.6207, -346.383, 0.127342, 0.1 ) }
    dend_29 { pt3dadd( 48.7446, -346.926, 0.19742, 0.1 ) }
    dend_29 { pt3dadd( 48.8514, -347.47, 0.294279, 0.1 ) }
    dend_29 { pt3dadd( 48.9335, -348.012, 0.409242, 0.1 ) }
    dend_29 { pt3dadd( 48.9977, -348.555, 0.534856, 0.1 ) }
    dend_29 { pt3dadd( 49.0998, -349.594, 0.781359, 0.1 ) }
    dend_29 { pt3dadd( 49.1545, -350.206, 0.921641, 0.1 ) }
    dend_29 { pt3dadd( 49.2049, -350.752, 1.03564, 0.1 ) }
    dend_29 { pt3dadd( 49.2587, -351.366, 1.09819, 0.1 ) }
    dend_29 { pt3dadd( 49.3135, -351.924, 1.094, 0.1 ) }
    dend_29 { pt3dadd( 49.3818, -352.48, 1.03192, 0.1 ) }
    dend_29 { pt3dadd( 49.4675, -353.022, 0.92091, 0.1 ) }
    dend_29 { pt3dadd( 49.5609, -353.542, 0.763886, 0.1 ) }
    dend_29 { pt3dadd( 49.7513, -354.654, 0.411006, 0.1 ) }
    dend_29 { pt3dadd( 49.8427, -355.18, 0.243504, 0.1 ) }
    dend_29 { pt3dadd( 49.9287, -355.714, 0.0853863, 0.1 ) }
    dend_29 { pt3dadd( 50.0132, -356.252, -0.049126, 0.1 ) }
    dend_29 { pt3dadd( 50.1506, -357.227, -0.220632, 0.1 ) }
    dend_29 { pt3dadd( 50.2976, -358.287, -0.304375, 0.1 ) }
    dend_29 { pt3dadd( 50.3818, -358.841, -0.288278, 0.1 ) }
    dend_29 { pt3dadd( 50.4533, -359.399, -0.264571, 0.1 ) }
    dend_29 { pt3dadd( 50.5078, -359.956, -0.235187, 0.1 ) }
    dend_29 { pt3dadd( 50.5617, -360.568, -0.149899, 0.1 ) }
    dend_29 { pt3dadd( 50.6135, -361.115, -0.0418655, 0.1 ) }
    dend_29 { pt3dadd( 50.6732, -361.667, 0.0523685, 0.1 ) }
    dend_29 { pt3dadd( 50.7402, -362.273, 0.174614, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_29 { pt3dadd( 50.8122, -362.883, 0.312175, 0.1 ) }
    dend_29 { pt3dadd( 50.9411, -363.99, 0.579777, 0.1 ) }
    dend_29 { pt3dadd( 51.0018, -364.534, 0.712665, 0.1 ) }
    dend_29 { pt3dadd( 51.0445, -365.07, 0.835042, 0.1 ) }
    dend_29 { pt3dadd( 51.0682, -365.621, 0.945821, 0.1 ) }
    dend_29 { pt3dadd( 51.0761, -365.899, 0.966704, 0.1 ) }
    dend_29 { pt3dadd( 51.0702, -366.297, 0.97343, 0.1 ) }
    dend_29 { pt3dadd( 51.0353, -366.915, 0.939258, 0.1 ) }
    dend_29 { pt3dadd( 50.9898, -367.545, 0.914259, 0.1 ) }
    dend_29 { pt3dadd( 50.9659, -367.941, 0.939649, 0.1 ) }
    dend_29 { pt3dadd( 50.9412, -369.07, 1.10921, 0.1 ) }
    dend_29 { pt3dadd( 50.9826, -370.098, 1.42476, 0.1 ) }
    dend_29 { pt3dadd( 51.0406, -370.615, 1.64259, 0.1 ) }
    dend_29 { pt3dadd( 51.1256, -371.11, 1.89098, 0.1 ) }
    dend_29 { pt3dadd( 51.3418, -372.1, 2.42637, 0.1 ) }
    dend_29 { pt3dadd( 51.4503, -372.574, 2.6903, 0.1 ) }
    dend_29 { pt3dadd( 51.6575, -373.561, 3.23588, 0.1 ) }
    dend_29 { pt3dadd( 51.7508, -374.071, 3.45584, 0.1 ) }
    dend_29 { pt3dadd( 51.8146, -374.593, 3.65008, 0.1 ) }
    dend_29 { pt3dadd( 51.843, -375.144, 3.76225, 0.14 ) }
    dend_29 { pt3dadd( 51.8315, -375.537, 3.79341, 0.1 ) }
    dend_29 { pt3dadd( 51.7789, -376.164, 3.81037, 0.1 ) }
    dend_29 { pt3dadd( 51.7096, -376.782, 3.78669, 0.1 ) }
    dend_29 { pt3dadd( 51.6648, -377.177, 3.7771, 0.1 ) }
    dend_29 { pt3dadd( 51.5622, -378.355, 3.76563, 0.1 ) }
    dend_29 { pt3dadd( 51.5251, -379.427, 3.77086, 0.1 ) }
    dend_29 { pt3dadd( 51.5555, -379.986, 3.73981, 0.1 ) }
    dend_29 { pt3dadd( 51.6201, -380.542, 3.72299, 0.1 ) }
    dend_29 { pt3dadd( 51.719, -381.097, 3.72245, 0.1 ) }
    dend_29 { pt3dadd( 51.831, -381.642, 3.78622, 0.1 ) }
    dend_29 { pt3dadd( 51.9482, -382.17, 3.90374, 0.1 ) }
    dend_29 { pt3dadd( 52.1579, -383.204, 4.11434, 0.1 ) }
    dend_29 { pt3dadd( 52.3486, -384.223, 4.38855, 0.28 ) }
    dend_29 { pt3dadd( 52.4415, -384.753, 4.55738, 0.28 ) }
    dend_29 { pt3dadd( 52.63, -385.855, 4.94131, 0.14 ) }
    dend_29 { pt3dadd( 52.7099, -386.384, 5.08467, 0.1 ) }
    dend_29 { pt3dadd( 52.7976, -386.999, 5.19556, 0.14 ) }
    dend_29 { pt3dadd( 52.8381, -387.277, 5.21981, 0.7 ) }
    dend_29 { pt3dadd( 52.9368, -387.819, 5.11557, 0.56 ) }
    dend_29 { pt3dadd( 53.0283, -388.343, 4.92981, 0.56 ) }
    dend_29 { pt3dadd( 53.1927, -389.397, 4.43177, 0.42 ) }
    dend_29 { pt3dadd( 53.2489, -389.901, 4.18795, 0.28 ) }
    dend_29 { pt3dadd( 53.2815, -390.407, 3.94833, 0.14 ) }
    dend_29 { pt3dadd( 53.2819, -391.461, 3.49469, 0.1 ) }
    dend_29 { pt3dadd( 53.2609, -391.833, 3.35431, 0.1 ) }
    dend_29 { pt3dadd( 53.1972, -392.427, 3.18153, 0.1 ) }
    dend_29 { pt3dadd( 53.1071, -393.041, 3.07449, 0.1 ) }
    dend_29 { pt3dadd( 53.0314, -393.425, 3.02528, 0.14 ) }
    dend_29 { pt3dadd( 52.896, -394.034, 2.93927, 0.1 ) }
    dend_29 { pt3dadd( 52.7562, -394.635, 2.86451, 0.1 ) }
    dend_29 { pt3dadd( 52.6086, -395.238, 2.75715, 0.14 ) }
    dend_29 { pt3dadd( 52.4483, -395.823, 2.62135, 0.14 ) }
    dend_29 { pt3dadd( 52.3303, -396.19, 2.52232, 0.28 ) }
    dend_29 { pt3dadd( 51.9923, -397.105, 2.165, 0.42 ) }
    dend_29 { pt3dadd( 51.9923, -397.105, 2.165, 0.56 ) }
    dend_29 { pt3dadd( 51.766, -397.622, 1.90082, 0.56 ) }
    dend_29 { pt3dadd( 51.6163, -397.952, 1.73493, 0.42 ) }
    dend_29 { pt3dadd( 51.3221, -398.619, 1.42543, 0.28 ) }
    dend_29 { pt3dadd( 50.9119, -399.548, 1.06775, 0.42 ) }
    dend_29 { pt3dadd( 50.6735, -400.099, 0.914136, 0.28 ) }
    dend_29 { pt3dadd( 50.4514, -400.661, 0.730815, 0.14 ) }
    dend_29 { pt3dadd( 50.3342, -401.02, 0.604835, 0.1 ) }
    dend_29 { pt3dadd( 50.2665, -401.279, 0.515453, 0.14 ) }
    dend_29 { pt3dadd( 50.1524, -401.861, 0.327412, 0.7 ) }
    dend_29 { pt3dadd( 50.0454, -402.454, 0.171078, 0.56 ) }
    dend_29 { pt3dadd( 49.8173, -403.571, -0.139387, 0.42 ) }
    dend_29 { pt3dadd( 49.6959, -404.098, -0.285083, 0.28 ) }
    dend_29 { pt3dadd( 49.5551, -404.613, -0.457109, 0.14 ) }
    dend_29 { pt3dadd( 49.4732, -404.866, -0.549441, 0.28 ) }
    dend_29 { pt3dadd( 49.2796, -405.421, -0.753634, 0.28 ) }
    dend_29 { pt3dadd( 49.0531, -405.97, -0.942995, 0.14 ) }
    dend_29 { pt3dadd( 48.892, -406.32, -1.04168, 0.1 ) }
    dend_29 { pt3dadd( 48.324, -407.42, -1.35337, 0.1 ) }
    dend_29 { pt3dadd( 48.1433, -407.763, -1.44464, 0.1 ) }
    dend_29 { pt3dadd( 47.8762, -408.306, -1.57608, 0.1 ) }
    dend_29 { pt3dadd( 47.7187, -408.669, -1.65473, 0.1 ) }
    dend_29 { pt3dadd( 47.4914, -409.247, -1.75869, 0.1 ) }
    dend_29 { pt3dadd( 47.2734, -409.827, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 47.0691, -410.414, -1.82454, 0.14 ) }
    dend_29 { pt3dadd( 46.9822, -410.682, -1.82454, 0.28 ) }
    dend_29 { pt3dadd( 46.9822, -410.682, -1.82454, 0.84 ) }
    dend_29 { pt3dadd( 46.9822, -410.682, -1.82454, 0.84 ) }
    dend_29 { pt3dadd( 46.8963, -411.071, -1.82454, 0.28 ) }
    dend_29 { pt3dadd( 46.784, -411.692, -1.82454, 0.14 ) }
    dend_29 { pt3dadd( 46.6751, -412.302, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 46.5506, -412.921, -1.82454, 0.14 ) }
    dend_29 { pt3dadd( 46.4189, -413.527, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 46.3542, -413.801, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 46.1912, -414.411, -1.82454, 0.14 ) }
    dend_29 { pt3dadd( 46.0065, -415.003, -1.82454, 0.28 ) }
    dend_29 { pt3dadd( 45.7337, -415.747, -1.82454, 0.14 ) }
    dend_29 { pt3dadd( 45.5804, -416.115, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 45.4173, -416.478, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 45.0796, -417.19, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 44.9061, -417.553, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 44.5798, -418.27, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 44.4292, -418.639, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 44.2088, -419.22, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 44.0793, -419.597, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 43.8924, -420.188, -1.82454, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_29 { pt3dadd( 43.7143, -420.794, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 43.5521, -421.392, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 43.4509, -421.782, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 43.2969, -422.393, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 43.2083, -422.772, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 43.0717, -423.389, -1.82454, 0.1 ) }
    dend_29 { pt3dadd( 42.9462, -423.996, -1.82454, 0.14 ) }
    dend_29 { pt3dadd( 42.8281, -424.614, -1.87034, 0.1 ) }
    dend_29 { pt3dadd( 42.7465, -425.224, -1.94648, 0.1 ) }
    dend_29 { pt3dadd( 42.7166, -425.501, -1.98777, 0.1 ) }
    dend_29 { pt3dadd( 42.6551, -426.122, -2.08806, 0.1 ) }
    dend_29 { pt3dadd( 42.5954, -426.73, -2.19042, 0.1 ) }
    dend_29 { pt3dadd( 42.4738, -427.89, -2.38815, 0.1 ) }
    dend_29 { pt3dadd( 42.2157, -430.156, -2.76447, 0.1 ) }
    dend_29 { pt3dadd( 42.1279, -430.761, -2.86079, 0.1 ) }
    dend_29 { pt3dadd( 42.0521, -431.153, -2.9174, 0.1 ) }
    dend_29 { pt3dadd( 41.8982, -431.749, -2.98954, 0.1 ) }
    dend_29 { pt3dadd( 41.7641, -432.123, -3.0187, 0.14 ) }
    dend_29 { pt3dadd( 41.4809, -432.686, -3.05746, 0.14 ) }
    dend_29 { pt3dadd( 41.1571, -433.137, -3.13368, 0.28 ) }
    dend_29 { pt3dadd( 40.778, -433.622, -3.2323, 0.14 ) }
    dend_29 { pt3dadd( 40.3811, -434.097, -3.34806, 0.1 ) }
    dend_29 { pt3dadd( 39.9696, -434.544, -3.48404, 0.1 ) }
    dend_29 { pt3dadd( 39.2483, -435.293, -3.76372, 0.1 ) }
    dend_29 { pt3dadd( 39.0592, -435.48, -3.85499, 0.1 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 25/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -33.143, 87.4586, -11.5317, 0.14 ) }
    dend_69 { pt3dadd( -33.7817, 87.9717, -10.685, 0.14 ) }
    dend_69 { pt3dadd( -34.085, 88.2091, -10.1955, 0.1 ) }
    dend_69 { pt3dadd( -34.2856, 88.3705, -9.88526, 0.14 ) }
    dend_69 { pt3dadd( -34.6113, 88.6428, -9.42945, 0.28 ) }
    dend_69 { pt3dadd( -35.2049, 89.1568, -8.69322, 0.14 ) }
    dend_69 { pt3dadd( -36.3836, 90.211, -7.40557, 0.1 ) }
    dend_69 { pt3dadd( -36.3836, 90.211, -7.40557, 0.14 ) }
    dend_69 { pt3dadd( -36.7511, 90.5455, -7.03006, 0.28 ) }
    dend_69 { pt3dadd( -37.1504, 90.9098, -6.72047, 0.14 ) }
    dend_69 { pt3dadd( -37.62, 91.3085, -6.58984, 0.1 ) }
    dend_69 { pt3dadd( -38.0743, 91.6233, -6.8928, 0.1 ) }
    dend_69 { pt3dadd( -38.3064, 91.7465, -7.19208, 0.1 ) }
    dend_69 { pt3dadd( -38.5872, 91.8485, -7.73866, 0.14 ) }
    dend_69 { pt3dadd( -39.0378, 91.9474, -8.6695, 0.1 ) }
    dend_69 { pt3dadd( -39.5247, 91.9875, -9.70653, 0.1 ) }
    dend_69 { pt3dadd( -40.3275, 91.9707, -11.5598, 0.1 ) }
    dend_69 { pt3dadd( -40.6922, 91.9304, -12.5317, 0.1 ) }
    dend_69 { pt3dadd( -41.2489, 91.8414, -14.4694, 0.1 ) }
    dend_69 { pt3dadd( -41.4382, 91.8327, -16.5385, 0.1 ) }
    dend_69 { pt3dadd( -41.8256, 91.6514, -15.5488, 0.1 ) }
    dend_69 { pt3dadd( -42.9506, 91.1737, -13.8726, 0.14 ) }
    dend_69 { pt3dadd( -43.1101, 91.1075, -13.6536, 0.28 ) }
    dend_69 { pt3dadd( -43.4573, 90.9763, -13.1549, 0.84 ) }
    dend_69 { pt3dadd( -43.7625, 90.8786, -12.6917, 0.7 ) }
    dend_69 { pt3dadd( -44.2603, 90.851, -12.4357, 0.56 ) }
    dend_69 { pt3dadd( -45.2117, 91.2165, -12.6368, 0.42 ) }
    dend_69 { pt3dadd( -45.4227, 91.353, -12.764, 0.28 ) }
    dend_69 { pt3dadd( -45.8512, 91.7397, -12.998, 0.1 ) }
    dend_69 { pt3dadd( -46.1892, 92.1783, -13.1011, 0.1 ) }
    dend_69 { pt3dadd( -46.4998, 92.7087, -13.0003, 0.1 ) }
    dend_69 { pt3dadd( -46.721, 93.1488, -12.7328, 0.1 ) }
    dend_69 { pt3dadd( -47.0807, 93.8038, -12.0683, 0.14 ) }
    dend_69 { pt3dadd( -47.5319, 94.4899, -11.2185, 0.56 ) }
    dend_69 { pt3dadd( -47.9645, 95.0593, -10.3226, 0.42 ) }
    dend_69 { pt3dadd( -48.424, 95.5613, -9.40418, 0.28 ) }
    dend_69 { pt3dadd( -48.8771, 95.9742, -8.56635, 0.42 ) }
    dend_69 { pt3dadd( -49.4521, 96.3955, -7.62254, 0.56 ) }
    dend_69 { pt3dadd( -49.8809, 96.6468, -7.01142, 0.42 ) }
    dend_69 { pt3dadd( -50.5971, 96.9586, -6.27084, 0.56 ) }
    dend_69 { pt3dadd( -51.1083, 97.1006, -5.94678, 0.7 ) }
    dend_69 { pt3dadd( -51.7055, 97.1909, -5.76878, 0.84 ) }
    dend_69 { pt3dadd( -52.2649, 97.2225, -5.7813, 0.7 ) }
    dend_69 { pt3dadd( -52.8104, 97.2066, -5.92032, 0.84 ) }
    dend_69 { pt3dadd( -53.7804, 97.0968, -6.37065, 0.7 ) }
    dend_69 { pt3dadd( -54.2588, 97.0187, -6.65733, 0.56 ) }
    dend_69 { pt3dadd( -54.701, 96.918, -6.98665, 0.42 ) }
    dend_69 { pt3dadd( -55.5735, 96.6966, -7.69865, 0.28 ) }
    dend_69 { pt3dadd( -55.9866, 96.5867, -8.06111, 0.14 ) }
    dend_69 { pt3dadd( -56.8102, 96.348, -8.8168, 0.1 ) }
    dend_69 { pt3dadd( -57.2153, 96.2109, -9.17906, 0.1 ) }
    dend_69 { pt3dadd( -57.9448, 95.954, -9.92769, 0.14 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 77/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -33.143, 87.4586, -11.5317, 0.1 ) }
    dend_68 { pt3dadd( -32.4049, 87.563, -9.65457, 0.1 ) }
    dend_68 { pt3dadd( -31.9296, 87.6187, -8.61286, 0.1 ) }
    dend_68 { pt3dadd( -31.4535, 87.6577, -7.69035, 0.1 ) }
    dend_68 { pt3dadd( -30.3982, 87.6792, -5.87859, 0.1 ) }
    dend_68 { pt3dadd( -30.0976, 87.6694, -5.41712, 0.1 ) }
    dend_68 { pt3dadd( -29.9288, 87.6534, -5.19225, 0.1 ) }
    dend_68 { pt3dadd( -29.4527, 87.5592, -4.78826, 0.1 ) }
    dend_68 { pt3dadd( -29.1211, 87.4596, -4.60988, 0.28 ) }
    dend_68 { pt3dadd( -28.5484, 87.2353, -4.47495, 0.14 ) }
    dend_68 { pt3dadd( -28.2005, 87.0602, -4.47495, 0.1 ) }
    dend_68 { pt3dadd( -27.514, 86.647, -4.47495, 0.1 ) }
    dend_68 { pt3dadd( -27.514, 86.647, -4.47495, 0.14 ) }
    dend_68 { pt3dadd( -27.514, 86.647, -4.47495, 0.28 ) }
    dend_68 { pt3dadd( -27.1955, 86.4227, -4.47495, 0.14 ) }
    dend_68 { pt3dadd( -26.6647, 86.0839, -4.47495, 0.1 ) }
    dend_68 { pt3dadd( -26.3285, 85.8909, -4.51198, 0.1 ) }
    dend_68 { pt3dadd( -25.7686, 85.6211, -4.61352, 0.1 ) }
    dend_68 { pt3dadd( -25.2176, 85.3898, -4.78493, 0.1 ) }
    dend_68 { pt3dadd( -24.6561, 85.1702, -4.96662, 0.1 ) }
    dend_68 { pt3dadd( -24.1532, 84.981, -5.09984, 0.1 ) }
    dend_68 { pt3dadd( -23.0597, 84.5529, -5.24029, 0.1 ) }
    dend_68 { pt3dadd( -22.5542, 84.3133, -5.20526, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_68 { pt3dadd( -21.6563, 83.7941, -4.92964, 0.1 ) }
    dend_68 { pt3dadd( -20.8894, 83.2262, -4.51909, 0.1 ) }
    dend_68 { pt3dadd( -20.063, 82.5305, -4.04009, 0.1 ) }
    dend_68 { pt3dadd( -19.3052, 81.7953, -3.59364, 0.1 ) }
    dend_68 { pt3dadd( -18.8979, 81.3713, -3.38767, 0.1 ) }
    dend_68 { pt3dadd( -18.6326, 81.0939, -3.28184, 0.1 ) }
    dend_68 { pt3dadd( -18.1795, 80.6808, -3.17176, 0.1 ) }
    dend_68 { pt3dadd( -17.3016, 80.058, -3.16513, 0.1 ) }
    dend_68 { pt3dadd( -16.7477, 79.7784, -3.2203, 0.1 ) }
    dend_68 { pt3dadd( -15.7107, 79.4888, -3.16409, 0.1 ) }
    dend_68 { pt3dadd( -14.7239, 79.3619, -2.86492, 0.1 ) }
    dend_68 { pt3dadd( -14.2105, 79.326, -2.63621, 0.1 ) }
    dend_68 { pt3dadd( -13.2003, 79.2895, -2.10552, 0.1 ) }
    dend_68 { pt3dadd( -12.7103, 79.2725, -1.82849, 0.1 ) }
    dend_68 { pt3dadd( -11.706, 79.2295, -1.27742, 0.1 ) }
    dend_68 { pt3dadd( -11.0091, 79.1699, -0.9151, 0.1 ) }
    dend_68 { pt3dadd( -10.6445, 79.1179, -0.751271, 0.1 ) }
    dend_68 { pt3dadd( -10.0727, 79.0149, -0.508453, 0.1 ) }
    dend_68 { pt3dadd( -9.49549, 78.8953, -0.310783, 0.1 ) }
    dend_68 { pt3dadd( -9.12222, 78.8225, -0.192613, 0.14 ) }
    dend_68 { pt3dadd( -8.74821, 78.7698, -0.0974972, 0.28 ) }
    dend_68 { pt3dadd( -7.74764, 78.6923, 0.1711, 0.28 ) }
    dend_68 { pt3dadd( -7.20742, 78.6707, 0.318757, 0.14 ) }
    dend_68 { pt3dadd( -6.59957, 78.6693, 0.483114, 0.1 ) }
    dend_68 { pt3dadd( -6.05487, 78.6938, 0.612799, 0.1 ) }
    dend_68 { pt3dadd( -5.51208, 78.7449, 0.709037, 0.1 ) }
    dend_68 { pt3dadd( -5.11432, 78.7977, 0.747524, 0.14 ) }
    dend_68 { pt3dadd( -5.11432, 78.7977, 0.747524, 0.28 ) }
    dend_68 { pt3dadd( -4.83437, 78.8284, 0.747524, 0.28 ) }
    dend_68 { pt3dadd( -4.27752, 78.8917, 0.747524, 0.28 ) }
    dend_68 { pt3dadd( -3.71637, 78.9398, 0.747524, 0.14 ) }
    dend_68 { pt3dadd( -3.16747, 78.9858, 0.747524, 0.1 ) }
    dend_68 { pt3dadd( -2.54049, 79.044, 0.747524, 0.1 ) }
    dend_68 { pt3dadd( -1.911, 79.0944, 0.747524, 0.1 ) }
    dend_68 { pt3dadd( -1.3582, 79.1248, 0.747524, 0.1 ) }
    dend_68 { pt3dadd( -0.726784, 79.1349, 0.747524, 0.14 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 41.8971, -250.306, -4.25314, 0.84 ) }
    dend_34 { pt3dadd( 41.7973, -251.208, -3.68043, 0.84 ) }
    dend_34 { pt3dadd( 41.7096, -252.22, -3.14535, 0.84 ) }
    dend_34 { pt3dadd( 41.6995, -252.798, -2.89198, 0.98 ) }
    dend_34 { pt3dadd( 41.7238, -253.381, -2.68302, 0.84 ) }
    dend_34 { pt3dadd( 41.764, -253.764, -2.56491, 0.7 ) }
    dend_34 { pt3dadd( 41.8402, -254.302, -2.4146, 0.7 ) }
    dend_34 { pt3dadd( 41.8999, -254.567, -2.40676, 0.56 ) }
    dend_34 { pt3dadd( 42.0767, -255.149, -2.57181, 0.56 ) }
    dend_34 { pt3dadd( 42.2321, -255.531, -2.93739, 0.7 ) }
    dend_34 { pt3dadd( 42.3442, -255.775, -3.23779, 0.84 ) }
    dend_34 { pt3dadd( 42.3442, -255.775, -3.23779, 0.98 ) }
    dend_34 { pt3dadd( 42.6305, -256.414, -4.00516, 1.12 ) }
    dend_34 { pt3dadd( 42.9045, -257.081, -4.74841, 0.98 ) }
    dend_34 { pt3dadd( 43.3669, -258.387, -6.29755, 0.84 ) }
    dend_34 { pt3dadd( 43.5121, -259.217, -5.69018, 0.84 ) }
    dend_34 { pt3dadd( 43.6082, -260.142, -5.0207, 0.7 ) }
    dend_34 { pt3dadd( 43.6828, -261.073, -4.35611, 0.56 ) }
    dend_34 { pt3dadd( 43.6975, -261.297, -4.18527, 0.42 ) }
    dend_34 { pt3dadd( 43.7428, -262.126, -3.50588, 0.1 ) }
    dend_34 { pt3dadd( 43.765, -262.622, -3.1176, 0.14 ) }
    dend_34 { pt3dadd( 43.7927, -263.204, -2.87461, 0.28 ) }
    dend_34 { pt3dadd( 43.8267, -263.753, -2.86123, 0.42 ) }
    dend_34 { pt3dadd( 43.8534, -264.022, -2.94045, 0.56 ) }
    dend_34 { pt3dadd( 43.8912, -264.275, -3.05977, 0.84 ) }
    dend_34 { pt3dadd( 44.0845, -265.19, -3.72168, 0.84 ) }
    dend_34 { pt3dadd( 44.1933, -265.61, -4.08165, 0.84 ) }
    dend_34 { pt3dadd( 44.3988, -266.324, -4.75039, 0.84 ) }
    dend_34 { pt3dadd( 44.4542, -266.517, -4.94798, 0.84 ) }
    dend_34 { pt3dadd( 44.5616, -266.891, -5.35108, 0.84 ) }
    dend_34 { pt3dadd( 44.78, -267.654, -6.1722, 0.7 ) }
    dend_34 { pt3dadd( 44.8381, -267.856, -6.35888, 0.56 ) }
    dend_34 { pt3dadd( 45.0789, -268.702, -7.0947, 0.56 ) }
    dend_34 { pt3dadd( 45.1757, -269.145, -7.41245, 0.7 ) }
    dend_34 { pt3dadd( 45.2536, -269.596, -7.73591, 0.84 ) }
    dend_34 { pt3dadd( 45.2536, -269.596, -7.73591, 0.84 ) }
    dend_34 { pt3dadd( 45.296, -269.846, -7.85707, 0.98 ) }
    dend_34 { pt3dadd( 45.3807, -270.331, -8.12516, 1.12 ) }
    dend_34 { pt3dadd( 45.5549, -271.354, -8.68195, 0.98 ) }
    dend_34 { pt3dadd( 45.6405, -271.846, -8.94287, 0.84 ) }
    dend_34 { pt3dadd( 45.7278, -272.337, -9.1978, 0.84 ) }
    dend_34 { pt3dadd( 45.8151, -272.828, -9.46, 0.7 ) }
    dend_34 { pt3dadd( 45.9744, -273.719, -9.96737, 0.56 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 79/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 41.8971, -250.306, -4.25314, 1.26 ) }
    dend_33 { pt3dadd( 42.1822, -250.405, -4.51304, 1.26 ) }
    dend_33 { pt3dadd( 43.0284, -250.697, -5.28427, 1.4 ) }
    dend_33 { pt3dadd( 43.3074, -250.794, -5.53846, 1.26 ) }
    dend_33 { pt3dadd( 44.1543, -251.087, -6.31033, 1.12 ) }
    dend_33 { pt3dadd( 44.4332, -251.183, -6.56452, 0.7 ) }
    dend_33 { pt3dadd( 44.7183, -251.282, -6.82442, 0.84 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 86/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 39.0592, -435.48, -3.85499, 0.1 ) }
    dend_31 { pt3dadd( 38.5313, -434.598, -3.2725, 0.1 ) }
    dend_31 { pt3dadd( 37.9885, -433.63, -2.86596, 0.1 ) }
    dend_31 { pt3dadd( 37.7343, -433.176, -2.67556, 0.1 ) }
    dend_31 { pt3dadd( 37.4448, -432.66, -2.45878, 0.1 ) }
    dend_31 { pt3dadd( 37.1918, -432.209, -2.26934, 0.1 ) }
    dend_31 { pt3dadd( 36.9332, -431.747, -2.07564, 0.1 ) }
    dend_31 { pt3dadd( 36.479, -430.814, -2.0386, 0.1 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 94/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 39.0592, -435.48, -3.85499, 0.1 ) }
    dend_30 { pt3dadd( 38.8683, -436.031, -4.09523, 0.1 ) }
    dend_30 { pt3dadd( 38.682, -436.597, -4.29833, 0.1 ) }
    dend_30 { pt3dadd( 38.3774, -437.584, -4.58793, 0.1 ) }
    dend_30 { pt3dadd( 38.1834, -438.168, -4.73256, 0.1 ) }
    dend_30 { pt3dadd( 37.9885, -438.744, -4.85314, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_30 { pt3dadd( 37.8675, -439.111, -4.94793, 0.1 ) }
    dend_30 { pt3dadd( 37.6895, -439.685, -5.10607, 0.1 ) }
    dend_30 { pt3dadd( 37.5077, -440.268, -5.26001, 0.1 ) }
    dend_30 { pt3dadd( 37.3317, -440.852, -5.38763, 0.1 ) }
    dend_30 { pt3dadd( 37.155, -441.45, -5.48573, 0.1 ) }
    dend_30 { pt3dadd( 36.8654, -442.442, -5.59362, 0.1 ) }
    dend_30 { pt3dadd( 36.7612, -442.817, -5.6116, 0.1 ) }
    dend_30 { pt3dadd( 36.5927, -443.423, -5.55218, 0.1 ) }
    dend_30 { pt3dadd( 36.4218, -444.013, -5.41406, 0.1 ) }
    dend_30 { pt3dadd( 36.1121, -445.091, -5.05672, 0.14 ) }
    dend_30 { pt3dadd( 36.0072, -445.447, -4.91107, 0.28 ) }
    dend_30 { pt3dadd( 35.8547, -445.994, -4.65895, 0.14 ) }
    dend_30 { pt3dadd( 35.6168, -446.952, -4.22934, 0.1 ) }
    dend_30 { pt3dadd( 35.4268, -447.669, -3.96345, 0.1 ) }
    dend_30 { pt3dadd( 35.2775, -448.261, -3.80507, 0.1 ) }
    dend_30 { pt3dadd( 35.2204, -448.533, -3.75862, 0.14 ) }
    dend_30 { pt3dadd( 35.1293, -449.076, -3.69803, 0.28 ) }
    dend_30 { pt3dadd( 35.0886, -449.351, -3.67535, 0.42 ) }
    dend_30 { pt3dadd( 34.8798, -451.014, -3.57906, 0.83 ) }
    dend_30 { pt3dadd( 34.6825, -453.18, -3.43042, 0.28 ) }
    dend_30 { pt3dadd( 34.5965, -454.579, -3.32803, 0.55 ) }
    dend_30 { pt3dadd( 34.4053, -458.166, -3.03375, 0.55 ) }
    dend_30 { pt3dadd( 34.3488, -459.652, -2.88746, 0.28 ) }
    dend_30 { pt3dadd( 34.3352, -461.059, -2.73634, 0.55 ) }
    dend_30 { pt3dadd( 34.3812, -463.062, -2.55248, 0.28 ) }
    dend_30 { pt3dadd( 34.4591, -464.44, -2.45642, 0.55 ) }
    dend_30 { pt3dadd( 34.5622, -465.657, -2.40508, 0.28 ) }
    dend_30 { pt3dadd( 34.7767, -467.448, -2.37303, 0.55 ) }
    dend_30 { pt3dadd( 35.0468, -469.649, -2.35715, 0.55 ) }
    dend_30 { pt3dadd( 35.2495, -471.627, -2.36299, 0.28 ) }
    dend_30 { pt3dadd( 35.4772, -473.855, -2.4133, 0.55 ) }
    dend_30 { pt3dadd( 35.6715, -475.882, -2.47626, 0.28 ) }
    dend_30 { pt3dadd( 35.8617, -478.111, -2.56598, 0.55 ) }
    dend_30 { pt3dadd( 35.9155, -479.258, -2.61487, 0.28 ) }
    dend_30 { pt3dadd( 35.8654, -481.728, -2.66464, 0.55 ) }
    dend_30 { pt3dadd( 35.7137, -483.256, -2.62731, 0.28 ) }
    dend_30 { pt3dadd( 35.4723, -484.609, -2.62373, 0.55 ) }
    dend_30 { pt3dadd( 35.1637, -485.749, -2.6322, 0.28 ) }
    dend_30 { pt3dadd( 34.8668, -486.71, -2.65538, 0.55 ) }
    dend_30 { pt3dadd( 34.4204, -488.062, -2.7088, 0.28 ) }
    dend_30 { pt3dadd( 33.2918, -491.126, -2.83219, 0.55 ) }
    dend_30 { pt3dadd( 31.7797, -494.88, -2.97121, 0.55 ) }
    dend_30 { pt3dadd( 30.9732, -496.975, -3.06864, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 43/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 45.9744, -273.719, -9.96737, 0.7 ) }
    dend_36 { pt3dadd( 45.7452, -274.299, -9.96737, 0.7 ) }
    dend_36 { pt3dadd( 45.612, -274.674, -9.96737, 0.84 ) }
    dend_36 { pt3dadd( 45.3977, -275.432, -9.96737, 0.7 ) }
    dend_36 { pt3dadd( 45.3127, -275.809, -10.0128, 0.56 ) }
    dend_36 { pt3dadd( 45.216, -276.352, -10.1153, 0.7 ) }
    dend_36 { pt3dadd( 45.1822, -276.625, -10.1765, 0.56 ) }
    dend_36 { pt3dadd( 45.1835, -277.009, -10.2813, 0.56 ) }
    dend_36 { pt3dadd( 45.2375, -277.526, -10.491, 0.56 ) }
    dend_36 { pt3dadd( 45.4043, -278.438, -10.9596, 0.7 ) }
    dend_36 { pt3dadd( 45.4508, -278.676, -11.0764, 0.84 ) }
    dend_36 { pt3dadd( 45.5353, -279.186, -11.2988, 0.7 ) }
    dend_36 { pt3dadd( 45.6139, -279.712, -11.4779, 0.56 ) }
    dend_36 { pt3dadd( 45.7487, -280.824, -11.7248, 0.42 ) }
    dend_36 { pt3dadd( 45.7487, -280.824, -11.7248, 0.56 ) }
    dend_36 { pt3dadd( 45.8205, -281.898, -11.6903, 0.56 ) }
    dend_36 { pt3dadd( 45.8431, -282.512, -11.5967, 0.7 ) }
    dend_36 { pt3dadd( 45.8425, -283.055, -11.4597, 0.56 ) }
    dend_36 { pt3dadd( 45.8367, -283.655, -11.2681, 0.7 ) }
    dend_36 { pt3dadd( 45.8277, -284.174, -11.0834, 0.84 ) }
    dend_36 { pt3dadd( 45.8176, -284.713, -10.9214, 0.84 ) }
    dend_36 { pt3dadd( 45.8129, -285.762, -10.68, 0.84 ) }
    dend_36 { pt3dadd( 45.8172, -286.369, -10.5442, 0.7 ) }
    dend_36 { pt3dadd( 45.8266, -286.921, -10.4316, 0.56 ) }
    dend_36 { pt3dadd( 45.8543, -287.543, -10.3252, 0.56 ) }
    dend_36 { pt3dadd( 45.8963, -288.156, -10.2484, 0.56 ) }
    dend_36 { pt3dadd( 45.9553, -288.712, -10.211, 0.56 ) }
    dend_36 { pt3dadd( 46.043, -289.267, -10.1724, 0.7 ) }
    dend_36 { pt3dadd( 46.1394, -289.808, -10.0622, 0.84 ) }
    dend_36 { pt3dadd( 46.2387, -290.333, -9.89377, 0.7 ) }
    dend_36 { pt3dadd( 46.3342, -290.837, -9.68429, 0.56 ) }
    dend_36 { pt3dadd( 46.4243, -291.335, -9.44365, 0.56 ) }
    dend_36 { pt3dadd( 46.5649, -292.347, -8.92178, 0.42 ) }
    dend_36 { pt3dadd( 46.668, -293.299, -8.42837, 0.56 ) }
    dend_36 { pt3dadd( 46.7033, -293.801, -8.1829, 0.7 ) }
    dend_36 { pt3dadd( 46.7132, -294.16, -8.03093, 0.56 ) }
    dend_36 { pt3dadd( 46.7051, -294.692, -7.85741, 0.42 ) }
    dend_36 { pt3dadd( 46.6701, -295.308, -7.72988, 0.56 ) }
    dend_36 { pt3dadd( 46.621, -295.857, -7.73362, 0.7 ) }
    dend_36 { pt3dadd( 46.5539, -296.477, -7.81483, 0.56 ) }
    dend_36 { pt3dadd( 46.4693, -297.084, -7.9197, 0.56 ) }
    dend_36 { pt3dadd( 46.3802, -297.695, -8.04378, 0.56 ) }
    dend_36 { pt3dadd( 46.3191, -298.079, -8.13217, 0.7 ) }
    dend_36 { pt3dadd( 46.1429, -299.222, -8.35373, 0.56 ) }
    dend_36 { pt3dadd( 46.0589, -299.84, -8.44115, 0.7 ) }
    dend_36 { pt3dadd( 46.0245, -300.46, -8.43401, 0.56 ) }
    dend_36 { pt3dadd( 46.0393, -300.736, -8.37789, 0.7 ) }
    dend_36 { pt3dadd( 46.0886, -300.995, -8.27985, 0.7 ) }
    dend_36 { pt3dadd( 46.3773, -301.889, -7.83793, 0.56 ) }
    dend_36 { pt3dadd( 46.5699, -302.348, -7.57384, 0.56 ) }
    dend_36 { pt3dadd( 47.0459, -303.322, -7.1136, 0.42 ) }
    dend_36 { pt3dadd( 47.293, -303.799, -6.95295, 0.56 ) }
    dend_36 { pt3dadd( 47.576, -304.351, -6.84337, 0.56 ) }
    dend_36 { pt3dadd( 47.836, -304.916, -6.81299, 0.56 ) }
    dend_36 { pt3dadd( 48.0374, -305.439, -6.86922, 0.42 ) }
    dend_36 { pt3dadd( 48.337, -306.525, -7.07958, 0.56 ) }
    dend_36 { pt3dadd( 48.417, -307.068, -7.19176, 0.42 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_36 { pt3dadd( 48.4206, -307.339, -7.22069, 0.56 ) }
    dend_36 { pt3dadd( 48.3581, -307.965, -7.21896, 0.56 ) }
    dend_36 { pt3dadd( 48.3, -308.349, -7.17921, 0.7 ) }
    dend_36 { pt3dadd( 48.2013, -308.96, -7.05795, 0.56 ) }
    dend_36 { pt3dadd( 48.0494, -309.984, -6.76339, 0.56 ) }
    dend_36 { pt3dadd( 47.989, -310.578, -6.59674, 0.42 ) }
    dend_36 { pt3dadd( 47.9771, -311.122, -6.45958, 0.28 ) }
    dend_36 { pt3dadd( 48.0229, -311.671, -6.34405, 0.28 ) }
    dend_36 { pt3dadd( 48.0658, -311.943, -6.30247, 0.42 ) }
    dend_36 { pt3dadd( 48.1262, -312.218, -6.28046, 0.56 ) }
    dend_36 { pt3dadd( 48.269, -312.76, -6.28046, 0.56 ) }
    dend_36 { pt3dadd( 48.4216, -313.292, -6.28046, 0.56 ) }
    dend_36 { pt3dadd( 48.5765, -313.83, -6.28046, 0.56 ) }
    dend_36 { pt3dadd( 48.7322, -314.372, -6.28046, 0.7 ) }
    dend_36 { pt3dadd( 48.887, -314.91, -6.28046, 0.56 ) }
    dend_36 { pt3dadd( 49.0425, -315.452, -6.28046, 0.56 ) }
    dend_36 { pt3dadd( 49.2039, -315.977, -6.31704, 0.7 ) }
    dend_36 { pt3dadd( 49.3665, -316.512, -6.38679, 0.7 ) }
    dend_36 { pt3dadd( 49.5121, -317.035, -6.52589, 0.7 ) }
    dend_36 { pt3dadd( 49.6412, -317.545, -6.71943, 0.56 ) }
    dend_36 { pt3dadd( 49.7581, -318.045, -6.94959, 0.56 ) }
    dend_36 { pt3dadd( 49.9633, -318.985, -7.42438, 0.56 ) }
    dend_36 { pt3dadd( 50.0378, -319.343, -7.5841, 0.84 ) }
    dend_36 { pt3dadd( 50.2582, -320.428, -7.98097, 0.84 ) }
    dend_36 { pt3dadd( 50.3633, -320.957, -8.13168, 0.7 ) }
    dend_36 { pt3dadd( 50.4721, -321.503, -8.22145, 0.7 ) }
    dend_36 { pt3dadd( 50.5861, -322.051, -8.23179, 0.7 ) }
    dend_36 { pt3dadd( 50.833, -323.164, -8.09645, 0.84 ) }
    dend_36 { pt3dadd( 50.9712, -323.689, -8.00177, 0.7 ) }
    dend_36 { pt3dadd( 50.9712, -323.689, -8.00177, 0.84 ) }
    dend_36 { pt3dadd( 51.1217, -324.214, -7.87788, 0.56 ) }
    dend_36 { pt3dadd( 51.2869, -324.743, -7.77991, 0.56 ) }
    dend_36 { pt3dadd( 51.4648, -325.272, -7.72572, 0.42 ) }
    dend_36 { pt3dadd( 51.6677, -325.798, -7.72572, 0.56 ) }
    dend_36 { pt3dadd( 51.6677, -325.798, -7.72572, 0.56 ) }
    dend_36 { pt3dadd( 51.7812, -326.051, -7.70185, 0.56 ) }
    dend_36 { pt3dadd( 52.045, -326.613, -7.59801, 0.56 ) }
    dend_36 { pt3dadd( 52.2787, -327.107, -7.47288, 0.56 ) }
    dend_36 { pt3dadd( 52.5189, -327.667, -7.31172, 0.56 ) }
    dend_36 { pt3dadd( 52.616, -327.917, -7.23616, 0.7 ) }
    dend_36 { pt3dadd( 52.9652, -328.851, -6.95576, 0.7 ) }
    dend_36 { pt3dadd( 53.1556, -329.357, -6.80756, 0.56 ) }
    dend_36 { pt3dadd( 53.3534, -329.865, -6.66494, 0.42 ) }
    dend_36 { pt3dadd( 53.6069, -330.427, -6.52865, 0.28 ) }
    dend_36 { pt3dadd( 53.7297, -330.676, -6.48315, 0.14 ) }
    dend_36 { pt3dadd( 53.9126, -331.028, -6.44661, 0.7 ) }
    dend_36 { pt3dadd( 54.1933, -331.584, -6.44661, 0.7 ) }
    dend_36 { pt3dadd( 54.3569, -331.947, -6.44661, 0.56 ) }
    dend_36 { pt3dadd( 54.5693, -332.533, -6.44661, 0.42 ) }
    dend_36 { pt3dadd( 54.6356, -332.807, -6.44661, 0.56 ) }
    dend_36 { pt3dadd( 54.6713, -333.203, -6.44661, 0.84 ) }
    dend_36 { pt3dadd( 54.6446, -333.822, -6.38861, 0.7 ) }
    dend_36 { pt3dadd( 54.5731, -334.44, -6.29182, 0.7 ) }
    dend_36 { pt3dadd( 54.5161, -334.831, -6.21506, 0.7 ) }
    dend_36 { pt3dadd( 54.4403, -335.432, -6.07986, 0.56 ) }
    dend_36 { pt3dadd( 54.4007, -336.044, -5.93215, 0.7 ) }
    dend_36 { pt3dadd( 54.4299, -337.184, -5.64049, 0.84 ) }
    dend_36 { pt3dadd( 54.4911, -337.722, -5.49657, 0.7 ) }
    dend_36 { pt3dadd( 54.5455, -337.989, -5.42569, 0.56 ) }
    dend_36 { pt3dadd( 54.7291, -338.568, -5.2878, 0.42 ) }
    dend_36 { pt3dadd( 54.9589, -339.073, -5.19371, 0.28 ) }
    dend_36 { pt3dadd( 55.1639, -339.415, -5.19299, 0.28 ) }
    dend_36 { pt3dadd( 55.3269, -339.636, -5.23919, 1.12 ) }
    dend_36 { pt3dadd( 55.4966, -339.857, -5.27989, 0.7 ) }
    dend_36 { pt3dadd( 55.8666, -340.353, -5.35091, 0.56 ) }
    dend_36 { pt3dadd( 56.2095, -340.879, -5.40196, 0.42 ) }
    dend_36 { pt3dadd( 56.7341, -341.814, -5.44506, 0.28 ) }
    dend_36 { pt3dadd( 56.8999, -342.176, -5.44498, 0.42 ) }
    dend_36 { pt3dadd( 57.2627, -343.189, -5.40698, 0.56 ) }
    dend_36 { pt3dadd( 57.4092, -343.729, -5.37032, 0.56 ) }
    dend_36 { pt3dadd( 57.5268, -344.337, -5.36353, 0.42 ) }
    dend_36 { pt3dadd( 57.5943, -344.893, -5.33308, 0.42 ) }
    dend_36 { pt3dadd( 57.6314, -345.453, -5.28186, 0.28 ) }
    dend_36 { pt3dadd( 57.6462, -346.083, -5.25474, 0.28 ) }
    dend_36 { pt3dadd( 57.6585, -346.646, -5.26592, 0.28 ) }
    dend_36 { pt3dadd( 57.6727, -347.682, -5.27165, 0.42 ) }
    dend_36 { pt3dadd( 57.701, -348.758, -5.26199, 0.42 ) }
    dend_36 { pt3dadd( 57.7108, -349.387, -5.24743, 0.28 ) }
    dend_36 { pt3dadd( 57.7263, -350.008, -5.22483, 0.42 ) }
    dend_36 { pt3dadd( 57.7455, -350.57, -5.19771, 0.28 ) }
    dend_36 { pt3dadd( 57.7694, -351.129, -5.16519, 0.42 ) }
    dend_36 { pt3dadd( 57.8051, -351.687, -5.12692, 0.56 ) }
    dend_36 { pt3dadd( 57.8538, -352.305, -5.12692, 0.56 ) }
    dend_36 { pt3dadd( 57.9041, -352.864, -5.12692, 0.42 ) }
    dend_36 { pt3dadd( 57.9526, -353.491, -5.12692, 0.28 ) }
    dend_36 { pt3dadd( 57.9845, -354.041, -5.12692, 0.28 ) }
    dend_36 { pt3dadd( 58.0004, -354.322, -5.12692, 0.14 ) }
    dend_36 { pt3dadd( 58.0291, -354.72, -5.12692, 0.56 ) }
    dend_36 { pt3dadd( 58.0883, -355.277, -5.12692, 0.42 ) }
    dend_36 { pt3dadd( 58.1688, -355.892, -5.12692, 0.56 ) }
    dend_36 { pt3dadd( 58.2494, -356.446, -5.12692, 0.56 ) }
    dend_36 { pt3dadd( 58.3219, -357.005, -5.12692, 0.42 ) }
    dend_36 { pt3dadd( 58.3941, -357.561, -5.12692, 0.28 ) }
    dend_36 { pt3dadd( 58.4719, -358.117, -5.16395, 0.14 ) }
    dend_36 { pt3dadd( 58.5458, -358.668, -5.23186, 0.1 ) }
    dend_36 { pt3dadd( 58.6294, -359.279, -5.30094, 0.14 ) }
    dend_36 { pt3dadd( 58.7079, -359.902, -5.36072, 0.1 ) }
    dend_36 { pt3dadd( 58.7762, -360.448, -5.39936, 0.1 ) }
    dend_36 { pt3dadd( 58.9189, -361.476, -5.43894, 0.1 ) }
    dend_36 { pt3dadd( 58.9189, -361.476, -5.43894, 0.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_36 { pt3dadd( 59.1333, -362.492, -5.40022, 0.1 ) }
    dend_36 { pt3dadd( 59.2751, -363.033, -5.36068, 0.14 ) }
    dend_36 { pt3dadd( 59.4301, -363.571, -5.30681, 0.1 ) }
    dend_36 { pt3dadd( 59.5838, -364.107, -5.2438, 0.14 ) }
    dend_36 { pt3dadd( 59.7378, -364.644, -5.1726, 0.28 ) }
    dend_36 { pt3dadd( 59.8795, -365.174, -5.13276, 0.42 ) }
    dend_36 { pt3dadd( 60.0049, -365.723, -5.13276, 0.28 ) }
    dend_36 { pt3dadd( 60.1003, -366.276, -5.13276, 0.28 ) }
    dend_36 { pt3dadd( 60.1585, -366.833, -5.13276, 0.42 ) }
    dend_36 { pt3dadd( 60.1729, -367.114, -5.13276, 0.56 ) }
    dend_36 { pt3dadd( 60.1742, -367.504, -5.13276, 0.42 ) }
    dend_36 { pt3dadd( 60.1395, -368.134, -5.13276, 0.28 ) }
    dend_36 { pt3dadd( 60.0814, -368.761, -5.13276, 0.14 ) }
    dend_36 { pt3dadd( 60.0134, -369.379, -5.13276, 0.1 ) }
    dend_36 { pt3dadd( 59.9848, -369.658, -5.10789, 0.14 ) }
    dend_36 { pt3dadd( 59.9848, -369.658, -5.10789, 0.28 ) }
    dend_36 { pt3dadd( 59.994, -370.044, -5.00891, 0.56 ) }
    dend_36 { pt3dadd( 60.0312, -370.566, -4.83777, 0.56 ) }
    dend_36 { pt3dadd( 60.063, -370.825, -4.73033, 0.7 ) }
    dend_36 { pt3dadd( 60.2167, -371.742, -4.2673, 0.56 ) }
    dend_36 { pt3dadd( 60.3042, -372.224, -3.99608, 0.42 ) }
    dend_36 { pt3dadd( 60.3541, -372.461, -3.85092, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 22/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 45.9744, -273.719, -9.96737, 2.38 ) }
    dend_35 { pt3dadd( 46.2288, -273.785, -10.0691, 2.38 ) }
    dend_35 { pt3dadd( 46.7781, -273.959, -10.3232, 2.24 ) }
    dend_35 { pt3dadd( 47.3042, -274.191, -10.5836, 2.1 ) }
    dend_35 { pt3dadd( 47.7976, -274.481, -10.8215, 1.96 ) }
    dend_35 { pt3dadd( 48.5753, -275.07, -11.1797, 1.82 ) }
    dend_35 { pt3dadd( 48.5753, -275.07, -11.1797, 1.68 ) }
    dend_35 { pt3dadd( 48.7423, -275.262, -11.2941, 0.1 ) }
    dend_35 { pt3dadd( 49.0367, -275.685, -11.5199, 0.1 ) }
    dend_35 { pt3dadd( 49.3425, -276.179, -11.7454, 0.1 ) }
    dend_35 { pt3dadd( 49.6237, -276.634, -11.9208, 0.1 ) }
    dend_35 { pt3dadd( 50.2611, -277.582, -12.2112, 0.1 ) }
    dend_35 { pt3dadd( 50.6187, -278.07, -12.3579, 0.1 ) }
    dend_35 { pt3dadd( 50.9634, -278.498, -12.4807, 0.1 ) }
    dend_35 { pt3dadd( 51.3708, -278.954, -12.6015, 0.1 ) }
    dend_35 { pt3dadd( 51.6445, -279.237, -12.6608, 0.14 ) }
    dend_35 { pt3dadd( 51.9252, -279.505, -12.693, 0.28 ) }
    dend_35 { pt3dadd( 52.2199, -279.778, -12.7265, 0.7 ) }
    dend_35 { pt3dadd( 52.6726, -280.196, -12.8185, 0.56 ) }
    dend_35 { pt3dadd( 52.9474, -280.462, -12.9282, 0.42 ) }
    dend_35 { pt3dadd( 53.3345, -280.865, -13.2032, 0.28 ) }
    dend_35 { pt3dadd( 53.6878, -281.259, -13.545, 0.14 ) }
    dend_35 { pt3dadd( 54.3086, -282.0, -14.2187, 0.1 ) }
    dend_35 { pt3dadd( 54.4468, -282.181, -14.3846, 0.14 ) }
    dend_35 { pt3dadd( 54.9833, -282.924, -15.0727, 0.1 ) }
    dend_35 { pt3dadd( 55.4636, -283.633, -15.725, 0.14 ) }
    dend_35 { pt3dadd( 55.4636, -283.633, -15.725, 0.28 ) }
    dend_35 { pt3dadd( 55.9337, -284.394, -16.2526, 0.28 ) }
    dend_35 { pt3dadd( 56.2021, -284.846, -16.4469, 0.42 ) }
    dend_35 { pt3dadd( 56.4052, -285.171, -16.5562, 0.56 ) }
    dend_35 { pt3dadd( 56.4052, -285.171, -16.5562, 0.7 ) }
    dend_35 { pt3dadd( 56.5461, -285.387, -16.6626, 0.84 ) }
    dend_35 { pt3dadd( 56.8639, -285.85, -16.9477, 0.7 ) }
    dend_35 { pt3dadd( 57.4505, -286.644, -17.5297, 0.56 ) }
    dend_35 { pt3dadd( 57.7752, -287.055, -17.88, 0.42 ) }
    dend_35 { pt3dadd( 58.4123, -287.788, -18.5472, 0.28 ) }
    dend_35 { pt3dadd( 58.5747, -287.958, -18.7016, 0.42 ) }
    dend_35 { pt3dadd( 58.8081, -288.177, -18.9237, 0.7 ) }
    dend_35 { pt3dadd( 59.0659, -288.39, -19.1482, 0.56 ) }
    dend_35 { pt3dadd( 59.8865, -288.989, -19.7451, 0.42 ) }
    dend_35 { pt3dadd( 60.3476, -289.299, -20.0418, 0.28 ) }
    dend_35 { pt3dadd( 60.8288, -289.602, -20.2961, 0.14 ) }
    dend_35 { pt3dadd( 61.6756, -290.129, -20.6997, 0.28 ) }
    dend_35 { pt3dadd( 62.3145, -290.519, -20.9604, 0.42 ) }
    dend_35 { pt3dadd( 62.6424, -290.72, -21.0642, 0.28 ) }
    dend_35 { pt3dadd( 63.3054, -291.125, -21.1958, 0.14 ) }
    dend_35 { pt3dadd( 63.6476, -291.332, -21.2464, 0.28 ) }
    dend_35 { pt3dadd( 64.183, -291.65, -21.2465, 0.42 ) }
    dend_35 { pt3dadd( 64.7061, -291.973, -21.1686, 0.28 ) }
    dend_35 { pt3dadd( 65.2292, -292.307, -21.0598, 0.14 ) }
    dend_35 { pt3dadd( 65.5537, -292.516, -20.9807, 0.28 ) }
    dend_35 { pt3dadd( 66.0683, -292.851, -20.8414, 0.14 ) }
    dend_35 { pt3dadd( 67.0405, -293.462, -20.5767, 0.14 ) }
    dend_35 { pt3dadd( 67.571, -293.772, -20.4388, 0.1 ) }
    dend_35 { pt3dadd( 67.9031, -293.959, -20.3593, 0.1 ) }
    dend_35 { pt3dadd( 68.5969, -294.335, -20.2197, 0.1 ) }
    dend_35 { pt3dadd( 68.937, -294.518, -20.168, 0.14 ) }
    dend_35 { pt3dadd( 69.4926, -294.814, -20.1221, 0.1 ) }
    dend_35 { pt3dadd( 70.0452, -295.095, -20.1221, 0.14 ) }
    dend_35 { pt3dadd( 70.3986, -295.279, -20.1221, 0.28 ) }
    dend_35 { pt3dadd( 70.9403, -295.586, -20.1221, 0.14 ) }
    dend_35 { pt3dadd( 71.2793, -295.795, -20.1221, 0.1 ) }
    dend_35 { pt3dadd( 71.9326, -296.24, -20.0647, 0.14 ) }
    dend_35 { pt3dadd( 72.246, -296.48, -20.0123, 0.14 ) }
    dend_35 { pt3dadd( 72.7214, -296.868, -19.9034, 0.28 ) }
    dend_35 { pt3dadd( 73.193, -297.265, -19.7755, 0.14 ) }
    dend_35 { pt3dadd( 73.4831, -297.518, -19.6885, 0.1 ) }
    dend_35 { pt3dadd( 74.3519, -298.274, -19.4233, 0.14 ) }
    dend_35 { pt3dadd( 74.8012, -298.667, -19.2454, 0.28 ) }
    dend_35 { pt3dadd( 75.0821, -298.919, -19.1196, 0.14 ) }
    dend_35 { pt3dadd( 75.5086, -299.302, -18.8757, 0.1 ) }
    dend_35 { pt3dadd( 75.9251, -299.681, -18.6091, 0.1 ) }
    dend_35 { pt3dadd( 76.3285, -300.058, -18.3027, 0.1 ) }
    dend_35 { pt3dadd( 77.0652, -300.761, -17.7099, 0.14 ) }
    dend_35 { pt3dadd( 77.4075, -301.09, -17.407, 0.28 ) }
    dend_35 { pt3dadd( 78.0497, -301.72, -16.822, 0.28 ) }
    dend_35 { pt3dadd( 78.4268, -302.095, -16.4846, 0.14 ) }
    dend_35 { pt3dadd( 79.1436, -302.813, -15.8857, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_35 { pt3dadd( 79.5339, -303.212, -15.6096, 0.1 ) }
    dend_35 { pt3dadd( 79.8015, -303.477, -15.4794, 0.14 ) }
    dend_35 { pt3dadd( 80.24, -303.892, -15.3259, 0.28 ) }
    dend_35 { pt3dadd( 80.6986, -304.325, -15.2369, 0.14 ) }
    dend_35 { pt3dadd( 80.9781, -304.594, -15.2046, 0.1 ) }
    dend_35 { pt3dadd( 81.4268, -305.036, -15.2046, 0.1 ) }
    dend_35 { pt3dadd( 81.8512, -305.49, -15.162, 0.1 ) }
    dend_35 { pt3dadd( 82.0963, -305.798, -15.1022, 0.1 ) }
    dend_35 { pt3dadd( 82.0963, -305.798, -15.1022, 0.14 ) }
    dend_35 { pt3dadd( 82.3223, -306.283, -14.9347, 0.84 ) }
    dend_35 { pt3dadd( 82.3223, -306.283, -14.9347, 0.7 ) }
    dend_35 { pt3dadd( 82.5781, -307.263, -14.5718, 0.1 ) }
    dend_35 { pt3dadd( 82.6873, -307.775, -14.399, 0.1 ) }
    dend_35 { pt3dadd( 82.7957, -308.307, -14.2492, 0.1 ) }
    dend_35 { pt3dadd( 82.9287, -308.838, -14.132, 0.1 ) }
    dend_35 { pt3dadd( 83.0125, -309.104, -14.0894, 0.1 ) }
    dend_35 { pt3dadd( 83.1167, -309.364, -14.0665, 0.56 ) }
    dend_35 { pt3dadd( 83.3706, -309.864, -14.0665, 0.42 ) }
    dend_35 { pt3dadd( 83.653, -310.348, -14.0665, 0.28 ) }
    dend_35 { pt3dadd( 83.9909, -310.879, -14.0665, 0.28 ) }
    dend_35 { pt3dadd( 84.2045, -311.205, -14.0665, 0.56 ) }
    dend_35 { pt3dadd( 84.5443, -311.735, -14.0665, 0.42 ) }
    dend_35 { pt3dadd( 84.7542, -312.063, -14.0665, 0.28 ) }
    dend_35 { pt3dadd( 84.9036, -312.302, -14.0665, 0.56 ) }
    dend_35 { pt3dadd( 85.1884, -312.788, -14.0665, 0.42 ) }
    dend_35 { pt3dadd( 85.4547, -313.281, -14.0665, 0.28 ) }
    dend_35 { pt3dadd( 85.7155, -313.777, -14.0665, 0.42 ) }
    dend_35 { pt3dadd( 86.0033, -314.337, -14.0665, 0.56 ) }
    dend_35 { pt3dadd( 86.135, -314.583, -14.0665, 0.7 ) }
    dend_35 { pt3dadd( 86.2795, -314.825, -14.0665, 0.84 ) }
    dend_35 { pt3dadd( 86.6312, -315.347, -14.0665, 0.7 ) }
    dend_35 { pt3dadd( 87.0137, -315.839, -14.0665, 0.56 ) }
    dend_35 { pt3dadd( 87.366, -316.275, -14.0665, 0.42 ) }
    dend_35 { pt3dadd( 87.7559, -316.769, -14.0665, 0.28 ) }
    dend_35 { pt3dadd( 87.9913, -317.079, -14.0665, 0.14 ) }
    dend_35 { pt3dadd( 88.3533, -317.595, -14.0665, 0.1 ) }
    dend_35 { pt3dadd( 88.7676, -318.262, -14.1264, 0.1 ) }
    dend_35 { pt3dadd( 88.9578, -318.607, -14.1824, 0.84 ) }
    dend_35 { pt3dadd( 89.2006, -319.101, -14.2912, 0.7 ) }
    dend_35 { pt3dadd( 89.4138, -319.592, -14.4664, 0.56 ) }
    dend_35 { pt3dadd( 89.6013, -320.074, -14.6818, 0.42 ) }
    dend_35 { pt3dadd( 89.9687, -321.037, -15.1724, 0.28 ) }
    dend_35 { pt3dadd( 90.0591, -321.272, -15.2977, 0.42 ) }
    dend_35 { pt3dadd( 90.1659, -321.51, -15.405, 0.56 ) }
    dend_35 { pt3dadd( 90.6562, -322.521, -15.7585, 0.42 ) }
    dend_35 { pt3dadd( 90.9052, -323.015, -15.866, 0.28 ) }
    dend_35 { pt3dadd( 91.1858, -323.569, -15.9047, 0.14 ) }
    dend_35 { pt3dadd( 91.4441, -324.066, -15.8684, 0.1 ) }
    dend_35 { pt3dadd( 91.9862, -325.107, -15.7344, 0.1 ) }
    dend_35 { pt3dadd( 92.2355, -325.6, -15.6416, 0.1 ) }
    dend_35 { pt3dadd( 92.4705, -326.096, -15.5151, 0.1 ) }
    dend_35 { pt3dadd( 92.6965, -326.597, -15.4049, 0.1 ) }
    dend_35 { pt3dadd( 92.8544, -326.958, -15.3458, 0.1 ) }
    dend_35 { pt3dadd( 92.9664, -327.215, -15.3228, 0.56 ) }
    dend_35 { pt3dadd( 93.17, -327.737, -15.3228, 0.42 ) }
    dend_35 { pt3dadd( 93.3635, -328.263, -15.3228, 0.28 ) }
    dend_35 { pt3dadd( 93.5433, -328.787, -15.3228, 0.14 ) }
    dend_35 { pt3dadd( 93.7436, -329.377, -15.3228, 0.1 ) }
    dend_35 { pt3dadd( 93.9299, -329.908, -15.3228, 0.1 ) }
    dend_35 { pt3dadd( 94.1512, -330.5, -15.3228, 0.14 ) }
    dend_35 { pt3dadd( 94.3677, -331.018, -15.3631, 0.1 ) }
    dend_35 { pt3dadd( 94.4819, -331.27, -15.4005, 0.1 ) }
    dend_35 { pt3dadd( 94.7477, -331.828, -15.5188, 0.1 ) }
    dend_35 { pt3dadd( 95.0121, -332.374, -15.6604, 0.1 ) }
    dend_35 { pt3dadd( 95.2681, -332.853, -15.7994, 0.1 ) }
    dend_35 { pt3dadd( 95.7813, -333.76, -16.0698, 0.1 ) }
    dend_35 { pt3dadd( 95.9194, -334.001, -16.1162, 0.56 ) }
    dend_35 { pt3dadd( 96.1998, -334.484, -16.1558, 0.42 ) }
    dend_35 { pt3dadd( 96.4705, -334.967, -16.1441, 0.28 ) }
    dend_35 { pt3dadd( 96.7808, -335.512, -16.0785, 0.42 ) }
    dend_35 { pt3dadd( 97.0629, -335.975, -15.9831, 0.28 ) }
    dend_35 { pt3dadd( 97.6839, -336.944, -15.7138, 0.14 ) }
    dend_35 { pt3dadd( 98.0389, -337.446, -15.574, 0.1 ) }
    dend_35 { pt3dadd( 98.3805, -337.866, -15.4609, 0.1 ) }
    dend_35 { pt3dadd( 98.8032, -338.328, -15.3896, 0.1 ) }
    dend_35 { pt3dadd( 99.0802, -338.615, -15.3867, 0.42 ) }
    dend_35 { pt3dadd( 99.5162, -339.055, -15.4513, 0.28 ) }
    dend_35 { pt3dadd( 99.7919, -339.337, -15.5074, 0.14 ) }
    dend_35 { pt3dadd( 100.329, -339.913, -15.5274, 0.1 ) }
    dend_35 { pt3dadd( 101.027, -340.706, -15.3286, 0.1 ) }
    dend_35 { pt3dadd( 101.348, -341.113, -15.1346, 0.14 ) }
    dend_35 { pt3dadd( 101.644, -341.514, -14.8792, 0.28 ) }
    dend_35 { pt3dadd( 102.204, -342.295, -14.1904, 0.28 ) }
    dend_35 { pt3dadd( 102.712, -343.011, -13.4535, 0.14 ) }
    dend_35 { pt3dadd( 103.218, -343.717, -12.6576, 0.1 ) }
    dend_35 { pt3dadd( 103.343, -343.878, -12.4636, 0.14 ) }
    dend_35 { pt3dadd( 103.527, -344.096, -12.1856, 0.28 ) }
    dend_35 { pt3dadd( 104.027, -344.669, -11.4256, 0.7 ) }
    dend_35 { pt3dadd( 104.309, -345.011, -10.9784, 0.56 ) }
    dend_35 { pt3dadd( 104.579, -345.362, -10.5404, 0.42 ) }
    dend_35 { pt3dadd( 104.744, -345.594, -10.2615, 0.56 ) }
    dend_35 { pt3dadd( 105.166, -346.202, -9.53361, 0.1 ) }
    dend_35 { pt3dadd( 105.597, -346.871, -8.70662, 0.1 ) }
    dend_35 { pt3dadd( 106.003, -347.563, -7.88815, 0.1 ) }
    dend_35 { pt3dadd( 106.195, -347.9, -7.49295, 0.1 ) }
    dend_35 { pt3dadd( 106.332, -348.153, -7.22278, 0.14 ) }
    dend_35 { pt3dadd( 106.484, -348.43, -6.98051, 0.28 ) }
    dend_35 { pt3dadd( 106.945, -349.222, -6.49168, 0.28 ) }
    dend_35 { pt3dadd( 107.198, -349.666, -6.26227, 0.14 ) }
    dend_35 { pt3dadd( 107.471, -350.181, -6.02428, 0.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_35 { pt3dadd( 107.68, -350.633, -5.76698, 0.1 ) }
    dend_35 { pt3dadd( 107.879, -351.14, -5.4645, 0.14 ) }
    dend_35 { pt3dadd( 107.959, -351.373, -5.32702, 0.28 ) }
    dend_35 { pt3dadd( 108.228, -352.28, -4.8221, 0.1 ) }
    dend_35 { pt3dadd( 108.35, -352.767, -4.57199, 0.1 ) }
    dend_35 { pt3dadd( 108.559, -353.816, -4.15554, 0.1 ) }
    dend_35 { pt3dadd( 108.648, -354.329, -3.94805, 0.1 ) }
    dend_35 { pt3dadd( 108.684, -354.591, -3.85214, 0.1 ) }
    dend_35 { pt3dadd( 108.739, -354.969, -3.77447, 0.1 ) }
    dend_35 { pt3dadd( 108.922, -356.065, -4.05622, 0.1 ) }
    dend_35 { pt3dadd( 109.03, -356.893, -4.67404, 0.1 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 11/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 60.3541, -372.461, -3.85092, 0.28 ) }
    dend_44 { pt3dadd( 61.3499, -372.444, -3.55551, 0.28 ) }
    dend_44 { pt3dadd( 61.9459, -372.435, -3.37872, 0.14 ) }
    dend_44 { pt3dadd( 62.4858, -372.426, -3.21858, 0.1 ) }
    dend_44 { pt3dadd( 63.0911, -372.416, -3.039, 0.1 ) }
    dend_44 { pt3dadd( 63.3611, -372.412, -2.95893, 0.1 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 17/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 60.3541, -372.461, -3.85092, 0.42 ) }
    dend_37 { pt3dadd( 60.4175, -372.985, -3.66329, 0.42 ) }
    dend_37 { pt3dadd( 60.4478, -373.516, -3.47784, 0.28 ) }
    dend_37 { pt3dadd( 60.4491, -374.048, -3.30216, 0.14 ) }
    dend_37 { pt3dadd( 60.4284, -374.578, -3.14413, 0.1 ) }
    dend_37 { pt3dadd( 60.3554, -375.617, -2.87025, 0.14 ) }
    dend_37 { pt3dadd( 60.2945, -376.228, -2.72437, 0.14 ) }
    dend_37 { pt3dadd( 60.1975, -376.826, -2.59418, 0.28 ) }
    dend_37 { pt3dadd( 60.1154, -377.214, -2.52398, 0.28 ) }
    dend_37 { pt3dadd( 59.9622, -377.802, -2.40131, 0.14 ) }
    dend_37 { pt3dadd( 59.7872, -378.396, -2.27723, 0.1 ) }
    dend_37 { pt3dadd( 59.6769, -378.764, -2.21078, 0.14 ) }
    dend_37 { pt3dadd( 59.5057, -379.357, -2.08447, 0.28 ) }
    dend_37 { pt3dadd( 59.3463, -379.951, -1.94423, 0.28 ) }
    dend_37 { pt3dadd( 59.0443, -381.152, -1.64656, 0.14 ) }
    dend_37 { pt3dadd( 58.9618, -381.521, -1.55355, 0.28 ) }
    dend_37 { pt3dadd( 58.8465, -382.125, -1.41069, 0.42 ) }
    dend_37 { pt3dadd( 58.7714, -382.672, -1.3001, 0.56 ) }
    dend_37 { pt3dadd( 58.7509, -382.947, -1.25823, 0.7 ) }
    dend_37 { pt3dadd( 58.7516, -383.335, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 58.7973, -383.897, -1.22636, 0.42 ) }
    dend_37 { pt3dadd( 58.8786, -384.523, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 58.9712, -385.078, -1.22636, 0.42 ) }
    dend_37 { pt3dadd( 59.0733, -385.62, -1.22636, 0.28 ) }
    dend_37 { pt3dadd( 59.192, -386.167, -1.22636, 0.28 ) }
    dend_37 { pt3dadd( 59.3282, -386.714, -1.22636, 0.42 ) }
    dend_37 { pt3dadd( 59.472, -387.256, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 59.6272, -387.797, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 59.7814, -388.336, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 59.9339, -388.868, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 60.0884, -389.407, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 60.2429, -389.946, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 60.3982, -390.487, -1.22636, 0.7 ) }
    dend_37 { pt3dadd( 60.5529, -391.026, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 60.7083, -391.567, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 60.86, -392.096, -1.22636, 0.42 ) }
    dend_37 { pt3dadd( 61.0154, -392.638, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 61.17, -393.176, -1.22636, 0.42 ) }
    dend_37 { pt3dadd( 61.3253, -393.718, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 61.4797, -394.257, -1.22636, 0.7 ) }
    dend_37 { pt3dadd( 61.6339, -394.795, -1.22636, 0.7 ) }
    dend_37 { pt3dadd( 61.7862, -395.328, -1.22636, 0.56 ) }
    dend_37 { pt3dadd( 61.94, -395.867, -1.22636, 0.7 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 60/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 61.94, -395.867, -1.22636, 1.12 ) }
    dend_43 { pt3dadd( 62.4788, -395.713, -1.22636, 1.12 ) }
    dend_43 { pt3dadd( 63.0084, -395.609, -1.38769, 0.98 ) }
    dend_43 { pt3dadd( 63.0084, -395.609, -1.38769, 0.84 ) }
    dend_43 { pt3dadd( 63.4897, -395.554, -1.66938, 0.28 ) }
    dend_43 { pt3dadd( 63.4897, -395.554, -1.66938, 0.28 ) }
    dend_43 { pt3dadd( 63.7443, -395.497, -1.77585, 0.28 ) }
    dend_43 { pt3dadd( 64.8386, -395.192, -2.08513, 0.14 ) }
    dend_43 { pt3dadd( 65.9515, -394.821, -2.22793, 0.1 ) }
    dend_43 { pt3dadd( 66.9479, -394.423, -2.2265, 0.42 ) }
    dend_43 { pt3dadd( 67.5195, -394.166, -2.16551, 0.28 ) }
    dend_43 { pt3dadd( 68.0181, -393.927, -2.07356, 0.14 ) }
    dend_43 { pt3dadd( 69.0338, -393.398, -1.78082, 0.1 ) }
    dend_43 { pt3dadd( 69.487, -393.137, -1.57995, 0.1 ) }
    dend_43 { pt3dadd( 69.9722, -392.842, -1.32407, 0.1 ) }
    dend_43 { pt3dadd( 70.4375, -392.582, -1.14236, 0.1 ) }
    dend_43 { pt3dadd( 70.6716, -392.457, -1.04778, 0.1 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 77/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 61.94, -395.867, -1.22636, 0.56 ) }
    dend_38 { pt3dadd( 62.1148, -396.908, -1.01814, 0.56 ) }
    dend_38 { pt3dadd( 62.1806, -397.461, -0.935625, 0.56 ) }
    dend_38 { pt3dadd( 62.2404, -398.015, -0.870871, 0.7 ) }
    dend_38 { pt3dadd( 62.2866, -398.561, -0.819552, 0.56 ) }
    dend_38 { pt3dadd( 62.332, -399.121, -0.776027, 0.56 ) }
    dend_38 { pt3dadd( 62.3867, -399.749, -0.734756, 0.56 ) }
    dend_38 { pt3dadd( 62.4372, -400.366, -0.734756, 0.56 ) }
    dend_38 { pt3dadd( 62.4756, -400.926, -0.734756, 0.56 ) }
    dend_38 { pt3dadd( 62.5074, -401.554, -0.734756, 0.56 ) }
    dend_38 { pt3dadd( 62.5245, -402.105, -0.734756, 0.42 ) }
    dend_38 { pt3dadd( 62.5417, -402.668, -0.734756, 0.28 ) }
    dend_38 { pt3dadd( 62.5708, -403.297, -0.77536, 0.42 ) }
    dend_38 { pt3dadd( 62.6047, -403.856, -0.843541, 0.56 ) }
    dend_38 { pt3dadd( 62.6457, -404.467, -0.948187, 0.56 ) }
    dend_38 { pt3dadd( 62.6913, -405.086, -1.05396, 0.56 ) }
    dend_38 { pt3dadd( 62.727, -405.637, -1.15098, 0.42 ) }
    dend_38 { pt3dadd( 62.7976, -406.657, -1.33674, 0.56 ) }
    dend_38 { pt3dadd( 62.8572, -407.196, -1.42954, 0.7 ) }
    dend_38 { pt3dadd( 62.9086, -407.471, -1.46326, 0.84 ) }
    dend_38 { pt3dadd( 63.2585, -408.563, -1.4806, 0.84 ) }
    dend_38 { pt3dadd( 63.2585, -408.563, -1.4806, 0.84 ) }
    dend_38 { pt3dadd( 63.3807, -408.81, -1.43895, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_38 { pt3dadd( 63.6432, -409.299, -1.34574, 0.7 ) }
    dend_38 { pt3dadd( 63.9549, -409.835, -1.28584, 0.7 ) }
    dend_38 { pt3dadd( 64.237, -410.319, -1.26113, 0.56 ) }
    dend_38 { pt3dadd( 64.5478, -410.867, -1.26113, 0.56 ) }
    dend_38 { pt3dadd( 64.8192, -411.357, -1.26113, 0.7 ) }
    dend_38 { pt3dadd( 65.1302, -411.903, -1.29962, 0.56 ) }
    dend_38 { pt3dadd( 65.4312, -412.447, -1.33411, 0.7 ) }
    dend_38 { pt3dadd( 65.6853, -412.947, -1.32131, 0.84 ) }
    dend_38 { pt3dadd( 65.9125, -413.458, -1.2612, 0.7 ) }
    dend_38 { pt3dadd( 66.0903, -413.966, -1.10309, 0.84 ) }
    dend_38 { pt3dadd( 66.3487, -414.879, -0.679469, 0.98 ) }
    dend_38 { pt3dadd( 66.5528, -415.803, -0.167007, 0.84 ) }
    dend_38 { pt3dadd( 66.7122, -416.773, 0.423148, 0.7 ) }
    dend_38 { pt3dadd( 66.7867, -417.295, 0.748801, 0.7 ) }
    dend_38 { pt3dadd( 66.8993, -418.3, 1.2873, 0.56 ) }
    dend_38 { pt3dadd( 66.9486, -418.817, 1.50513, 0.7 ) }
    dend_38 { pt3dadd( 66.9881, -419.355, 1.65886, 0.84 ) }
    dend_38 { pt3dadd( 67.0196, -419.743, 1.67624, 0.56 ) }
    dend_38 { pt3dadd( 67.0539, -420.305, 1.6609, 0.56 ) }
    dend_38 { pt3dadd( 67.1246, -421.485, 1.622, 0.56 ) }
    dend_38 { pt3dadd( 67.1553, -422.034, 1.63658, 0.7 ) }
    dend_38 { pt3dadd( 67.2221, -422.654, 1.728, 0.56 ) }
    dend_38 { pt3dadd( 67.2915, -423.199, 1.84052, 0.56 ) }
    dend_38 { pt3dadd( 67.461, -424.33, 2.11438, 0.56 ) }
    dend_38 { pt3dadd( 67.5407, -424.865, 2.26146, 0.56 ) }
    dend_38 { pt3dadd( 67.6989, -425.953, 2.59011, 0.7 ) }
    dend_38 { pt3dadd( 68.0076, -428.36, 3.25743, 0.56 ) }
    dend_38 { pt3dadd( 68.0821, -428.968, 3.40384, 0.7 ) }
    dend_38 { pt3dadd( 68.1372, -429.516, 3.50584, 0.7 ) }
    dend_38 { pt3dadd( 68.1661, -429.902, 3.54693, 0.56 ) }
    dend_38 { pt3dadd( 68.1913, -430.53, 3.58822, 0.42 ) }
    dend_38 { pt3dadd( 68.196, -431.152, 3.58822, 0.28 ) }
    dend_38 { pt3dadd( 68.1774, -431.713, 3.62552, 0.42 ) }
    dend_38 { pt3dadd( 68.1794, -432.34, 3.704, 0.56 ) }
    dend_38 { pt3dadd( 68.2044, -432.95, 3.80894, 0.7 ) }
    dend_38 { pt3dadd( 68.2575, -433.497, 3.92136, 0.56 ) }
    dend_38 { pt3dadd( 68.3458, -434.035, 4.0494, 0.7 ) }
    dend_38 { pt3dadd( 68.5646, -435.018, 4.30677, 0.84 ) }
    dend_38 { pt3dadd( 68.6977, -435.555, 4.41107, 0.7 ) }
    dend_38 { pt3dadd( 68.8512, -436.091, 4.46737, 0.56 ) }
    dend_38 { pt3dadd( 69.0107, -436.618, 4.46749, 0.42 ) }
    dend_38 { pt3dadd( 69.1234, -437.003, 4.42709, 0.56 ) }
    dend_38 { pt3dadd( 69.1961, -437.26, 4.37545, 0.7 ) }
    dend_38 { pt3dadd( 69.4737, -438.366, 4.05927, 0.56 ) }
    dend_38 { pt3dadd( 69.579, -438.898, 3.90982, 0.56 ) }
    dend_38 { pt3dadd( 69.6617, -439.436, 3.77348, 0.56 ) }
    dend_38 { pt3dadd( 69.7148, -439.984, 3.65631, 0.56 ) }
    dend_38 { pt3dadd( 69.7301, -440.249, 3.61466, 0.56 ) }
    dend_38 { pt3dadd( 69.7428, -440.642, 3.54683, 0.98 ) }
    dend_38 { pt3dadd( 69.7584, -441.264, 3.44963, 0.84 ) }
    dend_38 { pt3dadd( 69.7602, -441.791, 3.29058, 0.84 ) }
    dend_38 { pt3dadd( 69.7623, -442.158, 3.13657, 0.28 ) }
    dend_38 { pt3dadd( 69.7771, -442.66, 2.88832, 0.28 ) }
    dend_38 { pt3dadd( 69.8379, -443.69, 2.3217, 0.28 ) }
    dend_38 { pt3dadd( 69.885, -444.166, 2.02949, 0.28 ) }
    dend_38 { pt3dadd( 70.0251, -445.048, 1.5795, 0.42 ) }
    dend_38 { pt3dadd( 70.1251, -445.578, 1.41847, 0.84 ) }
    dend_38 { pt3dadd( 70.2243, -446.123, 1.33269, 0.84 ) }
    dend_38 { pt3dadd( 70.2243, -446.123, 1.33269, 0.7 ) }
    dend_38 { pt3dadd( 70.2243, -446.123, 1.33269, 0.84 ) }
    dend_38 { pt3dadd( 70.5716, -448.562, 1.25672, 0.55 ) }
    dend_38 { pt3dadd( 70.9141, -451.045, 1.24813, 0.83 ) }
    dend_38 { pt3dadd( 71.2807, -453.851, 1.23807, 0.83 ) }
    dend_38 { pt3dadd( 71.3571, -454.464, 1.23581, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 64/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 71.3571, -454.464, 1.23581, 0.55 ) }
    dend_42 { pt3dadd( 70.2046, -456.83, 1.48363, 0.55 ) }
    dend_42 { pt3dadd( 69.1976, -458.814, 1.58413, 0.83 ) }
    dend_42 { pt3dadd( 68.1862, -460.904, 1.52857, 0.83 ) }
    dend_42 { pt3dadd( 66.7498, -463.873, 1.44965, 0.55 ) }
    dend_42 { pt3dadd( 65.8687, -465.694, 1.40124, 0.28 ) }
    dend_42 { pt3dadd( 64.7754, -467.953, 1.34117, 0.55 ) }
    dend_42 { pt3dadd( 64.0114, -469.805, 1.14177, 0.28 ) }
    dend_42 { pt3dadd( 63.2068, -471.707, 0.742625, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 73/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 71.3571, -454.464, 1.23581, 0.83 ) }
    dend_39 { pt3dadd( 71.4614, -457.507, 1.35704, 0.83 ) }
    dend_39 { pt3dadd( 71.6144, -459.674, 1.48685, 0.55 ) }
    dend_39 { pt3dadd( 71.7504, -461.528, 1.60136, 0.83 ) }
    dend_39 { pt3dadd( 71.8629, -462.668, 1.69921, 0.55 ) }
    dend_39 { pt3dadd( 72.1458, -465.148, 1.93305, 0.83 ) }
    dend_39 { pt3dadd( 72.4203, -467.668, 2.15903, 0.83 ) }
    dend_39 { pt3dadd( 72.7373, -470.234, 2.4136, 0.83 ) }
    dend_39 { pt3dadd( 73.1904, -473.7, 2.7637, 0.83 ) }
    dend_39 { pt3dadd( 73.4653, -475.923, 3.01288, 0.83 ) }
    dend_39 { pt3dadd( 73.7202, -478.132, 3.24232, 0.83 ) }
    dend_39 { pt3dadd( 74.3891, -483.581, 3.84119, 0.83 ) }
    dend_39 { pt3dadd( 74.6551, -485.417, 4.03791, 0.55 ) }
    dend_39 { pt3dadd( 75.1524, -488.251, 4.3149, 0.83 ) }
    dend_39 { pt3dadd( 75.4989, -489.88, 4.47561, 0.83 ) }
    dend_39 { pt3dadd( 76.0812, -492.267, 4.68671, 0.55 ) }
    dend_39 { pt3dadd( 77.0259, -495.582, 4.97281, 0.55 ) }
    dend_39 { pt3dadd( 78.0015, -498.47, 5.22243, 0.55 ) }
    dend_39 { pt3dadd( 78.6098, -500.228, 5.30296, 0.55 ) }
    dend_39 { pt3dadd( 79.0838, -501.581, 5.31817, 0.55 ) }
    dend_39 { pt3dadd( 79.9571, -504.218, 5.27414, 0.83 ) }
    dend_39 { pt3dadd( 80.768, -506.934, 5.18061, 0.55 ) }
    dend_39 { pt3dadd( 81.4238, -509.388, 5.0161, 0.55 ) }
    dend_39 { pt3dadd( 82.0444, -511.885, 4.8225, 0.55 ) }
    dend_39 { pt3dadd( 83.0979, -516.47, 4.41832, 0.55 ) }
    dend_39 { pt3dadd( 83.4218, -517.915, 4.27182, 0.55 ) }
    dend_39 { pt3dadd( 83.8277, -519.798, 4.06598, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_39 { pt3dadd( 84.7299, -523.85, 3.61513, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 1/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 84.7299, -523.85, 3.61513, 0.28 ) }
    dend_41 { pt3dadd( 85.6498, -524.389, 2.72454, 0.28 ) }
    dend_41 { pt3dadd( 86.7254, -525.181, 1.03517, 0.55 ) }
    dend_41 { pt3dadd( 87.2242, -525.498, 0.204978, 0.28 ) }
    dend_41 { pt3dadd( 87.9633, -525.9, -0.930582, 0.55 ) }
    dend_41 { pt3dadd( 91.0539, -527.46, -5.50999, 0.28 ) }
    dend_41 { pt3dadd( 91.9951, -527.924, -6.82352, 0.55 ) }
    dend_41 { pt3dadd( 94.6422, -529.196, -10.9495, 0.28 ) }
    dend_41 { pt3dadd( 95.51, -529.587, -12.452, 0.55 ) }
    dend_41 { pt3dadd( 96.4026, -529.94, -14.0469, 0.55 ) }
    dend_41 { pt3dadd( 97.2735, -530.223, -15.5665, 0.28 ) }
    dend_41 { pt3dadd( 98.4172, -530.615, -17.0468, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 84.7299, -523.85, 3.61513, 0.55 ) }
    dend_40 { pt3dadd( 85.2663, -525.917, 3.4864, 0.55 ) }
    dend_40 { pt3dadd( 86.1791, -529.437, 3.2673, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_2 = new SectionList()
    dend_45 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_45, dend_0, dend_51, dend_46, dend_14, dend_1, dend_61, dend_52, dend_48, dend_47, dend_16, dend_15, dend_5, dend_2, dend_63, dend_62, dend_56, dend_53, dend_50, dend_49, dend_18, dend_17, dend_7, dend_6, dend_4, dend_3, dend_75, dend_64, dend_58, dend_57, dend_55, dend_54, dend_24, dend_19, dend_9, dend_8, dend_77, dend_76, dend_72, dend_65, dend_60, dend_59, dend_26, dend_25, dend_23, dend_20, dend_13, dend_10, dend_74, dend_73, dend_71, dend_66, dend_28, dend_27, dend_22, dend_21, dend_12, dend_11, dend_70, dend_67, dend_32, dend_29, dend_69, dend_68, dend_34, dend_33, dend_31, dend_30, dend_36, dend_35, dend_44, dend_37, dend_43, dend_38, dend_42, dend_39, dend_41, dend_40]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_48 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_5 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_49 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_75 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_58 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_57 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_55 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_24 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_76 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_72 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_60 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_59 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_25 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_71 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_27 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_22 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_29 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_68 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_30 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_36 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_35 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_38 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_39 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_45 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_51 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_61 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_14 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_52 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_53 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_63 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_16 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_62 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_64 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_18 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_65 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_66 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_56 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_70 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_67 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_23 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_7 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_8 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_73 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_74 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_77 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_21 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_13 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_10 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_32 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_33 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_34 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_44 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_37 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_43 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_31 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_42 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_40 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_41 OneSecGrp_SectionRef_80.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_66, dend_66, dend_66, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_48 nseg = 7
    dend_47 nseg = 9
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_2 nseg = 15
    dend_49 nseg = 3
    dend_17 nseg = 3
    dend_6 nseg = 9
    dend_75 nseg = 3
    dend_58 nseg = 7
    dend_57 nseg = 5
    dend_55 nseg = 7
    dend_54 nseg = 9
    dend_24 nseg = 5
    dend_9 nseg = 5
    dend_76 nseg = 3
    dend_72 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 3
    dend_25 nseg = 5
    dend_20 nseg = 3
    dend_71 nseg = 5
    dend_28 nseg = 3
    dend_27 nseg = 3
    dend_22 nseg = 3
    dend_11 nseg = 7
    dend_29 nseg = 11
    dend_69 nseg = 3
    dend_68 nseg = 3
    dend_30 nseg = 3
    dend_36 nseg = 5
    dend_35 nseg = 5
    dend_38 nseg = 3
    dend_39 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L4_BTC_49eddfe373_0_0


