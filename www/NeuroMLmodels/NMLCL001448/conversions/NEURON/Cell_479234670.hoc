// Cell: Cell_479234670
/*
{
  "id" : "Cell_479234670",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "324.531, 388.846, 37.52, 11.4838", "330.273, 388.846, 37.52, 11.4838", "336.015, 388.846, 37.52, 11.4838" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "330.273, 388.846, 37.52, 1.0", "336.114, 402.662, 37.52, 1.0", "341.956, 416.478, 37.52, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "332.949, 384.173, 36.8925, 0.2288", "333.516, 383.182, 36.7881, 0.4732", "334.083, 382.191, 36.741, 0.395", "334.652, 381.199, 36.6937, 0.3286", "335.22, 380.207, 36.6556, 0.2806", "335.925, 379.348, 36.6461, 0.2858", "336.899, 378.749, 36.6881, 0.2952", "337.924, 378.306, 36.7928, 0.314", "339.063, 378.224, 36.972, 0.3418", "340.203, 378.142, 37.2145, 0.4258", "341.27, 378.012, 37.611, 0.4262", "342.32, 377.875, 38.1377, 0.4936", "343.376, 378.244, 38.6758, 0.5246", "344.438, 378.585, 39.1972, 0.5816", "345.576, 378.606, 39.6435, 0.459", "346.713, 378.626, 40.0106, 0.4258", "347.84, 378.529, 40.2982, 0.3368", "348.961, 378.346, 40.5247, 0.3052", "350.078, 378.323, 40.6815, 0.2844", "351.185, 378.592, 40.7344, 0.2926", "352.29, 378.858, 40.707, 0.3092", "353.394, 379.122, 40.6249, 0.333", "354.515, 379.316, 40.5482, 0.4096", "355.651, 379.45, 40.5219, 0.3954", "356.783, 379.603, 40.5684, 0.4404", "357.898, 379.813, 40.7221, 0.4068", "359.013, 379.995, 40.9595, 0.4554", "360.12, 379.778, 41.2731, 0.465", "361.226, 379.562, 41.6318, 0.4136", "362.364, 379.551, 41.9815, 0.4274", "363.504, 379.551, 42.3144, 0.3814", "364.637, 379.551, 42.6457, 0.4136", "365.771, 379.551, 42.9752, 0.3622", "366.902, 379.551, 43.3, 0.3474", "368.035, 379.551, 43.6195, 0.3878", "369.167, 379.525, 43.9264, 0.3618", "370.294, 379.338, 44.1697, 0.3464", "371.422, 379.15, 44.3708, 0.3858", "372.562, 379.076, 44.5491, 0.358", "373.706, 379.051, 44.7199, 0.3396", "374.785, 379.321, 44.9378, 0.3734", "375.835, 379.601, 45.2735, 0.3338", "375.727, 379.427, 45.7764, 0.3", "376.767, 379.465, 46.1748, 0.2746", "377.911, 379.465, 46.4772, 0.2746", "379.043, 379.311, 46.6925, 0.2746", "380.156, 379.071, 46.8314, 0.2746", "381.035, 378.349, 46.9132, 0.2746", "382.054, 377.911, 46.9717, 0.2746", "383.105, 377.507, 47.0792, 0.2746", "384.167, 377.159, 47.189, 0.2746", "385.275, 376.951, 47.3242, 0.2746", "386.246, 376.581, 47.5188, 0.2746", "387.34, 376.268, 47.6932, 0.2746", "388.214, 375.568, 47.8898, 0.2746", "389.052, 374.949, 48.0981, 0.2746", "389.969, 374.352, 48.3482, 0.2746", "391.087, 374.135, 48.5377, 0.2746", "392.173, 373.874, 48.6842, 0.2746", "393.042, 373.293, 48.8191, 0.2746", "394.185, 373.249, 48.9056, 0.2746" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "327.941, 393.193, 38.6644, 0.3808", "328.219, 394.129, 39.1392, 0.5246", "328.978, 394.959, 39.6068, 0.4798", "329.614, 395.852, 40.0982, 0.537", "329.893, 396.87, 40.6252, 0.4192", "330.275, 397.927, 41.0071, 0.373", "330.806, 398.892, 41.1589, 0.3648", "331.398, 399.849, 41.1894, 0.4328", "332.103, 400.653, 41.3384, 0.6108", "332.738, 401.557, 41.5579, 0.691", "333.02, 402.657, 41.7438, 0.6802", "333.125, 403.795, 41.9154, 0.5174", "333.484, 404.879, 42.0762, 0.4518", "333.852, 405.962, 42.2142, 0.556", "334.194, 407.052, 42.334, 0.5682", "334.384, 408.176, 42.4726, 0.5536", "334.391, 409.299, 42.6748, 0.4782", "334.392, 410.439, 42.8756, 0.5738", "334.399, 411.575, 43.0791, 0.5232", "334.44, 412.713, 43.1931, 0.6194", "334.729, 413.819, 43.2558, 0.563" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "326.882, 392.236, 36.8284, 0.2288", "326.074, 393.044, 36.0903, 0.2768", "325.267, 393.852, 35.8193, 0.2786", "324.855, 394.611, 35.3858, 0.2822", "324.661, 395.459, 34.7855, 0.2882", "324.116, 396.35, 34.1256, 0.3014", "323.548, 397.203, 33.5986, 0.3192", "322.889, 398.093, 33.2556, 0.3828", "322.16, 398.854, 32.8776, 0.351", "321.387, 399.632, 32.5192, 0.333", "320.806, 400.588, 32.2893, 0.33", "320.326, 401.62, 32.1054, 0.4026", "319.929, 402.685, 31.8906, 0.3888", "320.007, 403.789, 31.6705, 0.399", "320.562, 404.727, 31.3942, 0.4728", "321.142, 405.692, 31.096, 0.5702", "321.475, 406.777, 30.823, 0.4848", "321.62, 407.897, 30.5438, 0.4746", "321.883, 408.964, 30.226, 0.4228", "322.007, 410.076, 29.923, 0.4864", "322.031, 411.199, 29.7707, 0.5162", "322.036, 412.311, 29.771, 0.5414", "322.043, 413.437, 29.7492, 0.5042", "322.263, 414.552, 29.7133, 0.615", "322.613, 415.64, 29.6822, 0.634", "323.194, 416.62, 29.6425, 0.6582", "323.85, 417.555, 29.5786, 0.7564", "324.537, 418.471, 29.4972, 0.6804", "325.187, 419.412, 29.412, 0.648", "325.764, 420.399, 29.3135, 0.5186", "326.28, 421.415, 29.1586, 0.387", "326.544, 422.491, 28.8946, 0.3044", "326.615, 423.624, 28.6149, 0.2826", "326.901, 424.728, 28.3562, 0.2892", "327.329, 425.769, 28.0624, 0.3028", "327.638, 426.74, 27.6437, 0.3216", "328.136, 427.742, 27.2709, 0.387" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "325.992, 391.615, 38.9068, 0.2288", "325.096, 391.69, 40.5765, 0.2886", "324.31, 391.97, 41.3692, 0.3006", "323.473, 392.631, 42.1716, 0.3226", "322.378, 392.775, 42.8593, 0.3652", "321.235, 392.754, 43.4434, 0.4356", "320.354, 393.423, 43.9734, 0.608", "319.686, 394.308, 44.5094, 0.7226", "318.862, 395.091, 45.0164, 0.5592", "317.987, 395.664, 45.6616, 0.4792", "317.166, 395.864, 46.5354, 0.391", "316.22, 396.486, 47.3376, 0.3952" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "331.092, 383.295, 35.1467, 0.2288", "330.902, 382.202, 34.1261, 0.3718", "330.883, 381.158, 33.665, 0.477", "330.986, 380.101, 33.1041, 0.542", "330.738, 379.083, 32.5024, 0.6076", "330.192, 378.111, 31.9735, 0.5384", "329.729, 377.09, 31.6347, 0.4228", "329.443, 375.999, 31.4261, 0.3738", "329.307, 374.892, 31.222, 0.3958", "329.111, 373.789, 31.0313, 0.5758", "329.169, 372.716, 30.814, 0.4614" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000024
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "341.956, 416.478, 37.52, 1.0", "347.797, 430.294, 37.52, 1.0", "353.638, 444.11, 37.52, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "394.185, 373.249, 48.9056, 0.2746", "394.789, 373.638, 50.6271, 0.2288", "395.753, 374.181, 51.4287, 0.2746", "396.717, 374.723, 51.784, 0.2746", "397.682, 375.265, 52.1976, 0.2746", "398.588, 375.965, 52.5375, 0.2746", "399.493, 376.664, 52.81, 0.2746", "400.455, 377.258, 53.0522, 0.2746", "401.473, 377.752, 53.2896, 0.2746", "402.491, 378.245, 53.5282, 0.2746", "403.579, 378.589, 53.72, 0.2746", "404.676, 378.911, 53.8798, 0.2746", "405.775, 379.233, 54.0117, 0.2746", "406.889, 379.384, 54.1391, 0.2746", "408.024, 379.325, 54.2875, 0.2746", "409.16, 379.267, 54.4533, 0.2746", "410.294, 379.208, 54.633, 0.2746", "411.437, 379.233, 54.7733, 0.2746", "412.581, 379.263, 54.8716, 0.2746", "413.725, 379.294, 54.9321, 0.2746", "414.867, 379.354, 54.962, 0.2746", "416.008, 379.44, 54.9724, 0.2746", "417.148, 379.525, 54.9735, 0.2746", "418.29, 379.61, 54.9741, 0.2746", "419.433, 379.626, 54.9749, 0.2748", "420.577, 379.626, 54.976, 0.275", "421.721, 379.626, 54.9774, 0.2752", "422.862, 379.565, 54.9797, 0.2758", "424.002, 379.464, 54.9828, 0.2768", "425.141, 379.362, 54.9875, 0.279", "426.281, 379.261, 54.9931, 0.2826", "427.421, 379.173, 54.9996, 0.2892", "428.563, 379.101, 55.0119, 0.3028", "429.705, 379.03, 55.0379, 0.3214", "430.815, 379.157, 55.0575, 0.387", "431.896, 379.493, 55.0589, 0.3588", "432.975, 379.829, 55.0698, 0.3484", "433.918, 380.379, 55.2773, 0.3534", "434.847, 380.952, 55.662, 0.4722", "435.776, 381.525, 56.18, 0.3934", "436.84, 381.765, 56.7731, 0.3254", "437.931, 381.938, 57.3966, 0.2746", "439.024, 382.112, 58.009, 0.2746", "440.115, 382.286, 58.5743, 0.2746", "441.081, 382.833, 59.0142, 0.2746", "442.004, 383.509, 59.3323, 0.2744", "442.926, 384.186, 59.5708, 0.2744", "443.794, 384.921, 59.7685, 0.2742", "444.533, 385.793, 59.962, 0.2742", "445.272, 386.667, 60.1807, 0.2736", "446.038, 387.478, 60.471, 0.2728", "446.957, 387.923, 60.9843, 0.2712", "447.877, 388.369, 61.6468, 0.2684", "448.797, 388.812, 62.3907, 0.2626", "449.745, 389.292, 63.0966, 0.2542", "450.75, 389.84, 63.6138, 0.2288", "451.754, 390.387, 64.1959, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "394.185, 373.249, 48.9056, 0.2746", "394.493, 373.152, 48.9555, 0.2746", "395.371, 372.599, 48.9796, 0.2746", "396.312, 372.191, 48.9941, 0.2746", "397.306, 371.8, 49.0, 0.2746", "398.406, 371.487, 49.0, 0.2746", "399.471, 371.088, 49.0, 0.2746", "400.606, 370.999, 49.0, 0.2746", "401.613, 370.691, 48.9997, 0.2746", "402.611, 370.313, 48.9997, 0.2746", "403.755, 370.313, 48.9997, 0.2746", "404.899, 370.312, 48.9997, 0.2746", "406.039, 370.243, 48.9994, 0.2746", "407.155, 369.997, 48.9992, 0.2746", "408.259, 369.703, 48.9989, 0.2746", "409.4, 369.626, 48.9983, 0.2746", "410.538, 369.542, 48.9978, 0.2746", "411.659, 369.313, 48.9969, 0.2746", "412.8, 369.283, 48.9958, 0.2746", "413.944, 369.283, 48.9941, 0.2746", "415.088, 369.283, 48.9919, 0.2746", "416.232, 369.283, 48.9885, 0.2746", "417.376, 369.283, 48.9832, 0.2746", "418.507, 369.407, 48.9768, 0.2746", "419.628, 369.616, 48.97, 0.2746", "420.739, 369.8, 48.9639, 0.2746", "421.812, 370.019, 48.9213, 0.2746", "422.873, 370.415, 48.8992, 0.2746", "423.948, 370.747, 48.8986, 0.2746", "425.039, 371.087, 48.9191, 0.2746", "426.166, 371.275, 48.9588, 0.2746", "427.237, 371.587, 49.079, 0.2746", "428.288, 371.953, 49.2489, 0.2746", "429.34, 372.343, 49.3864, 0.2746", "430.474, 372.477, 49.4945, 0.2746", "431.458, 373.005, 49.5762, 0.2746", "432.339, 373.525, 49.6345, 0.2746", "433.22, 374.135, 49.6751, 0.2746", "434.173, 374.685, 49.7482, 0.2746", "435.294, 374.89, 49.8131, 0.2746", "436.413, 375.1, 49.87, 0.2746", "437.523, 375.305, 49.9341, 0.2748", "438.574, 375.724, 50.0128, 0.275", "439.644, 376.115, 50.0727, 0.2754", "440.708, 376.491, 50.1172, 0.2762", "441.817, 376.764, 50.1553, 0.2776", "442.933, 377.006, 50.1906, 0.2802", "444.057, 377.187, 50.2267, 0.285", "445.122, 377.595, 50.2695, 0.2938", "446.259, 377.634, 50.3247, 0.3112", "447.404, 377.634, 50.3947, 0.3382", "448.51, 377.698, 50.5448, 0.413", "449.542, 378.109, 50.7226, 0.4328", "450.289, 378.778, 50.9026, 0.3594", "451.432, 378.778, 51.044, 0.3", "452.569, 378.822, 51.1431, 0.2746", "453.55, 379.38, 51.2036, 0.2746", "454.623, 379.774, 51.2302, 0.2746", "455.728, 380.068, 51.2389, 0.2746", "456.828, 380.366, 51.2397, 0.2746", "457.78, 380.989, 51.2397, 0.2746", "458.829, 381.404, 51.2394, 0.2746", "459.745, 381.971, 51.2392, 0.2746", "460.81, 382.285, 51.2389, 0.2746", "461.897, 382.621, 51.2383, 0.2746", "463.007, 382.887, 51.2378, 0.2746", "464.025, 383.175, 51.2369, 0.2746", "464.545, 384.172, 51.2358, 0.2746", "465.569, 384.661, 51.2341, 0.2746", "466.699, 384.727, 51.2316, 0.2746", "467.843, 384.727, 51.2282, 0.2746", "468.904, 385.094, 51.2235, 0.2746", "469.901, 385.65, 51.217, 0.2746", "470.966, 386.002, 51.2078, 0.2746", "472.092, 386.201, 51.1949, 0.2746", "473.227, 386.329, 51.177, 0.2746", "474.37, 386.361, 51.1521, 0.2746", "475.294, 386.812, 51.1182, 0.2746", "476.279, 387.306, 51.0681, 0.2746", "477.381, 387.473, 50.997, 0.2746", "478.525, 387.473, 50.902, 0.2746", "479.669, 387.473, 50.7828, 0.2746", "480.799, 387.473, 50.612, 0.2746", "481.801, 387.473, 50.2435, 0.2746", "482.936, 387.473, 49.8834, 0.2746", "484.08, 387.473, 49.5726, 0.2746", "485.224, 387.473, 49.3074, 0.2746", "486.344, 387.442, 49.0218, 0.2746", "487.383, 387.28, 48.65, 0.2746", "488.488, 387.13, 48.3487, 0.2746", "489.589, 386.901, 48.1186, 0.2746", "490.733, 386.901, 47.9458, 0.2746", "491.874, 386.857, 47.822, 0.2746", "493.016, 386.786, 47.7394, 0.2746", "494.16, 386.786, 47.679, 0.2748", "495.304, 386.786, 47.6084, 0.2748", "496.434, 386.786, 47.462, 0.2752", "497.571, 386.786, 47.2937, 0.2758", "498.688, 386.642, 47.1248, 0.2766", "499.814, 386.555, 46.9361, 0.2782", "500.914, 386.345, 46.6948, 0.2814", "502.055, 386.329, 46.44, 0.287", "503.19, 386.224, 46.17, 0.2988", "503.971, 386.011, 45.6926, 0.3142", "504.742, 385.535, 45.008, 0.3734", "505.767, 385.122, 44.3716, 0.3338", "506.823, 384.694, 43.8516, 0.3", "507.836, 384.167, 43.43, 0.2746", "508.883, 383.718, 43.071, 0.2746", "509.627, 383.34, 42.5911, 0.2746", "510.487, 382.763, 42.1772, 0.2748", "511.173, 381.916, 41.8368, 0.2748", "512.06, 381.222, 41.5145, 0.2752", "512.652, 380.26, 41.2488, 0.2758", "513.317, 379.33, 41.0253, 0.2766", "513.806, 378.463, 40.7179, 0.2786", "514.803, 378.07, 40.4043, 0.2818", "515.867, 377.716, 40.1114, 0.2882", "516.535, 376.926, 39.9076, 0.2994", "516.847, 376.127, 39.4598, 0.3228", "517.35, 375.174, 39.0351, 0.3534", "517.955, 374.306, 38.6123, 0.4722", "518.449, 373.571, 37.9924, 0.3934", "519.239, 372.858, 37.399, 0.3252", "519.925, 371.943, 36.9267, 0.2742", "520.745, 371.15, 36.5761, 0.2742", "521.469, 370.282, 36.2748, 0.2736", "522.314, 369.554, 35.9918, 0.2728", "522.996, 368.83, 35.6488, 0.2712", "523.76, 368.108, 35.273, 0.2684", "524.304, 367.264, 35.0314, 0.2626", "524.676, 366.271, 34.8634, 0.2542", "525.643, 365.662, 34.7626, 0.2288", "526.698, 365.279, 34.72, 0.2288" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "334.729, 413.819, 43.2558, 0.563", "335.35, 414.757, 43.2944, 0.6828", "336.024, 415.678, 43.3331, 0.7306", "336.605, 416.604, 43.4554, 0.751", "336.812, 417.729, 43.5106, 0.6612", "337.122, 418.83, 43.4899, 0.6572", "337.21, 419.964, 43.3586, 0.5472", "337.594, 421.009, 43.0825, 0.6116", "337.901, 422.021, 42.6384, 0.5724", "338.333, 423.035, 42.1375, 0.5848", "338.77, 424.051, 41.6399, 0.4228", "339.311, 425.059, 41.2714, 0.3332", "339.853, 426.067, 41.0245, 0.2888", "340.173, 427.165, 40.892, 0.302", "340.488, 428.264, 40.8587, 0.32", "340.632, 429.358, 40.8299, 0.3846", "340.775, 430.247, 40.6487, 0.3542", "341.138, 431.122, 40.7792, 0.3388", "341.614, 431.877, 41.2205, 0.3412", "342.102, 432.852, 41.762, 0.4232", "342.571, 433.849, 42.3374, 0.4284", "342.991, 434.911, 42.8492, 0.4658", "343.452, 435.951, 43.2776, 0.6258", "344.076, 436.904, 43.5439, 0.713", "344.714, 437.849, 43.7556, 0.747", "345.356, 438.788, 43.9883, 0.5152", "346.193, 439.448, 44.3386, 0.3728", "347.078, 440.036, 44.8059, 0.3162", "347.747, 440.963, 45.2192, 0.3474", "348.384, 441.903, 45.5882, 0.43", "348.628, 443.004, 45.9626, 0.464", "348.873, 444.103, 46.3263, 0.4194", "348.939, 445.228, 46.6704, 0.4006", "349.005, 446.352, 46.9997, 0.5132", "349.261, 447.454, 47.2716, 0.4646", "349.602, 448.546, 47.4642, 0.4782", "349.867, 449.655, 47.5969, 0.4606", "350.041, 450.783, 47.6977, 0.4058", "350.252, 451.901, 47.7697, 0.4116", "350.762, 452.92, 47.7722, 0.3574", "351.166, 453.982, 47.7624, 0.3444", "351.47, 455.081, 47.7742, 0.3524", "351.781, 456.179, 47.7809, 0.4404", "352.107, 457.273, 47.7467, 0.4784", "352.442, 458.365, 47.7081, 0.4694", "352.783, 459.457, 47.6832, 0.3802", "353.156, 460.538, 47.6644, 0.3398", "353.581, 461.599, 47.6518, 0.3428", "353.991, 462.667, 47.6554, 0.4274", "354.352, 463.748, 47.6966, 0.4308", "354.75, 464.81, 47.7039, 0.4944", "355.189, 465.861, 47.6823, 0.5634", "355.741, 466.846, 47.7103, 0.4716", "355.921, 467.329, 47.703, 0.4506", "356.323, 468.398, 47.6484, 0.3772", "356.7, 469.475, 47.56, 0.4058", "356.962, 470.589, 47.4704, 0.3464", "357.224, 471.702, 47.3768, 0.3242", "357.658, 472.733, 47.2058, 0.3142", "358.124, 473.746, 46.9801, 0.3738", "358.522, 474.819, 46.8135, 0.3346", "358.917, 475.893, 46.7015, 0.3012", "359.186, 477.002, 46.6393, 0.2768", "359.423, 478.121, 46.6273, 0.279", "359.706, 479.228, 46.664, 0.2824", "360.047, 480.321, 46.7356, 0.2888", "360.319, 481.422, 46.837, 0.302", "360.319, 482.56, 47.0028, 0.32", "360.319, 483.697, 47.2214, 0.3846", "360.465, 484.823, 47.4712, 0.3544", "360.69, 485.943, 47.7394, 0.3388", "361.006, 487.022, 48.0463, 0.3426", "361.472, 488.036, 48.4151, 0.4208", "362.054, 488.983, 48.8127, 0.4474", "362.74, 489.87, 49.2145, 0.3872", "363.522, 490.659, 49.6121, 0.3464", "364.338, 491.417, 49.989, 0.3858" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "334.729, 413.819, 43.2558, 0.563", "333.791, 413.43, 45.2102, 0.2288", "333.038, 413.921, 46.1076, 0.287", "332.189, 414.676, 46.4167, 0.2988", "331.163, 415.152, 46.7326, 0.3142", "330.133, 415.587, 47.0968, 0.3736", "329.078, 415.998, 47.4359, 0.3346", "328.005, 416.395, 47.707, 0.3008", "326.905, 416.636, 47.924, 0.276", "325.8, 416.636, 48.1782, 0.2774", "324.795, 416.701, 48.5766, 0.2796", "323.856, 417.011, 48.83, 0.2838", "322.773, 417.093, 48.9941, 0.292", "321.693, 417.093, 49.2106, 0.3064", "320.607, 417.069, 49.4379, 0.3354", "319.525, 416.838, 49.5631, 0.378", "318.485, 416.529, 49.4449, 0.5122", "317.671, 416.329, 49.042, 0.4928", "316.861, 417.012, 48.5153, 0.386", "315.799, 417.093, 47.9338, 0.3022", "314.748, 417.417, 47.542, 0.2786", "313.733, 417.883, 47.3726, 0.2822", "312.767, 418.486, 47.3099, 0.2886", "311.812, 419.114, 47.2984, 0.3002", "310.881, 419.758, 47.3365, 0.3244", "309.952, 420.384, 47.3514, 0.3562", "308.996, 420.905, 47.1472, 0.4772", "308.007, 421.41, 46.821, 0.4022", "306.972, 421.89, 46.4828, 0.3422", "305.969, 422.368, 46.1028, 0.3054", "305.028, 422.709, 45.593, 0.3326", "304.286, 423.311, 45.0397, 0.3776", "303.34, 423.827, 44.7857, 0.4878", "302.272, 424.001, 44.7434, 0.563", "301.166, 424.236, 44.7549, 0.6414", "300.203, 424.79, 44.7485, 0.626", "299.356, 425.292, 44.5976, 0.4618", "298.254, 425.368, 44.4262, 0.3592", "297.247, 425.582, 44.3912, 0.3322", "296.59, 426.106, 44.6606, 0.4066", "295.741, 426.816, 44.9882, 0.3962", "294.745, 427.148, 45.2166, 0.4122", "293.626, 427.238, 45.3701, 0.4986", "292.512, 427.5, 45.4723, 0.6124", "291.398, 427.762, 45.5174, 0.5904", "290.258, 427.708, 45.5319, 0.5396", "289.116, 427.638, 45.5714, 0.4898", "287.989, 427.452, 45.6537, 0.4122", "286.865, 427.241, 45.7727, 0.4252", "285.758, 426.969, 45.9264, 0.3772", "284.707, 426.709, 46.216, 0.4058", "283.596, 426.754, 46.5956, 0.3464", "282.471, 426.949, 46.9918, 0.3244", "281.344, 427.143, 47.4093, 0.3144", "280.291, 427.379, 47.9629, 0.374", "279.249, 427.619, 48.6321, 0.335", "278.228, 428.03, 49.3455, 0.302", "277.198, 428.397, 50.0931, 0.2784", "276.116, 428.469, 50.8754, 0.2818", "275.037, 428.545, 51.6589, 0.288", "274.059, 428.796, 52.4597, 0.2992", "273.048, 428.998, 53.2148, 0.322", "271.923, 428.962, 53.7984, 0.353", "270.912, 428.76, 54.3063, 0.466", "269.852, 429.15, 54.6146, 0.4068", "269.21, 429.913, 54.4076, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "328.136, 427.742, 27.2709, 0.387", "328.0, 428.667, 27.0494, 0.3602", "327.835, 429.794, 26.9485, 0.3438", "327.669, 430.92, 26.9402, 0.3812", "327.932, 432.028, 26.9622, 0.3482", "328.22, 433.136, 26.9887, 0.3264", "328.597, 434.213, 26.9874, 0.3246", "329.021, 435.276, 26.9522, 0.3632", "329.431, 436.343, 26.8863, 0.4586", "329.747, 437.36, 26.6951, 0.5202", "330.449, 437.998, 26.3759, 0.507", "330.965, 438.865, 26.3138, 0.6452", "331.766, 439.64, 26.3516, 0.5682", "332.564, 440.438, 26.4285, 0.4418", "333.228, 441.332, 26.3908, 0.3534", "333.942, 442.179, 26.2701, 0.3992", "334.603, 442.858, 26.1939, 0.3836", "335.299, 443.708, 26.1655, 0.382", "336.191, 444.375, 26.0339, 0.4776", "337.098, 445.026, 25.8622, 0.4032", "337.557, 445.787, 25.8813, 0.3438", "338.221, 446.123, 26.0181, 0.3098", "338.037, 446.751, 25.7822, 0.3346", "338.219, 446.933, 25.645, 0.412", "338.983, 447.7, 25.4978, 0.3998", "339.741, 448.362, 25.5344, 0.4498", "340.363, 449.252, 25.7663, 0.418", "340.996, 450.149, 26.1533, 0.507", "341.65, 451.059, 26.64, 0.4102", "342.186, 452.032, 27.1406, 0.358", "342.62, 453.062, 27.638, 0.3298", "343.066, 454.105, 28.0384, 0.4022", "343.52, 455.155, 28.3296, 0.3892", "344.115, 456.118, 28.5608, 0.3922", "344.837, 457.002, 28.77, 0.4964", "345.665, 457.768, 28.9898, 0.4386", "346.558, 458.465, 29.2354, 0.4054", "347.509, 459.093, 29.4644, 0.4442", "348.476, 459.703, 29.668, 0.4856", "349.244, 460.514, 29.9023, 0.482", "349.966, 461.371, 30.1619, 0.4048", "350.859, 462.085, 30.35, 0.3786", "351.745, 462.806, 30.4808, 0.4478", "352.431, 463.721, 30.5704, 0.462", "353.124, 464.631, 30.6272, 0.5854", "353.994, 465.374, 30.658, 0.5714", "354.853, 466.126, 30.6793, 0.5826", "355.482, 467.082, 30.7082, 0.4188", "356.11, 468.038, 30.7485, 0.3258", "356.691, 469.023, 30.8126, 0.2752", "357.272, 470.008, 30.8991, 0.2758", "357.914, 470.955, 30.9988, 0.2766", "358.736, 471.707, 31.1142, 0.2782", "359.671, 472.218, 31.3639, 0.2816", "360.022, 473.289, 31.6123, 0.2872", "360.361, 474.373, 31.8301, 0.2992", "361.089, 475.222, 32.0984, 0.315", "361.821, 476.074, 32.3781, 0.375", "362.642, 476.87, 32.58, 0.337", "363.439, 477.691, 32.7127, 0.3056", "364.283, 478.44, 32.7524, 0.285", "364.965, 479.248, 32.7516, 0.2938", "365.684, 480.04, 32.8412, 0.3112", "366.633, 480.679, 32.93, 0.3384", "367.573, 481.328, 33.0341, 0.4132", "368.314, 482.198, 33.1559, 0.4332", "369.057, 483.068, 33.3012, 0.3602", "369.783, 483.91, 33.5496, 0.3016", "370.531, 484.747, 33.8433, 0.2776", "371.326, 485.569, 34.118, 0.2806", "372.135, 486.376, 34.3874, 0.2854", "372.968, 487.156, 34.6727, 0.2944", "373.761, 487.918, 35.0266, 0.312", "374.499, 488.656, 35.5018, 0.34", "375.458, 489.219, 35.936, 0.416", "376.481, 489.73, 36.2992, 0.4384", "377.343, 490.432, 36.664, 0.3698", "378.13, 491.219, 37.0468, 0.3192", "378.602, 492.254, 37.3419, 0.3112", "379.055, 493.304, 37.5668, 0.3384", "379.572, 494.297, 37.8286, 0.413", "380.105, 495.278, 38.1301, 0.4328", "380.704, 496.251, 38.3586, 0.3596", "381.303, 497.226, 38.5367, 0.3006", "381.571, 498.336, 38.6901, 0.2758", "382.371, 499.141, 38.8268, 0.2766", "383.189, 499.859, 38.9553, 0.2782", "384.263, 500.148, 39.1216, 0.2814", "385.14, 500.775, 39.4374, 0.287", "385.507, 501.856, 39.7256, 0.2988", "386.035, 502.806, 40.0546, 0.3142", "386.73, 503.675, 40.434, 0.3734", "387.39, 504.607, 40.7504, 0.3338", "388.047, 505.543, 41.004, 0.3", "388.559, 506.537, 41.2896, 0.2746", "389.088, 507.516, 41.6072, 0.2746", "389.909, 508.311, 41.8547, 0.2746", "390.685, 509.137, 42.0557, 0.2746", "391.096, 510.193, 42.2789, 0.2746", "391.509, 511.249, 42.504, 0.2748", "391.929, 512.311, 42.6888, 0.275", "392.32, 513.379, 42.8383, 0.2754", "392.366, 514.521, 42.9484, 0.2762", "393.172, 515.071, 43.1141, 0.2776", "394.269, 515.182, 43.1214, 0.2802", "394.886, 515.967, 42.9761, 0.285", "395.147, 517.077, 42.7804, 0.2938", "395.89, 517.836, 42.5309, 0.3112", "396.515, 518.79, 42.2789, 0.3382", "397.215, 519.678, 42.0316, 0.413", "398.001, 520.491, 41.8138, 0.4328", "398.938, 521.113, 41.6584, 0.3594", "399.955, 521.634, 41.5713, 0.3", "400.927, 522.204, 41.6189, 0.2748", "401.882, 522.793, 41.7978, 0.2748", "402.847, 523.402, 42.0081, 0.2752", "403.815, 524.011, 42.2285, 0.2758", "404.787, 524.574, 42.5107, 0.2766", "405.771, 525.112, 42.831, 0.2784", "406.877, 525.4, 43.094, 0.2818", "407.985, 525.687, 43.3135, 0.288", "408.946, 526.24, 43.5747, 0.2994", "409.863, 526.872, 43.8757, 0.3204", "410.67, 527.647, 44.1812, 0.361", "411.491, 528.415, 44.4469, 0.4276", "412.354, 529.163, 44.5936, 0.5938", "413.257, 529.849, 44.6172, 0.695", "414.161, 530.538, 44.5497, 0.5132", "415.034, 531.277, 44.4791, 0.369", "415.902, 532.008, 44.3758, 0.308", "416.777, 532.727, 44.2585, 0.3386", "417.704, 533.393, 44.2322, 0.3828", "418.437, 534.256, 44.2464, 0.5266", "419.094, 535.191, 44.296, 0.4912", "419.641, 536.152, 44.3173, 0.5218", "420.103, 537.071, 44.5595, 0.5662", "420.811, 537.71, 44.9747, 0.4834", "421.113, 538.794, 45.4079, 0.4422", "421.48, 539.85, 45.8374, 0.5068", "422.162, 540.769, 46.1978, 0.629", "422.819, 541.671, 46.4562, 0.614", "423.307, 542.636, 46.573, 0.6162", "423.617, 543.672, 46.7947, 0.4756", "424.013, 544.438, 47.2651, 0.4578", "424.392, 545.237, 47.9083, 0.3904", "424.471, 546.31, 48.3126, 0.4316", "425.085, 547.077, 48.4162, 0.389", "425.897, 547.877, 48.4784, 0.4288", "426.687, 548.658, 48.5654, 0.3844", "427.142, 549.55, 48.7626, 0.419", "427.647, 550.257, 49.0538, 0.372", "428.483, 550.831, 49.2024, 0.3666", "429.08, 551.56, 49.0935, 0.4184", "429.885, 552.287, 48.8701, 0.4424", "430.622, 552.856, 48.4702, 0.3778", "431.377, 553.524, 48.1877, 0.334", "432.036, 554.226, 48.3053, 0.3384", "432.2, 555.013, 48.8208, 0.3896", "432.254, 556.078, 49.492, 0.5048", "432.854, 556.98, 49.9906, 0.6182", "433.577, 557.85, 50.4644, 0.6298", "434.41, 558.524, 50.9765, 0.4704", "435.324, 559.199, 51.3853, 0.3692", "435.811, 559.924, 51.8946, 0.3812", "436.036, 560.724, 52.5809, 0.3484", "436.723, 561.411, 52.9259, 0.3264", "437.443, 562.248, 53.1625, 0.326", "438.108, 563.086, 53.5032, 0.3594", "438.687, 564.041, 53.879, 0.4828", "439.257, 565.019, 54.2662, 0.4122", "439.837, 565.984, 54.6958, 0.3622", "440.445, 566.908, 55.228, 0.3378", "441.042, 567.847, 55.7872, 0.4176", "441.632, 568.801, 56.3363, 0.4118", "442.228, 569.769, 56.831, 0.4644", "442.828, 570.744, 57.262, 0.4832", "443.397, 571.624, 57.7752, 0.4422", "443.951, 572.453, 58.4158, 0.5048", "444.904, 573.043, 59.0307, 0.4058", "445.885, 573.582, 59.6064, 0.3502", "446.983, 573.903, 60.0908, 0.3152", "448.081, 574.223, 60.4881, 0.3756", "448.956, 574.591, 60.9672, 0.339", "449.949, 574.781, 61.4706, 0.305", "450.484, 575.739, 61.8419, 0.305", "450.513, 576.88, 62.3423, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "328.136, 427.742, 27.2709, 0.387", "328.582, 428.158, 26.1414, 0.2288", "329.44, 428.879, 25.8984, 0.3362", "330.245, 429.666, 25.7841, 0.4156", "330.938, 430.575, 25.7126, 0.4064", "331.628, 431.465, 25.7408, 0.4622", "332.331, 432.352, 25.8257, 0.4402", "333.007, 433.249, 25.9817, 0.5504", "333.609, 434.206, 26.172, 0.4808", "334.094, 435.222, 26.3737, 0.5384", "334.538, 436.26, 26.5313, 0.4214", "335.043, 437.256, 26.5348, 0.3784", "335.718, 438.138, 26.3897, 0.3696", "336.48, 438.966, 26.1617, 0.466", "337.312, 439.718, 25.8775, 0.5564", "338.192, 440.442, 25.6224, 0.4656", "338.97, 441.266, 25.4406, 0.408", "339.612, 442.211, 25.3343, 0.449", "340.278, 443.141, 25.2911, 0.494", "340.984, 444.039, 25.3045, 0.4996", "341.725, 444.902, 25.3291, 0.4306", "342.483, 445.753, 25.3272, 0.4582", "343.135, 446.683, 25.3379, 0.4412", "343.575, 447.71, 25.403, 0.5148", "344.012, 448.739, 25.4252, 0.5956", "344.624, 449.687, 25.3627, 0.5576", "345.292, 450.61, 25.2798, 0.4848", "346.086, 451.427, 25.1966, 0.3616", "347.035, 452.057, 25.1082, 0.3044", "347.987, 452.69, 25.0166, 0.2824", "348.812, 453.474, 24.9221, 0.2892", "349.406, 454.414, 24.7692, 0.3016", "349.833, 455.46, 24.5904, 0.3256", "350.3, 456.494, 24.4808, 0.3648", "351.118, 457.245, 24.4396, 0.463", "351.925, 458.012, 24.3401, 0.5216", "352.469, 459.001, 24.2565, 0.545", "352.676, 460.118, 24.2077, 0.5418", "352.732, 461.26, 24.1797, 0.5344", "352.947, 462.381, 24.1636, 0.5282", "353.457, 463.397, 24.1657, 0.4794", "354.14, 464.313, 24.1952, 0.5698", "354.638, 465.338, 24.2423, 0.5466", "355.214, 466.324, 24.3065, 0.5126", "355.714, 467.352, 24.3913, 0.4074", "355.984, 468.457, 24.5087, 0.4144", "356.328, 469.518, 24.7188, 0.364", "356.739, 470.572, 24.9789, 0.3502", "357.216, 471.608, 25.2295, 0.3936", "357.685, 472.652, 25.4645, 0.3712", "358.181, 473.682, 25.6964, 0.3706", "358.706, 474.667, 25.999, 0.396", "359.223, 475.659, 26.3541, 0.5466", "359.56, 476.709, 26.7677, 0.551", "359.671, 477.839, 27.1316, 0.5202", "359.743, 478.978, 27.46, 0.4236", "360.429, 479.811, 27.8295, 0.439", "361.251, 480.585, 28.1677, 0.4338", "361.935, 481.499, 28.4242, 0.3612", "362.788, 482.259, 28.6236, 0.3036", "363.242, 483.28, 28.845, 0.2812", "363.499, 484.392, 28.9808, 0.287", "364.024, 485.672, 29.106, 0.2976", "364.473, 486.716, 29.2211, 0.3168", "365.319, 487.485, 29.2975, 0.3548", "366.168, 488.252, 29.3381, 0.4148", "367.08, 488.94, 29.3474, 0.5762", "367.978, 489.586, 29.2958, 0.6314", "368.56, 490.5, 29.2491, 0.545", "368.812, 491.54, 29.2272, 0.3886", "369.383, 492.484, 29.1399, 0.3072", "370.077, 493.389, 29.1054, 0.2876", "371.008, 493.887, 29.2636, 0.2998", "371.87, 494.584, 29.5229, 0.316", "372.782, 495.232, 29.8346, 0.377" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "316.22, 396.486, 47.3376, 0.3952", "315.731, 397.251, 48.0382, 0.502", "315.552, 398.345, 48.7144, 0.4492", "315.174, 399.218, 49.5116, 0.4258", "314.637, 400.114, 50.3266, 0.4766", "314.061, 400.949, 51.1748, 0.5714", "313.862, 402.031, 51.9688, 0.5176", "314.266, 403.065, 52.696, 0.3848", "314.492, 404.082, 53.1373, 0.3002", "314.535, 405.217, 53.5455, 0.275", "314.535, 406.226, 54.1164, 0.2752", "314.621, 407.081, 54.8988, 0.2758", "315.016, 408.123, 55.687, 0.2768", "315.409, 409.12, 56.5197, 0.279", "315.437, 410.253, 57.3, 0.2824", "315.183, 411.292, 58.1185, 0.2894", "315.297, 412.268, 58.9728, 0.3016", "314.91, 413.314, 59.7668, 0.3264", "314.332, 413.99, 60.7197, 0.3606", "314.148, 414.938, 61.752, 0.4852", "314.077, 416.012, 62.8034, 0.418", "314.1, 417.089, 63.8501, 0.3664", "314.55, 417.988, 64.9552, 0.376", "315.053, 418.878, 66.0864, 0.3384", "315.656, 419.752, 67.1913, 0.3084", "316.155, 420.723, 68.2452, 0.2904", "316.84, 421.332, 69.3787, 0.3038", "317.072, 422.224, 70.441, 0.3292", "316.629, 423.159, 71.4748, 0.373", "316.032, 423.854, 72.6071, 0.4718", "315.585, 424.742, 73.7341, 0.5682", "315.451, 425.78, 74.8572, 0.4824", "315.386, 426.834, 75.966, 0.464", "314.894, 427.655, 77.0745, 0.4328", "314.142, 428.099, 78.297, 0.3596", "313.237, 428.578, 79.5113, 0.3006", "312.381, 429.225, 80.6725, 0.2758", "312.09, 430.226, 81.8306, 0.2764", "311.732, 431.106, 83.0455, 0.278", "311.273, 431.917, 84.2736, 0.2812", "310.366, 432.38, 85.4596, 0.2864", "309.417, 432.642, 86.6177, 0.2978", "308.631, 433.028, 87.7904, 0.3124", "308.203, 434.006, 88.8056, 0.37", "307.553, 434.863, 89.6445, 0.3276", "307.042, 435.816, 90.3762, 0.2882", "306.577, 436.799, 90.9874, 0.2542", "306.435, 437.935, 91.3884, 0.2288", "306.293, 439.069, 91.8131, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "316.22, 396.486, 47.3376, 0.3952", "315.02, 395.764, 47.2903, 0.2288", "313.919, 395.564, 47.2704, 0.2746", "312.78, 395.482, 47.283, 0.2746", "311.652, 395.336, 47.3046, 0.2746", "310.645, 395.117, 47.2248, 0.2746", "309.667, 395.117, 47.0207, 0.2746", "308.573, 395.117, 46.9666, 0.2746", "307.574, 395.117, 47.1794, 0.2746", "306.456, 395.117, 47.4796, 0.2746", "305.337, 395.117, 47.8355, 0.2746", "304.202, 395.117, 48.1634, 0.2746", "303.11, 394.898, 48.4028, 0.2746", "302.359, 394.115, 48.5321, 0.2746", "301.848, 393.092, 48.5736, 0.2746", "300.909, 392.575, 48.5439, 0.2746", "299.854, 392.202, 48.4366, 0.2746", "298.842, 391.811, 48.3109, 0.2746", "297.869, 391.255, 48.3006, 0.2746", "296.857, 390.764, 48.3431, 0.2746", "295.773, 390.396, 48.3638, 0.2746", "294.691, 390.029, 48.3568, 0.2746", "293.608, 389.668, 48.2983, 0.2746", "292.525, 389.308, 48.1894, 0.2746", "291.478, 388.985, 47.9581, 0.2746", "290.417, 388.724, 47.6809, 0.2746", "289.282, 388.851, 47.4858, 0.2746", "288.147, 388.977, 47.3796, 0.2746", "287.029, 388.958, 47.4471, 0.2746", "285.915, 388.882, 47.689, 0.2746", "284.823, 388.645, 48.0528, 0.2746", "283.738, 388.343, 48.4868, 0.2744", "282.62, 388.206, 48.9359, 0.2744", "281.485, 388.142, 49.3825, 0.2742", "280.397, 387.931, 49.8212, 0.2742", "279.437, 387.318, 50.2558, 0.2736", "278.469, 386.735, 50.7217, 0.2728", "277.49, 386.203, 51.2739, 0.2712", "276.564, 385.663, 51.9291, 0.2684", "275.687, 385.117, 52.6803, 0.2626", "274.64, 384.703, 53.3442, 0.2542", "273.932, 384.163, 54.0926, 0.2288", "272.871, 384.129, 55.5411, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "329.169, 372.716, 30.814, 0.4614", "328.129, 372.049, 30.291, 0.4576", "327.102, 371.553, 29.6542, 0.4112", "326.173, 370.97, 29.395, 0.3918", "325.271, 370.42, 28.9467, 0.466", "324.199, 370.394, 28.3699, 0.5254", "323.235, 370.799, 27.6747, 0.5586", "322.147, 371.064, 27.0407, 0.5366", "321.025, 371.284, 26.4952, 0.6722", "319.915, 371.505, 25.9431, 0.753", "318.806, 371.727, 25.3586, 0.8168", "317.737, 371.767, 24.6399, 0.6648", "316.676, 371.767, 23.7749, 0.5518", "315.609, 371.805, 22.7784, 0.4404", "314.63, 372.175, 21.6856, 0.4418", "314.116, 372.408, 20.357, 0.579", "314.25, 373.182, 18.9608, 0.6368", "314.904, 373.35, 17.6118, 0.5548", "315.571, 373.266, 16.2814, 0.4066", "316.467, 373.922, 15.2094, 0.3416", "316.818, 374.895, 14.3056, 0.3464", "316.685, 376.013, 13.663, 0.434", "315.801, 376.707, 13.2021, 0.4428", "315.095, 377.394, 12.7054, 0.5178", "314.802, 378.285, 12.1519, 0.6012", "314.215, 379.235, 11.7455, 0.5678", "313.234, 379.769, 11.4765, 0.5056", "312.333, 379.993, 11.1067, 0.3898", "311.412, 380.253, 10.6212, 0.4068", "310.414, 380.466, 10.2015, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "329.169, 372.716, 30.814, 0.4614", "329.065, 371.476, 30.73, 0.367", "328.919, 370.381, 30.7474, 0.3056", "328.982, 369.271, 30.7031, 0.3268", "329.122, 368.155, 30.5586, 0.3968", "329.417, 367.081, 30.3262, 0.3782", "329.844, 366.042, 30.0222, 0.3778", "329.999, 365.662, 29.7055, 0.4404" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "364.338, 491.417, 49.989, 0.3858", "363.808, 491.791, 50.1911, 0.358", "362.891, 492.438, 50.2236, 0.3396", "362.3, 493.367, 50.1948, 0.3734", "362.048, 494.478, 50.1584, 0.3338", "361.766, 495.584, 50.1309, 0.3", "361.693, 496.719, 50.1276, 0.2746", "361.48, 497.821, 50.2334, 0.2746", "361.259, 498.92, 50.4115, 0.2746", "361.234, 500.058, 50.535, 0.2746", "361.234, 501.201, 50.5968, 0.2746", "361.329, 502.322, 50.6027, 0.2746", "361.772, 503.365, 50.5406, 0.2746", "362.161, 504.425, 50.461, 0.2746", "362.397, 505.535, 50.465, 0.2746", "362.638, 506.646, 50.5434, 0.2746", "362.915, 507.753, 50.652, 0.2746", "363.193, 508.86, 50.7769, 0.2748", "363.528, 509.954, 50.8819, 0.275", "363.869, 511.045, 50.9558, 0.2752", "364.285, 512.11, 50.9972, 0.2758", "364.738, 513.161, 51.0191, 0.277", "365.207, 514.204, 51.0317, 0.279", "365.69, 515.24, 51.042, 0.283", "366.247, 516.235, 51.056, 0.2898", "366.905, 517.172, 51.0754, 0.304", "367.513, 518.137, 51.1025, 0.324", "368.055, 519.145, 51.1403, 0.3918", "368.526, 520.182, 51.1935, 0.3688", "368.867, 521.275, 51.268, 0.3592", "369.21, 522.365, 51.3696, 0.411", "369.572, 523.449, 51.5203, 0.3992", "369.933, 524.532, 51.7096, 0.4414", "370.004, 525.622, 52.0178, 0.4384", "370.076, 526.714, 52.4023, 0.3698", "370.383, 527.804, 52.7332, 0.3194", "370.73, 528.894, 52.9914, 0.3112", "370.929, 530.014, 53.1745, 0.3384", "371.052, 531.152, 53.284, 0.4132", "371.183, 532.275, 53.3476, 0.4332", "371.307, 533.35, 53.461, 0.3602", "371.307, 534.481, 53.4957, 0.3016", "371.262, 535.51, 53.3117, 0.2776", "371.024, 536.478, 52.9752, 0.2802", "370.849, 537.534, 52.7509, 0.2854", "370.849, 538.594, 52.663, 0.294", "370.849, 539.727, 52.5148, 0.3116", "370.849, 540.858, 52.3505, 0.3378", "370.616, 541.959, 52.2004, 0.4182", "370.387, 542.908, 51.9086, 0.4128", "370.035, 543.865, 51.6334, 0.4662", "369.889, 544.774, 51.7107, 0.4852", "369.584, 545.855, 51.8661, 0.4538", "369.264, 546.952, 52.0624, 0.4898", "368.929, 548.046, 52.2808, 0.5532", "368.588, 549.138, 52.5112, 0.4596", "368.124, 550.159, 52.764, 0.3972", "367.526, 551.098, 53.0648, 0.428", "367.128, 552.132, 53.4218, 0.4602", "366.82, 553.209, 53.8118, 0.4122", "366.369, 554.249, 54.1587, 0.3878", "365.858, 555.271, 54.4393, 0.4884", "365.122, 556.144, 54.6714, 0.4242", "364.366, 557.001, 54.871, 0.3776", "363.828, 557.983, 55.1247, 0.3966", "363.308, 558.978, 55.4299, 0.3778", "362.727, 559.963, 55.7203, 0.377", "362.17, 560.957, 56.0101, 0.4388", "361.837, 562.031, 56.3528, 0.4756", "361.498, 563.101, 56.7238, 0.4642", "361.112, 564.124, 57.1318, 0.3704", "360.698, 565.117, 57.5607, 0.3204", "360.373, 566.097, 58.0146, 0.3132", "360.319, 567.172, 58.2534, 0.342", "360.268, 568.027, 58.1028, 0.42", "359.718, 568.91, 57.8054, 0.4458", "359.416, 569.945, 57.4507, 0.3832", "359.05, 570.897, 57.367, 0.345", "358.945, 571.918, 57.4938, 0.354", "358.945, 573.06, 57.6845, 0.4418", "358.945, 574.203, 57.9006, 0.4868", "358.732, 575.303, 58.1714, 0.457", "358.43, 576.387, 58.4576, 0.4956", "357.984, 577.429, 58.6723, 0.5654", "357.473, 578.452, 58.8227, 0.476", "357.013, 579.499, 58.9397, 0.457", "356.588, 580.561, 59.0302, 0.3966", "356.081, 581.581, 59.0976, 0.4052", "355.469, 582.548, 59.1601, 0.5228", "354.968, 583.558, 59.257, 0.4762", "354.606, 584.622, 59.4166, 0.5304", "354.257, 585.691, 59.5445, 0.4068", "353.925, 586.767, 59.5661, 0.3502", "353.503, 587.802, 59.5806, 0.323", "352.99, 588.799, 59.6652, 0.3538", "352.54, 589.842, 59.7405, 0.4724", "352.115, 590.905, 59.7867, 0.3934", "351.541, 591.86, 59.7654, 0.3258", "350.845, 592.729, 59.652, 0.2754", "349.987, 593.435, 59.6005, 0.2762", "349.788, 594.505, 59.6736, 0.2776", "349.788, 595.649, 59.7489, 0.2802", "349.839, 596.648, 59.6487, 0.285", "350.485, 597.385, 59.5176, 0.2938", "351.142, 597.881, 59.7234, 0.3112", "351.485, 598.75, 60.0972, 0.3382", "351.471, 599.859, 60.3781, 0.413", "350.806, 600.79, 60.5864, 0.4328" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "364.338, 491.417, 49.989, 0.3858", "365.402, 491.919, 51.6127, 0.2288", "366.388, 492.435, 51.849, 0.2746", "367.325, 493.093, 51.9282, 0.2746", "368.246, 493.77, 51.9798, 0.2748", "369.116, 494.512, 52.0027, 0.2748", "370.022, 495.2, 51.9974, 0.2752", "371.046, 495.711, 51.9658, 0.2758", "372.085, 496.156, 51.9025, 0.2766", "373.213, 496.223, 51.7782, 0.2782", "374.342, 496.288, 51.616, 0.2814", "375.457, 496.515, 51.4786, 0.287", "376.569, 496.782, 51.3792, 0.2988", "377.623, 497.169, 51.3663, 0.3142", "378.621, 497.668, 51.4699, 0.3734", "379.579, 498.235, 51.5388, 0.3338", "380.52, 498.832, 51.5211, 0.3", "381.609, 499.152, 51.5234, 0.2746", "382.716, 499.441, 51.5578, 0.2746", "383.786, 499.814, 51.6659, 0.2746", "384.861, 500.0, 51.9156, 0.2746", "385.816, 500.588, 52.1965, 0.2746", "386.595, 501.382, 52.4922, 0.2746", "387.703, 501.667, 52.8032, 0.2746", "388.794, 501.794, 53.1966, 0.2746", "389.86, 501.985, 53.669, 0.2746", "390.849, 502.465, 54.1996, 0.2746", "391.707, 502.807, 54.8652, 0.2746", "392.433, 503.481, 55.5293, 0.2746", "393.418, 504.036, 56.0232, 0.2746", "394.561, 504.08, 56.3576, 0.2746", "395.705, 504.083, 56.5606, 0.2746", "396.849, 504.083, 56.6639, 0.2746", "397.993, 504.083, 56.6983, 0.2746", "399.137, 504.083, 56.7087, 0.2746", "400.281, 504.083, 56.7224, 0.2746", "401.425, 504.083, 56.7412, 0.2746", "402.569, 504.083, 56.7675, 0.2746", "403.713, 504.083, 56.8044, 0.2746", "404.857, 504.083, 56.8562, 0.2746", "406.001, 504.083, 56.9288, 0.2746", "407.145, 504.083, 57.0287, 0.2746", "408.289, 504.083, 57.169, 0.2746", "409.433, 504.083, 57.3698, 0.2746", "410.577, 504.115, 57.6514, 0.2746", "411.609, 504.493, 58.0314, 0.2746", "412.163, 505.439, 58.5234, 0.2746", "412.914, 505.912, 59.3138, 0.2746", "412.97, 505.945, 60.5626, 0.2746", "412.97, 506.722, 61.9662, 0.2746", "412.818, 507.587, 63.4676, 0.2746", "412.611, 508.41, 65.0135, 0.2744", "412.263, 509.07, 66.5274, 0.2744", "413.28, 509.12, 67.8807, 0.2742", "414.413, 509.128, 68.9461, 0.2742", "415.496, 509.444, 69.7936, 0.2736", "416.427, 509.817, 70.6395, 0.2728", "417.126, 510.448, 71.5504, 0.2712", "418.193, 510.787, 72.4094, 0.2684", "419.231, 511.082, 73.2687, 0.2626", "420.222, 511.302, 74.1826, 0.2542", "421.186, 511.564, 75.1052, 0.2288", "422.127, 511.867, 77.0776, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "372.782, 495.232, 29.8346, 0.377", "373.279, 495.59, 30.17, 0.2288", "374.19, 496.243, 30.1697, 0.3298", "374.984, 497.02, 30.2075, 0.3664", "375.739, 497.838, 30.3554, 0.4964", "376.25, 498.861, 30.4917, 0.4328", "376.763, 499.883, 30.6205, 0.4242", "376.975, 501.004, 30.7443, 0.3338", "377.163, 502.133, 30.8652, 0.3", "377.192, 503.257, 31.0036, 0.2746", "377.054, 504.378, 31.1937, 0.2746", "376.792, 505.458, 31.418, 0.2746", "376.181, 506.425, 31.6232, 0.2748", "375.551, 507.378, 31.8108, 0.275", "374.865, 508.293, 31.9808, 0.2752", "374.192, 509.217, 32.1502, 0.2758", "373.56, 510.167, 32.3518, 0.2768", "372.947, 511.127, 32.6046, 0.2786", "372.377, 512.104, 32.9294, 0.2822", "371.72, 513.006, 33.3273, 0.2888", "370.963, 513.822, 33.7966, 0.3008", "370.296, 514.711, 34.3081, 0.324", "369.664, 515.628, 34.8337, 0.3632", "369.256, 516.673, 35.3382, 0.4534", "368.861, 517.725, 35.8126, 0.5334", "368.418, 518.759, 36.2533, 0.422", "367.977, 519.79, 36.6159, 0.3316", "367.538, 520.814, 36.8085, 0.286", "367.361, 521.918, 37.0465, 0.2956", "367.216, 523.031, 37.3559, 0.3144", "366.999, 524.149, 37.6729, 0.3442", "366.754, 525.256, 37.9949, 0.424", "366.373, 526.194, 38.4843, 0.453", "365.984, 526.979, 39.123, 0.3978", "365.711, 527.824, 39.758, 0.367", "365.363, 528.79, 40.0537, 0.4192", "365.071, 529.768, 40.0554, 0.4444", "364.696, 530.793, 39.9473, 0.3808", "364.538, 531.919, 39.7555, 0.3406", "364.529, 533.036, 39.5774, 0.3458", "364.766, 534.144, 39.5231, 0.4268", "364.897, 535.268, 39.5749, 0.4592", "364.897, 536.412, 39.6645, 0.403", "364.897, 537.556, 39.765, 0.4066", "364.974, 538.696, 39.8728, 0.3484", "365.094, 539.834, 39.9848, 0.3264", "365.203, 540.971, 40.1117, 0.3246", "365.203, 542.107, 40.3113, 0.3644", "365.203, 543.243, 40.5742, 0.4562", "364.905, 544.328, 40.8906, 0.5384", "364.539, 545.4, 41.2429, 0.4312", "364.544, 546.446, 41.7018, 0.3496", "364.65, 547.503, 42.1896, 0.3142", "364.958, 548.597, 42.5387, 0.3736", "365.523, 549.558, 42.8347, 0.3346", "366.172, 550.463, 43.036, 0.3008", "366.96, 551.279, 43.0553, 0.2762", "367.732, 551.683, 42.7596, 0.2776", "368.489, 551.975, 42.2548, 0.2802", "368.211, 552.919, 41.7295, 0.285", "368.359, 554.008, 41.4126, 0.2938", "368.99, 554.867, 41.4252, 0.3112", "369.436, 555.626, 41.8026, 0.3384", "369.475, 556.5, 42.4446, 0.4132", "369.475, 557.643, 43.0164, 0.4332", "369.475, 558.727, 43.346, 0.3604", "369.475, 559.54, 43.3322, 0.3018", "369.475, 560.589, 43.3031, 0.278", "369.475, 561.003, 43.6887, 0.2812", "369.451, 561.809, 44.3027, 0.2864", "369.148, 562.743, 44.998, 0.2978", "369.026, 563.843, 45.5764, 0.3124", "369.313, 564.839, 45.808, 0.37", "369.305, 565.858, 45.7293, 0.3276", "370.288, 566.225, 45.4258, 0.2882", "370.607, 567.184, 44.9918, 0.2542", "369.988, 568.074, 44.6365, 0.2288", "369.475, 569.096, 44.2064, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "372.782, 495.232, 29.8346, 0.377", "372.967, 495.394, 30.0798, 0.341", "373.821, 496.147, 30.2378, 0.3124", "374.676, 496.901, 30.3092, 0.2988", "375.431, 497.674, 30.4455, 0.3142", "376.493, 498.084, 30.5449, 0.3734", "377.635, 498.127, 30.6306, 0.3338", "378.772, 497.999, 30.7227, 0.3", "379.863, 497.676, 30.8255, 0.2746", "380.986, 497.463, 30.9372, 0.2746", "382.111, 497.25, 31.0559, 0.2746", "383.215, 497.031, 31.2659, 0.2746", "384.315, 496.812, 31.556, 0.2746", "385.436, 496.758, 31.892, 0.2748", "386.565, 496.758, 32.2512, 0.2748", "387.681, 496.648, 32.5937, 0.2752", "388.773, 496.307, 32.8639, 0.2758", "389.866, 496.009, 33.0753, 0.2766", "390.973, 496.167, 33.3189, 0.2782", "392.084, 496.329, 33.5712, 0.2814", "393.212, 496.518, 33.7543, 0.287", "394.341, 496.705, 33.8859, 0.2988", "395.48, 496.789, 33.9786, 0.3142", "396.573, 497.059, 34.0376, 0.3734", "397.635, 497.483, 34.0701, 0.3338", "398.647, 497.13, 34.0959, 0.3", "399.576, 496.518, 34.132, 0.2746", "400.668, 496.177, 34.1827, 0.2746", "401.766, 495.857, 34.2538, 0.2748", "402.888, 495.64, 34.3543, 0.275", "404.012, 495.424, 34.4854, 0.2752", "405.142, 495.384, 34.6886, 0.2758", "406.273, 495.384, 34.9597, 0.2768", "407.408, 495.384, 35.2778, 0.2786", "408.545, 495.384, 35.6194, 0.2822", "409.682, 495.384, 35.975, 0.2888", "410.791, 495.209, 36.3644, 0.3006", "411.892, 494.989, 36.7774, 0.3236", "413.003, 494.91, 37.2028, 0.3624", "414.121, 494.889, 37.6264, 0.4526", "415.22, 494.72, 38.0066, 0.5316", "416.304, 494.493, 38.3446, 0.4188", "417.425, 494.469, 38.6176, 0.3256", "418.45, 494.767, 38.6879, 0.275", "419.373, 495.365, 38.6834, 0.2752", "420.486, 495.627, 38.6543, 0.2758", "421.599, 495.888, 38.6252, 0.277", "422.681, 496.243, 38.6064, 0.279", "423.754, 496.073, 38.5011, 0.2828", "424.759, 496.136, 38.4992, 0.2896", "425.576, 496.726, 38.7092, 0.3034", "426.588, 497.233, 38.9575, 0.323", "427.576, 497.79, 39.2006, 0.3896", "428.512, 498.448, 39.3826, 0.3648", "429.471, 499.065, 39.5052, 0.3518", "430.455, 499.541, 39.6273, 0.3976", "431.179, 500.34, 39.6833, 0.3736", "431.595, 501.263, 39.508, 0.399", "432.423, 502.017, 39.2274, 0.3342", "433.219, 502.813, 38.8699, 0.3006", "433.598, 503.803, 38.4966, 0.2758", "433.908, 504.803, 38.0878, 0.2768", "434.847, 505.344, 37.6432, 0.2786", "435.914, 505.744, 37.2602, 0.2822", "436.927, 506.125, 36.8388, 0.2882", "437.962, 506.605, 36.4711, 0.3008", "438.9, 507.212, 36.1222, 0.318", "439.707, 507.989, 35.7664, 0.3804", "440.592, 508.696, 35.4631, 0.3468", "441.52, 509.365, 35.2237, 0.3252", "442.35, 510.134, 35.0031, 0.316", "443.136, 510.947, 34.7738, 0.377", "443.946, 511.733, 34.6562, 0.3404", "444.738, 512.53, 34.599, 0.3124", "445.464, 513.372, 34.4582, 0.2972", "446.221, 514.201, 34.2807, 0.3162", "447.007, 515.015, 34.109, 0.3534", "447.79, 515.828, 34.0379, 0.4126", "448.569, 516.645, 34.0796, 0.5708", "449.301, 517.524, 34.1645, 0.6282", "449.624, 518.521, 34.3756, 0.5078", "450.188, 519.471, 34.5974, 0.4708", "451.162, 520.067, 34.7424, 0.4096", "452.122, 520.684, 34.8071, 0.4914", "453.137, 521.21, 34.8194, 0.3814", "453.951, 521.822, 34.8566, 0.305", "454.677, 522.309, 34.6091, 0.2288", "455.091, 523.312, 34.0049, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "329.999, 365.662, 29.7055, 0.4404", "330.113, 364.389, 29.5042, 0.2288", "330.226, 363.261, 29.3432, 0.312", "330.347, 362.141, 29.2356, 0.3388", "330.407, 361.017, 29.1746, 0.4188", "330.407, 359.888, 29.2244, 0.4196", "330.279, 358.779, 29.342, 0.4506", "329.854, 357.717, 29.4672, 0.5952", "329.428, 356.655, 29.6064, 0.6676", "329.004, 355.593, 29.7578, 0.6076", "328.578, 354.53, 29.9146, 0.525", "328.217, 353.448, 30.1062, 0.4618", "327.855, 352.365, 30.3372, 0.3664", "327.322, 351.551, 30.7751, 0.3124", "326.601, 350.733, 31.2491, 0.2988", "326.112, 349.709, 31.6596, 0.3142", "326.094, 348.596, 32.0191, 0.3734", "326.268, 347.466, 32.3408, 0.3338", "326.462, 346.393, 32.7502, 0.3", "327.025, 345.407, 33.166, 0.2746", "328.074, 345.194, 33.6862, 0.2746", "328.758, 344.393, 34.2583, 0.2746", "329.362, 343.456, 34.8471, 0.2746", "329.994, 342.581, 35.4231, 0.2746", "330.101, 341.549, 36.066, 0.2746", "330.101, 340.484, 36.5775, 0.2746", "330.101, 339.442, 36.8802, 0.2744", "330.101, 338.346, 37.3145, 0.2744", "330.09, 337.257, 37.8748, 0.2742", "329.928, 336.264, 38.6145, 0.2742", "329.82, 335.254, 39.4747, 0.2736", "329.956, 334.166, 40.3673, 0.2728", "329.982, 333.102, 41.2863, 0.2712", "329.757, 332.091, 42.198, 0.2684", "329.451, 331.054, 43.0209, 0.2626", "329.064, 329.994, 43.6957, 0.2542", "328.828, 328.913, 44.2702, 0.2288", "328.728, 327.814, 45.3398, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "329.999, 365.662, 29.7055, 0.4404", "330.869, 364.967, 29.3353, 0.4782", "331.781, 364.331, 28.9901, 0.4692", "332.597, 363.667, 28.828, 0.3796", "333.263, 362.846, 28.6373, 0.3386", "333.663, 361.796, 28.4264, 0.342", "333.912, 360.699, 28.2083, 0.4198", "334.147, 359.588, 28.0151, 0.4452", "334.364, 358.479, 27.9011, 0.3836", "334.555, 357.373, 27.9143, 0.3398", "334.68, 356.254, 28.0115, 0.374", "334.68, 355.11, 28.1078, 0.335", "334.68, 353.966, 28.187, 0.302", "334.669, 352.822, 28.2374, 0.2784", "334.651, 351.678, 28.2545, 0.2818", "334.633, 350.534, 28.2456, 0.2878", "334.464, 349.414, 28.1848, 0.3002", "334.257, 348.3, 28.086, 0.3168", "334.048, 347.185, 28.0535, 0.3788", "333.839, 346.069, 28.0907, 0.3438", "333.688, 344.939, 28.1462, 0.318", "333.568, 343.801, 28.1932, 0.3092", "333.453, 342.664, 28.2299, 0.3334", "333.397, 341.521, 28.2503, 0.4088", "333.34, 340.378, 28.2472, 0.4014", "333.244, 339.24, 28.2218, 0.4156", "332.993, 338.176, 28.1173, 0.536", "332.971, 337.14, 28.0498, 0.5316", "333.303, 336.067, 28.0694, 0.4836", "333.401, 334.929, 28.0756, 0.3594", "333.588, 333.801, 28.0638, 0.3", "333.777, 332.673, 28.0316, 0.2746", "333.976, 331.548, 27.9525, 0.2746", "334.167, 330.426, 27.8132, 0.2748", "334.026, 329.304, 27.5986, 0.275", "333.864, 328.182, 27.3545, 0.2752", "333.625, 327.064, 27.1411, 0.276", "333.366, 325.955, 26.9334, 0.277", "333.063, 324.871, 26.686, 0.2792", "332.793, 323.775, 26.4329, 0.2832", "332.601, 322.647, 26.2249, 0.2908", "332.41, 321.519, 26.045, 0.3044", "332.2, 320.394, 25.8842, 0.3316", "331.989, 319.27, 25.7333, 0.3696", "331.673, 318.177, 25.5672, 0.5032", "331.253, 317.116, 25.3593, 0.445", "331.017, 316.038, 25.0697, 0.4474", "331.017, 314.939, 24.6698, 0.3762", "330.981, 313.837, 24.2056, 0.38", "330.768, 312.726, 23.7566, 0.4144", "330.555, 311.614, 23.3412, 0.5756", "330.38, 310.502, 22.9634, 0.6304", "330.101, 309.462, 22.587, 0.543", "330.101, 308.336, 22.3524, 0.3848", "330.101, 307.272, 22.3057, 0.3", "330.101, 306.805, 22.3114, 0.2748", "329.843, 305.947, 22.105, 0.2748", "329.537, 304.934, 21.7015, 0.2752", "329.232, 303.923, 21.1379, 0.2758", "328.812, 302.9, 20.5106, 0.2766", "328.337, 301.872, 19.8828, 0.2782", "327.558, 301.107, 19.2598, 0.2814" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "350.806, 600.79, 60.5864, 0.4328", "351.224, 600.998, 61.7252, 0.2288", "351.837, 601.813, 61.8248, 0.2746", "352.061, 602.883, 61.7823, 0.2748", "352.077, 604.021, 61.7722, 0.2748", "352.03, 605.163, 61.8108, 0.2752", "351.589, 606.194, 61.9699, 0.2758", "351.162, 607.226, 62.2244, 0.2768", "351.162, 608.349, 62.5458, 0.2786", "351.162, 609.473, 62.9182, 0.2822", "351.036, 610.601, 63.2492, 0.288", "350.849, 611.729, 63.5102, 0.3008", "350.737, 612.856, 63.7238, 0.3178", "350.874, 613.976, 63.9537, 0.3804", "351.012, 615.097, 64.1948, 0.3464", "351.284, 616.206, 64.3941, 0.3244", "351.556, 617.317, 64.5632, 0.3146", "351.428, 618.43, 64.7108, 0.3744", "351.177, 619.546, 64.8357, 0.3358", "351.162, 620.685, 64.895, 0.3036", "351.162, 621.827, 64.9132, 0.2814", "351.298, 622.931, 64.9536, 0.287", "351.738, 623.956, 65.1014, 0.2988", "352.462, 624.813, 65.1871, 0.3142", "353.265, 625.592, 65.2632, 0.3736", "354.197, 626.214, 65.4402, 0.334", "354.971, 626.984, 65.6908, 0.3002", "355.577, 627.908, 65.994, 0.2752", "356.247, 628.82, 66.2334, 0.2758", "356.941, 629.727, 66.4042, 0.2766", "357.111, 630.716, 66.3869, 0.2782", "357.612, 631.664, 66.3018, 0.2814", "358.098, 632.505, 66.4661, 0.287", "358.839, 633.077, 66.8422, 0.2988", "359.785, 633.362, 67.3985, 0.3142", "360.322, 634.174, 67.8496, 0.3738", "360.696, 635.245, 68.257, 0.3346", "361.265, 636.182, 68.696, 0.3012", "362.2, 636.805, 69.0217, 0.2768", "363.34, 636.857, 69.2572, 0.2786", "364.33, 637.248, 69.44, 0.2822", "364.393, 638.312, 69.7085, 0.288", "364.001, 639.335, 70.0199, 0.3008", "363.982, 640.411, 70.3018, 0.3178", "364.046, 641.521, 70.4494, 0.3802", "364.485, 642.467, 70.5258, 0.3464", "365.246, 643.262, 70.5466, 0.3242", "365.765, 644.196, 70.7132, 0.314", "366.286, 645.152, 71.0147, 0.3734", "366.996, 645.997, 71.3994, 0.3338", "367.773, 646.804, 71.8399, 0.2998", "368.301, 647.776, 72.1577, 0.2742", "369.19, 648.403, 72.3674, 0.2742", "370.166, 648.861, 72.6718, 0.2736", "370.929, 649.606, 73.0635, 0.2728", "371.474, 650.474, 73.5694, 0.2712", "372.547, 650.692, 73.981, 0.2684", "373.327, 651.048, 74.4472, 0.2626", "374.42, 651.05, 74.8538, 0.2542", "375.384, 651.301, 74.9812, 0.2288", "375.428, 652.423, 74.8107, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "350.806, 600.79, 60.5864, 0.4328", "349.857, 601.518, 60.7247, 0.3594", "349.132, 602.365, 60.6833, 0.3002", "348.412, 603.22, 60.4892, 0.2748", "347.724, 604.135, 60.3008, 0.275", "347.043, 605.054, 60.151, 0.2754", "346.385, 605.989, 60.034, 0.2762", "345.76, 606.943, 59.9424, 0.2778", "345.336, 608.005, 59.8704, 0.2806", "344.91, 609.068, 59.7999, 0.2854", "344.616, 610.163, 59.6663, 0.2946", "344.325, 611.26, 59.486, 0.3128", "344.295, 612.39, 59.2754, 0.3398", "344.036, 613.496, 59.0878, 0.4232", "343.534, 614.52, 58.945, 0.4158", "342.788, 615.237, 58.8641, 0.503", "342.215, 616.203, 58.7236, 0.403", "341.802, 617.244, 58.5306, 0.3432", "341.652, 618.369, 58.2764, 0.3088", "341.547, 619.489, 57.9575, 0.333", "341.547, 620.602, 57.5644, 0.4078", "341.547, 621.715, 57.1281, 0.3994", "341.341, 622.838, 56.7731, 0.4122", "341.129, 623.963, 56.4852, 0.5282", "340.791, 625.032, 56.1968, 0.5222", "340.357, 626.062, 55.8684, 0.443", "340.126, 627.165, 55.5685, 0.3972", "339.984, 628.301, 55.3064, 0.5072", "339.85, 629.429, 55.036, 0.4526", "339.751, 630.527, 54.6675, 0.4606", "339.591, 631.645, 54.2928, 0.4034", "339.398, 632.773, 53.9403, 0.4194", "339.185, 633.871, 53.5539, 0.5416", "338.91, 634.889, 53.046, 0.548", "338.661, 635.908, 52.4824, 0.4852", "338.444, 636.932, 51.9165, 0.5022", "338.343, 637.885, 51.3355, 0.5714", "337.961, 638.893, 50.9737, 0.5178", "337.446, 639.514, 51.1101, 0.3852", "337.03, 639.819, 51.665, 0.3012", "336.142, 640.516, 52.1942, 0.277", "335.326, 641.251, 52.6865, 0.279", "334.645, 641.942, 53.0975, 0.2826", "333.571, 642.255, 53.3109, 0.2896", "332.569, 642.56, 53.3319, 0.3024", "331.838, 642.919, 52.9822, 0.3268", "331.224, 643.697, 52.631, 0.3684", "330.218, 644.173, 52.3835, 0.4636", "329.151, 644.575, 52.1562, 0.552", "328.45, 644.578, 51.6916, 0.4574", "328.001, 644.319, 51.074, 0.393", "326.999, 644.717, 50.7178, 0.4204", "326.283, 645.407, 50.6668, 0.4458", "325.878, 646.068, 50.8278, 0.3846", "325.181, 646.58, 51.1132, 0.3414", "324.556, 647.276, 51.3061, 0.377", "323.758, 647.941, 51.3906, 0.3406", "322.918, 648.641, 51.3209, 0.3126", "321.9, 648.991, 51.273, 0.2978", "321.35, 649.885, 51.1708, 0.3174", "320.76, 650.809, 50.951, 0.3558", "320.018, 651.68, 50.7486, 0.4168", "319.263, 652.528, 50.5187, 0.5798", "318.477, 653.314, 50.1861, 0.6382", "317.647, 654.079, 49.8134, 0.5574", "316.776, 654.821, 49.474, 0.4112", "315.892, 655.472, 49.0862, 0.3514", "314.993, 656.041, 48.5856, 0.3592", "314.517, 656.984, 48.0466, 0.4828", "313.942, 657.871, 47.5194, 0.4122", "313.044, 658.453, 47.2223, 0.362", "312.212, 659.138, 46.9274, 0.3382", "311.351, 659.734, 46.5637, 0.413", "310.482, 660.392, 46.37, 0.4328", "309.725, 661.203, 46.2815, 0.3594", "309.24, 662.151, 46.2426, 0.3", "308.654, 663.037, 46.0135, 0.2746", "307.784, 663.623, 45.6422, 0.2746", "306.892, 664.224, 45.1979, 0.2746", "306.078, 665.01, 44.7353, 0.2746", "305.391, 665.91, 44.3097, 0.2746", "304.709, 666.814, 43.9373, 0.2746", "303.885, 667.579, 43.5991, 0.2746", "303.272, 668.501, 43.3255, 0.2746", "302.846, 669.563, 43.1267, 0.2746", "302.432, 670.629, 42.9677, 0.2746", "302.196, 671.705, 42.7722, 0.2746", "301.737, 672.595, 42.679, 0.2746", "300.883, 673.284, 42.5785, 0.2746", "300.485, 674.31, 42.4133, 0.2746", "300.095, 675.383, 42.2534, 0.2744", "299.808, 676.486, 42.1243, 0.2744", "299.592, 677.608, 42.0364, 0.2742", "299.371, 678.731, 41.9661, 0.2742", "299.135, 679.851, 41.9051, 0.2736", "299.076, 680.979, 41.8519, 0.2728", "299.19, 682.117, 41.7875, 0.2712", "299.179, 683.243, 41.7085, 0.2684", "298.831, 684.332, 41.6122, 0.2626", "298.511, 685.424, 41.5013, 0.2542", "298.511, 686.551, 41.3269, 0.2288", "298.511, 687.678, 40.8058, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "327.558, 301.107, 19.2598, 0.2814", "327.318, 300.57, 18.8743, 0.287", "327.354, 300.387, 18.2142, 0.2988", "327.333, 299.325, 17.5711, 0.3142", "326.969, 298.396, 17.0177, 0.3738", "325.97, 297.895, 16.4765, 0.3346", "325.151, 297.33, 15.8996, 0.3012", "324.612, 296.437, 15.507, 0.2766", "324.192, 295.452, 15.2562, 0.2784", "323.247, 295.308, 14.8833, 0.2818", "322.407, 295.722, 14.4035, 0.2876", "321.372, 296.071, 14.0767, 0.3", "320.37, 295.748, 13.812, 0.3164", "319.524, 295.007, 13.5394, 0.3776", "318.588, 294.356, 13.3046, 0.3418", "317.664, 293.835, 12.9921, 0.3144", "316.77, 293.156, 12.7434, 0.3028", "316.231, 292.168, 12.5612, 0.3212", "315.942, 291.09, 12.3654, 0.3864", "315.715, 290.038, 12.0882, 0.358", "314.993, 289.336, 11.8008, 0.3454", "314.059, 288.876, 11.5902, 0.3546", "313.589, 287.858, 11.4575, 0.4442", "313.337, 286.855, 11.3716, 0.4852", "312.675, 286.211, 11.1341, 0.483", "311.717, 285.697, 11.004, 0.401", "311.248, 284.721, 10.9167, 0.3982", "310.681, 283.774, 10.7727, 0.356", "309.957, 282.945, 10.2015, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "327.558, 301.107, 19.2598, 0.2814", "327.354, 300.347, 17.3978, 0.2288", "327.382, 299.219, 16.9291, 0.3076", "327.588, 298.128, 16.7239, 0.3302", "327.882, 297.095, 16.4978, 0.4042", "328.06, 295.974, 16.3286, 0.386", "328.212, 294.858, 16.1051, 0.4222", "328.351, 293.743, 15.7938, 0.377", "328.597, 292.649, 15.4226, 0.3816", "328.728, 291.609, 14.9335, 0.4172", "328.687, 290.535, 14.3696, 0.5806", "328.209, 289.528, 13.8784, 0.64", "327.454, 288.694, 13.4412, 0.5602", "326.801, 287.785, 13.0289, 0.418", "326.094, 286.898, 12.6954, 0.356", "325.351, 286.029, 12.4593, 0.4052", "324.816, 285.046, 12.2427, 0.3874", "324.411, 283.992, 12.0017, 0.4258", "323.776, 283.074, 11.8427, 0.3786", "323.065, 282.198, 11.7681, 0.4084", "322.573, 281.19, 11.5986, 0.3516", "322.099, 280.169, 11.3678, 0.3334", "321.709, 279.096, 11.1441, 0.3334", "321.316, 278.042, 10.9126, 0.3982", "320.95, 277.039, 10.6292, 0.4322", "321.402, 276.078, 10.2015, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_22", "dend_15", "dend_10", "dend_7", "dend_0", "dend_24", "dend_23", "dend_17", "dend_16", "dend_14", "dend_11", "dend_9", "dend_8", "dend_6", "dend_1", "dend_19", "dend_18", "dend_13", "dend_12", "dend_5", "dend_2", "dend_21", "dend_20", "dend_4", "dend_3" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "5.2821827"
  }, {
    "group" : "axon",
    "value" : "5.2821827"
  }, {
    "group" : "dend",
    "value" : "5.2821827"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "43.85804"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0012361549",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.09905652",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0030928326",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.720499E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.32743",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.022880888",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.006742163",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.53718E-10",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.5683048E-5",
    "erev" : "-81.293144"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "6.933973E-4",
    "erev" : "-81.293144"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.7015374E-7",
    "erev" : "-81.293144"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "6.325032E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0060139755",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_479234670",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_479234670

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_22, dend_15, dend_10, dend_7, dend_0, dend_24, dend_23, dend_17, dend_16, dend_14, dend_11, dend_9, dend_8, dend_6, dend_1, dend_19, dend_18, dend_13, dend_12, dend_5, dend_2, dend_21, dend_20, dend_4, dend_3]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_479234670
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000024)
    connect dend_22(0), soma_0(0.5000000000000024)
    connect dend_15(0), soma_0(0.5000000000000024)
    connect dend_10(0), soma_0(0.5000000000000024)
    connect dend_7(0), soma_0(0.5000000000000024)
    connect dend_0(0), soma_0(0.5000000000000024)
    connect axon_1(0), axon_0(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 324.531, 388.846, 37.52, 11.4838 ) }
    soma_0 { pt3dadd( 330.273, 388.846, 37.52, 11.4838 ) }
    soma_0 { pt3dadd( 336.015, 388.846, 37.52, 11.4838 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 330.273, 388.846, 37.52, 1.0 ) }
    axon_0 { pt3dadd( 336.114, 402.662, 37.52, 1.0 ) }
    axon_0 { pt3dadd( 341.956, 416.478, 37.52, 1.0 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 6/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 332.949, 384.173, 36.8925, 0.2288 ) }
    dend_22 { pt3dadd( 333.516, 383.182, 36.7881, 0.4732 ) }
    dend_22 { pt3dadd( 334.083, 382.191, 36.741, 0.395 ) }
    dend_22 { pt3dadd( 334.652, 381.199, 36.6937, 0.3286 ) }
    dend_22 { pt3dadd( 335.22, 380.207, 36.6556, 0.2806 ) }
    dend_22 { pt3dadd( 335.925, 379.348, 36.6461, 0.2858 ) }
    dend_22 { pt3dadd( 336.899, 378.749, 36.6881, 0.2952 ) }
    dend_22 { pt3dadd( 337.924, 378.306, 36.7928, 0.314 ) }
    dend_22 { pt3dadd( 339.063, 378.224, 36.972, 0.3418 ) }
    dend_22 { pt3dadd( 340.203, 378.142, 37.2145, 0.4258 ) }
    dend_22 { pt3dadd( 341.27, 378.012, 37.611, 0.4262 ) }
    dend_22 { pt3dadd( 342.32, 377.875, 38.1377, 0.4936 ) }
    dend_22 { pt3dadd( 343.376, 378.244, 38.6758, 0.5246 ) }
    dend_22 { pt3dadd( 344.438, 378.585, 39.1972, 0.5816 ) }
    dend_22 { pt3dadd( 345.576, 378.606, 39.6435, 0.459 ) }
    dend_22 { pt3dadd( 346.713, 378.626, 40.0106, 0.4258 ) }
    dend_22 { pt3dadd( 347.84, 378.529, 40.2982, 0.3368 ) }
    dend_22 { pt3dadd( 348.961, 378.346, 40.5247, 0.3052 ) }
    dend_22 { pt3dadd( 350.078, 378.323, 40.6815, 0.2844 ) }
    dend_22 { pt3dadd( 351.185, 378.592, 40.7344, 0.2926 ) }
    dend_22 { pt3dadd( 352.29, 378.858, 40.707, 0.3092 ) }
    dend_22 { pt3dadd( 353.394, 379.122, 40.6249, 0.333 ) }
    dend_22 { pt3dadd( 354.515, 379.316, 40.5482, 0.4096 ) }
    dend_22 { pt3dadd( 355.651, 379.45, 40.5219, 0.3954 ) }
    dend_22 { pt3dadd( 356.783, 379.603, 40.5684, 0.4404 ) }
    dend_22 { pt3dadd( 357.898, 379.813, 40.7221, 0.4068 ) }
    dend_22 { pt3dadd( 359.013, 379.995, 40.9595, 0.4554 ) }
    dend_22 { pt3dadd( 360.12, 379.778, 41.2731, 0.465 ) }
    dend_22 { pt3dadd( 361.226, 379.562, 41.6318, 0.4136 ) }
    dend_22 { pt3dadd( 362.364, 379.551, 41.9815, 0.4274 ) }
    dend_22 { pt3dadd( 363.504, 379.551, 42.3144, 0.3814 ) }
    dend_22 { pt3dadd( 364.637, 379.551, 42.6457, 0.4136 ) }
    dend_22 { pt3dadd( 365.771, 379.551, 42.9752, 0.3622 ) }
    dend_22 { pt3dadd( 366.902, 379.551, 43.3, 0.3474 ) }
    dend_22 { pt3dadd( 368.035, 379.551, 43.6195, 0.3878 ) }
    dend_22 { pt3dadd( 369.167, 379.525, 43.9264, 0.3618 ) }
    dend_22 { pt3dadd( 370.294, 379.338, 44.1697, 0.3464 ) }
    dend_22 { pt3dadd( 371.422, 379.15, 44.3708, 0.3858 ) }
    dend_22 { pt3dadd( 372.562, 379.076, 44.5491, 0.358 ) }
    dend_22 { pt3dadd( 373.706, 379.051, 44.7199, 0.3396 ) }
    dend_22 { pt3dadd( 374.785, 379.321, 44.9378, 0.3734 ) }
    dend_22 { pt3dadd( 375.835, 379.601, 45.2735, 0.3338 ) }
    dend_22 { pt3dadd( 375.727, 379.427, 45.7764, 0.3 ) }
    dend_22 { pt3dadd( 376.767, 379.465, 46.1748, 0.2746 ) }
    dend_22 { pt3dadd( 377.911, 379.465, 46.4772, 0.2746 ) }
    dend_22 { pt3dadd( 379.043, 379.311, 46.6925, 0.2746 ) }
    dend_22 { pt3dadd( 380.156, 379.071, 46.8314, 0.2746 ) }
    dend_22 { pt3dadd( 381.035, 378.349, 46.9132, 0.2746 ) }
    dend_22 { pt3dadd( 382.054, 377.911, 46.9717, 0.2746 ) }
    dend_22 { pt3dadd( 383.105, 377.507, 47.0792, 0.2746 ) }
    dend_22 { pt3dadd( 384.167, 377.159, 47.189, 0.2746 ) }
    dend_22 { pt3dadd( 385.275, 376.951, 47.3242, 0.2746 ) }
    dend_22 { pt3dadd( 386.246, 376.581, 47.5188, 0.2746 ) }
    dend_22 { pt3dadd( 387.34, 376.268, 47.6932, 0.2746 ) }
    dend_22 { pt3dadd( 388.214, 375.568, 47.8898, 0.2746 ) }
    dend_22 { pt3dadd( 389.052, 374.949, 48.0981, 0.2746 ) }
    dend_22 { pt3dadd( 389.969, 374.352, 48.3482, 0.2746 ) }
    dend_22 { pt3dadd( 391.087, 374.135, 48.5377, 0.2746 ) }
    dend_22 { pt3dadd( 392.173, 373.874, 48.6842, 0.2746 ) }
    dend_22 { pt3dadd( 393.042, 373.293, 48.8191, 0.2746 ) }
    dend_22 { pt3dadd( 394.185, 373.249, 48.9056, 0.2746 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 327.941, 393.193, 38.6644, 0.3808 ) }
    dend_15 { pt3dadd( 328.219, 394.129, 39.1392, 0.5246 ) }
    dend_15 { pt3dadd( 328.978, 394.959, 39.6068, 0.4798 ) }
    dend_15 { pt3dadd( 329.614, 395.852, 40.0982, 0.537 ) }
    dend_15 { pt3dadd( 329.893, 396.87, 40.6252, 0.4192 ) }
    dend_15 { pt3dadd( 330.275, 397.927, 41.0071, 0.373 ) }
    dend_15 { pt3dadd( 330.806, 398.892, 41.1589, 0.3648 ) }
    dend_15 { pt3dadd( 331.398, 399.849, 41.1894, 0.4328 ) }
    dend_15 { pt3dadd( 332.103, 400.653, 41.3384, 0.6108 ) }
    dend_15 { pt3dadd( 332.738, 401.557, 41.5579, 0.691 ) }
    dend_15 { pt3dadd( 333.02, 402.657, 41.7438, 0.6802 ) }
    dend_15 { pt3dadd( 333.125, 403.795, 41.9154, 0.5174 ) }
    dend_15 { pt3dadd( 333.484, 404.879, 42.0762, 0.4518 ) }
    dend_15 { pt3dadd( 333.852, 405.962, 42.2142, 0.556 ) }
    dend_15 { pt3dadd( 334.194, 407.052, 42.334, 0.5682 ) }
    dend_15 { pt3dadd( 334.384, 408.176, 42.4726, 0.5536 ) }
    dend_15 { pt3dadd( 334.391, 409.299, 42.6748, 0.4782 ) }
    dend_15 { pt3dadd( 334.392, 410.439, 42.8756, 0.5738 ) }
    dend_15 { pt3dadd( 334.399, 411.575, 43.0791, 0.5232 ) }
    dend_15 { pt3dadd( 334.44, 412.713, 43.1931, 0.6194 ) }
    dend_15 { pt3dadd( 334.729, 413.819, 43.2558, 0.563 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 88/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 326.882, 392.236, 36.8284, 0.2288 ) }
    dend_10 { pt3dadd( 326.074, 393.044, 36.0903, 0.2768 ) }
    dend_10 { pt3dadd( 325.267, 393.852, 35.8193, 0.2786 ) }
    dend_10 { pt3dadd( 324.855, 394.611, 35.3858, 0.2822 ) }
    dend_10 { pt3dadd( 324.661, 395.459, 34.7855, 0.2882 ) }
    dend_10 { pt3dadd( 324.116, 396.35, 34.1256, 0.3014 ) }
    dend_10 { pt3dadd( 323.548, 397.203, 33.5986, 0.3192 ) }
    dend_10 { pt3dadd( 322.889, 398.093, 33.2556, 0.3828 ) }
    dend_10 { pt3dadd( 322.16, 398.854, 32.8776, 0.351 ) }
    dend_10 { pt3dadd( 321.387, 399.632, 32.5192, 0.333 ) }
    dend_10 { pt3dadd( 320.806, 400.588, 32.2893, 0.33 ) }
    dend_10 { pt3dadd( 320.326, 401.62, 32.1054, 0.4026 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_10 { pt3dadd( 319.929, 402.685, 31.8906, 0.3888 ) }
    dend_10 { pt3dadd( 320.007, 403.789, 31.6705, 0.399 ) }
    dend_10 { pt3dadd( 320.562, 404.727, 31.3942, 0.4728 ) }
    dend_10 { pt3dadd( 321.142, 405.692, 31.096, 0.5702 ) }
    dend_10 { pt3dadd( 321.475, 406.777, 30.823, 0.4848 ) }
    dend_10 { pt3dadd( 321.62, 407.897, 30.5438, 0.4746 ) }
    dend_10 { pt3dadd( 321.883, 408.964, 30.226, 0.4228 ) }
    dend_10 { pt3dadd( 322.007, 410.076, 29.923, 0.4864 ) }
    dend_10 { pt3dadd( 322.031, 411.199, 29.7707, 0.5162 ) }
    dend_10 { pt3dadd( 322.036, 412.311, 29.771, 0.5414 ) }
    dend_10 { pt3dadd( 322.043, 413.437, 29.7492, 0.5042 ) }
    dend_10 { pt3dadd( 322.263, 414.552, 29.7133, 0.615 ) }
    dend_10 { pt3dadd( 322.613, 415.64, 29.6822, 0.634 ) }
    dend_10 { pt3dadd( 323.194, 416.62, 29.6425, 0.6582 ) }
    dend_10 { pt3dadd( 323.85, 417.555, 29.5786, 0.7564 ) }
    dend_10 { pt3dadd( 324.537, 418.471, 29.4972, 0.6804 ) }
    dend_10 { pt3dadd( 325.187, 419.412, 29.412, 0.648 ) }
    dend_10 { pt3dadd( 325.764, 420.399, 29.3135, 0.5186 ) }
    dend_10 { pt3dadd( 326.28, 421.415, 29.1586, 0.387 ) }
    dend_10 { pt3dadd( 326.544, 422.491, 28.8946, 0.3044 ) }
    dend_10 { pt3dadd( 326.615, 423.624, 28.6149, 0.2826 ) }
    dend_10 { pt3dadd( 326.901, 424.728, 28.3562, 0.2892 ) }
    dend_10 { pt3dadd( 327.329, 425.769, 28.0624, 0.3028 ) }
    dend_10 { pt3dadd( 327.638, 426.74, 27.6437, 0.3216 ) }
    dend_10 { pt3dadd( 328.136, 427.742, 27.2709, 0.387 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 25/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 325.992, 391.615, 38.9068, 0.2288 ) }
    dend_7 { pt3dadd( 325.096, 391.69, 40.5765, 0.2886 ) }
    dend_7 { pt3dadd( 324.31, 391.97, 41.3692, 0.3006 ) }
    dend_7 { pt3dadd( 323.473, 392.631, 42.1716, 0.3226 ) }
    dend_7 { pt3dadd( 322.378, 392.775, 42.8593, 0.3652 ) }
    dend_7 { pt3dadd( 321.235, 392.754, 43.4434, 0.4356 ) }
    dend_7 { pt3dadd( 320.354, 393.423, 43.9734, 0.608 ) }
    dend_7 { pt3dadd( 319.686, 394.308, 44.5094, 0.7226 ) }
    dend_7 { pt3dadd( 318.862, 395.091, 45.0164, 0.5592 ) }
    dend_7 { pt3dadd( 317.987, 395.664, 45.6616, 0.4792 ) }
    dend_7 { pt3dadd( 317.166, 395.864, 46.5354, 0.391 ) }
    dend_7 { pt3dadd( 316.22, 396.486, 47.3376, 0.3952 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 37/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 331.092, 383.295, 35.1467, 0.2288 ) }
    dend_0 { pt3dadd( 330.902, 382.202, 34.1261, 0.3718 ) }
    dend_0 { pt3dadd( 330.883, 381.158, 33.665, 0.477 ) }
    dend_0 { pt3dadd( 330.986, 380.101, 33.1041, 0.542 ) }
    dend_0 { pt3dadd( 330.738, 379.083, 32.5024, 0.6076 ) }
    dend_0 { pt3dadd( 330.192, 378.111, 31.9735, 0.5384 ) }
    dend_0 { pt3dadd( 329.729, 377.09, 31.6347, 0.4228 ) }
    dend_0 { pt3dadd( 329.443, 375.999, 31.4261, 0.3738 ) }
    dend_0 { pt3dadd( 329.307, 374.892, 31.222, 0.3958 ) }
    dend_0 { pt3dadd( 329.111, 373.789, 31.0313, 0.5758 ) }
    dend_0 { pt3dadd( 329.169, 372.716, 30.814, 0.4614 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 48/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 341.956, 416.478, 37.52, 1.0 ) }
    axon_1 { pt3dadd( 347.797, 430.294, 37.52, 1.0 ) }
    axon_1 { pt3dadd( 353.638, 444.11, 37.52, 1.0 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 394.185, 373.249, 48.9056, 0.2746 ) }
    dend_24 { pt3dadd( 394.789, 373.638, 50.6271, 0.2288 ) }
    dend_24 { pt3dadd( 395.753, 374.181, 51.4287, 0.2746 ) }
    dend_24 { pt3dadd( 396.717, 374.723, 51.784, 0.2746 ) }
    dend_24 { pt3dadd( 397.682, 375.265, 52.1976, 0.2746 ) }
    dend_24 { pt3dadd( 398.588, 375.965, 52.5375, 0.2746 ) }
    dend_24 { pt3dadd( 399.493, 376.664, 52.81, 0.2746 ) }
    dend_24 { pt3dadd( 400.455, 377.258, 53.0522, 0.2746 ) }
    dend_24 { pt3dadd( 401.473, 377.752, 53.2896, 0.2746 ) }
    dend_24 { pt3dadd( 402.491, 378.245, 53.5282, 0.2746 ) }
    dend_24 { pt3dadd( 403.579, 378.589, 53.72, 0.2746 ) }
    dend_24 { pt3dadd( 404.676, 378.911, 53.8798, 0.2746 ) }
    dend_24 { pt3dadd( 405.775, 379.233, 54.0117, 0.2746 ) }
    dend_24 { pt3dadd( 406.889, 379.384, 54.1391, 0.2746 ) }
    dend_24 { pt3dadd( 408.024, 379.325, 54.2875, 0.2746 ) }
    dend_24 { pt3dadd( 409.16, 379.267, 54.4533, 0.2746 ) }
    dend_24 { pt3dadd( 410.294, 379.208, 54.633, 0.2746 ) }
    dend_24 { pt3dadd( 411.437, 379.233, 54.7733, 0.2746 ) }
    dend_24 { pt3dadd( 412.581, 379.263, 54.8716, 0.2746 ) }
    dend_24 { pt3dadd( 413.725, 379.294, 54.9321, 0.2746 ) }
    dend_24 { pt3dadd( 414.867, 379.354, 54.962, 0.2746 ) }
    dend_24 { pt3dadd( 416.008, 379.44, 54.9724, 0.2746 ) }
    dend_24 { pt3dadd( 417.148, 379.525, 54.9735, 0.2746 ) }
    dend_24 { pt3dadd( 418.29, 379.61, 54.9741, 0.2746 ) }
    dend_24 { pt3dadd( 419.433, 379.626, 54.9749, 0.2748 ) }
    dend_24 { pt3dadd( 420.577, 379.626, 54.976, 0.275 ) }
    dend_24 { pt3dadd( 421.721, 379.626, 54.9774, 0.2752 ) }
    dend_24 { pt3dadd( 422.862, 379.565, 54.9797, 0.2758 ) }
    dend_24 { pt3dadd( 424.002, 379.464, 54.9828, 0.2768 ) }
    dend_24 { pt3dadd( 425.141, 379.362, 54.9875, 0.279 ) }
    dend_24 { pt3dadd( 426.281, 379.261, 54.9931, 0.2826 ) }
    dend_24 { pt3dadd( 427.421, 379.173, 54.9996, 0.2892 ) }
    dend_24 { pt3dadd( 428.563, 379.101, 55.0119, 0.3028 ) }
    dend_24 { pt3dadd( 429.705, 379.03, 55.0379, 0.3214 ) }
    dend_24 { pt3dadd( 430.815, 379.157, 55.0575, 0.387 ) }
    dend_24 { pt3dadd( 431.896, 379.493, 55.0589, 0.3588 ) }
    dend_24 { pt3dadd( 432.975, 379.829, 55.0698, 0.3484 ) }
    dend_24 { pt3dadd( 433.918, 380.379, 55.2773, 0.3534 ) }
    dend_24 { pt3dadd( 434.847, 380.952, 55.662, 0.4722 ) }
    dend_24 { pt3dadd( 435.776, 381.525, 56.18, 0.3934 ) }
    dend_24 { pt3dadd( 436.84, 381.765, 56.7731, 0.3254 ) }
    dend_24 { pt3dadd( 437.931, 381.938, 57.3966, 0.2746 ) }
    dend_24 { pt3dadd( 439.024, 382.112, 58.009, 0.2746 ) }
    dend_24 { pt3dadd( 440.115, 382.286, 58.5743, 0.2746 ) }
    dend_24 { pt3dadd( 441.081, 382.833, 59.0142, 0.2746 ) }
    dend_24 { pt3dadd( 442.004, 383.509, 59.3323, 0.2744 ) }
    dend_24 { pt3dadd( 442.926, 384.186, 59.5708, 0.2744 ) }
    dend_24 { pt3dadd( 443.794, 384.921, 59.7685, 0.2742 ) }
    dend_24 { pt3dadd( 444.533, 385.793, 59.962, 0.2742 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_24 { pt3dadd( 445.272, 386.667, 60.1807, 0.2736 ) }
    dend_24 { pt3dadd( 446.038, 387.478, 60.471, 0.2728 ) }
    dend_24 { pt3dadd( 446.957, 387.923, 60.9843, 0.2712 ) }
    dend_24 { pt3dadd( 447.877, 388.369, 61.6468, 0.2684 ) }
    dend_24 { pt3dadd( 448.797, 388.812, 62.3907, 0.2626 ) }
    dend_24 { pt3dadd( 449.745, 389.292, 63.0966, 0.2542 ) }
    dend_24 { pt3dadd( 450.75, 389.84, 63.6138, 0.2288 ) }
    dend_24 { pt3dadd( 451.754, 390.387, 64.1959, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 8/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 394.185, 373.249, 48.9056, 0.2746 ) }
    dend_23 { pt3dadd( 394.493, 373.152, 48.9555, 0.2746 ) }
    dend_23 { pt3dadd( 395.371, 372.599, 48.9796, 0.2746 ) }
    dend_23 { pt3dadd( 396.312, 372.191, 48.9941, 0.2746 ) }
    dend_23 { pt3dadd( 397.306, 371.8, 49.0, 0.2746 ) }
    dend_23 { pt3dadd( 398.406, 371.487, 49.0, 0.2746 ) }
    dend_23 { pt3dadd( 399.471, 371.088, 49.0, 0.2746 ) }
    dend_23 { pt3dadd( 400.606, 370.999, 49.0, 0.2746 ) }
    dend_23 { pt3dadd( 401.613, 370.691, 48.9997, 0.2746 ) }
    dend_23 { pt3dadd( 402.611, 370.313, 48.9997, 0.2746 ) }
    dend_23 { pt3dadd( 403.755, 370.313, 48.9997, 0.2746 ) }
    dend_23 { pt3dadd( 404.899, 370.312, 48.9997, 0.2746 ) }
    dend_23 { pt3dadd( 406.039, 370.243, 48.9994, 0.2746 ) }
    dend_23 { pt3dadd( 407.155, 369.997, 48.9992, 0.2746 ) }
    dend_23 { pt3dadd( 408.259, 369.703, 48.9989, 0.2746 ) }
    dend_23 { pt3dadd( 409.4, 369.626, 48.9983, 0.2746 ) }
    dend_23 { pt3dadd( 410.538, 369.542, 48.9978, 0.2746 ) }
    dend_23 { pt3dadd( 411.659, 369.313, 48.9969, 0.2746 ) }
    dend_23 { pt3dadd( 412.8, 369.283, 48.9958, 0.2746 ) }
    dend_23 { pt3dadd( 413.944, 369.283, 48.9941, 0.2746 ) }
    dend_23 { pt3dadd( 415.088, 369.283, 48.9919, 0.2746 ) }
    dend_23 { pt3dadd( 416.232, 369.283, 48.9885, 0.2746 ) }
    dend_23 { pt3dadd( 417.376, 369.283, 48.9832, 0.2746 ) }
    dend_23 { pt3dadd( 418.507, 369.407, 48.9768, 0.2746 ) }
    dend_23 { pt3dadd( 419.628, 369.616, 48.97, 0.2746 ) }
    dend_23 { pt3dadd( 420.739, 369.8, 48.9639, 0.2746 ) }
    dend_23 { pt3dadd( 421.812, 370.019, 48.9213, 0.2746 ) }
    dend_23 { pt3dadd( 422.873, 370.415, 48.8992, 0.2746 ) }
    dend_23 { pt3dadd( 423.948, 370.747, 48.8986, 0.2746 ) }
    dend_23 { pt3dadd( 425.039, 371.087, 48.9191, 0.2746 ) }
    dend_23 { pt3dadd( 426.166, 371.275, 48.9588, 0.2746 ) }
    dend_23 { pt3dadd( 427.237, 371.587, 49.079, 0.2746 ) }
    dend_23 { pt3dadd( 428.288, 371.953, 49.2489, 0.2746 ) }
    dend_23 { pt3dadd( 429.34, 372.343, 49.3864, 0.2746 ) }
    dend_23 { pt3dadd( 430.474, 372.477, 49.4945, 0.2746 ) }
    dend_23 { pt3dadd( 431.458, 373.005, 49.5762, 0.2746 ) }
    dend_23 { pt3dadd( 432.339, 373.525, 49.6345, 0.2746 ) }
    dend_23 { pt3dadd( 433.22, 374.135, 49.6751, 0.2746 ) }
    dend_23 { pt3dadd( 434.173, 374.685, 49.7482, 0.2746 ) }
    dend_23 { pt3dadd( 435.294, 374.89, 49.8131, 0.2746 ) }
    dend_23 { pt3dadd( 436.413, 375.1, 49.87, 0.2746 ) }
    dend_23 { pt3dadd( 437.523, 375.305, 49.9341, 0.2748 ) }
    dend_23 { pt3dadd( 438.574, 375.724, 50.0128, 0.275 ) }
    dend_23 { pt3dadd( 439.644, 376.115, 50.0727, 0.2754 ) }
    dend_23 { pt3dadd( 440.708, 376.491, 50.1172, 0.2762 ) }
    dend_23 { pt3dadd( 441.817, 376.764, 50.1553, 0.2776 ) }
    dend_23 { pt3dadd( 442.933, 377.006, 50.1906, 0.2802 ) }
    dend_23 { pt3dadd( 444.057, 377.187, 50.2267, 0.285 ) }
    dend_23 { pt3dadd( 445.122, 377.595, 50.2695, 0.2938 ) }
    dend_23 { pt3dadd( 446.259, 377.634, 50.3247, 0.3112 ) }
    dend_23 { pt3dadd( 447.404, 377.634, 50.3947, 0.3382 ) }
    dend_23 { pt3dadd( 448.51, 377.698, 50.5448, 0.413 ) }
    dend_23 { pt3dadd( 449.542, 378.109, 50.7226, 0.4328 ) }
    dend_23 { pt3dadd( 450.289, 378.778, 50.9026, 0.3594 ) }
    dend_23 { pt3dadd( 451.432, 378.778, 51.044, 0.3 ) }
    dend_23 { pt3dadd( 452.569, 378.822, 51.1431, 0.2746 ) }
    dend_23 { pt3dadd( 453.55, 379.38, 51.2036, 0.2746 ) }
    dend_23 { pt3dadd( 454.623, 379.774, 51.2302, 0.2746 ) }
    dend_23 { pt3dadd( 455.728, 380.068, 51.2389, 0.2746 ) }
    dend_23 { pt3dadd( 456.828, 380.366, 51.2397, 0.2746 ) }
    dend_23 { pt3dadd( 457.78, 380.989, 51.2397, 0.2746 ) }
    dend_23 { pt3dadd( 458.829, 381.404, 51.2394, 0.2746 ) }
    dend_23 { pt3dadd( 459.745, 381.971, 51.2392, 0.2746 ) }
    dend_23 { pt3dadd( 460.81, 382.285, 51.2389, 0.2746 ) }
    dend_23 { pt3dadd( 461.897, 382.621, 51.2383, 0.2746 ) }
    dend_23 { pt3dadd( 463.007, 382.887, 51.2378, 0.2746 ) }
    dend_23 { pt3dadd( 464.025, 383.175, 51.2369, 0.2746 ) }
    dend_23 { pt3dadd( 464.545, 384.172, 51.2358, 0.2746 ) }
    dend_23 { pt3dadd( 465.569, 384.661, 51.2341, 0.2746 ) }
    dend_23 { pt3dadd( 466.699, 384.727, 51.2316, 0.2746 ) }
    dend_23 { pt3dadd( 467.843, 384.727, 51.2282, 0.2746 ) }
    dend_23 { pt3dadd( 468.904, 385.094, 51.2235, 0.2746 ) }
    dend_23 { pt3dadd( 469.901, 385.65, 51.217, 0.2746 ) }
    dend_23 { pt3dadd( 470.966, 386.002, 51.2078, 0.2746 ) }
    dend_23 { pt3dadd( 472.092, 386.201, 51.1949, 0.2746 ) }
    dend_23 { pt3dadd( 473.227, 386.329, 51.177, 0.2746 ) }
    dend_23 { pt3dadd( 474.37, 386.361, 51.1521, 0.2746 ) }
    dend_23 { pt3dadd( 475.294, 386.812, 51.1182, 0.2746 ) }
    dend_23 { pt3dadd( 476.279, 387.306, 51.0681, 0.2746 ) }
    dend_23 { pt3dadd( 477.381, 387.473, 50.997, 0.2746 ) }
    dend_23 { pt3dadd( 478.525, 387.473, 50.902, 0.2746 ) }
    dend_23 { pt3dadd( 479.669, 387.473, 50.7828, 0.2746 ) }
    dend_23 { pt3dadd( 480.799, 387.473, 50.612, 0.2746 ) }
    dend_23 { pt3dadd( 481.801, 387.473, 50.2435, 0.2746 ) }
    dend_23 { pt3dadd( 482.936, 387.473, 49.8834, 0.2746 ) }
    dend_23 { pt3dadd( 484.08, 387.473, 49.5726, 0.2746 ) }
    dend_23 { pt3dadd( 485.224, 387.473, 49.3074, 0.2746 ) }
    dend_23 { pt3dadd( 486.344, 387.442, 49.0218, 0.2746 ) }
    dend_23 { pt3dadd( 487.383, 387.28, 48.65, 0.2746 ) }
    dend_23 { pt3dadd( 488.488, 387.13, 48.3487, 0.2746 ) }
    dend_23 { pt3dadd( 489.589, 386.901, 48.1186, 0.2746 ) }
    dend_23 { pt3dadd( 490.733, 386.901, 47.9458, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_23 { pt3dadd( 491.874, 386.857, 47.822, 0.2746 ) }
    dend_23 { pt3dadd( 493.016, 386.786, 47.7394, 0.2746 ) }
    dend_23 { pt3dadd( 494.16, 386.786, 47.679, 0.2748 ) }
    dend_23 { pt3dadd( 495.304, 386.786, 47.6084, 0.2748 ) }
    dend_23 { pt3dadd( 496.434, 386.786, 47.462, 0.2752 ) }
    dend_23 { pt3dadd( 497.571, 386.786, 47.2937, 0.2758 ) }
    dend_23 { pt3dadd( 498.688, 386.642, 47.1248, 0.2766 ) }
    dend_23 { pt3dadd( 499.814, 386.555, 46.9361, 0.2782 ) }
    dend_23 { pt3dadd( 500.914, 386.345, 46.6948, 0.2814 ) }
    dend_23 { pt3dadd( 502.055, 386.329, 46.44, 0.287 ) }
    dend_23 { pt3dadd( 503.19, 386.224, 46.17, 0.2988 ) }
    dend_23 { pt3dadd( 503.971, 386.011, 45.6926, 0.3142 ) }
    dend_23 { pt3dadd( 504.742, 385.535, 45.008, 0.3734 ) }
    dend_23 { pt3dadd( 505.767, 385.122, 44.3716, 0.3338 ) }
    dend_23 { pt3dadd( 506.823, 384.694, 43.8516, 0.3 ) }
    dend_23 { pt3dadd( 507.836, 384.167, 43.43, 0.2746 ) }
    dend_23 { pt3dadd( 508.883, 383.718, 43.071, 0.2746 ) }
    dend_23 { pt3dadd( 509.627, 383.34, 42.5911, 0.2746 ) }
    dend_23 { pt3dadd( 510.487, 382.763, 42.1772, 0.2748 ) }
    dend_23 { pt3dadd( 511.173, 381.916, 41.8368, 0.2748 ) }
    dend_23 { pt3dadd( 512.06, 381.222, 41.5145, 0.2752 ) }
    dend_23 { pt3dadd( 512.652, 380.26, 41.2488, 0.2758 ) }
    dend_23 { pt3dadd( 513.317, 379.33, 41.0253, 0.2766 ) }
    dend_23 { pt3dadd( 513.806, 378.463, 40.7179, 0.2786 ) }
    dend_23 { pt3dadd( 514.803, 378.07, 40.4043, 0.2818 ) }
    dend_23 { pt3dadd( 515.867, 377.716, 40.1114, 0.2882 ) }
    dend_23 { pt3dadd( 516.535, 376.926, 39.9076, 0.2994 ) }
    dend_23 { pt3dadd( 516.847, 376.127, 39.4598, 0.3228 ) }
    dend_23 { pt3dadd( 517.35, 375.174, 39.0351, 0.3534 ) }
    dend_23 { pt3dadd( 517.955, 374.306, 38.6123, 0.4722 ) }
    dend_23 { pt3dadd( 518.449, 373.571, 37.9924, 0.3934 ) }
    dend_23 { pt3dadd( 519.239, 372.858, 37.399, 0.3252 ) }
    dend_23 { pt3dadd( 519.925, 371.943, 36.9267, 0.2742 ) }
    dend_23 { pt3dadd( 520.745, 371.15, 36.5761, 0.2742 ) }
    dend_23 { pt3dadd( 521.469, 370.282, 36.2748, 0.2736 ) }
    dend_23 { pt3dadd( 522.314, 369.554, 35.9918, 0.2728 ) }
    dend_23 { pt3dadd( 522.996, 368.83, 35.6488, 0.2712 ) }
    dend_23 { pt3dadd( 523.76, 368.108, 35.273, 0.2684 ) }
    dend_23 { pt3dadd( 524.304, 367.264, 35.0314, 0.2626 ) }
    dend_23 { pt3dadd( 524.676, 366.271, 34.8634, 0.2542 ) }
    dend_23 { pt3dadd( 525.643, 365.662, 34.7626, 0.2288 ) }
    dend_23 { pt3dadd( 526.698, 365.279, 34.72, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 42/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 334.729, 413.819, 43.2558, 0.563 ) }
    dend_17 { pt3dadd( 335.35, 414.757, 43.2944, 0.6828 ) }
    dend_17 { pt3dadd( 336.024, 415.678, 43.3331, 0.7306 ) }
    dend_17 { pt3dadd( 336.605, 416.604, 43.4554, 0.751 ) }
    dend_17 { pt3dadd( 336.812, 417.729, 43.5106, 0.6612 ) }
    dend_17 { pt3dadd( 337.122, 418.83, 43.4899, 0.6572 ) }
    dend_17 { pt3dadd( 337.21, 419.964, 43.3586, 0.5472 ) }
    dend_17 { pt3dadd( 337.594, 421.009, 43.0825, 0.6116 ) }
    dend_17 { pt3dadd( 337.901, 422.021, 42.6384, 0.5724 ) }
    dend_17 { pt3dadd( 338.333, 423.035, 42.1375, 0.5848 ) }
    dend_17 { pt3dadd( 338.77, 424.051, 41.6399, 0.4228 ) }
    dend_17 { pt3dadd( 339.311, 425.059, 41.2714, 0.3332 ) }
    dend_17 { pt3dadd( 339.853, 426.067, 41.0245, 0.2888 ) }
    dend_17 { pt3dadd( 340.173, 427.165, 40.892, 0.302 ) }
    dend_17 { pt3dadd( 340.488, 428.264, 40.8587, 0.32 ) }
    dend_17 { pt3dadd( 340.632, 429.358, 40.8299, 0.3846 ) }
    dend_17 { pt3dadd( 340.775, 430.247, 40.6487, 0.3542 ) }
    dend_17 { pt3dadd( 341.138, 431.122, 40.7792, 0.3388 ) }
    dend_17 { pt3dadd( 341.614, 431.877, 41.2205, 0.3412 ) }
    dend_17 { pt3dadd( 342.102, 432.852, 41.762, 0.4232 ) }
    dend_17 { pt3dadd( 342.571, 433.849, 42.3374, 0.4284 ) }
    dend_17 { pt3dadd( 342.991, 434.911, 42.8492, 0.4658 ) }
    dend_17 { pt3dadd( 343.452, 435.951, 43.2776, 0.6258 ) }
    dend_17 { pt3dadd( 344.076, 436.904, 43.5439, 0.713 ) }
    dend_17 { pt3dadd( 344.714, 437.849, 43.7556, 0.747 ) }
    dend_17 { pt3dadd( 345.356, 438.788, 43.9883, 0.5152 ) }
    dend_17 { pt3dadd( 346.193, 439.448, 44.3386, 0.3728 ) }
    dend_17 { pt3dadd( 347.078, 440.036, 44.8059, 0.3162 ) }
    dend_17 { pt3dadd( 347.747, 440.963, 45.2192, 0.3474 ) }
    dend_17 { pt3dadd( 348.384, 441.903, 45.5882, 0.43 ) }
    dend_17 { pt3dadd( 348.628, 443.004, 45.9626, 0.464 ) }
    dend_17 { pt3dadd( 348.873, 444.103, 46.3263, 0.4194 ) }
    dend_17 { pt3dadd( 348.939, 445.228, 46.6704, 0.4006 ) }
    dend_17 { pt3dadd( 349.005, 446.352, 46.9997, 0.5132 ) }
    dend_17 { pt3dadd( 349.261, 447.454, 47.2716, 0.4646 ) }
    dend_17 { pt3dadd( 349.602, 448.546, 47.4642, 0.4782 ) }
    dend_17 { pt3dadd( 349.867, 449.655, 47.5969, 0.4606 ) }
    dend_17 { pt3dadd( 350.041, 450.783, 47.6977, 0.4058 ) }
    dend_17 { pt3dadd( 350.252, 451.901, 47.7697, 0.4116 ) }
    dend_17 { pt3dadd( 350.762, 452.92, 47.7722, 0.3574 ) }
    dend_17 { pt3dadd( 351.166, 453.982, 47.7624, 0.3444 ) }
    dend_17 { pt3dadd( 351.47, 455.081, 47.7742, 0.3524 ) }
    dend_17 { pt3dadd( 351.781, 456.179, 47.7809, 0.4404 ) }
    dend_17 { pt3dadd( 352.107, 457.273, 47.7467, 0.4784 ) }
    dend_17 { pt3dadd( 352.442, 458.365, 47.7081, 0.4694 ) }
    dend_17 { pt3dadd( 352.783, 459.457, 47.6832, 0.3802 ) }
    dend_17 { pt3dadd( 353.156, 460.538, 47.6644, 0.3398 ) }
    dend_17 { pt3dadd( 353.581, 461.599, 47.6518, 0.3428 ) }
    dend_17 { pt3dadd( 353.991, 462.667, 47.6554, 0.4274 ) }
    dend_17 { pt3dadd( 354.352, 463.748, 47.6966, 0.4308 ) }
    dend_17 { pt3dadd( 354.75, 464.81, 47.7039, 0.4944 ) }
    dend_17 { pt3dadd( 355.189, 465.861, 47.6823, 0.5634 ) }
    dend_17 { pt3dadd( 355.741, 466.846, 47.7103, 0.4716 ) }
    dend_17 { pt3dadd( 355.921, 467.329, 47.703, 0.4506 ) }
    dend_17 { pt3dadd( 356.323, 468.398, 47.6484, 0.3772 ) }
    dend_17 { pt3dadd( 356.7, 469.475, 47.56, 0.4058 ) }
    dend_17 { pt3dadd( 356.962, 470.589, 47.4704, 0.3464 ) }
    dend_17 { pt3dadd( 357.224, 471.702, 47.3768, 0.3242 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_17 { pt3dadd( 357.658, 472.733, 47.2058, 0.3142 ) }
    dend_17 { pt3dadd( 358.124, 473.746, 46.9801, 0.3738 ) }
    dend_17 { pt3dadd( 358.522, 474.819, 46.8135, 0.3346 ) }
    dend_17 { pt3dadd( 358.917, 475.893, 46.7015, 0.3012 ) }
    dend_17 { pt3dadd( 359.186, 477.002, 46.6393, 0.2768 ) }
    dend_17 { pt3dadd( 359.423, 478.121, 46.6273, 0.279 ) }
    dend_17 { pt3dadd( 359.706, 479.228, 46.664, 0.2824 ) }
    dend_17 { pt3dadd( 360.047, 480.321, 46.7356, 0.2888 ) }
    dend_17 { pt3dadd( 360.319, 481.422, 46.837, 0.302 ) }
    dend_17 { pt3dadd( 360.319, 482.56, 47.0028, 0.32 ) }
    dend_17 { pt3dadd( 360.319, 483.697, 47.2214, 0.3846 ) }
    dend_17 { pt3dadd( 360.465, 484.823, 47.4712, 0.3544 ) }
    dend_17 { pt3dadd( 360.69, 485.943, 47.7394, 0.3388 ) }
    dend_17 { pt3dadd( 361.006, 487.022, 48.0463, 0.3426 ) }
    dend_17 { pt3dadd( 361.472, 488.036, 48.4151, 0.4208 ) }
    dend_17 { pt3dadd( 362.054, 488.983, 48.8127, 0.4474 ) }
    dend_17 { pt3dadd( 362.74, 489.87, 49.2145, 0.3872 ) }
    dend_17 { pt3dadd( 363.522, 490.659, 49.6121, 0.3464 ) }
    dend_17 { pt3dadd( 364.338, 491.417, 49.989, 0.3858 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 19/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 334.729, 413.819, 43.2558, 0.563 ) }
    dend_16 { pt3dadd( 333.791, 413.43, 45.2102, 0.2288 ) }
    dend_16 { pt3dadd( 333.038, 413.921, 46.1076, 0.287 ) }
    dend_16 { pt3dadd( 332.189, 414.676, 46.4167, 0.2988 ) }
    dend_16 { pt3dadd( 331.163, 415.152, 46.7326, 0.3142 ) }
    dend_16 { pt3dadd( 330.133, 415.587, 47.0968, 0.3736 ) }
    dend_16 { pt3dadd( 329.078, 415.998, 47.4359, 0.3346 ) }
    dend_16 { pt3dadd( 328.005, 416.395, 47.707, 0.3008 ) }
    dend_16 { pt3dadd( 326.905, 416.636, 47.924, 0.276 ) }
    dend_16 { pt3dadd( 325.8, 416.636, 48.1782, 0.2774 ) }
    dend_16 { pt3dadd( 324.795, 416.701, 48.5766, 0.2796 ) }
    dend_16 { pt3dadd( 323.856, 417.011, 48.83, 0.2838 ) }
    dend_16 { pt3dadd( 322.773, 417.093, 48.9941, 0.292 ) }
    dend_16 { pt3dadd( 321.693, 417.093, 49.2106, 0.3064 ) }
    dend_16 { pt3dadd( 320.607, 417.069, 49.4379, 0.3354 ) }
    dend_16 { pt3dadd( 319.525, 416.838, 49.5631, 0.378 ) }
    dend_16 { pt3dadd( 318.485, 416.529, 49.4449, 0.5122 ) }
    dend_16 { pt3dadd( 317.671, 416.329, 49.042, 0.4928 ) }
    dend_16 { pt3dadd( 316.861, 417.012, 48.5153, 0.386 ) }
    dend_16 { pt3dadd( 315.799, 417.093, 47.9338, 0.3022 ) }
    dend_16 { pt3dadd( 314.748, 417.417, 47.542, 0.2786 ) }
    dend_16 { pt3dadd( 313.733, 417.883, 47.3726, 0.2822 ) }
    dend_16 { pt3dadd( 312.767, 418.486, 47.3099, 0.2886 ) }
    dend_16 { pt3dadd( 311.812, 419.114, 47.2984, 0.3002 ) }
    dend_16 { pt3dadd( 310.881, 419.758, 47.3365, 0.3244 ) }
    dend_16 { pt3dadd( 309.952, 420.384, 47.3514, 0.3562 ) }
    dend_16 { pt3dadd( 308.996, 420.905, 47.1472, 0.4772 ) }
    dend_16 { pt3dadd( 308.007, 421.41, 46.821, 0.4022 ) }
    dend_16 { pt3dadd( 306.972, 421.89, 46.4828, 0.3422 ) }
    dend_16 { pt3dadd( 305.969, 422.368, 46.1028, 0.3054 ) }
    dend_16 { pt3dadd( 305.028, 422.709, 45.593, 0.3326 ) }
    dend_16 { pt3dadd( 304.286, 423.311, 45.0397, 0.3776 ) }
    dend_16 { pt3dadd( 303.34, 423.827, 44.7857, 0.4878 ) }
    dend_16 { pt3dadd( 302.272, 424.001, 44.7434, 0.563 ) }
    dend_16 { pt3dadd( 301.166, 424.236, 44.7549, 0.6414 ) }
    dend_16 { pt3dadd( 300.203, 424.79, 44.7485, 0.626 ) }
    dend_16 { pt3dadd( 299.356, 425.292, 44.5976, 0.4618 ) }
    dend_16 { pt3dadd( 298.254, 425.368, 44.4262, 0.3592 ) }
    dend_16 { pt3dadd( 297.247, 425.582, 44.3912, 0.3322 ) }
    dend_16 { pt3dadd( 296.59, 426.106, 44.6606, 0.4066 ) }
    dend_16 { pt3dadd( 295.741, 426.816, 44.9882, 0.3962 ) }
    dend_16 { pt3dadd( 294.745, 427.148, 45.2166, 0.4122 ) }
    dend_16 { pt3dadd( 293.626, 427.238, 45.3701, 0.4986 ) }
    dend_16 { pt3dadd( 292.512, 427.5, 45.4723, 0.6124 ) }
    dend_16 { pt3dadd( 291.398, 427.762, 45.5174, 0.5904 ) }
    dend_16 { pt3dadd( 290.258, 427.708, 45.5319, 0.5396 ) }
    dend_16 { pt3dadd( 289.116, 427.638, 45.5714, 0.4898 ) }
    dend_16 { pt3dadd( 287.989, 427.452, 45.6537, 0.4122 ) }
    dend_16 { pt3dadd( 286.865, 427.241, 45.7727, 0.4252 ) }
    dend_16 { pt3dadd( 285.758, 426.969, 45.9264, 0.3772 ) }
    dend_16 { pt3dadd( 284.707, 426.709, 46.216, 0.4058 ) }
    dend_16 { pt3dadd( 283.596, 426.754, 46.5956, 0.3464 ) }
    dend_16 { pt3dadd( 282.471, 426.949, 46.9918, 0.3244 ) }
    dend_16 { pt3dadd( 281.344, 427.143, 47.4093, 0.3144 ) }
    dend_16 { pt3dadd( 280.291, 427.379, 47.9629, 0.374 ) }
    dend_16 { pt3dadd( 279.249, 427.619, 48.6321, 0.335 ) }
    dend_16 { pt3dadd( 278.228, 428.03, 49.3455, 0.302 ) }
    dend_16 { pt3dadd( 277.198, 428.397, 50.0931, 0.2784 ) }
    dend_16 { pt3dadd( 276.116, 428.469, 50.8754, 0.2818 ) }
    dend_16 { pt3dadd( 275.037, 428.545, 51.6589, 0.288 ) }
    dend_16 { pt3dadd( 274.059, 428.796, 52.4597, 0.2992 ) }
    dend_16 { pt3dadd( 273.048, 428.998, 53.2148, 0.322 ) }
    dend_16 { pt3dadd( 271.923, 428.962, 53.7984, 0.353 ) }
    dend_16 { pt3dadd( 270.912, 428.76, 54.3063, 0.466 ) }
    dend_16 { pt3dadd( 269.852, 429.15, 54.6146, 0.4068 ) }
    dend_16 { pt3dadd( 269.21, 429.913, 54.4076, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 328.136, 427.742, 27.2709, 0.387 ) }
    dend_14 { pt3dadd( 328.0, 428.667, 27.0494, 0.3602 ) }
    dend_14 { pt3dadd( 327.835, 429.794, 26.9485, 0.3438 ) }
    dend_14 { pt3dadd( 327.669, 430.92, 26.9402, 0.3812 ) }
    dend_14 { pt3dadd( 327.932, 432.028, 26.9622, 0.3482 ) }
    dend_14 { pt3dadd( 328.22, 433.136, 26.9887, 0.3264 ) }
    dend_14 { pt3dadd( 328.597, 434.213, 26.9874, 0.3246 ) }
    dend_14 { pt3dadd( 329.021, 435.276, 26.9522, 0.3632 ) }
    dend_14 { pt3dadd( 329.431, 436.343, 26.8863, 0.4586 ) }
    dend_14 { pt3dadd( 329.747, 437.36, 26.6951, 0.5202 ) }
    dend_14 { pt3dadd( 330.449, 437.998, 26.3759, 0.507 ) }
    dend_14 { pt3dadd( 330.965, 438.865, 26.3138, 0.6452 ) }
    dend_14 { pt3dadd( 331.766, 439.64, 26.3516, 0.5682 ) }
    dend_14 { pt3dadd( 332.564, 440.438, 26.4285, 0.4418 ) }
    dend_14 { pt3dadd( 333.228, 441.332, 26.3908, 0.3534 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( 333.942, 442.179, 26.2701, 0.3992 ) }
    dend_14 { pt3dadd( 334.603, 442.858, 26.1939, 0.3836 ) }
    dend_14 { pt3dadd( 335.299, 443.708, 26.1655, 0.382 ) }
    dend_14 { pt3dadd( 336.191, 444.375, 26.0339, 0.4776 ) }
    dend_14 { pt3dadd( 337.098, 445.026, 25.8622, 0.4032 ) }
    dend_14 { pt3dadd( 337.557, 445.787, 25.8813, 0.3438 ) }
    dend_14 { pt3dadd( 338.221, 446.123, 26.0181, 0.3098 ) }
    dend_14 { pt3dadd( 338.037, 446.751, 25.7822, 0.3346 ) }
    dend_14 { pt3dadd( 338.219, 446.933, 25.645, 0.412 ) }
    dend_14 { pt3dadd( 338.983, 447.7, 25.4978, 0.3998 ) }
    dend_14 { pt3dadd( 339.741, 448.362, 25.5344, 0.4498 ) }
    dend_14 { pt3dadd( 340.363, 449.252, 25.7663, 0.418 ) }
    dend_14 { pt3dadd( 340.996, 450.149, 26.1533, 0.507 ) }
    dend_14 { pt3dadd( 341.65, 451.059, 26.64, 0.4102 ) }
    dend_14 { pt3dadd( 342.186, 452.032, 27.1406, 0.358 ) }
    dend_14 { pt3dadd( 342.62, 453.062, 27.638, 0.3298 ) }
    dend_14 { pt3dadd( 343.066, 454.105, 28.0384, 0.4022 ) }
    dend_14 { pt3dadd( 343.52, 455.155, 28.3296, 0.3892 ) }
    dend_14 { pt3dadd( 344.115, 456.118, 28.5608, 0.3922 ) }
    dend_14 { pt3dadd( 344.837, 457.002, 28.77, 0.4964 ) }
    dend_14 { pt3dadd( 345.665, 457.768, 28.9898, 0.4386 ) }
    dend_14 { pt3dadd( 346.558, 458.465, 29.2354, 0.4054 ) }
    dend_14 { pt3dadd( 347.509, 459.093, 29.4644, 0.4442 ) }
    dend_14 { pt3dadd( 348.476, 459.703, 29.668, 0.4856 ) }
    dend_14 { pt3dadd( 349.244, 460.514, 29.9023, 0.482 ) }
    dend_14 { pt3dadd( 349.966, 461.371, 30.1619, 0.4048 ) }
    dend_14 { pt3dadd( 350.859, 462.085, 30.35, 0.3786 ) }
    dend_14 { pt3dadd( 351.745, 462.806, 30.4808, 0.4478 ) }
    dend_14 { pt3dadd( 352.431, 463.721, 30.5704, 0.462 ) }
    dend_14 { pt3dadd( 353.124, 464.631, 30.6272, 0.5854 ) }
    dend_14 { pt3dadd( 353.994, 465.374, 30.658, 0.5714 ) }
    dend_14 { pt3dadd( 354.853, 466.126, 30.6793, 0.5826 ) }
    dend_14 { pt3dadd( 355.482, 467.082, 30.7082, 0.4188 ) }
    dend_14 { pt3dadd( 356.11, 468.038, 30.7485, 0.3258 ) }
    dend_14 { pt3dadd( 356.691, 469.023, 30.8126, 0.2752 ) }
    dend_14 { pt3dadd( 357.272, 470.008, 30.8991, 0.2758 ) }
    dend_14 { pt3dadd( 357.914, 470.955, 30.9988, 0.2766 ) }
    dend_14 { pt3dadd( 358.736, 471.707, 31.1142, 0.2782 ) }
    dend_14 { pt3dadd( 359.671, 472.218, 31.3639, 0.2816 ) }
    dend_14 { pt3dadd( 360.022, 473.289, 31.6123, 0.2872 ) }
    dend_14 { pt3dadd( 360.361, 474.373, 31.8301, 0.2992 ) }
    dend_14 { pt3dadd( 361.089, 475.222, 32.0984, 0.315 ) }
    dend_14 { pt3dadd( 361.821, 476.074, 32.3781, 0.375 ) }
    dend_14 { pt3dadd( 362.642, 476.87, 32.58, 0.337 ) }
    dend_14 { pt3dadd( 363.439, 477.691, 32.7127, 0.3056 ) }
    dend_14 { pt3dadd( 364.283, 478.44, 32.7524, 0.285 ) }
    dend_14 { pt3dadd( 364.965, 479.248, 32.7516, 0.2938 ) }
    dend_14 { pt3dadd( 365.684, 480.04, 32.8412, 0.3112 ) }
    dend_14 { pt3dadd( 366.633, 480.679, 32.93, 0.3384 ) }
    dend_14 { pt3dadd( 367.573, 481.328, 33.0341, 0.4132 ) }
    dend_14 { pt3dadd( 368.314, 482.198, 33.1559, 0.4332 ) }
    dend_14 { pt3dadd( 369.057, 483.068, 33.3012, 0.3602 ) }
    dend_14 { pt3dadd( 369.783, 483.91, 33.5496, 0.3016 ) }
    dend_14 { pt3dadd( 370.531, 484.747, 33.8433, 0.2776 ) }
    dend_14 { pt3dadd( 371.326, 485.569, 34.118, 0.2806 ) }
    dend_14 { pt3dadd( 372.135, 486.376, 34.3874, 0.2854 ) }
    dend_14 { pt3dadd( 372.968, 487.156, 34.6727, 0.2944 ) }
    dend_14 { pt3dadd( 373.761, 487.918, 35.0266, 0.312 ) }
    dend_14 { pt3dadd( 374.499, 488.656, 35.5018, 0.34 ) }
    dend_14 { pt3dadd( 375.458, 489.219, 35.936, 0.416 ) }
    dend_14 { pt3dadd( 376.481, 489.73, 36.2992, 0.4384 ) }
    dend_14 { pt3dadd( 377.343, 490.432, 36.664, 0.3698 ) }
    dend_14 { pt3dadd( 378.13, 491.219, 37.0468, 0.3192 ) }
    dend_14 { pt3dadd( 378.602, 492.254, 37.3419, 0.3112 ) }
    dend_14 { pt3dadd( 379.055, 493.304, 37.5668, 0.3384 ) }
    dend_14 { pt3dadd( 379.572, 494.297, 37.8286, 0.413 ) }
    dend_14 { pt3dadd( 380.105, 495.278, 38.1301, 0.4328 ) }
    dend_14 { pt3dadd( 380.704, 496.251, 38.3586, 0.3596 ) }
    dend_14 { pt3dadd( 381.303, 497.226, 38.5367, 0.3006 ) }
    dend_14 { pt3dadd( 381.571, 498.336, 38.6901, 0.2758 ) }
    dend_14 { pt3dadd( 382.371, 499.141, 38.8268, 0.2766 ) }
    dend_14 { pt3dadd( 383.189, 499.859, 38.9553, 0.2782 ) }
    dend_14 { pt3dadd( 384.263, 500.148, 39.1216, 0.2814 ) }
    dend_14 { pt3dadd( 385.14, 500.775, 39.4374, 0.287 ) }
    dend_14 { pt3dadd( 385.507, 501.856, 39.7256, 0.2988 ) }
    dend_14 { pt3dadd( 386.035, 502.806, 40.0546, 0.3142 ) }
    dend_14 { pt3dadd( 386.73, 503.675, 40.434, 0.3734 ) }
    dend_14 { pt3dadd( 387.39, 504.607, 40.7504, 0.3338 ) }
    dend_14 { pt3dadd( 388.047, 505.543, 41.004, 0.3 ) }
    dend_14 { pt3dadd( 388.559, 506.537, 41.2896, 0.2746 ) }
    dend_14 { pt3dadd( 389.088, 507.516, 41.6072, 0.2746 ) }
    dend_14 { pt3dadd( 389.909, 508.311, 41.8547, 0.2746 ) }
    dend_14 { pt3dadd( 390.685, 509.137, 42.0557, 0.2746 ) }
    dend_14 { pt3dadd( 391.096, 510.193, 42.2789, 0.2746 ) }
    dend_14 { pt3dadd( 391.509, 511.249, 42.504, 0.2748 ) }
    dend_14 { pt3dadd( 391.929, 512.311, 42.6888, 0.275 ) }
    dend_14 { pt3dadd( 392.32, 513.379, 42.8383, 0.2754 ) }
    dend_14 { pt3dadd( 392.366, 514.521, 42.9484, 0.2762 ) }
    dend_14 { pt3dadd( 393.172, 515.071, 43.1141, 0.2776 ) }
    dend_14 { pt3dadd( 394.269, 515.182, 43.1214, 0.2802 ) }
    dend_14 { pt3dadd( 394.886, 515.967, 42.9761, 0.285 ) }
    dend_14 { pt3dadd( 395.147, 517.077, 42.7804, 0.2938 ) }
    dend_14 { pt3dadd( 395.89, 517.836, 42.5309, 0.3112 ) }
    dend_14 { pt3dadd( 396.515, 518.79, 42.2789, 0.3382 ) }
    dend_14 { pt3dadd( 397.215, 519.678, 42.0316, 0.413 ) }
    dend_14 { pt3dadd( 398.001, 520.491, 41.8138, 0.4328 ) }
    dend_14 { pt3dadd( 398.938, 521.113, 41.6584, 0.3594 ) }
    dend_14 { pt3dadd( 399.955, 521.634, 41.5713, 0.3 ) }
    dend_14 { pt3dadd( 400.927, 522.204, 41.6189, 0.2748 ) }
    dend_14 { pt3dadd( 401.882, 522.793, 41.7978, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_14 { pt3dadd( 402.847, 523.402, 42.0081, 0.2752 ) }
    dend_14 { pt3dadd( 403.815, 524.011, 42.2285, 0.2758 ) }
    dend_14 { pt3dadd( 404.787, 524.574, 42.5107, 0.2766 ) }
    dend_14 { pt3dadd( 405.771, 525.112, 42.831, 0.2784 ) }
    dend_14 { pt3dadd( 406.877, 525.4, 43.094, 0.2818 ) }
    dend_14 { pt3dadd( 407.985, 525.687, 43.3135, 0.288 ) }
    dend_14 { pt3dadd( 408.946, 526.24, 43.5747, 0.2994 ) }
    dend_14 { pt3dadd( 409.863, 526.872, 43.8757, 0.3204 ) }
    dend_14 { pt3dadd( 410.67, 527.647, 44.1812, 0.361 ) }
    dend_14 { pt3dadd( 411.491, 528.415, 44.4469, 0.4276 ) }
    dend_14 { pt3dadd( 412.354, 529.163, 44.5936, 0.5938 ) }
    dend_14 { pt3dadd( 413.257, 529.849, 44.6172, 0.695 ) }
    dend_14 { pt3dadd( 414.161, 530.538, 44.5497, 0.5132 ) }
    dend_14 { pt3dadd( 415.034, 531.277, 44.4791, 0.369 ) }
    dend_14 { pt3dadd( 415.902, 532.008, 44.3758, 0.308 ) }
    dend_14 { pt3dadd( 416.777, 532.727, 44.2585, 0.3386 ) }
    dend_14 { pt3dadd( 417.704, 533.393, 44.2322, 0.3828 ) }
    dend_14 { pt3dadd( 418.437, 534.256, 44.2464, 0.5266 ) }
    dend_14 { pt3dadd( 419.094, 535.191, 44.296, 0.4912 ) }
    dend_14 { pt3dadd( 419.641, 536.152, 44.3173, 0.5218 ) }
    dend_14 { pt3dadd( 420.103, 537.071, 44.5595, 0.5662 ) }
    dend_14 { pt3dadd( 420.811, 537.71, 44.9747, 0.4834 ) }
    dend_14 { pt3dadd( 421.113, 538.794, 45.4079, 0.4422 ) }
    dend_14 { pt3dadd( 421.48, 539.85, 45.8374, 0.5068 ) }
    dend_14 { pt3dadd( 422.162, 540.769, 46.1978, 0.629 ) }
    dend_14 { pt3dadd( 422.819, 541.671, 46.4562, 0.614 ) }
    dend_14 { pt3dadd( 423.307, 542.636, 46.573, 0.6162 ) }
    dend_14 { pt3dadd( 423.617, 543.672, 46.7947, 0.4756 ) }
    dend_14 { pt3dadd( 424.013, 544.438, 47.2651, 0.4578 ) }
    dend_14 { pt3dadd( 424.392, 545.237, 47.9083, 0.3904 ) }
    dend_14 { pt3dadd( 424.471, 546.31, 48.3126, 0.4316 ) }
    dend_14 { pt3dadd( 425.085, 547.077, 48.4162, 0.389 ) }
    dend_14 { pt3dadd( 425.897, 547.877, 48.4784, 0.4288 ) }
    dend_14 { pt3dadd( 426.687, 548.658, 48.5654, 0.3844 ) }
    dend_14 { pt3dadd( 427.142, 549.55, 48.7626, 0.419 ) }
    dend_14 { pt3dadd( 427.647, 550.257, 49.0538, 0.372 ) }
    dend_14 { pt3dadd( 428.483, 550.831, 49.2024, 0.3666 ) }
    dend_14 { pt3dadd( 429.08, 551.56, 49.0935, 0.4184 ) }
    dend_14 { pt3dadd( 429.885, 552.287, 48.8701, 0.4424 ) }
    dend_14 { pt3dadd( 430.622, 552.856, 48.4702, 0.3778 ) }
    dend_14 { pt3dadd( 431.377, 553.524, 48.1877, 0.334 ) }
    dend_14 { pt3dadd( 432.036, 554.226, 48.3053, 0.3384 ) }
    dend_14 { pt3dadd( 432.2, 555.013, 48.8208, 0.3896 ) }
    dend_14 { pt3dadd( 432.254, 556.078, 49.492, 0.5048 ) }
    dend_14 { pt3dadd( 432.854, 556.98, 49.9906, 0.6182 ) }
    dend_14 { pt3dadd( 433.577, 557.85, 50.4644, 0.6298 ) }
    dend_14 { pt3dadd( 434.41, 558.524, 50.9765, 0.4704 ) }
    dend_14 { pt3dadd( 435.324, 559.199, 51.3853, 0.3692 ) }
    dend_14 { pt3dadd( 435.811, 559.924, 51.8946, 0.3812 ) }
    dend_14 { pt3dadd( 436.036, 560.724, 52.5809, 0.3484 ) }
    dend_14 { pt3dadd( 436.723, 561.411, 52.9259, 0.3264 ) }
    dend_14 { pt3dadd( 437.443, 562.248, 53.1625, 0.326 ) }
    dend_14 { pt3dadd( 438.108, 563.086, 53.5032, 0.3594 ) }
    dend_14 { pt3dadd( 438.687, 564.041, 53.879, 0.4828 ) }
    dend_14 { pt3dadd( 439.257, 565.019, 54.2662, 0.4122 ) }
    dend_14 { pt3dadd( 439.837, 565.984, 54.6958, 0.3622 ) }
    dend_14 { pt3dadd( 440.445, 566.908, 55.228, 0.3378 ) }
    dend_14 { pt3dadd( 441.042, 567.847, 55.7872, 0.4176 ) }
    dend_14 { pt3dadd( 441.632, 568.801, 56.3363, 0.4118 ) }
    dend_14 { pt3dadd( 442.228, 569.769, 56.831, 0.4644 ) }
    dend_14 { pt3dadd( 442.828, 570.744, 57.262, 0.4832 ) }
    dend_14 { pt3dadd( 443.397, 571.624, 57.7752, 0.4422 ) }
    dend_14 { pt3dadd( 443.951, 572.453, 58.4158, 0.5048 ) }
    dend_14 { pt3dadd( 444.904, 573.043, 59.0307, 0.4058 ) }
    dend_14 { pt3dadd( 445.885, 573.582, 59.6064, 0.3502 ) }
    dend_14 { pt3dadd( 446.983, 573.903, 60.0908, 0.3152 ) }
    dend_14 { pt3dadd( 448.081, 574.223, 60.4881, 0.3756 ) }
    dend_14 { pt3dadd( 448.956, 574.591, 60.9672, 0.339 ) }
    dend_14 { pt3dadd( 449.949, 574.781, 61.4706, 0.305 ) }
    dend_14 { pt3dadd( 450.484, 575.739, 61.8419, 0.305 ) }
    dend_14 { pt3dadd( 450.513, 576.88, 62.3423, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 71/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 328.136, 427.742, 27.2709, 0.387 ) }
    dend_11 { pt3dadd( 328.582, 428.158, 26.1414, 0.2288 ) }
    dend_11 { pt3dadd( 329.44, 428.879, 25.8984, 0.3362 ) }
    dend_11 { pt3dadd( 330.245, 429.666, 25.7841, 0.4156 ) }
    dend_11 { pt3dadd( 330.938, 430.575, 25.7126, 0.4064 ) }
    dend_11 { pt3dadd( 331.628, 431.465, 25.7408, 0.4622 ) }
    dend_11 { pt3dadd( 332.331, 432.352, 25.8257, 0.4402 ) }
    dend_11 { pt3dadd( 333.007, 433.249, 25.9817, 0.5504 ) }
    dend_11 { pt3dadd( 333.609, 434.206, 26.172, 0.4808 ) }
    dend_11 { pt3dadd( 334.094, 435.222, 26.3737, 0.5384 ) }
    dend_11 { pt3dadd( 334.538, 436.26, 26.5313, 0.4214 ) }
    dend_11 { pt3dadd( 335.043, 437.256, 26.5348, 0.3784 ) }
    dend_11 { pt3dadd( 335.718, 438.138, 26.3897, 0.3696 ) }
    dend_11 { pt3dadd( 336.48, 438.966, 26.1617, 0.466 ) }
    dend_11 { pt3dadd( 337.312, 439.718, 25.8775, 0.5564 ) }
    dend_11 { pt3dadd( 338.192, 440.442, 25.6224, 0.4656 ) }
    dend_11 { pt3dadd( 338.97, 441.266, 25.4406, 0.408 ) }
    dend_11 { pt3dadd( 339.612, 442.211, 25.3343, 0.449 ) }
    dend_11 { pt3dadd( 340.278, 443.141, 25.2911, 0.494 ) }
    dend_11 { pt3dadd( 340.984, 444.039, 25.3045, 0.4996 ) }
    dend_11 { pt3dadd( 341.725, 444.902, 25.3291, 0.4306 ) }
    dend_11 { pt3dadd( 342.483, 445.753, 25.3272, 0.4582 ) }
    dend_11 { pt3dadd( 343.135, 446.683, 25.3379, 0.4412 ) }
    dend_11 { pt3dadd( 343.575, 447.71, 25.403, 0.5148 ) }
    dend_11 { pt3dadd( 344.012, 448.739, 25.4252, 0.5956 ) }
    dend_11 { pt3dadd( 344.624, 449.687, 25.3627, 0.5576 ) }
    dend_11 { pt3dadd( 345.292, 450.61, 25.2798, 0.4848 ) }
    dend_11 { pt3dadd( 346.086, 451.427, 25.1966, 0.3616 ) }
    dend_11 { pt3dadd( 347.035, 452.057, 25.1082, 0.3044 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_11 { pt3dadd( 347.987, 452.69, 25.0166, 0.2824 ) }
    dend_11 { pt3dadd( 348.812, 453.474, 24.9221, 0.2892 ) }
    dend_11 { pt3dadd( 349.406, 454.414, 24.7692, 0.3016 ) }
    dend_11 { pt3dadd( 349.833, 455.46, 24.5904, 0.3256 ) }
    dend_11 { pt3dadd( 350.3, 456.494, 24.4808, 0.3648 ) }
    dend_11 { pt3dadd( 351.118, 457.245, 24.4396, 0.463 ) }
    dend_11 { pt3dadd( 351.925, 458.012, 24.3401, 0.5216 ) }
    dend_11 { pt3dadd( 352.469, 459.001, 24.2565, 0.545 ) }
    dend_11 { pt3dadd( 352.676, 460.118, 24.2077, 0.5418 ) }
    dend_11 { pt3dadd( 352.732, 461.26, 24.1797, 0.5344 ) }
    dend_11 { pt3dadd( 352.947, 462.381, 24.1636, 0.5282 ) }
    dend_11 { pt3dadd( 353.457, 463.397, 24.1657, 0.4794 ) }
    dend_11 { pt3dadd( 354.14, 464.313, 24.1952, 0.5698 ) }
    dend_11 { pt3dadd( 354.638, 465.338, 24.2423, 0.5466 ) }
    dend_11 { pt3dadd( 355.214, 466.324, 24.3065, 0.5126 ) }
    dend_11 { pt3dadd( 355.714, 467.352, 24.3913, 0.4074 ) }
    dend_11 { pt3dadd( 355.984, 468.457, 24.5087, 0.4144 ) }
    dend_11 { pt3dadd( 356.328, 469.518, 24.7188, 0.364 ) }
    dend_11 { pt3dadd( 356.739, 470.572, 24.9789, 0.3502 ) }
    dend_11 { pt3dadd( 357.216, 471.608, 25.2295, 0.3936 ) }
    dend_11 { pt3dadd( 357.685, 472.652, 25.4645, 0.3712 ) }
    dend_11 { pt3dadd( 358.181, 473.682, 25.6964, 0.3706 ) }
    dend_11 { pt3dadd( 358.706, 474.667, 25.999, 0.396 ) }
    dend_11 { pt3dadd( 359.223, 475.659, 26.3541, 0.5466 ) }
    dend_11 { pt3dadd( 359.56, 476.709, 26.7677, 0.551 ) }
    dend_11 { pt3dadd( 359.671, 477.839, 27.1316, 0.5202 ) }
    dend_11 { pt3dadd( 359.743, 478.978, 27.46, 0.4236 ) }
    dend_11 { pt3dadd( 360.429, 479.811, 27.8295, 0.439 ) }
    dend_11 { pt3dadd( 361.251, 480.585, 28.1677, 0.4338 ) }
    dend_11 { pt3dadd( 361.935, 481.499, 28.4242, 0.3612 ) }
    dend_11 { pt3dadd( 362.788, 482.259, 28.6236, 0.3036 ) }
    dend_11 { pt3dadd( 363.242, 483.28, 28.845, 0.2812 ) }
    dend_11 { pt3dadd( 363.499, 484.392, 28.9808, 0.287 ) }
    dend_11 { pt3dadd( 364.024, 485.672, 29.106, 0.2976 ) }
    dend_11 { pt3dadd( 364.473, 486.716, 29.2211, 0.3168 ) }
    dend_11 { pt3dadd( 365.319, 487.485, 29.2975, 0.3548 ) }
    dend_11 { pt3dadd( 366.168, 488.252, 29.3381, 0.4148 ) }
    dend_11 { pt3dadd( 367.08, 488.94, 29.3474, 0.5762 ) }
    dend_11 { pt3dadd( 367.978, 489.586, 29.2958, 0.6314 ) }
    dend_11 { pt3dadd( 368.56, 490.5, 29.2491, 0.545 ) }
    dend_11 { pt3dadd( 368.812, 491.54, 29.2272, 0.3886 ) }
    dend_11 { pt3dadd( 369.383, 492.484, 29.1399, 0.3072 ) }
    dend_11 { pt3dadd( 370.077, 493.389, 29.1054, 0.2876 ) }
    dend_11 { pt3dadd( 371.008, 493.887, 29.2636, 0.2998 ) }
    dend_11 { pt3dadd( 371.87, 494.584, 29.5229, 0.316 ) }
    dend_11 { pt3dadd( 372.782, 495.232, 29.8346, 0.377 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 316.22, 396.486, 47.3376, 0.3952 ) }
    dend_9 { pt3dadd( 315.731, 397.251, 48.0382, 0.502 ) }
    dend_9 { pt3dadd( 315.552, 398.345, 48.7144, 0.4492 ) }
    dend_9 { pt3dadd( 315.174, 399.218, 49.5116, 0.4258 ) }
    dend_9 { pt3dadd( 314.637, 400.114, 50.3266, 0.4766 ) }
    dend_9 { pt3dadd( 314.061, 400.949, 51.1748, 0.5714 ) }
    dend_9 { pt3dadd( 313.862, 402.031, 51.9688, 0.5176 ) }
    dend_9 { pt3dadd( 314.266, 403.065, 52.696, 0.3848 ) }
    dend_9 { pt3dadd( 314.492, 404.082, 53.1373, 0.3002 ) }
    dend_9 { pt3dadd( 314.535, 405.217, 53.5455, 0.275 ) }
    dend_9 { pt3dadd( 314.535, 406.226, 54.1164, 0.2752 ) }
    dend_9 { pt3dadd( 314.621, 407.081, 54.8988, 0.2758 ) }
    dend_9 { pt3dadd( 315.016, 408.123, 55.687, 0.2768 ) }
    dend_9 { pt3dadd( 315.409, 409.12, 56.5197, 0.279 ) }
    dend_9 { pt3dadd( 315.437, 410.253, 57.3, 0.2824 ) }
    dend_9 { pt3dadd( 315.183, 411.292, 58.1185, 0.2894 ) }
    dend_9 { pt3dadd( 315.297, 412.268, 58.9728, 0.3016 ) }
    dend_9 { pt3dadd( 314.91, 413.314, 59.7668, 0.3264 ) }
    dend_9 { pt3dadd( 314.332, 413.99, 60.7197, 0.3606 ) }
    dend_9 { pt3dadd( 314.148, 414.938, 61.752, 0.4852 ) }
    dend_9 { pt3dadd( 314.077, 416.012, 62.8034, 0.418 ) }
    dend_9 { pt3dadd( 314.1, 417.089, 63.8501, 0.3664 ) }
    dend_9 { pt3dadd( 314.55, 417.988, 64.9552, 0.376 ) }
    dend_9 { pt3dadd( 315.053, 418.878, 66.0864, 0.3384 ) }
    dend_9 { pt3dadd( 315.656, 419.752, 67.1913, 0.3084 ) }
    dend_9 { pt3dadd( 316.155, 420.723, 68.2452, 0.2904 ) }
    dend_9 { pt3dadd( 316.84, 421.332, 69.3787, 0.3038 ) }
    dend_9 { pt3dadd( 317.072, 422.224, 70.441, 0.3292 ) }
    dend_9 { pt3dadd( 316.629, 423.159, 71.4748, 0.373 ) }
    dend_9 { pt3dadd( 316.032, 423.854, 72.6071, 0.4718 ) }
    dend_9 { pt3dadd( 315.585, 424.742, 73.7341, 0.5682 ) }
    dend_9 { pt3dadd( 315.451, 425.78, 74.8572, 0.4824 ) }
    dend_9 { pt3dadd( 315.386, 426.834, 75.966, 0.464 ) }
    dend_9 { pt3dadd( 314.894, 427.655, 77.0745, 0.4328 ) }
    dend_9 { pt3dadd( 314.142, 428.099, 78.297, 0.3596 ) }
    dend_9 { pt3dadd( 313.237, 428.578, 79.5113, 0.3006 ) }
    dend_9 { pt3dadd( 312.381, 429.225, 80.6725, 0.2758 ) }
    dend_9 { pt3dadd( 312.09, 430.226, 81.8306, 0.2764 ) }
    dend_9 { pt3dadd( 311.732, 431.106, 83.0455, 0.278 ) }
    dend_9 { pt3dadd( 311.273, 431.917, 84.2736, 0.2812 ) }
    dend_9 { pt3dadd( 310.366, 432.38, 85.4596, 0.2864 ) }
    dend_9 { pt3dadd( 309.417, 432.642, 86.6177, 0.2978 ) }
    dend_9 { pt3dadd( 308.631, 433.028, 87.7904, 0.3124 ) }
    dend_9 { pt3dadd( 308.203, 434.006, 88.8056, 0.37 ) }
    dend_9 { pt3dadd( 307.553, 434.863, 89.6445, 0.3276 ) }
    dend_9 { pt3dadd( 307.042, 435.816, 90.3762, 0.2882 ) }
    dend_9 { pt3dadd( 306.577, 436.799, 90.9874, 0.2542 ) }
    dend_9 { pt3dadd( 306.435, 437.935, 91.3884, 0.2288 ) }
    dend_9 { pt3dadd( 306.293, 439.069, 91.8131, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 95/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 316.22, 396.486, 47.3376, 0.3952 ) }
    dend_8 { pt3dadd( 315.02, 395.764, 47.2903, 0.2288 ) }
    dend_8 { pt3dadd( 313.919, 395.564, 47.2704, 0.2746 ) }
    dend_8 { pt3dadd( 312.78, 395.482, 47.283, 0.2746 ) }
    dend_8 { pt3dadd( 311.652, 395.336, 47.3046, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_8 { pt3dadd( 310.645, 395.117, 47.2248, 0.2746 ) }
    dend_8 { pt3dadd( 309.667, 395.117, 47.0207, 0.2746 ) }
    dend_8 { pt3dadd( 308.573, 395.117, 46.9666, 0.2746 ) }
    dend_8 { pt3dadd( 307.574, 395.117, 47.1794, 0.2746 ) }
    dend_8 { pt3dadd( 306.456, 395.117, 47.4796, 0.2746 ) }
    dend_8 { pt3dadd( 305.337, 395.117, 47.8355, 0.2746 ) }
    dend_8 { pt3dadd( 304.202, 395.117, 48.1634, 0.2746 ) }
    dend_8 { pt3dadd( 303.11, 394.898, 48.4028, 0.2746 ) }
    dend_8 { pt3dadd( 302.359, 394.115, 48.5321, 0.2746 ) }
    dend_8 { pt3dadd( 301.848, 393.092, 48.5736, 0.2746 ) }
    dend_8 { pt3dadd( 300.909, 392.575, 48.5439, 0.2746 ) }
    dend_8 { pt3dadd( 299.854, 392.202, 48.4366, 0.2746 ) }
    dend_8 { pt3dadd( 298.842, 391.811, 48.3109, 0.2746 ) }
    dend_8 { pt3dadd( 297.869, 391.255, 48.3006, 0.2746 ) }
    dend_8 { pt3dadd( 296.857, 390.764, 48.3431, 0.2746 ) }
    dend_8 { pt3dadd( 295.773, 390.396, 48.3638, 0.2746 ) }
    dend_8 { pt3dadd( 294.691, 390.029, 48.3568, 0.2746 ) }
    dend_8 { pt3dadd( 293.608, 389.668, 48.2983, 0.2746 ) }
    dend_8 { pt3dadd( 292.525, 389.308, 48.1894, 0.2746 ) }
    dend_8 { pt3dadd( 291.478, 388.985, 47.9581, 0.2746 ) }
    dend_8 { pt3dadd( 290.417, 388.724, 47.6809, 0.2746 ) }
    dend_8 { pt3dadd( 289.282, 388.851, 47.4858, 0.2746 ) }
    dend_8 { pt3dadd( 288.147, 388.977, 47.3796, 0.2746 ) }
    dend_8 { pt3dadd( 287.029, 388.958, 47.4471, 0.2746 ) }
    dend_8 { pt3dadd( 285.915, 388.882, 47.689, 0.2746 ) }
    dend_8 { pt3dadd( 284.823, 388.645, 48.0528, 0.2746 ) }
    dend_8 { pt3dadd( 283.738, 388.343, 48.4868, 0.2744 ) }
    dend_8 { pt3dadd( 282.62, 388.206, 48.9359, 0.2744 ) }
    dend_8 { pt3dadd( 281.485, 388.142, 49.3825, 0.2742 ) }
    dend_8 { pt3dadd( 280.397, 387.931, 49.8212, 0.2742 ) }
    dend_8 { pt3dadd( 279.437, 387.318, 50.2558, 0.2736 ) }
    dend_8 { pt3dadd( 278.469, 386.735, 50.7217, 0.2728 ) }
    dend_8 { pt3dadd( 277.49, 386.203, 51.2739, 0.2712 ) }
    dend_8 { pt3dadd( 276.564, 385.663, 51.9291, 0.2684 ) }
    dend_8 { pt3dadd( 275.687, 385.117, 52.6803, 0.2626 ) }
    dend_8 { pt3dadd( 274.64, 384.703, 53.3442, 0.2542 ) }
    dend_8 { pt3dadd( 273.932, 384.163, 54.0926, 0.2288 ) }
    dend_8 { pt3dadd( 272.871, 384.129, 55.5411, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 38/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 329.169, 372.716, 30.814, 0.4614 ) }
    dend_6 { pt3dadd( 328.129, 372.049, 30.291, 0.4576 ) }
    dend_6 { pt3dadd( 327.102, 371.553, 29.6542, 0.4112 ) }
    dend_6 { pt3dadd( 326.173, 370.97, 29.395, 0.3918 ) }
    dend_6 { pt3dadd( 325.271, 370.42, 28.9467, 0.466 ) }
    dend_6 { pt3dadd( 324.199, 370.394, 28.3699, 0.5254 ) }
    dend_6 { pt3dadd( 323.235, 370.799, 27.6747, 0.5586 ) }
    dend_6 { pt3dadd( 322.147, 371.064, 27.0407, 0.5366 ) }
    dend_6 { pt3dadd( 321.025, 371.284, 26.4952, 0.6722 ) }
    dend_6 { pt3dadd( 319.915, 371.505, 25.9431, 0.753 ) }
    dend_6 { pt3dadd( 318.806, 371.727, 25.3586, 0.8168 ) }
    dend_6 { pt3dadd( 317.737, 371.767, 24.6399, 0.6648 ) }
    dend_6 { pt3dadd( 316.676, 371.767, 23.7749, 0.5518 ) }
    dend_6 { pt3dadd( 315.609, 371.805, 22.7784, 0.4404 ) }
    dend_6 { pt3dadd( 314.63, 372.175, 21.6856, 0.4418 ) }
    dend_6 { pt3dadd( 314.116, 372.408, 20.357, 0.579 ) }
    dend_6 { pt3dadd( 314.25, 373.182, 18.9608, 0.6368 ) }
    dend_6 { pt3dadd( 314.904, 373.35, 17.6118, 0.5548 ) }
    dend_6 { pt3dadd( 315.571, 373.266, 16.2814, 0.4066 ) }
    dend_6 { pt3dadd( 316.467, 373.922, 15.2094, 0.3416 ) }
    dend_6 { pt3dadd( 316.818, 374.895, 14.3056, 0.3464 ) }
    dend_6 { pt3dadd( 316.685, 376.013, 13.663, 0.434 ) }
    dend_6 { pt3dadd( 315.801, 376.707, 13.2021, 0.4428 ) }
    dend_6 { pt3dadd( 315.095, 377.394, 12.7054, 0.5178 ) }
    dend_6 { pt3dadd( 314.802, 378.285, 12.1519, 0.6012 ) }
    dend_6 { pt3dadd( 314.215, 379.235, 11.7455, 0.5678 ) }
    dend_6 { pt3dadd( 313.234, 379.769, 11.4765, 0.5056 ) }
    dend_6 { pt3dadd( 312.333, 379.993, 11.1067, 0.3898 ) }
    dend_6 { pt3dadd( 311.412, 380.253, 10.6212, 0.4068 ) }
    dend_6 { pt3dadd( 310.414, 380.466, 10.2015, 0.2288 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 68/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 329.169, 372.716, 30.814, 0.4614 ) }
    dend_1 { pt3dadd( 329.065, 371.476, 30.73, 0.367 ) }
    dend_1 { pt3dadd( 328.919, 370.381, 30.7474, 0.3056 ) }
    dend_1 { pt3dadd( 328.982, 369.271, 30.7031, 0.3268 ) }
    dend_1 { pt3dadd( 329.122, 368.155, 30.5586, 0.3968 ) }
    dend_1 { pt3dadd( 329.417, 367.081, 30.3262, 0.3782 ) }
    dend_1 { pt3dadd( 329.844, 366.042, 30.0222, 0.3778 ) }
    dend_1 { pt3dadd( 329.999, 365.662, 29.7055, 0.4404 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 76/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 364.338, 491.417, 49.989, 0.3858 ) }
    dend_19 { pt3dadd( 363.808, 491.791, 50.1911, 0.358 ) }
    dend_19 { pt3dadd( 362.891, 492.438, 50.2236, 0.3396 ) }
    dend_19 { pt3dadd( 362.3, 493.367, 50.1948, 0.3734 ) }
    dend_19 { pt3dadd( 362.048, 494.478, 50.1584, 0.3338 ) }
    dend_19 { pt3dadd( 361.766, 495.584, 50.1309, 0.3 ) }
    dend_19 { pt3dadd( 361.693, 496.719, 50.1276, 0.2746 ) }
    dend_19 { pt3dadd( 361.48, 497.821, 50.2334, 0.2746 ) }
    dend_19 { pt3dadd( 361.259, 498.92, 50.4115, 0.2746 ) }
    dend_19 { pt3dadd( 361.234, 500.058, 50.535, 0.2746 ) }
    dend_19 { pt3dadd( 361.234, 501.201, 50.5968, 0.2746 ) }
    dend_19 { pt3dadd( 361.329, 502.322, 50.6027, 0.2746 ) }
    dend_19 { pt3dadd( 361.772, 503.365, 50.5406, 0.2746 ) }
    dend_19 { pt3dadd( 362.161, 504.425, 50.461, 0.2746 ) }
    dend_19 { pt3dadd( 362.397, 505.535, 50.465, 0.2746 ) }
    dend_19 { pt3dadd( 362.638, 506.646, 50.5434, 0.2746 ) }
    dend_19 { pt3dadd( 362.915, 507.753, 50.652, 0.2746 ) }
    dend_19 { pt3dadd( 363.193, 508.86, 50.7769, 0.2748 ) }
    dend_19 { pt3dadd( 363.528, 509.954, 50.8819, 0.275 ) }
    dend_19 { pt3dadd( 363.869, 511.045, 50.9558, 0.2752 ) }
    dend_19 { pt3dadd( 364.285, 512.11, 50.9972, 0.2758 ) }
    dend_19 { pt3dadd( 364.738, 513.161, 51.0191, 0.277 ) }
    dend_19 { pt3dadd( 365.207, 514.204, 51.0317, 0.279 ) }
    dend_19 { pt3dadd( 365.69, 515.24, 51.042, 0.283 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( 366.247, 516.235, 51.056, 0.2898 ) }
    dend_19 { pt3dadd( 366.905, 517.172, 51.0754, 0.304 ) }
    dend_19 { pt3dadd( 367.513, 518.137, 51.1025, 0.324 ) }
    dend_19 { pt3dadd( 368.055, 519.145, 51.1403, 0.3918 ) }
    dend_19 { pt3dadd( 368.526, 520.182, 51.1935, 0.3688 ) }
    dend_19 { pt3dadd( 368.867, 521.275, 51.268, 0.3592 ) }
    dend_19 { pt3dadd( 369.21, 522.365, 51.3696, 0.411 ) }
    dend_19 { pt3dadd( 369.572, 523.449, 51.5203, 0.3992 ) }
    dend_19 { pt3dadd( 369.933, 524.532, 51.7096, 0.4414 ) }
    dend_19 { pt3dadd( 370.004, 525.622, 52.0178, 0.4384 ) }
    dend_19 { pt3dadd( 370.076, 526.714, 52.4023, 0.3698 ) }
    dend_19 { pt3dadd( 370.383, 527.804, 52.7332, 0.3194 ) }
    dend_19 { pt3dadd( 370.73, 528.894, 52.9914, 0.3112 ) }
    dend_19 { pt3dadd( 370.929, 530.014, 53.1745, 0.3384 ) }
    dend_19 { pt3dadd( 371.052, 531.152, 53.284, 0.4132 ) }
    dend_19 { pt3dadd( 371.183, 532.275, 53.3476, 0.4332 ) }
    dend_19 { pt3dadd( 371.307, 533.35, 53.461, 0.3602 ) }
    dend_19 { pt3dadd( 371.307, 534.481, 53.4957, 0.3016 ) }
    dend_19 { pt3dadd( 371.262, 535.51, 53.3117, 0.2776 ) }
    dend_19 { pt3dadd( 371.024, 536.478, 52.9752, 0.2802 ) }
    dend_19 { pt3dadd( 370.849, 537.534, 52.7509, 0.2854 ) }
    dend_19 { pt3dadd( 370.849, 538.594, 52.663, 0.294 ) }
    dend_19 { pt3dadd( 370.849, 539.727, 52.5148, 0.3116 ) }
    dend_19 { pt3dadd( 370.849, 540.858, 52.3505, 0.3378 ) }
    dend_19 { pt3dadd( 370.616, 541.959, 52.2004, 0.4182 ) }
    dend_19 { pt3dadd( 370.387, 542.908, 51.9086, 0.4128 ) }
    dend_19 { pt3dadd( 370.035, 543.865, 51.6334, 0.4662 ) }
    dend_19 { pt3dadd( 369.889, 544.774, 51.7107, 0.4852 ) }
    dend_19 { pt3dadd( 369.584, 545.855, 51.8661, 0.4538 ) }
    dend_19 { pt3dadd( 369.264, 546.952, 52.0624, 0.4898 ) }
    dend_19 { pt3dadd( 368.929, 548.046, 52.2808, 0.5532 ) }
    dend_19 { pt3dadd( 368.588, 549.138, 52.5112, 0.4596 ) }
    dend_19 { pt3dadd( 368.124, 550.159, 52.764, 0.3972 ) }
    dend_19 { pt3dadd( 367.526, 551.098, 53.0648, 0.428 ) }
    dend_19 { pt3dadd( 367.128, 552.132, 53.4218, 0.4602 ) }
    dend_19 { pt3dadd( 366.82, 553.209, 53.8118, 0.4122 ) }
    dend_19 { pt3dadd( 366.369, 554.249, 54.1587, 0.3878 ) }
    dend_19 { pt3dadd( 365.858, 555.271, 54.4393, 0.4884 ) }
    dend_19 { pt3dadd( 365.122, 556.144, 54.6714, 0.4242 ) }
    dend_19 { pt3dadd( 364.366, 557.001, 54.871, 0.3776 ) }
    dend_19 { pt3dadd( 363.828, 557.983, 55.1247, 0.3966 ) }
    dend_19 { pt3dadd( 363.308, 558.978, 55.4299, 0.3778 ) }
    dend_19 { pt3dadd( 362.727, 559.963, 55.7203, 0.377 ) }
    dend_19 { pt3dadd( 362.17, 560.957, 56.0101, 0.4388 ) }
    dend_19 { pt3dadd( 361.837, 562.031, 56.3528, 0.4756 ) }
    dend_19 { pt3dadd( 361.498, 563.101, 56.7238, 0.4642 ) }
    dend_19 { pt3dadd( 361.112, 564.124, 57.1318, 0.3704 ) }
    dend_19 { pt3dadd( 360.698, 565.117, 57.5607, 0.3204 ) }
    dend_19 { pt3dadd( 360.373, 566.097, 58.0146, 0.3132 ) }
    dend_19 { pt3dadd( 360.319, 567.172, 58.2534, 0.342 ) }
    dend_19 { pt3dadd( 360.268, 568.027, 58.1028, 0.42 ) }
    dend_19 { pt3dadd( 359.718, 568.91, 57.8054, 0.4458 ) }
    dend_19 { pt3dadd( 359.416, 569.945, 57.4507, 0.3832 ) }
    dend_19 { pt3dadd( 359.05, 570.897, 57.367, 0.345 ) }
    dend_19 { pt3dadd( 358.945, 571.918, 57.4938, 0.354 ) }
    dend_19 { pt3dadd( 358.945, 573.06, 57.6845, 0.4418 ) }
    dend_19 { pt3dadd( 358.945, 574.203, 57.9006, 0.4868 ) }
    dend_19 { pt3dadd( 358.732, 575.303, 58.1714, 0.457 ) }
    dend_19 { pt3dadd( 358.43, 576.387, 58.4576, 0.4956 ) }
    dend_19 { pt3dadd( 357.984, 577.429, 58.6723, 0.5654 ) }
    dend_19 { pt3dadd( 357.473, 578.452, 58.8227, 0.476 ) }
    dend_19 { pt3dadd( 357.013, 579.499, 58.9397, 0.457 ) }
    dend_19 { pt3dadd( 356.588, 580.561, 59.0302, 0.3966 ) }
    dend_19 { pt3dadd( 356.081, 581.581, 59.0976, 0.4052 ) }
    dend_19 { pt3dadd( 355.469, 582.548, 59.1601, 0.5228 ) }
    dend_19 { pt3dadd( 354.968, 583.558, 59.257, 0.4762 ) }
    dend_19 { pt3dadd( 354.606, 584.622, 59.4166, 0.5304 ) }
    dend_19 { pt3dadd( 354.257, 585.691, 59.5445, 0.4068 ) }
    dend_19 { pt3dadd( 353.925, 586.767, 59.5661, 0.3502 ) }
    dend_19 { pt3dadd( 353.503, 587.802, 59.5806, 0.323 ) }
    dend_19 { pt3dadd( 352.99, 588.799, 59.6652, 0.3538 ) }
    dend_19 { pt3dadd( 352.54, 589.842, 59.7405, 0.4724 ) }
    dend_19 { pt3dadd( 352.115, 590.905, 59.7867, 0.3934 ) }
    dend_19 { pt3dadd( 351.541, 591.86, 59.7654, 0.3258 ) }
    dend_19 { pt3dadd( 350.845, 592.729, 59.652, 0.2754 ) }
    dend_19 { pt3dadd( 349.987, 593.435, 59.6005, 0.2762 ) }
    dend_19 { pt3dadd( 349.788, 594.505, 59.6736, 0.2776 ) }
    dend_19 { pt3dadd( 349.788, 595.649, 59.7489, 0.2802 ) }
    dend_19 { pt3dadd( 349.839, 596.648, 59.6487, 0.285 ) }
    dend_19 { pt3dadd( 350.485, 597.385, 59.5176, 0.2938 ) }
    dend_19 { pt3dadd( 351.142, 597.881, 59.7234, 0.3112 ) }
    dend_19 { pt3dadd( 351.485, 598.75, 60.0972, 0.3382 ) }
    dend_19 { pt3dadd( 351.471, 599.859, 60.3781, 0.413 ) }
    dend_19 { pt3dadd( 350.806, 600.79, 60.5864, 0.4328 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 84/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 364.338, 491.417, 49.989, 0.3858 ) }
    dend_18 { pt3dadd( 365.402, 491.919, 51.6127, 0.2288 ) }
    dend_18 { pt3dadd( 366.388, 492.435, 51.849, 0.2746 ) }
    dend_18 { pt3dadd( 367.325, 493.093, 51.9282, 0.2746 ) }
    dend_18 { pt3dadd( 368.246, 493.77, 51.9798, 0.2748 ) }
    dend_18 { pt3dadd( 369.116, 494.512, 52.0027, 0.2748 ) }
    dend_18 { pt3dadd( 370.022, 495.2, 51.9974, 0.2752 ) }
    dend_18 { pt3dadd( 371.046, 495.711, 51.9658, 0.2758 ) }
    dend_18 { pt3dadd( 372.085, 496.156, 51.9025, 0.2766 ) }
    dend_18 { pt3dadd( 373.213, 496.223, 51.7782, 0.2782 ) }
    dend_18 { pt3dadd( 374.342, 496.288, 51.616, 0.2814 ) }
    dend_18 { pt3dadd( 375.457, 496.515, 51.4786, 0.287 ) }
    dend_18 { pt3dadd( 376.569, 496.782, 51.3792, 0.2988 ) }
    dend_18 { pt3dadd( 377.623, 497.169, 51.3663, 0.3142 ) }
    dend_18 { pt3dadd( 378.621, 497.668, 51.4699, 0.3734 ) }
    dend_18 { pt3dadd( 379.579, 498.235, 51.5388, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_18 { pt3dadd( 380.52, 498.832, 51.5211, 0.3 ) }
    dend_18 { pt3dadd( 381.609, 499.152, 51.5234, 0.2746 ) }
    dend_18 { pt3dadd( 382.716, 499.441, 51.5578, 0.2746 ) }
    dend_18 { pt3dadd( 383.786, 499.814, 51.6659, 0.2746 ) }
    dend_18 { pt3dadd( 384.861, 500.0, 51.9156, 0.2746 ) }
    dend_18 { pt3dadd( 385.816, 500.588, 52.1965, 0.2746 ) }
    dend_18 { pt3dadd( 386.595, 501.382, 52.4922, 0.2746 ) }
    dend_18 { pt3dadd( 387.703, 501.667, 52.8032, 0.2746 ) }
    dend_18 { pt3dadd( 388.794, 501.794, 53.1966, 0.2746 ) }
    dend_18 { pt3dadd( 389.86, 501.985, 53.669, 0.2746 ) }
    dend_18 { pt3dadd( 390.849, 502.465, 54.1996, 0.2746 ) }
    dend_18 { pt3dadd( 391.707, 502.807, 54.8652, 0.2746 ) }
    dend_18 { pt3dadd( 392.433, 503.481, 55.5293, 0.2746 ) }
    dend_18 { pt3dadd( 393.418, 504.036, 56.0232, 0.2746 ) }
    dend_18 { pt3dadd( 394.561, 504.08, 56.3576, 0.2746 ) }
    dend_18 { pt3dadd( 395.705, 504.083, 56.5606, 0.2746 ) }
    dend_18 { pt3dadd( 396.849, 504.083, 56.6639, 0.2746 ) }
    dend_18 { pt3dadd( 397.993, 504.083, 56.6983, 0.2746 ) }
    dend_18 { pt3dadd( 399.137, 504.083, 56.7087, 0.2746 ) }
    dend_18 { pt3dadd( 400.281, 504.083, 56.7224, 0.2746 ) }
    dend_18 { pt3dadd( 401.425, 504.083, 56.7412, 0.2746 ) }
    dend_18 { pt3dadd( 402.569, 504.083, 56.7675, 0.2746 ) }
    dend_18 { pt3dadd( 403.713, 504.083, 56.8044, 0.2746 ) }
    dend_18 { pt3dadd( 404.857, 504.083, 56.8562, 0.2746 ) }
    dend_18 { pt3dadd( 406.001, 504.083, 56.9288, 0.2746 ) }
    dend_18 { pt3dadd( 407.145, 504.083, 57.0287, 0.2746 ) }
    dend_18 { pt3dadd( 408.289, 504.083, 57.169, 0.2746 ) }
    dend_18 { pt3dadd( 409.433, 504.083, 57.3698, 0.2746 ) }
    dend_18 { pt3dadd( 410.577, 504.115, 57.6514, 0.2746 ) }
    dend_18 { pt3dadd( 411.609, 504.493, 58.0314, 0.2746 ) }
    dend_18 { pt3dadd( 412.163, 505.439, 58.5234, 0.2746 ) }
    dend_18 { pt3dadd( 412.914, 505.912, 59.3138, 0.2746 ) }
    dend_18 { pt3dadd( 412.97, 505.945, 60.5626, 0.2746 ) }
    dend_18 { pt3dadd( 412.97, 506.722, 61.9662, 0.2746 ) }
    dend_18 { pt3dadd( 412.818, 507.587, 63.4676, 0.2746 ) }
    dend_18 { pt3dadd( 412.611, 508.41, 65.0135, 0.2744 ) }
    dend_18 { pt3dadd( 412.263, 509.07, 66.5274, 0.2744 ) }
    dend_18 { pt3dadd( 413.28, 509.12, 67.8807, 0.2742 ) }
    dend_18 { pt3dadd( 414.413, 509.128, 68.9461, 0.2742 ) }
    dend_18 { pt3dadd( 415.496, 509.444, 69.7936, 0.2736 ) }
    dend_18 { pt3dadd( 416.427, 509.817, 70.6395, 0.2728 ) }
    dend_18 { pt3dadd( 417.126, 510.448, 71.5504, 0.2712 ) }
    dend_18 { pt3dadd( 418.193, 510.787, 72.4094, 0.2684 ) }
    dend_18 { pt3dadd( 419.231, 511.082, 73.2687, 0.2626 ) }
    dend_18 { pt3dadd( 420.222, 511.302, 74.1826, 0.2542 ) }
    dend_18 { pt3dadd( 421.186, 511.564, 75.1052, 0.2288 ) }
    dend_18 { pt3dadd( 422.127, 511.867, 77.0776, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 47/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 372.782, 495.232, 29.8346, 0.377 ) }
    dend_13 { pt3dadd( 373.279, 495.59, 30.17, 0.2288 ) }
    dend_13 { pt3dadd( 374.19, 496.243, 30.1697, 0.3298 ) }
    dend_13 { pt3dadd( 374.984, 497.02, 30.2075, 0.3664 ) }
    dend_13 { pt3dadd( 375.739, 497.838, 30.3554, 0.4964 ) }
    dend_13 { pt3dadd( 376.25, 498.861, 30.4917, 0.4328 ) }
    dend_13 { pt3dadd( 376.763, 499.883, 30.6205, 0.4242 ) }
    dend_13 { pt3dadd( 376.975, 501.004, 30.7443, 0.3338 ) }
    dend_13 { pt3dadd( 377.163, 502.133, 30.8652, 0.3 ) }
    dend_13 { pt3dadd( 377.192, 503.257, 31.0036, 0.2746 ) }
    dend_13 { pt3dadd( 377.054, 504.378, 31.1937, 0.2746 ) }
    dend_13 { pt3dadd( 376.792, 505.458, 31.418, 0.2746 ) }
    dend_13 { pt3dadd( 376.181, 506.425, 31.6232, 0.2748 ) }
    dend_13 { pt3dadd( 375.551, 507.378, 31.8108, 0.275 ) }
    dend_13 { pt3dadd( 374.865, 508.293, 31.9808, 0.2752 ) }
    dend_13 { pt3dadd( 374.192, 509.217, 32.1502, 0.2758 ) }
    dend_13 { pt3dadd( 373.56, 510.167, 32.3518, 0.2768 ) }
    dend_13 { pt3dadd( 372.947, 511.127, 32.6046, 0.2786 ) }
    dend_13 { pt3dadd( 372.377, 512.104, 32.9294, 0.2822 ) }
    dend_13 { pt3dadd( 371.72, 513.006, 33.3273, 0.2888 ) }
    dend_13 { pt3dadd( 370.963, 513.822, 33.7966, 0.3008 ) }
    dend_13 { pt3dadd( 370.296, 514.711, 34.3081, 0.324 ) }
    dend_13 { pt3dadd( 369.664, 515.628, 34.8337, 0.3632 ) }
    dend_13 { pt3dadd( 369.256, 516.673, 35.3382, 0.4534 ) }
    dend_13 { pt3dadd( 368.861, 517.725, 35.8126, 0.5334 ) }
    dend_13 { pt3dadd( 368.418, 518.759, 36.2533, 0.422 ) }
    dend_13 { pt3dadd( 367.977, 519.79, 36.6159, 0.3316 ) }
    dend_13 { pt3dadd( 367.538, 520.814, 36.8085, 0.286 ) }
    dend_13 { pt3dadd( 367.361, 521.918, 37.0465, 0.2956 ) }
    dend_13 { pt3dadd( 367.216, 523.031, 37.3559, 0.3144 ) }
    dend_13 { pt3dadd( 366.999, 524.149, 37.6729, 0.3442 ) }
    dend_13 { pt3dadd( 366.754, 525.256, 37.9949, 0.424 ) }
    dend_13 { pt3dadd( 366.373, 526.194, 38.4843, 0.453 ) }
    dend_13 { pt3dadd( 365.984, 526.979, 39.123, 0.3978 ) }
    dend_13 { pt3dadd( 365.711, 527.824, 39.758, 0.367 ) }
    dend_13 { pt3dadd( 365.363, 528.79, 40.0537, 0.4192 ) }
    dend_13 { pt3dadd( 365.071, 529.768, 40.0554, 0.4444 ) }
    dend_13 { pt3dadd( 364.696, 530.793, 39.9473, 0.3808 ) }
    dend_13 { pt3dadd( 364.538, 531.919, 39.7555, 0.3406 ) }
    dend_13 { pt3dadd( 364.529, 533.036, 39.5774, 0.3458 ) }
    dend_13 { pt3dadd( 364.766, 534.144, 39.5231, 0.4268 ) }
    dend_13 { pt3dadd( 364.897, 535.268, 39.5749, 0.4592 ) }
    dend_13 { pt3dadd( 364.897, 536.412, 39.6645, 0.403 ) }
    dend_13 { pt3dadd( 364.897, 537.556, 39.765, 0.4066 ) }
    dend_13 { pt3dadd( 364.974, 538.696, 39.8728, 0.3484 ) }
    dend_13 { pt3dadd( 365.094, 539.834, 39.9848, 0.3264 ) }
    dend_13 { pt3dadd( 365.203, 540.971, 40.1117, 0.3246 ) }
    dend_13 { pt3dadd( 365.203, 542.107, 40.3113, 0.3644 ) }
    dend_13 { pt3dadd( 365.203, 543.243, 40.5742, 0.4562 ) }
    dend_13 { pt3dadd( 364.905, 544.328, 40.8906, 0.5384 ) }
    dend_13 { pt3dadd( 364.539, 545.4, 41.2429, 0.4312 ) }
    dend_13 { pt3dadd( 364.544, 546.446, 41.7018, 0.3496 ) }
    dend_13 { pt3dadd( 364.65, 547.503, 42.1896, 0.3142 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 364.958, 548.597, 42.5387, 0.3736 ) }
    dend_13 { pt3dadd( 365.523, 549.558, 42.8347, 0.3346 ) }
    dend_13 { pt3dadd( 366.172, 550.463, 43.036, 0.3008 ) }
    dend_13 { pt3dadd( 366.96, 551.279, 43.0553, 0.2762 ) }
    dend_13 { pt3dadd( 367.732, 551.683, 42.7596, 0.2776 ) }
    dend_13 { pt3dadd( 368.489, 551.975, 42.2548, 0.2802 ) }
    dend_13 { pt3dadd( 368.211, 552.919, 41.7295, 0.285 ) }
    dend_13 { pt3dadd( 368.359, 554.008, 41.4126, 0.2938 ) }
    dend_13 { pt3dadd( 368.99, 554.867, 41.4252, 0.3112 ) }
    dend_13 { pt3dadd( 369.436, 555.626, 41.8026, 0.3384 ) }
    dend_13 { pt3dadd( 369.475, 556.5, 42.4446, 0.4132 ) }
    dend_13 { pt3dadd( 369.475, 557.643, 43.0164, 0.4332 ) }
    dend_13 { pt3dadd( 369.475, 558.727, 43.346, 0.3604 ) }
    dend_13 { pt3dadd( 369.475, 559.54, 43.3322, 0.3018 ) }
    dend_13 { pt3dadd( 369.475, 560.589, 43.3031, 0.278 ) }
    dend_13 { pt3dadd( 369.475, 561.003, 43.6887, 0.2812 ) }
    dend_13 { pt3dadd( 369.451, 561.809, 44.3027, 0.2864 ) }
    dend_13 { pt3dadd( 369.148, 562.743, 44.998, 0.2978 ) }
    dend_13 { pt3dadd( 369.026, 563.843, 45.5764, 0.3124 ) }
    dend_13 { pt3dadd( 369.313, 564.839, 45.808, 0.37 ) }
    dend_13 { pt3dadd( 369.305, 565.858, 45.7293, 0.3276 ) }
    dend_13 { pt3dadd( 370.288, 566.225, 45.4258, 0.2882 ) }
    dend_13 { pt3dadd( 370.607, 567.184, 44.9918, 0.2542 ) }
    dend_13 { pt3dadd( 369.988, 568.074, 44.6365, 0.2288 ) }
    dend_13 { pt3dadd( 369.475, 569.096, 44.2064, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 372.782, 495.232, 29.8346, 0.377 ) }
    dend_12 { pt3dadd( 372.967, 495.394, 30.0798, 0.341 ) }
    dend_12 { pt3dadd( 373.821, 496.147, 30.2378, 0.3124 ) }
    dend_12 { pt3dadd( 374.676, 496.901, 30.3092, 0.2988 ) }
    dend_12 { pt3dadd( 375.431, 497.674, 30.4455, 0.3142 ) }
    dend_12 { pt3dadd( 376.493, 498.084, 30.5449, 0.3734 ) }
    dend_12 { pt3dadd( 377.635, 498.127, 30.6306, 0.3338 ) }
    dend_12 { pt3dadd( 378.772, 497.999, 30.7227, 0.3 ) }
    dend_12 { pt3dadd( 379.863, 497.676, 30.8255, 0.2746 ) }
    dend_12 { pt3dadd( 380.986, 497.463, 30.9372, 0.2746 ) }
    dend_12 { pt3dadd( 382.111, 497.25, 31.0559, 0.2746 ) }
    dend_12 { pt3dadd( 383.215, 497.031, 31.2659, 0.2746 ) }
    dend_12 { pt3dadd( 384.315, 496.812, 31.556, 0.2746 ) }
    dend_12 { pt3dadd( 385.436, 496.758, 31.892, 0.2748 ) }
    dend_12 { pt3dadd( 386.565, 496.758, 32.2512, 0.2748 ) }
    dend_12 { pt3dadd( 387.681, 496.648, 32.5937, 0.2752 ) }
    dend_12 { pt3dadd( 388.773, 496.307, 32.8639, 0.2758 ) }
    dend_12 { pt3dadd( 389.866, 496.009, 33.0753, 0.2766 ) }
    dend_12 { pt3dadd( 390.973, 496.167, 33.3189, 0.2782 ) }
    dend_12 { pt3dadd( 392.084, 496.329, 33.5712, 0.2814 ) }
    dend_12 { pt3dadd( 393.212, 496.518, 33.7543, 0.287 ) }
    dend_12 { pt3dadd( 394.341, 496.705, 33.8859, 0.2988 ) }
    dend_12 { pt3dadd( 395.48, 496.789, 33.9786, 0.3142 ) }
    dend_12 { pt3dadd( 396.573, 497.059, 34.0376, 0.3734 ) }
    dend_12 { pt3dadd( 397.635, 497.483, 34.0701, 0.3338 ) }
    dend_12 { pt3dadd( 398.647, 497.13, 34.0959, 0.3 ) }
    dend_12 { pt3dadd( 399.576, 496.518, 34.132, 0.2746 ) }
    dend_12 { pt3dadd( 400.668, 496.177, 34.1827, 0.2746 ) }
    dend_12 { pt3dadd( 401.766, 495.857, 34.2538, 0.2748 ) }
    dend_12 { pt3dadd( 402.888, 495.64, 34.3543, 0.275 ) }
    dend_12 { pt3dadd( 404.012, 495.424, 34.4854, 0.2752 ) }
    dend_12 { pt3dadd( 405.142, 495.384, 34.6886, 0.2758 ) }
    dend_12 { pt3dadd( 406.273, 495.384, 34.9597, 0.2768 ) }
    dend_12 { pt3dadd( 407.408, 495.384, 35.2778, 0.2786 ) }
    dend_12 { pt3dadd( 408.545, 495.384, 35.6194, 0.2822 ) }
    dend_12 { pt3dadd( 409.682, 495.384, 35.975, 0.2888 ) }
    dend_12 { pt3dadd( 410.791, 495.209, 36.3644, 0.3006 ) }
    dend_12 { pt3dadd( 411.892, 494.989, 36.7774, 0.3236 ) }
    dend_12 { pt3dadd( 413.003, 494.91, 37.2028, 0.3624 ) }
    dend_12 { pt3dadd( 414.121, 494.889, 37.6264, 0.4526 ) }
    dend_12 { pt3dadd( 415.22, 494.72, 38.0066, 0.5316 ) }
    dend_12 { pt3dadd( 416.304, 494.493, 38.3446, 0.4188 ) }
    dend_12 { pt3dadd( 417.425, 494.469, 38.6176, 0.3256 ) }
    dend_12 { pt3dadd( 418.45, 494.767, 38.6879, 0.275 ) }
    dend_12 { pt3dadd( 419.373, 495.365, 38.6834, 0.2752 ) }
    dend_12 { pt3dadd( 420.486, 495.627, 38.6543, 0.2758 ) }
    dend_12 { pt3dadd( 421.599, 495.888, 38.6252, 0.277 ) }
    dend_12 { pt3dadd( 422.681, 496.243, 38.6064, 0.279 ) }
    dend_12 { pt3dadd( 423.754, 496.073, 38.5011, 0.2828 ) }
    dend_12 { pt3dadd( 424.759, 496.136, 38.4992, 0.2896 ) }
    dend_12 { pt3dadd( 425.576, 496.726, 38.7092, 0.3034 ) }
    dend_12 { pt3dadd( 426.588, 497.233, 38.9575, 0.323 ) }
    dend_12 { pt3dadd( 427.576, 497.79, 39.2006, 0.3896 ) }
    dend_12 { pt3dadd( 428.512, 498.448, 39.3826, 0.3648 ) }
    dend_12 { pt3dadd( 429.471, 499.065, 39.5052, 0.3518 ) }
    dend_12 { pt3dadd( 430.455, 499.541, 39.6273, 0.3976 ) }
    dend_12 { pt3dadd( 431.179, 500.34, 39.6833, 0.3736 ) }
    dend_12 { pt3dadd( 431.595, 501.263, 39.508, 0.399 ) }
    dend_12 { pt3dadd( 432.423, 502.017, 39.2274, 0.3342 ) }
    dend_12 { pt3dadd( 433.219, 502.813, 38.8699, 0.3006 ) }
    dend_12 { pt3dadd( 433.598, 503.803, 38.4966, 0.2758 ) }
    dend_12 { pt3dadd( 433.908, 504.803, 38.0878, 0.2768 ) }
    dend_12 { pt3dadd( 434.847, 505.344, 37.6432, 0.2786 ) }
    dend_12 { pt3dadd( 435.914, 505.744, 37.2602, 0.2822 ) }
    dend_12 { pt3dadd( 436.927, 506.125, 36.8388, 0.2882 ) }
    dend_12 { pt3dadd( 437.962, 506.605, 36.4711, 0.3008 ) }
    dend_12 { pt3dadd( 438.9, 507.212, 36.1222, 0.318 ) }
    dend_12 { pt3dadd( 439.707, 507.989, 35.7664, 0.3804 ) }
    dend_12 { pt3dadd( 440.592, 508.696, 35.4631, 0.3468 ) }
    dend_12 { pt3dadd( 441.52, 509.365, 35.2237, 0.3252 ) }
    dend_12 { pt3dadd( 442.35, 510.134, 35.0031, 0.316 ) }
    dend_12 { pt3dadd( 443.136, 510.947, 34.7738, 0.377 ) }
    dend_12 { pt3dadd( 443.946, 511.733, 34.6562, 0.3404 ) }
    dend_12 { pt3dadd( 444.738, 512.53, 34.599, 0.3124 ) }
    dend_12 { pt3dadd( 445.464, 513.372, 34.4582, 0.2972 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 446.221, 514.201, 34.2807, 0.3162 ) }
    dend_12 { pt3dadd( 447.007, 515.015, 34.109, 0.3534 ) }
    dend_12 { pt3dadd( 447.79, 515.828, 34.0379, 0.4126 ) }
    dend_12 { pt3dadd( 448.569, 516.645, 34.0796, 0.5708 ) }
    dend_12 { pt3dadd( 449.301, 517.524, 34.1645, 0.6282 ) }
    dend_12 { pt3dadd( 449.624, 518.521, 34.3756, 0.5078 ) }
    dend_12 { pt3dadd( 450.188, 519.471, 34.5974, 0.4708 ) }
    dend_12 { pt3dadd( 451.162, 520.067, 34.7424, 0.4096 ) }
    dend_12 { pt3dadd( 452.122, 520.684, 34.8071, 0.4914 ) }
    dend_12 { pt3dadd( 453.137, 521.21, 34.8194, 0.3814 ) }
    dend_12 { pt3dadd( 453.951, 521.822, 34.8566, 0.305 ) }
    dend_12 { pt3dadd( 454.677, 522.309, 34.6091, 0.2288 ) }
    dend_12 { pt3dadd( 455.091, 523.312, 34.0049, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 13/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 329.999, 365.662, 29.7055, 0.4404 ) }
    dend_5 { pt3dadd( 330.113, 364.389, 29.5042, 0.2288 ) }
    dend_5 { pt3dadd( 330.226, 363.261, 29.3432, 0.312 ) }
    dend_5 { pt3dadd( 330.347, 362.141, 29.2356, 0.3388 ) }
    dend_5 { pt3dadd( 330.407, 361.017, 29.1746, 0.4188 ) }
    dend_5 { pt3dadd( 330.407, 359.888, 29.2244, 0.4196 ) }
    dend_5 { pt3dadd( 330.279, 358.779, 29.342, 0.4506 ) }
    dend_5 { pt3dadd( 329.854, 357.717, 29.4672, 0.5952 ) }
    dend_5 { pt3dadd( 329.428, 356.655, 29.6064, 0.6676 ) }
    dend_5 { pt3dadd( 329.004, 355.593, 29.7578, 0.6076 ) }
    dend_5 { pt3dadd( 328.578, 354.53, 29.9146, 0.525 ) }
    dend_5 { pt3dadd( 328.217, 353.448, 30.1062, 0.4618 ) }
    dend_5 { pt3dadd( 327.855, 352.365, 30.3372, 0.3664 ) }
    dend_5 { pt3dadd( 327.322, 351.551, 30.7751, 0.3124 ) }
    dend_5 { pt3dadd( 326.601, 350.733, 31.2491, 0.2988 ) }
    dend_5 { pt3dadd( 326.112, 349.709, 31.6596, 0.3142 ) }
    dend_5 { pt3dadd( 326.094, 348.596, 32.0191, 0.3734 ) }
    dend_5 { pt3dadd( 326.268, 347.466, 32.3408, 0.3338 ) }
    dend_5 { pt3dadd( 326.462, 346.393, 32.7502, 0.3 ) }
    dend_5 { pt3dadd( 327.025, 345.407, 33.166, 0.2746 ) }
    dend_5 { pt3dadd( 328.074, 345.194, 33.6862, 0.2746 ) }
    dend_5 { pt3dadd( 328.758, 344.393, 34.2583, 0.2746 ) }
    dend_5 { pt3dadd( 329.362, 343.456, 34.8471, 0.2746 ) }
    dend_5 { pt3dadd( 329.994, 342.581, 35.4231, 0.2746 ) }
    dend_5 { pt3dadd( 330.101, 341.549, 36.066, 0.2746 ) }
    dend_5 { pt3dadd( 330.101, 340.484, 36.5775, 0.2746 ) }
    dend_5 { pt3dadd( 330.101, 339.442, 36.8802, 0.2744 ) }
    dend_5 { pt3dadd( 330.101, 338.346, 37.3145, 0.2744 ) }
    dend_5 { pt3dadd( 330.09, 337.257, 37.8748, 0.2742 ) }
    dend_5 { pt3dadd( 329.928, 336.264, 38.6145, 0.2742 ) }
    dend_5 { pt3dadd( 329.82, 335.254, 39.4747, 0.2736 ) }
    dend_5 { pt3dadd( 329.956, 334.166, 40.3673, 0.2728 ) }
    dend_5 { pt3dadd( 329.982, 333.102, 41.2863, 0.2712 ) }
    dend_5 { pt3dadd( 329.757, 332.091, 42.198, 0.2684 ) }
    dend_5 { pt3dadd( 329.451, 331.054, 43.0209, 0.2626 ) }
    dend_5 { pt3dadd( 329.064, 329.994, 43.6957, 0.2542 ) }
    dend_5 { pt3dadd( 328.828, 328.913, 44.2702, 0.2288 ) }
    dend_5 { pt3dadd( 328.728, 327.814, 45.3398, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 51/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 329.999, 365.662, 29.7055, 0.4404 ) }
    dend_2 { pt3dadd( 330.869, 364.967, 29.3353, 0.4782 ) }
    dend_2 { pt3dadd( 331.781, 364.331, 28.9901, 0.4692 ) }
    dend_2 { pt3dadd( 332.597, 363.667, 28.828, 0.3796 ) }
    dend_2 { pt3dadd( 333.263, 362.846, 28.6373, 0.3386 ) }
    dend_2 { pt3dadd( 333.663, 361.796, 28.4264, 0.342 ) }
    dend_2 { pt3dadd( 333.912, 360.699, 28.2083, 0.4198 ) }
    dend_2 { pt3dadd( 334.147, 359.588, 28.0151, 0.4452 ) }
    dend_2 { pt3dadd( 334.364, 358.479, 27.9011, 0.3836 ) }
    dend_2 { pt3dadd( 334.555, 357.373, 27.9143, 0.3398 ) }
    dend_2 { pt3dadd( 334.68, 356.254, 28.0115, 0.374 ) }
    dend_2 { pt3dadd( 334.68, 355.11, 28.1078, 0.335 ) }
    dend_2 { pt3dadd( 334.68, 353.966, 28.187, 0.302 ) }
    dend_2 { pt3dadd( 334.669, 352.822, 28.2374, 0.2784 ) }
    dend_2 { pt3dadd( 334.651, 351.678, 28.2545, 0.2818 ) }
    dend_2 { pt3dadd( 334.633, 350.534, 28.2456, 0.2878 ) }
    dend_2 { pt3dadd( 334.464, 349.414, 28.1848, 0.3002 ) }
    dend_2 { pt3dadd( 334.257, 348.3, 28.086, 0.3168 ) }
    dend_2 { pt3dadd( 334.048, 347.185, 28.0535, 0.3788 ) }
    dend_2 { pt3dadd( 333.839, 346.069, 28.0907, 0.3438 ) }
    dend_2 { pt3dadd( 333.688, 344.939, 28.1462, 0.318 ) }
    dend_2 { pt3dadd( 333.568, 343.801, 28.1932, 0.3092 ) }
    dend_2 { pt3dadd( 333.453, 342.664, 28.2299, 0.3334 ) }
    dend_2 { pt3dadd( 333.397, 341.521, 28.2503, 0.4088 ) }
    dend_2 { pt3dadd( 333.34, 340.378, 28.2472, 0.4014 ) }
    dend_2 { pt3dadd( 333.244, 339.24, 28.2218, 0.4156 ) }
    dend_2 { pt3dadd( 332.993, 338.176, 28.1173, 0.536 ) }
    dend_2 { pt3dadd( 332.971, 337.14, 28.0498, 0.5316 ) }
    dend_2 { pt3dadd( 333.303, 336.067, 28.0694, 0.4836 ) }
    dend_2 { pt3dadd( 333.401, 334.929, 28.0756, 0.3594 ) }
    dend_2 { pt3dadd( 333.588, 333.801, 28.0638, 0.3 ) }
    dend_2 { pt3dadd( 333.777, 332.673, 28.0316, 0.2746 ) }
    dend_2 { pt3dadd( 333.976, 331.548, 27.9525, 0.2746 ) }
    dend_2 { pt3dadd( 334.167, 330.426, 27.8132, 0.2748 ) }
    dend_2 { pt3dadd( 334.026, 329.304, 27.5986, 0.275 ) }
    dend_2 { pt3dadd( 333.864, 328.182, 27.3545, 0.2752 ) }
    dend_2 { pt3dadd( 333.625, 327.064, 27.1411, 0.276 ) }
    dend_2 { pt3dadd( 333.366, 325.955, 26.9334, 0.277 ) }
    dend_2 { pt3dadd( 333.063, 324.871, 26.686, 0.2792 ) }
    dend_2 { pt3dadd( 332.793, 323.775, 26.4329, 0.2832 ) }
    dend_2 { pt3dadd( 332.601, 322.647, 26.2249, 0.2908 ) }
    dend_2 { pt3dadd( 332.41, 321.519, 26.045, 0.3044 ) }
    dend_2 { pt3dadd( 332.2, 320.394, 25.8842, 0.3316 ) }
    dend_2 { pt3dadd( 331.989, 319.27, 25.7333, 0.3696 ) }
    dend_2 { pt3dadd( 331.673, 318.177, 25.5672, 0.5032 ) }
    dend_2 { pt3dadd( 331.253, 317.116, 25.3593, 0.445 ) }
    dend_2 { pt3dadd( 331.017, 316.038, 25.0697, 0.4474 ) }
    dend_2 { pt3dadd( 331.017, 314.939, 24.6698, 0.3762 ) }
    dend_2 { pt3dadd( 330.981, 313.837, 24.2056, 0.38 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 330.768, 312.726, 23.7566, 0.4144 ) }
    dend_2 { pt3dadd( 330.555, 311.614, 23.3412, 0.5756 ) }
    dend_2 { pt3dadd( 330.38, 310.502, 22.9634, 0.6304 ) }
    dend_2 { pt3dadd( 330.101, 309.462, 22.587, 0.543 ) }
    dend_2 { pt3dadd( 330.101, 308.336, 22.3524, 0.3848 ) }
    dend_2 { pt3dadd( 330.101, 307.272, 22.3057, 0.3 ) }
    dend_2 { pt3dadd( 330.101, 306.805, 22.3114, 0.2748 ) }
    dend_2 { pt3dadd( 329.843, 305.947, 22.105, 0.2748 ) }
    dend_2 { pt3dadd( 329.537, 304.934, 21.7015, 0.2752 ) }
    dend_2 { pt3dadd( 329.232, 303.923, 21.1379, 0.2758 ) }
    dend_2 { pt3dadd( 328.812, 302.9, 20.5106, 0.2766 ) }
    dend_2 { pt3dadd( 328.337, 301.872, 19.8828, 0.2782 ) }
    dend_2 { pt3dadd( 327.558, 301.107, 19.2598, 0.2814 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 350.806, 600.79, 60.5864, 0.4328 ) }
    dend_21 { pt3dadd( 351.224, 600.998, 61.7252, 0.2288 ) }
    dend_21 { pt3dadd( 351.837, 601.813, 61.8248, 0.2746 ) }
    dend_21 { pt3dadd( 352.061, 602.883, 61.7823, 0.2748 ) }
    dend_21 { pt3dadd( 352.077, 604.021, 61.7722, 0.2748 ) }
    dend_21 { pt3dadd( 352.03, 605.163, 61.8108, 0.2752 ) }
    dend_21 { pt3dadd( 351.589, 606.194, 61.9699, 0.2758 ) }
    dend_21 { pt3dadd( 351.162, 607.226, 62.2244, 0.2768 ) }
    dend_21 { pt3dadd( 351.162, 608.349, 62.5458, 0.2786 ) }
    dend_21 { pt3dadd( 351.162, 609.473, 62.9182, 0.2822 ) }
    dend_21 { pt3dadd( 351.036, 610.601, 63.2492, 0.288 ) }
    dend_21 { pt3dadd( 350.849, 611.729, 63.5102, 0.3008 ) }
    dend_21 { pt3dadd( 350.737, 612.856, 63.7238, 0.3178 ) }
    dend_21 { pt3dadd( 350.874, 613.976, 63.9537, 0.3804 ) }
    dend_21 { pt3dadd( 351.012, 615.097, 64.1948, 0.3464 ) }
    dend_21 { pt3dadd( 351.284, 616.206, 64.3941, 0.3244 ) }
    dend_21 { pt3dadd( 351.556, 617.317, 64.5632, 0.3146 ) }
    dend_21 { pt3dadd( 351.428, 618.43, 64.7108, 0.3744 ) }
    dend_21 { pt3dadd( 351.177, 619.546, 64.8357, 0.3358 ) }
    dend_21 { pt3dadd( 351.162, 620.685, 64.895, 0.3036 ) }
    dend_21 { pt3dadd( 351.162, 621.827, 64.9132, 0.2814 ) }
    dend_21 { pt3dadd( 351.298, 622.931, 64.9536, 0.287 ) }
    dend_21 { pt3dadd( 351.738, 623.956, 65.1014, 0.2988 ) }
    dend_21 { pt3dadd( 352.462, 624.813, 65.1871, 0.3142 ) }
    dend_21 { pt3dadd( 353.265, 625.592, 65.2632, 0.3736 ) }
    dend_21 { pt3dadd( 354.197, 626.214, 65.4402, 0.334 ) }
    dend_21 { pt3dadd( 354.971, 626.984, 65.6908, 0.3002 ) }
    dend_21 { pt3dadd( 355.577, 627.908, 65.994, 0.2752 ) }
    dend_21 { pt3dadd( 356.247, 628.82, 66.2334, 0.2758 ) }
    dend_21 { pt3dadd( 356.941, 629.727, 66.4042, 0.2766 ) }
    dend_21 { pt3dadd( 357.111, 630.716, 66.3869, 0.2782 ) }
    dend_21 { pt3dadd( 357.612, 631.664, 66.3018, 0.2814 ) }
    dend_21 { pt3dadd( 358.098, 632.505, 66.4661, 0.287 ) }
    dend_21 { pt3dadd( 358.839, 633.077, 66.8422, 0.2988 ) }
    dend_21 { pt3dadd( 359.785, 633.362, 67.3985, 0.3142 ) }
    dend_21 { pt3dadd( 360.322, 634.174, 67.8496, 0.3738 ) }
    dend_21 { pt3dadd( 360.696, 635.245, 68.257, 0.3346 ) }
    dend_21 { pt3dadd( 361.265, 636.182, 68.696, 0.3012 ) }
    dend_21 { pt3dadd( 362.2, 636.805, 69.0217, 0.2768 ) }
    dend_21 { pt3dadd( 363.34, 636.857, 69.2572, 0.2786 ) }
    dend_21 { pt3dadd( 364.33, 637.248, 69.44, 0.2822 ) }
    dend_21 { pt3dadd( 364.393, 638.312, 69.7085, 0.288 ) }
    dend_21 { pt3dadd( 364.001, 639.335, 70.0199, 0.3008 ) }
    dend_21 { pt3dadd( 363.982, 640.411, 70.3018, 0.3178 ) }
    dend_21 { pt3dadd( 364.046, 641.521, 70.4494, 0.3802 ) }
    dend_21 { pt3dadd( 364.485, 642.467, 70.5258, 0.3464 ) }
    dend_21 { pt3dadd( 365.246, 643.262, 70.5466, 0.3242 ) }
    dend_21 { pt3dadd( 365.765, 644.196, 70.7132, 0.314 ) }
    dend_21 { pt3dadd( 366.286, 645.152, 71.0147, 0.3734 ) }
    dend_21 { pt3dadd( 366.996, 645.997, 71.3994, 0.3338 ) }
    dend_21 { pt3dadd( 367.773, 646.804, 71.8399, 0.2998 ) }
    dend_21 { pt3dadd( 368.301, 647.776, 72.1577, 0.2742 ) }
    dend_21 { pt3dadd( 369.19, 648.403, 72.3674, 0.2742 ) }
    dend_21 { pt3dadd( 370.166, 648.861, 72.6718, 0.2736 ) }
    dend_21 { pt3dadd( 370.929, 649.606, 73.0635, 0.2728 ) }
    dend_21 { pt3dadd( 371.474, 650.474, 73.5694, 0.2712 ) }
    dend_21 { pt3dadd( 372.547, 650.692, 73.981, 0.2684 ) }
    dend_21 { pt3dadd( 373.327, 651.048, 74.4472, 0.2626 ) }
    dend_21 { pt3dadd( 374.42, 651.05, 74.8538, 0.2542 ) }
    dend_21 { pt3dadd( 375.384, 651.301, 74.9812, 0.2288 ) }
    dend_21 { pt3dadd( 375.428, 652.423, 74.8107, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 74/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 350.806, 600.79, 60.5864, 0.4328 ) }
    dend_20 { pt3dadd( 349.857, 601.518, 60.7247, 0.3594 ) }
    dend_20 { pt3dadd( 349.132, 602.365, 60.6833, 0.3002 ) }
    dend_20 { pt3dadd( 348.412, 603.22, 60.4892, 0.2748 ) }
    dend_20 { pt3dadd( 347.724, 604.135, 60.3008, 0.275 ) }
    dend_20 { pt3dadd( 347.043, 605.054, 60.151, 0.2754 ) }
    dend_20 { pt3dadd( 346.385, 605.989, 60.034, 0.2762 ) }
    dend_20 { pt3dadd( 345.76, 606.943, 59.9424, 0.2778 ) }
    dend_20 { pt3dadd( 345.336, 608.005, 59.8704, 0.2806 ) }
    dend_20 { pt3dadd( 344.91, 609.068, 59.7999, 0.2854 ) }
    dend_20 { pt3dadd( 344.616, 610.163, 59.6663, 0.2946 ) }
    dend_20 { pt3dadd( 344.325, 611.26, 59.486, 0.3128 ) }
    dend_20 { pt3dadd( 344.295, 612.39, 59.2754, 0.3398 ) }
    dend_20 { pt3dadd( 344.036, 613.496, 59.0878, 0.4232 ) }
    dend_20 { pt3dadd( 343.534, 614.52, 58.945, 0.4158 ) }
    dend_20 { pt3dadd( 342.788, 615.237, 58.8641, 0.503 ) }
    dend_20 { pt3dadd( 342.215, 616.203, 58.7236, 0.403 ) }
    dend_20 { pt3dadd( 341.802, 617.244, 58.5306, 0.3432 ) }
    dend_20 { pt3dadd( 341.652, 618.369, 58.2764, 0.3088 ) }
    dend_20 { pt3dadd( 341.547, 619.489, 57.9575, 0.333 ) }
    dend_20 { pt3dadd( 341.547, 620.602, 57.5644, 0.4078 ) }
    dend_20 { pt3dadd( 341.547, 621.715, 57.1281, 0.3994 ) }
    dend_20 { pt3dadd( 341.341, 622.838, 56.7731, 0.4122 ) }
    dend_20 { pt3dadd( 341.129, 623.963, 56.4852, 0.5282 ) }
    dend_20 { pt3dadd( 340.791, 625.032, 56.1968, 0.5222 ) }
    dend_20 { pt3dadd( 340.357, 626.062, 55.8684, 0.443 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_20 { pt3dadd( 340.126, 627.165, 55.5685, 0.3972 ) }
    dend_20 { pt3dadd( 339.984, 628.301, 55.3064, 0.5072 ) }
    dend_20 { pt3dadd( 339.85, 629.429, 55.036, 0.4526 ) }
    dend_20 { pt3dadd( 339.751, 630.527, 54.6675, 0.4606 ) }
    dend_20 { pt3dadd( 339.591, 631.645, 54.2928, 0.4034 ) }
    dend_20 { pt3dadd( 339.398, 632.773, 53.9403, 0.4194 ) }
    dend_20 { pt3dadd( 339.185, 633.871, 53.5539, 0.5416 ) }
    dend_20 { pt3dadd( 338.91, 634.889, 53.046, 0.548 ) }
    dend_20 { pt3dadd( 338.661, 635.908, 52.4824, 0.4852 ) }
    dend_20 { pt3dadd( 338.444, 636.932, 51.9165, 0.5022 ) }
    dend_20 { pt3dadd( 338.343, 637.885, 51.3355, 0.5714 ) }
    dend_20 { pt3dadd( 337.961, 638.893, 50.9737, 0.5178 ) }
    dend_20 { pt3dadd( 337.446, 639.514, 51.1101, 0.3852 ) }
    dend_20 { pt3dadd( 337.03, 639.819, 51.665, 0.3012 ) }
    dend_20 { pt3dadd( 336.142, 640.516, 52.1942, 0.277 ) }
    dend_20 { pt3dadd( 335.326, 641.251, 52.6865, 0.279 ) }
    dend_20 { pt3dadd( 334.645, 641.942, 53.0975, 0.2826 ) }
    dend_20 { pt3dadd( 333.571, 642.255, 53.3109, 0.2896 ) }
    dend_20 { pt3dadd( 332.569, 642.56, 53.3319, 0.3024 ) }
    dend_20 { pt3dadd( 331.838, 642.919, 52.9822, 0.3268 ) }
    dend_20 { pt3dadd( 331.224, 643.697, 52.631, 0.3684 ) }
    dend_20 { pt3dadd( 330.218, 644.173, 52.3835, 0.4636 ) }
    dend_20 { pt3dadd( 329.151, 644.575, 52.1562, 0.552 ) }
    dend_20 { pt3dadd( 328.45, 644.578, 51.6916, 0.4574 ) }
    dend_20 { pt3dadd( 328.001, 644.319, 51.074, 0.393 ) }
    dend_20 { pt3dadd( 326.999, 644.717, 50.7178, 0.4204 ) }
    dend_20 { pt3dadd( 326.283, 645.407, 50.6668, 0.4458 ) }
    dend_20 { pt3dadd( 325.878, 646.068, 50.8278, 0.3846 ) }
    dend_20 { pt3dadd( 325.181, 646.58, 51.1132, 0.3414 ) }
    dend_20 { pt3dadd( 324.556, 647.276, 51.3061, 0.377 ) }
    dend_20 { pt3dadd( 323.758, 647.941, 51.3906, 0.3406 ) }
    dend_20 { pt3dadd( 322.918, 648.641, 51.3209, 0.3126 ) }
    dend_20 { pt3dadd( 321.9, 648.991, 51.273, 0.2978 ) }
    dend_20 { pt3dadd( 321.35, 649.885, 51.1708, 0.3174 ) }
    dend_20 { pt3dadd( 320.76, 650.809, 50.951, 0.3558 ) }
    dend_20 { pt3dadd( 320.018, 651.68, 50.7486, 0.4168 ) }
    dend_20 { pt3dadd( 319.263, 652.528, 50.5187, 0.5798 ) }
    dend_20 { pt3dadd( 318.477, 653.314, 50.1861, 0.6382 ) }
    dend_20 { pt3dadd( 317.647, 654.079, 49.8134, 0.5574 ) }
    dend_20 { pt3dadd( 316.776, 654.821, 49.474, 0.4112 ) }
    dend_20 { pt3dadd( 315.892, 655.472, 49.0862, 0.3514 ) }
    dend_20 { pt3dadd( 314.993, 656.041, 48.5856, 0.3592 ) }
    dend_20 { pt3dadd( 314.517, 656.984, 48.0466, 0.4828 ) }
    dend_20 { pt3dadd( 313.942, 657.871, 47.5194, 0.4122 ) }
    dend_20 { pt3dadd( 313.044, 658.453, 47.2223, 0.362 ) }
    dend_20 { pt3dadd( 312.212, 659.138, 46.9274, 0.3382 ) }
    dend_20 { pt3dadd( 311.351, 659.734, 46.5637, 0.413 ) }
    dend_20 { pt3dadd( 310.482, 660.392, 46.37, 0.4328 ) }
    dend_20 { pt3dadd( 309.725, 661.203, 46.2815, 0.3594 ) }
    dend_20 { pt3dadd( 309.24, 662.151, 46.2426, 0.3 ) }
    dend_20 { pt3dadd( 308.654, 663.037, 46.0135, 0.2746 ) }
    dend_20 { pt3dadd( 307.784, 663.623, 45.6422, 0.2746 ) }
    dend_20 { pt3dadd( 306.892, 664.224, 45.1979, 0.2746 ) }
    dend_20 { pt3dadd( 306.078, 665.01, 44.7353, 0.2746 ) }
    dend_20 { pt3dadd( 305.391, 665.91, 44.3097, 0.2746 ) }
    dend_20 { pt3dadd( 304.709, 666.814, 43.9373, 0.2746 ) }
    dend_20 { pt3dadd( 303.885, 667.579, 43.5991, 0.2746 ) }
    dend_20 { pt3dadd( 303.272, 668.501, 43.3255, 0.2746 ) }
    dend_20 { pt3dadd( 302.846, 669.563, 43.1267, 0.2746 ) }
    dend_20 { pt3dadd( 302.432, 670.629, 42.9677, 0.2746 ) }
    dend_20 { pt3dadd( 302.196, 671.705, 42.7722, 0.2746 ) }
    dend_20 { pt3dadd( 301.737, 672.595, 42.679, 0.2746 ) }
    dend_20 { pt3dadd( 300.883, 673.284, 42.5785, 0.2746 ) }
    dend_20 { pt3dadd( 300.485, 674.31, 42.4133, 0.2746 ) }
    dend_20 { pt3dadd( 300.095, 675.383, 42.2534, 0.2744 ) }
    dend_20 { pt3dadd( 299.808, 676.486, 42.1243, 0.2744 ) }
    dend_20 { pt3dadd( 299.592, 677.608, 42.0364, 0.2742 ) }
    dend_20 { pt3dadd( 299.371, 678.731, 41.9661, 0.2742 ) }
    dend_20 { pt3dadd( 299.135, 679.851, 41.9051, 0.2736 ) }
    dend_20 { pt3dadd( 299.076, 680.979, 41.8519, 0.2728 ) }
    dend_20 { pt3dadd( 299.19, 682.117, 41.7875, 0.2712 ) }
    dend_20 { pt3dadd( 299.179, 683.243, 41.7085, 0.2684 ) }
    dend_20 { pt3dadd( 298.831, 684.332, 41.6122, 0.2626 ) }
    dend_20 { pt3dadd( 298.511, 685.424, 41.5013, 0.2542 ) }
    dend_20 { pt3dadd( 298.511, 686.551, 41.3269, 0.2288 ) }
    dend_20 { pt3dadd( 298.511, 687.678, 40.8058, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 327.558, 301.107, 19.2598, 0.2814 ) }
    dend_4 { pt3dadd( 327.318, 300.57, 18.8743, 0.287 ) }
    dend_4 { pt3dadd( 327.354, 300.387, 18.2142, 0.2988 ) }
    dend_4 { pt3dadd( 327.333, 299.325, 17.5711, 0.3142 ) }
    dend_4 { pt3dadd( 326.969, 298.396, 17.0177, 0.3738 ) }
    dend_4 { pt3dadd( 325.97, 297.895, 16.4765, 0.3346 ) }
    dend_4 { pt3dadd( 325.151, 297.33, 15.8996, 0.3012 ) }
    dend_4 { pt3dadd( 324.612, 296.437, 15.507, 0.2766 ) }
    dend_4 { pt3dadd( 324.192, 295.452, 15.2562, 0.2784 ) }
    dend_4 { pt3dadd( 323.247, 295.308, 14.8833, 0.2818 ) }
    dend_4 { pt3dadd( 322.407, 295.722, 14.4035, 0.2876 ) }
    dend_4 { pt3dadd( 321.372, 296.071, 14.0767, 0.3 ) }
    dend_4 { pt3dadd( 320.37, 295.748, 13.812, 0.3164 ) }
    dend_4 { pt3dadd( 319.524, 295.007, 13.5394, 0.3776 ) }
    dend_4 { pt3dadd( 318.588, 294.356, 13.3046, 0.3418 ) }
    dend_4 { pt3dadd( 317.664, 293.835, 12.9921, 0.3144 ) }
    dend_4 { pt3dadd( 316.77, 293.156, 12.7434, 0.3028 ) }
    dend_4 { pt3dadd( 316.231, 292.168, 12.5612, 0.3212 ) }
    dend_4 { pt3dadd( 315.942, 291.09, 12.3654, 0.3864 ) }
    dend_4 { pt3dadd( 315.715, 290.038, 12.0882, 0.358 ) }
    dend_4 { pt3dadd( 314.993, 289.336, 11.8008, 0.3454 ) }
    dend_4 { pt3dadd( 314.059, 288.876, 11.5902, 0.3546 ) }
    dend_4 { pt3dadd( 313.589, 287.858, 11.4575, 0.4442 ) }
    dend_4 { pt3dadd( 313.337, 286.855, 11.3716, 0.4852 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( 312.675, 286.211, 11.1341, 0.483 ) }
    dend_4 { pt3dadd( 311.717, 285.697, 11.004, 0.401 ) }
    dend_4 { pt3dadd( 311.248, 284.721, 10.9167, 0.3982 ) }
    dend_4 { pt3dadd( 310.681, 283.774, 10.7727, 0.356 ) }
    dend_4 { pt3dadd( 309.957, 282.945, 10.2015, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 5/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 327.558, 301.107, 19.2598, 0.2814 ) }
    dend_3 { pt3dadd( 327.354, 300.347, 17.3978, 0.2288 ) }
    dend_3 { pt3dadd( 327.382, 299.219, 16.9291, 0.3076 ) }
    dend_3 { pt3dadd( 327.588, 298.128, 16.7239, 0.3302 ) }
    dend_3 { pt3dadd( 327.882, 297.095, 16.4978, 0.4042 ) }
    dend_3 { pt3dadd( 328.06, 295.974, 16.3286, 0.386 ) }
    dend_3 { pt3dadd( 328.212, 294.858, 16.1051, 0.4222 ) }
    dend_3 { pt3dadd( 328.351, 293.743, 15.7938, 0.377 ) }
    dend_3 { pt3dadd( 328.597, 292.649, 15.4226, 0.3816 ) }
    dend_3 { pt3dadd( 328.728, 291.609, 14.9335, 0.4172 ) }
    dend_3 { pt3dadd( 328.687, 290.535, 14.3696, 0.5806 ) }
    dend_3 { pt3dadd( 328.209, 289.528, 13.8784, 0.64 ) }
    dend_3 { pt3dadd( 327.454, 288.694, 13.4412, 0.5602 ) }
    dend_3 { pt3dadd( 326.801, 287.785, 13.0289, 0.418 ) }
    dend_3 { pt3dadd( 326.094, 286.898, 12.6954, 0.356 ) }
    dend_3 { pt3dadd( 325.351, 286.029, 12.4593, 0.4052 ) }
    dend_3 { pt3dadd( 324.816, 285.046, 12.2427, 0.3874 ) }
    dend_3 { pt3dadd( 324.411, 283.992, 12.0017, 0.4258 ) }
    dend_3 { pt3dadd( 323.776, 283.074, 11.8427, 0.3786 ) }
    dend_3 { pt3dadd( 323.065, 282.198, 11.7681, 0.4084 ) }
    dend_3 { pt3dadd( 322.573, 281.19, 11.5986, 0.3516 ) }
    dend_3 { pt3dadd( 322.099, 280.169, 11.3678, 0.3334 ) }
    dend_3 { pt3dadd( 321.709, 279.096, 11.1441, 0.3334 ) }
    dend_3 { pt3dadd( 321.316, 278.042, 10.9126, 0.3982 ) }
    dend_3 { pt3dadd( 320.95, 277.039, 10.6292, 0.4322 ) }
    dend_3 { pt3dadd( 321.402, 276.078, 10.2015, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_22, dend_15, dend_10, dend_7, dend_0, dend_24, dend_23, dend_17, dend_16, dend_14, dend_11, dend_9, dend_8, dend_6, dend_1, dend_19, dend_18, dend_13, dend_12, dend_5, dend_2, dend_21, dend_20, dend_4, dend_3]}
    dend = new SectionList()
    dend_22 dend.append()
    dend_15 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_0 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_14 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 5.2821827  // units: uF/cm2
    forsec axon cm = 5.2821827  // units: uF/cm2
    forsec dend cm = 5.2821827  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 43.85804  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 0.0012361549  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.09905652  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 0.0030928326  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 7.720499E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.32743  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.022880888  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.006742163  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 2.53718E-10  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.5683048E-5  // units: S cm-2
        e_pas_nml2 = -81.293144  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 6.933973E-4  // units: S cm-2
        e_pas_nml2 = -81.293144  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.7015374E-7  // units: S cm-2
        e_pas_nml2 = -81.293144  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 6.325032E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0060139755  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_479234670
    forsec soma {
        insert CaDynamics_479234670
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 3
    dend_10 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 7
    dend_17 nseg = 5
    dend_16 nseg = 3
    dend_14 nseg = 11
    dend_11 nseg = 5
    dend_9 nseg = 3
    dend_8 nseg = 3
    dend_19 nseg = 7
    dend_18 nseg = 3
    dend_13 nseg = 5
    dend_12 nseg = 5
    dend_5 nseg = 3
    dend_2 nseg = 3
    dend_21 nseg = 3
    dend_20 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_479234670


