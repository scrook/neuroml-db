// Cell: bAC217_L23_BTC_e5d9eb2ec3_0_0
/*
{
  "id" : "bAC217_L23_BTC_e5d9eb2ec3_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.10599, -10.005, -3.63045, 2.05199", "1.00994, -8.98941, -3.26388, 3.40229", "0.913884, -7.97383, -2.89732, 4.43836", "0.817831, -6.95825, -2.53075, 5.9106", "0.721777, -5.94268, -2.16418, 7.4154", "0.625724, -4.9271, -1.79761, 8.65317", "0.52967, -3.91152, -1.43104, 9.36003", "0.433616, -2.89594, -1.06447, 10.0585", "0.337563, -1.88037, -0.697906, 10.4351", "0.241509, -0.864787, -0.331337, 10.6941", "0.145456, 0.150791, 0.0352311, 10.9531", "0.0494021, 1.16637, 0.4018, 11.2338", "-0.0466515, 2.18195, 0.768368, 11.5118", "-0.142705, 3.19752, 1.13494, 11.7095", "-0.238759, 4.2131, 1.5015, 10.7536", "-0.334812, 5.22868, 1.86807, 9.97", "-0.430866, 6.24426, 2.23464, 9.36435", "-0.526919, 7.25984, 2.60121, 8.19972", "-0.622973, 8.27541, 2.96778, 6.07377", "-0.719027, 9.29099, 3.33435, 3.38096", "-0.81508, 10.3066, 3.70092, 2.12602" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.00111, -10.0801, -3.03985, 2.66", "1.30295, -15.4425, -3.46007, 2.66", "1.63312, -21.3084, -3.91974, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "3.84111, 9.92238, 0.260152, 2.66", "4.00559, 10.5365, 4.64633, 2.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999995461318083
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.81508, 10.3066, 3.70092, 0.66", "-2.22748, 25.24, 3.70092, 0.66", "-3.63987, 40.1733, 3.70092, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "1.63312, -21.3084, -3.91974, 2.66", "1.40217, -21.5392, -3.00468, 2.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "1.63312, -21.3084, -3.91974, 0.66", "4.59848, -24.1323, -3.79706, 0.66", "8.1137, -27.48, -3.65163, 0.66", "10.9044, -30.1376, -3.53617, 0.66" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "4.00559, 10.5365, 4.64633, 1.99", "8.30008, 24.2734, -0.227932, 1.99", "11.2661, 33.7612, -3.59444, 1.99", "13.8502, 42.0269, -6.52733, 1.99", "16.9136, 51.8258, -10.0043, 1.99", "20.2345, 62.4485, -13.7735, 1.99", "22.6577, 70.1998, -16.5239, 1.99" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.00559, 10.5365, 4.64633, 1.33", "4.17203, 17.6661, 6.68695, 1.33", "4.4108, 23.2211, 8.32344, 1.33", "4.75917, 28.0409, 9.66168, 1.33", "5.18951, 33.2542, 10.8945, 0.66", "5.50793, 36.209, 11.5119, 0.66", "6.01315, 40.7606, 12.2414, 0.66", "6.30985, 43.108, 12.5492, 0.66", "6.86723, 47.0446, 12.7451, 0.66", "8.21383, 54.6882, 12.9204, 0.66", "8.77559, 57.8905, 12.955, 0.66", "9.57302, 63.001, 13.026, 0.66", "9.91866, 65.6424, 13.0648, 0.66", "10.3246, 68.8585, 13.1014, 0.66", "10.8781, 73.9904, 13.2518, 0.66", "11.2056, 76.6547, 13.379, 0.66", "11.6288, 80.4862, 13.6797, 0.66", "11.9685, 84.2067, 14.1453, 0.66", "12.1736, 87.0037, 14.5126, 0.66", "12.4448, 89.7878, 14.8915, 0.66", "13.0149, 94.9136, 15.6844, 0.66", "13.5701, 98.6227, 16.3949, 0.66", "14.1583, 102.0, 17.2746, 0.66", "14.7048, 104.228, 17.9475, 0.66", "15.2458, 106.299, 18.6184, 0.66", "16.0443, 108.846, 19.4673, 0.66", "16.9297, 111.371, 20.3492, 0.66", "18.3961, 114.838, 21.4566, 0.66", "20.2701, 118.933, 22.6957, 0.66", "21.5363, 121.845, 23.5538, 0.66", "22.2108, 123.519, 23.99, 0.33", "22.6467, 124.591, 24.214, 0.66", "23.7513, 127.453, 24.7532, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-3.63987, 40.1733, 3.70092, 0.33", "-5.05227, 55.1067, 3.70092, 0.33", "-6.46467, 70.04, 3.70092, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "1.40217, -21.5392, -3.00468, 2.0", "2.9863, -24.1932, -9.58987, 2.0" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "1.40217, -21.5392, -3.00468, 0.66", "-0.0742385, -25.3543, -0.891336, 0.66", "-1.01125, -27.8873, 0.39974, 0.66", "-1.62313, -29.6896, 1.13198, 0.66", "-3.8177, -35.1801, 3.78571, 0.66", "-4.4915, -36.8329, 4.73249, 0.66", "-5.29963, -38.8047, 5.93356, 0.33", "-5.65493, -39.62, 6.45491, 0.66", "-6.71861, -42.0126, 8.01388, 0.66", "-9.05037, -48.2078, 12.0113, 0.66", "-10.0644, -51.3995, 13.7132, 0.33", "-10.2546, -52.0103, 13.9943, 0.66", "-10.9976, -54.3323, 15.0286, 0.66", "-11.5793, -56.3479, 15.883, 0.33", "-11.8258, -57.2638, 16.2388, 0.66", "-12.5876, -61.0222, 16.9451, 0.33", "-13.3537, -64.4354, 17.3925, 0.66", "-14.1681, -67.9415, 17.9128, 0.33", "-14.3393, -68.6172, 18.0326, 0.66" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "10.9044, -30.1376, -3.53617, 0.66", "15.4484, -30.1354, -6.35415, 0.66", "20.0003, -30.268, -9.3072, 0.66", "29.74, -30.8806, -15.5304, 0.66", "35.6651, -31.127, -18.8262, 0.66", "41.8019, -31.3943, -21.8863, 0.66", "47.05, -31.5963, -24.3404, 0.66", "51.7626, -32.0559, -26.2532, 0.66", "58.0296, -32.8834, -28.5518, 0.66", "66.2477, -33.9102, -30.968, 0.66", "70.0591, -34.3728, -32.1613, 0.66", "73.0128, -34.6939, -33.1934, 0.33", "79.9827, -35.3681, -35.3669, 0.66", "85.2521, -35.8808, -36.889, 0.66", "87.981, -36.154, -37.7229, 0.66", "91.0661, -36.4473, -38.7763, 0.33", "94.1202, -36.5472, -39.9427, 0.66", "97.8626, -36.5124, -41.6713, 0.66", "101.33, -36.3514, -43.6132, 0.33", "103.156, -36.2522, -44.5798, 0.66", "106.192, -36.1258, -46.3208, 0.33", "111.082, -35.9049, -49.4309, 0.66", "116.393, -35.879, -52.8428, 0.66", "118.459, -35.9713, -54.2507, 0.33", "123.276, -36.3077, -57.5984, 0.66", "128.961, -36.8435, -61.561, 0.33", "131.692, -37.3072, -63.5436, 1.33", "134.592, -38.001, -65.546, 0.66", "136.788, -38.7179, -66.9296, 0.33", "138.075, -39.253, -67.7395, 0.66", "139.731, -40.2194, -68.9391, 0.33", "143.534, -43.0147, -71.7061, 1.33", "144.918, -44.0541, -72.754, 0.66", "149.101, -47.1069, -75.9606, 0.33", "149.774, -47.5494, -76.5882, 0.33", "152.792, -49.5356, -79.5089, 0.66", "155.666, -51.483, -82.3835, 0.33", "157.696, -52.7449, -84.3885, 1.33", "160.493, -54.3356, -87.5595, 0.33", "165.679, -56.8042, -94.711, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "10.9044, -30.1376, -3.53617, 0.66", "11.8631, -32.0042, -1.40707, 0.66", "12.3212, -33.4208, 0.466796, 0.66", "12.4762, -33.941, 1.15404, 0.66", "13.0328, -35.8106, 3.61366, 0.66", "13.66, -38.6329, 7.36901, 0.66", "13.738, -39.047, 7.93061, 1.33", "13.8988, -41.495, 11.3674, 0.33", "14.0035, -42.2021, 12.5467, 0.33", "14.0315, -42.3543, 12.8178, 0.66", "14.3652, -43.4231, 14.887, 0.33", "14.7696, -44.3024, 16.8198, 0.66", "15.1625, -44.8562, 18.2013, 0.66", "17.7449, -46.8627, 24.389, 0.66" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "22.6577, 70.1998, -16.5239, 1.33", "28.3938, 74.5788, -25.5687, 1.33", "31.7045, 77.1062, -30.7891, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "22.6577, 70.1998, -16.5239, 1.33", "21.2896, 73.83, -25.6898, 1.33", "20.446, 76.0684, -31.3415, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "2.9863, -24.1932, -9.58987, 0.66", "5.02764, -23.738, -10.3599, 0.66", "6.50462, -23.3735, -10.9747, 0.66", "13.9454, -21.8745, -14.6508, 0.66", "19.627, -20.9908, -18.5323, 0.66", "22.098, -20.8159, -20.4771, 0.66", "24.8127, -20.6801, -22.6843, 0.66", "29.9286, -20.7589, -27.0261, 0.66", "33.3214, -21.0617, -30.2278, 0.66", "41.002, -22.1425, -38.5035, 0.66", "46.4973, -22.9549, -44.6892, 0.66", "47.9186, -23.2647, -46.3514, 0.66", "49.8137, -23.849, -48.6349, 0.66", "55.5649, -25.7681, -55.4002, 0.66", "62.937, -28.1945, -63.1384, 0.66", "65.9475, -29.0352, -65.6186, 0.66", "69.4885, -29.7075, -68.3563, 0.66", "71.884, -30.1337, -70.1336, 0.66", "81.984, -31.8996, -77.2313, 0.66", "83.5959, -32.2017, -78.3057, 0.66", "95.3202, -34.4901, -86.1549, 0.66", "103.293, -36.0223, -91.2947, 0.33", "104.123, -36.1602, -91.7999, 1.33", "105.771, -36.4524, -92.7055, 0.66", "112.088, -37.7889, -95.8214, 0.33", "115.537, -38.5408, -97.313, 1.33", "117.729, -39.2066, -97.9507, 0.33", "118.941, -39.602, -98.1945, 0.66", "124.013, -40.9521, -99.5165, 0.33", "125.222, -41.2507, -99.928, 1.33", "126.735, -41.6107, -100.423, 0.66", "129.488, -42.1976, -101.331, 0.33", "132.566, -42.816, -102.407, 1.33", "142.247, -44.4558, -106.085, 0.33", "148.29, -45.3464, -108.787, 0.33", "151.138, -45.8016, -110.126, 0.33", "152.3, -45.9952, -110.687, 0.33", "153.627, -46.1715, -111.282, 0.33", "159.394, -46.8311, -113.45, 0.66", "168.501, -47.5472, -116.227, 0.33", "171.653, -47.6588, -117.104, 0.33", "174.926, -47.6908, -118.104, 0.66", "182.223, -47.6365, -120.301, 0.33", "184.779, -47.5365, -121.005, 0.66", "186.806, -47.3765, -121.372, 0.33", "187.255, -47.2906, -121.412, 0.66", "194.664, -45.3868, -122.777, 0.33", "195.962, -45.0514, -123.14, 0.66" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "2.9863, -24.1932, -9.58987, 1.33", "3.23715, -25.4096, -10.7245, 1.33", "3.63748, -27.3508, -12.5354, 1.99" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "31.7045, 77.1062, -30.7891, 1.33", "34.2639, 78.8632, -27.9146, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "31.7045, 77.1062, -30.7891, 0.66", "31.6898, 79.4356, -32.103, 0.66", "31.7784, 81.4753, -33.2006, 0.66", "31.9208, 83.9908, -34.2558, 0.66", "32.2361, 87.7641, -35.5848, 0.66", "32.9655, 94.7854, -37.6712, 0.66", "33.3366, 97.5003, -38.3654, 0.66", "33.7978, 100.134, -38.875, 0.66", "34.6942, 104.301, -39.6425, 0.66", "35.0982, 105.971, -39.8884, 0.66", "35.8739, 108.98, -40.1975, 0.66", "36.4082, 111.527, -40.3404, 0.66", "37.6109, 117.989, -41.2614, 0.66", "38.4812, 123.301, -42.3872, 0.66", "38.9353, 126.838, -43.3741, 0.66", "39.291, 130.237, -44.3971, 0.66", "39.6274, 133.694, -45.6001, 0.66", "40.1346, 140.042, -47.9064, 0.66", "40.4177, 143.304, -49.107, 0.66", "40.8678, 148.644, -50.9519, 0.66", "41.143, 151.306, -51.8685, 0.33", "41.6167, 155.333, -53.1211, 0.66", "42.0348, 158.022, -53.7929, 0.66", "42.5132, 160.703, -54.1935, 0.66", "42.929, 163.014, -54.564, 0.33", "43.359, 165.211, -54.8861, 0.66", "43.7202, 167.252, -55.1769, 0.33", "44.0214, 168.947, -55.3853, 0.66", "44.6353, 172.467, -56.1219, 0.33", "45.006, 175.056, -56.7747, 0.66", "45.4522, 178.012, -57.5957, 0.66", "45.7405, 179.473, -58.0277, 0.33", "46.0619, 180.937, -58.4248, 0.33", "46.7469, 183.866, -59.1233, 0.66", "47.1987, 185.879, -59.4802, 0.33", "47.6066, 187.217, -59.6156, 0.33", "48.2423, 189.568, -59.8288, 0.66", "49.0753, 193.03, -60.2531, 0.66", "49.2881, 194.22, -60.4563, 0.66", "49.7267, 198.438, -61.1642, 0.66", "49.7048, 201.167, -61.5534, 0.66", "49.0976, 206.361, -62.386, 0.66", "48.223, 210.539, -63.1131, 0.66", "47.2724, 214.233, -63.6928, 0.33", "46.3008, 217.485, -64.1178, 0.66", "44.5956, 222.533, -64.6058, 0.33", "43.5918, 225.555, -64.712, 0.66", "42.721, 228.743, -64.5147, 0.66", "41.9048, 232.489, -64.0159, 0.33", "41.7196, 234.119, -63.7756, 0.66", "41.6657, 235.3, -63.4868, 0.66", "41.7844, 238.822, -62.2437, 0.33", "41.9104, 240.428, -61.4827, 0.66", "42.1764, 242.491, -60.336, 0.33", "42.4851, 244.202, -59.3248, 0.66", "44.026, 251.114, -55.1712, 0.66", "44.5769, 253.176, -53.9611, 0.33", "45.1993, 255.09, -52.852, 0.33", "45.5529, 256.22, -52.1759, 0.66", "46.0622, 257.845, -51.205, 0.33", "46.5346, 259.494, -50.3495, 0.33", "46.9906, 261.338, -49.5298, 0.33", "47.0411, 261.663, -49.3346, 0.66", "47.4291, 265.541, -46.7566, 0.33", "47.4785, 266.684, -45.9864, 0.33", "47.5007, 267.32, -45.5673, 0.66", "47.8388, 271.378, -43.0744, 0.33", "47.8776, 271.727, -42.8936, 0.66", "48.45, 274.635, -41.7755, 0.33", "48.7008, 275.671, -41.5297, 0.66", "49.5737, 279.683, -40.4766, 0.33", "50.1327, 281.833, -40.1231, 0.33", "50.6689, 283.782, -39.9663, 0.33", "51.8986, 288.879, -39.5473, 0.66", "53.0614, 293.897, -39.1357, 0.66", "54.4294, 300.507, -38.6367, 0.66", "55.8468, 308.367, -38.3927, 0.66", "56.4287, 312.008, -38.4852, 0.33", "57.6245, 320.253, -38.8077, 0.66", "57.8134, 321.802, -38.9291, 0.66", "58.0748, 323.976, -39.2015, 0.66", "58.5688, 328.644, -40.1787, 0.66", "58.6338, 333.139, -40.6154, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "20.446, 76.0684, -31.3415, 0.66", "20.5108, 77.9449, -32.9891, 0.66", "20.4923, 79.7035, -34.7304, 0.66", "20.2464, 82.6365, -37.745, 0.66", "19.4799, 87.9529, -43.6588, 0.66", "19.1196, 89.743, -45.6898, 0.66", "18.2652, 93.5095, -49.9764, 0.66", "17.3958, 96.265, -53.3199, 0.66", "16.9507, 97.5262, -55.0717, 0.66", "15.4526, 101.495, -61.2487, 0.66", "15.1487, 102.46, -62.6692, 0.66", "14.7332, 103.791, -64.579, 0.66", "14.5247, 104.694, -65.8236, 0.33", "13.8134, 109.78, -72.5033, 0.66", "13.793, 110.856, -73.8447, 1.33", "13.8657, 112.769, -76.0256, 0.33", "13.9032, 113.619, -76.9614, 0.66", "13.9877, 116.993, -80.3614, 0.33", "14.0605, 119.136, -82.3603, 1.33", "13.9503, 123.706, -86.2591, 0.66", "13.8211, 124.989, -87.4782, 0.66", "13.4202, 127.327, -89.9006, 0.66", "13.0978, 128.548, -91.3028, 0.66", "12.1465, 131.394, -94.7729, 0.66", "11.1674, 133.87, -97.9059, 0.66", "9.71038, 137.325, -102.06, 0.33", "9.39517, 138.121, -103.008, 0.66", "7.83598, 142.252, -107.911, 0.33", "7.50559, 143.2, -109.004, 0.33", "6.92872, 144.907, -110.698, 1.33", "6.36421, 146.699, -112.398, 0.33", "6.07213, 147.71, -113.311, 0.66", "4.46031, 153.181, -118.198, 0.33", "4.06346, 154.536, -119.259, 0.33", "3.32876, 156.938, -121.114, 0.66", "1.68207, 163.342, -126.798, 0.33", "1.41435, 164.604, -127.992, 0.33", "0.942326, 167.235, -130.598, 0.66", "0.529466, 169.992, -133.401, 0.33", "0.202951, 172.435, -136.156, 0.66", "-0.443611, 178.615, -143.656, 0.33", "-0.668377, 180.481, -145.991, 0.66", "-1.17634, 183.281, -149.58, 0.33", "-1.34728, 184.105, -150.7, 0.66", "-2.02989, 187.025, -154.549, 0.66", "-2.72018, 189.866, -157.837, 0.33", "-3.43354, 192.66, -160.911, 0.66", "-4.09622, 195.251, -163.866, 0.66", "-5.29309, 199.825, -169.537, 0.66", "-5.95454, 202.177, -172.58, 0.33", "-6.74595, 204.773, -176.133, 0.66", "-9.12267, 213.174, -187.527, 0.66", "-9.65827, 215.104, -190.289, 0.66", "-10.9491, 219.277, -196.384, 0.33", "-11.3083, 220.377, -198.042, 0.66", "-12.5952, 224.116, -203.816, 0.33", "-13.6483, 226.948, -208.0, 0.66", "-16.2517, 232.943, -216.943, 0.66", "-17.1077, 234.786, -219.81, 1.99", "-20.0403, 240.607, -229.199, 0.66", "-20.8099, 242.103, -231.65, 0.66", "-21.5065, 243.398, -233.756, 0.66", "-25.7545, 251.22, -247.064, 0.66", "-27.115, 253.925, -251.526, 0.33", "-28.1126, 255.919, -255.064, 0.66", "-28.9944, 257.516, -257.863, 0.66", "-30.1093, 259.475, -261.364, 0.66", "-33.0262, 264.626, -270.542, 0.66", "-35.7789, 269.483, -278.893, 0.66", "-41.7546, 279.424, -296.549, 0.33", "-43.3796, 281.981, -301.298, 0.33", "-46.134, 285.919, -309.147, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "20.446, 76.0684, -31.3415, 0.66", "17.8845, 81.6943, -35.3708, 0.66", "15.8883, 85.1548, -38.1227, 0.66", "13.0588, 90.0978, -41.9526, 0.66", "11.0754, 93.5078, -44.3989, 0.66", "10.1505, 95.1302, -45.5615, 0.66", "6.34802, 101.215, -50.0578, 0.66", "1.88382, 107.171, -54.9418, 0.66", "0.481109, 108.893, -56.4198, 0.66", "-3.67684, 114.492, -60.7199, 0.66", "-7.24597, 119.21, -63.8961, 0.66", "-11.8527, 125.655, -67.4093, 0.66", "-14.8673, 130.351, -69.2914, 0.66", "-16.6112, 133.278, -69.9877, 0.66", "-21.7334, 142.248, -70.9055, 0.66", "-24.0848, 147.285, -70.4759, 0.66", "-27.1255, 154.484, -69.142, 0.66", "-28.5517, 158.515, -68.056, 0.66", "-31.7172, 168.377, -64.7648, 0.66", "-32.8624, 171.99, -63.3704, 0.66", "-35.355, 180.127, -59.3896, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "3.63748, -27.3508, -12.5354, 1.33", "0.289341, -34.069, -14.7007, 1.33", "0.393011, -37.1913, -17.0879, 1.33", "0.423384, -37.3973, -17.2297, 1.33", "0.797207, -40.217, -19.0667, 0.66", "1.06396, -42.4833, -20.4093, 0.66", "1.23655, -45.4213, -22.0799, 0.66", "2.03778, -59.8095, -29.7833, 0.66", "2.05522, -65.1211, -32.3591, 0.66", "1.91967, -68.8378, -33.7672, 0.66", "1.62153, -72.4382, -34.9265, 0.66", "0.966615, -78.9366, -36.9159, 0.66", "0.0700609, -86.1846, -38.9112, 0.66", "-0.73063, -90.326, -39.92, 0.66", "-2.55296, -100.377, -42.4443, 0.66", "-3.55052, -105.654, -43.7691, 0.66", "-5.51169, -116.413, -46.4701, 0.66", "-6.24352, -121.008, -47.5216, 0.66", "-7.34147, -129.577, -49.5006, 0.66", "-8.01571, -135.728, -50.9295, 0.66", "-8.59416, -142.703, -52.6611, 0.66", "-9.16955, -150.482, -54.3955, 0.66", "-9.57984, -155.143, -55.3389, 0.66", "-10.5325, -165.294, -57.5117, 0.66", "-11.0664, -170.729, -58.6285, 0.66", "-11.7544, -177.907, -60.1588, 0.66", "-12.6145, -187.654, -62.2118, 0.66", "-13.1449, -191.918, -63.14, 0.66", "-14.649, -201.317, -65.2272, 0.66", "-17.3213, -214.27, -67.6265, 0.66" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "3.63748, -27.3508, -12.5354, 1.33", "0.99754, -27.9345, -12.1659, 1.33", "-5.85648, -29.45, -11.2065, 1.33" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "34.2639, 78.8632, -27.9146, 1.33", "37.9159, 82.7715, -29.5321, 1.33", "38.91, 83.8739, -29.8511, 1.33", "40.6188, 85.9225, -30.1168, 1.33", "42.6923, 88.6191, -30.2354, 1.33", "45.6477, 92.6216, -30.1081, 1.33", "50.209, 98.7935, -29.176, 1.33", "52.6334, 102.345, -28.0891, 1.33", "54.9478, 106.08, -26.5914, 0.66", "56.2207, 108.014, -25.6192, 0.66", "59.5545, 112.534, -23.3209, 0.66", "63.6165, 118.023, -20.2409, 0.66", "66.0403, 121.332, -18.3315, 0.66", "70.7429, 127.311, -15.1012, 0.66", "77.2168, 135.044, -11.0811, 0.66", "83.0368, 141.657, -7.55757, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "34.2639, 78.8632, -27.9146, 0.66", "37.0285, 79.3869, -21.6471, 0.66", "38.8884, 79.8988, -17.7491, 0.66", "41.6262, 80.8427, -12.4621, 0.66", "42.5641, 81.173, -10.787, 0.66", "43.8536, 81.6456, -8.36858, 0.66", "45.4194, 82.2736, -5.11259, 0.66", "47.7535, 83.5333, -0.153573, 0.66", "48.5144, 83.9457, 1.36593, 0.33", "49.0974, 84.2669, 2.48566, 0.66", "52.4494, 86.3266, 9.33622, 0.66", "54.4649, 87.7729, 13.8838, 0.66", "55.3371, 88.4391, 15.9833, 0.66", "56.3184, 89.2841, 18.1193, 0.66", "57.0421, 90.2431, 19.7731, 0.33", "57.2965, 90.6487, 20.3301, 0.66", "57.7825, 91.6409, 20.9805, 0.33", "58.0225, 92.2643, 21.2534, 0.66", "58.8555, 95.3878, 22.7147, 0.33", "59.467, 99.7112, 24.2738, 0.66" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "58.6338, 333.139, -40.6154, 0.33", "58.0251, 334.124, -43.3269, 0.33", "57.7227, 334.614, -44.6742, 0.66", "56.9654, 335.84, -48.0477, 0.33", "56.4172, 336.727, -50.4894, 0.66", "55.2539, 338.611, -55.6717, 0.33", "54.749, 339.428, -57.9205, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "58.6338, 333.139, -40.6154, 0.33", "58.2771, 333.737, -42.5352, 0.33", "57.9008, 334.367, -44.5604, 0.66", "56.9657, 335.935, -49.5934, 0.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-35.355, 180.127, -59.3896, 0.66", "-38.5032, 184.668, -62.5629, 0.66", "-42.5499, 189.744, -66.9548, 0.66", "-46.2577, 194.042, -70.5406, 0.66", "-47.6437, 195.536, -71.7446, 0.66", "-50.1892, 198.202, -73.7129, 0.66", "-51.3842, 199.374, -74.5809, 0.66", "-56.9986, 204.706, -78.3295, 0.66", "-61.7107, 208.866, -80.7481, 0.66", "-63.3523, 210.213, -81.6071, 0.66", "-67.6634, 213.698, -83.7762, 0.66", "-72.5097, 217.741, -86.1193, 0.66", "-75.9904, 220.76, -87.8969, 0.66", "-80.3497, 224.715, -90.2592, 0.66", "-86.186, 229.992, -94.1003, 0.33", "-88.3754, 232.051, -95.8217, 0.66", "-89.0518, 232.692, -96.4633, 0.66", "-93.1978, 236.697, -101.133, 0.66", "-95.384, 238.911, -104.233, 0.33", "-96.1155, 239.689, -105.418, 0.66", "-98.9028, 242.776, -110.063, 0.33", "-100.293, 244.291, -112.584, 1.33", "-103.803, 248.18, -119.006, 0.33", "-106.372, 251.171, -123.894, 0.33", "-106.892, 251.787, -124.94, 0.66", "-108.637, 253.789, -128.652, 0.33", "-111.193, 256.66, -134.105, 0.66", "-112.11, 257.734, -136.097, 0.33", "-113.158, 259.01, -138.394, 0.66", "-115.446, 261.718, -143.038, 0.33", "-116.84, 263.748, -145.94, 0.66", "-117.509, 265.092, -147.321, 0.33", "-118.121, 266.899, -148.418, 0.66", "-118.571, 268.977, -149.166, 0.33", "-118.803, 272.021, -149.304, 0.66", "-118.753, 277.375, -148.533, 0.33", "-118.501, 280.427, -147.737, 0.66", "-118.073, 283.72, -146.435, 0.33", "-117.942, 284.725, -145.959, 0.66", "-117.605, 288.566, -144.044, 0.33", "-117.597, 289.804, -143.382, 0.66", "-117.668, 293.091, -141.603, 0.33", "-118.069, 301.185, -137.201, 0.66", "-118.375, 304.87, -135.147, 0.33", "-119.15, 311.443, -131.598, 0.33", "-119.832, 315.291, -129.571, 0.33" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-35.355, 180.127, -59.3896, 0.33", "-35.7454, 183.383, -59.5141, 0.33", "-35.8989, 185.739, -59.5819, 0.33", "-35.9729, 187.055, -59.6084, 0.66", "-36.176, 190.411, -59.6451, 0.33", "-36.2682, 191.649, -59.6485, 0.66", "-36.3704, 193.362, -59.4852, 0.33", "-36.564, 197.087, -58.9096, 0.33", "-36.6533, 198.238, -58.6879, 0.66", "-36.8935, 200.24, -58.2337, 0.33", "-37.0177, 201.139, -58.0051, 0.66", "-37.643, 206.275, -56.9398, 0.33", "-37.9631, 208.625, -56.4071, 1.33", "-38.3501, 211.067, -55.8409, 0.33", "-38.502, 211.961, -55.6515, 0.66", "-39.3073, 216.402, -54.8174, 0.33", "-40.1438, 220.148, -54.3168, 0.66", "-41.5526, 225.426, -53.7951, 0.66", "-42.0541, 227.581, -53.5046, 0.66", "-42.8288, 231.288, -52.9922, 0.66", "-43.3082, 233.867, -52.5974, 0.33", "-44.0525, 238.014, -51.9197, 0.66", "-44.776, 243.288, -51.0654, 0.66", "-45.3571, 251.466, -49.5252, 0.33", "-45.3969, 252.747, -49.2331, 0.66", "-45.2839, 257.482, -48.0698, 0.33", "-45.0483, 262.065, -46.8529, 0.33", "-44.9034, 263.718, -46.3959, 0.66", "-44.224, 271.317, -44.7558, 0.33", "-44.1366, 272.488, -44.601, 0.66", "-43.6971, 277.165, -44.0878, 0.33", "-43.5104, 279.225, -43.9204, 0.33", "-43.0701, 283.044, -43.7303, 0.66", "-42.5195, 288.395, -43.6374, 0.66", "-42.0099, 293.389, -43.7419, 0.66", "-41.5402, 297.911, -43.6652, 0.33", "-41.4004, 299.571, -43.5594, 0.33", "-41.1244, 304.568, -43.0571, 0.33", "-41.1509, 305.789, -42.7982, 0.66", "-41.3999, 308.092, -42.2295, 0.33", "-41.6399, 309.282, -41.9469, 0.66", "-42.3299, 311.868, -41.4893, 0.33", "-42.958, 314.151, -41.0771, 1.99", "-44.6929, 318.948, -40.1106, 0.33", "-46.0186, 322.952, -39.4374, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-17.3213, -214.27, -67.6265, 0.33", "-17.6583, -217.113, -69.031, 0.33", "-17.8114, -217.815, -69.2247, 0.66", "-18.2005, -219.1, -69.4759, 0.33", "-18.3026, -219.424, -69.5291, 0.66", "-19.6508, -223.957, -70.4066, 0.66", "-20.115, -226.182, -70.9158, 0.33", "-20.7768, -231.072, -72.244, 0.66", "-21.4009, -236.32, -73.7003, 0.66", "-21.6321, -238.466, -74.2804, 0.66", "-22.4639, -245.091, -75.979, 0.66", "-23.3401, -251.655, -77.5694, 0.66", "-23.7485, -254.76, -78.3698, 0.66", "-24.3548, -259.071, -79.5207, 0.66", "-25.0233, -262.917, -80.5196, 0.66", "-26.0583, -267.771, -81.665, 0.66", "-27.2721, -272.273, -82.6407, 0.66", "-28.4068, -275.685, -83.3085, 0.66", "-30.6422, -281.994, -84.5725, 0.66", "-32.1389, -286.05, -85.343, 0.66", "-33.9534, -290.715, -86.2214, 0.66", "-35.6511, -295.049, -86.9969, 0.66", "-38.2695, -301.481, -88.0989, 0.66", "-40.2405, -306.38, -88.9062, 0.66", "-42.1904, -311.742, -89.7993, 0.66", "-43.465, -315.5, -90.3922, 0.66", "-44.5778, -319.315, -90.9877, 0.66", "-45.741, -324.182, -91.6909, 0.66", "-46.6428, -328.882, -92.5409, 0.66", "-47.4242, -333.974, -93.6328, 0.66", "-47.9338, -338.279, -94.7002, 0.66", "-48.5559, -343.816, -96.1338, 0.66", "-49.2411, -349.159, -97.61, 0.66", "-49.882, -353.806, -98.8899, 0.66", "-50.4785, -357.53, -99.9374, 0.66", "-50.915, -359.81, -100.602, 0.66", "-51.9704, -366.084, -102.697, 0.66", "-53.0071, -373.06, -105.273, 0.66", "-53.2435, -375.465, -106.21, 0.33", "-53.3564, -377.02, -106.799, 0.33", "-53.5535, -379.845, -107.899, 0.66", "-53.8559, -385.228, -110.083, 0.66", "-54.0561, -391.762, -112.774, 0.66", "-54.1229, -393.832, -113.629, 0.33", "-54.3559, -396.621, -114.668, 0.33", "-54.6487, -399.623, -115.661, 0.66", "-54.8445, -401.651, -116.296, 0.66", "-55.1322, -404.201, -117.041, 0.33", "-55.3364, -405.92, -117.544, 0.66", "-58.1614, -429.263, -124.339, 0.66", "-58.3781, -431.114, -124.894, 0.33", "-58.9124, -436.577, -126.582, 0.66", "-59.0949, -438.5, -127.194, 0.33", "-59.1993, -439.643, -127.548, 0.66", "-59.4759, -442.37, -128.366, 0.33", "-59.6801, -443.655, -128.715, 0.66", "-60.7009, -448.099, -130.179, 0.33", "-61.1167, -449.458, -130.649, 0.33", "-63.0303, -455.212, -132.766, 0.66", "-64.1758, -458.554, -133.951, 0.66", "-65.119, -461.252, -134.872, 0.66", "-67.0011, -466.228, -136.428, 0.66", "-68.7641, -470.658, -137.646, 0.66", "-69.9178, -473.767, -138.365, 0.66", "-71.2276, -477.487, -139.083, 0.33", "-71.5207, -478.504, -139.197, 0.66", "-72.179, -481.51, -139.322, 0.66", "-72.6185, -484.0, -139.19, 0.66", "-73.0954, -486.809, -138.962, 0.33", "-73.2255, -487.536, -138.882, 0.66", "-73.8566, -490.993, -138.564, 0.66", "-74.636, -495.245, -138.286, 0.66", "-75.3158, -498.797, -138.205, 0.66", "-75.6398, -500.133, -138.259, 0.66", "-76.3807, -502.891, -138.569, 0.33", "-76.9782, -505.023, -138.927, 0.66", "-77.3931, -506.932, -139.442, 0.33", "-77.6458, -508.803, -140.108, 0.66", "-77.8029, -510.845, -140.991, 0.33", "-78.0447, -514.67, -142.715, 0.33", "-78.085, -515.34, -143.03, 0.66", "-78.3319, -519.563, -144.837, 0.33", "-78.4362, -522.06, -145.82, 0.33", "-78.4883, -522.51, -145.951, 0.66", "-78.8227, -524.25, -146.248, 0.33", "-79.0263, -524.883, -146.291, 0.66", "-79.6216, -526.613, -146.308, 0.33", "-80.3535, -528.501, -146.244, 0.66", "-81.7625, -533.123, -146.151, 0.33", "-82.0261, -534.149, -146.161, 0.33", "-82.0946, -534.478, -146.173, 0.66", "-82.7193, -538.248, -146.401, 0.33", "-82.995, -540.546, -146.618, 0.33", "-83.3223, -544.534, -147.135, 0.33", "-83.3817, -545.258, -147.252, 0.66", "-83.8491, -548.039, -147.659, 0.33", "-83.8491, -548.039, -147.659, 0.66", "-84.5332, -550.026, -147.843, 0.33", "-84.5332, -550.026, -147.843, 0.66", "-85.2084, -552.809, -148.0, 0.33", "-85.9051, -556.124, -148.181, 0.33", "-86.155, -557.52, -148.255, 0.66", "-86.729, -560.924, -148.519, 0.33", "-87.4975, -566.166, -149.185, 0.33", "-87.659, -567.337, -149.389, 0.33", "-87.7459, -567.975, -149.537, 0.66", "-87.995, -569.712, -149.963, 0.33", "-88.3804, -572.032, -150.579, 0.66", "-89.3111, -577.295, -152.282, 0.33", "-89.7332, -578.813, -152.881, 0.66", "-90.5828, -581.803, -154.119, 0.33" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-17.3213, -214.27, -67.6265, 0.66", "-15.3586, -215.838, -67.0665, 0.66", "-12.9745, -217.928, -66.4596, 0.33", "-12.5684, -218.3, -66.3599, 0.66", "-8.00755, -222.574, -65.2043, 0.66", "-4.20355, -226.257, -64.1653, 0.33", "-3.01569, -227.473, -63.7502, 0.33", "-1.45905, -229.294, -63.1291, 0.33", "-1.02734, -229.907, -62.8735, 0.66", "-0.489083, -231.168, -62.1104, 0.33", "-0.0889826, -232.859, -60.8631, 0.66", "0.313813, -235.869, -58.2076, 0.33", "0.486484, -237.963, -56.2988, 0.66", "0.601048, -240.099, -54.1665, 0.33", "0.53081, -244.664, -49.5493, 0.66" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-5.85648, -29.45, -11.2065, 0.66", "-9.49805, -33.8601, -17.4167, 0.66", "-11.5659, -36.4683, -21.253, 0.66", "-14.6239, -40.7559, -28.135, 0.66", "-15.5003, -42.0077, -30.3139, 0.66", "-16.2001, -43.018, -32.1294, 0.66", "-17.8256, -45.5751, -37.0204, 0.66", "-18.6343, -46.9413, -39.8958, 0.66", "-19.4907, -48.5729, -44.4053, 0.66", "-19.6712, -49.1537, -46.0616, 0.66", "-20.0027, -49.8246, -48.121, 0.66", "-21.0943, -51.3748, -52.2479, 0.66", "-22.0822, -52.5254, -55.0711, 0.66", "-23.0791, -53.6582, -57.4254, 0.66", "-25.3612, -56.1041, -61.842, 0.66", "-29.7453, -60.9231, -69.5329, 0.66", "-32.1309, -63.375, -73.1478, 0.66", "-34.0634, -65.3282, -75.7664, 0.66", "-35.9498, -67.4632, -78.2432, 0.66", "-36.8293, -68.5404, -79.3229, 0.66", "-37.7469, -69.7255, -80.3247, 0.66", "-40.2089, -73.3188, -82.8414, 0.66", "-42.4965, -76.5255, -85.543, 0.66", "-44.6478, -79.8931, -88.6342, 0.66", "-45.6705, -81.9751, -90.7807, 0.66", "-46.6845, -84.5742, -93.548, 0.66", "-48.0571, -88.5613, -97.8931, 0.66", "-49.5357, -93.6029, -103.31, 0.66", "-51.1557, -100.176, -110.578, 0.66", "-52.1732, -105.734, -116.805, 0.66", "-52.4928, -107.807, -118.957, 0.66", "-53.0973, -112.87, -123.955, 0.66", "-53.2172, -114.292, -125.214, 0.66", "-53.6486, -120.34, -129.872, 0.66", "-54.2147, -124.565, -132.772, 0.66", "-55.3528, -130.168, -136.282, 0.66", "-56.2654, -134.608, -139.19, 0.66", "-56.5638, -136.335, -140.321, 0.66", "-57.1325, -139.328, -142.545, 0.33", "-57.512, -141.215, -144.148, 0.33", "-57.5083, -143.227, -146.425, 0.33", "-57.3064, -144.668, -148.331, 1.33", "-57.0821, -145.922, -150.036, 0.66", "-56.4216, -148.55, -154.07, 0.66", "-55.7547, -150.925, -158.256, 0.66", "-54.3586, -155.107, -166.45, 0.33", "-54.1732, -155.707, -167.686, 0.33", "-53.9424, -156.519, -169.514, 0.66", "-53.5478, -158.278, -174.204, 0.33", "-53.5543, -158.879, -176.216, 0.33", "-53.7071, -159.107, -177.276, 0.33", "-54.7839, -159.63, -180.658, 0.33", "-55.7352, -160.053, -184.719, 0.66", "-56.1425, -160.164, -186.859, 0.33", "-56.2564, -160.174, -187.526, 0.66", "-56.5524, -160.215, -189.806, 0.33", "-56.8289, -160.213, -192.343, 0.66", "-57.0547, -160.34, -197.038, 0.33", "-57.1649, -160.464, -198.481, 0.66", "-57.213, -160.871, -200.681, 0.33", "-57.2329, -161.261, -202.039, 0.33", "-57.2742, -161.749, -203.105, 0.66", "-57.7673, -164.692, -206.905, 0.33", "-58.0366, -165.908, -207.804, 0.66", "-58.6105, -168.536, -209.218, 0.33", "-59.1608, -170.744, -210.007, 0.33", "-59.8235, -173.338, -210.557, 0.33", "-60.3536, -175.06, -210.729, 0.33", "-60.8498, -176.45, -210.761, 0.66", "-61.2514, -177.497, -210.861, 0.33", "-62.1084, -179.445, -211.218, 0.66", "-62.9401, -181.282, -211.74, 0.66", "-64.7793, -185.032, -212.985, 0.33", "-65.3493, -186.129, -213.382, 0.66", "-67.3551, -189.913, -214.794, 0.33", "-67.9388, -191.005, -215.205, 0.66", "-69.0072, -192.823, -215.986, 0.33", "-69.5811, -193.667, -216.434, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-5.85648, -29.45, -11.2065, 0.66", "-7.33727, -28.2101, -13.6889, 0.66", "-10.0613, -25.929, -18.2555, 0.66" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "83.0368, 141.657, -7.55757, 0.33", "89.4695, 145.837, 1.24651, 0.33", "91.8219, 147.071, 3.75902, 0.33", "92.3434, 147.319, 4.23091, 0.66", "95.9691, 148.755, 6.48299, 0.33", "97.9188, 149.505, 7.76346, 0.66", "99.553, 150.217, 8.90182, 0.33", "100.674, 150.658, 9.42666, 0.33", "102.644, 151.628, 10.6274, 0.33", "105.966, 153.772, 13.1029, 0.66", "109.861, 157.439, 16.4005, 0.66", "111.496, 159.403, 17.9627, 0.66", "112.714, 161.129, 19.2458, 0.66", "114.136, 163.421, 20.8675, 0.66", "115.384, 165.722, 22.381, 0.66", "117.893, 170.659, 25.4949, 0.66", "119.304, 173.519, 27.1489, 0.33", "119.877, 174.728, 27.9056, 0.66", "120.728, 176.652, 29.2213, 0.33", "121.721, 178.65, 30.5804, 0.66", "123.004, 181.1, 32.3966, 0.33", "124.394, 183.754, 34.7419, 0.66", "125.407, 185.54, 36.3244, 0.33", "126.47, 187.476, 37.8212, 0.33", "128.727, 192.058, 41.0955, 0.66", "130.713, 195.879, 43.2731, 0.33", "131.907, 198.06, 44.057, 1.33", "133.455, 200.162, 44.3907, 0.33", "135.522, 203.182, 45.1611, 0.33", "136.067, 203.976, 45.4517, 0.66", "138.666, 207.777, 47.2478, 0.66", "139.916, 209.376, 47.9677, 0.33", "142.543, 212.759, 49.4625, 0.66", "147.045, 219.153, 52.957, 0.33", "148.363, 221.046, 54.1897, 0.33", "149.144, 222.229, 55.0272, 0.33", "149.608, 223.038, 55.7074, 0.66", "150.82, 225.457, 57.7685, 0.33", "152.168, 228.972, 60.575, 0.33", "152.981, 230.553, 61.2902, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "83.0368, 141.657, -7.55757, 0.66", "85.6046, 146.353, -7.93681, 0.66", "87.89, 151.082, -8.60577, 0.66", "89.845, 155.308, -9.25863, 0.66", "92.3295, 160.644, -10.3395, 0.66", "94.4724, 165.434, -11.4104, 0.66", "98.1183, 173.698, -13.3122, 0.66", "99.5856, 177.278, -14.2573, 0.66", "100.812, 180.545, -15.0816, 0.66", "102.559, 185.029, -16.424, 0.33", "104.481, 190.077, -18.1361, 0.66", "105.262, 191.934, -18.7547, 0.66", "106.007, 193.64, -19.3069, 0.66", "107.672, 197.329, -20.4267, 0.66", "109.649, 201.83, -21.7981, 0.66", "110.94, 204.795, -22.5521, 0.66", "112.983, 208.935, -23.8664, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "-90.5828, -581.803, -154.119, 0.66", "-91.4256, -585.358, -156.233, 0.66", "-91.5059, -587.821, -157.04, 0.33", "-91.4864, -588.446, -157.193, 0.66", "-91.3821, -591.813, -158.016, 0.33", "-91.2594, -595.775, -158.985, 0.33", "-91.1673, -598.745, -159.711, 1.99", "-91.0892, -606.879, -160.857, 0.33", "-91.0466, -607.445, -160.903, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-90.5828, -581.803, -154.119, 0.33", "-90.6492, -579.801, -155.099, 0.33", "-90.6643, -579.348, -155.321, 0.66" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-10.0613, -25.929, -18.2555, 0.66", "-15.2768, -26.0939, -20.7816, 0.66", "-16.884, -26.0646, -21.584, 0.66", "-21.696, -26.0278, -24.0394, 0.66", "-25.249, -26.1246, -25.9232, 0.66", "-28.8161, -26.2614, -27.8887, 0.66", "-32.3027, -26.4585, -29.8584, 0.66", "-34.8563, -26.7884, -31.201, 0.66", "-36.8172, -27.1723, -32.0766, 0.66", "-40.9622, -28.3531, -33.7161, 0.66", "-44.3047, -29.5777, -34.958, 0.66", "-45.7104, -30.2249, -35.4269, 0.66", "-51.3865, -33.1518, -37.1821, 0.66", "-56.5694, -36.2745, -38.9953, 0.66", "-60.5827, -38.9445, -40.6319, 0.66", "-62.2179, -40.2163, -41.4635, 0.66", "-64.2725, -42.0006, -42.7685, 0.66", "-66.2628, -43.8734, -44.3471, 0.66", "-70.2325, -47.8487, -48.161, 0.66", "-73.66, -51.4087, -51.767, 0.66", "-76.0054, -53.6572, -53.9556, 0.66", "-78.4242, -55.9766, -55.9606, 0.33", "-79.2317, -56.6999, -56.5466, 0.66", "-83.1118, -60.1038, -58.8894, 0.66", "-84.9103, -61.4301, -59.6172, 0.66", "-88.7935, -63.902, -60.7106, 0.66", "-91.5526, -65.5547, -61.2716, 0.66", "-93.1119, -66.4842, -61.5211, 0.66", "-95.9273, -68.084, -61.9202, 0.66", "-99.4853, -70.0527, -62.3981, 0.66", "-104.24, -72.4003, -63.0537, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-10.0613, -25.929, -18.2555, 0.33", "-12.693, -24.8219, -18.2194, 0.33", "-16.8297, -22.871, -18.2768, 0.66", "-18.6845, -21.9964, -18.3025, 0.66", "-23.6241, -19.6669, -18.371, 0.66", "-28.2645, -17.4785, -18.4354, 0.66", "-32.6786, -15.3969, -18.4966, 0.66", "-35.4464, -14.2246, -18.4998, 0.66" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "112.983, 208.935, -23.8664, 0.33", "116.151, 212.42, -22.2772, 0.33", "117.378, 213.809, -21.6462, 0.33", "118.621, 215.341, -20.8422, 0.66", "120.53, 218.087, -19.4497, 0.33", "122.21, 220.732, -18.0634, 0.33", "122.995, 222.243, -17.189, 0.33", "123.568, 223.959, -16.0569, 0.66", "124.148, 226.247, -14.4198, 0.66", "124.671, 228.91, -12.4471, 0.33", "124.805, 230.064, -11.5822, 0.66", "125.394, 234.7, -8.20359, 0.33", "125.788, 236.717, -6.73471, 0.66", "126.461, 239.039, -4.93791, 0.33", "126.681, 239.635, -4.46878, 0.66", "128.347, 243.392, -1.28616, 0.33", "129.84, 246.572, 1.45118, 0.33", "130.594, 247.742, 2.45766, 0.66", "133.111, 251.49, 5.87537, 0.33", "134.126, 253.089, 7.36043, 0.66", "138.475, 259.922, 13.7657, 0.66", "140.797, 263.517, 17.1555, 0.66", "145.334, 270.731, 24.0882, 0.66", "148.761, 276.24, 29.2605, 0.66", "151.288, 280.183, 32.8852, 1.33" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "112.983, 208.935, -23.8664, 0.33", "114.692, 209.795, -24.9313, 0.33", "115.252, 210.236, -25.319, 0.66", "116.213, 211.161, -26.0018, 0.33", "116.824, 211.861, -26.4559, 0.66", "120.414, 216.398, -29.0621, 0.33", "121.593, 218.058, -29.96, 0.33", "124.067, 221.726, -31.7559, 0.66", "124.983, 223.32, -32.4484, 0.33", "125.889, 225.227, -33.2347, 0.66", "126.47, 226.701, -33.7174, 0.33", "127.115, 228.371, -34.2034, 0.66", "127.828, 229.986, -34.756, 0.33", "129.171, 232.562, -35.6271, 0.66", "129.979, 234.024, -36.103, 0.33", "132.075, 237.594, -37.2228, 0.66", "134.499, 241.595, -38.3449, 0.33", "135.139, 242.536, -38.5377, 0.33", "136.233, 243.82, -38.8415, 0.66", "137.526, 245.066, -39.133, 0.33", "138.372, 245.724, -39.3221, 0.66", "139.979, 247.058, -39.7473, 0.33", "141.83, 248.793, -40.1031, 0.33", "146.126, 253.222, -41.0426, 0.33", "146.605, 253.763, -41.1667, 0.66", "149.957, 258.045, -42.1585, 0.33", "152.773, 261.806, -43.2439, 0.66", "154.598, 264.436, -44.0809, 0.33", "156.012, 266.752, -44.8122, 0.33", "157.349, 269.13, -45.391, 0.33", "158.08, 270.372, -45.7049, 0.66", "160.942, 274.947, -46.8149, 0.33", "161.837, 276.283, -47.0459, 0.66", "162.726, 277.892, -47.0958, 0.66", "163.986, 280.704, -46.6587, 0.33", "164.147, 281.233, -46.5135, 0.66", "164.715, 283.869, -45.581, 0.66", "165.089, 289.343, -43.1777, 0.66", "165.167, 293.352, -41.4262, 0.33", "165.128, 293.81, -41.2178, 0.66", "164.591, 297.413, -39.5796, 0.33", "164.52, 297.88, -39.3757, 0.66", "163.915, 302.217, -37.5383, 0.33", "163.45, 307.044, -35.6803, 0.66", "163.001, 313.424, -33.3904, 0.33", "162.966, 313.933, -33.2066, 0.66", "162.808, 316.266, -32.3793, 0.33", "162.967, 318.527, -31.9147, 0.33", "163.806, 320.683, -32.1788, 0.33", "164.728, 322.015, -32.8427, 0.66", "166.18, 323.227, -33.9924, 0.33", "167.297, 324.031, -34.8718, 0.66", "172.811, 327.631, -39.3562, 0.33", "173.929, 328.378, -40.1924, 0.66", "175.019, 329.084, -40.9061, 0.66", "181.811, 333.097, -45.2856, 0.33", "183.201, 333.853, -46.1472, 0.33", "183.782, 334.166, -46.4622, 0.66", "190.211, 338.083, -49.0491, 0.33", "190.863, 338.493, -49.2613, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-104.24, -72.4003, -63.0537, 0.66", "-108.696, -75.7282, -64.9034, 0.66", "-109.949, -76.5778, -65.4428, 0.66", "-111.213, -77.3622, -66.0319, 0.66", "-112.857, -78.3171, -66.8427, 0.66", "-114.291, -79.133, -67.5849, 0.66", "-115.393, -79.7696, -68.1731, 0.33", "-116.902, -80.5943, -69.1348, 0.66", "-118.784, -81.66, -70.3317, 0.66", "-119.618, -82.1409, -70.8635, 0.66", "-120.954, -82.8939, -71.7282, 0.66", "-121.77, -83.3808, -72.3099, 0.33", "-122.642, -84.0314, -72.9853, 0.66", "-124.192, -85.4953, -74.3203, 0.66", "-124.728, -86.0669, -74.7881, 0.66", "-125.117, -86.4782, -75.1222, 0.66", "-126.495, -87.9293, -76.2846, 0.33", "-127.052, -88.534, -76.7391, 0.33", "-127.182, -88.6833, -76.844, 0.66", "-128.347, -90.0005, -77.7604, 0.33", "-129.187, -90.9698, -78.368, 0.66", "-129.646, -91.4188, -78.6495, 0.33", "-130.348, -91.9267, -78.9287, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-104.24, -72.4003, -63.0537, 0.33", "-105.113, -72.0979, -62.4738, 0.33", "-107.43, -71.2943, -60.9333, 0.66" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-35.4464, -14.2246, -18.4998, 0.66", "-33.8143, -12.7009, -18.5833, 0.66" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-35.4464, -14.2246, -18.4998, 0.66", "-40.0205, -12.8763, -18.0779, 0.66", "-42.2845, -12.1724, -18.0468, 0.66", "-44.9108, -11.3999, -18.1904, 0.66", "-50.1654, -10.0191, -18.9154, 0.66", "-54.2879, -9.0047, -19.8886, 0.66", "-57.1547, -8.29918, -20.5653, 0.33", "-59.8101, -7.65309, -21.4741, 0.66", "-62.2246, -7.08104, -22.4875, 0.33", "-65.3858, -6.52582, -24.205, 0.66", "-68.4831, -6.15498, -27.3517, 0.33" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_0", "apic_4", "apic_1", "dend_2", "dend_1", "apic_6", "apic_5", "apic_3", "apic_2", "dend_8", "dend_3", "apic_22", "apic_7", "dend_12", "dend_9", "dend_7", "dend_4", "apic_17", "apic_8", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "apic_19", "apic_18", "apic_16", "apic_9", "dend_18", "dend_15", "apic_21", "apic_20", "apic_13", "apic_10", "dend_17", "dend_16", "apic_15", "apic_14", "apic_12", "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_1", "apic_1", "apic_1", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_8", "dend_8", "dend_3", "dend_3", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_7", "apic_7", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_8", "apic_8", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_9", "apic_9", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_12", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BTC_e5d9eb2ec3_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_22, id: apic_22, parent: apic_6
create apic_22
public apic_22
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_8
create apic_16
public apic_16
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_13, id: apic_13, parent: apic_9
create apic_13
public apic_13
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_10
create apic_12
public apic_12
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999995461318083)
    connect dend_0(0), soma_0(0.4999995461318083)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_22(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_13(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.10599, -10.005, -3.63045, 2.05199 ) }
    soma_0 { pt3dadd( 1.00994, -8.98941, -3.26388, 3.40229 ) }
    soma_0 { pt3dadd( 0.913884, -7.97383, -2.89732, 4.43836 ) }
    soma_0 { pt3dadd( 0.817831, -6.95825, -2.53075, 5.9106 ) }
    soma_0 { pt3dadd( 0.721777, -5.94268, -2.16418, 7.4154 ) }
    soma_0 { pt3dadd( 0.625724, -4.9271, -1.79761, 8.65317 ) }
    soma_0 { pt3dadd( 0.52967, -3.91152, -1.43104, 9.36003 ) }
    soma_0 { pt3dadd( 0.433616, -2.89594, -1.06447, 10.0585 ) }
    soma_0 { pt3dadd( 0.337563, -1.88037, -0.697906, 10.4351 ) }
    soma_0 { pt3dadd( 0.241509, -0.864787, -0.331337, 10.6941 ) }
    soma_0 { pt3dadd( 0.145456, 0.150791, 0.0352311, 10.9531 ) }
    soma_0 { pt3dadd( 0.0494021, 1.16637, 0.4018, 11.2338 ) }
    soma_0 { pt3dadd( -0.0466515, 2.18195, 0.768368, 11.5118 ) }
    soma_0 { pt3dadd( -0.142705, 3.19752, 1.13494, 11.7095 ) }
    soma_0 { pt3dadd( -0.238759, 4.2131, 1.5015, 10.7536 ) }
    soma_0 { pt3dadd( -0.334812, 5.22868, 1.86807, 9.97 ) }
    soma_0 { pt3dadd( -0.430866, 6.24426, 2.23464, 9.36435 ) }
    soma_0 { pt3dadd( -0.526919, 7.25984, 2.60121, 8.19972 ) }
    soma_0 { pt3dadd( -0.622973, 8.27541, 2.96778, 6.07377 ) }
    soma_0 { pt3dadd( -0.719027, 9.29099, 3.33435, 3.38096 ) }
    soma_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 2.12602 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.00111, -10.0801, -3.03985, 2.66 ) }
    apic_0 { pt3dadd( 1.30295, -15.4425, -3.46007, 2.66 ) }
    apic_0 { pt3dadd( 1.63312, -21.3084, -3.91974, 2.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 3.84111, 9.92238, 0.260152, 2.66 ) }
    dend_0 { pt3dadd( 4.00559, 10.5365, 4.64633, 2.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.81508, 10.3066, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -2.22748, 25.24, 3.70092, 0.66 ) }
    axon_0 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.66 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 29/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 1.63312, -21.3084, -3.91974, 2.66 ) }
    apic_4 { pt3dadd( 1.40217, -21.5392, -3.00468, 2.66 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 31/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 1.63312, -21.3084, -3.91974, 0.66 ) }
    apic_1 { pt3dadd( 4.59848, -24.1323, -3.79706, 0.66 ) }
    apic_1 { pt3dadd( 8.1137, -27.48, -3.65163, 0.66 ) }
    apic_1 { pt3dadd( 10.9044, -30.1376, -3.53617, 0.66 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 35/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 4.00559, 10.5365, 4.64633, 1.99 ) }
    dend_2 { pt3dadd( 8.30008, 24.2734, -0.227932, 1.99 ) }
    dend_2 { pt3dadd( 11.2661, 33.7612, -3.59444, 1.99 ) }
    dend_2 { pt3dadd( 13.8502, 42.0269, -6.52733, 1.99 ) }
    dend_2 { pt3dadd( 16.9136, 51.8258, -10.0043, 1.99 ) }
    dend_2 { pt3dadd( 20.2345, 62.4485, -13.7735, 1.99 ) }
    dend_2 { pt3dadd( 22.6577, 70.1998, -16.5239, 1.99 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 42/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.00559, 10.5365, 4.64633, 1.33 ) }
    dend_1 { pt3dadd( 4.17203, 17.6661, 6.68695, 1.33 ) }
    dend_1 { pt3dadd( 4.4108, 23.2211, 8.32344, 1.33 ) }
    dend_1 { pt3dadd( 4.75917, 28.0409, 9.66168, 1.33 ) }
    dend_1 { pt3dadd( 5.18951, 33.2542, 10.8945, 0.66 ) }
    dend_1 { pt3dadd( 5.50793, 36.209, 11.5119, 0.66 ) }
    dend_1 { pt3dadd( 6.01315, 40.7606, 12.2414, 0.66 ) }
    dend_1 { pt3dadd( 6.30985, 43.108, 12.5492, 0.66 ) }
    dend_1 { pt3dadd( 6.86723, 47.0446, 12.7451, 0.66 ) }
    dend_1 { pt3dadd( 8.21383, 54.6882, 12.9204, 0.66 ) }
    dend_1 { pt3dadd( 8.77559, 57.8905, 12.955, 0.66 ) }
    dend_1 { pt3dadd( 9.57302, 63.001, 13.026, 0.66 ) }
    dend_1 { pt3dadd( 9.91866, 65.6424, 13.0648, 0.66 ) }
    dend_1 { pt3dadd( 10.3246, 68.8585, 13.1014, 0.66 ) }
    dend_1 { pt3dadd( 10.8781, 73.9904, 13.2518, 0.66 ) }
    dend_1 { pt3dadd( 11.2056, 76.6547, 13.379, 0.66 ) }
    dend_1 { pt3dadd( 11.6288, 80.4862, 13.6797, 0.66 ) }
    dend_1 { pt3dadd( 11.9685, 84.2067, 14.1453, 0.66 ) }
    dend_1 { pt3dadd( 12.1736, 87.0037, 14.5126, 0.66 ) }
    dend_1 { pt3dadd( 12.4448, 89.7878, 14.8915, 0.66 ) }
    dend_1 { pt3dadd( 13.0149, 94.9136, 15.6844, 0.66 ) }
    dend_1 { pt3dadd( 13.5701, 98.6227, 16.3949, 0.66 ) }
    dend_1 { pt3dadd( 14.1583, 102.0, 17.2746, 0.66 ) }
    dend_1 { pt3dadd( 14.7048, 104.228, 17.9475, 0.66 ) }
    dend_1 { pt3dadd( 15.2458, 106.299, 18.6184, 0.66 ) }
    dend_1 { pt3dadd( 16.0443, 108.846, 19.4673, 0.66 ) }
    dend_1 { pt3dadd( 16.9297, 111.371, 20.3492, 0.66 ) }
    dend_1 { pt3dadd( 18.3961, 114.838, 21.4566, 0.66 ) }
    dend_1 { pt3dadd( 20.2701, 118.933, 22.6957, 0.66 ) }
    dend_1 { pt3dadd( 21.5363, 121.845, 23.5538, 0.66 ) }
    dend_1 { pt3dadd( 22.2108, 123.519, 23.99, 0.33 ) }
    dend_1 { pt3dadd( 22.6467, 124.591, 24.214, 0.66 ) }
    dend_1 { pt3dadd( 23.7513, 127.453, 24.7532, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 75/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -3.63987, 40.1733, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -5.05227, 55.1067, 3.70092, 0.33 ) }
    axon_1 { pt3dadd( -6.46467, 70.04, 3.70092, 0.33 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 78/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 1.40217, -21.5392, -3.00468, 2.0 ) }
    apic_6 { pt3dadd( 2.9863, -24.1932, -9.58987, 2.0 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 80/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 1.40217, -21.5392, -3.00468, 0.66 ) }
    apic_5 { pt3dadd( -0.0742385, -25.3543, -0.891336, 0.66 ) }
    apic_5 { pt3dadd( -1.01125, -27.8873, 0.39974, 0.66 ) }
    apic_5 { pt3dadd( -1.62313, -29.6896, 1.13198, 0.66 ) }
    apic_5 { pt3dadd( -3.8177, -35.1801, 3.78571, 0.66 ) }
    apic_5 { pt3dadd( -4.4915, -36.8329, 4.73249, 0.66 ) }
    apic_5 { pt3dadd( -5.29963, -38.8047, 5.93356, 0.33 ) }
    apic_5 { pt3dadd( -5.65493, -39.62, 6.45491, 0.66 ) }
    apic_5 { pt3dadd( -6.71861, -42.0126, 8.01388, 0.66 ) }
    apic_5 { pt3dadd( -9.05037, -48.2078, 12.0113, 0.66 ) }
    apic_5 { pt3dadd( -10.0644, -51.3995, 13.7132, 0.33 ) }
    apic_5 { pt3dadd( -10.2546, -52.0103, 13.9943, 0.66 ) }
    apic_5 { pt3dadd( -10.9976, -54.3323, 15.0286, 0.66 ) }
    apic_5 { pt3dadd( -11.5793, -56.3479, 15.883, 0.33 ) }
    apic_5 { pt3dadd( -11.8258, -57.2638, 16.2388, 0.66 ) }
    apic_5 { pt3dadd( -12.5876, -61.0222, 16.9451, 0.33 ) }
    apic_5 { pt3dadd( -13.3537, -64.4354, 17.3925, 0.66 ) }
    apic_5 { pt3dadd( -14.1681, -67.9415, 17.9128, 0.33 ) }
    apic_5 { pt3dadd( -14.3393, -68.6172, 18.0326, 0.66 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 99/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 10.9044, -30.1376, -3.53617, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_3 { pt3dadd( 15.4484, -30.1354, -6.35415, 0.66 ) }
    apic_3 { pt3dadd( 20.0003, -30.268, -9.3072, 0.66 ) }
    apic_3 { pt3dadd( 29.74, -30.8806, -15.5304, 0.66 ) }
    apic_3 { pt3dadd( 35.6651, -31.127, -18.8262, 0.66 ) }
    apic_3 { pt3dadd( 41.8019, -31.3943, -21.8863, 0.66 ) }
    apic_3 { pt3dadd( 47.05, -31.5963, -24.3404, 0.66 ) }
    apic_3 { pt3dadd( 51.7626, -32.0559, -26.2532, 0.66 ) }
    apic_3 { pt3dadd( 58.0296, -32.8834, -28.5518, 0.66 ) }
    apic_3 { pt3dadd( 66.2477, -33.9102, -30.968, 0.66 ) }
    apic_3 { pt3dadd( 70.0591, -34.3728, -32.1613, 0.66 ) }
    apic_3 { pt3dadd( 73.0128, -34.6939, -33.1934, 0.33 ) }
    apic_3 { pt3dadd( 79.9827, -35.3681, -35.3669, 0.66 ) }
    apic_3 { pt3dadd( 85.2521, -35.8808, -36.889, 0.66 ) }
    apic_3 { pt3dadd( 87.981, -36.154, -37.7229, 0.66 ) }
    apic_3 { pt3dadd( 91.0661, -36.4473, -38.7763, 0.33 ) }
    apic_3 { pt3dadd( 94.1202, -36.5472, -39.9427, 0.66 ) }
    apic_3 { pt3dadd( 97.8626, -36.5124, -41.6713, 0.66 ) }
    apic_3 { pt3dadd( 101.33, -36.3514, -43.6132, 0.33 ) }
    apic_3 { pt3dadd( 103.156, -36.2522, -44.5798, 0.66 ) }
    apic_3 { pt3dadd( 106.192, -36.1258, -46.3208, 0.33 ) }
    apic_3 { pt3dadd( 111.082, -35.9049, -49.4309, 0.66 ) }
    apic_3 { pt3dadd( 116.393, -35.879, -52.8428, 0.66 ) }
    apic_3 { pt3dadd( 118.459, -35.9713, -54.2507, 0.33 ) }
    apic_3 { pt3dadd( 123.276, -36.3077, -57.5984, 0.66 ) }
    apic_3 { pt3dadd( 128.961, -36.8435, -61.561, 0.33 ) }
    apic_3 { pt3dadd( 131.692, -37.3072, -63.5436, 1.33 ) }
    apic_3 { pt3dadd( 134.592, -38.001, -65.546, 0.66 ) }
    apic_3 { pt3dadd( 136.788, -38.7179, -66.9296, 0.33 ) }
    apic_3 { pt3dadd( 138.075, -39.253, -67.7395, 0.66 ) }
    apic_3 { pt3dadd( 139.731, -40.2194, -68.9391, 0.33 ) }
    apic_3 { pt3dadd( 143.534, -43.0147, -71.7061, 1.33 ) }
    apic_3 { pt3dadd( 144.918, -44.0541, -72.754, 0.66 ) }
    apic_3 { pt3dadd( 149.101, -47.1069, -75.9606, 0.33 ) }
    apic_3 { pt3dadd( 149.774, -47.5494, -76.5882, 0.33 ) }
    apic_3 { pt3dadd( 152.792, -49.5356, -79.5089, 0.66 ) }
    apic_3 { pt3dadd( 155.666, -51.483, -82.3835, 0.33 ) }
    apic_3 { pt3dadd( 157.696, -52.7449, -84.3885, 1.33 ) }
    apic_3 { pt3dadd( 160.493, -54.3356, -87.5595, 0.33 ) }
    apic_3 { pt3dadd( 165.679, -56.8042, -94.711, 0.66 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 39/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 10.9044, -30.1376, -3.53617, 0.66 ) }
    apic_2 { pt3dadd( 11.8631, -32.0042, -1.40707, 0.66 ) }
    apic_2 { pt3dadd( 12.3212, -33.4208, 0.466796, 0.66 ) }
    apic_2 { pt3dadd( 12.4762, -33.941, 1.15404, 0.66 ) }
    apic_2 { pt3dadd( 13.0328, -35.8106, 3.61366, 0.66 ) }
    apic_2 { pt3dadd( 13.66, -38.6329, 7.36901, 0.66 ) }
    apic_2 { pt3dadd( 13.738, -39.047, 7.93061, 1.33 ) }
    apic_2 { pt3dadd( 13.8988, -41.495, 11.3674, 0.33 ) }
    apic_2 { pt3dadd( 14.0035, -42.2021, 12.5467, 0.33 ) }
    apic_2 { pt3dadd( 14.0315, -42.3543, 12.8178, 0.66 ) }
    apic_2 { pt3dadd( 14.3652, -43.4231, 14.887, 0.33 ) }
    apic_2 { pt3dadd( 14.7696, -44.3024, 16.8198, 0.66 ) }
    apic_2 { pt3dadd( 15.1625, -44.8562, 18.2013, 0.66 ) }
    apic_2 { pt3dadd( 17.7449, -46.8627, 24.389, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 22.6577, 70.1998, -16.5239, 1.33 ) }
    dend_8 { pt3dadd( 28.3938, 74.5788, -25.5687, 1.33 ) }
    dend_8 { pt3dadd( 31.7045, 77.1062, -30.7891, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 56/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 22.6577, 70.1998, -16.5239, 1.33 ) }
    dend_3 { pt3dadd( 21.2896, 73.83, -25.6898, 1.33 ) }
    dend_3 { pt3dadd( 20.446, 76.0684, -31.3415, 1.33 ) }
    // Section: apic_22, id: apic_22, parent: apic_6 (entry count 59/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 2.9863, -24.1932, -9.58987, 0.66 ) }
    apic_22 { pt3dadd( 5.02764, -23.738, -10.3599, 0.66 ) }
    apic_22 { pt3dadd( 6.50462, -23.3735, -10.9747, 0.66 ) }
    apic_22 { pt3dadd( 13.9454, -21.8745, -14.6508, 0.66 ) }
    apic_22 { pt3dadd( 19.627, -20.9908, -18.5323, 0.66 ) }
    apic_22 { pt3dadd( 22.098, -20.8159, -20.4771, 0.66 ) }
    apic_22 { pt3dadd( 24.8127, -20.6801, -22.6843, 0.66 ) }
    apic_22 { pt3dadd( 29.9286, -20.7589, -27.0261, 0.66 ) }
    apic_22 { pt3dadd( 33.3214, -21.0617, -30.2278, 0.66 ) }
    apic_22 { pt3dadd( 41.002, -22.1425, -38.5035, 0.66 ) }
    apic_22 { pt3dadd( 46.4973, -22.9549, -44.6892, 0.66 ) }
    apic_22 { pt3dadd( 47.9186, -23.2647, -46.3514, 0.66 ) }
    apic_22 { pt3dadd( 49.8137, -23.849, -48.6349, 0.66 ) }
    apic_22 { pt3dadd( 55.5649, -25.7681, -55.4002, 0.66 ) }
    apic_22 { pt3dadd( 62.937, -28.1945, -63.1384, 0.66 ) }
    apic_22 { pt3dadd( 65.9475, -29.0352, -65.6186, 0.66 ) }
    apic_22 { pt3dadd( 69.4885, -29.7075, -68.3563, 0.66 ) }
    apic_22 { pt3dadd( 71.884, -30.1337, -70.1336, 0.66 ) }
    apic_22 { pt3dadd( 81.984, -31.8996, -77.2313, 0.66 ) }
    apic_22 { pt3dadd( 83.5959, -32.2017, -78.3057, 0.66 ) }
    apic_22 { pt3dadd( 95.3202, -34.4901, -86.1549, 0.66 ) }
    apic_22 { pt3dadd( 103.293, -36.0223, -91.2947, 0.33 ) }
    apic_22 { pt3dadd( 104.123, -36.1602, -91.7999, 1.33 ) }
    apic_22 { pt3dadd( 105.771, -36.4524, -92.7055, 0.66 ) }
    apic_22 { pt3dadd( 112.088, -37.7889, -95.8214, 0.33 ) }
    apic_22 { pt3dadd( 115.537, -38.5408, -97.313, 1.33 ) }
    apic_22 { pt3dadd( 117.729, -39.2066, -97.9507, 0.33 ) }
    apic_22 { pt3dadd( 118.941, -39.602, -98.1945, 0.66 ) }
    apic_22 { pt3dadd( 124.013, -40.9521, -99.5165, 0.33 ) }
    apic_22 { pt3dadd( 125.222, -41.2507, -99.928, 1.33 ) }
    apic_22 { pt3dadd( 126.735, -41.6107, -100.423, 0.66 ) }
    apic_22 { pt3dadd( 129.488, -42.1976, -101.331, 0.33 ) }
    apic_22 { pt3dadd( 132.566, -42.816, -102.407, 1.33 ) }
    apic_22 { pt3dadd( 142.247, -44.4558, -106.085, 0.33 ) }
    apic_22 { pt3dadd( 148.29, -45.3464, -108.787, 0.33 ) }
    apic_22 { pt3dadd( 151.138, -45.8016, -110.126, 0.33 ) }
    apic_22 { pt3dadd( 152.3, -45.9952, -110.687, 0.33 ) }
    apic_22 { pt3dadd( 153.627, -46.1715, -111.282, 0.33 ) }
    apic_22 { pt3dadd( 159.394, -46.8311, -113.45, 0.66 ) }
    apic_22 { pt3dadd( 168.501, -47.5472, -116.227, 0.33 ) }
    apic_22 { pt3dadd( 171.653, -47.6588, -117.104, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_22 { pt3dadd( 174.926, -47.6908, -118.104, 0.66 ) }
    apic_22 { pt3dadd( 182.223, -47.6365, -120.301, 0.33 ) }
    apic_22 { pt3dadd( 184.779, -47.5365, -121.005, 0.66 ) }
    apic_22 { pt3dadd( 186.806, -47.3765, -121.372, 0.33 ) }
    apic_22 { pt3dadd( 187.255, -47.2906, -121.412, 0.66 ) }
    apic_22 { pt3dadd( 194.664, -45.3868, -122.777, 0.33 ) }
    apic_22 { pt3dadd( 195.962, -45.0514, -123.14, 0.66 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 7/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 2.9863, -24.1932, -9.58987, 1.33 ) }
    apic_7 { pt3dadd( 3.23715, -25.4096, -10.7245, 1.33 ) }
    apic_7 { pt3dadd( 3.63748, -27.3508, -12.5354, 1.99 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 10/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 31.7045, 77.1062, -30.7891, 1.33 ) }
    dend_12 { pt3dadd( 34.2639, 78.8632, -27.9146, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 12/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 31.7045, 77.1062, -30.7891, 0.66 ) }
    dend_9 { pt3dadd( 31.6898, 79.4356, -32.103, 0.66 ) }
    dend_9 { pt3dadd( 31.7784, 81.4753, -33.2006, 0.66 ) }
    dend_9 { pt3dadd( 31.9208, 83.9908, -34.2558, 0.66 ) }
    dend_9 { pt3dadd( 32.2361, 87.7641, -35.5848, 0.66 ) }
    dend_9 { pt3dadd( 32.9655, 94.7854, -37.6712, 0.66 ) }
    dend_9 { pt3dadd( 33.3366, 97.5003, -38.3654, 0.66 ) }
    dend_9 { pt3dadd( 33.7978, 100.134, -38.875, 0.66 ) }
    dend_9 { pt3dadd( 34.6942, 104.301, -39.6425, 0.66 ) }
    dend_9 { pt3dadd( 35.0982, 105.971, -39.8884, 0.66 ) }
    dend_9 { pt3dadd( 35.8739, 108.98, -40.1975, 0.66 ) }
    dend_9 { pt3dadd( 36.4082, 111.527, -40.3404, 0.66 ) }
    dend_9 { pt3dadd( 37.6109, 117.989, -41.2614, 0.66 ) }
    dend_9 { pt3dadd( 38.4812, 123.301, -42.3872, 0.66 ) }
    dend_9 { pt3dadd( 38.9353, 126.838, -43.3741, 0.66 ) }
    dend_9 { pt3dadd( 39.291, 130.237, -44.3971, 0.66 ) }
    dend_9 { pt3dadd( 39.6274, 133.694, -45.6001, 0.66 ) }
    dend_9 { pt3dadd( 40.1346, 140.042, -47.9064, 0.66 ) }
    dend_9 { pt3dadd( 40.4177, 143.304, -49.107, 0.66 ) }
    dend_9 { pt3dadd( 40.8678, 148.644, -50.9519, 0.66 ) }
    dend_9 { pt3dadd( 41.143, 151.306, -51.8685, 0.33 ) }
    dend_9 { pt3dadd( 41.6167, 155.333, -53.1211, 0.66 ) }
    dend_9 { pt3dadd( 42.0348, 158.022, -53.7929, 0.66 ) }
    dend_9 { pt3dadd( 42.5132, 160.703, -54.1935, 0.66 ) }
    dend_9 { pt3dadd( 42.929, 163.014, -54.564, 0.33 ) }
    dend_9 { pt3dadd( 43.359, 165.211, -54.8861, 0.66 ) }
    dend_9 { pt3dadd( 43.7202, 167.252, -55.1769, 0.33 ) }
    dend_9 { pt3dadd( 44.0214, 168.947, -55.3853, 0.66 ) }
    dend_9 { pt3dadd( 44.6353, 172.467, -56.1219, 0.33 ) }
    dend_9 { pt3dadd( 45.006, 175.056, -56.7747, 0.66 ) }
    dend_9 { pt3dadd( 45.4522, 178.012, -57.5957, 0.66 ) }
    dend_9 { pt3dadd( 45.7405, 179.473, -58.0277, 0.33 ) }
    dend_9 { pt3dadd( 46.0619, 180.937, -58.4248, 0.33 ) }
    dend_9 { pt3dadd( 46.7469, 183.866, -59.1233, 0.66 ) }
    dend_9 { pt3dadd( 47.1987, 185.879, -59.4802, 0.33 ) }
    dend_9 { pt3dadd( 47.6066, 187.217, -59.6156, 0.33 ) }
    dend_9 { pt3dadd( 48.2423, 189.568, -59.8288, 0.66 ) }
    dend_9 { pt3dadd( 49.0753, 193.03, -60.2531, 0.66 ) }
    dend_9 { pt3dadd( 49.2881, 194.22, -60.4563, 0.66 ) }
    dend_9 { pt3dadd( 49.7267, 198.438, -61.1642, 0.66 ) }
    dend_9 { pt3dadd( 49.7048, 201.167, -61.5534, 0.66 ) }
    dend_9 { pt3dadd( 49.0976, 206.361, -62.386, 0.66 ) }
    dend_9 { pt3dadd( 48.223, 210.539, -63.1131, 0.66 ) }
    dend_9 { pt3dadd( 47.2724, 214.233, -63.6928, 0.33 ) }
    dend_9 { pt3dadd( 46.3008, 217.485, -64.1178, 0.66 ) }
    dend_9 { pt3dadd( 44.5956, 222.533, -64.6058, 0.33 ) }
    dend_9 { pt3dadd( 43.5918, 225.555, -64.712, 0.66 ) }
    dend_9 { pt3dadd( 42.721, 228.743, -64.5147, 0.66 ) }
    dend_9 { pt3dadd( 41.9048, 232.489, -64.0159, 0.33 ) }
    dend_9 { pt3dadd( 41.7196, 234.119, -63.7756, 0.66 ) }
    dend_9 { pt3dadd( 41.6657, 235.3, -63.4868, 0.66 ) }
    dend_9 { pt3dadd( 41.7844, 238.822, -62.2437, 0.33 ) }
    dend_9 { pt3dadd( 41.9104, 240.428, -61.4827, 0.66 ) }
    dend_9 { pt3dadd( 42.1764, 242.491, -60.336, 0.33 ) }
    dend_9 { pt3dadd( 42.4851, 244.202, -59.3248, 0.66 ) }
    dend_9 { pt3dadd( 44.026, 251.114, -55.1712, 0.66 ) }
    dend_9 { pt3dadd( 44.5769, 253.176, -53.9611, 0.33 ) }
    dend_9 { pt3dadd( 45.1993, 255.09, -52.852, 0.33 ) }
    dend_9 { pt3dadd( 45.5529, 256.22, -52.1759, 0.66 ) }
    dend_9 { pt3dadd( 46.0622, 257.845, -51.205, 0.33 ) }
    dend_9 { pt3dadd( 46.5346, 259.494, -50.3495, 0.33 ) }
    dend_9 { pt3dadd( 46.9906, 261.338, -49.5298, 0.33 ) }
    dend_9 { pt3dadd( 47.0411, 261.663, -49.3346, 0.66 ) }
    dend_9 { pt3dadd( 47.4291, 265.541, -46.7566, 0.33 ) }
    dend_9 { pt3dadd( 47.4785, 266.684, -45.9864, 0.33 ) }
    dend_9 { pt3dadd( 47.5007, 267.32, -45.5673, 0.66 ) }
    dend_9 { pt3dadd( 47.8388, 271.378, -43.0744, 0.33 ) }
    dend_9 { pt3dadd( 47.8776, 271.727, -42.8936, 0.66 ) }
    dend_9 { pt3dadd( 48.45, 274.635, -41.7755, 0.33 ) }
    dend_9 { pt3dadd( 48.7008, 275.671, -41.5297, 0.66 ) }
    dend_9 { pt3dadd( 49.5737, 279.683, -40.4766, 0.33 ) }
    dend_9 { pt3dadd( 50.1327, 281.833, -40.1231, 0.33 ) }
    dend_9 { pt3dadd( 50.6689, 283.782, -39.9663, 0.33 ) }
    dend_9 { pt3dadd( 51.8986, 288.879, -39.5473, 0.66 ) }
    dend_9 { pt3dadd( 53.0614, 293.897, -39.1357, 0.66 ) }
    dend_9 { pt3dadd( 54.4294, 300.507, -38.6367, 0.66 ) }
    dend_9 { pt3dadd( 55.8468, 308.367, -38.3927, 0.66 ) }
    dend_9 { pt3dadd( 56.4287, 312.008, -38.4852, 0.33 ) }
    dend_9 { pt3dadd( 57.6245, 320.253, -38.8077, 0.66 ) }
    dend_9 { pt3dadd( 57.8134, 321.802, -38.9291, 0.66 ) }
    dend_9 { pt3dadd( 58.0748, 323.976, -39.2015, 0.66 ) }
    dend_9 { pt3dadd( 58.5688, 328.644, -40.1787, 0.66 ) }
    dend_9 { pt3dadd( 58.6338, 333.139, -40.6154, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 95/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 20.446, 76.0684, -31.3415, 0.66 ) }
    dend_7 { pt3dadd( 20.5108, 77.9449, -32.9891, 0.66 ) }
    dend_7 { pt3dadd( 20.4923, 79.7035, -34.7304, 0.66 ) }
    dend_7 { pt3dadd( 20.2464, 82.6365, -37.745, 0.66 ) }
    dend_7 { pt3dadd( 19.4799, 87.9529, -43.6588, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_7 { pt3dadd( 19.1196, 89.743, -45.6898, 0.66 ) }
    dend_7 { pt3dadd( 18.2652, 93.5095, -49.9764, 0.66 ) }
    dend_7 { pt3dadd( 17.3958, 96.265, -53.3199, 0.66 ) }
    dend_7 { pt3dadd( 16.9507, 97.5262, -55.0717, 0.66 ) }
    dend_7 { pt3dadd( 15.4526, 101.495, -61.2487, 0.66 ) }
    dend_7 { pt3dadd( 15.1487, 102.46, -62.6692, 0.66 ) }
    dend_7 { pt3dadd( 14.7332, 103.791, -64.579, 0.66 ) }
    dend_7 { pt3dadd( 14.5247, 104.694, -65.8236, 0.33 ) }
    dend_7 { pt3dadd( 13.8134, 109.78, -72.5033, 0.66 ) }
    dend_7 { pt3dadd( 13.793, 110.856, -73.8447, 1.33 ) }
    dend_7 { pt3dadd( 13.8657, 112.769, -76.0256, 0.33 ) }
    dend_7 { pt3dadd( 13.9032, 113.619, -76.9614, 0.66 ) }
    dend_7 { pt3dadd( 13.9877, 116.993, -80.3614, 0.33 ) }
    dend_7 { pt3dadd( 14.0605, 119.136, -82.3603, 1.33 ) }
    dend_7 { pt3dadd( 13.9503, 123.706, -86.2591, 0.66 ) }
    dend_7 { pt3dadd( 13.8211, 124.989, -87.4782, 0.66 ) }
    dend_7 { pt3dadd( 13.4202, 127.327, -89.9006, 0.66 ) }
    dend_7 { pt3dadd( 13.0978, 128.548, -91.3028, 0.66 ) }
    dend_7 { pt3dadd( 12.1465, 131.394, -94.7729, 0.66 ) }
    dend_7 { pt3dadd( 11.1674, 133.87, -97.9059, 0.66 ) }
    dend_7 { pt3dadd( 9.71038, 137.325, -102.06, 0.33 ) }
    dend_7 { pt3dadd( 9.39517, 138.121, -103.008, 0.66 ) }
    dend_7 { pt3dadd( 7.83598, 142.252, -107.911, 0.33 ) }
    dend_7 { pt3dadd( 7.50559, 143.2, -109.004, 0.33 ) }
    dend_7 { pt3dadd( 6.92872, 144.907, -110.698, 1.33 ) }
    dend_7 { pt3dadd( 6.36421, 146.699, -112.398, 0.33 ) }
    dend_7 { pt3dadd( 6.07213, 147.71, -113.311, 0.66 ) }
    dend_7 { pt3dadd( 4.46031, 153.181, -118.198, 0.33 ) }
    dend_7 { pt3dadd( 4.06346, 154.536, -119.259, 0.33 ) }
    dend_7 { pt3dadd( 3.32876, 156.938, -121.114, 0.66 ) }
    dend_7 { pt3dadd( 1.68207, 163.342, -126.798, 0.33 ) }
    dend_7 { pt3dadd( 1.41435, 164.604, -127.992, 0.33 ) }
    dend_7 { pt3dadd( 0.942326, 167.235, -130.598, 0.66 ) }
    dend_7 { pt3dadd( 0.529466, 169.992, -133.401, 0.33 ) }
    dend_7 { pt3dadd( 0.202951, 172.435, -136.156, 0.66 ) }
    dend_7 { pt3dadd( -0.443611, 178.615, -143.656, 0.33 ) }
    dend_7 { pt3dadd( -0.668377, 180.481, -145.991, 0.66 ) }
    dend_7 { pt3dadd( -1.17634, 183.281, -149.58, 0.33 ) }
    dend_7 { pt3dadd( -1.34728, 184.105, -150.7, 0.66 ) }
    dend_7 { pt3dadd( -2.02989, 187.025, -154.549, 0.66 ) }
    dend_7 { pt3dadd( -2.72018, 189.866, -157.837, 0.33 ) }
    dend_7 { pt3dadd( -3.43354, 192.66, -160.911, 0.66 ) }
    dend_7 { pt3dadd( -4.09622, 195.251, -163.866, 0.66 ) }
    dend_7 { pt3dadd( -5.29309, 199.825, -169.537, 0.66 ) }
    dend_7 { pt3dadd( -5.95454, 202.177, -172.58, 0.33 ) }
    dend_7 { pt3dadd( -6.74595, 204.773, -176.133, 0.66 ) }
    dend_7 { pt3dadd( -9.12267, 213.174, -187.527, 0.66 ) }
    dend_7 { pt3dadd( -9.65827, 215.104, -190.289, 0.66 ) }
    dend_7 { pt3dadd( -10.9491, 219.277, -196.384, 0.33 ) }
    dend_7 { pt3dadd( -11.3083, 220.377, -198.042, 0.66 ) }
    dend_7 { pt3dadd( -12.5952, 224.116, -203.816, 0.33 ) }
    dend_7 { pt3dadd( -13.6483, 226.948, -208.0, 0.66 ) }
    dend_7 { pt3dadd( -16.2517, 232.943, -216.943, 0.66 ) }
    dend_7 { pt3dadd( -17.1077, 234.786, -219.81, 1.99 ) }
    dend_7 { pt3dadd( -20.0403, 240.607, -229.199, 0.66 ) }
    dend_7 { pt3dadd( -20.8099, 242.103, -231.65, 0.66 ) }
    dend_7 { pt3dadd( -21.5065, 243.398, -233.756, 0.66 ) }
    dend_7 { pt3dadd( -25.7545, 251.22, -247.064, 0.66 ) }
    dend_7 { pt3dadd( -27.115, 253.925, -251.526, 0.33 ) }
    dend_7 { pt3dadd( -28.1126, 255.919, -255.064, 0.66 ) }
    dend_7 { pt3dadd( -28.9944, 257.516, -257.863, 0.66 ) }
    dend_7 { pt3dadd( -30.1093, 259.475, -261.364, 0.66 ) }
    dend_7 { pt3dadd( -33.0262, 264.626, -270.542, 0.66 ) }
    dend_7 { pt3dadd( -35.7789, 269.483, -278.893, 0.66 ) }
    dend_7 { pt3dadd( -41.7546, 279.424, -296.549, 0.33 ) }
    dend_7 { pt3dadd( -43.3796, 281.981, -301.298, 0.33 ) }
    dend_7 { pt3dadd( -46.134, 285.919, -309.147, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 67/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 20.446, 76.0684, -31.3415, 0.66 ) }
    dend_4 { pt3dadd( 17.8845, 81.6943, -35.3708, 0.66 ) }
    dend_4 { pt3dadd( 15.8883, 85.1548, -38.1227, 0.66 ) }
    dend_4 { pt3dadd( 13.0588, 90.0978, -41.9526, 0.66 ) }
    dend_4 { pt3dadd( 11.0754, 93.5078, -44.3989, 0.66 ) }
    dend_4 { pt3dadd( 10.1505, 95.1302, -45.5615, 0.66 ) }
    dend_4 { pt3dadd( 6.34802, 101.215, -50.0578, 0.66 ) }
    dend_4 { pt3dadd( 1.88382, 107.171, -54.9418, 0.66 ) }
    dend_4 { pt3dadd( 0.481109, 108.893, -56.4198, 0.66 ) }
    dend_4 { pt3dadd( -3.67684, 114.492, -60.7199, 0.66 ) }
    dend_4 { pt3dadd( -7.24597, 119.21, -63.8961, 0.66 ) }
    dend_4 { pt3dadd( -11.8527, 125.655, -67.4093, 0.66 ) }
    dend_4 { pt3dadd( -14.8673, 130.351, -69.2914, 0.66 ) }
    dend_4 { pt3dadd( -16.6112, 133.278, -69.9877, 0.66 ) }
    dend_4 { pt3dadd( -21.7334, 142.248, -70.9055, 0.66 ) }
    dend_4 { pt3dadd( -24.0848, 147.285, -70.4759, 0.66 ) }
    dend_4 { pt3dadd( -27.1255, 154.484, -69.142, 0.66 ) }
    dend_4 { pt3dadd( -28.5517, 158.515, -68.056, 0.66 ) }
    dend_4 { pt3dadd( -31.7172, 168.377, -64.7648, 0.66 ) }
    dend_4 { pt3dadd( -32.8624, 171.99, -63.3704, 0.66 ) }
    dend_4 { pt3dadd( -35.355, 180.127, -59.3896, 0.66 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 88/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 3.63748, -27.3508, -12.5354, 1.33 ) }
    apic_17 { pt3dadd( 0.289341, -34.069, -14.7007, 1.33 ) }
    apic_17 { pt3dadd( 0.393011, -37.1913, -17.0879, 1.33 ) }
    apic_17 { pt3dadd( 0.423384, -37.3973, -17.2297, 1.33 ) }
    apic_17 { pt3dadd( 0.797207, -40.217, -19.0667, 0.66 ) }
    apic_17 { pt3dadd( 1.06396, -42.4833, -20.4093, 0.66 ) }
    apic_17 { pt3dadd( 1.23655, -45.4213, -22.0799, 0.66 ) }
    apic_17 { pt3dadd( 2.03778, -59.8095, -29.7833, 0.66 ) }
    apic_17 { pt3dadd( 2.05522, -65.1211, -32.3591, 0.66 ) }
    apic_17 { pt3dadd( 1.91967, -68.8378, -33.7672, 0.66 ) }
    apic_17 { pt3dadd( 1.62153, -72.4382, -34.9265, 0.66 ) }
    apic_17 { pt3dadd( 0.966615, -78.9366, -36.9159, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_17 { pt3dadd( 0.0700609, -86.1846, -38.9112, 0.66 ) }
    apic_17 { pt3dadd( -0.73063, -90.326, -39.92, 0.66 ) }
    apic_17 { pt3dadd( -2.55296, -100.377, -42.4443, 0.66 ) }
    apic_17 { pt3dadd( -3.55052, -105.654, -43.7691, 0.66 ) }
    apic_17 { pt3dadd( -5.51169, -116.413, -46.4701, 0.66 ) }
    apic_17 { pt3dadd( -6.24352, -121.008, -47.5216, 0.66 ) }
    apic_17 { pt3dadd( -7.34147, -129.577, -49.5006, 0.66 ) }
    apic_17 { pt3dadd( -8.01571, -135.728, -50.9295, 0.66 ) }
    apic_17 { pt3dadd( -8.59416, -142.703, -52.6611, 0.66 ) }
    apic_17 { pt3dadd( -9.16955, -150.482, -54.3955, 0.66 ) }
    apic_17 { pt3dadd( -9.57984, -155.143, -55.3389, 0.66 ) }
    apic_17 { pt3dadd( -10.5325, -165.294, -57.5117, 0.66 ) }
    apic_17 { pt3dadd( -11.0664, -170.729, -58.6285, 0.66 ) }
    apic_17 { pt3dadd( -11.7544, -177.907, -60.1588, 0.66 ) }
    apic_17 { pt3dadd( -12.6145, -187.654, -62.2118, 0.66 ) }
    apic_17 { pt3dadd( -13.1449, -191.918, -63.14, 0.66 ) }
    apic_17 { pt3dadd( -14.649, -201.317, -65.2272, 0.66 ) }
    apic_17 { pt3dadd( -17.3213, -214.27, -67.6265, 0.66 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 18/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 3.63748, -27.3508, -12.5354, 1.33 ) }
    apic_8 { pt3dadd( 0.99754, -27.9345, -12.1659, 1.33 ) }
    apic_8 { pt3dadd( -5.85648, -29.45, -11.2065, 1.33 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 34.2639, 78.8632, -27.9146, 1.33 ) }
    dend_14 { pt3dadd( 37.9159, 82.7715, -29.5321, 1.33 ) }
    dend_14 { pt3dadd( 38.91, 83.8739, -29.8511, 1.33 ) }
    dend_14 { pt3dadd( 40.6188, 85.9225, -30.1168, 1.33 ) }
    dend_14 { pt3dadd( 42.6923, 88.6191, -30.2354, 1.33 ) }
    dend_14 { pt3dadd( 45.6477, 92.6216, -30.1081, 1.33 ) }
    dend_14 { pt3dadd( 50.209, 98.7935, -29.176, 1.33 ) }
    dend_14 { pt3dadd( 52.6334, 102.345, -28.0891, 1.33 ) }
    dend_14 { pt3dadd( 54.9478, 106.08, -26.5914, 0.66 ) }
    dend_14 { pt3dadd( 56.2207, 108.014, -25.6192, 0.66 ) }
    dend_14 { pt3dadd( 59.5545, 112.534, -23.3209, 0.66 ) }
    dend_14 { pt3dadd( 63.6165, 118.023, -20.2409, 0.66 ) }
    dend_14 { pt3dadd( 66.0403, 121.332, -18.3315, 0.66 ) }
    dend_14 { pt3dadd( 70.7429, 127.311, -15.1012, 0.66 ) }
    dend_14 { pt3dadd( 77.2168, 135.044, -11.0811, 0.66 ) }
    dend_14 { pt3dadd( 83.0368, 141.657, -7.55757, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 34.2639, 78.8632, -27.9146, 0.66 ) }
    dend_13 { pt3dadd( 37.0285, 79.3869, -21.6471, 0.66 ) }
    dend_13 { pt3dadd( 38.8884, 79.8988, -17.7491, 0.66 ) }
    dend_13 { pt3dadd( 41.6262, 80.8427, -12.4621, 0.66 ) }
    dend_13 { pt3dadd( 42.5641, 81.173, -10.787, 0.66 ) }
    dend_13 { pt3dadd( 43.8536, 81.6456, -8.36858, 0.66 ) }
    dend_13 { pt3dadd( 45.4194, 82.2736, -5.11259, 0.66 ) }
    dend_13 { pt3dadd( 47.7535, 83.5333, -0.153573, 0.66 ) }
    dend_13 { pt3dadd( 48.5144, 83.9457, 1.36593, 0.33 ) }
    dend_13 { pt3dadd( 49.0974, 84.2669, 2.48566, 0.66 ) }
    dend_13 { pt3dadd( 52.4494, 86.3266, 9.33622, 0.66 ) }
    dend_13 { pt3dadd( 54.4649, 87.7729, 13.8838, 0.66 ) }
    dend_13 { pt3dadd( 55.3371, 88.4391, 15.9833, 0.66 ) }
    dend_13 { pt3dadd( 56.3184, 89.2841, 18.1193, 0.66 ) }
    dend_13 { pt3dadd( 57.0421, 90.2431, 19.7731, 0.33 ) }
    dend_13 { pt3dadd( 57.2965, 90.6487, 20.3301, 0.66 ) }
    dend_13 { pt3dadd( 57.7825, 91.6409, 20.9805, 0.33 ) }
    dend_13 { pt3dadd( 58.0225, 92.2643, 21.2534, 0.66 ) }
    dend_13 { pt3dadd( 58.8555, 95.3878, 22.7147, 0.33 ) }
    dend_13 { pt3dadd( 59.467, 99.7112, 24.2738, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 58.6338, 333.139, -40.6154, 0.33 ) }
    dend_11 { pt3dadd( 58.0251, 334.124, -43.3269, 0.33 ) }
    dend_11 { pt3dadd( 57.7227, 334.614, -44.6742, 0.66 ) }
    dend_11 { pt3dadd( 56.9654, 335.84, -48.0477, 0.33 ) }
    dend_11 { pt3dadd( 56.4172, 336.727, -50.4894, 0.66 ) }
    dend_11 { pt3dadd( 55.2539, 338.611, -55.6717, 0.33 ) }
    dend_11 { pt3dadd( 54.749, 339.428, -57.9205, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 64/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 58.6338, 333.139, -40.6154, 0.33 ) }
    dend_10 { pt3dadd( 58.2771, 333.737, -42.5352, 0.33 ) }
    dend_10 { pt3dadd( 57.9008, 334.367, -44.5604, 0.66 ) }
    dend_10 { pt3dadd( 56.9657, 335.935, -49.5934, 0.33 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 68/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -35.355, 180.127, -59.3896, 0.66 ) }
    dend_6 { pt3dadd( -38.5032, 184.668, -62.5629, 0.66 ) }
    dend_6 { pt3dadd( -42.5499, 189.744, -66.9548, 0.66 ) }
    dend_6 { pt3dadd( -46.2577, 194.042, -70.5406, 0.66 ) }
    dend_6 { pt3dadd( -47.6437, 195.536, -71.7446, 0.66 ) }
    dend_6 { pt3dadd( -50.1892, 198.202, -73.7129, 0.66 ) }
    dend_6 { pt3dadd( -51.3842, 199.374, -74.5809, 0.66 ) }
    dend_6 { pt3dadd( -56.9986, 204.706, -78.3295, 0.66 ) }
    dend_6 { pt3dadd( -61.7107, 208.866, -80.7481, 0.66 ) }
    dend_6 { pt3dadd( -63.3523, 210.213, -81.6071, 0.66 ) }
    dend_6 { pt3dadd( -67.6634, 213.698, -83.7762, 0.66 ) }
    dend_6 { pt3dadd( -72.5097, 217.741, -86.1193, 0.66 ) }
    dend_6 { pt3dadd( -75.9904, 220.76, -87.8969, 0.66 ) }
    dend_6 { pt3dadd( -80.3497, 224.715, -90.2592, 0.66 ) }
    dend_6 { pt3dadd( -86.186, 229.992, -94.1003, 0.33 ) }
    dend_6 { pt3dadd( -88.3754, 232.051, -95.8217, 0.66 ) }
    dend_6 { pt3dadd( -89.0518, 232.692, -96.4633, 0.66 ) }
    dend_6 { pt3dadd( -93.1978, 236.697, -101.133, 0.66 ) }
    dend_6 { pt3dadd( -95.384, 238.911, -104.233, 0.33 ) }
    dend_6 { pt3dadd( -96.1155, 239.689, -105.418, 0.66 ) }
    dend_6 { pt3dadd( -98.9028, 242.776, -110.063, 0.33 ) }
    dend_6 { pt3dadd( -100.293, 244.291, -112.584, 1.33 ) }
    dend_6 { pt3dadd( -103.803, 248.18, -119.006, 0.33 ) }
    dend_6 { pt3dadd( -106.372, 251.171, -123.894, 0.33 ) }
    dend_6 { pt3dadd( -106.892, 251.787, -124.94, 0.66 ) }
    dend_6 { pt3dadd( -108.637, 253.789, -128.652, 0.33 ) }
    dend_6 { pt3dadd( -111.193, 256.66, -134.105, 0.66 ) }
    dend_6 { pt3dadd( -112.11, 257.734, -136.097, 0.33 ) }
    dend_6 { pt3dadd( -113.158, 259.01, -138.394, 0.66 ) }
    dend_6 { pt3dadd( -115.446, 261.718, -143.038, 0.33 ) }
    dend_6 { pt3dadd( -116.84, 263.748, -145.94, 0.66 ) }
    dend_6 { pt3dadd( -117.509, 265.092, -147.321, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_6 { pt3dadd( -118.121, 266.899, -148.418, 0.66 ) }
    dend_6 { pt3dadd( -118.571, 268.977, -149.166, 0.33 ) }
    dend_6 { pt3dadd( -118.803, 272.021, -149.304, 0.66 ) }
    dend_6 { pt3dadd( -118.753, 277.375, -148.533, 0.33 ) }
    dend_6 { pt3dadd( -118.501, 280.427, -147.737, 0.66 ) }
    dend_6 { pt3dadd( -118.073, 283.72, -146.435, 0.33 ) }
    dend_6 { pt3dadd( -117.942, 284.725, -145.959, 0.66 ) }
    dend_6 { pt3dadd( -117.605, 288.566, -144.044, 0.33 ) }
    dend_6 { pt3dadd( -117.597, 289.804, -143.382, 0.66 ) }
    dend_6 { pt3dadd( -117.668, 293.091, -141.603, 0.33 ) }
    dend_6 { pt3dadd( -118.069, 301.185, -137.201, 0.66 ) }
    dend_6 { pt3dadd( -118.375, 304.87, -135.147, 0.33 ) }
    dend_6 { pt3dadd( -119.15, 311.443, -131.598, 0.33 ) }
    dend_6 { pt3dadd( -119.832, 315.291, -129.571, 0.33 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 14/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -35.355, 180.127, -59.3896, 0.33 ) }
    dend_5 { pt3dadd( -35.7454, 183.383, -59.5141, 0.33 ) }
    dend_5 { pt3dadd( -35.8989, 185.739, -59.5819, 0.33 ) }
    dend_5 { pt3dadd( -35.9729, 187.055, -59.6084, 0.66 ) }
    dend_5 { pt3dadd( -36.176, 190.411, -59.6451, 0.33 ) }
    dend_5 { pt3dadd( -36.2682, 191.649, -59.6485, 0.66 ) }
    dend_5 { pt3dadd( -36.3704, 193.362, -59.4852, 0.33 ) }
    dend_5 { pt3dadd( -36.564, 197.087, -58.9096, 0.33 ) }
    dend_5 { pt3dadd( -36.6533, 198.238, -58.6879, 0.66 ) }
    dend_5 { pt3dadd( -36.8935, 200.24, -58.2337, 0.33 ) }
    dend_5 { pt3dadd( -37.0177, 201.139, -58.0051, 0.66 ) }
    dend_5 { pt3dadd( -37.643, 206.275, -56.9398, 0.33 ) }
    dend_5 { pt3dadd( -37.9631, 208.625, -56.4071, 1.33 ) }
    dend_5 { pt3dadd( -38.3501, 211.067, -55.8409, 0.33 ) }
    dend_5 { pt3dadd( -38.502, 211.961, -55.6515, 0.66 ) }
    dend_5 { pt3dadd( -39.3073, 216.402, -54.8174, 0.33 ) }
    dend_5 { pt3dadd( -40.1438, 220.148, -54.3168, 0.66 ) }
    dend_5 { pt3dadd( -41.5526, 225.426, -53.7951, 0.66 ) }
    dend_5 { pt3dadd( -42.0541, 227.581, -53.5046, 0.66 ) }
    dend_5 { pt3dadd( -42.8288, 231.288, -52.9922, 0.66 ) }
    dend_5 { pt3dadd( -43.3082, 233.867, -52.5974, 0.33 ) }
    dend_5 { pt3dadd( -44.0525, 238.014, -51.9197, 0.66 ) }
    dend_5 { pt3dadd( -44.776, 243.288, -51.0654, 0.66 ) }
    dend_5 { pt3dadd( -45.3571, 251.466, -49.5252, 0.33 ) }
    dend_5 { pt3dadd( -45.3969, 252.747, -49.2331, 0.66 ) }
    dend_5 { pt3dadd( -45.2839, 257.482, -48.0698, 0.33 ) }
    dend_5 { pt3dadd( -45.0483, 262.065, -46.8529, 0.33 ) }
    dend_5 { pt3dadd( -44.9034, 263.718, -46.3959, 0.66 ) }
    dend_5 { pt3dadd( -44.224, 271.317, -44.7558, 0.33 ) }
    dend_5 { pt3dadd( -44.1366, 272.488, -44.601, 0.66 ) }
    dend_5 { pt3dadd( -43.6971, 277.165, -44.0878, 0.33 ) }
    dend_5 { pt3dadd( -43.5104, 279.225, -43.9204, 0.33 ) }
    dend_5 { pt3dadd( -43.0701, 283.044, -43.7303, 0.66 ) }
    dend_5 { pt3dadd( -42.5195, 288.395, -43.6374, 0.66 ) }
    dend_5 { pt3dadd( -42.0099, 293.389, -43.7419, 0.66 ) }
    dend_5 { pt3dadd( -41.5402, 297.911, -43.6652, 0.33 ) }
    dend_5 { pt3dadd( -41.4004, 299.571, -43.5594, 0.33 ) }
    dend_5 { pt3dadd( -41.1244, 304.568, -43.0571, 0.33 ) }
    dend_5 { pt3dadd( -41.1509, 305.789, -42.7982, 0.66 ) }
    dend_5 { pt3dadd( -41.3999, 308.092, -42.2295, 0.33 ) }
    dend_5 { pt3dadd( -41.6399, 309.282, -41.9469, 0.66 ) }
    dend_5 { pt3dadd( -42.3299, 311.868, -41.4893, 0.33 ) }
    dend_5 { pt3dadd( -42.958, 314.151, -41.0771, 1.99 ) }
    dend_5 { pt3dadd( -44.6929, 318.948, -40.1106, 0.33 ) }
    dend_5 { pt3dadd( -46.0186, 322.952, -39.4374, 0.66 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 59/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -17.3213, -214.27, -67.6265, 0.33 ) }
    apic_19 { pt3dadd( -17.6583, -217.113, -69.031, 0.33 ) }
    apic_19 { pt3dadd( -17.8114, -217.815, -69.2247, 0.66 ) }
    apic_19 { pt3dadd( -18.2005, -219.1, -69.4759, 0.33 ) }
    apic_19 { pt3dadd( -18.3026, -219.424, -69.5291, 0.66 ) }
    apic_19 { pt3dadd( -19.6508, -223.957, -70.4066, 0.66 ) }
    apic_19 { pt3dadd( -20.115, -226.182, -70.9158, 0.33 ) }
    apic_19 { pt3dadd( -20.7768, -231.072, -72.244, 0.66 ) }
    apic_19 { pt3dadd( -21.4009, -236.32, -73.7003, 0.66 ) }
    apic_19 { pt3dadd( -21.6321, -238.466, -74.2804, 0.66 ) }
    apic_19 { pt3dadd( -22.4639, -245.091, -75.979, 0.66 ) }
    apic_19 { pt3dadd( -23.3401, -251.655, -77.5694, 0.66 ) }
    apic_19 { pt3dadd( -23.7485, -254.76, -78.3698, 0.66 ) }
    apic_19 { pt3dadd( -24.3548, -259.071, -79.5207, 0.66 ) }
    apic_19 { pt3dadd( -25.0233, -262.917, -80.5196, 0.66 ) }
    apic_19 { pt3dadd( -26.0583, -267.771, -81.665, 0.66 ) }
    apic_19 { pt3dadd( -27.2721, -272.273, -82.6407, 0.66 ) }
    apic_19 { pt3dadd( -28.4068, -275.685, -83.3085, 0.66 ) }
    apic_19 { pt3dadd( -30.6422, -281.994, -84.5725, 0.66 ) }
    apic_19 { pt3dadd( -32.1389, -286.05, -85.343, 0.66 ) }
    apic_19 { pt3dadd( -33.9534, -290.715, -86.2214, 0.66 ) }
    apic_19 { pt3dadd( -35.6511, -295.049, -86.9969, 0.66 ) }
    apic_19 { pt3dadd( -38.2695, -301.481, -88.0989, 0.66 ) }
    apic_19 { pt3dadd( -40.2405, -306.38, -88.9062, 0.66 ) }
    apic_19 { pt3dadd( -42.1904, -311.742, -89.7993, 0.66 ) }
    apic_19 { pt3dadd( -43.465, -315.5, -90.3922, 0.66 ) }
    apic_19 { pt3dadd( -44.5778, -319.315, -90.9877, 0.66 ) }
    apic_19 { pt3dadd( -45.741, -324.182, -91.6909, 0.66 ) }
    apic_19 { pt3dadd( -46.6428, -328.882, -92.5409, 0.66 ) }
    apic_19 { pt3dadd( -47.4242, -333.974, -93.6328, 0.66 ) }
    apic_19 { pt3dadd( -47.9338, -338.279, -94.7002, 0.66 ) }
    apic_19 { pt3dadd( -48.5559, -343.816, -96.1338, 0.66 ) }
    apic_19 { pt3dadd( -49.2411, -349.159, -97.61, 0.66 ) }
    apic_19 { pt3dadd( -49.882, -353.806, -98.8899, 0.66 ) }
    apic_19 { pt3dadd( -50.4785, -357.53, -99.9374, 0.66 ) }
    apic_19 { pt3dadd( -50.915, -359.81, -100.602, 0.66 ) }
    apic_19 { pt3dadd( -51.9704, -366.084, -102.697, 0.66 ) }
    apic_19 { pt3dadd( -53.0071, -373.06, -105.273, 0.66 ) }
    apic_19 { pt3dadd( -53.2435, -375.465, -106.21, 0.33 ) }
    apic_19 { pt3dadd( -53.3564, -377.02, -106.799, 0.33 ) }
    apic_19 { pt3dadd( -53.5535, -379.845, -107.899, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    apic_19 { pt3dadd( -53.8559, -385.228, -110.083, 0.66 ) }
    apic_19 { pt3dadd( -54.0561, -391.762, -112.774, 0.66 ) }
    apic_19 { pt3dadd( -54.1229, -393.832, -113.629, 0.33 ) }
    apic_19 { pt3dadd( -54.3559, -396.621, -114.668, 0.33 ) }
    apic_19 { pt3dadd( -54.6487, -399.623, -115.661, 0.66 ) }
    apic_19 { pt3dadd( -54.8445, -401.651, -116.296, 0.66 ) }
    apic_19 { pt3dadd( -55.1322, -404.201, -117.041, 0.33 ) }
    apic_19 { pt3dadd( -55.3364, -405.92, -117.544, 0.66 ) }
    apic_19 { pt3dadd( -58.1614, -429.263, -124.339, 0.66 ) }
    apic_19 { pt3dadd( -58.3781, -431.114, -124.894, 0.33 ) }
    apic_19 { pt3dadd( -58.9124, -436.577, -126.582, 0.66 ) }
    apic_19 { pt3dadd( -59.0949, -438.5, -127.194, 0.33 ) }
    apic_19 { pt3dadd( -59.1993, -439.643, -127.548, 0.66 ) }
    apic_19 { pt3dadd( -59.4759, -442.37, -128.366, 0.33 ) }
    apic_19 { pt3dadd( -59.6801, -443.655, -128.715, 0.66 ) }
    apic_19 { pt3dadd( -60.7009, -448.099, -130.179, 0.33 ) }
    apic_19 { pt3dadd( -61.1167, -449.458, -130.649, 0.33 ) }
    apic_19 { pt3dadd( -63.0303, -455.212, -132.766, 0.66 ) }
    apic_19 { pt3dadd( -64.1758, -458.554, -133.951, 0.66 ) }
    apic_19 { pt3dadd( -65.119, -461.252, -134.872, 0.66 ) }
    apic_19 { pt3dadd( -67.0011, -466.228, -136.428, 0.66 ) }
    apic_19 { pt3dadd( -68.7641, -470.658, -137.646, 0.66 ) }
    apic_19 { pt3dadd( -69.9178, -473.767, -138.365, 0.66 ) }
    apic_19 { pt3dadd( -71.2276, -477.487, -139.083, 0.33 ) }
    apic_19 { pt3dadd( -71.5207, -478.504, -139.197, 0.66 ) }
    apic_19 { pt3dadd( -72.179, -481.51, -139.322, 0.66 ) }
    apic_19 { pt3dadd( -72.6185, -484.0, -139.19, 0.66 ) }
    apic_19 { pt3dadd( -73.0954, -486.809, -138.962, 0.33 ) }
    apic_19 { pt3dadd( -73.2255, -487.536, -138.882, 0.66 ) }
    apic_19 { pt3dadd( -73.8566, -490.993, -138.564, 0.66 ) }
    apic_19 { pt3dadd( -74.636, -495.245, -138.286, 0.66 ) }
    apic_19 { pt3dadd( -75.3158, -498.797, -138.205, 0.66 ) }
    apic_19 { pt3dadd( -75.6398, -500.133, -138.259, 0.66 ) }
    apic_19 { pt3dadd( -76.3807, -502.891, -138.569, 0.33 ) }
    apic_19 { pt3dadd( -76.9782, -505.023, -138.927, 0.66 ) }
    apic_19 { pt3dadd( -77.3931, -506.932, -139.442, 0.33 ) }
    apic_19 { pt3dadd( -77.6458, -508.803, -140.108, 0.66 ) }
    apic_19 { pt3dadd( -77.8029, -510.845, -140.991, 0.33 ) }
    apic_19 { pt3dadd( -78.0447, -514.67, -142.715, 0.33 ) }
    apic_19 { pt3dadd( -78.085, -515.34, -143.03, 0.66 ) }
    apic_19 { pt3dadd( -78.3319, -519.563, -144.837, 0.33 ) }
    apic_19 { pt3dadd( -78.4362, -522.06, -145.82, 0.33 ) }
    apic_19 { pt3dadd( -78.4883, -522.51, -145.951, 0.66 ) }
    apic_19 { pt3dadd( -78.8227, -524.25, -146.248, 0.33 ) }
    apic_19 { pt3dadd( -79.0263, -524.883, -146.291, 0.66 ) }
    apic_19 { pt3dadd( -79.6216, -526.613, -146.308, 0.33 ) }
    apic_19 { pt3dadd( -80.3535, -528.501, -146.244, 0.66 ) }
    apic_19 { pt3dadd( -81.7625, -533.123, -146.151, 0.33 ) }
    apic_19 { pt3dadd( -82.0261, -534.149, -146.161, 0.33 ) }
    apic_19 { pt3dadd( -82.0946, -534.478, -146.173, 0.66 ) }
    apic_19 { pt3dadd( -82.7193, -538.248, -146.401, 0.33 ) }
    apic_19 { pt3dadd( -82.995, -540.546, -146.618, 0.33 ) }
    apic_19 { pt3dadd( -83.3223, -544.534, -147.135, 0.33 ) }
    apic_19 { pt3dadd( -83.3817, -545.258, -147.252, 0.66 ) }
    apic_19 { pt3dadd( -83.8491, -548.039, -147.659, 0.33 ) }
    apic_19 { pt3dadd( -83.8491, -548.039, -147.659, 0.66 ) }
    apic_19 { pt3dadd( -84.5332, -550.026, -147.843, 0.33 ) }
    apic_19 { pt3dadd( -84.5332, -550.026, -147.843, 0.66 ) }
    apic_19 { pt3dadd( -85.2084, -552.809, -148.0, 0.33 ) }
    apic_19 { pt3dadd( -85.9051, -556.124, -148.181, 0.33 ) }
    apic_19 { pt3dadd( -86.155, -557.52, -148.255, 0.66 ) }
    apic_19 { pt3dadd( -86.729, -560.924, -148.519, 0.33 ) }
    apic_19 { pt3dadd( -87.4975, -566.166, -149.185, 0.33 ) }
    apic_19 { pt3dadd( -87.659, -567.337, -149.389, 0.33 ) }
    apic_19 { pt3dadd( -87.7459, -567.975, -149.537, 0.66 ) }
    apic_19 { pt3dadd( -87.995, -569.712, -149.963, 0.33 ) }
    apic_19 { pt3dadd( -88.3804, -572.032, -150.579, 0.66 ) }
    apic_19 { pt3dadd( -89.3111, -577.295, -152.282, 0.33 ) }
    apic_19 { pt3dadd( -89.7332, -578.813, -152.881, 0.66 ) }
    apic_19 { pt3dadd( -90.5828, -581.803, -154.119, 0.33 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 70/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -17.3213, -214.27, -67.6265, 0.66 ) }
    apic_18 { pt3dadd( -15.3586, -215.838, -67.0665, 0.66 ) }
    apic_18 { pt3dadd( -12.9745, -217.928, -66.4596, 0.33 ) }
    apic_18 { pt3dadd( -12.5684, -218.3, -66.3599, 0.66 ) }
    apic_18 { pt3dadd( -8.00755, -222.574, -65.2043, 0.66 ) }
    apic_18 { pt3dadd( -4.20355, -226.257, -64.1653, 0.33 ) }
    apic_18 { pt3dadd( -3.01569, -227.473, -63.7502, 0.33 ) }
    apic_18 { pt3dadd( -1.45905, -229.294, -63.1291, 0.33 ) }
    apic_18 { pt3dadd( -1.02734, -229.907, -62.8735, 0.66 ) }
    apic_18 { pt3dadd( -0.489083, -231.168, -62.1104, 0.33 ) }
    apic_18 { pt3dadd( -0.0889826, -232.859, -60.8631, 0.66 ) }
    apic_18 { pt3dadd( 0.313813, -235.869, -58.2076, 0.33 ) }
    apic_18 { pt3dadd( 0.486484, -237.963, -56.2988, 0.66 ) }
    apic_18 { pt3dadd( 0.601048, -240.099, -54.1665, 0.33 ) }
    apic_18 { pt3dadd( 0.53081, -244.664, -49.5493, 0.66 ) }
    // Section: apic_16, id: apic_16, parent: apic_8 (entry count 85/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -5.85648, -29.45, -11.2065, 0.66 ) }
    apic_16 { pt3dadd( -9.49805, -33.8601, -17.4167, 0.66 ) }
    apic_16 { pt3dadd( -11.5659, -36.4683, -21.253, 0.66 ) }
    apic_16 { pt3dadd( -14.6239, -40.7559, -28.135, 0.66 ) }
    apic_16 { pt3dadd( -15.5003, -42.0077, -30.3139, 0.66 ) }
    apic_16 { pt3dadd( -16.2001, -43.018, -32.1294, 0.66 ) }
    apic_16 { pt3dadd( -17.8256, -45.5751, -37.0204, 0.66 ) }
    apic_16 { pt3dadd( -18.6343, -46.9413, -39.8958, 0.66 ) }
    apic_16 { pt3dadd( -19.4907, -48.5729, -44.4053, 0.66 ) }
    apic_16 { pt3dadd( -19.6712, -49.1537, -46.0616, 0.66 ) }
    apic_16 { pt3dadd( -20.0027, -49.8246, -48.121, 0.66 ) }
    apic_16 { pt3dadd( -21.0943, -51.3748, -52.2479, 0.66 ) }
    apic_16 { pt3dadd( -22.0822, -52.5254, -55.0711, 0.66 ) }
    apic_16 { pt3dadd( -23.0791, -53.6582, -57.4254, 0.66 ) }
    apic_16 { pt3dadd( -25.3612, -56.1041, -61.842, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_16 { pt3dadd( -29.7453, -60.9231, -69.5329, 0.66 ) }
    apic_16 { pt3dadd( -32.1309, -63.375, -73.1478, 0.66 ) }
    apic_16 { pt3dadd( -34.0634, -65.3282, -75.7664, 0.66 ) }
    apic_16 { pt3dadd( -35.9498, -67.4632, -78.2432, 0.66 ) }
    apic_16 { pt3dadd( -36.8293, -68.5404, -79.3229, 0.66 ) }
    apic_16 { pt3dadd( -37.7469, -69.7255, -80.3247, 0.66 ) }
    apic_16 { pt3dadd( -40.2089, -73.3188, -82.8414, 0.66 ) }
    apic_16 { pt3dadd( -42.4965, -76.5255, -85.543, 0.66 ) }
    apic_16 { pt3dadd( -44.6478, -79.8931, -88.6342, 0.66 ) }
    apic_16 { pt3dadd( -45.6705, -81.9751, -90.7807, 0.66 ) }
    apic_16 { pt3dadd( -46.6845, -84.5742, -93.548, 0.66 ) }
    apic_16 { pt3dadd( -48.0571, -88.5613, -97.8931, 0.66 ) }
    apic_16 { pt3dadd( -49.5357, -93.6029, -103.31, 0.66 ) }
    apic_16 { pt3dadd( -51.1557, -100.176, -110.578, 0.66 ) }
    apic_16 { pt3dadd( -52.1732, -105.734, -116.805, 0.66 ) }
    apic_16 { pt3dadd( -52.4928, -107.807, -118.957, 0.66 ) }
    apic_16 { pt3dadd( -53.0973, -112.87, -123.955, 0.66 ) }
    apic_16 { pt3dadd( -53.2172, -114.292, -125.214, 0.66 ) }
    apic_16 { pt3dadd( -53.6486, -120.34, -129.872, 0.66 ) }
    apic_16 { pt3dadd( -54.2147, -124.565, -132.772, 0.66 ) }
    apic_16 { pt3dadd( -55.3528, -130.168, -136.282, 0.66 ) }
    apic_16 { pt3dadd( -56.2654, -134.608, -139.19, 0.66 ) }
    apic_16 { pt3dadd( -56.5638, -136.335, -140.321, 0.66 ) }
    apic_16 { pt3dadd( -57.1325, -139.328, -142.545, 0.33 ) }
    apic_16 { pt3dadd( -57.512, -141.215, -144.148, 0.33 ) }
    apic_16 { pt3dadd( -57.5083, -143.227, -146.425, 0.33 ) }
    apic_16 { pt3dadd( -57.3064, -144.668, -148.331, 1.33 ) }
    apic_16 { pt3dadd( -57.0821, -145.922, -150.036, 0.66 ) }
    apic_16 { pt3dadd( -56.4216, -148.55, -154.07, 0.66 ) }
    apic_16 { pt3dadd( -55.7547, -150.925, -158.256, 0.66 ) }
    apic_16 { pt3dadd( -54.3586, -155.107, -166.45, 0.33 ) }
    apic_16 { pt3dadd( -54.1732, -155.707, -167.686, 0.33 ) }
    apic_16 { pt3dadd( -53.9424, -156.519, -169.514, 0.66 ) }
    apic_16 { pt3dadd( -53.5478, -158.278, -174.204, 0.33 ) }
    apic_16 { pt3dadd( -53.5543, -158.879, -176.216, 0.33 ) }
    apic_16 { pt3dadd( -53.7071, -159.107, -177.276, 0.33 ) }
    apic_16 { pt3dadd( -54.7839, -159.63, -180.658, 0.33 ) }
    apic_16 { pt3dadd( -55.7352, -160.053, -184.719, 0.66 ) }
    apic_16 { pt3dadd( -56.1425, -160.164, -186.859, 0.33 ) }
    apic_16 { pt3dadd( -56.2564, -160.174, -187.526, 0.66 ) }
    apic_16 { pt3dadd( -56.5524, -160.215, -189.806, 0.33 ) }
    apic_16 { pt3dadd( -56.8289, -160.213, -192.343, 0.66 ) }
    apic_16 { pt3dadd( -57.0547, -160.34, -197.038, 0.33 ) }
    apic_16 { pt3dadd( -57.1649, -160.464, -198.481, 0.66 ) }
    apic_16 { pt3dadd( -57.213, -160.871, -200.681, 0.33 ) }
    apic_16 { pt3dadd( -57.2329, -161.261, -202.039, 0.33 ) }
    apic_16 { pt3dadd( -57.2742, -161.749, -203.105, 0.66 ) }
    apic_16 { pt3dadd( -57.7673, -164.692, -206.905, 0.33 ) }
    apic_16 { pt3dadd( -58.0366, -165.908, -207.804, 0.66 ) }
    apic_16 { pt3dadd( -58.6105, -168.536, -209.218, 0.33 ) }
    apic_16 { pt3dadd( -59.1608, -170.744, -210.007, 0.33 ) }
    apic_16 { pt3dadd( -59.8235, -173.338, -210.557, 0.33 ) }
    apic_16 { pt3dadd( -60.3536, -175.06, -210.729, 0.33 ) }
    apic_16 { pt3dadd( -60.8498, -176.45, -210.761, 0.66 ) }
    apic_16 { pt3dadd( -61.2514, -177.497, -210.861, 0.33 ) }
    apic_16 { pt3dadd( -62.1084, -179.445, -211.218, 0.66 ) }
    apic_16 { pt3dadd( -62.9401, -181.282, -211.74, 0.66 ) }
    apic_16 { pt3dadd( -64.7793, -185.032, -212.985, 0.33 ) }
    apic_16 { pt3dadd( -65.3493, -186.129, -213.382, 0.66 ) }
    apic_16 { pt3dadd( -67.3551, -189.913, -214.794, 0.33 ) }
    apic_16 { pt3dadd( -67.9388, -191.005, -215.205, 0.66 ) }
    apic_16 { pt3dadd( -69.0072, -192.823, -215.986, 0.33 ) }
    apic_16 { pt3dadd( -69.5811, -193.667, -216.434, 0.66 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 63/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -5.85648, -29.45, -11.2065, 0.66 ) }
    apic_9 { pt3dadd( -7.33727, -28.2101, -13.6889, 0.66 ) }
    apic_9 { pt3dadd( -10.0613, -25.929, -18.2555, 0.66 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 66/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 83.0368, 141.657, -7.55757, 0.33 ) }
    dend_18 { pt3dadd( 89.4695, 145.837, 1.24651, 0.33 ) }
    dend_18 { pt3dadd( 91.8219, 147.071, 3.75902, 0.33 ) }
    dend_18 { pt3dadd( 92.3434, 147.319, 4.23091, 0.66 ) }
    dend_18 { pt3dadd( 95.9691, 148.755, 6.48299, 0.33 ) }
    dend_18 { pt3dadd( 97.9188, 149.505, 7.76346, 0.66 ) }
    dend_18 { pt3dadd( 99.553, 150.217, 8.90182, 0.33 ) }
    dend_18 { pt3dadd( 100.674, 150.658, 9.42666, 0.33 ) }
    dend_18 { pt3dadd( 102.644, 151.628, 10.6274, 0.33 ) }
    dend_18 { pt3dadd( 105.966, 153.772, 13.1029, 0.66 ) }
    dend_18 { pt3dadd( 109.861, 157.439, 16.4005, 0.66 ) }
    dend_18 { pt3dadd( 111.496, 159.403, 17.9627, 0.66 ) }
    dend_18 { pt3dadd( 112.714, 161.129, 19.2458, 0.66 ) }
    dend_18 { pt3dadd( 114.136, 163.421, 20.8675, 0.66 ) }
    dend_18 { pt3dadd( 115.384, 165.722, 22.381, 0.66 ) }
    dend_18 { pt3dadd( 117.893, 170.659, 25.4949, 0.66 ) }
    dend_18 { pt3dadd( 119.304, 173.519, 27.1489, 0.33 ) }
    dend_18 { pt3dadd( 119.877, 174.728, 27.9056, 0.66 ) }
    dend_18 { pt3dadd( 120.728, 176.652, 29.2213, 0.33 ) }
    dend_18 { pt3dadd( 121.721, 178.65, 30.5804, 0.66 ) }
    dend_18 { pt3dadd( 123.004, 181.1, 32.3966, 0.33 ) }
    dend_18 { pt3dadd( 124.394, 183.754, 34.7419, 0.66 ) }
    dend_18 { pt3dadd( 125.407, 185.54, 36.3244, 0.33 ) }
    dend_18 { pt3dadd( 126.47, 187.476, 37.8212, 0.33 ) }
    dend_18 { pt3dadd( 128.727, 192.058, 41.0955, 0.66 ) }
    dend_18 { pt3dadd( 130.713, 195.879, 43.2731, 0.33 ) }
    dend_18 { pt3dadd( 131.907, 198.06, 44.057, 1.33 ) }
    dend_18 { pt3dadd( 133.455, 200.162, 44.3907, 0.33 ) }
    dend_18 { pt3dadd( 135.522, 203.182, 45.1611, 0.33 ) }
    dend_18 { pt3dadd( 136.067, 203.976, 45.4517, 0.66 ) }
    dend_18 { pt3dadd( 138.666, 207.777, 47.2478, 0.66 ) }
    dend_18 { pt3dadd( 139.916, 209.376, 47.9677, 0.33 ) }
    dend_18 { pt3dadd( 142.543, 212.759, 49.4625, 0.66 ) }
    dend_18 { pt3dadd( 147.045, 219.153, 52.957, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 148.363, 221.046, 54.1897, 0.33 ) }
    dend_18 { pt3dadd( 149.144, 222.229, 55.0272, 0.33 ) }
    dend_18 { pt3dadd( 149.608, 223.038, 55.7074, 0.66 ) }
    dend_18 { pt3dadd( 150.82, 225.457, 57.7685, 0.33 ) }
    dend_18 { pt3dadd( 152.168, 228.972, 60.575, 0.33 ) }
    dend_18 { pt3dadd( 152.981, 230.553, 61.2902, 0.66 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 6/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 83.0368, 141.657, -7.55757, 0.66 ) }
    dend_15 { pt3dadd( 85.6046, 146.353, -7.93681, 0.66 ) }
    dend_15 { pt3dadd( 87.89, 151.082, -8.60577, 0.66 ) }
    dend_15 { pt3dadd( 89.845, 155.308, -9.25863, 0.66 ) }
    dend_15 { pt3dadd( 92.3295, 160.644, -10.3395, 0.66 ) }
    dend_15 { pt3dadd( 94.4724, 165.434, -11.4104, 0.66 ) }
    dend_15 { pt3dadd( 98.1183, 173.698, -13.3122, 0.66 ) }
    dend_15 { pt3dadd( 99.5856, 177.278, -14.2573, 0.66 ) }
    dend_15 { pt3dadd( 100.812, 180.545, -15.0816, 0.66 ) }
    dend_15 { pt3dadd( 102.559, 185.029, -16.424, 0.33 ) }
    dend_15 { pt3dadd( 104.481, 190.077, -18.1361, 0.66 ) }
    dend_15 { pt3dadd( 105.262, 191.934, -18.7547, 0.66 ) }
    dend_15 { pt3dadd( 106.007, 193.64, -19.3069, 0.66 ) }
    dend_15 { pt3dadd( 107.672, 197.329, -20.4267, 0.66 ) }
    dend_15 { pt3dadd( 109.649, 201.83, -21.7981, 0.66 ) }
    dend_15 { pt3dadd( 110.94, 204.795, -22.5521, 0.66 ) }
    dend_15 { pt3dadd( 112.983, 208.935, -23.8664, 0.66 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 23/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( -90.5828, -581.803, -154.119, 0.66 ) }
    apic_21 { pt3dadd( -91.4256, -585.358, -156.233, 0.66 ) }
    apic_21 { pt3dadd( -91.5059, -587.821, -157.04, 0.33 ) }
    apic_21 { pt3dadd( -91.4864, -588.446, -157.193, 0.66 ) }
    apic_21 { pt3dadd( -91.3821, -591.813, -158.016, 0.33 ) }
    apic_21 { pt3dadd( -91.2594, -595.775, -158.985, 0.33 ) }
    apic_21 { pt3dadd( -91.1673, -598.745, -159.711, 1.99 ) }
    apic_21 { pt3dadd( -91.0892, -606.879, -160.857, 0.33 ) }
    apic_21 { pt3dadd( -91.0466, -607.445, -160.903, 0.66 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 32/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -90.5828, -581.803, -154.119, 0.33 ) }
    apic_20 { pt3dadd( -90.6492, -579.801, -155.099, 0.33 ) }
    apic_20 { pt3dadd( -90.6643, -579.348, -155.321, 0.66 ) }
    // Section: apic_13, id: apic_13, parent: apic_9 (entry count 35/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -10.0613, -25.929, -18.2555, 0.66 ) }
    apic_13 { pt3dadd( -15.2768, -26.0939, -20.7816, 0.66 ) }
    apic_13 { pt3dadd( -16.884, -26.0646, -21.584, 0.66 ) }
    apic_13 { pt3dadd( -21.696, -26.0278, -24.0394, 0.66 ) }
    apic_13 { pt3dadd( -25.249, -26.1246, -25.9232, 0.66 ) }
    apic_13 { pt3dadd( -28.8161, -26.2614, -27.8887, 0.66 ) }
    apic_13 { pt3dadd( -32.3027, -26.4585, -29.8584, 0.66 ) }
    apic_13 { pt3dadd( -34.8563, -26.7884, -31.201, 0.66 ) }
    apic_13 { pt3dadd( -36.8172, -27.1723, -32.0766, 0.66 ) }
    apic_13 { pt3dadd( -40.9622, -28.3531, -33.7161, 0.66 ) }
    apic_13 { pt3dadd( -44.3047, -29.5777, -34.958, 0.66 ) }
    apic_13 { pt3dadd( -45.7104, -30.2249, -35.4269, 0.66 ) }
    apic_13 { pt3dadd( -51.3865, -33.1518, -37.1821, 0.66 ) }
    apic_13 { pt3dadd( -56.5694, -36.2745, -38.9953, 0.66 ) }
    apic_13 { pt3dadd( -60.5827, -38.9445, -40.6319, 0.66 ) }
    apic_13 { pt3dadd( -62.2179, -40.2163, -41.4635, 0.66 ) }
    apic_13 { pt3dadd( -64.2725, -42.0006, -42.7685, 0.66 ) }
    apic_13 { pt3dadd( -66.2628, -43.8734, -44.3471, 0.66 ) }
    apic_13 { pt3dadd( -70.2325, -47.8487, -48.161, 0.66 ) }
    apic_13 { pt3dadd( -73.66, -51.4087, -51.767, 0.66 ) }
    apic_13 { pt3dadd( -76.0054, -53.6572, -53.9556, 0.66 ) }
    apic_13 { pt3dadd( -78.4242, -55.9766, -55.9606, 0.33 ) }
    apic_13 { pt3dadd( -79.2317, -56.6999, -56.5466, 0.66 ) }
    apic_13 { pt3dadd( -83.1118, -60.1038, -58.8894, 0.66 ) }
    apic_13 { pt3dadd( -84.9103, -61.4301, -59.6172, 0.66 ) }
    apic_13 { pt3dadd( -88.7935, -63.902, -60.7106, 0.66 ) }
    apic_13 { pt3dadd( -91.5526, -65.5547, -61.2716, 0.66 ) }
    apic_13 { pt3dadd( -93.1119, -66.4842, -61.5211, 0.66 ) }
    apic_13 { pt3dadd( -95.9273, -68.084, -61.9202, 0.66 ) }
    apic_13 { pt3dadd( -99.4853, -70.0527, -62.3981, 0.66 ) }
    apic_13 { pt3dadd( -104.24, -72.4003, -63.0537, 0.66 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 66/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -10.0613, -25.929, -18.2555, 0.33 ) }
    apic_10 { pt3dadd( -12.693, -24.8219, -18.2194, 0.33 ) }
    apic_10 { pt3dadd( -16.8297, -22.871, -18.2768, 0.66 ) }
    apic_10 { pt3dadd( -18.6845, -21.9964, -18.3025, 0.66 ) }
    apic_10 { pt3dadd( -23.6241, -19.6669, -18.371, 0.66 ) }
    apic_10 { pt3dadd( -28.2645, -17.4785, -18.4354, 0.66 ) }
    apic_10 { pt3dadd( -32.6786, -15.3969, -18.4966, 0.66 ) }
    apic_10 { pt3dadd( -35.4464, -14.2246, -18.4998, 0.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 74/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 112.983, 208.935, -23.8664, 0.33 ) }
    dend_17 { pt3dadd( 116.151, 212.42, -22.2772, 0.33 ) }
    dend_17 { pt3dadd( 117.378, 213.809, -21.6462, 0.33 ) }
    dend_17 { pt3dadd( 118.621, 215.341, -20.8422, 0.66 ) }
    dend_17 { pt3dadd( 120.53, 218.087, -19.4497, 0.33 ) }
    dend_17 { pt3dadd( 122.21, 220.732, -18.0634, 0.33 ) }
    dend_17 { pt3dadd( 122.995, 222.243, -17.189, 0.33 ) }
    dend_17 { pt3dadd( 123.568, 223.959, -16.0569, 0.66 ) }
    dend_17 { pt3dadd( 124.148, 226.247, -14.4198, 0.66 ) }
    dend_17 { pt3dadd( 124.671, 228.91, -12.4471, 0.33 ) }
    dend_17 { pt3dadd( 124.805, 230.064, -11.5822, 0.66 ) }
    dend_17 { pt3dadd( 125.394, 234.7, -8.20359, 0.33 ) }
    dend_17 { pt3dadd( 125.788, 236.717, -6.73471, 0.66 ) }
    dend_17 { pt3dadd( 126.461, 239.039, -4.93791, 0.33 ) }
    dend_17 { pt3dadd( 126.681, 239.635, -4.46878, 0.66 ) }
    dend_17 { pt3dadd( 128.347, 243.392, -1.28616, 0.33 ) }
    dend_17 { pt3dadd( 129.84, 246.572, 1.45118, 0.33 ) }
    dend_17 { pt3dadd( 130.594, 247.742, 2.45766, 0.66 ) }
    dend_17 { pt3dadd( 133.111, 251.49, 5.87537, 0.33 ) }
    dend_17 { pt3dadd( 134.126, 253.089, 7.36043, 0.66 ) }
    dend_17 { pt3dadd( 138.475, 259.922, 13.7657, 0.66 ) }
    dend_17 { pt3dadd( 140.797, 263.517, 17.1555, 0.66 ) }
    dend_17 { pt3dadd( 145.334, 270.731, 24.0882, 0.66 ) }
    dend_17 { pt3dadd( 148.761, 276.24, 29.2605, 0.66 ) }
    dend_17 { pt3dadd( 151.288, 280.183, 32.8852, 1.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 99/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 112.983, 208.935, -23.8664, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_16 { pt3dadd( 114.692, 209.795, -24.9313, 0.33 ) }
    dend_16 { pt3dadd( 115.252, 210.236, -25.319, 0.66 ) }
    dend_16 { pt3dadd( 116.213, 211.161, -26.0018, 0.33 ) }
    dend_16 { pt3dadd( 116.824, 211.861, -26.4559, 0.66 ) }
    dend_16 { pt3dadd( 120.414, 216.398, -29.0621, 0.33 ) }
    dend_16 { pt3dadd( 121.593, 218.058, -29.96, 0.33 ) }
    dend_16 { pt3dadd( 124.067, 221.726, -31.7559, 0.66 ) }
    dend_16 { pt3dadd( 124.983, 223.32, -32.4484, 0.33 ) }
    dend_16 { pt3dadd( 125.889, 225.227, -33.2347, 0.66 ) }
    dend_16 { pt3dadd( 126.47, 226.701, -33.7174, 0.33 ) }
    dend_16 { pt3dadd( 127.115, 228.371, -34.2034, 0.66 ) }
    dend_16 { pt3dadd( 127.828, 229.986, -34.756, 0.33 ) }
    dend_16 { pt3dadd( 129.171, 232.562, -35.6271, 0.66 ) }
    dend_16 { pt3dadd( 129.979, 234.024, -36.103, 0.33 ) }
    dend_16 { pt3dadd( 132.075, 237.594, -37.2228, 0.66 ) }
    dend_16 { pt3dadd( 134.499, 241.595, -38.3449, 0.33 ) }
    dend_16 { pt3dadd( 135.139, 242.536, -38.5377, 0.33 ) }
    dend_16 { pt3dadd( 136.233, 243.82, -38.8415, 0.66 ) }
    dend_16 { pt3dadd( 137.526, 245.066, -39.133, 0.33 ) }
    dend_16 { pt3dadd( 138.372, 245.724, -39.3221, 0.66 ) }
    dend_16 { pt3dadd( 139.979, 247.058, -39.7473, 0.33 ) }
    dend_16 { pt3dadd( 141.83, 248.793, -40.1031, 0.33 ) }
    dend_16 { pt3dadd( 146.126, 253.222, -41.0426, 0.33 ) }
    dend_16 { pt3dadd( 146.605, 253.763, -41.1667, 0.66 ) }
    dend_16 { pt3dadd( 149.957, 258.045, -42.1585, 0.33 ) }
    dend_16 { pt3dadd( 152.773, 261.806, -43.2439, 0.66 ) }
    dend_16 { pt3dadd( 154.598, 264.436, -44.0809, 0.33 ) }
    dend_16 { pt3dadd( 156.012, 266.752, -44.8122, 0.33 ) }
    dend_16 { pt3dadd( 157.349, 269.13, -45.391, 0.33 ) }
    dend_16 { pt3dadd( 158.08, 270.372, -45.7049, 0.66 ) }
    dend_16 { pt3dadd( 160.942, 274.947, -46.8149, 0.33 ) }
    dend_16 { pt3dadd( 161.837, 276.283, -47.0459, 0.66 ) }
    dend_16 { pt3dadd( 162.726, 277.892, -47.0958, 0.66 ) }
    dend_16 { pt3dadd( 163.986, 280.704, -46.6587, 0.33 ) }
    dend_16 { pt3dadd( 164.147, 281.233, -46.5135, 0.66 ) }
    dend_16 { pt3dadd( 164.715, 283.869, -45.581, 0.66 ) }
    dend_16 { pt3dadd( 165.089, 289.343, -43.1777, 0.66 ) }
    dend_16 { pt3dadd( 165.167, 293.352, -41.4262, 0.33 ) }
    dend_16 { pt3dadd( 165.128, 293.81, -41.2178, 0.66 ) }
    dend_16 { pt3dadd( 164.591, 297.413, -39.5796, 0.33 ) }
    dend_16 { pt3dadd( 164.52, 297.88, -39.3757, 0.66 ) }
    dend_16 { pt3dadd( 163.915, 302.217, -37.5383, 0.33 ) }
    dend_16 { pt3dadd( 163.45, 307.044, -35.6803, 0.66 ) }
    dend_16 { pt3dadd( 163.001, 313.424, -33.3904, 0.33 ) }
    dend_16 { pt3dadd( 162.966, 313.933, -33.2066, 0.66 ) }
    dend_16 { pt3dadd( 162.808, 316.266, -32.3793, 0.33 ) }
    dend_16 { pt3dadd( 162.967, 318.527, -31.9147, 0.33 ) }
    dend_16 { pt3dadd( 163.806, 320.683, -32.1788, 0.33 ) }
    dend_16 { pt3dadd( 164.728, 322.015, -32.8427, 0.66 ) }
    dend_16 { pt3dadd( 166.18, 323.227, -33.9924, 0.33 ) }
    dend_16 { pt3dadd( 167.297, 324.031, -34.8718, 0.66 ) }
    dend_16 { pt3dadd( 172.811, 327.631, -39.3562, 0.33 ) }
    dend_16 { pt3dadd( 173.929, 328.378, -40.1924, 0.66 ) }
    dend_16 { pt3dadd( 175.019, 329.084, -40.9061, 0.66 ) }
    dend_16 { pt3dadd( 181.811, 333.097, -45.2856, 0.33 ) }
    dend_16 { pt3dadd( 183.201, 333.853, -46.1472, 0.33 ) }
    dend_16 { pt3dadd( 183.782, 334.166, -46.4622, 0.66 ) }
    dend_16 { pt3dadd( 190.211, 338.083, -49.0491, 0.33 ) }
    dend_16 { pt3dadd( 190.863, 338.493, -49.2613, 0.66 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 59/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -104.24, -72.4003, -63.0537, 0.66 ) }
    apic_15 { pt3dadd( -108.696, -75.7282, -64.9034, 0.66 ) }
    apic_15 { pt3dadd( -109.949, -76.5778, -65.4428, 0.66 ) }
    apic_15 { pt3dadd( -111.213, -77.3622, -66.0319, 0.66 ) }
    apic_15 { pt3dadd( -112.857, -78.3171, -66.8427, 0.66 ) }
    apic_15 { pt3dadd( -114.291, -79.133, -67.5849, 0.66 ) }
    apic_15 { pt3dadd( -115.393, -79.7696, -68.1731, 0.33 ) }
    apic_15 { pt3dadd( -116.902, -80.5943, -69.1348, 0.66 ) }
    apic_15 { pt3dadd( -118.784, -81.66, -70.3317, 0.66 ) }
    apic_15 { pt3dadd( -119.618, -82.1409, -70.8635, 0.66 ) }
    apic_15 { pt3dadd( -120.954, -82.8939, -71.7282, 0.66 ) }
    apic_15 { pt3dadd( -121.77, -83.3808, -72.3099, 0.33 ) }
    apic_15 { pt3dadd( -122.642, -84.0314, -72.9853, 0.66 ) }
    apic_15 { pt3dadd( -124.192, -85.4953, -74.3203, 0.66 ) }
    apic_15 { pt3dadd( -124.728, -86.0669, -74.7881, 0.66 ) }
    apic_15 { pt3dadd( -125.117, -86.4782, -75.1222, 0.66 ) }
    apic_15 { pt3dadd( -126.495, -87.9293, -76.2846, 0.33 ) }
    apic_15 { pt3dadd( -127.052, -88.534, -76.7391, 0.33 ) }
    apic_15 { pt3dadd( -127.182, -88.6833, -76.844, 0.66 ) }
    apic_15 { pt3dadd( -128.347, -90.0005, -77.7604, 0.33 ) }
    apic_15 { pt3dadd( -129.187, -90.9698, -78.368, 0.66 ) }
    apic_15 { pt3dadd( -129.646, -91.4188, -78.6495, 0.33 ) }
    apic_15 { pt3dadd( -130.348, -91.9267, -78.9287, 0.66 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 82/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -104.24, -72.4003, -63.0537, 0.33 ) }
    apic_14 { pt3dadd( -105.113, -72.0979, -62.4738, 0.33 ) }
    apic_14 { pt3dadd( -107.43, -71.2943, -60.9333, 0.66 ) }
    // Section: apic_12, id: apic_12, parent: apic_10 (entry count 85/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -35.4464, -14.2246, -18.4998, 0.66 ) }
    apic_12 { pt3dadd( -33.8143, -12.7009, -18.5833, 0.66 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 87/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -35.4464, -14.2246, -18.4998, 0.66 ) }
    apic_11 { pt3dadd( -40.0205, -12.8763, -18.0779, 0.66 ) }
    apic_11 { pt3dadd( -42.2845, -12.1724, -18.0468, 0.66 ) }
    apic_11 { pt3dadd( -44.9108, -11.3999, -18.1904, 0.66 ) }
    apic_11 { pt3dadd( -50.1654, -10.0191, -18.9154, 0.66 ) }
    apic_11 { pt3dadd( -54.2879, -9.0047, -19.8886, 0.66 ) }
    apic_11 { pt3dadd( -57.1547, -8.29918, -20.5653, 0.33 ) }
    apic_11 { pt3dadd( -59.8101, -7.65309, -21.4741, 0.66 ) }
    apic_11 { pt3dadd( -62.2246, -7.08104, -22.4875, 0.33 ) }
    apic_11 { pt3dadd( -65.3858, -6.52582, -24.205, 0.66 ) }
    apic_11 { pt3dadd( -68.4831, -6.15498, -27.3517, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_22 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    apic_17 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    apic_19 ModelViewParmSubset_2.append()
    apic_18 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    apic_21 ModelViewParmSubset_2.append()
    apic_20 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_0, apic_4, apic_1, dend_2, dend_1, apic_6, apic_5, apic_3, apic_2, dend_8, dend_3, apic_22, apic_7, dend_12, dend_9, dend_7, dend_4, apic_17, apic_8, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, apic_19, apic_18, apic_16, apic_9, dend_18, dend_15, apic_21, apic_20, apic_13, apic_10, dend_17, dend_16, apic_15, apic_14, apic_12, apic_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_5 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_3 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    apic_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_9 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_4 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_22 = new SectionList()
    apic_17 OneSecGrp_SectionRef_22.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_6 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_5 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_30 = new SectionList()
    apic_19 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_31 = new SectionList()
    apic_18 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    apic_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_18 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_13 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_17 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_5 = new SectionList()
    apic_4 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_17 = new SectionList()
    apic_7 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_1 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_8 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_33 = new SectionList()
    apic_9 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_2 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    apic_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    apic_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_3 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    apic_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_42 = new SectionList()
    apic_15 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_10 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_11 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_20 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_36 = new SectionList()
    apic_21 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, dend_0, axon_0, axon_0, apic_4, apic_1, apic_1, apic_1, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_3, dend_3, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_7, apic_7, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_8, apic_8, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_9, apic_9, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_12, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_7 all.append()
    apic_7 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 3
    dend_1 nseg = 7
    apic_5 nseg = 3
    apic_3 nseg = 9
    apic_22 nseg = 11
    dend_9 nseg = 13
    dend_7 nseg = 17
    dend_4 nseg = 7
    apic_17 nseg = 9
    dend_14 nseg = 5
    dend_13 nseg = 3
    dend_6 nseg = 11
    dend_5 nseg = 7
    apic_19 nseg = 19
    apic_18 nseg = 3
    apic_16 nseg = 15
    dend_18 nseg = 7
    dend_15 nseg = 3
    apic_13 nseg = 5
    dend_17 nseg = 5
    dend_16 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BTC_e5d9eb2ec3_0_0


