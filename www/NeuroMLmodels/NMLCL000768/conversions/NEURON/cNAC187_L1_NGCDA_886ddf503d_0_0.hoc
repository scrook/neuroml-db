// Cell: cNAC187_L1_NGCDA_886ddf503d_0_0
/*
{
  "id" : "cNAC187_L1_NGCDA_886ddf503d_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.255386, -7.88918, 0.0, 2.59119", "-0.157595, -7.07787, 0.0, 4.40414", "-0.0598045, -6.26655, 0.0, 5.91494", "0.0379862, -5.45524, 0.0, 7.05703", "0.135777, -4.64393, 0.0, 7.74956", "0.233568, -3.83261, 0.0, 8.13512", "0.331359, -3.0213, 0.0, 8.12252", "0.429149, -2.20998, 0.0, 7.8555", "0.52694, -1.39867, 0.0, 7.4762", "0.624731, -0.587356, 0.0, 7.14805", "0.722522, 0.223958, 0.0, 6.69155", "0.820312, 1.03527, 0.0, 6.23443", "0.918103, 1.84659, 0.0, 5.96173", "1.01589, 2.6579, 0.0, 5.76205", "1.11368, 3.46921, 0.0, 5.53948", "1.21148, 4.28053, 0.0, 5.31691", "1.30927, 5.09184, 0.0, 5.07585", "1.40706, 5.90316, 0.0, 4.75493", "1.50485, 6.71447, 0.0, 4.4015", "1.60264, 7.52578, 0.0, 3.45653", "1.70043, 8.3371, 0.0, 2.1089" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.13325, -3.41695, -2.06, 2.72", "-3.9956, -3.31638, -3.29108, 2.72", "-6.50564, -3.02365, -6.87439, 1.47", "-7.66426, -2.88852, -8.52843, 1.47", "-8.68545, -2.76942, -9.98626, 2.06", "-9.08819, -2.72246, -10.5612, 2.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999987850671046
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "4.42675, -2.63995, 0.59, 0.81", "4.80909, -2.95119, 0.448282, 0.81", "5.46917, -3.4697, 0.229241, 0.66", "6.32698, -4.07364, -0.0943078, 0.59", "7.11499, -4.58471, -0.43916, 0.59", "7.56418, -4.86479, -0.672783, 0.59", "7.82815, -5.02273, -0.822621, 0.81", "8.3617, -5.31778, -1.1387, 0.81", "9.37957, -5.83874, -1.77002, 0.44", "10.0221, -6.15016, -2.19783, 0.44", "11.0448, -6.64138, -2.89083, 0.44", "11.5454, -6.87732, -3.25685, 0.44", "12.3472, -7.25165, -3.87623, 0.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999987850671046
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.873249, 7.44005, 2.29, 0.59", "-1.15324, 7.78036, 2.59029, 0.59", "-1.67762, 8.46147, 3.12394, 0.59", "-2.06549, 9.08649, 3.48632, 0.59", "-2.34443, 9.71737, 3.72657, 0.59", "-2.71938, 10.705, 4.06358, 0.59", "-2.99479, 11.4305, 4.3022, 0.59", "-3.23974, 12.0675, 4.49275, 0.59", "-3.85431, 13.5833, 4.90079, 0.88", "-4.68107, 15.5333, 5.38326, 0.44", "-5.11313, 16.5353, 5.62625, 0.44", "-5.6263, 17.7118, 5.9007, 0.29", "-6.37791, 19.3834, 6.32658, 0.51", "-6.67941, 20.0282, 6.5104, 0.51", "-6.93362, 20.4888, 6.64552, 0.51", "-7.15587, 20.8157, 6.72737, 0.51", "-7.60291, 21.4165, 6.78662, 0.51", "-7.94501, 21.8372, 6.74277, 0.51", "-8.588, 22.5378, 6.57572, 0.51", "-9.568, 23.5201, 6.33578, 0.51", "-10.1875, 24.1215, 6.19939, 0.51", "-10.7803, 24.6494, 6.0688, 0.29", "-11.9847, 25.6715, 5.89717, 0.29", "-13.014, 26.5403, 5.81976, 0.29", "-13.7223, 27.1731, 5.83631, 0.29", "-14.3025, 27.7661, 5.91961, 0.29", "-14.9765, 28.501, 6.0642, 0.29", "-15.9436, 29.5241, 6.28521, 0.29", "-16.2281, 29.8019, 6.34741, 0.29", "-16.912, 30.4407, 6.46273, 0.29", "-17.4987, 30.976, 6.53538, 0.29", "-18.2836, 31.6445, 6.60842, 0.15", "-19.1193, 32.3305, 6.71699, 0.15", "-19.8055, 32.8686, 6.81083, 0.15", "-20.2889, 33.2433, 6.89101, 0.15", "-20.9484, 33.753, 7.01807, 0.37", "-21.7042, 34.3696, 7.18299, 0.22", "-22.7988, 35.3286, 7.44907, 0.22", "-23.414, 35.8816, 7.61445, 0.22", "-24.7465, 37.0895, 7.97732, 0.22", "-25.2805, 37.5834, 8.09824, 0.22", "-26.2792, 38.5205, 8.29908, 0.22", "-27.3532, 39.564, 8.46516, 0.22", "-27.9465, 40.1413, 8.50812, 0.22", "-28.2808, 40.4556, 8.52621, 0.22", "-28.9002, 41.0281, 8.59721, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999987850671046,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-0.0332489, 8.98355, -0.48, 1.1", "-0.40446, 9.58856, -0.852618, 1.1", "-0.984547, 10.534, -1.4349, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999987850671046
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.70675, 9.03605, 1.49, 1.25", "1.60363, 9.62233, 1.69015, 1.25", "1.54585, 9.91821, 1.78922, 1.25", "1.43904, 10.7823, 2.04392, 1.03", "1.40933, 11.5139, 2.26559, 1.03", "1.4269, 12.0713, 2.42705, 0.95", "1.51968, 13.118, 2.69758, 0.95", "1.56689, 13.602, 2.82494, 1.1", "1.71452, 14.6807, 3.10321, 0.66", "1.91351, 15.638, 3.3305, 0.66", "2.16044, 16.4783, 3.49161, 1.54", "2.38267, 17.0366, 3.5922, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999987850671046
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.223248, -7.11295, -0.41, 3.53", "-0.277705, -7.3948, -0.520453, 3.53", "-0.40637, -8.06072, -0.78142, 3.16", "-0.590911, -9.01584, -1.15572, 2.2", "-0.848681, -10.3499, -1.67855, 1.32", "-1.02215, -11.2477, -2.03039, 1.32", "-1.23972, -12.3738, -2.47167, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999987850671046
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.70043, 8.3371, 0.0, 0.613039", "3.49545, 23.2293, 0.0, 0.613039", "5.29046, 38.1215, 0.0, 0.613039" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-9.08819, -2.72246, -10.5612, 0.73", "-8.61726, -1.33251, -11.0105, 0.73", "-8.14735, -0.183572, -11.2042, 0.73", "-7.97576, 0.227937, -11.2436, 0.73", "-7.70691, 0.954225, -11.2849, 0.73", "-7.31137, 2.2996, -11.3321, 0.81", "-7.01027, 3.32374, -11.3681, 0.37", "-6.66399, 4.22176, -11.3248, 0.66", "-6.45353, 4.74402, -11.2585, 0.66", "-6.15091, 5.62882, -11.1324, 0.44", "-5.9458, 6.55042, -10.9801, 0.81" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.08819, -2.72246, -10.5612, 1.18", "-9.60016, -3.50786, -11.6248, 1.18", "-10.082, -4.47215, -12.6506, 1.18", "-10.5135, -5.46055, -13.5134, 1.18", "-10.8064, -6.13171, -14.0094, 1.32", "-11.0545, -6.64507, -14.353, 1.25", "-11.3543, -7.26557, -14.7683, 1.1", "-11.5768, -7.88394, -15.0874, 1.1", "-11.7462, -8.38685, -15.2562, 1.1", "-12.0703, -9.22775, -15.4313, 1.1", "-12.7281, -10.5534, -15.6809, 1.84" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.3472, -7.25165, -3.87623, 0.29", "13.575, -7.44534, -3.56311, 0.29", "14.7846, -7.85521, -3.57762, 0.29", "15.2399, -8.07465, -3.66436, 0.29", "16.0031, -8.54112, -3.97221, 0.29", "17.0144, -9.15694, -4.44175, 0.29", "17.8229, -9.61791, -4.88348, 0.29", "18.4472, -9.94924, -5.32749, 0.29", "19.0062, -10.1939, -5.72504, 0.29", "20.0252, -10.5632, -6.34553, 0.29", "20.7729, -10.8019, -6.71321, 0.29", "21.7194, -11.0474, -6.99211, 0.29", "22.8814, -11.2891, -7.18674, 0.73", "24.0491, -11.4885, -7.27802, 0.37", "25.2387, -11.6668, -7.25887, 0.37", "26.146, -11.7801, -7.1318, 0.15", "26.9219, -11.8626, -7.01422, 0.15", "27.4162, -11.8921, -6.97363, 0.15", "27.8076, -11.9157, -6.95804, 0.15", "28.3395, -11.8723, -7.02341, 0.15", "29.0367, -11.6283, -7.24771, 0.15", "30.3662, -10.889, -8.00458, 0.15", "31.4731, -10.1514, -8.89769, 0.15" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.3472, -7.25165, -3.87623, 0.44", "12.5712, -8.24447, -4.73563, 0.44", "12.7, -8.84811, -5.28638, 0.29", "12.8073, -9.18014, -5.63331, 0.22", "12.9058, -9.36299, -5.87393, 0.22", "13.293, -9.82394, -6.59907, 0.22", "13.6481, -10.1063, -7.11895, 0.59", "14.3449, -10.356, -7.81756, 0.59", "15.1979, -10.5339, -8.53452, 0.44", "16.1772, -10.6531, -9.27481, 0.44", "16.9612, -10.6879, -9.77933, 0.29", "17.6789, -10.6798, -10.1973, 0.15", "18.8498, -10.6495, -10.8735, 0.15", "19.8604, -10.6814, -11.4759, 0.15", "20.5688, -10.7872, -11.9289, 0.15", "21.2905, -11.0117, -12.4619, 0.37", "22.1601, -11.3768, -13.2124, 0.37", "22.9591, -11.7516, -13.968, 0.22", "23.7947, -12.1376, -14.753, 0.22", "24.3446, -12.3513, -15.2506, 0.22", "25.1292, -12.6303, -15.9308, 0.22", "25.7104, -12.8015, -16.4274, 0.22", "26.1163, -12.8987, -16.766, 0.22", "26.8063, -13.018, -17.3633, 0.22", "27.6489, -13.1382, -18.1321, 0.22", "28.0601, -13.1802, -18.5397, 0.44", "29.397, -13.3367, -19.8983, 0.44", "30.7011, -13.5336, -21.2273, 0.44", "32.0063, -13.7645, -22.5557, 0.44", "33.1189, -13.991, -23.761, 0.44", "34.5134, -14.3215, -25.2646, 0.44", "35.6988, -14.6044, -26.5136, 0.22", "36.1961, -14.7321, -27.0148, 0.22", "37.3176, -15.0589, -28.0712, 0.22", "39.4668, -15.8507, -29.9672, 0.44", "40.2627, -16.2348, -30.6379, 0.07", "40.8126, -16.5685, -31.0667, 0.29", "41.9455, -17.3994, -31.9295, 0.29", "42.5647, -17.9304, -32.3802, 0.07", "43.0407, -18.4039, -32.6792, 0.37", "44.2645, -19.771, -33.4869, 0.07", "44.9289, -20.571, -34.0268, 0.07", "45.6105, -21.4382, -34.6413, 0.29", "45.8554, -21.7625, -34.8749, 0.88", "46.109, -22.1089, -35.1492, 0.88", "47.5416, -24.0797, -36.8797, 0.07", "47.8513, -24.5032, -37.3076, 0.15", "48.1719, -24.9305, -37.8651, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.984547, 10.534, -1.4349, 0.59", "-0.75947, 11.4681, -2.32099, 0.59", "-0.546686, 12.3738, -3.02849, 0.59", "-0.371018, 13.2194, -3.51753, 0.59", "-0.189369, 14.2559, -3.9725, 0.59", "-0.067302, 14.8577, -4.15014, 0.44", "0.0969288, 15.5489, -4.29964, 0.44", "0.35939, 16.3857, -4.38176, 0.44", "0.86404, 17.7627, -4.40702, 0.44", "1.29256, 18.8088, -4.37111, 0.81", "2.05142, 20.347, -4.27849, 0.44", "2.55865, 21.138, -4.25447, 0.37", "3.08777, 21.8151, -4.2984, 0.66", "3.53843, 22.3052, -4.3768, 0.95", "4.30825, 23.0839, -4.65723, 0.51", "5.02026, 23.8577, -5.13815, 0.73", "5.80113, 24.9007, -6.12812, 0.29", "6.38128, 25.8403, -7.13452, 0.66", "6.45535, 25.9831, -7.29216, 0.66", "7.09077, 27.3702, -8.67861, 0.51", "7.45053, 28.3056, -9.45627, 0.51", "7.82519, 29.3999, -10.1631, 0.51", "8.20098, 30.5419, -10.6139, 0.44", "8.59359, 31.6908, -10.7581, 0.44", "9.17293, 33.3719, -10.6034, 0.59", "9.69697, 34.8409, -10.1862, 0.37", "10.0246, 35.7703, -9.79725, 0.37", "10.4018, 36.8177, -9.25602, 0.37", "10.7421, 37.7048, -8.78362, 0.22", "11.1796, 38.739, -8.23539, 0.22", "11.5116, 39.4363, -7.92443, 0.22", "11.9436, 40.2235, -7.61504, 0.22", "12.721, 41.5798, -7.11381, 0.44", "13.3475, 42.7243, -6.79181, 0.22", "13.7646, 43.4611, -6.60324, 0.22", "14.3518, 44.5548, -6.37163, 0.22", "14.7709, 45.4174, -6.2043, 0.22", "15.2027, 46.4676, -6.05021, 0.22", "15.7553, 48.2292, -5.86076, 0.22" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.984547, 10.534, -1.4349, 0.51", "-1.83297, 11.6341, -1.47457, 0.51", "-2.16876, 12.1282, -1.44699, 0.66", "-2.50092, 12.6242, -1.40167, 0.66", "-2.92552, 13.281, -1.33189, 0.66", "-3.31459, 13.912, -1.26186, 0.66", "-4.12863, 15.3509, -1.10492, 0.51", "-4.38278, 15.9398, -1.02536, 0.51", "-4.53331, 16.366, -0.950266, 0.51", "-4.6839, 16.8515, -0.858364, 0.51", "-4.82914, 17.4052, -0.781663, 0.44", "-4.98858, 18.1127, -0.756121, 0.88", "-5.19383, 19.0699, -0.854115, 0.44", "-5.52636, 20.5254, -1.06489, 0.44", "-5.7066, 21.2551, -1.18355, 0.44", "-5.95989, 22.2097, -1.34947, 0.66", "-6.24535, 23.3065, -1.57632, 0.95", "-6.79715, 25.3195, -2.02859, 0.37", "-7.21795, 26.8175, -2.39773, 0.29", "-7.50751, 27.863, -2.69089, 0.66", "-7.83636, 29.0882, -3.00881, 0.37", "-8.32505, 30.9139, -3.37974, 0.73" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.38267, 17.0366, 3.5922, 0.51", "3.04123, 17.3509, 2.51782, 0.51", "3.95903, 17.8628, 1.28467, 0.51", "5.1106, 18.5596, 0.0307393, 0.51", "5.87295, 19.012, -0.656033, 0.51", "6.46498, 19.3467, -1.1305, 0.51", "7.17475, 19.7456, -1.61793, 0.51", "7.95948, 20.2517, -2.00363, 0.22", "8.68665, 20.8049, -2.21432, 0.51", "9.52877, 21.5852, -2.34974, 0.44", "10.2605, 22.4037, -2.47371, 0.59", "11.1707, 23.5994, -2.67194, 0.29", "11.9427, 24.7929, -2.87123, 0.51", "12.7351, 26.1233, -3.06704, 0.15", "13.2364, 26.9704, -3.15551, 0.37", "14.0731, 28.3324, -3.22028, 0.37", "14.428, 28.8572, -3.21033, 0.37", "14.8425, 29.3781, -3.21263, 0.37", "16.1432, 30.7456, -3.24201, 0.59", "17.0352, 31.6088, -3.31395, 0.59", "18.0882, 32.6853, -3.41283, 0.59", "18.8051, 33.4942, -3.47745, 0.59", "19.9574, 35.0083, -3.62304, 0.59", "20.6448, 36.0844, -3.73871, 0.59", "21.4682, 37.6043, -3.88575, 0.29", "22.6044, 39.9338, -4.09166, 0.29", "23.5206, 41.9556, -4.26761, 0.29", "24.1049, 43.3391, -4.37511, 0.29", "24.5778, 44.5629, -4.40333, 0.51", "25.1347, 46.1037, -4.39854, 0.29", "25.2054, 46.3089, -4.38409, 0.29" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.38267, 17.0366, 3.5922, 0.95", "2.3875, 18.1949, 3.53994, 0.95", "2.55261, 19.7163, 3.67116, 0.59", "2.74825, 20.2964, 3.82577, 0.59", "2.99078, 20.7314, 3.99532, 0.59", "3.3533, 21.2389, 4.21636, 0.59", "3.79214, 21.7755, 4.44726, 0.59", "4.48389, 22.3919, 4.78519, 0.59", "5.42471, 23.1658, 5.17588, 0.66", "5.86144, 23.5652, 5.32064, 0.29", "6.42004, 24.1376, 5.48026, 0.29", "7.06843, 24.8584, 5.64389, 0.66", "7.84931, 25.7831, 5.87646, 0.81", "8.61424, 26.7966, 6.14759, 0.81", "9.26333, 27.8076, 6.46696, 0.37", "9.62788, 28.4586, 6.72731, 0.37", "10.158, 29.633, 7.36713, 0.59", "10.5421, 30.6816, 8.11017, 0.59", "10.677, 31.0088, 8.3863, 0.59", "10.9246, 31.5428, 8.7869, 0.59", "11.141, 31.9878, 8.97041, 0.59", "11.5557, 32.8396, 9.078, 0.59", "11.8658, 33.4599, 9.1207, 0.59", "12.5838, 34.6407, 9.17946, 0.44", "13.5217, 35.9084, 9.25262, 0.44", "14.1111, 36.58, 9.29346, 0.44", "15.0163, 37.4867, 9.34648, 0.44", "15.7597, 38.167, 9.3784, 0.44", "16.9629, 39.2019, 9.45938, 0.29", "17.6815, 39.7295, 9.52798, 0.29", "18.1162, 39.9574, 9.57836, 0.29", "18.4942, 40.0931, 9.60967, 0.29", "19.1071, 40.2016, 9.63001, 0.29", "19.7946, 40.2312, 9.6561, 0.29", "20.4804, 40.1423, 9.65897, 0.29", "21.0908, 39.9931, 9.60547, 0.29", "21.9008, 39.7507, 9.48525, 0.29", "22.8844, 39.4145, 9.30796, 0.15", "23.8689, 39.0337, 9.11381, 0.15", "25.366, 38.4552, 8.80045, 0.15", "26.4416, 38.0976, 8.56412, 0.15", "27.5333, 37.8074, 8.28183, 0.15", "28.6207, 37.6055, 7.9603, 0.15", "29.511, 37.5474, 7.67397, 0.15", "30.076, 37.5532, 7.48475, 0.15", "30.7932, 37.6467, 7.32373, 0.15", "31.5343, 37.8293, 7.18478, 0.15", "32.0352, 38.0632, 7.04496, 0.15", "32.6162, 38.5763, 6.78862, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.23972, -12.3738, -2.47167, 1.32", "-1.38906, -13.6264, -2.24926, 1.32", "-1.5597, -15.0578, -1.99513, 1.32", "-1.8003, -17.076, -1.6368, 1.1", "-1.97822, -18.5684, -1.37182, 1.1", "-2.0662, -19.3064, -1.2408, 1.1", "-2.21057, -20.5173, -1.0258, 1.54" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.23972, -12.3738, -2.47167, 0.73", "-1.60085, -13.9154, -3.08626, 0.73", "-1.86446, -14.8218, -3.44176, 0.81", "-2.22129, -15.7473, -3.8001, 0.66", "-2.60086, -16.5472, -4.10612, 0.44", "-3.1464, -17.5502, -4.49167, 0.88", "-3.28418, -17.7967, -4.5842, 0.88", "-3.73733, -18.584, -4.84453, 0.66", "-4.20626, -19.4075, -5.1039, 0.66", "-4.62298, -20.1948, -5.30809, 0.66", "-4.89908, -20.8132, -5.42784, 0.81", "-5.07258, -21.3234, -5.47725, 0.81", "-5.23089, -21.927, -5.53025, 0.88", "-5.40869, -23.0714, -5.61245, 0.59", "-5.46824, -23.965, -5.65165, 0.81", "-5.47752, -24.9323, -5.66386, 0.59", "-5.46164, -26.2101, -5.64863, 1.4" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.29046, 38.1215, 0.0, 0.55842", "7.08547, 53.0137, 0.0, 0.55842", "8.88049, 67.9059, 0.0, 0.55842" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-5.9458, 6.55042, -10.9801, 0.59", "-7.59539, 7.609, -12.2156, 0.59", "-8.06518, 7.96102, -12.534, 0.59", "-9.47111, 9.1542, -13.4106, 0.37", "-10.6706, 10.2425, -14.0714, 0.37", "-11.1286, 10.6684, -14.293, 0.29", "-11.6482, 11.1735, -14.4899, 0.29", "-12.5795, 12.1228, -14.6252, 0.22", "-12.8504, 12.4311, -14.6435, 0.22", "-13.3561, 13.0563, -14.6332, 0.29", "-13.7265, 13.5051, -14.6034, 0.29", "-15.2537, 15.118, -14.5214, 0.15", "-15.9491, 15.7517, -14.5324, 0.22", "-16.382, 16.0929, -14.5826, 0.22", "-16.8048, 16.392, -14.6608, 0.22", "-17.124, 16.6121, -14.7428, 0.22", "-17.5554, 16.9331, -14.9337, 0.22", "-18.1179, 17.3866, -15.3559, 0.22", "-18.431, 17.6674, -15.6338, 0.22", "-19.1745, 18.3556, -16.3198, 0.22", "-19.6102, 18.7685, -16.7113, 0.22", "-20.6561, 19.7852, -17.6064, 0.22", "-21.3159, 20.4251, -18.1084, 0.59", "-21.7612, 20.8454, -18.3948, 0.59", "-22.6135, 21.6531, -18.8395, 0.22", "-23.1309, 22.146, -19.0439, 0.29", "-23.7994, 22.7902, -19.2323, 0.29", "-25.1047, 24.0928, -19.4429, 0.44", "-25.6421, 24.7001, -19.4941, 0.44", "-26.5265, 25.8241, -19.5556, 0.22", "-27.0617, 26.5637, -19.6069, 0.22", "-27.7959, 27.5936, -19.7057, 0.22", "-28.1729, 28.1417, -19.7582, 0.44", "-29.0691, 29.5476, -19.8849, 0.07", "-29.4205, 30.1145, -19.9563, 0.29", "-30.2089, 31.3158, -20.2039, 0.07", "-30.5799, 31.8283, -20.3388, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-5.9458, 6.55042, -10.9801, 0.07", "-7.63925, 6.78392, -10.7239, 0.07", "-8.63396, 6.69448, -10.6134, 0.15", "-9.7791, 6.33443, -10.5378, 0.51", "-11.2049, 5.88614, -10.4438, 0.37", "-12.1733, 5.58168, -10.3799, 0.07", "-13.2097, 5.25581, -10.3115, 0.07", "-14.2573, 4.60392, -10.1846, 0.07", "-14.9625, 3.93979, -10.1343, 0.66" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-12.7281, -10.5534, -15.6809, 1.84", "-13.35, -11.905, -15.8196, 1.84", "-13.8902, -12.8185, -15.9104, 0.95", "-14.617, -13.8111, -15.9675, 1.03", "-15.2385, -14.464, -15.9933, 0.66", "-15.9178, -14.9528, -16.0149, 0.66", "-16.8643, -15.4341, -15.9978, 0.81", "-17.7551, -15.6089, -15.929, 0.81", "-18.7208, -15.6582, -15.8537, 0.81", "-19.7614, -15.5835, -15.7536, 0.81", "-21.111, -15.3618, -15.6118, 0.44", "-22.0167, -15.1429, -15.4784, 0.44", "-22.6886, -14.9241, -15.3789, 0.95" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-12.7281, -10.5534, -15.6809, 0.59", "-13.4183, -10.1803, -16.3975, 0.59", "-13.9678, -9.80584, -16.8666, 0.59", "-14.6672, -9.23856, -17.4123, 0.51", "-15.1898, -8.74682, -17.7926, 0.37", "-15.5031, -8.43492, -18.0052, 0.37", "-16.0883, -7.86768, -18.3655, 0.29", "-16.6381, -7.29152, -18.654, 0.59", "-16.9675, -6.95683, -18.7945, 0.59", "-17.7116, -6.26795, -19.0457, 0.44", "-18.2987, -5.77734, -19.2298, 0.44", "-19.0238, -5.20285, -19.476, 0.59", "-19.4004, -4.88896, -19.6337, 0.59", "-19.8477, -4.52676, -19.8312, 0.59", "-20.3888, -4.11103, -20.0599, 0.44", "-20.8625, -3.74755, -20.2599, 0.44", "-21.1413, -3.4999, -20.3932, 0.44", "-21.6605, -2.8634, -20.7222, 0.44" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-8.32505, 30.9139, -3.37974, 0.44", "-7.46327, 31.4063, -2.90612, 0.44", "-6.77269, 31.826, -2.52759, 0.29", "-5.82647, 32.4429, -2.03235, 0.29", "-4.83977, 33.1259, -1.55032, 0.29", "-3.82639, 33.8524, -1.03878, 0.29", "-3.62895, 34.0049, -0.940108, 0.29", "-3.38256, 34.2095, -0.816391, 0.29", "-3.0255, 34.5464, -0.659948, 0.29", "-2.30024, 35.328, -0.339459, 0.29", "-1.6871, 36.0552, -0.0262943, 0.29", "-0.84751, 37.1975, 0.541924, 0.22", "-0.375807, 37.9447, 1.02287, 0.22", "0.0271891, 38.7329, 1.63888, 0.73", "0.440009, 39.8528, 2.64287, 0.29", "0.570996, 40.4931, 3.25894, 0.29", "0.647984, 41.3166, 4.06573, 0.29", "0.666498, 42.4288, 5.17937, 0.29", "0.685126, 43.3228, 5.97231, 0.29", "0.678128, 43.7608, 6.3509, 0.29", "0.669743, 44.6434, 7.00551, 0.29", "0.715257, 45.2497, 7.33483, 0.29", "0.898164, 46.1345, 7.59093, 0.22", "1.50092, 47.8067, 7.64956, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.32505, 30.9139, -3.37974, 0.29", "-8.33, 31.7559, -3.39134, 0.29", "-8.36486, 32.3537, -3.43335, 0.29", "-8.43081, 32.976, -3.48657, 0.44", "-8.568, 34.0151, -3.61951, 0.29", "-8.67655, 34.677, -3.74308, 0.29", "-8.78606, 35.3095, -3.86628, 0.59", "-8.98732, 36.4877, -4.13527, 0.37", "-9.12414, 37.3737, -4.30666, 0.29", "-9.25206, 38.4712, -4.40559, 0.29", "-9.31185, 39.4586, -4.3889, 0.29", "-9.28426, 40.3732, -4.27096, 0.29", "-9.16075, 41.2419, -4.04392, 0.44", "-8.88148, 42.3358, -3.6296, 0.37", "-8.33499, 43.9284, -2.90387, 0.22", "-8.10405, 44.4866, -2.62159, 0.22", "-7.79122, 45.1363, -2.28592, 0.22", "-7.3597, 45.9364, -1.90212, 0.22", "-6.94458, 46.6218, -1.60877, 0.22", "-6.6653, 47.0131, -1.47562, 0.22", "-6.17799, 47.6376, -1.3117, 0.22", "-5.91935, 48.0038, -1.21571, 0.22", "-5.78496, 48.2334, -1.13987, 0.22", "-5.56629, 48.6712, -1.00078, 0.73", "-5.03487, 49.9314, -0.474598, 0.37", "-4.79005, 50.7567, -0.0811195, 0.22", "-4.72778, 51.3315, 0.220204, 0.22", "-4.78245, 52.1965, 0.652092, 0.22", "-4.96775, 53.2889, 1.08039, 0.44", "-5.19148, 54.2155, 1.38678, 0.44", "-5.34406, 54.8923, 1.55603, 0.37", "-5.37294, 55.5487, 1.69828, 0.22", "-5.28673, 56.212, 1.80818, 0.22", "-5.00377, 57.1525, 1.92142, 0.22", "-4.468, 58.0914, 2.01052, 0.22", "-3.90933, 58.8993, 2.04066, 0.22", "-2.99897, 59.9461, 2.06773, 0.22", "-2.72901, 60.1953, 2.07199, 0.22", "-2.41809, 60.4212, 2.07473, 0.22", "-1.31779, 61.025, 2.07341, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "25.2054, 46.3089, -4.38409, 0.22", "25.5581, 46.7782, -5.52527, 0.22", "25.8257, 47.3885, -6.73168, 0.22", "25.9247, 47.7128, -7.33501, 0.22", "26.0071, 48.1023, -8.04038, 0.22", "26.0475, 48.3944, -8.57087, 0.51", "26.0485, 48.8543, -9.42189, 0.51", "25.9211, 49.4037, -10.3389, 0.44", "25.6291, 50.0211, -11.3976, 0.44", "25.4092, 50.3435, -12.0561, 0.44", "25.3107, 50.4673, -12.3571, 0.44", "25.0729, 50.7969, -13.3479, 0.22", "25.0251, 50.9043, -13.7166, 0.22", "24.9672, 51.128, -14.604, 0.22", "24.9615, 51.3515, -15.4693, 0.22", "24.9819, 51.6411, -16.505, 0.22", "25.0123, 52.0407, -17.7438, 0.22", "25.0244, 52.4742, -18.8747, 0.22", "24.9958, 52.702, -19.3864, 0.22", "24.8784, 53.1021, -20.1233, 0.22", "24.6515, 53.6425, -20.9095, 0.22", "24.3666, 54.2767, -21.6677, 0.29", "23.9837, 55.1797, -22.5865, 0.29", "23.774, 55.6664, -23.0433, 0.29", "23.4914, 56.4035, -23.6883, 0.44", "23.1242, 57.4704, -24.557, 0.29", "22.9427, 58.1548, -25.062, 0.29", "22.864, 58.5814, -25.3509, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "25.2054, 46.3089, -4.38409, 0.29", "25.8932, 46.2037, -4.40581, 0.29", "26.1907, 46.2009, -4.41903, 0.29", "26.6963, 46.2251, -4.44644, 0.29", "27.4513, 46.264, -4.49286, 0.29", "28.5068, 46.2768, -4.56755, 0.15", "29.3103, 46.2307, -4.59355, 0.15", "30.2559, 46.1038, -4.65014, 0.15", "30.9069, 45.9596, -4.6836, 0.15", "31.3022, 45.8317, -4.70099, 0.15", "32.0901, 45.4357, -4.7337, 0.15", "33.0943, 44.7413, -4.73605, 0.15", "33.6621, 44.2804, -4.69618, 0.15", "34.1798, 43.8133, -4.65291, 0.22", "34.6819, 43.3491, -4.6112, 0.66", "35.2127, 42.8495, -4.58811, 0.66", "35.8436, 42.2769, -4.59517, 0.37", "36.4187, 41.8037, -4.64311, 0.22", "36.9255, 41.3989, -4.67303, 0.22", "37.2632, 41.1353, -4.70697, 0.22", "37.919, 40.6526, -4.69481, 0.22", "38.2645, 40.3889, -4.6605, 0.29", "38.5977, 40.0665, -4.6124, 0.29", "38.8309, 39.7862, -4.55865, 0.29", "39.3251, 39.2042, -4.38248, 0.81", "40.3195, 38.0402, -3.92866, 0.88", "40.7839, 37.4723, -3.65221, 0.37", "41.2801, 36.7193, -3.28013, 0.07", "41.5569, 36.1589, -3.01351, 0.29" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.21057, -20.5173, -1.0258, 0.81", "-1.78982, -21.5918, -0.978882, 0.81", "-1.47558, -22.3621, -0.933563, 0.81", "-1.04048, -23.4053, -0.86869, 0.81", "-0.54252, -24.5991, -0.794446, 0.73", "-0.16255, -25.5101, -0.737793, 0.73", "0.32234, -26.6727, -0.665497, 0.73", "0.683638, -27.4454, -0.607671, 0.88", "1.14627, -28.3972, -0.522734, 0.95" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.21057, -20.5173, -1.0258, 0.44", "-2.09517, -20.8422, 0.067993, 0.44", "-1.76202, -21.3237, 1.41233, 0.22", "-0.924158, -22.0303, 3.31394, 0.22", "-0.764342, -22.146, 3.5851, 0.22", "-0.150441, -22.5785, 4.43043, 0.22", "0.513064, -23.0546, 5.19511, 0.66", "1.16784, -23.5258, 5.68965, 0.07", "1.99892, -24.161, 6.04321, 0.07", "2.46425, -24.4942, 6.13903, 0.37", "2.96134, -24.8315, 6.22866, 0.37", "3.64112, -25.2737, 6.32599, 0.37", "4.32074, -25.7762, 6.38137, 0.07", "4.84024, -26.2756, 6.41011, 0.07", "5.40056, -26.9006, 6.39365, 0.29" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.46164, -26.2101, -5.64863, 0.29", "-5.12025, -27.4421, -6.0866, 0.29", "-4.78997, -28.9562, -6.59137, 0.59", "-4.64699, -29.8009, -6.88587, 0.44", "-4.52669, -30.6696, -7.19616, 0.44", "-4.37844, -31.7878, -7.59551, 0.44", "-4.2455, -32.717, -7.9336, 0.22", "-4.11418, -33.7184, -8.27061, 0.22", "-4.02959, -34.5972, -8.55318, 0.51", "-4.00684, -35.1428, -8.72675, 0.66", "-4.04175, -36.0319, -9.00463, 0.51", "-4.21807, -37.4329, -9.32234, 0.22", "-4.28917, -37.8123, -9.34857, 0.22", "-4.46436, -38.5779, -9.23787, 0.22", "-4.68841, -39.4056, -8.91119, 0.22", "-4.8552, -39.9774, -8.55674, 0.37", "-5.22356, -41.1916, -7.65414, 0.22", "-5.46553, -41.9557, -7.03374, 0.22", "-5.72309, -42.8028, -6.35497, 0.44", "-6.15579, -44.2952, -5.14766, 0.73", "-6.48016, -45.6199, -4.00511, 0.29", "-6.64427, -46.3554, -3.36117, 0.29", "-6.7806, -46.9357, -2.84673, 0.51", "-6.95557, -47.6054, -2.18543, 0.51", "-7.21725, -48.4296, -1.23454, 0.51", "-7.70984, -49.6926, 0.401353, 0.44", "-7.881, -50.0288, 0.863024, 0.44", "-8.0287, -50.2799, 1.21059, 0.44", "-8.35747, -50.8131, 1.85758, 0.44", "-8.84858, -51.5414, 2.49165, 0.44", "-9.29526, -52.2027, 2.78579, 0.59", "-9.98871, -53.21, 3.03854, 0.29", "-10.614, -54.1178, 3.24055, 0.51", "-11.2004, -54.9506, 3.40162, 0.29", "-11.6061, -55.5098, 3.51831, 0.29", "-12.659, -56.8522, 3.87384, 0.37", "-13.1858, -57.3994, 4.1303, 0.51", "-13.7411, -57.8326, 4.49139, 0.51", "-14.5754, -58.3131, 5.16124, 0.29", "-15.1249, -58.6096, 5.70155, 0.29", "-15.554, -58.8485, 6.16354, 0.29", "-16.1784, -59.2416, 6.87206, 0.88", "-16.5093, -59.5719, 7.3279, 0.88", "-16.9385, -60.3776, 8.22278, 0.88", "-17.2161, -61.2579, 9.01663, 0.51", "-17.3647, -62.006, 9.56138, 0.15", "-17.4314, -62.6163, 9.91967, 0.15", "-17.4659, -63.8656, 10.5078, 0.66", "-17.2313, -65.89, 11.4353, 0.29", "-17.0923, -66.8092, 11.8196, 0.29", "-16.9156, -67.6337, 12.1684, 0.29", "-16.6029, -68.624, 12.6017, 0.29", "-16.3277, -69.2576, 12.8768, 0.66", "-14.7065, -71.7815, 13.8249, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.46164, -26.2101, -5.64863, 0.37", "-6.7292, -26.7325, -6.70888, 0.37", "-7.14245, -26.882, -7.01851, 0.37", "-7.39861, -26.9589, -7.18926, 0.66", "-8.13527, -27.1538, -7.63392, 0.44", "-8.77932, -27.2871, -8.0484, 0.44", "-9.18817, -27.3438, -8.32641, 0.44", "-9.56172, -27.3594, -8.53679, 0.44", "-10.1579, -27.312, -8.81872, 0.44", "-10.7614, -27.2096, -9.02311, 0.44", "-11.754, -26.9916, -9.18218, 0.59", "-12.3025, -26.9151, -9.18823, 0.88", "-13.0376, -26.9475, -9.15144, 0.59", "-14.3091, -27.2009, -9.13985, 0.59", "-14.8224, -27.3477, -9.14897, 0.59", "-15.3821, -27.5528, -9.1709, 0.88", "-16.1442, -27.8827, -9.24031, 0.44", "-17.0707, -28.3255, -9.45833, 0.44", "-17.9232, -28.7749, -9.8391, 0.44", "-18.2853, -28.9932, -10.0629, 0.66", "-18.4693, -29.1136, -10.1849, 0.66", "-18.8663, -29.3806, -10.4423, 0.66", "-19.4526, -29.8355, -10.8364, 0.44", "-19.9973, -30.362, -11.2303, 0.44", "-20.4813, -30.9046, -11.57, 0.44", "-20.995, -31.5367, -11.9294, 0.37", "-21.725, -32.4777, -12.4138, 0.37", "-22.3234, -33.2759, -12.7757, 0.22", "-23.0607, -34.3123, -13.1901, 0.29", "-23.6985, -35.261, -13.5204, 0.59", "-23.9753, -35.696, -13.6654, 0.37", "-24.271, -36.214, -13.8206, 0.22", "-24.5031, -36.6636, -13.9303, 0.44", "-24.9884, -37.5585, -14.0952, 0.44", "-25.4185, -38.3902, -14.2274, 0.44", "-25.6653, -38.8832, -14.3251, 0.44", "-25.8988, -39.3461, -14.428, 0.44", "-26.1311, -39.7893, -14.5438, 0.66", "-26.4646, -40.3837, -14.7073, 0.66", "-26.8961, -41.0525, -14.8909, 0.51", "-27.1215, -41.3866, -14.9844, 0.51", "-27.587, -42.1193, -15.1713, 0.51", "-28.0152, -42.8893, -15.3597, 0.37", "-28.3938, -43.6648, -15.5319, 0.81", "-28.6738, -44.2925, -15.651, 0.22", "-28.9754, -45.003, -15.7526, 0.22", "-29.2746, -45.6931, -15.83, 0.22", "-29.6379, -46.436, -15.9032, 0.44", "-29.998, -47.0785, -15.9843, 0.59", "-30.3796, -47.6567, -16.0817, 0.29", "-30.8501, -48.2918, -16.2056, 0.73", "-31.2843, -48.8123, -16.3185, 0.51", "-32.1526, -49.7424, -16.5024, 0.37", "-32.8565, -50.437, -16.6491, 0.51", "-33.6029, -51.1536, -16.8158, 0.15", "-33.8768, -51.4168, -16.881, 0.15", "-34.3956, -51.9299, -17.009, 0.37", "-35.1835, -52.853, -17.1992, 0.37" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-22.6886, -14.9241, -15.3789, 0.59", "-23.3417, -14.6329, -16.4871, 0.59", "-23.8291, -14.37, -17.1509, 0.59", "-24.2841, -14.1212, -17.6573, 0.59", "-24.6174, -13.9634, -17.9979, 0.59", "-25.0899, -13.8004, -18.4937, 0.37", "-25.3687, -13.7379, -18.8074, 0.37", "-25.928, -13.6576, -19.4693, 0.37", "-26.2636, -13.6743, -19.9394, 0.37", "-26.7317, -13.8967, -20.751, 0.37", "-27.1238, -14.265, -21.6562, 0.37", "-27.3357, -14.5485, -22.3105, 0.37", "-27.4655, -14.7553, -22.8593, 0.37", "-27.5518, -14.9089, -23.5104, 0.37", "-27.6137, -14.9154, -24.3001, 0.37", "-27.679, -14.7423, -24.9576, 0.37", "-27.7913, -14.5061, -25.4849, 0.37", "-28.0019, -14.2426, -26.2322, 0.44", "-28.3573, -14.077, -27.3337, 0.29", "-28.563, -14.1991, -27.9757, 0.29", "-28.6853, -14.3613, -28.3274, 0.29", "-29.019, -14.8573, -29.0387, 0.29", "-29.8877, -16.0531, -30.5706, 0.44", "-30.2094, -16.4522, -31.0628, 0.44", "-30.6331, -16.9266, -31.6662, 0.44", "-30.8292, -17.0869, -31.9812, 0.44", "-31.1619, -17.2042, -32.7665, 0.44", "-31.3569, -17.0894, -33.5558, 0.59", "-31.4693, -16.8185, -34.307, 0.59", "-31.4854, -16.5633, -34.9649, 0.44", "-31.3817, -16.1524, -36.2402, 0.66", "-31.289, -16.0514, -37.2153, 0.66", "-31.2361, -16.1698, -37.8621, 0.66", "-31.1979, -16.3471, -38.3016, 0.66", "-31.1665, -16.5174, -38.6211, 0.66", "-31.0807, -17.0107, -39.4607, 0.66", "-30.9297, -17.9459, -41.1174, 0.66", "-30.8001, -18.6785, -42.6396, 0.66", "-30.684, -19.043, -43.6343, 0.66", "-30.5474, -19.2451, -44.3885, 0.66", "-30.3021, -19.4046, -45.2593, 0.66", "-29.8902, -19.4698, -46.1799, 0.66", "-29.511, -19.4187, -46.7495, 0.66", "-28.8506, -19.2162, -47.5678, 0.66", "-28.1361, -18.9847, -48.3296, 0.66", "-27.7451, -18.9369, -48.7676, 0.66", "-27.4346, -18.9872, -49.1668, 0.66", "-27.0641, -19.1458, -49.7744, 0.66", "-26.8646, -19.3109, -50.2939, 0.66", "-26.7408, -19.6091, -51.0594, 0.66", "-26.7007, -20.7037, -53.5602, 0.51", "-26.8077, -21.1596, -54.505, 0.51", "-26.9636, -21.5893, -55.279, 0.51", "-27.1985, -22.1432, -56.1463, 0.51", "-27.5008, -22.7616, -57.0258, 0.37", "-27.6157, -22.968, -57.2854, 0.37", "-27.8899, -23.5075, -57.8401, 0.37", "-28.1524, -24.2549, -58.4631, 0.37", "-28.4152, -25.5757, -59.4167, 0.37", "-28.4887, -26.2033, -59.8754, 0.37", "-28.5258, -26.5952, -60.178, 0.37", "-28.5853, -27.282, -60.7154, 0.37", "-28.6136, -27.9647, -61.2286, 0.37", "-28.635, -28.6701, -61.7297, 0.37", "-28.6036, -29.5395, -62.379, 0.37", "-28.5771, -29.9038, -62.6889, 0.37", "-28.5518, -30.4029, -63.1923, 0.37", "-28.5357, -31.3589, -64.2283, 0.37", "-28.5567, -31.6996, -64.6161, 0.37", "-28.664, -32.4749, -65.4219, 0.37", "-28.7186, -32.8989, -65.8256, 0.37", "-28.8052, -33.6317, -66.514, 0.37", "-28.9174, -34.2841, -67.0632, 0.37", "-29.1219, -35.4969, -67.9284, 0.37", "-29.1663, -35.9461, -68.2175, 0.37", "-29.1726, -36.4111, -68.4587, 0.37", "-29.1087, -37.2539, -68.8557, 0.37", "-29.054, -37.8012, -69.0901, 0.37", "-28.9712, -39.0018, -69.6244, 0.37", "-28.9074, -40.0276, -70.1708, 0.37", "-28.8751, -40.6799, -70.6241, 0.29", "-28.8721, -41.2826, -71.1752, 0.29", "-28.8914, -41.7273, -71.7207, 0.29", "-28.9182, -42.2035, -72.4261, 0.29", "-29.0232, -42.9203, -73.8273, 0.29", "-29.1062, -43.2652, -74.7471, 0.29", "-29.1944, -43.5594, -75.854, 0.29", "-29.2289, -43.6765, -76.5186, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-22.6886, -14.9241, -15.3789, 0.81", "-24.1463, -15.8452, -15.1294, 0.81", "-25.4137, -16.5132, -14.8402, 0.51", "-26.1308, -16.7872, -14.6883, 0.51", "-26.6437, -16.9832, -14.5796, 0.51", "-27.7862, -17.4199, -14.3375, 0.51", "-28.8975, -17.8446, -14.1021, 0.37", "-29.9249, -18.101, -13.8458, 0.37", "-31.5891, -18.3177, -13.4513, 1.03" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-21.6605, -2.8634, -20.7222, 0.22", "-22.9123, -0.632679, -20.5026, 0.22", "-23.4946, 0.566221, -20.3793, 0.22", "-23.9389, 1.41776, -20.2723, 0.37", "-24.6274, 2.53639, -20.1091, 0.22", "-25.0255, 3.10531, -20.0213, 0.22", "-25.6934, 3.97536, -19.9177, 0.44", "-26.7787, 5.2651, -19.9056, 0.29", "-27.3634, 5.98291, -19.9349, 0.37", "-28.0387, 6.83319, -20.0069, 0.37", "-29.088, 8.18428, -20.2089, 0.29", "-29.9309, 9.35908, -20.4134, 0.15", "-31.2216, 11.3315, -20.8612, 0.15", "-31.617, 12.0621, -21.0794, 0.15", "-31.8693, 12.6432, -21.2293, 0.15", "-32.1349, 13.3395, -21.3836, 0.15", "-32.4001, 13.9581, -21.4808, 0.15", "-32.6634, 14.423, -21.498, 0.15", "-33.3264, 15.2158, -21.4647, 0.15", "-34.4096, 16.4206, -21.3436, 0.15", "-35.0785, 17.135, -21.2704, 0.15", "-35.9346, 18.1025, -21.1558, 0.15", "-36.3435, 18.6365, -21.0866, 0.37", "-36.9961, 19.5242, -20.9763, 0.15", "-38.0975, 21.1886, -20.8342, 0.15", "-38.3251, 21.5911, -20.8098, 0.15", "-39.1021, 23.2946, -20.6415, 0.59", "-39.7551, 25.1698, -20.4008, 0.22" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-21.6605, -2.8634, -20.7222, 0.37", "-21.3877, -2.29889, -21.4242, 0.37", "-21.0809, -1.69632, -22.2978, 0.29", "-20.9375, -1.42507, -22.6977, 0.29", "-20.6987, -1.02325, -23.3001, 0.29", "-20.461, -0.695265, -23.8246, 0.29", "-20.103, -0.26421, -24.5601, 0.29", "-19.7012, 0.153084, -25.4075, 0.29", "-19.4459, 0.401702, -25.9486, 0.29", "-19.1873, 0.673507, -26.5271, 0.29", "-18.8735, 1.0373, -27.2905, 0.29", "-18.7342, 1.2123, -27.6761, 0.29", "-18.5254, 1.46395, -28.3505, 0.29", "-18.2664, 1.7765, -29.3051, 0.37", "-18.0792, 1.98983, -30.0728, 0.29", "-17.8606, 2.27192, -31.0378, 0.29", "-17.7143, 2.50139, -31.7125, 0.51", "-17.4551, 2.8899, -32.8105, 0.44", "-17.2957, 3.09726, -33.3653, 0.44", "-17.0513, 3.38986, -34.2039, 0.59", "-16.8179, 3.7228, -35.072, 0.59", "-16.5755, 4.24834, -36.2538, 0.15", "-16.4871, 4.60458, -36.9563, 0.29", "-16.469, 4.98531, -37.5937, 0.59", "-16.5834, 6.00839, -39.1717, 0.37", "-16.6872, 6.38668, -39.679, 0.07", "-16.8716, 6.8252, -40.2038, 0.51", "-17.0137, 7.09553, -40.5196, 0.51", "-17.3659, 7.73828, -41.2322, 0.29", "-17.6545, 8.24922, -41.7832, 0.29", "-17.9948, 8.91435, -42.4665, 0.29", "-18.2572, 9.46582, -43.0702, 0.81", "-18.7071, 10.5322, -44.2506, 0.29", "-18.9184, 11.0446, -44.8729, 0.15", "-19.0294, 11.2879, -45.1902, 0.15", "-19.2963, 11.8327, -45.927, 0.37", "-19.5162, 12.2258, -46.459, 0.66", "-19.9357, 12.8707, -47.2978, 0.29", "-20.471, 13.6288, -48.2354, 0.29", "-20.8623, 14.1313, -48.8868, 0.66", "-21.1096, 14.4477, -49.291, 0.66", "-21.4977, 14.9066, -49.8845, 0.29", "-21.6422, 15.0654, -50.0944, 0.51", "-22.4135, 15.8593, -51.124, 0.15", "-22.7289, 16.2508, -51.552, 0.81", "-23.0839, 16.8275, -52.2132, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "1.14627, -28.3972, -0.522734, 0.22", "1.09869, -29.0523, -0.374176, 0.22", "1.13272, -29.4249, -0.304406, 0.22", "1.31183, -30.3129, -0.164014, 0.22", "1.56397, -31.0971, -0.0643849, 0.29", "1.76081, -31.6609, -0.00312948, 0.29", "1.97317, -32.2911, 0.0558125, 0.29", "2.32438, -33.2183, 0.144146, 0.29", "2.51967, -33.7225, 0.188552, 0.29", "2.86446, -34.5396, 0.257126, 0.29", "3.09817, -35.0657, 0.335508, 0.29", "3.43122, -35.774, 0.475618, 0.37", "3.82813, -36.5616, 0.655833, 0.37", "4.04254, -36.9451, 0.759395, 0.51", "4.6413, -37.9178, 1.09984, 0.29", "5.0003, -38.4596, 1.30914, 0.29", "5.42868, -39.0129, 1.53959, 0.66", "5.9861, -39.6311, 1.81682, 0.66", "6.61087, -40.2523, 2.09616, 0.37", "7.3807, -40.9852, 2.45115, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "1.14627, -28.3972, -0.522734, 0.59", "1.85888, -29.0042, -0.571167, 0.59", "2.50483, -29.5544, -0.61507, 0.59", "3.32679, -30.2545, -0.670936, 0.81" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-14.7065, -71.7815, 13.8249, 0.29", "-14.5162, -72.7541, 13.643, 0.29", "-14.4132, -73.5435, 13.4552, 0.29", "-14.2057, -75.2464, 13.0177, 0.07", "-14.1383, -75.921, 12.8445, 0.07", "-14.0407, -77.4182, 12.3832, 0.29", "-13.9696, -78.7258, 11.9065, 0.15", "-13.9756, -79.9242, 11.4084, 0.15", "-14.0027, -80.3412, 11.2243, 0.44", "-14.1216, -81.2859, 10.7828, 0.29", "-14.2975, -82.6741, 10.1279, 0.29", "-14.4164, -83.7164, 9.64517, 0.29", "-14.5121, -84.5509, 9.26596, 0.07", "-14.6366, -85.4099, 8.89576, 0.07", "-14.7732, -86.1061, 8.57575, 0.51", "-15.1392, -87.6551, 7.96576, 0.22", "-15.419, -88.5535, 7.68548, 0.22", "-16.0742, -90.0641, 7.2648, 0.22", "-16.4832, -90.7509, 7.07607, 0.22", "-17.7335, -91.9918, 6.79854, 0.22", "-19.6616, -92.6803, 6.85719, 0.22", "-20.8951, -92.5956, 7.08327, 0.44", "-21.7689, -92.3341, 7.29511, 0.07", "-22.3476, -92.0372, 7.46797, 0.37", "-23.3269, -91.2767, 7.76512, 0.15", "-23.7404, -90.827, 7.88664, 0.37", "-24.3269, -90.0506, 7.88523, 0.07", "-24.6035, -89.6191, 7.84483, 0.07", "-24.9989, -88.8991, 7.73723, 0.37", "-25.6467, -87.511, 7.47585, 0.07", "-26.0887, -86.4839, 7.2488, 0.37", "-27.1013, -84.1122, 6.6521, 0.15", "-27.3981, -83.383, 6.44026, 0.15", "-27.6462, -82.7859, 6.24211, 0.15", "-27.8141, -82.3932, 6.08463, 0.51" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.7065, -71.7815, 13.8249, 0.29", "-14.7272, -71.2045, 14.3416, 0.29", "-14.7478, -70.1974, 15.2521, 0.29", "-14.7555, -69.6933, 15.6845, 0.59", "-14.6993, -68.3925, 16.7295, 0.29", "-14.6514, -67.2826, 17.6212, 0.29", "-14.5978, -66.0403, 18.6193, 0.29", "-14.6051, -65.3977, 19.1696, 0.29", "-14.6227, -64.9131, 19.6107, 0.51", "-14.5917, -64.1828, 20.3236, 0.29" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-35.1835, -52.853, -17.1992, 0.29", "-36.3043, -53.216, -16.9811, 0.29", "-36.9837, -53.5273, -16.8988, 0.29", "-37.5736, -53.8173, -16.8636, 0.29", "-38.081, -54.0942, -16.8212, 0.29", "-38.6471, -54.4482, -16.7674, 0.29", "-39.6593, -55.1303, -16.6655, 0.59", "-40.3236, -55.6123, -16.6688, 0.59", "-41.1858, -56.2225, -16.7773, 0.22", "-41.7729, -56.6578, -16.8649, 0.22", "-42.7168, -57.3564, -17.0294, 0.73", "-43.2645, -57.7229, -17.1413, 0.73", "-44.2485, -58.2768, -17.3926, 0.37", "-45.5853, -58.9306, -17.9463, 0.51" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-35.1835, -52.853, -17.1992, 0.22", "-35.1037, -53.7895, -17.5172, 0.22", "-35.0727, -54.6645, -17.7677, 0.22", "-35.0388, -55.3791, -17.9284, 0.22", "-35.0058, -56.1889, -18.112, 0.22", "-34.9636, -56.9706, -18.2842, 0.22", "-34.9443, -57.3185, -18.3668, 0.73", "-34.9049, -58.0196, -18.5255, 0.73", "-34.751, -59.5385, -18.8766, 0.22", "-34.5986, -60.6837, -19.1391, 0.22", "-34.4301, -61.6375, -19.374, 0.22", "-34.2278, -62.6019, -19.6257, 0.22", "-33.953, -63.9112, -19.9805, 0.44", "-33.7563, -64.7268, -20.2204, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-31.5891, -18.3177, -13.4513, 0.29", "-32.0568, -18.5517, -12.5757, 0.29", "-32.318, -18.7425, -12.0285, 0.15", "-32.4996, -18.9068, -11.6281, 0.51", "-32.7506, -19.1714, -11.0797, 0.51", "-32.929, -19.3506, -10.7247, 0.51", "-33.26, -19.6524, -10.1703, 0.29", "-33.4926, -19.8937, -9.83689, 0.44", "-33.6279, -20.0312, -9.67854, 0.44", "-33.9158, -20.2976, -9.44143, 0.88", "-34.5475, -20.7919, -9.0671, 0.37", "-35.1437, -21.1827, -8.78337, 0.22", "-35.4839, -21.3794, -8.61234, 0.37", "-35.8262, -21.5731, -8.41351, 0.22", "-36.3976, -21.9173, -7.99254, 0.22", "-36.9712, -22.3158, -7.41796, 0.59", "-37.3594, -22.6597, -6.90246, 0.29", "-37.9443, -23.3011, -5.92816, 0.37", "-38.2094, -23.6398, -5.42803, 0.37", "-38.5121, -24.0858, -4.78355, 0.37", "-38.8105, -24.5791, -4.09555, 0.22", "-39.0827, -25.0613, -3.46872, 0.22", "-39.359, -25.5379, -2.88601, 0.37", "-39.6202, -25.9142, -2.47967, 0.37", "-39.8804, -26.2152, -2.16795, 0.51", "-40.1356, -26.4456, -1.91963, 0.22", "-40.5884, -26.7678, -1.51528, 0.22", "-40.7332, -26.8527, -1.3822, 0.37", "-41.2809, -27.1532, -0.855765, 0.81", "-41.5749, -27.3136, -0.564323, 0.29", "-41.9503, -27.5245, -0.205504, 0.29", "-42.3159, -27.741, 0.134272, 0.29", "-42.6352, -27.9401, 0.407089, 0.44", "-42.8813, -28.0866, 0.615887, 0.44", "-43.2112, -28.2685, 0.88485, 0.44", "-43.53, -28.4298, 1.11467, 0.44", "-43.829, -28.5867, 1.28386, 0.44", "-44.3188, -28.8375, 1.50226, 0.73" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-31.5891, -18.3177, -13.4513, 0.66", "-32.522, -18.3438, -13.2698, 0.66", "-33.4117, -18.4293, -13.0412, 0.66", "-34.1375, -18.5186, -12.8473, 0.73", "-34.8719, -18.6403, -12.6465, 0.37", "-36.5576, -18.9862, -12.1803, 0.15", "-37.7219, -19.2533, -11.8705, 0.51", "-38.39, -19.4643, -11.6717, 0.51", "-38.9318, -19.6422, -11.491, 0.51", "-39.6843, -19.8722, -11.2458, 0.37", "-40.2563, -20.0171, -11.0638, 0.51", "-41.1272, -20.2095, -10.8071, 0.51", "-41.9519, -20.3942, -10.556, 0.51", "-43.2464, -20.743, -10.1341, 0.15", "-43.7804, -20.9226, -9.96052, 0.73", "-44.8288, -21.3867, -9.66419, 0.44", "-45.2298, -21.6552, -9.58251, 0.44", "-45.8737, -22.2467, -9.4972, 0.88", "-46.5094, -22.9464, -9.40806, 0.29", "-47.0011, -23.5439, -9.30766, 0.29", "-47.8257, -24.5413, -9.09122, 0.29", "-48.8738, -25.7182, -8.80377, 0.81", "-49.7138, -26.5362, -8.55808, 0.22", "-50.771, -27.3381, -8.23186, 0.22", "-51.8469, -27.954, -7.87385, 0.22", "-52.5807, -28.2492, -7.63725, 0.59", "-53.536, -28.504, -7.34912, 0.66", "-54.0919, -28.6115, -7.20022, 0.66", "-55.6286, -28.929, -6.88681, 0.22", "-56.1859, -29.0748, -6.80344, 0.22", "-57.383, -29.5201, -6.59741, 0.44", "-57.9691, -29.8192, -6.49116, 0.59", "-58.8215, -30.3491, -6.33107, 0.66", "-60.3318, -31.39, -6.00278, 0.15", "-61.2654, -32.0863, -5.78084, 0.81", "-62.9298, -33.3341, -5.36798, 0.22", "-64.2882, -34.3284, -5.03257, 0.29", "-65.2825, -35.0325, -4.79181, 0.66", "-67.1376, -36.2606, -4.37035, 0.29", "-68.4666, -37.0675, -4.09193, 0.15", "-69.4679, -37.6067, -3.90516, 0.15", "-70.5312, -38.1074, -3.7271, 0.22", "-71.1435, -38.3754, -3.62703, 0.66", "-71.9416, -38.7183, -3.54483, 0.37", "-72.8276, -39.0938, -3.52449, 0.07", "-73.3348, -39.316, -3.5252, 0.07", "-73.8775, -39.5833, -3.52511, 0.07", "-75.1885, -40.3003, -3.50179, 0.59", "-76.0873, -40.8108, -3.40264, 0.51", "-76.3443, -40.9657, -3.35405, 0.51", "-76.8415, -41.2721, -3.22907, 0.51", "-77.6933, -41.7873, -2.9771, 0.29", "-78.7697, -42.4211, -2.61881, 0.07", "-80.1945, -43.2472, -2.08238, 0.66", "-80.4865, -43.4167, -1.9731, 0.81", "-81.0133, -43.6995, -1.79386, 0.81", "-82.3584, -44.3379, -1.46166, 0.07", "-82.9951, -44.6133, -1.36829, 0.29", "-83.4899, -44.8284, -1.35086, 0.29", "-83.9269, -45.0235, -1.39222, 0.29", "-84.5199, -45.2894, -1.46252, 0.29", "-85.9043, -45.894, -1.65899, 0.51", "-86.4232, -46.0872, -1.73926, 0.51", "-87.1563, -46.3308, -1.75533, 0.22", "-88.1543, -46.6727, -1.66779, 0.44", "-88.7961, -46.8928, -1.53251, 0.44", "-89.3758, -47.1031, -1.35658, 0.44", "-90.6405, -47.568, -0.844633, 0.51", "-92.2995, -48.0775, -0.0747361, 0.15", "-93.6177, -48.3871, 0.551633, 0.29", "-94.719, -48.5413, 1.09096, 0.66", "-95.4547, -48.591, 1.45201, 0.66", "-96.8924, -48.5754, 2.11822, 0.15", "-98.6365, -48.4033, 2.8573, 0.15", "-99.5903, -48.2374, 3.22025, 0.15", "-101.277, -47.7935, 3.80261, 0.15", "-101.931, -47.5758, 3.98032, 0.51", "-103.137, -47.0614, 4.23435, 0.22", "-103.621, -46.8027, 4.27412, 0.29" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-23.0839, 16.8275, -52.2132, 0.37", "-22.8475, 17.8157, -52.9723, 0.37", "-22.6588, 18.5743, -53.7304, 0.29", "-22.4805, 19.4027, -54.6781, 0.29", "-22.3233, 20.1888, -55.7514, 0.51", "-22.1963, 20.8963, -56.7999, 0.29", "-22.0786, 21.557, -58.0132, 0.29", "-22.0382, 21.9817, -59.0952, 0.29", "-22.0422, 22.1272, -59.5739, 0.44", "-22.0658, 22.3677, -60.6349, 0.29", "-22.1011, 22.496, -61.3921, 0.29", "-22.2937, 22.8713, -63.543, 0.29", "-22.3792, 23.0311, -64.2659, 0.29", "-22.4767, 23.3684, -65.5017, 0.51" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-23.0839, 16.8275, -52.2132, 0.29", "-23.8868, 16.7119, -52.8126, 0.29", "-24.5222, 16.6205, -53.287, 0.73", "-25.3882, 16.4958, -53.9337, 0.51", "-25.7729, 16.4405, -54.2209, 0.22", "-26.018, 16.4052, -54.4039, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "7.3807, -40.9852, 2.45115, 0.73", "8.61327, -40.75, 2.59949, 0.73", "9.26472, -40.6257, 2.67788, 0.29", "9.91973, -40.5008, 2.75671, 0.29", "11.0204, -40.2908, 2.88917, 0.51" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.3807, -40.9852, 2.45115, 0.37", "7.22628, -41.9147, 2.36037, 0.37", "6.83704, -43.2162, 2.09486, 0.37", "6.44206, -44.2932, 1.83346, 0.37", "6.0824, -45.1817, 1.62098, 0.15", "5.80822, -45.8589, 1.45901, 0.15", "5.34814, -46.9954, 1.18721, 0.15", "4.58003, -48.5527, 0.736918, 0.15", "4.36432, -48.8894, 0.620733, 0.29", "3.84784, -49.5963, 0.342713, 0.29" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "3.32679, -30.2545, -0.670936, 0.51", "3.51117, -31.1787, -1.28848, 0.51", "3.75015, -31.6529, -1.68226, 0.44", "4.17328, -32.1409, -2.17235, 0.44", "4.53292, -32.4554, -2.51668, 0.44", "4.86536, -32.7036, -2.81669, 0.44", "5.29272, -33.0247, -3.22989, 0.44", "5.81315, -33.3064, -3.66713, 0.44", "6.19968, -33.4964, -3.98248, 0.59", "6.55631, -33.6845, -4.25724, 0.29", "7.14159, -34.0558, -4.71783, 0.88", "7.75304, -34.525, -5.19985, 0.59", "8.23072, -34.9423, -5.55683, 0.59", "8.62735, -35.3208, -5.82042, 0.59", "9.16312, -35.8715, -6.13632, 0.59", "9.55315, -36.3101, -6.3499, 0.59", "9.78917, -36.6156, -6.48141, 0.88", "10.3269, -37.3685, -6.74238, 0.66", "10.9339, -38.3093, -7.05675, 0.66", "11.5817, -39.354, -7.40775, 0.37", "12.0629, -40.1455, -7.67618, 0.37", "12.6065, -41.0235, -8.0077, 0.37", "13.2209, -41.9908, -8.4385, 0.37", "13.6331, -42.6264, -8.78202, 0.44", "13.8683, -42.9701, -8.99405, 0.44", "14.2583, -43.4461, -9.35878, 0.44", "14.8276, -43.9809, -9.87509, 0.44", "15.3163, -44.3256, -10.333, 0.44", "15.6748, -44.5409, -10.7774, 0.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.32679, -30.2545, -0.670936, 0.29", "4.30178, -30.2153, -0.776937, 0.29", "4.84554, -30.1074, -0.839556, 0.29", "5.93594, -29.7118, -0.950182, 0.29", "6.24855, -29.5698, -0.971452, 0.29", "6.58623, -29.4208, -0.999518, 0.29", "6.95727, -29.2736, -1.05278, 0.29", "7.57709, -29.02, -1.18815, 0.29", "8.00662, -28.8633, -1.29213, 0.29", "8.92703, -28.6163, -1.50994, 0.29", "9.44741, -28.5285, -1.60864, 0.29", "10.2098, -28.5131, -1.74549, 0.51", "11.0524, -28.6031, -1.87322, 0.29", "11.9984, -28.8028, -1.97822, 0.29", "13.0872, -29.1094, -2.08619, 0.29", "13.4078, -29.2054, -2.12297, 0.37", "14.4106, -29.459, -2.26146, 0.22", "15.1122, -29.5925, -2.37679, 0.44", "16.3037, -29.8219, -2.59425, 0.15", "17.1564, -29.9657, -2.8024, 0.59", "18.3295, -30.0741, -3.1678, 0.15", "19.3566, -30.096, -3.50798, 0.15", "20.0454, -30.0332, -3.76513, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-45.5853, -58.9306, -17.9463, 0.22", "-46.6477, -59.2057, -18.2297, 0.22", "-47.2694, -59.3938, -18.4321, 0.22", "-47.7416, -59.5645, -18.598, 0.22", "-48.3979, -59.8321, -18.8269, 0.66", "-48.6198, -59.9226, -18.9043, 0.66", "-49.2075, -60.1622, -19.1093, 0.37", "-49.7933, -60.4369, -19.3087, 0.15", "-50.0495, -60.5556, -19.3789, 0.15", "-50.5823, -60.821, -19.5768, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-45.5853, -58.9306, -17.9463, 0.22", "-45.9839, -58.7674, -18.4327, 0.22", "-46.5594, -58.5361, -19.0497, 0.22", "-46.7748, -58.4591, -19.296, 0.22", "-46.9829, -58.399, -19.5598, 0.73", "-47.5689, -58.3043, -20.3723, 0.51", "-48.141, -58.292, -21.2492, 0.07", "-48.4241, -58.3388, -21.7545, 0.81", "-48.912, -58.5014, -22.9223, 0.44", "-49.1724, -58.6376, -23.8236, 0.07", "-49.3283, -58.7952, -24.6591, 0.81", "-49.4157, -59.0048, -25.4617, 0.15", "-49.4311, -59.1471, -25.9088, 0.15", "-49.3845, -59.4389, -26.8458, 0.37", "-49.2629, -59.6784, -27.6733, 0.15", "-49.1361, -59.8602, -28.3663, 0.15", "-49.0864, -59.9431, -28.6882, 0.15", "-49.039, -60.0401, -29.0198, 0.66", "-48.9064, -60.4035, -29.994, 0.22", "-48.8074, -60.8362, -30.8654, 0.81", "-48.732, -61.1462, -31.4216, 0.07", "-48.6114, -61.5992, -32.1491, 0.66", "-48.5611, -61.8173, -32.4729, 0.22", "-48.5207, -62.043, -32.7758, 0.59", "-48.4315, -62.6856, -33.5145, 0.22", "-48.2743, -63.8183, -34.7425, 0.73", "-48.2044, -64.2498, -35.2153, 0.44", "-48.0665, -65.0519, -36.0976, 0.15", "-48.0054, -65.5057, -36.595, 0.15", "-47.9682, -65.8083, -36.9211, 0.44", "-47.867, -66.3962, -37.4883, 0.81" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-44.3188, -28.8375, 1.50226, 0.51", "-44.8386, -29.2255, 2.0859, 0.51", "-45.3499, -29.8774, 2.84449, 0.29", "-45.5899, -30.2799, 3.25903, 0.22", "-45.7459, -30.5459, 3.51156, 0.22", "-46.0203, -30.9763, 3.9207, 0.37", "-46.4113, -31.5711, 4.46666, 0.37", "-46.768, -32.2109, 4.92751, 0.15", "-46.9516, -32.5642, 5.14238, 0.37", "-47.2697, -33.1281, 5.46715, 0.37", "-47.8069, -33.9857, 5.93146, 0.15", "-48.2166, -34.5718, 6.22629, 0.51", "-48.8182, -35.3861, 6.59923, 0.29", "-49.1726, -35.8807, 6.77476, 0.29", "-49.5408, -36.4278, 6.93603, 0.22", "-49.7924, -36.821, 7.02889, 0.29", "-49.973, -37.0904, 7.088, 0.29", "-50.1281, -37.3005, 7.14612, 0.29", "-50.6939, -38.032, 7.39802, 0.29", "-51.0074, -38.4523, 7.54018, 0.29", "-51.5835, -39.2801, 7.82527, 0.29", "-52.0954, -40.0671, 8.10778, 0.59", "-52.5681, -40.8159, 8.39019, 0.22", "-52.8837, -41.3265, 8.59556, 0.22", "-53.2592, -41.9734, 8.8795, 0.22", "-53.4535, -42.3518, 9.0436, 0.44", "-53.773, -43.0444, 9.37679, 0.66", "-54.0015, -43.5551, 9.65631, 0.37", "-54.2864, -44.1926, 10.0406, 0.15", "-54.5514, -44.7521, 10.3966, 0.15", "-54.8356, -45.2897, 10.7439, 0.44", "-55.4594, -46.3853, 11.4108, 0.22", "-55.9893, -47.2474, 11.9818, 0.37", "-56.2643, -47.6749, 12.3007, 0.37", "-56.671, -48.2976, 12.8006, 0.22", "-57.4842, -49.5066, 13.8128, 0.07", "-57.9124, -50.1368, 14.3422, 0.44", "-58.62, -51.1362, 15.1644, 0.22", "-59.2366, -51.9668, 15.8264, 0.22", "-59.5892, -52.4083, 16.2238, 0.22", "-59.7887, -52.6574, 16.4645, 0.59", "-60.3413, -53.3543, 17.1518, 0.37", "-60.8236, -53.9355, 17.7235, 0.15", "-61.2568, -54.4457, 18.1048, 0.15", "-62.1511, -55.4214, 18.7485, 0.15", "-62.6166, -55.8717, 19.0486, 0.37", "-63.058, -56.2582, 19.3259, 0.37", "-63.9352, -56.9568, 19.857, 0.07", "-64.9926, -57.7062, 20.4319, 0.29", "-65.348, -57.9266, 20.5969, 0.29", "-65.9512, -58.2476, 20.7636, 0.51", "-66.7597, -58.5529, 20.9445, 0.22", "-67.1902, -58.6712, 21.0271, 0.44", "-68.0057, -58.8277, 21.1609, 0.15", "-68.3071, -58.8643, 21.2286, 0.15", "-69.1016, -58.9945, 21.4096, 0.15", "-70.0269, -59.1503, 21.5848, 0.15", "-70.3411, -59.2, 21.6292, 0.15", "-70.7685, -59.27, 21.71, 0.15", "-70.9996, -59.3397, 21.7937, 0.66", "-71.572, -59.618, 22.1092, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-44.3188, -28.8375, 1.50226, 0.44", "-44.73, -29.8791, 1.59292, 0.44", "-44.903, -30.3175, 1.63107, 0.29", "-45.1147, -30.8536, 1.67772, 0.29", "-45.3458, -31.439, 1.72868, 0.29", "-45.5729, -32.0145, 1.77876, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "11.0204, -40.2908, 2.88917, 0.07", "11.5808, -39.9213, 2.77913, 0.07", "12.4238, -39.3281, 2.58049, 0.15", "13.1741, -38.7065, 2.38169, 0.15", "13.7878, -38.1137, 2.24224, 0.15", "14.3391, -37.5332, 2.1637, 0.44", "15.0314, -36.7525, 2.0658, 0.15", "15.6467, -35.9923, 1.94452, 0.15", "16.2816, -35.1311, 1.77372, 0.15", "17.1258, -33.9623, 1.48872, 0.15", "17.8848, -32.9135, 1.18843, 0.15", "18.4721, -32.0709, 0.925447, 0.37", "19.0655, -31.2137, 0.638347, 0.37", "19.6121, -30.4882, 0.341241, 0.22", "20.1039, -29.927, 0.0214721, 0.22", "20.7492, -29.2658, -0.546642, 0.22", "21.1327, -28.9, -0.937941, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "11.0204, -40.2908, 2.88917, 0.37", "11.8122, -41.1722, 3.02064, 0.37", "12.7216, -42.0764, 3.14688, 0.22", "13.365, -42.845, 3.16003, 0.22", "14.0471, -43.8237, 3.04258, 0.22", "14.7465, -45.0806, 2.82235, 0.29", "14.9199, -45.4999, 2.72253, 0.29", "15.0736, -46.0903, 2.56396, 0.29", "15.1202, -47.5268, 2.08847, 0.15", "14.9596, -48.5204, 1.74976, 0.15", "14.7443, -49.3331, 1.49623, 0.15", "14.403, -50.3205, 1.22195, 0.15", "14.1113, -51.0439, 1.01796, 0.15", "13.7708, -51.7427, 0.837607, 0.15", "13.2743, -52.6251, 0.644994, 0.15", "12.9668, -53.1642, 0.544199, 0.29", "12.3678, -54.2078, 0.319739, 0.07", "11.7324, -55.3289, 0.0739627, 0.07", "11.2034, -56.1677, -0.192756, 0.07", "10.8504, -56.6176, -0.396409, 0.07" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "3.84784, -49.5963, 0.342713, 0.22", "3.54997, -50.3244, 0.0224609, 0.22", "3.35576, -50.9037, -0.256922, 0.22", "3.18993, -51.5166, -0.551691, 0.22", "3.07805, -51.9559, -0.754825, 0.29", "2.81621, -52.9687, -1.20744, 0.29", "2.53419, -53.9596, -1.63811, 0.29", "2.3673, -54.444, -1.85968, 0.29", "1.98679, -55.4298, -2.34226, 0.22", "1.77312, -55.9588, -2.59164, 0.22", "1.60954, -56.3367, -2.72906, 0.22", "1.32686, -56.9318, -2.86539, 0.37", "0.918287, -57.8121, -2.96119, 0.22", "0.580886, -58.623, -2.98696, 0.22", "0.44543, -59.1366, -2.94306, 0.22", "0.47263, -60.389, -2.61011, 0.37", "0.631337, -60.9547, -2.38613, 0.29", "0.985565, -61.6784, -2.02087, 0.15", "1.30317, -62.1768, -1.69465, 0.15", "1.70641, -62.7207, -1.23781, 0.22", "2.43208, -63.6069, -0.406851, 0.22", "2.83419, -64.0596, 0.0386545, 0.22", "3.21285, -64.454, 0.496984, 0.22", "3.69588, -64.97, 1.14498, 0.22", "4.30899, -65.6448, 2.06197, 0.44", "4.46062, -65.8088, 2.31541, 0.66", "4.6896, -66.0378, 2.72059, 0.66", "5.12541, -66.4518, 3.5808, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.84784, -49.5963, 0.342713, 0.07", "3.08454, -49.208, 0.0995623, 0.07", "2.44656, -48.8646, -0.176176, 0.15", "1.51604, -48.3166, -0.73425, 0.22", "0.978282, -47.9943, -1.1618, 0.22", "0.587468, -47.7355, -1.51285, 0.22", "-0.464724, -46.9611, -2.52538, 0.22", "-1.21164, -46.3016, -3.39403, 0.22", "-1.80247, -45.7151, -4.20656, 0.22", "-2.44117, -45.0257, -5.2372, 0.22", "-2.7547, -44.6429, -5.87415, 0.22", "-2.9197, -44.4055, -6.28984, 0.22", "-3.07851, -44.1055, -6.85031, 0.22", "-3.25584, -43.8199, -7.32528, 0.37", "-3.50086, -43.4884, -7.81917, 0.37", "-3.93195, -42.9814, -8.68134, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "15.6748, -44.5409, -10.7774, 0.44", "15.8073, -45.8382, -10.8796, 0.44", "15.8842, -46.5913, -10.939, 0.88", "15.9384, -47.1216, -10.9808, 0.51", "16.0537, -48.2509, -11.0698, 0.81" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "15.6748, -44.5409, -10.7774, 0.22", "15.4494, -43.4579, -10.6058, 0.22", "15.3422, -42.5044, -10.5073, 0.29", "15.3955, -41.8387, -10.5095, 0.29", "15.521, -41.4551, -10.5973, 0.29", "15.6399, -41.1823, -10.6876, 0.15", "15.9983, -40.4163, -10.9652, 0.15", "16.1994, -40.0388, -11.1235, 0.15", "16.7267, -39.0641, -11.4942, 0.51", "17.3793, -37.7424, -11.882, 0.29", "17.6524, -37.0752, -12.0153, 0.29", "17.9705, -36.1339, -12.087, 0.44", "18.2734, -34.9506, -11.9904, 0.22", "18.5137, -33.8011, -11.7806, 0.51", "18.7136, -32.6183, -11.4728, 0.22", "18.8868, -31.5155, -11.1176, 0.22", "19.1011, -30.1385, -10.6453, 0.81", "19.3415, -28.5493, -10.0845, 0.15", "19.4182, -28.1017, -9.92545, 0.15", "19.6029, -27.2765, -9.6169, 0.37", "19.8238, -26.4919, -9.31789, 0.07", "19.937, -26.1249, -9.16899, 0.73", "20.1303, -25.5067, -8.92778, 0.37", "20.5216, -24.2977, -8.43941, 0.66", "21.0175, -22.6941, -7.7422, 0.15", "21.1915, -22.1323, -7.47392, 0.15", "21.378, -21.5072, -7.18242, 0.15", "21.5718, -20.7657, -6.88273, 0.15", "21.7943, -19.7553, -6.54859, 0.15", "21.888, -19.1538, -6.40527, 0.44", "22.0048, -17.9061, -6.19956, 0.07", "22.0685, -16.9456, -6.05805, 0.44", "22.1485, -15.3131, -5.81502, 0.15", "22.1601, -14.5766, -5.70374, 0.15", "22.1678, -13.7983, -5.60315, 0.15", "22.1561, -12.758, -5.47228, 0.15", "22.1205, -11.9006, -5.37537, 0.22", "22.0875, -10.8831, -5.22195, 0.22", "22.08, -10.0542, -5.07847, 0.22", "22.1241, -8.84248, -4.83738, 0.15", "22.1829, -7.83959, -4.6325, 0.44", "22.2486, -7.14837, -4.49689, 0.29", "22.3585, -6.21477, -4.3375, 0.29", "22.4428, -5.53745, -4.24654, 0.29", "22.5955, -4.63231, -4.07584, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-50.5823, -60.821, -19.5768, 0.15", "-51.0734, -61.1133, -19.125, 0.15", "-51.831, -61.5977, -18.4537, 0.44", "-51.9659, -61.696, -18.3454, 0.73", "-52.7675, -62.3434, -17.7211, 0.15", "-53.1488, -62.6635, -17.446, 0.15", "-53.7125, -63.1351, -17.0797, 0.15", "-54.0456, -63.446, -16.8844, 0.15", "-54.663, -64.0503, -16.5937, 0.15", "-54.8757, -64.2634, -16.4996, 0.37", "-55.3563, -64.7403, -16.3342, 0.15", "-55.8304, -65.2464, -16.1843, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-50.5823, -60.821, -19.5768, 0.15", "-49.816, -61.2124, -19.7819, 0.15", "-49.4202, -61.4185, -19.8792, 0.15", "-48.8492, -61.7423, -20.0429, 0.15", "-48.02, -62.2395, -20.2944, 0.15", "-47.1483, -62.7949, -20.5636, 0.15", "-46.4569, -63.2354, -20.7771, 0.22", "-46.0662, -63.4586, -20.8974, 0.07", "-45.4579, -63.8013, -21.0645, 0.37", "-45.0208, -64.0639, -21.182, 0.37", "-44.526, -64.4316, -21.347, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-45.5729, -32.0145, 1.77876, 0.22", "-46.1701, -32.3841, 2.39307, 0.22", "-46.5958, -32.6477, 2.83091, 0.51", "-47.0422, -32.924, 3.29007, 0.22", "-47.3241, -33.0985, 3.58009, 0.29", "-47.9483, -33.4849, 4.22209, 0.15", "-48.1849, -33.6314, 4.46552, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-45.5729, -32.0145, 1.77876, 0.29", "-45.5156, -32.6099, 2.16896, 0.29", "-45.5109, -33.0326, 2.43128, 0.29", "-45.4926, -33.3982, 2.66206, 0.29", "-45.461, -33.6856, 2.8477, 0.29", "-45.3251, -34.3011, 3.21374, 0.29", "-45.082, -35.0715, 3.72443, 0.22", "-44.958, -35.3954, 3.95517, 0.22", "-44.6794, -35.9876, 4.4131, 0.29", "-44.5214, -36.2637, 4.6422, 0.29", "-44.0577, -36.9753, 5.23148, 0.15", "-43.5407, -37.7278, 5.80718, 0.15", "-43.1952, -38.2509, 6.18, 0.37", "-42.7187, -39.1255, 6.67278, 0.07", "-42.558, -39.4679, 6.84969, 0.07", "-42.2911, -40.1641, 7.17697, 0.22", "-42.0968, -40.862, 7.45329, 0.22", "-42.0, -41.3287, 7.54394, 0.22", "-41.8627, -42.3549, 7.59416, 0.37" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "16.0537, -48.2509, -11.0698, 0.29", "16.4159, -49.1187, -12.0796, 0.29", "16.6396, -49.7304, -12.8722, 0.29", "16.7676, -50.142, -13.4032, 0.29", "16.8424, -50.4483, -13.789, 0.29", "16.9526, -51.008, -14.4377, 0.81", "17.0792, -51.6925, -15.1786, 0.81", "17.21, -52.3487, -15.9074, 0.59", "17.3123, -52.7984, -16.4048, 0.44", "17.4151, -53.192, -16.8206, 0.44", "17.5412, -53.6971, -17.324, 0.44", "17.6145, -54.01, -17.6147, 0.44", "17.7579, -54.5472, -18.0834, 0.44", "17.9907, -55.2812, -18.7211, 0.88", "18.3487, -56.2931, -19.5829, 0.37", "18.5855, -56.93, -20.1014, 0.37", "18.8454, -57.7289, -20.7398, 0.37", "18.9821, -58.2774, -21.1387, 0.66", "19.1277, -59.1697, -21.7109, 0.66", "19.1896, -59.9657, -22.1639, 0.73", "19.2104, -60.3743, -22.3833, 0.44", "19.266, -61.2525, -22.8817, 0.22", "19.3206, -61.7166, -23.1705, 0.37", "19.4541, -62.7133, -23.8629, 0.88", "19.6156, -63.5133, -24.5532, 0.22", "19.7863, -63.9431, -25.0234, 0.22", "20.0048, -64.2414, -25.4622, 0.22", "20.6511, -64.7145, -26.4218, 0.22", "20.6511, -64.7145, -26.4218, 0.81", "21.5117, -64.9815, -27.4435, 0.44", "21.8302, -65.0881, -27.8245, 0.73", "22.3008, -65.3236, -28.4189, 0.73", "22.6397, -65.5929, -28.9082, 0.73", "22.9094, -65.9107, -29.3389, 0.73", "23.2524, -66.3837, -30.0152, 0.51", "23.5261, -66.8014, -30.649, 0.15", "23.6367, -66.9878, -30.9484, 0.15", "23.7915, -67.2496, -31.3757, 0.15", "23.9296, -67.4615, -31.7528, 0.15", "24.7707, -68.3829, -33.6844, 0.51", "25.1336, -68.6493, -34.3306, 0.37", "25.3177, -68.7549, -34.6065, 0.22", "25.5449, -68.8893, -34.911, 0.22", "25.7555, -69.0163, -35.149, 0.22", "26.2107, -69.2815, -35.5331, 0.29", "26.659, -69.527, -35.7472, 0.51", "27.2426, -69.8268, -35.9579, 0.66", "28.0633, -70.2314, -36.2104, 0.07", "28.7004, -70.561, -36.3801, 0.07", "29.3643, -70.9537, -36.5343, 0.59", "30.2603, -71.5733, -36.7151, 0.29", "30.7872, -71.9809, -36.807, 0.29", "31.1607, -72.3113, -36.8613, 0.29", "31.7083, -72.8816, -36.9273, 0.07", "32.2534, -73.6162, -37.0202, 0.07", "32.7314, -74.459, -37.1414, 0.66", "32.9335, -74.9401, -37.2229, 0.66", "33.1005, -75.4318, -37.3079, 0.29", "33.3129, -76.1702, -37.4236, 0.59", "33.4611, -76.7525, -37.5166, 0.37", "33.6204, -77.4007, -37.6243, 0.07", "33.8656, -78.4317, -37.7955, 0.81", "34.0478, -79.1346, -37.8917, 0.37", "34.2943, -80.0282, -37.9905, 0.37", "34.5098, -80.785, -38.0789, 0.07", "34.7328, -81.5033, -38.1678, 0.07", "34.9556, -82.1905, -38.2615, 0.59", "35.3071, -83.3436, -38.4169, 0.15", "35.5253, -84.1776, -38.5193, 0.37", "35.8057, -85.5555, -38.662, 0.22", "35.8741, -86.3614, -38.7401, 0.22", "35.8502, -86.8299, -38.787, 0.22", "35.6811, -87.6091, -38.8644, 0.37", "35.4783, -88.0743, -38.9073, 0.07", "35.2056, -88.4658, -38.9298, 0.37", "34.2033, -89.4585, -38.9864, 0.07", "33.8549, -89.7553, -39.0065, 0.29", "33.4395, -90.0733, -39.0379, 0.07", "33.0798, -90.3218, -39.0778, 0.37", "32.4204, -90.7387, -39.1671, 0.07", "31.5661, -91.2466, -39.3067, 0.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "16.0537, -48.2509, -11.0698, 0.29", "15.6529, -48.6975, -11.5626, 0.29", "15.166, -49.1335, -12.0592, 0.15", "14.6198, -49.6104, -12.567, 0.15", "14.4068, -49.8113, -12.7696, 0.15", "14.14, -50.0731, -12.9977, 0.15", "13.6666, -50.5179, -13.3149, 0.15", "13.4249, -50.7091, -13.4133, 0.15", "13.1198, -50.9207, -13.5038, 0.22", "12.5621, -51.3348, -13.6684, 0.22", "12.0499, -51.7711, -13.838, 0.66", "11.4204, -52.3506, -14.069, 0.22", "10.9727, -52.7754, -14.2326, 0.73", "10.1768, -53.4696, -14.5483, 0.37", "9.34246, -54.0696, -14.9129, 0.15", "8.67878, -54.4886, -15.2199, 0.15", "8.31036, -54.7099, -15.4139, 0.15", "8.14108, -54.8144, -15.5224, 0.15", "7.60825, -55.1643, -15.9041, 0.29", "6.75591, -55.7134, -16.5282, 0.15", "6.5522, -55.8632, -16.7091, 0.15", "6.35345, -56.1073, -16.9648, 0.44", "6.07033, -57.1462, -17.8093, 0.66", "6.10186, -57.5098, -18.0588, 0.29", "6.21785, -57.8227, -18.2517, 0.29", "6.57457, -58.4509, -18.6206, 0.29", "7.08348, -59.1728, -19.0459, 0.07", "7.64485, -59.8507, -19.4287, 0.07", "8.26722, -60.5138, -19.772, 0.07", "8.75928, -61.0218, -20.0408, 0.37", "8.91225, -61.1676, -20.1208, 0.37", "9.17639, -61.3889, -20.2436, 0.07", "9.5264, -61.628, -20.3937, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_40", "dend_39", "dend_34", "dend_29", "dend_0", "dend_59", "dend_44", "dend_42", "dend_41", "dend_38", "dend_35", "dend_31", "dend_30", "dend_12", "dend_1", "dend_61", "dend_60", "dend_50", "dend_45", "dend_37", "dend_36", "dend_33", "dend_32", "dend_14", "dend_13", "dend_9", "dend_2", "dend_58", "dend_51", "dend_49", "dend_46", "dend_22", "dend_15", "dend_11", "dend_10", "dend_4", "dend_3", "dend_53", "dend_52", "dend_48", "dend_47", "dend_26", "dend_23", "dend_17", "dend_16", "dend_6", "dend_5", "dend_57", "dend_54", "dend_28", "dend_27", "dend_25", "dend_24", "dend_19", "dend_18", "dend_8", "dend_7", "dend_56", "dend_55", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_40", "dend_39", "dend_34", "dend_29", "dend_0", "dend_59", "dend_44", "dend_42", "dend_41", "dend_38", "dend_35", "dend_31", "dend_30", "dend_12", "dend_1", "dend_61", "dend_60", "dend_50", "dend_45", "dend_37", "dend_36", "dend_33", "dend_32", "dend_14", "dend_13", "dend_9", "dend_2", "dend_58", "dend_51", "dend_49", "dend_46", "dend_22", "dend_15", "dend_11", "dend_10", "dend_4", "dend_3", "dend_53", "dend_52", "dend_48", "dend_47", "dend_26", "dend_23", "dend_17", "dend_16", "dend_6", "dend_5", "dend_57", "dend_54", "dend_28", "dend_27", "dend_25", "dend_24", "dend_19", "dend_18", "dend_8", "dend_7", "dend_56", "dend_55", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCDA_886ddf503d_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_43
create dend_59
public dend_59
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_58, id: dend_58, parent: dend_50
create dend_58
public dend_58
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_22, id: dend_22, parent: dend_14
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_39, dend_34, dend_29, dend_0, dend_59, dend_44, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_12, dend_1, dend_61, dend_60, dend_50, dend_45, dend_37, dend_36, dend_33, dend_32, dend_14, dend_13, dend_9, dend_2, dend_58, dend_51, dend_49, dend_46, dend_22, dend_15, dend_11, dend_10, dend_4, dend_3, dend_53, dend_52, dend_48, dend_47, dend_26, dend_23, dend_17, dend_16, dend_6, dend_5, dend_57, dend_54, dend_28, dend_27, dend_25, dend_24, dend_19, dend_18, dend_8, dend_7, dend_56, dend_55, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_40, dend_39, dend_34, dend_29, dend_0, dend_59, dend_44, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_12, dend_1, dend_61, dend_60, dend_50, dend_45, dend_37, dend_36, dend_33, dend_32, dend_14, dend_13, dend_9, dend_2, dend_58, dend_51, dend_49, dend_46, dend_22, dend_15, dend_11, dend_10, dend_4, dend_3, dend_53, dend_52, dend_48, dend_47, dend_26, dend_23, dend_17, dend_16, dend_6, dend_5, dend_57, dend_54, dend_28, dend_27, dend_25, dend_24, dend_19, dend_18, dend_8, dend_7, dend_56, dend_55, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_38
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.49999987850671046)
    connect dend_40(0), soma_0(0.49999987850671046)
    connect dend_39(0), soma_0(0.49999987850671046)
    connect dend_34(0), soma_0(0.49999987850671046)
    connect dend_29(0), soma_0(0.49999987850671046)
    connect dend_0(0), soma_0(0.49999987850671046)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_58(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_22(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.255386, -7.88918, 0.0, 2.59119 ) }
    soma_0 { pt3dadd( -0.157595, -7.07787, 0.0, 4.40414 ) }
    soma_0 { pt3dadd( -0.0598045, -6.26655, 0.0, 5.91494 ) }
    soma_0 { pt3dadd( 0.0379862, -5.45524, 0.0, 7.05703 ) }
    soma_0 { pt3dadd( 0.135777, -4.64393, 0.0, 7.74956 ) }
    soma_0 { pt3dadd( 0.233568, -3.83261, 0.0, 8.13512 ) }
    soma_0 { pt3dadd( 0.331359, -3.0213, 0.0, 8.12252 ) }
    soma_0 { pt3dadd( 0.429149, -2.20998, 0.0, 7.8555 ) }
    soma_0 { pt3dadd( 0.52694, -1.39867, 0.0, 7.4762 ) }
    soma_0 { pt3dadd( 0.624731, -0.587356, 0.0, 7.14805 ) }
    soma_0 { pt3dadd( 0.722522, 0.223958, 0.0, 6.69155 ) }
    soma_0 { pt3dadd( 0.820312, 1.03527, 0.0, 6.23443 ) }
    soma_0 { pt3dadd( 0.918103, 1.84659, 0.0, 5.96173 ) }
    soma_0 { pt3dadd( 1.01589, 2.6579, 0.0, 5.76205 ) }
    soma_0 { pt3dadd( 1.11368, 3.46921, 0.0, 5.53948 ) }
    soma_0 { pt3dadd( 1.21148, 4.28053, 0.0, 5.31691 ) }
    soma_0 { pt3dadd( 1.30927, 5.09184, 0.0, 5.07585 ) }
    soma_0 { pt3dadd( 1.40706, 5.90316, 0.0, 4.75493 ) }
    soma_0 { pt3dadd( 1.50485, 6.71447, 0.0, 4.4015 ) }
    soma_0 { pt3dadd( 1.60264, 7.52578, 0.0, 3.45653 ) }
    soma_0 { pt3dadd( 1.70043, 8.3371, 0.0, 2.1089 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.13325, -3.41695, -2.06, 2.72 ) }
    dend_43 { pt3dadd( -3.9956, -3.31638, -3.29108, 2.72 ) }
    dend_43 { pt3dadd( -6.50564, -3.02365, -6.87439, 1.47 ) }
    dend_43 { pt3dadd( -7.66426, -2.88852, -8.52843, 1.47 ) }
    dend_43 { pt3dadd( -8.68545, -2.76942, -9.98626, 2.06 ) }
    dend_43 { pt3dadd( -9.08819, -2.72246, -10.5612, 2.13 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 27/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 4.42675, -2.63995, 0.59, 0.81 ) }
    dend_40 { pt3dadd( 4.80909, -2.95119, 0.448282, 0.81 ) }
    dend_40 { pt3dadd( 5.46917, -3.4697, 0.229241, 0.66 ) }
    dend_40 { pt3dadd( 6.32698, -4.07364, -0.0943078, 0.59 ) }
    dend_40 { pt3dadd( 7.11499, -4.58471, -0.43916, 0.59 ) }
    dend_40 { pt3dadd( 7.56418, -4.86479, -0.672783, 0.59 ) }
    dend_40 { pt3dadd( 7.82815, -5.02273, -0.822621, 0.81 ) }
    dend_40 { pt3dadd( 8.3617, -5.31778, -1.1387, 0.81 ) }
    dend_40 { pt3dadd( 9.37957, -5.83874, -1.77002, 0.44 ) }
    dend_40 { pt3dadd( 10.0221, -6.15016, -2.19783, 0.44 ) }
    dend_40 { pt3dadd( 11.0448, -6.64138, -2.89083, 0.44 ) }
    dend_40 { pt3dadd( 11.5454, -6.87732, -3.25685, 0.44 ) }
    dend_40 { pt3dadd( 12.3472, -7.25165, -3.87623, 0.95 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.873249, 7.44005, 2.29, 0.59 ) }
    dend_39 { pt3dadd( -1.15324, 7.78036, 2.59029, 0.59 ) }
    dend_39 { pt3dadd( -1.67762, 8.46147, 3.12394, 0.59 ) }
    dend_39 { pt3dadd( -2.06549, 9.08649, 3.48632, 0.59 ) }
    dend_39 { pt3dadd( -2.34443, 9.71737, 3.72657, 0.59 ) }
    dend_39 { pt3dadd( -2.71938, 10.705, 4.06358, 0.59 ) }
    dend_39 { pt3dadd( -2.99479, 11.4305, 4.3022, 0.59 ) }
    dend_39 { pt3dadd( -3.23974, 12.0675, 4.49275, 0.59 ) }
    dend_39 { pt3dadd( -3.85431, 13.5833, 4.90079, 0.88 ) }
    dend_39 { pt3dadd( -4.68107, 15.5333, 5.38326, 0.44 ) }
    dend_39 { pt3dadd( -5.11313, 16.5353, 5.62625, 0.44 ) }
    dend_39 { pt3dadd( -5.6263, 17.7118, 5.9007, 0.29 ) }
    dend_39 { pt3dadd( -6.37791, 19.3834, 6.32658, 0.51 ) }
    dend_39 { pt3dadd( -6.67941, 20.0282, 6.5104, 0.51 ) }
    dend_39 { pt3dadd( -6.93362, 20.4888, 6.64552, 0.51 ) }
    dend_39 { pt3dadd( -7.15587, 20.8157, 6.72737, 0.51 ) }
    dend_39 { pt3dadd( -7.60291, 21.4165, 6.78662, 0.51 ) }
    dend_39 { pt3dadd( -7.94501, 21.8372, 6.74277, 0.51 ) }
    dend_39 { pt3dadd( -8.588, 22.5378, 6.57572, 0.51 ) }
    dend_39 { pt3dadd( -9.568, 23.5201, 6.33578, 0.51 ) }
    dend_39 { pt3dadd( -10.1875, 24.1215, 6.19939, 0.51 ) }
    dend_39 { pt3dadd( -10.7803, 24.6494, 6.0688, 0.29 ) }
    dend_39 { pt3dadd( -11.9847, 25.6715, 5.89717, 0.29 ) }
    dend_39 { pt3dadd( -13.014, 26.5403, 5.81976, 0.29 ) }
    dend_39 { pt3dadd( -13.7223, 27.1731, 5.83631, 0.29 ) }
    dend_39 { pt3dadd( -14.3025, 27.7661, 5.91961, 0.29 ) }
    dend_39 { pt3dadd( -14.9765, 28.501, 6.0642, 0.29 ) }
    dend_39 { pt3dadd( -15.9436, 29.5241, 6.28521, 0.29 ) }
    dend_39 { pt3dadd( -16.2281, 29.8019, 6.34741, 0.29 ) }
    dend_39 { pt3dadd( -16.912, 30.4407, 6.46273, 0.29 ) }
    dend_39 { pt3dadd( -17.4987, 30.976, 6.53538, 0.29 ) }
    dend_39 { pt3dadd( -18.2836, 31.6445, 6.60842, 0.15 ) }
    dend_39 { pt3dadd( -19.1193, 32.3305, 6.71699, 0.15 ) }
    dend_39 { pt3dadd( -19.8055, 32.8686, 6.81083, 0.15 ) }
    dend_39 { pt3dadd( -20.2889, 33.2433, 6.89101, 0.15 ) }
    dend_39 { pt3dadd( -20.9484, 33.753, 7.01807, 0.37 ) }
    dend_39 { pt3dadd( -21.7042, 34.3696, 7.18299, 0.22 ) }
    dend_39 { pt3dadd( -22.7988, 35.3286, 7.44907, 0.22 ) }
    dend_39 { pt3dadd( -23.414, 35.8816, 7.61445, 0.22 ) }
    dend_39 { pt3dadd( -24.7465, 37.0895, 7.97732, 0.22 ) }
    dend_39 { pt3dadd( -25.2805, 37.5834, 8.09824, 0.22 ) }
    dend_39 { pt3dadd( -26.2792, 38.5205, 8.29908, 0.22 ) }
    dend_39 { pt3dadd( -27.3532, 39.564, 8.46516, 0.22 ) }
    dend_39 { pt3dadd( -27.9465, 40.1413, 8.50812, 0.22 ) }
    dend_39 { pt3dadd( -28.2808, 40.4556, 8.52621, 0.22 ) }
    dend_39 { pt3dadd( -28.9002, 41.0281, 8.59721, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 86/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -0.0332489, 8.98355, -0.48, 1.1 ) }
    dend_34 { pt3dadd( -0.40446, 9.58856, -0.852618, 1.1 ) }
    dend_34 { pt3dadd( -0.984547, 10.534, -1.4349, 1.25 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.70675, 9.03605, 1.49, 1.25 ) }
    dend_29 { pt3dadd( 1.60363, 9.62233, 1.69015, 1.25 ) }
    dend_29 { pt3dadd( 1.54585, 9.91821, 1.78922, 1.25 ) }
    dend_29 { pt3dadd( 1.43904, 10.7823, 2.04392, 1.03 ) }
    dend_29 { pt3dadd( 1.40933, 11.5139, 2.26559, 1.03 ) }
    dend_29 { pt3dadd( 1.4269, 12.0713, 2.42705, 0.95 ) }
    dend_29 { pt3dadd( 1.51968, 13.118, 2.69758, 0.95 ) }
    dend_29 { pt3dadd( 1.56689, 13.602, 2.82494, 1.1 ) }
    dend_29 { pt3dadd( 1.71452, 14.6807, 3.10321, 0.66 ) }
    dend_29 { pt3dadd( 1.91351, 15.638, 3.3305, 0.66 ) }
    dend_29 { pt3dadd( 2.16044, 16.4783, 3.49161, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_29 { pt3dadd( 2.38267, 17.0366, 3.5922, 1.54 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 1/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.223248, -7.11295, -0.41, 3.53 ) }
    dend_0 { pt3dadd( -0.277705, -7.3948, -0.520453, 3.53 ) }
    dend_0 { pt3dadd( -0.40637, -8.06072, -0.78142, 3.16 ) }
    dend_0 { pt3dadd( -0.590911, -9.01584, -1.15572, 2.2 ) }
    dend_0 { pt3dadd( -0.848681, -10.3499, -1.67855, 1.32 ) }
    dend_0 { pt3dadd( -1.02215, -11.2477, -2.03039, 1.32 ) }
    dend_0 { pt3dadd( -1.23972, -12.3738, -2.47167, 1.62 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.70043, 8.3371, 0.0, 0.613039 ) }
    axon_0 { pt3dadd( 3.49545, 23.2293, 0.0, 0.613039 ) }
    axon_0 { pt3dadd( 5.29046, 38.1215, 0.0, 0.613039 ) }
    // Section: dend_59, id: dend_59, parent: dend_43 (entry count 11/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -9.08819, -2.72246, -10.5612, 0.73 ) }
    dend_59 { pt3dadd( -8.61726, -1.33251, -11.0105, 0.73 ) }
    dend_59 { pt3dadd( -8.14735, -0.183572, -11.2042, 0.73 ) }
    dend_59 { pt3dadd( -7.97576, 0.227937, -11.2436, 0.73 ) }
    dend_59 { pt3dadd( -7.70691, 0.954225, -11.2849, 0.73 ) }
    dend_59 { pt3dadd( -7.31137, 2.2996, -11.3321, 0.81 ) }
    dend_59 { pt3dadd( -7.01027, 3.32374, -11.3681, 0.37 ) }
    dend_59 { pt3dadd( -6.66399, 4.22176, -11.3248, 0.66 ) }
    dend_59 { pt3dadd( -6.45353, 4.74402, -11.2585, 0.66 ) }
    dend_59 { pt3dadd( -6.15091, 5.62882, -11.1324, 0.44 ) }
    dend_59 { pt3dadd( -5.9458, 6.55042, -10.9801, 0.81 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 22/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.08819, -2.72246, -10.5612, 1.18 ) }
    dend_44 { pt3dadd( -9.60016, -3.50786, -11.6248, 1.18 ) }
    dend_44 { pt3dadd( -10.082, -4.47215, -12.6506, 1.18 ) }
    dend_44 { pt3dadd( -10.5135, -5.46055, -13.5134, 1.18 ) }
    dend_44 { pt3dadd( -10.8064, -6.13171, -14.0094, 1.32 ) }
    dend_44 { pt3dadd( -11.0545, -6.64507, -14.353, 1.25 ) }
    dend_44 { pt3dadd( -11.3543, -7.26557, -14.7683, 1.1 ) }
    dend_44 { pt3dadd( -11.5768, -7.88394, -15.0874, 1.1 ) }
    dend_44 { pt3dadd( -11.7462, -8.38685, -15.2562, 1.1 ) }
    dend_44 { pt3dadd( -12.0703, -9.22775, -15.4313, 1.1 ) }
    dend_44 { pt3dadd( -12.7281, -10.5534, -15.6809, 1.84 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 33/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.3472, -7.25165, -3.87623, 0.29 ) }
    dend_42 { pt3dadd( 13.575, -7.44534, -3.56311, 0.29 ) }
    dend_42 { pt3dadd( 14.7846, -7.85521, -3.57762, 0.29 ) }
    dend_42 { pt3dadd( 15.2399, -8.07465, -3.66436, 0.29 ) }
    dend_42 { pt3dadd( 16.0031, -8.54112, -3.97221, 0.29 ) }
    dend_42 { pt3dadd( 17.0144, -9.15694, -4.44175, 0.29 ) }
    dend_42 { pt3dadd( 17.8229, -9.61791, -4.88348, 0.29 ) }
    dend_42 { pt3dadd( 18.4472, -9.94924, -5.32749, 0.29 ) }
    dend_42 { pt3dadd( 19.0062, -10.1939, -5.72504, 0.29 ) }
    dend_42 { pt3dadd( 20.0252, -10.5632, -6.34553, 0.29 ) }
    dend_42 { pt3dadd( 20.7729, -10.8019, -6.71321, 0.29 ) }
    dend_42 { pt3dadd( 21.7194, -11.0474, -6.99211, 0.29 ) }
    dend_42 { pt3dadd( 22.8814, -11.2891, -7.18674, 0.73 ) }
    dend_42 { pt3dadd( 24.0491, -11.4885, -7.27802, 0.37 ) }
    dend_42 { pt3dadd( 25.2387, -11.6668, -7.25887, 0.37 ) }
    dend_42 { pt3dadd( 26.146, -11.7801, -7.1318, 0.15 ) }
    dend_42 { pt3dadd( 26.9219, -11.8626, -7.01422, 0.15 ) }
    dend_42 { pt3dadd( 27.4162, -11.8921, -6.97363, 0.15 ) }
    dend_42 { pt3dadd( 27.8076, -11.9157, -6.95804, 0.15 ) }
    dend_42 { pt3dadd( 28.3395, -11.8723, -7.02341, 0.15 ) }
    dend_42 { pt3dadd( 29.0367, -11.6283, -7.24771, 0.15 ) }
    dend_42 { pt3dadd( 30.3662, -10.889, -8.00458, 0.15 ) }
    dend_42 { pt3dadd( 31.4731, -10.1514, -8.89769, 0.15 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 56/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.3472, -7.25165, -3.87623, 0.44 ) }
    dend_41 { pt3dadd( 12.5712, -8.24447, -4.73563, 0.44 ) }
    dend_41 { pt3dadd( 12.7, -8.84811, -5.28638, 0.29 ) }
    dend_41 { pt3dadd( 12.8073, -9.18014, -5.63331, 0.22 ) }
    dend_41 { pt3dadd( 12.9058, -9.36299, -5.87393, 0.22 ) }
    dend_41 { pt3dadd( 13.293, -9.82394, -6.59907, 0.22 ) }
    dend_41 { pt3dadd( 13.6481, -10.1063, -7.11895, 0.59 ) }
    dend_41 { pt3dadd( 14.3449, -10.356, -7.81756, 0.59 ) }
    dend_41 { pt3dadd( 15.1979, -10.5339, -8.53452, 0.44 ) }
    dend_41 { pt3dadd( 16.1772, -10.6531, -9.27481, 0.44 ) }
    dend_41 { pt3dadd( 16.9612, -10.6879, -9.77933, 0.29 ) }
    dend_41 { pt3dadd( 17.6789, -10.6798, -10.1973, 0.15 ) }
    dend_41 { pt3dadd( 18.8498, -10.6495, -10.8735, 0.15 ) }
    dend_41 { pt3dadd( 19.8604, -10.6814, -11.4759, 0.15 ) }
    dend_41 { pt3dadd( 20.5688, -10.7872, -11.9289, 0.15 ) }
    dend_41 { pt3dadd( 21.2905, -11.0117, -12.4619, 0.37 ) }
    dend_41 { pt3dadd( 22.1601, -11.3768, -13.2124, 0.37 ) }
    dend_41 { pt3dadd( 22.9591, -11.7516, -13.968, 0.22 ) }
    dend_41 { pt3dadd( 23.7947, -12.1376, -14.753, 0.22 ) }
    dend_41 { pt3dadd( 24.3446, -12.3513, -15.2506, 0.22 ) }
    dend_41 { pt3dadd( 25.1292, -12.6303, -15.9308, 0.22 ) }
    dend_41 { pt3dadd( 25.7104, -12.8015, -16.4274, 0.22 ) }
    dend_41 { pt3dadd( 26.1163, -12.8987, -16.766, 0.22 ) }
    dend_41 { pt3dadd( 26.8063, -13.018, -17.3633, 0.22 ) }
    dend_41 { pt3dadd( 27.6489, -13.1382, -18.1321, 0.22 ) }
    dend_41 { pt3dadd( 28.0601, -13.1802, -18.5397, 0.44 ) }
    dend_41 { pt3dadd( 29.397, -13.3367, -19.8983, 0.44 ) }
    dend_41 { pt3dadd( 30.7011, -13.5336, -21.2273, 0.44 ) }
    dend_41 { pt3dadd( 32.0063, -13.7645, -22.5557, 0.44 ) }
    dend_41 { pt3dadd( 33.1189, -13.991, -23.761, 0.44 ) }
    dend_41 { pt3dadd( 34.5134, -14.3215, -25.2646, 0.44 ) }
    dend_41 { pt3dadd( 35.6988, -14.6044, -26.5136, 0.22 ) }
    dend_41 { pt3dadd( 36.1961, -14.7321, -27.0148, 0.22 ) }
    dend_41 { pt3dadd( 37.3176, -15.0589, -28.0712, 0.22 ) }
    dend_41 { pt3dadd( 39.4668, -15.8507, -29.9672, 0.44 ) }
    dend_41 { pt3dadd( 40.2627, -16.2348, -30.6379, 0.07 ) }
    dend_41 { pt3dadd( 40.8126, -16.5685, -31.0667, 0.29 ) }
    dend_41 { pt3dadd( 41.9455, -17.3994, -31.9295, 0.29 ) }
    dend_41 { pt3dadd( 42.5647, -17.9304, -32.3802, 0.07 ) }
    dend_41 { pt3dadd( 43.0407, -18.4039, -32.6792, 0.37 ) }
    dend_41 { pt3dadd( 44.2645, -19.771, -33.4869, 0.07 ) }
    dend_41 { pt3dadd( 44.9289, -20.571, -34.0268, 0.07 ) }
    dend_41 { pt3dadd( 45.6105, -21.4382, -34.6413, 0.29 ) }
    dend_41 { pt3dadd( 45.8554, -21.7625, -34.8749, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_41 { pt3dadd( 46.109, -22.1089, -35.1492, 0.88 ) }
    dend_41 { pt3dadd( 47.5416, -24.0797, -36.8797, 0.07 ) }
    dend_41 { pt3dadd( 47.8513, -24.5032, -37.3076, 0.15 ) }
    dend_41 { pt3dadd( 48.1719, -24.9305, -37.8651, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 4/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.984547, 10.534, -1.4349, 0.59 ) }
    dend_38 { pt3dadd( -0.75947, 11.4681, -2.32099, 0.59 ) }
    dend_38 { pt3dadd( -0.546686, 12.3738, -3.02849, 0.59 ) }
    dend_38 { pt3dadd( -0.371018, 13.2194, -3.51753, 0.59 ) }
    dend_38 { pt3dadd( -0.189369, 14.2559, -3.9725, 0.59 ) }
    dend_38 { pt3dadd( -0.067302, 14.8577, -4.15014, 0.44 ) }
    dend_38 { pt3dadd( 0.0969288, 15.5489, -4.29964, 0.44 ) }
    dend_38 { pt3dadd( 0.35939, 16.3857, -4.38176, 0.44 ) }
    dend_38 { pt3dadd( 0.86404, 17.7627, -4.40702, 0.44 ) }
    dend_38 { pt3dadd( 1.29256, 18.8088, -4.37111, 0.81 ) }
    dend_38 { pt3dadd( 2.05142, 20.347, -4.27849, 0.44 ) }
    dend_38 { pt3dadd( 2.55865, 21.138, -4.25447, 0.37 ) }
    dend_38 { pt3dadd( 3.08777, 21.8151, -4.2984, 0.66 ) }
    dend_38 { pt3dadd( 3.53843, 22.3052, -4.3768, 0.95 ) }
    dend_38 { pt3dadd( 4.30825, 23.0839, -4.65723, 0.51 ) }
    dend_38 { pt3dadd( 5.02026, 23.8577, -5.13815, 0.73 ) }
    dend_38 { pt3dadd( 5.80113, 24.9007, -6.12812, 0.29 ) }
    dend_38 { pt3dadd( 6.38128, 25.8403, -7.13452, 0.66 ) }
    dend_38 { pt3dadd( 6.45535, 25.9831, -7.29216, 0.66 ) }
    dend_38 { pt3dadd( 7.09077, 27.3702, -8.67861, 0.51 ) }
    dend_38 { pt3dadd( 7.45053, 28.3056, -9.45627, 0.51 ) }
    dend_38 { pt3dadd( 7.82519, 29.3999, -10.1631, 0.51 ) }
    dend_38 { pt3dadd( 8.20098, 30.5419, -10.6139, 0.44 ) }
    dend_38 { pt3dadd( 8.59359, 31.6908, -10.7581, 0.44 ) }
    dend_38 { pt3dadd( 9.17293, 33.3719, -10.6034, 0.59 ) }
    dend_38 { pt3dadd( 9.69697, 34.8409, -10.1862, 0.37 ) }
    dend_38 { pt3dadd( 10.0246, 35.7703, -9.79725, 0.37 ) }
    dend_38 { pt3dadd( 10.4018, 36.8177, -9.25602, 0.37 ) }
    dend_38 { pt3dadd( 10.7421, 37.7048, -8.78362, 0.22 ) }
    dend_38 { pt3dadd( 11.1796, 38.739, -8.23539, 0.22 ) }
    dend_38 { pt3dadd( 11.5116, 39.4363, -7.92443, 0.22 ) }
    dend_38 { pt3dadd( 11.9436, 40.2235, -7.61504, 0.22 ) }
    dend_38 { pt3dadd( 12.721, 41.5798, -7.11381, 0.44 ) }
    dend_38 { pt3dadd( 13.3475, 42.7243, -6.79181, 0.22 ) }
    dend_38 { pt3dadd( 13.7646, 43.4611, -6.60324, 0.22 ) }
    dend_38 { pt3dadd( 14.3518, 44.5548, -6.37163, 0.22 ) }
    dend_38 { pt3dadd( 14.7709, 45.4174, -6.2043, 0.22 ) }
    dend_38 { pt3dadd( 15.2027, 46.4676, -6.05021, 0.22 ) }
    dend_38 { pt3dadd( 15.7553, 48.2292, -5.86076, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 43/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.984547, 10.534, -1.4349, 0.51 ) }
    dend_35 { pt3dadd( -1.83297, 11.6341, -1.47457, 0.51 ) }
    dend_35 { pt3dadd( -2.16876, 12.1282, -1.44699, 0.66 ) }
    dend_35 { pt3dadd( -2.50092, 12.6242, -1.40167, 0.66 ) }
    dend_35 { pt3dadd( -2.92552, 13.281, -1.33189, 0.66 ) }
    dend_35 { pt3dadd( -3.31459, 13.912, -1.26186, 0.66 ) }
    dend_35 { pt3dadd( -4.12863, 15.3509, -1.10492, 0.51 ) }
    dend_35 { pt3dadd( -4.38278, 15.9398, -1.02536, 0.51 ) }
    dend_35 { pt3dadd( -4.53331, 16.366, -0.950266, 0.51 ) }
    dend_35 { pt3dadd( -4.6839, 16.8515, -0.858364, 0.51 ) }
    dend_35 { pt3dadd( -4.82914, 17.4052, -0.781663, 0.44 ) }
    dend_35 { pt3dadd( -4.98858, 18.1127, -0.756121, 0.88 ) }
    dend_35 { pt3dadd( -5.19383, 19.0699, -0.854115, 0.44 ) }
    dend_35 { pt3dadd( -5.52636, 20.5254, -1.06489, 0.44 ) }
    dend_35 { pt3dadd( -5.7066, 21.2551, -1.18355, 0.44 ) }
    dend_35 { pt3dadd( -5.95989, 22.2097, -1.34947, 0.66 ) }
    dend_35 { pt3dadd( -6.24535, 23.3065, -1.57632, 0.95 ) }
    dend_35 { pt3dadd( -6.79715, 25.3195, -2.02859, 0.37 ) }
    dend_35 { pt3dadd( -7.21795, 26.8175, -2.39773, 0.29 ) }
    dend_35 { pt3dadd( -7.50751, 27.863, -2.69089, 0.66 ) }
    dend_35 { pt3dadd( -7.83636, 29.0882, -3.00881, 0.37 ) }
    dend_35 { pt3dadd( -8.32505, 30.9139, -3.37974, 0.73 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 65/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.38267, 17.0366, 3.5922, 0.51 ) }
    dend_31 { pt3dadd( 3.04123, 17.3509, 2.51782, 0.51 ) }
    dend_31 { pt3dadd( 3.95903, 17.8628, 1.28467, 0.51 ) }
    dend_31 { pt3dadd( 5.1106, 18.5596, 0.0307393, 0.51 ) }
    dend_31 { pt3dadd( 5.87295, 19.012, -0.656033, 0.51 ) }
    dend_31 { pt3dadd( 6.46498, 19.3467, -1.1305, 0.51 ) }
    dend_31 { pt3dadd( 7.17475, 19.7456, -1.61793, 0.51 ) }
    dend_31 { pt3dadd( 7.95948, 20.2517, -2.00363, 0.22 ) }
    dend_31 { pt3dadd( 8.68665, 20.8049, -2.21432, 0.51 ) }
    dend_31 { pt3dadd( 9.52877, 21.5852, -2.34974, 0.44 ) }
    dend_31 { pt3dadd( 10.2605, 22.4037, -2.47371, 0.59 ) }
    dend_31 { pt3dadd( 11.1707, 23.5994, -2.67194, 0.29 ) }
    dend_31 { pt3dadd( 11.9427, 24.7929, -2.87123, 0.51 ) }
    dend_31 { pt3dadd( 12.7351, 26.1233, -3.06704, 0.15 ) }
    dend_31 { pt3dadd( 13.2364, 26.9704, -3.15551, 0.37 ) }
    dend_31 { pt3dadd( 14.0731, 28.3324, -3.22028, 0.37 ) }
    dend_31 { pt3dadd( 14.428, 28.8572, -3.21033, 0.37 ) }
    dend_31 { pt3dadd( 14.8425, 29.3781, -3.21263, 0.37 ) }
    dend_31 { pt3dadd( 16.1432, 30.7456, -3.24201, 0.59 ) }
    dend_31 { pt3dadd( 17.0352, 31.6088, -3.31395, 0.59 ) }
    dend_31 { pt3dadd( 18.0882, 32.6853, -3.41283, 0.59 ) }
    dend_31 { pt3dadd( 18.8051, 33.4942, -3.47745, 0.59 ) }
    dend_31 { pt3dadd( 19.9574, 35.0083, -3.62304, 0.59 ) }
    dend_31 { pt3dadd( 20.6448, 36.0844, -3.73871, 0.59 ) }
    dend_31 { pt3dadd( 21.4682, 37.6043, -3.88575, 0.29 ) }
    dend_31 { pt3dadd( 22.6044, 39.9338, -4.09166, 0.29 ) }
    dend_31 { pt3dadd( 23.5206, 41.9556, -4.26761, 0.29 ) }
    dend_31 { pt3dadd( 24.1049, 43.3391, -4.37511, 0.29 ) }
    dend_31 { pt3dadd( 24.5778, 44.5629, -4.40333, 0.51 ) }
    dend_31 { pt3dadd( 25.1347, 46.1037, -4.39854, 0.29 ) }
    dend_31 { pt3dadd( 25.2054, 46.3089, -4.38409, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.38267, 17.0366, 3.5922, 0.95 ) }
    dend_30 { pt3dadd( 2.3875, 18.1949, 3.53994, 0.95 ) }
    dend_30 { pt3dadd( 2.55261, 19.7163, 3.67116, 0.59 ) }
    dend_30 { pt3dadd( 2.74825, 20.2964, 3.82577, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_30 { pt3dadd( 2.99078, 20.7314, 3.99532, 0.59 ) }
    dend_30 { pt3dadd( 3.3533, 21.2389, 4.21636, 0.59 ) }
    dend_30 { pt3dadd( 3.79214, 21.7755, 4.44726, 0.59 ) }
    dend_30 { pt3dadd( 4.48389, 22.3919, 4.78519, 0.59 ) }
    dend_30 { pt3dadd( 5.42471, 23.1658, 5.17588, 0.66 ) }
    dend_30 { pt3dadd( 5.86144, 23.5652, 5.32064, 0.29 ) }
    dend_30 { pt3dadd( 6.42004, 24.1376, 5.48026, 0.29 ) }
    dend_30 { pt3dadd( 7.06843, 24.8584, 5.64389, 0.66 ) }
    dend_30 { pt3dadd( 7.84931, 25.7831, 5.87646, 0.81 ) }
    dend_30 { pt3dadd( 8.61424, 26.7966, 6.14759, 0.81 ) }
    dend_30 { pt3dadd( 9.26333, 27.8076, 6.46696, 0.37 ) }
    dend_30 { pt3dadd( 9.62788, 28.4586, 6.72731, 0.37 ) }
    dend_30 { pt3dadd( 10.158, 29.633, 7.36713, 0.59 ) }
    dend_30 { pt3dadd( 10.5421, 30.6816, 8.11017, 0.59 ) }
    dend_30 { pt3dadd( 10.677, 31.0088, 8.3863, 0.59 ) }
    dend_30 { pt3dadd( 10.9246, 31.5428, 8.7869, 0.59 ) }
    dend_30 { pt3dadd( 11.141, 31.9878, 8.97041, 0.59 ) }
    dend_30 { pt3dadd( 11.5557, 32.8396, 9.078, 0.59 ) }
    dend_30 { pt3dadd( 11.8658, 33.4599, 9.1207, 0.59 ) }
    dend_30 { pt3dadd( 12.5838, 34.6407, 9.17946, 0.44 ) }
    dend_30 { pt3dadd( 13.5217, 35.9084, 9.25262, 0.44 ) }
    dend_30 { pt3dadd( 14.1111, 36.58, 9.29346, 0.44 ) }
    dend_30 { pt3dadd( 15.0163, 37.4867, 9.34648, 0.44 ) }
    dend_30 { pt3dadd( 15.7597, 38.167, 9.3784, 0.44 ) }
    dend_30 { pt3dadd( 16.9629, 39.2019, 9.45938, 0.29 ) }
    dend_30 { pt3dadd( 17.6815, 39.7295, 9.52798, 0.29 ) }
    dend_30 { pt3dadd( 18.1162, 39.9574, 9.57836, 0.29 ) }
    dend_30 { pt3dadd( 18.4942, 40.0931, 9.60967, 0.29 ) }
    dend_30 { pt3dadd( 19.1071, 40.2016, 9.63001, 0.29 ) }
    dend_30 { pt3dadd( 19.7946, 40.2312, 9.6561, 0.29 ) }
    dend_30 { pt3dadd( 20.4804, 40.1423, 9.65897, 0.29 ) }
    dend_30 { pt3dadd( 21.0908, 39.9931, 9.60547, 0.29 ) }
    dend_30 { pt3dadd( 21.9008, 39.7507, 9.48525, 0.29 ) }
    dend_30 { pt3dadd( 22.8844, 39.4145, 9.30796, 0.15 ) }
    dend_30 { pt3dadd( 23.8689, 39.0337, 9.11381, 0.15 ) }
    dend_30 { pt3dadd( 25.366, 38.4552, 8.80045, 0.15 ) }
    dend_30 { pt3dadd( 26.4416, 38.0976, 8.56412, 0.15 ) }
    dend_30 { pt3dadd( 27.5333, 37.8074, 8.28183, 0.15 ) }
    dend_30 { pt3dadd( 28.6207, 37.6055, 7.9603, 0.15 ) }
    dend_30 { pt3dadd( 29.511, 37.5474, 7.67397, 0.15 ) }
    dend_30 { pt3dadd( 30.076, 37.5532, 7.48475, 0.15 ) }
    dend_30 { pt3dadd( 30.7932, 37.6467, 7.32373, 0.15 ) }
    dend_30 { pt3dadd( 31.5343, 37.8293, 7.18478, 0.15 ) }
    dend_30 { pt3dadd( 32.0352, 38.0632, 7.04496, 0.15 ) }
    dend_30 { pt3dadd( 32.6162, 38.5763, 6.78862, 0.37 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 45/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.23972, -12.3738, -2.47167, 1.32 ) }
    dend_12 { pt3dadd( -1.38906, -13.6264, -2.24926, 1.32 ) }
    dend_12 { pt3dadd( -1.5597, -15.0578, -1.99513, 1.32 ) }
    dend_12 { pt3dadd( -1.8003, -17.076, -1.6368, 1.1 ) }
    dend_12 { pt3dadd( -1.97822, -18.5684, -1.37182, 1.1 ) }
    dend_12 { pt3dadd( -2.0662, -19.3064, -1.2408, 1.1 ) }
    dend_12 { pt3dadd( -2.21057, -20.5173, -1.0258, 1.54 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 52/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.23972, -12.3738, -2.47167, 0.73 ) }
    dend_1 { pt3dadd( -1.60085, -13.9154, -3.08626, 0.73 ) }
    dend_1 { pt3dadd( -1.86446, -14.8218, -3.44176, 0.81 ) }
    dend_1 { pt3dadd( -2.22129, -15.7473, -3.8001, 0.66 ) }
    dend_1 { pt3dadd( -2.60086, -16.5472, -4.10612, 0.44 ) }
    dend_1 { pt3dadd( -3.1464, -17.5502, -4.49167, 0.88 ) }
    dend_1 { pt3dadd( -3.28418, -17.7967, -4.5842, 0.88 ) }
    dend_1 { pt3dadd( -3.73733, -18.584, -4.84453, 0.66 ) }
    dend_1 { pt3dadd( -4.20626, -19.4075, -5.1039, 0.66 ) }
    dend_1 { pt3dadd( -4.62298, -20.1948, -5.30809, 0.66 ) }
    dend_1 { pt3dadd( -4.89908, -20.8132, -5.42784, 0.81 ) }
    dend_1 { pt3dadd( -5.07258, -21.3234, -5.47725, 0.81 ) }
    dend_1 { pt3dadd( -5.23089, -21.927, -5.53025, 0.88 ) }
    dend_1 { pt3dadd( -5.40869, -23.0714, -5.61245, 0.59 ) }
    dend_1 { pt3dadd( -5.46824, -23.965, -5.65165, 0.81 ) }
    dend_1 { pt3dadd( -5.47752, -24.9323, -5.66386, 0.59 ) }
    dend_1 { pt3dadd( -5.46164, -26.2101, -5.64863, 1.4 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 69/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.29046, 38.1215, 0.0, 0.55842 ) }
    axon_1 { pt3dadd( 7.08547, 53.0137, 0.0, 0.55842 ) }
    axon_1 { pt3dadd( 8.88049, 67.9059, 0.0, 0.55842 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 72/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -5.9458, 6.55042, -10.9801, 0.59 ) }
    dend_61 { pt3dadd( -7.59539, 7.609, -12.2156, 0.59 ) }
    dend_61 { pt3dadd( -8.06518, 7.96102, -12.534, 0.59 ) }
    dend_61 { pt3dadd( -9.47111, 9.1542, -13.4106, 0.37 ) }
    dend_61 { pt3dadd( -10.6706, 10.2425, -14.0714, 0.37 ) }
    dend_61 { pt3dadd( -11.1286, 10.6684, -14.293, 0.29 ) }
    dend_61 { pt3dadd( -11.6482, 11.1735, -14.4899, 0.29 ) }
    dend_61 { pt3dadd( -12.5795, 12.1228, -14.6252, 0.22 ) }
    dend_61 { pt3dadd( -12.8504, 12.4311, -14.6435, 0.22 ) }
    dend_61 { pt3dadd( -13.3561, 13.0563, -14.6332, 0.29 ) }
    dend_61 { pt3dadd( -13.7265, 13.5051, -14.6034, 0.29 ) }
    dend_61 { pt3dadd( -15.2537, 15.118, -14.5214, 0.15 ) }
    dend_61 { pt3dadd( -15.9491, 15.7517, -14.5324, 0.22 ) }
    dend_61 { pt3dadd( -16.382, 16.0929, -14.5826, 0.22 ) }
    dend_61 { pt3dadd( -16.8048, 16.392, -14.6608, 0.22 ) }
    dend_61 { pt3dadd( -17.124, 16.6121, -14.7428, 0.22 ) }
    dend_61 { pt3dadd( -17.5554, 16.9331, -14.9337, 0.22 ) }
    dend_61 { pt3dadd( -18.1179, 17.3866, -15.3559, 0.22 ) }
    dend_61 { pt3dadd( -18.431, 17.6674, -15.6338, 0.22 ) }
    dend_61 { pt3dadd( -19.1745, 18.3556, -16.3198, 0.22 ) }
    dend_61 { pt3dadd( -19.6102, 18.7685, -16.7113, 0.22 ) }
    dend_61 { pt3dadd( -20.6561, 19.7852, -17.6064, 0.22 ) }
    dend_61 { pt3dadd( -21.3159, 20.4251, -18.1084, 0.59 ) }
    dend_61 { pt3dadd( -21.7612, 20.8454, -18.3948, 0.59 ) }
    dend_61 { pt3dadd( -22.6135, 21.6531, -18.8395, 0.22 ) }
    dend_61 { pt3dadd( -23.1309, 22.146, -19.0439, 0.29 ) }
    dend_61 { pt3dadd( -23.7994, 22.7902, -19.2323, 0.29 ) }
    dend_61 { pt3dadd( -25.1047, 24.0928, -19.4429, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_61 { pt3dadd( -25.6421, 24.7001, -19.4941, 0.44 ) }
    dend_61 { pt3dadd( -26.5265, 25.8241, -19.5556, 0.22 ) }
    dend_61 { pt3dadd( -27.0617, 26.5637, -19.6069, 0.22 ) }
    dend_61 { pt3dadd( -27.7959, 27.5936, -19.7057, 0.22 ) }
    dend_61 { pt3dadd( -28.1729, 28.1417, -19.7582, 0.44 ) }
    dend_61 { pt3dadd( -29.0691, 29.5476, -19.8849, 0.07 ) }
    dend_61 { pt3dadd( -29.4205, 30.1145, -19.9563, 0.29 ) }
    dend_61 { pt3dadd( -30.2089, 31.3158, -20.2039, 0.07 ) }
    dend_61 { pt3dadd( -30.5799, 31.8283, -20.3388, 0.29 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -5.9458, 6.55042, -10.9801, 0.07 ) }
    dend_60 { pt3dadd( -7.63925, 6.78392, -10.7239, 0.07 ) }
    dend_60 { pt3dadd( -8.63396, 6.69448, -10.6134, 0.15 ) }
    dend_60 { pt3dadd( -9.7791, 6.33443, -10.5378, 0.51 ) }
    dend_60 { pt3dadd( -11.2049, 5.88614, -10.4438, 0.37 ) }
    dend_60 { pt3dadd( -12.1733, 5.58168, -10.3799, 0.07 ) }
    dend_60 { pt3dadd( -13.2097, 5.25581, -10.3115, 0.07 ) }
    dend_60 { pt3dadd( -14.2573, 4.60392, -10.1846, 0.07 ) }
    dend_60 { pt3dadd( -14.9625, 3.93979, -10.1343, 0.66 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 18/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -12.7281, -10.5534, -15.6809, 1.84 ) }
    dend_50 { pt3dadd( -13.35, -11.905, -15.8196, 1.84 ) }
    dend_50 { pt3dadd( -13.8902, -12.8185, -15.9104, 0.95 ) }
    dend_50 { pt3dadd( -14.617, -13.8111, -15.9675, 1.03 ) }
    dend_50 { pt3dadd( -15.2385, -14.464, -15.9933, 0.66 ) }
    dend_50 { pt3dadd( -15.9178, -14.9528, -16.0149, 0.66 ) }
    dend_50 { pt3dadd( -16.8643, -15.4341, -15.9978, 0.81 ) }
    dend_50 { pt3dadd( -17.7551, -15.6089, -15.929, 0.81 ) }
    dend_50 { pt3dadd( -18.7208, -15.6582, -15.8537, 0.81 ) }
    dend_50 { pt3dadd( -19.7614, -15.5835, -15.7536, 0.81 ) }
    dend_50 { pt3dadd( -21.111, -15.3618, -15.6118, 0.44 ) }
    dend_50 { pt3dadd( -22.0167, -15.1429, -15.4784, 0.44 ) }
    dend_50 { pt3dadd( -22.6886, -14.9241, -15.3789, 0.95 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 31/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -12.7281, -10.5534, -15.6809, 0.59 ) }
    dend_45 { pt3dadd( -13.4183, -10.1803, -16.3975, 0.59 ) }
    dend_45 { pt3dadd( -13.9678, -9.80584, -16.8666, 0.59 ) }
    dend_45 { pt3dadd( -14.6672, -9.23856, -17.4123, 0.51 ) }
    dend_45 { pt3dadd( -15.1898, -8.74682, -17.7926, 0.37 ) }
    dend_45 { pt3dadd( -15.5031, -8.43492, -18.0052, 0.37 ) }
    dend_45 { pt3dadd( -16.0883, -7.86768, -18.3655, 0.29 ) }
    dend_45 { pt3dadd( -16.6381, -7.29152, -18.654, 0.59 ) }
    dend_45 { pt3dadd( -16.9675, -6.95683, -18.7945, 0.59 ) }
    dend_45 { pt3dadd( -17.7116, -6.26795, -19.0457, 0.44 ) }
    dend_45 { pt3dadd( -18.2987, -5.77734, -19.2298, 0.44 ) }
    dend_45 { pt3dadd( -19.0238, -5.20285, -19.476, 0.59 ) }
    dend_45 { pt3dadd( -19.4004, -4.88896, -19.6337, 0.59 ) }
    dend_45 { pt3dadd( -19.8477, -4.52676, -19.8312, 0.59 ) }
    dend_45 { pt3dadd( -20.3888, -4.11103, -20.0599, 0.44 ) }
    dend_45 { pt3dadd( -20.8625, -3.74755, -20.2599, 0.44 ) }
    dend_45 { pt3dadd( -21.1413, -3.4999, -20.3932, 0.44 ) }
    dend_45 { pt3dadd( -21.6605, -2.8634, -20.7222, 0.44 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 49/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -8.32505, 30.9139, -3.37974, 0.44 ) }
    dend_37 { pt3dadd( -7.46327, 31.4063, -2.90612, 0.44 ) }
    dend_37 { pt3dadd( -6.77269, 31.826, -2.52759, 0.29 ) }
    dend_37 { pt3dadd( -5.82647, 32.4429, -2.03235, 0.29 ) }
    dend_37 { pt3dadd( -4.83977, 33.1259, -1.55032, 0.29 ) }
    dend_37 { pt3dadd( -3.82639, 33.8524, -1.03878, 0.29 ) }
    dend_37 { pt3dadd( -3.62895, 34.0049, -0.940108, 0.29 ) }
    dend_37 { pt3dadd( -3.38256, 34.2095, -0.816391, 0.29 ) }
    dend_37 { pt3dadd( -3.0255, 34.5464, -0.659948, 0.29 ) }
    dend_37 { pt3dadd( -2.30024, 35.328, -0.339459, 0.29 ) }
    dend_37 { pt3dadd( -1.6871, 36.0552, -0.0262943, 0.29 ) }
    dend_37 { pt3dadd( -0.84751, 37.1975, 0.541924, 0.22 ) }
    dend_37 { pt3dadd( -0.375807, 37.9447, 1.02287, 0.22 ) }
    dend_37 { pt3dadd( 0.0271891, 38.7329, 1.63888, 0.73 ) }
    dend_37 { pt3dadd( 0.440009, 39.8528, 2.64287, 0.29 ) }
    dend_37 { pt3dadd( 0.570996, 40.4931, 3.25894, 0.29 ) }
    dend_37 { pt3dadd( 0.647984, 41.3166, 4.06573, 0.29 ) }
    dend_37 { pt3dadd( 0.666498, 42.4288, 5.17937, 0.29 ) }
    dend_37 { pt3dadd( 0.685126, 43.3228, 5.97231, 0.29 ) }
    dend_37 { pt3dadd( 0.678128, 43.7608, 6.3509, 0.29 ) }
    dend_37 { pt3dadd( 0.669743, 44.6434, 7.00551, 0.29 ) }
    dend_37 { pt3dadd( 0.715257, 45.2497, 7.33483, 0.29 ) }
    dend_37 { pt3dadd( 0.898164, 46.1345, 7.59093, 0.22 ) }
    dend_37 { pt3dadd( 1.50092, 47.8067, 7.64956, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 73/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.32505, 30.9139, -3.37974, 0.29 ) }
    dend_36 { pt3dadd( -8.33, 31.7559, -3.39134, 0.29 ) }
    dend_36 { pt3dadd( -8.36486, 32.3537, -3.43335, 0.29 ) }
    dend_36 { pt3dadd( -8.43081, 32.976, -3.48657, 0.44 ) }
    dend_36 { pt3dadd( -8.568, 34.0151, -3.61951, 0.29 ) }
    dend_36 { pt3dadd( -8.67655, 34.677, -3.74308, 0.29 ) }
    dend_36 { pt3dadd( -8.78606, 35.3095, -3.86628, 0.59 ) }
    dend_36 { pt3dadd( -8.98732, 36.4877, -4.13527, 0.37 ) }
    dend_36 { pt3dadd( -9.12414, 37.3737, -4.30666, 0.29 ) }
    dend_36 { pt3dadd( -9.25206, 38.4712, -4.40559, 0.29 ) }
    dend_36 { pt3dadd( -9.31185, 39.4586, -4.3889, 0.29 ) }
    dend_36 { pt3dadd( -9.28426, 40.3732, -4.27096, 0.29 ) }
    dend_36 { pt3dadd( -9.16075, 41.2419, -4.04392, 0.44 ) }
    dend_36 { pt3dadd( -8.88148, 42.3358, -3.6296, 0.37 ) }
    dend_36 { pt3dadd( -8.33499, 43.9284, -2.90387, 0.22 ) }
    dend_36 { pt3dadd( -8.10405, 44.4866, -2.62159, 0.22 ) }
    dend_36 { pt3dadd( -7.79122, 45.1363, -2.28592, 0.22 ) }
    dend_36 { pt3dadd( -7.3597, 45.9364, -1.90212, 0.22 ) }
    dend_36 { pt3dadd( -6.94458, 46.6218, -1.60877, 0.22 ) }
    dend_36 { pt3dadd( -6.6653, 47.0131, -1.47562, 0.22 ) }
    dend_36 { pt3dadd( -6.17799, 47.6376, -1.3117, 0.22 ) }
    dend_36 { pt3dadd( -5.91935, 48.0038, -1.21571, 0.22 ) }
    dend_36 { pt3dadd( -5.78496, 48.2334, -1.13987, 0.22 ) }
    dend_36 { pt3dadd( -5.56629, 48.6712, -1.00078, 0.73 ) }
    dend_36 { pt3dadd( -5.03487, 49.9314, -0.474598, 0.37 ) }
    dend_36 { pt3dadd( -4.79005, 50.7567, -0.0811195, 0.22 ) }
    dend_36 { pt3dadd( -4.72778, 51.3315, 0.220204, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_36 { pt3dadd( -4.78245, 52.1965, 0.652092, 0.22 ) }
    dend_36 { pt3dadd( -4.96775, 53.2889, 1.08039, 0.44 ) }
    dend_36 { pt3dadd( -5.19148, 54.2155, 1.38678, 0.44 ) }
    dend_36 { pt3dadd( -5.34406, 54.8923, 1.55603, 0.37 ) }
    dend_36 { pt3dadd( -5.37294, 55.5487, 1.69828, 0.22 ) }
    dend_36 { pt3dadd( -5.28673, 56.212, 1.80818, 0.22 ) }
    dend_36 { pt3dadd( -5.00377, 57.1525, 1.92142, 0.22 ) }
    dend_36 { pt3dadd( -4.468, 58.0914, 2.01052, 0.22 ) }
    dend_36 { pt3dadd( -3.90933, 58.8993, 2.04066, 0.22 ) }
    dend_36 { pt3dadd( -2.99897, 59.9461, 2.06773, 0.22 ) }
    dend_36 { pt3dadd( -2.72901, 60.1953, 2.07199, 0.22 ) }
    dend_36 { pt3dadd( -2.41809, 60.4212, 2.07473, 0.22 ) }
    dend_36 { pt3dadd( -1.31779, 61.025, 2.07341, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 25.2054, 46.3089, -4.38409, 0.22 ) }
    dend_33 { pt3dadd( 25.5581, 46.7782, -5.52527, 0.22 ) }
    dend_33 { pt3dadd( 25.8257, 47.3885, -6.73168, 0.22 ) }
    dend_33 { pt3dadd( 25.9247, 47.7128, -7.33501, 0.22 ) }
    dend_33 { pt3dadd( 26.0071, 48.1023, -8.04038, 0.22 ) }
    dend_33 { pt3dadd( 26.0475, 48.3944, -8.57087, 0.51 ) }
    dend_33 { pt3dadd( 26.0485, 48.8543, -9.42189, 0.51 ) }
    dend_33 { pt3dadd( 25.9211, 49.4037, -10.3389, 0.44 ) }
    dend_33 { pt3dadd( 25.6291, 50.0211, -11.3976, 0.44 ) }
    dend_33 { pt3dadd( 25.4092, 50.3435, -12.0561, 0.44 ) }
    dend_33 { pt3dadd( 25.3107, 50.4673, -12.3571, 0.44 ) }
    dend_33 { pt3dadd( 25.0729, 50.7969, -13.3479, 0.22 ) }
    dend_33 { pt3dadd( 25.0251, 50.9043, -13.7166, 0.22 ) }
    dend_33 { pt3dadd( 24.9672, 51.128, -14.604, 0.22 ) }
    dend_33 { pt3dadd( 24.9615, 51.3515, -15.4693, 0.22 ) }
    dend_33 { pt3dadd( 24.9819, 51.6411, -16.505, 0.22 ) }
    dend_33 { pt3dadd( 25.0123, 52.0407, -17.7438, 0.22 ) }
    dend_33 { pt3dadd( 25.0244, 52.4742, -18.8747, 0.22 ) }
    dend_33 { pt3dadd( 24.9958, 52.702, -19.3864, 0.22 ) }
    dend_33 { pt3dadd( 24.8784, 53.1021, -20.1233, 0.22 ) }
    dend_33 { pt3dadd( 24.6515, 53.6425, -20.9095, 0.22 ) }
    dend_33 { pt3dadd( 24.3666, 54.2767, -21.6677, 0.29 ) }
    dend_33 { pt3dadd( 23.9837, 55.1797, -22.5865, 0.29 ) }
    dend_33 { pt3dadd( 23.774, 55.6664, -23.0433, 0.29 ) }
    dend_33 { pt3dadd( 23.4914, 56.4035, -23.6883, 0.44 ) }
    dend_33 { pt3dadd( 23.1242, 57.4704, -24.557, 0.29 ) }
    dend_33 { pt3dadd( 22.9427, 58.1548, -25.062, 0.29 ) }
    dend_33 { pt3dadd( 22.864, 58.5814, -25.3509, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 25.2054, 46.3089, -4.38409, 0.29 ) }
    dend_32 { pt3dadd( 25.8932, 46.2037, -4.40581, 0.29 ) }
    dend_32 { pt3dadd( 26.1907, 46.2009, -4.41903, 0.29 ) }
    dend_32 { pt3dadd( 26.6963, 46.2251, -4.44644, 0.29 ) }
    dend_32 { pt3dadd( 27.4513, 46.264, -4.49286, 0.29 ) }
    dend_32 { pt3dadd( 28.5068, 46.2768, -4.56755, 0.15 ) }
    dend_32 { pt3dadd( 29.3103, 46.2307, -4.59355, 0.15 ) }
    dend_32 { pt3dadd( 30.2559, 46.1038, -4.65014, 0.15 ) }
    dend_32 { pt3dadd( 30.9069, 45.9596, -4.6836, 0.15 ) }
    dend_32 { pt3dadd( 31.3022, 45.8317, -4.70099, 0.15 ) }
    dend_32 { pt3dadd( 32.0901, 45.4357, -4.7337, 0.15 ) }
    dend_32 { pt3dadd( 33.0943, 44.7413, -4.73605, 0.15 ) }
    dend_32 { pt3dadd( 33.6621, 44.2804, -4.69618, 0.15 ) }
    dend_32 { pt3dadd( 34.1798, 43.8133, -4.65291, 0.22 ) }
    dend_32 { pt3dadd( 34.6819, 43.3491, -4.6112, 0.66 ) }
    dend_32 { pt3dadd( 35.2127, 42.8495, -4.58811, 0.66 ) }
    dend_32 { pt3dadd( 35.8436, 42.2769, -4.59517, 0.37 ) }
    dend_32 { pt3dadd( 36.4187, 41.8037, -4.64311, 0.22 ) }
    dend_32 { pt3dadd( 36.9255, 41.3989, -4.67303, 0.22 ) }
    dend_32 { pt3dadd( 37.2632, 41.1353, -4.70697, 0.22 ) }
    dend_32 { pt3dadd( 37.919, 40.6526, -4.69481, 0.22 ) }
    dend_32 { pt3dadd( 38.2645, 40.3889, -4.6605, 0.29 ) }
    dend_32 { pt3dadd( 38.5977, 40.0665, -4.6124, 0.29 ) }
    dend_32 { pt3dadd( 38.8309, 39.7862, -4.55865, 0.29 ) }
    dend_32 { pt3dadd( 39.3251, 39.2042, -4.38248, 0.81 ) }
    dend_32 { pt3dadd( 40.3195, 38.0402, -3.92866, 0.88 ) }
    dend_32 { pt3dadd( 40.7839, 37.4723, -3.65221, 0.37 ) }
    dend_32 { pt3dadd( 41.2801, 36.7193, -3.28013, 0.07 ) }
    dend_32 { pt3dadd( 41.5569, 36.1589, -3.01351, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 70/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.21057, -20.5173, -1.0258, 0.81 ) }
    dend_14 { pt3dadd( -1.78982, -21.5918, -0.978882, 0.81 ) }
    dend_14 { pt3dadd( -1.47558, -22.3621, -0.933563, 0.81 ) }
    dend_14 { pt3dadd( -1.04048, -23.4053, -0.86869, 0.81 ) }
    dend_14 { pt3dadd( -0.54252, -24.5991, -0.794446, 0.73 ) }
    dend_14 { pt3dadd( -0.16255, -25.5101, -0.737793, 0.73 ) }
    dend_14 { pt3dadd( 0.32234, -26.6727, -0.665497, 0.73 ) }
    dend_14 { pt3dadd( 0.683638, -27.4454, -0.607671, 0.88 ) }
    dend_14 { pt3dadd( 1.14627, -28.3972, -0.522734, 0.95 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.21057, -20.5173, -1.0258, 0.44 ) }
    dend_13 { pt3dadd( -2.09517, -20.8422, 0.067993, 0.44 ) }
    dend_13 { pt3dadd( -1.76202, -21.3237, 1.41233, 0.22 ) }
    dend_13 { pt3dadd( -0.924158, -22.0303, 3.31394, 0.22 ) }
    dend_13 { pt3dadd( -0.764342, -22.146, 3.5851, 0.22 ) }
    dend_13 { pt3dadd( -0.150441, -22.5785, 4.43043, 0.22 ) }
    dend_13 { pt3dadd( 0.513064, -23.0546, 5.19511, 0.66 ) }
    dend_13 { pt3dadd( 1.16784, -23.5258, 5.68965, 0.07 ) }
    dend_13 { pt3dadd( 1.99892, -24.161, 6.04321, 0.07 ) }
    dend_13 { pt3dadd( 2.46425, -24.4942, 6.13903, 0.37 ) }
    dend_13 { pt3dadd( 2.96134, -24.8315, 6.22866, 0.37 ) }
    dend_13 { pt3dadd( 3.64112, -25.2737, 6.32599, 0.37 ) }
    dend_13 { pt3dadd( 4.32074, -25.7762, 6.38137, 0.07 ) }
    dend_13 { pt3dadd( 4.84024, -26.2756, 6.41011, 0.07 ) }
    dend_13 { pt3dadd( 5.40056, -26.9006, 6.39365, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 94/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.46164, -26.2101, -5.64863, 0.29 ) }
    dend_9 { pt3dadd( -5.12025, -27.4421, -6.0866, 0.29 ) }
    dend_9 { pt3dadd( -4.78997, -28.9562, -6.59137, 0.59 ) }
    dend_9 { pt3dadd( -4.64699, -29.8009, -6.88587, 0.44 ) }
    dend_9 { pt3dadd( -4.52669, -30.6696, -7.19616, 0.44 ) }
    dend_9 { pt3dadd( -4.37844, -31.7878, -7.59551, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_9 { pt3dadd( -4.2455, -32.717, -7.9336, 0.22 ) }
    dend_9 { pt3dadd( -4.11418, -33.7184, -8.27061, 0.22 ) }
    dend_9 { pt3dadd( -4.02959, -34.5972, -8.55318, 0.51 ) }
    dend_9 { pt3dadd( -4.00684, -35.1428, -8.72675, 0.66 ) }
    dend_9 { pt3dadd( -4.04175, -36.0319, -9.00463, 0.51 ) }
    dend_9 { pt3dadd( -4.21807, -37.4329, -9.32234, 0.22 ) }
    dend_9 { pt3dadd( -4.28917, -37.8123, -9.34857, 0.22 ) }
    dend_9 { pt3dadd( -4.46436, -38.5779, -9.23787, 0.22 ) }
    dend_9 { pt3dadd( -4.68841, -39.4056, -8.91119, 0.22 ) }
    dend_9 { pt3dadd( -4.8552, -39.9774, -8.55674, 0.37 ) }
    dend_9 { pt3dadd( -5.22356, -41.1916, -7.65414, 0.22 ) }
    dend_9 { pt3dadd( -5.46553, -41.9557, -7.03374, 0.22 ) }
    dend_9 { pt3dadd( -5.72309, -42.8028, -6.35497, 0.44 ) }
    dend_9 { pt3dadd( -6.15579, -44.2952, -5.14766, 0.73 ) }
    dend_9 { pt3dadd( -6.48016, -45.6199, -4.00511, 0.29 ) }
    dend_9 { pt3dadd( -6.64427, -46.3554, -3.36117, 0.29 ) }
    dend_9 { pt3dadd( -6.7806, -46.9357, -2.84673, 0.51 ) }
    dend_9 { pt3dadd( -6.95557, -47.6054, -2.18543, 0.51 ) }
    dend_9 { pt3dadd( -7.21725, -48.4296, -1.23454, 0.51 ) }
    dend_9 { pt3dadd( -7.70984, -49.6926, 0.401353, 0.44 ) }
    dend_9 { pt3dadd( -7.881, -50.0288, 0.863024, 0.44 ) }
    dend_9 { pt3dadd( -8.0287, -50.2799, 1.21059, 0.44 ) }
    dend_9 { pt3dadd( -8.35747, -50.8131, 1.85758, 0.44 ) }
    dend_9 { pt3dadd( -8.84858, -51.5414, 2.49165, 0.44 ) }
    dend_9 { pt3dadd( -9.29526, -52.2027, 2.78579, 0.59 ) }
    dend_9 { pt3dadd( -9.98871, -53.21, 3.03854, 0.29 ) }
    dend_9 { pt3dadd( -10.614, -54.1178, 3.24055, 0.51 ) }
    dend_9 { pt3dadd( -11.2004, -54.9506, 3.40162, 0.29 ) }
    dend_9 { pt3dadd( -11.6061, -55.5098, 3.51831, 0.29 ) }
    dend_9 { pt3dadd( -12.659, -56.8522, 3.87384, 0.37 ) }
    dend_9 { pt3dadd( -13.1858, -57.3994, 4.1303, 0.51 ) }
    dend_9 { pt3dadd( -13.7411, -57.8326, 4.49139, 0.51 ) }
    dend_9 { pt3dadd( -14.5754, -58.3131, 5.16124, 0.29 ) }
    dend_9 { pt3dadd( -15.1249, -58.6096, 5.70155, 0.29 ) }
    dend_9 { pt3dadd( -15.554, -58.8485, 6.16354, 0.29 ) }
    dend_9 { pt3dadd( -16.1784, -59.2416, 6.87206, 0.88 ) }
    dend_9 { pt3dadd( -16.5093, -59.5719, 7.3279, 0.88 ) }
    dend_9 { pt3dadd( -16.9385, -60.3776, 8.22278, 0.88 ) }
    dend_9 { pt3dadd( -17.2161, -61.2579, 9.01663, 0.51 ) }
    dend_9 { pt3dadd( -17.3647, -62.006, 9.56138, 0.15 ) }
    dend_9 { pt3dadd( -17.4314, -62.6163, 9.91967, 0.15 ) }
    dend_9 { pt3dadd( -17.4659, -63.8656, 10.5078, 0.66 ) }
    dend_9 { pt3dadd( -17.2313, -65.89, 11.4353, 0.29 ) }
    dend_9 { pt3dadd( -17.0923, -66.8092, 11.8196, 0.29 ) }
    dend_9 { pt3dadd( -16.9156, -67.6337, 12.1684, 0.29 ) }
    dend_9 { pt3dadd( -16.6029, -68.624, 12.6017, 0.29 ) }
    dend_9 { pt3dadd( -16.3277, -69.2576, 12.8768, 0.66 ) }
    dend_9 { pt3dadd( -14.7065, -71.7815, 13.8249, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.46164, -26.2101, -5.64863, 0.37 ) }
    dend_2 { pt3dadd( -6.7292, -26.7325, -6.70888, 0.37 ) }
    dend_2 { pt3dadd( -7.14245, -26.882, -7.01851, 0.37 ) }
    dend_2 { pt3dadd( -7.39861, -26.9589, -7.18926, 0.66 ) }
    dend_2 { pt3dadd( -8.13527, -27.1538, -7.63392, 0.44 ) }
    dend_2 { pt3dadd( -8.77932, -27.2871, -8.0484, 0.44 ) }
    dend_2 { pt3dadd( -9.18817, -27.3438, -8.32641, 0.44 ) }
    dend_2 { pt3dadd( -9.56172, -27.3594, -8.53679, 0.44 ) }
    dend_2 { pt3dadd( -10.1579, -27.312, -8.81872, 0.44 ) }
    dend_2 { pt3dadd( -10.7614, -27.2096, -9.02311, 0.44 ) }
    dend_2 { pt3dadd( -11.754, -26.9916, -9.18218, 0.59 ) }
    dend_2 { pt3dadd( -12.3025, -26.9151, -9.18823, 0.88 ) }
    dend_2 { pt3dadd( -13.0376, -26.9475, -9.15144, 0.59 ) }
    dend_2 { pt3dadd( -14.3091, -27.2009, -9.13985, 0.59 ) }
    dend_2 { pt3dadd( -14.8224, -27.3477, -9.14897, 0.59 ) }
    dend_2 { pt3dadd( -15.3821, -27.5528, -9.1709, 0.88 ) }
    dend_2 { pt3dadd( -16.1442, -27.8827, -9.24031, 0.44 ) }
    dend_2 { pt3dadd( -17.0707, -28.3255, -9.45833, 0.44 ) }
    dend_2 { pt3dadd( -17.9232, -28.7749, -9.8391, 0.44 ) }
    dend_2 { pt3dadd( -18.2853, -28.9932, -10.0629, 0.66 ) }
    dend_2 { pt3dadd( -18.4693, -29.1136, -10.1849, 0.66 ) }
    dend_2 { pt3dadd( -18.8663, -29.3806, -10.4423, 0.66 ) }
    dend_2 { pt3dadd( -19.4526, -29.8355, -10.8364, 0.44 ) }
    dend_2 { pt3dadd( -19.9973, -30.362, -11.2303, 0.44 ) }
    dend_2 { pt3dadd( -20.4813, -30.9046, -11.57, 0.44 ) }
    dend_2 { pt3dadd( -20.995, -31.5367, -11.9294, 0.37 ) }
    dend_2 { pt3dadd( -21.725, -32.4777, -12.4138, 0.37 ) }
    dend_2 { pt3dadd( -22.3234, -33.2759, -12.7757, 0.22 ) }
    dend_2 { pt3dadd( -23.0607, -34.3123, -13.1901, 0.29 ) }
    dend_2 { pt3dadd( -23.6985, -35.261, -13.5204, 0.59 ) }
    dend_2 { pt3dadd( -23.9753, -35.696, -13.6654, 0.37 ) }
    dend_2 { pt3dadd( -24.271, -36.214, -13.8206, 0.22 ) }
    dend_2 { pt3dadd( -24.5031, -36.6636, -13.9303, 0.44 ) }
    dend_2 { pt3dadd( -24.9884, -37.5585, -14.0952, 0.44 ) }
    dend_2 { pt3dadd( -25.4185, -38.3902, -14.2274, 0.44 ) }
    dend_2 { pt3dadd( -25.6653, -38.8832, -14.3251, 0.44 ) }
    dend_2 { pt3dadd( -25.8988, -39.3461, -14.428, 0.44 ) }
    dend_2 { pt3dadd( -26.1311, -39.7893, -14.5438, 0.66 ) }
    dend_2 { pt3dadd( -26.4646, -40.3837, -14.7073, 0.66 ) }
    dend_2 { pt3dadd( -26.8961, -41.0525, -14.8909, 0.51 ) }
    dend_2 { pt3dadd( -27.1215, -41.3866, -14.9844, 0.51 ) }
    dend_2 { pt3dadd( -27.587, -42.1193, -15.1713, 0.51 ) }
    dend_2 { pt3dadd( -28.0152, -42.8893, -15.3597, 0.37 ) }
    dend_2 { pt3dadd( -28.3938, -43.6648, -15.5319, 0.81 ) }
    dend_2 { pt3dadd( -28.6738, -44.2925, -15.651, 0.22 ) }
    dend_2 { pt3dadd( -28.9754, -45.003, -15.7526, 0.22 ) }
    dend_2 { pt3dadd( -29.2746, -45.6931, -15.83, 0.22 ) }
    dend_2 { pt3dadd( -29.6379, -46.436, -15.9032, 0.44 ) }
    dend_2 { pt3dadd( -29.998, -47.0785, -15.9843, 0.59 ) }
    dend_2 { pt3dadd( -30.3796, -47.6567, -16.0817, 0.29 ) }
    dend_2 { pt3dadd( -30.8501, -48.2918, -16.2056, 0.73 ) }
    dend_2 { pt3dadd( -31.2843, -48.8123, -16.3185, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( -32.1526, -49.7424, -16.5024, 0.37 ) }
    dend_2 { pt3dadd( -32.8565, -50.437, -16.6491, 0.51 ) }
    dend_2 { pt3dadd( -33.6029, -51.1536, -16.8158, 0.15 ) }
    dend_2 { pt3dadd( -33.8768, -51.4168, -16.881, 0.15 ) }
    dend_2 { pt3dadd( -34.3956, -51.9299, -17.009, 0.37 ) }
    dend_2 { pt3dadd( -35.1835, -52.853, -17.1992, 0.37 ) }
    // Section: dend_58, id: dend_58, parent: dend_50 (entry count 6/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -22.6886, -14.9241, -15.3789, 0.59 ) }
    dend_58 { pt3dadd( -23.3417, -14.6329, -16.4871, 0.59 ) }
    dend_58 { pt3dadd( -23.8291, -14.37, -17.1509, 0.59 ) }
    dend_58 { pt3dadd( -24.2841, -14.1212, -17.6573, 0.59 ) }
    dend_58 { pt3dadd( -24.6174, -13.9634, -17.9979, 0.59 ) }
    dend_58 { pt3dadd( -25.0899, -13.8004, -18.4937, 0.37 ) }
    dend_58 { pt3dadd( -25.3687, -13.7379, -18.8074, 0.37 ) }
    dend_58 { pt3dadd( -25.928, -13.6576, -19.4693, 0.37 ) }
    dend_58 { pt3dadd( -26.2636, -13.6743, -19.9394, 0.37 ) }
    dend_58 { pt3dadd( -26.7317, -13.8967, -20.751, 0.37 ) }
    dend_58 { pt3dadd( -27.1238, -14.265, -21.6562, 0.37 ) }
    dend_58 { pt3dadd( -27.3357, -14.5485, -22.3105, 0.37 ) }
    dend_58 { pt3dadd( -27.4655, -14.7553, -22.8593, 0.37 ) }
    dend_58 { pt3dadd( -27.5518, -14.9089, -23.5104, 0.37 ) }
    dend_58 { pt3dadd( -27.6137, -14.9154, -24.3001, 0.37 ) }
    dend_58 { pt3dadd( -27.679, -14.7423, -24.9576, 0.37 ) }
    dend_58 { pt3dadd( -27.7913, -14.5061, -25.4849, 0.37 ) }
    dend_58 { pt3dadd( -28.0019, -14.2426, -26.2322, 0.44 ) }
    dend_58 { pt3dadd( -28.3573, -14.077, -27.3337, 0.29 ) }
    dend_58 { pt3dadd( -28.563, -14.1991, -27.9757, 0.29 ) }
    dend_58 { pt3dadd( -28.6853, -14.3613, -28.3274, 0.29 ) }
    dend_58 { pt3dadd( -29.019, -14.8573, -29.0387, 0.29 ) }
    dend_58 { pt3dadd( -29.8877, -16.0531, -30.5706, 0.44 ) }
    dend_58 { pt3dadd( -30.2094, -16.4522, -31.0628, 0.44 ) }
    dend_58 { pt3dadd( -30.6331, -16.9266, -31.6662, 0.44 ) }
    dend_58 { pt3dadd( -30.8292, -17.0869, -31.9812, 0.44 ) }
    dend_58 { pt3dadd( -31.1619, -17.2042, -32.7665, 0.44 ) }
    dend_58 { pt3dadd( -31.3569, -17.0894, -33.5558, 0.59 ) }
    dend_58 { pt3dadd( -31.4693, -16.8185, -34.307, 0.59 ) }
    dend_58 { pt3dadd( -31.4854, -16.5633, -34.9649, 0.44 ) }
    dend_58 { pt3dadd( -31.3817, -16.1524, -36.2402, 0.66 ) }
    dend_58 { pt3dadd( -31.289, -16.0514, -37.2153, 0.66 ) }
    dend_58 { pt3dadd( -31.2361, -16.1698, -37.8621, 0.66 ) }
    dend_58 { pt3dadd( -31.1979, -16.3471, -38.3016, 0.66 ) }
    dend_58 { pt3dadd( -31.1665, -16.5174, -38.6211, 0.66 ) }
    dend_58 { pt3dadd( -31.0807, -17.0107, -39.4607, 0.66 ) }
    dend_58 { pt3dadd( -30.9297, -17.9459, -41.1174, 0.66 ) }
    dend_58 { pt3dadd( -30.8001, -18.6785, -42.6396, 0.66 ) }
    dend_58 { pt3dadd( -30.684, -19.043, -43.6343, 0.66 ) }
    dend_58 { pt3dadd( -30.5474, -19.2451, -44.3885, 0.66 ) }
    dend_58 { pt3dadd( -30.3021, -19.4046, -45.2593, 0.66 ) }
    dend_58 { pt3dadd( -29.8902, -19.4698, -46.1799, 0.66 ) }
    dend_58 { pt3dadd( -29.511, -19.4187, -46.7495, 0.66 ) }
    dend_58 { pt3dadd( -28.8506, -19.2162, -47.5678, 0.66 ) }
    dend_58 { pt3dadd( -28.1361, -18.9847, -48.3296, 0.66 ) }
    dend_58 { pt3dadd( -27.7451, -18.9369, -48.7676, 0.66 ) }
    dend_58 { pt3dadd( -27.4346, -18.9872, -49.1668, 0.66 ) }
    dend_58 { pt3dadd( -27.0641, -19.1458, -49.7744, 0.66 ) }
    dend_58 { pt3dadd( -26.8646, -19.3109, -50.2939, 0.66 ) }
    dend_58 { pt3dadd( -26.7408, -19.6091, -51.0594, 0.66 ) }
    dend_58 { pt3dadd( -26.7007, -20.7037, -53.5602, 0.51 ) }
    dend_58 { pt3dadd( -26.8077, -21.1596, -54.505, 0.51 ) }
    dend_58 { pt3dadd( -26.9636, -21.5893, -55.279, 0.51 ) }
    dend_58 { pt3dadd( -27.1985, -22.1432, -56.1463, 0.51 ) }
    dend_58 { pt3dadd( -27.5008, -22.7616, -57.0258, 0.37 ) }
    dend_58 { pt3dadd( -27.6157, -22.968, -57.2854, 0.37 ) }
    dend_58 { pt3dadd( -27.8899, -23.5075, -57.8401, 0.37 ) }
    dend_58 { pt3dadd( -28.1524, -24.2549, -58.4631, 0.37 ) }
    dend_58 { pt3dadd( -28.4152, -25.5757, -59.4167, 0.37 ) }
    dend_58 { pt3dadd( -28.4887, -26.2033, -59.8754, 0.37 ) }
    dend_58 { pt3dadd( -28.5258, -26.5952, -60.178, 0.37 ) }
    dend_58 { pt3dadd( -28.5853, -27.282, -60.7154, 0.37 ) }
    dend_58 { pt3dadd( -28.6136, -27.9647, -61.2286, 0.37 ) }
    dend_58 { pt3dadd( -28.635, -28.6701, -61.7297, 0.37 ) }
    dend_58 { pt3dadd( -28.6036, -29.5395, -62.379, 0.37 ) }
    dend_58 { pt3dadd( -28.5771, -29.9038, -62.6889, 0.37 ) }
    dend_58 { pt3dadd( -28.5518, -30.4029, -63.1923, 0.37 ) }
    dend_58 { pt3dadd( -28.5357, -31.3589, -64.2283, 0.37 ) }
    dend_58 { pt3dadd( -28.5567, -31.6996, -64.6161, 0.37 ) }
    dend_58 { pt3dadd( -28.664, -32.4749, -65.4219, 0.37 ) }
    dend_58 { pt3dadd( -28.7186, -32.8989, -65.8256, 0.37 ) }
    dend_58 { pt3dadd( -28.8052, -33.6317, -66.514, 0.37 ) }
    dend_58 { pt3dadd( -28.9174, -34.2841, -67.0632, 0.37 ) }
    dend_58 { pt3dadd( -29.1219, -35.4969, -67.9284, 0.37 ) }
    dend_58 { pt3dadd( -29.1663, -35.9461, -68.2175, 0.37 ) }
    dend_58 { pt3dadd( -29.1726, -36.4111, -68.4587, 0.37 ) }
    dend_58 { pt3dadd( -29.1087, -37.2539, -68.8557, 0.37 ) }
    dend_58 { pt3dadd( -29.054, -37.8012, -69.0901, 0.37 ) }
    dend_58 { pt3dadd( -28.9712, -39.0018, -69.6244, 0.37 ) }
    dend_58 { pt3dadd( -28.9074, -40.0276, -70.1708, 0.37 ) }
    dend_58 { pt3dadd( -28.8751, -40.6799, -70.6241, 0.29 ) }
    dend_58 { pt3dadd( -28.8721, -41.2826, -71.1752, 0.29 ) }
    dend_58 { pt3dadd( -28.8914, -41.7273, -71.7207, 0.29 ) }
    dend_58 { pt3dadd( -28.9182, -42.2035, -72.4261, 0.29 ) }
    dend_58 { pt3dadd( -29.0232, -42.9203, -73.8273, 0.29 ) }
    dend_58 { pt3dadd( -29.1062, -43.2652, -74.7471, 0.29 ) }
    dend_58 { pt3dadd( -29.1944, -43.5594, -75.854, 0.29 ) }
    dend_58 { pt3dadd( -29.2289, -43.6765, -76.5186, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -22.6886, -14.9241, -15.3789, 0.81 ) }
    dend_51 { pt3dadd( -24.1463, -15.8452, -15.1294, 0.81 ) }
    dend_51 { pt3dadd( -25.4137, -16.5132, -14.8402, 0.51 ) }
    dend_51 { pt3dadd( -26.1308, -16.7872, -14.6883, 0.51 ) }
    dend_51 { pt3dadd( -26.6437, -16.9832, -14.5796, 0.51 ) }
    dend_51 { pt3dadd( -27.7862, -17.4199, -14.3375, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_51 { pt3dadd( -28.8975, -17.8446, -14.1021, 0.37 ) }
    dend_51 { pt3dadd( -29.9249, -18.101, -13.8458, 0.37 ) }
    dend_51 { pt3dadd( -31.5891, -18.3177, -13.4513, 1.03 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 3/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -21.6605, -2.8634, -20.7222, 0.22 ) }
    dend_49 { pt3dadd( -22.9123, -0.632679, -20.5026, 0.22 ) }
    dend_49 { pt3dadd( -23.4946, 0.566221, -20.3793, 0.22 ) }
    dend_49 { pt3dadd( -23.9389, 1.41776, -20.2723, 0.37 ) }
    dend_49 { pt3dadd( -24.6274, 2.53639, -20.1091, 0.22 ) }
    dend_49 { pt3dadd( -25.0255, 3.10531, -20.0213, 0.22 ) }
    dend_49 { pt3dadd( -25.6934, 3.97536, -19.9177, 0.44 ) }
    dend_49 { pt3dadd( -26.7787, 5.2651, -19.9056, 0.29 ) }
    dend_49 { pt3dadd( -27.3634, 5.98291, -19.9349, 0.37 ) }
    dend_49 { pt3dadd( -28.0387, 6.83319, -20.0069, 0.37 ) }
    dend_49 { pt3dadd( -29.088, 8.18428, -20.2089, 0.29 ) }
    dend_49 { pt3dadd( -29.9309, 9.35908, -20.4134, 0.15 ) }
    dend_49 { pt3dadd( -31.2216, 11.3315, -20.8612, 0.15 ) }
    dend_49 { pt3dadd( -31.617, 12.0621, -21.0794, 0.15 ) }
    dend_49 { pt3dadd( -31.8693, 12.6432, -21.2293, 0.15 ) }
    dend_49 { pt3dadd( -32.1349, 13.3395, -21.3836, 0.15 ) }
    dend_49 { pt3dadd( -32.4001, 13.9581, -21.4808, 0.15 ) }
    dend_49 { pt3dadd( -32.6634, 14.423, -21.498, 0.15 ) }
    dend_49 { pt3dadd( -33.3264, 15.2158, -21.4647, 0.15 ) }
    dend_49 { pt3dadd( -34.4096, 16.4206, -21.3436, 0.15 ) }
    dend_49 { pt3dadd( -35.0785, 17.135, -21.2704, 0.15 ) }
    dend_49 { pt3dadd( -35.9346, 18.1025, -21.1558, 0.15 ) }
    dend_49 { pt3dadd( -36.3435, 18.6365, -21.0866, 0.37 ) }
    dend_49 { pt3dadd( -36.9961, 19.5242, -20.9763, 0.15 ) }
    dend_49 { pt3dadd( -38.0975, 21.1886, -20.8342, 0.15 ) }
    dend_49 { pt3dadd( -38.3251, 21.5911, -20.8098, 0.15 ) }
    dend_49 { pt3dadd( -39.1021, 23.2946, -20.6415, 0.59 ) }
    dend_49 { pt3dadd( -39.7551, 25.1698, -20.4008, 0.22 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 31/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -21.6605, -2.8634, -20.7222, 0.37 ) }
    dend_46 { pt3dadd( -21.3877, -2.29889, -21.4242, 0.37 ) }
    dend_46 { pt3dadd( -21.0809, -1.69632, -22.2978, 0.29 ) }
    dend_46 { pt3dadd( -20.9375, -1.42507, -22.6977, 0.29 ) }
    dend_46 { pt3dadd( -20.6987, -1.02325, -23.3001, 0.29 ) }
    dend_46 { pt3dadd( -20.461, -0.695265, -23.8246, 0.29 ) }
    dend_46 { pt3dadd( -20.103, -0.26421, -24.5601, 0.29 ) }
    dend_46 { pt3dadd( -19.7012, 0.153084, -25.4075, 0.29 ) }
    dend_46 { pt3dadd( -19.4459, 0.401702, -25.9486, 0.29 ) }
    dend_46 { pt3dadd( -19.1873, 0.673507, -26.5271, 0.29 ) }
    dend_46 { pt3dadd( -18.8735, 1.0373, -27.2905, 0.29 ) }
    dend_46 { pt3dadd( -18.7342, 1.2123, -27.6761, 0.29 ) }
    dend_46 { pt3dadd( -18.5254, 1.46395, -28.3505, 0.29 ) }
    dend_46 { pt3dadd( -18.2664, 1.7765, -29.3051, 0.37 ) }
    dend_46 { pt3dadd( -18.0792, 1.98983, -30.0728, 0.29 ) }
    dend_46 { pt3dadd( -17.8606, 2.27192, -31.0378, 0.29 ) }
    dend_46 { pt3dadd( -17.7143, 2.50139, -31.7125, 0.51 ) }
    dend_46 { pt3dadd( -17.4551, 2.8899, -32.8105, 0.44 ) }
    dend_46 { pt3dadd( -17.2957, 3.09726, -33.3653, 0.44 ) }
    dend_46 { pt3dadd( -17.0513, 3.38986, -34.2039, 0.59 ) }
    dend_46 { pt3dadd( -16.8179, 3.7228, -35.072, 0.59 ) }
    dend_46 { pt3dadd( -16.5755, 4.24834, -36.2538, 0.15 ) }
    dend_46 { pt3dadd( -16.4871, 4.60458, -36.9563, 0.29 ) }
    dend_46 { pt3dadd( -16.469, 4.98531, -37.5937, 0.59 ) }
    dend_46 { pt3dadd( -16.5834, 6.00839, -39.1717, 0.37 ) }
    dend_46 { pt3dadd( -16.6872, 6.38668, -39.679, 0.07 ) }
    dend_46 { pt3dadd( -16.8716, 6.8252, -40.2038, 0.51 ) }
    dend_46 { pt3dadd( -17.0137, 7.09553, -40.5196, 0.51 ) }
    dend_46 { pt3dadd( -17.3659, 7.73828, -41.2322, 0.29 ) }
    dend_46 { pt3dadd( -17.6545, 8.24922, -41.7832, 0.29 ) }
    dend_46 { pt3dadd( -17.9948, 8.91435, -42.4665, 0.29 ) }
    dend_46 { pt3dadd( -18.2572, 9.46582, -43.0702, 0.81 ) }
    dend_46 { pt3dadd( -18.7071, 10.5322, -44.2506, 0.29 ) }
    dend_46 { pt3dadd( -18.9184, 11.0446, -44.8729, 0.15 ) }
    dend_46 { pt3dadd( -19.0294, 11.2879, -45.1902, 0.15 ) }
    dend_46 { pt3dadd( -19.2963, 11.8327, -45.927, 0.37 ) }
    dend_46 { pt3dadd( -19.5162, 12.2258, -46.459, 0.66 ) }
    dend_46 { pt3dadd( -19.9357, 12.8707, -47.2978, 0.29 ) }
    dend_46 { pt3dadd( -20.471, 13.6288, -48.2354, 0.29 ) }
    dend_46 { pt3dadd( -20.8623, 14.1313, -48.8868, 0.66 ) }
    dend_46 { pt3dadd( -21.1096, 14.4477, -49.291, 0.66 ) }
    dend_46 { pt3dadd( -21.4977, 14.9066, -49.8845, 0.29 ) }
    dend_46 { pt3dadd( -21.6422, 15.0654, -50.0944, 0.51 ) }
    dend_46 { pt3dadd( -22.4135, 15.8593, -51.124, 0.15 ) }
    dend_46 { pt3dadd( -22.7289, 16.2508, -51.552, 0.81 ) }
    dend_46 { pt3dadd( -23.0839, 16.8275, -52.2132, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_14 (entry count 77/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 1.14627, -28.3972, -0.522734, 0.22 ) }
    dend_22 { pt3dadd( 1.09869, -29.0523, -0.374176, 0.22 ) }
    dend_22 { pt3dadd( 1.13272, -29.4249, -0.304406, 0.22 ) }
    dend_22 { pt3dadd( 1.31183, -30.3129, -0.164014, 0.22 ) }
    dend_22 { pt3dadd( 1.56397, -31.0971, -0.0643849, 0.29 ) }
    dend_22 { pt3dadd( 1.76081, -31.6609, -0.00312948, 0.29 ) }
    dend_22 { pt3dadd( 1.97317, -32.2911, 0.0558125, 0.29 ) }
    dend_22 { pt3dadd( 2.32438, -33.2183, 0.144146, 0.29 ) }
    dend_22 { pt3dadd( 2.51967, -33.7225, 0.188552, 0.29 ) }
    dend_22 { pt3dadd( 2.86446, -34.5396, 0.257126, 0.29 ) }
    dend_22 { pt3dadd( 3.09817, -35.0657, 0.335508, 0.29 ) }
    dend_22 { pt3dadd( 3.43122, -35.774, 0.475618, 0.37 ) }
    dend_22 { pt3dadd( 3.82813, -36.5616, 0.655833, 0.37 ) }
    dend_22 { pt3dadd( 4.04254, -36.9451, 0.759395, 0.51 ) }
    dend_22 { pt3dadd( 4.6413, -37.9178, 1.09984, 0.29 ) }
    dend_22 { pt3dadd( 5.0003, -38.4596, 1.30914, 0.29 ) }
    dend_22 { pt3dadd( 5.42868, -39.0129, 1.53959, 0.66 ) }
    dend_22 { pt3dadd( 5.9861, -39.6311, 1.81682, 0.66 ) }
    dend_22 { pt3dadd( 6.61087, -40.2523, 2.09616, 0.37 ) }
    dend_22 { pt3dadd( 7.3807, -40.9852, 2.45115, 0.88 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 1.14627, -28.3972, -0.522734, 0.59 ) }
    dend_15 { pt3dadd( 1.85888, -29.0042, -0.571167, 0.59 ) }
    dend_15 { pt3dadd( 2.50483, -29.5544, -0.61507, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 3.32679, -30.2545, -0.670936, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 1/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -14.7065, -71.7815, 13.8249, 0.29 ) }
    dend_11 { pt3dadd( -14.5162, -72.7541, 13.643, 0.29 ) }
    dend_11 { pt3dadd( -14.4132, -73.5435, 13.4552, 0.29 ) }
    dend_11 { pt3dadd( -14.2057, -75.2464, 13.0177, 0.07 ) }
    dend_11 { pt3dadd( -14.1383, -75.921, 12.8445, 0.07 ) }
    dend_11 { pt3dadd( -14.0407, -77.4182, 12.3832, 0.29 ) }
    dend_11 { pt3dadd( -13.9696, -78.7258, 11.9065, 0.15 ) }
    dend_11 { pt3dadd( -13.9756, -79.9242, 11.4084, 0.15 ) }
    dend_11 { pt3dadd( -14.0027, -80.3412, 11.2243, 0.44 ) }
    dend_11 { pt3dadd( -14.1216, -81.2859, 10.7828, 0.29 ) }
    dend_11 { pt3dadd( -14.2975, -82.6741, 10.1279, 0.29 ) }
    dend_11 { pt3dadd( -14.4164, -83.7164, 9.64517, 0.29 ) }
    dend_11 { pt3dadd( -14.5121, -84.5509, 9.26596, 0.07 ) }
    dend_11 { pt3dadd( -14.6366, -85.4099, 8.89576, 0.07 ) }
    dend_11 { pt3dadd( -14.7732, -86.1061, 8.57575, 0.51 ) }
    dend_11 { pt3dadd( -15.1392, -87.6551, 7.96576, 0.22 ) }
    dend_11 { pt3dadd( -15.419, -88.5535, 7.68548, 0.22 ) }
    dend_11 { pt3dadd( -16.0742, -90.0641, 7.2648, 0.22 ) }
    dend_11 { pt3dadd( -16.4832, -90.7509, 7.07607, 0.22 ) }
    dend_11 { pt3dadd( -17.7335, -91.9918, 6.79854, 0.22 ) }
    dend_11 { pt3dadd( -19.6616, -92.6803, 6.85719, 0.22 ) }
    dend_11 { pt3dadd( -20.8951, -92.5956, 7.08327, 0.44 ) }
    dend_11 { pt3dadd( -21.7689, -92.3341, 7.29511, 0.07 ) }
    dend_11 { pt3dadd( -22.3476, -92.0372, 7.46797, 0.37 ) }
    dend_11 { pt3dadd( -23.3269, -91.2767, 7.76512, 0.15 ) }
    dend_11 { pt3dadd( -23.7404, -90.827, 7.88664, 0.37 ) }
    dend_11 { pt3dadd( -24.3269, -90.0506, 7.88523, 0.07 ) }
    dend_11 { pt3dadd( -24.6035, -89.6191, 7.84483, 0.07 ) }
    dend_11 { pt3dadd( -24.9989, -88.8991, 7.73723, 0.37 ) }
    dend_11 { pt3dadd( -25.6467, -87.511, 7.47585, 0.07 ) }
    dend_11 { pt3dadd( -26.0887, -86.4839, 7.2488, 0.37 ) }
    dend_11 { pt3dadd( -27.1013, -84.1122, 6.6521, 0.15 ) }
    dend_11 { pt3dadd( -27.3981, -83.383, 6.44026, 0.15 ) }
    dend_11 { pt3dadd( -27.6462, -82.7859, 6.24211, 0.15 ) }
    dend_11 { pt3dadd( -27.8141, -82.3932, 6.08463, 0.51 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 36/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.7065, -71.7815, 13.8249, 0.29 ) }
    dend_10 { pt3dadd( -14.7272, -71.2045, 14.3416, 0.29 ) }
    dend_10 { pt3dadd( -14.7478, -70.1974, 15.2521, 0.29 ) }
    dend_10 { pt3dadd( -14.7555, -69.6933, 15.6845, 0.59 ) }
    dend_10 { pt3dadd( -14.6993, -68.3925, 16.7295, 0.29 ) }
    dend_10 { pt3dadd( -14.6514, -67.2826, 17.6212, 0.29 ) }
    dend_10 { pt3dadd( -14.5978, -66.0403, 18.6193, 0.29 ) }
    dend_10 { pt3dadd( -14.6051, -65.3977, 19.1696, 0.29 ) }
    dend_10 { pt3dadd( -14.6227, -64.9131, 19.6107, 0.51 ) }
    dend_10 { pt3dadd( -14.5917, -64.1828, 20.3236, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 46/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -35.1835, -52.853, -17.1992, 0.29 ) }
    dend_4 { pt3dadd( -36.3043, -53.216, -16.9811, 0.29 ) }
    dend_4 { pt3dadd( -36.9837, -53.5273, -16.8988, 0.29 ) }
    dend_4 { pt3dadd( -37.5736, -53.8173, -16.8636, 0.29 ) }
    dend_4 { pt3dadd( -38.081, -54.0942, -16.8212, 0.29 ) }
    dend_4 { pt3dadd( -38.6471, -54.4482, -16.7674, 0.29 ) }
    dend_4 { pt3dadd( -39.6593, -55.1303, -16.6655, 0.59 ) }
    dend_4 { pt3dadd( -40.3236, -55.6123, -16.6688, 0.59 ) }
    dend_4 { pt3dadd( -41.1858, -56.2225, -16.7773, 0.22 ) }
    dend_4 { pt3dadd( -41.7729, -56.6578, -16.8649, 0.22 ) }
    dend_4 { pt3dadd( -42.7168, -57.3564, -17.0294, 0.73 ) }
    dend_4 { pt3dadd( -43.2645, -57.7229, -17.1413, 0.73 ) }
    dend_4 { pt3dadd( -44.2485, -58.2768, -17.3926, 0.37 ) }
    dend_4 { pt3dadd( -45.5853, -58.9306, -17.9463, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -35.1835, -52.853, -17.1992, 0.22 ) }
    dend_3 { pt3dadd( -35.1037, -53.7895, -17.5172, 0.22 ) }
    dend_3 { pt3dadd( -35.0727, -54.6645, -17.7677, 0.22 ) }
    dend_3 { pt3dadd( -35.0388, -55.3791, -17.9284, 0.22 ) }
    dend_3 { pt3dadd( -35.0058, -56.1889, -18.112, 0.22 ) }
    dend_3 { pt3dadd( -34.9636, -56.9706, -18.2842, 0.22 ) }
    dend_3 { pt3dadd( -34.9443, -57.3185, -18.3668, 0.73 ) }
    dend_3 { pt3dadd( -34.9049, -58.0196, -18.5255, 0.73 ) }
    dend_3 { pt3dadd( -34.751, -59.5385, -18.8766, 0.22 ) }
    dend_3 { pt3dadd( -34.5986, -60.6837, -19.1391, 0.22 ) }
    dend_3 { pt3dadd( -34.4301, -61.6375, -19.374, 0.22 ) }
    dend_3 { pt3dadd( -34.2278, -62.6019, -19.6257, 0.22 ) }
    dend_3 { pt3dadd( -33.953, -63.9112, -19.9805, 0.44 ) }
    dend_3 { pt3dadd( -33.7563, -64.7268, -20.2204, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 74/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -31.5891, -18.3177, -13.4513, 0.29 ) }
    dend_53 { pt3dadd( -32.0568, -18.5517, -12.5757, 0.29 ) }
    dend_53 { pt3dadd( -32.318, -18.7425, -12.0285, 0.15 ) }
    dend_53 { pt3dadd( -32.4996, -18.9068, -11.6281, 0.51 ) }
    dend_53 { pt3dadd( -32.7506, -19.1714, -11.0797, 0.51 ) }
    dend_53 { pt3dadd( -32.929, -19.3506, -10.7247, 0.51 ) }
    dend_53 { pt3dadd( -33.26, -19.6524, -10.1703, 0.29 ) }
    dend_53 { pt3dadd( -33.4926, -19.8937, -9.83689, 0.44 ) }
    dend_53 { pt3dadd( -33.6279, -20.0312, -9.67854, 0.44 ) }
    dend_53 { pt3dadd( -33.9158, -20.2976, -9.44143, 0.88 ) }
    dend_53 { pt3dadd( -34.5475, -20.7919, -9.0671, 0.37 ) }
    dend_53 { pt3dadd( -35.1437, -21.1827, -8.78337, 0.22 ) }
    dend_53 { pt3dadd( -35.4839, -21.3794, -8.61234, 0.37 ) }
    dend_53 { pt3dadd( -35.8262, -21.5731, -8.41351, 0.22 ) }
    dend_53 { pt3dadd( -36.3976, -21.9173, -7.99254, 0.22 ) }
    dend_53 { pt3dadd( -36.9712, -22.3158, -7.41796, 0.59 ) }
    dend_53 { pt3dadd( -37.3594, -22.6597, -6.90246, 0.29 ) }
    dend_53 { pt3dadd( -37.9443, -23.3011, -5.92816, 0.37 ) }
    dend_53 { pt3dadd( -38.2094, -23.6398, -5.42803, 0.37 ) }
    dend_53 { pt3dadd( -38.5121, -24.0858, -4.78355, 0.37 ) }
    dend_53 { pt3dadd( -38.8105, -24.5791, -4.09555, 0.22 ) }
    dend_53 { pt3dadd( -39.0827, -25.0613, -3.46872, 0.22 ) }
    dend_53 { pt3dadd( -39.359, -25.5379, -2.88601, 0.37 ) }
    dend_53 { pt3dadd( -39.6202, -25.9142, -2.47967, 0.37 ) }
    dend_53 { pt3dadd( -39.8804, -26.2152, -2.16795, 0.51 ) }
    dend_53 { pt3dadd( -40.1356, -26.4456, -1.91963, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -40.5884, -26.7678, -1.51528, 0.22 ) }
    dend_53 { pt3dadd( -40.7332, -26.8527, -1.3822, 0.37 ) }
    dend_53 { pt3dadd( -41.2809, -27.1532, -0.855765, 0.81 ) }
    dend_53 { pt3dadd( -41.5749, -27.3136, -0.564323, 0.29 ) }
    dend_53 { pt3dadd( -41.9503, -27.5245, -0.205504, 0.29 ) }
    dend_53 { pt3dadd( -42.3159, -27.741, 0.134272, 0.29 ) }
    dend_53 { pt3dadd( -42.6352, -27.9401, 0.407089, 0.44 ) }
    dend_53 { pt3dadd( -42.8813, -28.0866, 0.615887, 0.44 ) }
    dend_53 { pt3dadd( -43.2112, -28.2685, 0.88485, 0.44 ) }
    dend_53 { pt3dadd( -43.53, -28.4298, 1.11467, 0.44 ) }
    dend_53 { pt3dadd( -43.829, -28.5867, 1.28386, 0.44 ) }
    dend_53 { pt3dadd( -44.3188, -28.8375, 1.50226, 0.73 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 12/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -31.5891, -18.3177, -13.4513, 0.66 ) }
    dend_52 { pt3dadd( -32.522, -18.3438, -13.2698, 0.66 ) }
    dend_52 { pt3dadd( -33.4117, -18.4293, -13.0412, 0.66 ) }
    dend_52 { pt3dadd( -34.1375, -18.5186, -12.8473, 0.73 ) }
    dend_52 { pt3dadd( -34.8719, -18.6403, -12.6465, 0.37 ) }
    dend_52 { pt3dadd( -36.5576, -18.9862, -12.1803, 0.15 ) }
    dend_52 { pt3dadd( -37.7219, -19.2533, -11.8705, 0.51 ) }
    dend_52 { pt3dadd( -38.39, -19.4643, -11.6717, 0.51 ) }
    dend_52 { pt3dadd( -38.9318, -19.6422, -11.491, 0.51 ) }
    dend_52 { pt3dadd( -39.6843, -19.8722, -11.2458, 0.37 ) }
    dend_52 { pt3dadd( -40.2563, -20.0171, -11.0638, 0.51 ) }
    dend_52 { pt3dadd( -41.1272, -20.2095, -10.8071, 0.51 ) }
    dend_52 { pt3dadd( -41.9519, -20.3942, -10.556, 0.51 ) }
    dend_52 { pt3dadd( -43.2464, -20.743, -10.1341, 0.15 ) }
    dend_52 { pt3dadd( -43.7804, -20.9226, -9.96052, 0.73 ) }
    dend_52 { pt3dadd( -44.8288, -21.3867, -9.66419, 0.44 ) }
    dend_52 { pt3dadd( -45.2298, -21.6552, -9.58251, 0.44 ) }
    dend_52 { pt3dadd( -45.8737, -22.2467, -9.4972, 0.88 ) }
    dend_52 { pt3dadd( -46.5094, -22.9464, -9.40806, 0.29 ) }
    dend_52 { pt3dadd( -47.0011, -23.5439, -9.30766, 0.29 ) }
    dend_52 { pt3dadd( -47.8257, -24.5413, -9.09122, 0.29 ) }
    dend_52 { pt3dadd( -48.8738, -25.7182, -8.80377, 0.81 ) }
    dend_52 { pt3dadd( -49.7138, -26.5362, -8.55808, 0.22 ) }
    dend_52 { pt3dadd( -50.771, -27.3381, -8.23186, 0.22 ) }
    dend_52 { pt3dadd( -51.8469, -27.954, -7.87385, 0.22 ) }
    dend_52 { pt3dadd( -52.5807, -28.2492, -7.63725, 0.59 ) }
    dend_52 { pt3dadd( -53.536, -28.504, -7.34912, 0.66 ) }
    dend_52 { pt3dadd( -54.0919, -28.6115, -7.20022, 0.66 ) }
    dend_52 { pt3dadd( -55.6286, -28.929, -6.88681, 0.22 ) }
    dend_52 { pt3dadd( -56.1859, -29.0748, -6.80344, 0.22 ) }
    dend_52 { pt3dadd( -57.383, -29.5201, -6.59741, 0.44 ) }
    dend_52 { pt3dadd( -57.9691, -29.8192, -6.49116, 0.59 ) }
    dend_52 { pt3dadd( -58.8215, -30.3491, -6.33107, 0.66 ) }
    dend_52 { pt3dadd( -60.3318, -31.39, -6.00278, 0.15 ) }
    dend_52 { pt3dadd( -61.2654, -32.0863, -5.78084, 0.81 ) }
    dend_52 { pt3dadd( -62.9298, -33.3341, -5.36798, 0.22 ) }
    dend_52 { pt3dadd( -64.2882, -34.3284, -5.03257, 0.29 ) }
    dend_52 { pt3dadd( -65.2825, -35.0325, -4.79181, 0.66 ) }
    dend_52 { pt3dadd( -67.1376, -36.2606, -4.37035, 0.29 ) }
    dend_52 { pt3dadd( -68.4666, -37.0675, -4.09193, 0.15 ) }
    dend_52 { pt3dadd( -69.4679, -37.6067, -3.90516, 0.15 ) }
    dend_52 { pt3dadd( -70.5312, -38.1074, -3.7271, 0.22 ) }
    dend_52 { pt3dadd( -71.1435, -38.3754, -3.62703, 0.66 ) }
    dend_52 { pt3dadd( -71.9416, -38.7183, -3.54483, 0.37 ) }
    dend_52 { pt3dadd( -72.8276, -39.0938, -3.52449, 0.07 ) }
    dend_52 { pt3dadd( -73.3348, -39.316, -3.5252, 0.07 ) }
    dend_52 { pt3dadd( -73.8775, -39.5833, -3.52511, 0.07 ) }
    dend_52 { pt3dadd( -75.1885, -40.3003, -3.50179, 0.59 ) }
    dend_52 { pt3dadd( -76.0873, -40.8108, -3.40264, 0.51 ) }
    dend_52 { pt3dadd( -76.3443, -40.9657, -3.35405, 0.51 ) }
    dend_52 { pt3dadd( -76.8415, -41.2721, -3.22907, 0.51 ) }
    dend_52 { pt3dadd( -77.6933, -41.7873, -2.9771, 0.29 ) }
    dend_52 { pt3dadd( -78.7697, -42.4211, -2.61881, 0.07 ) }
    dend_52 { pt3dadd( -80.1945, -43.2472, -2.08238, 0.66 ) }
    dend_52 { pt3dadd( -80.4865, -43.4167, -1.9731, 0.81 ) }
    dend_52 { pt3dadd( -81.0133, -43.6995, -1.79386, 0.81 ) }
    dend_52 { pt3dadd( -82.3584, -44.3379, -1.46166, 0.07 ) }
    dend_52 { pt3dadd( -82.9951, -44.6133, -1.36829, 0.29 ) }
    dend_52 { pt3dadd( -83.4899, -44.8284, -1.35086, 0.29 ) }
    dend_52 { pt3dadd( -83.9269, -45.0235, -1.39222, 0.29 ) }
    dend_52 { pt3dadd( -84.5199, -45.2894, -1.46252, 0.29 ) }
    dend_52 { pt3dadd( -85.9043, -45.894, -1.65899, 0.51 ) }
    dend_52 { pt3dadd( -86.4232, -46.0872, -1.73926, 0.51 ) }
    dend_52 { pt3dadd( -87.1563, -46.3308, -1.75533, 0.22 ) }
    dend_52 { pt3dadd( -88.1543, -46.6727, -1.66779, 0.44 ) }
    dend_52 { pt3dadd( -88.7961, -46.8928, -1.53251, 0.44 ) }
    dend_52 { pt3dadd( -89.3758, -47.1031, -1.35658, 0.44 ) }
    dend_52 { pt3dadd( -90.6405, -47.568, -0.844633, 0.51 ) }
    dend_52 { pt3dadd( -92.2995, -48.0775, -0.0747361, 0.15 ) }
    dend_52 { pt3dadd( -93.6177, -48.3871, 0.551633, 0.29 ) }
    dend_52 { pt3dadd( -94.719, -48.5413, 1.09096, 0.66 ) }
    dend_52 { pt3dadd( -95.4547, -48.591, 1.45201, 0.66 ) }
    dend_52 { pt3dadd( -96.8924, -48.5754, 2.11822, 0.15 ) }
    dend_52 { pt3dadd( -98.6365, -48.4033, 2.8573, 0.15 ) }
    dend_52 { pt3dadd( -99.5903, -48.2374, 3.22025, 0.15 ) }
    dend_52 { pt3dadd( -101.277, -47.7935, 3.80261, 0.15 ) }
    dend_52 { pt3dadd( -101.931, -47.5758, 3.98032, 0.51 ) }
    dend_52 { pt3dadd( -103.137, -47.0614, 4.23435, 0.22 ) }
    dend_52 { pt3dadd( -103.621, -46.8027, 4.27412, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -23.0839, 16.8275, -52.2132, 0.37 ) }
    dend_48 { pt3dadd( -22.8475, 17.8157, -52.9723, 0.37 ) }
    dend_48 { pt3dadd( -22.6588, 18.5743, -53.7304, 0.29 ) }
    dend_48 { pt3dadd( -22.4805, 19.4027, -54.6781, 0.29 ) }
    dend_48 { pt3dadd( -22.3233, 20.1888, -55.7514, 0.51 ) }
    dend_48 { pt3dadd( -22.1963, 20.8963, -56.7999, 0.29 ) }
    dend_48 { pt3dadd( -22.0786, 21.557, -58.0132, 0.29 ) }
    dend_48 { pt3dadd( -22.0382, 21.9817, -59.0952, 0.29 ) }
    dend_48 { pt3dadd( -22.0422, 22.1272, -59.5739, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_48 { pt3dadd( -22.0658, 22.3677, -60.6349, 0.29 ) }
    dend_48 { pt3dadd( -22.1011, 22.496, -61.3921, 0.29 ) }
    dend_48 { pt3dadd( -22.2937, 22.8713, -63.543, 0.29 ) }
    dend_48 { pt3dadd( -22.3792, 23.0311, -64.2659, 0.29 ) }
    dend_48 { pt3dadd( -22.4767, 23.3684, -65.5017, 0.51 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 5/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -23.0839, 16.8275, -52.2132, 0.29 ) }
    dend_47 { pt3dadd( -23.8868, 16.7119, -52.8126, 0.29 ) }
    dend_47 { pt3dadd( -24.5222, 16.6205, -53.287, 0.73 ) }
    dend_47 { pt3dadd( -25.3882, 16.4958, -53.9337, 0.51 ) }
    dend_47 { pt3dadd( -25.7729, 16.4405, -54.2209, 0.22 ) }
    dend_47 { pt3dadd( -26.018, 16.4052, -54.4039, 0.22 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 11/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 7.3807, -40.9852, 2.45115, 0.73 ) }
    dend_26 { pt3dadd( 8.61327, -40.75, 2.59949, 0.73 ) }
    dend_26 { pt3dadd( 9.26472, -40.6257, 2.67788, 0.29 ) }
    dend_26 { pt3dadd( 9.91973, -40.5008, 2.75671, 0.29 ) }
    dend_26 { pt3dadd( 11.0204, -40.2908, 2.88917, 0.51 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 16/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.3807, -40.9852, 2.45115, 0.37 ) }
    dend_23 { pt3dadd( 7.22628, -41.9147, 2.36037, 0.37 ) }
    dend_23 { pt3dadd( 6.83704, -43.2162, 2.09486, 0.37 ) }
    dend_23 { pt3dadd( 6.44206, -44.2932, 1.83346, 0.37 ) }
    dend_23 { pt3dadd( 6.0824, -45.1817, 1.62098, 0.15 ) }
    dend_23 { pt3dadd( 5.80822, -45.8589, 1.45901, 0.15 ) }
    dend_23 { pt3dadd( 5.34814, -46.9954, 1.18721, 0.15 ) }
    dend_23 { pt3dadd( 4.58003, -48.5527, 0.736918, 0.15 ) }
    dend_23 { pt3dadd( 4.36432, -48.8894, 0.620733, 0.29 ) }
    dend_23 { pt3dadd( 3.84784, -49.5963, 0.342713, 0.29 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 26/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 3.32679, -30.2545, -0.670936, 0.51 ) }
    dend_17 { pt3dadd( 3.51117, -31.1787, -1.28848, 0.51 ) }
    dend_17 { pt3dadd( 3.75015, -31.6529, -1.68226, 0.44 ) }
    dend_17 { pt3dadd( 4.17328, -32.1409, -2.17235, 0.44 ) }
    dend_17 { pt3dadd( 4.53292, -32.4554, -2.51668, 0.44 ) }
    dend_17 { pt3dadd( 4.86536, -32.7036, -2.81669, 0.44 ) }
    dend_17 { pt3dadd( 5.29272, -33.0247, -3.22989, 0.44 ) }
    dend_17 { pt3dadd( 5.81315, -33.3064, -3.66713, 0.44 ) }
    dend_17 { pt3dadd( 6.19968, -33.4964, -3.98248, 0.59 ) }
    dend_17 { pt3dadd( 6.55631, -33.6845, -4.25724, 0.29 ) }
    dend_17 { pt3dadd( 7.14159, -34.0558, -4.71783, 0.88 ) }
    dend_17 { pt3dadd( 7.75304, -34.525, -5.19985, 0.59 ) }
    dend_17 { pt3dadd( 8.23072, -34.9423, -5.55683, 0.59 ) }
    dend_17 { pt3dadd( 8.62735, -35.3208, -5.82042, 0.59 ) }
    dend_17 { pt3dadd( 9.16312, -35.8715, -6.13632, 0.59 ) }
    dend_17 { pt3dadd( 9.55315, -36.3101, -6.3499, 0.59 ) }
    dend_17 { pt3dadd( 9.78917, -36.6156, -6.48141, 0.88 ) }
    dend_17 { pt3dadd( 10.3269, -37.3685, -6.74238, 0.66 ) }
    dend_17 { pt3dadd( 10.9339, -38.3093, -7.05675, 0.66 ) }
    dend_17 { pt3dadd( 11.5817, -39.354, -7.40775, 0.37 ) }
    dend_17 { pt3dadd( 12.0629, -40.1455, -7.67618, 0.37 ) }
    dend_17 { pt3dadd( 12.6065, -41.0235, -8.0077, 0.37 ) }
    dend_17 { pt3dadd( 13.2209, -41.9908, -8.4385, 0.37 ) }
    dend_17 { pt3dadd( 13.6331, -42.6264, -8.78202, 0.44 ) }
    dend_17 { pt3dadd( 13.8683, -42.9701, -8.99405, 0.44 ) }
    dend_17 { pt3dadd( 14.2583, -43.4461, -9.35878, 0.44 ) }
    dend_17 { pt3dadd( 14.8276, -43.9809, -9.87509, 0.44 ) }
    dend_17 { pt3dadd( 15.3163, -44.3256, -10.333, 0.44 ) }
    dend_17 { pt3dadd( 15.6748, -44.5409, -10.7774, 0.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 55/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.32679, -30.2545, -0.670936, 0.29 ) }
    dend_16 { pt3dadd( 4.30178, -30.2153, -0.776937, 0.29 ) }
    dend_16 { pt3dadd( 4.84554, -30.1074, -0.839556, 0.29 ) }
    dend_16 { pt3dadd( 5.93594, -29.7118, -0.950182, 0.29 ) }
    dend_16 { pt3dadd( 6.24855, -29.5698, -0.971452, 0.29 ) }
    dend_16 { pt3dadd( 6.58623, -29.4208, -0.999518, 0.29 ) }
    dend_16 { pt3dadd( 6.95727, -29.2736, -1.05278, 0.29 ) }
    dend_16 { pt3dadd( 7.57709, -29.02, -1.18815, 0.29 ) }
    dend_16 { pt3dadd( 8.00662, -28.8633, -1.29213, 0.29 ) }
    dend_16 { pt3dadd( 8.92703, -28.6163, -1.50994, 0.29 ) }
    dend_16 { pt3dadd( 9.44741, -28.5285, -1.60864, 0.29 ) }
    dend_16 { pt3dadd( 10.2098, -28.5131, -1.74549, 0.51 ) }
    dend_16 { pt3dadd( 11.0524, -28.6031, -1.87322, 0.29 ) }
    dend_16 { pt3dadd( 11.9984, -28.8028, -1.97822, 0.29 ) }
    dend_16 { pt3dadd( 13.0872, -29.1094, -2.08619, 0.29 ) }
    dend_16 { pt3dadd( 13.4078, -29.2054, -2.12297, 0.37 ) }
    dend_16 { pt3dadd( 14.4106, -29.459, -2.26146, 0.22 ) }
    dend_16 { pt3dadd( 15.1122, -29.5925, -2.37679, 0.44 ) }
    dend_16 { pt3dadd( 16.3037, -29.8219, -2.59425, 0.15 ) }
    dend_16 { pt3dadd( 17.1564, -29.9657, -2.8024, 0.59 ) }
    dend_16 { pt3dadd( 18.3295, -30.0741, -3.1678, 0.15 ) }
    dend_16 { pt3dadd( 19.3566, -30.096, -3.50798, 0.15 ) }
    dend_16 { pt3dadd( 20.0454, -30.0332, -3.76513, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 78/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -45.5853, -58.9306, -17.9463, 0.22 ) }
    dend_6 { pt3dadd( -46.6477, -59.2057, -18.2297, 0.22 ) }
    dend_6 { pt3dadd( -47.2694, -59.3938, -18.4321, 0.22 ) }
    dend_6 { pt3dadd( -47.7416, -59.5645, -18.598, 0.22 ) }
    dend_6 { pt3dadd( -48.3979, -59.8321, -18.8269, 0.66 ) }
    dend_6 { pt3dadd( -48.6198, -59.9226, -18.9043, 0.66 ) }
    dend_6 { pt3dadd( -49.2075, -60.1622, -19.1093, 0.37 ) }
    dend_6 { pt3dadd( -49.7933, -60.4369, -19.3087, 0.15 ) }
    dend_6 { pt3dadd( -50.0495, -60.5556, -19.3789, 0.15 ) }
    dend_6 { pt3dadd( -50.5823, -60.821, -19.5768, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 88/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -45.5853, -58.9306, -17.9463, 0.22 ) }
    dend_5 { pt3dadd( -45.9839, -58.7674, -18.4327, 0.22 ) }
    dend_5 { pt3dadd( -46.5594, -58.5361, -19.0497, 0.22 ) }
    dend_5 { pt3dadd( -46.7748, -58.4591, -19.296, 0.22 ) }
    dend_5 { pt3dadd( -46.9829, -58.399, -19.5598, 0.73 ) }
    dend_5 { pt3dadd( -47.5689, -58.3043, -20.3723, 0.51 ) }
    dend_5 { pt3dadd( -48.141, -58.292, -21.2492, 0.07 ) }
    dend_5 { pt3dadd( -48.4241, -58.3388, -21.7545, 0.81 ) }
    dend_5 { pt3dadd( -48.912, -58.5014, -22.9223, 0.44 ) }
    dend_5 { pt3dadd( -49.1724, -58.6376, -23.8236, 0.07 ) }
    dend_5 { pt3dadd( -49.3283, -58.7952, -24.6591, 0.81 ) }
    dend_5 { pt3dadd( -49.4157, -59.0048, -25.4617, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_5 { pt3dadd( -49.4311, -59.1471, -25.9088, 0.15 ) }
    dend_5 { pt3dadd( -49.3845, -59.4389, -26.8458, 0.37 ) }
    dend_5 { pt3dadd( -49.2629, -59.6784, -27.6733, 0.15 ) }
    dend_5 { pt3dadd( -49.1361, -59.8602, -28.3663, 0.15 ) }
    dend_5 { pt3dadd( -49.0864, -59.9431, -28.6882, 0.15 ) }
    dend_5 { pt3dadd( -49.039, -60.0401, -29.0198, 0.66 ) }
    dend_5 { pt3dadd( -48.9064, -60.4035, -29.994, 0.22 ) }
    dend_5 { pt3dadd( -48.8074, -60.8362, -30.8654, 0.81 ) }
    dend_5 { pt3dadd( -48.732, -61.1462, -31.4216, 0.07 ) }
    dend_5 { pt3dadd( -48.6114, -61.5992, -32.1491, 0.66 ) }
    dend_5 { pt3dadd( -48.5611, -61.8173, -32.4729, 0.22 ) }
    dend_5 { pt3dadd( -48.5207, -62.043, -32.7758, 0.59 ) }
    dend_5 { pt3dadd( -48.4315, -62.6856, -33.5145, 0.22 ) }
    dend_5 { pt3dadd( -48.2743, -63.8183, -34.7425, 0.73 ) }
    dend_5 { pt3dadd( -48.2044, -64.2498, -35.2153, 0.44 ) }
    dend_5 { pt3dadd( -48.0665, -65.0519, -36.0976, 0.15 ) }
    dend_5 { pt3dadd( -48.0054, -65.5057, -36.595, 0.15 ) }
    dend_5 { pt3dadd( -47.9682, -65.8083, -36.9211, 0.44 ) }
    dend_5 { pt3dadd( -47.867, -66.3962, -37.4883, 0.81 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 19/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -44.3188, -28.8375, 1.50226, 0.51 ) }
    dend_57 { pt3dadd( -44.8386, -29.2255, 2.0859, 0.51 ) }
    dend_57 { pt3dadd( -45.3499, -29.8774, 2.84449, 0.29 ) }
    dend_57 { pt3dadd( -45.5899, -30.2799, 3.25903, 0.22 ) }
    dend_57 { pt3dadd( -45.7459, -30.5459, 3.51156, 0.22 ) }
    dend_57 { pt3dadd( -46.0203, -30.9763, 3.9207, 0.37 ) }
    dend_57 { pt3dadd( -46.4113, -31.5711, 4.46666, 0.37 ) }
    dend_57 { pt3dadd( -46.768, -32.2109, 4.92751, 0.15 ) }
    dend_57 { pt3dadd( -46.9516, -32.5642, 5.14238, 0.37 ) }
    dend_57 { pt3dadd( -47.2697, -33.1281, 5.46715, 0.37 ) }
    dend_57 { pt3dadd( -47.8069, -33.9857, 5.93146, 0.15 ) }
    dend_57 { pt3dadd( -48.2166, -34.5718, 6.22629, 0.51 ) }
    dend_57 { pt3dadd( -48.8182, -35.3861, 6.59923, 0.29 ) }
    dend_57 { pt3dadd( -49.1726, -35.8807, 6.77476, 0.29 ) }
    dend_57 { pt3dadd( -49.5408, -36.4278, 6.93603, 0.22 ) }
    dend_57 { pt3dadd( -49.7924, -36.821, 7.02889, 0.29 ) }
    dend_57 { pt3dadd( -49.973, -37.0904, 7.088, 0.29 ) }
    dend_57 { pt3dadd( -50.1281, -37.3005, 7.14612, 0.29 ) }
    dend_57 { pt3dadd( -50.6939, -38.032, 7.39802, 0.29 ) }
    dend_57 { pt3dadd( -51.0074, -38.4523, 7.54018, 0.29 ) }
    dend_57 { pt3dadd( -51.5835, -39.2801, 7.82527, 0.29 ) }
    dend_57 { pt3dadd( -52.0954, -40.0671, 8.10778, 0.59 ) }
    dend_57 { pt3dadd( -52.5681, -40.8159, 8.39019, 0.22 ) }
    dend_57 { pt3dadd( -52.8837, -41.3265, 8.59556, 0.22 ) }
    dend_57 { pt3dadd( -53.2592, -41.9734, 8.8795, 0.22 ) }
    dend_57 { pt3dadd( -53.4535, -42.3518, 9.0436, 0.44 ) }
    dend_57 { pt3dadd( -53.773, -43.0444, 9.37679, 0.66 ) }
    dend_57 { pt3dadd( -54.0015, -43.5551, 9.65631, 0.37 ) }
    dend_57 { pt3dadd( -54.2864, -44.1926, 10.0406, 0.15 ) }
    dend_57 { pt3dadd( -54.5514, -44.7521, 10.3966, 0.15 ) }
    dend_57 { pt3dadd( -54.8356, -45.2897, 10.7439, 0.44 ) }
    dend_57 { pt3dadd( -55.4594, -46.3853, 11.4108, 0.22 ) }
    dend_57 { pt3dadd( -55.9893, -47.2474, 11.9818, 0.37 ) }
    dend_57 { pt3dadd( -56.2643, -47.6749, 12.3007, 0.37 ) }
    dend_57 { pt3dadd( -56.671, -48.2976, 12.8006, 0.22 ) }
    dend_57 { pt3dadd( -57.4842, -49.5066, 13.8128, 0.07 ) }
    dend_57 { pt3dadd( -57.9124, -50.1368, 14.3422, 0.44 ) }
    dend_57 { pt3dadd( -58.62, -51.1362, 15.1644, 0.22 ) }
    dend_57 { pt3dadd( -59.2366, -51.9668, 15.8264, 0.22 ) }
    dend_57 { pt3dadd( -59.5892, -52.4083, 16.2238, 0.22 ) }
    dend_57 { pt3dadd( -59.7887, -52.6574, 16.4645, 0.59 ) }
    dend_57 { pt3dadd( -60.3413, -53.3543, 17.1518, 0.37 ) }
    dend_57 { pt3dadd( -60.8236, -53.9355, 17.7235, 0.15 ) }
    dend_57 { pt3dadd( -61.2568, -54.4457, 18.1048, 0.15 ) }
    dend_57 { pt3dadd( -62.1511, -55.4214, 18.7485, 0.15 ) }
    dend_57 { pt3dadd( -62.6166, -55.8717, 19.0486, 0.37 ) }
    dend_57 { pt3dadd( -63.058, -56.2582, 19.3259, 0.37 ) }
    dend_57 { pt3dadd( -63.9352, -56.9568, 19.857, 0.07 ) }
    dend_57 { pt3dadd( -64.9926, -57.7062, 20.4319, 0.29 ) }
    dend_57 { pt3dadd( -65.348, -57.9266, 20.5969, 0.29 ) }
    dend_57 { pt3dadd( -65.9512, -58.2476, 20.7636, 0.51 ) }
    dend_57 { pt3dadd( -66.7597, -58.5529, 20.9445, 0.22 ) }
    dend_57 { pt3dadd( -67.1902, -58.6712, 21.0271, 0.44 ) }
    dend_57 { pt3dadd( -68.0057, -58.8277, 21.1609, 0.15 ) }
    dend_57 { pt3dadd( -68.3071, -58.8643, 21.2286, 0.15 ) }
    dend_57 { pt3dadd( -69.1016, -58.9945, 21.4096, 0.15 ) }
    dend_57 { pt3dadd( -70.0269, -59.1503, 21.5848, 0.15 ) }
    dend_57 { pt3dadd( -70.3411, -59.2, 21.6292, 0.15 ) }
    dend_57 { pt3dadd( -70.7685, -59.27, 21.71, 0.15 ) }
    dend_57 { pt3dadd( -70.9996, -59.3397, 21.7937, 0.66 ) }
    dend_57 { pt3dadd( -71.572, -59.618, 22.1092, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -44.3188, -28.8375, 1.50226, 0.44 ) }
    dend_54 { pt3dadd( -44.73, -29.8791, 1.59292, 0.44 ) }
    dend_54 { pt3dadd( -44.903, -30.3175, 1.63107, 0.29 ) }
    dend_54 { pt3dadd( -45.1147, -30.8536, 1.67772, 0.29 ) }
    dend_54 { pt3dadd( -45.3458, -31.439, 1.72868, 0.29 ) }
    dend_54 { pt3dadd( -45.5729, -32.0145, 1.77876, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 86/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 11.0204, -40.2908, 2.88917, 0.07 ) }
    dend_28 { pt3dadd( 11.5808, -39.9213, 2.77913, 0.07 ) }
    dend_28 { pt3dadd( 12.4238, -39.3281, 2.58049, 0.15 ) }
    dend_28 { pt3dadd( 13.1741, -38.7065, 2.38169, 0.15 ) }
    dend_28 { pt3dadd( 13.7878, -38.1137, 2.24224, 0.15 ) }
    dend_28 { pt3dadd( 14.3391, -37.5332, 2.1637, 0.44 ) }
    dend_28 { pt3dadd( 15.0314, -36.7525, 2.0658, 0.15 ) }
    dend_28 { pt3dadd( 15.6467, -35.9923, 1.94452, 0.15 ) }
    dend_28 { pt3dadd( 16.2816, -35.1311, 1.77372, 0.15 ) }
    dend_28 { pt3dadd( 17.1258, -33.9623, 1.48872, 0.15 ) }
    dend_28 { pt3dadd( 17.8848, -32.9135, 1.18843, 0.15 ) }
    dend_28 { pt3dadd( 18.4721, -32.0709, 0.925447, 0.37 ) }
    dend_28 { pt3dadd( 19.0655, -31.2137, 0.638347, 0.37 ) }
    dend_28 { pt3dadd( 19.6121, -30.4882, 0.341241, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_28 { pt3dadd( 20.1039, -29.927, 0.0214721, 0.22 ) }
    dend_28 { pt3dadd( 20.7492, -29.2658, -0.546642, 0.22 ) }
    dend_28 { pt3dadd( 21.1327, -28.9, -0.937941, 0.22 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 3/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 11.0204, -40.2908, 2.88917, 0.37 ) }
    dend_27 { pt3dadd( 11.8122, -41.1722, 3.02064, 0.37 ) }
    dend_27 { pt3dadd( 12.7216, -42.0764, 3.14688, 0.22 ) }
    dend_27 { pt3dadd( 13.365, -42.845, 3.16003, 0.22 ) }
    dend_27 { pt3dadd( 14.0471, -43.8237, 3.04258, 0.22 ) }
    dend_27 { pt3dadd( 14.7465, -45.0806, 2.82235, 0.29 ) }
    dend_27 { pt3dadd( 14.9199, -45.4999, 2.72253, 0.29 ) }
    dend_27 { pt3dadd( 15.0736, -46.0903, 2.56396, 0.29 ) }
    dend_27 { pt3dadd( 15.1202, -47.5268, 2.08847, 0.15 ) }
    dend_27 { pt3dadd( 14.9596, -48.5204, 1.74976, 0.15 ) }
    dend_27 { pt3dadd( 14.7443, -49.3331, 1.49623, 0.15 ) }
    dend_27 { pt3dadd( 14.403, -50.3205, 1.22195, 0.15 ) }
    dend_27 { pt3dadd( 14.1113, -51.0439, 1.01796, 0.15 ) }
    dend_27 { pt3dadd( 13.7708, -51.7427, 0.837607, 0.15 ) }
    dend_27 { pt3dadd( 13.2743, -52.6251, 0.644994, 0.15 ) }
    dend_27 { pt3dadd( 12.9668, -53.1642, 0.544199, 0.29 ) }
    dend_27 { pt3dadd( 12.3678, -54.2078, 0.319739, 0.07 ) }
    dend_27 { pt3dadd( 11.7324, -55.3289, 0.0739627, 0.07 ) }
    dend_27 { pt3dadd( 11.2034, -56.1677, -0.192756, 0.07 ) }
    dend_27 { pt3dadd( 10.8504, -56.6176, -0.396409, 0.07 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 3.84784, -49.5963, 0.342713, 0.22 ) }
    dend_25 { pt3dadd( 3.54997, -50.3244, 0.0224609, 0.22 ) }
    dend_25 { pt3dadd( 3.35576, -50.9037, -0.256922, 0.22 ) }
    dend_25 { pt3dadd( 3.18993, -51.5166, -0.551691, 0.22 ) }
    dend_25 { pt3dadd( 3.07805, -51.9559, -0.754825, 0.29 ) }
    dend_25 { pt3dadd( 2.81621, -52.9687, -1.20744, 0.29 ) }
    dend_25 { pt3dadd( 2.53419, -53.9596, -1.63811, 0.29 ) }
    dend_25 { pt3dadd( 2.3673, -54.444, -1.85968, 0.29 ) }
    dend_25 { pt3dadd( 1.98679, -55.4298, -2.34226, 0.22 ) }
    dend_25 { pt3dadd( 1.77312, -55.9588, -2.59164, 0.22 ) }
    dend_25 { pt3dadd( 1.60954, -56.3367, -2.72906, 0.22 ) }
    dend_25 { pt3dadd( 1.32686, -56.9318, -2.86539, 0.37 ) }
    dend_25 { pt3dadd( 0.918287, -57.8121, -2.96119, 0.22 ) }
    dend_25 { pt3dadd( 0.580886, -58.623, -2.98696, 0.22 ) }
    dend_25 { pt3dadd( 0.44543, -59.1366, -2.94306, 0.22 ) }
    dend_25 { pt3dadd( 0.47263, -60.389, -2.61011, 0.37 ) }
    dend_25 { pt3dadd( 0.631337, -60.9547, -2.38613, 0.29 ) }
    dend_25 { pt3dadd( 0.985565, -61.6784, -2.02087, 0.15 ) }
    dend_25 { pt3dadd( 1.30317, -62.1768, -1.69465, 0.15 ) }
    dend_25 { pt3dadd( 1.70641, -62.7207, -1.23781, 0.22 ) }
    dend_25 { pt3dadd( 2.43208, -63.6069, -0.406851, 0.22 ) }
    dend_25 { pt3dadd( 2.83419, -64.0596, 0.0386545, 0.22 ) }
    dend_25 { pt3dadd( 3.21285, -64.454, 0.496984, 0.22 ) }
    dend_25 { pt3dadd( 3.69588, -64.97, 1.14498, 0.22 ) }
    dend_25 { pt3dadd( 4.30899, -65.6448, 2.06197, 0.44 ) }
    dend_25 { pt3dadd( 4.46062, -65.8088, 2.31541, 0.66 ) }
    dend_25 { pt3dadd( 4.6896, -66.0378, 2.72059, 0.66 ) }
    dend_25 { pt3dadd( 5.12541, -66.4518, 3.5808, 0.44 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 51/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.84784, -49.5963, 0.342713, 0.07 ) }
    dend_24 { pt3dadd( 3.08454, -49.208, 0.0995623, 0.07 ) }
    dend_24 { pt3dadd( 2.44656, -48.8646, -0.176176, 0.15 ) }
    dend_24 { pt3dadd( 1.51604, -48.3166, -0.73425, 0.22 ) }
    dend_24 { pt3dadd( 0.978282, -47.9943, -1.1618, 0.22 ) }
    dend_24 { pt3dadd( 0.587468, -47.7355, -1.51285, 0.22 ) }
    dend_24 { pt3dadd( -0.464724, -46.9611, -2.52538, 0.22 ) }
    dend_24 { pt3dadd( -1.21164, -46.3016, -3.39403, 0.22 ) }
    dend_24 { pt3dadd( -1.80247, -45.7151, -4.20656, 0.22 ) }
    dend_24 { pt3dadd( -2.44117, -45.0257, -5.2372, 0.22 ) }
    dend_24 { pt3dadd( -2.7547, -44.6429, -5.87415, 0.22 ) }
    dend_24 { pt3dadd( -2.9197, -44.4055, -6.28984, 0.22 ) }
    dend_24 { pt3dadd( -3.07851, -44.1055, -6.85031, 0.22 ) }
    dend_24 { pt3dadd( -3.25584, -43.8199, -7.32528, 0.37 ) }
    dend_24 { pt3dadd( -3.50086, -43.4884, -7.81917, 0.37 ) }
    dend_24 { pt3dadd( -3.93195, -42.9814, -8.68134, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 67/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 15.6748, -44.5409, -10.7774, 0.44 ) }
    dend_19 { pt3dadd( 15.8073, -45.8382, -10.8796, 0.44 ) }
    dend_19 { pt3dadd( 15.8842, -46.5913, -10.939, 0.88 ) }
    dend_19 { pt3dadd( 15.9384, -47.1216, -10.9808, 0.51 ) }
    dend_19 { pt3dadd( 16.0537, -48.2509, -11.0698, 0.81 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 15.6748, -44.5409, -10.7774, 0.22 ) }
    dend_18 { pt3dadd( 15.4494, -43.4579, -10.6058, 0.22 ) }
    dend_18 { pt3dadd( 15.3422, -42.5044, -10.5073, 0.29 ) }
    dend_18 { pt3dadd( 15.3955, -41.8387, -10.5095, 0.29 ) }
    dend_18 { pt3dadd( 15.521, -41.4551, -10.5973, 0.29 ) }
    dend_18 { pt3dadd( 15.6399, -41.1823, -10.6876, 0.15 ) }
    dend_18 { pt3dadd( 15.9983, -40.4163, -10.9652, 0.15 ) }
    dend_18 { pt3dadd( 16.1994, -40.0388, -11.1235, 0.15 ) }
    dend_18 { pt3dadd( 16.7267, -39.0641, -11.4942, 0.51 ) }
    dend_18 { pt3dadd( 17.3793, -37.7424, -11.882, 0.29 ) }
    dend_18 { pt3dadd( 17.6524, -37.0752, -12.0153, 0.29 ) }
    dend_18 { pt3dadd( 17.9705, -36.1339, -12.087, 0.44 ) }
    dend_18 { pt3dadd( 18.2734, -34.9506, -11.9904, 0.22 ) }
    dend_18 { pt3dadd( 18.5137, -33.8011, -11.7806, 0.51 ) }
    dend_18 { pt3dadd( 18.7136, -32.6183, -11.4728, 0.22 ) }
    dend_18 { pt3dadd( 18.8868, -31.5155, -11.1176, 0.22 ) }
    dend_18 { pt3dadd( 19.1011, -30.1385, -10.6453, 0.81 ) }
    dend_18 { pt3dadd( 19.3415, -28.5493, -10.0845, 0.15 ) }
    dend_18 { pt3dadd( 19.4182, -28.1017, -9.92545, 0.15 ) }
    dend_18 { pt3dadd( 19.6029, -27.2765, -9.6169, 0.37 ) }
    dend_18 { pt3dadd( 19.8238, -26.4919, -9.31789, 0.07 ) }
    dend_18 { pt3dadd( 19.937, -26.1249, -9.16899, 0.73 ) }
    dend_18 { pt3dadd( 20.1303, -25.5067, -8.92778, 0.37 ) }
    dend_18 { pt3dadd( 20.5216, -24.2977, -8.43941, 0.66 ) }
    dend_18 { pt3dadd( 21.0175, -22.6941, -7.7422, 0.15 ) }
    dend_18 { pt3dadd( 21.1915, -22.1323, -7.47392, 0.15 ) }
    dend_18 { pt3dadd( 21.378, -21.5072, -7.18242, 0.15 ) }
    dend_18 { pt3dadd( 21.5718, -20.7657, -6.88273, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_18 { pt3dadd( 21.7943, -19.7553, -6.54859, 0.15 ) }
    dend_18 { pt3dadd( 21.888, -19.1538, -6.40527, 0.44 ) }
    dend_18 { pt3dadd( 22.0048, -17.9061, -6.19956, 0.07 ) }
    dend_18 { pt3dadd( 22.0685, -16.9456, -6.05805, 0.44 ) }
    dend_18 { pt3dadd( 22.1485, -15.3131, -5.81502, 0.15 ) }
    dend_18 { pt3dadd( 22.1601, -14.5766, -5.70374, 0.15 ) }
    dend_18 { pt3dadd( 22.1678, -13.7983, -5.60315, 0.15 ) }
    dend_18 { pt3dadd( 22.1561, -12.758, -5.47228, 0.15 ) }
    dend_18 { pt3dadd( 22.1205, -11.9006, -5.37537, 0.22 ) }
    dend_18 { pt3dadd( 22.0875, -10.8831, -5.22195, 0.22 ) }
    dend_18 { pt3dadd( 22.08, -10.0542, -5.07847, 0.22 ) }
    dend_18 { pt3dadd( 22.1241, -8.84248, -4.83738, 0.15 ) }
    dend_18 { pt3dadd( 22.1829, -7.83959, -4.6325, 0.44 ) }
    dend_18 { pt3dadd( 22.2486, -7.14837, -4.49689, 0.29 ) }
    dend_18 { pt3dadd( 22.3585, -6.21477, -4.3375, 0.29 ) }
    dend_18 { pt3dadd( 22.4428, -5.53745, -4.24654, 0.29 ) }
    dend_18 { pt3dadd( 22.5955, -4.63231, -4.07584, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 17/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -50.5823, -60.821, -19.5768, 0.15 ) }
    dend_8 { pt3dadd( -51.0734, -61.1133, -19.125, 0.15 ) }
    dend_8 { pt3dadd( -51.831, -61.5977, -18.4537, 0.44 ) }
    dend_8 { pt3dadd( -51.9659, -61.696, -18.3454, 0.73 ) }
    dend_8 { pt3dadd( -52.7675, -62.3434, -17.7211, 0.15 ) }
    dend_8 { pt3dadd( -53.1488, -62.6635, -17.446, 0.15 ) }
    dend_8 { pt3dadd( -53.7125, -63.1351, -17.0797, 0.15 ) }
    dend_8 { pt3dadd( -54.0456, -63.446, -16.8844, 0.15 ) }
    dend_8 { pt3dadd( -54.663, -64.0503, -16.5937, 0.15 ) }
    dend_8 { pt3dadd( -54.8757, -64.2634, -16.4996, 0.37 ) }
    dend_8 { pt3dadd( -55.3563, -64.7403, -16.3342, 0.15 ) }
    dend_8 { pt3dadd( -55.8304, -65.2464, -16.1843, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -50.5823, -60.821, -19.5768, 0.15 ) }
    dend_7 { pt3dadd( -49.816, -61.2124, -19.7819, 0.15 ) }
    dend_7 { pt3dadd( -49.4202, -61.4185, -19.8792, 0.15 ) }
    dend_7 { pt3dadd( -48.8492, -61.7423, -20.0429, 0.15 ) }
    dend_7 { pt3dadd( -48.02, -62.2395, -20.2944, 0.15 ) }
    dend_7 { pt3dadd( -47.1483, -62.7949, -20.5636, 0.15 ) }
    dend_7 { pt3dadd( -46.4569, -63.2354, -20.7771, 0.22 ) }
    dend_7 { pt3dadd( -46.0662, -63.4586, -20.8974, 0.07 ) }
    dend_7 { pt3dadd( -45.4579, -63.8013, -21.0645, 0.37 ) }
    dend_7 { pt3dadd( -45.0208, -64.0639, -21.182, 0.37 ) }
    dend_7 { pt3dadd( -44.526, -64.4316, -21.347, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 40/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -45.5729, -32.0145, 1.77876, 0.22 ) }
    dend_56 { pt3dadd( -46.1701, -32.3841, 2.39307, 0.22 ) }
    dend_56 { pt3dadd( -46.5958, -32.6477, 2.83091, 0.51 ) }
    dend_56 { pt3dadd( -47.0422, -32.924, 3.29007, 0.22 ) }
    dend_56 { pt3dadd( -47.3241, -33.0985, 3.58009, 0.29 ) }
    dend_56 { pt3dadd( -47.9483, -33.4849, 4.22209, 0.15 ) }
    dend_56 { pt3dadd( -48.1849, -33.6314, 4.46552, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 47/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -45.5729, -32.0145, 1.77876, 0.29 ) }
    dend_55 { pt3dadd( -45.5156, -32.6099, 2.16896, 0.29 ) }
    dend_55 { pt3dadd( -45.5109, -33.0326, 2.43128, 0.29 ) }
    dend_55 { pt3dadd( -45.4926, -33.3982, 2.66206, 0.29 ) }
    dend_55 { pt3dadd( -45.461, -33.6856, 2.8477, 0.29 ) }
    dend_55 { pt3dadd( -45.3251, -34.3011, 3.21374, 0.29 ) }
    dend_55 { pt3dadd( -45.082, -35.0715, 3.72443, 0.22 ) }
    dend_55 { pt3dadd( -44.958, -35.3954, 3.95517, 0.22 ) }
    dend_55 { pt3dadd( -44.6794, -35.9876, 4.4131, 0.29 ) }
    dend_55 { pt3dadd( -44.5214, -36.2637, 4.6422, 0.29 ) }
    dend_55 { pt3dadd( -44.0577, -36.9753, 5.23148, 0.15 ) }
    dend_55 { pt3dadd( -43.5407, -37.7278, 5.80718, 0.15 ) }
    dend_55 { pt3dadd( -43.1952, -38.2509, 6.18, 0.37 ) }
    dend_55 { pt3dadd( -42.7187, -39.1255, 6.67278, 0.07 ) }
    dend_55 { pt3dadd( -42.558, -39.4679, 6.84969, 0.07 ) }
    dend_55 { pt3dadd( -42.2911, -40.1641, 7.17697, 0.22 ) }
    dend_55 { pt3dadd( -42.0968, -40.862, 7.45329, 0.22 ) }
    dend_55 { pt3dadd( -42.0, -41.3287, 7.54394, 0.22 ) }
    dend_55 { pt3dadd( -41.8627, -42.3549, 7.59416, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 66/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 16.0537, -48.2509, -11.0698, 0.29 ) }
    dend_21 { pt3dadd( 16.4159, -49.1187, -12.0796, 0.29 ) }
    dend_21 { pt3dadd( 16.6396, -49.7304, -12.8722, 0.29 ) }
    dend_21 { pt3dadd( 16.7676, -50.142, -13.4032, 0.29 ) }
    dend_21 { pt3dadd( 16.8424, -50.4483, -13.789, 0.29 ) }
    dend_21 { pt3dadd( 16.9526, -51.008, -14.4377, 0.81 ) }
    dend_21 { pt3dadd( 17.0792, -51.6925, -15.1786, 0.81 ) }
    dend_21 { pt3dadd( 17.21, -52.3487, -15.9074, 0.59 ) }
    dend_21 { pt3dadd( 17.3123, -52.7984, -16.4048, 0.44 ) }
    dend_21 { pt3dadd( 17.4151, -53.192, -16.8206, 0.44 ) }
    dend_21 { pt3dadd( 17.5412, -53.6971, -17.324, 0.44 ) }
    dend_21 { pt3dadd( 17.6145, -54.01, -17.6147, 0.44 ) }
    dend_21 { pt3dadd( 17.7579, -54.5472, -18.0834, 0.44 ) }
    dend_21 { pt3dadd( 17.9907, -55.2812, -18.7211, 0.88 ) }
    dend_21 { pt3dadd( 18.3487, -56.2931, -19.5829, 0.37 ) }
    dend_21 { pt3dadd( 18.5855, -56.93, -20.1014, 0.37 ) }
    dend_21 { pt3dadd( 18.8454, -57.7289, -20.7398, 0.37 ) }
    dend_21 { pt3dadd( 18.9821, -58.2774, -21.1387, 0.66 ) }
    dend_21 { pt3dadd( 19.1277, -59.1697, -21.7109, 0.66 ) }
    dend_21 { pt3dadd( 19.1896, -59.9657, -22.1639, 0.73 ) }
    dend_21 { pt3dadd( 19.2104, -60.3743, -22.3833, 0.44 ) }
    dend_21 { pt3dadd( 19.266, -61.2525, -22.8817, 0.22 ) }
    dend_21 { pt3dadd( 19.3206, -61.7166, -23.1705, 0.37 ) }
    dend_21 { pt3dadd( 19.4541, -62.7133, -23.8629, 0.88 ) }
    dend_21 { pt3dadd( 19.6156, -63.5133, -24.5532, 0.22 ) }
    dend_21 { pt3dadd( 19.7863, -63.9431, -25.0234, 0.22 ) }
    dend_21 { pt3dadd( 20.0048, -64.2414, -25.4622, 0.22 ) }
    dend_21 { pt3dadd( 20.6511, -64.7145, -26.4218, 0.22 ) }
    dend_21 { pt3dadd( 20.6511, -64.7145, -26.4218, 0.81 ) }
    dend_21 { pt3dadd( 21.5117, -64.9815, -27.4435, 0.44 ) }
    dend_21 { pt3dadd( 21.8302, -65.0881, -27.8245, 0.73 ) }
    dend_21 { pt3dadd( 22.3008, -65.3236, -28.4189, 0.73 ) }
    dend_21 { pt3dadd( 22.6397, -65.5929, -28.9082, 0.73 ) }
    dend_21 { pt3dadd( 22.9094, -65.9107, -29.3389, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_21 { pt3dadd( 23.2524, -66.3837, -30.0152, 0.51 ) }
    dend_21 { pt3dadd( 23.5261, -66.8014, -30.649, 0.15 ) }
    dend_21 { pt3dadd( 23.6367, -66.9878, -30.9484, 0.15 ) }
    dend_21 { pt3dadd( 23.7915, -67.2496, -31.3757, 0.15 ) }
    dend_21 { pt3dadd( 23.9296, -67.4615, -31.7528, 0.15 ) }
    dend_21 { pt3dadd( 24.7707, -68.3829, -33.6844, 0.51 ) }
    dend_21 { pt3dadd( 25.1336, -68.6493, -34.3306, 0.37 ) }
    dend_21 { pt3dadd( 25.3177, -68.7549, -34.6065, 0.22 ) }
    dend_21 { pt3dadd( 25.5449, -68.8893, -34.911, 0.22 ) }
    dend_21 { pt3dadd( 25.7555, -69.0163, -35.149, 0.22 ) }
    dend_21 { pt3dadd( 26.2107, -69.2815, -35.5331, 0.29 ) }
    dend_21 { pt3dadd( 26.659, -69.527, -35.7472, 0.51 ) }
    dend_21 { pt3dadd( 27.2426, -69.8268, -35.9579, 0.66 ) }
    dend_21 { pt3dadd( 28.0633, -70.2314, -36.2104, 0.07 ) }
    dend_21 { pt3dadd( 28.7004, -70.561, -36.3801, 0.07 ) }
    dend_21 { pt3dadd( 29.3643, -70.9537, -36.5343, 0.59 ) }
    dend_21 { pt3dadd( 30.2603, -71.5733, -36.7151, 0.29 ) }
    dend_21 { pt3dadd( 30.7872, -71.9809, -36.807, 0.29 ) }
    dend_21 { pt3dadd( 31.1607, -72.3113, -36.8613, 0.29 ) }
    dend_21 { pt3dadd( 31.7083, -72.8816, -36.9273, 0.07 ) }
    dend_21 { pt3dadd( 32.2534, -73.6162, -37.0202, 0.07 ) }
    dend_21 { pt3dadd( 32.7314, -74.459, -37.1414, 0.66 ) }
    dend_21 { pt3dadd( 32.9335, -74.9401, -37.2229, 0.66 ) }
    dend_21 { pt3dadd( 33.1005, -75.4318, -37.3079, 0.29 ) }
    dend_21 { pt3dadd( 33.3129, -76.1702, -37.4236, 0.59 ) }
    dend_21 { pt3dadd( 33.4611, -76.7525, -37.5166, 0.37 ) }
    dend_21 { pt3dadd( 33.6204, -77.4007, -37.6243, 0.07 ) }
    dend_21 { pt3dadd( 33.8656, -78.4317, -37.7955, 0.81 ) }
    dend_21 { pt3dadd( 34.0478, -79.1346, -37.8917, 0.37 ) }
    dend_21 { pt3dadd( 34.2943, -80.0282, -37.9905, 0.37 ) }
    dend_21 { pt3dadd( 34.5098, -80.785, -38.0789, 0.07 ) }
    dend_21 { pt3dadd( 34.7328, -81.5033, -38.1678, 0.07 ) }
    dend_21 { pt3dadd( 34.9556, -82.1905, -38.2615, 0.59 ) }
    dend_21 { pt3dadd( 35.3071, -83.3436, -38.4169, 0.15 ) }
    dend_21 { pt3dadd( 35.5253, -84.1776, -38.5193, 0.37 ) }
    dend_21 { pt3dadd( 35.8057, -85.5555, -38.662, 0.22 ) }
    dend_21 { pt3dadd( 35.8741, -86.3614, -38.7401, 0.22 ) }
    dend_21 { pt3dadd( 35.8502, -86.8299, -38.787, 0.22 ) }
    dend_21 { pt3dadd( 35.6811, -87.6091, -38.8644, 0.37 ) }
    dend_21 { pt3dadd( 35.4783, -88.0743, -38.9073, 0.07 ) }
    dend_21 { pt3dadd( 35.2056, -88.4658, -38.9298, 0.37 ) }
    dend_21 { pt3dadd( 34.2033, -89.4585, -38.9864, 0.07 ) }
    dend_21 { pt3dadd( 33.8549, -89.7553, -39.0065, 0.29 ) }
    dend_21 { pt3dadd( 33.4395, -90.0733, -39.0379, 0.07 ) }
    dend_21 { pt3dadd( 33.0798, -90.3218, -39.0778, 0.37 ) }
    dend_21 { pt3dadd( 32.4204, -90.7387, -39.1671, 0.07 ) }
    dend_21 { pt3dadd( 31.5661, -91.2466, -39.3067, 0.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 47/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 16.0537, -48.2509, -11.0698, 0.29 ) }
    dend_20 { pt3dadd( 15.6529, -48.6975, -11.5626, 0.29 ) }
    dend_20 { pt3dadd( 15.166, -49.1335, -12.0592, 0.15 ) }
    dend_20 { pt3dadd( 14.6198, -49.6104, -12.567, 0.15 ) }
    dend_20 { pt3dadd( 14.4068, -49.8113, -12.7696, 0.15 ) }
    dend_20 { pt3dadd( 14.14, -50.0731, -12.9977, 0.15 ) }
    dend_20 { pt3dadd( 13.6666, -50.5179, -13.3149, 0.15 ) }
    dend_20 { pt3dadd( 13.4249, -50.7091, -13.4133, 0.15 ) }
    dend_20 { pt3dadd( 13.1198, -50.9207, -13.5038, 0.22 ) }
    dend_20 { pt3dadd( 12.5621, -51.3348, -13.6684, 0.22 ) }
    dend_20 { pt3dadd( 12.0499, -51.7711, -13.838, 0.66 ) }
    dend_20 { pt3dadd( 11.4204, -52.3506, -14.069, 0.22 ) }
    dend_20 { pt3dadd( 10.9727, -52.7754, -14.2326, 0.73 ) }
    dend_20 { pt3dadd( 10.1768, -53.4696, -14.5483, 0.37 ) }
    dend_20 { pt3dadd( 9.34246, -54.0696, -14.9129, 0.15 ) }
    dend_20 { pt3dadd( 8.67878, -54.4886, -15.2199, 0.15 ) }
    dend_20 { pt3dadd( 8.31036, -54.7099, -15.4139, 0.15 ) }
    dend_20 { pt3dadd( 8.14108, -54.8144, -15.5224, 0.15 ) }
    dend_20 { pt3dadd( 7.60825, -55.1643, -15.9041, 0.29 ) }
    dend_20 { pt3dadd( 6.75591, -55.7134, -16.5282, 0.15 ) }
    dend_20 { pt3dadd( 6.5522, -55.8632, -16.7091, 0.15 ) }
    dend_20 { pt3dadd( 6.35345, -56.1073, -16.9648, 0.44 ) }
    dend_20 { pt3dadd( 6.07033, -57.1462, -17.8093, 0.66 ) }
    dend_20 { pt3dadd( 6.10186, -57.5098, -18.0588, 0.29 ) }
    dend_20 { pt3dadd( 6.21785, -57.8227, -18.2517, 0.29 ) }
    dend_20 { pt3dadd( 6.57457, -58.4509, -18.6206, 0.29 ) }
    dend_20 { pt3dadd( 7.08348, -59.1728, -19.0459, 0.07 ) }
    dend_20 { pt3dadd( 7.64485, -59.8507, -19.4287, 0.07 ) }
    dend_20 { pt3dadd( 8.26722, -60.5138, -19.772, 0.07 ) }
    dend_20 { pt3dadd( 8.75928, -61.0218, -20.0408, 0.37 ) }
    dend_20 { pt3dadd( 8.91225, -61.1676, -20.1208, 0.37 ) }
    dend_20 { pt3dadd( 9.17639, -61.3889, -20.2436, 0.07 ) }
    dend_20 { pt3dadd( 9.5264, -61.628, -20.3937, 0.15 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_39, dend_34, dend_29, dend_0, dend_59, dend_44, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_12, dend_1, dend_61, dend_60, dend_50, dend_45, dend_37, dend_36, dend_33, dend_32, dend_14, dend_13, dend_9, dend_2, dend_58, dend_51, dend_49, dend_46, dend_22, dend_15, dend_11, dend_10, dend_4, dend_3, dend_53, dend_52, dend_48, dend_47, dend_26, dend_23, dend_17, dend_16, dend_6, dend_5, dend_57, dend_54, dend_28, dend_27, dend_25, dend_24, dend_19, dend_18, dend_8, dend_7, dend_56, dend_55, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_40, dend_39, dend_34, dend_29, dend_0, dend_59, dend_44, dend_42, dend_41, dend_38, dend_35, dend_31, dend_30, dend_12, dend_1, dend_61, dend_60, dend_50, dend_45, dend_37, dend_36, dend_33, dend_32, dend_14, dend_13, dend_9, dend_2, dend_58, dend_51, dend_49, dend_46, dend_22, dend_15, dend_11, dend_10, dend_4, dend_3, dend_53, dend_52, dend_48, dend_47, dend_26, dend_23, dend_17, dend_16, dend_6, dend_5, dend_57, dend_54, dend_28, dend_27, dend_25, dend_24, dend_19, dend_18, dend_8, dend_7, dend_56, dend_55, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_41 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_38 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_2 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_58 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_52 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_57 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_21 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_34 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_29 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_12 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_59 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_44 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_14 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_35 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_15 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_13 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_60 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_42 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_50 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_45 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_22 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_26 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_51 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_23 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_17 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_37 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_28 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_61 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_36 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_27 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_24 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_53 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_49 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_25 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_54 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_32 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_20 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_46 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_56 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_33 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_47 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_4 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_3 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_55 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_48 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_10 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_7 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_5 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_11 OneSecGrp_SectionRef_38.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_32 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_39 nseg = 3
    dend_41 nseg = 3
    dend_38 nseg = 3
    dend_31 nseg = 3
    dend_30 nseg = 3
    dend_9 nseg = 3
    dend_2 nseg = 3
    dend_58 nseg = 3
    dend_52 nseg = 5
    dend_57 nseg = 3
    dend_18 nseg = 3
    dend_21 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCDA_886ddf503d_0_0


