// Cell: bNAC219_L6_BP_6f14cec977_0_0
/*
{
  "id" : "bNAC219_L6_BP_6f14cec977_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-3.21164, 8.41164, 2.86859, 0.83", "-6.23129, 10.7521, 3.324, 1.11", "-8.0117, 12.1312, 3.56089, 0.83", "-9.74143, 13.4593, 3.77315, 0.83", "-10.7656, 14.2167, 3.88946, 1.11", "-13.9727, 16.5833, 4.26223, 1.11", "-19.7089, 20.635, 4.92118, 0.83", "-21.7755, 22.0391, 5.13878, 0.83", "-23.412, 23.1179, 5.27394, 0.83", "-25.0078, 24.1871, 5.39094, 0.83", "-26.3069, 25.0683, 5.45406, 0.55", "-27.2833, 25.6649, 5.51813, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.64791, 6.26075, -6.23804, 0.55", "7.38759, 6.8534, -6.84986, 0.55", "8.97733, 7.003, -7.65943, 0.83", "11.4934, 7.16222, -9.16326, 0.55", "12.7079, 7.23907, -9.88919, 1.38", "15.6942, 7.42804, -11.6741, 0.55", "16.9661, 7.36405, -12.5257, 0.83", "23.5454, 6.19051, -17.3108, 0.55", "24.182, 6.0327, -17.8372, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.682732, -10.3644, 3.18856, 1.11", "-0.728422, -14.3957, 4.63376, 1.11", "-0.74703, -16.0375, 5.22234, 0.83", "-0.771751, -18.2187, 6.00429, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.86793, 9.04749, -1.34419, 1.11", "0.970279, 10.3254, -1.33943, 1.11", "1.14198, 12.41, -1.25529, 1.38", "1.15382, 12.526, -1.2488, 1.38", "1.38816, 13.9581, -1.16573, 0.83", "1.70801, 15.4696, -1.0055, 0.83", "2.24241, 17.1691, -0.638077, 0.83", "2.53577, 17.8102, -0.42998, 0.83", "2.81736, 18.2716, -0.240583, 1.11", "3.62253, 19.3912, 0.236875, 0.55", "4.55688, 20.5559, 0.81004, 0.83", "5.75269, 21.7449, 1.44062, 0.55", "6.35243, 22.2348, 1.71785, 0.83", "7.19812, 22.8968, 2.16272, 0.55", "8.25553, 23.7395, 2.7775, 0.55", "9.74959, 25.0114, 3.73444, 0.55", "11.3983, 26.4675, 4.79155, 0.55", "12.4598, 27.4126, 5.60531, 0.55", "13.7867, 28.6078, 6.77841, 0.55", "14.0657, 28.8469, 7.04758, 0.83", "14.8101, 29.4785, 7.81286, 0.55", "15.4284, 29.9694, 8.40863, 0.83", "16.8662, 31.3206, 9.82688, 0.55", "17.3884, 31.8144, 10.2269, 0.83", "17.8569, 32.1753, 10.4817, 0.55", "18.31, 32.4841, 10.6636, 0.83", "19.297, 33.0528, 10.9691, 0.83", "20.5878, 33.8294, 11.2648, 0.83", "21.3697, 34.3457, 11.3655, 0.55", "21.9684, 34.7954, 11.4457, 0.55", "23.5339, 35.9568, 11.6333, 0.83", "24.5392, 36.7015, 11.7157, 0.55", "26.0555, 37.791, 11.7812, 0.55", "27.4338, 38.7005, 11.7876, 0.55", "28.6604, 39.4687, 11.7611, 0.55", "30.1977, 40.3651, 11.6589, 0.55", "31.1288, 40.7976, 11.5662, 0.55", "31.751, 41.0371, 11.428, 0.55", "32.5617, 41.2032, 11.1739, 0.55", "33.7493, 41.2494, 10.6932, 0.55", "34.4818, 41.18, 10.3635, 0.55", "35.5629, 41.0472, 9.96039, 0.55", "37.653, 40.8614, 9.38396, 0.55", "39.3137, 40.7931, 9.05139, 0.55", "41.0926, 40.8052, 8.80534, 0.55", "42.2481, 40.8518, 8.73775, 0.55", "45.2888, 41.2419, 8.75802, 0.55", "47.1124, 41.6079, 8.90251, 0.55", "48.5012, 41.9685, 9.13433, 0.55", "49.3545, 42.3214, 9.30667, 0.55", "50.3475, 42.8568, 9.50225, 0.55", "52.0131, 43.9239, 9.69358, 0.55", "52.3882, 44.1819, 9.68763, 0.55", "53.4523, 44.8698, 9.60222, 0.55", "54.4334, 45.6081, 9.52047, 0.83", "54.9678, 46.0182, 9.46765, 0.55", "55.7669, 46.7263, 9.35802, 0.83", "60.137, 50.5022, 9.85849, 0.83", "63.9342, 54.8797, 10.0154, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-27.2833, 25.6649, 5.51813, 0.55", "-29.4358, 26.6966, 4.48899, 0.55", "-31.7764, 27.8184, 3.36991, 0.55", "-34.6011, 29.1722, 2.01942, 0.55", "-36.9334, 30.29, 0.904279, 0.83", "-38.8879, 31.2268, -0.030204, 0.55", "-42.5158, 32.9655, -1.76474, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-27.2833, 25.6649, 5.51813, 0.55", "-29.3079, 26.0846, 5.18483, 0.55", "-31.4751, 26.449, 5.04223, 0.55", "-33.9359, 26.8544, 4.9404, 0.55", "-37.5187, 27.3816, 5.11825, 0.55", "-40.5294, 27.722, 5.47417, 0.55", "-43.695, 28.0219, 5.97849, 0.55", "-46.7751, 28.085, 6.78039, 0.55", "-49.443, 27.8682, 7.70806, 0.55", "-52.7888, 27.3469, 9.19967, 0.55", "-54.2555, 27.0032, 10.0398, 0.55", "-55.8437, 26.6113, 11.0126, 0.55", "-58.6399, 25.723, 12.5924, 0.55", "-60.1154, 25.2695, 13.2063, 0.55", "-61.6607, 24.7487, 13.8375, 0.55", "-63.4881, 24.1639, 14.4075, 0.55", "-65.4707, 23.5724, 14.9761, 0.55", "-68.297, 22.7253, 15.7265, 0.55", "-72.0511, 21.8639, 16.4106, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "24.182, 6.0327, -17.8372, 0.55", "28.9658, 7.36996, -18.8632, 0.55", "31.7288, 7.97481, -19.8449, 0.55", "34.4586, 8.44821, -20.8531, 0.55", "36.3253, 8.69672, -21.5409, 0.55", "39.0548, 8.99645, -22.5248, 0.55", "44.7203, 9.50706, -24.7431, 0.55", "51.1509, 10.0427, -27.6897, 0.55", "54.2745, 10.1054, -29.3344, 0.55", "55.9489, 10.0971, -30.3251, 0.55", "57.7851, 10.0963, -31.4861, 0.55", "61.0637, 10.0034, -33.5447, 0.55", "62.256, 9.89937, -34.3316, 0.55", "67.3033, 9.58252, -38.0535, 0.55", "70.8763, 9.4138, -40.9528, 0.55", "72.933, 9.35633, -42.6789, 0.55", "74.9845, 9.28091, -44.3987, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "24.182, 6.0327, -17.8372, 0.83", "26.8149, 7.5283, -17.8204, 0.83", "28.3193, 8.38567, -17.8785, 0.55", "30.5339, 9.70625, -18.1469, 0.83", "32.0238, 10.6342, -18.3696, 0.55", "34.0808, 11.9663, -18.6439, 0.83", "36.5568, 13.6106, -18.8812, 0.55", "37.7997, 14.3447, -18.9551, 0.55", "40.6484, 15.6406, -18.9478, 0.83", "43.2264, 16.4905, -18.626, 0.55", "44.668, 16.943, -18.3099, 0.83", "46.8344, 17.6564, -17.607, 0.55", "49.951, 18.714, -16.1998, 0.55", "54.2729, 19.95, -14.0379, 0.55", "58.3908, 20.9662, -11.7019, 0.55", "61.6523, 21.7336, -9.79495, 0.55", "67.0305, 23.022, -6.62173, 0.55", "70.9697, 24.0718, -4.20784, 0.55", "73.3552, 24.8981, -2.65248, 0.55", "77.7632, 26.8618, 0.277401, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.771751, -18.2187, 6.00429, 0.83", "-0.923832, -21.1392, 5.87714, 0.83", "-1.072, -23.9847, 5.75326, 0.83", "-1.23744, -27.1616, 5.61495, 0.83", "-1.32382, -28.8206, 5.54272, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.771751, -18.2187, 6.00429, 0.55", "-0.289891, -19.6464, 7.05605, 0.55", "0.117117, -21.3998, 8.40675, 0.55", "0.288479, -23.7085, 10.2411, 0.55", "0.28985, -24.6078, 10.9735, 0.83", "0.0606306, -26.9086, 13.0888, 0.55", "-0.157235, -28.0997, 14.1961, 0.55", "-0.637904, -30.4173, 16.4438, 0.83", "-1.10292, -32.1411, 18.2141, 0.55", "-1.61092, -33.5669, 19.6424, 0.55", "-2.62964, -36.2691, 22.2938, 0.55", "-3.43736, -38.4229, 24.3821, 0.55", "-4.05197, -40.1484, 26.0831, 0.55", "-4.59935, -41.9774, 27.8396, 0.28", "-4.76112, -42.7374, 28.5471, 0.55", "-5.01701, -44.1402, 29.7773, 0.28", "-5.09098, -46.3218, 31.3812, 0.55", "-7.12309, -53.6319, 36.971, 0.55", "-9.40671, -60.3941, 43.125, 0.55", "-11.3995, -65.9451, 50.4755, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-42.5158, 32.9655, -1.76474, 0.55", "-45.5232, 33.0899, -0.207489, 0.55", "-46.7872, 33.0653, 0.599598, 0.83", "-48.2641, 32.9525, 1.73596, 0.55", "-49.3945, 32.86, 2.70814, 0.83", "-52.36, 32.7241, 5.23513, 0.55", "-53.4834, 32.6908, 6.20182, 0.28", "-55.3578, 32.6471, 7.97307, 0.55", "-57.8731, 32.604, 10.3387, 0.55", "-59.7827, 32.5767, 12.0472, 0.55", "-62.3334, 32.5442, 14.2479, 0.28", "-62.9962, 32.5452, 14.7398, 0.55", "-64.3682, 32.5662, 15.7071, 0.28", "-65.3003, 32.6095, 16.2776, 0.55", "-67.2024, 32.6937, 17.2764, 0.28", "-68.3171, 32.6849, 17.8012, 0.55", "-70.2797, 32.5252, 18.7357, 0.28", "-71.5975, 32.4117, 19.3163, 0.55", "-79.6169, 30.8812, 26.4073, 0.55", "-86.9184, 28.3242, 33.9628, 0.55", "-93.9069, 24.7668, 41.4086, 0.55", "-100.812, 20.0124, 48.2387, 0.55", "-106.558, 15.6529, 56.2953, 0.55", "-113.103, 11.6904, 63.9368, 0.55", "-119.831, 9.44307, 72.0994, 0.55", "-126.498, 6.35917, 80.0353, 0.55", "-132.99, 3.97137, 88.3466, 0.55", "-138.99, 1.42037, 96.9744, 0.55", "-143.908, -2.33283, 105.843, 0.55", "-148.957, -5.1108, 114.993, 0.55", "-154.11, -8.93372, 123.698, 0.55", "-158.01, -13.2073, 132.833, 0.55", "-160.157, -16.7628, 142.817, 0.55", "-162.169, -22.2246, 151.931, 0.55", "-162.639, -27.8549, 161.151, 0.55", "-163.697, -33.0661, 170.567, 0.55", "-165.928, -37.5434, 180.154, 0.55", "-170.423, -40.3852, 189.57, 0.55", "-173.96, -44.3962, 198.969, 0.55", "-175.558, -46.6474, 209.424, 0.55", "-178.885, -48.1266, 219.606, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-42.5158, 32.9655, -1.76474, 0.55", "-44.8456, 33.5205, -4.12712, 0.55", "-46.7249, 34.1437, -6.82806, 0.55", "-48.5205, 34.9909, -9.73043, 0.55", "-49.6449, 35.5214, -11.5478, 0.55", "-51.696, 36.489, -14.8631, 0.83", "-53.1966, 37.197, -17.2885, 0.55", "-54.9926, 38.1337, -20.877, 0.83", "-55.727, 38.8332, -22.9426, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-72.0511, 21.8639, 16.4106, 0.28", "-73.1595, 19.8687, 15.8548, 0.28", "-73.687, 19.0153, 15.5396, 0.28", "-74.3708, 17.8107, 15.0519, 0.55", "-74.9345, 16.7508, 14.6345, 0.28", "-75.7665, 15.1349, 14.0208, 0.55", "-78.0826, 10.3803, 12.3035, 0.28", "-78.8323, 8.71977, 11.5691, 0.55", "-79.9646, 6.16714, 10.3509, 0.28", "-80.6118, 4.64387, 9.55333, 0.55", "-81.0579, 3.5955, 8.97772, 0.28", "-81.5666, 2.39169, 8.32736, 0.55", "-83.1021, -1.6323, 6.26708, 0.28", "-83.5842, -2.84708, 5.5988, 0.55", "-84.4241, -4.69339, 4.37391, 0.28", "-85.1182, -5.86878, 3.47417, 0.28", "-85.7464, -6.65072, 2.83289, 0.55", "-87.9511, -8.84413, 1.07021, 0.28", "-88.9798, -9.7317, 0.367884, 0.55", "-91.495, -11.7441, -1.37471, 0.28", "-94.0156, -13.5196, -2.98168, 0.28", "-96.76, -15.2048, -4.62925, 0.28", "-98.0209, -15.8368, -5.27128, 0.55", "-104.059, -23.0618, -9.7114, 0.55", "-110.868, -30.5029, -12.291, 0.55", "-117.474, -37.4469, -16.3556, 0.55", "-124.215, -43.6909, -21.2498, 0.55", "-131.005, -49.1335, -26.9642, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-72.0511, 21.8639, 16.4106, 0.55", "-72.7217, 21.8392, 16.4135, 0.55", "-74.6418, 21.7118, 16.6559, 0.55", "-75.3687, 21.6372, 16.7786, 0.55", "-77.0837, 21.4071, 17.0788, 0.55", "-79.7053, 21.1086, 17.4285, 0.55", "-81.0629, 20.9987, 17.598, 0.28", "-83.1729, 20.7941, 17.8115, 0.55", "-84.735, 20.6254, 17.9091, 0.55", "-85.395, 20.5496, 17.9506, 0.28", "-89.3534, 20.0947, 18.194, 0.55", "-91.1946, 19.8287, 18.1802, 0.28", "-93.6615, 19.496, 18.0213, 0.28", "-95.772, 19.2694, 17.7734, 0.55", "-104.159, 19.1086, 18.8282, 0.55", "-112.381, 18.5058, 20.7018, 0.55", "-120.288, 16.8386, 23.1881, 0.55", "-127.979, 16.3685, 26.6672, 0.55", "-134.801, 15.203, 31.5237, 0.55", "-140.515, 14.1268, 37.6624, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "74.9845, 9.28091, -44.3987, 0.55", "77.9654, 9.98362, -47.0492, 0.55", "78.9187, 10.1473, -47.9321, 0.55", "80.1181, 10.319, -49.0109, 0.55", "82.3053, 10.573, -51.0861, 0.55", "84.6083, 10.7315, -53.277, 0.55", "85.7487, 10.7326, -54.2932, 0.83", "86.7027, 10.6519, -55.1767, 0.55", "87.4306, 10.516, -55.8868, 0.83", "89.233, 9.93158, -57.6364, 0.55", "90.7407, 9.32533, -59.0461, 0.55", "92.4722, 8.64167, -60.5891, 0.55", "94.393, 7.9176, -62.3575, 0.55", "95.6881, 7.39636, -63.5631, 0.55", "97.1524, 6.79142, -64.9629, 0.55", "98.4152, 6.28288, -66.2627, 0.55", "99.2034, 5.9966, -67.1941, 0.55", "100.255, 5.35903, -69.0828, 0.55", "100.846, 4.90958, -70.2518, 0.55", "101.416, 4.20081, -71.7827, 0.55", "102.259, 2.89659, -74.3438, 0.55", "102.442, 2.57739, -74.9137, 0.28", "104.761, -1.36886, -81.8136, 0.28", "105.507, -2.49978, -83.8438, 0.83", "108.381, -6.61029, -90.9969, 0.83", "109.843, -8.64371, -94.2705, 0.83", "110.525, -9.51128, -95.5756, 0.55", "111.278, -10.3471, -96.8449, 0.55", "113.212, -11.8608, -99.1723, 0.55", "115.223, -13.1581, -101.207, 0.28", "115.778, -13.2678, -101.285, 0.55", "116.96, -13.306, -101.088, 0.28", "117.677, -13.2498, -100.882, 0.55", "118.422, -13.1812, -100.605, 0.28", "119.306, -13.0441, -100.246, 0.55", "120.625, -12.8159, -99.8672, 0.28", "121.691, -12.6746, -99.5868, 0.55", "122.864, -12.473, -99.3922, 0.28", "124.466, -12.2377, -99.2663, 0.55", "126.262, -11.9677, -99.2426, 0.55", "127.845, -11.7449, -99.3289, 0.28", "130.039, -11.4549, -99.5711, 0.55", "133.838, -10.9788, -100.412, 0.55", "135.514, -10.7487, -101.005, 0.55", "136.233, -10.6452, -101.344, 0.83", "137.61, -10.4777, -102.113, 0.55", "138.563, -10.3432, -102.717, 0.83", "141.115, -9.92652, -104.391, 0.55", "142.695, -9.78691, -105.418, 0.28", "143.363, -9.74418, -105.766, 0.55", "145.209, -9.72373, -106.474, 0.28", "145.864, -9.75877, -106.664, 0.55", "147.215, -9.84632, -106.835, 0.28", "148.598, -9.98642, -106.748, 0.55", "151.389, -10.2602, -106.075, 0.28", "152.677, -10.3973, -105.621, 0.55", "154.605, -10.6708, -104.818, 0.28", "157.034, -10.9818, -103.726, 0.55", "158.785, -11.1767, -102.919, 0.55", "161.8, -11.4133, -101.502, 0.28", "163.033, -11.4886, -101.032, 0.55", "165.154, -11.5771, -100.478, 0.28", "167.248, -11.5611, -100.111, 0.55", "168.383, -11.4804, -100.101, 0.28", "169.391, -11.3028, -100.212, 0.55", "172.221, -10.7235, -100.838, 0.28", "174.22, -10.1858, -101.362, 0.28", "175.937, -9.60367, -101.884, 0.55", "177.828, -8.93996, -102.574, 0.28", "178.298, -8.73816, -102.741, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "74.9845, 9.28091, -44.3987, 0.55", "75.5071, 7.86402, -45.1815, 0.55", "75.8447, 6.65857, -45.7615, 0.28", "76.1516, 5.56087, -46.2014, 0.55", "76.9182, 3.24629, -47.1554, 0.28", "76.9628, 3.09866, -47.2356, 0.55", "77.2181, 2.32319, -47.7175, 0.28", "77.3743, 1.66778, -48.2143, 0.55", "77.5018, 0.973836, -48.8069, 0.28", "77.6505, 0.0212346, -49.6561, 0.55", "78.0219, -2.36785, -51.7464, 0.55", "78.3379, -4.55075, -53.6876, 0.55", "78.5745, -6.29752, -55.2413, 0.55", "78.7778, -8.01588, -56.7402, 0.55", "78.8288, -8.45873, -57.1099, 0.28", "78.8951, -8.92763, -57.4683, 0.55", "79.0425, -9.56641, -57.9085, 0.28", "79.4151, -10.6914, -58.598, 0.55", "80.3, -12.8012, -59.5894, 0.55", "80.7841, -13.9272, -60.0225, 0.28", "81.2118, -15.083, -60.5121, 0.55", "81.6963, -16.7194, -61.2575, 0.28", "82.0065, -18.0517, -61.8889, 0.55", "82.3894, -20.0533, -62.8365, 0.28", "82.799, -22.1181, -63.7557, 0.55", "83.3563, -25.1223, -65.1156, 0.28", "83.6203, -26.7279, -65.8454, 0.55", "83.8656, -28.3759, -66.6289, 0.28", "84.0685, -29.8351, -67.4045, 0.28", "84.3832, -31.6653, -68.5235, 0.55", "84.7841, -33.3463, -69.5211, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "77.7632, 26.8618, 0.277401, 0.55", "80.7155, 26.2124, 0.568309, 0.55", "82.8463, 25.7064, 0.561935, 0.55", "87.4885, 24.6034, 0.295685, 0.55", "89.5585, 24.1088, -0.0179939, 0.55", "91.8121, 23.6446, -0.463274, 0.55", "94.8249, 23.1262, -1.26254, 0.55", "97.9725, 22.5676, -2.42833, 0.55", "99.6076, 22.2985, -3.23661, 0.55", "102.893, 21.8626, -5.34402, 0.55", "104.403, 21.6869, -6.36135, 0.55", "107.928, 21.2275, -8.8573, 0.55", "110.309, 20.8107, -10.5513, 0.55", "112.067, 20.4721, -11.7172, 0.83", "114.871, 19.8134, -13.573, 0.55", "117.615, 19.0001, -15.3125, 0.83", "119.941, 18.176, -16.7283, 0.55", "122.024, 17.447, -17.8668, 0.55", "123.219, 17.0704, -18.4329, 0.83", "126.021, 16.1632, -19.6, 0.28", "127.427, 15.7498, -20.0748, 0.28", "128.774, 15.2785, -20.6274, 0.28", "130.233, 14.811, -21.2218, 0.28", "132.567, 14.1204, -22.2117, 0.28", "133.51, 13.8476, -22.5784, 0.55", "135.785, 13.164, -23.2231, 0.55", "139.895, 11.8427, -24.1836, 0.55", "141.035, 11.4342, -24.4063, 0.55", "142.053, 11.0249, -24.5691, 0.83", "144.287, 10.1616, -24.7256, 0.55", "146.231, 9.40735, -24.8297, 0.55", "148.07, 8.70049, -24.9176, 0.55", "149.489, 8.13791, -25.0319, 0.55", "151.715, 7.11453, -25.362, 0.55", "154.307, 5.70881, -25.9556, 0.55", "158.269, 3.12702, -27.2826, 0.55", "160.402, 1.40846, -28.2381, 0.55", "162.212, -0.395974, -29.249, 0.28", "162.738, -1.05585, -29.6167, 0.55", "163.857, -2.89424, -30.5951, 0.28", "164.77, -4.95259, -31.6169, 0.55", "165.577, -7.55727, -32.6507, 0.55", "166.134, -9.28963, -33.2502, 0.28", "166.343, -9.90912, -33.4332, 0.55", "166.892, -11.454, -33.8698, 0.28", "167.654, -13.4769, -34.3946, 0.55", "169.688, -18.3864, -35.559, 0.55", "170.76, -20.874, -36.0996, 0.55", "171.759, -23.159, -36.5771, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "77.7632, 26.8618, 0.277401, 0.55", "79.8109, 26.6887, 1.66866, 0.55", "80.4661, 26.6393, 2.08057, 0.55", "82.8993, 26.3704, 3.4883, 0.55", "85.6192, 26.1109, 5.11074, 0.55", "89.1084, 25.7492, 7.27522, 0.55", "90.072, 25.6519, 7.8673, 0.55", "91.7977, 25.4191, 8.89735, 0.55", "93.6885, 25.2216, 9.97004, 0.55", "95.8851, 25.0728, 11.1394, 0.55", "97.9564, 24.9584, 12.2556, 0.55", "99.0925, 24.9565, 12.8311, 0.55", "100.428, 24.9908, 13.5141, 0.55", "102.08, 25.085, 14.343, 0.83", "104.775, 25.3005, 15.4336, 0.55", "106.554, 25.3974, 16.0575, 0.83", "109.016, 25.4454, 16.8155, 0.55", "109.77, 25.4239, 17.0277, 0.55", "112.104, 25.2588, 17.6106, 0.55", "116.264, 24.7641, 18.4314, 0.55", "119.301, 24.2576, 18.923, 0.55", "121.704, 23.7362, 19.3381, 0.55", "124.153, 23.0611, 19.8091, 0.55", "124.667, 22.9052, 19.9071, 0.28", "125.709, 22.5497, 20.093, 0.83", "129.986, 21.0239, 20.8642, 0.55", "132.976, 19.974, 21.3486, 0.55", "135.435, 19.157, 21.8217, 0.55", "136.904, 18.6611, 22.1169, 0.83", "138.062, 18.2863, 22.3555, 0.28", "139.111, 17.9504, 22.5628, 0.55", "147.414, 16.9557, 25.8244, 0.55", "156.072, 15.0192, 27.192, 0.55", "164.753, 14.0276, 29.2468, 0.55", "172.555, 11.3922, 32.8168, 0.55", "179.789, 7.52736, 36.4644, 0.55", "187.51, 3.03446, 37.3368, 0.55", "194.988, -1.8663, 36.5457, 0.55", "203.289, -5.15028, 35.6089, 0.55", "211.519, -8.71145, 35.2182, 0.55", "220.11, -11.2133, 34.514, 0.55", "228.74, -13.6275, 35.0275, 0.55", "236.772, -17.5898, 35.6199, 0.55", "245.136, -20.2764, 37.4639, 0.55", "253.258, -21.9996, 40.8729, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.32382, -28.8206, 5.54272, 1.38", "1.15689, -31.2897, 5.06441, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.32382, -28.8206, 5.54272, 0.55", "-2.89998, -31.1634, 5.01673, 0.55", "-4.61646, -34.1449, 4.4483, 0.55", "-5.98166, -36.1349, 4.01241, 0.55", "-7.05871, -37.8002, 3.44538, 0.55", "-9.32242, -41.2613, 1.93995, 0.55", "-10.8974, -43.5799, 0.826628, 0.55", "-12.2721, -45.6579, -0.228421, 0.55", "-15.8237, -50.733, -2.94286, 0.55", "-20.1214, -56.6229, -6.16824, 0.55", "-23.4293, -61.0909, -8.74085, 0.55", "-25.5209, -64.0196, -10.4187, 0.55", "-27.9143, -67.5233, -12.3303, 0.55", "-30.9319, -72.5117, -14.6882, 0.55", "-32.675, -76.0159, -16.0025, 0.55", "-34.8691, -81.022, -17.3595, 0.55", "-36.6057, -85.685, -18.3338, 0.55", "-38.3026, -91.4667, -19.2483, 0.55", "-39.8485, -98.2179, -19.9814, 0.55", "-40.6097, -103.344, -20.2539, 0.55", "-40.8866, -105.883, -20.1754, 0.55", "-41.319, -111.822, -19.5646, 0.55", "-41.6825, -117.371, -18.823, 0.55", "-41.9259, -122.939, -17.5892, 0.55", "-42.1579, -126.135, -16.7299, 0.55", "-42.9465, -136.008, -13.7117, 0.55", "-43.0136, -136.735, -13.4792, 0.55", "-43.3842, -141.183, -11.9236, 0.55", "-44.46, -149.159, -9.09715, 0.55", "-44.7787, -151.829, -8.30565, 0.55", "-45.1223, -156.014, -7.77309, 0.55", "-45.0883, -157.569, -7.89273, 0.55", "-44.4116, -162.822, -9.13716, 0.55", "-43.5455, -166.216, -10.5464, 0.55", "-41.6423, -171.622, -13.7673, 0.55", "-38.8842, -178.221, -18.0926, 0.28", "-38.1009, -179.852, -19.3597, 0.55", "-36.8291, -182.326, -21.4825, 0.28", "-36.6336, -182.699, -21.8222, 0.55", "-35.6371, -184.742, -23.5227, 0.28", "-35.3994, -185.438, -23.967, 0.55", "-34.4842, -189.056, -25.6522, 0.28", "-34.2227, -190.29, -26.2277, 0.55", "-33.579, -193.862, -27.7185, 0.28", "-33.3731, -194.985, -28.1823, 0.55", "-32.7144, -198.865, -29.7346, 0.28", "-32.3995, -200.649, -30.4538, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.3995, -65.9451, 50.4755, 0.55", "-13.8758, -70.9263, 56.2784, 0.55", "-16.7853, -75.0455, 62.5381, 0.55", "-19.7695, -79.6865, 68.3839, 0.55", "-22.9249, -84.3028, 74.1589, 0.55", "-25.77, -89.9483, 79.1239, 0.55", "-28.3467, -95.4109, 84.4284, 0.55", "-30.9773, -102.143, 87.9453, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.3995, -65.9451, 50.4755, 0.55", "-10.8976, -73.5941, 57.6207, 0.55", "-10.0587, -82.3939, 63.2486, 0.55", "-10.9064, -91.1912, 68.879, 0.55", "-12.3991, -100.449, 73.5553, 0.55", "-13.465, -109.689, 78.3819, 0.55", "-14.4201, -118.569, 83.8645, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-55.727, 38.8332, -22.9426, 0.83", "-55.4753, 40.3831, -24.2388, 0.83", "-54.9795, 44.0863, -27.1158, 0.55", "-54.7757, 45.6718, -28.2368, 0.83", "-54.5625, 47.3582, -29.3301, 0.55", "-54.3661, 49.0704, -30.2304, 0.55", "-54.2714, 49.9212, -30.5796, 0.28", "-54.2543, 50.467, -30.6821, 0.55", "-54.1812, 52.2589, -30.6446, 0.28", "-54.1352, 53.0243, -30.589, 0.55", "-54.0166, 55.6697, -30.2932, 0.28", "-53.9818, 57.7515, -29.9943, 0.55", "-54.0889, 60.9703, -29.4426, 0.28", "-54.2858, 63.7799, -28.9129, 0.28", "-54.4893, 65.3361, -28.5946, 0.55", "-54.8442, 67.1642, -28.2273, 0.28", "-55.0728, 68.0265, -28.0452, 0.55", "-55.7151, 70.0473, -27.723, 0.28", "-56.2284, 71.3878, -27.5905, 0.28", "-56.7577, 72.7041, -27.5052, 0.28", "-57.0097, 73.4041, -27.4602, 0.55", "-57.8681, 76.2679, -27.3319, 0.28", "-58.7656, 79.6848, -27.2324, 0.55", "-59.0578, 80.8681, -27.201, 0.55", "-59.372, 82.0488, -27.1455, 0.55", "-60.1689, 84.54, -27.0826, 0.55", "-60.795, 86.1618, -27.0883, 0.28", "-61.1036, 86.7647, -27.1064, 0.55", "-62.0612, 88.3736, -27.1309, 0.28", "-63.1477, 90.0816, -27.2372, 0.55", "-64.9412, 92.5075, -27.5171, 0.28", "-65.8036, 93.504, -27.6816, 0.28", "-67.1817, 94.8729, -28.0833, 0.55", "-68.7142, 96.2899, -28.5968, 0.28", "-68.9906, 96.5073, -28.6938, 0.55", "-69.979, 97.185, -29.0471, 0.28", "-73.3777, 99.3183, -30.2226, 0.55", "-78.0585, 101.9, -32.0651, 0.28", "-78.915, 102.328, -32.4606, 0.55", "-81.2564, 103.419, -33.5935, 0.28", "-82.2365, 103.866, -34.0966, 0.28", "-83.0835, 104.237, -34.5761, 0.55", "-85.5239, 105.047, -36.1963, 0.28", "-87.2378, 105.434, -37.2878, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-55.727, 38.8332, -22.9426, 0.55", "-56.0165, 39.9973, -23.0291, 0.55", "-56.2076, 40.6782, -23.016, 0.28", "-56.4477, 41.1451, -22.8895, 0.55", "-56.9991, 42.2172, -22.5989, 0.28", "-57.3864, 42.9702, -22.3949, 0.55", "-58.1004, 44.3585, -22.0187, 0.28", "-58.5683, 45.0837, -21.6826, 0.55", "-60.2687, 46.6966, -20.2376, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-131.005, -49.1335, -26.9642, 0.55", "-137.263, -57.4014, -30.5554, 0.55", "-141.759, -66.5349, -34.6526, 0.55", "-145.135, -74.9543, -40.8282, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-131.005, -49.1335, -26.9642, 0.55", "-135.734, -54.0027, -31.2472, 0.55", "-139.628, -58.806, -36.364, 0.55", "-143.194, -63.6972, -41.6346, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-140.515, 14.1268, 37.6624, 0.55", "-149.78, 13.269, 42.4129, 0.55", "-159.361, 13.9717, 46.521, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-140.515, 14.1268, 37.6624, 0.55", "-153.634, 12.2449, 40.6858, 0.55", "-166.784, 12.5746, 44.1174, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "84.7841, -33.3463, -69.5211, 0.28", "92.3149, -38.3372, -80.1585, 0.28", "93.0616, -38.8691, -81.0865, 0.55", "94.3223, -39.7671, -82.6533, 0.28", "95.3838, -40.5233, -83.9725, 0.28", "96.789, -41.5242, -85.7188, 0.55", "98.6415, -42.8438, -88.0212, 0.55", "101.068, -44.6873, -88.9506, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "84.7841, -33.3463, -69.5211, 0.55", "85.49, -34.4201, -70.4354, 0.55", "85.7202, -34.9119, -70.8419, 0.28", "86.0721, -35.7623, -71.5561, 0.55", "86.8474, -37.6355, -73.1292, 0.28", "87.3847, -38.9337, -74.2194, 0.55", "88.295, -41.1332, -76.0666, 0.28", "89.3374, -43.8538, -78.5272, 0.28", "89.7666, -45.1138, -79.6827, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "171.759, -23.159, -36.5771, 0.28", "173.846, -26.2308, -36.2213, 0.28", "176.498, -30.3156, -35.4077, 0.28", "178.18, -32.9748, -34.7703, 0.55", "179.205, -34.4495, -34.3497, 0.28", "179.75, -35.2439, -34.1153, 0.28", "182.449, -39.162, -33.0195, 0.55", "183.079, -40.042, -32.6627, 0.28", "184.572, -42.3718, -31.5592, 0.55", "185.839, -44.391, -30.6823, 0.28", "186.947, -46.0312, -30.0042, 0.55", "188.237, -47.9839, -29.314, 0.55", "190.266, -51.0577, -28.6076, 0.55", "190.753, -51.8098, -28.4613, 0.55", "192.488, -54.6155, -27.9436, 0.28", "193.155, -55.7594, -27.761, 0.55", "194.092, -57.2208, -27.5366, 0.28", "195.409, -59.2888, -27.3135, 0.55", "197.57, -62.5155, -27.4458, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "171.759, -23.159, -36.5771, 0.55", "168.738, -22.876, -36.4589, 0.55", "166.285, -22.6462, -36.363, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.15689, -31.2897, 5.06441, 0.83", "1.23912, -31.4462, 5.05679, 0.83", "2.17099, -32.8234, 5.09103, 0.83", "2.99305, -34.0296, 5.03827, 0.55", "3.64888, -34.9919, 4.99617, 0.55", "5.04287, -37.0373, 4.90669, 0.83", "6.73369, -39.5182, 4.79816, 0.55", "7.65226, -40.8154, 4.77025, 0.83", "9.26452, -42.8731, 4.83144, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.15689, -31.2897, 5.06441, 0.55", "-1.16992, -32.5287, 2.20906, 0.55", "-3.66748, -33.8585, -0.855802, 0.55", "-6.61586, -35.4284, -4.4739, 0.55", "-10.1962, -37.3347, -8.86744, 0.55", "-12.2279, -38.4165, -11.3606, 0.55", "-12.636, -38.6338, -11.8615, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-14.4201, -118.569, 83.8645, 0.55", "-14.5511, -128.527, 90.599, 0.55", "-13.3419, -139.263, 95.8753, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-14.4201, -118.569, 83.8645, 0.55", "-16.389, -131.091, 90.9815, 0.55", "-18.6737, -143.177, 98.7315, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-60.2687, 46.6966, -20.2376, 0.28", "-62.5372, 47.9216, -18.2454, 0.28", "-63.4072, 48.3636, -17.3982, 0.55", "-65.9102, 49.6361, -14.8909, 0.28", "-67.1366, 50.295, -13.7657, 0.55", "-70.4642, 52.102, -10.8339, 0.28", "-73.8462, 53.9385, -7.85414, 0.55", "-79.4078, 56.7054, -2.9332, 0.28", "-80.5934, 57.3029, -1.88239, 0.55", "-83.2117, 58.7811, 0.376195, 0.28", "-84.2422, 59.4137, 1.27548, 0.55", "-94.8605, 62.6731, 8.1729, 0.55", "-106.119, 67.844, 12.3494, 0.55", "-116.385, 73.1487, 18.4659, 0.55", "-125.212, 80.2766, 24.9638, 0.55", "-135.136, 86.9321, 30.2722, 0.55", "-145.976, 91.2334, 36.1828, 0.55", "-156.122, 94.2643, 43.8513, 0.55", "-165.162, 95.8048, 53.1714, 0.55", "-174.282, 98.1529, 62.2408, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-60.2687, 46.6966, -20.2376, 0.55", "-62.5251, 45.4552, -19.7565, 0.55", "-63.6911, 44.7708, -19.5148, 0.28", "-64.5587, 44.2615, -19.3349, 0.55", "-65.2819, 43.837, -19.185, 0.28", "-65.7884, 43.5396, -19.08, 0.55", "-67.1851, 42.7197, -18.7905, 0.28", "-68.0862, 42.1147, -18.7306, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-145.135, -74.9543, -40.8282, 0.55", "-149.522, -84.8533, -43.7208, 0.55", "-153.676, -95.1224, -45.4193, 0.55", "-157.007, -105.174, -49.0884, 0.55", "-161.451, -115.228, -51.2696, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-145.135, -74.9543, -40.8282, 0.55", "-148.074, -77.5687, -46.0026, 0.55", "-150.719, -79.2664, -51.6923, 0.55", "-153.887, -81.7739, -56.7837, 0.55", "-158.33, -83.3463, -61.2601, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-143.194, -63.6972, -41.6346, 0.55", "-146.765, -67.5996, -48.3646, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-143.194, -63.6972, -41.6346, 0.55", "-149.42, -71.3525, -38.4613, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "101.068, -44.6873, -88.9506, 0.28", "104.342, -45.7255, -90.5071, 0.28", "105.863, -46.2078, -91.2301, 0.55", "108.763, -47.1275, -92.6089, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "101.068, -44.6873, -88.9506, 0.55", "100.846, -45.8851, -89.9253, 0.55", "100.402, -48.2812, -91.8751, 0.28", "100.258, -49.0617, -92.5101, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "89.7666, -45.1138, -79.6827, 0.28", "91.229, -48.7687, -83.3024, 0.28", "91.9531, -50.5785, -85.0947, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "89.7666, -45.1138, -79.6827, 0.55", "87.7798, -45.9567, -78.782, 0.55", "82.2395, -48.3073, -76.2705, 0.28", "80.9234, -48.8658, -75.6738, 0.55", "77.3231, -50.3933, -74.0417, 0.28", "75.0024, -51.3779, -72.9896, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "9.26452, -42.8731, 4.83144, 0.83", "9.30532, -43.1114, 4.80483, 0.83", "9.8778, -46.2258, 4.54803, 0.83", "10.0894, -48.5688, 4.48563, 0.83", "10.1127, -50.8375, 4.6439, 0.83", "10.0155, -53.8605, 5.07163, 0.83", "9.79541, -57.3473, 5.6834, 0.83", "9.54654, -61.2384, 6.57135, 0.83", "9.28908, -65.0169, 7.60789, 0.83", "8.6822, -69.6708, 8.74424, 0.83", "8.29826, -71.8152, 9.13423, 0.83", "8.01303, -73.4289, 9.32595, 0.83", "7.40686, -76.5284, 9.62241, 0.83", "6.94315, -79.3025, 9.74211, 0.83", "6.33574, -85.2084, 9.37266, 0.83", "6.08114, -88.4398, 8.75533, 0.83", "5.86539, -91.4189, 7.97017, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "9.26452, -42.8731, 4.83144, 0.55", "8.15866, -45.5397, 5.2727, 0.55", "7.34412, -47.4649, 5.74064, 0.55", "6.86976, -48.6857, 6.15998, 0.55", "6.23988, -50.5802, 6.99348, 0.55", "5.11921, -54.3107, 8.8785, 0.55", "4.28217, -57.1102, 10.626, 0.55", "3.64086, -59.3351, 12.2737, 0.55", "2.95447, -61.5705, 14.1101, 0.55", "2.38024, -63.4169, 15.7365, 0.28", "1.91399, -64.908, 17.3001, 0.55", "1.0439, -67.5909, 20.5587, 0.55", "0.434759, -69.2223, 22.7585, 0.55", "0.0813728, -70.1372, 23.9822, 0.55", "-0.40173, -71.2222, 25.3707, 0.83", "-1.89152, -74.4583, 29.2586, 0.28", "-2.38695, -75.5318, 30.5137, 0.55", "-3.22388, -77.4739, 32.7043, 0.28", "-3.47605, -78.0688, 33.4264, 0.55", "-3.98716, -79.4668, 35.0826, 0.28", "-4.27911, -80.2667, 35.9607, 0.55", "-5.48697, -82.9316, 38.0859, 0.55", "-6.52076, -89.8507, 46.5434, 0.55", "-6.99638, -96.3738, 55.3577, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-12.636, -38.6338, -11.8615, 0.55", "-14.4919, -39.3898, -13.7203, 0.55", "-15.0398, -39.5676, -14.2436, 0.55", "-16.417, -40.0141, -15.5053, 0.55", "-19.4334, -40.8994, -18.1414, 0.28", "-19.8828, -41.0206, -18.506, 0.55", "-21.7591, -41.5773, -19.9538, 0.55", "-24.3314, -42.3394, -21.6938, 0.55", "-25.3158, -42.6008, -22.3369, 0.28", "-26.1786, -42.7727, -22.8535, 0.28", "-27.652, -43.0368, -23.5454, 0.55", "-29.4502, -43.279, -24.455, 0.28", "-31.112, -43.3675, -25.3329, 0.55", "-32.3969, -43.3347, -25.9897, 0.55", "-33.2822, -43.2419, -26.4698, 0.55", "-35.8846, -42.8583, -27.9565, 0.55", "-38.624, -42.2774, -29.4746, 0.55", "-39.7556, -41.978, -30.0759, 0.28", "-40.8311, -41.7098, -30.6659, 0.55", "-43.0133, -41.2996, -31.8393, 0.28", "-43.7476, -41.1815, -32.2268, 0.83", "-45.1184, -40.9452, -32.8619, 0.28", "-46.1047, -40.8449, -33.1957, 0.55", "-47.5366, -40.7467, -33.6521, 0.28", "-48.1065, -40.7006, -33.8161, 0.55", "-49.1618, -40.6337, -34.0654, 0.55", "-50.7542, -40.3805, -34.3862, 0.55", "-51.7925, -40.1537, -34.5407, 0.28", "-52.6268, -39.8719, -34.603, 0.55", "-53.6096, -39.4246, -34.6826, 0.28", "-53.7715, -39.3388, -34.7011, 0.55", "-55.2783, -38.5157, -35.1212, 0.28", "-56.3772, -37.8981, -35.5373, 0.55", "-57.8355, -36.9943, -36.2771, 0.83", "-59.0424, -36.2247, -37.0142, 0.28", "-59.3555, -36.0281, -37.2335, 0.55", "-61.7617, -34.5539, -39.0409, 0.28", "-62.1843, -34.3026, -39.396, 0.55", "-63.4334, -33.4831, -40.5189, 0.28", "-63.7559, -33.2723, -40.811, 0.55", "-64.5818, -32.7233, -41.5073, 0.28", "-65.1659, -32.328, -41.9657, 0.55", "-66.4649, -31.4444, -42.8032, 0.28", "-67.2366, -30.9713, -43.2712, 0.55", "-68.8833, -30.0591, -44.1842, 0.28", "-69.3743, -29.813, -44.4484, 0.55", "-70.1446, -29.4834, -44.8346, 0.28", "-70.7962, -29.2057, -45.1313, 0.55", "-72.1472, -28.6462, -45.6694, 0.28", "-72.5538, -28.4863, -45.8185, 0.55", "-75.5682, -27.242, -46.792, 0.28", "-76.6193, -26.7337, -47.0456, 0.55", "-78.4858, -25.74, -47.3831, 0.28", "-79.3247, -25.2599, -47.5105, 0.55", "-81.2414, -24.172, -47.6947, 0.28", "-81.9435, -23.8031, -47.7317, 0.55", "-84.4789, -22.6906, -47.727, 0.28", "-85.5386, -22.3567, -47.713, 0.55", "-87.0557, -22.123, -47.6712, 0.55", "-87.9883, -22.037, -47.6223, 0.55", "-89.8765, -21.9095, -47.3779, 0.28", "-91.7212, -21.802, -47.021, 0.28", "-93.2523, -21.7068, -46.679, 0.55", "-95.0909, -21.4274, -46.0588, 0.28", "-95.9773, -21.1729, -45.6295, 0.55", "-98.0345, -20.2093, -44.3943, 0.28", "-99.0268, -19.4862, -43.4928, 0.55", "-99.6233, -18.9016, -42.7524, 0.28", "-100.234, -18.2412, -41.7215, 0.55", "-100.958, -17.3754, -40.3067, 0.28", "-101.236, -17.0704, -39.7743, 0.55", "-102.779, -15.7042, -37.2579, 0.28", "-103.304, -15.2736, -36.4159, 0.55", "-104.542, -14.3196, -34.3696, 0.28", "-105.216, -13.8133, -33.258, 0.55", "-105.771, -13.3985, -32.3457, 0.55", "-106.445, -12.9105, -31.279, 0.28", "-106.827, -12.6628, -30.8015, 0.55", "-108.146, -11.7772, -29.2988, 0.28", "-108.823, -11.2104, -28.4971, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.636, -38.6338, -11.8615, 0.55", "-12.2519, -38.7955, -12.4222, 0.55", "-11.8401, -38.8841, -12.9795, 0.55", "-11.2853, -38.9376, -13.6506, 0.55", "-10.8044, -38.9278, -14.1805, 0.55", "-7.36316, -38.415, -17.4393, 0.55", "-6.57923, -38.1909, -18.1904, 0.55", "-5.42362, -37.7577, -19.3296, 0.55", "-4.60487, -37.4175, -20.1431, 0.55", "-3.79013, -37.0288, -20.9196, 0.28", "-2.4913, -36.3449, -22.0547, 0.55", "-0.491511, -35.2568, -23.6395, 0.28", "-0.341688, -35.2016, -23.8193, 0.55", "0.335763, -35.1075, -25.2252, 0.28", "0.629084, -35.1, -26.2437, 0.55", "0.837434, -35.1651, -27.3723, 0.55", "1.17438, -35.3835, -29.4, 0.55", "1.844, -35.8411, -33.3754, 0.55", "2.3385, -36.1795, -36.0343, 0.55", "2.5329, -36.3062, -36.9463, 0.55", "3.95667, -37.0988, -42.9092, 0.55", "4.41241, -37.2934, -44.5072, 0.55", "4.7357, -37.4064, -45.3837, 0.55", "5.66374, -37.7313, -47.3556, 0.55", "8.14817, -38.7821, -51.9365, 0.55", "8.86643, -39.123, -53.1371, 0.28", "9.32537, -39.3532, -53.786, 0.55", "10.0205, -39.7419, -54.7314, 0.28", "10.3322, -39.9496, -55.0939, 0.55", "11.4958, -40.7742, -55.8832, 0.28", "12.4509, -41.7287, -55.8479, 0.55", "13.0122, -42.3921, -55.776, 0.28", "13.5113, -43.1054, -55.6268, 0.55", "13.9305, -43.8669, -55.4364, 0.28", "14.1058, -44.2566, -55.3572, 0.55", "14.4964, -45.2677, -55.1185, 0.28", "14.5955, -45.5716, -55.0967, 0.55", "15.1648, -47.3208, -55.0684, 0.28", "15.4594, -48.1401, -55.1551, 0.55", "16.1668, -49.9104, -55.525, 0.28", "16.4596, -50.57, -55.7285, 0.55", "17.5128, -52.7521, -56.5149, 0.28", "17.774, -53.2846, -56.7272, 0.55", "18.5616, -54.9719, -57.4605, 0.28", "18.722, -55.3633, -57.6057, 0.55", "19.1127, -56.3946, -57.9837, 0.28", "19.3494, -56.9977, -58.2577, 0.55", "19.6049, -57.595, -58.5697, 0.55", "20.1148, -58.786, -59.1837, 0.28", "20.5014, -59.5341, -59.6383, 0.55", "21.8407, -61.4592, -61.141, 0.28", "22.386, -62.1023, -61.7621, 0.55", "22.774, -62.5159, -62.1836, 0.28", "23.1799, -62.9, -62.6049, 0.55", "24.4684, -63.9947, -63.8797, 0.28", "25.4501, -64.8385, -64.8126, 0.55", "27.1361, -66.4044, -66.2442, 0.28", "27.6689, -66.8926, -66.6921, 0.55", "28.7179, -67.7911, -67.4512, 0.28", "29.0737, -68.085, -67.6724, 0.55", "29.669, -68.5497, -67.9167, 0.28", "30.202, -68.9417, -68.0845, 0.55", "31.6733, -69.9183, -68.3857, 0.28", "33.375, -70.967, -68.7068, 0.28", "34.2465, -71.4546, -68.8086, 0.28", "35.1272, -71.9222, -68.9675, 0.55", "36.4236, -72.5466, -69.2093, 0.28", "37.0024, -72.8149, -69.3048, 0.83", "38.4782, -73.5149, -69.4898, 0.28", "39.1144, -73.8352, -69.6054, 0.55", "41.8864, -75.3568, -70.2394, 0.28", "43.2624, -76.1411, -70.6701, 0.28", "44.2577, -76.7153, -71.0512, 0.55", "44.8293, -77.0663, -71.3405, 0.55", "46.3285, -78.0262, -72.2334, 0.28", "47.711, -78.9935, -73.1245, 0.55", "48.9625, -79.9162, -73.9333, 0.28", "50.0827, -80.7718, -74.7286, 0.55", "51.0118, -81.4667, -75.3809, 0.28", "51.7893, -81.9739, -75.8739, 0.55", "53.6983, -83.0802, -76.978, 0.28", "54.6721, -83.6371, -77.4955, 0.55", "56.1417, -84.4747, -78.2158, 0.28", "57.3545, -85.1226, -78.7786, 0.55", "60.215, -86.5116, -80.1088, 0.28", "61.381, -87.0144, -80.7358, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.3419, -139.263, 95.8753, 0.55", "-13.1313, -147.374, 99.7059, 0.55", "-11.8242, -156.042, 101.62, 0.55", "-11.1781, -164.449, 104.687, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.3419, -139.263, 95.8753, 0.55", "-12.3743, -149.086, 103.51, 0.55", "-13.5794, -157.717, 112.442, 0.55", "-15.349, -164.33, 122.877, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-18.6737, -143.177, 98.7315, 0.55", "-18.8843, -149.05, 101.839, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-18.6737, -143.177, 98.7315, 0.55", "-20.5288, -151.271, 103.733, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.86539, -91.4189, 7.97017, 0.83", "6.83791, -95.0102, 8.60297, 0.83", "7.78055, -98.0258, 9.37157, 0.83", "8.71753, -101.023, 10.1356, 0.83", "9.60737, -103.87, 10.8611, 0.83", "10.9786, -108.257, 11.9793, 0.83", "12.34, -112.612, 13.0893, 0.83", "13.4467, -115.476, 14.2169, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.86539, -91.4189, 7.97017, 0.55", "7.35516, -93.3308, 8.45845, 0.55", "8.58923, -94.8204, 8.57711, 0.55", "9.48892, -95.9237, 8.53916, 0.55", "10.4045, -97.2286, 8.26527, 0.83", "11.409, -98.7147, 7.74305, 0.55", "12.3916, -100.168, 7.23226, 0.83", "13.4189, -101.748, 6.50403, 0.55", "14.0419, -102.664, 5.99685, 0.83", "16.0132, -105.631, 4.08541, 0.55", "17.4209, -107.972, 2.37589, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.99638, -96.3738, 55.3577, 0.55", "-9.15528, -103.975, 62.7093, 0.55", "-12.4536, -110.374, 70.7497, 0.55", "-16.1536, -115.677, 79.3914, 0.55", "-20.4887, -119.628, 88.451, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-6.99638, -96.3738, 55.3577, 0.55", "-7.04569, -104.641, 64.5445, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "13.4467, -115.476, 14.2169, 0.55", "13.5138, -117.545, 14.7501, 0.55", "13.6352, -120.183, 15.522, 0.55", "13.7565, -122.673, 16.2386, 0.55", "13.8362, -124.444, 16.7149, 0.55", "13.9678, -127.605, 17.5052, 0.55", "14.5576, -136.471, 19.5811, 0.55", "14.8798, -139.47, 20.2003, 0.55", "15.1606, -141.58, 20.5439, 0.55", "15.5836, -143.98, 20.769, 0.55", "15.9542, -145.832, 20.7788, 0.55", "17.016, -150.143, 20.6942, 0.55", "17.7191, -153.424, 20.5757, 0.55", "18.2061, -155.577, 20.5817, 0.55", "19.3259, -161.172, 20.8517, 0.55", "19.9843, -164.943, 21.1758, 0.55", "20.7356, -169.813, 21.8545, 0.55", "21.4696, -175.35, 23.0449, 0.55", "22.0126, -179.041, 24.1204, 0.55", "22.3564, -181.22, 24.8321, 0.55", "22.6419, -183.232, 25.4669, 0.55", "23.0944, -185.771, 26.1794, 0.55", "24.298, -191.883, 27.4848, 0.55", "24.8751, -194.237, 27.9438, 0.55", "25.4678, -196.863, 28.4112, 0.55", "26.3369, -200.809, 29.0801, 0.55", "26.8626, -203.857, 29.5601, 0.55", "27.2248, -206.766, 29.9094, 0.55", "27.4574, -209.55, 30.1901, 0.55", "27.6253, -212.273, 30.48, 0.55", "27.7637, -214.209, 30.6739, 0.55", "28.0551, -217.37, 30.8998, 0.55", "28.4815, -221.159, 30.8847, 0.55", "28.7921, -222.99, 30.7712, 0.55", "29.1342, -224.59, 30.5671, 0.55", "29.986, -227.589, 30.0765, 0.55", "30.5316, -229.49, 29.7077, 0.55", "31.1893, -231.835, 29.3473, 0.55", "31.5495, -233.493, 29.1597, 0.55", "32.3401, -237.817, 28.7945, 0.55", "32.7569, -241.072, 28.7004, 0.55", "33.145, -246.136, 28.8968, 0.55", "33.3254, -249.41, 29.3351, 0.55", "33.4423, -252.854, 29.8854, 0.28", "33.4335, -254.244, 30.1436, 0.28", "33.2655, -257.632, 31.0403, 0.28", "32.9772, -260.774, 32.08, 0.28", "32.754, -264.911, 34.0014, 0.28", "34.3668, -274.012, 36.7035, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "13.4467, -115.476, 14.2169, 0.55", "14.2957, -115.922, 15.4922, 0.55", "15.9055, -117.101, 18.255, 0.55", "17.2297, -118.282, 20.7102, 0.28", "18.5967, -119.634, 23.398, 0.55", "19.2597, -120.513, 25.1672, 0.28", "20.2148, -122.115, 28.4086, 0.55", "20.3669, -122.99, 29.9829, 0.28", "20.3591, -123.312, 30.6035, 0.28", "20.3305, -123.773, 31.6837, 0.55", "20.4011, -125.274, 35.7552, 0.28", "20.473, -125.856, 37.458, 0.55", "21.0807, -127.514, 42.3377, 0.28", "21.5392, -128.318, 44.8969, 0.28", "22.2499, -129.341, 47.9909, 0.55", "23.6102, -130.908, 52.3829, 0.28", "23.8427, -131.112, 52.9416, 0.55", "25.1345, -132.091, 55.5793, 0.28", "25.2733, -132.18, 55.8017, 0.55", "26.47, -133.27, 57.8039, 0.28", "26.9965, -133.874, 58.796, 0.55", "31.2256, -138.322, 67.0094, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-20.4887, -119.628, 88.451, 0.55", "-20.8492, -122.579, 96.4038, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-20.4887, -119.628, 88.451, 0.55", "-24.8489, -126.562, 96.2031, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_BP_6f14cec977_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.21164, 8.41164, 2.86859, 0.83 ) }
    dend_43 { pt3dadd( -6.23129, 10.7521, 3.324, 1.11 ) }
    dend_43 { pt3dadd( -8.0117, 12.1312, 3.56089, 0.83 ) }
    dend_43 { pt3dadd( -9.74143, 13.4593, 3.77315, 0.83 ) }
    dend_43 { pt3dadd( -10.7656, 14.2167, 3.88946, 1.11 ) }
    dend_43 { pt3dadd( -13.9727, 16.5833, 4.26223, 1.11 ) }
    dend_43 { pt3dadd( -19.7089, 20.635, 4.92118, 0.83 ) }
    dend_43 { pt3dadd( -21.7755, 22.0391, 5.13878, 0.83 ) }
    dend_43 { pt3dadd( -23.412, 23.1179, 5.27394, 0.83 ) }
    dend_43 { pt3dadd( -25.0078, 24.1871, 5.39094, 0.83 ) }
    dend_43 { pt3dadd( -26.3069, 25.0683, 5.45406, 0.55 ) }
    dend_43 { pt3dadd( -27.2833, 25.6649, 5.51813, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.64791, 6.26075, -6.23804, 0.55 ) }
    dend_28 { pt3dadd( 7.38759, 6.8534, -6.84986, 0.55 ) }
    dend_28 { pt3dadd( 8.97733, 7.003, -7.65943, 0.83 ) }
    dend_28 { pt3dadd( 11.4934, 7.16222, -9.16326, 0.55 ) }
    dend_28 { pt3dadd( 12.7079, 7.23907, -9.88919, 1.38 ) }
    dend_28 { pt3dadd( 15.6942, 7.42804, -11.6741, 0.55 ) }
    dend_28 { pt3dadd( 16.9661, 7.36405, -12.5257, 0.83 ) }
    dend_28 { pt3dadd( 23.5454, 6.19051, -17.3108, 0.55 ) }
    dend_28 { pt3dadd( 24.182, 6.0327, -17.8372, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.682732, -10.3644, 3.18856, 1.11 ) }
    dend_1 { pt3dadd( -0.728422, -14.3957, 4.63376, 1.11 ) }
    dend_1 { pt3dadd( -0.74703, -16.0375, 5.22234, 0.83 ) }
    dend_1 { pt3dadd( -0.771751, -18.2187, 6.00429, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.86793, 9.04749, -1.34419, 1.11 ) }
    dend_0 { pt3dadd( 0.970279, 10.3254, -1.33943, 1.11 ) }
    dend_0 { pt3dadd( 1.14198, 12.41, -1.25529, 1.38 ) }
    dend_0 { pt3dadd( 1.15382, 12.526, -1.2488, 1.38 ) }
    dend_0 { pt3dadd( 1.38816, 13.9581, -1.16573, 0.83 ) }
    dend_0 { pt3dadd( 1.70801, 15.4696, -1.0055, 0.83 ) }
    dend_0 { pt3dadd( 2.24241, 17.1691, -0.638077, 0.83 ) }
    dend_0 { pt3dadd( 2.53577, 17.8102, -0.42998, 0.83 ) }
    dend_0 { pt3dadd( 2.81736, 18.2716, -0.240583, 1.11 ) }
    dend_0 { pt3dadd( 3.62253, 19.3912, 0.236875, 0.55 ) }
    dend_0 { pt3dadd( 4.55688, 20.5559, 0.81004, 0.83 ) }
    dend_0 { pt3dadd( 5.75269, 21.7449, 1.44062, 0.55 ) }
    dend_0 { pt3dadd( 6.35243, 22.2348, 1.71785, 0.83 ) }
    dend_0 { pt3dadd( 7.19812, 22.8968, 2.16272, 0.55 ) }
    dend_0 { pt3dadd( 8.25553, 23.7395, 2.7775, 0.55 ) }
    dend_0 { pt3dadd( 9.74959, 25.0114, 3.73444, 0.55 ) }
    dend_0 { pt3dadd( 11.3983, 26.4675, 4.79155, 0.55 ) }
    dend_0 { pt3dadd( 12.4598, 27.4126, 5.60531, 0.55 ) }
    dend_0 { pt3dadd( 13.7867, 28.6078, 6.77841, 0.55 ) }
    dend_0 { pt3dadd( 14.0657, 28.8469, 7.04758, 0.83 ) }
    dend_0 { pt3dadd( 14.8101, 29.4785, 7.81286, 0.55 ) }
    dend_0 { pt3dadd( 15.4284, 29.9694, 8.40863, 0.83 ) }
    dend_0 { pt3dadd( 16.8662, 31.3206, 9.82688, 0.55 ) }
    dend_0 { pt3dadd( 17.3884, 31.8144, 10.2269, 0.83 ) }
    dend_0 { pt3dadd( 17.8569, 32.1753, 10.4817, 0.55 ) }
    dend_0 { pt3dadd( 18.31, 32.4841, 10.6636, 0.83 ) }
    dend_0 { pt3dadd( 19.297, 33.0528, 10.9691, 0.83 ) }
    dend_0 { pt3dadd( 20.5878, 33.8294, 11.2648, 0.83 ) }
    dend_0 { pt3dadd( 21.3697, 34.3457, 11.3655, 0.55 ) }
    dend_0 { pt3dadd( 21.9684, 34.7954, 11.4457, 0.55 ) }
    dend_0 { pt3dadd( 23.5339, 35.9568, 11.6333, 0.83 ) }
    dend_0 { pt3dadd( 24.5392, 36.7015, 11.7157, 0.55 ) }
    dend_0 { pt3dadd( 26.0555, 37.791, 11.7812, 0.55 ) }
    dend_0 { pt3dadd( 27.4338, 38.7005, 11.7876, 0.55 ) }
    dend_0 { pt3dadd( 28.6604, 39.4687, 11.7611, 0.55 ) }
    dend_0 { pt3dadd( 30.1977, 40.3651, 11.6589, 0.55 ) }
    dend_0 { pt3dadd( 31.1288, 40.7976, 11.5662, 0.55 ) }
    dend_0 { pt3dadd( 31.751, 41.0371, 11.428, 0.55 ) }
    dend_0 { pt3dadd( 32.5617, 41.2032, 11.1739, 0.55 ) }
    dend_0 { pt3dadd( 33.7493, 41.2494, 10.6932, 0.55 ) }
    dend_0 { pt3dadd( 34.4818, 41.18, 10.3635, 0.55 ) }
    dend_0 { pt3dadd( 35.5629, 41.0472, 9.96039, 0.55 ) }
    dend_0 { pt3dadd( 37.653, 40.8614, 9.38396, 0.55 ) }
    dend_0 { pt3dadd( 39.3137, 40.7931, 9.05139, 0.55 ) }
    dend_0 { pt3dadd( 41.0926, 40.8052, 8.80534, 0.55 ) }
    dend_0 { pt3dadd( 42.2481, 40.8518, 8.73775, 0.55 ) }
    dend_0 { pt3dadd( 45.2888, 41.2419, 8.75802, 0.55 ) }
    dend_0 { pt3dadd( 47.1124, 41.6079, 8.90251, 0.55 ) }
    dend_0 { pt3dadd( 48.5012, 41.9685, 9.13433, 0.55 ) }
    dend_0 { pt3dadd( 49.3545, 42.3214, 9.30667, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 50.3475, 42.8568, 9.50225, 0.55 ) }
    dend_0 { pt3dadd( 52.0131, 43.9239, 9.69358, 0.55 ) }
    dend_0 { pt3dadd( 52.3882, 44.1819, 9.68763, 0.55 ) }
    dend_0 { pt3dadd( 53.4523, 44.8698, 9.60222, 0.55 ) }
    dend_0 { pt3dadd( 54.4334, 45.6081, 9.52047, 0.83 ) }
    dend_0 { pt3dadd( 54.9678, 46.0182, 9.46765, 0.55 ) }
    dend_0 { pt3dadd( 55.7669, 46.7263, 9.35802, 0.83 ) }
    dend_0 { pt3dadd( 60.137, 50.5022, 9.85849, 0.83 ) }
    dend_0 { pt3dadd( 63.9342, 54.8797, 10.0154, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -27.2833, 25.6649, 5.51813, 0.55 ) }
    dend_55 { pt3dadd( -29.4358, 26.6966, 4.48899, 0.55 ) }
    dend_55 { pt3dadd( -31.7764, 27.8184, 3.36991, 0.55 ) }
    dend_55 { pt3dadd( -34.6011, 29.1722, 2.01942, 0.55 ) }
    dend_55 { pt3dadd( -36.9334, 30.29, 0.904279, 0.83 ) }
    dend_55 { pt3dadd( -38.8879, 31.2268, -0.030204, 0.55 ) }
    dend_55 { pt3dadd( -42.5158, 32.9655, -1.76474, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -27.2833, 25.6649, 5.51813, 0.55 ) }
    dend_44 { pt3dadd( -29.3079, 26.0846, 5.18483, 0.55 ) }
    dend_44 { pt3dadd( -31.4751, 26.449, 5.04223, 0.55 ) }
    dend_44 { pt3dadd( -33.9359, 26.8544, 4.9404, 0.55 ) }
    dend_44 { pt3dadd( -37.5187, 27.3816, 5.11825, 0.55 ) }
    dend_44 { pt3dadd( -40.5294, 27.722, 5.47417, 0.55 ) }
    dend_44 { pt3dadd( -43.695, 28.0219, 5.97849, 0.55 ) }
    dend_44 { pt3dadd( -46.7751, 28.085, 6.78039, 0.55 ) }
    dend_44 { pt3dadd( -49.443, 27.8682, 7.70806, 0.55 ) }
    dend_44 { pt3dadd( -52.7888, 27.3469, 9.19967, 0.55 ) }
    dend_44 { pt3dadd( -54.2555, 27.0032, 10.0398, 0.55 ) }
    dend_44 { pt3dadd( -55.8437, 26.6113, 11.0126, 0.55 ) }
    dend_44 { pt3dadd( -58.6399, 25.723, 12.5924, 0.55 ) }
    dend_44 { pt3dadd( -60.1154, 25.2695, 13.2063, 0.55 ) }
    dend_44 { pt3dadd( -61.6607, 24.7487, 13.8375, 0.55 ) }
    dend_44 { pt3dadd( -63.4881, 24.1639, 14.4075, 0.55 ) }
    dend_44 { pt3dadd( -65.4707, 23.5724, 14.9761, 0.55 ) }
    dend_44 { pt3dadd( -68.297, 22.7253, 15.7265, 0.55 ) }
    dend_44 { pt3dadd( -72.0511, 21.8639, 16.4106, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 24.182, 6.0327, -17.8372, 0.55 ) }
    dend_34 { pt3dadd( 28.9658, 7.36996, -18.8632, 0.55 ) }
    dend_34 { pt3dadd( 31.7288, 7.97481, -19.8449, 0.55 ) }
    dend_34 { pt3dadd( 34.4586, 8.44821, -20.8531, 0.55 ) }
    dend_34 { pt3dadd( 36.3253, 8.69672, -21.5409, 0.55 ) }
    dend_34 { pt3dadd( 39.0548, 8.99645, -22.5248, 0.55 ) }
    dend_34 { pt3dadd( 44.7203, 9.50706, -24.7431, 0.55 ) }
    dend_34 { pt3dadd( 51.1509, 10.0427, -27.6897, 0.55 ) }
    dend_34 { pt3dadd( 54.2745, 10.1054, -29.3344, 0.55 ) }
    dend_34 { pt3dadd( 55.9489, 10.0971, -30.3251, 0.55 ) }
    dend_34 { pt3dadd( 57.7851, 10.0963, -31.4861, 0.55 ) }
    dend_34 { pt3dadd( 61.0637, 10.0034, -33.5447, 0.55 ) }
    dend_34 { pt3dadd( 62.256, 9.89937, -34.3316, 0.55 ) }
    dend_34 { pt3dadd( 67.3033, 9.58252, -38.0535, 0.55 ) }
    dend_34 { pt3dadd( 70.8763, 9.4138, -40.9528, 0.55 ) }
    dend_34 { pt3dadd( 72.933, 9.35633, -42.6789, 0.55 ) }
    dend_34 { pt3dadd( 74.9845, 9.28091, -44.3987, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 24.182, 6.0327, -17.8372, 0.83 ) }
    dend_29 { pt3dadd( 26.8149, 7.5283, -17.8204, 0.83 ) }
    dend_29 { pt3dadd( 28.3193, 8.38567, -17.8785, 0.55 ) }
    dend_29 { pt3dadd( 30.5339, 9.70625, -18.1469, 0.83 ) }
    dend_29 { pt3dadd( 32.0238, 10.6342, -18.3696, 0.55 ) }
    dend_29 { pt3dadd( 34.0808, 11.9663, -18.6439, 0.83 ) }
    dend_29 { pt3dadd( 36.5568, 13.6106, -18.8812, 0.55 ) }
    dend_29 { pt3dadd( 37.7997, 14.3447, -18.9551, 0.55 ) }
    dend_29 { pt3dadd( 40.6484, 15.6406, -18.9478, 0.83 ) }
    dend_29 { pt3dadd( 43.2264, 16.4905, -18.626, 0.55 ) }
    dend_29 { pt3dadd( 44.668, 16.943, -18.3099, 0.83 ) }
    dend_29 { pt3dadd( 46.8344, 17.6564, -17.607, 0.55 ) }
    dend_29 { pt3dadd( 49.951, 18.714, -16.1998, 0.55 ) }
    dend_29 { pt3dadd( 54.2729, 19.95, -14.0379, 0.55 ) }
    dend_29 { pt3dadd( 58.3908, 20.9662, -11.7019, 0.55 ) }
    dend_29 { pt3dadd( 61.6523, 21.7336, -9.79495, 0.55 ) }
    dend_29 { pt3dadd( 67.0305, 23.022, -6.62173, 0.55 ) }
    dend_29 { pt3dadd( 70.9697, 24.0718, -4.20784, 0.55 ) }
    dend_29 { pt3dadd( 73.3552, 24.8981, -2.65248, 0.55 ) }
    dend_29 { pt3dadd( 77.7632, 26.8618, 0.277401, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.771751, -18.2187, 6.00429, 0.83 ) }
    dend_11 { pt3dadd( -0.923832, -21.1392, 5.87714, 0.83 ) }
    dend_11 { pt3dadd( -1.072, -23.9847, 5.75326, 0.83 ) }
    dend_11 { pt3dadd( -1.23744, -27.1616, 5.61495, 0.83 ) }
    dend_11 { pt3dadd( -1.32382, -28.8206, 5.54272, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.771751, -18.2187, 6.00429, 0.55 ) }
    dend_2 { pt3dadd( -0.289891, -19.6464, 7.05605, 0.55 ) }
    dend_2 { pt3dadd( 0.117117, -21.3998, 8.40675, 0.55 ) }
    dend_2 { pt3dadd( 0.288479, -23.7085, 10.2411, 0.55 ) }
    dend_2 { pt3dadd( 0.28985, -24.6078, 10.9735, 0.83 ) }
    dend_2 { pt3dadd( 0.0606306, -26.9086, 13.0888, 0.55 ) }
    dend_2 { pt3dadd( -0.157235, -28.0997, 14.1961, 0.55 ) }
    dend_2 { pt3dadd( -0.637904, -30.4173, 16.4438, 0.83 ) }
    dend_2 { pt3dadd( -1.10292, -32.1411, 18.2141, 0.55 ) }
    dend_2 { pt3dadd( -1.61092, -33.5669, 19.6424, 0.55 ) }
    dend_2 { pt3dadd( -2.62964, -36.2691, 22.2938, 0.55 ) }
    dend_2 { pt3dadd( -3.43736, -38.4229, 24.3821, 0.55 ) }
    dend_2 { pt3dadd( -4.05197, -40.1484, 26.0831, 0.55 ) }
    dend_2 { pt3dadd( -4.59935, -41.9774, 27.8396, 0.28 ) }
    dend_2 { pt3dadd( -4.76112, -42.7374, 28.5471, 0.55 ) }
    dend_2 { pt3dadd( -5.01701, -44.1402, 29.7773, 0.28 ) }
    dend_2 { pt3dadd( -5.09098, -46.3218, 31.3812, 0.55 ) }
    dend_2 { pt3dadd( -7.12309, -53.6319, 36.971, 0.55 ) }
    dend_2 { pt3dadd( -9.40671, -60.3941, 43.125, 0.55 ) }
    dend_2 { pt3dadd( -11.3995, -65.9451, 50.4755, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -42.5158, 32.9655, -1.76474, 0.55 ) }
    dend_61 { pt3dadd( -45.5232, 33.0899, -0.207489, 0.55 ) }
    dend_61 { pt3dadd( -46.7872, 33.0653, 0.599598, 0.83 ) }
    dend_61 { pt3dadd( -48.2641, 32.9525, 1.73596, 0.55 ) }
    dend_61 { pt3dadd( -49.3945, 32.86, 2.70814, 0.83 ) }
    dend_61 { pt3dadd( -52.36, 32.7241, 5.23513, 0.55 ) }
    dend_61 { pt3dadd( -53.4834, 32.6908, 6.20182, 0.28 ) }
    dend_61 { pt3dadd( -55.3578, 32.6471, 7.97307, 0.55 ) }
    dend_61 { pt3dadd( -57.8731, 32.604, 10.3387, 0.55 ) }
    dend_61 { pt3dadd( -59.7827, 32.5767, 12.0472, 0.55 ) }
    dend_61 { pt3dadd( -62.3334, 32.5442, 14.2479, 0.28 ) }
    dend_61 { pt3dadd( -62.9962, 32.5452, 14.7398, 0.55 ) }
    dend_61 { pt3dadd( -64.3682, 32.5662, 15.7071, 0.28 ) }
    dend_61 { pt3dadd( -65.3003, 32.6095, 16.2776, 0.55 ) }
    dend_61 { pt3dadd( -67.2024, 32.6937, 17.2764, 0.28 ) }
    dend_61 { pt3dadd( -68.3171, 32.6849, 17.8012, 0.55 ) }
    dend_61 { pt3dadd( -70.2797, 32.5252, 18.7357, 0.28 ) }
    dend_61 { pt3dadd( -71.5975, 32.4117, 19.3163, 0.55 ) }
    dend_61 { pt3dadd( -79.6169, 30.8812, 26.4073, 0.55 ) }
    dend_61 { pt3dadd( -86.9184, 28.3242, 33.9628, 0.55 ) }
    dend_61 { pt3dadd( -93.9069, 24.7668, 41.4086, 0.55 ) }
    dend_61 { pt3dadd( -100.812, 20.0124, 48.2387, 0.55 ) }
    dend_61 { pt3dadd( -106.558, 15.6529, 56.2953, 0.55 ) }
    dend_61 { pt3dadd( -113.103, 11.6904, 63.9368, 0.55 ) }
    dend_61 { pt3dadd( -119.831, 9.44307, 72.0994, 0.55 ) }
    dend_61 { pt3dadd( -126.498, 6.35917, 80.0353, 0.55 ) }
    dend_61 { pt3dadd( -132.99, 3.97137, 88.3466, 0.55 ) }
    dend_61 { pt3dadd( -138.99, 1.42037, 96.9744, 0.55 ) }
    dend_61 { pt3dadd( -143.908, -2.33283, 105.843, 0.55 ) }
    dend_61 { pt3dadd( -148.957, -5.1108, 114.993, 0.55 ) }
    dend_61 { pt3dadd( -154.11, -8.93372, 123.698, 0.55 ) }
    dend_61 { pt3dadd( -158.01, -13.2073, 132.833, 0.55 ) }
    dend_61 { pt3dadd( -160.157, -16.7628, 142.817, 0.55 ) }
    dend_61 { pt3dadd( -162.169, -22.2246, 151.931, 0.55 ) }
    dend_61 { pt3dadd( -162.639, -27.8549, 161.151, 0.55 ) }
    dend_61 { pt3dadd( -163.697, -33.0661, 170.567, 0.55 ) }
    dend_61 { pt3dadd( -165.928, -37.5434, 180.154, 0.55 ) }
    dend_61 { pt3dadd( -170.423, -40.3852, 189.57, 0.55 ) }
    dend_61 { pt3dadd( -173.96, -44.3962, 198.969, 0.55 ) }
    dend_61 { pt3dadd( -175.558, -46.6474, 209.424, 0.55 ) }
    dend_61 { pt3dadd( -178.885, -48.1266, 219.606, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -42.5158, 32.9655, -1.76474, 0.55 ) }
    dend_56 { pt3dadd( -44.8456, 33.5205, -4.12712, 0.55 ) }
    dend_56 { pt3dadd( -46.7249, 34.1437, -6.82806, 0.55 ) }
    dend_56 { pt3dadd( -48.5205, 34.9909, -9.73043, 0.55 ) }
    dend_56 { pt3dadd( -49.6449, 35.5214, -11.5478, 0.55 ) }
    dend_56 { pt3dadd( -51.696, 36.489, -14.8631, 0.83 ) }
    dend_56 { pt3dadd( -53.1966, 37.197, -17.2885, 0.55 ) }
    dend_56 { pt3dadd( -54.9926, 38.1337, -20.877, 0.83 ) }
    dend_56 { pt3dadd( -55.727, 38.8332, -22.9426, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -72.0511, 21.8639, 16.4106, 0.28 ) }
    dend_48 { pt3dadd( -73.1595, 19.8687, 15.8548, 0.28 ) }
    dend_48 { pt3dadd( -73.687, 19.0153, 15.5396, 0.28 ) }
    dend_48 { pt3dadd( -74.3708, 17.8107, 15.0519, 0.55 ) }
    dend_48 { pt3dadd( -74.9345, 16.7508, 14.6345, 0.28 ) }
    dend_48 { pt3dadd( -75.7665, 15.1349, 14.0208, 0.55 ) }
    dend_48 { pt3dadd( -78.0826, 10.3803, 12.3035, 0.28 ) }
    dend_48 { pt3dadd( -78.8323, 8.71977, 11.5691, 0.55 ) }
    dend_48 { pt3dadd( -79.9646, 6.16714, 10.3509, 0.28 ) }
    dend_48 { pt3dadd( -80.6118, 4.64387, 9.55333, 0.55 ) }
    dend_48 { pt3dadd( -81.0579, 3.5955, 8.97772, 0.28 ) }
    dend_48 { pt3dadd( -81.5666, 2.39169, 8.32736, 0.55 ) }
    dend_48 { pt3dadd( -83.1021, -1.6323, 6.26708, 0.28 ) }
    dend_48 { pt3dadd( -83.5842, -2.84708, 5.5988, 0.55 ) }
    dend_48 { pt3dadd( -84.4241, -4.69339, 4.37391, 0.28 ) }
    dend_48 { pt3dadd( -85.1182, -5.86878, 3.47417, 0.28 ) }
    dend_48 { pt3dadd( -85.7464, -6.65072, 2.83289, 0.55 ) }
    dend_48 { pt3dadd( -87.9511, -8.84413, 1.07021, 0.28 ) }
    dend_48 { pt3dadd( -88.9798, -9.7317, 0.367884, 0.55 ) }
    dend_48 { pt3dadd( -91.495, -11.7441, -1.37471, 0.28 ) }
    dend_48 { pt3dadd( -94.0156, -13.5196, -2.98168, 0.28 ) }
    dend_48 { pt3dadd( -96.76, -15.2048, -4.62925, 0.28 ) }
    dend_48 { pt3dadd( -98.0209, -15.8368, -5.27128, 0.55 ) }
    dend_48 { pt3dadd( -104.059, -23.0618, -9.7114, 0.55 ) }
    dend_48 { pt3dadd( -110.868, -30.5029, -12.291, 0.55 ) }
    dend_48 { pt3dadd( -117.474, -37.4469, -16.3556, 0.55 ) }
    dend_48 { pt3dadd( -124.215, -43.6909, -21.2498, 0.55 ) }
    dend_48 { pt3dadd( -131.005, -49.1335, -26.9642, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -72.0511, 21.8639, 16.4106, 0.55 ) }
    dend_45 { pt3dadd( -72.7217, 21.8392, 16.4135, 0.55 ) }
    dend_45 { pt3dadd( -74.6418, 21.7118, 16.6559, 0.55 ) }
    dend_45 { pt3dadd( -75.3687, 21.6372, 16.7786, 0.55 ) }
    dend_45 { pt3dadd( -77.0837, 21.4071, 17.0788, 0.55 ) }
    dend_45 { pt3dadd( -79.7053, 21.1086, 17.4285, 0.55 ) }
    dend_45 { pt3dadd( -81.0629, 20.9987, 17.598, 0.28 ) }
    dend_45 { pt3dadd( -83.1729, 20.7941, 17.8115, 0.55 ) }
    dend_45 { pt3dadd( -84.735, 20.6254, 17.9091, 0.55 ) }
    dend_45 { pt3dadd( -85.395, 20.5496, 17.9506, 0.28 ) }
    dend_45 { pt3dadd( -89.3534, 20.0947, 18.194, 0.55 ) }
    dend_45 { pt3dadd( -91.1946, 19.8287, 18.1802, 0.28 ) }
    dend_45 { pt3dadd( -93.6615, 19.496, 18.0213, 0.28 ) }
    dend_45 { pt3dadd( -95.772, 19.2694, 17.7734, 0.55 ) }
    dend_45 { pt3dadd( -104.159, 19.1086, 18.8282, 0.55 ) }
    dend_45 { pt3dadd( -112.381, 18.5058, 20.7018, 0.55 ) }
    dend_45 { pt3dadd( -120.288, 16.8386, 23.1881, 0.55 ) }
    dend_45 { pt3dadd( -127.979, 16.3685, 26.6672, 0.55 ) }
    dend_45 { pt3dadd( -134.801, 15.203, 31.5237, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -140.515, 14.1268, 37.6624, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 74.9845, 9.28091, -44.3987, 0.55 ) }
    dend_42 { pt3dadd( 77.9654, 9.98362, -47.0492, 0.55 ) }
    dend_42 { pt3dadd( 78.9187, 10.1473, -47.9321, 0.55 ) }
    dend_42 { pt3dadd( 80.1181, 10.319, -49.0109, 0.55 ) }
    dend_42 { pt3dadd( 82.3053, 10.573, -51.0861, 0.55 ) }
    dend_42 { pt3dadd( 84.6083, 10.7315, -53.277, 0.55 ) }
    dend_42 { pt3dadd( 85.7487, 10.7326, -54.2932, 0.83 ) }
    dend_42 { pt3dadd( 86.7027, 10.6519, -55.1767, 0.55 ) }
    dend_42 { pt3dadd( 87.4306, 10.516, -55.8868, 0.83 ) }
    dend_42 { pt3dadd( 89.233, 9.93158, -57.6364, 0.55 ) }
    dend_42 { pt3dadd( 90.7407, 9.32533, -59.0461, 0.55 ) }
    dend_42 { pt3dadd( 92.4722, 8.64167, -60.5891, 0.55 ) }
    dend_42 { pt3dadd( 94.393, 7.9176, -62.3575, 0.55 ) }
    dend_42 { pt3dadd( 95.6881, 7.39636, -63.5631, 0.55 ) }
    dend_42 { pt3dadd( 97.1524, 6.79142, -64.9629, 0.55 ) }
    dend_42 { pt3dadd( 98.4152, 6.28288, -66.2627, 0.55 ) }
    dend_42 { pt3dadd( 99.2034, 5.9966, -67.1941, 0.55 ) }
    dend_42 { pt3dadd( 100.255, 5.35903, -69.0828, 0.55 ) }
    dend_42 { pt3dadd( 100.846, 4.90958, -70.2518, 0.55 ) }
    dend_42 { pt3dadd( 101.416, 4.20081, -71.7827, 0.55 ) }
    dend_42 { pt3dadd( 102.259, 2.89659, -74.3438, 0.55 ) }
    dend_42 { pt3dadd( 102.442, 2.57739, -74.9137, 0.28 ) }
    dend_42 { pt3dadd( 104.761, -1.36886, -81.8136, 0.28 ) }
    dend_42 { pt3dadd( 105.507, -2.49978, -83.8438, 0.83 ) }
    dend_42 { pt3dadd( 108.381, -6.61029, -90.9969, 0.83 ) }
    dend_42 { pt3dadd( 109.843, -8.64371, -94.2705, 0.83 ) }
    dend_42 { pt3dadd( 110.525, -9.51128, -95.5756, 0.55 ) }
    dend_42 { pt3dadd( 111.278, -10.3471, -96.8449, 0.55 ) }
    dend_42 { pt3dadd( 113.212, -11.8608, -99.1723, 0.55 ) }
    dend_42 { pt3dadd( 115.223, -13.1581, -101.207, 0.28 ) }
    dend_42 { pt3dadd( 115.778, -13.2678, -101.285, 0.55 ) }
    dend_42 { pt3dadd( 116.96, -13.306, -101.088, 0.28 ) }
    dend_42 { pt3dadd( 117.677, -13.2498, -100.882, 0.55 ) }
    dend_42 { pt3dadd( 118.422, -13.1812, -100.605, 0.28 ) }
    dend_42 { pt3dadd( 119.306, -13.0441, -100.246, 0.55 ) }
    dend_42 { pt3dadd( 120.625, -12.8159, -99.8672, 0.28 ) }
    dend_42 { pt3dadd( 121.691, -12.6746, -99.5868, 0.55 ) }
    dend_42 { pt3dadd( 122.864, -12.473, -99.3922, 0.28 ) }
    dend_42 { pt3dadd( 124.466, -12.2377, -99.2663, 0.55 ) }
    dend_42 { pt3dadd( 126.262, -11.9677, -99.2426, 0.55 ) }
    dend_42 { pt3dadd( 127.845, -11.7449, -99.3289, 0.28 ) }
    dend_42 { pt3dadd( 130.039, -11.4549, -99.5711, 0.55 ) }
    dend_42 { pt3dadd( 133.838, -10.9788, -100.412, 0.55 ) }
    dend_42 { pt3dadd( 135.514, -10.7487, -101.005, 0.55 ) }
    dend_42 { pt3dadd( 136.233, -10.6452, -101.344, 0.83 ) }
    dend_42 { pt3dadd( 137.61, -10.4777, -102.113, 0.55 ) }
    dend_42 { pt3dadd( 138.563, -10.3432, -102.717, 0.83 ) }
    dend_42 { pt3dadd( 141.115, -9.92652, -104.391, 0.55 ) }
    dend_42 { pt3dadd( 142.695, -9.78691, -105.418, 0.28 ) }
    dend_42 { pt3dadd( 143.363, -9.74418, -105.766, 0.55 ) }
    dend_42 { pt3dadd( 145.209, -9.72373, -106.474, 0.28 ) }
    dend_42 { pt3dadd( 145.864, -9.75877, -106.664, 0.55 ) }
    dend_42 { pt3dadd( 147.215, -9.84632, -106.835, 0.28 ) }
    dend_42 { pt3dadd( 148.598, -9.98642, -106.748, 0.55 ) }
    dend_42 { pt3dadd( 151.389, -10.2602, -106.075, 0.28 ) }
    dend_42 { pt3dadd( 152.677, -10.3973, -105.621, 0.55 ) }
    dend_42 { pt3dadd( 154.605, -10.6708, -104.818, 0.28 ) }
    dend_42 { pt3dadd( 157.034, -10.9818, -103.726, 0.55 ) }
    dend_42 { pt3dadd( 158.785, -11.1767, -102.919, 0.55 ) }
    dend_42 { pt3dadd( 161.8, -11.4133, -101.502, 0.28 ) }
    dend_42 { pt3dadd( 163.033, -11.4886, -101.032, 0.55 ) }
    dend_42 { pt3dadd( 165.154, -11.5771, -100.478, 0.28 ) }
    dend_42 { pt3dadd( 167.248, -11.5611, -100.111, 0.55 ) }
    dend_42 { pt3dadd( 168.383, -11.4804, -100.101, 0.28 ) }
    dend_42 { pt3dadd( 169.391, -11.3028, -100.212, 0.55 ) }
    dend_42 { pt3dadd( 172.221, -10.7235, -100.838, 0.28 ) }
    dend_42 { pt3dadd( 174.22, -10.1858, -101.362, 0.28 ) }
    dend_42 { pt3dadd( 175.937, -9.60367, -101.884, 0.55 ) }
    dend_42 { pt3dadd( 177.828, -8.93996, -102.574, 0.28 ) }
    dend_42 { pt3dadd( 178.298, -8.73816, -102.741, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 74.9845, 9.28091, -44.3987, 0.55 ) }
    dend_35 { pt3dadd( 75.5071, 7.86402, -45.1815, 0.55 ) }
    dend_35 { pt3dadd( 75.8447, 6.65857, -45.7615, 0.28 ) }
    dend_35 { pt3dadd( 76.1516, 5.56087, -46.2014, 0.55 ) }
    dend_35 { pt3dadd( 76.9182, 3.24629, -47.1554, 0.28 ) }
    dend_35 { pt3dadd( 76.9628, 3.09866, -47.2356, 0.55 ) }
    dend_35 { pt3dadd( 77.2181, 2.32319, -47.7175, 0.28 ) }
    dend_35 { pt3dadd( 77.3743, 1.66778, -48.2143, 0.55 ) }
    dend_35 { pt3dadd( 77.5018, 0.973836, -48.8069, 0.28 ) }
    dend_35 { pt3dadd( 77.6505, 0.0212346, -49.6561, 0.55 ) }
    dend_35 { pt3dadd( 78.0219, -2.36785, -51.7464, 0.55 ) }
    dend_35 { pt3dadd( 78.3379, -4.55075, -53.6876, 0.55 ) }
    dend_35 { pt3dadd( 78.5745, -6.29752, -55.2413, 0.55 ) }
    dend_35 { pt3dadd( 78.7778, -8.01588, -56.7402, 0.55 ) }
    dend_35 { pt3dadd( 78.8288, -8.45873, -57.1099, 0.28 ) }
    dend_35 { pt3dadd( 78.8951, -8.92763, -57.4683, 0.55 ) }
    dend_35 { pt3dadd( 79.0425, -9.56641, -57.9085, 0.28 ) }
    dend_35 { pt3dadd( 79.4151, -10.6914, -58.598, 0.55 ) }
    dend_35 { pt3dadd( 80.3, -12.8012, -59.5894, 0.55 ) }
    dend_35 { pt3dadd( 80.7841, -13.9272, -60.0225, 0.28 ) }
    dend_35 { pt3dadd( 81.2118, -15.083, -60.5121, 0.55 ) }
    dend_35 { pt3dadd( 81.6963, -16.7194, -61.2575, 0.28 ) }
    dend_35 { pt3dadd( 82.0065, -18.0517, -61.8889, 0.55 ) }
    dend_35 { pt3dadd( 82.3894, -20.0533, -62.8365, 0.28 ) }
    dend_35 { pt3dadd( 82.799, -22.1181, -63.7557, 0.55 ) }
    dend_35 { pt3dadd( 83.3563, -25.1223, -65.1156, 0.28 ) }
    dend_35 { pt3dadd( 83.6203, -26.7279, -65.8454, 0.55 ) }
    dend_35 { pt3dadd( 83.8656, -28.3759, -66.6289, 0.28 ) }
    dend_35 { pt3dadd( 84.0685, -29.8351, -67.4045, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 84.3832, -31.6653, -68.5235, 0.55 ) }
    dend_35 { pt3dadd( 84.7841, -33.3463, -69.5211, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 77.7632, 26.8618, 0.277401, 0.55 ) }
    dend_31 { pt3dadd( 80.7155, 26.2124, 0.568309, 0.55 ) }
    dend_31 { pt3dadd( 82.8463, 25.7064, 0.561935, 0.55 ) }
    dend_31 { pt3dadd( 87.4885, 24.6034, 0.295685, 0.55 ) }
    dend_31 { pt3dadd( 89.5585, 24.1088, -0.0179939, 0.55 ) }
    dend_31 { pt3dadd( 91.8121, 23.6446, -0.463274, 0.55 ) }
    dend_31 { pt3dadd( 94.8249, 23.1262, -1.26254, 0.55 ) }
    dend_31 { pt3dadd( 97.9725, 22.5676, -2.42833, 0.55 ) }
    dend_31 { pt3dadd( 99.6076, 22.2985, -3.23661, 0.55 ) }
    dend_31 { pt3dadd( 102.893, 21.8626, -5.34402, 0.55 ) }
    dend_31 { pt3dadd( 104.403, 21.6869, -6.36135, 0.55 ) }
    dend_31 { pt3dadd( 107.928, 21.2275, -8.8573, 0.55 ) }
    dend_31 { pt3dadd( 110.309, 20.8107, -10.5513, 0.55 ) }
    dend_31 { pt3dadd( 112.067, 20.4721, -11.7172, 0.83 ) }
    dend_31 { pt3dadd( 114.871, 19.8134, -13.573, 0.55 ) }
    dend_31 { pt3dadd( 117.615, 19.0001, -15.3125, 0.83 ) }
    dend_31 { pt3dadd( 119.941, 18.176, -16.7283, 0.55 ) }
    dend_31 { pt3dadd( 122.024, 17.447, -17.8668, 0.55 ) }
    dend_31 { pt3dadd( 123.219, 17.0704, -18.4329, 0.83 ) }
    dend_31 { pt3dadd( 126.021, 16.1632, -19.6, 0.28 ) }
    dend_31 { pt3dadd( 127.427, 15.7498, -20.0748, 0.28 ) }
    dend_31 { pt3dadd( 128.774, 15.2785, -20.6274, 0.28 ) }
    dend_31 { pt3dadd( 130.233, 14.811, -21.2218, 0.28 ) }
    dend_31 { pt3dadd( 132.567, 14.1204, -22.2117, 0.28 ) }
    dend_31 { pt3dadd( 133.51, 13.8476, -22.5784, 0.55 ) }
    dend_31 { pt3dadd( 135.785, 13.164, -23.2231, 0.55 ) }
    dend_31 { pt3dadd( 139.895, 11.8427, -24.1836, 0.55 ) }
    dend_31 { pt3dadd( 141.035, 11.4342, -24.4063, 0.55 ) }
    dend_31 { pt3dadd( 142.053, 11.0249, -24.5691, 0.83 ) }
    dend_31 { pt3dadd( 144.287, 10.1616, -24.7256, 0.55 ) }
    dend_31 { pt3dadd( 146.231, 9.40735, -24.8297, 0.55 ) }
    dend_31 { pt3dadd( 148.07, 8.70049, -24.9176, 0.55 ) }
    dend_31 { pt3dadd( 149.489, 8.13791, -25.0319, 0.55 ) }
    dend_31 { pt3dadd( 151.715, 7.11453, -25.362, 0.55 ) }
    dend_31 { pt3dadd( 154.307, 5.70881, -25.9556, 0.55 ) }
    dend_31 { pt3dadd( 158.269, 3.12702, -27.2826, 0.55 ) }
    dend_31 { pt3dadd( 160.402, 1.40846, -28.2381, 0.55 ) }
    dend_31 { pt3dadd( 162.212, -0.395974, -29.249, 0.28 ) }
    dend_31 { pt3dadd( 162.738, -1.05585, -29.6167, 0.55 ) }
    dend_31 { pt3dadd( 163.857, -2.89424, -30.5951, 0.28 ) }
    dend_31 { pt3dadd( 164.77, -4.95259, -31.6169, 0.55 ) }
    dend_31 { pt3dadd( 165.577, -7.55727, -32.6507, 0.55 ) }
    dend_31 { pt3dadd( 166.134, -9.28963, -33.2502, 0.28 ) }
    dend_31 { pt3dadd( 166.343, -9.90912, -33.4332, 0.55 ) }
    dend_31 { pt3dadd( 166.892, -11.454, -33.8698, 0.28 ) }
    dend_31 { pt3dadd( 167.654, -13.4769, -34.3946, 0.55 ) }
    dend_31 { pt3dadd( 169.688, -18.3864, -35.559, 0.55 ) }
    dend_31 { pt3dadd( 170.76, -20.874, -36.0996, 0.55 ) }
    dend_31 { pt3dadd( 171.759, -23.159, -36.5771, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 77.7632, 26.8618, 0.277401, 0.55 ) }
    dend_30 { pt3dadd( 79.8109, 26.6887, 1.66866, 0.55 ) }
    dend_30 { pt3dadd( 80.4661, 26.6393, 2.08057, 0.55 ) }
    dend_30 { pt3dadd( 82.8993, 26.3704, 3.4883, 0.55 ) }
    dend_30 { pt3dadd( 85.6192, 26.1109, 5.11074, 0.55 ) }
    dend_30 { pt3dadd( 89.1084, 25.7492, 7.27522, 0.55 ) }
    dend_30 { pt3dadd( 90.072, 25.6519, 7.8673, 0.55 ) }
    dend_30 { pt3dadd( 91.7977, 25.4191, 8.89735, 0.55 ) }
    dend_30 { pt3dadd( 93.6885, 25.2216, 9.97004, 0.55 ) }
    dend_30 { pt3dadd( 95.8851, 25.0728, 11.1394, 0.55 ) }
    dend_30 { pt3dadd( 97.9564, 24.9584, 12.2556, 0.55 ) }
    dend_30 { pt3dadd( 99.0925, 24.9565, 12.8311, 0.55 ) }
    dend_30 { pt3dadd( 100.428, 24.9908, 13.5141, 0.55 ) }
    dend_30 { pt3dadd( 102.08, 25.085, 14.343, 0.83 ) }
    dend_30 { pt3dadd( 104.775, 25.3005, 15.4336, 0.55 ) }
    dend_30 { pt3dadd( 106.554, 25.3974, 16.0575, 0.83 ) }
    dend_30 { pt3dadd( 109.016, 25.4454, 16.8155, 0.55 ) }
    dend_30 { pt3dadd( 109.77, 25.4239, 17.0277, 0.55 ) }
    dend_30 { pt3dadd( 112.104, 25.2588, 17.6106, 0.55 ) }
    dend_30 { pt3dadd( 116.264, 24.7641, 18.4314, 0.55 ) }
    dend_30 { pt3dadd( 119.301, 24.2576, 18.923, 0.55 ) }
    dend_30 { pt3dadd( 121.704, 23.7362, 19.3381, 0.55 ) }
    dend_30 { pt3dadd( 124.153, 23.0611, 19.8091, 0.55 ) }
    dend_30 { pt3dadd( 124.667, 22.9052, 19.9071, 0.28 ) }
    dend_30 { pt3dadd( 125.709, 22.5497, 20.093, 0.83 ) }
    dend_30 { pt3dadd( 129.986, 21.0239, 20.8642, 0.55 ) }
    dend_30 { pt3dadd( 132.976, 19.974, 21.3486, 0.55 ) }
    dend_30 { pt3dadd( 135.435, 19.157, 21.8217, 0.55 ) }
    dend_30 { pt3dadd( 136.904, 18.6611, 22.1169, 0.83 ) }
    dend_30 { pt3dadd( 138.062, 18.2863, 22.3555, 0.28 ) }
    dend_30 { pt3dadd( 139.111, 17.9504, 22.5628, 0.55 ) }
    dend_30 { pt3dadd( 147.414, 16.9557, 25.8244, 0.55 ) }
    dend_30 { pt3dadd( 156.072, 15.0192, 27.192, 0.55 ) }
    dend_30 { pt3dadd( 164.753, 14.0276, 29.2468, 0.55 ) }
    dend_30 { pt3dadd( 172.555, 11.3922, 32.8168, 0.55 ) }
    dend_30 { pt3dadd( 179.789, 7.52736, 36.4644, 0.55 ) }
    dend_30 { pt3dadd( 187.51, 3.03446, 37.3368, 0.55 ) }
    dend_30 { pt3dadd( 194.988, -1.8663, 36.5457, 0.55 ) }
    dend_30 { pt3dadd( 203.289, -5.15028, 35.6089, 0.55 ) }
    dend_30 { pt3dadd( 211.519, -8.71145, 35.2182, 0.55 ) }
    dend_30 { pt3dadd( 220.11, -11.2133, 34.514, 0.55 ) }
    dend_30 { pt3dadd( 228.74, -13.6275, 35.0275, 0.55 ) }
    dend_30 { pt3dadd( 236.772, -17.5898, 35.6199, 0.55 ) }
    dend_30 { pt3dadd( 245.136, -20.2764, 37.4639, 0.55 ) }
    dend_30 { pt3dadd( 253.258, -21.9996, 40.8729, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.32382, -28.8206, 5.54272, 1.38 ) }
    dend_13 { pt3dadd( 1.15689, -31.2897, 5.06441, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.32382, -28.8206, 5.54272, 0.55 ) }
    dend_12 { pt3dadd( -2.89998, -31.1634, 5.01673, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.61646, -34.1449, 4.4483, 0.55 ) }
    dend_12 { pt3dadd( -5.98166, -36.1349, 4.01241, 0.55 ) }
    dend_12 { pt3dadd( -7.05871, -37.8002, 3.44538, 0.55 ) }
    dend_12 { pt3dadd( -9.32242, -41.2613, 1.93995, 0.55 ) }
    dend_12 { pt3dadd( -10.8974, -43.5799, 0.826628, 0.55 ) }
    dend_12 { pt3dadd( -12.2721, -45.6579, -0.228421, 0.55 ) }
    dend_12 { pt3dadd( -15.8237, -50.733, -2.94286, 0.55 ) }
    dend_12 { pt3dadd( -20.1214, -56.6229, -6.16824, 0.55 ) }
    dend_12 { pt3dadd( -23.4293, -61.0909, -8.74085, 0.55 ) }
    dend_12 { pt3dadd( -25.5209, -64.0196, -10.4187, 0.55 ) }
    dend_12 { pt3dadd( -27.9143, -67.5233, -12.3303, 0.55 ) }
    dend_12 { pt3dadd( -30.9319, -72.5117, -14.6882, 0.55 ) }
    dend_12 { pt3dadd( -32.675, -76.0159, -16.0025, 0.55 ) }
    dend_12 { pt3dadd( -34.8691, -81.022, -17.3595, 0.55 ) }
    dend_12 { pt3dadd( -36.6057, -85.685, -18.3338, 0.55 ) }
    dend_12 { pt3dadd( -38.3026, -91.4667, -19.2483, 0.55 ) }
    dend_12 { pt3dadd( -39.8485, -98.2179, -19.9814, 0.55 ) }
    dend_12 { pt3dadd( -40.6097, -103.344, -20.2539, 0.55 ) }
    dend_12 { pt3dadd( -40.8866, -105.883, -20.1754, 0.55 ) }
    dend_12 { pt3dadd( -41.319, -111.822, -19.5646, 0.55 ) }
    dend_12 { pt3dadd( -41.6825, -117.371, -18.823, 0.55 ) }
    dend_12 { pt3dadd( -41.9259, -122.939, -17.5892, 0.55 ) }
    dend_12 { pt3dadd( -42.1579, -126.135, -16.7299, 0.55 ) }
    dend_12 { pt3dadd( -42.9465, -136.008, -13.7117, 0.55 ) }
    dend_12 { pt3dadd( -43.0136, -136.735, -13.4792, 0.55 ) }
    dend_12 { pt3dadd( -43.3842, -141.183, -11.9236, 0.55 ) }
    dend_12 { pt3dadd( -44.46, -149.159, -9.09715, 0.55 ) }
    dend_12 { pt3dadd( -44.7787, -151.829, -8.30565, 0.55 ) }
    dend_12 { pt3dadd( -45.1223, -156.014, -7.77309, 0.55 ) }
    dend_12 { pt3dadd( -45.0883, -157.569, -7.89273, 0.55 ) }
    dend_12 { pt3dadd( -44.4116, -162.822, -9.13716, 0.55 ) }
    dend_12 { pt3dadd( -43.5455, -166.216, -10.5464, 0.55 ) }
    dend_12 { pt3dadd( -41.6423, -171.622, -13.7673, 0.55 ) }
    dend_12 { pt3dadd( -38.8842, -178.221, -18.0926, 0.28 ) }
    dend_12 { pt3dadd( -38.1009, -179.852, -19.3597, 0.55 ) }
    dend_12 { pt3dadd( -36.8291, -182.326, -21.4825, 0.28 ) }
    dend_12 { pt3dadd( -36.6336, -182.699, -21.8222, 0.55 ) }
    dend_12 { pt3dadd( -35.6371, -184.742, -23.5227, 0.28 ) }
    dend_12 { pt3dadd( -35.3994, -185.438, -23.967, 0.55 ) }
    dend_12 { pt3dadd( -34.4842, -189.056, -25.6522, 0.28 ) }
    dend_12 { pt3dadd( -34.2227, -190.29, -26.2277, 0.55 ) }
    dend_12 { pt3dadd( -33.579, -193.862, -27.7185, 0.28 ) }
    dend_12 { pt3dadd( -33.3731, -194.985, -28.1823, 0.55 ) }
    dend_12 { pt3dadd( -32.7144, -198.865, -29.7346, 0.28 ) }
    dend_12 { pt3dadd( -32.3995, -200.649, -30.4538, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.3995, -65.9451, 50.4755, 0.55 ) }
    dend_10 { pt3dadd( -13.8758, -70.9263, 56.2784, 0.55 ) }
    dend_10 { pt3dadd( -16.7853, -75.0455, 62.5381, 0.55 ) }
    dend_10 { pt3dadd( -19.7695, -79.6865, 68.3839, 0.55 ) }
    dend_10 { pt3dadd( -22.9249, -84.3028, 74.1589, 0.55 ) }
    dend_10 { pt3dadd( -25.77, -89.9483, 79.1239, 0.55 ) }
    dend_10 { pt3dadd( -28.3467, -95.4109, 84.4284, 0.55 ) }
    dend_10 { pt3dadd( -30.9773, -102.143, 87.9453, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.3995, -65.9451, 50.4755, 0.55 ) }
    dend_3 { pt3dadd( -10.8976, -73.5941, 57.6207, 0.55 ) }
    dend_3 { pt3dadd( -10.0587, -82.3939, 63.2486, 0.55 ) }
    dend_3 { pt3dadd( -10.9064, -91.1912, 68.879, 0.55 ) }
    dend_3 { pt3dadd( -12.3991, -100.449, 73.5553, 0.55 ) }
    dend_3 { pt3dadd( -13.465, -109.689, 78.3819, 0.55 ) }
    dend_3 { pt3dadd( -14.4201, -118.569, 83.8645, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -55.727, 38.8332, -22.9426, 0.83 ) }
    dend_60 { pt3dadd( -55.4753, 40.3831, -24.2388, 0.83 ) }
    dend_60 { pt3dadd( -54.9795, 44.0863, -27.1158, 0.55 ) }
    dend_60 { pt3dadd( -54.7757, 45.6718, -28.2368, 0.83 ) }
    dend_60 { pt3dadd( -54.5625, 47.3582, -29.3301, 0.55 ) }
    dend_60 { pt3dadd( -54.3661, 49.0704, -30.2304, 0.55 ) }
    dend_60 { pt3dadd( -54.2714, 49.9212, -30.5796, 0.28 ) }
    dend_60 { pt3dadd( -54.2543, 50.467, -30.6821, 0.55 ) }
    dend_60 { pt3dadd( -54.1812, 52.2589, -30.6446, 0.28 ) }
    dend_60 { pt3dadd( -54.1352, 53.0243, -30.589, 0.55 ) }
    dend_60 { pt3dadd( -54.0166, 55.6697, -30.2932, 0.28 ) }
    dend_60 { pt3dadd( -53.9818, 57.7515, -29.9943, 0.55 ) }
    dend_60 { pt3dadd( -54.0889, 60.9703, -29.4426, 0.28 ) }
    dend_60 { pt3dadd( -54.2858, 63.7799, -28.9129, 0.28 ) }
    dend_60 { pt3dadd( -54.4893, 65.3361, -28.5946, 0.55 ) }
    dend_60 { pt3dadd( -54.8442, 67.1642, -28.2273, 0.28 ) }
    dend_60 { pt3dadd( -55.0728, 68.0265, -28.0452, 0.55 ) }
    dend_60 { pt3dadd( -55.7151, 70.0473, -27.723, 0.28 ) }
    dend_60 { pt3dadd( -56.2284, 71.3878, -27.5905, 0.28 ) }
    dend_60 { pt3dadd( -56.7577, 72.7041, -27.5052, 0.28 ) }
    dend_60 { pt3dadd( -57.0097, 73.4041, -27.4602, 0.55 ) }
    dend_60 { pt3dadd( -57.8681, 76.2679, -27.3319, 0.28 ) }
    dend_60 { pt3dadd( -58.7656, 79.6848, -27.2324, 0.55 ) }
    dend_60 { pt3dadd( -59.0578, 80.8681, -27.201, 0.55 ) }
    dend_60 { pt3dadd( -59.372, 82.0488, -27.1455, 0.55 ) }
    dend_60 { pt3dadd( -60.1689, 84.54, -27.0826, 0.55 ) }
    dend_60 { pt3dadd( -60.795, 86.1618, -27.0883, 0.28 ) }
    dend_60 { pt3dadd( -61.1036, 86.7647, -27.1064, 0.55 ) }
    dend_60 { pt3dadd( -62.0612, 88.3736, -27.1309, 0.28 ) }
    dend_60 { pt3dadd( -63.1477, 90.0816, -27.2372, 0.55 ) }
    dend_60 { pt3dadd( -64.9412, 92.5075, -27.5171, 0.28 ) }
    dend_60 { pt3dadd( -65.8036, 93.504, -27.6816, 0.28 ) }
    dend_60 { pt3dadd( -67.1817, 94.8729, -28.0833, 0.55 ) }
    dend_60 { pt3dadd( -68.7142, 96.2899, -28.5968, 0.28 ) }
    dend_60 { pt3dadd( -68.9906, 96.5073, -28.6938, 0.55 ) }
    dend_60 { pt3dadd( -69.979, 97.185, -29.0471, 0.28 ) }
    dend_60 { pt3dadd( -73.3777, 99.3183, -30.2226, 0.55 ) }
    dend_60 { pt3dadd( -78.0585, 101.9, -32.0651, 0.28 ) }
    dend_60 { pt3dadd( -78.915, 102.328, -32.4606, 0.55 ) }
    dend_60 { pt3dadd( -81.2564, 103.419, -33.5935, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -82.2365, 103.866, -34.0966, 0.28 ) }
    dend_60 { pt3dadd( -83.0835, 104.237, -34.5761, 0.55 ) }
    dend_60 { pt3dadd( -85.5239, 105.047, -36.1963, 0.28 ) }
    dend_60 { pt3dadd( -87.2378, 105.434, -37.2878, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -55.727, 38.8332, -22.9426, 0.55 ) }
    dend_57 { pt3dadd( -56.0165, 39.9973, -23.0291, 0.55 ) }
    dend_57 { pt3dadd( -56.2076, 40.6782, -23.016, 0.28 ) }
    dend_57 { pt3dadd( -56.4477, 41.1451, -22.8895, 0.55 ) }
    dend_57 { pt3dadd( -56.9991, 42.2172, -22.5989, 0.28 ) }
    dend_57 { pt3dadd( -57.3864, 42.9702, -22.3949, 0.55 ) }
    dend_57 { pt3dadd( -58.1004, 44.3585, -22.0187, 0.28 ) }
    dend_57 { pt3dadd( -58.5683, 45.0837, -21.6826, 0.55 ) }
    dend_57 { pt3dadd( -60.2687, 46.6966, -20.2376, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -131.005, -49.1335, -26.9642, 0.55 ) }
    dend_52 { pt3dadd( -137.263, -57.4014, -30.5554, 0.55 ) }
    dend_52 { pt3dadd( -141.759, -66.5349, -34.6526, 0.55 ) }
    dend_52 { pt3dadd( -145.135, -74.9543, -40.8282, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -131.005, -49.1335, -26.9642, 0.55 ) }
    dend_49 { pt3dadd( -135.734, -54.0027, -31.2472, 0.55 ) }
    dend_49 { pt3dadd( -139.628, -58.806, -36.364, 0.55 ) }
    dend_49 { pt3dadd( -143.194, -63.6972, -41.6346, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -140.515, 14.1268, 37.6624, 0.55 ) }
    dend_47 { pt3dadd( -149.78, 13.269, 42.4129, 0.55 ) }
    dend_47 { pt3dadd( -159.361, 13.9717, 46.521, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -140.515, 14.1268, 37.6624, 0.55 ) }
    dend_46 { pt3dadd( -153.634, 12.2449, 40.6858, 0.55 ) }
    dend_46 { pt3dadd( -166.784, 12.5746, 44.1174, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 84.7841, -33.3463, -69.5211, 0.28 ) }
    dend_39 { pt3dadd( 92.3149, -38.3372, -80.1585, 0.28 ) }
    dend_39 { pt3dadd( 93.0616, -38.8691, -81.0865, 0.55 ) }
    dend_39 { pt3dadd( 94.3223, -39.7671, -82.6533, 0.28 ) }
    dend_39 { pt3dadd( 95.3838, -40.5233, -83.9725, 0.28 ) }
    dend_39 { pt3dadd( 96.789, -41.5242, -85.7188, 0.55 ) }
    dend_39 { pt3dadd( 98.6415, -42.8438, -88.0212, 0.55 ) }
    dend_39 { pt3dadd( 101.068, -44.6873, -88.9506, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 84.7841, -33.3463, -69.5211, 0.55 ) }
    dend_36 { pt3dadd( 85.49, -34.4201, -70.4354, 0.55 ) }
    dend_36 { pt3dadd( 85.7202, -34.9119, -70.8419, 0.28 ) }
    dend_36 { pt3dadd( 86.0721, -35.7623, -71.5561, 0.55 ) }
    dend_36 { pt3dadd( 86.8474, -37.6355, -73.1292, 0.28 ) }
    dend_36 { pt3dadd( 87.3847, -38.9337, -74.2194, 0.55 ) }
    dend_36 { pt3dadd( 88.295, -41.1332, -76.0666, 0.28 ) }
    dend_36 { pt3dadd( 89.3374, -43.8538, -78.5272, 0.28 ) }
    dend_36 { pt3dadd( 89.7666, -45.1138, -79.6827, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 171.759, -23.159, -36.5771, 0.28 ) }
    dend_33 { pt3dadd( 173.846, -26.2308, -36.2213, 0.28 ) }
    dend_33 { pt3dadd( 176.498, -30.3156, -35.4077, 0.28 ) }
    dend_33 { pt3dadd( 178.18, -32.9748, -34.7703, 0.55 ) }
    dend_33 { pt3dadd( 179.205, -34.4495, -34.3497, 0.28 ) }
    dend_33 { pt3dadd( 179.75, -35.2439, -34.1153, 0.28 ) }
    dend_33 { pt3dadd( 182.449, -39.162, -33.0195, 0.55 ) }
    dend_33 { pt3dadd( 183.079, -40.042, -32.6627, 0.28 ) }
    dend_33 { pt3dadd( 184.572, -42.3718, -31.5592, 0.55 ) }
    dend_33 { pt3dadd( 185.839, -44.391, -30.6823, 0.28 ) }
    dend_33 { pt3dadd( 186.947, -46.0312, -30.0042, 0.55 ) }
    dend_33 { pt3dadd( 188.237, -47.9839, -29.314, 0.55 ) }
    dend_33 { pt3dadd( 190.266, -51.0577, -28.6076, 0.55 ) }
    dend_33 { pt3dadd( 190.753, -51.8098, -28.4613, 0.55 ) }
    dend_33 { pt3dadd( 192.488, -54.6155, -27.9436, 0.28 ) }
    dend_33 { pt3dadd( 193.155, -55.7594, -27.761, 0.55 ) }
    dend_33 { pt3dadd( 194.092, -57.2208, -27.5366, 0.28 ) }
    dend_33 { pt3dadd( 195.409, -59.2888, -27.3135, 0.55 ) }
    dend_33 { pt3dadd( 197.57, -62.5155, -27.4458, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 171.759, -23.159, -36.5771, 0.55 ) }
    dend_32 { pt3dadd( 168.738, -22.876, -36.4589, 0.55 ) }
    dend_32 { pt3dadd( 166.285, -22.6462, -36.363, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.15689, -31.2897, 5.06441, 0.83 ) }
    dend_17 { pt3dadd( 1.23912, -31.4462, 5.05679, 0.83 ) }
    dend_17 { pt3dadd( 2.17099, -32.8234, 5.09103, 0.83 ) }
    dend_17 { pt3dadd( 2.99305, -34.0296, 5.03827, 0.55 ) }
    dend_17 { pt3dadd( 3.64888, -34.9919, 4.99617, 0.55 ) }
    dend_17 { pt3dadd( 5.04287, -37.0373, 4.90669, 0.83 ) }
    dend_17 { pt3dadd( 6.73369, -39.5182, 4.79816, 0.55 ) }
    dend_17 { pt3dadd( 7.65226, -40.8154, 4.77025, 0.83 ) }
    dend_17 { pt3dadd( 9.26452, -42.8731, 4.83144, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.15689, -31.2897, 5.06441, 0.55 ) }
    dend_14 { pt3dadd( -1.16992, -32.5287, 2.20906, 0.55 ) }
    dend_14 { pt3dadd( -3.66748, -33.8585, -0.855802, 0.55 ) }
    dend_14 { pt3dadd( -6.61586, -35.4284, -4.4739, 0.55 ) }
    dend_14 { pt3dadd( -10.1962, -37.3347, -8.86744, 0.55 ) }
    dend_14 { pt3dadd( -12.2279, -38.4165, -11.3606, 0.55 ) }
    dend_14 { pt3dadd( -12.636, -38.6338, -11.8615, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -14.4201, -118.569, 83.8645, 0.55 ) }
    dend_7 { pt3dadd( -14.5511, -128.527, 90.599, 0.55 ) }
    dend_7 { pt3dadd( -13.3419, -139.263, 95.8753, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -14.4201, -118.569, 83.8645, 0.55 ) }
    dend_4 { pt3dadd( -16.389, -131.091, 90.9815, 0.55 ) }
    dend_4 { pt3dadd( -18.6737, -143.177, 98.7315, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -60.2687, 46.6966, -20.2376, 0.28 ) }
    dend_59 { pt3dadd( -62.5372, 47.9216, -18.2454, 0.28 ) }
    dend_59 { pt3dadd( -63.4072, 48.3636, -17.3982, 0.55 ) }
    dend_59 { pt3dadd( -65.9102, 49.6361, -14.8909, 0.28 ) }
    dend_59 { pt3dadd( -67.1366, 50.295, -13.7657, 0.55 ) }
    dend_59 { pt3dadd( -70.4642, 52.102, -10.8339, 0.28 ) }
    dend_59 { pt3dadd( -73.8462, 53.9385, -7.85414, 0.55 ) }
    dend_59 { pt3dadd( -79.4078, 56.7054, -2.9332, 0.28 ) }
    dend_59 { pt3dadd( -80.5934, 57.3029, -1.88239, 0.55 ) }
    dend_59 { pt3dadd( -83.2117, 58.7811, 0.376195, 0.28 ) }
    dend_59 { pt3dadd( -84.2422, 59.4137, 1.27548, 0.55 ) }
    dend_59 { pt3dadd( -94.8605, 62.6731, 8.1729, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -106.119, 67.844, 12.3494, 0.55 ) }
    dend_59 { pt3dadd( -116.385, 73.1487, 18.4659, 0.55 ) }
    dend_59 { pt3dadd( -125.212, 80.2766, 24.9638, 0.55 ) }
    dend_59 { pt3dadd( -135.136, 86.9321, 30.2722, 0.55 ) }
    dend_59 { pt3dadd( -145.976, 91.2334, 36.1828, 0.55 ) }
    dend_59 { pt3dadd( -156.122, 94.2643, 43.8513, 0.55 ) }
    dend_59 { pt3dadd( -165.162, 95.8048, 53.1714, 0.55 ) }
    dend_59 { pt3dadd( -174.282, 98.1529, 62.2408, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -60.2687, 46.6966, -20.2376, 0.55 ) }
    dend_58 { pt3dadd( -62.5251, 45.4552, -19.7565, 0.55 ) }
    dend_58 { pt3dadd( -63.6911, 44.7708, -19.5148, 0.28 ) }
    dend_58 { pt3dadd( -64.5587, 44.2615, -19.3349, 0.55 ) }
    dend_58 { pt3dadd( -65.2819, 43.837, -19.185, 0.28 ) }
    dend_58 { pt3dadd( -65.7884, 43.5396, -19.08, 0.55 ) }
    dend_58 { pt3dadd( -67.1851, 42.7197, -18.7905, 0.28 ) }
    dend_58 { pt3dadd( -68.0862, 42.1147, -18.7306, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -145.135, -74.9543, -40.8282, 0.55 ) }
    dend_54 { pt3dadd( -149.522, -84.8533, -43.7208, 0.55 ) }
    dend_54 { pt3dadd( -153.676, -95.1224, -45.4193, 0.55 ) }
    dend_54 { pt3dadd( -157.007, -105.174, -49.0884, 0.55 ) }
    dend_54 { pt3dadd( -161.451, -115.228, -51.2696, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -145.135, -74.9543, -40.8282, 0.55 ) }
    dend_53 { pt3dadd( -148.074, -77.5687, -46.0026, 0.55 ) }
    dend_53 { pt3dadd( -150.719, -79.2664, -51.6923, 0.55 ) }
    dend_53 { pt3dadd( -153.887, -81.7739, -56.7837, 0.55 ) }
    dend_53 { pt3dadd( -158.33, -83.3463, -61.2601, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -143.194, -63.6972, -41.6346, 0.55 ) }
    dend_51 { pt3dadd( -146.765, -67.5996, -48.3646, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -143.194, -63.6972, -41.6346, 0.55 ) }
    dend_50 { pt3dadd( -149.42, -71.3525, -38.4613, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 101.068, -44.6873, -88.9506, 0.28 ) }
    dend_41 { pt3dadd( 104.342, -45.7255, -90.5071, 0.28 ) }
    dend_41 { pt3dadd( 105.863, -46.2078, -91.2301, 0.55 ) }
    dend_41 { pt3dadd( 108.763, -47.1275, -92.6089, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 101.068, -44.6873, -88.9506, 0.55 ) }
    dend_40 { pt3dadd( 100.846, -45.8851, -89.9253, 0.55 ) }
    dend_40 { pt3dadd( 100.402, -48.2812, -91.8751, 0.28 ) }
    dend_40 { pt3dadd( 100.258, -49.0617, -92.5101, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 89.7666, -45.1138, -79.6827, 0.28 ) }
    dend_38 { pt3dadd( 91.229, -48.7687, -83.3024, 0.28 ) }
    dend_38 { pt3dadd( 91.9531, -50.5785, -85.0947, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 89.7666, -45.1138, -79.6827, 0.55 ) }
    dend_37 { pt3dadd( 87.7798, -45.9567, -78.782, 0.55 ) }
    dend_37 { pt3dadd( 82.2395, -48.3073, -76.2705, 0.28 ) }
    dend_37 { pt3dadd( 80.9234, -48.8658, -75.6738, 0.55 ) }
    dend_37 { pt3dadd( 77.3231, -50.3933, -74.0417, 0.28 ) }
    dend_37 { pt3dadd( 75.0024, -51.3779, -72.9896, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 9.26452, -42.8731, 4.83144, 0.83 ) }
    dend_23 { pt3dadd( 9.30532, -43.1114, 4.80483, 0.83 ) }
    dend_23 { pt3dadd( 9.8778, -46.2258, 4.54803, 0.83 ) }
    dend_23 { pt3dadd( 10.0894, -48.5688, 4.48563, 0.83 ) }
    dend_23 { pt3dadd( 10.1127, -50.8375, 4.6439, 0.83 ) }
    dend_23 { pt3dadd( 10.0155, -53.8605, 5.07163, 0.83 ) }
    dend_23 { pt3dadd( 9.79541, -57.3473, 5.6834, 0.83 ) }
    dend_23 { pt3dadd( 9.54654, -61.2384, 6.57135, 0.83 ) }
    dend_23 { pt3dadd( 9.28908, -65.0169, 7.60789, 0.83 ) }
    dend_23 { pt3dadd( 8.6822, -69.6708, 8.74424, 0.83 ) }
    dend_23 { pt3dadd( 8.29826, -71.8152, 9.13423, 0.83 ) }
    dend_23 { pt3dadd( 8.01303, -73.4289, 9.32595, 0.83 ) }
    dend_23 { pt3dadd( 7.40686, -76.5284, 9.62241, 0.83 ) }
    dend_23 { pt3dadd( 6.94315, -79.3025, 9.74211, 0.83 ) }
    dend_23 { pt3dadd( 6.33574, -85.2084, 9.37266, 0.83 ) }
    dend_23 { pt3dadd( 6.08114, -88.4398, 8.75533, 0.83 ) }
    dend_23 { pt3dadd( 5.86539, -91.4189, 7.97017, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 9.26452, -42.8731, 4.83144, 0.55 ) }
    dend_18 { pt3dadd( 8.15866, -45.5397, 5.2727, 0.55 ) }
    dend_18 { pt3dadd( 7.34412, -47.4649, 5.74064, 0.55 ) }
    dend_18 { pt3dadd( 6.86976, -48.6857, 6.15998, 0.55 ) }
    dend_18 { pt3dadd( 6.23988, -50.5802, 6.99348, 0.55 ) }
    dend_18 { pt3dadd( 5.11921, -54.3107, 8.8785, 0.55 ) }
    dend_18 { pt3dadd( 4.28217, -57.1102, 10.626, 0.55 ) }
    dend_18 { pt3dadd( 3.64086, -59.3351, 12.2737, 0.55 ) }
    dend_18 { pt3dadd( 2.95447, -61.5705, 14.1101, 0.55 ) }
    dend_18 { pt3dadd( 2.38024, -63.4169, 15.7365, 0.28 ) }
    dend_18 { pt3dadd( 1.91399, -64.908, 17.3001, 0.55 ) }
    dend_18 { pt3dadd( 1.0439, -67.5909, 20.5587, 0.55 ) }
    dend_18 { pt3dadd( 0.434759, -69.2223, 22.7585, 0.55 ) }
    dend_18 { pt3dadd( 0.0813728, -70.1372, 23.9822, 0.55 ) }
    dend_18 { pt3dadd( -0.40173, -71.2222, 25.3707, 0.83 ) }
    dend_18 { pt3dadd( -1.89152, -74.4583, 29.2586, 0.28 ) }
    dend_18 { pt3dadd( -2.38695, -75.5318, 30.5137, 0.55 ) }
    dend_18 { pt3dadd( -3.22388, -77.4739, 32.7043, 0.28 ) }
    dend_18 { pt3dadd( -3.47605, -78.0688, 33.4264, 0.55 ) }
    dend_18 { pt3dadd( -3.98716, -79.4668, 35.0826, 0.28 ) }
    dend_18 { pt3dadd( -4.27911, -80.2667, 35.9607, 0.55 ) }
    dend_18 { pt3dadd( -5.48697, -82.9316, 38.0859, 0.55 ) }
    dend_18 { pt3dadd( -6.52076, -89.8507, 46.5434, 0.55 ) }
    dend_18 { pt3dadd( -6.99638, -96.3738, 55.3577, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -12.636, -38.6338, -11.8615, 0.55 ) }
    dend_16 { pt3dadd( -14.4919, -39.3898, -13.7203, 0.55 ) }
    dend_16 { pt3dadd( -15.0398, -39.5676, -14.2436, 0.55 ) }
    dend_16 { pt3dadd( -16.417, -40.0141, -15.5053, 0.55 ) }
    dend_16 { pt3dadd( -19.4334, -40.8994, -18.1414, 0.28 ) }
    dend_16 { pt3dadd( -19.8828, -41.0206, -18.506, 0.55 ) }
    dend_16 { pt3dadd( -21.7591, -41.5773, -19.9538, 0.55 ) }
    dend_16 { pt3dadd( -24.3314, -42.3394, -21.6938, 0.55 ) }
    dend_16 { pt3dadd( -25.3158, -42.6008, -22.3369, 0.28 ) }
    dend_16 { pt3dadd( -26.1786, -42.7727, -22.8535, 0.28 ) }
    dend_16 { pt3dadd( -27.652, -43.0368, -23.5454, 0.55 ) }
    dend_16 { pt3dadd( -29.4502, -43.279, -24.455, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -31.112, -43.3675, -25.3329, 0.55 ) }
    dend_16 { pt3dadd( -32.3969, -43.3347, -25.9897, 0.55 ) }
    dend_16 { pt3dadd( -33.2822, -43.2419, -26.4698, 0.55 ) }
    dend_16 { pt3dadd( -35.8846, -42.8583, -27.9565, 0.55 ) }
    dend_16 { pt3dadd( -38.624, -42.2774, -29.4746, 0.55 ) }
    dend_16 { pt3dadd( -39.7556, -41.978, -30.0759, 0.28 ) }
    dend_16 { pt3dadd( -40.8311, -41.7098, -30.6659, 0.55 ) }
    dend_16 { pt3dadd( -43.0133, -41.2996, -31.8393, 0.28 ) }
    dend_16 { pt3dadd( -43.7476, -41.1815, -32.2268, 0.83 ) }
    dend_16 { pt3dadd( -45.1184, -40.9452, -32.8619, 0.28 ) }
    dend_16 { pt3dadd( -46.1047, -40.8449, -33.1957, 0.55 ) }
    dend_16 { pt3dadd( -47.5366, -40.7467, -33.6521, 0.28 ) }
    dend_16 { pt3dadd( -48.1065, -40.7006, -33.8161, 0.55 ) }
    dend_16 { pt3dadd( -49.1618, -40.6337, -34.0654, 0.55 ) }
    dend_16 { pt3dadd( -50.7542, -40.3805, -34.3862, 0.55 ) }
    dend_16 { pt3dadd( -51.7925, -40.1537, -34.5407, 0.28 ) }
    dend_16 { pt3dadd( -52.6268, -39.8719, -34.603, 0.55 ) }
    dend_16 { pt3dadd( -53.6096, -39.4246, -34.6826, 0.28 ) }
    dend_16 { pt3dadd( -53.7715, -39.3388, -34.7011, 0.55 ) }
    dend_16 { pt3dadd( -55.2783, -38.5157, -35.1212, 0.28 ) }
    dend_16 { pt3dadd( -56.3772, -37.8981, -35.5373, 0.55 ) }
    dend_16 { pt3dadd( -57.8355, -36.9943, -36.2771, 0.83 ) }
    dend_16 { pt3dadd( -59.0424, -36.2247, -37.0142, 0.28 ) }
    dend_16 { pt3dadd( -59.3555, -36.0281, -37.2335, 0.55 ) }
    dend_16 { pt3dadd( -61.7617, -34.5539, -39.0409, 0.28 ) }
    dend_16 { pt3dadd( -62.1843, -34.3026, -39.396, 0.55 ) }
    dend_16 { pt3dadd( -63.4334, -33.4831, -40.5189, 0.28 ) }
    dend_16 { pt3dadd( -63.7559, -33.2723, -40.811, 0.55 ) }
    dend_16 { pt3dadd( -64.5818, -32.7233, -41.5073, 0.28 ) }
    dend_16 { pt3dadd( -65.1659, -32.328, -41.9657, 0.55 ) }
    dend_16 { pt3dadd( -66.4649, -31.4444, -42.8032, 0.28 ) }
    dend_16 { pt3dadd( -67.2366, -30.9713, -43.2712, 0.55 ) }
    dend_16 { pt3dadd( -68.8833, -30.0591, -44.1842, 0.28 ) }
    dend_16 { pt3dadd( -69.3743, -29.813, -44.4484, 0.55 ) }
    dend_16 { pt3dadd( -70.1446, -29.4834, -44.8346, 0.28 ) }
    dend_16 { pt3dadd( -70.7962, -29.2057, -45.1313, 0.55 ) }
    dend_16 { pt3dadd( -72.1472, -28.6462, -45.6694, 0.28 ) }
    dend_16 { pt3dadd( -72.5538, -28.4863, -45.8185, 0.55 ) }
    dend_16 { pt3dadd( -75.5682, -27.242, -46.792, 0.28 ) }
    dend_16 { pt3dadd( -76.6193, -26.7337, -47.0456, 0.55 ) }
    dend_16 { pt3dadd( -78.4858, -25.74, -47.3831, 0.28 ) }
    dend_16 { pt3dadd( -79.3247, -25.2599, -47.5105, 0.55 ) }
    dend_16 { pt3dadd( -81.2414, -24.172, -47.6947, 0.28 ) }
    dend_16 { pt3dadd( -81.9435, -23.8031, -47.7317, 0.55 ) }
    dend_16 { pt3dadd( -84.4789, -22.6906, -47.727, 0.28 ) }
    dend_16 { pt3dadd( -85.5386, -22.3567, -47.713, 0.55 ) }
    dend_16 { pt3dadd( -87.0557, -22.123, -47.6712, 0.55 ) }
    dend_16 { pt3dadd( -87.9883, -22.037, -47.6223, 0.55 ) }
    dend_16 { pt3dadd( -89.8765, -21.9095, -47.3779, 0.28 ) }
    dend_16 { pt3dadd( -91.7212, -21.802, -47.021, 0.28 ) }
    dend_16 { pt3dadd( -93.2523, -21.7068, -46.679, 0.55 ) }
    dend_16 { pt3dadd( -95.0909, -21.4274, -46.0588, 0.28 ) }
    dend_16 { pt3dadd( -95.9773, -21.1729, -45.6295, 0.55 ) }
    dend_16 { pt3dadd( -98.0345, -20.2093, -44.3943, 0.28 ) }
    dend_16 { pt3dadd( -99.0268, -19.4862, -43.4928, 0.55 ) }
    dend_16 { pt3dadd( -99.6233, -18.9016, -42.7524, 0.28 ) }
    dend_16 { pt3dadd( -100.234, -18.2412, -41.7215, 0.55 ) }
    dend_16 { pt3dadd( -100.958, -17.3754, -40.3067, 0.28 ) }
    dend_16 { pt3dadd( -101.236, -17.0704, -39.7743, 0.55 ) }
    dend_16 { pt3dadd( -102.779, -15.7042, -37.2579, 0.28 ) }
    dend_16 { pt3dadd( -103.304, -15.2736, -36.4159, 0.55 ) }
    dend_16 { pt3dadd( -104.542, -14.3196, -34.3696, 0.28 ) }
    dend_16 { pt3dadd( -105.216, -13.8133, -33.258, 0.55 ) }
    dend_16 { pt3dadd( -105.771, -13.3985, -32.3457, 0.55 ) }
    dend_16 { pt3dadd( -106.445, -12.9105, -31.279, 0.28 ) }
    dend_16 { pt3dadd( -106.827, -12.6628, -30.8015, 0.55 ) }
    dend_16 { pt3dadd( -108.146, -11.7772, -29.2988, 0.28 ) }
    dend_16 { pt3dadd( -108.823, -11.2104, -28.4971, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.636, -38.6338, -11.8615, 0.55 ) }
    dend_15 { pt3dadd( -12.2519, -38.7955, -12.4222, 0.55 ) }
    dend_15 { pt3dadd( -11.8401, -38.8841, -12.9795, 0.55 ) }
    dend_15 { pt3dadd( -11.2853, -38.9376, -13.6506, 0.55 ) }
    dend_15 { pt3dadd( -10.8044, -38.9278, -14.1805, 0.55 ) }
    dend_15 { pt3dadd( -7.36316, -38.415, -17.4393, 0.55 ) }
    dend_15 { pt3dadd( -6.57923, -38.1909, -18.1904, 0.55 ) }
    dend_15 { pt3dadd( -5.42362, -37.7577, -19.3296, 0.55 ) }
    dend_15 { pt3dadd( -4.60487, -37.4175, -20.1431, 0.55 ) }
    dend_15 { pt3dadd( -3.79013, -37.0288, -20.9196, 0.28 ) }
    dend_15 { pt3dadd( -2.4913, -36.3449, -22.0547, 0.55 ) }
    dend_15 { pt3dadd( -0.491511, -35.2568, -23.6395, 0.28 ) }
    dend_15 { pt3dadd( -0.341688, -35.2016, -23.8193, 0.55 ) }
    dend_15 { pt3dadd( 0.335763, -35.1075, -25.2252, 0.28 ) }
    dend_15 { pt3dadd( 0.629084, -35.1, -26.2437, 0.55 ) }
    dend_15 { pt3dadd( 0.837434, -35.1651, -27.3723, 0.55 ) }
    dend_15 { pt3dadd( 1.17438, -35.3835, -29.4, 0.55 ) }
    dend_15 { pt3dadd( 1.844, -35.8411, -33.3754, 0.55 ) }
    dend_15 { pt3dadd( 2.3385, -36.1795, -36.0343, 0.55 ) }
    dend_15 { pt3dadd( 2.5329, -36.3062, -36.9463, 0.55 ) }
    dend_15 { pt3dadd( 3.95667, -37.0988, -42.9092, 0.55 ) }
    dend_15 { pt3dadd( 4.41241, -37.2934, -44.5072, 0.55 ) }
    dend_15 { pt3dadd( 4.7357, -37.4064, -45.3837, 0.55 ) }
    dend_15 { pt3dadd( 5.66374, -37.7313, -47.3556, 0.55 ) }
    dend_15 { pt3dadd( 8.14817, -38.7821, -51.9365, 0.55 ) }
    dend_15 { pt3dadd( 8.86643, -39.123, -53.1371, 0.28 ) }
    dend_15 { pt3dadd( 9.32537, -39.3532, -53.786, 0.55 ) }
    dend_15 { pt3dadd( 10.0205, -39.7419, -54.7314, 0.28 ) }
    dend_15 { pt3dadd( 10.3322, -39.9496, -55.0939, 0.55 ) }
    dend_15 { pt3dadd( 11.4958, -40.7742, -55.8832, 0.28 ) }
    dend_15 { pt3dadd( 12.4509, -41.7287, -55.8479, 0.55 ) }
    dend_15 { pt3dadd( 13.0122, -42.3921, -55.776, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 13.5113, -43.1054, -55.6268, 0.55 ) }
    dend_15 { pt3dadd( 13.9305, -43.8669, -55.4364, 0.28 ) }
    dend_15 { pt3dadd( 14.1058, -44.2566, -55.3572, 0.55 ) }
    dend_15 { pt3dadd( 14.4964, -45.2677, -55.1185, 0.28 ) }
    dend_15 { pt3dadd( 14.5955, -45.5716, -55.0967, 0.55 ) }
    dend_15 { pt3dadd( 15.1648, -47.3208, -55.0684, 0.28 ) }
    dend_15 { pt3dadd( 15.4594, -48.1401, -55.1551, 0.55 ) }
    dend_15 { pt3dadd( 16.1668, -49.9104, -55.525, 0.28 ) }
    dend_15 { pt3dadd( 16.4596, -50.57, -55.7285, 0.55 ) }
    dend_15 { pt3dadd( 17.5128, -52.7521, -56.5149, 0.28 ) }
    dend_15 { pt3dadd( 17.774, -53.2846, -56.7272, 0.55 ) }
    dend_15 { pt3dadd( 18.5616, -54.9719, -57.4605, 0.28 ) }
    dend_15 { pt3dadd( 18.722, -55.3633, -57.6057, 0.55 ) }
    dend_15 { pt3dadd( 19.1127, -56.3946, -57.9837, 0.28 ) }
    dend_15 { pt3dadd( 19.3494, -56.9977, -58.2577, 0.55 ) }
    dend_15 { pt3dadd( 19.6049, -57.595, -58.5697, 0.55 ) }
    dend_15 { pt3dadd( 20.1148, -58.786, -59.1837, 0.28 ) }
    dend_15 { pt3dadd( 20.5014, -59.5341, -59.6383, 0.55 ) }
    dend_15 { pt3dadd( 21.8407, -61.4592, -61.141, 0.28 ) }
    dend_15 { pt3dadd( 22.386, -62.1023, -61.7621, 0.55 ) }
    dend_15 { pt3dadd( 22.774, -62.5159, -62.1836, 0.28 ) }
    dend_15 { pt3dadd( 23.1799, -62.9, -62.6049, 0.55 ) }
    dend_15 { pt3dadd( 24.4684, -63.9947, -63.8797, 0.28 ) }
    dend_15 { pt3dadd( 25.4501, -64.8385, -64.8126, 0.55 ) }
    dend_15 { pt3dadd( 27.1361, -66.4044, -66.2442, 0.28 ) }
    dend_15 { pt3dadd( 27.6689, -66.8926, -66.6921, 0.55 ) }
    dend_15 { pt3dadd( 28.7179, -67.7911, -67.4512, 0.28 ) }
    dend_15 { pt3dadd( 29.0737, -68.085, -67.6724, 0.55 ) }
    dend_15 { pt3dadd( 29.669, -68.5497, -67.9167, 0.28 ) }
    dend_15 { pt3dadd( 30.202, -68.9417, -68.0845, 0.55 ) }
    dend_15 { pt3dadd( 31.6733, -69.9183, -68.3857, 0.28 ) }
    dend_15 { pt3dadd( 33.375, -70.967, -68.7068, 0.28 ) }
    dend_15 { pt3dadd( 34.2465, -71.4546, -68.8086, 0.28 ) }
    dend_15 { pt3dadd( 35.1272, -71.9222, -68.9675, 0.55 ) }
    dend_15 { pt3dadd( 36.4236, -72.5466, -69.2093, 0.28 ) }
    dend_15 { pt3dadd( 37.0024, -72.8149, -69.3048, 0.83 ) }
    dend_15 { pt3dadd( 38.4782, -73.5149, -69.4898, 0.28 ) }
    dend_15 { pt3dadd( 39.1144, -73.8352, -69.6054, 0.55 ) }
    dend_15 { pt3dadd( 41.8864, -75.3568, -70.2394, 0.28 ) }
    dend_15 { pt3dadd( 43.2624, -76.1411, -70.6701, 0.28 ) }
    dend_15 { pt3dadd( 44.2577, -76.7153, -71.0512, 0.55 ) }
    dend_15 { pt3dadd( 44.8293, -77.0663, -71.3405, 0.55 ) }
    dend_15 { pt3dadd( 46.3285, -78.0262, -72.2334, 0.28 ) }
    dend_15 { pt3dadd( 47.711, -78.9935, -73.1245, 0.55 ) }
    dend_15 { pt3dadd( 48.9625, -79.9162, -73.9333, 0.28 ) }
    dend_15 { pt3dadd( 50.0827, -80.7718, -74.7286, 0.55 ) }
    dend_15 { pt3dadd( 51.0118, -81.4667, -75.3809, 0.28 ) }
    dend_15 { pt3dadd( 51.7893, -81.9739, -75.8739, 0.55 ) }
    dend_15 { pt3dadd( 53.6983, -83.0802, -76.978, 0.28 ) }
    dend_15 { pt3dadd( 54.6721, -83.6371, -77.4955, 0.55 ) }
    dend_15 { pt3dadd( 56.1417, -84.4747, -78.2158, 0.28 ) }
    dend_15 { pt3dadd( 57.3545, -85.1226, -78.7786, 0.55 ) }
    dend_15 { pt3dadd( 60.215, -86.5116, -80.1088, 0.28 ) }
    dend_15 { pt3dadd( 61.381, -87.0144, -80.7358, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.3419, -139.263, 95.8753, 0.55 ) }
    dend_9 { pt3dadd( -13.1313, -147.374, 99.7059, 0.55 ) }
    dend_9 { pt3dadd( -11.8242, -156.042, 101.62, 0.55 ) }
    dend_9 { pt3dadd( -11.1781, -164.449, 104.687, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.3419, -139.263, 95.8753, 0.55 ) }
    dend_8 { pt3dadd( -12.3743, -149.086, 103.51, 0.55 ) }
    dend_8 { pt3dadd( -13.5794, -157.717, 112.442, 0.55 ) }
    dend_8 { pt3dadd( -15.349, -164.33, 122.877, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -18.6737, -143.177, 98.7315, 0.55 ) }
    dend_6 { pt3dadd( -18.8843, -149.05, 101.839, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -18.6737, -143.177, 98.7315, 0.55 ) }
    dend_5 { pt3dadd( -20.5288, -151.271, 103.733, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.86539, -91.4189, 7.97017, 0.83 ) }
    dend_25 { pt3dadd( 6.83791, -95.0102, 8.60297, 0.83 ) }
    dend_25 { pt3dadd( 7.78055, -98.0258, 9.37157, 0.83 ) }
    dend_25 { pt3dadd( 8.71753, -101.023, 10.1356, 0.83 ) }
    dend_25 { pt3dadd( 9.60737, -103.87, 10.8611, 0.83 ) }
    dend_25 { pt3dadd( 10.9786, -108.257, 11.9793, 0.83 ) }
    dend_25 { pt3dadd( 12.34, -112.612, 13.0893, 0.83 ) }
    dend_25 { pt3dadd( 13.4467, -115.476, 14.2169, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.86539, -91.4189, 7.97017, 0.55 ) }
    dend_24 { pt3dadd( 7.35516, -93.3308, 8.45845, 0.55 ) }
    dend_24 { pt3dadd( 8.58923, -94.8204, 8.57711, 0.55 ) }
    dend_24 { pt3dadd( 9.48892, -95.9237, 8.53916, 0.55 ) }
    dend_24 { pt3dadd( 10.4045, -97.2286, 8.26527, 0.83 ) }
    dend_24 { pt3dadd( 11.409, -98.7147, 7.74305, 0.55 ) }
    dend_24 { pt3dadd( 12.3916, -100.168, 7.23226, 0.83 ) }
    dend_24 { pt3dadd( 13.4189, -101.748, 6.50403, 0.55 ) }
    dend_24 { pt3dadd( 14.0419, -102.664, 5.99685, 0.83 ) }
    dend_24 { pt3dadd( 16.0132, -105.631, 4.08541, 0.55 ) }
    dend_24 { pt3dadd( 17.4209, -107.972, 2.37589, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.99638, -96.3738, 55.3577, 0.55 ) }
    dend_20 { pt3dadd( -9.15528, -103.975, 62.7093, 0.55 ) }
    dend_20 { pt3dadd( -12.4536, -110.374, 70.7497, 0.55 ) }
    dend_20 { pt3dadd( -16.1536, -115.677, 79.3914, 0.55 ) }
    dend_20 { pt3dadd( -20.4887, -119.628, 88.451, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -6.99638, -96.3738, 55.3577, 0.55 ) }
    dend_19 { pt3dadd( -7.04569, -104.641, 64.5445, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 13.4467, -115.476, 14.2169, 0.55 ) }
    dend_27 { pt3dadd( 13.5138, -117.545, 14.7501, 0.55 ) }
    dend_27 { pt3dadd( 13.6352, -120.183, 15.522, 0.55 ) }
    dend_27 { pt3dadd( 13.7565, -122.673, 16.2386, 0.55 ) }
    dend_27 { pt3dadd( 13.8362, -124.444, 16.7149, 0.55 ) }
    dend_27 { pt3dadd( 13.9678, -127.605, 17.5052, 0.55 ) }
    dend_27 { pt3dadd( 14.5576, -136.471, 19.5811, 0.55 ) }
    dend_27 { pt3dadd( 14.8798, -139.47, 20.2003, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 15.1606, -141.58, 20.5439, 0.55 ) }
    dend_27 { pt3dadd( 15.5836, -143.98, 20.769, 0.55 ) }
    dend_27 { pt3dadd( 15.9542, -145.832, 20.7788, 0.55 ) }
    dend_27 { pt3dadd( 17.016, -150.143, 20.6942, 0.55 ) }
    dend_27 { pt3dadd( 17.7191, -153.424, 20.5757, 0.55 ) }
    dend_27 { pt3dadd( 18.2061, -155.577, 20.5817, 0.55 ) }
    dend_27 { pt3dadd( 19.3259, -161.172, 20.8517, 0.55 ) }
    dend_27 { pt3dadd( 19.9843, -164.943, 21.1758, 0.55 ) }
    dend_27 { pt3dadd( 20.7356, -169.813, 21.8545, 0.55 ) }
    dend_27 { pt3dadd( 21.4696, -175.35, 23.0449, 0.55 ) }
    dend_27 { pt3dadd( 22.0126, -179.041, 24.1204, 0.55 ) }
    dend_27 { pt3dadd( 22.3564, -181.22, 24.8321, 0.55 ) }
    dend_27 { pt3dadd( 22.6419, -183.232, 25.4669, 0.55 ) }
    dend_27 { pt3dadd( 23.0944, -185.771, 26.1794, 0.55 ) }
    dend_27 { pt3dadd( 24.298, -191.883, 27.4848, 0.55 ) }
    dend_27 { pt3dadd( 24.8751, -194.237, 27.9438, 0.55 ) }
    dend_27 { pt3dadd( 25.4678, -196.863, 28.4112, 0.55 ) }
    dend_27 { pt3dadd( 26.3369, -200.809, 29.0801, 0.55 ) }
    dend_27 { pt3dadd( 26.8626, -203.857, 29.5601, 0.55 ) }
    dend_27 { pt3dadd( 27.2248, -206.766, 29.9094, 0.55 ) }
    dend_27 { pt3dadd( 27.4574, -209.55, 30.1901, 0.55 ) }
    dend_27 { pt3dadd( 27.6253, -212.273, 30.48, 0.55 ) }
    dend_27 { pt3dadd( 27.7637, -214.209, 30.6739, 0.55 ) }
    dend_27 { pt3dadd( 28.0551, -217.37, 30.8998, 0.55 ) }
    dend_27 { pt3dadd( 28.4815, -221.159, 30.8847, 0.55 ) }
    dend_27 { pt3dadd( 28.7921, -222.99, 30.7712, 0.55 ) }
    dend_27 { pt3dadd( 29.1342, -224.59, 30.5671, 0.55 ) }
    dend_27 { pt3dadd( 29.986, -227.589, 30.0765, 0.55 ) }
    dend_27 { pt3dadd( 30.5316, -229.49, 29.7077, 0.55 ) }
    dend_27 { pt3dadd( 31.1893, -231.835, 29.3473, 0.55 ) }
    dend_27 { pt3dadd( 31.5495, -233.493, 29.1597, 0.55 ) }
    dend_27 { pt3dadd( 32.3401, -237.817, 28.7945, 0.55 ) }
    dend_27 { pt3dadd( 32.7569, -241.072, 28.7004, 0.55 ) }
    dend_27 { pt3dadd( 33.145, -246.136, 28.8968, 0.55 ) }
    dend_27 { pt3dadd( 33.3254, -249.41, 29.3351, 0.55 ) }
    dend_27 { pt3dadd( 33.4423, -252.854, 29.8854, 0.28 ) }
    dend_27 { pt3dadd( 33.4335, -254.244, 30.1436, 0.28 ) }
    dend_27 { pt3dadd( 33.2655, -257.632, 31.0403, 0.28 ) }
    dend_27 { pt3dadd( 32.9772, -260.774, 32.08, 0.28 ) }
    dend_27 { pt3dadd( 32.754, -264.911, 34.0014, 0.28 ) }
    dend_27 { pt3dadd( 34.3668, -274.012, 36.7035, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 13.4467, -115.476, 14.2169, 0.55 ) }
    dend_26 { pt3dadd( 14.2957, -115.922, 15.4922, 0.55 ) }
    dend_26 { pt3dadd( 15.9055, -117.101, 18.255, 0.55 ) }
    dend_26 { pt3dadd( 17.2297, -118.282, 20.7102, 0.28 ) }
    dend_26 { pt3dadd( 18.5967, -119.634, 23.398, 0.55 ) }
    dend_26 { pt3dadd( 19.2597, -120.513, 25.1672, 0.28 ) }
    dend_26 { pt3dadd( 20.2148, -122.115, 28.4086, 0.55 ) }
    dend_26 { pt3dadd( 20.3669, -122.99, 29.9829, 0.28 ) }
    dend_26 { pt3dadd( 20.3591, -123.312, 30.6035, 0.28 ) }
    dend_26 { pt3dadd( 20.3305, -123.773, 31.6837, 0.55 ) }
    dend_26 { pt3dadd( 20.4011, -125.274, 35.7552, 0.28 ) }
    dend_26 { pt3dadd( 20.473, -125.856, 37.458, 0.55 ) }
    dend_26 { pt3dadd( 21.0807, -127.514, 42.3377, 0.28 ) }
    dend_26 { pt3dadd( 21.5392, -128.318, 44.8969, 0.28 ) }
    dend_26 { pt3dadd( 22.2499, -129.341, 47.9909, 0.55 ) }
    dend_26 { pt3dadd( 23.6102, -130.908, 52.3829, 0.28 ) }
    dend_26 { pt3dadd( 23.8427, -131.112, 52.9416, 0.55 ) }
    dend_26 { pt3dadd( 25.1345, -132.091, 55.5793, 0.28 ) }
    dend_26 { pt3dadd( 25.2733, -132.18, 55.8017, 0.55 ) }
    dend_26 { pt3dadd( 26.47, -133.27, 57.8039, 0.28 ) }
    dend_26 { pt3dadd( 26.9965, -133.874, 58.796, 0.55 ) }
    dend_26 { pt3dadd( 31.2256, -138.322, 67.0094, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -20.4887, -119.628, 88.451, 0.55 ) }
    dend_22 { pt3dadd( -20.8492, -122.579, 96.4038, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -20.4887, -119.628, 88.451, 0.55 ) }
    dend_21 { pt3dadd( -24.8489, -126.562, 96.2031, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 5
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 3
    dend_61 nseg = 15
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 7
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_54 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 7
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_BP_6f14cec977_0_0


