// Cell: dNAC222_L23_NBC_ec4aba2351_0_0
/*
{
  "id" : "dNAC222_L23_NBC_ec4aba2351_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.3022, -4.91444, 0.0966793, 4.52114", "-9.29583, -4.38505, 0.0928107, 5.29403", "-8.28943, -3.85565, 0.0889422, 6.87895", "-7.28303, -3.32626, 0.0850736, 8.2055", "-6.27664, -2.79687, 0.0812051, 9.69593", "-5.27024, -2.26748, 0.0773365, 11.1864", "-4.26385, -1.73809, 0.073468, 12.1576", "-3.25745, -1.20869, 0.0695994, 12.1028", "-2.25106, -0.679302, 0.0657309, 12.5691", "-1.24466, -0.14991, 0.0618623, 13.5271", "-0.238266, 0.379482, 0.0579938, 14.6432", "0.76813, 0.908874, 0.0541252, 15.6577", "1.77453, 1.43827, 0.0502567, 15.7754", "2.78092, 1.96766, 0.0463882, 15.433", "3.78732, 2.49705, 0.0425196, 14.9368", "4.79371, 3.02644, 0.0386511, 14.4352", "5.80011, 3.55583, 0.0347825, 13.7953", "6.8065, 4.08523, 0.030914, 12.9353", "7.8129, 4.61462, 0.0270454, 10.4207", "8.81929, 5.14401, 0.0231769, 6.43383", "9.82569, 5.6734, 0.0193083, 3.7421" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.0327, 0.387977, 12.0695, 1.38", "1.9038, 2.32223, 8.33323, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "4.5927, -1.16052, -10.1505, 1.66", "5.03446, -1.60762, -12.3123, 1.66", "7.35526, -3.95649, -23.6694, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.7473, 1.16698, 5.4595, 1.66", "-11.2184, 1.84394, 7.25472, 1.66", "-15.3073, 2.74846, 10.0327, 1.66", "-18.3489, 3.22293, 11.7804, 1.66", "-22.1688, 3.81881, 13.9751, 1.66", "-26.3862, 4.47668, 16.3982, 1.66", "-32.34, 5.40541, 19.819, 1.66", "-36.2065, 5.88855, 22.0409, 1.66", "-42.2969, 6.35937, 25.2032, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-10.3073, -5.69202, 1.9395, 2.77", "-13.3203, -6.47418, 0.873179, 2.77", "-18.336, -7.77627, -0.901972, 2.77", "-22.4762, -8.85107, -2.36726, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-11.2873, -5.13152, 6.9695, 1.11", "-15.3882, -8.3492, 9.66513, 1.11", "-19.1928, -11.2865, 12.0669, 1.11", "-23.5709, -14.6766, 14.856, 1.11", "-26.1672, -16.6463, 16.4883, 1.38", "-30.7141, -20.1224, 19.533, 0.83", "-34.4566, -23.0694, 22.1836, 1.11", "-35.9231, -24.2976, 23.3155, 1.11", "-39.3623, -27.1285, 26.0163, 1.11", "-40.8968, -28.4477, 27.2913, 1.11", "-44.0819, -31.3517, 30.1885, 1.11", "-45.9057, -33.1453, 31.8783, 1.11", "-47.0418, -34.3593, 32.964, 1.11", "-48.9094, -36.3372, 34.6797, 1.66", "-53.299, -40.8259, 38.6447, 1.66", "-56.9008, -44.4931, 41.9066, 1.38", "-60.8385, -48.5766, 45.2573, 1.38", "-63.6985, -51.6562, 47.7069, 1.38", "-67.0883, -55.5495, 50.7977, 1.11", "-69.9317, -59.0006, 53.5216, 1.11", "-74.1971, -64.3945, 57.8484, 1.11", "-78.6856, -70.3419, 62.6082, 0.83", "-81.3643, -74.0533, 65.6013, 0.83", "-85.329, -79.7754, 70.0222, 1.38", "-87.4811, -83.0552, 72.4246, 1.38", "-89.8643, -86.7421, 75.0057, 0.83", "-92.1309, -90.1477, 77.3609, 0.83", "-93.7817, -92.5869, 79.0734, 1.11", "-95.8238, -95.5264, 81.0349, 0.83", "-97.6279, -98.0412, 82.6373, 1.11", "-99.2683, -100.343, 84.118, 0.55", "-101.099, -102.885, 85.7346, 1.11", "-103.198, -105.756, 87.6469, 0.55", "-105.134, -108.317, 89.365, 1.94", "-107.726, -111.738, 91.7093, 0.55", "-109.331, -113.891, 93.2016, 0.55", "-111.279, -116.618, 95.0548, 0.55", "-113.09, -119.388, 96.8857, 1.11", "-115.779, -123.882, 99.5363, 0.28", "-116.627, -125.501, 100.301, 1.11", "-118.064, -128.989, 101.88, 0.28", "-118.569, -130.588, 102.612, 0.55", "-119.301, -133.555, 104.068, 0.28", "-119.684, -135.348, 104.909, 0.28", "-120.417, -139.383, 106.769, 1.66", "-121.835, -146.699, 110.12, 0.28", "-122.368, -149.357, 111.339, 0.28", "-122.964, -152.122, 112.757, 0.83", "-123.726, -155.65, 114.803, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-3.7273, -5.95802, 11.6495, 2.77", "-4.17873, -7.36968, 11.6495, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.6827, -2.60452, 1.6195, 2.49", "10.9776, -3.60514, 1.95362, 2.22", "14.6288, -5.19707, 2.48517, 2.22", "16.9909, -6.22695, 2.82906, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.0827, 8.19698, -4.97829E-4, 2.22", "6.27851, 10.1224, -0.62919, 2.22", "6.53487, 12.6433, -1.45227, 2.22", "6.79837, 15.2344, -2.29828, 2.22", "7.20608, 19.2435, -3.60729, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999996128858968
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "9.82569, 5.6734, 0.0193083, 0.896594", "23.101, 12.6566, 0.0193083, 0.896594", "36.3764, 19.6398, 0.0193083, 0.896594" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "1.9038, 2.32223, 8.33323, 0.83", "-2.58639, 9.93665, 6.77208, 0.83", "-4.79523, 13.6604, 6.10803, 0.83", "-6.41065, 16.3493, 5.64351, 0.83", "-7.51424, 18.1288, 5.35456, 1.38", "-10.3304, 22.5638, 4.89374, 0.83", "-12.3352, 25.7211, 4.56567, 1.38", "-15.3872, 30.1788, 4.55984, 0.83", "-18.5027, 34.612, 4.60531, 0.83", "-19.8159, 36.4143, 4.66939, 0.83", "-22.146, 39.7277, 4.70308, 1.94" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "1.9038, 2.32223, 8.33323, 1.38", "2.97057, 4.06946, 10.192, 1.38", "4.33972, 6.31195, 12.5775, 1.38", "5.61353, 8.39827, 14.797, 1.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "7.35526, -3.95649, -23.6694, 0.83", "7.92069, -1.88427, -27.7436, 0.83", "8.29581, -0.509525, -30.4465, 0.83", "8.7697, 1.22724, -33.8611, 0.83", "8.92013, 1.77851, -34.945, 0.55", "9.36155, 3.39616, -38.1255, 0.55", "9.76005, 4.85676, -40.9972, 0.55", "10.4848, 8.24359, -47.7181, 0.55", "10.7353, 12.7675, -53.696, 0.55", "11.6281, 16.8655, -59.9412, 0.55", "13.642, 22.0692, -64.8623, 0.55", "17.0728, 27.6658, -68.2628, 0.55", "20.6768, 32.7485, -72.3189, 0.55", "25.7004, 36.684, -76.2655, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "7.35526, -3.95649, -23.6694, 1.66", "7.17452, -6.82943, -26.4331, 1.66", "7.01787, -9.31942, -28.8284, 1.11" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-42.2969, 6.35937, 25.2032, 0.55", "-43.4646, 5.97431, 25.3853, 0.55", "-46.5732, 4.88444, 25.8244, 0.55", "-47.1353, 4.70107, 25.893, 0.55", "-48.6951, 4.22672, 26.063, 0.55", "-49.1264, 4.09335, 26.1078, 0.83", "-50.7639, 3.5667, 26.3038, 0.55", "-52.4972, 2.98116, 26.5085, 1.11", "-54.429, 2.31487, 26.73, 0.55", "-55.7111, 1.86384, 26.8424, 1.94", "-56.8793, 1.46779, 26.9092, 1.94", "-58.2868, 1.00041, 26.9559, 0.55", "-59.1409, 0.693966, 26.9342, 0.55", "-60.5168, 0.197299, 26.8276, 0.28", "-61.9067, -0.30368, 26.6398, 1.94", "-63.9107, -0.958076, 26.295, 0.55", "-64.5168, -1.14056, 26.1818, 1.66", "-66.7623, -1.74191, 25.6979, 0.55", "-68.1674, -2.07132, 25.4272, 1.11", "-70.349, -2.53356, 25.034, 0.55", "-71.3257, -2.72088, 24.8897, 0.55", "-72.3761, -2.90823, 24.7519, 1.38", "-75.6615, -3.44118, 24.3975, 0.28", "-78.948, -3.9011, 24.141, 0.28", "-79.769, -4.0172, 24.0887, 1.38", "-82.5789, -4.4233, 23.9716, 0.28", "-84.1691, -4.65485, 23.9124, 0.83", "-85.2099, -4.79488, 23.8838, 0.28", "-86.6631, -5.00455, 23.9247, 0.55", "-87.6172, -5.1444, 23.9633, 0.28", "-88.8427, -5.31482, 24.0425, 1.94" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-42.2969, 6.35937, 25.2032, 0.83", "-47.4626, 6.10166, 27.9579, 0.83", "-50.7817, 5.9516, 29.4914, 1.66", "-53.7767, 5.86532, 30.7233, 1.11", "-56.8974, 5.83552, 31.8777, 1.11", "-60.3134, 5.96273, 33.0416, 1.11", "-63.1776, 6.13644, 34.0009, 1.11", "-65.6481, 6.35465, 34.684, 0.83", "-68.4702, 6.69348, 35.4535, 1.11", "-71.2225, 7.10231, 36.2929, 1.38", "-76.3634, 7.98359, 38.1535, 0.55", "-78.556, 8.3832, 39.0503, 0.55", "-81.3654, 8.85041, 40.2725, 0.55", "-84.2281, 9.27373, 41.6283, 1.66", "-87.1898, 9.60385, 43.1151, 1.66", "-91.1042, 9.88065, 45.1219, 1.11", "-93.5098, 9.94115, 46.392, 1.66", "-96.8943, 10.023, 48.2326, 0.83", "-99.2188, 10.0289, 49.5096, 1.11", "-100.928, 9.99695, 50.4621, 0.55", "-103.194, 9.84305, 51.6755, 0.83", "-105.562, 9.51996, 52.9881, 1.38", "-108.211, 9.00451, 54.7425, 0.55", "-109.703, 8.58689, 56.0792, 0.55", "-110.273, 8.36567, 56.6636, 0.28", "-111.38, 7.8273, 57.9805, 0.55", "-113.609, 6.55884, 60.9632, 0.28", "-115.2, 5.58664, 63.1957, 1.66", "-118.434, 3.54659, 67.9438, 0.28", "-119.097, 3.19471, 68.9574, 1.11", "-120.754, 2.46295, 71.5018, 0.28", "-121.736, 2.16953, 73.0795, 0.83", "-123.272, 1.92795, 75.4895, 0.28", "-123.713, 1.90798, 76.1601, 0.83", "-126.26, 2.07501, 79.9853, 0.28", "-127.435, 2.24672, 81.7333, 1.66", "-130.83, 2.88785, 86.6599, 0.55", "-132.116, 3.14144, 88.4718, 0.28", "-133.627, 3.4469, 90.5092, 1.11", "-135.566, 3.76536, 92.9728, 0.55", "-137.558, 3.98621, 95.2918, 0.55", "-139.302, 4.08066, 97.1507, 1.11", "-142.22, 4.06291, 100.024, 0.28", "-143.009, 3.98939, 100.822, 0.28", "-145.691, 3.43529, 103.638, 1.38", "-148.483, 2.46072, 106.694, 0.55", "-149.884, 1.72849, 108.361, 0.28", "-150.847, 1.03525, 109.581, 1.11", "-153.126, -1.04771, 112.583, 0.28", "-154.519, -2.5019, 114.514, 1.38", "-155.812, -4.07616, 116.397, 0.55", "-156.866, -5.57634, 118.028, 1.11", "-158.305, -7.76264, 120.31, 0.28", "-159.461, -9.58408, 122.068, 0.28", "-160.614, -11.3347, 123.663, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.4762, -8.85107, -2.36726, 1.38", "-26.857, -9.30615, -1.6696, 1.38", "-29.0814, -9.33083, -1.47045, 1.38", "-35.2607, -9.12639, -0.739632, 1.38", "-37.4169, -8.96315, -0.417079, 1.38", "-39.9644, -8.67715, 0.0507771, 1.11", "-42.7769, -8.3352, 0.712401, 1.11", "-49.1556, -7.22712, 2.44001, 1.11", "-52.5955, -6.47784, 3.55194, 1.11", "-56.6827, -5.37954, 5.06828, 0.83", "-60.1464, -4.38343, 6.45584, 0.83", "-63.5239, -3.3973, 7.91, 1.38", "-65.9086, -2.7027, 8.9952, 0.55", "-68.1584, -2.03511, 10.0932, 0.55", "-70.8492, -1.25625, 11.2546, 0.55", "-73.6799, -0.468067, 12.3816, 1.66", "-76.7486, 0.372425, 13.4577, 0.55", "-78.1676, 0.893186, 13.8915, 1.11", "-81.3004, 2.32684, 14.8683, 0.55", "-82.7975, 3.23575, 15.3553, 0.83", "-84.2039, 4.23988, 15.8086, 0.28", "-85.7505, 5.50179, 16.298, 0.83", "-90.7968, 10.1903, 17.8712, 0.28", "-92.7589, 12.1658, 18.5698, 1.11", "-95.7471, 15.452, 19.9285, 0.55", "-97.7628, 17.803, 21.045, 2.22", "-99.2243, 19.5777, 21.993, 0.55", "-101.56, 22.5393, 23.6245, 0.28", "-103.038, 24.3501, 24.7903, 0.83", "-105.681, 27.6242, 27.0425, 0.28", "-106.157, 28.244, 27.499, 1.94", "-107.086, 29.6324, 28.5323, 0.55", "-109.341, 33.216, 31.204, 0.28", "-110.395, 34.8982, 32.3623, 0.55" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-22.4762, -8.85107, -2.36726, 1.66", "-23.6485, -13.0343, -2.92226, 1.66", "-25.4193, -19.3535, -3.76066, 1.66", "-27.8285, -27.9504, -4.90124, 1.66", "-29.1775, -32.764, -5.53988, 1.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.17873, -7.36968, 11.6495, 0.83", "-3.25409, -6.80522, 15.2645, 0.83", "-1.76564, -5.63578, 21.3, 0.83", "-0.786881, -4.8668, 25.2687, 0.83", "0.138427, -4.13981, 29.0208, 0.83", "1.37399, -3.16906, 34.0308, 0.83", "1.78977, -2.8424, 35.7168, 1.38", "1.83855, -2.75066, 36.0278, 1.38" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "16.9909, -6.22695, 2.82906, 0.83", "21.4226, -7.46391, 2.92845, 0.83", "25.6898, -8.64281, 3.18086, 0.83", "31.2091, -10.2066, 3.45162, 0.83", "35.3959, -11.4413, 3.61921, 0.83", "38.0843, -12.2398, 3.76489, 1.11", "40.1293, -12.8642, 3.91145, 0.83", "42.784, -13.6593, 4.27971, 1.11", "44.9669, -14.3478, 4.65078, 1.11", "48.25, -15.6826, 5.25591, 0.83", "50.8929, -16.9975, 5.64787, 0.83", "52.2337, -17.75, 5.78151, 0.83", "54.8443, -19.3319, 6.00136, 1.38", "56.7509, -20.5915, 6.16005, 0.83", "58.6594, -21.8993, 6.31018, 0.83", "60.4179, -23.0939, 6.41176, 0.55", "61.9259, -24.0686, 6.45419, 0.83", "63.9514, -25.2985, 6.49289, 0.83", "65.8396, -26.3772, 6.57552, 0.83", "68.1989, -27.6589, 6.73949, 0.83", "72.5641, -29.9695, 7.15501, 0.83", "74.6662, -31.0589, 7.38914, 1.11", "77.0341, -32.2177, 7.65599, 1.11", "79.2148, -33.2543, 7.77518, 0.55", "79.8983, -33.5731, 7.80588, 0.55", "82.0652, -34.6815, 7.82616, 1.11", "83.7856, -35.5988, 7.68424, 0.55", "85.3026, -36.3909, 7.47871, 0.55", "88.6225, -37.9046, 6.69957, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.9909, -6.22695, 2.82906, 0.83", "18.6782, -7.58446, 5.5494, 0.83", "22.6835, -10.8069, 12.0068, 0.83", "25.2467, -12.869, 16.1392, 0.83", "26.6014, -13.9589, 18.3232, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.20608, 19.2435, -3.60729, 1.38", "5.63766, 20.699, -3.76827, 1.38", "4.11291, 22.114, -3.92477, 1.38" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.20608, 19.2435, -3.60729, 1.94", "10.3673, 22.0709, -5.264, 1.94", "11.6537, 23.2215, -5.93813, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.3764, 19.6398, 0.0193083, 1.38", "49.6517, 26.623, 0.0193083, 1.38", "62.9271, 33.6062, 0.0193083, 1.38" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-22.146, 39.7277, 4.70308, 0.83", "-24.5047, 39.593, 3.67028, 0.83", "-27.8064, 39.4044, 2.2245, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-22.146, 39.7277, 4.70308, 0.55", "-22.646, 43.3033, 5.07828, 0.55", "-22.7915, 45.0005, 5.30172, 0.55", "-22.9279, 47.1502, 5.60715, 1.11", "-23.233, 51.4597, 6.23179, 0.83", "-23.3729, 53.286, 6.48828, 0.28", "-23.4316, 54.2791, 6.61871, 0.83", "-23.5191, 56.7101, 6.88934, 0.28", "-23.5553, 59.1344, 7.17279, 0.83", "-23.5322, 61.1893, 7.42793, 0.28", "-23.5188, 64.0837, 7.81218, 1.38", "-23.568, 65.7977, 8.02857, 0.28", "-23.607, 66.5648, 8.10734, 0.83" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.61353, 8.39827, 14.797, 0.83", "8.17787, 10.394, 19.0087, 0.83", "9.40865, 11.478, 21.1276, 0.83", "10.5424, 12.621, 23.0988, 1.38", "12.0065, 14.3336, 25.8767, 1.11", "12.7982, 15.3605, 27.4258, 1.11", "13.2432, 15.9873, 28.3074, 1.11", "14.3062, 17.7772, 30.5965, 0.83", "15.2176, 19.4525, 32.4721, 1.11", "16.0711, 21.0841, 34.1347, 0.55", "16.4874, 21.9653, 34.9692, 1.11", "17.4483, 24.0834, 36.9464, 1.11", "18.6824, 26.6701, 39.3842, 1.66", "20.0525, 29.2258, 41.8363, 0.83", "20.8195, 30.5353, 43.1376, 1.66" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "25.7004, 36.684, -76.2655, 0.28", "28.7663, 42.3428, -83.5526, 0.28", "31.9085, 47.0515, -91.5245, 0.28", "35.3019, 51.9572, -99.2527, 0.28", "37.9349, 58.4691, -105.9, 0.28", "39.3983, 64.7074, -113.197, 0.28", "41.8922, 70.3099, -120.759, 0.28", "43.9856, 76.4029, -128.024, 0.28", "45.2977, 82.9028, -135.098, 0.28", "45.8975, 89.7607, -141.908, 0.28", "47.4498, 95.4947, -149.63, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "25.7004, 36.684, -76.2655, 0.28", "27.8056, 41.9625, -83.2125, 0.28", "29.2309, 46.5165, -90.8658, 0.28", "31.2928, 50.4723, -98.7383, 0.28", "35.0638, 53.6007, -106.385, 0.28", "37.6086, 56.9297, -114.435, 0.28", "40.3004, 60.1737, -122.475, 0.28", "41.2285, 63.1857, -131.0, 0.28", "41.2025, 66.7115, -139.356, 0.28", "41.0383, 69.8882, -147.864, 0.28", "41.307, 71.5003, -156.842, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "7.01787, -9.31942, -28.8284, 0.55", "8.67635, -10.9503, -38.0479, 0.55", "9.24855, -11.5129, -41.2289, 0.55", "9.70435, -11.9611, -43.7625, 0.55", "12.4572, -14.5097, -55.114, 0.55", "14.198, -16.9125, -66.6953, 0.55", "14.9333, -18.8569, -78.4744, 0.55", "17.0469, -22.2066, -89.7312, 0.55", "21.3244, -23.8164, -100.799, 0.55", "25.1425, -24.2172, -112.147, 0.55", "27.649, -24.0618, -123.86, 0.55", "31.2142, -25.9689, -135.125, 0.55", "35.951, -30.5001, -145.067, 0.55", "40.0757, -35.7342, -154.899, 0.55", "46.0664, -41.1815, -163.593, 0.55", "51.736, -47.2162, -172.074, 0.55", "56.3494, -53.6826, -180.831, 0.55", "61.4097, -59.1762, -190.059, 0.55", "64.3864, -66.9675, -198.306, 0.55", "68.569, -76.4844, -203.492, 0.55", "73.0063, -85.4339, -209.513, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.01787, -9.31942, -28.8284, 0.55", "6.82397, -9.97286, -29.935, 0.55", "6.02456, -12.6668, -34.4972, 0.55", "5.36147, -14.9014, -38.2815, 0.55", "4.86713, -19.3903, -46.5108, 0.55", "5.53074, -21.9421, -55.5695, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-29.1775, -32.764, -5.53988, 0.55", "-31.4689, -36.371, -8.77647, 0.55", "-33.9487, -40.5919, -12.3077, 0.28", "-34.9738, -42.7321, -13.9311, 0.28", "-35.8874, -45.0521, -15.7476, 0.28", "-37.3133, -49.4688, -19.2951, 0.55", "-38.2252, -52.2932, -21.5636, 0.55", "-39.2718, -56.6826, -24.7385, 0.55", "-39.981, -60.4496, -27.2973, 0.55", "-40.4542, -64.1907, -30.0075, 0.55", "-40.5158, -65.9855, -31.3764, 0.28", "-41.9171, -76.8158, -37.9376, 0.28", "-41.2864, -87.3701, -45.0623, 0.28" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-29.1775, -32.764, -5.53988, 1.11", "-29.6203, -36.2307, -5.29572, 1.11", "-30.0513, -39.6045, -5.0581, 1.11", "-30.4815, -42.9718, -4.82094, 1.11", "-30.8552, -45.8982, -4.61482, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.83855, -2.75066, 36.0278, 0.55", "2.72532, -3.65452, 39.5398, 0.55", "2.98844, -3.88461, 40.4921, 0.83", "6.20658, -6.24631, 50.9495, 0.28", "6.75676, -6.64457, 52.8035, 0.83", "7.9721, -7.57827, 57.0987, 0.55", "8.61756, -8.06856, 59.5618, 1.11", "10.2306, -9.21343, 65.901, 0.55", "11.2639, -9.88682, 69.8898, 1.38", "13.2172, -11.1407, 77.2949, 0.55", "14.2568, -11.8065, 81.2001, 1.38", "16.3916, -13.0752, 89.1895, 0.28", "17.0191, -13.4282, 91.4751, 1.11", "17.8188, -13.9026, 94.3736, 0.55", "18.8589, -14.4457, 97.886, 1.66", "20.3944, -15.0062, 102.45, 0.55", "21.566, -15.2704, 105.733, 0.83", "22.871, -15.4557, 109.174, 0.28", "23.5504, -15.5169, 111.021, 1.11", "24.9937, -15.5484, 115.039, 0.55", "25.8519, -15.4725, 117.43, 1.38", "28.6754, -14.9338, 125.215, 0.28", "29.8316, -14.6986, 128.329, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "1.83855, -2.75066, 36.0278, 1.38", "3.23114, -3.00299, 38.0602, 1.38", "7.61739, -3.79774, 44.4615, 1.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "88.6225, -37.9046, 6.69957, 0.28", "90.7997, -36.9254, 6.49494, 0.28", "92.461, -36.1782, 6.33881, 0.55", "93.8411, -35.5575, 6.2091, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "88.6225, -37.9046, 6.69957, 0.83", "90.7689, -39.0981, 6.67114, 0.83", "93.0798, -40.4083, 6.63958, 1.94", "94.8948, -41.4551, 6.61416, 1.11", "99.7179, -44.2154, 6.54415, 0.83", "103.57, -46.3776, 6.48637, 0.83", "106.197, -47.8128, 6.44569, 1.38", "108.822, -49.1265, 6.43924, 0.55", "111.383, -50.3242, 6.45902, 1.94", "114.112, -51.5762, 6.50546, 0.55", "116.016, -52.4228, 6.59064, 0.55", "118.21, -53.3618, 6.74019, 1.11", "122.995, -55.475, 7.21097, 0.55", "123.972, -55.9057, 7.37196, 0.55", "127.186, -57.3949, 8.0642, 1.11", "129.335, -58.5121, 8.67964, 0.55", "130.857, -59.3566, 9.18091, 0.55", "134.092, -61.2612, 10.4364, 0.83", "137.204, -63.1657, 11.84, 0.28", "138.809, -64.0813, 12.5924, 1.38", "141.546, -65.4944, 13.8602, 0.55", "144.067, -66.63, 15.0351, 0.55", "145.575, -67.2523, 15.7439, 0.83", "148.046, -68.1076, 16.8941, 0.55", "150.015, -68.7047, 17.7949, 0.55", "152.447, -69.3211, 18.958, 1.66", "156.591, -70.2446, 20.9698, 0.55", "158.723, -70.7854, 22.0847, 0.28", "160.935, -71.3897, 23.3108, 0.83", "163.66, -72.1923, 25.1391, 0.55", "166.624, -73.1127, 27.3771, 0.55", "167.822, -73.5054, 28.3367, 1.38", "171.622, -74.8344, 31.4758, 0.28", "174.073, -75.7119, 33.6303, 1.11", "179.272, -77.7212, 38.4503, 0.28", "180.083, -78.0483, 39.2648, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "26.6014, -13.9589, 18.3232, 0.28", "28.135, -16.1266, 19.6308, 0.28", "28.2801, -16.3243, 19.7482, 0.83", "29.3848, -17.7532, 20.5159, 0.83", "30.7314, -19.4294, 21.3135, 0.28", "31.4967, -20.3113, 21.7223, 0.83", "32.9529, -22.0239, 22.4679, 0.28", "33.4589, -22.6359, 22.684, 0.55", "35.0514, -24.6443, 23.3776, 0.28", "36.0011, -25.8788, 23.7697, 0.55", "37.8698, -28.3551, 24.5245, 0.28", "39.7328, -30.9626, 25.3823, 0.28", "41.2655, -33.1349, 26.0779, 1.11", "43.6171, -36.6153, 27.2229, 0.55", "44.7328, -38.3475, 27.8173, 1.66", "45.792, -40.0805, 28.4316, 0.28", "46.6441, -41.5927, 28.9538, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "26.6014, -13.9589, 18.3232, 0.55", "28.2451, -14.5902, 21.312, 0.55", "31.2219, -15.7334, 26.7244, 0.55", "32.2965, -16.1461, 28.6784, 0.55", "33.2278, -16.5038, 30.3719, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "4.11291, 22.114, -3.92477, 0.55", "2.90455, 23.4894, -4.51275, 0.55", "0.75324, 25.9381, -5.55956, 0.55", "-0.741573, 27.6395, -6.28692, 0.55", "-1.95058, 29.0157, -6.87521, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "4.11291, 22.114, -3.92477, 0.83", "-0.19454, 24.1459, -7.25973, 0.83", "-1.83516, 24.9463, -8.39902, 0.83", "-3.84475, 26.0815, -9.63447, 0.83", "-7.12455, 27.9771, -11.5957, 0.83", "-12.1327, 30.8458, -14.4324, 0.83", "-13.8341, 31.769, -15.3601, 1.38", "-16.7178, 33.3743, -16.7779, 0.83", "-20.2829, 35.4826, -18.6924, 0.83", "-23.402, 37.4589, -20.5645, 0.83", "-25.1751, 38.6441, -21.7523, 1.38", "-28.2068, 40.8836, -24.1718, 0.55", "-30.4902, 42.7198, -26.4336, 0.83", "-32.656, 44.5993, -29.1232, 0.83", "-34.3622, 46.2045, -31.7932, 0.83", "-35.8835, 47.9106, -34.6274, 1.38", "-38.0947, 50.7502, -39.4527, 0.55", "-38.4049, 51.185, -40.1972, 0.55", "-39.16, 52.1635, -41.8573, 1.11", "-40.866, 54.2097, -44.9446, 0.55", "-41.856, 55.4223, -46.4279, 0.55", "-43.2836, 57.1593, -48.0588, 1.11", "-44.7673, 58.9228, -49.1919, 0.55", "-46.6179, 61.1673, -50.2765, 1.11", "-48.0602, 62.9233, -50.9515, 0.28", "-49.4665, 64.6682, -51.4477, 0.83", "-51.4572, 67.1556, -52.0823, 0.28", "-53.525, 69.8442, -52.5746, 0.28", "-55.5157, 72.6101, -52.9538, 1.11", "-62.326, 77.3775, -60.2871, 1.11", "-68.388, 82.1348, -68.2559, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "11.6537, 23.2215, -5.93813, 1.11", "13.2053, 23.6281, -5.52431, 1.11", "16.3519, 24.4303, -4.56735, 0.83", "19.4844, 25.2122, -3.56211, 0.83", "22.1098, 25.8215, -2.66459, 0.83", "23.3519, 26.0938, -2.24254, 0.55", "25.8512, 26.637, -1.37181, 1.11", "28.0154, 27.1057, -0.54306, 0.55", "29.6575, 27.435, 0.109582, 1.38", "31.604, 27.8413, 0.927468, 0.55", "33.0125, 28.1643, 1.50651, 0.55", "35.5009, 28.8148, 2.53987, 0.83", "37.4515, 29.407, 3.31321, 0.28", "38.187, 29.6563, 3.61148, 0.83", "39.6843, 30.2418, 4.22796, 0.28", "41.8097, 31.1353, 5.08927, 1.11", "43.8848, 32.0215, 5.99478, 0.28", "45.0617, 32.5132, 6.54404, 1.66", "47.7323, 33.5834, 7.93367, 0.55", "48.9021, 34.024, 8.56758, 0.55", "49.9062, 34.3703, 9.10772, 0.55", "52.4165, 35.1564, 10.4344, 1.38", "54.1818, 35.6483, 11.3092, 0.28", "56.1525, 36.1048, 12.3208, 0.83", "57.8619, 36.4126, 13.2403, 1.11", "58.894, 36.5558, 13.788, 1.11", "59.7454, 36.654, 14.2143, 0.28", "60.8046, 36.7323, 14.7239, 0.83", "65.4637, 36.931, 16.9513, 0.28", "67.6564, 36.9472, 18.0397, 1.38", "68.726, 36.93, 18.6025, 0.28", "69.9758, 36.928, 19.3038, 1.11", "72.323, 36.984, 20.7531, 0.28", "72.6091, 37.0022, 20.9393, 0.55", "74.66, 37.2518, 22.2936, 0.28", "75.4194, 37.4112, 22.8625, 1.38", "78.5562, 38.319, 25.4857, 0.28", "80.1897, 38.9742, 27.1689, 0.83", "81.0208, 39.3747, 28.0961, 0.28", "81.5533, 39.6467, 28.7106, 1.11", "83.7457, 40.8421, 31.2972, 0.28", "84.4406, 41.2328, 32.1311, 1.11", "89.0233, 43.9176, 37.6275, 0.28", "89.7148, 44.3386, 38.4432, 1.38", "91.6059, 45.5527, 40.6588, 0.28", "92.1057, 45.8738, 41.2381, 1.38", "93.9348, 47.054, 43.2951, 0.28", "94.2256, 47.2429, 43.609, 0.83", "96.4671, 48.9029, 45.6352, 0.55", "97.2094, 49.5233, 46.4018, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "11.6537, 23.2215, -5.93813, 1.38", "12.2544, 24.484, -7.68069, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "20.8195, 30.5353, 43.1376, 0.55", "22.4597, 30.6397, 43.7445, 0.55", "24.3407, 30.7921, 44.4091, 0.55", "27.9604, 31.1652, 45.5766, 0.55", "30.1509, 31.4284, 46.265, 1.11", "33.9946, 31.8882, 47.2164, 0.55", "36.8033, 32.2412, 47.8317, 0.55", "38.4626, 32.4486, 48.1479, 0.28", "40.1993, 32.7228, 48.4481, 0.83", "42.978, 33.1955, 48.8375, 0.55", "46.7679, 33.8563, 49.3619, 0.83", "49.8955, 34.4366, 49.7826, 0.28", "53.4981, 35.1362, 50.373, 0.83", "56.884, 35.8387, 51.0073, 0.28", "57.4086, 35.9559, 51.1267, 0.28", "59.1427, 36.4128, 51.5777, 0.83", "61.0089, 37.0134, 52.1753, 0.28", "62.4571, 37.5457, 52.6707, 0.83", "64.1481, 38.2746, 53.3787, 0.28", "65.4588, 38.8446, 53.8801, 0.83", "66.636, 39.3812, 54.3395, 0.28", "68.2124, 40.1484, 54.958, 0.83", "70.6902, 41.4027, 56.0631, 0.28", "71.8692, 42.0181, 56.6642, 0.55", "74.2168, 43.403, 58.0485, 0.28" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "20.8195, 30.5353, 43.1376, 0.83", "21.7692, 32.4284, 45.4658, 0.83", "22.681, 34.1968, 47.8837, 0.83", "23.6227, 35.9826, 50.4134, 0.55", "23.9715, 36.5875, 51.4751, 0.55", "24.9033, 38.105, 54.2952, 0.83", "25.684, 39.364, 56.7069, 0.55", "26.4259, 40.475, 58.966, 0.83", "26.819, 41.0965, 60.1502, 1.38", "29.0219, 44.9743, 67.118, 0.55", "30.0621, 47.047, 70.5983, 1.38", "31.0606, 49.5118, 74.2495, 0.55", "31.2188, 50.0448, 74.9185, 1.11", "31.7062, 52.5978, 77.6786, 0.55", "31.8315, 54.0875, 79.0797, 0.83", "31.8079, 55.0749, 79.8286, 0.83", "31.5565, 57.6812, 81.7891, 0.55", "31.1483, 60.7583, 84.0601, 0.83", "30.761, 63.2648, 86.0105, 1.11", "30.3741, 65.4833, 87.8765, 0.55", "30.2894, 65.9466, 88.2831, 0.83", "29.9641, 67.8376, 90.0211, 0.28", "29.5999, 70.0835, 92.1357, 0.83" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-41.2864, -87.3701, -45.0623, 0.28", "-43.543, -94.7535, -51.1953, 0.28", "-43.7732, -102.122, -57.7066, 0.28", "-43.3405, -109.857, -63.7343, 0.28", "-43.2654, -116.741, -70.7912, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-41.2864, -87.3701, -45.0623, 0.28", "-42.8484, -95.9484, -50.645, 0.28", "-43.8317, -104.733, -56.0069, 0.28", "-42.9984, -113.908, -60.6509, 0.28", "-41.9142, -122.824, -65.7645, 0.28", "-39.8602, -131.671, -70.7233, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-30.8552, -45.8982, -4.61482, 1.11", "-31.2591, -48.1078, -3.10717, 1.11", "-31.7817, -50.3973, -1.37293, 1.11", "-32.7621, -54.6931, 1.88096, 1.11", "-33.327, -57.1686, 3.75606, 1.11", "-33.8592, -59.5008, 5.52262, 1.11", "-34.4033, -61.8845, 7.32819, 1.38", "-35.3221, -65.8663, 10.5408, 1.11" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-30.8552, -45.8982, -4.61482, 0.83", "-31.1525, -48.6977, -4.86855, 0.83", "-31.6763, -52.1055, -5.19801, 0.83", "-32.2527, -55.4748, -5.51176, 0.83", "-33.5676, -62.6438, -6.16322, 0.83", "-34.4488, -67.6105, -6.59526, 0.83", "-35.1923, -71.6413, -6.93336, 0.83", "-35.977, -75.4393, -7.12815, 0.83", "-36.5227, -78.2978, -7.17958, 0.83", "-36.8531, -80.1471, -7.20103, 0.83", "-37.3198, -82.8438, -7.02667, 0.83", "-38.1374, -88.8619, -6.43214, 0.83", "-38.7229, -93.1867, -5.86188, 0.55", "-38.9482, -96.3835, -5.30747, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.61739, -3.79774, 44.4615, 0.55", "6.82477, -4.19692, 48.1846, 0.55", "5.67636, -4.68992, 53.9558, 1.11", "4.69098, -5.11003, 58.9524, 0.83", "3.73369, -5.45046, 63.4376, 1.66", "1.83466, -5.95162, 71.9427, 1.11", "1.15332, -6.08651, 74.9143, 1.38", "-0.771154, -6.21797, 82.4738, 0.83", "-1.60583, -6.25704, 85.5101, 1.66", "-3.31654, -6.33838, 91.0045, 0.83", "-4.17269, -6.41226, 93.384, 0.83", "-5.29042, -6.63371, 95.9293, 1.38", "-6.38718, -6.89779, 98.002, 1.38", "-8.45774, -7.34528, 101.058, 0.83", "-11.0416, -7.87137, 104.307, 0.55", "-11.6353, -8.02107, 105.011, 0.55", "-13.1666, -8.4947, 106.898, 0.83", "-14.9387, -9.14606, 109.242, 0.55", "-15.6322, -9.43547, 110.33, 0.55", "-17.4669, -10.2548, 113.541, 1.11", "-19.7495, -11.3495, 117.837, 0.55", "-21.0865, -11.9753, 120.342, 0.83", "-22.7493, -12.7554, 123.316, 1.38", "-25.3874, -14.1311, 128.236, 0.55", "-26.0256, -14.4913, 129.464, 0.83", "-27.5237, -15.3575, 132.314, 0.83", "-28.9372, -15.9771, 134.554, 0.55", "-30.1567, -16.344, 136.207, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.61739, -3.79774, 44.4615, 0.83", "10.194, -4.50914, 46.8688, 0.83", "12.6932, -5.22555, 49.2895, 0.83", "15.6772, -6.08092, 52.1796, 0.83", "18.0156, -6.7512, 54.4444, 0.83", "21.0196, -7.61228, 57.3538, 0.83", "24.5735, -8.63104, 60.796, 1.66", "27.7139, -9.59657, 64.1979, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.95058, 29.0157, -6.87521, 0.55", "-1.51875, 30.2258, -5.54188, 0.55", "-0.948478, 31.8583, -3.90116, 0.28", "-0.859045, 32.1263, -3.64616, 0.83", "0.42023, 35.7099, -0.401348, 0.28", "0.65386, 36.3228, 0.127806, 1.38", "2.62592, 41.2245, 3.9369, 0.28", "2.96988, 42.0426, 4.49987, 1.66", "4.10438, 44.5743, 6.05387, 0.28", "4.70664, 45.8192, 6.75725, 0.28", "5.19532, 46.7364, 7.18294, 1.66", "6.81839, 49.6371, 8.39291, 0.28", "7.74688, 51.1519, 8.88124, 1.38", "8.6754, 52.6276, 9.35873, 0.28", "9.11881, 53.315, 9.55082, 0.55", "10.0219, 54.8444, 10.0327, 0.28", "10.3144, 55.3571, 10.2176, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-1.95058, 29.0157, -6.87521, 0.28", "-5.26111, 31.1211, -6.30457, 0.28", "-5.924, 31.5509, -6.25165, 0.83", "-7.42057, 32.5498, -6.15415, 0.28", "-8.26155, 33.1869, -6.0125, 0.83", "-9.80372, 34.405, -5.70431, 0.28", "-10.4057, 34.8973, -5.57487, 0.83", "-13.1818, 37.4343, -4.93891, 0.28", "-13.8335, 38.0667, -4.77764, 0.83", "-19.5771, 43.2882, -2.96318, 0.28", "-19.781, 43.4655, -2.88954, 1.38", "-20.2903, 43.9059, -2.67249, 1.38", "-21.4319, 44.876, -2.13139, 0.28", "-21.8719, 45.2658, -1.91328, 0.55", "-26.906, 49.7303, 0.414513, 0.28", "-27.8113, 50.4945, 0.820169, 1.11", "-30.316, 52.5613, 1.93998, 0.28", "-30.7329, 52.8947, 2.12532, 0.83", "-33.9936, 55.4417, 3.551, 0.28", "-34.1408, 55.5676, 3.61123, 0.55", "-39.1582, 60.407, 4.91937, 0.55", "-43.506, 65.4722, 7.27405, 0.55", "-47.4114, 71.201, 8.37302, 0.55", "-50.6563, 77.3619, 8.78877, 0.55", "-55.1091, 82.796, 8.33919, 0.55" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "12.2544, 24.484, -7.68069, 0.83", "15.767, 24.0005, -10.393, 0.83", "20.1523, 23.5083, -13.522, 0.83", "22.1943, 23.4233, -14.803, 0.83", "26.1649, 23.3694, -17.1836, 0.55", "27.8363, 23.4509, -18.081, 0.55", "31.076, 23.6685, -19.7578, 0.83", "35.0336, 24.108, -21.5668, 0.83", "39.0761, 24.7454, -23.3594, 0.83", "41.5039, 25.1424, -24.4013, 1.11", "47.2556, 26.1171, -26.6331, 1.11", "50.6069, 26.7372, -27.9922, 0.55", "52.8596, 27.1699, -28.9129, 0.55", "54.8284, 27.5354, -29.7658, 1.11", "57.8506, 28.0259, -31.1077, 0.55", "60.1655, 28.4128, -32.0969, 0.55", "63.1698, 28.8861, -33.3585, 1.11", "65.1319, 29.2264, -34.072, 0.55", "67.5349, 29.5953, -34.8718, 0.28", "70.6324, 30.011, -35.7686, 0.83", "76.5872, 30.554, -37.1226, 0.28", "78.6754, 30.6061, -37.481, 0.55", "81.039, 30.4715, -37.7225, 0.28", "82.6066, 30.2706, -37.8228, 0.28", "84.7798, 29.794, -37.8549, 1.11", "88.5161, 28.7268, -37.7955, 0.55", "91.7357, 27.5494, -37.606, 1.66", "95.8701, 25.9155, -37.3572, 0.28", "97.6127, 25.198, -37.266, 0.28", "100.63, 23.9967, -37.0706, 0.83", "111.812, 23.5773, -39.3193, 0.83", "123.072, 21.8651, -39.8985, 0.83", "134.478, 22.1999, -40.0194, 0.83", "145.786, 22.0688, -38.4796, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.2544, 24.484, -7.68069, 1.11", "12.3162, 25.6755, -7.9592, 1.11", "12.4644, 27.0718, -8.31375, 0.83", "12.6758, 28.1613, -8.59231, 0.83", "12.9691, 29.4781, -8.94765, 1.38", "13.5159, 31.9698, -9.74895, 0.83", "13.8095, 33.3376, -10.2585, 0.83", "14.0154, 34.2366, -10.6417, 0.83", "14.5248, 36.472, -11.8544, 0.83", "14.7001, 37.2477, -12.3371, 0.83", "15.0728, 39.0709, -13.6361, 0.83", "15.2715, 40.2258, -14.5326, 1.11", "15.3816, 41.0105, -15.1428, 1.11", "15.6576, 43.0671, -16.6548, 0.83", "15.827, 44.1876, -17.4435, 0.83", "16.0774, 45.4619, -18.2756, 1.11", "16.2243, 46.2021, -18.7224, 0.28", "16.4111, 47.2311, -19.3275, 0.83", "16.6355, 49.88, -20.7207, 0.83", "16.6831, 51.5419, -21.4625, 1.66", "16.668, 53.6658, -22.3381, 0.55", "16.6266, 55.1763, -22.9105, 0.55", "16.5478, 56.7846, -23.4882, 0.55", "16.1576, 62.3352, -25.5403, 0.28", "16.0781, 63.3305, -25.9099, 1.66", "15.9338, 65.9681, -26.8398, 0.28", "15.9249, 66.2915, -26.9424, 0.83", "15.9243, 67.1625, -27.2067, 0.28", "15.9466, 69.4187, -27.8522, 1.66", "16.0339, 72.2442, -28.6774, 0.28", "16.0441, 73.0761, -28.9069, 1.38", "16.0182, 77.2584, -29.9094, 0.28", "15.962, 78.0829, -30.0881, 1.66", "15.6616, 80.3881, -30.5146, 0.28", "15.5837, 80.7501, -30.594, 0.83", "14.8139, 83.5008, -31.344, 0.28", "14.6628, 83.9914, -31.4943, 0.83", "13.283, 88.0499, -32.9724, 0.28", "12.8917, 89.1302, -33.4029, 1.11", "10.79, 94.3294, -35.7344, 0.28", "10.7262, 94.4753, -35.8054, 0.83", "11.6712, 100.422, -36.9067, 0.83", "12.7889, 106.415, -37.3955, 0.83", "14.2516, 112.158, -39.0101, 0.83", "16.3745, 117.874, -39.7854, 0.83", "18.8606, 123.41, -40.8675, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "27.7139, -9.59657, 64.1979, 0.28", "28.8542, -10.938, 65.3025, 0.28", "29.3555, -11.5497, 65.8855, 0.83", "30.5143, -12.8496, 67.294, 0.28", "30.9919, -13.3393, 67.9335, 0.83", "32.6931, -15.1435, 70.513, 0.28", "32.9678, -15.4602, 70.9867, 0.83", "34.0816, -16.8357, 73.324, 0.28", "35.0947, -18.0954, 75.579, 0.83", "36.2435, -19.5816, 78.349, 0.28", "37.2448, -20.9897, 81.0119, 1.38", "38.0481, -22.195, 83.3613, 0.28", "38.5881, -23.0271, 85.0584, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "27.7139, -9.59657, 64.1979, 0.55", "31.392, -9.95259, 67.7871, 0.55", "31.9477, -9.99529, 68.3708, 0.28", "33.9047, -10.1679, 70.4579, 0.83", "37.7557, -10.5341, 74.5548, 0.83", "40.8657, -10.8082, 77.7681, 0.83", "42.834, -10.966, 79.7465, 1.38", "46.5648, -11.1564, 83.4677, 0.55", "47.7146, -11.2004, 84.5692, 0.55", "50.5937, -11.278, 87.1318, 0.55", "53.4291, -11.3166, 89.4074, 1.11", "56.431, -11.344, 91.5421, 0.55", "59.0733, -11.3283, 93.2821, 1.38", "61.912, -11.2953, 94.9722, 1.11", "64.993, -11.1916, 96.7285, 0.55", "68.1655, -11.0015, 98.4863, 0.55", "69.8564, -10.8679, 99.4428, 0.55", "71.2952, -10.7209, 100.304, 0.83", "73.3335, -10.4608, 101.607, 0.83", "74.6172, -10.2431, 102.588, 0.83", "76.8127, -9.74137, 104.642, 0.55", "77.7903, -9.45651, 105.723, 0.83", "79.4108, -8.84017, 107.625, 0.55", "79.9559, -8.60196, 108.307, 0.83", "82.1261, -7.53526, 111.073, 0.55", "83.0836, -7.11329, 112.173, 0.55", "84.4825, -6.51449, 113.685, 0.55", "84.8696, -6.35283, 114.068, 0.83", "87.0928, -5.5058, 116.15, 0.55", "89.6125, -4.6355, 118.395, 1.11", "93.5343, -3.36245, 121.722, 0.55", "95.4169, -2.79465, 123.267, 1.11", "98.5435, -1.90285, 125.784, 0.55", "100.388, -1.4173, 127.243, 0.83", "102.569, -0.891291, 128.896, 0.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_36", "dend_27", "dend_26", "dend_18", "dend_11", "dend_0", "dend_51", "dend_47", "dend_43", "dend_40", "dend_38", "dend_37", "dend_35", "dend_28", "dend_19", "dend_15", "dend_12", "dend_6", "dend_1", "dend_53", "dend_52", "dend_48", "dend_45", "dend_44", "dend_42", "dend_41", "dend_32", "dend_29", "dend_25", "dend_20", "dend_17", "dend_16", "dend_14", "dend_13", "dend_8", "dend_7", "dend_5", "dend_2", "dend_50", "dend_49", "dend_34", "dend_33", "dend_31", "dend_30", "dend_24", "dend_21", "dend_10", "dend_9", "dend_4", "dend_3", "dend_23", "dend_22" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L23_NBC_ec4aba2351_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_46
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_27
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.4999996128858968)
    connect dend_39(0), soma_0(0.4999996128858968)
    connect dend_36(0), soma_0(0.4999996128858968)
    connect dend_27(0), soma_0(0.4999996128858968)
    connect dend_26(0), soma_0(0.4999996128858968)
    connect dend_18(0), soma_0(0.4999996128858968)
    connect dend_11(0), soma_0(0.4999996128858968)
    connect dend_0(0), soma_0(0.4999996128858968)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.3022, -4.91444, 0.0966793, 4.52114 ) }
    soma_0 { pt3dadd( -9.29583, -4.38505, 0.0928107, 5.29403 ) }
    soma_0 { pt3dadd( -8.28943, -3.85565, 0.0889422, 6.87895 ) }
    soma_0 { pt3dadd( -7.28303, -3.32626, 0.0850736, 8.2055 ) }
    soma_0 { pt3dadd( -6.27664, -2.79687, 0.0812051, 9.69593 ) }
    soma_0 { pt3dadd( -5.27024, -2.26748, 0.0773365, 11.1864 ) }
    soma_0 { pt3dadd( -4.26385, -1.73809, 0.073468, 12.1576 ) }
    soma_0 { pt3dadd( -3.25745, -1.20869, 0.0695994, 12.1028 ) }
    soma_0 { pt3dadd( -2.25106, -0.679302, 0.0657309, 12.5691 ) }
    soma_0 { pt3dadd( -1.24466, -0.14991, 0.0618623, 13.5271 ) }
    soma_0 { pt3dadd( -0.238266, 0.379482, 0.0579938, 14.6432 ) }
    soma_0 { pt3dadd( 0.76813, 0.908874, 0.0541252, 15.6577 ) }
    soma_0 { pt3dadd( 1.77453, 1.43827, 0.0502567, 15.7754 ) }
    soma_0 { pt3dadd( 2.78092, 1.96766, 0.0463882, 15.433 ) }
    soma_0 { pt3dadd( 3.78732, 2.49705, 0.0425196, 14.9368 ) }
    soma_0 { pt3dadd( 4.79371, 3.02644, 0.0386511, 14.4352 ) }
    soma_0 { pt3dadd( 5.80011, 3.55583, 0.0347825, 13.7953 ) }
    soma_0 { pt3dadd( 6.8065, 4.08523, 0.030914, 12.9353 ) }
    soma_0 { pt3dadd( 7.8129, 4.61462, 0.0270454, 10.4207 ) }
    soma_0 { pt3dadd( 8.81929, 5.14401, 0.0231769, 6.43383 ) }
    soma_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 3.7421 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.0327, 0.387977, 12.0695, 1.38 ) }
    dend_46 { pt3dadd( 1.9038, 2.32223, 8.33323, 1.38 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 4.5927, -1.16052, -10.1505, 1.66 ) }
    dend_39 { pt3dadd( 5.03446, -1.60762, -12.3123, 1.66 ) }
    dend_39 { pt3dadd( 7.35526, -3.95649, -23.6694, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 26/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.7473, 1.16698, 5.4595, 1.66 ) }
    dend_36 { pt3dadd( -11.2184, 1.84394, 7.25472, 1.66 ) }
    dend_36 { pt3dadd( -15.3073, 2.74846, 10.0327, 1.66 ) }
    dend_36 { pt3dadd( -18.3489, 3.22293, 11.7804, 1.66 ) }
    dend_36 { pt3dadd( -22.1688, 3.81881, 13.9751, 1.66 ) }
    dend_36 { pt3dadd( -26.3862, 4.47668, 16.3982, 1.66 ) }
    dend_36 { pt3dadd( -32.34, 5.40541, 19.819, 1.66 ) }
    dend_36 { pt3dadd( -36.2065, 5.88855, 22.0409, 1.66 ) }
    dend_36 { pt3dadd( -42.2969, 6.35937, 25.2032, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -10.3073, -5.69202, 1.9395, 2.77 ) }
    dend_27 { pt3dadd( -13.3203, -6.47418, 0.873179, 2.77 ) }
    dend_27 { pt3dadd( -18.336, -7.77627, -0.901972, 2.77 ) }
    dend_27 { pt3dadd( -22.4762, -8.85107, -2.36726, 2.49 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 39/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -11.2873, -5.13152, 6.9695, 1.11 ) }
    dend_26 { pt3dadd( -15.3882, -8.3492, 9.66513, 1.11 ) }
    dend_26 { pt3dadd( -19.1928, -11.2865, 12.0669, 1.11 ) }
    dend_26 { pt3dadd( -23.5709, -14.6766, 14.856, 1.11 ) }
    dend_26 { pt3dadd( -26.1672, -16.6463, 16.4883, 1.38 ) }
    dend_26 { pt3dadd( -30.7141, -20.1224, 19.533, 0.83 ) }
    dend_26 { pt3dadd( -34.4566, -23.0694, 22.1836, 1.11 ) }
    dend_26 { pt3dadd( -35.9231, -24.2976, 23.3155, 1.11 ) }
    dend_26 { pt3dadd( -39.3623, -27.1285, 26.0163, 1.11 ) }
    dend_26 { pt3dadd( -40.8968, -28.4477, 27.2913, 1.11 ) }
    dend_26 { pt3dadd( -44.0819, -31.3517, 30.1885, 1.11 ) }
    dend_26 { pt3dadd( -45.9057, -33.1453, 31.8783, 1.11 ) }
    dend_26 { pt3dadd( -47.0418, -34.3593, 32.964, 1.11 ) }
    dend_26 { pt3dadd( -48.9094, -36.3372, 34.6797, 1.66 ) }
    dend_26 { pt3dadd( -53.299, -40.8259, 38.6447, 1.66 ) }
    dend_26 { pt3dadd( -56.9008, -44.4931, 41.9066, 1.38 ) }
    dend_26 { pt3dadd( -60.8385, -48.5766, 45.2573, 1.38 ) }
    dend_26 { pt3dadd( -63.6985, -51.6562, 47.7069, 1.38 ) }
    dend_26 { pt3dadd( -67.0883, -55.5495, 50.7977, 1.11 ) }
    dend_26 { pt3dadd( -69.9317, -59.0006, 53.5216, 1.11 ) }
    dend_26 { pt3dadd( -74.1971, -64.3945, 57.8484, 1.11 ) }
    dend_26 { pt3dadd( -78.6856, -70.3419, 62.6082, 0.83 ) }
    dend_26 { pt3dadd( -81.3643, -74.0533, 65.6013, 0.83 ) }
    dend_26 { pt3dadd( -85.329, -79.7754, 70.0222, 1.38 ) }
    dend_26 { pt3dadd( -87.4811, -83.0552, 72.4246, 1.38 ) }
    dend_26 { pt3dadd( -89.8643, -86.7421, 75.0057, 0.83 ) }
    dend_26 { pt3dadd( -92.1309, -90.1477, 77.3609, 0.83 ) }
    dend_26 { pt3dadd( -93.7817, -92.5869, 79.0734, 1.11 ) }
    dend_26 { pt3dadd( -95.8238, -95.5264, 81.0349, 0.83 ) }
    dend_26 { pt3dadd( -97.6279, -98.0412, 82.6373, 1.11 ) }
    dend_26 { pt3dadd( -99.2683, -100.343, 84.118, 0.55 ) }
    dend_26 { pt3dadd( -101.099, -102.885, 85.7346, 1.11 ) }
    dend_26 { pt3dadd( -103.198, -105.756, 87.6469, 0.55 ) }
    dend_26 { pt3dadd( -105.134, -108.317, 89.365, 1.94 ) }
    dend_26 { pt3dadd( -107.726, -111.738, 91.7093, 0.55 ) }
    dend_26 { pt3dadd( -109.331, -113.891, 93.2016, 0.55 ) }
    dend_26 { pt3dadd( -111.279, -116.618, 95.0548, 0.55 ) }
    dend_26 { pt3dadd( -113.09, -119.388, 96.8857, 1.11 ) }
    dend_26 { pt3dadd( -115.779, -123.882, 99.5363, 0.28 ) }
    dend_26 { pt3dadd( -116.627, -125.501, 100.301, 1.11 ) }
    dend_26 { pt3dadd( -118.064, -128.989, 101.88, 0.28 ) }
    dend_26 { pt3dadd( -118.569, -130.588, 102.612, 0.55 ) }
    dend_26 { pt3dadd( -119.301, -133.555, 104.068, 0.28 ) }
    dend_26 { pt3dadd( -119.684, -135.348, 104.909, 0.28 ) }
    dend_26 { pt3dadd( -120.417, -139.383, 106.769, 1.66 ) }
    dend_26 { pt3dadd( -121.835, -146.699, 110.12, 0.28 ) }
    dend_26 { pt3dadd( -122.368, -149.357, 111.339, 0.28 ) }
    dend_26 { pt3dadd( -122.964, -152.122, 112.757, 0.83 ) }
    dend_26 { pt3dadd( -123.726, -155.65, 114.803, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 88/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -3.7273, -5.95802, 11.6495, 2.77 ) }
    dend_18 { pt3dadd( -4.17873, -7.36968, 11.6495, 2.77 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 90/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.6827, -2.60452, 1.6195, 2.49 ) }
    dend_11 { pt3dadd( 10.9776, -3.60514, 1.95362, 2.22 ) }
    dend_11 { pt3dadd( 14.6288, -5.19707, 2.48517, 2.22 ) }
    dend_11 { pt3dadd( 16.9909, -6.22695, 2.82906, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 94/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.0827, 8.19698, -4.97829E-4, 2.22 ) }
    dend_0 { pt3dadd( 6.27851, 10.1224, -0.62919, 2.22 ) }
    dend_0 { pt3dadd( 6.53487, 12.6433, -1.45227, 2.22 ) }
    dend_0 { pt3dadd( 6.79837, 15.2344, -2.29828, 2.22 ) }
    dend_0 { pt3dadd( 7.20608, 19.2435, -3.60729, 2.77 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 99/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 9.82569, 5.6734, 0.0193083, 0.896594 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    axon_0 { pt3dadd( 23.101, 12.6566, 0.0193083, 0.896594 ) }
    axon_0 { pt3dadd( 36.3764, 19.6398, 0.0193083, 0.896594 ) }
    // Section: dend_51, id: dend_51, parent: dend_46 (entry count 2/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 1.9038, 2.32223, 8.33323, 0.83 ) }
    dend_51 { pt3dadd( -2.58639, 9.93665, 6.77208, 0.83 ) }
    dend_51 { pt3dadd( -4.79523, 13.6604, 6.10803, 0.83 ) }
    dend_51 { pt3dadd( -6.41065, 16.3493, 5.64351, 0.83 ) }
    dend_51 { pt3dadd( -7.51424, 18.1288, 5.35456, 1.38 ) }
    dend_51 { pt3dadd( -10.3304, 22.5638, 4.89374, 0.83 ) }
    dend_51 { pt3dadd( -12.3352, 25.7211, 4.56567, 1.38 ) }
    dend_51 { pt3dadd( -15.3872, 30.1788, 4.55984, 0.83 ) }
    dend_51 { pt3dadd( -18.5027, 34.612, 4.60531, 0.83 ) }
    dend_51 { pt3dadd( -19.8159, 36.4143, 4.66939, 0.83 ) }
    dend_51 { pt3dadd( -22.146, 39.7277, 4.70308, 1.94 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 13/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 1.9038, 2.32223, 8.33323, 1.38 ) }
    dend_47 { pt3dadd( 2.97057, 4.06946, 10.192, 1.38 ) }
    dend_47 { pt3dadd( 4.33972, 6.31195, 12.5775, 1.38 ) }
    dend_47 { pt3dadd( 5.61353, 8.39827, 14.797, 1.66 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 17/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 7.35526, -3.95649, -23.6694, 0.83 ) }
    dend_43 { pt3dadd( 7.92069, -1.88427, -27.7436, 0.83 ) }
    dend_43 { pt3dadd( 8.29581, -0.509525, -30.4465, 0.83 ) }
    dend_43 { pt3dadd( 8.7697, 1.22724, -33.8611, 0.83 ) }
    dend_43 { pt3dadd( 8.92013, 1.77851, -34.945, 0.55 ) }
    dend_43 { pt3dadd( 9.36155, 3.39616, -38.1255, 0.55 ) }
    dend_43 { pt3dadd( 9.76005, 4.85676, -40.9972, 0.55 ) }
    dend_43 { pt3dadd( 10.4848, 8.24359, -47.7181, 0.55 ) }
    dend_43 { pt3dadd( 10.7353, 12.7675, -53.696, 0.55 ) }
    dend_43 { pt3dadd( 11.6281, 16.8655, -59.9412, 0.55 ) }
    dend_43 { pt3dadd( 13.642, 22.0692, -64.8623, 0.55 ) }
    dend_43 { pt3dadd( 17.0728, 27.6658, -68.2628, 0.55 ) }
    dend_43 { pt3dadd( 20.6768, 32.7485, -72.3189, 0.55 ) }
    dend_43 { pt3dadd( 25.7004, 36.684, -76.2655, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 31/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 7.35526, -3.95649, -23.6694, 1.66 ) }
    dend_40 { pt3dadd( 7.17452, -6.82943, -26.4331, 1.66 ) }
    dend_40 { pt3dadd( 7.01787, -9.31942, -28.8284, 1.11 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 34/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -42.2969, 6.35937, 25.2032, 0.55 ) }
    dend_38 { pt3dadd( -43.4646, 5.97431, 25.3853, 0.55 ) }
    dend_38 { pt3dadd( -46.5732, 4.88444, 25.8244, 0.55 ) }
    dend_38 { pt3dadd( -47.1353, 4.70107, 25.893, 0.55 ) }
    dend_38 { pt3dadd( -48.6951, 4.22672, 26.063, 0.55 ) }
    dend_38 { pt3dadd( -49.1264, 4.09335, 26.1078, 0.83 ) }
    dend_38 { pt3dadd( -50.7639, 3.5667, 26.3038, 0.55 ) }
    dend_38 { pt3dadd( -52.4972, 2.98116, 26.5085, 1.11 ) }
    dend_38 { pt3dadd( -54.429, 2.31487, 26.73, 0.55 ) }
    dend_38 { pt3dadd( -55.7111, 1.86384, 26.8424, 1.94 ) }
    dend_38 { pt3dadd( -56.8793, 1.46779, 26.9092, 1.94 ) }
    dend_38 { pt3dadd( -58.2868, 1.00041, 26.9559, 0.55 ) }
    dend_38 { pt3dadd( -59.1409, 0.693966, 26.9342, 0.55 ) }
    dend_38 { pt3dadd( -60.5168, 0.197299, 26.8276, 0.28 ) }
    dend_38 { pt3dadd( -61.9067, -0.30368, 26.6398, 1.94 ) }
    dend_38 { pt3dadd( -63.9107, -0.958076, 26.295, 0.55 ) }
    dend_38 { pt3dadd( -64.5168, -1.14056, 26.1818, 1.66 ) }
    dend_38 { pt3dadd( -66.7623, -1.74191, 25.6979, 0.55 ) }
    dend_38 { pt3dadd( -68.1674, -2.07132, 25.4272, 1.11 ) }
    dend_38 { pt3dadd( -70.349, -2.53356, 25.034, 0.55 ) }
    dend_38 { pt3dadd( -71.3257, -2.72088, 24.8897, 0.55 ) }
    dend_38 { pt3dadd( -72.3761, -2.90823, 24.7519, 1.38 ) }
    dend_38 { pt3dadd( -75.6615, -3.44118, 24.3975, 0.28 ) }
    dend_38 { pt3dadd( -78.948, -3.9011, 24.141, 0.28 ) }
    dend_38 { pt3dadd( -79.769, -4.0172, 24.0887, 1.38 ) }
    dend_38 { pt3dadd( -82.5789, -4.4233, 23.9716, 0.28 ) }
    dend_38 { pt3dadd( -84.1691, -4.65485, 23.9124, 0.83 ) }
    dend_38 { pt3dadd( -85.2099, -4.79488, 23.8838, 0.28 ) }
    dend_38 { pt3dadd( -86.6631, -5.00455, 23.9247, 0.55 ) }
    dend_38 { pt3dadd( -87.6172, -5.1444, 23.9633, 0.28 ) }
    dend_38 { pt3dadd( -88.8427, -5.31482, 24.0425, 1.94 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -42.2969, 6.35937, 25.2032, 0.83 ) }
    dend_37 { pt3dadd( -47.4626, 6.10166, 27.9579, 0.83 ) }
    dend_37 { pt3dadd( -50.7817, 5.9516, 29.4914, 1.66 ) }
    dend_37 { pt3dadd( -53.7767, 5.86532, 30.7233, 1.11 ) }
    dend_37 { pt3dadd( -56.8974, 5.83552, 31.8777, 1.11 ) }
    dend_37 { pt3dadd( -60.3134, 5.96273, 33.0416, 1.11 ) }
    dend_37 { pt3dadd( -63.1776, 6.13644, 34.0009, 1.11 ) }
    dend_37 { pt3dadd( -65.6481, 6.35465, 34.684, 0.83 ) }
    dend_37 { pt3dadd( -68.4702, 6.69348, 35.4535, 1.11 ) }
    dend_37 { pt3dadd( -71.2225, 7.10231, 36.2929, 1.38 ) }
    dend_37 { pt3dadd( -76.3634, 7.98359, 38.1535, 0.55 ) }
    dend_37 { pt3dadd( -78.556, 8.3832, 39.0503, 0.55 ) }
    dend_37 { pt3dadd( -81.3654, 8.85041, 40.2725, 0.55 ) }
    dend_37 { pt3dadd( -84.2281, 9.27373, 41.6283, 1.66 ) }
    dend_37 { pt3dadd( -87.1898, 9.60385, 43.1151, 1.66 ) }
    dend_37 { pt3dadd( -91.1042, 9.88065, 45.1219, 1.11 ) }
    dend_37 { pt3dadd( -93.5098, 9.94115, 46.392, 1.66 ) }
    dend_37 { pt3dadd( -96.8943, 10.023, 48.2326, 0.83 ) }
    dend_37 { pt3dadd( -99.2188, 10.0289, 49.5096, 1.11 ) }
    dend_37 { pt3dadd( -100.928, 9.99695, 50.4621, 0.55 ) }
    dend_37 { pt3dadd( -103.194, 9.84305, 51.6755, 0.83 ) }
    dend_37 { pt3dadd( -105.562, 9.51996, 52.9881, 1.38 ) }
    dend_37 { pt3dadd( -108.211, 9.00451, 54.7425, 0.55 ) }
    dend_37 { pt3dadd( -109.703, 8.58689, 56.0792, 0.55 ) }
    dend_37 { pt3dadd( -110.273, 8.36567, 56.6636, 0.28 ) }
    dend_37 { pt3dadd( -111.38, 7.8273, 57.9805, 0.55 ) }
    dend_37 { pt3dadd( -113.609, 6.55884, 60.9632, 0.28 ) }
    dend_37 { pt3dadd( -115.2, 5.58664, 63.1957, 1.66 ) }
    dend_37 { pt3dadd( -118.434, 3.54659, 67.9438, 0.28 ) }
    dend_37 { pt3dadd( -119.097, 3.19471, 68.9574, 1.11 ) }
    dend_37 { pt3dadd( -120.754, 2.46295, 71.5018, 0.28 ) }
    dend_37 { pt3dadd( -121.736, 2.16953, 73.0795, 0.83 ) }
    dend_37 { pt3dadd( -123.272, 1.92795, 75.4895, 0.28 ) }
    dend_37 { pt3dadd( -123.713, 1.90798, 76.1601, 0.83 ) }
    dend_37 { pt3dadd( -126.26, 2.07501, 79.9853, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( -127.435, 2.24672, 81.7333, 1.66 ) }
    dend_37 { pt3dadd( -130.83, 2.88785, 86.6599, 0.55 ) }
    dend_37 { pt3dadd( -132.116, 3.14144, 88.4718, 0.28 ) }
    dend_37 { pt3dadd( -133.627, 3.4469, 90.5092, 1.11 ) }
    dend_37 { pt3dadd( -135.566, 3.76536, 92.9728, 0.55 ) }
    dend_37 { pt3dadd( -137.558, 3.98621, 95.2918, 0.55 ) }
    dend_37 { pt3dadd( -139.302, 4.08066, 97.1507, 1.11 ) }
    dend_37 { pt3dadd( -142.22, 4.06291, 100.024, 0.28 ) }
    dend_37 { pt3dadd( -143.009, 3.98939, 100.822, 0.28 ) }
    dend_37 { pt3dadd( -145.691, 3.43529, 103.638, 1.38 ) }
    dend_37 { pt3dadd( -148.483, 2.46072, 106.694, 0.55 ) }
    dend_37 { pt3dadd( -149.884, 1.72849, 108.361, 0.28 ) }
    dend_37 { pt3dadd( -150.847, 1.03525, 109.581, 1.11 ) }
    dend_37 { pt3dadd( -153.126, -1.04771, 112.583, 0.28 ) }
    dend_37 { pt3dadd( -154.519, -2.5019, 114.514, 1.38 ) }
    dend_37 { pt3dadd( -155.812, -4.07616, 116.397, 0.55 ) }
    dend_37 { pt3dadd( -156.866, -5.57634, 118.028, 1.11 ) }
    dend_37 { pt3dadd( -158.305, -7.76264, 120.31, 0.28 ) }
    dend_37 { pt3dadd( -159.461, -9.58408, 122.068, 0.28 ) }
    dend_37 { pt3dadd( -160.614, -11.3347, 123.663, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_27 (entry count 20/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.4762, -8.85107, -2.36726, 1.38 ) }
    dend_35 { pt3dadd( -26.857, -9.30615, -1.6696, 1.38 ) }
    dend_35 { pt3dadd( -29.0814, -9.33083, -1.47045, 1.38 ) }
    dend_35 { pt3dadd( -35.2607, -9.12639, -0.739632, 1.38 ) }
    dend_35 { pt3dadd( -37.4169, -8.96315, -0.417079, 1.38 ) }
    dend_35 { pt3dadd( -39.9644, -8.67715, 0.0507771, 1.11 ) }
    dend_35 { pt3dadd( -42.7769, -8.3352, 0.712401, 1.11 ) }
    dend_35 { pt3dadd( -49.1556, -7.22712, 2.44001, 1.11 ) }
    dend_35 { pt3dadd( -52.5955, -6.47784, 3.55194, 1.11 ) }
    dend_35 { pt3dadd( -56.6827, -5.37954, 5.06828, 0.83 ) }
    dend_35 { pt3dadd( -60.1464, -4.38343, 6.45584, 0.83 ) }
    dend_35 { pt3dadd( -63.5239, -3.3973, 7.91, 1.38 ) }
    dend_35 { pt3dadd( -65.9086, -2.7027, 8.9952, 0.55 ) }
    dend_35 { pt3dadd( -68.1584, -2.03511, 10.0932, 0.55 ) }
    dend_35 { pt3dadd( -70.8492, -1.25625, 11.2546, 0.55 ) }
    dend_35 { pt3dadd( -73.6799, -0.468067, 12.3816, 1.66 ) }
    dend_35 { pt3dadd( -76.7486, 0.372425, 13.4577, 0.55 ) }
    dend_35 { pt3dadd( -78.1676, 0.893186, 13.8915, 1.11 ) }
    dend_35 { pt3dadd( -81.3004, 2.32684, 14.8683, 0.55 ) }
    dend_35 { pt3dadd( -82.7975, 3.23575, 15.3553, 0.83 ) }
    dend_35 { pt3dadd( -84.2039, 4.23988, 15.8086, 0.28 ) }
    dend_35 { pt3dadd( -85.7505, 5.50179, 16.298, 0.83 ) }
    dend_35 { pt3dadd( -90.7968, 10.1903, 17.8712, 0.28 ) }
    dend_35 { pt3dadd( -92.7589, 12.1658, 18.5698, 1.11 ) }
    dend_35 { pt3dadd( -95.7471, 15.452, 19.9285, 0.55 ) }
    dend_35 { pt3dadd( -97.7628, 17.803, 21.045, 2.22 ) }
    dend_35 { pt3dadd( -99.2243, 19.5777, 21.993, 0.55 ) }
    dend_35 { pt3dadd( -101.56, 22.5393, 23.6245, 0.28 ) }
    dend_35 { pt3dadd( -103.038, 24.3501, 24.7903, 0.83 ) }
    dend_35 { pt3dadd( -105.681, 27.6242, 27.0425, 0.28 ) }
    dend_35 { pt3dadd( -106.157, 28.244, 27.499, 1.94 ) }
    dend_35 { pt3dadd( -107.086, 29.6324, 28.5323, 0.55 ) }
    dend_35 { pt3dadd( -109.341, 33.216, 31.204, 0.28 ) }
    dend_35 { pt3dadd( -110.395, 34.8982, 32.3623, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 54/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -22.4762, -8.85107, -2.36726, 1.66 ) }
    dend_28 { pt3dadd( -23.6485, -13.0343, -2.92226, 1.66 ) }
    dend_28 { pt3dadd( -25.4193, -19.3535, -3.76066, 1.66 ) }
    dend_28 { pt3dadd( -27.8285, -27.9504, -4.90124, 1.66 ) }
    dend_28 { pt3dadd( -29.1775, -32.764, -5.53988, 1.66 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 59/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.17873, -7.36968, 11.6495, 0.83 ) }
    dend_19 { pt3dadd( -3.25409, -6.80522, 15.2645, 0.83 ) }
    dend_19 { pt3dadd( -1.76564, -5.63578, 21.3, 0.83 ) }
    dend_19 { pt3dadd( -0.786881, -4.8668, 25.2687, 0.83 ) }
    dend_19 { pt3dadd( 0.138427, -4.13981, 29.0208, 0.83 ) }
    dend_19 { pt3dadd( 1.37399, -3.16906, 34.0308, 0.83 ) }
    dend_19 { pt3dadd( 1.78977, -2.8424, 35.7168, 1.38 ) }
    dend_19 { pt3dadd( 1.83855, -2.75066, 36.0278, 1.38 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 16.9909, -6.22695, 2.82906, 0.83 ) }
    dend_15 { pt3dadd( 21.4226, -7.46391, 2.92845, 0.83 ) }
    dend_15 { pt3dadd( 25.6898, -8.64281, 3.18086, 0.83 ) }
    dend_15 { pt3dadd( 31.2091, -10.2066, 3.45162, 0.83 ) }
    dend_15 { pt3dadd( 35.3959, -11.4413, 3.61921, 0.83 ) }
    dend_15 { pt3dadd( 38.0843, -12.2398, 3.76489, 1.11 ) }
    dend_15 { pt3dadd( 40.1293, -12.8642, 3.91145, 0.83 ) }
    dend_15 { pt3dadd( 42.784, -13.6593, 4.27971, 1.11 ) }
    dend_15 { pt3dadd( 44.9669, -14.3478, 4.65078, 1.11 ) }
    dend_15 { pt3dadd( 48.25, -15.6826, 5.25591, 0.83 ) }
    dend_15 { pt3dadd( 50.8929, -16.9975, 5.64787, 0.83 ) }
    dend_15 { pt3dadd( 52.2337, -17.75, 5.78151, 0.83 ) }
    dend_15 { pt3dadd( 54.8443, -19.3319, 6.00136, 1.38 ) }
    dend_15 { pt3dadd( 56.7509, -20.5915, 6.16005, 0.83 ) }
    dend_15 { pt3dadd( 58.6594, -21.8993, 6.31018, 0.83 ) }
    dend_15 { pt3dadd( 60.4179, -23.0939, 6.41176, 0.55 ) }
    dend_15 { pt3dadd( 61.9259, -24.0686, 6.45419, 0.83 ) }
    dend_15 { pt3dadd( 63.9514, -25.2985, 6.49289, 0.83 ) }
    dend_15 { pt3dadd( 65.8396, -26.3772, 6.57552, 0.83 ) }
    dend_15 { pt3dadd( 68.1989, -27.6589, 6.73949, 0.83 ) }
    dend_15 { pt3dadd( 72.5641, -29.9695, 7.15501, 0.83 ) }
    dend_15 { pt3dadd( 74.6662, -31.0589, 7.38914, 1.11 ) }
    dend_15 { pt3dadd( 77.0341, -32.2177, 7.65599, 1.11 ) }
    dend_15 { pt3dadd( 79.2148, -33.2543, 7.77518, 0.55 ) }
    dend_15 { pt3dadd( 79.8983, -33.5731, 7.80588, 0.55 ) }
    dend_15 { pt3dadd( 82.0652, -34.6815, 7.82616, 1.11 ) }
    dend_15 { pt3dadd( 83.7856, -35.5988, 7.68424, 0.55 ) }
    dend_15 { pt3dadd( 85.3026, -36.3909, 7.47871, 0.55 ) }
    dend_15 { pt3dadd( 88.6225, -37.9046, 6.69957, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.9909, -6.22695, 2.82906, 0.83 ) }
    dend_12 { pt3dadd( 18.6782, -7.58446, 5.5494, 0.83 ) }
    dend_12 { pt3dadd( 22.6835, -10.8069, 12.0068, 0.83 ) }
    dend_12 { pt3dadd( 25.2467, -12.869, 16.1392, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 26.6014, -13.9589, 18.3232, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 1/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.20608, 19.2435, -3.60729, 1.38 ) }
    dend_6 { pt3dadd( 5.63766, 20.699, -3.76827, 1.38 ) }
    dend_6 { pt3dadd( 4.11291, 22.114, -3.92477, 1.38 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 4/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.20608, 19.2435, -3.60729, 1.94 ) }
    dend_1 { pt3dadd( 10.3673, 22.0709, -5.264, 1.94 ) }
    dend_1 { pt3dadd( 11.6537, 23.2215, -5.93813, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 7/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.3764, 19.6398, 0.0193083, 1.38 ) }
    axon_1 { pt3dadd( 49.6517, 26.623, 0.0193083, 1.38 ) }
    axon_1 { pt3dadd( 62.9271, 33.6062, 0.0193083, 1.38 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 10/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -22.146, 39.7277, 4.70308, 0.83 ) }
    dend_53 { pt3dadd( -24.5047, 39.593, 3.67028, 0.83 ) }
    dend_53 { pt3dadd( -27.8064, 39.4044, 2.2245, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -22.146, 39.7277, 4.70308, 0.55 ) }
    dend_52 { pt3dadd( -22.646, 43.3033, 5.07828, 0.55 ) }
    dend_52 { pt3dadd( -22.7915, 45.0005, 5.30172, 0.55 ) }
    dend_52 { pt3dadd( -22.9279, 47.1502, 5.60715, 1.11 ) }
    dend_52 { pt3dadd( -23.233, 51.4597, 6.23179, 0.83 ) }
    dend_52 { pt3dadd( -23.3729, 53.286, 6.48828, 0.28 ) }
    dend_52 { pt3dadd( -23.4316, 54.2791, 6.61871, 0.83 ) }
    dend_52 { pt3dadd( -23.5191, 56.7101, 6.88934, 0.28 ) }
    dend_52 { pt3dadd( -23.5553, 59.1344, 7.17279, 0.83 ) }
    dend_52 { pt3dadd( -23.5322, 61.1893, 7.42793, 0.28 ) }
    dend_52 { pt3dadd( -23.5188, 64.0837, 7.81218, 1.38 ) }
    dend_52 { pt3dadd( -23.568, 65.7977, 8.02857, 0.28 ) }
    dend_52 { pt3dadd( -23.607, 66.5648, 8.10734, 0.83 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 26/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.61353, 8.39827, 14.797, 0.83 ) }
    dend_48 { pt3dadd( 8.17787, 10.394, 19.0087, 0.83 ) }
    dend_48 { pt3dadd( 9.40865, 11.478, 21.1276, 0.83 ) }
    dend_48 { pt3dadd( 10.5424, 12.621, 23.0988, 1.38 ) }
    dend_48 { pt3dadd( 12.0065, 14.3336, 25.8767, 1.11 ) }
    dend_48 { pt3dadd( 12.7982, 15.3605, 27.4258, 1.11 ) }
    dend_48 { pt3dadd( 13.2432, 15.9873, 28.3074, 1.11 ) }
    dend_48 { pt3dadd( 14.3062, 17.7772, 30.5965, 0.83 ) }
    dend_48 { pt3dadd( 15.2176, 19.4525, 32.4721, 1.11 ) }
    dend_48 { pt3dadd( 16.0711, 21.0841, 34.1347, 0.55 ) }
    dend_48 { pt3dadd( 16.4874, 21.9653, 34.9692, 1.11 ) }
    dend_48 { pt3dadd( 17.4483, 24.0834, 36.9464, 1.11 ) }
    dend_48 { pt3dadd( 18.6824, 26.6701, 39.3842, 1.66 ) }
    dend_48 { pt3dadd( 20.0525, 29.2258, 41.8363, 0.83 ) }
    dend_48 { pt3dadd( 20.8195, 30.5353, 43.1376, 1.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 25.7004, 36.684, -76.2655, 0.28 ) }
    dend_45 { pt3dadd( 28.7663, 42.3428, -83.5526, 0.28 ) }
    dend_45 { pt3dadd( 31.9085, 47.0515, -91.5245, 0.28 ) }
    dend_45 { pt3dadd( 35.3019, 51.9572, -99.2527, 0.28 ) }
    dend_45 { pt3dadd( 37.9349, 58.4691, -105.9, 0.28 ) }
    dend_45 { pt3dadd( 39.3983, 64.7074, -113.197, 0.28 ) }
    dend_45 { pt3dadd( 41.8922, 70.3099, -120.759, 0.28 ) }
    dend_45 { pt3dadd( 43.9856, 76.4029, -128.024, 0.28 ) }
    dend_45 { pt3dadd( 45.2977, 82.9028, -135.098, 0.28 ) }
    dend_45 { pt3dadd( 45.8975, 89.7607, -141.908, 0.28 ) }
    dend_45 { pt3dadd( 47.4498, 95.4947, -149.63, 0.28 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 52/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 25.7004, 36.684, -76.2655, 0.28 ) }
    dend_44 { pt3dadd( 27.8056, 41.9625, -83.2125, 0.28 ) }
    dend_44 { pt3dadd( 29.2309, 46.5165, -90.8658, 0.28 ) }
    dend_44 { pt3dadd( 31.2928, 50.4723, -98.7383, 0.28 ) }
    dend_44 { pt3dadd( 35.0638, 53.6007, -106.385, 0.28 ) }
    dend_44 { pt3dadd( 37.6086, 56.9297, -114.435, 0.28 ) }
    dend_44 { pt3dadd( 40.3004, 60.1737, -122.475, 0.28 ) }
    dend_44 { pt3dadd( 41.2285, 63.1857, -131.0, 0.28 ) }
    dend_44 { pt3dadd( 41.2025, 66.7115, -139.356, 0.28 ) }
    dend_44 { pt3dadd( 41.0383, 69.8882, -147.864, 0.28 ) }
    dend_44 { pt3dadd( 41.307, 71.5003, -156.842, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 63/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 7.01787, -9.31942, -28.8284, 0.55 ) }
    dend_42 { pt3dadd( 8.67635, -10.9503, -38.0479, 0.55 ) }
    dend_42 { pt3dadd( 9.24855, -11.5129, -41.2289, 0.55 ) }
    dend_42 { pt3dadd( 9.70435, -11.9611, -43.7625, 0.55 ) }
    dend_42 { pt3dadd( 12.4572, -14.5097, -55.114, 0.55 ) }
    dend_42 { pt3dadd( 14.198, -16.9125, -66.6953, 0.55 ) }
    dend_42 { pt3dadd( 14.9333, -18.8569, -78.4744, 0.55 ) }
    dend_42 { pt3dadd( 17.0469, -22.2066, -89.7312, 0.55 ) }
    dend_42 { pt3dadd( 21.3244, -23.8164, -100.799, 0.55 ) }
    dend_42 { pt3dadd( 25.1425, -24.2172, -112.147, 0.55 ) }
    dend_42 { pt3dadd( 27.649, -24.0618, -123.86, 0.55 ) }
    dend_42 { pt3dadd( 31.2142, -25.9689, -135.125, 0.55 ) }
    dend_42 { pt3dadd( 35.951, -30.5001, -145.067, 0.55 ) }
    dend_42 { pt3dadd( 40.0757, -35.7342, -154.899, 0.55 ) }
    dend_42 { pt3dadd( 46.0664, -41.1815, -163.593, 0.55 ) }
    dend_42 { pt3dadd( 51.736, -47.2162, -172.074, 0.55 ) }
    dend_42 { pt3dadd( 56.3494, -53.6826, -180.831, 0.55 ) }
    dend_42 { pt3dadd( 61.4097, -59.1762, -190.059, 0.55 ) }
    dend_42 { pt3dadd( 64.3864, -66.9675, -198.306, 0.55 ) }
    dend_42 { pt3dadd( 68.569, -76.4844, -203.492, 0.55 ) }
    dend_42 { pt3dadd( 73.0063, -85.4339, -209.513, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 84/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.01787, -9.31942, -28.8284, 0.55 ) }
    dend_41 { pt3dadd( 6.82397, -9.97286, -29.935, 0.55 ) }
    dend_41 { pt3dadd( 6.02456, -12.6668, -34.4972, 0.55 ) }
    dend_41 { pt3dadd( 5.36147, -14.9014, -38.2815, 0.55 ) }
    dend_41 { pt3dadd( 4.86713, -19.3903, -46.5108, 0.55 ) }
    dend_41 { pt3dadd( 5.53074, -21.9421, -55.5695, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -29.1775, -32.764, -5.53988, 0.55 ) }
    dend_32 { pt3dadd( -31.4689, -36.371, -8.77647, 0.55 ) }
    dend_32 { pt3dadd( -33.9487, -40.5919, -12.3077, 0.28 ) }
    dend_32 { pt3dadd( -34.9738, -42.7321, -13.9311, 0.28 ) }
    dend_32 { pt3dadd( -35.8874, -45.0521, -15.7476, 0.28 ) }
    dend_32 { pt3dadd( -37.3133, -49.4688, -19.2951, 0.55 ) }
    dend_32 { pt3dadd( -38.2252, -52.2932, -21.5636, 0.55 ) }
    dend_32 { pt3dadd( -39.2718, -56.6826, -24.7385, 0.55 ) }
    dend_32 { pt3dadd( -39.981, -60.4496, -27.2973, 0.55 ) }
    dend_32 { pt3dadd( -40.4542, -64.1907, -30.0075, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -40.5158, -65.9855, -31.3764, 0.28 ) }
    dend_32 { pt3dadd( -41.9171, -76.8158, -37.9376, 0.28 ) }
    dend_32 { pt3dadd( -41.2864, -87.3701, -45.0623, 0.28 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -29.1775, -32.764, -5.53988, 1.11 ) }
    dend_29 { pt3dadd( -29.6203, -36.2307, -5.29572, 1.11 ) }
    dend_29 { pt3dadd( -30.0513, -39.6045, -5.0581, 1.11 ) }
    dend_29 { pt3dadd( -30.4815, -42.9718, -4.82094, 1.11 ) }
    dend_29 { pt3dadd( -30.8552, -45.8982, -4.61482, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 8/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.83855, -2.75066, 36.0278, 0.55 ) }
    dend_25 { pt3dadd( 2.72532, -3.65452, 39.5398, 0.55 ) }
    dend_25 { pt3dadd( 2.98844, -3.88461, 40.4921, 0.83 ) }
    dend_25 { pt3dadd( 6.20658, -6.24631, 50.9495, 0.28 ) }
    dend_25 { pt3dadd( 6.75676, -6.64457, 52.8035, 0.83 ) }
    dend_25 { pt3dadd( 7.9721, -7.57827, 57.0987, 0.55 ) }
    dend_25 { pt3dadd( 8.61756, -8.06856, 59.5618, 1.11 ) }
    dend_25 { pt3dadd( 10.2306, -9.21343, 65.901, 0.55 ) }
    dend_25 { pt3dadd( 11.2639, -9.88682, 69.8898, 1.38 ) }
    dend_25 { pt3dadd( 13.2172, -11.1407, 77.2949, 0.55 ) }
    dend_25 { pt3dadd( 14.2568, -11.8065, 81.2001, 1.38 ) }
    dend_25 { pt3dadd( 16.3916, -13.0752, 89.1895, 0.28 ) }
    dend_25 { pt3dadd( 17.0191, -13.4282, 91.4751, 1.11 ) }
    dend_25 { pt3dadd( 17.8188, -13.9026, 94.3736, 0.55 ) }
    dend_25 { pt3dadd( 18.8589, -14.4457, 97.886, 1.66 ) }
    dend_25 { pt3dadd( 20.3944, -15.0062, 102.45, 0.55 ) }
    dend_25 { pt3dadd( 21.566, -15.2704, 105.733, 0.83 ) }
    dend_25 { pt3dadd( 22.871, -15.4557, 109.174, 0.28 ) }
    dend_25 { pt3dadd( 23.5504, -15.5169, 111.021, 1.11 ) }
    dend_25 { pt3dadd( 24.9937, -15.5484, 115.039, 0.55 ) }
    dend_25 { pt3dadd( 25.8519, -15.4725, 117.43, 1.38 ) }
    dend_25 { pt3dadd( 28.6754, -14.9338, 125.215, 0.28 ) }
    dend_25 { pt3dadd( 29.8316, -14.6986, 128.329, 1.11 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 1.83855, -2.75066, 36.0278, 1.38 ) }
    dend_20 { pt3dadd( 3.23114, -3.00299, 38.0602, 1.38 ) }
    dend_20 { pt3dadd( 7.61739, -3.79774, 44.4615, 1.66 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 34/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 88.6225, -37.9046, 6.69957, 0.28 ) }
    dend_17 { pt3dadd( 90.7997, -36.9254, 6.49494, 0.28 ) }
    dend_17 { pt3dadd( 92.461, -36.1782, 6.33881, 0.55 ) }
    dend_17 { pt3dadd( 93.8411, -35.5575, 6.2091, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 38/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 88.6225, -37.9046, 6.69957, 0.83 ) }
    dend_16 { pt3dadd( 90.7689, -39.0981, 6.67114, 0.83 ) }
    dend_16 { pt3dadd( 93.0798, -40.4083, 6.63958, 1.94 ) }
    dend_16 { pt3dadd( 94.8948, -41.4551, 6.61416, 1.11 ) }
    dend_16 { pt3dadd( 99.7179, -44.2154, 6.54415, 0.83 ) }
    dend_16 { pt3dadd( 103.57, -46.3776, 6.48637, 0.83 ) }
    dend_16 { pt3dadd( 106.197, -47.8128, 6.44569, 1.38 ) }
    dend_16 { pt3dadd( 108.822, -49.1265, 6.43924, 0.55 ) }
    dend_16 { pt3dadd( 111.383, -50.3242, 6.45902, 1.94 ) }
    dend_16 { pt3dadd( 114.112, -51.5762, 6.50546, 0.55 ) }
    dend_16 { pt3dadd( 116.016, -52.4228, 6.59064, 0.55 ) }
    dend_16 { pt3dadd( 118.21, -53.3618, 6.74019, 1.11 ) }
    dend_16 { pt3dadd( 122.995, -55.475, 7.21097, 0.55 ) }
    dend_16 { pt3dadd( 123.972, -55.9057, 7.37196, 0.55 ) }
    dend_16 { pt3dadd( 127.186, -57.3949, 8.0642, 1.11 ) }
    dend_16 { pt3dadd( 129.335, -58.5121, 8.67964, 0.55 ) }
    dend_16 { pt3dadd( 130.857, -59.3566, 9.18091, 0.55 ) }
    dend_16 { pt3dadd( 134.092, -61.2612, 10.4364, 0.83 ) }
    dend_16 { pt3dadd( 137.204, -63.1657, 11.84, 0.28 ) }
    dend_16 { pt3dadd( 138.809, -64.0813, 12.5924, 1.38 ) }
    dend_16 { pt3dadd( 141.546, -65.4944, 13.8602, 0.55 ) }
    dend_16 { pt3dadd( 144.067, -66.63, 15.0351, 0.55 ) }
    dend_16 { pt3dadd( 145.575, -67.2523, 15.7439, 0.83 ) }
    dend_16 { pt3dadd( 148.046, -68.1076, 16.8941, 0.55 ) }
    dend_16 { pt3dadd( 150.015, -68.7047, 17.7949, 0.55 ) }
    dend_16 { pt3dadd( 152.447, -69.3211, 18.958, 1.66 ) }
    dend_16 { pt3dadd( 156.591, -70.2446, 20.9698, 0.55 ) }
    dend_16 { pt3dadd( 158.723, -70.7854, 22.0847, 0.28 ) }
    dend_16 { pt3dadd( 160.935, -71.3897, 23.3108, 0.83 ) }
    dend_16 { pt3dadd( 163.66, -72.1923, 25.1391, 0.55 ) }
    dend_16 { pt3dadd( 166.624, -73.1127, 27.3771, 0.55 ) }
    dend_16 { pt3dadd( 167.822, -73.5054, 28.3367, 1.38 ) }
    dend_16 { pt3dadd( 171.622, -74.8344, 31.4758, 0.28 ) }
    dend_16 { pt3dadd( 174.073, -75.7119, 33.6303, 1.11 ) }
    dend_16 { pt3dadd( 179.272, -77.7212, 38.4503, 0.28 ) }
    dend_16 { pt3dadd( 180.083, -78.0483, 39.2648, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 26.6014, -13.9589, 18.3232, 0.28 ) }
    dend_14 { pt3dadd( 28.135, -16.1266, 19.6308, 0.28 ) }
    dend_14 { pt3dadd( 28.2801, -16.3243, 19.7482, 0.83 ) }
    dend_14 { pt3dadd( 29.3848, -17.7532, 20.5159, 0.83 ) }
    dend_14 { pt3dadd( 30.7314, -19.4294, 21.3135, 0.28 ) }
    dend_14 { pt3dadd( 31.4967, -20.3113, 21.7223, 0.83 ) }
    dend_14 { pt3dadd( 32.9529, -22.0239, 22.4679, 0.28 ) }
    dend_14 { pt3dadd( 33.4589, -22.6359, 22.684, 0.55 ) }
    dend_14 { pt3dadd( 35.0514, -24.6443, 23.3776, 0.28 ) }
    dend_14 { pt3dadd( 36.0011, -25.8788, 23.7697, 0.55 ) }
    dend_14 { pt3dadd( 37.8698, -28.3551, 24.5245, 0.28 ) }
    dend_14 { pt3dadd( 39.7328, -30.9626, 25.3823, 0.28 ) }
    dend_14 { pt3dadd( 41.2655, -33.1349, 26.0779, 1.11 ) }
    dend_14 { pt3dadd( 43.6171, -36.6153, 27.2229, 0.55 ) }
    dend_14 { pt3dadd( 44.7328, -38.3475, 27.8173, 1.66 ) }
    dend_14 { pt3dadd( 45.792, -40.0805, 28.4316, 0.28 ) }
    dend_14 { pt3dadd( 46.6441, -41.5927, 28.9538, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 26.6014, -13.9589, 18.3232, 0.55 ) }
    dend_13 { pt3dadd( 28.2451, -14.5902, 21.312, 0.55 ) }
    dend_13 { pt3dadd( 31.2219, -15.7334, 26.7244, 0.55 ) }
    dend_13 { pt3dadd( 32.2965, -16.1461, 28.6784, 0.55 ) }
    dend_13 { pt3dadd( 33.2278, -16.5038, 30.3719, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 4.11291, 22.114, -3.92477, 0.55 ) }
    dend_8 { pt3dadd( 2.90455, 23.4894, -4.51275, 0.55 ) }
    dend_8 { pt3dadd( 0.75324, 25.9381, -5.55956, 0.55 ) }
    dend_8 { pt3dadd( -0.741573, 27.6395, -6.28692, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_8 { pt3dadd( -1.95058, 29.0157, -6.87521, 1.11 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 1/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 4.11291, 22.114, -3.92477, 0.83 ) }
    dend_7 { pt3dadd( -0.19454, 24.1459, -7.25973, 0.83 ) }
    dend_7 { pt3dadd( -1.83516, 24.9463, -8.39902, 0.83 ) }
    dend_7 { pt3dadd( -3.84475, 26.0815, -9.63447, 0.83 ) }
    dend_7 { pt3dadd( -7.12455, 27.9771, -11.5957, 0.83 ) }
    dend_7 { pt3dadd( -12.1327, 30.8458, -14.4324, 0.83 ) }
    dend_7 { pt3dadd( -13.8341, 31.769, -15.3601, 1.38 ) }
    dend_7 { pt3dadd( -16.7178, 33.3743, -16.7779, 0.83 ) }
    dend_7 { pt3dadd( -20.2829, 35.4826, -18.6924, 0.83 ) }
    dend_7 { pt3dadd( -23.402, 37.4589, -20.5645, 0.83 ) }
    dend_7 { pt3dadd( -25.1751, 38.6441, -21.7523, 1.38 ) }
    dend_7 { pt3dadd( -28.2068, 40.8836, -24.1718, 0.55 ) }
    dend_7 { pt3dadd( -30.4902, 42.7198, -26.4336, 0.83 ) }
    dend_7 { pt3dadd( -32.656, 44.5993, -29.1232, 0.83 ) }
    dend_7 { pt3dadd( -34.3622, 46.2045, -31.7932, 0.83 ) }
    dend_7 { pt3dadd( -35.8835, 47.9106, -34.6274, 1.38 ) }
    dend_7 { pt3dadd( -38.0947, 50.7502, -39.4527, 0.55 ) }
    dend_7 { pt3dadd( -38.4049, 51.185, -40.1972, 0.55 ) }
    dend_7 { pt3dadd( -39.16, 52.1635, -41.8573, 1.11 ) }
    dend_7 { pt3dadd( -40.866, 54.2097, -44.9446, 0.55 ) }
    dend_7 { pt3dadd( -41.856, 55.4223, -46.4279, 0.55 ) }
    dend_7 { pt3dadd( -43.2836, 57.1593, -48.0588, 1.11 ) }
    dend_7 { pt3dadd( -44.7673, 58.9228, -49.1919, 0.55 ) }
    dend_7 { pt3dadd( -46.6179, 61.1673, -50.2765, 1.11 ) }
    dend_7 { pt3dadd( -48.0602, 62.9233, -50.9515, 0.28 ) }
    dend_7 { pt3dadd( -49.4665, 64.6682, -51.4477, 0.83 ) }
    dend_7 { pt3dadd( -51.4572, 67.1556, -52.0823, 0.28 ) }
    dend_7 { pt3dadd( -53.525, 69.8442, -52.5746, 0.28 ) }
    dend_7 { pt3dadd( -55.5157, 72.6101, -52.9538, 1.11 ) }
    dend_7 { pt3dadd( -62.326, 77.3775, -60.2871, 1.11 ) }
    dend_7 { pt3dadd( -68.388, 82.1348, -68.2559, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 32/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 11.6537, 23.2215, -5.93813, 1.11 ) }
    dend_5 { pt3dadd( 13.2053, 23.6281, -5.52431, 1.11 ) }
    dend_5 { pt3dadd( 16.3519, 24.4303, -4.56735, 0.83 ) }
    dend_5 { pt3dadd( 19.4844, 25.2122, -3.56211, 0.83 ) }
    dend_5 { pt3dadd( 22.1098, 25.8215, -2.66459, 0.83 ) }
    dend_5 { pt3dadd( 23.3519, 26.0938, -2.24254, 0.55 ) }
    dend_5 { pt3dadd( 25.8512, 26.637, -1.37181, 1.11 ) }
    dend_5 { pt3dadd( 28.0154, 27.1057, -0.54306, 0.55 ) }
    dend_5 { pt3dadd( 29.6575, 27.435, 0.109582, 1.38 ) }
    dend_5 { pt3dadd( 31.604, 27.8413, 0.927468, 0.55 ) }
    dend_5 { pt3dadd( 33.0125, 28.1643, 1.50651, 0.55 ) }
    dend_5 { pt3dadd( 35.5009, 28.8148, 2.53987, 0.83 ) }
    dend_5 { pt3dadd( 37.4515, 29.407, 3.31321, 0.28 ) }
    dend_5 { pt3dadd( 38.187, 29.6563, 3.61148, 0.83 ) }
    dend_5 { pt3dadd( 39.6843, 30.2418, 4.22796, 0.28 ) }
    dend_5 { pt3dadd( 41.8097, 31.1353, 5.08927, 1.11 ) }
    dend_5 { pt3dadd( 43.8848, 32.0215, 5.99478, 0.28 ) }
    dend_5 { pt3dadd( 45.0617, 32.5132, 6.54404, 1.66 ) }
    dend_5 { pt3dadd( 47.7323, 33.5834, 7.93367, 0.55 ) }
    dend_5 { pt3dadd( 48.9021, 34.024, 8.56758, 0.55 ) }
    dend_5 { pt3dadd( 49.9062, 34.3703, 9.10772, 0.55 ) }
    dend_5 { pt3dadd( 52.4165, 35.1564, 10.4344, 1.38 ) }
    dend_5 { pt3dadd( 54.1818, 35.6483, 11.3092, 0.28 ) }
    dend_5 { pt3dadd( 56.1525, 36.1048, 12.3208, 0.83 ) }
    dend_5 { pt3dadd( 57.8619, 36.4126, 13.2403, 1.11 ) }
    dend_5 { pt3dadd( 58.894, 36.5558, 13.788, 1.11 ) }
    dend_5 { pt3dadd( 59.7454, 36.654, 14.2143, 0.28 ) }
    dend_5 { pt3dadd( 60.8046, 36.7323, 14.7239, 0.83 ) }
    dend_5 { pt3dadd( 65.4637, 36.931, 16.9513, 0.28 ) }
    dend_5 { pt3dadd( 67.6564, 36.9472, 18.0397, 1.38 ) }
    dend_5 { pt3dadd( 68.726, 36.93, 18.6025, 0.28 ) }
    dend_5 { pt3dadd( 69.9758, 36.928, 19.3038, 1.11 ) }
    dend_5 { pt3dadd( 72.323, 36.984, 20.7531, 0.28 ) }
    dend_5 { pt3dadd( 72.6091, 37.0022, 20.9393, 0.55 ) }
    dend_5 { pt3dadd( 74.66, 37.2518, 22.2936, 0.28 ) }
    dend_5 { pt3dadd( 75.4194, 37.4112, 22.8625, 1.38 ) }
    dend_5 { pt3dadd( 78.5562, 38.319, 25.4857, 0.28 ) }
    dend_5 { pt3dadd( 80.1897, 38.9742, 27.1689, 0.83 ) }
    dend_5 { pt3dadd( 81.0208, 39.3747, 28.0961, 0.28 ) }
    dend_5 { pt3dadd( 81.5533, 39.6467, 28.7106, 1.11 ) }
    dend_5 { pt3dadd( 83.7457, 40.8421, 31.2972, 0.28 ) }
    dend_5 { pt3dadd( 84.4406, 41.2328, 32.1311, 1.11 ) }
    dend_5 { pt3dadd( 89.0233, 43.9176, 37.6275, 0.28 ) }
    dend_5 { pt3dadd( 89.7148, 44.3386, 38.4432, 1.38 ) }
    dend_5 { pt3dadd( 91.6059, 45.5527, 40.6588, 0.28 ) }
    dend_5 { pt3dadd( 92.1057, 45.8738, 41.2381, 1.38 ) }
    dend_5 { pt3dadd( 93.9348, 47.054, 43.2951, 0.28 ) }
    dend_5 { pt3dadd( 94.2256, 47.2429, 43.609, 0.83 ) }
    dend_5 { pt3dadd( 96.4671, 48.9029, 45.6352, 0.55 ) }
    dend_5 { pt3dadd( 97.2094, 49.5233, 46.4018, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 82/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 11.6537, 23.2215, -5.93813, 1.38 ) }
    dend_2 { pt3dadd( 12.2544, 24.484, -7.68069, 1.38 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 84/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 20.8195, 30.5353, 43.1376, 0.55 ) }
    dend_50 { pt3dadd( 22.4597, 30.6397, 43.7445, 0.55 ) }
    dend_50 { pt3dadd( 24.3407, 30.7921, 44.4091, 0.55 ) }
    dend_50 { pt3dadd( 27.9604, 31.1652, 45.5766, 0.55 ) }
    dend_50 { pt3dadd( 30.1509, 31.4284, 46.265, 1.11 ) }
    dend_50 { pt3dadd( 33.9946, 31.8882, 47.2164, 0.55 ) }
    dend_50 { pt3dadd( 36.8033, 32.2412, 47.8317, 0.55 ) }
    dend_50 { pt3dadd( 38.4626, 32.4486, 48.1479, 0.28 ) }
    dend_50 { pt3dadd( 40.1993, 32.7228, 48.4481, 0.83 ) }
    dend_50 { pt3dadd( 42.978, 33.1955, 48.8375, 0.55 ) }
    dend_50 { pt3dadd( 46.7679, 33.8563, 49.3619, 0.83 ) }
    dend_50 { pt3dadd( 49.8955, 34.4366, 49.7826, 0.28 ) }
    dend_50 { pt3dadd( 53.4981, 35.1362, 50.373, 0.83 ) }
    dend_50 { pt3dadd( 56.884, 35.8387, 51.0073, 0.28 ) }
    dend_50 { pt3dadd( 57.4086, 35.9559, 51.1267, 0.28 ) }
    dend_50 { pt3dadd( 59.1427, 36.4128, 51.5777, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 61.0089, 37.0134, 52.1753, 0.28 ) }
    dend_50 { pt3dadd( 62.4571, 37.5457, 52.6707, 0.83 ) }
    dend_50 { pt3dadd( 64.1481, 38.2746, 53.3787, 0.28 ) }
    dend_50 { pt3dadd( 65.4588, 38.8446, 53.8801, 0.83 ) }
    dend_50 { pt3dadd( 66.636, 39.3812, 54.3395, 0.28 ) }
    dend_50 { pt3dadd( 68.2124, 40.1484, 54.958, 0.83 ) }
    dend_50 { pt3dadd( 70.6902, 41.4027, 56.0631, 0.28 ) }
    dend_50 { pt3dadd( 71.8692, 42.0181, 56.6642, 0.55 ) }
    dend_50 { pt3dadd( 74.2168, 43.403, 58.0485, 0.28 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 9/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 20.8195, 30.5353, 43.1376, 0.83 ) }
    dend_49 { pt3dadd( 21.7692, 32.4284, 45.4658, 0.83 ) }
    dend_49 { pt3dadd( 22.681, 34.1968, 47.8837, 0.83 ) }
    dend_49 { pt3dadd( 23.6227, 35.9826, 50.4134, 0.55 ) }
    dend_49 { pt3dadd( 23.9715, 36.5875, 51.4751, 0.55 ) }
    dend_49 { pt3dadd( 24.9033, 38.105, 54.2952, 0.83 ) }
    dend_49 { pt3dadd( 25.684, 39.364, 56.7069, 0.55 ) }
    dend_49 { pt3dadd( 26.4259, 40.475, 58.966, 0.83 ) }
    dend_49 { pt3dadd( 26.819, 41.0965, 60.1502, 1.38 ) }
    dend_49 { pt3dadd( 29.0219, 44.9743, 67.118, 0.55 ) }
    dend_49 { pt3dadd( 30.0621, 47.047, 70.5983, 1.38 ) }
    dend_49 { pt3dadd( 31.0606, 49.5118, 74.2495, 0.55 ) }
    dend_49 { pt3dadd( 31.2188, 50.0448, 74.9185, 1.11 ) }
    dend_49 { pt3dadd( 31.7062, 52.5978, 77.6786, 0.55 ) }
    dend_49 { pt3dadd( 31.8315, 54.0875, 79.0797, 0.83 ) }
    dend_49 { pt3dadd( 31.8079, 55.0749, 79.8286, 0.83 ) }
    dend_49 { pt3dadd( 31.5565, 57.6812, 81.7891, 0.55 ) }
    dend_49 { pt3dadd( 31.1483, 60.7583, 84.0601, 0.83 ) }
    dend_49 { pt3dadd( 30.761, 63.2648, 86.0105, 1.11 ) }
    dend_49 { pt3dadd( 30.3741, 65.4833, 87.8765, 0.55 ) }
    dend_49 { pt3dadd( 30.2894, 65.9466, 88.2831, 0.83 ) }
    dend_49 { pt3dadd( 29.9641, 67.8376, 90.0211, 0.28 ) }
    dend_49 { pt3dadd( 29.5999, 70.0835, 92.1357, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 32/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -41.2864, -87.3701, -45.0623, 0.28 ) }
    dend_34 { pt3dadd( -43.543, -94.7535, -51.1953, 0.28 ) }
    dend_34 { pt3dadd( -43.7732, -102.122, -57.7066, 0.28 ) }
    dend_34 { pt3dadd( -43.3405, -109.857, -63.7343, 0.28 ) }
    dend_34 { pt3dadd( -43.2654, -116.741, -70.7912, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 37/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -41.2864, -87.3701, -45.0623, 0.28 ) }
    dend_33 { pt3dadd( -42.8484, -95.9484, -50.645, 0.28 ) }
    dend_33 { pt3dadd( -43.8317, -104.733, -56.0069, 0.28 ) }
    dend_33 { pt3dadd( -42.9984, -113.908, -60.6509, 0.28 ) }
    dend_33 { pt3dadd( -41.9142, -122.824, -65.7645, 0.28 ) }
    dend_33 { pt3dadd( -39.8602, -131.671, -70.7233, 0.28 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -30.8552, -45.8982, -4.61482, 1.11 ) }
    dend_31 { pt3dadd( -31.2591, -48.1078, -3.10717, 1.11 ) }
    dend_31 { pt3dadd( -31.7817, -50.3973, -1.37293, 1.11 ) }
    dend_31 { pt3dadd( -32.7621, -54.6931, 1.88096, 1.11 ) }
    dend_31 { pt3dadd( -33.327, -57.1686, 3.75606, 1.11 ) }
    dend_31 { pt3dadd( -33.8592, -59.5008, 5.52262, 1.11 ) }
    dend_31 { pt3dadd( -34.4033, -61.8845, 7.32819, 1.38 ) }
    dend_31 { pt3dadd( -35.3221, -65.8663, 10.5408, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -30.8552, -45.8982, -4.61482, 0.83 ) }
    dend_30 { pt3dadd( -31.1525, -48.6977, -4.86855, 0.83 ) }
    dend_30 { pt3dadd( -31.6763, -52.1055, -5.19801, 0.83 ) }
    dend_30 { pt3dadd( -32.2527, -55.4748, -5.51176, 0.83 ) }
    dend_30 { pt3dadd( -33.5676, -62.6438, -6.16322, 0.83 ) }
    dend_30 { pt3dadd( -34.4488, -67.6105, -6.59526, 0.83 ) }
    dend_30 { pt3dadd( -35.1923, -71.6413, -6.93336, 0.83 ) }
    dend_30 { pt3dadd( -35.977, -75.4393, -7.12815, 0.83 ) }
    dend_30 { pt3dadd( -36.5227, -78.2978, -7.17958, 0.83 ) }
    dend_30 { pt3dadd( -36.8531, -80.1471, -7.20103, 0.83 ) }
    dend_30 { pt3dadd( -37.3198, -82.8438, -7.02667, 0.83 ) }
    dend_30 { pt3dadd( -38.1374, -88.8619, -6.43214, 0.83 ) }
    dend_30 { pt3dadd( -38.7229, -93.1867, -5.86188, 0.55 ) }
    dend_30 { pt3dadd( -38.9482, -96.3835, -5.30747, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 65/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.61739, -3.79774, 44.4615, 0.55 ) }
    dend_24 { pt3dadd( 6.82477, -4.19692, 48.1846, 0.55 ) }
    dend_24 { pt3dadd( 5.67636, -4.68992, 53.9558, 1.11 ) }
    dend_24 { pt3dadd( 4.69098, -5.11003, 58.9524, 0.83 ) }
    dend_24 { pt3dadd( 3.73369, -5.45046, 63.4376, 1.66 ) }
    dend_24 { pt3dadd( 1.83466, -5.95162, 71.9427, 1.11 ) }
    dend_24 { pt3dadd( 1.15332, -6.08651, 74.9143, 1.38 ) }
    dend_24 { pt3dadd( -0.771154, -6.21797, 82.4738, 0.83 ) }
    dend_24 { pt3dadd( -1.60583, -6.25704, 85.5101, 1.66 ) }
    dend_24 { pt3dadd( -3.31654, -6.33838, 91.0045, 0.83 ) }
    dend_24 { pt3dadd( -4.17269, -6.41226, 93.384, 0.83 ) }
    dend_24 { pt3dadd( -5.29042, -6.63371, 95.9293, 1.38 ) }
    dend_24 { pt3dadd( -6.38718, -6.89779, 98.002, 1.38 ) }
    dend_24 { pt3dadd( -8.45774, -7.34528, 101.058, 0.83 ) }
    dend_24 { pt3dadd( -11.0416, -7.87137, 104.307, 0.55 ) }
    dend_24 { pt3dadd( -11.6353, -8.02107, 105.011, 0.55 ) }
    dend_24 { pt3dadd( -13.1666, -8.4947, 106.898, 0.83 ) }
    dend_24 { pt3dadd( -14.9387, -9.14606, 109.242, 0.55 ) }
    dend_24 { pt3dadd( -15.6322, -9.43547, 110.33, 0.55 ) }
    dend_24 { pt3dadd( -17.4669, -10.2548, 113.541, 1.11 ) }
    dend_24 { pt3dadd( -19.7495, -11.3495, 117.837, 0.55 ) }
    dend_24 { pt3dadd( -21.0865, -11.9753, 120.342, 0.83 ) }
    dend_24 { pt3dadd( -22.7493, -12.7554, 123.316, 1.38 ) }
    dend_24 { pt3dadd( -25.3874, -14.1311, 128.236, 0.55 ) }
    dend_24 { pt3dadd( -26.0256, -14.4913, 129.464, 0.83 ) }
    dend_24 { pt3dadd( -27.5237, -15.3575, 132.314, 0.83 ) }
    dend_24 { pt3dadd( -28.9372, -15.9771, 134.554, 0.55 ) }
    dend_24 { pt3dadd( -30.1567, -16.344, 136.207, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 93/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.61739, -3.79774, 44.4615, 0.83 ) }
    dend_21 { pt3dadd( 10.194, -4.50914, 46.8688, 0.83 ) }
    dend_21 { pt3dadd( 12.6932, -5.22555, 49.2895, 0.83 ) }
    dend_21 { pt3dadd( 15.6772, -6.08092, 52.1796, 0.83 ) }
    dend_21 { pt3dadd( 18.0156, -6.7512, 54.4444, 0.83 ) }
    dend_21 { pt3dadd( 21.0196, -7.61228, 57.3538, 0.83 ) }
    dend_21 { pt3dadd( 24.5735, -8.63104, 60.796, 1.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_21 { pt3dadd( 27.7139, -9.59657, 64.1979, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 1/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.95058, 29.0157, -6.87521, 0.55 ) }
    dend_10 { pt3dadd( -1.51875, 30.2258, -5.54188, 0.55 ) }
    dend_10 { pt3dadd( -0.948478, 31.8583, -3.90116, 0.28 ) }
    dend_10 { pt3dadd( -0.859045, 32.1263, -3.64616, 0.83 ) }
    dend_10 { pt3dadd( 0.42023, 35.7099, -0.401348, 0.28 ) }
    dend_10 { pt3dadd( 0.65386, 36.3228, 0.127806, 1.38 ) }
    dend_10 { pt3dadd( 2.62592, 41.2245, 3.9369, 0.28 ) }
    dend_10 { pt3dadd( 2.96988, 42.0426, 4.49987, 1.66 ) }
    dend_10 { pt3dadd( 4.10438, 44.5743, 6.05387, 0.28 ) }
    dend_10 { pt3dadd( 4.70664, 45.8192, 6.75725, 0.28 ) }
    dend_10 { pt3dadd( 5.19532, 46.7364, 7.18294, 1.66 ) }
    dend_10 { pt3dadd( 6.81839, 49.6371, 8.39291, 0.28 ) }
    dend_10 { pt3dadd( 7.74688, 51.1519, 8.88124, 1.38 ) }
    dend_10 { pt3dadd( 8.6754, 52.6276, 9.35873, 0.28 ) }
    dend_10 { pt3dadd( 9.11881, 53.315, 9.55082, 0.55 ) }
    dend_10 { pt3dadd( 10.0219, 54.8444, 10.0327, 0.28 ) }
    dend_10 { pt3dadd( 10.3144, 55.3571, 10.2176, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -1.95058, 29.0157, -6.87521, 0.28 ) }
    dend_9 { pt3dadd( -5.26111, 31.1211, -6.30457, 0.28 ) }
    dend_9 { pt3dadd( -5.924, 31.5509, -6.25165, 0.83 ) }
    dend_9 { pt3dadd( -7.42057, 32.5498, -6.15415, 0.28 ) }
    dend_9 { pt3dadd( -8.26155, 33.1869, -6.0125, 0.83 ) }
    dend_9 { pt3dadd( -9.80372, 34.405, -5.70431, 0.28 ) }
    dend_9 { pt3dadd( -10.4057, 34.8973, -5.57487, 0.83 ) }
    dend_9 { pt3dadd( -13.1818, 37.4343, -4.93891, 0.28 ) }
    dend_9 { pt3dadd( -13.8335, 38.0667, -4.77764, 0.83 ) }
    dend_9 { pt3dadd( -19.5771, 43.2882, -2.96318, 0.28 ) }
    dend_9 { pt3dadd( -19.781, 43.4655, -2.88954, 1.38 ) }
    dend_9 { pt3dadd( -20.2903, 43.9059, -2.67249, 1.38 ) }
    dend_9 { pt3dadd( -21.4319, 44.876, -2.13139, 0.28 ) }
    dend_9 { pt3dadd( -21.8719, 45.2658, -1.91328, 0.55 ) }
    dend_9 { pt3dadd( -26.906, 49.7303, 0.414513, 0.28 ) }
    dend_9 { pt3dadd( -27.8113, 50.4945, 0.820169, 1.11 ) }
    dend_9 { pt3dadd( -30.316, 52.5613, 1.93998, 0.28 ) }
    dend_9 { pt3dadd( -30.7329, 52.8947, 2.12532, 0.83 ) }
    dend_9 { pt3dadd( -33.9936, 55.4417, 3.551, 0.28 ) }
    dend_9 { pt3dadd( -34.1408, 55.5676, 3.61123, 0.55 ) }
    dend_9 { pt3dadd( -39.1582, 60.407, 4.91937, 0.55 ) }
    dend_9 { pt3dadd( -43.506, 65.4722, 7.27405, 0.55 ) }
    dend_9 { pt3dadd( -47.4114, 71.201, 8.37302, 0.55 ) }
    dend_9 { pt3dadd( -50.6563, 77.3619, 8.78877, 0.55 ) }
    dend_9 { pt3dadd( -55.1091, 82.796, 8.33919, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 12.2544, 24.484, -7.68069, 0.83 ) }
    dend_4 { pt3dadd( 15.767, 24.0005, -10.393, 0.83 ) }
    dend_4 { pt3dadd( 20.1523, 23.5083, -13.522, 0.83 ) }
    dend_4 { pt3dadd( 22.1943, 23.4233, -14.803, 0.83 ) }
    dend_4 { pt3dadd( 26.1649, 23.3694, -17.1836, 0.55 ) }
    dend_4 { pt3dadd( 27.8363, 23.4509, -18.081, 0.55 ) }
    dend_4 { pt3dadd( 31.076, 23.6685, -19.7578, 0.83 ) }
    dend_4 { pt3dadd( 35.0336, 24.108, -21.5668, 0.83 ) }
    dend_4 { pt3dadd( 39.0761, 24.7454, -23.3594, 0.83 ) }
    dend_4 { pt3dadd( 41.5039, 25.1424, -24.4013, 1.11 ) }
    dend_4 { pt3dadd( 47.2556, 26.1171, -26.6331, 1.11 ) }
    dend_4 { pt3dadd( 50.6069, 26.7372, -27.9922, 0.55 ) }
    dend_4 { pt3dadd( 52.8596, 27.1699, -28.9129, 0.55 ) }
    dend_4 { pt3dadd( 54.8284, 27.5354, -29.7658, 1.11 ) }
    dend_4 { pt3dadd( 57.8506, 28.0259, -31.1077, 0.55 ) }
    dend_4 { pt3dadd( 60.1655, 28.4128, -32.0969, 0.55 ) }
    dend_4 { pt3dadd( 63.1698, 28.8861, -33.3585, 1.11 ) }
    dend_4 { pt3dadd( 65.1319, 29.2264, -34.072, 0.55 ) }
    dend_4 { pt3dadd( 67.5349, 29.5953, -34.8718, 0.28 ) }
    dend_4 { pt3dadd( 70.6324, 30.011, -35.7686, 0.83 ) }
    dend_4 { pt3dadd( 76.5872, 30.554, -37.1226, 0.28 ) }
    dend_4 { pt3dadd( 78.6754, 30.6061, -37.481, 0.55 ) }
    dend_4 { pt3dadd( 81.039, 30.4715, -37.7225, 0.28 ) }
    dend_4 { pt3dadd( 82.6066, 30.2706, -37.8228, 0.28 ) }
    dend_4 { pt3dadd( 84.7798, 29.794, -37.8549, 1.11 ) }
    dend_4 { pt3dadd( 88.5161, 28.7268, -37.7955, 0.55 ) }
    dend_4 { pt3dadd( 91.7357, 27.5494, -37.606, 1.66 ) }
    dend_4 { pt3dadd( 95.8701, 25.9155, -37.3572, 0.28 ) }
    dend_4 { pt3dadd( 97.6127, 25.198, -37.266, 0.28 ) }
    dend_4 { pt3dadd( 100.63, 23.9967, -37.0706, 0.83 ) }
    dend_4 { pt3dadd( 111.812, 23.5773, -39.3193, 0.83 ) }
    dend_4 { pt3dadd( 123.072, 21.8651, -39.8985, 0.83 ) }
    dend_4 { pt3dadd( 134.478, 22.1999, -40.0194, 0.83 ) }
    dend_4 { pt3dadd( 145.786, 22.0688, -38.4796, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 77/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.2544, 24.484, -7.68069, 1.11 ) }
    dend_3 { pt3dadd( 12.3162, 25.6755, -7.9592, 1.11 ) }
    dend_3 { pt3dadd( 12.4644, 27.0718, -8.31375, 0.83 ) }
    dend_3 { pt3dadd( 12.6758, 28.1613, -8.59231, 0.83 ) }
    dend_3 { pt3dadd( 12.9691, 29.4781, -8.94765, 1.38 ) }
    dend_3 { pt3dadd( 13.5159, 31.9698, -9.74895, 0.83 ) }
    dend_3 { pt3dadd( 13.8095, 33.3376, -10.2585, 0.83 ) }
    dend_3 { pt3dadd( 14.0154, 34.2366, -10.6417, 0.83 ) }
    dend_3 { pt3dadd( 14.5248, 36.472, -11.8544, 0.83 ) }
    dend_3 { pt3dadd( 14.7001, 37.2477, -12.3371, 0.83 ) }
    dend_3 { pt3dadd( 15.0728, 39.0709, -13.6361, 0.83 ) }
    dend_3 { pt3dadd( 15.2715, 40.2258, -14.5326, 1.11 ) }
    dend_3 { pt3dadd( 15.3816, 41.0105, -15.1428, 1.11 ) }
    dend_3 { pt3dadd( 15.6576, 43.0671, -16.6548, 0.83 ) }
    dend_3 { pt3dadd( 15.827, 44.1876, -17.4435, 0.83 ) }
    dend_3 { pt3dadd( 16.0774, 45.4619, -18.2756, 1.11 ) }
    dend_3 { pt3dadd( 16.2243, 46.2021, -18.7224, 0.28 ) }
    dend_3 { pt3dadd( 16.4111, 47.2311, -19.3275, 0.83 ) }
    dend_3 { pt3dadd( 16.6355, 49.88, -20.7207, 0.83 ) }
    dend_3 { pt3dadd( 16.6831, 51.5419, -21.4625, 1.66 ) }
    dend_3 { pt3dadd( 16.668, 53.6658, -22.3381, 0.55 ) }
    dend_3 { pt3dadd( 16.6266, 55.1763, -22.9105, 0.55 ) }
    dend_3 { pt3dadd( 16.5478, 56.7846, -23.4882, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( 16.1576, 62.3352, -25.5403, 0.28 ) }
    dend_3 { pt3dadd( 16.0781, 63.3305, -25.9099, 1.66 ) }
    dend_3 { pt3dadd( 15.9338, 65.9681, -26.8398, 0.28 ) }
    dend_3 { pt3dadd( 15.9249, 66.2915, -26.9424, 0.83 ) }
    dend_3 { pt3dadd( 15.9243, 67.1625, -27.2067, 0.28 ) }
    dend_3 { pt3dadd( 15.9466, 69.4187, -27.8522, 1.66 ) }
    dend_3 { pt3dadd( 16.0339, 72.2442, -28.6774, 0.28 ) }
    dend_3 { pt3dadd( 16.0441, 73.0761, -28.9069, 1.38 ) }
    dend_3 { pt3dadd( 16.0182, 77.2584, -29.9094, 0.28 ) }
    dend_3 { pt3dadd( 15.962, 78.0829, -30.0881, 1.66 ) }
    dend_3 { pt3dadd( 15.6616, 80.3881, -30.5146, 0.28 ) }
    dend_3 { pt3dadd( 15.5837, 80.7501, -30.594, 0.83 ) }
    dend_3 { pt3dadd( 14.8139, 83.5008, -31.344, 0.28 ) }
    dend_3 { pt3dadd( 14.6628, 83.9914, -31.4943, 0.83 ) }
    dend_3 { pt3dadd( 13.283, 88.0499, -32.9724, 0.28 ) }
    dend_3 { pt3dadd( 12.8917, 89.1302, -33.4029, 1.11 ) }
    dend_3 { pt3dadd( 10.79, 94.3294, -35.7344, 0.28 ) }
    dend_3 { pt3dadd( 10.7262, 94.4753, -35.8054, 0.83 ) }
    dend_3 { pt3dadd( 11.6712, 100.422, -36.9067, 0.83 ) }
    dend_3 { pt3dadd( 12.7889, 106.415, -37.3955, 0.83 ) }
    dend_3 { pt3dadd( 14.2516, 112.158, -39.0101, 0.83 ) }
    dend_3 { pt3dadd( 16.3745, 117.874, -39.7854, 0.83 ) }
    dend_3 { pt3dadd( 18.8606, 123.41, -40.8675, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 23/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 27.7139, -9.59657, 64.1979, 0.28 ) }
    dend_23 { pt3dadd( 28.8542, -10.938, 65.3025, 0.28 ) }
    dend_23 { pt3dadd( 29.3555, -11.5497, 65.8855, 0.83 ) }
    dend_23 { pt3dadd( 30.5143, -12.8496, 67.294, 0.28 ) }
    dend_23 { pt3dadd( 30.9919, -13.3393, 67.9335, 0.83 ) }
    dend_23 { pt3dadd( 32.6931, -15.1435, 70.513, 0.28 ) }
    dend_23 { pt3dadd( 32.9678, -15.4602, 70.9867, 0.83 ) }
    dend_23 { pt3dadd( 34.0816, -16.8357, 73.324, 0.28 ) }
    dend_23 { pt3dadd( 35.0947, -18.0954, 75.579, 0.83 ) }
    dend_23 { pt3dadd( 36.2435, -19.5816, 78.349, 0.28 ) }
    dend_23 { pt3dadd( 37.2448, -20.9897, 81.0119, 1.38 ) }
    dend_23 { pt3dadd( 38.0481, -22.195, 83.3613, 0.28 ) }
    dend_23 { pt3dadd( 38.5881, -23.0271, 85.0584, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 27.7139, -9.59657, 64.1979, 0.55 ) }
    dend_22 { pt3dadd( 31.392, -9.95259, 67.7871, 0.55 ) }
    dend_22 { pt3dadd( 31.9477, -9.99529, 68.3708, 0.28 ) }
    dend_22 { pt3dadd( 33.9047, -10.1679, 70.4579, 0.83 ) }
    dend_22 { pt3dadd( 37.7557, -10.5341, 74.5548, 0.83 ) }
    dend_22 { pt3dadd( 40.8657, -10.8082, 77.7681, 0.83 ) }
    dend_22 { pt3dadd( 42.834, -10.966, 79.7465, 1.38 ) }
    dend_22 { pt3dadd( 46.5648, -11.1564, 83.4677, 0.55 ) }
    dend_22 { pt3dadd( 47.7146, -11.2004, 84.5692, 0.55 ) }
    dend_22 { pt3dadd( 50.5937, -11.278, 87.1318, 0.55 ) }
    dend_22 { pt3dadd( 53.4291, -11.3166, 89.4074, 1.11 ) }
    dend_22 { pt3dadd( 56.431, -11.344, 91.5421, 0.55 ) }
    dend_22 { pt3dadd( 59.0733, -11.3283, 93.2821, 1.38 ) }
    dend_22 { pt3dadd( 61.912, -11.2953, 94.9722, 1.11 ) }
    dend_22 { pt3dadd( 64.993, -11.1916, 96.7285, 0.55 ) }
    dend_22 { pt3dadd( 68.1655, -11.0015, 98.4863, 0.55 ) }
    dend_22 { pt3dadd( 69.8564, -10.8679, 99.4428, 0.55 ) }
    dend_22 { pt3dadd( 71.2952, -10.7209, 100.304, 0.83 ) }
    dend_22 { pt3dadd( 73.3335, -10.4608, 101.607, 0.83 ) }
    dend_22 { pt3dadd( 74.6172, -10.2431, 102.588, 0.83 ) }
    dend_22 { pt3dadd( 76.8127, -9.74137, 104.642, 0.55 ) }
    dend_22 { pt3dadd( 77.7903, -9.45651, 105.723, 0.83 ) }
    dend_22 { pt3dadd( 79.4108, -8.84017, 107.625, 0.55 ) }
    dend_22 { pt3dadd( 79.9559, -8.60196, 108.307, 0.83 ) }
    dend_22 { pt3dadd( 82.1261, -7.53526, 111.073, 0.55 ) }
    dend_22 { pt3dadd( 83.0836, -7.11329, 112.173, 0.55 ) }
    dend_22 { pt3dadd( 84.4825, -6.51449, 113.685, 0.55 ) }
    dend_22 { pt3dadd( 84.8696, -6.35283, 114.068, 0.83 ) }
    dend_22 { pt3dadd( 87.0928, -5.5058, 116.15, 0.55 ) }
    dend_22 { pt3dadd( 89.6125, -4.6355, 118.395, 1.11 ) }
    dend_22 { pt3dadd( 93.5343, -3.36245, 121.722, 0.55 ) }
    dend_22 { pt3dadd( 95.4169, -2.79465, 123.267, 1.11 ) }
    dend_22 { pt3dadd( 98.5435, -1.90285, 125.784, 0.55 ) }
    dend_22 { pt3dadd( 100.388, -1.4173, 127.243, 0.83 ) }
    dend_22 { pt3dadd( 102.569, -0.891291, 128.896, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_46, dend_39, dend_36, dend_27, dend_26, dend_18, dend_11, dend_0, dend_51, dend_47, dend_43, dend_40, dend_38, dend_37, dend_35, dend_28, dend_19, dend_15, dend_12, dend_6, dend_1, dend_53, dend_52, dend_48, dend_45, dend_44, dend_42, dend_41, dend_32, dend_29, dend_25, dend_20, dend_17, dend_16, dend_14, dend_13, dend_8, dend_7, dend_5, dend_2, dend_50, dend_49, dend_34, dend_33, dend_31, dend_30, dend_24, dend_21, dend_10, dend_9, dend_4, dend_3, dend_23, dend_22]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_51 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_43 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_38 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_37 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_15 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_45 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_44 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_32 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_25 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_7 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_5 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_50 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_49 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_30 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_4 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_3 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_22 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_18 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_11 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_47 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_6 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_40 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_8 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_20 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_36 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_13 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_48 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_53 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_14 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_21 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_52 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_31 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_23 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_34 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 11
    dend_51 nseg = 3
    dend_43 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 9
    dend_35 nseg = 5
    dend_15 nseg = 3
    dend_45 nseg = 5
    dend_44 nseg = 5
    dend_42 nseg = 11
    dend_32 nseg = 3
    dend_25 nseg = 5
    dend_16 nseg = 5
    dend_7 nseg = 5
    dend_5 nseg = 5
    dend_50 nseg = 3
    dend_49 nseg = 3
    dend_33 nseg = 3
    dend_30 nseg = 3
    dend_24 nseg = 5
    dend_9 nseg = 3
    dend_4 nseg = 7
    dend_3 nseg = 5
    dend_22 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L23_NBC_ec4aba2351_0_0


