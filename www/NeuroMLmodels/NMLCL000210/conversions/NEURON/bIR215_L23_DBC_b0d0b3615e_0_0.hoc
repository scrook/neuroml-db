// Cell: bIR215_L23_DBC_b0d0b3615e_0_0
/*
{
  "id" : "bIR215_L23_DBC_b0d0b3615e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.900775, -9.8088, 0.590543, 2.2315", "-0.795054, -8.89395, 0.538155, 2.59468", "-0.689333, -7.97909, 0.485767, 3.40562", "-0.583612, -7.06424, 0.433379, 4.21656", "-0.477891, -6.14939, 0.380991, 4.76863", "-0.37217, -5.23453, 0.328603, 5.07118", "-0.26645, -4.31968, 0.276215, 5.37449", "-0.160729, -3.40482, 0.223827, 5.6778", "-0.0550076, -2.48997, 0.171439, 5.91116", "0.0507134, -1.57512, 0.119051, 6.0829", "0.156434, -0.660263, 0.0666633, 6.26003", "0.262155, 0.254591, 0.0142753, 6.44407", "0.367876, 1.16944, -0.0381126, 6.62807", "0.473597, 2.0843, -0.0905006, 6.73886", "0.579318, 2.99915, -0.142889, 6.60317", "0.685039, 3.91401, -0.195276, 6.29711", "0.79076, 4.82886, -0.247664, 5.46861", "0.896481, 5.74371, -0.300052, 4.56209", "1.0022, 6.65857, -0.35244, 3.66181", "1.10792, 7.57342, -0.404828, 2.68112", "1.21364, 8.48827, -0.457216, 1.67793" ]
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.69856, 3.85573, 6.2591, 0.83", "5.98844, 5.70955, 6.354, 0.83", "12.9151, 11.3171, 6.64106, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "0.488563, 7.24573, 4.0991, 2.22", "0.599291, 10.0009, 1.19413, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.91144, -9.98427, 2.0591, 2.22", "-2.66077, -12.7549, 2.2931, 1.94", "-3.46614, -15.7327, 2.5446, 2.22", "-4.38228, -19.12, 2.83069, 1.38", "-4.90871, -21.0665, 2.99509, 1.38", "-5.45917, -23.1018, 3.16699, 1.66", "-6.09254, -25.4436, 3.36477, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999309967165
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.21364, 8.48827, -0.457216, 0.55", "2.93559, 23.3891, -0.457216, 0.55", "4.65753, 38.2899, -0.457216, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "12.9151, 11.3171, 6.64106, 0.28", "14.7413, 11.2416, 7.02957, 0.28", "15.8675, 11.2904, 7.24845, 0.55", "17.744, 11.5328, 7.49556, 0.28", "18.4344, 11.6683, 7.55581, 0.55", "21.2668, 12.346, 7.40357, 0.28", "23.0203, 12.8222, 7.12253, 0.55", "24.9476, 13.4882, 6.59477, 0.55", "27.1052, 14.3173, 5.76706, 0.28", "28.1121, 14.7339, 5.33069, 0.55", "31.2456, 16.0566, 3.73275, 0.28", "32.4841, 16.5464, 3.03838, 0.83", "34.4584, 17.1609, 1.98164, 0.28", "35.5028, 17.4416, 1.45329, 0.83", "37.6051, 17.8964, 0.509429, 0.28", "39.0014, 18.1172, -0.112342, 0.55", "41.4055, 18.4031, -1.09657, 0.28", "43.2864, 18.5514, -1.8223, 0.83", "45.9033, 18.7647, -2.93683, 0.28", "46.6167, 18.8243, -3.2691, 0.55", "50.4596, 19.0968, -5.21868, 0.28", "53.4115, 19.3075, -6.78094, 0.28", "54.9335, 19.4578, -7.67432, 0.55", "58.7461, 19.802, -10.0561, 0.28", "59.8081, 19.8962, -10.7603, 0.55", "61.571, 20.1414, -11.9955, 0.28", "62.2874, 20.2622, -12.4885, 0.55", "66.4465, 21.0069, -15.5258, 0.28", "67.5819, 21.2004, -16.2728, 0.83", "70.1797, 21.5645, -17.6974, 0.28", "71.687, 21.7501, -18.4218, 0.55", "73.3901, 21.9127, -19.1652, 0.28", "74.005, 21.9529, -19.4569, 0.55", "77.0787, 22.104, -20.9915, 0.28", "78.131, 22.1568, -21.5145, 0.83", "80.7413, 22.3183, -22.8021, 0.28", "82.4622, 22.4693, -23.6217, 0.55", "85.942, 23.1591, -25.545, 0.28", "87.7099, 23.6101, -26.5769, 0.28", "89.342, 24.1458, -27.5896, 0.55", "91.8471, 25.0867, -29.0865, 0.28", "93.4631, 25.6905, -30.0691, 0.55", "98.4121, 27.5023, -33.1938, 0.28", "99.6357, 27.8837, -33.9573, 0.83", "101.331, 28.3629, -35.1345, 0.28", "103.052, 28.7716, -36.3442, 0.55", "107.146, 29.5072, -39.315, 0.28", "108.637, 29.7001, -40.4463, 0.83", "114.191, 30.0412, -44.4895, 0.28", "115.633, 30.1055, -45.5315, 0.55", "118.436, 30.2074, -47.4697, 0.28", "121.54, 30.3798, -49.5146, 0.55", "123.449, 30.58, -50.6767, 0.28", "125.418, 30.8697, -51.7894, 0.28", "126.973, 31.27, -52.6433, 0.55", "129.639, 32.3076, -53.8838, 0.28", "130.334, 32.7827, -54.2374, 0.55", "131.828, 34.2275, -54.9378, 0.28", "132.618, 35.2313, -55.3016, 0.55", "133.488, 36.6172, -55.6999, 0.28", "134.474, 38.4945, -56.1621, 0.55", "136.496, 42.8393, -56.966, 0.28", "136.934, 43.8247, -57.1107, 0.28", "137.901, 46.172, -57.4001, 0.55", "139.283, 49.5561, -57.7232, 0.28", "139.667, 50.4305, -57.7674, 0.55", "140.696, 52.4581, -57.8047, 0.28", "140.946, 52.882, -57.8057, 0.55", "141.966, 54.6049, -57.9795, 0.28", "142.405, 55.3274, -58.1184, 0.55", "143.038, 56.365, -58.4092, 0.28", "143.63, 57.2817, -58.7095, 0.55", "145.096, 59.5391, -59.6495, 0.28", "146.039, 60.9481, -60.2402, 0.28", "146.59, 61.7343, -60.5793, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "12.9151, 11.3171, 6.64106, 0.28", "13.7727, 14.1654, 6.49153, 0.28", "14.2053, 15.602, 6.41612, 0.83", "14.7782, 17.5047, 6.31623, 0.28", "14.9381, 18.0357, 6.28836, 1.38" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.599291, 10.0009, 1.19413, 0.83", "0.80833, 12.5708, 0.74029, 0.83", "1.02948, 15.2421, 0.545853, 0.83", "1.13016, 16.4692, 0.520893, 0.83", "1.53727, 20.9248, 0.632942, 1.66", "1.84064, 24.3829, 0.800279, 0.83", "2.15893, 27.3768, 1.06388, 0.83", "2.3765, 29.4379, 1.43121, 0.83", "2.61879, 31.5818, 1.99081, 1.38", "2.93738, 33.9297, 2.70597, 0.83", "3.21423, 35.4966, 3.29858, 1.11", "3.71415, 37.9928, 4.15604, 0.83", "4.17313, 40.3541, 5.07061, 0.83", "4.53392, 42.0237, 5.74074, 1.38" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.599291, 10.0009, 1.19413, 1.11", "-1.42036, 14.0132, 1.29977, 1.11", "-3.75623, 18.5413, 1.00961, 1.11", "-5.58931, 22.409, 0.608191, 0.55", "-6.37096, 24.1705, 0.413291, 1.11", "-7.61247, 27.0735, 0.101181, 0.55", "-9.33017, 31.0709, -0.253284, 0.55", "-10.6622, 34.2152, -0.570385, 0.55", "-12.1063, 37.573, -0.929187, 1.11", "-12.6942, 38.9727, -0.949909, 0.55", "-13.4983, 41.1001, -0.87269, 0.83", "-14.6961, 44.6056, -0.376883, 1.11", "-15.348, 46.6158, 0.177674, 0.55", "-16.0855, 49.0331, 1.03519, 1.11", "-16.9784, 51.9095, 2.15567, 0.55", "-18.1561, 55.8379, 3.67128, 1.11", "-19.0152, 59.3111, 5.03532, 0.55", "-19.2195, 60.2381, 5.39685, 0.55", "-19.54, 61.7005, 5.98028, 0.55", "-19.9376, 63.363, 6.60041, 0.55", "-20.8448, 66.8244, 7.73492, 1.38", "-21.5795, 69.3354, 8.5112, 0.55", "-22.2621, 71.7604, 9.25183, 0.55", "-22.558, 72.9315, 9.64848, 0.28", "-23.0491, 74.9564, 10.3541, 0.55", "-23.276, 76.1837, 10.7322, 0.28", "-23.6851, 78.6234, 11.365, 1.11", "-24.2607, 82.0474, 12.1038, 0.28", "-24.5755, 84.2011, 12.4992, 0.83", "-25.2403, 88.4739, 13.1845, 0.83", "-26.1589, 93.8377, 13.8186, 0.55", "-27.0809, 99.0001, 14.2034, 0.55", "-27.4356, 101.142, 14.3058, 0.28", "-27.9172, 103.646, 14.3657, 0.83", "-28.3215, 105.72, 14.4422, 0.83", "-29.1606, 109.565, 14.6595, 0.55", "-30.357, 114.45, 15.0991, 0.55", "-31.2497, 118.248, 15.4649, 0.55", "-32.1012, 121.836, 15.8625, 0.55", "-33.2387, 126.638, 16.503, 0.55", "-33.8378, 129.37, 16.9591, 0.55", "-34.5527, 132.624, 17.7579, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.09254, -25.4436, 3.36477, 1.38", "-6.11577, -28.9545, 3.43496, 1.38", "-6.13629, -32.0555, 3.49696, 0.83", "-6.14979, -34.095, 3.53773, 1.66", "-6.17215, -37.4747, 3.6053, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.09254, -25.4436, 3.36477, 1.38", "-9.33012, -28.4671, 4.09269, 1.38", "-10.7934, -29.8353, 4.41494, 0.83", "-12.0979, -31.0283, 4.72107, 0.83", "-14.7548, -33.3065, 5.46388, 0.83", "-16.4009, -34.718, 5.9241, 0.83", "-18.2638, -36.3154, 6.44494, 0.83", "-19.1022, -37.0609, 6.60998, 1.11", "-20.6623, -38.3761, 6.95141, 0.83", "-22.7402, -39.9642, 7.6026, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.65753, 38.2899, -0.457216, 0.55", "6.37948, 53.1908, -0.457216, 0.55", "8.10142, 68.0916, -0.457216, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "14.9381, 18.0357, 6.28836, 0.55", "16.3768, 17.7097, 7.38225, 0.55", "17.7665, 17.3486, 8.4019, 0.55", "20.7717, 16.5386, 10.8324, 0.83", "22.3939, 16.1313, 12.1963, 0.28", "23.0165, 15.9623, 12.7349, 0.83", "24.5745, 15.4981, 14.1338, 0.28", "25.5128, 15.2339, 14.9959, 0.55", "27.776, 14.6587, 17.1303, 0.28", "29.0441, 14.2682, 18.2768, 0.83", "30.8324, 13.6597, 19.9397, 0.28", "32.4009, 13.1148, 21.4053, 0.55", "34.0736, 12.5531, 22.9317, 0.28", "35.4703, 12.056, 24.2341, 0.55", "36.8637, 11.4723, 25.3977, 0.28", "38.1839, 10.8079, 26.5301, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "14.9381, 18.0357, 6.28836, 0.28", "15.2965, 19.1283, 7.04442, 0.28", "15.5715, 19.9523, 7.50032, 0.83", "16.2204, 21.9008, 8.42193, 0.28", "16.2204, 21.9008, 8.42193, 0.55", "16.6018, 23.2151, 8.91536, 0.55", "17.1025, 24.961, 9.53963, 1.11", "17.8335, 27.8553, 10.4202, 0.55", "18.1269, 29.3587, 10.803, 0.28", "18.3249, 30.7687, 11.0543, 0.83", "18.4913, 32.2859, 11.2722, 0.55", "18.5899, 33.6695, 11.4351, 0.83", "18.6338, 36.3848, 11.8112, 0.28", "18.5897, 38.0066, 11.9865, 0.83", "18.4711, 40.1991, 12.1995, 0.28", "18.4487, 40.576, 12.2361, 0.55", "18.3809, 41.5989, 12.3256, 0.28", "18.3053, 43.4188, 12.5512, 0.55", "18.3567, 45.8947, 12.9276, 0.28", "18.463, 48.0638, 13.2301, 0.83", "18.585, 49.8062, 13.5003, 0.28", "18.7001, 50.913, 13.6598, 0.83", "19.071, 53.5374, 13.9401, 0.28", "19.3804, 55.2902, 14.0916, 0.55", "19.787, 57.2142, 14.1708, 0.28", "20.1911, 58.8669, 14.0588, 0.55", "20.9321, 61.6886, 13.6436, 0.55", "21.5831, 63.9541, 13.204, 0.28", "22.2756, 66.2278, 12.6792, 0.55", "23.415, 69.5377, 12.0029, 0.28", "24.3843, 72.0063, 11.4794, 0.83", "25.2287, 73.9743, 11.0165, 0.55", "26.23, 76.0189, 10.6144, 0.28", "27.0027, 77.4019, 10.4636, 0.55", "28.4054, 79.6257, 10.5294, 0.55", "30.2623, 82.3535, 11.0849, 0.28", "30.6001, 82.828, 11.2425, 0.55", "32.026, 84.7817, 11.9946, 0.28", "33.4268, 86.7191, 12.7749, 0.55", "34.5993, 88.3651, 13.4728, 0.28", "35.4987, 89.7452, 14.0001, 0.55", "36.6251, 91.5373, 14.7491, 0.28", "37.1182, 92.3563, 14.9686, 0.55", "38.0012, 93.8576, 15.109, 0.28", "38.7281, 95.0627, 15.1062, 0.83", "39.7802, 96.7353, 14.944, 0.28", "40.1035, 97.2312, 14.8677, 0.55", "42.0716, 100.115, 14.453, 0.28", "42.7671, 101.105, 14.4029, 0.83", "44.1432, 103.089, 14.3809, 0.28", "44.6133, 103.766, 14.3988, 0.55", "45.6599, 105.319, 14.4846, 0.28", "46.8912, 107.223, 14.6157, 0.55", "48.1642, 109.318, 14.8452, 0.28", "49.0672, 110.914, 14.9905, 0.83", "49.8585, 112.461, 14.9192, 0.83", "51.009, 114.865, 14.6634, 0.28", "51.3831, 115.699, 14.5253, 0.83", "51.982, 117.135, 14.1502, 0.28", "52.6292, 118.727, 13.5828, 0.55", "54.1193, 122.319, 12.2317, 0.28", "54.6966, 123.706, 11.6131, 0.55", "54.9938, 124.394, 11.2898, 0.28", "56.1127, 126.871, 10.1445, 0.55", "57.1502, 129.013, 9.18148, 0.28", "57.9265, 130.47, 8.61234, 0.83", "58.8407, 132.069, 8.19568, 0.28", "59.6912, 133.528, 7.76077, 0.83", "60.7345, 135.309, 7.23777, 0.28", "61.1023, 135.972, 7.08137, 0.55", "61.6806, 137.053, 6.88629, 0.28", "62.5432, 138.747, 6.60963, 0.55", "63.7199, 141.224, 6.16779, 0.55", "64.5993, 143.314, 5.66654, 0.28", "65.0312, 144.38, 5.35489, 1.11", "65.5655, 145.799, 4.8953, 1.11", "66.1637, 147.421, 4.49629, 0.83", "67.0848, 149.892, 4.06889, 0.28", "67.7063, 151.533, 3.9659, 0.55", "68.3633, 153.117, 3.95224, 0.28", "69.6742, 156.07, 3.94869, 0.55", "71.2951, 159.668, 3.93676, 0.28", "71.793, 160.722, 3.96191, 0.83", "72.4027, 161.959, 3.99132, 0.28", "73.6652, 164.374, 3.97715, 0.55", "75.0343, 166.977, 3.77132, 0.55", "76.7525, 170.201, 3.27404, 0.55", "77.6337, 171.822, 2.88605, 0.28", "78.7999, 174.068, 2.3314, 0.55", "79.7394, 175.871, 1.89276, 0.28", "80.7445, 177.85, 1.48367, 0.55", "81.3476, 179.038, 1.20189, 0.55", "82.811, 182.279, 0.294873, 0.55", "83.4708, 184.025, -0.45205, 0.28", "83.9979, 185.663, -1.28203, 0.28", "84.324, 186.799, -1.96382, 0.55", "85.3923, 191.253, -5.09438, 0.55", "85.826, 193.368, -6.7144, 0.55", "86.3375, 196.969, -9.56979, 0.28", "86.4014, 197.563, -10.0718, 0.28", "86.4606, 198.498, -10.8754, 0.55", "86.6256, 201.078, -12.9603, 0.55", "86.8257, 202.654, -14.0507, 0.83", "87.0978, 203.997, -14.9899, 0.83", "87.8563, 207.319, -17.4511, 0.55", "88.0627, 208.04, -18.083, 0.55", "88.7045, 209.865, -19.826, 0.83", "89.6789, 212.184, -22.2018, 0.55", "90.6166, 214.395, -24.6718, 0.55", "91.6059, 216.576, -27.1489, 0.55", "92.467, 218.349, -29.0353, 1.11", "92.9493, 219.365, -30.0896, 0.28", "93.2819, 220.154, -30.8394, 0.55", "94.0214, 222.1, -32.4266, 0.55", "94.4817, 223.356, -33.2792, 1.11", "94.9426, 224.958, -34.3619, 0.55", "95.3965, 226.805, -35.6554, 0.55", "96.0035, 229.127, -37.4729, 1.11", "96.9608, 232.576, -40.2834, 0.55", "97.1282, 233.235, -40.8124, 0.55", "97.8723, 236.99, -43.7924, 0.83", "98.0606, 238.108, -44.7111, 0.83", "98.598, 241.626, -47.6517, 0.55", "98.7121, 242.271, -48.2044, 0.55", "98.9378, 243.592, -49.277, 0.28", "99.1966, 244.753, -50.1944, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "4.53392, 42.0237, 5.74074, 0.55", "4.31641, 42.7838, 7.06148, 0.55", "4.0319, 44.05, 9.22851, 0.83", "3.84083, 45.1265, 10.9474, 0.55", "3.54627, 46.8297, 13.4819, 1.11", "3.11692, 49.8889, 17.8407, 0.55", "3.04907, 50.451, 18.5739, 0.55", "2.8458, 52.4361, 20.8922, 0.83", "2.75332, 53.842, 22.3252, 0.55", "2.71278, 54.799, 23.1634, 0.55", "2.80958, 56.4778, 24.3139, 0.28", "3.01004, 58.201, 25.3201, 0.55", "3.24345, 60.4297, 26.6354, 0.55", "3.51727, 63.061, 28.1362, 0.28", "3.71853, 64.8153, 29.1714, 0.55", "3.89047, 66.1432, 30.0085, 0.55", "4.20608, 68.3603, 31.4489, 0.55", "4.36038, 69.4225, 32.2711, 0.28", "4.4104, 69.8013, 32.59, 0.55", "4.56673, 70.9886, 33.6392, 0.28", "4.75456, 72.5272, 35.084, 0.55", "4.89397, 73.7449, 36.3227, 0.55", "5.24917, 75.7379, 38.3615, 0.28", "5.34103, 76.2178, 38.862, 0.55", "5.54613, 77.4468, 40.1127, 0.28", "5.68122, 78.1554, 40.7918, 0.55", "6.14695, 80.3257, 42.6057, 0.28", "6.47853, 81.6831, 43.5683, 0.55", "7.06455, 83.8395, 44.7048, 0.28", "7.29758, 84.6295, 45.0535, 0.55", "7.74239, 86.2943, 45.7089, 0.28", "8.03019, 87.4038, 46.0581, 0.55", "8.68617, 89.4772, 46.4915, 0.28", "9.19351, 90.9222, 46.748, 0.28", "9.71182, 92.2133, 46.9329, 0.55", "10.6782, 94.5905, 47.3035, 0.55", "11.7551, 97.3327, 47.7637, 0.28", "12.4915, 99.0909, 48.0525, 0.28", "13.1821, 100.534, 48.1745, 0.55", "14.0165, 102.053, 48.2422, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "4.53392, 42.0237, 5.74074, 0.83", "4.22758, 45.0083, 5.81727, 0.83", "4.06764, 46.907, 5.8137, 0.83", "3.85398, 50.0324, 5.77222, 0.83", "3.71873, 52.8967, 5.72321, 0.28", "3.66351, 55.1236, 5.68518, 0.83", "3.673, 58.8809, 5.63945, 0.83", "3.80442, 60.6817, 5.61533, 0.28", "3.9051, 61.672, 5.62191, 0.83", "4.11509, 63.335, 5.66179, 0.55", "4.33577, 65.0032, 5.75521, 0.83", "4.55309, 66.5608, 5.81606, 0.55", "4.91245, 68.6125, 5.98599, 0.83", "5.26078, 70.7012, 6.18762, 0.83", "5.73416, 73.1598, 6.45218, 0.83", "6.29167, 75.8961, 6.75048, 0.55", "6.67458, 77.8209, 6.94223, 0.83", "7.4765, 81.6514, 7.2981, 0.55", "7.93471, 83.7851, 7.49537, 0.55", "8.56788, 86.5748, 7.74555, 0.55", "9.04298, 88.7137, 7.93446, 0.55", "9.80537, 92.0781, 8.18926, 0.55", "10.5207, 95.6392, 8.3726, 1.11", "10.8651, 97.8933, 8.42511, 0.55", "11.251, 100.533, 8.36487, 0.83", "11.5906, 103.314, 8.16464, 1.11", "11.7858, 105.13, 7.95688, 0.55", "12.0406, 107.611, 7.59332, 0.83", "12.2517, 110.262, 7.08115, 0.83", "12.5205, 113.588, 6.29906, 0.55", "12.6196, 115.082, 5.88995, 1.11", "12.8095, 118.079, 4.9843, 1.11" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-34.5527, 132.624, 17.7579, 0.28", "-33.9811, 135.283, 17.3393, 0.28", "-33.9608, 136.418, 17.0269, 0.55", "-33.997, 137.767, 16.6508, 0.28", "-34.0324, 138.642, 16.5204, 0.55", "-34.1043, 140.236, 16.3936, 0.28", "-34.1781, 141.106, 16.3017, 0.55", "-34.6441, 143.957, 16.0143, 0.28", "-34.8373, 144.974, 15.8773, 0.55", "-35.5078, 147.893, 15.2935, 0.28", "-35.8415, 149.253, 14.9815, 0.83", "-36.4411, 152.035, 14.282, 0.28", "-36.7521, 153.957, 13.9261, 0.28", "-36.912, 155.256, 13.783, 0.55", "-37.1988, 157.616, 13.5466, 0.28", "-37.3155, 158.627, 13.4619, 0.55", "-37.6175, 161.634, 13.4562, 0.55", "-37.9052, 165.571, 13.7758, 0.28", "-38.0703, 167.856, 14.089, 0.55", "-38.2376, 170.156, 14.5312, 0.28", "-38.292, 171.021, 14.7303, 0.55", "-38.4427, 172.468, 15.0614, 0.28", "-38.5803, 173.058, 15.2077, 0.55", "-38.9497, 174.325, 15.4556, 0.28", "-39.1667, 175.165, 15.6286, 0.55", "-39.3629, 176.006, 15.8064, 0.28", "-39.6897, 177.443, 16.0993, 0.55", "-40.0795, 179.168, 16.4305, 0.55", "-40.892, 182.826, 17.1138, 0.28", "-41.3874, 185.279, 17.5248, 0.28", "-41.4979, 185.887, 17.626, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-34.5527, 132.624, 17.7579, 0.28", "-34.647, 135.597, 17.2671, 0.28", "-34.67, 136.689, 17.1933, 0.55", "-34.719, 137.505, 17.1936, 0.28", "-34.8155, 138.332, 17.2934, 0.55", "-35.1468, 140.349, 17.7622, 0.28", "-35.3622, 141.606, 18.0995, 0.55", "-35.5147, 142.376, 18.3336, 0.28", "-35.7446, 143.514, 18.6162, 0.55", "-36.145, 145.69, 19.0684, 0.55", "-36.3101, 146.983, 19.2871, 0.28", "-36.577, 149.391, 19.6031, 0.83", "-36.7004, 152.034, 19.8479, 0.28", "-36.7045, 153.402, 19.8899, 0.28", "-36.6706, 154.243, 19.9103, 0.83", "-36.4399, 156.51, 19.9974, 0.28", "-36.2311, 158.17, 20.1728, 0.28", "-36.1001, 159.193, 20.4024, 0.28", "-35.9868, 160.263, 20.7476, 0.83", "-35.8385, 162.821, 21.8248, 0.28", "-35.8064, 164.365, 22.5327, 0.55", "-35.8188, 165.668, 23.1809, 0.28", "-35.8105, 166.89, 23.7661, 0.55", "-35.8275, 167.583, 24.0668, 0.55", "-35.9218, 170.102, 24.992, 0.55", "-35.9875, 172.379, 25.6885, 0.55", "-36.0159, 173.0, 25.8727, 0.55", "-36.1253, 175.171, 26.5077, 0.55", "-36.3005, 177.284, 27.0598, 0.55", "-36.4995, 179.235, 27.5746, 0.55", "-36.7139, 181.213, 28.0411, 0.83", "-36.8844, 182.827, 28.4809, 0.55", "-37.0319, 184.193, 28.8873, 0.83", "-37.3088, 186.272, 29.5865, 0.28", "-37.5742, 188.2, 30.2595, 0.55", "-37.9497, 190.14, 30.9117, 0.55", "-38.2586, 191.578, 31.255, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.17215, -37.4747, 3.6053, 0.83", "-4.57422, -38.3232, 3.90961, 0.83", "-3.04073, -39.0037, 4.51158, 0.83", "-0.696219, -39.9098, 5.59145, 0.83", "1.65132, -40.847, 6.8898, 0.83", "4.36043, -41.9266, 8.44968, 0.83", "6.62407, -42.8401, 9.82606, 0.83", "10.9459, -44.5263, 12.706, 0.55", "13.145, -45.3687, 14.2833, 0.55", "16.7016, -46.6664, 17.0121, 0.55", "18.8745, -47.5289, 18.8561, 0.55", "19.9873, -48.0392, 19.8703, 0.83", "21.1698, -48.5963, 20.9688, 0.55", "22.1537, -49.1589, 21.7752, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.17215, -37.4747, 3.6053, 1.11", "-5.90079, -41.0044, 5.14133, 1.11", "-5.82889, -41.9396, 5.54831, 1.11", "-5.59916, -44.9277, 6.84867, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-22.7402, -39.9642, 7.6026, 0.83", "-23.6502, -41.3597, 7.95696, 0.83", "-24.7248, -43.0074, 8.3754, 1.11", "-25.7492, -44.5781, 8.77428, 0.83", "-27.0356, -46.5507, 9.27521, 0.83", "-28.4254, -48.6817, 9.81637, 1.11", "-28.6374, -49.0068, 9.89894, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-22.7402, -39.9642, 7.6026, 0.55", "-23.6063, -39.9583, 7.513, 0.55", "-25.5704, -39.945, 7.3098, 0.55", "-26.9265, -39.9357, 7.16951, 0.55", "-27.7128, -39.9304, 7.08816, 0.83", "-29.2814, -39.9197, 6.92589, 0.55", "-30.1822, -39.9135, 6.83269, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "12.8095, 118.079, 4.9843, 0.55", "13.1802, 120.897, 4.15637, 0.55", "13.2397, 123.157, 3.66073, 0.55", "13.1215, 125.933, 3.10483, 0.55", "12.8457, 128.22, 2.78137, 0.55", "12.4601, 130.949, 2.53649, 0.55", "11.9235, 133.934, 2.37759, 0.55", "10.6116, 138.634, 2.44262, 0.55", "9.97846, 140.44, 2.61414, 0.55", "8.76012, 143.455, 3.13854, 0.55", "8.01627, 145.273, 3.64448, 0.55", "7.10246, 147.645, 4.50474, 0.55", "6.34766, 149.863, 5.35498, 0.55", "6.0992, 150.922, 5.6952, 0.28", "5.76831, 152.755, 6.20156, 0.55", "5.41282, 155.535, 6.80772, 0.28", "5.2086, 156.983, 7.10021, 0.55", "4.94621, 159.245, 7.48414, 0.28", "4.78709, 160.355, 7.64125, 0.55", "4.45544, 162.389, 7.94457, 0.55", "3.77464, 165.964, 8.52956, 0.55", "3.29649, 168.39, 8.95943, 0.55", "2.81651, 171.164, 9.46756, 0.55", "2.54366, 174.82, 10.0814, 0.28", "2.61718, 176.872, 10.3324, 0.55", "2.97039, 178.898, 10.4768, 0.28", "3.21203, 179.685, 10.4756, 0.55", "4.18729, 182.319, 10.3128, 0.55", "6.11854, 186.912, 9.75237, 0.55", "7.09004, 189.038, 9.34097, 0.55", "8.25565, 191.689, 8.6984, 0.55", "9.26909, 194.118, 8.0256, 0.55", "10.2458, 196.911, 7.18674, 0.55", "11.0425, 199.843, 6.30848, 0.55", "11.3953, 201.479, 5.78931, 0.55", "11.8712, 203.696, 4.99868, 0.28", "12.0381, 204.518, 4.6432, 0.28", "12.4392, 206.341, 3.76542, 0.55", "13.0089, 208.617, 2.61431, 0.55", "13.7908, 211.599, 0.971384, 0.28", "14.2639, 213.36, -0.0273743, 0.55", "14.5724, 214.402, -0.655746, 0.55", "15.1773, 216.175, -1.76766, 0.28", "15.6587, 217.361, -2.5638, 0.55", "16.6756, 219.79, -4.56229, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.8095, 118.079, 4.9843, 0.55", "13.0177, 120.131, 3.78392, 0.55", "13.2647, 122.564, 2.36099, 0.55", "13.3853, 123.752, 1.66603, 0.28", "13.5232, 125.112, 0.870759, 0.83", "13.8178, 128.014, -0.826668, 0.55", "13.9151, 128.973, -1.38772, 0.83" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-38.2586, 191.578, 31.255, 0.28", "-38.4649, 192.93, 31.5522, 0.28", "-38.7562, 194.286, 31.7933, 0.28", "-39.1143, 195.864, 32.0903, 0.55", "-39.348, 197.232, 32.4484, 0.83", "-39.5994, 199.078, 33.0242, 0.28", "-39.7304, 200.318, 33.422, 0.55", "-39.8324, 201.526, 33.8714, 0.28", "-39.9274, 202.745, 34.3611, 0.83", "-40.0356, 204.992, 35.3609, 0.83", "-40.1336, 206.74, 36.1721, 0.28", "-40.0803, 207.718, 36.9559, 0.55", "-39.96, 208.787, 38.1456, 0.28", "-39.8606, 209.506, 39.0697, 0.55", "-39.7194, 210.563, 40.6064, 0.28", "-39.6505, 211.068, 41.4994, 0.55", "-39.0021, 213.788, 47.8479, 0.28", "-38.8533, 214.206, 49.1226, 0.83", "-38.5633, 214.651, 51.0252, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-38.2586, 191.578, 31.255, 0.28", "-38.7029, 193.394, 33.8938, 0.28", "-39.0543, 194.892, 35.9132, 0.55", "-39.6286, 197.326, 39.0027, 0.28", "-39.7279, 197.747, 39.5367, 0.55", "-39.9866, 198.843, 40.9284, 0.28", "-40.2461, 199.943, 42.3238, 0.55", "-40.647, 201.874, 44.5146, 0.28", "-41.0311, 203.575, 46.0898, 0.83" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "22.1537, -49.1589, 21.7752, 0.55", "24.0572, -49.429, 20.3862, 0.55", "25.2492, -49.4816, 19.3625, 0.55", "30.1793, -49.4851, 14.7364, 0.55", "31.4488, -49.4515, 13.4909, 0.55", "34.6077, -49.4644, 10.5156, 0.83", "36.2678, -49.5164, 9.03419, 0.55", "39.1599, -49.5677, 6.54686, 0.55", "41.7072, -49.679, 4.46362, 0.83", "43.7274, -49.8301, 3.03184, 0.55", "46.3474, -50.2214, 1.27646, 0.55", "48.7913, -50.8195, -0.130999, 0.55", "50.5216, -51.3896, -0.940878, 0.83", "52.5538, -52.1697, -1.69419, 0.55", "53.8756, -52.7123, -2.13019, 0.55", "56.6866, -53.9358, -3.02158, 0.55", "59.211, -55.032, -3.92421, 0.55", "61.1546, -55.9928, -4.62252, 2.49", "61.1811, -56.0073, -4.63243, 2.49" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "22.1537, -49.1589, 21.7752, 0.83", "22.6533, -49.9722, 22.1693, 0.83", "23.1677, -51.2375, 22.5713, 0.83", "23.6647, -52.7981, 22.9498, 0.28", "23.9249, -53.5689, 23.1222, 0.83", "24.2815, -54.6623, 23.394, 0.83", "24.6582, -55.7631, 23.6835, 0.28", "25.152, -57.4079, 24.0812, 0.55", "25.5194, -58.4784, 24.3377, 0.55", "26.026, -59.5584, 24.8747, 0.55", "26.6708, -60.551, 25.6995, 0.28", "27.3708, -61.4863, 26.7221, 0.55", "27.7792, -61.9546, 27.4166, 0.55", "28.6192, -62.8368, 28.9927, 0.55", "30.8448, -65.0122, 33.4195, 0.55", "31.4994, -65.6243, 34.8294, 0.55", "31.9816, -66.0282, 35.9102, 0.55", "32.8639, -66.7421, 38.1452, 0.55", "33.614, -67.3729, 40.2511, 0.28" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-5.59916, -44.9277, 6.84867, 0.55", "-4.87236, -46.2688, 7.27098, 0.55", "-4.05985, -48.0656, 7.88796, 0.83", "-3.41269, -49.5648, 8.392, 0.28", "-2.99265, -50.67, 8.80915, 0.83", "-2.2009, -53.2109, 9.98784, 0.28", "-1.89635, -54.2365, 10.4826, 0.83", "-1.31413, -56.069, 11.4038, 0.55", "-1.05029, -56.9807, 11.9016, 0.55", "-0.592136, -58.9861, 13.0225, 0.55", "-0.108989, -61.7099, 14.584, 0.28", "0.0604993, -63.001, 15.2874, 0.83", "0.284643, -64.4633, 16.1649, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.59916, -44.9277, 6.84867, 0.83", "-4.78935, -46.0824, 6.30406, 0.83", "-3.86006, -47.4075, 5.67909, 1.11", "-2.65972, -49.1191, 4.87184, 0.55", "-0.979632, -51.5147, 3.74195, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.6374, -49.0068, 9.89894, 0.28", "-29.4071, -50.8343, 10.0842, 0.28", "-29.6493, -51.343, 10.1342, 0.83", "-30.9267, -53.5256, 10.264, 0.83", "-31.8758, -54.8583, 10.2778, 0.55", "-33.3099, -56.6234, 10.2213, 0.83", "-34.3085, -57.755, 10.147, 0.83", "-35.0044, -58.3855, 10.0738, 0.83", "-36.4231, -59.3419, 9.84673, 0.28", "-37.5448, -59.8717, 9.60064, 0.55", "-38.1265, -60.0469, 9.42998, 0.28", "-38.8712, -60.1897, 9.18088, 0.55", "-40.2573, -60.5429, 8.49982, 0.28", "-41.396, -60.9766, 7.81422, 0.55", "-41.8862, -61.2193, 7.47494, 0.28", "-43.3737, -62.1016, 6.34452, 0.55", "-45.3028, -63.3233, 5.20954, 0.55", "-48.201, -65.4271, 3.96305, 0.55", "-49.5361, -66.6338, 3.67088, 0.55", "-50.3575, -67.5526, 3.68397, 0.28", "-50.7338, -68.0527, 3.76466, 0.83", "-54.0136, -73.0476, 5.01267, 0.55", "-54.7609, -74.2176, 5.405, 0.83", "-56.5282, -76.9307, 6.43312, 0.83", "-58.0178, -79.1984, 7.21046, 0.28", "-58.9444, -80.6003, 7.60215, 0.28", "-60.0891, -82.2467, 7.97897, 0.55", "-62.2029, -85.276, 8.40393, 0.28", "-63.3015, -86.6922, 8.60667, 0.55", "-64.0656, -87.5685, 8.72725, 0.55", "-65.5132, -88.9976, 8.88643, 0.83", "-67.7946, -90.9589, 8.96662, 0.55", "-69.2224, -92.0681, 8.90557, 0.55", "-70.7585, -93.0707, 8.59809, 0.28", "-72.2195, -93.8459, 8.14903, 0.55", "-73.1428, -94.2598, 7.7538, 0.55", "-74.8522, -94.9451, 6.84092, 0.28", "-75.9105, -95.3516, 6.26153, 0.55", "-77.6995, -96.0124, 5.38899, 0.28", "-79.1602, -96.5779, 4.73594, 0.83", "-81.4162, -97.4882, 3.78827, 0.28", "-83.3762, -98.3882, 3.02092, 0.83", "-85.6405, -99.5148, 2.24581, 0.28", "-86.8378, -100.178, 1.84571, 0.55", "-87.8602, -100.865, 1.5282, 0.28", "-89.4251, -102.051, 1.09814, 0.55", "-90.7982, -103.201, 0.758002, 0.28", "-92.2459, -104.563, 0.483493, 0.55", "-93.1822, -105.548, 0.340871, 0.28", "-94.9176, -107.473, 0.170759, 0.83", "-96.7474, -109.606, 0.120048, 0.55", "-97.2452, -110.222, 0.141851, 0.55", "-99.3752, -112.79, 0.370306, 0.28", "-100.665, -114.37, 0.616238, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-28.6374, -49.0068, 9.89894, 0.55", "-31.3215, -51.9938, 9.22282, 0.55", "-32.4183, -53.1566, 9.09873, 0.55", "-34.4641, -55.0524, 8.70893, 0.83", "-36.4097, -56.794, 8.27205, 0.55", "-37.2019, -57.5632, 8.01587, 0.83", "-39.6688, -60.1292, 7.08002, 0.55", "-41.2119, -61.7191, 6.4875, 1.11", "-43.618, -64.3019, 5.30839, 0.55", "-44.7528, -65.5389, 4.6869, 1.11", "-46.9358, -68.0285, 3.32374, 0.55", "-47.6015, -68.8426, 2.85696, 1.11", "-49.5056, -71.3986, 1.43083, 0.28", "-49.9801, -71.9577, 1.12272, 0.55", "-51.511, -73.5949, 0.25373, 0.28", "-52.3167, -74.335, -0.173712, 0.55", "-53.4822, -75.2968, -0.777041, 0.55", "-56.2611, -77.563, -2.29191, 0.55", "-58.389, -79.4642, -3.64371, 1.11", "-60.6362, -81.5821, -5.23024, 0.55", "-61.5946, -82.5342, -5.94898, 1.11", "-63.4965, -84.4237, -7.39542, 0.28", "-64.1527, -85.0329, -7.87699, 0.83", "-66.6324, -87.302, -9.71478, 0.28", "-67.5859, -88.183, -10.3668, 0.83", "-69.1415, -89.5187, -11.402, 0.83", "-71.9486, -91.5939, -13.1406, 0.28", "-73.8174, -92.8822, -14.2395, 0.83", "-77.4273, -95.2066, -16.2998, 0.28", "-79.0285, -96.1343, -17.1493, 0.83", "-81.2084, -97.3935, -18.3608, 0.28", "-83.5626, -98.6502, -19.6911, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "13.9151, 128.973, -1.38772, 0.55", "13.7257, 129.793, -1.71927, 0.55", "13.5929, 130.412, -1.94644, 0.55", "13.4674, 131.156, -2.17868, 0.83", "13.3517, 131.954, -2.40108, 0.28", "13.2357, 132.74, -2.60887, 0.55", "13.162, 133.248, -2.72652, 0.83", "13.0412, 134.177, -2.90894, 0.28", "12.98, 135.145, -3.06367, 0.55", "12.9721, 135.688, -3.13046, 0.55", "12.9811, 136.169, -3.17294, 0.55", "13.0189, 137.027, -3.23644, 0.28", "13.0574, 137.627, -3.27083, 0.55", "13.1516, 138.586, -3.3413, 0.28", "13.1886, 138.884, -3.36725, 0.55", "13.3527, 139.799, -3.45111, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "13.9151, 128.973, -1.38772, 0.28", "11.8759, 128.648, -2.27716, 0.28", "11.0025, 128.509, -2.65809, 0.28", "9.89888, 128.333, -3.13942, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "61.1811, -56.0073, -4.63243, 0.28", "63.6377, -58.0945, -6.02614, 0.28", "64.186, -58.521, -6.38455, 0.55", "66.1097, -59.926, -7.5701, 0.28", "67.7232, -61.004, -8.53758, 0.55", "69.342, -61.9587, -9.47717, 0.55", "72.3828, -63.6181, -11.0928, 0.28", "73.7628, -64.2261, -11.793, 0.55", "75.6463, -65.0151, -12.7207, 0.28", "76.7241, -65.4571, -13.143, 0.55", "80.8652, -67.1919, -14.4718, 0.28", "82.6497, -67.9952, -15.0388, 0.83", "86.0888, -69.7097, -16.0806, 0.28", "87.0448, -70.2151, -16.384, 1.38", "91.2031, -72.4836, -17.9128, 0.28", "91.8568, -72.8542, -18.1546, 0.55", "95.2479, -74.8265, -19.41, 0.28", "96.3769, -75.4919, -19.8388, 1.66", "99.8104, -77.5522, -21.1249, 0.28", "101.137, -78.3626, -21.6813, 0.55", "102.749, -79.3542, -22.4658, 0.28", "103.533, -79.7953, -22.84, 0.55", "105.045, -80.4942, -23.5148, 0.28", "105.569, -80.7065, -23.9111, 0.83", "108.009, -81.6833, -26.5235, 0.28", "108.667, -81.9544, -27.3769, 0.55", "110.671, -82.6847, -30.1767, 0.28", "111.917, -83.1472, -31.9898, 1.11", "117.022, -85.0285, -39.0757, 0.28", "118.175, -85.4566, -40.5556, 0.55", "120.054, -86.1559, -42.8436, 0.28", "122.391, -87.1204, -45.5383, 0.83", "124.934, -88.287, -48.2516, 0.28", "127.035, -89.2838, -50.3343, 0.83", "133.883, -92.3501, -56.0181, 0.28", "134.7, -92.7138, -56.656, 0.55", "138.033, -94.2031, -59.1957, 0.28", "138.624, -94.484, -59.6554, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "61.1811, -56.0073, -4.63243, 0.28", "62.9094, -55.4449, -2.98887, 0.28", "64.1006, -55.0816, -2.53531, 0.55", "65.2431, -54.7326, -2.2755, 0.28", "65.9565, -54.5373, -2.13088, 0.55", "68.7964, -53.8368, -1.60667, 0.28", "70.9659, -53.4147, -1.19492, 0.83", "75.9356, -52.5227, -0.706341, 0.28", "76.5172, -52.4259, -0.688328, 0.55", "78.0047, -52.2228, -0.742721, 0.28", "78.7389, -52.1401, -0.829214, 0.83", "80.5637, -51.9486, -1.32303, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "33.614, -67.3729, 40.2511, 0.55", "34.9982, -68.5197, 41.0177, 0.55", "35.6872, -69.1008, 41.4122, 0.55", "37.3058, -70.491, 42.5266, 0.28", "38.8763, -71.8136, 43.6904, 0.83", "40.3833, -73.0829, 44.8073, 0.28", "41.4199, -73.9559, 45.5754, 0.28", "41.7871, -74.2877, 45.8478, 0.55", "43.1771, -75.501, 47.0517, 0.28", "43.4483, -75.7535, 47.3752, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "33.614, -67.3729, 40.2511, 0.28", "33.67, -68.6507, 40.699, 0.28", "33.706, -69.4731, 40.9873, 0.55" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-0.979632, -51.5147, 3.74195, 0.55", "-0.521205, -53.1514, 4.10486, 0.55", "0.0827763, -54.7259, 4.58448, 0.55", "0.31606, -55.2517, 4.835, 0.55", "0.80611, -56.4118, 5.42547, 0.28", "1.10257, -57.0898, 5.80792, 0.83", "2.01233, -59.096, 6.96213, 0.28", "2.68447, -60.5416, 7.93206, 0.83", "3.93283, -63.3976, 9.83896, 0.28", "4.23186, -64.1784, 10.368, 0.83", "4.94982, -66.2429, 11.7428, 0.28", "5.26078, -67.2618, 12.3775, 0.83", "5.7688, -69.2368, 13.5243, 0.28", "6.3313, -71.9149, 14.9945, 0.83", "6.72265, -74.1049, 16.063, 0.55", "6.89139, -75.1174, 16.5476, 0.55", "7.04097, -76.1324, 17.0023, 1.11", "7.43657, -78.6424, 18.136, 0.55", "7.73052, -79.9775, 18.7055, 0.28", "7.8137, -80.2058, 18.814, 0.55", "8.52016, -81.8908, 19.4791, 0.28", "8.89416, -82.6221, 19.7846, 0.83", "9.7009, -83.9262, 20.3327, 0.28", "10.3718, -84.802, 20.7284, 0.55", "11.7294, -86.4648, 21.5294, 0.55", "13.4456, -88.5087, 22.4905, 0.55", "14.7415, -89.9947, 23.1469, 0.55", "15.3686, -90.7154, 23.4668, 0.55", "17.6947, -93.1908, 24.5855, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-0.979632, -51.5147, 3.74195, 0.55", "-1.97391, -52.9926, 3.28014, 0.55", "-2.23436, -53.6425, 3.09061, 0.83", "-2.48291, -54.5388, 2.88051, 0.55", "-2.65149, -55.3401, 2.72407, 0.83", "-2.95745, -56.7943, 2.44015, 0.28", "-3.12032, -57.5685, 2.289, 0.83", "-3.40688, -59.8192, 1.89087, 0.83", "-3.53663, -61.517, 1.58455, 0.28", "-3.55275, -62.9267, 1.34865, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "13.3527, 139.799, -3.45111, 0.55", "13.0514, 142.424, -4.70785, 0.55", "12.7988, 144.304, -5.7757, 0.55", "12.6404, 145.649, -6.67946, 0.55", "12.5014, 147.311, -7.94839, 0.28", "12.4133, 149.635, -9.69648, 0.55", "12.3908, 150.994, -10.7677, 0.55", "12.461, 153.226, -12.5806, 0.28", "12.5256, 154.81, -13.8796, 1.11", "12.7005, 156.288, -15.0505, 0.55", "13.1602, 158.35, -16.6872, 0.55", "13.7568, 160.56, -18.5221, 0.55", "14.186, 161.823, -19.4678, 0.28", "14.5784, 162.622, -20.0603, 0.55", "16.117, 165.458, -22.4051, 0.28", "16.5415, 166.273, -23.1291, 0.83", "17.4363, 168.084, -24.7737, 0.55", "18.1737, 169.674, -26.2448, 0.55", "19.4817, 172.877, -29.1637, 0.55", "20.1979, 174.947, -31.0033, 0.28", "20.7844, 177.048, -32.7989, 0.28", "21.2432, 178.743, -34.1877, 0.55", "22.1828, 182.069, -36.8011, 0.28", "22.6665, 183.992, -38.321, 0.55", "23.1287, 186.206, -39.8959, 0.55", "23.4537, 187.704, -40.8997, 0.28", "23.7232, 188.904, -41.7497, 0.55", "24.1335, 191.02, -43.2588, 0.28", "24.4109, 192.793, -44.3553, 0.55", "24.6629, 194.281, -45.2299, 0.28", "24.8712, 195.216, -45.7535, 0.55", "25.3465, 196.917, -46.728, 0.28", "25.5601, 197.633, -47.1369, 0.55", "26.1018, 199.069, -47.9446, 0.55", "27.0637, 200.859, -49.0252, 0.55", "28.6356, 203.139, -50.5691, 0.28", "29.0592, 203.67, -50.9372, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "13.3527, 139.799, -3.45111, 0.55", "13.5303, 140.525, -3.71417, 0.55", "14.3445, 143.851, -4.9198, 0.55", "14.7475, 145.498, -5.51659, 0.28", "15.2479, 147.542, -6.25748, 0.83", "16.1563, 151.254, -7.60273, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.55275, -62.9267, 1.34865, 0.83", "-3.60858, -64.6829, 1.31756, 0.83", "-3.63364, -65.4625, 1.31153, 1.11", "-3.67876, -66.9966, 1.21918, 0.55", "-3.74013, -69.18, 1.03048, 1.11", "-3.82834, -70.4996, 0.919266, 0.55", "-3.99311, -72.0436, 0.722537, 0.55", "-4.10571, -73.1382, 0.5113, 0.83", "-4.28895, -74.6644, 0.108297, 0.28", "-4.28895, -74.6644, 0.108297, 0.83", "-4.73751, -76.2995, -0.670569, 0.83", "-5.32287, -78.2645, -1.74283, 0.28", "-5.59912, -79.1755, -2.27139, 0.83", "-6.06065, -80.4314, -2.92002, 0.83", "-6.72442, -82.0712, -3.71918, 0.28", "-6.89882, -82.4792, -3.91615, 0.83", "-7.22861, -83.2082, -4.26799, 0.83", "-7.60575, -83.9581, -4.56648, 0.83", "-8.36823, -85.4323, -5.11404, 0.83", "-9.51151, -87.8706, -5.95414, 0.28", "-9.67735, -88.3036, -6.09238, 0.55", "-10.0801, -89.5026, -6.52697, 0.28", "-10.4236, -90.5513, -6.93207, 0.83", "-10.8172, -91.8767, -7.48943, 0.28", "-11.0237, -92.6837, -7.82246, 0.83", "-11.253, -93.9164, -8.20402, 0.83", "-11.377, -95.6587, -8.474, 0.28", "-11.3653, -96.3428, -8.47593, 0.55", "-11.247, -97.4481, -8.338, 0.28", "-11.008, -98.96, -7.97052, 0.83", "-10.6251, -100.879, -7.17934, 0.28", "-9.72108, -104.527, -5.27914, 0.83", "-9.41313, -105.818, -4.53601, 0.28", "-9.23053, -107.007, -3.87184, 0.83", "-9.08207, -108.006, -3.27125, 0.83", "-8.82022, -110.354, -1.86575, 0.28", "-8.84493, -110.969, -1.53971, 0.83", "-9.10886, -112.548, -0.933862, 0.83", "-9.43273, -114.587, 0.0849769, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-3.55275, -62.9267, 1.34865, 0.28", "-2.54847, -64.4976, 0.171738, 0.28", "-1.81476, -65.6453, -0.688094, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "16.1563, 151.254, -7.60273, 0.55", "16.3026, 153.04, -8.23621, 0.55", "16.4087, 154.675, -8.81111, 0.55", "16.6391, 156.468, -9.49713, 0.28", "16.7407, 157.646, -9.96033, 0.28", "16.7726, 158.302, -10.248, 0.55", "16.8418, 159.776, -10.896, 0.28", "16.9525, 160.963, -11.5529, 0.55", "17.0944, 162.834, -12.826, 0.28", "17.1641, 164.203, -13.8524, 0.55", "17.2362, 165.742, -15.0815, 0.55", "17.301, 167.374, -16.4965, 0.83", "17.3347, 169.826, -18.7648, 0.55", "17.3691, 170.637, -19.5796, 0.28", "17.3896, 171.189, -20.1339, 0.28", "17.4359, 171.567, -20.5354, 0.55", "17.5907, 172.892, -21.933, 0.28", "17.634, 173.401, -22.4743, 0.55", "17.6809, 174.627, -23.6072, 0.28", "17.6314, 175.585, -24.416, 0.55", "17.2533, 177.739, -26.1304, 0.28", "16.9897, 178.538, -26.7271, 0.55", "16.4753, 179.803, -27.7263, 0.28", "15.8828, 180.978, -28.7506, 0.55", "14.7908, 182.651, -30.1176, 0.28", "13.9741, 183.73, -30.9813, 0.83", "12.9147, 185.06, -32.0484, 0.55", "10.9966, 187.488, -34.1128, 0.28", "10.3603, 188.283, -34.8093, 0.55", "8.7275, 190.423, -36.8337, 0.28", "7.99737, 191.51, -37.9368, 0.55", "7.03224, 193.06, -39.4326, 0.28", "6.70192, 193.605, -39.8948, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "16.1563, 151.254, -7.60273, 0.55", "16.3622, 152.558, -7.78147, 0.55", "16.7374, 155.105, -8.14008, 0.28", "17.0054, 156.673, -8.45383, 0.55", "17.3751, 158.791, -8.91169, 0.28", "17.7006, 160.349, -9.27816, 0.55", "18.1028, 162.224, -9.72865, 0.28", "18.7587, 164.991, -10.5441, 0.55", "19.3903, 167.732, -11.4514, 0.28", "19.7661, 169.552, -12.0614, 0.55", "20.2271, 172.117, -12.8847, 0.28", "20.5682, 174.223, -13.5596, 0.55", "21.0555, 177.996, -14.7033, 0.28", "21.2876, 180.214, -15.3063, 0.55", "21.5149, 182.705, -15.9483, 0.28", "21.7092, 184.582, -16.4209, 0.28", "21.8279, 185.741, -16.6887, 0.28", "22.2795, 188.846, -17.427, 0.55", "22.6574, 191.074, -17.9101, 0.55", "23.184, 193.691, -18.4635, 0.28", "23.4115, 194.938, -18.7978, 0.28", "23.6981, 196.453, -19.2404, 0.28", "24.0367, 198.23, -19.7965, 0.28", "24.3618, 200.11, -20.45, 0.83", "24.5536, 202.568, -21.3343, 0.28", "24.4913, 205.293, -22.1381, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.43273, -114.587, 0.0849769, 0.55", "-9.54349, -117.536, 0.156957, 0.55", "-9.62155, -118.686, 0.186973, 0.55", "-9.6979, -120.112, 0.290678, 0.83", "-9.67522, -122.036, 0.400559, 0.83", "-9.66914, -123.342, 0.478232, 0.55", "-9.61421, -125.28, 0.665571, 0.83", "-9.47788, -127.558, 0.936035, 0.83", "-9.28713, -129.903, 1.23738, 0.55", "-9.02511, -132.63, 1.56077, 0.55", "-8.68008, -136.034, 2.00497, 0.83", "-8.34518, -139.098, 2.42686, 0.83", "-8.08678, -141.365, 2.75471, 0.83", "-7.68348, -144.353, 3.15877, 0.83", "-7.45431, -146.444, 3.40864, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-9.43273, -114.587, 0.0849769, 0.55", "-12.2494, -115.044, -1.12036, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.45431, -146.444, 3.40864, 0.83", "-7.63568, -148.892, 4.53355, 0.83", "-7.85507, -150.775, 5.51799, 0.83", "-8.33707, -153.685, 7.10841, 0.83", "-8.67817, -155.66, 8.12414, 0.28", "-9.09765, -158.196, 9.42954, 0.83", "-9.52415, -161.171, 10.8734, 0.83", "-9.80919, -163.182, 11.8425, 0.28", "-10.1442, -165.11, 12.6958, 0.83", "-10.4581, -166.936, 13.3435, 0.55", "-10.7103, -169.141, 13.9014, 0.83", "-10.931, -172.11, 14.3994, 0.83", "-11.0369, -174.403, 14.6483, 0.55", "-11.1423, -176.779, 14.8334, 0.83", "-11.3073, -180.112, 15.0115, 0.83", "-11.6033, -183.273, 15.2493, 0.55", "-11.7935, -184.772, 15.3599, 0.55", "-12.2499, -187.599, 15.6258, 0.83", "-12.7733, -190.341, 15.8723, 0.83", "-13.2807, -192.56, 16.1913, 0.83", "-14.2879, -195.965, 16.8573, 0.55", "-14.6015, -196.854, 17.0596, 0.55", "-15.2023, -198.449, 17.5241, 0.55", "-15.9031, -200.095, 18.1035, 0.83", "-17.3771, -203.619, 19.4808, 0.55", "-18.0497, -205.351, 19.9995, 0.83", "-18.6184, -206.993, 20.297, 0.83", "-19.3628, -209.265, 20.5677, 0.28", "-19.6868, -210.288, 20.6395, 0.28", "-20.6746, -213.395, 20.8284, 0.83", "-21.9185, -217.276, 20.7934, 0.55", "-22.3857, -218.833, 20.8101, 0.55", "-22.7782, -220.142, 20.7904, 0.28", "-23.0546, -220.958, 20.7488, 0.55", "-24.2567, -223.657, 20.5503, 0.28", "-25.0372, -224.982, 20.4332, 0.83", "-25.7162, -226.041, 20.4727, 0.83", "-27.0843, -227.979, 20.4393, 0.28", "-28.153, -229.373, 20.255, 0.83", "-29.6815, -231.215, 19.6277, 0.28", "-29.8761, -231.402, 19.489, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-7.45431, -146.444, 3.40864, 0.55", "-4.67972, -147.202, 7.21045, 0.55", "-3.05156, -147.523, 9.02048, 0.28", "-2.59702, -147.591, 9.44669, 0.83", "0.497728, -147.857, 11.9458, 0.55", "0.734471, -147.852, 12.1218, 0.83", "2.07516, -147.825, 13.1188, 0.28", "3.73531, -147.714, 14.1358, 0.55", "4.46762, -147.582, 14.6215, 0.55", "5.54677, -147.309, 15.1812, 0.28", "7.51863, -146.622, 15.586, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_42", "dend_25", "dend_0", "dend_46", "dend_43", "dend_31", "dend_26", "dend_6", "dend_1", "dend_45", "dend_44", "dend_41", "dend_32", "dend_30", "dend_27", "dend_18", "dend_7", "dend_3", "dend_2", "dend_40", "dend_33", "dend_29", "dend_28", "dend_22", "dend_19", "dend_17", "dend_8", "dend_5", "dend_4", "dend_35", "dend_34", "dend_24", "dend_23", "dend_21", "dend_20", "dend_16", "dend_9", "dend_39", "dend_36", "dend_11", "dend_10", "dend_38", "dend_37", "dend_13", "dend_12", "dend_15", "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_42", "dend_42", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L23_DBC_b0d0b3615e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_31
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_6
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_7
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_42(0), soma_0(0.4499999309967165)
    connect dend_25(0), soma_0(0.4499999309967165)
    connect dend_0(0), soma_0(0.4499999309967165)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.900775, -9.8088, 0.590543, 2.2315 ) }
    soma_0 { pt3dadd( -0.795054, -8.89395, 0.538155, 2.59468 ) }
    soma_0 { pt3dadd( -0.689333, -7.97909, 0.485767, 3.40562 ) }
    soma_0 { pt3dadd( -0.583612, -7.06424, 0.433379, 4.21656 ) }
    soma_0 { pt3dadd( -0.477891, -6.14939, 0.380991, 4.76863 ) }
    soma_0 { pt3dadd( -0.37217, -5.23453, 0.328603, 5.07118 ) }
    soma_0 { pt3dadd( -0.26645, -4.31968, 0.276215, 5.37449 ) }
    soma_0 { pt3dadd( -0.160729, -3.40482, 0.223827, 5.6778 ) }
    soma_0 { pt3dadd( -0.0550076, -2.48997, 0.171439, 5.91116 ) }
    soma_0 { pt3dadd( 0.0507134, -1.57512, 0.119051, 6.0829 ) }
    soma_0 { pt3dadd( 0.156434, -0.660263, 0.0666633, 6.26003 ) }
    soma_0 { pt3dadd( 0.262155, 0.254591, 0.0142753, 6.44407 ) }
    soma_0 { pt3dadd( 0.367876, 1.16944, -0.0381126, 6.62807 ) }
    soma_0 { pt3dadd( 0.473597, 2.0843, -0.0905006, 6.73886 ) }
    soma_0 { pt3dadd( 0.579318, 2.99915, -0.142889, 6.60317 ) }
    soma_0 { pt3dadd( 0.685039, 3.91401, -0.195276, 6.29711 ) }
    soma_0 { pt3dadd( 0.79076, 4.82886, -0.247664, 5.46861 ) }
    soma_0 { pt3dadd( 0.896481, 5.74371, -0.300052, 4.56209 ) }
    soma_0 { pt3dadd( 1.0022, 6.65857, -0.35244, 3.66181 ) }
    soma_0 { pt3dadd( 1.10792, 7.57342, -0.404828, 2.68112 ) }
    soma_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 1.67793 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 21/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.69856, 3.85573, 6.2591, 0.83 ) }
    dend_42 { pt3dadd( 5.98844, 5.70955, 6.354, 0.83 ) }
    dend_42 { pt3dadd( 12.9151, 11.3171, 6.64106, 1.11 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 24/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 0.488563, 7.24573, 4.0991, 2.22 ) }
    dend_25 { pt3dadd( 0.599291, 10.0009, 1.19413, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 26/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.91144, -9.98427, 2.0591, 2.22 ) }
    dend_0 { pt3dadd( -2.66077, -12.7549, 2.2931, 1.94 ) }
    dend_0 { pt3dadd( -3.46614, -15.7327, 2.5446, 2.22 ) }
    dend_0 { pt3dadd( -4.38228, -19.12, 2.83069, 1.38 ) }
    dend_0 { pt3dadd( -4.90871, -21.0665, 2.99509, 1.38 ) }
    dend_0 { pt3dadd( -5.45917, -23.1018, 3.16699, 1.66 ) }
    dend_0 { pt3dadd( -6.09254, -25.4436, 3.36477, 1.94 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.21364, 8.48827, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 2.93559, 23.3891, -0.457216, 0.55 ) }
    axon_0 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 36/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 12.9151, 11.3171, 6.64106, 0.28 ) }
    dend_46 { pt3dadd( 14.7413, 11.2416, 7.02957, 0.28 ) }
    dend_46 { pt3dadd( 15.8675, 11.2904, 7.24845, 0.55 ) }
    dend_46 { pt3dadd( 17.744, 11.5328, 7.49556, 0.28 ) }
    dend_46 { pt3dadd( 18.4344, 11.6683, 7.55581, 0.55 ) }
    dend_46 { pt3dadd( 21.2668, 12.346, 7.40357, 0.28 ) }
    dend_46 { pt3dadd( 23.0203, 12.8222, 7.12253, 0.55 ) }
    dend_46 { pt3dadd( 24.9476, 13.4882, 6.59477, 0.55 ) }
    dend_46 { pt3dadd( 27.1052, 14.3173, 5.76706, 0.28 ) }
    dend_46 { pt3dadd( 28.1121, 14.7339, 5.33069, 0.55 ) }
    dend_46 { pt3dadd( 31.2456, 16.0566, 3.73275, 0.28 ) }
    dend_46 { pt3dadd( 32.4841, 16.5464, 3.03838, 0.83 ) }
    dend_46 { pt3dadd( 34.4584, 17.1609, 1.98164, 0.28 ) }
    dend_46 { pt3dadd( 35.5028, 17.4416, 1.45329, 0.83 ) }
    dend_46 { pt3dadd( 37.6051, 17.8964, 0.509429, 0.28 ) }
    dend_46 { pt3dadd( 39.0014, 18.1172, -0.112342, 0.55 ) }
    dend_46 { pt3dadd( 41.4055, 18.4031, -1.09657, 0.28 ) }
    dend_46 { pt3dadd( 43.2864, 18.5514, -1.8223, 0.83 ) }
    dend_46 { pt3dadd( 45.9033, 18.7647, -2.93683, 0.28 ) }
    dend_46 { pt3dadd( 46.6167, 18.8243, -3.2691, 0.55 ) }
    dend_46 { pt3dadd( 50.4596, 19.0968, -5.21868, 0.28 ) }
    dend_46 { pt3dadd( 53.4115, 19.3075, -6.78094, 0.28 ) }
    dend_46 { pt3dadd( 54.9335, 19.4578, -7.67432, 0.55 ) }
    dend_46 { pt3dadd( 58.7461, 19.802, -10.0561, 0.28 ) }
    dend_46 { pt3dadd( 59.8081, 19.8962, -10.7603, 0.55 ) }
    dend_46 { pt3dadd( 61.571, 20.1414, -11.9955, 0.28 ) }
    dend_46 { pt3dadd( 62.2874, 20.2622, -12.4885, 0.55 ) }
    dend_46 { pt3dadd( 66.4465, 21.0069, -15.5258, 0.28 ) }
    dend_46 { pt3dadd( 67.5819, 21.2004, -16.2728, 0.83 ) }
    dend_46 { pt3dadd( 70.1797, 21.5645, -17.6974, 0.28 ) }
    dend_46 { pt3dadd( 71.687, 21.7501, -18.4218, 0.55 ) }
    dend_46 { pt3dadd( 73.3901, 21.9127, -19.1652, 0.28 ) }
    dend_46 { pt3dadd( 74.005, 21.9529, -19.4569, 0.55 ) }
    dend_46 { pt3dadd( 77.0787, 22.104, -20.9915, 0.28 ) }
    dend_46 { pt3dadd( 78.131, 22.1568, -21.5145, 0.83 ) }
    dend_46 { pt3dadd( 80.7413, 22.3183, -22.8021, 0.28 ) }
    dend_46 { pt3dadd( 82.4622, 22.4693, -23.6217, 0.55 ) }
    dend_46 { pt3dadd( 85.942, 23.1591, -25.545, 0.28 ) }
    dend_46 { pt3dadd( 87.7099, 23.6101, -26.5769, 0.28 ) }
    dend_46 { pt3dadd( 89.342, 24.1458, -27.5896, 0.55 ) }
    dend_46 { pt3dadd( 91.8471, 25.0867, -29.0865, 0.28 ) }
    dend_46 { pt3dadd( 93.4631, 25.6905, -30.0691, 0.55 ) }
    dend_46 { pt3dadd( 98.4121, 27.5023, -33.1938, 0.28 ) }
    dend_46 { pt3dadd( 99.6357, 27.8837, -33.9573, 0.83 ) }
    dend_46 { pt3dadd( 101.331, 28.3629, -35.1345, 0.28 ) }
    dend_46 { pt3dadd( 103.052, 28.7716, -36.3442, 0.55 ) }
    dend_46 { pt3dadd( 107.146, 29.5072, -39.315, 0.28 ) }
    dend_46 { pt3dadd( 108.637, 29.7001, -40.4463, 0.83 ) }
    dend_46 { pt3dadd( 114.191, 30.0412, -44.4895, 0.28 ) }
    dend_46 { pt3dadd( 115.633, 30.1055, -45.5315, 0.55 ) }
    dend_46 { pt3dadd( 118.436, 30.2074, -47.4697, 0.28 ) }
    dend_46 { pt3dadd( 121.54, 30.3798, -49.5146, 0.55 ) }
    dend_46 { pt3dadd( 123.449, 30.58, -50.6767, 0.28 ) }
    dend_46 { pt3dadd( 125.418, 30.8697, -51.7894, 0.28 ) }
    dend_46 { pt3dadd( 126.973, 31.27, -52.6433, 0.55 ) }
    dend_46 { pt3dadd( 129.639, 32.3076, -53.8838, 0.28 ) }
    dend_46 { pt3dadd( 130.334, 32.7827, -54.2374, 0.55 ) }
    dend_46 { pt3dadd( 131.828, 34.2275, -54.9378, 0.28 ) }
    dend_46 { pt3dadd( 132.618, 35.2313, -55.3016, 0.55 ) }
    dend_46 { pt3dadd( 133.488, 36.6172, -55.6999, 0.28 ) }
    dend_46 { pt3dadd( 134.474, 38.4945, -56.1621, 0.55 ) }
    dend_46 { pt3dadd( 136.496, 42.8393, -56.966, 0.28 ) }
    dend_46 { pt3dadd( 136.934, 43.8247, -57.1107, 0.28 ) }
    dend_46 { pt3dadd( 137.901, 46.172, -57.4001, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( 139.283, 49.5561, -57.7232, 0.28 ) }
    dend_46 { pt3dadd( 139.667, 50.4305, -57.7674, 0.55 ) }
    dend_46 { pt3dadd( 140.696, 52.4581, -57.8047, 0.28 ) }
    dend_46 { pt3dadd( 140.946, 52.882, -57.8057, 0.55 ) }
    dend_46 { pt3dadd( 141.966, 54.6049, -57.9795, 0.28 ) }
    dend_46 { pt3dadd( 142.405, 55.3274, -58.1184, 0.55 ) }
    dend_46 { pt3dadd( 143.038, 56.365, -58.4092, 0.28 ) }
    dend_46 { pt3dadd( 143.63, 57.2817, -58.7095, 0.55 ) }
    dend_46 { pt3dadd( 145.096, 59.5391, -59.6495, 0.28 ) }
    dend_46 { pt3dadd( 146.039, 60.9481, -60.2402, 0.28 ) }
    dend_46 { pt3dadd( 146.59, 61.7343, -60.5793, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 12.9151, 11.3171, 6.64106, 0.28 ) }
    dend_43 { pt3dadd( 13.7727, 14.1654, 6.49153, 0.28 ) }
    dend_43 { pt3dadd( 14.2053, 15.602, 6.41612, 0.83 ) }
    dend_43 { pt3dadd( 14.7782, 17.5047, 6.31623, 0.28 ) }
    dend_43 { pt3dadd( 14.9381, 18.0357, 6.28836, 1.38 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 16/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.599291, 10.0009, 1.19413, 0.83 ) }
    dend_31 { pt3dadd( 0.80833, 12.5708, 0.74029, 0.83 ) }
    dend_31 { pt3dadd( 1.02948, 15.2421, 0.545853, 0.83 ) }
    dend_31 { pt3dadd( 1.13016, 16.4692, 0.520893, 0.83 ) }
    dend_31 { pt3dadd( 1.53727, 20.9248, 0.632942, 1.66 ) }
    dend_31 { pt3dadd( 1.84064, 24.3829, 0.800279, 0.83 ) }
    dend_31 { pt3dadd( 2.15893, 27.3768, 1.06388, 0.83 ) }
    dend_31 { pt3dadd( 2.3765, 29.4379, 1.43121, 0.83 ) }
    dend_31 { pt3dadd( 2.61879, 31.5818, 1.99081, 1.38 ) }
    dend_31 { pt3dadd( 2.93738, 33.9297, 2.70597, 0.83 ) }
    dend_31 { pt3dadd( 3.21423, 35.4966, 3.29858, 1.11 ) }
    dend_31 { pt3dadd( 3.71415, 37.9928, 4.15604, 0.83 ) }
    dend_31 { pt3dadd( 4.17313, 40.3541, 5.07061, 0.83 ) }
    dend_31 { pt3dadd( 4.53392, 42.0237, 5.74074, 1.38 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.599291, 10.0009, 1.19413, 1.11 ) }
    dend_26 { pt3dadd( -1.42036, 14.0132, 1.29977, 1.11 ) }
    dend_26 { pt3dadd( -3.75623, 18.5413, 1.00961, 1.11 ) }
    dend_26 { pt3dadd( -5.58931, 22.409, 0.608191, 0.55 ) }
    dend_26 { pt3dadd( -6.37096, 24.1705, 0.413291, 1.11 ) }
    dend_26 { pt3dadd( -7.61247, 27.0735, 0.101181, 0.55 ) }
    dend_26 { pt3dadd( -9.33017, 31.0709, -0.253284, 0.55 ) }
    dend_26 { pt3dadd( -10.6622, 34.2152, -0.570385, 0.55 ) }
    dend_26 { pt3dadd( -12.1063, 37.573, -0.929187, 1.11 ) }
    dend_26 { pt3dadd( -12.6942, 38.9727, -0.949909, 0.55 ) }
    dend_26 { pt3dadd( -13.4983, 41.1001, -0.87269, 0.83 ) }
    dend_26 { pt3dadd( -14.6961, 44.6056, -0.376883, 1.11 ) }
    dend_26 { pt3dadd( -15.348, 46.6158, 0.177674, 0.55 ) }
    dend_26 { pt3dadd( -16.0855, 49.0331, 1.03519, 1.11 ) }
    dend_26 { pt3dadd( -16.9784, 51.9095, 2.15567, 0.55 ) }
    dend_26 { pt3dadd( -18.1561, 55.8379, 3.67128, 1.11 ) }
    dend_26 { pt3dadd( -19.0152, 59.3111, 5.03532, 0.55 ) }
    dend_26 { pt3dadd( -19.2195, 60.2381, 5.39685, 0.55 ) }
    dend_26 { pt3dadd( -19.54, 61.7005, 5.98028, 0.55 ) }
    dend_26 { pt3dadd( -19.9376, 63.363, 6.60041, 0.55 ) }
    dend_26 { pt3dadd( -20.8448, 66.8244, 7.73492, 1.38 ) }
    dend_26 { pt3dadd( -21.5795, 69.3354, 8.5112, 0.55 ) }
    dend_26 { pt3dadd( -22.2621, 71.7604, 9.25183, 0.55 ) }
    dend_26 { pt3dadd( -22.558, 72.9315, 9.64848, 0.28 ) }
    dend_26 { pt3dadd( -23.0491, 74.9564, 10.3541, 0.55 ) }
    dend_26 { pt3dadd( -23.276, 76.1837, 10.7322, 0.28 ) }
    dend_26 { pt3dadd( -23.6851, 78.6234, 11.365, 1.11 ) }
    dend_26 { pt3dadd( -24.2607, 82.0474, 12.1038, 0.28 ) }
    dend_26 { pt3dadd( -24.5755, 84.2011, 12.4992, 0.83 ) }
    dend_26 { pt3dadd( -25.2403, 88.4739, 13.1845, 0.83 ) }
    dend_26 { pt3dadd( -26.1589, 93.8377, 13.8186, 0.55 ) }
    dend_26 { pt3dadd( -27.0809, 99.0001, 14.2034, 0.55 ) }
    dend_26 { pt3dadd( -27.4356, 101.142, 14.3058, 0.28 ) }
    dend_26 { pt3dadd( -27.9172, 103.646, 14.3657, 0.83 ) }
    dend_26 { pt3dadd( -28.3215, 105.72, 14.4422, 0.83 ) }
    dend_26 { pt3dadd( -29.1606, 109.565, 14.6595, 0.55 ) }
    dend_26 { pt3dadd( -30.357, 114.45, 15.0991, 0.55 ) }
    dend_26 { pt3dadd( -31.2497, 118.248, 15.4649, 0.55 ) }
    dend_26 { pt3dadd( -32.1012, 121.836, 15.8625, 0.55 ) }
    dend_26 { pt3dadd( -33.2387, 126.638, 16.503, 0.55 ) }
    dend_26 { pt3dadd( -33.8378, 129.37, 16.9591, 0.55 ) }
    dend_26 { pt3dadd( -34.5527, 132.624, 17.7579, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.09254, -25.4436, 3.36477, 1.38 ) }
    dend_6 { pt3dadd( -6.11577, -28.9545, 3.43496, 1.38 ) }
    dend_6 { pt3dadd( -6.13629, -32.0555, 3.49696, 0.83 ) }
    dend_6 { pt3dadd( -6.14979, -34.095, 3.53773, 1.66 ) }
    dend_6 { pt3dadd( -6.17215, -37.4747, 3.6053, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 77/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.09254, -25.4436, 3.36477, 1.38 ) }
    dend_1 { pt3dadd( -9.33012, -28.4671, 4.09269, 1.38 ) }
    dend_1 { pt3dadd( -10.7934, -29.8353, 4.41494, 0.83 ) }
    dend_1 { pt3dadd( -12.0979, -31.0283, 4.72107, 0.83 ) }
    dend_1 { pt3dadd( -14.7548, -33.3065, 5.46388, 0.83 ) }
    dend_1 { pt3dadd( -16.4009, -34.718, 5.9241, 0.83 ) }
    dend_1 { pt3dadd( -18.2638, -36.3154, 6.44494, 0.83 ) }
    dend_1 { pt3dadd( -19.1022, -37.0609, 6.60998, 1.11 ) }
    dend_1 { pt3dadd( -20.6623, -38.3761, 6.95141, 0.83 ) }
    dend_1 { pt3dadd( -22.7402, -39.9642, 7.6026, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 87/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.65753, 38.2899, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 6.37948, 53.1908, -0.457216, 0.55 ) }
    axon_1 { pt3dadd( 8.10142, 68.0916, -0.457216, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 14.9381, 18.0357, 6.28836, 0.55 ) }
    dend_45 { pt3dadd( 16.3768, 17.7097, 7.38225, 0.55 ) }
    dend_45 { pt3dadd( 17.7665, 17.3486, 8.4019, 0.55 ) }
    dend_45 { pt3dadd( 20.7717, 16.5386, 10.8324, 0.83 ) }
    dend_45 { pt3dadd( 22.3939, 16.1313, 12.1963, 0.28 ) }
    dend_45 { pt3dadd( 23.0165, 15.9623, 12.7349, 0.83 ) }
    dend_45 { pt3dadd( 24.5745, 15.4981, 14.1338, 0.28 ) }
    dend_45 { pt3dadd( 25.5128, 15.2339, 14.9959, 0.55 ) }
    dend_45 { pt3dadd( 27.776, 14.6587, 17.1303, 0.28 ) }
    dend_45 { pt3dadd( 29.0441, 14.2682, 18.2768, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( 30.8324, 13.6597, 19.9397, 0.28 ) }
    dend_45 { pt3dadd( 32.4009, 13.1148, 21.4053, 0.55 ) }
    dend_45 { pt3dadd( 34.0736, 12.5531, 22.9317, 0.28 ) }
    dend_45 { pt3dadd( 35.4703, 12.056, 24.2341, 0.55 ) }
    dend_45 { pt3dadd( 36.8637, 11.4723, 25.3977, 0.28 ) }
    dend_45 { pt3dadd( 38.1839, 10.8079, 26.5301, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 6/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 14.9381, 18.0357, 6.28836, 0.28 ) }
    dend_44 { pt3dadd( 15.2965, 19.1283, 7.04442, 0.28 ) }
    dend_44 { pt3dadd( 15.5715, 19.9523, 7.50032, 0.83 ) }
    dend_44 { pt3dadd( 16.2204, 21.9008, 8.42193, 0.28 ) }
    dend_44 { pt3dadd( 16.2204, 21.9008, 8.42193, 0.55 ) }
    dend_44 { pt3dadd( 16.6018, 23.2151, 8.91536, 0.55 ) }
    dend_44 { pt3dadd( 17.1025, 24.961, 9.53963, 1.11 ) }
    dend_44 { pt3dadd( 17.8335, 27.8553, 10.4202, 0.55 ) }
    dend_44 { pt3dadd( 18.1269, 29.3587, 10.803, 0.28 ) }
    dend_44 { pt3dadd( 18.3249, 30.7687, 11.0543, 0.83 ) }
    dend_44 { pt3dadd( 18.4913, 32.2859, 11.2722, 0.55 ) }
    dend_44 { pt3dadd( 18.5899, 33.6695, 11.4351, 0.83 ) }
    dend_44 { pt3dadd( 18.6338, 36.3848, 11.8112, 0.28 ) }
    dend_44 { pt3dadd( 18.5897, 38.0066, 11.9865, 0.83 ) }
    dend_44 { pt3dadd( 18.4711, 40.1991, 12.1995, 0.28 ) }
    dend_44 { pt3dadd( 18.4487, 40.576, 12.2361, 0.55 ) }
    dend_44 { pt3dadd( 18.3809, 41.5989, 12.3256, 0.28 ) }
    dend_44 { pt3dadd( 18.3053, 43.4188, 12.5512, 0.55 ) }
    dend_44 { pt3dadd( 18.3567, 45.8947, 12.9276, 0.28 ) }
    dend_44 { pt3dadd( 18.463, 48.0638, 13.2301, 0.83 ) }
    dend_44 { pt3dadd( 18.585, 49.8062, 13.5003, 0.28 ) }
    dend_44 { pt3dadd( 18.7001, 50.913, 13.6598, 0.83 ) }
    dend_44 { pt3dadd( 19.071, 53.5374, 13.9401, 0.28 ) }
    dend_44 { pt3dadd( 19.3804, 55.2902, 14.0916, 0.55 ) }
    dend_44 { pt3dadd( 19.787, 57.2142, 14.1708, 0.28 ) }
    dend_44 { pt3dadd( 20.1911, 58.8669, 14.0588, 0.55 ) }
    dend_44 { pt3dadd( 20.9321, 61.6886, 13.6436, 0.55 ) }
    dend_44 { pt3dadd( 21.5831, 63.9541, 13.204, 0.28 ) }
    dend_44 { pt3dadd( 22.2756, 66.2278, 12.6792, 0.55 ) }
    dend_44 { pt3dadd( 23.415, 69.5377, 12.0029, 0.28 ) }
    dend_44 { pt3dadd( 24.3843, 72.0063, 11.4794, 0.83 ) }
    dend_44 { pt3dadd( 25.2287, 73.9743, 11.0165, 0.55 ) }
    dend_44 { pt3dadd( 26.23, 76.0189, 10.6144, 0.28 ) }
    dend_44 { pt3dadd( 27.0027, 77.4019, 10.4636, 0.55 ) }
    dend_44 { pt3dadd( 28.4054, 79.6257, 10.5294, 0.55 ) }
    dend_44 { pt3dadd( 30.2623, 82.3535, 11.0849, 0.28 ) }
    dend_44 { pt3dadd( 30.6001, 82.828, 11.2425, 0.55 ) }
    dend_44 { pt3dadd( 32.026, 84.7817, 11.9946, 0.28 ) }
    dend_44 { pt3dadd( 33.4268, 86.7191, 12.7749, 0.55 ) }
    dend_44 { pt3dadd( 34.5993, 88.3651, 13.4728, 0.28 ) }
    dend_44 { pt3dadd( 35.4987, 89.7452, 14.0001, 0.55 ) }
    dend_44 { pt3dadd( 36.6251, 91.5373, 14.7491, 0.28 ) }
    dend_44 { pt3dadd( 37.1182, 92.3563, 14.9686, 0.55 ) }
    dend_44 { pt3dadd( 38.0012, 93.8576, 15.109, 0.28 ) }
    dend_44 { pt3dadd( 38.7281, 95.0627, 15.1062, 0.83 ) }
    dend_44 { pt3dadd( 39.7802, 96.7353, 14.944, 0.28 ) }
    dend_44 { pt3dadd( 40.1035, 97.2312, 14.8677, 0.55 ) }
    dend_44 { pt3dadd( 42.0716, 100.115, 14.453, 0.28 ) }
    dend_44 { pt3dadd( 42.7671, 101.105, 14.4029, 0.83 ) }
    dend_44 { pt3dadd( 44.1432, 103.089, 14.3809, 0.28 ) }
    dend_44 { pt3dadd( 44.6133, 103.766, 14.3988, 0.55 ) }
    dend_44 { pt3dadd( 45.6599, 105.319, 14.4846, 0.28 ) }
    dend_44 { pt3dadd( 46.8912, 107.223, 14.6157, 0.55 ) }
    dend_44 { pt3dadd( 48.1642, 109.318, 14.8452, 0.28 ) }
    dend_44 { pt3dadd( 49.0672, 110.914, 14.9905, 0.83 ) }
    dend_44 { pt3dadd( 49.8585, 112.461, 14.9192, 0.83 ) }
    dend_44 { pt3dadd( 51.009, 114.865, 14.6634, 0.28 ) }
    dend_44 { pt3dadd( 51.3831, 115.699, 14.5253, 0.83 ) }
    dend_44 { pt3dadd( 51.982, 117.135, 14.1502, 0.28 ) }
    dend_44 { pt3dadd( 52.6292, 118.727, 13.5828, 0.55 ) }
    dend_44 { pt3dadd( 54.1193, 122.319, 12.2317, 0.28 ) }
    dend_44 { pt3dadd( 54.6966, 123.706, 11.6131, 0.55 ) }
    dend_44 { pt3dadd( 54.9938, 124.394, 11.2898, 0.28 ) }
    dend_44 { pt3dadd( 56.1127, 126.871, 10.1445, 0.55 ) }
    dend_44 { pt3dadd( 57.1502, 129.013, 9.18148, 0.28 ) }
    dend_44 { pt3dadd( 57.9265, 130.47, 8.61234, 0.83 ) }
    dend_44 { pt3dadd( 58.8407, 132.069, 8.19568, 0.28 ) }
    dend_44 { pt3dadd( 59.6912, 133.528, 7.76077, 0.83 ) }
    dend_44 { pt3dadd( 60.7345, 135.309, 7.23777, 0.28 ) }
    dend_44 { pt3dadd( 61.1023, 135.972, 7.08137, 0.55 ) }
    dend_44 { pt3dadd( 61.6806, 137.053, 6.88629, 0.28 ) }
    dend_44 { pt3dadd( 62.5432, 138.747, 6.60963, 0.55 ) }
    dend_44 { pt3dadd( 63.7199, 141.224, 6.16779, 0.55 ) }
    dend_44 { pt3dadd( 64.5993, 143.314, 5.66654, 0.28 ) }
    dend_44 { pt3dadd( 65.0312, 144.38, 5.35489, 1.11 ) }
    dend_44 { pt3dadd( 65.5655, 145.799, 4.8953, 1.11 ) }
    dend_44 { pt3dadd( 66.1637, 147.421, 4.49629, 0.83 ) }
    dend_44 { pt3dadd( 67.0848, 149.892, 4.06889, 0.28 ) }
    dend_44 { pt3dadd( 67.7063, 151.533, 3.9659, 0.55 ) }
    dend_44 { pt3dadd( 68.3633, 153.117, 3.95224, 0.28 ) }
    dend_44 { pt3dadd( 69.6742, 156.07, 3.94869, 0.55 ) }
    dend_44 { pt3dadd( 71.2951, 159.668, 3.93676, 0.28 ) }
    dend_44 { pt3dadd( 71.793, 160.722, 3.96191, 0.83 ) }
    dend_44 { pt3dadd( 72.4027, 161.959, 3.99132, 0.28 ) }
    dend_44 { pt3dadd( 73.6652, 164.374, 3.97715, 0.55 ) }
    dend_44 { pt3dadd( 75.0343, 166.977, 3.77132, 0.55 ) }
    dend_44 { pt3dadd( 76.7525, 170.201, 3.27404, 0.55 ) }
    dend_44 { pt3dadd( 77.6337, 171.822, 2.88605, 0.28 ) }
    dend_44 { pt3dadd( 78.7999, 174.068, 2.3314, 0.55 ) }
    dend_44 { pt3dadd( 79.7394, 175.871, 1.89276, 0.28 ) }
    dend_44 { pt3dadd( 80.7445, 177.85, 1.48367, 0.55 ) }
    dend_44 { pt3dadd( 81.3476, 179.038, 1.20189, 0.55 ) }
    dend_44 { pt3dadd( 82.811, 182.279, 0.294873, 0.55 ) }
    dend_44 { pt3dadd( 83.4708, 184.025, -0.45205, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_44 { pt3dadd( 83.9979, 185.663, -1.28203, 0.28 ) }
    dend_44 { pt3dadd( 84.324, 186.799, -1.96382, 0.55 ) }
    dend_44 { pt3dadd( 85.3923, 191.253, -5.09438, 0.55 ) }
    dend_44 { pt3dadd( 85.826, 193.368, -6.7144, 0.55 ) }
    dend_44 { pt3dadd( 86.3375, 196.969, -9.56979, 0.28 ) }
    dend_44 { pt3dadd( 86.4014, 197.563, -10.0718, 0.28 ) }
    dend_44 { pt3dadd( 86.4606, 198.498, -10.8754, 0.55 ) }
    dend_44 { pt3dadd( 86.6256, 201.078, -12.9603, 0.55 ) }
    dend_44 { pt3dadd( 86.8257, 202.654, -14.0507, 0.83 ) }
    dend_44 { pt3dadd( 87.0978, 203.997, -14.9899, 0.83 ) }
    dend_44 { pt3dadd( 87.8563, 207.319, -17.4511, 0.55 ) }
    dend_44 { pt3dadd( 88.0627, 208.04, -18.083, 0.55 ) }
    dend_44 { pt3dadd( 88.7045, 209.865, -19.826, 0.83 ) }
    dend_44 { pt3dadd( 89.6789, 212.184, -22.2018, 0.55 ) }
    dend_44 { pt3dadd( 90.6166, 214.395, -24.6718, 0.55 ) }
    dend_44 { pt3dadd( 91.6059, 216.576, -27.1489, 0.55 ) }
    dend_44 { pt3dadd( 92.467, 218.349, -29.0353, 1.11 ) }
    dend_44 { pt3dadd( 92.9493, 219.365, -30.0896, 0.28 ) }
    dend_44 { pt3dadd( 93.2819, 220.154, -30.8394, 0.55 ) }
    dend_44 { pt3dadd( 94.0214, 222.1, -32.4266, 0.55 ) }
    dend_44 { pt3dadd( 94.4817, 223.356, -33.2792, 1.11 ) }
    dend_44 { pt3dadd( 94.9426, 224.958, -34.3619, 0.55 ) }
    dend_44 { pt3dadd( 95.3965, 226.805, -35.6554, 0.55 ) }
    dend_44 { pt3dadd( 96.0035, 229.127, -37.4729, 1.11 ) }
    dend_44 { pt3dadd( 96.9608, 232.576, -40.2834, 0.55 ) }
    dend_44 { pt3dadd( 97.1282, 233.235, -40.8124, 0.55 ) }
    dend_44 { pt3dadd( 97.8723, 236.99, -43.7924, 0.83 ) }
    dend_44 { pt3dadd( 98.0606, 238.108, -44.7111, 0.83 ) }
    dend_44 { pt3dadd( 98.598, 241.626, -47.6517, 0.55 ) }
    dend_44 { pt3dadd( 98.7121, 242.271, -48.2044, 0.55 ) }
    dend_44 { pt3dadd( 98.9378, 243.592, -49.277, 0.28 ) }
    dend_44 { pt3dadd( 99.1966, 244.753, -50.1944, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_31 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 4.53392, 42.0237, 5.74074, 0.55 ) }
    dend_41 { pt3dadd( 4.31641, 42.7838, 7.06148, 0.55 ) }
    dend_41 { pt3dadd( 4.0319, 44.05, 9.22851, 0.83 ) }
    dend_41 { pt3dadd( 3.84083, 45.1265, 10.9474, 0.55 ) }
    dend_41 { pt3dadd( 3.54627, 46.8297, 13.4819, 1.11 ) }
    dend_41 { pt3dadd( 3.11692, 49.8889, 17.8407, 0.55 ) }
    dend_41 { pt3dadd( 3.04907, 50.451, 18.5739, 0.55 ) }
    dend_41 { pt3dadd( 2.8458, 52.4361, 20.8922, 0.83 ) }
    dend_41 { pt3dadd( 2.75332, 53.842, 22.3252, 0.55 ) }
    dend_41 { pt3dadd( 2.71278, 54.799, 23.1634, 0.55 ) }
    dend_41 { pt3dadd( 2.80958, 56.4778, 24.3139, 0.28 ) }
    dend_41 { pt3dadd( 3.01004, 58.201, 25.3201, 0.55 ) }
    dend_41 { pt3dadd( 3.24345, 60.4297, 26.6354, 0.55 ) }
    dend_41 { pt3dadd( 3.51727, 63.061, 28.1362, 0.28 ) }
    dend_41 { pt3dadd( 3.71853, 64.8153, 29.1714, 0.55 ) }
    dend_41 { pt3dadd( 3.89047, 66.1432, 30.0085, 0.55 ) }
    dend_41 { pt3dadd( 4.20608, 68.3603, 31.4489, 0.55 ) }
    dend_41 { pt3dadd( 4.36038, 69.4225, 32.2711, 0.28 ) }
    dend_41 { pt3dadd( 4.4104, 69.8013, 32.59, 0.55 ) }
    dend_41 { pt3dadd( 4.56673, 70.9886, 33.6392, 0.28 ) }
    dend_41 { pt3dadd( 4.75456, 72.5272, 35.084, 0.55 ) }
    dend_41 { pt3dadd( 4.89397, 73.7449, 36.3227, 0.55 ) }
    dend_41 { pt3dadd( 5.24917, 75.7379, 38.3615, 0.28 ) }
    dend_41 { pt3dadd( 5.34103, 76.2178, 38.862, 0.55 ) }
    dend_41 { pt3dadd( 5.54613, 77.4468, 40.1127, 0.28 ) }
    dend_41 { pt3dadd( 5.68122, 78.1554, 40.7918, 0.55 ) }
    dend_41 { pt3dadd( 6.14695, 80.3257, 42.6057, 0.28 ) }
    dend_41 { pt3dadd( 6.47853, 81.6831, 43.5683, 0.55 ) }
    dend_41 { pt3dadd( 7.06455, 83.8395, 44.7048, 0.28 ) }
    dend_41 { pt3dadd( 7.29758, 84.6295, 45.0535, 0.55 ) }
    dend_41 { pt3dadd( 7.74239, 86.2943, 45.7089, 0.28 ) }
    dend_41 { pt3dadd( 8.03019, 87.4038, 46.0581, 0.55 ) }
    dend_41 { pt3dadd( 8.68617, 89.4772, 46.4915, 0.28 ) }
    dend_41 { pt3dadd( 9.19351, 90.9222, 46.748, 0.28 ) }
    dend_41 { pt3dadd( 9.71182, 92.2133, 46.9329, 0.55 ) }
    dend_41 { pt3dadd( 10.6782, 94.5905, 47.3035, 0.55 ) }
    dend_41 { pt3dadd( 11.7551, 97.3327, 47.7637, 0.28 ) }
    dend_41 { pt3dadd( 12.4915, 99.0909, 48.0525, 0.28 ) }
    dend_41 { pt3dadd( 13.1821, 100.534, 48.1745, 0.55 ) }
    dend_41 { pt3dadd( 14.0165, 102.053, 48.2422, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 4.53392, 42.0237, 5.74074, 0.83 ) }
    dend_32 { pt3dadd( 4.22758, 45.0083, 5.81727, 0.83 ) }
    dend_32 { pt3dadd( 4.06764, 46.907, 5.8137, 0.83 ) }
    dend_32 { pt3dadd( 3.85398, 50.0324, 5.77222, 0.83 ) }
    dend_32 { pt3dadd( 3.71873, 52.8967, 5.72321, 0.28 ) }
    dend_32 { pt3dadd( 3.66351, 55.1236, 5.68518, 0.83 ) }
    dend_32 { pt3dadd( 3.673, 58.8809, 5.63945, 0.83 ) }
    dend_32 { pt3dadd( 3.80442, 60.6817, 5.61533, 0.28 ) }
    dend_32 { pt3dadd( 3.9051, 61.672, 5.62191, 0.83 ) }
    dend_32 { pt3dadd( 4.11509, 63.335, 5.66179, 0.55 ) }
    dend_32 { pt3dadd( 4.33577, 65.0032, 5.75521, 0.83 ) }
    dend_32 { pt3dadd( 4.55309, 66.5608, 5.81606, 0.55 ) }
    dend_32 { pt3dadd( 4.91245, 68.6125, 5.98599, 0.83 ) }
    dend_32 { pt3dadd( 5.26078, 70.7012, 6.18762, 0.83 ) }
    dend_32 { pt3dadd( 5.73416, 73.1598, 6.45218, 0.83 ) }
    dend_32 { pt3dadd( 6.29167, 75.8961, 6.75048, 0.55 ) }
    dend_32 { pt3dadd( 6.67458, 77.8209, 6.94223, 0.83 ) }
    dend_32 { pt3dadd( 7.4765, 81.6514, 7.2981, 0.55 ) }
    dend_32 { pt3dadd( 7.93471, 83.7851, 7.49537, 0.55 ) }
    dend_32 { pt3dadd( 8.56788, 86.5748, 7.74555, 0.55 ) }
    dend_32 { pt3dadd( 9.04298, 88.7137, 7.93446, 0.55 ) }
    dend_32 { pt3dadd( 9.80537, 92.0781, 8.18926, 0.55 ) }
    dend_32 { pt3dadd( 10.5207, 95.6392, 8.3726, 1.11 ) }
    dend_32 { pt3dadd( 10.8651, 97.8933, 8.42511, 0.55 ) }
    dend_32 { pt3dadd( 11.251, 100.533, 8.36487, 0.83 ) }
    dend_32 { pt3dadd( 11.5906, 103.314, 8.16464, 1.11 ) }
    dend_32 { pt3dadd( 11.7858, 105.13, 7.95688, 0.55 ) }
    dend_32 { pt3dadd( 12.0406, 107.611, 7.59332, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( 12.2517, 110.262, 7.08115, 0.83 ) }
    dend_32 { pt3dadd( 12.5205, 113.588, 6.29906, 0.55 ) }
    dend_32 { pt3dadd( 12.6196, 115.082, 5.88995, 1.11 ) }
    dend_32 { pt3dadd( 12.8095, 118.079, 4.9843, 1.11 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 4/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -34.5527, 132.624, 17.7579, 0.28 ) }
    dend_30 { pt3dadd( -33.9811, 135.283, 17.3393, 0.28 ) }
    dend_30 { pt3dadd( -33.9608, 136.418, 17.0269, 0.55 ) }
    dend_30 { pt3dadd( -33.997, 137.767, 16.6508, 0.28 ) }
    dend_30 { pt3dadd( -34.0324, 138.642, 16.5204, 0.55 ) }
    dend_30 { pt3dadd( -34.1043, 140.236, 16.3936, 0.28 ) }
    dend_30 { pt3dadd( -34.1781, 141.106, 16.3017, 0.55 ) }
    dend_30 { pt3dadd( -34.6441, 143.957, 16.0143, 0.28 ) }
    dend_30 { pt3dadd( -34.8373, 144.974, 15.8773, 0.55 ) }
    dend_30 { pt3dadd( -35.5078, 147.893, 15.2935, 0.28 ) }
    dend_30 { pt3dadd( -35.8415, 149.253, 14.9815, 0.83 ) }
    dend_30 { pt3dadd( -36.4411, 152.035, 14.282, 0.28 ) }
    dend_30 { pt3dadd( -36.7521, 153.957, 13.9261, 0.28 ) }
    dend_30 { pt3dadd( -36.912, 155.256, 13.783, 0.55 ) }
    dend_30 { pt3dadd( -37.1988, 157.616, 13.5466, 0.28 ) }
    dend_30 { pt3dadd( -37.3155, 158.627, 13.4619, 0.55 ) }
    dend_30 { pt3dadd( -37.6175, 161.634, 13.4562, 0.55 ) }
    dend_30 { pt3dadd( -37.9052, 165.571, 13.7758, 0.28 ) }
    dend_30 { pt3dadd( -38.0703, 167.856, 14.089, 0.55 ) }
    dend_30 { pt3dadd( -38.2376, 170.156, 14.5312, 0.28 ) }
    dend_30 { pt3dadd( -38.292, 171.021, 14.7303, 0.55 ) }
    dend_30 { pt3dadd( -38.4427, 172.468, 15.0614, 0.28 ) }
    dend_30 { pt3dadd( -38.5803, 173.058, 15.2077, 0.55 ) }
    dend_30 { pt3dadd( -38.9497, 174.325, 15.4556, 0.28 ) }
    dend_30 { pt3dadd( -39.1667, 175.165, 15.6286, 0.55 ) }
    dend_30 { pt3dadd( -39.3629, 176.006, 15.8064, 0.28 ) }
    dend_30 { pt3dadd( -39.6897, 177.443, 16.0993, 0.55 ) }
    dend_30 { pt3dadd( -40.0795, 179.168, 16.4305, 0.55 ) }
    dend_30 { pt3dadd( -40.892, 182.826, 17.1138, 0.28 ) }
    dend_30 { pt3dadd( -41.3874, 185.279, 17.5248, 0.28 ) }
    dend_30 { pt3dadd( -41.4979, 185.887, 17.626, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 35/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -34.5527, 132.624, 17.7579, 0.28 ) }
    dend_27 { pt3dadd( -34.647, 135.597, 17.2671, 0.28 ) }
    dend_27 { pt3dadd( -34.67, 136.689, 17.1933, 0.55 ) }
    dend_27 { pt3dadd( -34.719, 137.505, 17.1936, 0.28 ) }
    dend_27 { pt3dadd( -34.8155, 138.332, 17.2934, 0.55 ) }
    dend_27 { pt3dadd( -35.1468, 140.349, 17.7622, 0.28 ) }
    dend_27 { pt3dadd( -35.3622, 141.606, 18.0995, 0.55 ) }
    dend_27 { pt3dadd( -35.5147, 142.376, 18.3336, 0.28 ) }
    dend_27 { pt3dadd( -35.7446, 143.514, 18.6162, 0.55 ) }
    dend_27 { pt3dadd( -36.145, 145.69, 19.0684, 0.55 ) }
    dend_27 { pt3dadd( -36.3101, 146.983, 19.2871, 0.28 ) }
    dend_27 { pt3dadd( -36.577, 149.391, 19.6031, 0.83 ) }
    dend_27 { pt3dadd( -36.7004, 152.034, 19.8479, 0.28 ) }
    dend_27 { pt3dadd( -36.7045, 153.402, 19.8899, 0.28 ) }
    dend_27 { pt3dadd( -36.6706, 154.243, 19.9103, 0.83 ) }
    dend_27 { pt3dadd( -36.4399, 156.51, 19.9974, 0.28 ) }
    dend_27 { pt3dadd( -36.2311, 158.17, 20.1728, 0.28 ) }
    dend_27 { pt3dadd( -36.1001, 159.193, 20.4024, 0.28 ) }
    dend_27 { pt3dadd( -35.9868, 160.263, 20.7476, 0.83 ) }
    dend_27 { pt3dadd( -35.8385, 162.821, 21.8248, 0.28 ) }
    dend_27 { pt3dadd( -35.8064, 164.365, 22.5327, 0.55 ) }
    dend_27 { pt3dadd( -35.8188, 165.668, 23.1809, 0.28 ) }
    dend_27 { pt3dadd( -35.8105, 166.89, 23.7661, 0.55 ) }
    dend_27 { pt3dadd( -35.8275, 167.583, 24.0668, 0.55 ) }
    dend_27 { pt3dadd( -35.9218, 170.102, 24.992, 0.55 ) }
    dend_27 { pt3dadd( -35.9875, 172.379, 25.6885, 0.55 ) }
    dend_27 { pt3dadd( -36.0159, 173.0, 25.8727, 0.55 ) }
    dend_27 { pt3dadd( -36.1253, 175.171, 26.5077, 0.55 ) }
    dend_27 { pt3dadd( -36.3005, 177.284, 27.0598, 0.55 ) }
    dend_27 { pt3dadd( -36.4995, 179.235, 27.5746, 0.55 ) }
    dend_27 { pt3dadd( -36.7139, 181.213, 28.0411, 0.83 ) }
    dend_27 { pt3dadd( -36.8844, 182.827, 28.4809, 0.55 ) }
    dend_27 { pt3dadd( -37.0319, 184.193, 28.8873, 0.83 ) }
    dend_27 { pt3dadd( -37.3088, 186.272, 29.5865, 0.28 ) }
    dend_27 { pt3dadd( -37.5742, 188.2, 30.2595, 0.55 ) }
    dend_27 { pt3dadd( -37.9497, 190.14, 30.9117, 0.55 ) }
    dend_27 { pt3dadd( -38.2586, 191.578, 31.255, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_6 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.17215, -37.4747, 3.6053, 0.83 ) }
    dend_18 { pt3dadd( -4.57422, -38.3232, 3.90961, 0.83 ) }
    dend_18 { pt3dadd( -3.04073, -39.0037, 4.51158, 0.83 ) }
    dend_18 { pt3dadd( -0.696219, -39.9098, 5.59145, 0.83 ) }
    dend_18 { pt3dadd( 1.65132, -40.847, 6.8898, 0.83 ) }
    dend_18 { pt3dadd( 4.36043, -41.9266, 8.44968, 0.83 ) }
    dend_18 { pt3dadd( 6.62407, -42.8401, 9.82606, 0.83 ) }
    dend_18 { pt3dadd( 10.9459, -44.5263, 12.706, 0.55 ) }
    dend_18 { pt3dadd( 13.145, -45.3687, 14.2833, 0.55 ) }
    dend_18 { pt3dadd( 16.7016, -46.6664, 17.0121, 0.55 ) }
    dend_18 { pt3dadd( 18.8745, -47.5289, 18.8561, 0.55 ) }
    dend_18 { pt3dadd( 19.9873, -48.0392, 19.8703, 0.83 ) }
    dend_18 { pt3dadd( 21.1698, -48.5963, 20.9688, 0.55 ) }
    dend_18 { pt3dadd( 22.1537, -49.1589, 21.7752, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 86/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.17215, -37.4747, 3.6053, 1.11 ) }
    dend_7 { pt3dadd( -5.90079, -41.0044, 5.14133, 1.11 ) }
    dend_7 { pt3dadd( -5.82889, -41.9396, 5.54831, 1.11 ) }
    dend_7 { pt3dadd( -5.59916, -44.9277, 6.84867, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 90/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -22.7402, -39.9642, 7.6026, 0.83 ) }
    dend_3 { pt3dadd( -23.6502, -41.3597, 7.95696, 0.83 ) }
    dend_3 { pt3dadd( -24.7248, -43.0074, 8.3754, 1.11 ) }
    dend_3 { pt3dadd( -25.7492, -44.5781, 8.77428, 0.83 ) }
    dend_3 { pt3dadd( -27.0356, -46.5507, 9.27521, 0.83 ) }
    dend_3 { pt3dadd( -28.4254, -48.6817, 9.81637, 1.11 ) }
    dend_3 { pt3dadd( -28.6374, -49.0068, 9.89894, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 97/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -22.7402, -39.9642, 7.6026, 0.55 ) }
    dend_2 { pt3dadd( -23.6063, -39.9583, 7.513, 0.55 ) }
    dend_2 { pt3dadd( -25.5704, -39.945, 7.3098, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( -26.9265, -39.9357, 7.16951, 0.55 ) }
    dend_2 { pt3dadd( -27.7128, -39.9304, 7.08816, 0.83 ) }
    dend_2 { pt3dadd( -29.2814, -39.9197, 6.92589, 0.55 ) }
    dend_2 { pt3dadd( -30.1822, -39.9135, 6.83269, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 4/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 12.8095, 118.079, 4.9843, 0.55 ) }
    dend_40 { pt3dadd( 13.1802, 120.897, 4.15637, 0.55 ) }
    dend_40 { pt3dadd( 13.2397, 123.157, 3.66073, 0.55 ) }
    dend_40 { pt3dadd( 13.1215, 125.933, 3.10483, 0.55 ) }
    dend_40 { pt3dadd( 12.8457, 128.22, 2.78137, 0.55 ) }
    dend_40 { pt3dadd( 12.4601, 130.949, 2.53649, 0.55 ) }
    dend_40 { pt3dadd( 11.9235, 133.934, 2.37759, 0.55 ) }
    dend_40 { pt3dadd( 10.6116, 138.634, 2.44262, 0.55 ) }
    dend_40 { pt3dadd( 9.97846, 140.44, 2.61414, 0.55 ) }
    dend_40 { pt3dadd( 8.76012, 143.455, 3.13854, 0.55 ) }
    dend_40 { pt3dadd( 8.01627, 145.273, 3.64448, 0.55 ) }
    dend_40 { pt3dadd( 7.10246, 147.645, 4.50474, 0.55 ) }
    dend_40 { pt3dadd( 6.34766, 149.863, 5.35498, 0.55 ) }
    dend_40 { pt3dadd( 6.0992, 150.922, 5.6952, 0.28 ) }
    dend_40 { pt3dadd( 5.76831, 152.755, 6.20156, 0.55 ) }
    dend_40 { pt3dadd( 5.41282, 155.535, 6.80772, 0.28 ) }
    dend_40 { pt3dadd( 5.2086, 156.983, 7.10021, 0.55 ) }
    dend_40 { pt3dadd( 4.94621, 159.245, 7.48414, 0.28 ) }
    dend_40 { pt3dadd( 4.78709, 160.355, 7.64125, 0.55 ) }
    dend_40 { pt3dadd( 4.45544, 162.389, 7.94457, 0.55 ) }
    dend_40 { pt3dadd( 3.77464, 165.964, 8.52956, 0.55 ) }
    dend_40 { pt3dadd( 3.29649, 168.39, 8.95943, 0.55 ) }
    dend_40 { pt3dadd( 2.81651, 171.164, 9.46756, 0.55 ) }
    dend_40 { pt3dadd( 2.54366, 174.82, 10.0814, 0.28 ) }
    dend_40 { pt3dadd( 2.61718, 176.872, 10.3324, 0.55 ) }
    dend_40 { pt3dadd( 2.97039, 178.898, 10.4768, 0.28 ) }
    dend_40 { pt3dadd( 3.21203, 179.685, 10.4756, 0.55 ) }
    dend_40 { pt3dadd( 4.18729, 182.319, 10.3128, 0.55 ) }
    dend_40 { pt3dadd( 6.11854, 186.912, 9.75237, 0.55 ) }
    dend_40 { pt3dadd( 7.09004, 189.038, 9.34097, 0.55 ) }
    dend_40 { pt3dadd( 8.25565, 191.689, 8.6984, 0.55 ) }
    dend_40 { pt3dadd( 9.26909, 194.118, 8.0256, 0.55 ) }
    dend_40 { pt3dadd( 10.2458, 196.911, 7.18674, 0.55 ) }
    dend_40 { pt3dadd( 11.0425, 199.843, 6.30848, 0.55 ) }
    dend_40 { pt3dadd( 11.3953, 201.479, 5.78931, 0.55 ) }
    dend_40 { pt3dadd( 11.8712, 203.696, 4.99868, 0.28 ) }
    dend_40 { pt3dadd( 12.0381, 204.518, 4.6432, 0.28 ) }
    dend_40 { pt3dadd( 12.4392, 206.341, 3.76542, 0.55 ) }
    dend_40 { pt3dadd( 13.0089, 208.617, 2.61431, 0.55 ) }
    dend_40 { pt3dadd( 13.7908, 211.599, 0.971384, 0.28 ) }
    dend_40 { pt3dadd( 14.2639, 213.36, -0.0273743, 0.55 ) }
    dend_40 { pt3dadd( 14.5724, 214.402, -0.655746, 0.55 ) }
    dend_40 { pt3dadd( 15.1773, 216.175, -1.76766, 0.28 ) }
    dend_40 { pt3dadd( 15.6587, 217.361, -2.5638, 0.55 ) }
    dend_40 { pt3dadd( 16.6756, 219.79, -4.56229, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 49/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.8095, 118.079, 4.9843, 0.55 ) }
    dend_33 { pt3dadd( 13.0177, 120.131, 3.78392, 0.55 ) }
    dend_33 { pt3dadd( 13.2647, 122.564, 2.36099, 0.55 ) }
    dend_33 { pt3dadd( 13.3853, 123.752, 1.66603, 0.28 ) }
    dend_33 { pt3dadd( 13.5232, 125.112, 0.870759, 0.83 ) }
    dend_33 { pt3dadd( 13.8178, 128.014, -0.826668, 0.55 ) }
    dend_33 { pt3dadd( 13.9151, 128.973, -1.38772, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -38.2586, 191.578, 31.255, 0.28 ) }
    dend_29 { pt3dadd( -38.4649, 192.93, 31.5522, 0.28 ) }
    dend_29 { pt3dadd( -38.7562, 194.286, 31.7933, 0.28 ) }
    dend_29 { pt3dadd( -39.1143, 195.864, 32.0903, 0.55 ) }
    dend_29 { pt3dadd( -39.348, 197.232, 32.4484, 0.83 ) }
    dend_29 { pt3dadd( -39.5994, 199.078, 33.0242, 0.28 ) }
    dend_29 { pt3dadd( -39.7304, 200.318, 33.422, 0.55 ) }
    dend_29 { pt3dadd( -39.8324, 201.526, 33.8714, 0.28 ) }
    dend_29 { pt3dadd( -39.9274, 202.745, 34.3611, 0.83 ) }
    dend_29 { pt3dadd( -40.0356, 204.992, 35.3609, 0.83 ) }
    dend_29 { pt3dadd( -40.1336, 206.74, 36.1721, 0.28 ) }
    dend_29 { pt3dadd( -40.0803, 207.718, 36.9559, 0.55 ) }
    dend_29 { pt3dadd( -39.96, 208.787, 38.1456, 0.28 ) }
    dend_29 { pt3dadd( -39.8606, 209.506, 39.0697, 0.55 ) }
    dend_29 { pt3dadd( -39.7194, 210.563, 40.6064, 0.28 ) }
    dend_29 { pt3dadd( -39.6505, 211.068, 41.4994, 0.55 ) }
    dend_29 { pt3dadd( -39.0021, 213.788, 47.8479, 0.28 ) }
    dend_29 { pt3dadd( -38.8533, 214.206, 49.1226, 0.83 ) }
    dend_29 { pt3dadd( -38.5633, 214.651, 51.0252, 0.83 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -38.2586, 191.578, 31.255, 0.28 ) }
    dend_28 { pt3dadd( -38.7029, 193.394, 33.8938, 0.28 ) }
    dend_28 { pt3dadd( -39.0543, 194.892, 35.9132, 0.55 ) }
    dend_28 { pt3dadd( -39.6286, 197.326, 39.0027, 0.28 ) }
    dend_28 { pt3dadd( -39.7279, 197.747, 39.5367, 0.55 ) }
    dend_28 { pt3dadd( -39.9866, 198.843, 40.9284, 0.28 ) }
    dend_28 { pt3dadd( -40.2461, 199.943, 42.3238, 0.55 ) }
    dend_28 { pt3dadd( -40.647, 201.874, 44.5146, 0.28 ) }
    dend_28 { pt3dadd( -41.0311, 203.575, 46.0898, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 84/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 22.1537, -49.1589, 21.7752, 0.55 ) }
    dend_22 { pt3dadd( 24.0572, -49.429, 20.3862, 0.55 ) }
    dend_22 { pt3dadd( 25.2492, -49.4816, 19.3625, 0.55 ) }
    dend_22 { pt3dadd( 30.1793, -49.4851, 14.7364, 0.55 ) }
    dend_22 { pt3dadd( 31.4488, -49.4515, 13.4909, 0.55 ) }
    dend_22 { pt3dadd( 34.6077, -49.4644, 10.5156, 0.83 ) }
    dend_22 { pt3dadd( 36.2678, -49.5164, 9.03419, 0.55 ) }
    dend_22 { pt3dadd( 39.1599, -49.5677, 6.54686, 0.55 ) }
    dend_22 { pt3dadd( 41.7072, -49.679, 4.46362, 0.83 ) }
    dend_22 { pt3dadd( 43.7274, -49.8301, 3.03184, 0.55 ) }
    dend_22 { pt3dadd( 46.3474, -50.2214, 1.27646, 0.55 ) }
    dend_22 { pt3dadd( 48.7913, -50.8195, -0.130999, 0.55 ) }
    dend_22 { pt3dadd( 50.5216, -51.3896, -0.940878, 0.83 ) }
    dend_22 { pt3dadd( 52.5538, -52.1697, -1.69419, 0.55 ) }
    dend_22 { pt3dadd( 53.8756, -52.7123, -2.13019, 0.55 ) }
    dend_22 { pt3dadd( 56.6866, -53.9358, -3.02158, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( 59.211, -55.032, -3.92421, 0.55 ) }
    dend_22 { pt3dadd( 61.1546, -55.9928, -4.62252, 2.49 ) }
    dend_22 { pt3dadd( 61.1811, -56.0073, -4.63243, 2.49 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 3/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 22.1537, -49.1589, 21.7752, 0.83 ) }
    dend_19 { pt3dadd( 22.6533, -49.9722, 22.1693, 0.83 ) }
    dend_19 { pt3dadd( 23.1677, -51.2375, 22.5713, 0.83 ) }
    dend_19 { pt3dadd( 23.6647, -52.7981, 22.9498, 0.28 ) }
    dend_19 { pt3dadd( 23.9249, -53.5689, 23.1222, 0.83 ) }
    dend_19 { pt3dadd( 24.2815, -54.6623, 23.394, 0.83 ) }
    dend_19 { pt3dadd( 24.6582, -55.7631, 23.6835, 0.28 ) }
    dend_19 { pt3dadd( 25.152, -57.4079, 24.0812, 0.55 ) }
    dend_19 { pt3dadd( 25.5194, -58.4784, 24.3377, 0.55 ) }
    dend_19 { pt3dadd( 26.026, -59.5584, 24.8747, 0.55 ) }
    dend_19 { pt3dadd( 26.6708, -60.551, 25.6995, 0.28 ) }
    dend_19 { pt3dadd( 27.3708, -61.4863, 26.7221, 0.55 ) }
    dend_19 { pt3dadd( 27.7792, -61.9546, 27.4166, 0.55 ) }
    dend_19 { pt3dadd( 28.6192, -62.8368, 28.9927, 0.55 ) }
    dend_19 { pt3dadd( 30.8448, -65.0122, 33.4195, 0.55 ) }
    dend_19 { pt3dadd( 31.4994, -65.6243, 34.8294, 0.55 ) }
    dend_19 { pt3dadd( 31.9816, -66.0282, 35.9102, 0.55 ) }
    dend_19 { pt3dadd( 32.8639, -66.7421, 38.1452, 0.55 ) }
    dend_19 { pt3dadd( 33.614, -67.3729, 40.2511, 0.28 ) }
    // Section: dend_17, id: dend_17, parent: dend_7 (entry count 22/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -5.59916, -44.9277, 6.84867, 0.55 ) }
    dend_17 { pt3dadd( -4.87236, -46.2688, 7.27098, 0.55 ) }
    dend_17 { pt3dadd( -4.05985, -48.0656, 7.88796, 0.83 ) }
    dend_17 { pt3dadd( -3.41269, -49.5648, 8.392, 0.28 ) }
    dend_17 { pt3dadd( -2.99265, -50.67, 8.80915, 0.83 ) }
    dend_17 { pt3dadd( -2.2009, -53.2109, 9.98784, 0.28 ) }
    dend_17 { pt3dadd( -1.89635, -54.2365, 10.4826, 0.83 ) }
    dend_17 { pt3dadd( -1.31413, -56.069, 11.4038, 0.55 ) }
    dend_17 { pt3dadd( -1.05029, -56.9807, 11.9016, 0.55 ) }
    dend_17 { pt3dadd( -0.592136, -58.9861, 13.0225, 0.55 ) }
    dend_17 { pt3dadd( -0.108989, -61.7099, 14.584, 0.28 ) }
    dend_17 { pt3dadd( 0.0604993, -63.001, 15.2874, 0.83 ) }
    dend_17 { pt3dadd( 0.284643, -64.4633, 16.1649, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.59916, -44.9277, 6.84867, 0.83 ) }
    dend_8 { pt3dadd( -4.78935, -46.0824, 6.30406, 0.83 ) }
    dend_8 { pt3dadd( -3.86006, -47.4075, 5.67909, 1.11 ) }
    dend_8 { pt3dadd( -2.65972, -49.1191, 4.87184, 0.55 ) }
    dend_8 { pt3dadd( -0.979632, -51.5147, 3.74195, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.6374, -49.0068, 9.89894, 0.28 ) }
    dend_5 { pt3dadd( -29.4071, -50.8343, 10.0842, 0.28 ) }
    dend_5 { pt3dadd( -29.6493, -51.343, 10.1342, 0.83 ) }
    dend_5 { pt3dadd( -30.9267, -53.5256, 10.264, 0.83 ) }
    dend_5 { pt3dadd( -31.8758, -54.8583, 10.2778, 0.55 ) }
    dend_5 { pt3dadd( -33.3099, -56.6234, 10.2213, 0.83 ) }
    dend_5 { pt3dadd( -34.3085, -57.755, 10.147, 0.83 ) }
    dend_5 { pt3dadd( -35.0044, -58.3855, 10.0738, 0.83 ) }
    dend_5 { pt3dadd( -36.4231, -59.3419, 9.84673, 0.28 ) }
    dend_5 { pt3dadd( -37.5448, -59.8717, 9.60064, 0.55 ) }
    dend_5 { pt3dadd( -38.1265, -60.0469, 9.42998, 0.28 ) }
    dend_5 { pt3dadd( -38.8712, -60.1897, 9.18088, 0.55 ) }
    dend_5 { pt3dadd( -40.2573, -60.5429, 8.49982, 0.28 ) }
    dend_5 { pt3dadd( -41.396, -60.9766, 7.81422, 0.55 ) }
    dend_5 { pt3dadd( -41.8862, -61.2193, 7.47494, 0.28 ) }
    dend_5 { pt3dadd( -43.3737, -62.1016, 6.34452, 0.55 ) }
    dend_5 { pt3dadd( -45.3028, -63.3233, 5.20954, 0.55 ) }
    dend_5 { pt3dadd( -48.201, -65.4271, 3.96305, 0.55 ) }
    dend_5 { pt3dadd( -49.5361, -66.6338, 3.67088, 0.55 ) }
    dend_5 { pt3dadd( -50.3575, -67.5526, 3.68397, 0.28 ) }
    dend_5 { pt3dadd( -50.7338, -68.0527, 3.76466, 0.83 ) }
    dend_5 { pt3dadd( -54.0136, -73.0476, 5.01267, 0.55 ) }
    dend_5 { pt3dadd( -54.7609, -74.2176, 5.405, 0.83 ) }
    dend_5 { pt3dadd( -56.5282, -76.9307, 6.43312, 0.83 ) }
    dend_5 { pt3dadd( -58.0178, -79.1984, 7.21046, 0.28 ) }
    dend_5 { pt3dadd( -58.9444, -80.6003, 7.60215, 0.28 ) }
    dend_5 { pt3dadd( -60.0891, -82.2467, 7.97897, 0.55 ) }
    dend_5 { pt3dadd( -62.2029, -85.276, 8.40393, 0.28 ) }
    dend_5 { pt3dadd( -63.3015, -86.6922, 8.60667, 0.55 ) }
    dend_5 { pt3dadd( -64.0656, -87.5685, 8.72725, 0.55 ) }
    dend_5 { pt3dadd( -65.5132, -88.9976, 8.88643, 0.83 ) }
    dend_5 { pt3dadd( -67.7946, -90.9589, 8.96662, 0.55 ) }
    dend_5 { pt3dadd( -69.2224, -92.0681, 8.90557, 0.55 ) }
    dend_5 { pt3dadd( -70.7585, -93.0707, 8.59809, 0.28 ) }
    dend_5 { pt3dadd( -72.2195, -93.8459, 8.14903, 0.55 ) }
    dend_5 { pt3dadd( -73.1428, -94.2598, 7.7538, 0.55 ) }
    dend_5 { pt3dadd( -74.8522, -94.9451, 6.84092, 0.28 ) }
    dend_5 { pt3dadd( -75.9105, -95.3516, 6.26153, 0.55 ) }
    dend_5 { pt3dadd( -77.6995, -96.0124, 5.38899, 0.28 ) }
    dend_5 { pt3dadd( -79.1602, -96.5779, 4.73594, 0.83 ) }
    dend_5 { pt3dadd( -81.4162, -97.4882, 3.78827, 0.28 ) }
    dend_5 { pt3dadd( -83.3762, -98.3882, 3.02092, 0.83 ) }
    dend_5 { pt3dadd( -85.6405, -99.5148, 2.24581, 0.28 ) }
    dend_5 { pt3dadd( -86.8378, -100.178, 1.84571, 0.55 ) }
    dend_5 { pt3dadd( -87.8602, -100.865, 1.5282, 0.28 ) }
    dend_5 { pt3dadd( -89.4251, -102.051, 1.09814, 0.55 ) }
    dend_5 { pt3dadd( -90.7982, -103.201, 0.758002, 0.28 ) }
    dend_5 { pt3dadd( -92.2459, -104.563, 0.483493, 0.55 ) }
    dend_5 { pt3dadd( -93.1822, -105.548, 0.340871, 0.28 ) }
    dend_5 { pt3dadd( -94.9176, -107.473, 0.170759, 0.83 ) }
    dend_5 { pt3dadd( -96.7474, -109.606, 0.120048, 0.55 ) }
    dend_5 { pt3dadd( -97.2452, -110.222, 0.141851, 0.55 ) }
    dend_5 { pt3dadd( -99.3752, -112.79, 0.370306, 0.28 ) }
    dend_5 { pt3dadd( -100.665, -114.37, 0.616238, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 94/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -28.6374, -49.0068, 9.89894, 0.55 ) }
    dend_4 { pt3dadd( -31.3215, -51.9938, 9.22282, 0.55 ) }
    dend_4 { pt3dadd( -32.4183, -53.1566, 9.09873, 0.55 ) }
    dend_4 { pt3dadd( -34.4641, -55.0524, 8.70893, 0.83 ) }
    dend_4 { pt3dadd( -36.4097, -56.794, 8.27205, 0.55 ) }
    dend_4 { pt3dadd( -37.2019, -57.5632, 8.01587, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -39.6688, -60.1292, 7.08002, 0.55 ) }
    dend_4 { pt3dadd( -41.2119, -61.7191, 6.4875, 1.11 ) }
    dend_4 { pt3dadd( -43.618, -64.3019, 5.30839, 0.55 ) }
    dend_4 { pt3dadd( -44.7528, -65.5389, 4.6869, 1.11 ) }
    dend_4 { pt3dadd( -46.9358, -68.0285, 3.32374, 0.55 ) }
    dend_4 { pt3dadd( -47.6015, -68.8426, 2.85696, 1.11 ) }
    dend_4 { pt3dadd( -49.5056, -71.3986, 1.43083, 0.28 ) }
    dend_4 { pt3dadd( -49.9801, -71.9577, 1.12272, 0.55 ) }
    dend_4 { pt3dadd( -51.511, -73.5949, 0.25373, 0.28 ) }
    dend_4 { pt3dadd( -52.3167, -74.335, -0.173712, 0.55 ) }
    dend_4 { pt3dadd( -53.4822, -75.2968, -0.777041, 0.55 ) }
    dend_4 { pt3dadd( -56.2611, -77.563, -2.29191, 0.55 ) }
    dend_4 { pt3dadd( -58.389, -79.4642, -3.64371, 1.11 ) }
    dend_4 { pt3dadd( -60.6362, -81.5821, -5.23024, 0.55 ) }
    dend_4 { pt3dadd( -61.5946, -82.5342, -5.94898, 1.11 ) }
    dend_4 { pt3dadd( -63.4965, -84.4237, -7.39542, 0.28 ) }
    dend_4 { pt3dadd( -64.1527, -85.0329, -7.87699, 0.83 ) }
    dend_4 { pt3dadd( -66.6324, -87.302, -9.71478, 0.28 ) }
    dend_4 { pt3dadd( -67.5859, -88.183, -10.3668, 0.83 ) }
    dend_4 { pt3dadd( -69.1415, -89.5187, -11.402, 0.83 ) }
    dend_4 { pt3dadd( -71.9486, -91.5939, -13.1406, 0.28 ) }
    dend_4 { pt3dadd( -73.8174, -92.8822, -14.2395, 0.83 ) }
    dend_4 { pt3dadd( -77.4273, -95.2066, -16.2998, 0.28 ) }
    dend_4 { pt3dadd( -79.0285, -96.1343, -17.1493, 0.83 ) }
    dend_4 { pt3dadd( -81.2084, -97.3935, -18.3608, 0.28 ) }
    dend_4 { pt3dadd( -83.5626, -98.6502, -19.6911, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 26/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 13.9151, 128.973, -1.38772, 0.55 ) }
    dend_35 { pt3dadd( 13.7257, 129.793, -1.71927, 0.55 ) }
    dend_35 { pt3dadd( 13.5929, 130.412, -1.94644, 0.55 ) }
    dend_35 { pt3dadd( 13.4674, 131.156, -2.17868, 0.83 ) }
    dend_35 { pt3dadd( 13.3517, 131.954, -2.40108, 0.28 ) }
    dend_35 { pt3dadd( 13.2357, 132.74, -2.60887, 0.55 ) }
    dend_35 { pt3dadd( 13.162, 133.248, -2.72652, 0.83 ) }
    dend_35 { pt3dadd( 13.0412, 134.177, -2.90894, 0.28 ) }
    dend_35 { pt3dadd( 12.98, 135.145, -3.06367, 0.55 ) }
    dend_35 { pt3dadd( 12.9721, 135.688, -3.13046, 0.55 ) }
    dend_35 { pt3dadd( 12.9811, 136.169, -3.17294, 0.55 ) }
    dend_35 { pt3dadd( 13.0189, 137.027, -3.23644, 0.28 ) }
    dend_35 { pt3dadd( 13.0574, 137.627, -3.27083, 0.55 ) }
    dend_35 { pt3dadd( 13.1516, 138.586, -3.3413, 0.28 ) }
    dend_35 { pt3dadd( 13.1886, 138.884, -3.36725, 0.55 ) }
    dend_35 { pt3dadd( 13.3527, 139.799, -3.45111, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 42/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 13.9151, 128.973, -1.38772, 0.28 ) }
    dend_34 { pt3dadd( 11.8759, 128.648, -2.27716, 0.28 ) }
    dend_34 { pt3dadd( 11.0025, 128.509, -2.65809, 0.28 ) }
    dend_34 { pt3dadd( 9.89888, 128.333, -3.13942, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 61.1811, -56.0073, -4.63243, 0.28 ) }
    dend_24 { pt3dadd( 63.6377, -58.0945, -6.02614, 0.28 ) }
    dend_24 { pt3dadd( 64.186, -58.521, -6.38455, 0.55 ) }
    dend_24 { pt3dadd( 66.1097, -59.926, -7.5701, 0.28 ) }
    dend_24 { pt3dadd( 67.7232, -61.004, -8.53758, 0.55 ) }
    dend_24 { pt3dadd( 69.342, -61.9587, -9.47717, 0.55 ) }
    dend_24 { pt3dadd( 72.3828, -63.6181, -11.0928, 0.28 ) }
    dend_24 { pt3dadd( 73.7628, -64.2261, -11.793, 0.55 ) }
    dend_24 { pt3dadd( 75.6463, -65.0151, -12.7207, 0.28 ) }
    dend_24 { pt3dadd( 76.7241, -65.4571, -13.143, 0.55 ) }
    dend_24 { pt3dadd( 80.8652, -67.1919, -14.4718, 0.28 ) }
    dend_24 { pt3dadd( 82.6497, -67.9952, -15.0388, 0.83 ) }
    dend_24 { pt3dadd( 86.0888, -69.7097, -16.0806, 0.28 ) }
    dend_24 { pt3dadd( 87.0448, -70.2151, -16.384, 1.38 ) }
    dend_24 { pt3dadd( 91.2031, -72.4836, -17.9128, 0.28 ) }
    dend_24 { pt3dadd( 91.8568, -72.8542, -18.1546, 0.55 ) }
    dend_24 { pt3dadd( 95.2479, -74.8265, -19.41, 0.28 ) }
    dend_24 { pt3dadd( 96.3769, -75.4919, -19.8388, 1.66 ) }
    dend_24 { pt3dadd( 99.8104, -77.5522, -21.1249, 0.28 ) }
    dend_24 { pt3dadd( 101.137, -78.3626, -21.6813, 0.55 ) }
    dend_24 { pt3dadd( 102.749, -79.3542, -22.4658, 0.28 ) }
    dend_24 { pt3dadd( 103.533, -79.7953, -22.84, 0.55 ) }
    dend_24 { pt3dadd( 105.045, -80.4942, -23.5148, 0.28 ) }
    dend_24 { pt3dadd( 105.569, -80.7065, -23.9111, 0.83 ) }
    dend_24 { pt3dadd( 108.009, -81.6833, -26.5235, 0.28 ) }
    dend_24 { pt3dadd( 108.667, -81.9544, -27.3769, 0.55 ) }
    dend_24 { pt3dadd( 110.671, -82.6847, -30.1767, 0.28 ) }
    dend_24 { pt3dadd( 111.917, -83.1472, -31.9898, 1.11 ) }
    dend_24 { pt3dadd( 117.022, -85.0285, -39.0757, 0.28 ) }
    dend_24 { pt3dadd( 118.175, -85.4566, -40.5556, 0.55 ) }
    dend_24 { pt3dadd( 120.054, -86.1559, -42.8436, 0.28 ) }
    dend_24 { pt3dadd( 122.391, -87.1204, -45.5383, 0.83 ) }
    dend_24 { pt3dadd( 124.934, -88.287, -48.2516, 0.28 ) }
    dend_24 { pt3dadd( 127.035, -89.2838, -50.3343, 0.83 ) }
    dend_24 { pt3dadd( 133.883, -92.3501, -56.0181, 0.28 ) }
    dend_24 { pt3dadd( 134.7, -92.7138, -56.656, 0.55 ) }
    dend_24 { pt3dadd( 138.033, -94.2031, -59.1957, 0.28 ) }
    dend_24 { pt3dadd( 138.624, -94.484, -59.6554, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 61.1811, -56.0073, -4.63243, 0.28 ) }
    dend_23 { pt3dadd( 62.9094, -55.4449, -2.98887, 0.28 ) }
    dend_23 { pt3dadd( 64.1006, -55.0816, -2.53531, 0.55 ) }
    dend_23 { pt3dadd( 65.2431, -54.7326, -2.2755, 0.28 ) }
    dend_23 { pt3dadd( 65.9565, -54.5373, -2.13088, 0.55 ) }
    dend_23 { pt3dadd( 68.7964, -53.8368, -1.60667, 0.28 ) }
    dend_23 { pt3dadd( 70.9659, -53.4147, -1.19492, 0.83 ) }
    dend_23 { pt3dadd( 75.9356, -52.5227, -0.706341, 0.28 ) }
    dend_23 { pt3dadd( 76.5172, -52.4259, -0.688328, 0.55 ) }
    dend_23 { pt3dadd( 78.0047, -52.2228, -0.742721, 0.28 ) }
    dend_23 { pt3dadd( 78.7389, -52.1401, -0.829214, 0.83 ) }
    dend_23 { pt3dadd( 80.5637, -51.9486, -1.32303, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 96/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 33.614, -67.3729, 40.2511, 0.55 ) }
    dend_21 { pt3dadd( 34.9982, -68.5197, 41.0177, 0.55 ) }
    dend_21 { pt3dadd( 35.6872, -69.1008, 41.4122, 0.55 ) }
    dend_21 { pt3dadd( 37.3058, -70.491, 42.5266, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_21 { pt3dadd( 38.8763, -71.8136, 43.6904, 0.83 ) }
    dend_21 { pt3dadd( 40.3833, -73.0829, 44.8073, 0.28 ) }
    dend_21 { pt3dadd( 41.4199, -73.9559, 45.5754, 0.28 ) }
    dend_21 { pt3dadd( 41.7871, -74.2877, 45.8478, 0.55 ) }
    dend_21 { pt3dadd( 43.1771, -75.501, 47.0517, 0.28 ) }
    dend_21 { pt3dadd( 43.4483, -75.7535, 47.3752, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 6/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 33.614, -67.3729, 40.2511, 0.28 ) }
    dend_20 { pt3dadd( 33.67, -68.6507, 40.699, 0.28 ) }
    dend_20 { pt3dadd( 33.706, -69.4731, 40.9873, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -0.979632, -51.5147, 3.74195, 0.55 ) }
    dend_16 { pt3dadd( -0.521205, -53.1514, 4.10486, 0.55 ) }
    dend_16 { pt3dadd( 0.0827763, -54.7259, 4.58448, 0.55 ) }
    dend_16 { pt3dadd( 0.31606, -55.2517, 4.835, 0.55 ) }
    dend_16 { pt3dadd( 0.80611, -56.4118, 5.42547, 0.28 ) }
    dend_16 { pt3dadd( 1.10257, -57.0898, 5.80792, 0.83 ) }
    dend_16 { pt3dadd( 2.01233, -59.096, 6.96213, 0.28 ) }
    dend_16 { pt3dadd( 2.68447, -60.5416, 7.93206, 0.83 ) }
    dend_16 { pt3dadd( 3.93283, -63.3976, 9.83896, 0.28 ) }
    dend_16 { pt3dadd( 4.23186, -64.1784, 10.368, 0.83 ) }
    dend_16 { pt3dadd( 4.94982, -66.2429, 11.7428, 0.28 ) }
    dend_16 { pt3dadd( 5.26078, -67.2618, 12.3775, 0.83 ) }
    dend_16 { pt3dadd( 5.7688, -69.2368, 13.5243, 0.28 ) }
    dend_16 { pt3dadd( 6.3313, -71.9149, 14.9945, 0.83 ) }
    dend_16 { pt3dadd( 6.72265, -74.1049, 16.063, 0.55 ) }
    dend_16 { pt3dadd( 6.89139, -75.1174, 16.5476, 0.55 ) }
    dend_16 { pt3dadd( 7.04097, -76.1324, 17.0023, 1.11 ) }
    dend_16 { pt3dadd( 7.43657, -78.6424, 18.136, 0.55 ) }
    dend_16 { pt3dadd( 7.73052, -79.9775, 18.7055, 0.28 ) }
    dend_16 { pt3dadd( 7.8137, -80.2058, 18.814, 0.55 ) }
    dend_16 { pt3dadd( 8.52016, -81.8908, 19.4791, 0.28 ) }
    dend_16 { pt3dadd( 8.89416, -82.6221, 19.7846, 0.83 ) }
    dend_16 { pt3dadd( 9.7009, -83.9262, 20.3327, 0.28 ) }
    dend_16 { pt3dadd( 10.3718, -84.802, 20.7284, 0.55 ) }
    dend_16 { pt3dadd( 11.7294, -86.4648, 21.5294, 0.55 ) }
    dend_16 { pt3dadd( 13.4456, -88.5087, 22.4905, 0.55 ) }
    dend_16 { pt3dadd( 14.7415, -89.9947, 23.1469, 0.55 ) }
    dend_16 { pt3dadd( 15.3686, -90.7154, 23.4668, 0.55 ) }
    dend_16 { pt3dadd( 17.6947, -93.1908, 24.5855, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 38/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -0.979632, -51.5147, 3.74195, 0.55 ) }
    dend_9 { pt3dadd( -1.97391, -52.9926, 3.28014, 0.55 ) }
    dend_9 { pt3dadd( -2.23436, -53.6425, 3.09061, 0.83 ) }
    dend_9 { pt3dadd( -2.48291, -54.5388, 2.88051, 0.55 ) }
    dend_9 { pt3dadd( -2.65149, -55.3401, 2.72407, 0.83 ) }
    dend_9 { pt3dadd( -2.95745, -56.7943, 2.44015, 0.28 ) }
    dend_9 { pt3dadd( -3.12032, -57.5685, 2.289, 0.83 ) }
    dend_9 { pt3dadd( -3.40688, -59.8192, 1.89087, 0.83 ) }
    dend_9 { pt3dadd( -3.53663, -61.517, 1.58455, 0.28 ) }
    dend_9 { pt3dadd( -3.55275, -62.9267, 1.34865, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 48/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 13.3527, 139.799, -3.45111, 0.55 ) }
    dend_39 { pt3dadd( 13.0514, 142.424, -4.70785, 0.55 ) }
    dend_39 { pt3dadd( 12.7988, 144.304, -5.7757, 0.55 ) }
    dend_39 { pt3dadd( 12.6404, 145.649, -6.67946, 0.55 ) }
    dend_39 { pt3dadd( 12.5014, 147.311, -7.94839, 0.28 ) }
    dend_39 { pt3dadd( 12.4133, 149.635, -9.69648, 0.55 ) }
    dend_39 { pt3dadd( 12.3908, 150.994, -10.7677, 0.55 ) }
    dend_39 { pt3dadd( 12.461, 153.226, -12.5806, 0.28 ) }
    dend_39 { pt3dadd( 12.5256, 154.81, -13.8796, 1.11 ) }
    dend_39 { pt3dadd( 12.7005, 156.288, -15.0505, 0.55 ) }
    dend_39 { pt3dadd( 13.1602, 158.35, -16.6872, 0.55 ) }
    dend_39 { pt3dadd( 13.7568, 160.56, -18.5221, 0.55 ) }
    dend_39 { pt3dadd( 14.186, 161.823, -19.4678, 0.28 ) }
    dend_39 { pt3dadd( 14.5784, 162.622, -20.0603, 0.55 ) }
    dend_39 { pt3dadd( 16.117, 165.458, -22.4051, 0.28 ) }
    dend_39 { pt3dadd( 16.5415, 166.273, -23.1291, 0.83 ) }
    dend_39 { pt3dadd( 17.4363, 168.084, -24.7737, 0.55 ) }
    dend_39 { pt3dadd( 18.1737, 169.674, -26.2448, 0.55 ) }
    dend_39 { pt3dadd( 19.4817, 172.877, -29.1637, 0.55 ) }
    dend_39 { pt3dadd( 20.1979, 174.947, -31.0033, 0.28 ) }
    dend_39 { pt3dadd( 20.7844, 177.048, -32.7989, 0.28 ) }
    dend_39 { pt3dadd( 21.2432, 178.743, -34.1877, 0.55 ) }
    dend_39 { pt3dadd( 22.1828, 182.069, -36.8011, 0.28 ) }
    dend_39 { pt3dadd( 22.6665, 183.992, -38.321, 0.55 ) }
    dend_39 { pt3dadd( 23.1287, 186.206, -39.8959, 0.55 ) }
    dend_39 { pt3dadd( 23.4537, 187.704, -40.8997, 0.28 ) }
    dend_39 { pt3dadd( 23.7232, 188.904, -41.7497, 0.55 ) }
    dend_39 { pt3dadd( 24.1335, 191.02, -43.2588, 0.28 ) }
    dend_39 { pt3dadd( 24.4109, 192.793, -44.3553, 0.55 ) }
    dend_39 { pt3dadd( 24.6629, 194.281, -45.2299, 0.28 ) }
    dend_39 { pt3dadd( 24.8712, 195.216, -45.7535, 0.55 ) }
    dend_39 { pt3dadd( 25.3465, 196.917, -46.728, 0.28 ) }
    dend_39 { pt3dadd( 25.5601, 197.633, -47.1369, 0.55 ) }
    dend_39 { pt3dadd( 26.1018, 199.069, -47.9446, 0.55 ) }
    dend_39 { pt3dadd( 27.0637, 200.859, -49.0252, 0.55 ) }
    dend_39 { pt3dadd( 28.6356, 203.139, -50.5691, 0.28 ) }
    dend_39 { pt3dadd( 29.0592, 203.67, -50.9372, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 13.3527, 139.799, -3.45111, 0.55 ) }
    dend_36 { pt3dadd( 13.5303, 140.525, -3.71417, 0.55 ) }
    dend_36 { pt3dadd( 14.3445, 143.851, -4.9198, 0.55 ) }
    dend_36 { pt3dadd( 14.7475, 145.498, -5.51659, 0.28 ) }
    dend_36 { pt3dadd( 15.2479, 147.542, -6.25748, 0.83 ) }
    dend_36 { pt3dadd( 16.1563, 151.254, -7.60273, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 91/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.55275, -62.9267, 1.34865, 0.83 ) }
    dend_11 { pt3dadd( -3.60858, -64.6829, 1.31756, 0.83 ) }
    dend_11 { pt3dadd( -3.63364, -65.4625, 1.31153, 1.11 ) }
    dend_11 { pt3dadd( -3.67876, -66.9966, 1.21918, 0.55 ) }
    dend_11 { pt3dadd( -3.74013, -69.18, 1.03048, 1.11 ) }
    dend_11 { pt3dadd( -3.82834, -70.4996, 0.919266, 0.55 ) }
    dend_11 { pt3dadd( -3.99311, -72.0436, 0.722537, 0.55 ) }
    dend_11 { pt3dadd( -4.10571, -73.1382, 0.5113, 0.83 ) }
    dend_11 { pt3dadd( -4.28895, -74.6644, 0.108297, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( -4.28895, -74.6644, 0.108297, 0.83 ) }
    dend_11 { pt3dadd( -4.73751, -76.2995, -0.670569, 0.83 ) }
    dend_11 { pt3dadd( -5.32287, -78.2645, -1.74283, 0.28 ) }
    dend_11 { pt3dadd( -5.59912, -79.1755, -2.27139, 0.83 ) }
    dend_11 { pt3dadd( -6.06065, -80.4314, -2.92002, 0.83 ) }
    dend_11 { pt3dadd( -6.72442, -82.0712, -3.71918, 0.28 ) }
    dend_11 { pt3dadd( -6.89882, -82.4792, -3.91615, 0.83 ) }
    dend_11 { pt3dadd( -7.22861, -83.2082, -4.26799, 0.83 ) }
    dend_11 { pt3dadd( -7.60575, -83.9581, -4.56648, 0.83 ) }
    dend_11 { pt3dadd( -8.36823, -85.4323, -5.11404, 0.83 ) }
    dend_11 { pt3dadd( -9.51151, -87.8706, -5.95414, 0.28 ) }
    dend_11 { pt3dadd( -9.67735, -88.3036, -6.09238, 0.55 ) }
    dend_11 { pt3dadd( -10.0801, -89.5026, -6.52697, 0.28 ) }
    dend_11 { pt3dadd( -10.4236, -90.5513, -6.93207, 0.83 ) }
    dend_11 { pt3dadd( -10.8172, -91.8767, -7.48943, 0.28 ) }
    dend_11 { pt3dadd( -11.0237, -92.6837, -7.82246, 0.83 ) }
    dend_11 { pt3dadd( -11.253, -93.9164, -8.20402, 0.83 ) }
    dend_11 { pt3dadd( -11.377, -95.6587, -8.474, 0.28 ) }
    dend_11 { pt3dadd( -11.3653, -96.3428, -8.47593, 0.55 ) }
    dend_11 { pt3dadd( -11.247, -97.4481, -8.338, 0.28 ) }
    dend_11 { pt3dadd( -11.008, -98.96, -7.97052, 0.83 ) }
    dend_11 { pt3dadd( -10.6251, -100.879, -7.17934, 0.28 ) }
    dend_11 { pt3dadd( -9.72108, -104.527, -5.27914, 0.83 ) }
    dend_11 { pt3dadd( -9.41313, -105.818, -4.53601, 0.28 ) }
    dend_11 { pt3dadd( -9.23053, -107.007, -3.87184, 0.83 ) }
    dend_11 { pt3dadd( -9.08207, -108.006, -3.27125, 0.83 ) }
    dend_11 { pt3dadd( -8.82022, -110.354, -1.86575, 0.28 ) }
    dend_11 { pt3dadd( -8.84493, -110.969, -1.53971, 0.83 ) }
    dend_11 { pt3dadd( -9.10886, -112.548, -0.933862, 0.83 ) }
    dend_11 { pt3dadd( -9.43273, -114.587, 0.0849769, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 30/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -3.55275, -62.9267, 1.34865, 0.28 ) }
    dend_10 { pt3dadd( -2.54847, -64.4976, 0.171738, 0.28 ) }
    dend_10 { pt3dadd( -1.81476, -65.6453, -0.688094, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 33/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 16.1563, 151.254, -7.60273, 0.55 ) }
    dend_38 { pt3dadd( 16.3026, 153.04, -8.23621, 0.55 ) }
    dend_38 { pt3dadd( 16.4087, 154.675, -8.81111, 0.55 ) }
    dend_38 { pt3dadd( 16.6391, 156.468, -9.49713, 0.28 ) }
    dend_38 { pt3dadd( 16.7407, 157.646, -9.96033, 0.28 ) }
    dend_38 { pt3dadd( 16.7726, 158.302, -10.248, 0.55 ) }
    dend_38 { pt3dadd( 16.8418, 159.776, -10.896, 0.28 ) }
    dend_38 { pt3dadd( 16.9525, 160.963, -11.5529, 0.55 ) }
    dend_38 { pt3dadd( 17.0944, 162.834, -12.826, 0.28 ) }
    dend_38 { pt3dadd( 17.1641, 164.203, -13.8524, 0.55 ) }
    dend_38 { pt3dadd( 17.2362, 165.742, -15.0815, 0.55 ) }
    dend_38 { pt3dadd( 17.301, 167.374, -16.4965, 0.83 ) }
    dend_38 { pt3dadd( 17.3347, 169.826, -18.7648, 0.55 ) }
    dend_38 { pt3dadd( 17.3691, 170.637, -19.5796, 0.28 ) }
    dend_38 { pt3dadd( 17.3896, 171.189, -20.1339, 0.28 ) }
    dend_38 { pt3dadd( 17.4359, 171.567, -20.5354, 0.55 ) }
    dend_38 { pt3dadd( 17.5907, 172.892, -21.933, 0.28 ) }
    dend_38 { pt3dadd( 17.634, 173.401, -22.4743, 0.55 ) }
    dend_38 { pt3dadd( 17.6809, 174.627, -23.6072, 0.28 ) }
    dend_38 { pt3dadd( 17.6314, 175.585, -24.416, 0.55 ) }
    dend_38 { pt3dadd( 17.2533, 177.739, -26.1304, 0.28 ) }
    dend_38 { pt3dadd( 16.9897, 178.538, -26.7271, 0.55 ) }
    dend_38 { pt3dadd( 16.4753, 179.803, -27.7263, 0.28 ) }
    dend_38 { pt3dadd( 15.8828, 180.978, -28.7506, 0.55 ) }
    dend_38 { pt3dadd( 14.7908, 182.651, -30.1176, 0.28 ) }
    dend_38 { pt3dadd( 13.9741, 183.73, -30.9813, 0.83 ) }
    dend_38 { pt3dadd( 12.9147, 185.06, -32.0484, 0.55 ) }
    dend_38 { pt3dadd( 10.9966, 187.488, -34.1128, 0.28 ) }
    dend_38 { pt3dadd( 10.3603, 188.283, -34.8093, 0.55 ) }
    dend_38 { pt3dadd( 8.7275, 190.423, -36.8337, 0.28 ) }
    dend_38 { pt3dadd( 7.99737, 191.51, -37.9368, 0.55 ) }
    dend_38 { pt3dadd( 7.03224, 193.06, -39.4326, 0.28 ) }
    dend_38 { pt3dadd( 6.70192, 193.605, -39.8948, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 16.1563, 151.254, -7.60273, 0.55 ) }
    dend_37 { pt3dadd( 16.3622, 152.558, -7.78147, 0.55 ) }
    dend_37 { pt3dadd( 16.7374, 155.105, -8.14008, 0.28 ) }
    dend_37 { pt3dadd( 17.0054, 156.673, -8.45383, 0.55 ) }
    dend_37 { pt3dadd( 17.3751, 158.791, -8.91169, 0.28 ) }
    dend_37 { pt3dadd( 17.7006, 160.349, -9.27816, 0.55 ) }
    dend_37 { pt3dadd( 18.1028, 162.224, -9.72865, 0.28 ) }
    dend_37 { pt3dadd( 18.7587, 164.991, -10.5441, 0.55 ) }
    dend_37 { pt3dadd( 19.3903, 167.732, -11.4514, 0.28 ) }
    dend_37 { pt3dadd( 19.7661, 169.552, -12.0614, 0.55 ) }
    dend_37 { pt3dadd( 20.2271, 172.117, -12.8847, 0.28 ) }
    dend_37 { pt3dadd( 20.5682, 174.223, -13.5596, 0.55 ) }
    dend_37 { pt3dadd( 21.0555, 177.996, -14.7033, 0.28 ) }
    dend_37 { pt3dadd( 21.2876, 180.214, -15.3063, 0.55 ) }
    dend_37 { pt3dadd( 21.5149, 182.705, -15.9483, 0.28 ) }
    dend_37 { pt3dadd( 21.7092, 184.582, -16.4209, 0.28 ) }
    dend_37 { pt3dadd( 21.8279, 185.741, -16.6887, 0.28 ) }
    dend_37 { pt3dadd( 22.2795, 188.846, -17.427, 0.55 ) }
    dend_37 { pt3dadd( 22.6574, 191.074, -17.9101, 0.55 ) }
    dend_37 { pt3dadd( 23.184, 193.691, -18.4635, 0.28 ) }
    dend_37 { pt3dadd( 23.4115, 194.938, -18.7978, 0.28 ) }
    dend_37 { pt3dadd( 23.6981, 196.453, -19.2404, 0.28 ) }
    dend_37 { pt3dadd( 24.0367, 198.23, -19.7965, 0.28 ) }
    dend_37 { pt3dadd( 24.3618, 200.11, -20.45, 0.83 ) }
    dend_37 { pt3dadd( 24.5536, 202.568, -21.3343, 0.28 ) }
    dend_37 { pt3dadd( 24.4913, 205.293, -22.1381, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 92/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.43273, -114.587, 0.0849769, 0.55 ) }
    dend_13 { pt3dadd( -9.54349, -117.536, 0.156957, 0.55 ) }
    dend_13 { pt3dadd( -9.62155, -118.686, 0.186973, 0.55 ) }
    dend_13 { pt3dadd( -9.6979, -120.112, 0.290678, 0.83 ) }
    dend_13 { pt3dadd( -9.67522, -122.036, 0.400559, 0.83 ) }
    dend_13 { pt3dadd( -9.66914, -123.342, 0.478232, 0.55 ) }
    dend_13 { pt3dadd( -9.61421, -125.28, 0.665571, 0.83 ) }
    dend_13 { pt3dadd( -9.47788, -127.558, 0.936035, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( -9.28713, -129.903, 1.23738, 0.55 ) }
    dend_13 { pt3dadd( -9.02511, -132.63, 1.56077, 0.55 ) }
    dend_13 { pt3dadd( -8.68008, -136.034, 2.00497, 0.83 ) }
    dend_13 { pt3dadd( -8.34518, -139.098, 2.42686, 0.83 ) }
    dend_13 { pt3dadd( -8.08678, -141.365, 2.75471, 0.83 ) }
    dend_13 { pt3dadd( -7.68348, -144.353, 3.15877, 0.83 ) }
    dend_13 { pt3dadd( -7.45431, -146.444, 3.40864, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 7/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -9.43273, -114.587, 0.0849769, 0.55 ) }
    dend_12 { pt3dadd( -12.2494, -115.044, -1.12036, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 9/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.45431, -146.444, 3.40864, 0.83 ) }
    dend_15 { pt3dadd( -7.63568, -148.892, 4.53355, 0.83 ) }
    dend_15 { pt3dadd( -7.85507, -150.775, 5.51799, 0.83 ) }
    dend_15 { pt3dadd( -8.33707, -153.685, 7.10841, 0.83 ) }
    dend_15 { pt3dadd( -8.67817, -155.66, 8.12414, 0.28 ) }
    dend_15 { pt3dadd( -9.09765, -158.196, 9.42954, 0.83 ) }
    dend_15 { pt3dadd( -9.52415, -161.171, 10.8734, 0.83 ) }
    dend_15 { pt3dadd( -9.80919, -163.182, 11.8425, 0.28 ) }
    dend_15 { pt3dadd( -10.1442, -165.11, 12.6958, 0.83 ) }
    dend_15 { pt3dadd( -10.4581, -166.936, 13.3435, 0.55 ) }
    dend_15 { pt3dadd( -10.7103, -169.141, 13.9014, 0.83 ) }
    dend_15 { pt3dadd( -10.931, -172.11, 14.3994, 0.83 ) }
    dend_15 { pt3dadd( -11.0369, -174.403, 14.6483, 0.55 ) }
    dend_15 { pt3dadd( -11.1423, -176.779, 14.8334, 0.83 ) }
    dend_15 { pt3dadd( -11.3073, -180.112, 15.0115, 0.83 ) }
    dend_15 { pt3dadd( -11.6033, -183.273, 15.2493, 0.55 ) }
    dend_15 { pt3dadd( -11.7935, -184.772, 15.3599, 0.55 ) }
    dend_15 { pt3dadd( -12.2499, -187.599, 15.6258, 0.83 ) }
    dend_15 { pt3dadd( -12.7733, -190.341, 15.8723, 0.83 ) }
    dend_15 { pt3dadd( -13.2807, -192.56, 16.1913, 0.83 ) }
    dend_15 { pt3dadd( -14.2879, -195.965, 16.8573, 0.55 ) }
    dend_15 { pt3dadd( -14.6015, -196.854, 17.0596, 0.55 ) }
    dend_15 { pt3dadd( -15.2023, -198.449, 17.5241, 0.55 ) }
    dend_15 { pt3dadd( -15.9031, -200.095, 18.1035, 0.83 ) }
    dend_15 { pt3dadd( -17.3771, -203.619, 19.4808, 0.55 ) }
    dend_15 { pt3dadd( -18.0497, -205.351, 19.9995, 0.83 ) }
    dend_15 { pt3dadd( -18.6184, -206.993, 20.297, 0.83 ) }
    dend_15 { pt3dadd( -19.3628, -209.265, 20.5677, 0.28 ) }
    dend_15 { pt3dadd( -19.6868, -210.288, 20.6395, 0.28 ) }
    dend_15 { pt3dadd( -20.6746, -213.395, 20.8284, 0.83 ) }
    dend_15 { pt3dadd( -21.9185, -217.276, 20.7934, 0.55 ) }
    dend_15 { pt3dadd( -22.3857, -218.833, 20.8101, 0.55 ) }
    dend_15 { pt3dadd( -22.7782, -220.142, 20.7904, 0.28 ) }
    dend_15 { pt3dadd( -23.0546, -220.958, 20.7488, 0.55 ) }
    dend_15 { pt3dadd( -24.2567, -223.657, 20.5503, 0.28 ) }
    dend_15 { pt3dadd( -25.0372, -224.982, 20.4332, 0.83 ) }
    dend_15 { pt3dadd( -25.7162, -226.041, 20.4727, 0.83 ) }
    dend_15 { pt3dadd( -27.0843, -227.979, 20.4393, 0.28 ) }
    dend_15 { pt3dadd( -28.153, -229.373, 20.255, 0.83 ) }
    dend_15 { pt3dadd( -29.6815, -231.215, 19.6277, 0.28 ) }
    dend_15 { pt3dadd( -29.8761, -231.402, 19.489, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -7.45431, -146.444, 3.40864, 0.55 ) }
    dend_14 { pt3dadd( -4.67972, -147.202, 7.21045, 0.55 ) }
    dend_14 { pt3dadd( -3.05156, -147.523, 9.02048, 0.28 ) }
    dend_14 { pt3dadd( -2.59702, -147.591, 9.44669, 0.83 ) }
    dend_14 { pt3dadd( 0.497728, -147.857, 11.9458, 0.55 ) }
    dend_14 { pt3dadd( 0.734471, -147.852, 12.1218, 0.83 ) }
    dend_14 { pt3dadd( 2.07516, -147.825, 13.1188, 0.28 ) }
    dend_14 { pt3dadd( 3.73531, -147.714, 14.1358, 0.55 ) }
    dend_14 { pt3dadd( 4.46762, -147.582, 14.6215, 0.55 ) }
    dend_14 { pt3dadd( 5.54677, -147.309, 15.1812, 0.28 ) }
    dend_14 { pt3dadd( 7.51863, -146.622, 15.586, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_2 = new SectionList()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_42, dend_25, dend_0, dend_46, dend_43, dend_31, dend_26, dend_6, dend_1, dend_45, dend_44, dend_41, dend_32, dend_30, dend_27, dend_18, dend_7, dend_3, dend_2, dend_40, dend_33, dend_29, dend_28, dend_22, dend_19, dend_17, dend_8, dend_5, dend_4, dend_35, dend_34, dend_24, dend_23, dend_21, dend_20, dend_16, dend_9, dend_39, dend_36, dend_11, dend_10, dend_38, dend_37, dend_13, dend_12, dend_15, dend_14]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_46 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_44 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_32 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_27 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_40 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_5 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_16 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_39 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_37 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_15 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_42 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_43 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_6 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_31 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_8 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_3 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_9 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_17 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_10 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_19 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_20 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_21 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_12 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_34 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_23 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_13 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_36 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_28 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_42, dend_42, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_46 nseg = 9
    dend_26 nseg = 7
    dend_44 nseg = 13
    dend_41 nseg = 3
    dend_32 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 3
    dend_40 nseg = 5
    dend_22 nseg = 3
    dend_5 nseg = 5
    dend_4 nseg = 5
    dend_24 nseg = 5
    dend_16 nseg = 3
    dend_39 nseg = 5
    dend_11 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_15 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L23_DBC_b0d0b3615e_0_0


