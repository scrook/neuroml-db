// Cell: cACint209_L6_NBC_495063b057_0_0
/*
{
  "id" : "cACint209_L6_NBC_495063b057_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.69096, -9.75392, 0.0, 3.54463", "1.52222, -8.84351, 0.0, 6.43815", "1.35347, -7.93311, 0.0, 8.80214", "1.18473, -7.0227, 0.0, 10.0004", "1.01599, -6.11229, 0.0, 10.9716", "0.847242, -5.20188, 0.0, 11.7871", "0.678498, -4.29147, 0.0, 12.5324", "0.509755, -3.38107, 0.0, 13.2727", "0.341011, -2.47066, 0.0, 13.4566", "0.172268, -1.56025, 0.0, 13.5676", "0.00352426, -0.649843, 0.0, 13.7469", "-0.165219, 0.260565, 0.0, 13.8983", "-0.333963, 1.17097, 0.0, 14.0", "-0.502706, 2.08138, 0.0, 13.9192", "-0.67145, 2.99179, 0.0, 13.4728", "-0.840193, 3.9022, 0.0, 12.9681", "-1.00894, 4.8126, 0.0, 12.2669", "-1.17768, 5.72301, 0.0, 11.0106", "-1.34642, 6.63342, 0.0, 9.31796", "-1.51517, 7.54383, 0.0, 7.37652", "-1.68391, 8.45424, 0.0, 4.20409" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.62975, 7.11567, -1.86, 3.64", "-2.26889, 9.19776, -1.86, 3.64", "-3.5647, 13.4191, -1.86, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-1.38975, -7.07433, 8.54, 2.73", "-2.01311, -9.11307, 8.54, 2.73" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-4.41975, 1.36567, -4.58, 0.68", "-5.32493, -0.858383, -5.27799, 0.68", "-5.95524, -2.37233, -5.73783, 0.45", "-7.29644, -5.30252, -6.54536, 0.45", "-8.81285, -8.56262, -7.48067, 0.45", "-9.31738, -9.61376, -7.80874, 1.14", "-11.2302, -13.5753, -9.28238, 0.23", "-11.9029, -15.0193, -9.88491, 0.23", "-13.0287, -17.1902, -10.9088, 0.91", "-14.7603, -19.9219, -12.5408, 0.23", "-15.9915, -21.4763, -13.6931, 0.91", "-17.8713, -23.6556, -15.495, 0.23", "-18.8238, -24.6517, -16.4957, 0.23", "-20.1516, -26.0201, -17.978, 0.68", "-22.4931, -28.4775, -20.7412, 0.23", "-23.5283, -29.6388, -22.0095, 0.23", "-24.4892, -30.8661, -23.2026, 1.14", "-26.717, -34.1785, -25.9848, 0.23", "-27.4059, -35.4785, -27.0286, 0.23", "-28.0578, -37.0166, -28.2374, 1.14", "-29.1499, -39.6515, -30.3549, 0.23", "-29.7781, -41.0065, -31.655, 0.23", "-30.5901, -42.5534, -33.3404, 0.91", "-31.8407, -44.8137, -35.9438, 0.91", "-32.9723, -46.6423, -38.3143, 0.23", "-33.9593, -48.0263, -40.2265, 0.23", "-35.5711, -50.0541, -43.0979, 0.68", "-36.6749, -51.3792, -45.1036, 0.23", "-37.4458, -52.2431, -46.4432, 1.14", "-39.515, -54.4816, -49.6556, 0.23", "-40.1029, -55.213, -50.5465, 0.23", "-40.7049, -56.1597, -51.5146, 0.23", "-47.4883, -65.2881, -58.933, 0.23", "-54.0456, -74.9784, -65.8233, 0.23", "-59.2344, -83.1293, -75.3635, 0.23", "-65.1941, -89.0204, -86.0478, 0.23", "-72.7259, -96.7406, -94.2968, 0.23", "-83.0565, -101.747, -101.548, 0.23", "-92.6662, -107.267, -109.395, 0.23", "-102.044, -111.725, -118.144, 0.23", "-111.785, -117.786, -125.409, 0.23", "-119.764, -123.961, -134.496, 0.23", "-128.334, -131.645, -141.699, 0.23", "-137.351, -140.111, -147.302, 0.23", "-146.59, -147.68, -153.762, 0.23", "-155.421, -156.84, -158.503, 0.23", "-163.833, -167.183, -161.08, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "2.43025, -8.67433, 1.04, 1.14", "4.3343, -11.0301, -0.18306, 1.14", "5.971, -13.0552, -1.23439, 1.14", "7.55539, -15.0155, -2.25212, 1.14", "8.50614, -16.1919, -2.86284, 1.14", "9.38414, -17.2782, -3.42681, 1.59", "10.4305, -18.5729, -4.09895, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.95025, 5.36567, -1.12, 1.59", "3.93634, 7.25068, -1.12, 1.59", "4.97544, 9.23703, -1.12, 1.59", "6.67125, 12.4788, -1.12, 1.59", "7.65395, 14.3573, -1.12, 1.59", "9.08631, 17.0954, -1.12, 1.82" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999998479938421
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.68391, 8.45424, 0.0, 0.824119", "-4.41759, 23.203, 0.0, 0.824119", "-7.15127, 37.9518, 0.0, 0.824119" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-3.5647, 13.4191, -1.86, 0.68", "-4.83831, 13.7739, -1.5904, 0.68", "-5.73052, 14.0355, -1.41738, 0.68", "-6.95403, 14.3942, -1.18011, 1.14", "-7.6579, 14.6006, -1.04362, 0.23", "-9.29697, 15.0811, -0.725769, 0.23", "-10.2292, 15.3545, -0.544991, 0.91", "-11.8055, 15.7763, -0.191076, 1.82" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-3.5647, 13.4191, -1.86, 1.82", "-1.55691, 15.376, -2.84211, 1.82", "0.379132, 17.2748, -3.78098, 1.14", "1.8496, 18.7022, -4.46504, 0.68", "2.83997, 19.6327, -4.89247, 1.14", "5.44633, 22.0118, -6.01952, 0.45", "6.91956, 23.3186, -6.67111, 0.45", "7.82606, 24.0523, -7.06915, 1.59", "8.76642, 24.7711, -7.46836, 1.59", "10.1369, 25.801, -8.01308, 0.68", "11.7416, 26.9882, -8.64988, 0.68", "13.0329, 27.8954, -9.12376, 1.36", "14.3158, 28.7582, -9.60289, 2.05", "15.5336, 29.5397, -10.0863, 0.91", "16.8903, 30.4228, -10.6644, 1.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-2.01311, -9.11307, 8.54, 0.68", "-7.76453, -9.41365, 8.89024, 0.68", "-14.1052, -9.68335, 9.31604, 0.68", "-17.9786, -9.81099, 9.50782, 0.23", "-20.7299, -9.89483, 9.62599, 0.91", "-24.366, -10.0408, 9.77682, 0.91", "-27.8914, -10.1928, 9.87785, 0.23", "-30.6206, -10.3008, 9.91162, 0.23", "-35.1417, -10.5551, 9.94283, 0.68", "-38.4608, -10.8327, 9.91562, 0.68", "-41.8705, -11.1703, 9.7959, 0.23", "-45.5046, -11.6015, 9.59919, 0.68", "-48.1921, -11.9756, 9.43224, 0.68", "-53.0295, -12.7577, 9.15343, 0.23", "-56.8701, -13.4683, 8.99432, 0.23", "-59.6965, -14.0305, 8.90407, 0.68", "-61.7828, -14.4679, 8.96164, 0.68", "-64.7319, -15.1258, 9.21855, 0.68", "-68.5515, -15.9771, 9.713, 0.23", "-71.7895, -16.6438, 10.2823, 0.45", "-74.7057, -17.2147, 10.9706, 0.45", "-80.0987, -18.2749, 12.3893, 0.23", "-82.0847, -18.7006, 12.9945, 1.14", "-84.059, -19.1652, 13.6532, 1.14", "-88.2427, -20.2234, 15.1352, 0.23", "-91.3433, -21.1114, 16.236, 0.23", "-94.1698, -22.033, 17.1877, 0.91", "-99.1535, -23.7999, 18.682, 0.23", "-101.582, -24.6999, 19.3799, 1.14", "-102.657, -25.1071, 19.6703, 1.14", "-106.054, -26.3828, 20.4827, 0.23", "-109.064, -27.4201, 21.0639, 1.14", "-112.439, -28.4435, 21.6091, 0.23", "-115.38, -29.1661, 21.974, 1.14", "-117.131, -29.5426, 22.1979, 0.23", "-120.705, -30.2258, 22.6627, 0.23", "-123.1, -30.6591, 22.9924, 1.14", "-124.875, -30.9557, 23.2708, 1.14", "-129.398, -31.7743, 24.0404, 0.23", "-131.167, -32.1514, 24.477, 1.14", "-133.423, -32.6909, 25.1664, 1.14", "-136.064, -33.3629, 26.0982, 0.23", "-138.683, -34.1004, 27.2037, 0.91", "-141.499, -34.9668, 28.525, 0.23", "-146.324, -36.6312, 30.8546, 0.23", "-147.357, -37.0122, 31.3535, 1.14", "-150.245, -38.1208, 32.6242, 1.14", "-153.982, -39.6161, 34.0279, 0.23", "-155.907, -40.3933, 34.6173, 0.23", "-160.849, -42.3585, 36.0015, 0.68", "-164.286, -43.674, 36.8199, 0.23", "-167.885, -45.0677, 37.6667, 1.14", "-172.118, -46.7486, 38.6215, 0.23", "-175.713, -48.204, 39.442, 0.91", "-180.245, -50.0766, 40.6141, 0.23", "-183.213, -51.3188, 41.4648, 0.23", "-184.253, -51.7698, 41.8128, 0.23", "-185.89, -52.4988, 42.466, 0.23", "-188.967, -53.916, 43.9732, 0.91", "-191.187, -54.9812, 45.1704, 0.91", "-194.087, -56.3287, 46.6692, 0.23", "-196.863, -57.5768, 48.049, 1.14", "-198.63, -58.3115, 48.9602, 1.14", "-202.559, -59.8452, 50.9872, 0.23", "-204.645, -60.6292, 52.0193, 0.68", "-209.048, -62.3549, 54.1466, 0.23", "-212.51, -63.8269, 55.8047, 0.91", "-216.776, -65.8925, 57.6953, 0.23", "-218.059, -66.6041, 58.2199, 0.23", "-219.912, -67.7419, 58.863, 0.23", "-222.562, -69.5765, 59.6643, 1.14", "-225.9, -72.0784, 60.5071, 0.23", "-228.424, -74.0632, 60.8265, 0.68", "-232.406, -77.2304, 60.7448, 0.23", "-235.634, -79.7515, 60.415, 0.91", "-239.328, -82.4385, 59.8985, 0.23", "-241.107, -83.621, 59.6516, 0.91", "-245.511, -86.2745, 59.0305, 0.23", "-249.27, -88.2881, 58.6374, 0.91", "-253.028, -90.1052, 58.4081, 0.23", "-256.546, -91.6255, 58.3968, 0.91", "-261.051, -93.2362, 58.7506, 0.23", "-262.814, -93.7739, 59.0008, 0.91", "-265.701, -94.4578, 59.6305, 0.23", "-268.064, -94.8686, 60.1618, 0.91", "-268.947, -94.9682, 60.2855, 0.91", "-273.763, -95.399, 60.7776, 0.23", "-275.273, -95.4822, 60.9293, 0.23", "-278.287, -95.6197, 61.2345, 0.91", "-281.955, -95.7606, 61.611, 0.23", "-286.711, -95.906, 62.1136, 0.91", "-293.306, -96.1064, 62.845, 0.23", "-297.321, -96.2356, 63.3391, 0.91" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-2.01311, -9.11307, 8.54, 0.91", "0.117166, -12.7144, 9.86741, 0.91", "1.72997, -15.441, 10.8724, 0.91", "3.8226, -18.9787, 12.1763, 1.36" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.4305, -18.5729, -4.09895, 0.91", "9.99031, -21.1254, -4.61347, 0.91", "9.56791, -23.5746, -5.10717, 0.91", "9.25709, -25.3768, -5.47046, 0.91" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "10.4305, -18.5729, -4.09895, 0.23", "12.8515, -19.9357, -3.7776, 0.23", "14.7574, -20.9973, -3.55848, 0.68", "17.3537, -22.4755, -3.29841, 0.68", "18.9267, -23.4306, -3.24713, 0.23", "19.7718, -23.9561, -3.26295, 0.91", "21.035, -24.7435, -3.32496, 0.91", "22.6479, -25.7486, -3.52922, 0.23", "24.1061, -26.5864, -3.81312, 0.91", "26.6061, -27.9608, -4.35244, 0.23", "27.5715, -28.4821, -4.57713, 0.91", "28.8731, -29.1686, -4.88023, 0.23", "30.5291, -30.0516, -5.23828, 1.14", "31.7518, -30.6629, -5.428, 1.14", "34.1423, -31.8052, -5.63628, 0.23", "35.3387, -32.3439, -5.65686, 0.91", "36.5968, -32.9108, -5.63585, 0.91", "39.1076, -33.9615, -5.53609, 0.23", "41.217, -34.7391, -5.37576, 0.68", "43.1251, -35.3334, -5.19949, 0.23", "44.1571, -35.5607, -5.09227, 0.91", "46.4321, -35.9119, -4.83999, 0.23", "48.7482, -36.1071, -4.60522, 0.91", "50.7346, -36.1504, -4.43636, 0.23", "52.1049, -36.1398, -4.39372, 0.91", "54.8574, -36.0941, -4.38116, 0.23", "55.7018, -36.088, -4.398, 1.14", "57.4, -36.1025, -4.47448, 1.14", "59.5793, -36.258, -4.62409, 0.23", "62.1143, -36.6035, -4.84663, 0.68", "63.0906, -36.7967, -4.90734, 1.36", "64.9933, -37.3187, -4.92177, 0.23", "65.8689, -37.5797, -4.89096, 0.45", "68.2501, -38.3188, -4.71555, 0.23", "69.814, -38.8117, -4.5126, 0.91", "72.7742, -39.7671, -3.93313, 0.23", "75.5784, -40.6477, -3.3186, 1.14", "76.9597, -41.0682, -2.98879, 0.23", "78.1726, -41.4082, -2.68516, 0.91", "80.515, -42.0237, -2.04395, 0.23", "81.9024, -42.3777, -1.65693, 1.14", "84.1319, -42.9431, -1.07802, 0.23", "85.426, -43.3041, -0.747446, 0.91", "85.8311, -43.432, -0.64545, 0.91", "87.7447, -44.0626, -0.203811, 0.23", "88.9961, -44.4507, 0.0236113, 0.91", "91.1289, -45.1254, 0.3351, 0.23", "92.6912, -45.6281, 0.554228, 0.91", "94.4584, -46.1867, 0.781521, 0.23", "95.7681, -46.5968, 0.927466, 0.68", "98.6805, -47.5447, 1.19797, 0.23", "100.554, -48.1818, 1.40538, 0.23", "101.743, -48.5761, 1.57804, 1.14", "102.533, -48.8337, 1.72758, 1.14", "104.853, -49.6172, 2.27023, 0.23", "106.205, -50.0691, 2.62886, 1.14", "108.534, -50.8171, 3.28562, 0.23", "111.896, -51.8231, 4.32898, 0.91", "113.461, -52.2859, 4.80904, 0.23", "115.199, -52.7853, 5.29985, 0.91", "117.723, -53.4617, 5.93854, 0.23", "119.606, -53.9762, 6.28636, 0.91", "122.124, -54.7789, 6.55659, 0.23", "125.397, -56.0145, 6.65223, 0.23", "128.002, -57.0875, 6.5757, 0.45", "129.878, -57.9377, 6.44161, 0.23", "132.34, -59.1494, 6.14347, 0.23", "134.362, -60.2111, 5.74849, 0.91", "135.697, -60.9496, 5.3405, 0.23", "136.671, -61.5196, 4.98562, 0.45", "137.397, -61.9535, 4.70408, 0.23", "138.709, -62.6702, 4.20801, 0.91", "140.784, -63.6047, 3.45392, 0.23", "142.384, -64.1984, 2.86482, 0.91", "143.569, -64.6055, 2.43279, 0.23", "143.953, -64.7346, 2.29496, 0.91", "145.323, -65.1869, 1.84928, 0.23", "146.835, -65.7488, 1.40862, 0.45", "148.717, -66.4989, 0.999123, 0.23", "149.341, -66.7594, 0.886342, 0.91", "150.087, -67.1016, 0.760218, 0.23", "151.405, -67.7882, 0.565482, 1.14", "153.398, -69.0004, 0.406383, 0.23", "154.479, -69.7704, 0.314985, 0.68", "155.09, -70.3462, 0.229014, 0.23", "156.097, -71.6491, 0.0123049, 0.23", "156.474, -72.7987, -0.194527, 0.23", "155.981, -74.3797, -0.464363, 0.91", "154.781, -76.7321, -0.86324, 0.23", "153.473, -78.854, -1.23859, 0.23", "152.614, -80.0604, -1.45937, 0.23", "150.854, -82.1415, -1.86287, 0.23", "148.569, -84.4946, -2.34231, 0.68", "156.404, -89.4373, -3.37649, 0.68", "164.321, -93.6557, -5.90607, 0.68", "171.479, -98.1799, -9.8015, 0.68", "178.399, -102.284, -14.5068, 0.68", "186.733, -104.992, -17.6824, 0.68", "195.303, -107.91, -19.8985, 0.68", "203.553, -111.447, -22.4101, 0.68", "212.353, -113.862, -24.3114, 0.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.08631, 17.0954, -1.12, 0.23", "10.9762, 18.4218, -1.38299, 0.23", "13.9723, 20.3883, -1.68069, 0.68", "14.8711, 20.9783, -1.76999, 0.68", "16.7167, 22.1898, -1.95338, 0.23", "18.8738, 23.6057, -2.16772, 0.91", "20.8674, 24.9143, -2.36582, 0.91", "22.5276, 26.0954, -2.52343, 0.91" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.08631, 17.0954, -1.12, 0.68", "8.9394, 20.9735, -0.375188, 0.68", "8.8826, 23.4395, -0.0066033, 0.68", "8.86761, 25.454, 0.250449, 0.91", "8.95941, 28.943, 0.399063, 0.23", "9.03566, 30.1478, 0.400002, 0.68", "9.37901, 34.4304, 0.320991, 0.23", "9.67381, 37.2624, 0.103281, 1.14", "9.87886, 38.9107, -0.075491, 1.14", "10.7628, 44.5324, -0.825071, 0.23", "11.4683, 48.0195, -1.36379, 0.91", "11.8408, 49.5391, -1.61399, 0.91", "12.4474, 51.5558, -1.98417, 0.23", "13.3358, 54.3543, -2.47451, 0.23", "13.9432, 56.2057, -2.79553, 0.91", "14.5981, 58.0665, -3.07645, 0.91", "15.5573, 60.749, -3.49367, 0.23", "16.7476, 63.9286, -3.97733, 0.68", "18.0067, 67.1894, -4.50445, 0.23", "18.7815, 69.2561, -4.82334, 0.91", "20.1212, 72.9141, -5.43495, 0.23", "20.7223, 74.4584, -5.70321, 0.23", "21.0865, 75.3644, -5.85339, 1.14", "21.6779, 76.751, -6.03564, 1.14", "22.6311, 78.8533, -6.25404, 0.23", "23.2781, 80.4494, -6.39698, 0.68", "24.3016, 83.4395, -6.66001, 0.23", "24.9897, 85.7342, -6.84155, 0.91", "25.9194, 89.4156, -7.07923, 0.23", "26.4863, 92.1408, -7.20787, 1.14", "27.0397, 96.3118, -7.44387, 0.23", "27.1827, 99.034, -7.60304, 0.68", "27.1389, 100.599, -7.73464, 0.23", "26.9454, 102.939, -7.97101, 0.91", "26.7087, 104.484, -8.13951, 0.91", "25.4301, 110.742, -8.89806, 0.23", "25.0066, 112.605, -9.17666, 1.14", "24.0674, 116.498, -9.913, 0.23", "23.4222, 119.086, -10.4642, 0.91", "22.8434, 121.245, -10.96, 0.91", "21.8784, 124.754, -11.7935, 0.23", "20.5975, 129.247, -13.0478, 0.91", "19.9261, 131.629, -13.7523, 0.23", "19.5465, 133.096, -14.1204, 0.45", "19.1091, 134.971, -14.5755, 0.23", "18.7919, 136.469, -14.9286, 0.91", "18.0776, 140.063, -15.8206, 0.23", "17.5653, 142.634, -16.53, 1.14", "16.5138, 147.846, -18.2024, 0.23", "15.7423, 151.469, -19.5112, 1.36", "14.7956, 155.648, -21.3267, 0.45", "14.2587, 157.817, -22.4518, 0.91", "13.3739, 161.052, -24.3503, 0.23", "12.695, 163.167, -25.8079, 0.68", "12.0752, 164.802, -27.1303, 0.68", "10.7634, 168.091, -29.8742, 0.23", "10.0498, 169.999, -31.4773, 0.23", "9.72802, 171.003, -32.2563, 0.91", "9.28818, 173.225, -33.8873, 0.45", "9.17512, 175.268, -35.2731, 0.23", "9.36584, 176.966, -36.3565, 0.91", "9.96916, 179.121, -37.5939, 0.23", "10.4219, 180.211, -38.2026, 1.14", "11.626, 182.25, -39.4082, 0.23", "12.86, 183.977, -40.4884, 0.91", "14.5569, 186.207, -41.9701, 0.23", "15.3675, 187.284, -42.6993, 0.23", "16.6232, 189.068, -43.9501, 1.14", "18.642, 192.347, -46.4008, 0.23", "20.12, 195.363, -48.7646, 1.14", "21.1756, 198.87, -51.7891, 0.23", "21.361, 199.737, -52.5585, 0.23", "21.5796, 201.606, -54.2946, 0.68", "21.5327, 203.641, -56.3433, 0.23", "21.0258, 205.482, -58.3188, 1.14", "19.4981, 208.329, -61.6221, 0.23", "17.7896, 220.497, -67.3159, 0.23", "14.3007, 233.368, -69.6725, 0.23", "12.9933, 246.286, -73.5224, 0.23", "10.0501, 258.996, -77.1548, 0.23", "9.43043, 272.081, -80.5882, 0.23", "7.15155, 285.091, -83.5758, 0.23", "3.13855, 297.673, -86.5728, 0.23", "-0.892345, 309.939, -90.6599, 0.23", "-4.22797, 321.923, -96.0124, 0.23", "-6.62284, 333.255, -103.03, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-7.15127, 37.9518, 0.0, 0.163066", "-9.88495, 52.7006, 0.0, 0.163066", "-12.6186, 67.4494, 0.0, 0.163066" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-11.8055, 15.7763, -0.191076, 0.23", "-12.9896, 15.7092, -2.3473, 0.23", "-13.6675, 15.6708, -3.58193, 0.23", "-14.5606, 15.6201, -5.20844, 0.91", "-16.2135, 15.5265, -8.21846, 0.23", "-17.9726, 15.4268, -11.422, 0.23", "-18.6258, 15.3898, -12.6116, 1.14" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-11.8055, 15.7763, -0.191076, 0.23", "-13.083, 16.708, -0.148414, 0.23", "-14.8262, 17.974, -0.0669346, 0.91", "-17.0413, 19.5601, 0.0463935, 0.68", "-19.1546, 21.1024, 0.202932, 0.23", "-20.7705, 22.3089, 0.271881, 0.68", "-22.1935, 23.384, 0.304962, 0.23", "-22.9318, 23.9452, 0.277699, 1.14", "-23.9153, 24.6635, 0.181739, 1.14", "-26.3272, 26.3856, -0.245939, 0.23", "-28.5108, 27.9417, -0.770552, 0.45", "-29.8791, 28.8902, -1.13933, 0.23", "-31.749, 30.112, -1.65888, 0.23", "-34.0143, 31.499, -2.28909, 0.23", "-35.7474, 32.4924, -2.76656, 0.91", "-36.6851, 32.9775, -3.01224, 0.91", "-40.1135, 34.6184, -3.71181, 0.23", "-42.2445, 35.6009, -4.06697, 0.68", "-44.0101, 36.4018, -4.27351, 0.23", "-44.7022, 36.7128, -4.34765, 0.91", "-46.3008, 37.3805, -4.48624, 0.91", "-49.152, 38.5242, -4.74329, 0.23", "-50.5845, 39.0634, -4.87708, 2.05", "-52.0082, 39.6491, -4.98461, 2.05" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "16.8903, 30.4228, -10.6644, 0.68", "18.8947, 30.8671, -11.3476, 0.68", "21.8716, 31.4389, -12.4284, 1.14", "24.7794, 31.9754, -13.4118, 0.68", "28.3851, 32.65, -14.5501, 0.68", "30.82, 33.1346, -15.2672, 0.68", "32.8994, 33.5485, -15.8796, 1.14", "36.2628, 34.2184, -16.7873, 0.68", "39.7393, 34.9099, -17.6341, 0.68", "41.877, 35.3667, -18.1542, 0.68", "43.3853, 35.661, -18.4766, 0.91" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.8903, 30.4228, -10.6644, 0.68", "16.9014, 32.9025, -11.3713, 0.68", "16.9136, 34.3066, -11.7092, 1.14", "16.9355, 35.9842, -12.0637, 0.23", "16.9486, 38.5469, -12.4675, 0.68", "16.9249, 40.4135, -12.682, 0.68", "16.9001, 41.3764, -12.7707, 0.68", "16.7761, 43.6597, -12.8479, 1.14", "16.5493, 46.8522, -12.9014, 0.23", "16.388, 48.5787, -12.9013, 0.23", "16.1045, 51.0538, -12.8499, 0.68", "15.9528, 51.9813, -12.8336, 0.68", "15.6087, 53.8032, -12.798, 0.23", "15.3114, 55.092, -12.7722, 0.91", "14.7279, 57.2379, -12.7488, 0.23", "14.3576, 58.5306, -12.8048, 0.68", "13.6035, 60.9302, -12.9431, 1.14" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-297.321, -96.2356, 63.3391, 0.23", "-299.455, -96.0447, 64.0277, 0.23", "-300.758, -95.9539, 64.4467, 0.68", "-302.481, -95.8633, 64.9834, 0.23", "-303.888, -95.8444, 65.3366, 0.45", "-307.009, -95.8631, 65.8035, 0.23", "-309.318, -95.9015, 66.0381, 0.45", "-310.132, -95.9461, 66.0797, 0.23", "-311.482, -96.0689, 66.0919, 0.68", "-314.351, -96.3948, 66.0071, 0.23", "-318.323, -96.9507, 65.9213, 0.68", "-319.288, -97.0867, 65.9058, 0.23", "-320.268, -97.2412, 65.939, 0.68", "-322.234, -97.5924, 66.1072, 0.23", "-323.556, -97.8289, 66.3031, 0.91", "-326.66, -98.3915, 66.9989, 0.23", "-328.385, -98.7039, 67.4695, 1.14", "-330.483, -99.0374, 68.0139, 0.23", "-331.864, -99.2115, 68.3782, 0.91", "-333.971, -99.4091, 68.9231, 0.23", "-335.119, -99.4898, 69.1969, 0.68", "-336.428, -99.5434, 69.4581, 0.23", "-338.129, -99.6133, 69.8161, 0.68", "-339.657, -99.6542, 70.1494, 0.23", "-340.974, -99.7446, 70.455, 0.91", "-341.908, -99.8547, 70.6747, 0.23", "-343.6, -100.122, 71.0583, 0.45", "-344.378, -100.261, 71.2373, 0.23", "-346.238, -100.606, 71.6566, 0.45", "-349.284, -101.117, 72.305, 0.23", "-350.784, -101.37, 72.6334, 0.23", "-352.885, -101.719, 73.1058, 0.68", "-355.436, -102.125, 73.6969, 0.23", "-356.927, -102.335, 74.0492, 0.23", "-359.293, -102.604, 74.6151, 0.91" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-297.321, -96.2356, 63.3391, 0.23", "-300.969, -97.195, 62.0236, 0.23", "-302.161, -97.4542, 61.6774, 0.68", "-304.296, -97.8721, 61.2123, 0.23", "-306.001, -98.1867, 60.9041, 0.91", "-308.416, -98.6324, 60.4675, 0.23", "-310.831, -99.0781, 60.0311, 0.45", "-313.1, -99.461, 59.8186, 0.23", "-315.789, -99.8827, 59.5506, 0.68", "-316.519, -99.9903, 59.4814, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.8226, -18.9787, 12.1763, 1.14", "5.52502, -21.8924, 15.1674, 1.14", "7.56379, -25.4753, 18.5338, 1.14", "9.26334, -28.5833, 21.1636, 0.68", "10.6597, -31.1369, 23.3244, 0.68", "11.3851, -32.4634, 24.4469, 0.91", "12.728, -34.919, 26.5248, 0.68", "13.8598, -37.1362, 28.2202, 1.14", "14.6454, -38.7374, 29.2179, 1.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "3.8226, -18.9787, 12.1763, 0.23", "3.57623, -22.8074, 10.9458, 0.23", "3.13324, -27.2998, 9.28669, 0.23", "2.6151, -32.5767, 7.29027, 0.23", "2.34358, -36.039, 5.98849, 1.82", "2.08492, -38.5118, 5.01138, 1.82", "1.7564, -41.6259, 3.76316, 0.68", "1.30814, -45.0174, 2.30655, 0.23", "0.830363, -48.1619, 1.08983, 0.23", "0.39269, -50.2138, 0.262623, 0.91", "-0.554334, -53.9399, -1.34422, 0.23", "-1.15592, -55.958, -2.15141, 0.23", "-2.31469, -59.3473, -3.30014, 0.23", "-2.91584, -60.9221, -3.67617, 0.68", "-4.56807, -64.781, -4.41385, 0.23", "-5.23653, -66.2859, -4.61254, 1.36", "-6.42748, -69.1339, -4.76424, 0.23", "-7.17764, -70.9526, -4.79118, 0.23", "-8.1624, -73.7386, -4.68326, 0.91", "-8.80384, -76.3167, -4.4941, 0.91", "-9.10859, -78.124, -4.36848, 0.91", "-9.57912, -82.6097, -4.29597, 0.23", "-9.67581, -84.9378, -4.41334, 0.23", "-9.71543, -88.1519, -4.80773, 0.91", "-9.65193, -92.1147, -5.50255, 0.23", "-9.54067, -95.587, -6.24916, 0.45", "-9.33592, -100.084, -7.36715, 0.23", "-9.16989, -104.135, -8.47899, 0.68", "-9.11668, -108.971, -9.926, 0.23", "-9.20728, -111.315, -10.6392, 1.14", "-9.26391, -111.992, -10.8288, 1.14", "-9.42254, -113.631, -11.1888, 1.14", "-9.81957, -117.281, -11.8479, 0.23", "-10.1052, -120.051, -12.2653, 0.91", "-10.489, -124.427, -12.845, 0.23", "-10.6536, -126.404, -13.1013, 1.14", "-11.0071, -130.803, -13.7108, 0.23", "-11.1878, -133.093, -14.0322, 1.14", "-11.4525, -136.416, -14.4708, 0.23", "-11.6196, -138.145, -14.659, 1.14", "-11.8527, -140.123, -14.8556, 1.14", "-12.5747, -144.784, -15.3229, 0.23", "-13.0968, -147.49, -15.5668, 1.14", "-13.9, -151.074, -15.8866, 0.23", "-14.4977, -153.549, -16.1017, 1.14", "-15.4102, -157.446, -16.4227, 0.23", "-15.9214, -159.703, -16.6177, 1.82", "-16.8228, -163.974, -16.9767, 0.23", "-17.0473, -165.074, -17.0824, 0.68", "-17.456, -167.086, -17.2877, 0.23", "-18.0241, -170.018, -17.5667, 0.91", "-18.6218, -173.022, -17.7981, 0.23", "-18.8451, -174.329, -17.7964, 1.14", "-19.1359, -176.447, -17.7114, 0.23", "-19.297, -177.868, -17.6146, 0.68", "-19.6974, -181.852, -17.305, 0.23", "-19.8113, -183.273, -17.1834, 1.14", "-20.0952, -188.622, -16.6981, 0.23", "-20.1897, -191.366, -16.3013, 0.91", "-20.222, -192.67, -16.0621, 0.91", "-20.2835, -195.448, -15.4727, 0.23", "-20.3469, -197.088, -15.0881, 1.14", "-20.4431, -198.395, -14.7755, 1.14", "-21.3485, -204.282, -13.6933, 0.23", "-21.8244, -206.656, -13.313, 0.91", "-22.0577, -207.621, -13.2309, 0.91", "-22.8559, -210.613, -13.2027, 0.23", "-23.2807, -212.091, -13.3313, 0.68", "-24.4554, -215.871, -14.1465, 0.23", "-24.8801, -217.096, -14.5767, 0.91", "-25.9939, -220.244, -15.705, 0.23", "-26.6231, -222.055, -16.3048, 1.14", "-26.9399, -222.989, -16.5843, 1.14", "-27.381, -224.344, -16.899, 1.59", "-28.3489, -227.434, -17.305, 0.23", "-28.8371, -228.893, -17.4643, 1.14", "-29.6883, -231.419, -17.6627, 0.23", "-29.9532, -232.224, -17.7549, 0.68", "-30.3669, -233.562, -17.97, 0.23", "-30.7036, -234.866, -18.2284, 0.91", "-31.0175, -236.6, -18.703, 0.23", "-31.2394, -238.282, -19.1045, 1.14", "-31.5043, -241.376, -19.5492, 0.23", "-31.6409, -243.676, -19.7394, 0.23", "-31.7387, -245.835, -19.8189, 0.91", "-31.8844, -250.021, -19.7918, 0.23", "-31.9955, -253.892, -19.5982, 1.14", "-32.1002, -259.563, -19.034, 0.23", "-32.1432, -261.218, -18.7888, 0.91", "-32.1925, -262.237, -18.6041, 0.91", "-32.4638, -265.148, -18.0161, 0.23", "-32.8596, -267.419, -17.5976, 1.14", "-33.7455, -270.705, -17.2262, 0.23", "-34.2547, -272.057, -17.1296, 0.68", "-35.2851, -274.508, -16.8798, 0.23", "-35.8178, -275.667, -16.7353, 1.14", "-37.5948, -279.314, -16.1961, 0.23", "-38.2004, -280.614, -15.9991, 0.91", "-38.4829, -281.272, -15.9058, 0.91", "-39.4659, -284.148, -15.2856, 0.23", "-39.8026, -285.4, -14.8777, 0.91", "-40.4382, -288.139, -13.7567, 0.23", "-40.7078, -289.505, -13.121, 1.14", "-41.1964, -291.765, -12.0633, 0.23", "-41.8455, -294.441, -10.8382, 0.91", "-42.4951, -296.903, -9.98263, 0.23", "-42.8455, -298.27, -9.61952, 0.91", "-43.5337, -300.841, -9.12676, 0.23", "-44.2459, -303.452, -8.73962, 1.14", "-44.4881, -304.428, -8.68317, 1.14", "-45.5246, -309.001, -9.05223, 0.23", "-45.907, -310.961, -9.42228, 0.23", "-46.0307, -311.783, -9.63146, 0.68", "-48.6386, -323.103, -9.77822, 0.68", "-49.7065, -334.666, -9.43842, 0.68", "-48.9379, -346.213, -8.42392, 0.68", "-47.2611, -357.666, -7.43583, 0.68" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "9.25709, -25.3768, -5.47046, 1.59", "9.19125, -25.6164, -5.4878, 1.59", "8.70984, -27.3687, -5.61459, 1.14" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "9.25709, -25.3768, -5.47046, 0.23", "9.49725, -26.3116, -6.76663, 0.23", "9.91292, -27.6986, -8.81973, 0.68", "10.3987, -29.2124, -11.0319, 0.23", "10.9719, -30.6907, -13.3128, 0.91", "11.9593, -33.1531, -17.1558, 0.91", "12.524, -34.6039, -19.3911, 0.23", "13.0291, -35.7034, -21.1969, 0.23", "13.3242, -36.2184, -22.0723, 1.59", "14.5962, -38.0874, -25.2235, 0.23", "14.9224, -38.4808, -25.8385, 0.23", "15.4147, -39.0307, -26.4862, 0.23", "16.0477, -39.6119, -27.081, 0.23", "17.1447, -40.4578, -27.9598, 1.14", "18.3439, -41.2678, -28.868, 0.68", "19.5406, -42.1044, -29.7809, 0.68", "20.6419, -42.9351, -30.7035, 0.68", "21.9109, -43.9156, -32.0648, 0.23", "23.2377, -45.0873, -33.8535, 0.23", "24.1459, -45.9651, -35.2187, 0.68", "25.0582, -46.8727, -36.713, 0.23", "25.6503, -47.471, -37.7676, 0.91", "27.674, -49.6193, -41.7818, 0.23", "28.2063, -50.3291, -43.0626, 0.23", "28.7625, -51.1351, -44.5343, 0.68", "31.9259, -55.3086, -51.851, 0.68", "34.5959, -60.009, -59.0439, 0.68", "38.2528, -64.9528, -65.6124, 0.68", "42.0448, -70.8664, -71.2346, 0.68", "44.5698, -76.9353, -77.379, 0.68", "46.2028, -83.6597, -83.1302, 0.68", "47.6402, -91.1258, -87.9418, 0.68", "51.1207, -98.2038, -92.2716, 0.68", "54.3867, -105.554, -96.3037, 0.68", "58.15, -113.086, -99.4783, 0.68", "62.2338, -120.652, -102.13, 0.68", "65.934, -128.709, -103.663, 0.68", "69.4113, -136.882, -105.101, 0.68", "71.8958, -145.272, -107.2, 0.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "212.353, -113.862, -24.3114, 0.23", "218.188, -116.645, -24.874, 0.23", "223.628, -120.105, -25.6119, 0.23", "228.559, -124.317, -25.3557, 0.23", "232.554, -129.431, -25.3902, 0.23", "236.581, -134.368, -24.1539, 0.23", "240.225, -139.529, -22.6728, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "212.353, -113.862, -24.3114, 0.23", "218.959, -116.957, -25.0098, 0.23", "225.893, -119.331, -25.0428, 0.23", "232.393, -122.585, -25.9792, 0.23", "238.394, -126.375, -27.8067, 0.23", "243.952, -130.572, -30.0899, 0.23", "249.938, -134.609, -31.3478, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "22.5276, 26.0954, -2.52343, 0.23", "24.231, 27.1715, -3.00875, 0.23", "26.5707, 28.596, -3.72219, 0.68", "29.0048, 30.0728, -4.39574, 0.23", "30.3133, 30.9025, -4.73698, 0.91", "31.1532, 31.4557, -4.97204, 0.91", "32.5159, 32.393, -5.36697, 0.23", "34.5264, 33.8452, -5.88519, 1.59", "36.2999, 35.2052, -6.34128, 0.23", "37.3469, 36.06, -6.63294, 1.14", "39.1476, 37.5219, -7.08337, 0.23", "39.9382, 38.1357, -7.28068, 0.23", "41.4005, 39.2882, -7.67025, 1.14", "42.5305, 40.1527, -8.04713, 0.23", "43.3085, 40.7147, -8.35377, 1.14", "44.4793, 41.5213, -8.82927, 1.14", "46.5718, 42.9173, -9.63018, 0.23", "48.341, 44.07, -10.2718, 1.59", "50.9432, 45.7294, -11.1635, 0.23", "52.5873, 46.8056, -11.6615, 0.68", "54.7646, 48.2471, -12.2, 0.23", "56.1676, 49.2243, -12.478, 1.36", "57.6133, 50.2759, -12.6533, 0.23", "59.3345, 51.6007, -12.7559, 1.36", "62.2456, 54.0378, -12.7616, 0.23", "64.4125, 55.9591, -12.7573, 0.23", "65.6447, 57.159, -12.7503, 0.23", "67.0211, 58.6384, -12.7635, 2.05", "68.5439, 60.437, -12.7873, 0.23", "70.0675, 62.4614, -12.8082, 0.23", "70.9158, 63.7086, -12.814, 1.59", "72.2238, 65.7295, -12.8339, 0.23", "72.6816, 66.4347, -12.8346, 1.14", "73.3076, 67.4375, -12.8387, 1.14", "73.9284, 68.4096, -12.85, 0.23", "75.03, 70.1398, -12.9007, 1.14", "75.8658, 71.4081, -12.8691, 0.23", "76.48, 72.2381, -12.844, 0.23", "77.2141, 73.1373, -12.8314, 0.91", "78.2088, 74.285, -12.8375, 0.23", "79.2046, 75.3968, -12.8679, 1.36", "80.9385, 77.271, -13.0922, 0.23", "82.758, 79.175, -13.4842, 0.23", "83.6976, 80.0657, -13.7535, 0.91", "84.3103, 80.6077, -13.9593, 0.91", "85.6931, 81.7041, -14.5354, 0.23", "87.1349, 82.7057, -15.2197, 0.91", "88.8914, 83.8305, -16.1879, 0.23", "90.3792, 84.7549, -16.9855, 1.14", "91.0495, 85.1378, -17.3107, 1.14", "92.706, 86.0444, -18.0314, 0.23", "93.7237, 86.552, -18.4049, 1.14", "95.3538, 87.3688, -18.8308, 0.23", "96.1443, 87.7615, -19.0197, 1.14", "98.9385, 89.1743, -19.6098, 0.23", "99.9629, 89.7026, -19.8055, 0.23", "101.944, 90.7986, -20.112, 1.82", "104.093, 92.0226, -20.4169, 0.23", "106.696, 93.546, -20.7391, 1.36", "107.416, 93.9968, -20.8261, 0.23", "108.402, 94.6777, -20.9298, 0.68", "110.18, 95.976, -21.0898, 0.23", "111.081, 96.7292, -21.1602, 0.23", "111.823, 97.394, -21.2101, 1.14", "112.565, 98.1124, -21.2097, 1.14", "113.152, 98.7178, -21.2289, 0.23", "113.595, 99.1691, -21.2783, 0.23", "114.349, 99.9748, -21.4244, 1.14", "114.931, 100.645, -21.5624, 1.14", "115.896, 101.773, -21.889, 0.23", "116.423, 102.381, -22.0967, 0.91", "117.531, 103.679, -22.5708, 0.23", "118.72, 105.115, -23.1205, 1.14", "119.777, 106.382, -23.6073, 0.23", "121.048, 107.839, -24.234, 1.14", "121.696, 108.557, -24.5567, 0.23", "122.443, 109.377, -24.9107, 0.68", "123.622, 110.635, -25.3989, 0.23", "124.066, 111.061, -25.587, 0.91", "125.935, 112.859, -26.3928, 0.23", "126.625, 113.567, -26.6909, 0.23", "127.418, 114.449, -27.093, 0.23", "128.298, 115.545, -27.6548, 0.91", "129.295, 117.043, -28.4637, 0.23", "130.01, 118.492, -29.3103, 1.14", "130.236, 119.187, -29.726, 0.23", "130.453, 120.144, -30.3315, 0.91", "130.694, 121.842, -31.3941, 0.23", "130.768, 123.008, -32.0955, 0.91", "130.779, 124.585, -32.9747, 0.23", "130.783, 125.523, -33.5551, 0.91", "130.797, 126.692, -34.3087, 0.23", "130.855, 128.143, -35.2601, 0.23", "130.878, 128.828, -35.7022, 0.91", "130.915, 129.739, -36.2988, 0.23", "131.024, 131.554, -37.4639, 1.14", "131.064, 132.229, -37.9018, 1.14", "131.183, 134.67, -39.4364, 0.23", "131.242, 135.953, -40.2578, 0.23", "131.267, 136.411, -40.5398, 0.45", "131.304, 137.01, -40.874, 0.23", "131.325, 137.75, -41.193, 0.23", "131.366, 139.251, -41.812, 0.23", "137.731, 146.151, -42.6481, 0.23", "144.436, 152.373, -44.924, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "22.5276, 26.0954, -2.52343, 0.23", "24.6357, 27.123, -2.4086, 0.23", "28.3513, 28.9596, -2.22869, 0.91", "31.5218, 30.4639, -2.14316, 0.23", "33.3118, 31.293, -2.09326, 0.91", "35.2688, 32.1844, -2.00787, 0.23", "37.0693, 33.0067, -1.89625, 0.23", "38.6608, 33.7276, -1.81051, 0.91", "40.3152, 34.5109, -1.73234, 0.23", "42.2303, 35.4709, -1.52061, 0.91", "44.5392, 36.6567, -1.25569, 0.23", "46.6651, 37.7891, -0.951938, 0.68", "48.1549, 38.5857, -0.740682, 0.23", "49.5981, 39.3789, -0.527831, 1.14", "51.6829, 40.623, -0.182202, 0.23", "52.8917, 41.369, -0.0265634, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.62284, 333.255, -103.03, 0.23", "-6.69619, 340.356, -105.726, 0.23", "-8.07341, 347.007, -109.128, 0.23", "-8.48263, 353.805, -112.493, 0.23", "-10.1155, 360.833, -114.869, 0.23", "-13.2514, 367.405, -117.031, 0.23", "-17.1004, 373.907, -117.808, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-6.62284, 333.255, -103.03, 0.23", "-7.57827, 345.744, -106.437, 0.23", "-6.90826, 358.489, -108.813, 0.23", "-5.43305, 371.376, -109.317, 0.23", "-5.09432, 384.334, -110.014, 0.23", "-4.25481, 397.248, -109.004, 0.23", "-2.0272, 410.032, -108.652, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-18.6258, 15.3898, -12.6116, 0.23", "-20.18, 13.8682, -14.0273, 0.23", "-21.1005, 13.0104, -14.9087, 0.23", "-21.9208, 12.2415, -15.6617, 0.91", "-23.4893, 10.7695, -16.9661, 0.68", "-24.8916, 9.47098, -18.0, 0.23", "-25.9391, 8.55485, -18.664, 0.68", "-27.6588, 7.0562, -19.6869, 0.23", "-28.4259, 6.46043, -20.0397, 0.91", "-30.0439, 5.3497, -20.6044, 0.23", "-31.0632, 4.7235, -20.8058, 1.14", "-33.1744, 3.42878, -20.9776, 0.23", "-34.0318, 2.87119, -21.0015, 0.68", "-34.9305, 2.26376, -20.9752, 0.23", "-35.6258, 1.75604, -20.9493, 0.23", "-36.1762, 1.32289, -20.9113, 0.23", "-37.5395, 0.0460453, -20.8332, 1.14", "-38.9553, -1.48298, -20.7285, 0.23", "-40.4526, -3.2628, -20.7094, 0.91", "-41.6267, -4.7274, -20.7472, 0.23", "-42.4644, -5.85471, -20.7931, 1.14", "-43.9761, -7.91117, -20.9133, 0.23", "-44.7576, -9.00451, -21.0012, 0.91", "-46.0106, -10.8521, -21.1456, 0.23", "-46.7462, -12.0446, -21.2525, 1.14", "-47.7063, -13.6841, -21.501, 0.23", "-53.7638, -21.0046, -21.7895, 0.23" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-18.6258, 15.3898, -12.6116, 0.23", "-17.3666, 14.9081, -14.3626, 0.23", "-15.7747, 14.4021, -16.4997, 0.91", "-14.4794, 14.0073, -18.1389, 0.23", "-14.0971, 13.9021, -18.6532, 0.68", "-13.1909, 13.682, -19.9665, 0.23", "-12.616, 13.5626, -20.9146, 1.14", "-11.2382, 13.2893, -23.359, 0.23", "-10.3046, 13.0552, -25.4012, 0.91", "-9.03112, 12.5868, -28.7064, 0.23", "-8.53312, 12.3465, -30.2323, 1.36", "-7.59946, 11.7646, -33.9505, 0.23", "-7.28974, 11.4581, -35.7894, 0.91", "-6.91516, 10.5719, -40.391, 0.23", "-6.84382, 10.1172, -42.6302, 0.68", "-6.87244, 9.54859, -45.0176, 0.91", "-6.99478, 8.83253, -47.676, 0.23", "-7.17194, 8.39682, -49.145, 0.23", "-7.50455, 7.97707, -50.772, 1.14", "-4.82125, 6.69779, -59.8103, 1.14", "-0.20965, 7.07947, -68.1239, 1.14" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-52.0082, 39.6491, -4.98461, 0.23", "-53.156, 41.4929, -4.45753, 0.23", "-54.2372, 43.116, -4.0172, 0.23", "-54.7072, 43.7704, -3.85419, 0.91", "-56.252, 45.831, -3.27775, 0.23", "-57.1914, 47.0364, -2.93483, 0.91", "-59.1751, 49.5026, -2.24586, 0.23", "-60.4191, 50.9542, -1.75906, 1.14", "-62.3902, 53.125, -1.01442, 0.23", "-63.8131, 54.6362, -0.524023, 0.91", "-65.1133, 55.9326, -0.138208, 0.23", "-66.2112, 56.9782, 0.254022, 0.91", "-67.8454, 58.3936, 0.901315, 0.23", "-69.1643, 59.4675, 1.46518, 0.68", "-70.1371, 60.1578, 1.86145, 0.23", "-71.189, 60.7874, 2.26958, 0.68", "-73.4294, 61.915, 3.14661, 0.23", "-74.5247, 62.3605, 3.57863, 1.14", "-76.287, 62.9305, 4.23853, 0.23", "-78.4487, 63.5052, 5.07505, 0.23", "-80.6692, 63.9801, 5.85213, 0.68", "-81.7925, 64.1996, 6.17737, 0.23", "-84.4037, 64.6651, 6.73925, 0.68", "-85.3741, 64.8393, 6.92376, 0.23", "-86.7789, 65.1054, 7.1436, 0.68", "-88.3718, 65.4688, 7.32785, 0.23", "-90.5706, 66.0438, 7.50152, 0.91", "-92.9738, 66.8021, 7.67915, 0.23", "-95.0102, 67.5591, 7.80244, 0.91", "-97.1093, 68.4552, 8.04397, 0.23", "-98.0935, 68.9076, 8.20125, 0.23", "-100.064, 69.915, 8.5636, 0.91", "-101.801, 70.8999, 8.97831, 0.23", "-102.933, 71.6139, 9.29163, 0.68", "-105.769, 73.5637, 10.1757, 0.23", "-107.455, 74.8337, 10.7457, 0.68", "-109.487, 76.4924, 11.453, 0.23", "-111.294, 78.1927, 12.1828, 0.23", "-112.392, 79.3772, 12.6811, 0.23", "-113.308, 80.5663, 13.1324, 0.68", "-113.788, 81.3321, 13.3965, 0.23", "-114.133, 81.9705, 13.6273, 0.91", "-115.631, 85.0866, 14.8146, 0.23", "-116.187, 86.3793, 15.2573, 0.23", "-116.92, 88.244, 15.928, 0.23", "-117.667, 90.1098, 16.6038, 0.68" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-52.0082, 39.6491, -4.98461, 0.45", "-54.6035, 39.0346, -5.12713, 0.45", "-57.9153, 38.163, -5.20277, 0.91", "-59.6491, 37.6327, -5.30791, 0.23", "-62.2706, 36.6407, -5.57321, 0.91", "-63.2201, 36.2437, -5.67987, 0.91", "-64.3586, 35.7447, -5.82445, 0.23", "-66.4743, 34.7328, -6.13038, 0.68", "-68.8791, 33.462, -6.48634, 0.23", "-71.3316, 32.1529, -6.8492, 1.14", "-72.7217, 31.4106, -7.07857, 1.14", "-75.4742, 29.9851, -7.5814, 0.23", "-77.1192, 29.2142, -7.89115, 1.14", "-80.1018, 27.9059, -8.4844, 0.23", "-81.7748, 27.2587, -8.75431, 0.23", "-84.5749, 26.2588, -9.13335, 0.23", "-85.1, 26.0706, -9.17577, 0.91", "-86.6322, 25.5478, -9.20059, 1.59", "-90.0523, 24.4841, -9.0811, 0.23", "-93.305, 23.6014, -8.80277, 1.36", "-95.9836, 22.9624, -8.4287, 0.91", "-99.7203, 22.1904, -7.70515, 0.23", "-102.472, 21.6728, -7.09838, 1.14", "-105.225, 21.2102, -6.41416, 0.23", "-106.843, 21.024, -5.95885, 0.23", "-109.196, 20.8382, -5.30593, 0.68", "-110.444, 20.7817, -4.97738, 0.68", "-112.218, 20.7259, -4.55205, 0.23", "-114.48, 20.6191, -4.01649, 0.91", "-116.554, 20.4874, -3.58704, 0.23", "-117.571, 20.4107, -3.4116, 0.91", "-119.363, 20.2673, -3.16842, 0.23", "-122.722, 19.9854, -2.74108, 1.14", "-124.0, 19.8725, -2.5886, 0.23", "-125.801, 19.7098, -2.38626, 0.68", "-128.142, 19.4766, -2.12315, 0.23", "-129.931, 19.3241, -1.86484, 0.45", "-131.48, 19.2018, -1.5245, 0.23", "-132.229, 19.1548, -1.31399, 0.23", "-134.198, 19.0713, -0.583442, 0.91", "-137.511, 18.9432, 0.895878, 0.23", "-139.82, 18.8714, 2.01267, 0.91", "-144.091, 18.7911, 4.16415, 0.23", "-145.234, 18.7728, 4.76097, 0.23", "-148.14, 18.7002, 6.35899, 1.59", "-151.768, 18.5836, 8.54192, 0.23", "-152.89, 18.5379, 9.24872, 0.91", "-153.605, 18.5094, 9.70418, 0.91", "-156.397, 18.4102, 11.4822, 0.23", "-158.959, 18.2697, 13.1041, 0.91", "-161.43, 18.0977, 14.6166, 0.23", "-162.757, 18.001, 15.429, 1.14", "-165.347, 17.7732, 16.9346, 0.23", "-166.745, 17.6164, 17.6771, 0.91", "-167.852, 17.4943, 18.1733, 0.23", "-169.362, 17.3106, 18.6744, 0.68", "-173.491, 16.762, 19.7479, 0.23", "-175.24, 16.5139, 20.1694, 0.91", "-177.345, 16.1943, 20.6189, 0.23", "-179.819, 15.8266, 21.0694, 0.68", "-182.379, 15.4192, 21.4664, 0.23", "-184.307, 15.0769, 21.7173, 0.23", "-186.75, 14.5508, 21.9766, 0.91", "-189.509, 13.9103, 22.2827, 0.23", "-191.455, 13.4474, 22.5114, 1.14", "-194.28, 12.7433, 22.8779, 0.23", "-195.775, 12.4048, 23.0888, 0.91", "-198.157, 11.9773, 23.365, 0.23", "-200.969, 11.6402, 23.6666, 0.91", "-202.541, 11.5359, 23.8617, 0.23", "-203.865, 11.5296, 24.0536, 0.68", "-205.308, 11.6084, 24.2444, 0.23", "-207.936, 11.8981, 24.6307, 0.91", "-210.476, 12.2953, 25.1385, 0.23", "-211.707, 12.548, 25.4407, 0.23", "-212.666, 12.75, 25.7141, 0.91", "-213.681, 12.9665, 26.0543, 0.23", "-216.276, 13.4786, 27.022, 0.91", "-218.457, 13.9291, 28.0864, 0.23", "-220.066, 14.3155, 29.0956, 0.68", "-221.321, 14.6331, 30.0122, 0.23", "-223.866, 15.2785, 32.2278, 0.91", "-225.177, 15.6138, 33.4378, 0.23", "-227.68, 16.2542, 35.9071, 0.91", "-229.967, 16.8692, 38.3192, 0.23", "-231.378, 17.2358, 40.0019, 0.91", "-233.586, 17.9407, 43.024, 0.23" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "43.3853, 35.661, -18.4766, 0.23", "45.3032, 37.2089, -17.8459, 0.23", "46.5828, 38.1631, -17.3832, 0.91", "48.22, 39.3139, -16.6828, 0.23", "50.5359, 40.9089, -15.6821, 0.23", "51.2331, 41.3825, -15.3833, 0.91", "52.8238, 42.5039, -14.6582, 0.23", "54.0208, 43.3284, -14.0478, 0.68", "55.6926, 44.553, -13.1566, 0.23", "56.8932, 45.5266, -12.4627, 0.68", "58.3794, 46.9071, -11.6405, 0.23", "59.7696, 48.2776, -10.8973, 0.68", "60.4435, 48.9836, -10.573, 0.23", "61.1234, 49.7006, -10.2879, 0.91", "62.6662, 51.1912, -9.80939, 0.23", "63.8536, 52.1992, -9.5208, 0.68", "65.5971, 53.5073, -9.22399, 0.23", "66.7198, 54.2147, -9.07083, 0.68", "69.0931, 55.5722, -8.67884, 0.23", "71.3402, 56.7663, -8.29408, 0.91", "72.8739, 57.5427, -8.11244, 0.23", "73.6697, 57.9418, -8.02773, 0.23", "76.374, 59.4041, -7.77474, 0.68", "78.5604, 60.7179, -7.59532, 0.23", "79.8582, 61.6416, -7.51575, 0.91", "82.6169, 63.8706, -7.5265, 0.23", "83.3877, 64.5413, -7.59584, 0.23", "84.6343, 65.689, -7.84411, 0.91", "86.4488, 67.4223, -8.47609, 0.23", "87.7547, 68.7183, -9.06251, 0.91", "89.7129, 70.7032, -9.98664, 0.23", "91.1414, 72.1632, -10.6796, 0.68", "92.8471, 73.8203, -11.5866, 0.23", "94.0074, 74.8724, -12.2915, 0.23", "95.0967, 75.7966, -13.0879, 0.91", "103.58, 79.7769, -13.601, 0.91", "112.612, 81.9467, -12.2692, 0.91", "121.967, 82.2003, -12.9748, 0.91" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "43.3853, 35.661, -18.4766, 0.23", "44.5622, 35.8641, -21.2953, 0.23", "45.5794, 35.9974, -23.5759, 0.68", "47.0728, 36.1361, -26.8371, 1.36", "48.8242, 36.2032, -30.4301, 0.23", "49.7266, 36.2072, -32.1214, 0.45", "51.2438, 36.2032, -34.7822, 0.45", "52.5829, 36.1762, -36.7778, 0.23", "53.813, 36.1009, -38.3755, 1.14", "54.8489, 36.0489, -39.4943, 1.14", "56.1467, 36.0416, -40.6586, 0.45", "59.6677, 36.2964, -43.3666, 0.23", "61.3043, 36.4768, -44.4154, 1.14", "62.499, 36.6011, -45.087, 0.23", "64.0233, 36.7936, -45.8366, 0.23", "66.2781, 37.0818, -46.9289, 0.91", "68.6947, 37.4077, -48.1702, 0.23", "69.3486, 37.4934, -48.4935, 0.68", "70.3776, 37.6239, -49.0611, 0.68", "71.8105, 37.8099, -50.0206, 0.23", "74.1531, 38.0841, -51.6465, 0.91", "76.9956, 38.5272, -53.6409, 0.23", "78.3736, 38.7521, -54.6272, 1.14", "79.4386, 38.9048, -55.3683, 1.14", "82.9274, 39.3799, -57.7254, 0.23", "84.7687, 39.6091, -58.9129, 0.68", "86.1626, 39.799, -59.6556, 0.23", "89.1, 40.2495, -60.9171, 1.14", "92.0371, 40.8572, -61.9955, 0.23", "93.5012, 41.257, -62.3966, 0.91", "94.3871, 41.5675, -62.579, 1.36", "97.1362, 42.8076, -63.1232, 0.23", "98.9911, 43.7699, -63.4037, 0.91", "100.308, 44.5382, -63.5475, 0.91", "102.338, 45.828, -63.7729, 0.23", "104.36, 47.085, -64.0188, 0.91", "107.356, 48.823, -64.4585, 0.23", "109.263, 49.8509, -64.7923, 0.91", "111.761, 51.0254, -65.2343, 0.23", "112.486, 51.3377, -65.3592, 0.23", "114.516, 52.1554, -65.7018, 0.23", "117.038, 53.075, -66.0689, 0.68", "118.895, 53.6843, -66.3691, 0.23", "120.972, 54.3691, -66.6891, 0.23", "123.159, 55.0353, -66.9946, 0.68", "131.568, 55.9147, -73.6519, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "13.6035, 60.9302, -12.9431, 0.23", "11.6716, 61.9905, -13.4897, 0.23", "9.8314, 63.1138, -14.1566, 0.91", "7.12472, 65.1046, -15.3291, 0.23", "6.14014, 66.0225, -15.9522, 1.14", "5.31423, 66.9767, -16.6089, 0.23", "4.49218, 68.1098, -17.369, 0.68", "3.79595, 69.5312, -18.3225, 0.23", "3.2656, 71.2271, -19.5104, 1.36", "2.74163, 74.0677, -21.5322, 0.23", "2.56829, 75.5619, -22.5861, 0.91", "2.44544, 77.05, -23.6213, 0.23", "2.34441, 78.8051, -24.7736, 0.68", "2.26538, 80.3134, -25.6931, 0.23", "2.24951, 81.3795, -26.3043, 1.14", "2.33181, 83.297, -27.3281, 0.23", "2.44689, 84.6203, -28.0475, 0.23", "2.58476, 85.864, -28.7135, 0.91", "2.78539, 87.4073, -29.4977, 0.23", "3.02714, 89.1363, -30.3276, 0.23", "3.39104, 91.3753, -31.3697, 1.14", "3.58859, 92.4606, -31.8393, 1.14", "4.01747, 94.4739, -32.7169, 0.23", "4.35527, 96.0798, -33.3995, 0.23", "4.61764, 97.3751, -33.9025, 0.23", "4.79679, 98.4335, -34.3195, 0.23", "4.91313, 99.3878, -34.7223, 0.45", "5.00297, 101.504, -35.9191, 0.23", "4.93376, 102.508, -36.6095, 0.91", "4.7854, 103.447, -37.3874, 0.91", "4.51201, 104.838, -38.6522, 0.68", "4.14276, 106.798, -40.5524, 1.36", "3.74486, 109.118, -42.8964, 0.23", "3.66652, 110.035, -43.8297, 0.23", "3.71999, 111.441, -45.2314, 0.23", "3.9219, 112.39, -46.1263, 1.14", "4.67731, 114.106, -47.4379, 0.23", "4.91562, 114.471, -47.6491, 0.68", "6.65062, 116.68, -48.6296, 0.23", "7.11291, 117.254, -48.8461, 1.14", "8.22207, 118.72, -49.2881, 0.23", "9.66401, 120.633, -49.8279, 0.91", "10.45, 121.695, -50.0725, 0.23", "11.7208, 123.486, -50.4429, 0.68", "12.601, 124.796, -50.6291, 0.68", "13.4398, 126.122, -50.8097, 0.23", "12.155, 135.594, -55.3785, 0.23", "12.4802, 145.628, -58.7661, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "13.6035, 60.9302, -12.9431, 0.23", "14.1306, 61.669, -12.9339, 0.23", "15.0208, 62.8073, -13.0261, 1.14", "16.3248, 64.4232, -13.2147, 0.23", "17.079, 65.3727, -13.3353, 0.68", "17.7415, 66.2194, -13.4454, 0.23", "18.4867, 67.1821, -13.5713, 0.68", "19.6912, 68.7912, -13.858, 0.23", "20.5143, 69.9741, -14.1095, 0.91", "21.2993, 71.2368, -14.3778, 0.23", "21.5485, 71.6717, -14.4382, 0.91", "22.4057, 73.2979, -14.552, 0.23", "23.3075, 75.1091, -14.5919, 0.91", "24.1183, 76.8445, -14.5332, 0.23", "24.4505, 77.5765, -14.4884, 0.91", "25.4374, 79.6504, -14.2635, 0.23", "25.7883, 80.3116, -14.1312, 1.14", "26.1041, 80.8103, -13.9721, 1.14", "26.7015, 81.5318, -13.6123, 0.23", "27.5868, 82.3751, -13.0889, 0.91", "28.6244, 83.1183, -12.5274, 0.23", "30.0048, 83.8587, -11.8748, 0.23", "30.9282, 84.2198, -11.4116, 0.91", "32.3217, 84.6145, -10.7086, 0.23", "33.1538, 84.7915, -10.2949, 0.91", "34.9704, 85.0748, -9.43852, 0.23", "36.1256, 85.2209, -8.93978, 0.68", "38.4985, 85.4662, -8.02553, 0.23", "39.4537, 85.5469, -7.68032, 0.68", "40.1591, 85.5954, -7.46154, 0.23", "41.3758, 85.6689, -7.11707, 0.91", "42.1529, 85.6965, -6.93357, 0.23", "43.0173, 85.7265, -6.77207, 0.23", "43.6691, 85.7516, -6.68515, 0.23", "45.0648, 85.8372, -6.48206, 0.91", "45.7127, 85.8943, -6.38265, 0.23", "46.7041, 86.0247, -6.27916, 0.68", "48.3461, 86.321, -6.17281, 0.23", "49.045, 86.4891, -6.17674, 0.91", "50.3893, 86.9019, -6.26123, 0.23", "51.0958, 87.1431, -6.32823, 0.91", "53.0326, 87.867, -6.57462, 0.23", "54.1894, 88.3428, -6.77527, 0.91", "55.3751, 88.8128, -7.064, 0.23", "56.4819, 89.2696, -7.4111, 0.68", "62.1678, 93.1401, -7.59348, 0.68", "68.2217, 96.1896, -8.77417, 0.68", "74.1039, 99.7254, -9.26636, 0.68", "79.6465, 103.766, -9.81139, 0.68" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-316.519, -99.9903, 59.4814, 0.23", "-318.54, -101.893, 59.8461, 0.23", "-319.808, -103.118, 59.9696, 0.68", "-320.943, -104.242, 60.0316, 0.23", "-322.57, -105.86, 60.0883, 0.45", "-325.409, -108.703, 60.1541, 0.23", "-327.23, -110.509, 60.1867, 0.23", "-329.011, -112.353, 60.1322, 0.91", "-330.54, -114.002, 60.138, 0.23", "-331.187, -114.72, 60.1351, 0.23", "-332.144, -115.81, 60.1269, 0.91", "-333.477, -117.438, 60.0828, 0.23", "-334.189, -118.406, 60.091, 0.91", "-336.132, -121.439, 59.9341, 0.23", "-337.484, -123.79, 59.6133, 0.23", "-338.707, -126.018, 59.2706, 0.23", "-339.969, -128.448, 58.838, 0.23", "-341.089, -130.781, 58.3444, 0.68", "-342.551, -133.964, 57.5294, 0.23", "-343.605, -136.52, 56.6532, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-316.519, -99.9903, 59.4814, 0.23", "-320.495, -99.917, 59.0558, 0.23", "-323.33, -99.9574, 58.8791, 0.45", "-326.18, -100.06, 58.8766, 0.23", "-327.595, -100.126, 58.8544, 0.23", "-328.572, -100.181, 58.8423, 0.23", "-329.863, -100.263, 58.7719, 0.68", "-332.912, -100.597, 58.5912, 0.23", "-334.511, -100.838, 58.479, 0.45", "-337.666, -101.393, 58.1719, 0.23", "-341.072, -102.0, 57.8069, 0.91", "-344.413, -102.57, 57.4489, 0.23", "-347.162, -103.065, 57.1296, 0.91", "-348.641, -103.322, 56.9584, 0.23", "-349.547, -103.481, 56.8477, 0.91", "-351.177, -103.744, 56.714, 0.23", "-353.3, -104.023, 56.3402, 0.68", "-356.069, -104.343, 55.722, 0.23", "-357.855, -104.517, 55.2162, 0.68", "-359.9, -104.753, 54.6049, 0.23", "-361.428, -104.964, 54.066, 0.91", "-366.446, -105.749, 52.1496, 0.23", "-368.716, -106.125, 51.2165, 0.23", "-370.196, -106.355, 50.5851, 0.23", "-373.063, -106.8, 49.3921, 0.91", "-376.096, -107.302, 48.1293, 0.23", "-377.794, -107.616, 47.4552, 0.23", "-379.289, -107.902, 46.8978, 0.68", "-381.852, -108.411, 45.8475, 0.23", "-383.538, -108.755, 45.1275, 0.91", "-386.144, -109.289, 43.9697, 0.23", "-388.522, -109.812, 43.0087, 0.91", "-391.556, -110.602, 41.8098, 0.23", "-392.912, -110.992, 41.293, 0.23", "-394.838, -111.605, 40.6146, 0.68", "-396.708, -112.256, 40.0237, 0.23", "-398.62, -112.987, 39.5208, 1.14", "-400.647, -113.793, 39.03, 0.23", "-402.521, -114.565, 38.6684, 0.23", "-404.961, -115.626, 38.1953, 0.91", "-407.119, -116.595, 37.8264, 0.23", "-409.751, -117.809, 37.2556, 1.14", "-410.9, -118.325, 36.9555, 0.23", "-411.776, -118.68, 36.7198, 0.91", "-413.887, -119.549, 36.1399, 0.23", "-416.395, -120.545, 35.3413, 1.14", "-420.218, -121.986, 33.9919, 0.23", "-421.657, -122.52, 33.4566, 0.23", "-423.5, -123.255, 32.7104, 0.45", "-433.038, -126.413, 30.8228, 0.45" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "14.6454, -38.7374, 29.2179, 0.23", "15.6884, -39.6938, 29.8108, 0.23", "16.7916, -40.76, 30.4619, 0.91", "19.4713, -43.3547, 31.9931, 0.23", "21.4119, -45.2121, 33.0779, 0.91", "24.1054, -47.7708, 34.4843, 0.23", "24.999, -48.655, 34.9346, 0.23", "26.9229, -50.7425, 35.8502, 0.23", "27.5319, -51.5004, 36.2222, 0.68", "28.6482, -53.0777, 37.0114, 0.23", "29.5217, -54.5402, 37.864, 0.91", "30.8134, -57.2199, 39.6191, 0.23", "31.0434, -57.7469, 40.0198, 0.91", "32.852, -62.0706, 43.5518, 0.23", "33.2318, -62.9431, 44.3187, 0.91", "34.3032, -65.0502, 46.4633, 0.23", "34.9039, -65.9482, 47.6039, 0.91", "37.1269, -68.3503, 51.3268, 0.23", "37.759, -68.8801, 52.2057, 0.23", "38.6278, -69.4744, 53.2528, 0.91", "41.3607, -71.1269, 56.2742, 0.23", "44.4241, -72.7843, 59.564, 0.23", "47.4341, -74.3659, 62.7395, 0.23", "49.5739, -75.5243, 64.9701, 0.23", "52.2456, -77.0187, 67.8451, 0.23", "53.7163, -77.8785, 69.4414, 0.91", "57.2972, -79.9672, 72.9719, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "14.6454, -38.7374, 29.2179, 0.23", "14.9179, -42.8182, 29.2458, 0.23", "15.087, -45.2819, 29.3666, 0.23", "15.3233, -49.0147, 29.6046, 0.91", "15.4785, -52.1215, 29.9207, 0.23", "15.53, -53.5116, 30.0752, 0.23", "15.6381, -55.6341, 30.3095, 1.14", "15.8597, -59.2082, 30.7674, 0.23", "16.0933, -61.5845, 31.0669, 0.23", "16.487, -64.1743, 31.3452, 0.91", "17.0076, -66.5427, 31.5033, 0.23", "17.8146, -69.2491, 31.6241, 0.23", "18.2836, -70.5136, 31.6392, 0.91", "19.065, -72.3897, 31.7075, 0.68", "20.2011, -75.0001, 31.9573, 0.23", "20.8157, -76.4371, 32.1426, 0.91", "22.47, -80.4823, 32.9536, 0.23", "23.0641, -82.2066, 33.3782, 0.91", "24.5075, -87.2845, 34.7564, 0.23", "25.0584, -89.9903, 35.5855, 0.91", "25.2306, -91.5034, 36.1173, 0.91", "25.3501, -94.6628, 37.3007, 0.23", "25.2417, -96.9768, 38.1922, 0.91", "24.9606, -98.947, 39.031, 0.23", "24.4201, -100.999, 40.014, 0.91", "23.6303, -103.105, 41.1913, 0.23", "23.1151, -104.202, 41.8843, 1.14", "22.6571, -105.0, 42.4495, 0.23", "20.7525, -108.298, 45.1497, 0.91", "19.7514, -110.038, 46.6517, 0.23", "19.2498, -110.955, 47.4282, 1.14", "18.6788, -112.169, 48.4698, 0.23", "18.2069, -113.44, 49.5834, 0.91", "17.6097, -115.794, 51.6315, 0.23", "17.4498, -116.859, 52.5206, 0.91", "17.3726, -117.487, 53.0303, 0.23", "17.0857, -120.45, 55.5326, 0.91", "16.8563, -122.891, 57.7229, 0.23", "16.6118, -125.542, 60.1152, 0.91", "16.4054, -127.544, 61.9486, 0.23", "16.2744, -128.772, 63.1215, 1.14", "15.9755, -131.182, 65.4616, 0.23", "15.5728, -133.445, 67.6085, 0.91" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "8.70984, -27.3687, -5.61459, 0.23", "8.84413, -31.1788, -3.68746, 0.23", "8.85124, -33.0473, -2.46697, 0.23", "8.90789, -35.4968, -0.712665, 0.91", "8.95915, -36.4758, -0.0088941, 0.23", "9.14022, -38.5658, 1.50067, 0.68", "9.30802, -40.4418, 3.01003, 0.23", "9.57494, -43.7735, 5.89413, 0.68", "9.6489, -44.6619, 6.71857, 0.68", "9.79402, -45.915, 7.87395, 0.23", "10.0095, -47.7513, 9.55676, 1.14", "10.412, -51.3812, 12.5012, 0.23", "10.4624, -52.0953, 12.9809, 0.23", "10.5129, -52.8493, 13.3991, 0.23", "10.5774, -54.3728, 14.1689, 1.14", "10.5934, -57.7709, 15.8777, 0.23", "10.5522, -60.1543, 16.975, 1.14", "10.4524, -64.4963, 18.8821, 0.23", "10.3661, -67.6656, 20.3212, 0.23", "10.3186, -69.829, 21.3166, 0.68", "10.2343, -74.0503, 23.2043, 0.23", "10.1975, -75.8743, 23.9885, 1.14", "10.1133, -79.1066, 25.3807, 0.23", "10.0782, -80.4229, 25.8654, 0.23", "10.0803, -81.7694, 26.2596, 0.23", "10.1264, -83.9458, 26.8523, 0.91", "10.1709, -85.9271, 27.4015, 0.23", "10.1897, -87.769, 27.9945, 0.91", "10.1659, -89.5859, 28.7068, 0.23", "10.0879, -91.5748, 29.6989, 0.91", "9.84584, -94.029, 31.1801, 0.23", "9.31895, -98.4633, 34.118, 0.23", "9.24242, -99.4783, 34.734, 0.68", "9.16454, -102.578, 36.5609, 1.14", "9.34851, -105.609, 38.3454, 0.23", "9.92902, -109.708, 40.6357, 0.23", "10.3409, -111.507, 41.5324, 0.23", "11.9592, -116.988, 43.9273, 0.23", "12.8316, -119.675, 44.9608, 0.68", "14.6735, -125.206, 46.9305, 0.23", "15.4614, -127.346, 47.6458, 0.68", "16.9421, -131.031, 48.8707, 0.23", "17.7919, -133.307, 49.7173, 0.23", "18.5611, -135.739, 50.7868, 0.91", "20.092, -141.38, 52.9347, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "8.70984, -27.3687, -5.61459, 0.23", "6.68756, -29.3855, -6.92232, 0.23", "4.6783, -31.8032, -8.18345, 0.68", "2.32341, -34.9785, -9.80911, 0.68", "1.14437, -36.7133, -10.6504, 0.68", "0.0920929, -38.3949, -11.3989, 0.68", "-1.34564, -40.795, -12.3975, 0.23", "-2.42683, -42.9578, -13.0911, 0.23", "-3.61707, -45.7643, -13.8589, 0.23", "-4.38989, -47.6818, -14.2953, 0.23", "-5.48329, -50.2711, -14.8861, 1.14", "-6.09666, -51.6708, -15.1871, 1.14", "-7.81557, -55.1701, -15.7115, 0.23", "-9.18749, -57.8111, -15.9278, 0.91", "-10.598, -60.5946, -16.0604, 0.91", "-11.1279, -61.652, -16.1108, 0.91", "-12.9107, -65.3056, -16.3957, 0.23", "-14.6079, -69.0183, -16.6897, 0.23", "-16.291, -72.8746, -16.9961, 0.23", "-17.3442, -75.4996, -17.199, 0.23", "-18.3641, -78.3178, -17.5036, 0.91", "-20.0593, -83.4384, -18.2054, 0.23", "-21.3074, -87.5518, -18.909, 0.91", "-21.7434, -89.1188, -19.2276, 0.91", "-22.2872, -91.2408, -19.6263, 0.23", "-22.9394, -93.9392, -20.0518, 0.68", "-23.747, -97.2103, -20.5448, 0.23", "-24.1047, -98.5988, -20.7408, 0.68", "-25.0052, -101.753, -21.2459, 0.23", "-25.452, -103.134, -21.4533, 1.14", "-26.2416, -105.26, -21.7391, 1.14", "-27.6584, -108.544, -22.1383, 0.23", "-29.3985, -111.967, -22.6179, 0.23", "-30.4894, -113.747, -22.8998, 0.91", "-31.6469, -115.357, -23.1826, 0.91", "-33.3604, -117.479, -23.4417, 0.23", "-35.1674, -119.519, -23.5857, 0.91", "-36.1894, -120.573, -23.6034, 0.91", "-38.8176, -122.975, -23.5191, 0.23", "-40.1419, -124.156, -23.4472, 0.23", "-43.4464, -127.12, -23.211, 0.68", "-44.9076, -128.499, -23.0906, 0.23", "-45.8794, -129.516, -23.0125, 1.14", "-46.7657, -130.522, -22.9657, 1.14", "-49.0171, -133.303, -22.9462, 0.23", "-50.1185, -134.683, -23.0161, 0.23", "-51.749, -136.91, -23.2784, 1.14", "-53.3333, -139.332, -23.6541, 0.23", "-53.9327, -140.332, -23.8856, 0.68", "-54.7491, -141.902, -24.3316, 0.23", "-55.625, -143.876, -24.9721, 0.23", "-56.4708, -146.455, -25.905, 0.68", "-57.2384, -149.574, -27.1074, 0.23", "-57.6774, -152.523, -28.2139, 0.23", "-57.8599, -155.54, -29.2737, 0.45", "-57.7873, -157.296, -29.8772, 1.59", "-57.2105, -162.065, -31.4083, 0.23", "-57.0271, -163.103, -31.7249, 0.23", "-56.332, -166.144, -32.5302, 1.14", "-55.825, -168.118, -33.0007, 1.14", "-54.9263, -171.472, -33.8106, 0.23", "-54.3587, -173.539, -34.3089, 0.91", "-53.2491, -177.636, -35.2458, 0.23", "-52.8611, -179.308, -35.6623, 0.23", "-52.3899, -181.676, -36.3222, 1.14", "-52.1508, -183.059, -36.7226, 1.14", "-51.2649, -188.702, -38.4494, 0.23", "-50.838, -191.403, -39.3452, 1.14", "-50.3108, -195.12, -40.7275, 0.23", "-49.9902, -197.518, -41.7227, 1.14", "-49.8924, -198.214, -42.0347, 1.14", "-49.5634, -200.201, -42.8246, 0.23", "-49.3319, -201.24, -43.1061, 0.68", "-48.5558, -203.628, -43.355, 0.23", "-47.5681, -205.576, -43.0591, 1.14", "-46.6729, -207.087, -42.6067, 1.14", "-44.3311, -210.633, -41.298, 0.23", "-42.992, -212.493, -40.5331, 0.91", "-42.2056, -213.541, -40.1594, 0.91", "-39.7551, -216.708, -39.2673, 0.23", "-38.6562, -218.207, -39.0151, 1.14", "-37.3725, -220.252, -38.9993, 1.36", "-35.7084, -223.327, -39.4039, 0.23", "-34.0785, -226.771, -40.0452, 0.23", "-33.0733, -229.129, -40.5322, 0.91", "-32.3342, -231.053, -40.9616, 0.91", "-30.6742, -235.529, -41.8895, 0.23", "-29.9602, -237.52, -42.299, 1.14", "-28.5843, -241.383, -43.0172, 0.23", "-27.8088, -243.664, -43.3482, 1.14", "-27.0523, -246.094, -43.6533, 0.23", "-26.644, -247.468, -43.825, 0.91", "-25.836, -251.474, -44.3172, 0.23", "-25.7036, -254.008, -44.6793, 1.59", "-26.1787, -257.338, -45.222, 0.23", "-26.768, -259.244, -45.408, 0.91", "-27.1601, -260.071, -45.4324, 0.91", "-29.3173, -263.684, -45.2699, 0.23", "-30.6593, -265.528, -45.0349, 1.14", "-31.6379, -266.756, -44.7766, 1.14", "-34.3393, -270.233, -43.8812, 0.23", "-35.1404, -271.432, -43.5782, 0.91", "-36.4297, -273.648, -42.992, 0.23", "-36.8794, -274.626, -42.7248, 0.91", "-37.7476, -277.05, -42.2953, 0.23", "-38.4702, -279.438, -42.1742, 0.91", "-39.4405, -282.905, -42.6042, 0.23", "-39.8768, -284.544, -42.9909, 0.23", "-40.5453, -286.971, -43.8916, 1.14", "-41.5202, -290.492, -45.5345, 0.23", "-42.2053, -293.105, -47.0783, 1.36", "-43.1056, -296.395, -49.2639, 0.23", "-43.5834, -298.238, -50.5859, 1.14", "-44.1515, -300.649, -52.3494, 0.23", "-44.5246, -302.21, -53.4911, 0.68", "-45.3827, -305.776, -55.9646, 0.23", "-45.6878, -307.236, -56.9279, 0.91", "-46.0867, -309.708, -58.3538, 0.23", "-46.2862, -311.342, -59.1665, 0.23", "-46.462, -313.412, -60.0782, 0.23", "-51.0016, -325.003, -60.9139, 0.23", "-56.161, -336.354, -61.3224, 0.23", "-60.6503, -347.994, -61.3334, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "71.8958, -145.272, -107.2, 0.23", "74.9457, -150.363, -111.489, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "71.8958, -145.272, -107.2, 0.23", "74.5995, -153.444, -114.73, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "52.8917, 41.369, -0.0265634, 0.23", "54.8429, 40.8625, 0.999737, 0.23", "56.7316, 40.4969, 1.79938, 0.68", "59.5523, 40.0598, 2.91974, 0.23", "61.6888, 39.8447, 3.67503, 0.91", "63.9445, 39.6485, 4.38028, 0.23", "65.8555, 39.4995, 4.90723, 1.14", "70.0969, 39.3267, 5.9599, 0.23", "72.096, 39.2559, 6.34132, 0.68", "77.4156, 39.1426, 7.26048, 0.23", "79.8848, 39.0903, 7.70137, 0.68", "84.2613, 39.0649, 8.56922, 0.23", "87.0185, 39.074, 9.155, 0.68", "92.9378, 39.194, 10.4604, 0.23", "97.2872, 39.3205, 11.409, 0.23", "101.121, 39.4823, 12.295, 0.68", "105.113, 39.7385, 13.2764, 0.23", "107.499, 39.9538, 13.8843, 0.68", "110.432, 40.3312, 14.6123, 0.23", "113.534, 40.916, 15.4323, 0.23", "114.951, 41.2318, 15.726, 0.23", "115.876, 41.4827, 15.8407, 0.23", "117.748, 42.0367, 16.0289, 0.23", "120.893, 43.1195, 16.372, 0.68", "122.705, 43.8353, 16.5662, 0.23", "124.149, 44.4962, 16.6654, 0.23", "127.154, 45.902, 16.7108, 1.36", "137.336, 46.2457, 19.8232, 1.36", "147.133, 45.2566, 23.8883, 1.36", "157.214, 46.0483, 27.2404, 1.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "52.8917, 41.369, -0.0265634, 0.23", "53.7322, 41.9077, 0.206068, 0.23", "56.0899, 43.4187, 0.858609, 1.14", "58.7259, 45.1081, 1.58817, 0.23", "59.9278, 45.8784, 1.92085, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-53.7638, -21.0046, -21.7895, 0.23", "-59.8082, -26.7363, -22.5941, 0.23", "-65.8272, -32.4328, -23.7593, 0.23", "-71.099, -38.9041, -24.3632, 0.23", "-75.5413, -45.9943, -24.5337, 0.23", "-80.5312, -52.5097, -26.1729, 0.23", "-84.7714, -59.5169, -27.8918, 0.23", "-89.1541, -66.6027, -28.678, 0.23", "-92.7196, -73.9484, -30.5117, 0.23", "-95.5056, -81.7541, -31.6707, 0.23", "-97.9083, -89.5176, -33.6684, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-53.7638, -21.0046, -21.7895, 0.23", "-61.137, -28.87, -24.1229, 0.23", "-69.5053, -36.044, -23.7002, 0.23", "-76.8495, -44.2674, -23.3664, 0.23", "-84.3108, -52.3832, -22.9979, 0.23", "-91.9947, -60.1522, -24.5056, 0.23", "-100.545, -67.1166, -24.2451, 0.23", "-108.412, -74.7896, -23.295, 0.23", "-116.449, -82.3398, -23.0078, 0.23", "-123.447, -90.7516, -24.4023, 0.23", "-130.621, -99.0452, -25.5924, 0.23" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-0.20965, 7.07947, -68.1239, 0.23", "2.17464, 5.30288, -76.2732, 0.23", "4.92113, 3.03627, -84.1834, 0.23", "9.4822, 2.32549, -91.528, 0.23", "12.9009, 2.27683, -99.5006, 0.23", "17.7677, 3.99994, -106.472, 0.23", "21.8843, 6.89468, -113.538, 0.23", "27.2309, 10.9801, -119.013, 0.23", "32.6858, 13.7941, -125.143, 0.23", "38.7745, 16.8978, -130.486, 0.23", "45.1109, 19.5325, -135.792, 0.23", "52.1788, 20.8142, -140.656, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-0.20965, 7.07947, -68.1239, 0.23", "2.98411, 6.1181, -76.6785, 0.23", "5.98651, 4.95377, -85.277, 0.23", "9.7938, 1.86179, -93.039, 0.23", "13.9537, -2.33439, -100.067, 0.23", "16.9732, -6.79245, -107.504, 0.23", "20.1888, -12.2433, -114.157, 0.23", "24.1441, -18.2311, -119.884, 0.23", "27.2222, -24.5548, -125.787, 0.23", "30.4537, -31.672, -130.604, 0.23", "32.4794, -39.4375, -135.065, 0.23", "35.1393, -47.5598, -138.421, 0.23" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-117.667, 90.1098, 16.6038, 0.23", "-119.629, 93.0275, 16.7594, 0.23", "-121.29, 95.3787, 16.9827, 0.23", "-123.185, 98.228, 17.2823, 0.45", "-124.339, 100.115, 17.55, 0.23", "-125.406, 102.172, 18.001, 0.68", "-126.809, 104.878, 18.594, 0.23", "-128.366, 108.051, 19.4544, 0.68", "-129.141, 109.758, 19.9434, 0.23", "-129.988, 111.892, 20.705, 0.68", "-131.316, 116.224, 22.5354, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-117.667, 90.1098, 16.6038, 0.23", "-119.129, 91.2682, 17.0752, 0.23", "-119.988, 91.9707, 17.5054, 0.23", "-120.915, 92.7281, 17.9691, 0.23", "-122.527, 94.045, 18.7756, 0.68", "-124.362, 95.5439, 19.6934, 0.23", "-126.554, 97.3355, 20.7905, 0.23", "-128.519, 99.0518, 21.964, 0.23" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "79.6465, 103.766, -9.81139, 0.23", "85.8903, 107.772, -9.62034, 0.23", "92.3861, 111.228, -10.587, 0.23", "98.4556, 115.295, -11.8868, 0.23", "103.78, 119.644, -14.6806, 0.23", "109.265, 124.491, -15.8998, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "79.6465, 103.766, -9.81139, 0.23", "88.7653, 109.66, -9.36789, 0.23", "97.4228, 116.228, -9.48884, 0.23", "105.864, 122.981, -8.37877, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "15.5728, -133.445, 67.6085, 0.23", "16.0239, -135.998, 67.7861, 0.23", "16.3486, -138.335, 67.9231, 0.68", "16.631, -141.196, 68.0666, 0.23", "16.7614, -143.042, 68.1424, 0.91", "16.8615, -144.409, 68.1978, 0.23", "16.9588, -145.378, 68.2477, 0.23", "17.1662, -146.954, 68.351, 0.68", "17.3786, -148.539, 68.3904, 0.23", "17.5793, -149.673, 68.426, 0.91", "18.2208, -152.027, 68.6016, 0.23", "19.2146, -154.951, 68.8704, 0.91", "19.7982, -156.41, 69.0253, 0.23", "20.5239, -157.991, 69.2116, 0.91", "22.0806, -161.077, 69.6761, 0.23", "23.3539, -163.508, 70.1009, 0.23", "23.9848, -164.678, 70.3222, 0.91", "25.0094, -166.525, 70.7087, 0.23", "25.8602, -168.026, 71.0715, 0.91", "27.5673, -170.941, 71.8083, 0.23", "28.1775, -172.019, 72.0271, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "15.5728, -133.445, 67.6085, 0.23", "14.6501, -136.197, 70.1675, 0.23", "13.5739, -139.347, 73.004, 0.23", "12.8267, -141.7, 75.2132, 0.68", "12.4887, -142.981, 76.4663, 0.23", "12.2647, -143.81, 77.3072, 0.91", "11.4131, -146.939, 80.7045, 0.23", "11.1041, -148.091, 82.0205, 0.91", "10.3549, -150.683, 85.1145, 0.23", "9.63014, -153.084, 87.972, 0.23", "9.33081, -154.087, 89.0955, 0.91", "8.25717, -157.34, 92.4126, 0.23", "7.90418, -158.174, 93.156, 0.91", "7.28337, -159.487, 94.1029, 0.23", "6.6178, -160.79, 94.8327, 1.14", "5.14026, -163.549, 96.0946, 0.23", "3.6157, -166.513, 97.293, 0.91", "1.88975, -169.791, 98.3798, 0.23", "0.484124, -172.48, 99.2906, 0.68", "-0.841313, -174.919, 100.157, 0.23", "-1.88601, -176.71, 100.814, 0.91" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "59.9278, 45.8784, 1.92085, 0.23", "62.2502, 45.5533, 4.29929, 0.23", "66.0808, 45.39, 7.44238, 0.23", "69.1454, 45.4738, 9.57857, 0.91", "71.0157, 45.6508, 10.7575, 0.23", "72.4614, 45.8548, 11.6272, 0.91", "75.4728, 46.3311, 13.2537, 0.23", "79.0102, 47.1117, 14.8799, 0.23", "82.1296, 47.8612, 16.0652, 0.23", "85.9714, 48.7499, 17.4124, 0.23", "89.2112, 49.4366, 18.4774, 0.91", "92.1433, 50.0524, 19.4557, 0.23", "94.2422, 50.5225, 20.1951, 0.68", "96.7488, 51.1085, 21.1655, 0.23", "98.6731, 51.6256, 21.9755, 0.23", "99.5205, 51.8987, 22.3587, 0.23", "102.158, 52.976, 23.7435, 0.91", "104.025, 53.9118, 24.8593, 0.23", "105.336, 54.6838, 25.69, 0.91", "108.389, 56.6276, 27.4568, 0.23", "111.022, 58.4239, 28.8146, 0.23", "112.823, 59.7146, 29.6473, 0.23", "114.384, 60.8596, 30.2875, 0.68", "117.107, 62.8061, 31.2726, 0.23", "121.329, 65.7411, 32.6378, 0.23", "124.013, 67.4436, 33.2963, 0.23", "125.352, 68.2052, 33.57, 0.23", "127.284, 69.1602, 33.8925, 0.23", "129.045, 69.9201, 34.1793, 0.68", "130.001, 70.2405, 34.3539, 0.68", "132.375, 70.8416, 35.0988, 0.23", "134.283, 71.1988, 35.7452, 0.68", "135.644, 71.4165, 36.2276, 0.23", "137.251, 71.6854, 36.8104, 0.68", "140.27, 72.2873, 37.96, 0.23", "142.834, 72.8501, 39.0872, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "59.9278, 45.8784, 1.92085, 0.68", "61.8162, 46.9732, 1.75576, 0.68", "63.0368, 47.684, 1.71475, 0.68", "65.8784, 49.3364, 1.72452, 0.23", "67.8142, 50.4958, 1.78972, 0.23", "70.4558, 52.1088, 1.97822, 0.91", "73.5829, 54.048, 2.28684, 0.23", "74.3395, 54.5306, 2.38465, 1.36", "75.0783, 55.0353, 2.50516, 1.36", "77.0667, 56.7161, 3.00384, 0.23", "78.9212, 58.6534, 3.49949, 0.23", "79.8989, 59.8315, 3.74296, 0.23", "80.6742, 60.8468, 3.87898, 1.14", "82.1628, 62.676, 3.94309, 1.14", "85.0471, 65.8662, 3.69685, 0.23", "86.682, 67.3632, 3.34181, 0.68", "88.3576, 68.6007, 2.91034, 0.23", "90.7563, 70.0271, 2.35548, 0.68", "94.3503, 71.7311, 1.66566, 0.23", "96.6188, 72.5919, 1.39371, 0.23", "99.7635, 73.5231, 1.24427, 1.14", "102.973, 74.3559, 1.54241, 0.23", "105.539, 74.9823, 2.19807, 0.68", "106.647, 75.2609, 2.70485, 0.23", "109.455, 76.0768, 4.56828, 0.91", "110.636, 76.4639, 5.49391, 0.91", "112.542, 77.1452, 7.12781, 0.23", "113.796, 77.6049, 8.15947, 0.23", "114.543, 77.9004, 8.72003, 0.23", "116.693, 78.8285, 10.1204, 0.68", "119.154, 80.0114, 11.4084, 0.23", "120.399, 80.6457, 11.9383, 0.68", "121.723, 81.3432, 12.3445, 0.23", "123.005, 81.9648, 12.6107, 0.23", "124.628, 82.6725, 12.888, 0.23", "125.813, 83.1451, 13.0679, 0.68", "128.921, 84.2689, 13.583, 0.23", "131.225, 85.0527, 13.9609, 1.14", "134.509, 86.079, 14.5233, 0.23", "137.383, 86.8964, 15.0597, 0.23", "139.416, 87.4443, 15.4581, 0.91", "142.856, 88.3263, 16.26, 0.23", "154.129, 95.2425, 16.4805, 0.23", "166.134, 100.785, 16.8046, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-97.9083, -89.5176, -33.6684, 0.23", "-103.674, -97.0524, -30.6701, 0.23", "-110.885, -103.342, -27.9376, 0.23", "-118.011, -108.82, -23.6687, 0.23", "-124.379, -114.52, -18.5734, 0.23", "-128.949, -120.448, -12.0173, 0.23", "-132.991, -125.525, -4.47488, 0.23", "-135.806, -131.088, 3.2803, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-97.9083, -89.5176, -33.6684, 0.23", "-104.212, -99.0813, -37.4193, 0.23", "-111.474, -108.424, -39.7126, 0.23", "-117.439, -118.182, -43.5156, 0.23", "-124.023, -127.924, -46.1635, 0.23", "-130.341, -136.951, -51.0493, 0.23", "-136.26, -145.48, -57.172, 0.23" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-130.621, -99.0452, -25.5924, 0.23", "-138.617, -105.772, -25.2062, 0.23", "-146.817, -112.145, -23.9854, 0.23", "-155.246, -118.117, -22.36, 0.23", "-163.53, -124.293, -20.7614, 0.23", "-171.777, -130.719, -20.5498, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-130.621, -99.0452, -25.5924, 0.23", "-137.105, -105.856, -26.1434, 0.23", "-142.055, -113.819, -27.0416, 0.23", "-145.824, -122.302, -28.6368, 0.23", "-150.513, -130.385, -29.8265, 0.23", "-156.322, -137.767, -30.5165, 0.23" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "52.1788, 20.8142, -140.656, 0.23", "58.5887, 22.5262, -149.541, 0.23", "63.2336, 22.433, -159.61, 0.23", "67.05, 21.3983, -169.97, 0.23", "70.7751, 22.3325, -180.373, 0.23", "74.9701, 24.2443, -190.459, 0.23", "80.3632, 26.4065, -199.904, 0.23", "86.7876, 28.6452, -208.66, 0.23", "93.1338, 30.7225, -217.514, 0.23", "101.663, 32.086, -224.467, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "52.1788, 20.8142, -140.656, 0.23", "56.2744, 21.7656, -146.303, 0.23", "59.3199, 22.7444, -152.574, 0.23", "62.7386, 23.594, -158.669, 0.23", "66.8875, 25.4337, -164.052, 0.23", "71.0253, 27.3104, -169.429, 0.23" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "35.1393, -47.5598, -138.421, 0.23", "39.3973, -52.7889, -145.834, 0.23", "43.8681, -58.7002, -152.579, 0.23", "48.4764, -63.6971, -159.942, 0.23", "51.2742, -69.9749, -167.236, 0.23", "54.1165, -75.5017, -175.097, 0.23", "55.6262, -81.3023, -183.128, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "35.1393, -47.5598, -138.421, 0.23", "38.6197, -52.9365, -145.313, 0.23", "40.6908, -57.506, -153.273, 0.23", "43.8268, -61.6986, -161.091, 0.23", "46.3975, -65.5091, -169.301, 0.23", "48.2964, -68.2536, -178.099, 0.23" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "109.265, 124.491, -15.8998, 0.23", "119.402, 131.277, -17.5243, 0.23", "129.147, 138.793, -17.5867, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "109.265, 124.491, -15.8998, 0.23", "118.841, 131.129, -17.7872, 0.23", "128.048, 138.292, -19.5869, 0.23", "135.868, 147.132, -19.6652, 0.23", "142.438, 156.936, -19.4963, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "28.1775, -172.019, 72.0271, 0.23", "31.0254, -176.774, 72.3451, 0.23", "32.445, -179.144, 72.5036, 0.91", "36.2551, -185.505, 72.9291, 0.23", "37.7301, -187.968, 73.0938, 0.68", "40.6333, -192.815, 73.418, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "28.1775, -172.019, 72.0271, 0.23", "28.5658, -174.151, 73.0509, 0.23", "29.0467, -176.791, 74.3187, 0.68", "29.3517, -178.465, 75.1226, 0.23", "29.5651, -179.637, 75.6853, 0.91" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.88601, -176.71, 100.814, 0.23", "-1.23906, -178.35, 101.881, 0.23", "-0.807346, -179.136, 102.384, 0.68", "1.06535, -182.166, 103.884, 0.23", "1.35763, -182.638, 104.118, 0.23", "2.29476, -184.154, 104.869, 0.23", "3.56885, -186.216, 105.889, 0.91", "4.48664, -187.572, 106.595, 0.23", "5.91347, -189.366, 107.414, 0.68" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-1.88601, -176.71, 100.814, 0.23", "-2.60137, -177.795, 102.856, 0.23", "-3.27986, -178.71, 104.63, 0.91", "-4.25212, -180.027, 107.305, 0.23", "-4.48244, -180.326, 107.959, 0.68", "-5.22979, -181.291, 110.065, 0.23", "-5.42716, -181.594, 110.767, 1.14", "-5.59487, -181.913, 111.57, 1.14", "-6.13808, -183.153, 114.432, 0.23", "-6.497, -184.064, 116.433, 1.14", "-6.59577, -184.371, 117.084, 1.14", "-7.08112, -186.249, 120.918, 0.23", "-7.18222, -186.882, 122.195, 0.23", "-7.25033, -188.173, 124.762, 0.23" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "142.834, 72.8501, 39.0872, 0.23", "143.181, 73.9932, 39.6845, 0.23", "143.389, 74.5669, 39.9806, 0.91", "144.759, 77.5812, 41.5576, 0.23", "145.746, 79.2674, 42.5296, 0.68", "146.707, 80.5525, 43.3344, 0.23", "147.733, 81.7357, 44.1079, 0.91", "148.541, 82.4811, 44.6322, 0.23", "149.795, 83.4351, 45.3447, 0.68", "151.685, 84.585, 46.2658, 0.23", "153.663, 85.6244, 47.1882, 0.23", "154.751, 86.1381, 47.6546, 0.23", "155.789, 86.6111, 48.1074, 0.91", "156.525, 86.9225, 48.4272, 0.91", "162.424, 90.7265, 51.3628, 0.91", "168.236, 94.3742, 54.6499, 0.91", "172.918, 98.7573, 58.7425, 0.91", "177.975, 103.636, 61.659, 0.91" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "142.834, 72.8501, 39.0872, 0.23", "143.816, 72.9149, 39.5005, 0.23", "145.878, 73.0219, 40.3436, 0.45", "148.044, 73.1074, 41.2122, 0.23", "150.22, 73.1964, 42.1466, 0.68", "152.483, 73.3227, 43.1433, 0.23", "154.986, 73.4772, 44.2524, 0.68", "156.022, 73.56, 44.7141, 0.23", "157.097, 73.6506, 45.1916, 0.68", "159.262, 73.8295, 46.1317, 0.23", "162.079, 74.1099, 47.4169, 1.14", "163.455, 74.269, 48.0582, 0.23", "164.1, 74.349, 48.3997, 0.91", "165.531, 74.5646, 49.2032, 0.23", "166.405, 74.7126, 49.6986, 1.14", "168.242, 75.0234, 50.7242, 0.23", "170.375, 75.3876, 52.0731, 0.91", "172.552, 75.7535, 53.5047, 0.23", "174.662, 76.1128, 54.8867, 0.68", "177.247, 76.5648, 56.5431, 0.23", "178.367, 76.7547, 57.2822, 0.68", "180.768, 77.1286, 58.9163, 0.23", "183.078, 77.4717, 60.4951, 0.68", "185.169, 77.7854, 61.9336, 0.23", "186.806, 78.0296, 63.0906, 0.23", "190.79, 78.6221, 65.8738, 0.23", "193.497, 79.0435, 67.6704, 0.23", "195.527, 79.3774, 68.9335, 0.68", "199.066, 80.0253, 71.1751, 0.23", "201.425, 80.4922, 72.6452, 0.23", "203.773, 81.0146, 74.1162, 0.23", "206.239, 81.6099, 75.5662, 0.45", "207.332, 81.8878, 76.1987, 0.68", "211.004, 82.8576, 78.3715, 0.23", "212.842, 83.3489, 79.455, 0.68", "216.061, 84.3488, 81.5742, 0.23" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "166.134, 100.785, 16.8046, 0.23", "171.639, 103.707, 17.6671, 0.23", "176.818, 106.919, 19.2298, 0.23", "182.37, 109.426, 20.8027, 0.23", "187.693, 111.866, 23.1032, 0.23", "192.474, 114.191, 26.4669, 0.23", "196.889, 115.788, 30.6551, 0.23", "201.121, 118.203, 34.6349, 0.23", "205.04, 121.223, 38.5211, 0.23", "209.599, 123.741, 42.0511, 0.23", "213.567, 126.726, 45.9144, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "166.134, 100.785, 16.8046, 0.23", "173.949, 105.063, 18.3636, 0.23", "181.633, 109.303, 20.5485, 0.23", "189.338, 113.963, 21.3909, 0.23", "197.568, 117.684, 21.8557, 0.23", "205.537, 121.432, 23.9134, 0.23", "213.054, 125.933, 26.1548, 0.23" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_27", "dend_26", "dend_15", "dend_0", "axon_0", "dend_56", "dend_45", "dend_39", "dend_28", "dend_19", "dend_16", "dend_4", "dend_1", "axon_1", "dend_62", "dend_57", "dend_53", "dend_46", "dend_43", "dend_40", "dend_30", "dend_29", "dend_23", "dend_20", "dend_18", "dend_17", "dend_14", "dend_5", "dend_3", "dend_2", "dend_70", "dend_63", "dend_59", "dend_58", "dend_55", "dend_54", "dend_52", "dend_47", "dend_42", "dend_41", "dend_38", "dend_31", "dend_25", "dend_24", "dend_22", "dend_21", "dend_13", "dend_6", "dend_74", "dend_71", "dend_67", "dend_64", "dend_61", "dend_60", "dend_49", "dend_48", "dend_35", "dend_32", "dend_10", "dend_7", "dend_76", "dend_75", "dend_73", "dend_72", "dend_69", "dend_68", "dend_66", "dend_65", "dend_51", "dend_50", "dend_37", "dend_36", "dend_34", "dend_33", "dend_12", "dend_11", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_21", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L6_NBC_495063b057_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_56, id: dend_56, parent: dend_44
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_27
create dend_39
public dend_39
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_45
create dend_53
public dend_53
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_4
create dend_14
public dend_14
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_70, id: dend_70, parent: dend_62
create dend_70
public dend_70
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_30
create dend_38
public dend_38
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_13, id: dend_13, parent: dend_5
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_67, id: dend_67, parent: dend_63
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, axon_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, axon_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_22
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.4999998479938421)
    connect dend_27(0), soma_0(0.4999998479938421)
    connect dend_26(0), soma_0(0.4999998479938421)
    connect dend_15(0), soma_0(0.4999998479938421)
    connect dend_0(0), soma_0(0.4999998479938421)
    connect axon_0(0), soma_0(1.0)
    connect dend_56(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_70(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_13(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_67(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.69096, -9.75392, 0.0, 3.54463 ) }
    soma_0 { pt3dadd( 1.52222, -8.84351, 0.0, 6.43815 ) }
    soma_0 { pt3dadd( 1.35347, -7.93311, 0.0, 8.80214 ) }
    soma_0 { pt3dadd( 1.18473, -7.0227, 0.0, 10.0004 ) }
    soma_0 { pt3dadd( 1.01599, -6.11229, 0.0, 10.9716 ) }
    soma_0 { pt3dadd( 0.847242, -5.20188, 0.0, 11.7871 ) }
    soma_0 { pt3dadd( 0.678498, -4.29147, 0.0, 12.5324 ) }
    soma_0 { pt3dadd( 0.509755, -3.38107, 0.0, 13.2727 ) }
    soma_0 { pt3dadd( 0.341011, -2.47066, 0.0, 13.4566 ) }
    soma_0 { pt3dadd( 0.172268, -1.56025, 0.0, 13.5676 ) }
    soma_0 { pt3dadd( 0.00352426, -0.649843, 0.0, 13.7469 ) }
    soma_0 { pt3dadd( -0.165219, 0.260565, 0.0, 13.8983 ) }
    soma_0 { pt3dadd( -0.333963, 1.17097, 0.0, 14.0 ) }
    soma_0 { pt3dadd( -0.502706, 2.08138, 0.0, 13.9192 ) }
    soma_0 { pt3dadd( -0.67145, 2.99179, 0.0, 13.4728 ) }
    soma_0 { pt3dadd( -0.840193, 3.9022, 0.0, 12.9681 ) }
    soma_0 { pt3dadd( -1.00894, 4.8126, 0.0, 12.2669 ) }
    soma_0 { pt3dadd( -1.17768, 5.72301, 0.0, 11.0106 ) }
    soma_0 { pt3dadd( -1.34642, 6.63342, 0.0, 9.31796 ) }
    soma_0 { pt3dadd( -1.51517, 7.54383, 0.0, 7.37652 ) }
    soma_0 { pt3dadd( -1.68391, 8.45424, 0.0, 4.20409 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.62975, 7.11567, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -2.26889, 9.19776, -1.86, 3.64 ) }
    dend_44 { pt3dadd( -3.5647, 13.4191, -1.86, 3.18 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -1.38975, -7.07433, 8.54, 2.73 ) }
    dend_27 { pt3dadd( -2.01311, -9.11307, 8.54, 2.73 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -4.41975, 1.36567, -4.58, 0.68 ) }
    dend_26 { pt3dadd( -5.32493, -0.858383, -5.27799, 0.68 ) }
    dend_26 { pt3dadd( -5.95524, -2.37233, -5.73783, 0.45 ) }
    dend_26 { pt3dadd( -7.29644, -5.30252, -6.54536, 0.45 ) }
    dend_26 { pt3dadd( -8.81285, -8.56262, -7.48067, 0.45 ) }
    dend_26 { pt3dadd( -9.31738, -9.61376, -7.80874, 1.14 ) }
    dend_26 { pt3dadd( -11.2302, -13.5753, -9.28238, 0.23 ) }
    dend_26 { pt3dadd( -11.9029, -15.0193, -9.88491, 0.23 ) }
    dend_26 { pt3dadd( -13.0287, -17.1902, -10.9088, 0.91 ) }
    dend_26 { pt3dadd( -14.7603, -19.9219, -12.5408, 0.23 ) }
    dend_26 { pt3dadd( -15.9915, -21.4763, -13.6931, 0.91 ) }
    dend_26 { pt3dadd( -17.8713, -23.6556, -15.495, 0.23 ) }
    dend_26 { pt3dadd( -18.8238, -24.6517, -16.4957, 0.23 ) }
    dend_26 { pt3dadd( -20.1516, -26.0201, -17.978, 0.68 ) }
    dend_26 { pt3dadd( -22.4931, -28.4775, -20.7412, 0.23 ) }
    dend_26 { pt3dadd( -23.5283, -29.6388, -22.0095, 0.23 ) }
    dend_26 { pt3dadd( -24.4892, -30.8661, -23.2026, 1.14 ) }
    dend_26 { pt3dadd( -26.717, -34.1785, -25.9848, 0.23 ) }
    dend_26 { pt3dadd( -27.4059, -35.4785, -27.0286, 0.23 ) }
    dend_26 { pt3dadd( -28.0578, -37.0166, -28.2374, 1.14 ) }
    dend_26 { pt3dadd( -29.1499, -39.6515, -30.3549, 0.23 ) }
    dend_26 { pt3dadd( -29.7781, -41.0065, -31.655, 0.23 ) }
    dend_26 { pt3dadd( -30.5901, -42.5534, -33.3404, 0.91 ) }
    dend_26 { pt3dadd( -31.8407, -44.8137, -35.9438, 0.91 ) }
    dend_26 { pt3dadd( -32.9723, -46.6423, -38.3143, 0.23 ) }
    dend_26 { pt3dadd( -33.9593, -48.0263, -40.2265, 0.23 ) }
    dend_26 { pt3dadd( -35.5711, -50.0541, -43.0979, 0.68 ) }
    dend_26 { pt3dadd( -36.6749, -51.3792, -45.1036, 0.23 ) }
    dend_26 { pt3dadd( -37.4458, -52.2431, -46.4432, 1.14 ) }
    dend_26 { pt3dadd( -39.515, -54.4816, -49.6556, 0.23 ) }
    dend_26 { pt3dadd( -40.1029, -55.213, -50.5465, 0.23 ) }
    dend_26 { pt3dadd( -40.7049, -56.1597, -51.5146, 0.23 ) }
    dend_26 { pt3dadd( -47.4883, -65.2881, -58.933, 0.23 ) }
    dend_26 { pt3dadd( -54.0456, -74.9784, -65.8233, 0.23 ) }
    dend_26 { pt3dadd( -59.2344, -83.1293, -75.3635, 0.23 ) }
    dend_26 { pt3dadd( -65.1941, -89.0204, -86.0478, 0.23 ) }
    dend_26 { pt3dadd( -72.7259, -96.7406, -94.2968, 0.23 ) }
    dend_26 { pt3dadd( -83.0565, -101.747, -101.548, 0.23 ) }
    dend_26 { pt3dadd( -92.6662, -107.267, -109.395, 0.23 ) }
    dend_26 { pt3dadd( -102.044, -111.725, -118.144, 0.23 ) }
    dend_26 { pt3dadd( -111.785, -117.786, -125.409, 0.23 ) }
    dend_26 { pt3dadd( -119.764, -123.961, -134.496, 0.23 ) }
    dend_26 { pt3dadd( -128.334, -131.645, -141.699, 0.23 ) }
    dend_26 { pt3dadd( -137.351, -140.111, -147.302, 0.23 ) }
    dend_26 { pt3dadd( -146.59, -147.68, -153.762, 0.23 ) }
    dend_26 { pt3dadd( -155.421, -156.84, -158.503, 0.23 ) }
    dend_26 { pt3dadd( -163.833, -167.183, -161.08, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 73/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 2.43025, -8.67433, 1.04, 1.14 ) }
    dend_15 { pt3dadd( 4.3343, -11.0301, -0.18306, 1.14 ) }
    dend_15 { pt3dadd( 5.971, -13.0552, -1.23439, 1.14 ) }
    dend_15 { pt3dadd( 7.55539, -15.0155, -2.25212, 1.14 ) }
    dend_15 { pt3dadd( 8.50614, -16.1919, -2.86284, 1.14 ) }
    dend_15 { pt3dadd( 9.38414, -17.2782, -3.42681, 1.59 ) }
    dend_15 { pt3dadd( 10.4305, -18.5729, -4.09895, 1.59 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 80/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.95025, 5.36567, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 3.93634, 7.25068, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 4.97544, 9.23703, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 6.67125, 12.4788, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 7.65395, 14.3573, -1.12, 1.59 ) }
    dend_0 { pt3dadd( 9.08631, 17.0954, -1.12, 1.82 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.68391, 8.45424, 0.0, 0.824119 ) }
    axon_0 { pt3dadd( -4.41759, 23.203, 0.0, 0.824119 ) }
    axon_0 { pt3dadd( -7.15127, 37.9518, 0.0, 0.824119 ) }
    // Section: dend_56, id: dend_56, parent: dend_44 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -3.5647, 13.4191, -1.86, 0.68 ) }
    dend_56 { pt3dadd( -4.83831, 13.7739, -1.5904, 0.68 ) }
    dend_56 { pt3dadd( -5.73052, 14.0355, -1.41738, 0.68 ) }
    dend_56 { pt3dadd( -6.95403, 14.3942, -1.18011, 1.14 ) }
    dend_56 { pt3dadd( -7.6579, 14.6006, -1.04362, 0.23 ) }
    dend_56 { pt3dadd( -9.29697, 15.0811, -0.725769, 0.23 ) }
    dend_56 { pt3dadd( -10.2292, 15.3545, -0.544991, 0.91 ) }
    dend_56 { pt3dadd( -11.8055, 15.7763, -0.191076, 1.82 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 97/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -3.5647, 13.4191, -1.86, 1.82 ) }
    dend_45 { pt3dadd( -1.55691, 15.376, -2.84211, 1.82 ) }
    dend_45 { pt3dadd( 0.379132, 17.2748, -3.78098, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( 1.8496, 18.7022, -4.46504, 0.68 ) }
    dend_45 { pt3dadd( 2.83997, 19.6327, -4.89247, 1.14 ) }
    dend_45 { pt3dadd( 5.44633, 22.0118, -6.01952, 0.45 ) }
    dend_45 { pt3dadd( 6.91956, 23.3186, -6.67111, 0.45 ) }
    dend_45 { pt3dadd( 7.82606, 24.0523, -7.06915, 1.59 ) }
    dend_45 { pt3dadd( 8.76642, 24.7711, -7.46836, 1.59 ) }
    dend_45 { pt3dadd( 10.1369, 25.801, -8.01308, 0.68 ) }
    dend_45 { pt3dadd( 11.7416, 26.9882, -8.64988, 0.68 ) }
    dend_45 { pt3dadd( 13.0329, 27.8954, -9.12376, 1.36 ) }
    dend_45 { pt3dadd( 14.3158, 28.7582, -9.60289, 2.05 ) }
    dend_45 { pt3dadd( 15.5336, 29.5397, -10.0863, 0.91 ) }
    dend_45 { pt3dadd( 16.8903, 30.4228, -10.6644, 1.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_27 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -2.01311, -9.11307, 8.54, 0.68 ) }
    dend_39 { pt3dadd( -7.76453, -9.41365, 8.89024, 0.68 ) }
    dend_39 { pt3dadd( -14.1052, -9.68335, 9.31604, 0.68 ) }
    dend_39 { pt3dadd( -17.9786, -9.81099, 9.50782, 0.23 ) }
    dend_39 { pt3dadd( -20.7299, -9.89483, 9.62599, 0.91 ) }
    dend_39 { pt3dadd( -24.366, -10.0408, 9.77682, 0.91 ) }
    dend_39 { pt3dadd( -27.8914, -10.1928, 9.87785, 0.23 ) }
    dend_39 { pt3dadd( -30.6206, -10.3008, 9.91162, 0.23 ) }
    dend_39 { pt3dadd( -35.1417, -10.5551, 9.94283, 0.68 ) }
    dend_39 { pt3dadd( -38.4608, -10.8327, 9.91562, 0.68 ) }
    dend_39 { pt3dadd( -41.8705, -11.1703, 9.7959, 0.23 ) }
    dend_39 { pt3dadd( -45.5046, -11.6015, 9.59919, 0.68 ) }
    dend_39 { pt3dadd( -48.1921, -11.9756, 9.43224, 0.68 ) }
    dend_39 { pt3dadd( -53.0295, -12.7577, 9.15343, 0.23 ) }
    dend_39 { pt3dadd( -56.8701, -13.4683, 8.99432, 0.23 ) }
    dend_39 { pt3dadd( -59.6965, -14.0305, 8.90407, 0.68 ) }
    dend_39 { pt3dadd( -61.7828, -14.4679, 8.96164, 0.68 ) }
    dend_39 { pt3dadd( -64.7319, -15.1258, 9.21855, 0.68 ) }
    dend_39 { pt3dadd( -68.5515, -15.9771, 9.713, 0.23 ) }
    dend_39 { pt3dadd( -71.7895, -16.6438, 10.2823, 0.45 ) }
    dend_39 { pt3dadd( -74.7057, -17.2147, 10.9706, 0.45 ) }
    dend_39 { pt3dadd( -80.0987, -18.2749, 12.3893, 0.23 ) }
    dend_39 { pt3dadd( -82.0847, -18.7006, 12.9945, 1.14 ) }
    dend_39 { pt3dadd( -84.059, -19.1652, 13.6532, 1.14 ) }
    dend_39 { pt3dadd( -88.2427, -20.2234, 15.1352, 0.23 ) }
    dend_39 { pt3dadd( -91.3433, -21.1114, 16.236, 0.23 ) }
    dend_39 { pt3dadd( -94.1698, -22.033, 17.1877, 0.91 ) }
    dend_39 { pt3dadd( -99.1535, -23.7999, 18.682, 0.23 ) }
    dend_39 { pt3dadd( -101.582, -24.6999, 19.3799, 1.14 ) }
    dend_39 { pt3dadd( -102.657, -25.1071, 19.6703, 1.14 ) }
    dend_39 { pt3dadd( -106.054, -26.3828, 20.4827, 0.23 ) }
    dend_39 { pt3dadd( -109.064, -27.4201, 21.0639, 1.14 ) }
    dend_39 { pt3dadd( -112.439, -28.4435, 21.6091, 0.23 ) }
    dend_39 { pt3dadd( -115.38, -29.1661, 21.974, 1.14 ) }
    dend_39 { pt3dadd( -117.131, -29.5426, 22.1979, 0.23 ) }
    dend_39 { pt3dadd( -120.705, -30.2258, 22.6627, 0.23 ) }
    dend_39 { pt3dadd( -123.1, -30.6591, 22.9924, 1.14 ) }
    dend_39 { pt3dadd( -124.875, -30.9557, 23.2708, 1.14 ) }
    dend_39 { pt3dadd( -129.398, -31.7743, 24.0404, 0.23 ) }
    dend_39 { pt3dadd( -131.167, -32.1514, 24.477, 1.14 ) }
    dend_39 { pt3dadd( -133.423, -32.6909, 25.1664, 1.14 ) }
    dend_39 { pt3dadd( -136.064, -33.3629, 26.0982, 0.23 ) }
    dend_39 { pt3dadd( -138.683, -34.1004, 27.2037, 0.91 ) }
    dend_39 { pt3dadd( -141.499, -34.9668, 28.525, 0.23 ) }
    dend_39 { pt3dadd( -146.324, -36.6312, 30.8546, 0.23 ) }
    dend_39 { pt3dadd( -147.357, -37.0122, 31.3535, 1.14 ) }
    dend_39 { pt3dadd( -150.245, -38.1208, 32.6242, 1.14 ) }
    dend_39 { pt3dadd( -153.982, -39.6161, 34.0279, 0.23 ) }
    dend_39 { pt3dadd( -155.907, -40.3933, 34.6173, 0.23 ) }
    dend_39 { pt3dadd( -160.849, -42.3585, 36.0015, 0.68 ) }
    dend_39 { pt3dadd( -164.286, -43.674, 36.8199, 0.23 ) }
    dend_39 { pt3dadd( -167.885, -45.0677, 37.6667, 1.14 ) }
    dend_39 { pt3dadd( -172.118, -46.7486, 38.6215, 0.23 ) }
    dend_39 { pt3dadd( -175.713, -48.204, 39.442, 0.91 ) }
    dend_39 { pt3dadd( -180.245, -50.0766, 40.6141, 0.23 ) }
    dend_39 { pt3dadd( -183.213, -51.3188, 41.4648, 0.23 ) }
    dend_39 { pt3dadd( -184.253, -51.7698, 41.8128, 0.23 ) }
    dend_39 { pt3dadd( -185.89, -52.4988, 42.466, 0.23 ) }
    dend_39 { pt3dadd( -188.967, -53.916, 43.9732, 0.91 ) }
    dend_39 { pt3dadd( -191.187, -54.9812, 45.1704, 0.91 ) }
    dend_39 { pt3dadd( -194.087, -56.3287, 46.6692, 0.23 ) }
    dend_39 { pt3dadd( -196.863, -57.5768, 48.049, 1.14 ) }
    dend_39 { pt3dadd( -198.63, -58.3115, 48.9602, 1.14 ) }
    dend_39 { pt3dadd( -202.559, -59.8452, 50.9872, 0.23 ) }
    dend_39 { pt3dadd( -204.645, -60.6292, 52.0193, 0.68 ) }
    dend_39 { pt3dadd( -209.048, -62.3549, 54.1466, 0.23 ) }
    dend_39 { pt3dadd( -212.51, -63.8269, 55.8047, 0.91 ) }
    dend_39 { pt3dadd( -216.776, -65.8925, 57.6953, 0.23 ) }
    dend_39 { pt3dadd( -218.059, -66.6041, 58.2199, 0.23 ) }
    dend_39 { pt3dadd( -219.912, -67.7419, 58.863, 0.23 ) }
    dend_39 { pt3dadd( -222.562, -69.5765, 59.6643, 1.14 ) }
    dend_39 { pt3dadd( -225.9, -72.0784, 60.5071, 0.23 ) }
    dend_39 { pt3dadd( -228.424, -74.0632, 60.8265, 0.68 ) }
    dend_39 { pt3dadd( -232.406, -77.2304, 60.7448, 0.23 ) }
    dend_39 { pt3dadd( -235.634, -79.7515, 60.415, 0.91 ) }
    dend_39 { pt3dadd( -239.328, -82.4385, 59.8985, 0.23 ) }
    dend_39 { pt3dadd( -241.107, -83.621, 59.6516, 0.91 ) }
    dend_39 { pt3dadd( -245.511, -86.2745, 59.0305, 0.23 ) }
    dend_39 { pt3dadd( -249.27, -88.2881, 58.6374, 0.91 ) }
    dend_39 { pt3dadd( -253.028, -90.1052, 58.4081, 0.23 ) }
    dend_39 { pt3dadd( -256.546, -91.6255, 58.3968, 0.91 ) }
    dend_39 { pt3dadd( -261.051, -93.2362, 58.7506, 0.23 ) }
    dend_39 { pt3dadd( -262.814, -93.7739, 59.0008, 0.91 ) }
    dend_39 { pt3dadd( -265.701, -94.4578, 59.6305, 0.23 ) }
    dend_39 { pt3dadd( -268.064, -94.8686, 60.1618, 0.91 ) }
    dend_39 { pt3dadd( -268.947, -94.9682, 60.2855, 0.91 ) }
    dend_39 { pt3dadd( -273.763, -95.399, 60.7776, 0.23 ) }
    dend_39 { pt3dadd( -275.273, -95.4822, 60.9293, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_39 { pt3dadd( -278.287, -95.6197, 61.2345, 0.91 ) }
    dend_39 { pt3dadd( -281.955, -95.7606, 61.611, 0.23 ) }
    dend_39 { pt3dadd( -286.711, -95.906, 62.1136, 0.91 ) }
    dend_39 { pt3dadd( -293.306, -96.1064, 62.845, 0.23 ) }
    dend_39 { pt3dadd( -297.321, -96.2356, 63.3391, 0.91 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 5/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -2.01311, -9.11307, 8.54, 0.91 ) }
    dend_28 { pt3dadd( 0.117166, -12.7144, 9.86741, 0.91 ) }
    dend_28 { pt3dadd( 1.72997, -15.441, 10.8724, 0.91 ) }
    dend_28 { pt3dadd( 3.8226, -18.9787, 12.1763, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 9/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.4305, -18.5729, -4.09895, 0.91 ) }
    dend_19 { pt3dadd( 9.99031, -21.1254, -4.61347, 0.91 ) }
    dend_19 { pt3dadd( 9.56791, -23.5746, -5.10717, 0.91 ) }
    dend_19 { pt3dadd( 9.25709, -25.3768, -5.47046, 0.91 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 13/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 10.4305, -18.5729, -4.09895, 0.23 ) }
    dend_16 { pt3dadd( 12.8515, -19.9357, -3.7776, 0.23 ) }
    dend_16 { pt3dadd( 14.7574, -20.9973, -3.55848, 0.68 ) }
    dend_16 { pt3dadd( 17.3537, -22.4755, -3.29841, 0.68 ) }
    dend_16 { pt3dadd( 18.9267, -23.4306, -3.24713, 0.23 ) }
    dend_16 { pt3dadd( 19.7718, -23.9561, -3.26295, 0.91 ) }
    dend_16 { pt3dadd( 21.035, -24.7435, -3.32496, 0.91 ) }
    dend_16 { pt3dadd( 22.6479, -25.7486, -3.52922, 0.23 ) }
    dend_16 { pt3dadd( 24.1061, -26.5864, -3.81312, 0.91 ) }
    dend_16 { pt3dadd( 26.6061, -27.9608, -4.35244, 0.23 ) }
    dend_16 { pt3dadd( 27.5715, -28.4821, -4.57713, 0.91 ) }
    dend_16 { pt3dadd( 28.8731, -29.1686, -4.88023, 0.23 ) }
    dend_16 { pt3dadd( 30.5291, -30.0516, -5.23828, 1.14 ) }
    dend_16 { pt3dadd( 31.7518, -30.6629, -5.428, 1.14 ) }
    dend_16 { pt3dadd( 34.1423, -31.8052, -5.63628, 0.23 ) }
    dend_16 { pt3dadd( 35.3387, -32.3439, -5.65686, 0.91 ) }
    dend_16 { pt3dadd( 36.5968, -32.9108, -5.63585, 0.91 ) }
    dend_16 { pt3dadd( 39.1076, -33.9615, -5.53609, 0.23 ) }
    dend_16 { pt3dadd( 41.217, -34.7391, -5.37576, 0.68 ) }
    dend_16 { pt3dadd( 43.1251, -35.3334, -5.19949, 0.23 ) }
    dend_16 { pt3dadd( 44.1571, -35.5607, -5.09227, 0.91 ) }
    dend_16 { pt3dadd( 46.4321, -35.9119, -4.83999, 0.23 ) }
    dend_16 { pt3dadd( 48.7482, -36.1071, -4.60522, 0.91 ) }
    dend_16 { pt3dadd( 50.7346, -36.1504, -4.43636, 0.23 ) }
    dend_16 { pt3dadd( 52.1049, -36.1398, -4.39372, 0.91 ) }
    dend_16 { pt3dadd( 54.8574, -36.0941, -4.38116, 0.23 ) }
    dend_16 { pt3dadd( 55.7018, -36.088, -4.398, 1.14 ) }
    dend_16 { pt3dadd( 57.4, -36.1025, -4.47448, 1.14 ) }
    dend_16 { pt3dadd( 59.5793, -36.258, -4.62409, 0.23 ) }
    dend_16 { pt3dadd( 62.1143, -36.6035, -4.84663, 0.68 ) }
    dend_16 { pt3dadd( 63.0906, -36.7967, -4.90734, 1.36 ) }
    dend_16 { pt3dadd( 64.9933, -37.3187, -4.92177, 0.23 ) }
    dend_16 { pt3dadd( 65.8689, -37.5797, -4.89096, 0.45 ) }
    dend_16 { pt3dadd( 68.2501, -38.3188, -4.71555, 0.23 ) }
    dend_16 { pt3dadd( 69.814, -38.8117, -4.5126, 0.91 ) }
    dend_16 { pt3dadd( 72.7742, -39.7671, -3.93313, 0.23 ) }
    dend_16 { pt3dadd( 75.5784, -40.6477, -3.3186, 1.14 ) }
    dend_16 { pt3dadd( 76.9597, -41.0682, -2.98879, 0.23 ) }
    dend_16 { pt3dadd( 78.1726, -41.4082, -2.68516, 0.91 ) }
    dend_16 { pt3dadd( 80.515, -42.0237, -2.04395, 0.23 ) }
    dend_16 { pt3dadd( 81.9024, -42.3777, -1.65693, 1.14 ) }
    dend_16 { pt3dadd( 84.1319, -42.9431, -1.07802, 0.23 ) }
    dend_16 { pt3dadd( 85.426, -43.3041, -0.747446, 0.91 ) }
    dend_16 { pt3dadd( 85.8311, -43.432, -0.64545, 0.91 ) }
    dend_16 { pt3dadd( 87.7447, -44.0626, -0.203811, 0.23 ) }
    dend_16 { pt3dadd( 88.9961, -44.4507, 0.0236113, 0.91 ) }
    dend_16 { pt3dadd( 91.1289, -45.1254, 0.3351, 0.23 ) }
    dend_16 { pt3dadd( 92.6912, -45.6281, 0.554228, 0.91 ) }
    dend_16 { pt3dadd( 94.4584, -46.1867, 0.781521, 0.23 ) }
    dend_16 { pt3dadd( 95.7681, -46.5968, 0.927466, 0.68 ) }
    dend_16 { pt3dadd( 98.6805, -47.5447, 1.19797, 0.23 ) }
    dend_16 { pt3dadd( 100.554, -48.1818, 1.40538, 0.23 ) }
    dend_16 { pt3dadd( 101.743, -48.5761, 1.57804, 1.14 ) }
    dend_16 { pt3dadd( 102.533, -48.8337, 1.72758, 1.14 ) }
    dend_16 { pt3dadd( 104.853, -49.6172, 2.27023, 0.23 ) }
    dend_16 { pt3dadd( 106.205, -50.0691, 2.62886, 1.14 ) }
    dend_16 { pt3dadd( 108.534, -50.8171, 3.28562, 0.23 ) }
    dend_16 { pt3dadd( 111.896, -51.8231, 4.32898, 0.91 ) }
    dend_16 { pt3dadd( 113.461, -52.2859, 4.80904, 0.23 ) }
    dend_16 { pt3dadd( 115.199, -52.7853, 5.29985, 0.91 ) }
    dend_16 { pt3dadd( 117.723, -53.4617, 5.93854, 0.23 ) }
    dend_16 { pt3dadd( 119.606, -53.9762, 6.28636, 0.91 ) }
    dend_16 { pt3dadd( 122.124, -54.7789, 6.55659, 0.23 ) }
    dend_16 { pt3dadd( 125.397, -56.0145, 6.65223, 0.23 ) }
    dend_16 { pt3dadd( 128.002, -57.0875, 6.5757, 0.45 ) }
    dend_16 { pt3dadd( 129.878, -57.9377, 6.44161, 0.23 ) }
    dend_16 { pt3dadd( 132.34, -59.1494, 6.14347, 0.23 ) }
    dend_16 { pt3dadd( 134.362, -60.2111, 5.74849, 0.91 ) }
    dend_16 { pt3dadd( 135.697, -60.9496, 5.3405, 0.23 ) }
    dend_16 { pt3dadd( 136.671, -61.5196, 4.98562, 0.45 ) }
    dend_16 { pt3dadd( 137.397, -61.9535, 4.70408, 0.23 ) }
    dend_16 { pt3dadd( 138.709, -62.6702, 4.20801, 0.91 ) }
    dend_16 { pt3dadd( 140.784, -63.6047, 3.45392, 0.23 ) }
    dend_16 { pt3dadd( 142.384, -64.1984, 2.86482, 0.91 ) }
    dend_16 { pt3dadd( 143.569, -64.6055, 2.43279, 0.23 ) }
    dend_16 { pt3dadd( 143.953, -64.7346, 2.29496, 0.91 ) }
    dend_16 { pt3dadd( 145.323, -65.1869, 1.84928, 0.23 ) }
    dend_16 { pt3dadd( 146.835, -65.7488, 1.40862, 0.45 ) }
    dend_16 { pt3dadd( 148.717, -66.4989, 0.999123, 0.23 ) }
    dend_16 { pt3dadd( 149.341, -66.7594, 0.886342, 0.91 ) }
    dend_16 { pt3dadd( 150.087, -67.1016, 0.760218, 0.23 ) }
    dend_16 { pt3dadd( 151.405, -67.7882, 0.565482, 1.14 ) }
    dend_16 { pt3dadd( 153.398, -69.0004, 0.406383, 0.23 ) }
    dend_16 { pt3dadd( 154.479, -69.7704, 0.314985, 0.68 ) }
    dend_16 { pt3dadd( 155.09, -70.3462, 0.229014, 0.23 ) }
    dend_16 { pt3dadd( 156.097, -71.6491, 0.0123049, 0.23 ) }
    dend_16 { pt3dadd( 156.474, -72.7987, -0.194527, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( 155.981, -74.3797, -0.464363, 0.91 ) }
    dend_16 { pt3dadd( 154.781, -76.7321, -0.86324, 0.23 ) }
    dend_16 { pt3dadd( 153.473, -78.854, -1.23859, 0.23 ) }
    dend_16 { pt3dadd( 152.614, -80.0604, -1.45937, 0.23 ) }
    dend_16 { pt3dadd( 150.854, -82.1415, -1.86287, 0.23 ) }
    dend_16 { pt3dadd( 148.569, -84.4946, -2.34231, 0.68 ) }
    dend_16 { pt3dadd( 156.404, -89.4373, -3.37649, 0.68 ) }
    dend_16 { pt3dadd( 164.321, -93.6557, -5.90607, 0.68 ) }
    dend_16 { pt3dadd( 171.479, -98.1799, -9.8015, 0.68 ) }
    dend_16 { pt3dadd( 178.399, -102.284, -14.5068, 0.68 ) }
    dend_16 { pt3dadd( 186.733, -104.992, -17.6824, 0.68 ) }
    dend_16 { pt3dadd( 195.303, -107.91, -19.8985, 0.68 ) }
    dend_16 { pt3dadd( 203.553, -111.447, -22.4101, 0.68 ) }
    dend_16 { pt3dadd( 212.353, -113.862, -24.3114, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 14/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.08631, 17.0954, -1.12, 0.23 ) }
    dend_4 { pt3dadd( 10.9762, 18.4218, -1.38299, 0.23 ) }
    dend_4 { pt3dadd( 13.9723, 20.3883, -1.68069, 0.68 ) }
    dend_4 { pt3dadd( 14.8711, 20.9783, -1.76999, 0.68 ) }
    dend_4 { pt3dadd( 16.7167, 22.1898, -1.95338, 0.23 ) }
    dend_4 { pt3dadd( 18.8738, 23.6057, -2.16772, 0.91 ) }
    dend_4 { pt3dadd( 20.8674, 24.9143, -2.36582, 0.91 ) }
    dend_4 { pt3dadd( 22.5276, 26.0954, -2.52343, 0.91 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 22/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.08631, 17.0954, -1.12, 0.68 ) }
    dend_1 { pt3dadd( 8.9394, 20.9735, -0.375188, 0.68 ) }
    dend_1 { pt3dadd( 8.8826, 23.4395, -0.0066033, 0.68 ) }
    dend_1 { pt3dadd( 8.86761, 25.454, 0.250449, 0.91 ) }
    dend_1 { pt3dadd( 8.95941, 28.943, 0.399063, 0.23 ) }
    dend_1 { pt3dadd( 9.03566, 30.1478, 0.400002, 0.68 ) }
    dend_1 { pt3dadd( 9.37901, 34.4304, 0.320991, 0.23 ) }
    dend_1 { pt3dadd( 9.67381, 37.2624, 0.103281, 1.14 ) }
    dend_1 { pt3dadd( 9.87886, 38.9107, -0.075491, 1.14 ) }
    dend_1 { pt3dadd( 10.7628, 44.5324, -0.825071, 0.23 ) }
    dend_1 { pt3dadd( 11.4683, 48.0195, -1.36379, 0.91 ) }
    dend_1 { pt3dadd( 11.8408, 49.5391, -1.61399, 0.91 ) }
    dend_1 { pt3dadd( 12.4474, 51.5558, -1.98417, 0.23 ) }
    dend_1 { pt3dadd( 13.3358, 54.3543, -2.47451, 0.23 ) }
    dend_1 { pt3dadd( 13.9432, 56.2057, -2.79553, 0.91 ) }
    dend_1 { pt3dadd( 14.5981, 58.0665, -3.07645, 0.91 ) }
    dend_1 { pt3dadd( 15.5573, 60.749, -3.49367, 0.23 ) }
    dend_1 { pt3dadd( 16.7476, 63.9286, -3.97733, 0.68 ) }
    dend_1 { pt3dadd( 18.0067, 67.1894, -4.50445, 0.23 ) }
    dend_1 { pt3dadd( 18.7815, 69.2561, -4.82334, 0.91 ) }
    dend_1 { pt3dadd( 20.1212, 72.9141, -5.43495, 0.23 ) }
    dend_1 { pt3dadd( 20.7223, 74.4584, -5.70321, 0.23 ) }
    dend_1 { pt3dadd( 21.0865, 75.3644, -5.85339, 1.14 ) }
    dend_1 { pt3dadd( 21.6779, 76.751, -6.03564, 1.14 ) }
    dend_1 { pt3dadd( 22.6311, 78.8533, -6.25404, 0.23 ) }
    dend_1 { pt3dadd( 23.2781, 80.4494, -6.39698, 0.68 ) }
    dend_1 { pt3dadd( 24.3016, 83.4395, -6.66001, 0.23 ) }
    dend_1 { pt3dadd( 24.9897, 85.7342, -6.84155, 0.91 ) }
    dend_1 { pt3dadd( 25.9194, 89.4156, -7.07923, 0.23 ) }
    dend_1 { pt3dadd( 26.4863, 92.1408, -7.20787, 1.14 ) }
    dend_1 { pt3dadd( 27.0397, 96.3118, -7.44387, 0.23 ) }
    dend_1 { pt3dadd( 27.1827, 99.034, -7.60304, 0.68 ) }
    dend_1 { pt3dadd( 27.1389, 100.599, -7.73464, 0.23 ) }
    dend_1 { pt3dadd( 26.9454, 102.939, -7.97101, 0.91 ) }
    dend_1 { pt3dadd( 26.7087, 104.484, -8.13951, 0.91 ) }
    dend_1 { pt3dadd( 25.4301, 110.742, -8.89806, 0.23 ) }
    dend_1 { pt3dadd( 25.0066, 112.605, -9.17666, 1.14 ) }
    dend_1 { pt3dadd( 24.0674, 116.498, -9.913, 0.23 ) }
    dend_1 { pt3dadd( 23.4222, 119.086, -10.4642, 0.91 ) }
    dend_1 { pt3dadd( 22.8434, 121.245, -10.96, 0.91 ) }
    dend_1 { pt3dadd( 21.8784, 124.754, -11.7935, 0.23 ) }
    dend_1 { pt3dadd( 20.5975, 129.247, -13.0478, 0.91 ) }
    dend_1 { pt3dadd( 19.9261, 131.629, -13.7523, 0.23 ) }
    dend_1 { pt3dadd( 19.5465, 133.096, -14.1204, 0.45 ) }
    dend_1 { pt3dadd( 19.1091, 134.971, -14.5755, 0.23 ) }
    dend_1 { pt3dadd( 18.7919, 136.469, -14.9286, 0.91 ) }
    dend_1 { pt3dadd( 18.0776, 140.063, -15.8206, 0.23 ) }
    dend_1 { pt3dadd( 17.5653, 142.634, -16.53, 1.14 ) }
    dend_1 { pt3dadd( 16.5138, 147.846, -18.2024, 0.23 ) }
    dend_1 { pt3dadd( 15.7423, 151.469, -19.5112, 1.36 ) }
    dend_1 { pt3dadd( 14.7956, 155.648, -21.3267, 0.45 ) }
    dend_1 { pt3dadd( 14.2587, 157.817, -22.4518, 0.91 ) }
    dend_1 { pt3dadd( 13.3739, 161.052, -24.3503, 0.23 ) }
    dend_1 { pt3dadd( 12.695, 163.167, -25.8079, 0.68 ) }
    dend_1 { pt3dadd( 12.0752, 164.802, -27.1303, 0.68 ) }
    dend_1 { pt3dadd( 10.7634, 168.091, -29.8742, 0.23 ) }
    dend_1 { pt3dadd( 10.0498, 169.999, -31.4773, 0.23 ) }
    dend_1 { pt3dadd( 9.72802, 171.003, -32.2563, 0.91 ) }
    dend_1 { pt3dadd( 9.28818, 173.225, -33.8873, 0.45 ) }
    dend_1 { pt3dadd( 9.17512, 175.268, -35.2731, 0.23 ) }
    dend_1 { pt3dadd( 9.36584, 176.966, -36.3565, 0.91 ) }
    dend_1 { pt3dadd( 9.96916, 179.121, -37.5939, 0.23 ) }
    dend_1 { pt3dadd( 10.4219, 180.211, -38.2026, 1.14 ) }
    dend_1 { pt3dadd( 11.626, 182.25, -39.4082, 0.23 ) }
    dend_1 { pt3dadd( 12.86, 183.977, -40.4884, 0.91 ) }
    dend_1 { pt3dadd( 14.5569, 186.207, -41.9701, 0.23 ) }
    dend_1 { pt3dadd( 15.3675, 187.284, -42.6993, 0.23 ) }
    dend_1 { pt3dadd( 16.6232, 189.068, -43.9501, 1.14 ) }
    dend_1 { pt3dadd( 18.642, 192.347, -46.4008, 0.23 ) }
    dend_1 { pt3dadd( 20.12, 195.363, -48.7646, 1.14 ) }
    dend_1 { pt3dadd( 21.1756, 198.87, -51.7891, 0.23 ) }
    dend_1 { pt3dadd( 21.361, 199.737, -52.5585, 0.23 ) }
    dend_1 { pt3dadd( 21.5796, 201.606, -54.2946, 0.68 ) }
    dend_1 { pt3dadd( 21.5327, 203.641, -56.3433, 0.23 ) }
    dend_1 { pt3dadd( 21.0258, 205.482, -58.3188, 1.14 ) }
    dend_1 { pt3dadd( 19.4981, 208.329, -61.6221, 0.23 ) }
    dend_1 { pt3dadd( 17.7896, 220.497, -67.3159, 0.23 ) }
    dend_1 { pt3dadd( 14.3007, 233.368, -69.6725, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 12.9933, 246.286, -73.5224, 0.23 ) }
    dend_1 { pt3dadd( 10.0501, 258.996, -77.1548, 0.23 ) }
    dend_1 { pt3dadd( 9.43043, 272.081, -80.5882, 0.23 ) }
    dend_1 { pt3dadd( 7.15155, 285.091, -83.5758, 0.23 ) }
    dend_1 { pt3dadd( 3.13855, 297.673, -86.5728, 0.23 ) }
    dend_1 { pt3dadd( -0.892345, 309.939, -90.6599, 0.23 ) }
    dend_1 { pt3dadd( -4.22797, 321.923, -96.0124, 0.23 ) }
    dend_1 { pt3dadd( -6.62284, 333.255, -103.03, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -7.15127, 37.9518, 0.0, 0.163066 ) }
    axon_1 { pt3dadd( -9.88495, 52.7006, 0.0, 0.163066 ) }
    axon_1 { pt3dadd( -12.6186, 67.4494, 0.0, 0.163066 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 11/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -11.8055, 15.7763, -0.191076, 0.23 ) }
    dend_62 { pt3dadd( -12.9896, 15.7092, -2.3473, 0.23 ) }
    dend_62 { pt3dadd( -13.6675, 15.6708, -3.58193, 0.23 ) }
    dend_62 { pt3dadd( -14.5606, 15.6201, -5.20844, 0.91 ) }
    dend_62 { pt3dadd( -16.2135, 15.5265, -8.21846, 0.23 ) }
    dend_62 { pt3dadd( -17.9726, 15.4268, -11.422, 0.23 ) }
    dend_62 { pt3dadd( -18.6258, 15.3898, -12.6116, 1.14 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 18/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -11.8055, 15.7763, -0.191076, 0.23 ) }
    dend_57 { pt3dadd( -13.083, 16.708, -0.148414, 0.23 ) }
    dend_57 { pt3dadd( -14.8262, 17.974, -0.0669346, 0.91 ) }
    dend_57 { pt3dadd( -17.0413, 19.5601, 0.0463935, 0.68 ) }
    dend_57 { pt3dadd( -19.1546, 21.1024, 0.202932, 0.23 ) }
    dend_57 { pt3dadd( -20.7705, 22.3089, 0.271881, 0.68 ) }
    dend_57 { pt3dadd( -22.1935, 23.384, 0.304962, 0.23 ) }
    dend_57 { pt3dadd( -22.9318, 23.9452, 0.277699, 1.14 ) }
    dend_57 { pt3dadd( -23.9153, 24.6635, 0.181739, 1.14 ) }
    dend_57 { pt3dadd( -26.3272, 26.3856, -0.245939, 0.23 ) }
    dend_57 { pt3dadd( -28.5108, 27.9417, -0.770552, 0.45 ) }
    dend_57 { pt3dadd( -29.8791, 28.8902, -1.13933, 0.23 ) }
    dend_57 { pt3dadd( -31.749, 30.112, -1.65888, 0.23 ) }
    dend_57 { pt3dadd( -34.0143, 31.499, -2.28909, 0.23 ) }
    dend_57 { pt3dadd( -35.7474, 32.4924, -2.76656, 0.91 ) }
    dend_57 { pt3dadd( -36.6851, 32.9775, -3.01224, 0.91 ) }
    dend_57 { pt3dadd( -40.1135, 34.6184, -3.71181, 0.23 ) }
    dend_57 { pt3dadd( -42.2445, 35.6009, -4.06697, 0.68 ) }
    dend_57 { pt3dadd( -44.0101, 36.4018, -4.27351, 0.23 ) }
    dend_57 { pt3dadd( -44.7022, 36.7128, -4.34765, 0.91 ) }
    dend_57 { pt3dadd( -46.3008, 37.3805, -4.48624, 0.91 ) }
    dend_57 { pt3dadd( -49.152, 38.5242, -4.74329, 0.23 ) }
    dend_57 { pt3dadd( -50.5845, 39.0634, -4.87708, 2.05 ) }
    dend_57 { pt3dadd( -52.0082, 39.6491, -4.98461, 2.05 ) }
    // Section: dend_53, id: dend_53, parent: dend_45 (entry count 42/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 16.8903, 30.4228, -10.6644, 0.68 ) }
    dend_53 { pt3dadd( 18.8947, 30.8671, -11.3476, 0.68 ) }
    dend_53 { pt3dadd( 21.8716, 31.4389, -12.4284, 1.14 ) }
    dend_53 { pt3dadd( 24.7794, 31.9754, -13.4118, 0.68 ) }
    dend_53 { pt3dadd( 28.3851, 32.65, -14.5501, 0.68 ) }
    dend_53 { pt3dadd( 30.82, 33.1346, -15.2672, 0.68 ) }
    dend_53 { pt3dadd( 32.8994, 33.5485, -15.8796, 1.14 ) }
    dend_53 { pt3dadd( 36.2628, 34.2184, -16.7873, 0.68 ) }
    dend_53 { pt3dadd( 39.7393, 34.9099, -17.6341, 0.68 ) }
    dend_53 { pt3dadd( 41.877, 35.3667, -18.1542, 0.68 ) }
    dend_53 { pt3dadd( 43.3853, 35.661, -18.4766, 0.91 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.8903, 30.4228, -10.6644, 0.68 ) }
    dend_46 { pt3dadd( 16.9014, 32.9025, -11.3713, 0.68 ) }
    dend_46 { pt3dadd( 16.9136, 34.3066, -11.7092, 1.14 ) }
    dend_46 { pt3dadd( 16.9355, 35.9842, -12.0637, 0.23 ) }
    dend_46 { pt3dadd( 16.9486, 38.5469, -12.4675, 0.68 ) }
    dend_46 { pt3dadd( 16.9249, 40.4135, -12.682, 0.68 ) }
    dend_46 { pt3dadd( 16.9001, 41.3764, -12.7707, 0.68 ) }
    dend_46 { pt3dadd( 16.7761, 43.6597, -12.8479, 1.14 ) }
    dend_46 { pt3dadd( 16.5493, 46.8522, -12.9014, 0.23 ) }
    dend_46 { pt3dadd( 16.388, 48.5787, -12.9013, 0.23 ) }
    dend_46 { pt3dadd( 16.1045, 51.0538, -12.8499, 0.68 ) }
    dend_46 { pt3dadd( 15.9528, 51.9813, -12.8336, 0.68 ) }
    dend_46 { pt3dadd( 15.6087, 53.8032, -12.798, 0.23 ) }
    dend_46 { pt3dadd( 15.3114, 55.092, -12.7722, 0.91 ) }
    dend_46 { pt3dadd( 14.7279, 57.2379, -12.7488, 0.23 ) }
    dend_46 { pt3dadd( 14.3576, 58.5306, -12.8048, 0.68 ) }
    dend_46 { pt3dadd( 13.6035, 60.9302, -12.9431, 1.14 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 70/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -297.321, -96.2356, 63.3391, 0.23 ) }
    dend_43 { pt3dadd( -299.455, -96.0447, 64.0277, 0.23 ) }
    dend_43 { pt3dadd( -300.758, -95.9539, 64.4467, 0.68 ) }
    dend_43 { pt3dadd( -302.481, -95.8633, 64.9834, 0.23 ) }
    dend_43 { pt3dadd( -303.888, -95.8444, 65.3366, 0.45 ) }
    dend_43 { pt3dadd( -307.009, -95.8631, 65.8035, 0.23 ) }
    dend_43 { pt3dadd( -309.318, -95.9015, 66.0381, 0.45 ) }
    dend_43 { pt3dadd( -310.132, -95.9461, 66.0797, 0.23 ) }
    dend_43 { pt3dadd( -311.482, -96.0689, 66.0919, 0.68 ) }
    dend_43 { pt3dadd( -314.351, -96.3948, 66.0071, 0.23 ) }
    dend_43 { pt3dadd( -318.323, -96.9507, 65.9213, 0.68 ) }
    dend_43 { pt3dadd( -319.288, -97.0867, 65.9058, 0.23 ) }
    dend_43 { pt3dadd( -320.268, -97.2412, 65.939, 0.68 ) }
    dend_43 { pt3dadd( -322.234, -97.5924, 66.1072, 0.23 ) }
    dend_43 { pt3dadd( -323.556, -97.8289, 66.3031, 0.91 ) }
    dend_43 { pt3dadd( -326.66, -98.3915, 66.9989, 0.23 ) }
    dend_43 { pt3dadd( -328.385, -98.7039, 67.4695, 1.14 ) }
    dend_43 { pt3dadd( -330.483, -99.0374, 68.0139, 0.23 ) }
    dend_43 { pt3dadd( -331.864, -99.2115, 68.3782, 0.91 ) }
    dend_43 { pt3dadd( -333.971, -99.4091, 68.9231, 0.23 ) }
    dend_43 { pt3dadd( -335.119, -99.4898, 69.1969, 0.68 ) }
    dend_43 { pt3dadd( -336.428, -99.5434, 69.4581, 0.23 ) }
    dend_43 { pt3dadd( -338.129, -99.6133, 69.8161, 0.68 ) }
    dend_43 { pt3dadd( -339.657, -99.6542, 70.1494, 0.23 ) }
    dend_43 { pt3dadd( -340.974, -99.7446, 70.455, 0.91 ) }
    dend_43 { pt3dadd( -341.908, -99.8547, 70.6747, 0.23 ) }
    dend_43 { pt3dadd( -343.6, -100.122, 71.0583, 0.45 ) }
    dend_43 { pt3dadd( -344.378, -100.261, 71.2373, 0.23 ) }
    dend_43 { pt3dadd( -346.238, -100.606, 71.6566, 0.45 ) }
    dend_43 { pt3dadd( -349.284, -101.117, 72.305, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_43 { pt3dadd( -350.784, -101.37, 72.6334, 0.23 ) }
    dend_43 { pt3dadd( -352.885, -101.719, 73.1058, 0.68 ) }
    dend_43 { pt3dadd( -355.436, -102.125, 73.6969, 0.23 ) }
    dend_43 { pt3dadd( -356.927, -102.335, 74.0492, 0.23 ) }
    dend_43 { pt3dadd( -359.293, -102.604, 74.6151, 0.91 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 5/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -297.321, -96.2356, 63.3391, 0.23 ) }
    dend_40 { pt3dadd( -300.969, -97.195, 62.0236, 0.23 ) }
    dend_40 { pt3dadd( -302.161, -97.4542, 61.6774, 0.68 ) }
    dend_40 { pt3dadd( -304.296, -97.8721, 61.2123, 0.23 ) }
    dend_40 { pt3dadd( -306.001, -98.1867, 60.9041, 0.91 ) }
    dend_40 { pt3dadd( -308.416, -98.6324, 60.4675, 0.23 ) }
    dend_40 { pt3dadd( -310.831, -99.0781, 60.0311, 0.45 ) }
    dend_40 { pt3dadd( -313.1, -99.461, 59.8186, 0.23 ) }
    dend_40 { pt3dadd( -315.789, -99.8827, 59.5506, 0.68 ) }
    dend_40 { pt3dadd( -316.519, -99.9903, 59.4814, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 15/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.8226, -18.9787, 12.1763, 1.14 ) }
    dend_30 { pt3dadd( 5.52502, -21.8924, 15.1674, 1.14 ) }
    dend_30 { pt3dadd( 7.56379, -25.4753, 18.5338, 1.14 ) }
    dend_30 { pt3dadd( 9.26334, -28.5833, 21.1636, 0.68 ) }
    dend_30 { pt3dadd( 10.6597, -31.1369, 23.3244, 0.68 ) }
    dend_30 { pt3dadd( 11.3851, -32.4634, 24.4469, 0.91 ) }
    dend_30 { pt3dadd( 12.728, -34.919, 26.5248, 0.68 ) }
    dend_30 { pt3dadd( 13.8598, -37.1362, 28.2202, 1.14 ) }
    dend_30 { pt3dadd( 14.6454, -38.7374, 29.2179, 1.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 24/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 3.8226, -18.9787, 12.1763, 0.23 ) }
    dend_29 { pt3dadd( 3.57623, -22.8074, 10.9458, 0.23 ) }
    dend_29 { pt3dadd( 3.13324, -27.2998, 9.28669, 0.23 ) }
    dend_29 { pt3dadd( 2.6151, -32.5767, 7.29027, 0.23 ) }
    dend_29 { pt3dadd( 2.34358, -36.039, 5.98849, 1.82 ) }
    dend_29 { pt3dadd( 2.08492, -38.5118, 5.01138, 1.82 ) }
    dend_29 { pt3dadd( 1.7564, -41.6259, 3.76316, 0.68 ) }
    dend_29 { pt3dadd( 1.30814, -45.0174, 2.30655, 0.23 ) }
    dend_29 { pt3dadd( 0.830363, -48.1619, 1.08983, 0.23 ) }
    dend_29 { pt3dadd( 0.39269, -50.2138, 0.262623, 0.91 ) }
    dend_29 { pt3dadd( -0.554334, -53.9399, -1.34422, 0.23 ) }
    dend_29 { pt3dadd( -1.15592, -55.958, -2.15141, 0.23 ) }
    dend_29 { pt3dadd( -2.31469, -59.3473, -3.30014, 0.23 ) }
    dend_29 { pt3dadd( -2.91584, -60.9221, -3.67617, 0.68 ) }
    dend_29 { pt3dadd( -4.56807, -64.781, -4.41385, 0.23 ) }
    dend_29 { pt3dadd( -5.23653, -66.2859, -4.61254, 1.36 ) }
    dend_29 { pt3dadd( -6.42748, -69.1339, -4.76424, 0.23 ) }
    dend_29 { pt3dadd( -7.17764, -70.9526, -4.79118, 0.23 ) }
    dend_29 { pt3dadd( -8.1624, -73.7386, -4.68326, 0.91 ) }
    dend_29 { pt3dadd( -8.80384, -76.3167, -4.4941, 0.91 ) }
    dend_29 { pt3dadd( -9.10859, -78.124, -4.36848, 0.91 ) }
    dend_29 { pt3dadd( -9.57912, -82.6097, -4.29597, 0.23 ) }
    dend_29 { pt3dadd( -9.67581, -84.9378, -4.41334, 0.23 ) }
    dend_29 { pt3dadd( -9.71543, -88.1519, -4.80773, 0.91 ) }
    dend_29 { pt3dadd( -9.65193, -92.1147, -5.50255, 0.23 ) }
    dend_29 { pt3dadd( -9.54067, -95.587, -6.24916, 0.45 ) }
    dend_29 { pt3dadd( -9.33592, -100.084, -7.36715, 0.23 ) }
    dend_29 { pt3dadd( -9.16989, -104.135, -8.47899, 0.68 ) }
    dend_29 { pt3dadd( -9.11668, -108.971, -9.926, 0.23 ) }
    dend_29 { pt3dadd( -9.20728, -111.315, -10.6392, 1.14 ) }
    dend_29 { pt3dadd( -9.26391, -111.992, -10.8288, 1.14 ) }
    dend_29 { pt3dadd( -9.42254, -113.631, -11.1888, 1.14 ) }
    dend_29 { pt3dadd( -9.81957, -117.281, -11.8479, 0.23 ) }
    dend_29 { pt3dadd( -10.1052, -120.051, -12.2653, 0.91 ) }
    dend_29 { pt3dadd( -10.489, -124.427, -12.845, 0.23 ) }
    dend_29 { pt3dadd( -10.6536, -126.404, -13.1013, 1.14 ) }
    dend_29 { pt3dadd( -11.0071, -130.803, -13.7108, 0.23 ) }
    dend_29 { pt3dadd( -11.1878, -133.093, -14.0322, 1.14 ) }
    dend_29 { pt3dadd( -11.4525, -136.416, -14.4708, 0.23 ) }
    dend_29 { pt3dadd( -11.6196, -138.145, -14.659, 1.14 ) }
    dend_29 { pt3dadd( -11.8527, -140.123, -14.8556, 1.14 ) }
    dend_29 { pt3dadd( -12.5747, -144.784, -15.3229, 0.23 ) }
    dend_29 { pt3dadd( -13.0968, -147.49, -15.5668, 1.14 ) }
    dend_29 { pt3dadd( -13.9, -151.074, -15.8866, 0.23 ) }
    dend_29 { pt3dadd( -14.4977, -153.549, -16.1017, 1.14 ) }
    dend_29 { pt3dadd( -15.4102, -157.446, -16.4227, 0.23 ) }
    dend_29 { pt3dadd( -15.9214, -159.703, -16.6177, 1.82 ) }
    dend_29 { pt3dadd( -16.8228, -163.974, -16.9767, 0.23 ) }
    dend_29 { pt3dadd( -17.0473, -165.074, -17.0824, 0.68 ) }
    dend_29 { pt3dadd( -17.456, -167.086, -17.2877, 0.23 ) }
    dend_29 { pt3dadd( -18.0241, -170.018, -17.5667, 0.91 ) }
    dend_29 { pt3dadd( -18.6218, -173.022, -17.7981, 0.23 ) }
    dend_29 { pt3dadd( -18.8451, -174.329, -17.7964, 1.14 ) }
    dend_29 { pt3dadd( -19.1359, -176.447, -17.7114, 0.23 ) }
    dend_29 { pt3dadd( -19.297, -177.868, -17.6146, 0.68 ) }
    dend_29 { pt3dadd( -19.6974, -181.852, -17.305, 0.23 ) }
    dend_29 { pt3dadd( -19.8113, -183.273, -17.1834, 1.14 ) }
    dend_29 { pt3dadd( -20.0952, -188.622, -16.6981, 0.23 ) }
    dend_29 { pt3dadd( -20.1897, -191.366, -16.3013, 0.91 ) }
    dend_29 { pt3dadd( -20.222, -192.67, -16.0621, 0.91 ) }
    dend_29 { pt3dadd( -20.2835, -195.448, -15.4727, 0.23 ) }
    dend_29 { pt3dadd( -20.3469, -197.088, -15.0881, 1.14 ) }
    dend_29 { pt3dadd( -20.4431, -198.395, -14.7755, 1.14 ) }
    dend_29 { pt3dadd( -21.3485, -204.282, -13.6933, 0.23 ) }
    dend_29 { pt3dadd( -21.8244, -206.656, -13.313, 0.91 ) }
    dend_29 { pt3dadd( -22.0577, -207.621, -13.2309, 0.91 ) }
    dend_29 { pt3dadd( -22.8559, -210.613, -13.2027, 0.23 ) }
    dend_29 { pt3dadd( -23.2807, -212.091, -13.3313, 0.68 ) }
    dend_29 { pt3dadd( -24.4554, -215.871, -14.1465, 0.23 ) }
    dend_29 { pt3dadd( -24.8801, -217.096, -14.5767, 0.91 ) }
    dend_29 { pt3dadd( -25.9939, -220.244, -15.705, 0.23 ) }
    dend_29 { pt3dadd( -26.6231, -222.055, -16.3048, 1.14 ) }
    dend_29 { pt3dadd( -26.9399, -222.989, -16.5843, 1.14 ) }
    dend_29 { pt3dadd( -27.381, -224.344, -16.899, 1.59 ) }
    dend_29 { pt3dadd( -28.3489, -227.434, -17.305, 0.23 ) }
    dend_29 { pt3dadd( -28.8371, -228.893, -17.4643, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( -29.6883, -231.419, -17.6627, 0.23 ) }
    dend_29 { pt3dadd( -29.9532, -232.224, -17.7549, 0.68 ) }
    dend_29 { pt3dadd( -30.3669, -233.562, -17.97, 0.23 ) }
    dend_29 { pt3dadd( -30.7036, -234.866, -18.2284, 0.91 ) }
    dend_29 { pt3dadd( -31.0175, -236.6, -18.703, 0.23 ) }
    dend_29 { pt3dadd( -31.2394, -238.282, -19.1045, 1.14 ) }
    dend_29 { pt3dadd( -31.5043, -241.376, -19.5492, 0.23 ) }
    dend_29 { pt3dadd( -31.6409, -243.676, -19.7394, 0.23 ) }
    dend_29 { pt3dadd( -31.7387, -245.835, -19.8189, 0.91 ) }
    dend_29 { pt3dadd( -31.8844, -250.021, -19.7918, 0.23 ) }
    dend_29 { pt3dadd( -31.9955, -253.892, -19.5982, 1.14 ) }
    dend_29 { pt3dadd( -32.1002, -259.563, -19.034, 0.23 ) }
    dend_29 { pt3dadd( -32.1432, -261.218, -18.7888, 0.91 ) }
    dend_29 { pt3dadd( -32.1925, -262.237, -18.6041, 0.91 ) }
    dend_29 { pt3dadd( -32.4638, -265.148, -18.0161, 0.23 ) }
    dend_29 { pt3dadd( -32.8596, -267.419, -17.5976, 1.14 ) }
    dend_29 { pt3dadd( -33.7455, -270.705, -17.2262, 0.23 ) }
    dend_29 { pt3dadd( -34.2547, -272.057, -17.1296, 0.68 ) }
    dend_29 { pt3dadd( -35.2851, -274.508, -16.8798, 0.23 ) }
    dend_29 { pt3dadd( -35.8178, -275.667, -16.7353, 1.14 ) }
    dend_29 { pt3dadd( -37.5948, -279.314, -16.1961, 0.23 ) }
    dend_29 { pt3dadd( -38.2004, -280.614, -15.9991, 0.91 ) }
    dend_29 { pt3dadd( -38.4829, -281.272, -15.9058, 0.91 ) }
    dend_29 { pt3dadd( -39.4659, -284.148, -15.2856, 0.23 ) }
    dend_29 { pt3dadd( -39.8026, -285.4, -14.8777, 0.91 ) }
    dend_29 { pt3dadd( -40.4382, -288.139, -13.7567, 0.23 ) }
    dend_29 { pt3dadd( -40.7078, -289.505, -13.121, 1.14 ) }
    dend_29 { pt3dadd( -41.1964, -291.765, -12.0633, 0.23 ) }
    dend_29 { pt3dadd( -41.8455, -294.441, -10.8382, 0.91 ) }
    dend_29 { pt3dadd( -42.4951, -296.903, -9.98263, 0.23 ) }
    dend_29 { pt3dadd( -42.8455, -298.27, -9.61952, 0.91 ) }
    dend_29 { pt3dadd( -43.5337, -300.841, -9.12676, 0.23 ) }
    dend_29 { pt3dadd( -44.2459, -303.452, -8.73962, 1.14 ) }
    dend_29 { pt3dadd( -44.4881, -304.428, -8.68317, 1.14 ) }
    dend_29 { pt3dadd( -45.5246, -309.001, -9.05223, 0.23 ) }
    dend_29 { pt3dadd( -45.907, -310.961, -9.42228, 0.23 ) }
    dend_29 { pt3dadd( -46.0307, -311.783, -9.63146, 0.68 ) }
    dend_29 { pt3dadd( -48.6386, -323.103, -9.77822, 0.68 ) }
    dend_29 { pt3dadd( -49.7065, -334.666, -9.43842, 0.68 ) }
    dend_29 { pt3dadd( -48.9379, -346.213, -8.42392, 0.68 ) }
    dend_29 { pt3dadd( -47.2611, -357.666, -7.43583, 0.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 9.25709, -25.3768, -5.47046, 1.59 ) }
    dend_23 { pt3dadd( 9.19125, -25.6164, -5.4878, 1.59 ) }
    dend_23 { pt3dadd( 8.70984, -27.3687, -5.61459, 1.14 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 44/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 9.25709, -25.3768, -5.47046, 0.23 ) }
    dend_20 { pt3dadd( 9.49725, -26.3116, -6.76663, 0.23 ) }
    dend_20 { pt3dadd( 9.91292, -27.6986, -8.81973, 0.68 ) }
    dend_20 { pt3dadd( 10.3987, -29.2124, -11.0319, 0.23 ) }
    dend_20 { pt3dadd( 10.9719, -30.6907, -13.3128, 0.91 ) }
    dend_20 { pt3dadd( 11.9593, -33.1531, -17.1558, 0.91 ) }
    dend_20 { pt3dadd( 12.524, -34.6039, -19.3911, 0.23 ) }
    dend_20 { pt3dadd( 13.0291, -35.7034, -21.1969, 0.23 ) }
    dend_20 { pt3dadd( 13.3242, -36.2184, -22.0723, 1.59 ) }
    dend_20 { pt3dadd( 14.5962, -38.0874, -25.2235, 0.23 ) }
    dend_20 { pt3dadd( 14.9224, -38.4808, -25.8385, 0.23 ) }
    dend_20 { pt3dadd( 15.4147, -39.0307, -26.4862, 0.23 ) }
    dend_20 { pt3dadd( 16.0477, -39.6119, -27.081, 0.23 ) }
    dend_20 { pt3dadd( 17.1447, -40.4578, -27.9598, 1.14 ) }
    dend_20 { pt3dadd( 18.3439, -41.2678, -28.868, 0.68 ) }
    dend_20 { pt3dadd( 19.5406, -42.1044, -29.7809, 0.68 ) }
    dend_20 { pt3dadd( 20.6419, -42.9351, -30.7035, 0.68 ) }
    dend_20 { pt3dadd( 21.9109, -43.9156, -32.0648, 0.23 ) }
    dend_20 { pt3dadd( 23.2377, -45.0873, -33.8535, 0.23 ) }
    dend_20 { pt3dadd( 24.1459, -45.9651, -35.2187, 0.68 ) }
    dend_20 { pt3dadd( 25.0582, -46.8727, -36.713, 0.23 ) }
    dend_20 { pt3dadd( 25.6503, -47.471, -37.7676, 0.91 ) }
    dend_20 { pt3dadd( 27.674, -49.6193, -41.7818, 0.23 ) }
    dend_20 { pt3dadd( 28.2063, -50.3291, -43.0626, 0.23 ) }
    dend_20 { pt3dadd( 28.7625, -51.1351, -44.5343, 0.68 ) }
    dend_20 { pt3dadd( 31.9259, -55.3086, -51.851, 0.68 ) }
    dend_20 { pt3dadd( 34.5959, -60.009, -59.0439, 0.68 ) }
    dend_20 { pt3dadd( 38.2528, -64.9528, -65.6124, 0.68 ) }
    dend_20 { pt3dadd( 42.0448, -70.8664, -71.2346, 0.68 ) }
    dend_20 { pt3dadd( 44.5698, -76.9353, -77.379, 0.68 ) }
    dend_20 { pt3dadd( 46.2028, -83.6597, -83.1302, 0.68 ) }
    dend_20 { pt3dadd( 47.6402, -91.1258, -87.9418, 0.68 ) }
    dend_20 { pt3dadd( 51.1207, -98.2038, -92.2716, 0.68 ) }
    dend_20 { pt3dadd( 54.3867, -105.554, -96.3037, 0.68 ) }
    dend_20 { pt3dadd( 58.15, -113.086, -99.4783, 0.68 ) }
    dend_20 { pt3dadd( 62.2338, -120.652, -102.13, 0.68 ) }
    dend_20 { pt3dadd( 65.934, -128.709, -103.663, 0.68 ) }
    dend_20 { pt3dadd( 69.4113, -136.882, -105.101, 0.68 ) }
    dend_20 { pt3dadd( 71.8958, -145.272, -107.2, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 83/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 212.353, -113.862, -24.3114, 0.23 ) }
    dend_18 { pt3dadd( 218.188, -116.645, -24.874, 0.23 ) }
    dend_18 { pt3dadd( 223.628, -120.105, -25.6119, 0.23 ) }
    dend_18 { pt3dadd( 228.559, -124.317, -25.3557, 0.23 ) }
    dend_18 { pt3dadd( 232.554, -129.431, -25.3902, 0.23 ) }
    dend_18 { pt3dadd( 236.581, -134.368, -24.1539, 0.23 ) }
    dend_18 { pt3dadd( 240.225, -139.529, -22.6728, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 90/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 212.353, -113.862, -24.3114, 0.23 ) }
    dend_17 { pt3dadd( 218.959, -116.957, -25.0098, 0.23 ) }
    dend_17 { pt3dadd( 225.893, -119.331, -25.0428, 0.23 ) }
    dend_17 { pt3dadd( 232.393, -122.585, -25.9792, 0.23 ) }
    dend_17 { pt3dadd( 238.394, -126.375, -27.8067, 0.23 ) }
    dend_17 { pt3dadd( 243.952, -130.572, -30.0899, 0.23 ) }
    dend_17 { pt3dadd( 249.938, -134.609, -31.3478, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_4 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 22.5276, 26.0954, -2.52343, 0.23 ) }
    dend_14 { pt3dadd( 24.231, 27.1715, -3.00875, 0.23 ) }
    dend_14 { pt3dadd( 26.5707, 28.596, -3.72219, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 29.0048, 30.0728, -4.39574, 0.23 ) }
    dend_14 { pt3dadd( 30.3133, 30.9025, -4.73698, 0.91 ) }
    dend_14 { pt3dadd( 31.1532, 31.4557, -4.97204, 0.91 ) }
    dend_14 { pt3dadd( 32.5159, 32.393, -5.36697, 0.23 ) }
    dend_14 { pt3dadd( 34.5264, 33.8452, -5.88519, 1.59 ) }
    dend_14 { pt3dadd( 36.2999, 35.2052, -6.34128, 0.23 ) }
    dend_14 { pt3dadd( 37.3469, 36.06, -6.63294, 1.14 ) }
    dend_14 { pt3dadd( 39.1476, 37.5219, -7.08337, 0.23 ) }
    dend_14 { pt3dadd( 39.9382, 38.1357, -7.28068, 0.23 ) }
    dend_14 { pt3dadd( 41.4005, 39.2882, -7.67025, 1.14 ) }
    dend_14 { pt3dadd( 42.5305, 40.1527, -8.04713, 0.23 ) }
    dend_14 { pt3dadd( 43.3085, 40.7147, -8.35377, 1.14 ) }
    dend_14 { pt3dadd( 44.4793, 41.5213, -8.82927, 1.14 ) }
    dend_14 { pt3dadd( 46.5718, 42.9173, -9.63018, 0.23 ) }
    dend_14 { pt3dadd( 48.341, 44.07, -10.2718, 1.59 ) }
    dend_14 { pt3dadd( 50.9432, 45.7294, -11.1635, 0.23 ) }
    dend_14 { pt3dadd( 52.5873, 46.8056, -11.6615, 0.68 ) }
    dend_14 { pt3dadd( 54.7646, 48.2471, -12.2, 0.23 ) }
    dend_14 { pt3dadd( 56.1676, 49.2243, -12.478, 1.36 ) }
    dend_14 { pt3dadd( 57.6133, 50.2759, -12.6533, 0.23 ) }
    dend_14 { pt3dadd( 59.3345, 51.6007, -12.7559, 1.36 ) }
    dend_14 { pt3dadd( 62.2456, 54.0378, -12.7616, 0.23 ) }
    dend_14 { pt3dadd( 64.4125, 55.9591, -12.7573, 0.23 ) }
    dend_14 { pt3dadd( 65.6447, 57.159, -12.7503, 0.23 ) }
    dend_14 { pt3dadd( 67.0211, 58.6384, -12.7635, 2.05 ) }
    dend_14 { pt3dadd( 68.5439, 60.437, -12.7873, 0.23 ) }
    dend_14 { pt3dadd( 70.0675, 62.4614, -12.8082, 0.23 ) }
    dend_14 { pt3dadd( 70.9158, 63.7086, -12.814, 1.59 ) }
    dend_14 { pt3dadd( 72.2238, 65.7295, -12.8339, 0.23 ) }
    dend_14 { pt3dadd( 72.6816, 66.4347, -12.8346, 1.14 ) }
    dend_14 { pt3dadd( 73.3076, 67.4375, -12.8387, 1.14 ) }
    dend_14 { pt3dadd( 73.9284, 68.4096, -12.85, 0.23 ) }
    dend_14 { pt3dadd( 75.03, 70.1398, -12.9007, 1.14 ) }
    dend_14 { pt3dadd( 75.8658, 71.4081, -12.8691, 0.23 ) }
    dend_14 { pt3dadd( 76.48, 72.2381, -12.844, 0.23 ) }
    dend_14 { pt3dadd( 77.2141, 73.1373, -12.8314, 0.91 ) }
    dend_14 { pt3dadd( 78.2088, 74.285, -12.8375, 0.23 ) }
    dend_14 { pt3dadd( 79.2046, 75.3968, -12.8679, 1.36 ) }
    dend_14 { pt3dadd( 80.9385, 77.271, -13.0922, 0.23 ) }
    dend_14 { pt3dadd( 82.758, 79.175, -13.4842, 0.23 ) }
    dend_14 { pt3dadd( 83.6976, 80.0657, -13.7535, 0.91 ) }
    dend_14 { pt3dadd( 84.3103, 80.6077, -13.9593, 0.91 ) }
    dend_14 { pt3dadd( 85.6931, 81.7041, -14.5354, 0.23 ) }
    dend_14 { pt3dadd( 87.1349, 82.7057, -15.2197, 0.91 ) }
    dend_14 { pt3dadd( 88.8914, 83.8305, -16.1879, 0.23 ) }
    dend_14 { pt3dadd( 90.3792, 84.7549, -16.9855, 1.14 ) }
    dend_14 { pt3dadd( 91.0495, 85.1378, -17.3107, 1.14 ) }
    dend_14 { pt3dadd( 92.706, 86.0444, -18.0314, 0.23 ) }
    dend_14 { pt3dadd( 93.7237, 86.552, -18.4049, 1.14 ) }
    dend_14 { pt3dadd( 95.3538, 87.3688, -18.8308, 0.23 ) }
    dend_14 { pt3dadd( 96.1443, 87.7615, -19.0197, 1.14 ) }
    dend_14 { pt3dadd( 98.9385, 89.1743, -19.6098, 0.23 ) }
    dend_14 { pt3dadd( 99.9629, 89.7026, -19.8055, 0.23 ) }
    dend_14 { pt3dadd( 101.944, 90.7986, -20.112, 1.82 ) }
    dend_14 { pt3dadd( 104.093, 92.0226, -20.4169, 0.23 ) }
    dend_14 { pt3dadd( 106.696, 93.546, -20.7391, 1.36 ) }
    dend_14 { pt3dadd( 107.416, 93.9968, -20.8261, 0.23 ) }
    dend_14 { pt3dadd( 108.402, 94.6777, -20.9298, 0.68 ) }
    dend_14 { pt3dadd( 110.18, 95.976, -21.0898, 0.23 ) }
    dend_14 { pt3dadd( 111.081, 96.7292, -21.1602, 0.23 ) }
    dend_14 { pt3dadd( 111.823, 97.394, -21.2101, 1.14 ) }
    dend_14 { pt3dadd( 112.565, 98.1124, -21.2097, 1.14 ) }
    dend_14 { pt3dadd( 113.152, 98.7178, -21.2289, 0.23 ) }
    dend_14 { pt3dadd( 113.595, 99.1691, -21.2783, 0.23 ) }
    dend_14 { pt3dadd( 114.349, 99.9748, -21.4244, 1.14 ) }
    dend_14 { pt3dadd( 114.931, 100.645, -21.5624, 1.14 ) }
    dend_14 { pt3dadd( 115.896, 101.773, -21.889, 0.23 ) }
    dend_14 { pt3dadd( 116.423, 102.381, -22.0967, 0.91 ) }
    dend_14 { pt3dadd( 117.531, 103.679, -22.5708, 0.23 ) }
    dend_14 { pt3dadd( 118.72, 105.115, -23.1205, 1.14 ) }
    dend_14 { pt3dadd( 119.777, 106.382, -23.6073, 0.23 ) }
    dend_14 { pt3dadd( 121.048, 107.839, -24.234, 1.14 ) }
    dend_14 { pt3dadd( 121.696, 108.557, -24.5567, 0.23 ) }
    dend_14 { pt3dadd( 122.443, 109.377, -24.9107, 0.68 ) }
    dend_14 { pt3dadd( 123.622, 110.635, -25.3989, 0.23 ) }
    dend_14 { pt3dadd( 124.066, 111.061, -25.587, 0.91 ) }
    dend_14 { pt3dadd( 125.935, 112.859, -26.3928, 0.23 ) }
    dend_14 { pt3dadd( 126.625, 113.567, -26.6909, 0.23 ) }
    dend_14 { pt3dadd( 127.418, 114.449, -27.093, 0.23 ) }
    dend_14 { pt3dadd( 128.298, 115.545, -27.6548, 0.91 ) }
    dend_14 { pt3dadd( 129.295, 117.043, -28.4637, 0.23 ) }
    dend_14 { pt3dadd( 130.01, 118.492, -29.3103, 1.14 ) }
    dend_14 { pt3dadd( 130.236, 119.187, -29.726, 0.23 ) }
    dend_14 { pt3dadd( 130.453, 120.144, -30.3315, 0.91 ) }
    dend_14 { pt3dadd( 130.694, 121.842, -31.3941, 0.23 ) }
    dend_14 { pt3dadd( 130.768, 123.008, -32.0955, 0.91 ) }
    dend_14 { pt3dadd( 130.779, 124.585, -32.9747, 0.23 ) }
    dend_14 { pt3dadd( 130.783, 125.523, -33.5551, 0.91 ) }
    dend_14 { pt3dadd( 130.797, 126.692, -34.3087, 0.23 ) }
    dend_14 { pt3dadd( 130.855, 128.143, -35.2601, 0.23 ) }
    dend_14 { pt3dadd( 130.878, 128.828, -35.7022, 0.91 ) }
    dend_14 { pt3dadd( 130.915, 129.739, -36.2988, 0.23 ) }
    dend_14 { pt3dadd( 131.024, 131.554, -37.4639, 1.14 ) }
    dend_14 { pt3dadd( 131.064, 132.229, -37.9018, 1.14 ) }
    dend_14 { pt3dadd( 131.183, 134.67, -39.4364, 0.23 ) }
    dend_14 { pt3dadd( 131.242, 135.953, -40.2578, 0.23 ) }
    dend_14 { pt3dadd( 131.267, 136.411, -40.5398, 0.45 ) }
    dend_14 { pt3dadd( 131.304, 137.01, -40.874, 0.23 ) }
    dend_14 { pt3dadd( 131.325, 137.75, -41.193, 0.23 ) }
    dend_14 { pt3dadd( 131.366, 139.251, -41.812, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_14 { pt3dadd( 137.731, 146.151, -42.6481, 0.23 ) }
    dend_14 { pt3dadd( 144.436, 152.373, -44.924, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 22.5276, 26.0954, -2.52343, 0.23 ) }
    dend_5 { pt3dadd( 24.6357, 27.123, -2.4086, 0.23 ) }
    dend_5 { pt3dadd( 28.3513, 28.9596, -2.22869, 0.91 ) }
    dend_5 { pt3dadd( 31.5218, 30.4639, -2.14316, 0.23 ) }
    dend_5 { pt3dadd( 33.3118, 31.293, -2.09326, 0.91 ) }
    dend_5 { pt3dadd( 35.2688, 32.1844, -2.00787, 0.23 ) }
    dend_5 { pt3dadd( 37.0693, 33.0067, -1.89625, 0.23 ) }
    dend_5 { pt3dadd( 38.6608, 33.7276, -1.81051, 0.91 ) }
    dend_5 { pt3dadd( 40.3152, 34.5109, -1.73234, 0.23 ) }
    dend_5 { pt3dadd( 42.2303, 35.4709, -1.52061, 0.91 ) }
    dend_5 { pt3dadd( 44.5392, 36.6567, -1.25569, 0.23 ) }
    dend_5 { pt3dadd( 46.6651, 37.7891, -0.951938, 0.68 ) }
    dend_5 { pt3dadd( 48.1549, 38.5857, -0.740682, 0.23 ) }
    dend_5 { pt3dadd( 49.5981, 39.3789, -0.527831, 1.14 ) }
    dend_5 { pt3dadd( 51.6829, 40.623, -0.182202, 0.23 ) }
    dend_5 { pt3dadd( 52.8917, 41.369, -0.0265634, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 18/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.62284, 333.255, -103.03, 0.23 ) }
    dend_3 { pt3dadd( -6.69619, 340.356, -105.726, 0.23 ) }
    dend_3 { pt3dadd( -8.07341, 347.007, -109.128, 0.23 ) }
    dend_3 { pt3dadd( -8.48263, 353.805, -112.493, 0.23 ) }
    dend_3 { pt3dadd( -10.1155, 360.833, -114.869, 0.23 ) }
    dend_3 { pt3dadd( -13.2514, 367.405, -117.031, 0.23 ) }
    dend_3 { pt3dadd( -17.1004, 373.907, -117.808, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 25/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -6.62284, 333.255, -103.03, 0.23 ) }
    dend_2 { pt3dadd( -7.57827, 345.744, -106.437, 0.23 ) }
    dend_2 { pt3dadd( -6.90826, 358.489, -108.813, 0.23 ) }
    dend_2 { pt3dadd( -5.43305, 371.376, -109.317, 0.23 ) }
    dend_2 { pt3dadd( -5.09432, 384.334, -110.014, 0.23 ) }
    dend_2 { pt3dadd( -4.25481, 397.248, -109.004, 0.23 ) }
    dend_2 { pt3dadd( -2.0272, 410.032, -108.652, 0.23 ) }
    // Section: dend_70, id: dend_70, parent: dend_62 (entry count 32/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -18.6258, 15.3898, -12.6116, 0.23 ) }
    dend_70 { pt3dadd( -20.18, 13.8682, -14.0273, 0.23 ) }
    dend_70 { pt3dadd( -21.1005, 13.0104, -14.9087, 0.23 ) }
    dend_70 { pt3dadd( -21.9208, 12.2415, -15.6617, 0.91 ) }
    dend_70 { pt3dadd( -23.4893, 10.7695, -16.9661, 0.68 ) }
    dend_70 { pt3dadd( -24.8916, 9.47098, -18.0, 0.23 ) }
    dend_70 { pt3dadd( -25.9391, 8.55485, -18.664, 0.68 ) }
    dend_70 { pt3dadd( -27.6588, 7.0562, -19.6869, 0.23 ) }
    dend_70 { pt3dadd( -28.4259, 6.46043, -20.0397, 0.91 ) }
    dend_70 { pt3dadd( -30.0439, 5.3497, -20.6044, 0.23 ) }
    dend_70 { pt3dadd( -31.0632, 4.7235, -20.8058, 1.14 ) }
    dend_70 { pt3dadd( -33.1744, 3.42878, -20.9776, 0.23 ) }
    dend_70 { pt3dadd( -34.0318, 2.87119, -21.0015, 0.68 ) }
    dend_70 { pt3dadd( -34.9305, 2.26376, -20.9752, 0.23 ) }
    dend_70 { pt3dadd( -35.6258, 1.75604, -20.9493, 0.23 ) }
    dend_70 { pt3dadd( -36.1762, 1.32289, -20.9113, 0.23 ) }
    dend_70 { pt3dadd( -37.5395, 0.0460453, -20.8332, 1.14 ) }
    dend_70 { pt3dadd( -38.9553, -1.48298, -20.7285, 0.23 ) }
    dend_70 { pt3dadd( -40.4526, -3.2628, -20.7094, 0.91 ) }
    dend_70 { pt3dadd( -41.6267, -4.7274, -20.7472, 0.23 ) }
    dend_70 { pt3dadd( -42.4644, -5.85471, -20.7931, 1.14 ) }
    dend_70 { pt3dadd( -43.9761, -7.91117, -20.9133, 0.23 ) }
    dend_70 { pt3dadd( -44.7576, -9.00451, -21.0012, 0.91 ) }
    dend_70 { pt3dadd( -46.0106, -10.8521, -21.1456, 0.23 ) }
    dend_70 { pt3dadd( -46.7462, -12.0446, -21.2525, 1.14 ) }
    dend_70 { pt3dadd( -47.7063, -13.6841, -21.501, 0.23 ) }
    dend_70 { pt3dadd( -53.7638, -21.0046, -21.7895, 0.23 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 59/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -18.6258, 15.3898, -12.6116, 0.23 ) }
    dend_63 { pt3dadd( -17.3666, 14.9081, -14.3626, 0.23 ) }
    dend_63 { pt3dadd( -15.7747, 14.4021, -16.4997, 0.91 ) }
    dend_63 { pt3dadd( -14.4794, 14.0073, -18.1389, 0.23 ) }
    dend_63 { pt3dadd( -14.0971, 13.9021, -18.6532, 0.68 ) }
    dend_63 { pt3dadd( -13.1909, 13.682, -19.9665, 0.23 ) }
    dend_63 { pt3dadd( -12.616, 13.5626, -20.9146, 1.14 ) }
    dend_63 { pt3dadd( -11.2382, 13.2893, -23.359, 0.23 ) }
    dend_63 { pt3dadd( -10.3046, 13.0552, -25.4012, 0.91 ) }
    dend_63 { pt3dadd( -9.03112, 12.5868, -28.7064, 0.23 ) }
    dend_63 { pt3dadd( -8.53312, 12.3465, -30.2323, 1.36 ) }
    dend_63 { pt3dadd( -7.59946, 11.7646, -33.9505, 0.23 ) }
    dend_63 { pt3dadd( -7.28974, 11.4581, -35.7894, 0.91 ) }
    dend_63 { pt3dadd( -6.91516, 10.5719, -40.391, 0.23 ) }
    dend_63 { pt3dadd( -6.84382, 10.1172, -42.6302, 0.68 ) }
    dend_63 { pt3dadd( -6.87244, 9.54859, -45.0176, 0.91 ) }
    dend_63 { pt3dadd( -6.99478, 8.83253, -47.676, 0.23 ) }
    dend_63 { pt3dadd( -7.17194, 8.39682, -49.145, 0.23 ) }
    dend_63 { pt3dadd( -7.50455, 7.97707, -50.772, 1.14 ) }
    dend_63 { pt3dadd( -4.82125, 6.69779, -59.8103, 1.14 ) }
    dend_63 { pt3dadd( -0.20965, 7.07947, -68.1239, 1.14 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 80/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -52.0082, 39.6491, -4.98461, 0.23 ) }
    dend_59 { pt3dadd( -53.156, 41.4929, -4.45753, 0.23 ) }
    dend_59 { pt3dadd( -54.2372, 43.116, -4.0172, 0.23 ) }
    dend_59 { pt3dadd( -54.7072, 43.7704, -3.85419, 0.91 ) }
    dend_59 { pt3dadd( -56.252, 45.831, -3.27775, 0.23 ) }
    dend_59 { pt3dadd( -57.1914, 47.0364, -2.93483, 0.91 ) }
    dend_59 { pt3dadd( -59.1751, 49.5026, -2.24586, 0.23 ) }
    dend_59 { pt3dadd( -60.4191, 50.9542, -1.75906, 1.14 ) }
    dend_59 { pt3dadd( -62.3902, 53.125, -1.01442, 0.23 ) }
    dend_59 { pt3dadd( -63.8131, 54.6362, -0.524023, 0.91 ) }
    dend_59 { pt3dadd( -65.1133, 55.9326, -0.138208, 0.23 ) }
    dend_59 { pt3dadd( -66.2112, 56.9782, 0.254022, 0.91 ) }
    dend_59 { pt3dadd( -67.8454, 58.3936, 0.901315, 0.23 ) }
    dend_59 { pt3dadd( -69.1643, 59.4675, 1.46518, 0.68 ) }
    dend_59 { pt3dadd( -70.1371, 60.1578, 1.86145, 0.23 ) }
    dend_59 { pt3dadd( -71.189, 60.7874, 2.26958, 0.68 ) }
    dend_59 { pt3dadd( -73.4294, 61.915, 3.14661, 0.23 ) }
    dend_59 { pt3dadd( -74.5247, 62.3605, 3.57863, 1.14 ) }
    dend_59 { pt3dadd( -76.287, 62.9305, 4.23853, 0.23 ) }
    dend_59 { pt3dadd( -78.4487, 63.5052, 5.07505, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_59 { pt3dadd( -80.6692, 63.9801, 5.85213, 0.68 ) }
    dend_59 { pt3dadd( -81.7925, 64.1996, 6.17737, 0.23 ) }
    dend_59 { pt3dadd( -84.4037, 64.6651, 6.73925, 0.68 ) }
    dend_59 { pt3dadd( -85.3741, 64.8393, 6.92376, 0.23 ) }
    dend_59 { pt3dadd( -86.7789, 65.1054, 7.1436, 0.68 ) }
    dend_59 { pt3dadd( -88.3718, 65.4688, 7.32785, 0.23 ) }
    dend_59 { pt3dadd( -90.5706, 66.0438, 7.50152, 0.91 ) }
    dend_59 { pt3dadd( -92.9738, 66.8021, 7.67915, 0.23 ) }
    dend_59 { pt3dadd( -95.0102, 67.5591, 7.80244, 0.91 ) }
    dend_59 { pt3dadd( -97.1093, 68.4552, 8.04397, 0.23 ) }
    dend_59 { pt3dadd( -98.0935, 68.9076, 8.20125, 0.23 ) }
    dend_59 { pt3dadd( -100.064, 69.915, 8.5636, 0.91 ) }
    dend_59 { pt3dadd( -101.801, 70.8999, 8.97831, 0.23 ) }
    dend_59 { pt3dadd( -102.933, 71.6139, 9.29163, 0.68 ) }
    dend_59 { pt3dadd( -105.769, 73.5637, 10.1757, 0.23 ) }
    dend_59 { pt3dadd( -107.455, 74.8337, 10.7457, 0.68 ) }
    dend_59 { pt3dadd( -109.487, 76.4924, 11.453, 0.23 ) }
    dend_59 { pt3dadd( -111.294, 78.1927, 12.1828, 0.23 ) }
    dend_59 { pt3dadd( -112.392, 79.3772, 12.6811, 0.23 ) }
    dend_59 { pt3dadd( -113.308, 80.5663, 13.1324, 0.68 ) }
    dend_59 { pt3dadd( -113.788, 81.3321, 13.3965, 0.23 ) }
    dend_59 { pt3dadd( -114.133, 81.9705, 13.6273, 0.91 ) }
    dend_59 { pt3dadd( -115.631, 85.0866, 14.8146, 0.23 ) }
    dend_59 { pt3dadd( -116.187, 86.3793, 15.2573, 0.23 ) }
    dend_59 { pt3dadd( -116.92, 88.244, 15.928, 0.23 ) }
    dend_59 { pt3dadd( -117.667, 90.1098, 16.6038, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 26/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -52.0082, 39.6491, -4.98461, 0.45 ) }
    dend_58 { pt3dadd( -54.6035, 39.0346, -5.12713, 0.45 ) }
    dend_58 { pt3dadd( -57.9153, 38.163, -5.20277, 0.91 ) }
    dend_58 { pt3dadd( -59.6491, 37.6327, -5.30791, 0.23 ) }
    dend_58 { pt3dadd( -62.2706, 36.6407, -5.57321, 0.91 ) }
    dend_58 { pt3dadd( -63.2201, 36.2437, -5.67987, 0.91 ) }
    dend_58 { pt3dadd( -64.3586, 35.7447, -5.82445, 0.23 ) }
    dend_58 { pt3dadd( -66.4743, 34.7328, -6.13038, 0.68 ) }
    dend_58 { pt3dadd( -68.8791, 33.462, -6.48634, 0.23 ) }
    dend_58 { pt3dadd( -71.3316, 32.1529, -6.8492, 1.14 ) }
    dend_58 { pt3dadd( -72.7217, 31.4106, -7.07857, 1.14 ) }
    dend_58 { pt3dadd( -75.4742, 29.9851, -7.5814, 0.23 ) }
    dend_58 { pt3dadd( -77.1192, 29.2142, -7.89115, 1.14 ) }
    dend_58 { pt3dadd( -80.1018, 27.9059, -8.4844, 0.23 ) }
    dend_58 { pt3dadd( -81.7748, 27.2587, -8.75431, 0.23 ) }
    dend_58 { pt3dadd( -84.5749, 26.2588, -9.13335, 0.23 ) }
    dend_58 { pt3dadd( -85.1, 26.0706, -9.17577, 0.91 ) }
    dend_58 { pt3dadd( -86.6322, 25.5478, -9.20059, 1.59 ) }
    dend_58 { pt3dadd( -90.0523, 24.4841, -9.0811, 0.23 ) }
    dend_58 { pt3dadd( -93.305, 23.6014, -8.80277, 1.36 ) }
    dend_58 { pt3dadd( -95.9836, 22.9624, -8.4287, 0.91 ) }
    dend_58 { pt3dadd( -99.7203, 22.1904, -7.70515, 0.23 ) }
    dend_58 { pt3dadd( -102.472, 21.6728, -7.09838, 1.14 ) }
    dend_58 { pt3dadd( -105.225, 21.2102, -6.41416, 0.23 ) }
    dend_58 { pt3dadd( -106.843, 21.024, -5.95885, 0.23 ) }
    dend_58 { pt3dadd( -109.196, 20.8382, -5.30593, 0.68 ) }
    dend_58 { pt3dadd( -110.444, 20.7817, -4.97738, 0.68 ) }
    dend_58 { pt3dadd( -112.218, 20.7259, -4.55205, 0.23 ) }
    dend_58 { pt3dadd( -114.48, 20.6191, -4.01649, 0.91 ) }
    dend_58 { pt3dadd( -116.554, 20.4874, -3.58704, 0.23 ) }
    dend_58 { pt3dadd( -117.571, 20.4107, -3.4116, 0.91 ) }
    dend_58 { pt3dadd( -119.363, 20.2673, -3.16842, 0.23 ) }
    dend_58 { pt3dadd( -122.722, 19.9854, -2.74108, 1.14 ) }
    dend_58 { pt3dadd( -124.0, 19.8725, -2.5886, 0.23 ) }
    dend_58 { pt3dadd( -125.801, 19.7098, -2.38626, 0.68 ) }
    dend_58 { pt3dadd( -128.142, 19.4766, -2.12315, 0.23 ) }
    dend_58 { pt3dadd( -129.931, 19.3241, -1.86484, 0.45 ) }
    dend_58 { pt3dadd( -131.48, 19.2018, -1.5245, 0.23 ) }
    dend_58 { pt3dadd( -132.229, 19.1548, -1.31399, 0.23 ) }
    dend_58 { pt3dadd( -134.198, 19.0713, -0.583442, 0.91 ) }
    dend_58 { pt3dadd( -137.511, 18.9432, 0.895878, 0.23 ) }
    dend_58 { pt3dadd( -139.82, 18.8714, 2.01267, 0.91 ) }
    dend_58 { pt3dadd( -144.091, 18.7911, 4.16415, 0.23 ) }
    dend_58 { pt3dadd( -145.234, 18.7728, 4.76097, 0.23 ) }
    dend_58 { pt3dadd( -148.14, 18.7002, 6.35899, 1.59 ) }
    dend_58 { pt3dadd( -151.768, 18.5836, 8.54192, 0.23 ) }
    dend_58 { pt3dadd( -152.89, 18.5379, 9.24872, 0.91 ) }
    dend_58 { pt3dadd( -153.605, 18.5094, 9.70418, 0.91 ) }
    dend_58 { pt3dadd( -156.397, 18.4102, 11.4822, 0.23 ) }
    dend_58 { pt3dadd( -158.959, 18.2697, 13.1041, 0.91 ) }
    dend_58 { pt3dadd( -161.43, 18.0977, 14.6166, 0.23 ) }
    dend_58 { pt3dadd( -162.757, 18.001, 15.429, 1.14 ) }
    dend_58 { pt3dadd( -165.347, 17.7732, 16.9346, 0.23 ) }
    dend_58 { pt3dadd( -166.745, 17.6164, 17.6771, 0.91 ) }
    dend_58 { pt3dadd( -167.852, 17.4943, 18.1733, 0.23 ) }
    dend_58 { pt3dadd( -169.362, 17.3106, 18.6744, 0.68 ) }
    dend_58 { pt3dadd( -173.491, 16.762, 19.7479, 0.23 ) }
    dend_58 { pt3dadd( -175.24, 16.5139, 20.1694, 0.91 ) }
    dend_58 { pt3dadd( -177.345, 16.1943, 20.6189, 0.23 ) }
    dend_58 { pt3dadd( -179.819, 15.8266, 21.0694, 0.68 ) }
    dend_58 { pt3dadd( -182.379, 15.4192, 21.4664, 0.23 ) }
    dend_58 { pt3dadd( -184.307, 15.0769, 21.7173, 0.23 ) }
    dend_58 { pt3dadd( -186.75, 14.5508, 21.9766, 0.91 ) }
    dend_58 { pt3dadd( -189.509, 13.9103, 22.2827, 0.23 ) }
    dend_58 { pt3dadd( -191.455, 13.4474, 22.5114, 1.14 ) }
    dend_58 { pt3dadd( -194.28, 12.7433, 22.8779, 0.23 ) }
    dend_58 { pt3dadd( -195.775, 12.4048, 23.0888, 0.91 ) }
    dend_58 { pt3dadd( -198.157, 11.9773, 23.365, 0.23 ) }
    dend_58 { pt3dadd( -200.969, 11.6402, 23.6666, 0.91 ) }
    dend_58 { pt3dadd( -202.541, 11.5359, 23.8617, 0.23 ) }
    dend_58 { pt3dadd( -203.865, 11.5296, 24.0536, 0.68 ) }
    dend_58 { pt3dadd( -205.308, 11.6084, 24.2444, 0.23 ) }
    dend_58 { pt3dadd( -207.936, 11.8981, 24.6307, 0.91 ) }
    dend_58 { pt3dadd( -210.476, 12.2953, 25.1385, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_58 { pt3dadd( -211.707, 12.548, 25.4407, 0.23 ) }
    dend_58 { pt3dadd( -212.666, 12.75, 25.7141, 0.91 ) }
    dend_58 { pt3dadd( -213.681, 12.9665, 26.0543, 0.23 ) }
    dend_58 { pt3dadd( -216.276, 13.4786, 27.022, 0.91 ) }
    dend_58 { pt3dadd( -218.457, 13.9291, 28.0864, 0.23 ) }
    dend_58 { pt3dadd( -220.066, 14.3155, 29.0956, 0.68 ) }
    dend_58 { pt3dadd( -221.321, 14.6331, 30.0122, 0.23 ) }
    dend_58 { pt3dadd( -223.866, 15.2785, 32.2278, 0.91 ) }
    dend_58 { pt3dadd( -225.177, 15.6138, 33.4378, 0.23 ) }
    dend_58 { pt3dadd( -227.68, 16.2542, 35.9071, 0.91 ) }
    dend_58 { pt3dadd( -229.967, 16.8692, 38.3192, 0.23 ) }
    dend_58 { pt3dadd( -231.378, 17.2358, 40.0019, 0.91 ) }
    dend_58 { pt3dadd( -233.586, 17.9407, 43.024, 0.23 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 13/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 43.3853, 35.661, -18.4766, 0.23 ) }
    dend_55 { pt3dadd( 45.3032, 37.2089, -17.8459, 0.23 ) }
    dend_55 { pt3dadd( 46.5828, 38.1631, -17.3832, 0.91 ) }
    dend_55 { pt3dadd( 48.22, 39.3139, -16.6828, 0.23 ) }
    dend_55 { pt3dadd( 50.5359, 40.9089, -15.6821, 0.23 ) }
    dend_55 { pt3dadd( 51.2331, 41.3825, -15.3833, 0.91 ) }
    dend_55 { pt3dadd( 52.8238, 42.5039, -14.6582, 0.23 ) }
    dend_55 { pt3dadd( 54.0208, 43.3284, -14.0478, 0.68 ) }
    dend_55 { pt3dadd( 55.6926, 44.553, -13.1566, 0.23 ) }
    dend_55 { pt3dadd( 56.8932, 45.5266, -12.4627, 0.68 ) }
    dend_55 { pt3dadd( 58.3794, 46.9071, -11.6405, 0.23 ) }
    dend_55 { pt3dadd( 59.7696, 48.2776, -10.8973, 0.68 ) }
    dend_55 { pt3dadd( 60.4435, 48.9836, -10.573, 0.23 ) }
    dend_55 { pt3dadd( 61.1234, 49.7006, -10.2879, 0.91 ) }
    dend_55 { pt3dadd( 62.6662, 51.1912, -9.80939, 0.23 ) }
    dend_55 { pt3dadd( 63.8536, 52.1992, -9.5208, 0.68 ) }
    dend_55 { pt3dadd( 65.5971, 53.5073, -9.22399, 0.23 ) }
    dend_55 { pt3dadd( 66.7198, 54.2147, -9.07083, 0.68 ) }
    dend_55 { pt3dadd( 69.0931, 55.5722, -8.67884, 0.23 ) }
    dend_55 { pt3dadd( 71.3402, 56.7663, -8.29408, 0.91 ) }
    dend_55 { pt3dadd( 72.8739, 57.5427, -8.11244, 0.23 ) }
    dend_55 { pt3dadd( 73.6697, 57.9418, -8.02773, 0.23 ) }
    dend_55 { pt3dadd( 76.374, 59.4041, -7.77474, 0.68 ) }
    dend_55 { pt3dadd( 78.5604, 60.7179, -7.59532, 0.23 ) }
    dend_55 { pt3dadd( 79.8582, 61.6416, -7.51575, 0.91 ) }
    dend_55 { pt3dadd( 82.6169, 63.8706, -7.5265, 0.23 ) }
    dend_55 { pt3dadd( 83.3877, 64.5413, -7.59584, 0.23 ) }
    dend_55 { pt3dadd( 84.6343, 65.689, -7.84411, 0.91 ) }
    dend_55 { pt3dadd( 86.4488, 67.4223, -8.47609, 0.23 ) }
    dend_55 { pt3dadd( 87.7547, 68.7183, -9.06251, 0.91 ) }
    dend_55 { pt3dadd( 89.7129, 70.7032, -9.98664, 0.23 ) }
    dend_55 { pt3dadd( 91.1414, 72.1632, -10.6796, 0.68 ) }
    dend_55 { pt3dadd( 92.8471, 73.8203, -11.5866, 0.23 ) }
    dend_55 { pt3dadd( 94.0074, 74.8724, -12.2915, 0.23 ) }
    dend_55 { pt3dadd( 95.0967, 75.7966, -13.0879, 0.91 ) }
    dend_55 { pt3dadd( 103.58, 79.7769, -13.601, 0.91 ) }
    dend_55 { pt3dadd( 112.612, 81.9467, -12.2692, 0.91 ) }
    dend_55 { pt3dadd( 121.967, 82.2003, -12.9748, 0.91 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 43.3853, 35.661, -18.4766, 0.23 ) }
    dend_54 { pt3dadd( 44.5622, 35.8641, -21.2953, 0.23 ) }
    dend_54 { pt3dadd( 45.5794, 35.9974, -23.5759, 0.68 ) }
    dend_54 { pt3dadd( 47.0728, 36.1361, -26.8371, 1.36 ) }
    dend_54 { pt3dadd( 48.8242, 36.2032, -30.4301, 0.23 ) }
    dend_54 { pt3dadd( 49.7266, 36.2072, -32.1214, 0.45 ) }
    dend_54 { pt3dadd( 51.2438, 36.2032, -34.7822, 0.45 ) }
    dend_54 { pt3dadd( 52.5829, 36.1762, -36.7778, 0.23 ) }
    dend_54 { pt3dadd( 53.813, 36.1009, -38.3755, 1.14 ) }
    dend_54 { pt3dadd( 54.8489, 36.0489, -39.4943, 1.14 ) }
    dend_54 { pt3dadd( 56.1467, 36.0416, -40.6586, 0.45 ) }
    dend_54 { pt3dadd( 59.6677, 36.2964, -43.3666, 0.23 ) }
    dend_54 { pt3dadd( 61.3043, 36.4768, -44.4154, 1.14 ) }
    dend_54 { pt3dadd( 62.499, 36.6011, -45.087, 0.23 ) }
    dend_54 { pt3dadd( 64.0233, 36.7936, -45.8366, 0.23 ) }
    dend_54 { pt3dadd( 66.2781, 37.0818, -46.9289, 0.91 ) }
    dend_54 { pt3dadd( 68.6947, 37.4077, -48.1702, 0.23 ) }
    dend_54 { pt3dadd( 69.3486, 37.4934, -48.4935, 0.68 ) }
    dend_54 { pt3dadd( 70.3776, 37.6239, -49.0611, 0.68 ) }
    dend_54 { pt3dadd( 71.8105, 37.8099, -50.0206, 0.23 ) }
    dend_54 { pt3dadd( 74.1531, 38.0841, -51.6465, 0.91 ) }
    dend_54 { pt3dadd( 76.9956, 38.5272, -53.6409, 0.23 ) }
    dend_54 { pt3dadd( 78.3736, 38.7521, -54.6272, 1.14 ) }
    dend_54 { pt3dadd( 79.4386, 38.9048, -55.3683, 1.14 ) }
    dend_54 { pt3dadd( 82.9274, 39.3799, -57.7254, 0.23 ) }
    dend_54 { pt3dadd( 84.7687, 39.6091, -58.9129, 0.68 ) }
    dend_54 { pt3dadd( 86.1626, 39.799, -59.6556, 0.23 ) }
    dend_54 { pt3dadd( 89.1, 40.2495, -60.9171, 1.14 ) }
    dend_54 { pt3dadd( 92.0371, 40.8572, -61.9955, 0.23 ) }
    dend_54 { pt3dadd( 93.5012, 41.257, -62.3966, 0.91 ) }
    dend_54 { pt3dadd( 94.3871, 41.5675, -62.579, 1.36 ) }
    dend_54 { pt3dadd( 97.1362, 42.8076, -63.1232, 0.23 ) }
    dend_54 { pt3dadd( 98.9911, 43.7699, -63.4037, 0.91 ) }
    dend_54 { pt3dadd( 100.308, 44.5382, -63.5475, 0.91 ) }
    dend_54 { pt3dadd( 102.338, 45.828, -63.7729, 0.23 ) }
    dend_54 { pt3dadd( 104.36, 47.085, -64.0188, 0.91 ) }
    dend_54 { pt3dadd( 107.356, 48.823, -64.4585, 0.23 ) }
    dend_54 { pt3dadd( 109.263, 49.8509, -64.7923, 0.91 ) }
    dend_54 { pt3dadd( 111.761, 51.0254, -65.2343, 0.23 ) }
    dend_54 { pt3dadd( 112.486, 51.3377, -65.3592, 0.23 ) }
    dend_54 { pt3dadd( 114.516, 52.1554, -65.7018, 0.23 ) }
    dend_54 { pt3dadd( 117.038, 53.075, -66.0689, 0.68 ) }
    dend_54 { pt3dadd( 118.895, 53.6843, -66.3691, 0.23 ) }
    dend_54 { pt3dadd( 120.972, 54.3691, -66.6891, 0.23 ) }
    dend_54 { pt3dadd( 123.159, 55.0353, -66.9946, 0.68 ) }
    dend_54 { pt3dadd( 131.568, 55.9147, -73.6519, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 97/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 13.6035, 60.9302, -12.9431, 0.23 ) }
    dend_52 { pt3dadd( 11.6716, 61.9905, -13.4897, 0.23 ) }
    dend_52 { pt3dadd( 9.8314, 63.1138, -14.1566, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( 7.12472, 65.1046, -15.3291, 0.23 ) }
    dend_52 { pt3dadd( 6.14014, 66.0225, -15.9522, 1.14 ) }
    dend_52 { pt3dadd( 5.31423, 66.9767, -16.6089, 0.23 ) }
    dend_52 { pt3dadd( 4.49218, 68.1098, -17.369, 0.68 ) }
    dend_52 { pt3dadd( 3.79595, 69.5312, -18.3225, 0.23 ) }
    dend_52 { pt3dadd( 3.2656, 71.2271, -19.5104, 1.36 ) }
    dend_52 { pt3dadd( 2.74163, 74.0677, -21.5322, 0.23 ) }
    dend_52 { pt3dadd( 2.56829, 75.5619, -22.5861, 0.91 ) }
    dend_52 { pt3dadd( 2.44544, 77.05, -23.6213, 0.23 ) }
    dend_52 { pt3dadd( 2.34441, 78.8051, -24.7736, 0.68 ) }
    dend_52 { pt3dadd( 2.26538, 80.3134, -25.6931, 0.23 ) }
    dend_52 { pt3dadd( 2.24951, 81.3795, -26.3043, 1.14 ) }
    dend_52 { pt3dadd( 2.33181, 83.297, -27.3281, 0.23 ) }
    dend_52 { pt3dadd( 2.44689, 84.6203, -28.0475, 0.23 ) }
    dend_52 { pt3dadd( 2.58476, 85.864, -28.7135, 0.91 ) }
    dend_52 { pt3dadd( 2.78539, 87.4073, -29.4977, 0.23 ) }
    dend_52 { pt3dadd( 3.02714, 89.1363, -30.3276, 0.23 ) }
    dend_52 { pt3dadd( 3.39104, 91.3753, -31.3697, 1.14 ) }
    dend_52 { pt3dadd( 3.58859, 92.4606, -31.8393, 1.14 ) }
    dend_52 { pt3dadd( 4.01747, 94.4739, -32.7169, 0.23 ) }
    dend_52 { pt3dadd( 4.35527, 96.0798, -33.3995, 0.23 ) }
    dend_52 { pt3dadd( 4.61764, 97.3751, -33.9025, 0.23 ) }
    dend_52 { pt3dadd( 4.79679, 98.4335, -34.3195, 0.23 ) }
    dend_52 { pt3dadd( 4.91313, 99.3878, -34.7223, 0.45 ) }
    dend_52 { pt3dadd( 5.00297, 101.504, -35.9191, 0.23 ) }
    dend_52 { pt3dadd( 4.93376, 102.508, -36.6095, 0.91 ) }
    dend_52 { pt3dadd( 4.7854, 103.447, -37.3874, 0.91 ) }
    dend_52 { pt3dadd( 4.51201, 104.838, -38.6522, 0.68 ) }
    dend_52 { pt3dadd( 4.14276, 106.798, -40.5524, 1.36 ) }
    dend_52 { pt3dadd( 3.74486, 109.118, -42.8964, 0.23 ) }
    dend_52 { pt3dadd( 3.66652, 110.035, -43.8297, 0.23 ) }
    dend_52 { pt3dadd( 3.71999, 111.441, -45.2314, 0.23 ) }
    dend_52 { pt3dadd( 3.9219, 112.39, -46.1263, 1.14 ) }
    dend_52 { pt3dadd( 4.67731, 114.106, -47.4379, 0.23 ) }
    dend_52 { pt3dadd( 4.91562, 114.471, -47.6491, 0.68 ) }
    dend_52 { pt3dadd( 6.65062, 116.68, -48.6296, 0.23 ) }
    dend_52 { pt3dadd( 7.11291, 117.254, -48.8461, 1.14 ) }
    dend_52 { pt3dadd( 8.22207, 118.72, -49.2881, 0.23 ) }
    dend_52 { pt3dadd( 9.66401, 120.633, -49.8279, 0.91 ) }
    dend_52 { pt3dadd( 10.45, 121.695, -50.0725, 0.23 ) }
    dend_52 { pt3dadd( 11.7208, 123.486, -50.4429, 0.68 ) }
    dend_52 { pt3dadd( 12.601, 124.796, -50.6291, 0.68 ) }
    dend_52 { pt3dadd( 13.4398, 126.122, -50.8097, 0.23 ) }
    dend_52 { pt3dadd( 12.155, 135.594, -55.3785, 0.23 ) }
    dend_52 { pt3dadd( 12.4802, 145.628, -58.7661, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 13.6035, 60.9302, -12.9431, 0.23 ) }
    dend_47 { pt3dadd( 14.1306, 61.669, -12.9339, 0.23 ) }
    dend_47 { pt3dadd( 15.0208, 62.8073, -13.0261, 1.14 ) }
    dend_47 { pt3dadd( 16.3248, 64.4232, -13.2147, 0.23 ) }
    dend_47 { pt3dadd( 17.079, 65.3727, -13.3353, 0.68 ) }
    dend_47 { pt3dadd( 17.7415, 66.2194, -13.4454, 0.23 ) }
    dend_47 { pt3dadd( 18.4867, 67.1821, -13.5713, 0.68 ) }
    dend_47 { pt3dadd( 19.6912, 68.7912, -13.858, 0.23 ) }
    dend_47 { pt3dadd( 20.5143, 69.9741, -14.1095, 0.91 ) }
    dend_47 { pt3dadd( 21.2993, 71.2368, -14.3778, 0.23 ) }
    dend_47 { pt3dadd( 21.5485, 71.6717, -14.4382, 0.91 ) }
    dend_47 { pt3dadd( 22.4057, 73.2979, -14.552, 0.23 ) }
    dend_47 { pt3dadd( 23.3075, 75.1091, -14.5919, 0.91 ) }
    dend_47 { pt3dadd( 24.1183, 76.8445, -14.5332, 0.23 ) }
    dend_47 { pt3dadd( 24.4505, 77.5765, -14.4884, 0.91 ) }
    dend_47 { pt3dadd( 25.4374, 79.6504, -14.2635, 0.23 ) }
    dend_47 { pt3dadd( 25.7883, 80.3116, -14.1312, 1.14 ) }
    dend_47 { pt3dadd( 26.1041, 80.8103, -13.9721, 1.14 ) }
    dend_47 { pt3dadd( 26.7015, 81.5318, -13.6123, 0.23 ) }
    dend_47 { pt3dadd( 27.5868, 82.3751, -13.0889, 0.91 ) }
    dend_47 { pt3dadd( 28.6244, 83.1183, -12.5274, 0.23 ) }
    dend_47 { pt3dadd( 30.0048, 83.8587, -11.8748, 0.23 ) }
    dend_47 { pt3dadd( 30.9282, 84.2198, -11.4116, 0.91 ) }
    dend_47 { pt3dadd( 32.3217, 84.6145, -10.7086, 0.23 ) }
    dend_47 { pt3dadd( 33.1538, 84.7915, -10.2949, 0.91 ) }
    dend_47 { pt3dadd( 34.9704, 85.0748, -9.43852, 0.23 ) }
    dend_47 { pt3dadd( 36.1256, 85.2209, -8.93978, 0.68 ) }
    dend_47 { pt3dadd( 38.4985, 85.4662, -8.02553, 0.23 ) }
    dend_47 { pt3dadd( 39.4537, 85.5469, -7.68032, 0.68 ) }
    dend_47 { pt3dadd( 40.1591, 85.5954, -7.46154, 0.23 ) }
    dend_47 { pt3dadd( 41.3758, 85.6689, -7.11707, 0.91 ) }
    dend_47 { pt3dadd( 42.1529, 85.6965, -6.93357, 0.23 ) }
    dend_47 { pt3dadd( 43.0173, 85.7265, -6.77207, 0.23 ) }
    dend_47 { pt3dadd( 43.6691, 85.7516, -6.68515, 0.23 ) }
    dend_47 { pt3dadd( 45.0648, 85.8372, -6.48206, 0.91 ) }
    dend_47 { pt3dadd( 45.7127, 85.8943, -6.38265, 0.23 ) }
    dend_47 { pt3dadd( 46.7041, 86.0247, -6.27916, 0.68 ) }
    dend_47 { pt3dadd( 48.3461, 86.321, -6.17281, 0.23 ) }
    dend_47 { pt3dadd( 49.045, 86.4891, -6.17674, 0.91 ) }
    dend_47 { pt3dadd( 50.3893, 86.9019, -6.26123, 0.23 ) }
    dend_47 { pt3dadd( 51.0958, 87.1431, -6.32823, 0.91 ) }
    dend_47 { pt3dadd( 53.0326, 87.867, -6.57462, 0.23 ) }
    dend_47 { pt3dadd( 54.1894, 88.3428, -6.77527, 0.91 ) }
    dend_47 { pt3dadd( 55.3751, 88.8128, -7.064, 0.23 ) }
    dend_47 { pt3dadd( 56.4819, 89.2696, -7.4111, 0.68 ) }
    dend_47 { pt3dadd( 62.1678, 93.1401, -7.59348, 0.68 ) }
    dend_47 { pt3dadd( 68.2217, 96.1896, -8.77417, 0.68 ) }
    dend_47 { pt3dadd( 74.1039, 99.7254, -9.26636, 0.68 ) }
    dend_47 { pt3dadd( 79.6465, 103.766, -9.81139, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 94/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -316.519, -99.9903, 59.4814, 0.23 ) }
    dend_42 { pt3dadd( -318.54, -101.893, 59.8461, 0.23 ) }
    dend_42 { pt3dadd( -319.808, -103.118, 59.9696, 0.68 ) }
    dend_42 { pt3dadd( -320.943, -104.242, 60.0316, 0.23 ) }
    dend_42 { pt3dadd( -322.57, -105.86, 60.0883, 0.45 ) }
    dend_42 { pt3dadd( -325.409, -108.703, 60.1541, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_42 { pt3dadd( -327.23, -110.509, 60.1867, 0.23 ) }
    dend_42 { pt3dadd( -329.011, -112.353, 60.1322, 0.91 ) }
    dend_42 { pt3dadd( -330.54, -114.002, 60.138, 0.23 ) }
    dend_42 { pt3dadd( -331.187, -114.72, 60.1351, 0.23 ) }
    dend_42 { pt3dadd( -332.144, -115.81, 60.1269, 0.91 ) }
    dend_42 { pt3dadd( -333.477, -117.438, 60.0828, 0.23 ) }
    dend_42 { pt3dadd( -334.189, -118.406, 60.091, 0.91 ) }
    dend_42 { pt3dadd( -336.132, -121.439, 59.9341, 0.23 ) }
    dend_42 { pt3dadd( -337.484, -123.79, 59.6133, 0.23 ) }
    dend_42 { pt3dadd( -338.707, -126.018, 59.2706, 0.23 ) }
    dend_42 { pt3dadd( -339.969, -128.448, 58.838, 0.23 ) }
    dend_42 { pt3dadd( -341.089, -130.781, 58.3444, 0.68 ) }
    dend_42 { pt3dadd( -342.551, -133.964, 57.5294, 0.23 ) }
    dend_42 { pt3dadd( -343.605, -136.52, 56.6532, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 14/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -316.519, -99.9903, 59.4814, 0.23 ) }
    dend_41 { pt3dadd( -320.495, -99.917, 59.0558, 0.23 ) }
    dend_41 { pt3dadd( -323.33, -99.9574, 58.8791, 0.45 ) }
    dend_41 { pt3dadd( -326.18, -100.06, 58.8766, 0.23 ) }
    dend_41 { pt3dadd( -327.595, -100.126, 58.8544, 0.23 ) }
    dend_41 { pt3dadd( -328.572, -100.181, 58.8423, 0.23 ) }
    dend_41 { pt3dadd( -329.863, -100.263, 58.7719, 0.68 ) }
    dend_41 { pt3dadd( -332.912, -100.597, 58.5912, 0.23 ) }
    dend_41 { pt3dadd( -334.511, -100.838, 58.479, 0.45 ) }
    dend_41 { pt3dadd( -337.666, -101.393, 58.1719, 0.23 ) }
    dend_41 { pt3dadd( -341.072, -102.0, 57.8069, 0.91 ) }
    dend_41 { pt3dadd( -344.413, -102.57, 57.4489, 0.23 ) }
    dend_41 { pt3dadd( -347.162, -103.065, 57.1296, 0.91 ) }
    dend_41 { pt3dadd( -348.641, -103.322, 56.9584, 0.23 ) }
    dend_41 { pt3dadd( -349.547, -103.481, 56.8477, 0.91 ) }
    dend_41 { pt3dadd( -351.177, -103.744, 56.714, 0.23 ) }
    dend_41 { pt3dadd( -353.3, -104.023, 56.3402, 0.68 ) }
    dend_41 { pt3dadd( -356.069, -104.343, 55.722, 0.23 ) }
    dend_41 { pt3dadd( -357.855, -104.517, 55.2162, 0.68 ) }
    dend_41 { pt3dadd( -359.9, -104.753, 54.6049, 0.23 ) }
    dend_41 { pt3dadd( -361.428, -104.964, 54.066, 0.91 ) }
    dend_41 { pt3dadd( -366.446, -105.749, 52.1496, 0.23 ) }
    dend_41 { pt3dadd( -368.716, -106.125, 51.2165, 0.23 ) }
    dend_41 { pt3dadd( -370.196, -106.355, 50.5851, 0.23 ) }
    dend_41 { pt3dadd( -373.063, -106.8, 49.3921, 0.91 ) }
    dend_41 { pt3dadd( -376.096, -107.302, 48.1293, 0.23 ) }
    dend_41 { pt3dadd( -377.794, -107.616, 47.4552, 0.23 ) }
    dend_41 { pt3dadd( -379.289, -107.902, 46.8978, 0.68 ) }
    dend_41 { pt3dadd( -381.852, -108.411, 45.8475, 0.23 ) }
    dend_41 { pt3dadd( -383.538, -108.755, 45.1275, 0.91 ) }
    dend_41 { pt3dadd( -386.144, -109.289, 43.9697, 0.23 ) }
    dend_41 { pt3dadd( -388.522, -109.812, 43.0087, 0.91 ) }
    dend_41 { pt3dadd( -391.556, -110.602, 41.8098, 0.23 ) }
    dend_41 { pt3dadd( -392.912, -110.992, 41.293, 0.23 ) }
    dend_41 { pt3dadd( -394.838, -111.605, 40.6146, 0.68 ) }
    dend_41 { pt3dadd( -396.708, -112.256, 40.0237, 0.23 ) }
    dend_41 { pt3dadd( -398.62, -112.987, 39.5208, 1.14 ) }
    dend_41 { pt3dadd( -400.647, -113.793, 39.03, 0.23 ) }
    dend_41 { pt3dadd( -402.521, -114.565, 38.6684, 0.23 ) }
    dend_41 { pt3dadd( -404.961, -115.626, 38.1953, 0.91 ) }
    dend_41 { pt3dadd( -407.119, -116.595, 37.8264, 0.23 ) }
    dend_41 { pt3dadd( -409.751, -117.809, 37.2556, 1.14 ) }
    dend_41 { pt3dadd( -410.9, -118.325, 36.9555, 0.23 ) }
    dend_41 { pt3dadd( -411.776, -118.68, 36.7198, 0.91 ) }
    dend_41 { pt3dadd( -413.887, -119.549, 36.1399, 0.23 ) }
    dend_41 { pt3dadd( -416.395, -120.545, 35.3413, 1.14 ) }
    dend_41 { pt3dadd( -420.218, -121.986, 33.9919, 0.23 ) }
    dend_41 { pt3dadd( -421.657, -122.52, 33.4566, 0.23 ) }
    dend_41 { pt3dadd( -423.5, -123.255, 32.7104, 0.45 ) }
    dend_41 { pt3dadd( -433.038, -126.413, 30.8228, 0.45 ) }
    // Section: dend_38, id: dend_38, parent: dend_30 (entry count 64/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 14.6454, -38.7374, 29.2179, 0.23 ) }
    dend_38 { pt3dadd( 15.6884, -39.6938, 29.8108, 0.23 ) }
    dend_38 { pt3dadd( 16.7916, -40.76, 30.4619, 0.91 ) }
    dend_38 { pt3dadd( 19.4713, -43.3547, 31.9931, 0.23 ) }
    dend_38 { pt3dadd( 21.4119, -45.2121, 33.0779, 0.91 ) }
    dend_38 { pt3dadd( 24.1054, -47.7708, 34.4843, 0.23 ) }
    dend_38 { pt3dadd( 24.999, -48.655, 34.9346, 0.23 ) }
    dend_38 { pt3dadd( 26.9229, -50.7425, 35.8502, 0.23 ) }
    dend_38 { pt3dadd( 27.5319, -51.5004, 36.2222, 0.68 ) }
    dend_38 { pt3dadd( 28.6482, -53.0777, 37.0114, 0.23 ) }
    dend_38 { pt3dadd( 29.5217, -54.5402, 37.864, 0.91 ) }
    dend_38 { pt3dadd( 30.8134, -57.2199, 39.6191, 0.23 ) }
    dend_38 { pt3dadd( 31.0434, -57.7469, 40.0198, 0.91 ) }
    dend_38 { pt3dadd( 32.852, -62.0706, 43.5518, 0.23 ) }
    dend_38 { pt3dadd( 33.2318, -62.9431, 44.3187, 0.91 ) }
    dend_38 { pt3dadd( 34.3032, -65.0502, 46.4633, 0.23 ) }
    dend_38 { pt3dadd( 34.9039, -65.9482, 47.6039, 0.91 ) }
    dend_38 { pt3dadd( 37.1269, -68.3503, 51.3268, 0.23 ) }
    dend_38 { pt3dadd( 37.759, -68.8801, 52.2057, 0.23 ) }
    dend_38 { pt3dadd( 38.6278, -69.4744, 53.2528, 0.91 ) }
    dend_38 { pt3dadd( 41.3607, -71.1269, 56.2742, 0.23 ) }
    dend_38 { pt3dadd( 44.4241, -72.7843, 59.564, 0.23 ) }
    dend_38 { pt3dadd( 47.4341, -74.3659, 62.7395, 0.23 ) }
    dend_38 { pt3dadd( 49.5739, -75.5243, 64.9701, 0.23 ) }
    dend_38 { pt3dadd( 52.2456, -77.0187, 67.8451, 0.23 ) }
    dend_38 { pt3dadd( 53.7163, -77.8785, 69.4414, 0.91 ) }
    dend_38 { pt3dadd( 57.2972, -79.9672, 72.9719, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 91/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 14.6454, -38.7374, 29.2179, 0.23 ) }
    dend_31 { pt3dadd( 14.9179, -42.8182, 29.2458, 0.23 ) }
    dend_31 { pt3dadd( 15.087, -45.2819, 29.3666, 0.23 ) }
    dend_31 { pt3dadd( 15.3233, -49.0147, 29.6046, 0.91 ) }
    dend_31 { pt3dadd( 15.4785, -52.1215, 29.9207, 0.23 ) }
    dend_31 { pt3dadd( 15.53, -53.5116, 30.0752, 0.23 ) }
    dend_31 { pt3dadd( 15.6381, -55.6341, 30.3095, 1.14 ) }
    dend_31 { pt3dadd( 15.8597, -59.2082, 30.7674, 0.23 ) }
    dend_31 { pt3dadd( 16.0933, -61.5845, 31.0669, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_31 { pt3dadd( 16.487, -64.1743, 31.3452, 0.91 ) }
    dend_31 { pt3dadd( 17.0076, -66.5427, 31.5033, 0.23 ) }
    dend_31 { pt3dadd( 17.8146, -69.2491, 31.6241, 0.23 ) }
    dend_31 { pt3dadd( 18.2836, -70.5136, 31.6392, 0.91 ) }
    dend_31 { pt3dadd( 19.065, -72.3897, 31.7075, 0.68 ) }
    dend_31 { pt3dadd( 20.2011, -75.0001, 31.9573, 0.23 ) }
    dend_31 { pt3dadd( 20.8157, -76.4371, 32.1426, 0.91 ) }
    dend_31 { pt3dadd( 22.47, -80.4823, 32.9536, 0.23 ) }
    dend_31 { pt3dadd( 23.0641, -82.2066, 33.3782, 0.91 ) }
    dend_31 { pt3dadd( 24.5075, -87.2845, 34.7564, 0.23 ) }
    dend_31 { pt3dadd( 25.0584, -89.9903, 35.5855, 0.91 ) }
    dend_31 { pt3dadd( 25.2306, -91.5034, 36.1173, 0.91 ) }
    dend_31 { pt3dadd( 25.3501, -94.6628, 37.3007, 0.23 ) }
    dend_31 { pt3dadd( 25.2417, -96.9768, 38.1922, 0.91 ) }
    dend_31 { pt3dadd( 24.9606, -98.947, 39.031, 0.23 ) }
    dend_31 { pt3dadd( 24.4201, -100.999, 40.014, 0.91 ) }
    dend_31 { pt3dadd( 23.6303, -103.105, 41.1913, 0.23 ) }
    dend_31 { pt3dadd( 23.1151, -104.202, 41.8843, 1.14 ) }
    dend_31 { pt3dadd( 22.6571, -105.0, 42.4495, 0.23 ) }
    dend_31 { pt3dadd( 20.7525, -108.298, 45.1497, 0.91 ) }
    dend_31 { pt3dadd( 19.7514, -110.038, 46.6517, 0.23 ) }
    dend_31 { pt3dadd( 19.2498, -110.955, 47.4282, 1.14 ) }
    dend_31 { pt3dadd( 18.6788, -112.169, 48.4698, 0.23 ) }
    dend_31 { pt3dadd( 18.2069, -113.44, 49.5834, 0.91 ) }
    dend_31 { pt3dadd( 17.6097, -115.794, 51.6315, 0.23 ) }
    dend_31 { pt3dadd( 17.4498, -116.859, 52.5206, 0.91 ) }
    dend_31 { pt3dadd( 17.3726, -117.487, 53.0303, 0.23 ) }
    dend_31 { pt3dadd( 17.0857, -120.45, 55.5326, 0.91 ) }
    dend_31 { pt3dadd( 16.8563, -122.891, 57.7229, 0.23 ) }
    dend_31 { pt3dadd( 16.6118, -125.542, 60.1152, 0.91 ) }
    dend_31 { pt3dadd( 16.4054, -127.544, 61.9486, 0.23 ) }
    dend_31 { pt3dadd( 16.2744, -128.772, 63.1215, 1.14 ) }
    dend_31 { pt3dadd( 15.9755, -131.182, 65.4616, 0.23 ) }
    dend_31 { pt3dadd( 15.5728, -133.445, 67.6085, 0.91 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 8.70984, -27.3687, -5.61459, 0.23 ) }
    dend_25 { pt3dadd( 8.84413, -31.1788, -3.68746, 0.23 ) }
    dend_25 { pt3dadd( 8.85124, -33.0473, -2.46697, 0.23 ) }
    dend_25 { pt3dadd( 8.90789, -35.4968, -0.712665, 0.91 ) }
    dend_25 { pt3dadd( 8.95915, -36.4758, -0.0088941, 0.23 ) }
    dend_25 { pt3dadd( 9.14022, -38.5658, 1.50067, 0.68 ) }
    dend_25 { pt3dadd( 9.30802, -40.4418, 3.01003, 0.23 ) }
    dend_25 { pt3dadd( 9.57494, -43.7735, 5.89413, 0.68 ) }
    dend_25 { pt3dadd( 9.6489, -44.6619, 6.71857, 0.68 ) }
    dend_25 { pt3dadd( 9.79402, -45.915, 7.87395, 0.23 ) }
    dend_25 { pt3dadd( 10.0095, -47.7513, 9.55676, 1.14 ) }
    dend_25 { pt3dadd( 10.412, -51.3812, 12.5012, 0.23 ) }
    dend_25 { pt3dadd( 10.4624, -52.0953, 12.9809, 0.23 ) }
    dend_25 { pt3dadd( 10.5129, -52.8493, 13.3991, 0.23 ) }
    dend_25 { pt3dadd( 10.5774, -54.3728, 14.1689, 1.14 ) }
    dend_25 { pt3dadd( 10.5934, -57.7709, 15.8777, 0.23 ) }
    dend_25 { pt3dadd( 10.5522, -60.1543, 16.975, 1.14 ) }
    dend_25 { pt3dadd( 10.4524, -64.4963, 18.8821, 0.23 ) }
    dend_25 { pt3dadd( 10.3661, -67.6656, 20.3212, 0.23 ) }
    dend_25 { pt3dadd( 10.3186, -69.829, 21.3166, 0.68 ) }
    dend_25 { pt3dadd( 10.2343, -74.0503, 23.2043, 0.23 ) }
    dend_25 { pt3dadd( 10.1975, -75.8743, 23.9885, 1.14 ) }
    dend_25 { pt3dadd( 10.1133, -79.1066, 25.3807, 0.23 ) }
    dend_25 { pt3dadd( 10.0782, -80.4229, 25.8654, 0.23 ) }
    dend_25 { pt3dadd( 10.0803, -81.7694, 26.2596, 0.23 ) }
    dend_25 { pt3dadd( 10.1264, -83.9458, 26.8523, 0.91 ) }
    dend_25 { pt3dadd( 10.1709, -85.9271, 27.4015, 0.23 ) }
    dend_25 { pt3dadd( 10.1897, -87.769, 27.9945, 0.91 ) }
    dend_25 { pt3dadd( 10.1659, -89.5859, 28.7068, 0.23 ) }
    dend_25 { pt3dadd( 10.0879, -91.5748, 29.6989, 0.91 ) }
    dend_25 { pt3dadd( 9.84584, -94.029, 31.1801, 0.23 ) }
    dend_25 { pt3dadd( 9.31895, -98.4633, 34.118, 0.23 ) }
    dend_25 { pt3dadd( 9.24242, -99.4783, 34.734, 0.68 ) }
    dend_25 { pt3dadd( 9.16454, -102.578, 36.5609, 1.14 ) }
    dend_25 { pt3dadd( 9.34851, -105.609, 38.3454, 0.23 ) }
    dend_25 { pt3dadd( 9.92902, -109.708, 40.6357, 0.23 ) }
    dend_25 { pt3dadd( 10.3409, -111.507, 41.5324, 0.23 ) }
    dend_25 { pt3dadd( 11.9592, -116.988, 43.9273, 0.23 ) }
    dend_25 { pt3dadd( 12.8316, -119.675, 44.9608, 0.68 ) }
    dend_25 { pt3dadd( 14.6735, -125.206, 46.9305, 0.23 ) }
    dend_25 { pt3dadd( 15.4614, -127.346, 47.6458, 0.68 ) }
    dend_25 { pt3dadd( 16.9421, -131.031, 48.8707, 0.23 ) }
    dend_25 { pt3dadd( 17.7919, -133.307, 49.7173, 0.23 ) }
    dend_25 { pt3dadd( 18.5611, -135.739, 50.7868, 0.91 ) }
    dend_25 { pt3dadd( 20.092, -141.38, 52.9347, 0.23 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 79/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 8.70984, -27.3687, -5.61459, 0.23 ) }
    dend_24 { pt3dadd( 6.68756, -29.3855, -6.92232, 0.23 ) }
    dend_24 { pt3dadd( 4.6783, -31.8032, -8.18345, 0.68 ) }
    dend_24 { pt3dadd( 2.32341, -34.9785, -9.80911, 0.68 ) }
    dend_24 { pt3dadd( 1.14437, -36.7133, -10.6504, 0.68 ) }
    dend_24 { pt3dadd( 0.0920929, -38.3949, -11.3989, 0.68 ) }
    dend_24 { pt3dadd( -1.34564, -40.795, -12.3975, 0.23 ) }
    dend_24 { pt3dadd( -2.42683, -42.9578, -13.0911, 0.23 ) }
    dend_24 { pt3dadd( -3.61707, -45.7643, -13.8589, 0.23 ) }
    dend_24 { pt3dadd( -4.38989, -47.6818, -14.2953, 0.23 ) }
    dend_24 { pt3dadd( -5.48329, -50.2711, -14.8861, 1.14 ) }
    dend_24 { pt3dadd( -6.09666, -51.6708, -15.1871, 1.14 ) }
    dend_24 { pt3dadd( -7.81557, -55.1701, -15.7115, 0.23 ) }
    dend_24 { pt3dadd( -9.18749, -57.8111, -15.9278, 0.91 ) }
    dend_24 { pt3dadd( -10.598, -60.5946, -16.0604, 0.91 ) }
    dend_24 { pt3dadd( -11.1279, -61.652, -16.1108, 0.91 ) }
    dend_24 { pt3dadd( -12.9107, -65.3056, -16.3957, 0.23 ) }
    dend_24 { pt3dadd( -14.6079, -69.0183, -16.6897, 0.23 ) }
    dend_24 { pt3dadd( -16.291, -72.8746, -16.9961, 0.23 ) }
    dend_24 { pt3dadd( -17.3442, -75.4996, -17.199, 0.23 ) }
    dend_24 { pt3dadd( -18.3641, -78.3178, -17.5036, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_24 { pt3dadd( -20.0593, -83.4384, -18.2054, 0.23 ) }
    dend_24 { pt3dadd( -21.3074, -87.5518, -18.909, 0.91 ) }
    dend_24 { pt3dadd( -21.7434, -89.1188, -19.2276, 0.91 ) }
    dend_24 { pt3dadd( -22.2872, -91.2408, -19.6263, 0.23 ) }
    dend_24 { pt3dadd( -22.9394, -93.9392, -20.0518, 0.68 ) }
    dend_24 { pt3dadd( -23.747, -97.2103, -20.5448, 0.23 ) }
    dend_24 { pt3dadd( -24.1047, -98.5988, -20.7408, 0.68 ) }
    dend_24 { pt3dadd( -25.0052, -101.753, -21.2459, 0.23 ) }
    dend_24 { pt3dadd( -25.452, -103.134, -21.4533, 1.14 ) }
    dend_24 { pt3dadd( -26.2416, -105.26, -21.7391, 1.14 ) }
    dend_24 { pt3dadd( -27.6584, -108.544, -22.1383, 0.23 ) }
    dend_24 { pt3dadd( -29.3985, -111.967, -22.6179, 0.23 ) }
    dend_24 { pt3dadd( -30.4894, -113.747, -22.8998, 0.91 ) }
    dend_24 { pt3dadd( -31.6469, -115.357, -23.1826, 0.91 ) }
    dend_24 { pt3dadd( -33.3604, -117.479, -23.4417, 0.23 ) }
    dend_24 { pt3dadd( -35.1674, -119.519, -23.5857, 0.91 ) }
    dend_24 { pt3dadd( -36.1894, -120.573, -23.6034, 0.91 ) }
    dend_24 { pt3dadd( -38.8176, -122.975, -23.5191, 0.23 ) }
    dend_24 { pt3dadd( -40.1419, -124.156, -23.4472, 0.23 ) }
    dend_24 { pt3dadd( -43.4464, -127.12, -23.211, 0.68 ) }
    dend_24 { pt3dadd( -44.9076, -128.499, -23.0906, 0.23 ) }
    dend_24 { pt3dadd( -45.8794, -129.516, -23.0125, 1.14 ) }
    dend_24 { pt3dadd( -46.7657, -130.522, -22.9657, 1.14 ) }
    dend_24 { pt3dadd( -49.0171, -133.303, -22.9462, 0.23 ) }
    dend_24 { pt3dadd( -50.1185, -134.683, -23.0161, 0.23 ) }
    dend_24 { pt3dadd( -51.749, -136.91, -23.2784, 1.14 ) }
    dend_24 { pt3dadd( -53.3333, -139.332, -23.6541, 0.23 ) }
    dend_24 { pt3dadd( -53.9327, -140.332, -23.8856, 0.68 ) }
    dend_24 { pt3dadd( -54.7491, -141.902, -24.3316, 0.23 ) }
    dend_24 { pt3dadd( -55.625, -143.876, -24.9721, 0.23 ) }
    dend_24 { pt3dadd( -56.4708, -146.455, -25.905, 0.68 ) }
    dend_24 { pt3dadd( -57.2384, -149.574, -27.1074, 0.23 ) }
    dend_24 { pt3dadd( -57.6774, -152.523, -28.2139, 0.23 ) }
    dend_24 { pt3dadd( -57.8599, -155.54, -29.2737, 0.45 ) }
    dend_24 { pt3dadd( -57.7873, -157.296, -29.8772, 1.59 ) }
    dend_24 { pt3dadd( -57.2105, -162.065, -31.4083, 0.23 ) }
    dend_24 { pt3dadd( -57.0271, -163.103, -31.7249, 0.23 ) }
    dend_24 { pt3dadd( -56.332, -166.144, -32.5302, 1.14 ) }
    dend_24 { pt3dadd( -55.825, -168.118, -33.0007, 1.14 ) }
    dend_24 { pt3dadd( -54.9263, -171.472, -33.8106, 0.23 ) }
    dend_24 { pt3dadd( -54.3587, -173.539, -34.3089, 0.91 ) }
    dend_24 { pt3dadd( -53.2491, -177.636, -35.2458, 0.23 ) }
    dend_24 { pt3dadd( -52.8611, -179.308, -35.6623, 0.23 ) }
    dend_24 { pt3dadd( -52.3899, -181.676, -36.3222, 1.14 ) }
    dend_24 { pt3dadd( -52.1508, -183.059, -36.7226, 1.14 ) }
    dend_24 { pt3dadd( -51.2649, -188.702, -38.4494, 0.23 ) }
    dend_24 { pt3dadd( -50.838, -191.403, -39.3452, 1.14 ) }
    dend_24 { pt3dadd( -50.3108, -195.12, -40.7275, 0.23 ) }
    dend_24 { pt3dadd( -49.9902, -197.518, -41.7227, 1.14 ) }
    dend_24 { pt3dadd( -49.8924, -198.214, -42.0347, 1.14 ) }
    dend_24 { pt3dadd( -49.5634, -200.201, -42.8246, 0.23 ) }
    dend_24 { pt3dadd( -49.3319, -201.24, -43.1061, 0.68 ) }
    dend_24 { pt3dadd( -48.5558, -203.628, -43.355, 0.23 ) }
    dend_24 { pt3dadd( -47.5681, -205.576, -43.0591, 1.14 ) }
    dend_24 { pt3dadd( -46.6729, -207.087, -42.6067, 1.14 ) }
    dend_24 { pt3dadd( -44.3311, -210.633, -41.298, 0.23 ) }
    dend_24 { pt3dadd( -42.992, -212.493, -40.5331, 0.91 ) }
    dend_24 { pt3dadd( -42.2056, -213.541, -40.1594, 0.91 ) }
    dend_24 { pt3dadd( -39.7551, -216.708, -39.2673, 0.23 ) }
    dend_24 { pt3dadd( -38.6562, -218.207, -39.0151, 1.14 ) }
    dend_24 { pt3dadd( -37.3725, -220.252, -38.9993, 1.36 ) }
    dend_24 { pt3dadd( -35.7084, -223.327, -39.4039, 0.23 ) }
    dend_24 { pt3dadd( -34.0785, -226.771, -40.0452, 0.23 ) }
    dend_24 { pt3dadd( -33.0733, -229.129, -40.5322, 0.91 ) }
    dend_24 { pt3dadd( -32.3342, -231.053, -40.9616, 0.91 ) }
    dend_24 { pt3dadd( -30.6742, -235.529, -41.8895, 0.23 ) }
    dend_24 { pt3dadd( -29.9602, -237.52, -42.299, 1.14 ) }
    dend_24 { pt3dadd( -28.5843, -241.383, -43.0172, 0.23 ) }
    dend_24 { pt3dadd( -27.8088, -243.664, -43.3482, 1.14 ) }
    dend_24 { pt3dadd( -27.0523, -246.094, -43.6533, 0.23 ) }
    dend_24 { pt3dadd( -26.644, -247.468, -43.825, 0.91 ) }
    dend_24 { pt3dadd( -25.836, -251.474, -44.3172, 0.23 ) }
    dend_24 { pt3dadd( -25.7036, -254.008, -44.6793, 1.59 ) }
    dend_24 { pt3dadd( -26.1787, -257.338, -45.222, 0.23 ) }
    dend_24 { pt3dadd( -26.768, -259.244, -45.408, 0.91 ) }
    dend_24 { pt3dadd( -27.1601, -260.071, -45.4324, 0.91 ) }
    dend_24 { pt3dadd( -29.3173, -263.684, -45.2699, 0.23 ) }
    dend_24 { pt3dadd( -30.6593, -265.528, -45.0349, 1.14 ) }
    dend_24 { pt3dadd( -31.6379, -266.756, -44.7766, 1.14 ) }
    dend_24 { pt3dadd( -34.3393, -270.233, -43.8812, 0.23 ) }
    dend_24 { pt3dadd( -35.1404, -271.432, -43.5782, 0.91 ) }
    dend_24 { pt3dadd( -36.4297, -273.648, -42.992, 0.23 ) }
    dend_24 { pt3dadd( -36.8794, -274.626, -42.7248, 0.91 ) }
    dend_24 { pt3dadd( -37.7476, -277.05, -42.2953, 0.23 ) }
    dend_24 { pt3dadd( -38.4702, -279.438, -42.1742, 0.91 ) }
    dend_24 { pt3dadd( -39.4405, -282.905, -42.6042, 0.23 ) }
    dend_24 { pt3dadd( -39.8768, -284.544, -42.9909, 0.23 ) }
    dend_24 { pt3dadd( -40.5453, -286.971, -43.8916, 1.14 ) }
    dend_24 { pt3dadd( -41.5202, -290.492, -45.5345, 0.23 ) }
    dend_24 { pt3dadd( -42.2053, -293.105, -47.0783, 1.36 ) }
    dend_24 { pt3dadd( -43.1056, -296.395, -49.2639, 0.23 ) }
    dend_24 { pt3dadd( -43.5834, -298.238, -50.5859, 1.14 ) }
    dend_24 { pt3dadd( -44.1515, -300.649, -52.3494, 0.23 ) }
    dend_24 { pt3dadd( -44.5246, -302.21, -53.4911, 0.68 ) }
    dend_24 { pt3dadd( -45.3827, -305.776, -55.9646, 0.23 ) }
    dend_24 { pt3dadd( -45.6878, -307.236, -56.9279, 0.91 ) }
    dend_24 { pt3dadd( -46.0867, -309.708, -58.3538, 0.23 ) }
    dend_24 { pt3dadd( -46.2862, -311.342, -59.1665, 0.23 ) }
    dend_24 { pt3dadd( -46.462, -313.412, -60.0782, 0.23 ) }
    dend_24 { pt3dadd( -51.0016, -325.003, -60.9139, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_24 { pt3dadd( -56.161, -336.354, -61.3224, 0.23 ) }
    dend_24 { pt3dadd( -60.6503, -347.994, -61.3334, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 2/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 71.8958, -145.272, -107.2, 0.23 ) }
    dend_22 { pt3dadd( 74.9457, -150.363, -111.489, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 71.8958, -145.272, -107.2, 0.23 ) }
    dend_21 { pt3dadd( 74.5995, -153.444, -114.73, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_5 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 52.8917, 41.369, -0.0265634, 0.23 ) }
    dend_13 { pt3dadd( 54.8429, 40.8625, 0.999737, 0.23 ) }
    dend_13 { pt3dadd( 56.7316, 40.4969, 1.79938, 0.68 ) }
    dend_13 { pt3dadd( 59.5523, 40.0598, 2.91974, 0.23 ) }
    dend_13 { pt3dadd( 61.6888, 39.8447, 3.67503, 0.91 ) }
    dend_13 { pt3dadd( 63.9445, 39.6485, 4.38028, 0.23 ) }
    dend_13 { pt3dadd( 65.8555, 39.4995, 4.90723, 1.14 ) }
    dend_13 { pt3dadd( 70.0969, 39.3267, 5.9599, 0.23 ) }
    dend_13 { pt3dadd( 72.096, 39.2559, 6.34132, 0.68 ) }
    dend_13 { pt3dadd( 77.4156, 39.1426, 7.26048, 0.23 ) }
    dend_13 { pt3dadd( 79.8848, 39.0903, 7.70137, 0.68 ) }
    dend_13 { pt3dadd( 84.2613, 39.0649, 8.56922, 0.23 ) }
    dend_13 { pt3dadd( 87.0185, 39.074, 9.155, 0.68 ) }
    dend_13 { pt3dadd( 92.9378, 39.194, 10.4604, 0.23 ) }
    dend_13 { pt3dadd( 97.2872, 39.3205, 11.409, 0.23 ) }
    dend_13 { pt3dadd( 101.121, 39.4823, 12.295, 0.68 ) }
    dend_13 { pt3dadd( 105.113, 39.7385, 13.2764, 0.23 ) }
    dend_13 { pt3dadd( 107.499, 39.9538, 13.8843, 0.68 ) }
    dend_13 { pt3dadd( 110.432, 40.3312, 14.6123, 0.23 ) }
    dend_13 { pt3dadd( 113.534, 40.916, 15.4323, 0.23 ) }
    dend_13 { pt3dadd( 114.951, 41.2318, 15.726, 0.23 ) }
    dend_13 { pt3dadd( 115.876, 41.4827, 15.8407, 0.23 ) }
    dend_13 { pt3dadd( 117.748, 42.0367, 16.0289, 0.23 ) }
    dend_13 { pt3dadd( 120.893, 43.1195, 16.372, 0.68 ) }
    dend_13 { pt3dadd( 122.705, 43.8353, 16.5662, 0.23 ) }
    dend_13 { pt3dadd( 124.149, 44.4962, 16.6654, 0.23 ) }
    dend_13 { pt3dadd( 127.154, 45.902, 16.7108, 1.36 ) }
    dend_13 { pt3dadd( 137.336, 46.2457, 19.8232, 1.36 ) }
    dend_13 { pt3dadd( 147.133, 45.2566, 23.8883, 1.36 ) }
    dend_13 { pt3dadd( 157.214, 46.0483, 27.2404, 1.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 36/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 52.8917, 41.369, -0.0265634, 0.23 ) }
    dend_6 { pt3dadd( 53.7322, 41.9077, 0.206068, 0.23 ) }
    dend_6 { pt3dadd( 56.0899, 43.4187, 0.858609, 1.14 ) }
    dend_6 { pt3dadd( 58.7259, 45.1081, 1.58817, 0.23 ) }
    dend_6 { pt3dadd( 59.9278, 45.8784, 1.92085, 0.68 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 41/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -53.7638, -21.0046, -21.7895, 0.23 ) }
    dend_74 { pt3dadd( -59.8082, -26.7363, -22.5941, 0.23 ) }
    dend_74 { pt3dadd( -65.8272, -32.4328, -23.7593, 0.23 ) }
    dend_74 { pt3dadd( -71.099, -38.9041, -24.3632, 0.23 ) }
    dend_74 { pt3dadd( -75.5413, -45.9943, -24.5337, 0.23 ) }
    dend_74 { pt3dadd( -80.5312, -52.5097, -26.1729, 0.23 ) }
    dend_74 { pt3dadd( -84.7714, -59.5169, -27.8918, 0.23 ) }
    dend_74 { pt3dadd( -89.1541, -66.6027, -28.678, 0.23 ) }
    dend_74 { pt3dadd( -92.7196, -73.9484, -30.5117, 0.23 ) }
    dend_74 { pt3dadd( -95.5056, -81.7541, -31.6707, 0.23 ) }
    dend_74 { pt3dadd( -97.9083, -89.5176, -33.6684, 0.23 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 52/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -53.7638, -21.0046, -21.7895, 0.23 ) }
    dend_71 { pt3dadd( -61.137, -28.87, -24.1229, 0.23 ) }
    dend_71 { pt3dadd( -69.5053, -36.044, -23.7002, 0.23 ) }
    dend_71 { pt3dadd( -76.8495, -44.2674, -23.3664, 0.23 ) }
    dend_71 { pt3dadd( -84.3108, -52.3832, -22.9979, 0.23 ) }
    dend_71 { pt3dadd( -91.9947, -60.1522, -24.5056, 0.23 ) }
    dend_71 { pt3dadd( -100.545, -67.1166, -24.2451, 0.23 ) }
    dend_71 { pt3dadd( -108.412, -74.7896, -23.295, 0.23 ) }
    dend_71 { pt3dadd( -116.449, -82.3398, -23.0078, 0.23 ) }
    dend_71 { pt3dadd( -123.447, -90.7516, -24.4023, 0.23 ) }
    dend_71 { pt3dadd( -130.621, -99.0452, -25.5924, 0.23 ) }
    // Section: dend_67, id: dend_67, parent: dend_63 (entry count 63/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -0.20965, 7.07947, -68.1239, 0.23 ) }
    dend_67 { pt3dadd( 2.17464, 5.30288, -76.2732, 0.23 ) }
    dend_67 { pt3dadd( 4.92113, 3.03627, -84.1834, 0.23 ) }
    dend_67 { pt3dadd( 9.4822, 2.32549, -91.528, 0.23 ) }
    dend_67 { pt3dadd( 12.9009, 2.27683, -99.5006, 0.23 ) }
    dend_67 { pt3dadd( 17.7677, 3.99994, -106.472, 0.23 ) }
    dend_67 { pt3dadd( 21.8843, 6.89468, -113.538, 0.23 ) }
    dend_67 { pt3dadd( 27.2309, 10.9801, -119.013, 0.23 ) }
    dend_67 { pt3dadd( 32.6858, 13.7941, -125.143, 0.23 ) }
    dend_67 { pt3dadd( 38.7745, 16.8978, -130.486, 0.23 ) }
    dend_67 { pt3dadd( 45.1109, 19.5325, -135.792, 0.23 ) }
    dend_67 { pt3dadd( 52.1788, 20.8142, -140.656, 0.23 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 75/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -0.20965, 7.07947, -68.1239, 0.23 ) }
    dend_64 { pt3dadd( 2.98411, 6.1181, -76.6785, 0.23 ) }
    dend_64 { pt3dadd( 5.98651, 4.95377, -85.277, 0.23 ) }
    dend_64 { pt3dadd( 9.7938, 1.86179, -93.039, 0.23 ) }
    dend_64 { pt3dadd( 13.9537, -2.33439, -100.067, 0.23 ) }
    dend_64 { pt3dadd( 16.9732, -6.79245, -107.504, 0.23 ) }
    dend_64 { pt3dadd( 20.1888, -12.2433, -114.157, 0.23 ) }
    dend_64 { pt3dadd( 24.1441, -18.2311, -119.884, 0.23 ) }
    dend_64 { pt3dadd( 27.2222, -24.5548, -125.787, 0.23 ) }
    dend_64 { pt3dadd( 30.4537, -31.672, -130.604, 0.23 ) }
    dend_64 { pt3dadd( 32.4794, -39.4375, -135.065, 0.23 ) }
    dend_64 { pt3dadd( 35.1393, -47.5598, -138.421, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 87/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -117.667, 90.1098, 16.6038, 0.23 ) }
    dend_61 { pt3dadd( -119.629, 93.0275, 16.7594, 0.23 ) }
    dend_61 { pt3dadd( -121.29, 95.3787, 16.9827, 0.23 ) }
    dend_61 { pt3dadd( -123.185, 98.228, 17.2823, 0.45 ) }
    dend_61 { pt3dadd( -124.339, 100.115, 17.55, 0.23 ) }
    dend_61 { pt3dadd( -125.406, 102.172, 18.001, 0.68 ) }
    dend_61 { pt3dadd( -126.809, 104.878, 18.594, 0.23 ) }
    dend_61 { pt3dadd( -128.366, 108.051, 19.4544, 0.68 ) }
    dend_61 { pt3dadd( -129.141, 109.758, 19.9434, 0.23 ) }
    dend_61 { pt3dadd( -129.988, 111.892, 20.705, 0.68 ) }
    dend_61 { pt3dadd( -131.316, 116.224, 22.5354, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 98/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -117.667, 90.1098, 16.6038, 0.23 ) }
    dend_60 { pt3dadd( -119.129, 91.2682, 17.0752, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( -119.988, 91.9707, 17.5054, 0.23 ) }
    dend_60 { pt3dadd( -120.915, 92.7281, 17.9691, 0.23 ) }
    dend_60 { pt3dadd( -122.527, 94.045, 18.7756, 0.68 ) }
    dend_60 { pt3dadd( -124.362, 95.5439, 19.6934, 0.23 ) }
    dend_60 { pt3dadd( -126.554, 97.3355, 20.7905, 0.23 ) }
    dend_60 { pt3dadd( -128.519, 99.0518, 21.964, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 6/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 79.6465, 103.766, -9.81139, 0.23 ) }
    dend_49 { pt3dadd( 85.8903, 107.772, -9.62034, 0.23 ) }
    dend_49 { pt3dadd( 92.3861, 111.228, -10.587, 0.23 ) }
    dend_49 { pt3dadd( 98.4556, 115.295, -11.8868, 0.23 ) }
    dend_49 { pt3dadd( 103.78, 119.644, -14.6806, 0.23 ) }
    dend_49 { pt3dadd( 109.265, 124.491, -15.8998, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 12/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 79.6465, 103.766, -9.81139, 0.23 ) }
    dend_48 { pt3dadd( 88.7653, 109.66, -9.36789, 0.23 ) }
    dend_48 { pt3dadd( 97.4228, 116.228, -9.48884, 0.23 ) }
    dend_48 { pt3dadd( 105.864, 122.981, -8.37877, 0.23 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 15.5728, -133.445, 67.6085, 0.23 ) }
    dend_35 { pt3dadd( 16.0239, -135.998, 67.7861, 0.23 ) }
    dend_35 { pt3dadd( 16.3486, -138.335, 67.9231, 0.68 ) }
    dend_35 { pt3dadd( 16.631, -141.196, 68.0666, 0.23 ) }
    dend_35 { pt3dadd( 16.7614, -143.042, 68.1424, 0.91 ) }
    dend_35 { pt3dadd( 16.8615, -144.409, 68.1978, 0.23 ) }
    dend_35 { pt3dadd( 16.9588, -145.378, 68.2477, 0.23 ) }
    dend_35 { pt3dadd( 17.1662, -146.954, 68.351, 0.68 ) }
    dend_35 { pt3dadd( 17.3786, -148.539, 68.3904, 0.23 ) }
    dend_35 { pt3dadd( 17.5793, -149.673, 68.426, 0.91 ) }
    dend_35 { pt3dadd( 18.2208, -152.027, 68.6016, 0.23 ) }
    dend_35 { pt3dadd( 19.2146, -154.951, 68.8704, 0.91 ) }
    dend_35 { pt3dadd( 19.7982, -156.41, 69.0253, 0.23 ) }
    dend_35 { pt3dadd( 20.5239, -157.991, 69.2116, 0.91 ) }
    dend_35 { pt3dadd( 22.0806, -161.077, 69.6761, 0.23 ) }
    dend_35 { pt3dadd( 23.3539, -163.508, 70.1009, 0.23 ) }
    dend_35 { pt3dadd( 23.9848, -164.678, 70.3222, 0.91 ) }
    dend_35 { pt3dadd( 25.0094, -166.525, 70.7087, 0.23 ) }
    dend_35 { pt3dadd( 25.8602, -168.026, 71.0715, 0.91 ) }
    dend_35 { pt3dadd( 27.5673, -170.941, 71.8083, 0.23 ) }
    dend_35 { pt3dadd( 28.1775, -172.019, 72.0271, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 37/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 15.5728, -133.445, 67.6085, 0.23 ) }
    dend_32 { pt3dadd( 14.6501, -136.197, 70.1675, 0.23 ) }
    dend_32 { pt3dadd( 13.5739, -139.347, 73.004, 0.23 ) }
    dend_32 { pt3dadd( 12.8267, -141.7, 75.2132, 0.68 ) }
    dend_32 { pt3dadd( 12.4887, -142.981, 76.4663, 0.23 ) }
    dend_32 { pt3dadd( 12.2647, -143.81, 77.3072, 0.91 ) }
    dend_32 { pt3dadd( 11.4131, -146.939, 80.7045, 0.23 ) }
    dend_32 { pt3dadd( 11.1041, -148.091, 82.0205, 0.91 ) }
    dend_32 { pt3dadd( 10.3549, -150.683, 85.1145, 0.23 ) }
    dend_32 { pt3dadd( 9.63014, -153.084, 87.972, 0.23 ) }
    dend_32 { pt3dadd( 9.33081, -154.087, 89.0955, 0.91 ) }
    dend_32 { pt3dadd( 8.25717, -157.34, 92.4126, 0.23 ) }
    dend_32 { pt3dadd( 7.90418, -158.174, 93.156, 0.91 ) }
    dend_32 { pt3dadd( 7.28337, -159.487, 94.1029, 0.23 ) }
    dend_32 { pt3dadd( 6.6178, -160.79, 94.8327, 1.14 ) }
    dend_32 { pt3dadd( 5.14026, -163.549, 96.0946, 0.23 ) }
    dend_32 { pt3dadd( 3.6157, -166.513, 97.293, 0.91 ) }
    dend_32 { pt3dadd( 1.88975, -169.791, 98.3798, 0.23 ) }
    dend_32 { pt3dadd( 0.484124, -172.48, 99.2906, 0.68 ) }
    dend_32 { pt3dadd( -0.841313, -174.919, 100.157, 0.23 ) }
    dend_32 { pt3dadd( -1.88601, -176.71, 100.814, 0.91 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 58/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 59.9278, 45.8784, 1.92085, 0.23 ) }
    dend_10 { pt3dadd( 62.2502, 45.5533, 4.29929, 0.23 ) }
    dend_10 { pt3dadd( 66.0808, 45.39, 7.44238, 0.23 ) }
    dend_10 { pt3dadd( 69.1454, 45.4738, 9.57857, 0.91 ) }
    dend_10 { pt3dadd( 71.0157, 45.6508, 10.7575, 0.23 ) }
    dend_10 { pt3dadd( 72.4614, 45.8548, 11.6272, 0.91 ) }
    dend_10 { pt3dadd( 75.4728, 46.3311, 13.2537, 0.23 ) }
    dend_10 { pt3dadd( 79.0102, 47.1117, 14.8799, 0.23 ) }
    dend_10 { pt3dadd( 82.1296, 47.8612, 16.0652, 0.23 ) }
    dend_10 { pt3dadd( 85.9714, 48.7499, 17.4124, 0.23 ) }
    dend_10 { pt3dadd( 89.2112, 49.4366, 18.4774, 0.91 ) }
    dend_10 { pt3dadd( 92.1433, 50.0524, 19.4557, 0.23 ) }
    dend_10 { pt3dadd( 94.2422, 50.5225, 20.1951, 0.68 ) }
    dend_10 { pt3dadd( 96.7488, 51.1085, 21.1655, 0.23 ) }
    dend_10 { pt3dadd( 98.6731, 51.6256, 21.9755, 0.23 ) }
    dend_10 { pt3dadd( 99.5205, 51.8987, 22.3587, 0.23 ) }
    dend_10 { pt3dadd( 102.158, 52.976, 23.7435, 0.91 ) }
    dend_10 { pt3dadd( 104.025, 53.9118, 24.8593, 0.23 ) }
    dend_10 { pt3dadd( 105.336, 54.6838, 25.69, 0.91 ) }
    dend_10 { pt3dadd( 108.389, 56.6276, 27.4568, 0.23 ) }
    dend_10 { pt3dadd( 111.022, 58.4239, 28.8146, 0.23 ) }
    dend_10 { pt3dadd( 112.823, 59.7146, 29.6473, 0.23 ) }
    dend_10 { pt3dadd( 114.384, 60.8596, 30.2875, 0.68 ) }
    dend_10 { pt3dadd( 117.107, 62.8061, 31.2726, 0.23 ) }
    dend_10 { pt3dadd( 121.329, 65.7411, 32.6378, 0.23 ) }
    dend_10 { pt3dadd( 124.013, 67.4436, 33.2963, 0.23 ) }
    dend_10 { pt3dadd( 125.352, 68.2052, 33.57, 0.23 ) }
    dend_10 { pt3dadd( 127.284, 69.1602, 33.8925, 0.23 ) }
    dend_10 { pt3dadd( 129.045, 69.9201, 34.1793, 0.68 ) }
    dend_10 { pt3dadd( 130.001, 70.2405, 34.3539, 0.68 ) }
    dend_10 { pt3dadd( 132.375, 70.8416, 35.0988, 0.23 ) }
    dend_10 { pt3dadd( 134.283, 71.1988, 35.7452, 0.68 ) }
    dend_10 { pt3dadd( 135.644, 71.4165, 36.2276, 0.23 ) }
    dend_10 { pt3dadd( 137.251, 71.6854, 36.8104, 0.68 ) }
    dend_10 { pt3dadd( 140.27, 72.2873, 37.96, 0.23 ) }
    dend_10 { pt3dadd( 142.834, 72.8501, 39.0872, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 59.9278, 45.8784, 1.92085, 0.68 ) }
    dend_7 { pt3dadd( 61.8162, 46.9732, 1.75576, 0.68 ) }
    dend_7 { pt3dadd( 63.0368, 47.684, 1.71475, 0.68 ) }
    dend_7 { pt3dadd( 65.8784, 49.3364, 1.72452, 0.23 ) }
    dend_7 { pt3dadd( 67.8142, 50.4958, 1.78972, 0.23 ) }
    dend_7 { pt3dadd( 70.4558, 52.1088, 1.97822, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_7 { pt3dadd( 73.5829, 54.048, 2.28684, 0.23 ) }
    dend_7 { pt3dadd( 74.3395, 54.5306, 2.38465, 1.36 ) }
    dend_7 { pt3dadd( 75.0783, 55.0353, 2.50516, 1.36 ) }
    dend_7 { pt3dadd( 77.0667, 56.7161, 3.00384, 0.23 ) }
    dend_7 { pt3dadd( 78.9212, 58.6534, 3.49949, 0.23 ) }
    dend_7 { pt3dadd( 79.8989, 59.8315, 3.74296, 0.23 ) }
    dend_7 { pt3dadd( 80.6742, 60.8468, 3.87898, 1.14 ) }
    dend_7 { pt3dadd( 82.1628, 62.676, 3.94309, 1.14 ) }
    dend_7 { pt3dadd( 85.0471, 65.8662, 3.69685, 0.23 ) }
    dend_7 { pt3dadd( 86.682, 67.3632, 3.34181, 0.68 ) }
    dend_7 { pt3dadd( 88.3576, 68.6007, 2.91034, 0.23 ) }
    dend_7 { pt3dadd( 90.7563, 70.0271, 2.35548, 0.68 ) }
    dend_7 { pt3dadd( 94.3503, 71.7311, 1.66566, 0.23 ) }
    dend_7 { pt3dadd( 96.6188, 72.5919, 1.39371, 0.23 ) }
    dend_7 { pt3dadd( 99.7635, 73.5231, 1.24427, 1.14 ) }
    dend_7 { pt3dadd( 102.973, 74.3559, 1.54241, 0.23 ) }
    dend_7 { pt3dadd( 105.539, 74.9823, 2.19807, 0.68 ) }
    dend_7 { pt3dadd( 106.647, 75.2609, 2.70485, 0.23 ) }
    dend_7 { pt3dadd( 109.455, 76.0768, 4.56828, 0.91 ) }
    dend_7 { pt3dadd( 110.636, 76.4639, 5.49391, 0.91 ) }
    dend_7 { pt3dadd( 112.542, 77.1452, 7.12781, 0.23 ) }
    dend_7 { pt3dadd( 113.796, 77.6049, 8.15947, 0.23 ) }
    dend_7 { pt3dadd( 114.543, 77.9004, 8.72003, 0.23 ) }
    dend_7 { pt3dadd( 116.693, 78.8285, 10.1204, 0.68 ) }
    dend_7 { pt3dadd( 119.154, 80.0114, 11.4084, 0.23 ) }
    dend_7 { pt3dadd( 120.399, 80.6457, 11.9383, 0.68 ) }
    dend_7 { pt3dadd( 121.723, 81.3432, 12.3445, 0.23 ) }
    dend_7 { pt3dadd( 123.005, 81.9648, 12.6107, 0.23 ) }
    dend_7 { pt3dadd( 124.628, 82.6725, 12.888, 0.23 ) }
    dend_7 { pt3dadd( 125.813, 83.1451, 13.0679, 0.68 ) }
    dend_7 { pt3dadd( 128.921, 84.2689, 13.583, 0.23 ) }
    dend_7 { pt3dadd( 131.225, 85.0527, 13.9609, 1.14 ) }
    dend_7 { pt3dadd( 134.509, 86.079, 14.5233, 0.23 ) }
    dend_7 { pt3dadd( 137.383, 86.8964, 15.0597, 0.23 ) }
    dend_7 { pt3dadd( 139.416, 87.4443, 15.4581, 0.91 ) }
    dend_7 { pt3dadd( 142.856, 88.3263, 16.26, 0.23 ) }
    dend_7 { pt3dadd( 154.129, 95.2425, 16.4805, 0.23 ) }
    dend_7 { pt3dadd( 166.134, 100.785, 16.8046, 0.23 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 38/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -97.9083, -89.5176, -33.6684, 0.23 ) }
    dend_76 { pt3dadd( -103.674, -97.0524, -30.6701, 0.23 ) }
    dend_76 { pt3dadd( -110.885, -103.342, -27.9376, 0.23 ) }
    dend_76 { pt3dadd( -118.011, -108.82, -23.6687, 0.23 ) }
    dend_76 { pt3dadd( -124.379, -114.52, -18.5734, 0.23 ) }
    dend_76 { pt3dadd( -128.949, -120.448, -12.0173, 0.23 ) }
    dend_76 { pt3dadd( -132.991, -125.525, -4.47488, 0.23 ) }
    dend_76 { pt3dadd( -135.806, -131.088, 3.2803, 0.23 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 46/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -97.9083, -89.5176, -33.6684, 0.23 ) }
    dend_75 { pt3dadd( -104.212, -99.0813, -37.4193, 0.23 ) }
    dend_75 { pt3dadd( -111.474, -108.424, -39.7126, 0.23 ) }
    dend_75 { pt3dadd( -117.439, -118.182, -43.5156, 0.23 ) }
    dend_75 { pt3dadd( -124.023, -127.924, -46.1635, 0.23 ) }
    dend_75 { pt3dadd( -130.341, -136.951, -51.0493, 0.23 ) }
    dend_75 { pt3dadd( -136.26, -145.48, -57.172, 0.23 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 53/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -130.621, -99.0452, -25.5924, 0.23 ) }
    dend_73 { pt3dadd( -138.617, -105.772, -25.2062, 0.23 ) }
    dend_73 { pt3dadd( -146.817, -112.145, -23.9854, 0.23 ) }
    dend_73 { pt3dadd( -155.246, -118.117, -22.36, 0.23 ) }
    dend_73 { pt3dadd( -163.53, -124.293, -20.7614, 0.23 ) }
    dend_73 { pt3dadd( -171.777, -130.719, -20.5498, 0.23 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 59/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -130.621, -99.0452, -25.5924, 0.23 ) }
    dend_72 { pt3dadd( -137.105, -105.856, -26.1434, 0.23 ) }
    dend_72 { pt3dadd( -142.055, -113.819, -27.0416, 0.23 ) }
    dend_72 { pt3dadd( -145.824, -122.302, -28.6368, 0.23 ) }
    dend_72 { pt3dadd( -150.513, -130.385, -29.8265, 0.23 ) }
    dend_72 { pt3dadd( -156.322, -137.767, -30.5165, 0.23 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 52.1788, 20.8142, -140.656, 0.23 ) }
    dend_69 { pt3dadd( 58.5887, 22.5262, -149.541, 0.23 ) }
    dend_69 { pt3dadd( 63.2336, 22.433, -159.61, 0.23 ) }
    dend_69 { pt3dadd( 67.05, 21.3983, -169.97, 0.23 ) }
    dend_69 { pt3dadd( 70.7751, 22.3325, -180.373, 0.23 ) }
    dend_69 { pt3dadd( 74.9701, 24.2443, -190.459, 0.23 ) }
    dend_69 { pt3dadd( 80.3632, 26.4065, -199.904, 0.23 ) }
    dend_69 { pt3dadd( 86.7876, 28.6452, -208.66, 0.23 ) }
    dend_69 { pt3dadd( 93.1338, 30.7225, -217.514, 0.23 ) }
    dend_69 { pt3dadd( 101.663, 32.086, -224.467, 0.23 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 75/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 52.1788, 20.8142, -140.656, 0.23 ) }
    dend_68 { pt3dadd( 56.2744, 21.7656, -146.303, 0.23 ) }
    dend_68 { pt3dadd( 59.3199, 22.7444, -152.574, 0.23 ) }
    dend_68 { pt3dadd( 62.7386, 23.594, -158.669, 0.23 ) }
    dend_68 { pt3dadd( 66.8875, 25.4337, -164.052, 0.23 ) }
    dend_68 { pt3dadd( 71.0253, 27.3104, -169.429, 0.23 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 81/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 35.1393, -47.5598, -138.421, 0.23 ) }
    dend_66 { pt3dadd( 39.3973, -52.7889, -145.834, 0.23 ) }
    dend_66 { pt3dadd( 43.8681, -58.7002, -152.579, 0.23 ) }
    dend_66 { pt3dadd( 48.4764, -63.6971, -159.942, 0.23 ) }
    dend_66 { pt3dadd( 51.2742, -69.9749, -167.236, 0.23 ) }
    dend_66 { pt3dadd( 54.1165, -75.5017, -175.097, 0.23 ) }
    dend_66 { pt3dadd( 55.6262, -81.3023, -183.128, 0.23 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 88/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 35.1393, -47.5598, -138.421, 0.23 ) }
    dend_65 { pt3dadd( 38.6197, -52.9365, -145.313, 0.23 ) }
    dend_65 { pt3dadd( 40.6908, -57.506, -153.273, 0.23 ) }
    dend_65 { pt3dadd( 43.8268, -61.6986, -161.091, 0.23 ) }
    dend_65 { pt3dadd( 46.3975, -65.5091, -169.301, 0.23 ) }
    dend_65 { pt3dadd( 48.2964, -68.2536, -178.099, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 94/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 109.265, 124.491, -15.8998, 0.23 ) }
    dend_51 { pt3dadd( 119.402, 131.277, -17.5243, 0.23 ) }
    dend_51 { pt3dadd( 129.147, 138.793, -17.5867, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 97/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 109.265, 124.491, -15.8998, 0.23 ) }
    dend_50 { pt3dadd( 118.841, 131.129, -17.7872, 0.23 ) }
    dend_50 { pt3dadd( 128.048, 138.292, -19.5869, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 135.868, 147.132, -19.6652, 0.23 ) }
    dend_50 { pt3dadd( 142.438, 156.936, -19.4963, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 2/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 28.1775, -172.019, 72.0271, 0.23 ) }
    dend_37 { pt3dadd( 31.0254, -176.774, 72.3451, 0.23 ) }
    dend_37 { pt3dadd( 32.445, -179.144, 72.5036, 0.91 ) }
    dend_37 { pt3dadd( 36.2551, -185.505, 72.9291, 0.23 ) }
    dend_37 { pt3dadd( 37.7301, -187.968, 73.0938, 0.68 ) }
    dend_37 { pt3dadd( 40.6333, -192.815, 73.418, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 8/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 28.1775, -172.019, 72.0271, 0.23 ) }
    dend_36 { pt3dadd( 28.5658, -174.151, 73.0509, 0.23 ) }
    dend_36 { pt3dadd( 29.0467, -176.791, 74.3187, 0.68 ) }
    dend_36 { pt3dadd( 29.3517, -178.465, 75.1226, 0.23 ) }
    dend_36 { pt3dadd( 29.5651, -179.637, 75.6853, 0.91 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 13/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.88601, -176.71, 100.814, 0.23 ) }
    dend_34 { pt3dadd( -1.23906, -178.35, 101.881, 0.23 ) }
    dend_34 { pt3dadd( -0.807346, -179.136, 102.384, 0.68 ) }
    dend_34 { pt3dadd( 1.06535, -182.166, 103.884, 0.23 ) }
    dend_34 { pt3dadd( 1.35763, -182.638, 104.118, 0.23 ) }
    dend_34 { pt3dadd( 2.29476, -184.154, 104.869, 0.23 ) }
    dend_34 { pt3dadd( 3.56885, -186.216, 105.889, 0.91 ) }
    dend_34 { pt3dadd( 4.48664, -187.572, 106.595, 0.23 ) }
    dend_34 { pt3dadd( 5.91347, -189.366, 107.414, 0.68 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 22/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -1.88601, -176.71, 100.814, 0.23 ) }
    dend_33 { pt3dadd( -2.60137, -177.795, 102.856, 0.23 ) }
    dend_33 { pt3dadd( -3.27986, -178.71, 104.63, 0.91 ) }
    dend_33 { pt3dadd( -4.25212, -180.027, 107.305, 0.23 ) }
    dend_33 { pt3dadd( -4.48244, -180.326, 107.959, 0.68 ) }
    dend_33 { pt3dadd( -5.22979, -181.291, 110.065, 0.23 ) }
    dend_33 { pt3dadd( -5.42716, -181.594, 110.767, 1.14 ) }
    dend_33 { pt3dadd( -5.59487, -181.913, 111.57, 1.14 ) }
    dend_33 { pt3dadd( -6.13808, -183.153, 114.432, 0.23 ) }
    dend_33 { pt3dadd( -6.497, -184.064, 116.433, 1.14 ) }
    dend_33 { pt3dadd( -6.59577, -184.371, 117.084, 1.14 ) }
    dend_33 { pt3dadd( -7.08112, -186.249, 120.918, 0.23 ) }
    dend_33 { pt3dadd( -7.18222, -186.882, 122.195, 0.23 ) }
    dend_33 { pt3dadd( -7.25033, -188.173, 124.762, 0.23 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 36/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 142.834, 72.8501, 39.0872, 0.23 ) }
    dend_12 { pt3dadd( 143.181, 73.9932, 39.6845, 0.23 ) }
    dend_12 { pt3dadd( 143.389, 74.5669, 39.9806, 0.91 ) }
    dend_12 { pt3dadd( 144.759, 77.5812, 41.5576, 0.23 ) }
    dend_12 { pt3dadd( 145.746, 79.2674, 42.5296, 0.68 ) }
    dend_12 { pt3dadd( 146.707, 80.5525, 43.3344, 0.23 ) }
    dend_12 { pt3dadd( 147.733, 81.7357, 44.1079, 0.91 ) }
    dend_12 { pt3dadd( 148.541, 82.4811, 44.6322, 0.23 ) }
    dend_12 { pt3dadd( 149.795, 83.4351, 45.3447, 0.68 ) }
    dend_12 { pt3dadd( 151.685, 84.585, 46.2658, 0.23 ) }
    dend_12 { pt3dadd( 153.663, 85.6244, 47.1882, 0.23 ) }
    dend_12 { pt3dadd( 154.751, 86.1381, 47.6546, 0.23 ) }
    dend_12 { pt3dadd( 155.789, 86.6111, 48.1074, 0.91 ) }
    dend_12 { pt3dadd( 156.525, 86.9225, 48.4272, 0.91 ) }
    dend_12 { pt3dadd( 162.424, 90.7265, 51.3628, 0.91 ) }
    dend_12 { pt3dadd( 168.236, 94.3742, 54.6499, 0.91 ) }
    dend_12 { pt3dadd( 172.918, 98.7573, 58.7425, 0.91 ) }
    dend_12 { pt3dadd( 177.975, 103.636, 61.659, 0.91 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 54/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 142.834, 72.8501, 39.0872, 0.23 ) }
    dend_11 { pt3dadd( 143.816, 72.9149, 39.5005, 0.23 ) }
    dend_11 { pt3dadd( 145.878, 73.0219, 40.3436, 0.45 ) }
    dend_11 { pt3dadd( 148.044, 73.1074, 41.2122, 0.23 ) }
    dend_11 { pt3dadd( 150.22, 73.1964, 42.1466, 0.68 ) }
    dend_11 { pt3dadd( 152.483, 73.3227, 43.1433, 0.23 ) }
    dend_11 { pt3dadd( 154.986, 73.4772, 44.2524, 0.68 ) }
    dend_11 { pt3dadd( 156.022, 73.56, 44.7141, 0.23 ) }
    dend_11 { pt3dadd( 157.097, 73.6506, 45.1916, 0.68 ) }
    dend_11 { pt3dadd( 159.262, 73.8295, 46.1317, 0.23 ) }
    dend_11 { pt3dadd( 162.079, 74.1099, 47.4169, 1.14 ) }
    dend_11 { pt3dadd( 163.455, 74.269, 48.0582, 0.23 ) }
    dend_11 { pt3dadd( 164.1, 74.349, 48.3997, 0.91 ) }
    dend_11 { pt3dadd( 165.531, 74.5646, 49.2032, 0.23 ) }
    dend_11 { pt3dadd( 166.405, 74.7126, 49.6986, 1.14 ) }
    dend_11 { pt3dadd( 168.242, 75.0234, 50.7242, 0.23 ) }
    dend_11 { pt3dadd( 170.375, 75.3876, 52.0731, 0.91 ) }
    dend_11 { pt3dadd( 172.552, 75.7535, 53.5047, 0.23 ) }
    dend_11 { pt3dadd( 174.662, 76.1128, 54.8867, 0.68 ) }
    dend_11 { pt3dadd( 177.247, 76.5648, 56.5431, 0.23 ) }
    dend_11 { pt3dadd( 178.367, 76.7547, 57.2822, 0.68 ) }
    dend_11 { pt3dadd( 180.768, 77.1286, 58.9163, 0.23 ) }
    dend_11 { pt3dadd( 183.078, 77.4717, 60.4951, 0.68 ) }
    dend_11 { pt3dadd( 185.169, 77.7854, 61.9336, 0.23 ) }
    dend_11 { pt3dadd( 186.806, 78.0296, 63.0906, 0.23 ) }
    dend_11 { pt3dadd( 190.79, 78.6221, 65.8738, 0.23 ) }
    dend_11 { pt3dadd( 193.497, 79.0435, 67.6704, 0.23 ) }
    dend_11 { pt3dadd( 195.527, 79.3774, 68.9335, 0.68 ) }
    dend_11 { pt3dadd( 199.066, 80.0253, 71.1751, 0.23 ) }
    dend_11 { pt3dadd( 201.425, 80.4922, 72.6452, 0.23 ) }
    dend_11 { pt3dadd( 203.773, 81.0146, 74.1162, 0.23 ) }
    dend_11 { pt3dadd( 206.239, 81.6099, 75.5662, 0.45 ) }
    dend_11 { pt3dadd( 207.332, 81.8878, 76.1987, 0.68 ) }
    dend_11 { pt3dadd( 211.004, 82.8576, 78.3715, 0.23 ) }
    dend_11 { pt3dadd( 212.842, 83.3489, 79.455, 0.68 ) }
    dend_11 { pt3dadd( 216.061, 84.3488, 81.5742, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 166.134, 100.785, 16.8046, 0.23 ) }
    dend_9 { pt3dadd( 171.639, 103.707, 17.6671, 0.23 ) }
    dend_9 { pt3dadd( 176.818, 106.919, 19.2298, 0.23 ) }
    dend_9 { pt3dadd( 182.37, 109.426, 20.8027, 0.23 ) }
    dend_9 { pt3dadd( 187.693, 111.866, 23.1032, 0.23 ) }
    dend_9 { pt3dadd( 192.474, 114.191, 26.4669, 0.23 ) }
    dend_9 { pt3dadd( 196.889, 115.788, 30.6551, 0.23 ) }
    dend_9 { pt3dadd( 201.121, 118.203, 34.6349, 0.23 ) }
    dend_9 { pt3dadd( 205.04, 121.223, 38.5211, 0.23 ) }
    dend_9 { pt3dadd( 209.599, 123.741, 42.0511, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 213.567, 126.726, 45.9144, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 1/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 166.134, 100.785, 16.8046, 0.23 ) }
    dend_8 { pt3dadd( 173.949, 105.063, 18.3636, 0.23 ) }
    dend_8 { pt3dadd( 181.633, 109.303, 20.5485, 0.23 ) }
    dend_8 { pt3dadd( 189.338, 113.963, 21.3909, 0.23 ) }
    dend_8 { pt3dadd( 197.568, 117.684, 21.8557, 0.23 ) }
    dend_8 { pt3dadd( 205.537, 121.432, 23.9134, 0.23 ) }
    dend_8 { pt3dadd( 213.054, 125.933, 26.1548, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_27, dend_26, dend_15, dend_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_44, dend_27, dend_26, dend_15, dend_0, axon_0, dend_56, dend_45, dend_39, dend_28, dend_19, dend_16, dend_4, dend_1, axon_1, dend_62, dend_57, dend_53, dend_46, dend_43, dend_40, dend_30, dend_29, dend_23, dend_20, dend_18, dend_17, dend_14, dend_5, dend_3, dend_2, dend_70, dend_63, dend_59, dend_58, dend_55, dend_54, dend_52, dend_47, dend_42, dend_41, dend_38, dend_31, dend_25, dend_24, dend_22, dend_21, dend_13, dend_6, dend_74, dend_71, dend_67, dend_64, dend_61, dend_60, dend_49, dend_48, dend_35, dend_32, dend_10, dend_7, dend_76, dend_75, dend_73, dend_72, dend_69, dend_68, dend_66, dend_65, dend_51, dend_50, dend_37, dend_36, dend_34, dend_33, dend_12, dend_11, dend_9, dend_8]}
    ModelViewParmSubset_5 = new SectionList()
    dend_44 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_41 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_26 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_1 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_57 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_14 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_70 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_63 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_58 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_55 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_54 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_47 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_31 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_74 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_71 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_67 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_64 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_35 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_7 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_76 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_75 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_73 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_72 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_69 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_66 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_65 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_50 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_9 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_8 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_27 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_15 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_28 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_19 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_4 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_53 OneSecGrp_SectionRef_19.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_46 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_6 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_60 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_61 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_48 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_49 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_22 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_21 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_51 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_37 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_68 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_34 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_18 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_40 OneSecGrp_SectionRef_22.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_21, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 15
    dend_39 nseg = 17
    dend_16 nseg = 13
    dend_1 nseg = 17
    dend_57 nseg = 3
    dend_43 nseg = 3
    dend_29 nseg = 17
    dend_20 nseg = 9
    dend_17 nseg = 3
    dend_14 nseg = 9
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_70 nseg = 3
    dend_63 nseg = 3
    dend_59 nseg = 5
    dend_58 nseg = 9
    dend_55 nseg = 5
    dend_54 nseg = 5
    dend_52 nseg = 5
    dend_47 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 7
    dend_38 nseg = 3
    dend_31 nseg = 5
    dend_25 nseg = 7
    dend_24 nseg = 19
    dend_13 nseg = 5
    dend_74 nseg = 5
    dend_71 nseg = 5
    dend_67 nseg = 5
    dend_64 nseg = 5
    dend_35 nseg = 3
    dend_32 nseg = 3
    dend_10 nseg = 5
    dend_7 nseg = 7
    dend_76 nseg = 3
    dend_75 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 3
    dend_69 nseg = 5
    dend_66 nseg = 3
    dend_65 nseg = 3
    dend_50 nseg = 3
    dend_12 nseg = 3
    dend_11 nseg = 5
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L6_NBC_495063b057_0_0


