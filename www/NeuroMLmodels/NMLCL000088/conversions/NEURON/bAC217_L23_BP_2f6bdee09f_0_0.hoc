// Cell: bAC217_L23_BP_2f6bdee09f_0_0
/*
{
  "id" : "bAC217_L23_BP_2f6bdee09f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.612533, -11.1168, 12.5551, 1.66", "-1.21655, -13.4788, 14.5122, 1.66", "-2.25387, -17.5352, 17.8733, 1.39", "-6.3793, -33.6675, 31.2404, 1.11", "-7.103, -36.4975, 33.5853, 1.11", "-8.01958, -40.0818, 36.5552, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.629492, 14.6129, 2.16765, 0.83", "0.633577, 16.8359, 3.13763, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-8.01958, -40.0818, 36.5552, 0.83", "-9.94973, -46.7298, 34.1882, 0.83", "-10.4093, -48.3128, 33.6245, 0.83", "-11.5825, -52.3534, 32.1859, 0.83", "-12.1083, -54.1648, 31.5409, 0.83", "-13.2393, -58.0602, 30.154, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-8.01958, -40.0818, 36.5552, 0.83", "-8.17306, -41.7512, 36.797, 0.83", "-8.31494, -43.2625, 36.9929, 0.83", "-8.56815, -45.2352, 37.2306, 0.83", "-9.0803, -49.7494, 37.6447, 0.83", "-9.45959, -53.4786, 37.9244, 0.55", "-10.1196, -59.8006, 38.2601, 0.55", "-10.3564, -62.954, 38.445, 0.83", "-10.5442, -66.5685, 38.652, 0.55", "-10.6579, -72.4939, 39.1467, 0.55", "-10.6538, -74.1899, 39.3049, 0.55", "-10.6255, -78.7909, 39.7581, 0.55", "-10.5546, -84.5971, 40.4729, 0.55", "-10.5119, -88.074, 40.9407, 0.55", "-10.4945, -92.7006, 41.6111, 0.55", "-10.7421, -101.005, 42.9404, 0.55", "-11.0001, -105.376, 43.6395, 0.55", "-11.2689, -108.632, 44.1231, 0.55", "-11.6022, -110.874, 44.378, 0.55", "-12.0023, -112.827, 44.5719, 0.55", "-12.9664, -116.728, 45.067, 0.55", "-13.4927, -118.676, 45.3368, 0.55", "-14.2979, -121.651, 45.88, 0.55", "-15.3825, -125.634, 46.6775, 0.55", "-17.0084, -131.377, 47.9269, 0.55", "-18.4301, -136.55, 49.1268, 0.55", "-19.7023, -141.06, 50.2765, 0.83", "-20.9123, -145.367, 51.5321, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.633577, 16.8359, 3.13763, 0.83", "-0.613758, 25.5037, -0.787363, 0.83", "-0.85607, 27.7896, -1.75095, 0.83", "-1.16042, 30.5914, -2.9594, 0.83", "-1.36461, 32.9065, -3.89768, 0.83", "-1.65772, 36.609, -5.32517, 0.83", "-1.95857, 41.4525, -7.09892, 0.83", "-2.14912, 44.8938, -8.07353, 0.83", "-2.33524, 48.6182, -9.19912, 0.83", "-2.5052, 52.4442, -10.5149, 0.55", "-2.56046, 53.6558, -10.9387, 0.55", "-2.68964, 55.728, -11.6702, 0.55", "-2.88506, 60.0558, -13.1319, 0.55", "-3.04983, 63.1946, -14.1481, 0.55", "-3.39816, 71.0621, -16.697, 0.55", "-3.62021, 74.6131, -17.9895, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.633577, 16.8359, 3.13763, 0.83", "1.50191, 19.2056, 3.95902, 0.83", "2.1435, 21.0738, 4.67897, 0.83", "3.08409, 24.0186, 5.92262, 0.83", "3.96148, 26.8562, 7.15146, 0.83", "4.94935, 30.4474, 8.56229, 0.83", "5.68311, 33.155, 9.55191, 0.83", "6.16328, 35.202, 10.3107, 0.83", "6.65723, 37.4477, 11.0651, 0.83", "6.76216, 38.0589, 11.2371, 0.83", "7.92844, 45.088, 12.8296, 0.83", "8.1343, 46.5824, 13.0697, 0.83", "8.38546, 48.615, 13.2892, 0.83", "8.58037, 50.3745, 13.4396, 0.83", "8.77001, 52.4149, 13.5817, 0.83", "9.02939, 54.9923, 13.7614, 0.83", "9.22709, 57.6473, 13.9406, 0.83", "9.36755, 59.1643, 14.0432, 0.83", "9.64957, 61.5118, 14.1955, 0.83", "9.88831, 63.8194, 14.3526, 0.83", "10.1795, 66.2455, 14.4869, 0.83", "10.5619, 69.416, 14.6973, 0.83", "10.82, 71.4865, 14.9311, 0.83", "10.9434, 72.6317, 15.0939, 0.83", "11.0624, 73.9261, 15.3468, 0.83", "11.2448, 75.8404, 15.8369, 0.83", "11.4, 78.6477, 16.747, 0.55", "11.6323, 82.3289, 18.0932, 0.55", "11.6459, 83.4108, 18.5115, 0.55", "11.664, 85.6863, 19.3781, 0.55", "11.6454, 86.6402, 19.7281, 0.55", "11.5805, 88.4284, 20.3816, 0.55", "11.5409, 90.2951, 20.9721, 0.55", "11.5919, 93.0107, 21.6638, 0.55", "11.6294, 94.8006, 22.0913, 0.55", "11.6308, 96.4295, 22.4282, 0.55", "11.6874, 98.466, 22.8381, 0.55", "11.8688, 100.59, 23.2172, 0.55", "12.2067, 103.486, 23.7732, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.2393, -58.0602, 30.154, 0.83", "-15.0066, -62.9898, 32.2299, 0.83", "-16.3932, -66.8929, 33.6842, 0.83", "-18.051, -71.5971, 35.2292, 0.83", "-19.4295, -75.4824, 36.3733, 0.83", "-20.2672, -77.8435, 37.0685, 0.83", "-21.266, -80.6587, 37.8975, 0.83", "-21.9114, -82.6969, 38.3482, 0.83", "-22.6424, -85.0219, 38.7581, 0.83", "-23.5158, -87.9885, 38.8299, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-13.2393, -58.0602, 30.154, 0.55", "-10.7007, -58.5313, 39.9829, 0.55", "-7.67445, -58.9739, 50.4245, 0.55", "-6.13718, -59.1988, 55.7286, 0.55", "-4.20096, -59.482, 62.4092, 0.28", "-3.8811, -59.5288, 63.5128, 0.83", "-2.20311, -59.7742, 69.3024, 0.28", "-1.88109, -59.7513, 70.285, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.62021, 74.6131, -17.9895, 0.55", "-3.15418, 77.7824, -18.3257, 0.55", "-2.66967, 81.1308, -18.7743, 0.55", "-2.32462, 83.4847, -19.0666, 0.55", "-1.76732, 87.0166, -19.4906, 0.83", "-1.36728, 89.5271, -19.7775, 0.55", "-0.968816, 91.8673, -20.0377, 0.55", "-0.585132, 94.0566, -20.2182, 1.11", "0.0904915, 97.8571, -20.6506, 0.55", "0.277523, 99.1297, -20.8156, 0.55", "0.503885, 100.736, -21.0414, 1.11", "0.772185, 102.728, -21.3352, 0.55", "0.922227, 104.031, -21.5246, 1.11", "1.34683, 108.01, -22.0562, 0.55", "1.47348, 110.109, -22.4741, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.62021, 74.6131, -17.9895, 0.28", "-3.99056, 77.4001, -20.8391, 0.28", "-4.02803, 77.8174, -21.2541, 0.55", "-4.28443, 81.5076, -24.7662, 0.28", "-4.44001, 84.9481, -28.2333, 1.11", "-4.47269, 86.7368, -30.1393, 0.28", "-4.47269, 86.7368, -30.1393, 0.55", "-4.20749, 88.9125, -32.0036, 0.28", "-4.02266, 89.7459, -32.627, 1.11", "-2.422, 93.4379, -34.3048, 0.55", "-0.671783, 96.3086, -34.6767, 0.28", "2.41518, 100.795, -34.6827, 1.11", "5.24131, 104.596, -34.257, 0.28", "5.31655, 104.685, -34.2267, 0.55", "7.6736, 107.183, -32.8679, 0.28", "7.8982, 107.403, -32.6854, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-23.5158, -87.9885, 38.8299, 0.83", "-23.2888, -94.4972, 41.599, 0.83", "-23.2187, -99.7024, 44.1678, 0.83", "-23.122, -102.131, 45.3995, 0.83", "-23.1155, -103.522, 46.2234, 0.83", "-23.2189, -107.331, 48.5465, 0.83", "-23.2547, -109.594, 49.7541, 0.83", "-23.1766, -113.916, 51.6386, 0.83", "-23.0017, -116.9, 52.9835, 0.83", "-22.4088, -121.981, 55.1642, 0.83", "-21.9228, -124.592, 56.1435, 0.83", "-20.4154, -131.037, 57.9708, 0.83", "-19.0194, -136.815, 59.2154, 0.83", "-17.8848, -141.63, 59.8041, 0.83", "-17.2045, -145.14, 60.0911, 0.83", "-17.0721, -145.85, 60.124, 0.83", "-16.527, -149.93, 60.4798, 0.28", "-16.474, -151.014, 60.6319, 0.83", "-16.5025, -153.83, 60.9081, 0.28", "-16.5986, -158.844, 61.3073, 0.28", "-16.6406, -159.919, 61.4291, 0.28", "-16.7572, -163.341, 61.8483, 0.83", "-16.798, -166.36, 62.2759, 0.28", "-16.8239, -168.777, 62.6546, 0.83", "-16.7813, -170.701, 63.0267, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-23.5158, -87.9885, 38.8299, 0.55", "-27.3609, -95.0016, 36.4953, 0.55", "-29.1128, -97.9978, 35.5975, 0.55", "-32.9627, -104.342, 33.88, 0.55", "-34.6783, -107.051, 33.216, 0.55", "-36.4462, -109.677, 32.6464, 0.28", "-37.2362, -110.85, 32.3919, 0.55", "-39.3122, -113.539, 32.0274, 0.28", "-40.6892, -115.283, 31.8428, 0.55", "-42.4166, -117.298, 31.8418, 0.28", "-45.1559, -120.313, 31.8321, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_BP_2f6bdee09f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.612533, -11.1168, 12.5551, 1.66 ) }
    dend_5 { pt3dadd( -1.21655, -13.4788, 14.5122, 1.66 ) }
    dend_5 { pt3dadd( -2.25387, -17.5352, 17.8733, 1.39 ) }
    dend_5 { pt3dadd( -6.3793, -33.6675, 31.2404, 1.11 ) }
    dend_5 { pt3dadd( -7.103, -36.4975, 33.5853, 1.11 ) }
    dend_5 { pt3dadd( -8.01958, -40.0818, 36.5552, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.629492, 14.6129, 2.16765, 0.83 ) }
    dend_0 { pt3dadd( 0.633577, 16.8359, 3.13763, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -8.01958, -40.0818, 36.5552, 0.83 ) }
    dend_7 { pt3dadd( -9.94973, -46.7298, 34.1882, 0.83 ) }
    dend_7 { pt3dadd( -10.4093, -48.3128, 33.6245, 0.83 ) }
    dend_7 { pt3dadd( -11.5825, -52.3534, 32.1859, 0.83 ) }
    dend_7 { pt3dadd( -12.1083, -54.1648, 31.5409, 0.83 ) }
    dend_7 { pt3dadd( -13.2393, -58.0602, 30.154, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -8.01958, -40.0818, 36.5552, 0.83 ) }
    dend_6 { pt3dadd( -8.17306, -41.7512, 36.797, 0.83 ) }
    dend_6 { pt3dadd( -8.31494, -43.2625, 36.9929, 0.83 ) }
    dend_6 { pt3dadd( -8.56815, -45.2352, 37.2306, 0.83 ) }
    dend_6 { pt3dadd( -9.0803, -49.7494, 37.6447, 0.83 ) }
    dend_6 { pt3dadd( -9.45959, -53.4786, 37.9244, 0.55 ) }
    dend_6 { pt3dadd( -10.1196, -59.8006, 38.2601, 0.55 ) }
    dend_6 { pt3dadd( -10.3564, -62.954, 38.445, 0.83 ) }
    dend_6 { pt3dadd( -10.5442, -66.5685, 38.652, 0.55 ) }
    dend_6 { pt3dadd( -10.6579, -72.4939, 39.1467, 0.55 ) }
    dend_6 { pt3dadd( -10.6538, -74.1899, 39.3049, 0.55 ) }
    dend_6 { pt3dadd( -10.6255, -78.7909, 39.7581, 0.55 ) }
    dend_6 { pt3dadd( -10.5546, -84.5971, 40.4729, 0.55 ) }
    dend_6 { pt3dadd( -10.5119, -88.074, 40.9407, 0.55 ) }
    dend_6 { pt3dadd( -10.4945, -92.7006, 41.6111, 0.55 ) }
    dend_6 { pt3dadd( -10.7421, -101.005, 42.9404, 0.55 ) }
    dend_6 { pt3dadd( -11.0001, -105.376, 43.6395, 0.55 ) }
    dend_6 { pt3dadd( -11.2689, -108.632, 44.1231, 0.55 ) }
    dend_6 { pt3dadd( -11.6022, -110.874, 44.378, 0.55 ) }
    dend_6 { pt3dadd( -12.0023, -112.827, 44.5719, 0.55 ) }
    dend_6 { pt3dadd( -12.9664, -116.728, 45.067, 0.55 ) }
    dend_6 { pt3dadd( -13.4927, -118.676, 45.3368, 0.55 ) }
    dend_6 { pt3dadd( -14.2979, -121.651, 45.88, 0.55 ) }
    dend_6 { pt3dadd( -15.3825, -125.634, 46.6775, 0.55 ) }
    dend_6 { pt3dadd( -17.0084, -131.377, 47.9269, 0.55 ) }
    dend_6 { pt3dadd( -18.4301, -136.55, 49.1268, 0.55 ) }
    dend_6 { pt3dadd( -19.7023, -141.06, 50.2765, 0.83 ) }
    dend_6 { pt3dadd( -20.9123, -145.367, 51.5321, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.633577, 16.8359, 3.13763, 0.83 ) }
    dend_2 { pt3dadd( -0.613758, 25.5037, -0.787363, 0.83 ) }
    dend_2 { pt3dadd( -0.85607, 27.7896, -1.75095, 0.83 ) }
    dend_2 { pt3dadd( -1.16042, 30.5914, -2.9594, 0.83 ) }
    dend_2 { pt3dadd( -1.36461, 32.9065, -3.89768, 0.83 ) }
    dend_2 { pt3dadd( -1.65772, 36.609, -5.32517, 0.83 ) }
    dend_2 { pt3dadd( -1.95857, 41.4525, -7.09892, 0.83 ) }
    dend_2 { pt3dadd( -2.14912, 44.8938, -8.07353, 0.83 ) }
    dend_2 { pt3dadd( -2.33524, 48.6182, -9.19912, 0.83 ) }
    dend_2 { pt3dadd( -2.5052, 52.4442, -10.5149, 0.55 ) }
    dend_2 { pt3dadd( -2.56046, 53.6558, -10.9387, 0.55 ) }
    dend_2 { pt3dadd( -2.68964, 55.728, -11.6702, 0.55 ) }
    dend_2 { pt3dadd( -2.88506, 60.0558, -13.1319, 0.55 ) }
    dend_2 { pt3dadd( -3.04983, 63.1946, -14.1481, 0.55 ) }
    dend_2 { pt3dadd( -3.39816, 71.0621, -16.697, 0.55 ) }
    dend_2 { pt3dadd( -3.62021, 74.6131, -17.9895, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.633577, 16.8359, 3.13763, 0.83 ) }
    dend_1 { pt3dadd( 1.50191, 19.2056, 3.95902, 0.83 ) }
    dend_1 { pt3dadd( 2.1435, 21.0738, 4.67897, 0.83 ) }
    dend_1 { pt3dadd( 3.08409, 24.0186, 5.92262, 0.83 ) }
    dend_1 { pt3dadd( 3.96148, 26.8562, 7.15146, 0.83 ) }
    dend_1 { pt3dadd( 4.94935, 30.4474, 8.56229, 0.83 ) }
    dend_1 { pt3dadd( 5.68311, 33.155, 9.55191, 0.83 ) }
    dend_1 { pt3dadd( 6.16328, 35.202, 10.3107, 0.83 ) }
    dend_1 { pt3dadd( 6.65723, 37.4477, 11.0651, 0.83 ) }
    dend_1 { pt3dadd( 6.76216, 38.0589, 11.2371, 0.83 ) }
    dend_1 { pt3dadd( 7.92844, 45.088, 12.8296, 0.83 ) }
    dend_1 { pt3dadd( 8.1343, 46.5824, 13.0697, 0.83 ) }
    dend_1 { pt3dadd( 8.38546, 48.615, 13.2892, 0.83 ) }
    dend_1 { pt3dadd( 8.58037, 50.3745, 13.4396, 0.83 ) }
    dend_1 { pt3dadd( 8.77001, 52.4149, 13.5817, 0.83 ) }
    dend_1 { pt3dadd( 9.02939, 54.9923, 13.7614, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.22709, 57.6473, 13.9406, 0.83 ) }
    dend_1 { pt3dadd( 9.36755, 59.1643, 14.0432, 0.83 ) }
    dend_1 { pt3dadd( 9.64957, 61.5118, 14.1955, 0.83 ) }
    dend_1 { pt3dadd( 9.88831, 63.8194, 14.3526, 0.83 ) }
    dend_1 { pt3dadd( 10.1795, 66.2455, 14.4869, 0.83 ) }
    dend_1 { pt3dadd( 10.5619, 69.416, 14.6973, 0.83 ) }
    dend_1 { pt3dadd( 10.82, 71.4865, 14.9311, 0.83 ) }
    dend_1 { pt3dadd( 10.9434, 72.6317, 15.0939, 0.83 ) }
    dend_1 { pt3dadd( 11.0624, 73.9261, 15.3468, 0.83 ) }
    dend_1 { pt3dadd( 11.2448, 75.8404, 15.8369, 0.83 ) }
    dend_1 { pt3dadd( 11.4, 78.6477, 16.747, 0.55 ) }
    dend_1 { pt3dadd( 11.6323, 82.3289, 18.0932, 0.55 ) }
    dend_1 { pt3dadd( 11.6459, 83.4108, 18.5115, 0.55 ) }
    dend_1 { pt3dadd( 11.664, 85.6863, 19.3781, 0.55 ) }
    dend_1 { pt3dadd( 11.6454, 86.6402, 19.7281, 0.55 ) }
    dend_1 { pt3dadd( 11.5805, 88.4284, 20.3816, 0.55 ) }
    dend_1 { pt3dadd( 11.5409, 90.2951, 20.9721, 0.55 ) }
    dend_1 { pt3dadd( 11.5919, 93.0107, 21.6638, 0.55 ) }
    dend_1 { pt3dadd( 11.6294, 94.8006, 22.0913, 0.55 ) }
    dend_1 { pt3dadd( 11.6308, 96.4295, 22.4282, 0.55 ) }
    dend_1 { pt3dadd( 11.6874, 98.466, 22.8381, 0.55 ) }
    dend_1 { pt3dadd( 11.8688, 100.59, 23.2172, 0.55 ) }
    dend_1 { pt3dadd( 12.2067, 103.486, 23.7732, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.2393, -58.0602, 30.154, 0.83 ) }
    dend_9 { pt3dadd( -15.0066, -62.9898, 32.2299, 0.83 ) }
    dend_9 { pt3dadd( -16.3932, -66.8929, 33.6842, 0.83 ) }
    dend_9 { pt3dadd( -18.051, -71.5971, 35.2292, 0.83 ) }
    dend_9 { pt3dadd( -19.4295, -75.4824, 36.3733, 0.83 ) }
    dend_9 { pt3dadd( -20.2672, -77.8435, 37.0685, 0.83 ) }
    dend_9 { pt3dadd( -21.266, -80.6587, 37.8975, 0.83 ) }
    dend_9 { pt3dadd( -21.9114, -82.6969, 38.3482, 0.83 ) }
    dend_9 { pt3dadd( -22.6424, -85.0219, 38.7581, 0.83 ) }
    dend_9 { pt3dadd( -23.5158, -87.9885, 38.8299, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -13.2393, -58.0602, 30.154, 0.55 ) }
    dend_8 { pt3dadd( -10.7007, -58.5313, 39.9829, 0.55 ) }
    dend_8 { pt3dadd( -7.67445, -58.9739, 50.4245, 0.55 ) }
    dend_8 { pt3dadd( -6.13718, -59.1988, 55.7286, 0.55 ) }
    dend_8 { pt3dadd( -4.20096, -59.482, 62.4092, 0.28 ) }
    dend_8 { pt3dadd( -3.8811, -59.5288, 63.5128, 0.83 ) }
    dend_8 { pt3dadd( -2.20311, -59.7742, 69.3024, 0.28 ) }
    dend_8 { pt3dadd( -1.88109, -59.7513, 70.285, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.62021, 74.6131, -17.9895, 0.55 ) }
    dend_4 { pt3dadd( -3.15418, 77.7824, -18.3257, 0.55 ) }
    dend_4 { pt3dadd( -2.66967, 81.1308, -18.7743, 0.55 ) }
    dend_4 { pt3dadd( -2.32462, 83.4847, -19.0666, 0.55 ) }
    dend_4 { pt3dadd( -1.76732, 87.0166, -19.4906, 0.83 ) }
    dend_4 { pt3dadd( -1.36728, 89.5271, -19.7775, 0.55 ) }
    dend_4 { pt3dadd( -0.968816, 91.8673, -20.0377, 0.55 ) }
    dend_4 { pt3dadd( -0.585132, 94.0566, -20.2182, 1.11 ) }
    dend_4 { pt3dadd( 0.0904915, 97.8571, -20.6506, 0.55 ) }
    dend_4 { pt3dadd( 0.277523, 99.1297, -20.8156, 0.55 ) }
    dend_4 { pt3dadd( 0.503885, 100.736, -21.0414, 1.11 ) }
    dend_4 { pt3dadd( 0.772185, 102.728, -21.3352, 0.55 ) }
    dend_4 { pt3dadd( 0.922227, 104.031, -21.5246, 1.11 ) }
    dend_4 { pt3dadd( 1.34683, 108.01, -22.0562, 0.55 ) }
    dend_4 { pt3dadd( 1.47348, 110.109, -22.4741, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.62021, 74.6131, -17.9895, 0.28 ) }
    dend_3 { pt3dadd( -3.99056, 77.4001, -20.8391, 0.28 ) }
    dend_3 { pt3dadd( -4.02803, 77.8174, -21.2541, 0.55 ) }
    dend_3 { pt3dadd( -4.28443, 81.5076, -24.7662, 0.28 ) }
    dend_3 { pt3dadd( -4.44001, 84.9481, -28.2333, 1.11 ) }
    dend_3 { pt3dadd( -4.47269, 86.7368, -30.1393, 0.28 ) }
    dend_3 { pt3dadd( -4.47269, 86.7368, -30.1393, 0.55 ) }
    dend_3 { pt3dadd( -4.20749, 88.9125, -32.0036, 0.28 ) }
    dend_3 { pt3dadd( -4.02266, 89.7459, -32.627, 1.11 ) }
    dend_3 { pt3dadd( -2.422, 93.4379, -34.3048, 0.55 ) }
    dend_3 { pt3dadd( -0.671783, 96.3086, -34.6767, 0.28 ) }
    dend_3 { pt3dadd( 2.41518, 100.795, -34.6827, 1.11 ) }
    dend_3 { pt3dadd( 5.24131, 104.596, -34.257, 0.28 ) }
    dend_3 { pt3dadd( 5.31655, 104.685, -34.2267, 0.55 ) }
    dend_3 { pt3dadd( 7.6736, 107.183, -32.8679, 0.28 ) }
    dend_3 { pt3dadd( 7.8982, 107.403, -32.6854, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -23.5158, -87.9885, 38.8299, 0.83 ) }
    dend_11 { pt3dadd( -23.2888, -94.4972, 41.599, 0.83 ) }
    dend_11 { pt3dadd( -23.2187, -99.7024, 44.1678, 0.83 ) }
    dend_11 { pt3dadd( -23.122, -102.131, 45.3995, 0.83 ) }
    dend_11 { pt3dadd( -23.1155, -103.522, 46.2234, 0.83 ) }
    dend_11 { pt3dadd( -23.2189, -107.331, 48.5465, 0.83 ) }
    dend_11 { pt3dadd( -23.2547, -109.594, 49.7541, 0.83 ) }
    dend_11 { pt3dadd( -23.1766, -113.916, 51.6386, 0.83 ) }
    dend_11 { pt3dadd( -23.0017, -116.9, 52.9835, 0.83 ) }
    dend_11 { pt3dadd( -22.4088, -121.981, 55.1642, 0.83 ) }
    dend_11 { pt3dadd( -21.9228, -124.592, 56.1435, 0.83 ) }
    dend_11 { pt3dadd( -20.4154, -131.037, 57.9708, 0.83 ) }
    dend_11 { pt3dadd( -19.0194, -136.815, 59.2154, 0.83 ) }
    dend_11 { pt3dadd( -17.8848, -141.63, 59.8041, 0.83 ) }
    dend_11 { pt3dadd( -17.2045, -145.14, 60.0911, 0.83 ) }
    dend_11 { pt3dadd( -17.0721, -145.85, 60.124, 0.83 ) }
    dend_11 { pt3dadd( -16.527, -149.93, 60.4798, 0.28 ) }
    dend_11 { pt3dadd( -16.474, -151.014, 60.6319, 0.83 ) }
    dend_11 { pt3dadd( -16.5025, -153.83, 60.9081, 0.28 ) }
    dend_11 { pt3dadd( -16.5986, -158.844, 61.3073, 0.28 ) }
    dend_11 { pt3dadd( -16.6406, -159.919, 61.4291, 0.28 ) }
    dend_11 { pt3dadd( -16.7572, -163.341, 61.8483, 0.83 ) }
    dend_11 { pt3dadd( -16.798, -166.36, 62.2759, 0.28 ) }
    dend_11 { pt3dadd( -16.8239, -168.777, 62.6546, 0.83 ) }
    dend_11 { pt3dadd( -16.7813, -170.701, 63.0267, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -23.5158, -87.9885, 38.8299, 0.55 ) }
    dend_10 { pt3dadd( -27.3609, -95.0016, 36.4953, 0.55 ) }
    dend_10 { pt3dadd( -29.1128, -97.9978, 35.5975, 0.55 ) }
    dend_10 { pt3dadd( -32.9627, -104.342, 33.88, 0.55 ) }
    dend_10 { pt3dadd( -34.6783, -107.051, 33.216, 0.55 ) }
    dend_10 { pt3dadd( -36.4462, -109.677, 32.6464, 0.28 ) }
    dend_10 { pt3dadd( -37.2362, -110.85, 32.3919, 0.55 ) }
    dend_10 { pt3dadd( -39.3122, -113.539, 32.0274, 0.28 ) }
    dend_10 { pt3dadd( -40.6892, -115.283, 31.8428, 0.55 ) }
    dend_10 { pt3dadd( -42.4166, -117.298, 31.8418, 0.28 ) }
    dend_10 { pt3dadd( -45.1559, -120.313, 31.8321, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_8 nseg = 3
    dend_3 nseg = 3
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_BP_2f6bdee09f_0_0


