// Cell: cNAC187_L1_NGCSA_51e1d4ecd6_0_0
/*
{
  "id" : "cNAC187_L1_NGCSA_51e1d4ecd6_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.75957, 0.791487, 0.0, 3.29624", "-5.12789, 0.78746, 0.0, 6.1632", "-4.4962, 0.783434, 0.0, 7.8883", "-3.86452, 0.779407, 0.0, 9.104", "-3.23283, 0.775381, 0.0, 10.0693", "-2.60115, 0.771354, 0.0, 10.6049", "-1.96946, 0.767328, 0.0, 10.887", "-1.33778, 0.763301, 0.0, 11.088", "-0.706092, 0.759275, 0.0, 11.2803", "-0.0744075, 0.755248, 0.0, 11.3888", "0.557277, 0.751222, 0.0, 11.1824", "1.18896, 0.747196, 0.0, 10.9642", "1.82065, 0.743169, 0.0, 10.7197", "2.45233, 0.739143, 0.0, 10.2395", "3.08402, 0.735116, 0.0, 9.72707", "3.7157, 0.73109, 0.0, 9.05834", "4.34739, 0.727063, 0.0, 8.29246", "4.97907, 0.723037, 0.0, 7.34935", "5.61076, 0.71901, 0.0, 6.30151", "6.24244, 0.714984, 0.0, 4.5976", "6.87413, 0.710958, 0.0, 2.67258" ]
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "0.25762, 5.2524, -7.46, 1.54", "0.401013, 5.40205, -7.52264, 1.54", "1.50204, 6.68507, -8.0308, 0.66", "1.83995, 7.1343, -8.19153, 0.66", "2.44679, 8.05754, -8.48658, 0.95", "2.86845, 8.83566, -8.67634, 0.59", "3.38721, 9.94516, -8.89384, 1.32", "3.81216, 11.1491, -9.16921, 0.44", "4.00275, 11.9434, -9.36421, 1.18", "4.15403, 12.7338, -9.56474, 1.18", "4.33627, 14.1811, -9.96522, 1.4", "4.37184, 14.8217, -10.1578, 2.2", "4.37988, 17.1605, -10.9636, 1.91", "4.35459, 17.7748, -11.1998, 1.91" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997628017964
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-3.11238, 4.5144, -14.26, 1.03", "-3.56564, 5.16078, -15.1171, 1.03", "-4.04471, 5.84397, -16.0231, 1.25", "-5.20623, 7.50038, -18.2196, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997628017964
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.88762, 2.67965, 8.22, 1.32", "4.99375, 3.05124, 8.63931, 1.32", "5.14666, 3.58666, 9.2435, 1.03", "5.38327, 4.41514, 10.1784, 1.03", "5.58067, 5.10635, 10.9584, 1.32", "5.82502, 5.96194, 11.9238, 1.32", "6.099, 6.92126, 13.0064, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997628017964
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "7.16762, -0.7131, 0.0100002, 1.18", "7.50582, -0.814568, -0.13773, 1.18", "8.72944, -1.15948, -0.625278, 0.66", "10.144, -1.55823, -1.18892, 0.88", "12.4936, -2.22051, -2.12507, 0.88", "13.0972, -2.39067, -2.3656, 0.88", "14.0328, -2.65438, -2.73836, 1.18", "14.5938, -2.82711, -2.96522, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999997628017964
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.87413, 0.710958, 0.0, 0.572061", "21.8738, 0.615348, 0.0, 0.572061", "36.8735, 0.519738, 0.0, 0.572061" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.35459, 17.7748, -11.1998, 0.22", "4.03539, 18.6011, -12.3767, 0.22", "3.66828, 19.4408, -13.7113, 0.66", "3.49924, 19.7774, -14.2959, 1.03", "3.06436, 20.4885, -15.6686, 0.95", "2.58664, 21.1865, -17.1338, 0.95", "2.12795, 21.8241, -18.5887, 1.18", "1.86861, 22.1473, -19.4775, 0.95", "1.54616, 22.4899, -20.5325, 0.88", "1.02275, 22.9263, -22.2274, 0.88", "0.608048, 23.1721, -23.6222, 0.66", "0.136528, 23.3553, -25.3215, 0.81", "-0.218995, 23.4251, -26.6942, 0.81", "-0.387952, 23.4293, -27.4279, 0.81", "-0.620313, 23.3871, -28.7214, 0.66", "-0.778996, 23.2931, -30.2813, 0.66", "-0.824794, 23.2484, -31.1825, 0.66", "-0.836664, 23.2486, -32.6779, 0.73", "-0.816724, 23.3201, -33.8946, 0.73", "-0.804144, 23.5022, -35.3093, 0.73", "-0.831494, 23.8087, -36.7638, 0.73", "-0.944554, 24.3952, -38.7103, 0.73", "-1.07323, 24.9836, -40.2762, 0.73", "-1.12236, 25.1988, -40.7548, 0.73", "-1.23931, 25.6678, -41.6691, 0.73", "-1.30812, 25.8758, -42.0607, 0.73", "-1.56362, 26.5064, -43.2388, 0.73", "-1.82686, 27.1367, -44.3862, 0.73", "-2.25228, 28.1173, -46.1488, 0.73", "-2.48321, 28.7083, -47.2076, 0.88", "-2.83875, 29.7574, -49.0262, 0.51", "-2.97777, 30.1437, -49.6959, 0.51", "-3.15905, 30.549, -50.4081, 0.51", "-3.39151, 30.9407, -51.0878, 0.51", "-4.01764, 31.7165, -52.4739, 0.51", "-4.76439, 32.393, -53.8054, 0.51", "-5.8168, 33.119, -55.3913, 0.81", "-7.16018, 33.7274, -57.0914, 0.81", "-7.96878, 33.9468, -57.9267, 0.81", "-8.99859, 34.0801, -58.7641, 0.44", "-10.3008, 34.095, -59.5285, 0.44", "-11.1114, 34.032, -59.8904, 0.95", "-12.5823, 33.8532, -60.3758, 0.44", "-13.3635, 33.7409, -60.5821, 0.29", "-13.9978, 33.6504, -60.7439, 0.29", "-14.8659, 33.5442, -60.9139, 0.59", "-16.1802, 33.4306, -61.1202, 0.37", "-17.2808, 33.3294, -61.1965, 0.73", "-17.9986, 33.2575, -61.1885, 0.73", "-19.6306, 33.0792, -61.0817, 0.15", "-20.7911, 32.9602, -60.9243, 0.44", "-21.6615, 32.8835, -60.7629, 0.66", "-23.2063, 32.7698, -60.339, 0.22", "-23.767, 32.7422, -60.1443, 0.22", "-24.5769, 32.7373, -59.8081, 0.73", "-25.5728, 32.773, -59.3498, 0.73", "-26.4531, 32.8169, -58.9428, 1.03", "-27.9482, 32.8891, -58.2522, 0.37", "-28.9726, 32.9338, -57.8137, 0.37", "-30.0077, 32.9782, -57.3996, 0.51", "-31.1937, 33.0428, -56.9727, 0.66", "-31.8206, 33.0941, -56.7714, 0.66", "-32.756, 33.193, -56.599, 0.66", "-33.9072, 33.3421, -56.703, 0.37", "-34.8649, 33.4822, -56.9912, 0.22", "-35.4981, 33.5935, -57.2635, 0.22", "-36.2377, 33.7237, -57.6505, 0.22", "-38.3899, 34.0701, -58.7915, 0.88", "-40.3187, 34.3617, -59.7182, 0.73", "-41.1364, 34.4835, -60.0377, 0.37", "-42.6739, 34.7, -60.4766, 0.59", "-44.598, 35.0028, -60.7761, 0.15", "-46.2765, 35.3275, -60.6959, 0.37", "-47.6795, 35.7077, -60.2236, 0.07", "-49.0352, 36.1382, -59.5216, 0.37", "-49.7263, 36.4048, -59.0489, 0.37", "-50.3584, 36.7522, -58.4015, 0.59", "-51.3672, 37.5918, -56.8414, 0.22", "-51.5755, 37.8708, -56.3649, 0.51" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "4.35459, 17.7748, -11.1998, 0.66", "4.77485, 18.5579, -11.5458, 0.66", "5.37373, 20.0825, -12.5271, 0.44", "5.68154, 20.9227, -13.1437, 0.73", "6.07896, 21.8823, -13.941, 0.59", "6.54429, 22.8029, -14.801, 0.59", "6.93219, 23.4647, -15.4552, 0.73", "7.42644, 24.2848, -16.3862, 0.73", "7.6952, 24.7005, -16.907, 0.88", "8.17856, 25.3428, -17.7669, 0.88", "8.76356, 25.9333, -18.5832, 0.37", "9.27749, 26.3263, -19.1231, 0.66", "9.64394, 26.5533, -19.4269, 1.18", "10.2267, 26.8666, -19.8031, 1.76" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-5.20623, 7.50038, -18.2196, 0.88", "-5.94603, 8.52953, -19.7482, 0.88", "-6.64124, 9.49665, -21.1847, 1.03", "-7.32807, 10.4521, -22.6038, 1.18", "-7.93108, 11.291, -23.8498, 1.32" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.20623, 7.50038, -18.2196, 0.73", "-5.98993, 8.3179, -22.1646, 0.73", "-6.50639, 8.69172, -23.9167, 0.73", "-7.17631, 9.09006, -25.744, 0.88", "-7.88692, 9.45284, -27.2722, 0.88", "-8.7368, 9.85242, -28.811, 0.88", "-9.33652, 10.1243, -29.7771, 0.73", "-10.1178, 10.4271, -30.6416, 0.81", "-10.758, 10.6455, -31.238, 0.81", "-11.8865, 11.0123, -32.1419, 1.03", "-13.0399, 11.39, -32.9877, 0.73", "-13.8183, 11.6793, -33.5828, 0.73", "-15.2855, 12.2909, -34.9146, 0.81" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "6.099, 6.92126, 13.0064, 0.95", "6.63228, 6.19059, 13.818, 0.95", "7.58832, 5.06443, 15.2834, 0.95", "7.86477, 4.73879, 15.7072, 0.95", "8.29456, 4.23252, 16.366, 0.81", "9.04797, 3.34505, 17.5208, 0.59", "9.66577, 2.61732, 18.4678, 0.88", "10.5965, 1.79531, 19.44, 1.32" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "6.099, 6.92126, 13.0064, 0.73", "5.62154, 7.92791, 13.1187, 0.73", "5.20258, 8.62132, 13.2354, 0.73", "4.82457, 9.07852, 13.3706, 0.73", "4.31442, 9.637, 13.525, 0.51", "3.78217, 10.2194, 13.6504, 0.51", "3.25118, 10.8171, 13.7087, 0.51", "2.63622, 11.4982, 13.6555, 0.51", "1.95139, 12.3769, 13.1327, 0.66", "1.62195, 12.8758, 12.5737, 0.66", "1.41259, 13.2308, 12.0859, 0.66", "1.08193, 13.8555, 11.2133, 0.66", "0.862684, 14.329, 10.5077, 0.66", "0.364201, 15.6416, 8.45801, 0.66", "0.109752, 16.4236, 7.17565, 0.51", "6.70254E-5, 16.7314, 6.65963, 0.51", "-0.225633, 17.2946, 5.68638, 1.1" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.5938, -2.82711, -2.96522, 0.81", "14.9841, -1.92288, -4.25238, 0.81", "15.4599, -0.475134, -5.96971, 0.81", "15.783, 0.701375, -7.17861, 0.81", "15.9556, 1.38381, -7.80106, 0.59", "16.0732, 1.99864, -8.34994, 0.59", "16.1495, 2.55145, -8.84422, 0.59", "16.1667, 3.57262, -9.62208, 0.59", "16.1001, 4.61698, -10.3279, 0.73", "16.0316, 5.18547, -10.7262, 0.88", "15.8255, 6.59587, -11.8462, 0.81", "15.701, 7.21181, -12.3619, 0.81", "15.436, 8.05593, -13.1428, 1.03", "15.2866, 8.38791, -13.5122, 1.03", "14.8245, 9.24171, -14.5565, 0.51", "14.4561, 9.87753, -15.3707, 0.81", "14.1842, 10.3357, -15.9694, 1.1", "13.3585, 11.6345, -17.7872, 1.1", "12.4618, 12.8717, -19.7442, 1.25", "12.1695, 13.2223, -20.3683, 1.4" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "14.5938, -2.82711, -2.96522, 1.25", "16.1766, -1.41599, -2.73652, 1.25", "16.7798, -0.832214, -2.68031, 1.1", "17.4804, -0.135372, -2.6324, 0.81", "18.3038, 0.70521, -2.58804, 1.1", "19.4427, 1.86783, -2.52667, 0.66", "20.4706, 2.91719, -2.47129, 0.73", "21.2397, 3.8637, -2.50476, 0.95", "21.7159, 4.50376, -2.52866, 1.47", "22.1602, 5.12527, -2.55424, 1.76" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "36.8735, 0.519738, 0.0, 0.22", "51.8732, 0.424127, 0.0, 0.22", "66.8729, 0.328517, 0.0, 0.22" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "10.2267, 26.8666, -19.8031, 0.51", "11.531, 26.3591, -20.0518, 0.51", "12.7076, 26.0212, -20.5308, 0.22", "13.8407, 25.7901, -21.1444, 0.22", "14.5274, 25.6939, -21.6313, 0.22", "15.805, 25.5149, -22.5371, 0.51", "17.1172, 25.3311, -23.4675, 0.73", "18.5157, 25.2104, -24.693, 0.37", "19.3878, 25.1956, -25.5925, 0.59", "20.7752, 25.3032, -27.1949, 0.66" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "10.2267, 26.8666, -19.8031, 0.59", "10.9236, 27.7551, -20.202, 0.59", "11.4657, 28.3426, -20.5935, 0.59", "11.9444, 28.8496, -21.0042, 0.73", "12.556, 29.484, -21.5879, 0.66", "12.9701, 29.915, -22.0665, 0.88", "13.6512, 30.6238, -22.8534, 0.51", "14.3485, 31.2547, -23.6896, 0.51", "14.8523, 31.6856, -24.3571, 0.81", "15.3946, 32.1627, -25.185, 1.69", "16.1359, 32.8904, -26.5246, 1.69" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-7.93108, 11.291, -23.8498, 0.73", "-9.25045, 12.4524, -24.5134, 0.73", "-10.4112, 13.4202, -25.0215, 0.59", "-11.1156, 13.9601, -25.322, 0.59", "-11.9643, 14.4997, -25.6403, 0.81", "-13.0785, 15.208, -26.0582, 1.1", "-13.8069, 15.6711, -26.3314, 0.88", "-14.4518, 16.0379, -26.5367, 0.88", "-15.3086, 16.44, -26.716, 0.51", "-16.6912, 16.9371, -26.9625, 1.18" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-7.93108, 11.291, -23.8498, 0.73", "-7.89195, 11.7118, -24.536, 0.73", "-7.77241, 12.5595, -25.8874, 0.88", "-7.65186, 13.5771, -27.3758, 0.88", "-7.5717, 14.4981, -28.641, 1.03", "-7.53019, 15.3922, -29.8132, 0.73", "-7.51126, 16.2682, -30.9404, 0.37", "-7.50138, 17.4227, -32.3679, 0.51", "-7.50024, 18.089, -33.1678, 0.88", "-7.49553, 19.2883, -34.5541, 0.51", "-7.48244, 20.0748, -35.4463, 0.66", "-7.43387, 20.8655, -36.3701, 0.66", "-7.28573, 21.7012, -37.3672, 0.73", "-7.0176, 22.7405, -38.643, 0.73", "-6.8137, 23.2779, -39.3537, 0.73", "-6.61781, 23.6349, -39.8354, 0.73", "-6.04923, 24.4016, -40.89, 0.22", "-5.2607, 25.2409, -42.0218, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-15.2855, 12.2909, -34.9146, 0.59", "-15.8389, 12.6823, -35.5039, 0.59", "-16.857, 13.4022, -36.5877, 0.59", "-17.6487, 13.962, -37.4307, 0.59", "-18.4949, 14.5604, -38.3316, 0.59", "-19.5984, 15.3407, -39.5065, 0.73" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-15.2855, 12.2909, -34.9146, 0.44", "-16.1202, 12.1621, -35.9909, 0.44", "-16.7666, 12.0996, -37.1357, 0.88", "-17.5602, 12.0548, -38.6665, 0.95", "-18.4499, 11.9898, -40.4483, 1.18", "-18.9046, 11.9431, -41.4104, 0.95", "-19.4638, 11.8715, -42.6678, 0.66", "-20.9136, 11.6866, -46.6657, 0.88", "-21.2432, 11.6426, -47.8575, 0.88", "-21.3397, 11.6329, -48.3933, 0.88", "-21.4157, 11.6444, -49.1338, 0.88", "-21.443, 11.6831, -49.6697, 0.88", "-21.4466, 11.8958, -50.9353, 0.88", "-21.3977, 12.1721, -51.7372, 0.88", "-21.2265, 12.8218, -53.1588, 0.88", "-21.043, 13.4772, -54.3217, 0.88", "-20.8995, 13.9293, -54.9751, 0.88", "-20.7118, 14.4386, -55.5957, 0.88", "-20.2924, 15.3316, -56.4641, 0.59", "-19.3179, 16.9025, -57.7667, 0.37", "-18.8224, 17.5296, -58.2015, 0.37", "-17.9715, 18.4929, -58.7369, 0.37", "-17.461, 19.0786, -58.977, 0.51", "-16.5972, 20.1119, -59.2777, 0.22", "-15.7505, 21.1806, -59.5143, 0.51", "-15.1304, 21.9853, -59.6312, 0.66", "-14.3778, 22.9945, -59.8139, 0.66", "-13.1922, 24.6159, -60.1434, 0.51", "-12.6767, 25.3142, -60.2954, 0.51", "-11.9426, 26.2529, -60.5009, 0.73", "-11.0486, 27.4103, -60.7506, 0.44", "-10.4484, 28.1488, -60.9472, 0.44", "-9.90892, 28.7038, -61.1491, 0.66", "-9.11702, 29.3371, -61.442, 0.37", "-8.25751, 29.9438, -61.7189, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "10.5965, 1.79531, 19.44, 0.73", "10.5932, 0.862182, 20.5063, 0.73", "10.6115, 0.0633325, 21.4983, 0.66", "10.6431, -1.08613, 22.9781, 0.73", "10.6763, -2.29232, 24.5309, 1.32", "10.7082, -3.45561, 26.0284, 0.81", "10.7416, -4.66831, 27.5896, 0.88", "10.7692, -5.61836, 28.9127, 0.88", "10.7752, -6.38266, 30.078, 0.88" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "10.5965, 1.79531, 19.44, 1.03", "10.8613, 2.62318, 19.7801, 1.03", "11.1193, 3.43009, 20.1115, 1.03", "11.2555, 3.85579, 20.2864, 1.18" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.225633, 17.2946, 5.68638, 0.51", "-1.03794, 17.7595, 5.03534, 0.51", "-1.90445, 18.2885, 4.30766, 0.29", "-2.47336, 18.6708, 3.81209, 0.29", "-3.35648, 19.2883, 3.0086, 0.29", "-4.09519, 19.8428, 2.27406, 0.44", "-4.6339, 20.273, 1.73047, 0.59", "-5.05794, 20.6418, 1.26344, 0.59", "-5.74326, 21.258, 0.512763, 0.15", "-6.56276, 21.9967, -0.275473, 0.15", "-7.6185, 22.9312, -1.07348, 0.15", "-8.16497, 23.4015, -1.40048, 0.29", "-8.66726, 23.7983, -1.63678, 0.29", "-9.12242, 24.0965, -1.80017, 0.22", "-9.92852, 24.5094, -1.99535, 0.22", "-11.3015, 25.0417, -2.19435, 0.22", "-11.7729, 25.1894, -2.23433, 0.29", "-12.5534, 25.3883, -2.30793, 0.22", "-13.4946, 25.5865, -2.4082, 0.44", "-14.6174, 25.7416, -2.54361, 0.15", "-15.2807, 25.7513, -2.63717, 0.44" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.225633, 17.2946, 5.68638, 0.66", "-0.209195, 17.5799, 5.39819, 0.66", "-0.303082, 18.1905, 4.73392, 0.51", "-0.40804, 18.7863, 4.12176, 0.59", "-0.510017, 19.5549, 3.36344, 0.66", "-0.545196, 19.9839, 2.95741, 0.81", "-0.554356, 21.0285, 2.00146, 0.66", "-0.482297, 22.1769, 0.950216, 1.18", "-0.377584, 23.0966, 0.146405, 0.66", "-0.281376, 23.7254, -0.384794, 0.51", "-0.199909, 24.1338, -0.721558, 0.66", "0.037429, 24.9391, -1.41345, 0.51", "0.315847, 25.6116, -1.95584, 0.51", "0.476146, 25.9283, -2.22515, 0.81", "0.702604, 26.3267, -2.58975, 0.81", "1.01239, 26.8435, -3.13076, 0.73", "1.42554, 27.5286, -3.95564, 0.59", "1.636, 27.8779, -4.41706, 0.44", "1.96243, 28.3835, -5.0645, 0.44", "2.36327, 28.9605, -5.82944, 1.1", "2.98217, 29.7919, -6.94399, 1.1", "3.47047, 30.4324, -7.81285, 1.1", "4.15228, 31.3641, -9.11476, 0.66", "4.5818, 31.9759, -10.024, 0.59" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "12.1695, 13.2223, -20.3683, 0.66", "12.5415, 13.032, -20.9767, 0.66", "13.0474, 12.8068, -21.9342, 0.66", "13.6276, 12.637, -23.216, 0.66", "14.0926, 12.5716, -24.308, 0.66", "14.6876, 12.5911, -25.7978, 0.81", "15.264, 12.7064, -27.4781, 0.95", "15.5708, 12.9043, -28.8347, 0.95", "15.8895, 13.4187, -31.1649, 0.95", "15.9687, 13.7326, -32.2944, 0.73", "16.0114, 14.1522, -33.604, 0.73", "16.0296, 14.7738, -35.2936, 0.95", "15.9637, 15.8252, -38.0207, 0.73", "15.8753, 16.2651, -39.1705, 1.18", "15.6938, 16.7216, -40.4465, 1.18", "15.4326, 17.1173, -41.7662, 1.18", "15.2678, 17.2823, -42.4126, 1.18", "14.7291, 17.5834, -44.0267, 0.95", "13.8762, 17.7562, -45.8652, 0.73", "12.9461, 17.7331, -47.4693, 0.88", "11.5723, 17.5234, -49.5145, 0.88", "10.9186, 17.3259, -50.4957, 0.66", "9.93431, 16.8316, -52.1456, 0.81", "9.44981, 16.4465, -53.1252, 0.81", "8.933, 15.7563, -54.5173, 0.95", "8.43108, 14.7198, -56.2954, 1.1", "7.95421, 13.2997, -58.4582, 1.18", "7.69469, 12.1562, -60.0501, 0.66", "7.53279, 10.8513, -61.6147, 0.66", "7.47887, 9.97367, -62.4887, 1.1", "7.4415, 8.54144, -63.5615, 0.29", "7.42982, 7.53119, -64.0935, 0.51", "7.42202, 6.24567, -64.5401, 0.66", "7.47462, 5.10895, -64.8044, 0.07", "7.5187, 4.42225, -64.9126, 0.29", "7.63362, 3.35865, -65.0564, 0.07", "7.82154, 2.48417, -65.1488, 1.25", "8.32477, 0.791413, -65.366, 0.15", "8.83155, -0.599426, -65.5906, 0.15" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "12.1695, 13.2223, -20.3683, 0.66", "11.5035, 13.3316, -21.3495, 0.66", "10.4466, 13.6721, -23.0136, 0.66", "10.0861, 13.8869, -23.7027, 0.51", "9.73577, 14.1348, -24.4476, 0.37", "9.29996, 14.4587, -25.4771, 0.37", "9.05204, 14.6363, -26.1012, 0.37", "8.62986, 14.9404, -27.2311, 0.44", "7.81155, 15.5539, -29.4896, 0.51", "6.96948, 16.1605, -31.7611, 0.81", "6.1575, 16.6766, -33.8561, 0.81", "5.5035, 16.9989, -35.4847, 0.59", "4.93846, 17.179, -36.8995, 0.59", "4.5808, 17.2294, -37.7856, 0.59", "4.34343, 17.2376, -38.3843, 0.59", "4.16251, 17.2457, -38.8767, 0.59", "3.74536, 17.291, -40.0595, 0.59", "2.88286, 17.4332, -42.5506, 0.59", "2.12604, 17.6014, -44.7364, 0.59", "1.46814, 17.8081, -46.586, 0.59", "0.737328, 18.1314, -48.5891, 0.59", "0.316945, 18.3861, -49.716, 0.88", "0.108687, 18.5442, -50.246, 0.88", "-0.438807, 19.0012, -51.4568, 0.59", "-0.858344, 19.3737, -52.3459, 0.59", "-1.70696, 20.1419, -54.0957, 0.59", "-2.80738, 21.1913, -56.3716, 0.59", "-3.26697, 21.6567, -57.3793, 0.59", "-3.83458, 22.2898, -58.757, 0.59" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "22.1602, 5.12527, -2.55424, 0.88", "23.5433, 5.08702, -2.13807, 0.88", "24.8258, 5.03195, -1.80208, 0.88", "25.5367, 5.00142, -1.61584, 0.88", "26.6757, 4.95251, -1.31746, 1.4", "27.8443, 4.90233, -1.01132, 1.18", "29.1575, 4.84594, -0.667309, 1.32", "29.6784, 4.78456, -0.587917, 1.54" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "22.1602, 5.12527, -2.55424, 0.73", "22.1581, 6.20923, -2.07985, 0.73", "22.2176, 7.12694, -1.54342, 0.73", "22.3463, 7.9381, -1.04983, 0.73", "22.5062, 8.69566, -0.607553, 1.1", "22.7053, 9.57903, -0.140636, 1.1", "22.8583, 10.3173, 0.229679, 0.81", "23.0469, 11.2656, 0.687056, 0.59", "23.1711, 12.0446, 1.00747, 0.44", "23.2491, 12.8621, 1.21328, 0.59", "23.2996, 13.8313, 1.29473, 0.66", "23.3085, 14.7156, 1.27253, 0.66", "23.2401, 16.035, 1.15191, 0.66", "23.1254, 16.8722, 1.04635, 0.73", "22.8967, 18.0608, 0.891837, 1.03", "22.5754, 19.5867, 0.696454, 0.29", "22.3956, 20.3749, 0.642557, 0.29", "22.2423, 21.0016, 0.638375, 0.29", "21.9409, 22.0582, 0.707467, 0.66", "21.7685, 22.5505, 0.754264, 0.22", "21.264, 23.7257, 0.890345, 0.73", "20.6269, 25.0877, 1.06649, 0.29", "20.1933, 26.0624, 1.1769, 1.1", "19.7491, 27.2303, 1.26917, 0.37", "19.3795, 28.4117, 1.30002, 0.66", "18.9007, 30.2697, 1.26224, 0.81", "18.7542, 31.1108, 1.17022, 0.44", "18.7105, 31.861, 1.01499, 0.44", "18.8417, 33.1966, 0.598853, 0.51", "19.0713, 34.0976, 0.23687, 0.51", "19.2421, 34.5561, 0.00613194, 0.37", "19.6203, 35.4542, -0.52687, 0.37", "19.7483, 35.8158, -0.762065, 0.37", "20.1427, 37.2443, -1.75093, 0.22", "20.2717, 37.8042, -2.13614, 0.22", "20.4635, 38.659, -2.69971, 0.29", "20.6681, 39.4916, -3.20525, 0.29", "20.9251, 40.3412, -3.65217, 0.29", "21.3392, 41.4905, -4.17147, 0.29", "21.6586, 42.3275, -4.49905, 0.29", "21.8893, 42.8656, -4.69944, 0.51", "22.3942, 43.8475, -5.0047, 0.22", "22.9142, 44.6816, -5.19852, 0.29", "23.4708, 45.464, -5.30044, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "20.7752, 25.3032, -27.1949, 0.95", "21.4808, 25.4136, -28.0135, 0.95", "22.3522, 25.5413, -28.9045, 0.66", "22.8824, 25.6263, -29.4391, 0.66", "24.0163, 25.8289, -30.5404, 0.37", "25.564, 26.1739, -32.1353, 0.73", "26.4874, 26.4027, -33.0752, 0.59", "27.2276, 26.5863, -33.8118, 0.88", "28.4418, 26.9209, -34.9695, 0.07", "29.1377, 27.1358, -35.6298, 0.73", "30.5939, 27.6855, -37.0328, 0.15", "31.341, 28.0367, -37.7587, 0.73", "32.0404, 28.4044, -38.4913, 0.15", "32.6539, 28.7448, -39.1892, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "20.7752, 25.3032, -27.1949, 0.07", "21.5044, 24.5673, -27.2669, 0.07", "21.9623, 24.1401, -27.3018, 0.29", "22.5467, 23.6133, -27.3342, 0.07", "23.0565, 23.1538, -27.3624, 0.37", "23.4564, 22.7932, -27.3846, 0.07", "23.9288, 22.3673, -27.4108, 0.07", "24.3975, 21.9655, -27.4108, 0.07", "25.3431, 21.2046, -27.4108, 0.44" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "16.1359, 32.8904, -26.5246, 0.59", "16.9312, 33.6767, -26.948, 0.59", "18.0098, 34.7795, -27.4403, 0.51", "18.3488, 35.1764, -27.6045, 0.51", "18.7771, 35.7521, -27.8908, 0.51", "19.0403, 36.1253, -28.1748, 0.51", "19.4036, 36.6167, -28.6139, 0.51", "19.7945, 37.1511, -29.1483, 0.51", "20.2363, 37.7238, -29.7498, 0.81", "20.9931, 38.6198, -30.6401, 0.81", "22.1464, 39.8895, -31.8337, 0.44", "22.9299, 40.6603, -32.5179, 0.44", "24.0096, 41.5663, -33.1901, 0.44", "24.4757, 41.8979, -33.3875, 0.29", "25.4702, 42.5083, -33.5931, 0.07", "25.8967, 42.7548, -33.6218, 0.07", "26.5606, 43.1361, -33.6062, 0.44", "27.9636, 43.9311, -33.6971, 0.73", "28.8006, 44.3794, -33.76, 0.59", "29.9949, 45.0119, -33.8941, 0.37", "30.8733, 45.4847, -34.069, 0.37", "31.4323, 45.8122, -34.2269, 0.73", "32.9791, 46.8647, -34.9375, 0.37" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "16.1359, 32.8904, -26.5246, 0.73", "15.7554, 33.5816, -27.3735, 0.73", "15.2086, 34.6725, -28.6067, 0.73", "14.7138, 35.6623, -29.6551, 0.73", "14.1094, 36.7458, -30.7961, 0.81", "13.7618, 37.301, -31.4045, 0.95", "13.0299, 38.3417, -32.6602, 0.51", "12.6942, 38.7579, -33.2258, 0.51", "12.4132, 39.0423, -33.6695, 0.51", "11.8171, 39.5034, -34.5116, 0.51", "11.2713, 39.8433, -35.2585, 0.51", "10.5926, 40.2302, -36.25, 0.88", "9.95563, 40.6372, -37.3408, 0.95", "9.47595, 41.0627, -38.2932, 0.66", "9.26074, 41.3497, -38.8049, 0.66", "9.06126, 41.7098, -39.3067, 0.66", "8.6705, 42.4415, -40.1776, 0.66", "8.19727, 43.239, -41.0856, 0.66", "7.7732, 43.8268, -41.833, 0.81", "7.12002, 44.5768, -42.9643, 0.51", "6.75207, 44.9458, -43.6518, 0.37", "6.29074, 45.3401, -44.5384, 0.37", "5.5538, 45.8527, -45.9037, 0.37", "4.97323, 46.2105, -47.0044, 0.51", "4.45062, 46.5473, -48.1609, 0.66", "3.92594, 46.9816, -49.5884, 0.73", "3.69318, 47.2853, -50.4832, 0.73", "3.58127, 47.5859, -51.2256, 0.73", "3.56541, 47.8926, -51.8922, 0.73", "3.72424, 48.533, -53.2526, 0.51", "4.07375, 49.2629, -54.7056, 0.66", "4.40367, 49.7792, -55.5774, 0.37", "4.7545, 50.2369, -56.2286, 0.37", "5.23545, 50.8328, -56.892, 0.37", "5.95719, 51.8357, -57.6281, 0.51", "6.54281, 53.0104, -58.0359, 0.51", "6.68721, 54.1628, -58.1748, 1.03", "6.56476, 54.8377, -58.1022, 1.03", "6.23224, 55.7432, -57.9227, 0.29", "5.91806, 56.4762, -57.7473, 0.59", "5.48932, 57.3496, -57.5143, 0.22", "4.88286, 58.3995, -57.3309, 0.59", "3.52509, 60.333, -56.9499, 0.73", "2.96762, 61.0107, -56.7445, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-16.6912, 16.9371, -26.9625, 0.37", "-17.2935, 17.2014, -27.9434, 0.37", "-18.6387, 17.4415, -30.1917, 0.66", "-19.1371, 17.4801, -31.0249, 1.03", "-19.3932, 17.4879, -31.4303, 1.03", "-20.5975, 17.5148, -33.2621, 0.81", "-21.0224, 17.5238, -33.8937, 0.95", "-23.5939, 17.4812, -37.5079, 0.59", "-24.2133, 17.4577, -38.2926, 0.59", "-24.716, 17.4515, -38.9424, 0.59", "-25.6372, 17.4797, -40.1885, 0.59", "-26.4334, 17.5428, -41.2367, 0.59", "-27.2075, 17.6477, -42.2256, 0.29", "-28.5682, 17.9141, -43.8344, 1.32", "-30.8153, 18.4064, -46.5258, 0.37", "-32.186, 18.7029, -48.1955, 0.66", "-32.965, 18.8584, -49.1742, 0.81", "-33.7406, 19.0063, -50.1533, 0.44", "-34.0191, 19.061, -50.5055, 0.73", "-35.1238, 19.2649, -51.8145, 0.29", "-36.2251, 19.4464, -53.0089, 0.66", "-37.9984, 19.7264, -54.9166, 0.66", "-38.4365, 19.7948, -55.4122, 0.59", "-38.8879, 19.8522, -55.9169, 0.22", "-39.5633, 19.9251, -56.6057, 0.22", "-40.3451, 19.9713, -57.3208, 0.59", "-40.7833, 19.975, -57.692, 0.59", "-41.662, 19.9391, -58.3168, 0.59", "-42.7327, 19.8536, -59.0726, 0.81", "-43.46, 19.777, -59.5817, 0.81", "-45.0679, 19.6294, -60.5819, 0.22", "-46.3038, 19.5318, -61.254, 0.51", "-47.7852, 19.4397, -61.9463, 0.51", "-49.0711, 19.3852, -62.4409, 0.51", "-50.2534, 19.3687, -62.7824, 0.51", "-51.9014, 19.3953, -63.1231, 0.73", "-53.465, 19.4662, -63.2819, 0.59", "-54.8086, 19.511, -63.2991, 0.59", "-55.6061, 19.4889, -63.2366, 0.59", "-56.7932, 19.3438, -62.9859, 0.59", "-57.6843, 19.1519, -62.6854, 0.59", "-58.7423, 18.8157, -62.2431, 0.51", "-60.4535, 18.1701, -61.3662, 1.1", "-62.0243, 17.4946, -60.6577, 0.37", "-63.9893, 16.5581, -60.0004, 0.66", "-65.13, 15.9673, -59.8063, 0.66", "-66.1006, 15.4405, -59.7891, 0.66", "-67.581, 14.6654, -60.0763, 0.66", "-70.9002, 13.0309, -61.6107, 0.51", "-72.1143, 12.5042, -62.5369, 0.44", "-72.8845, 12.1931, -63.3451, 0.44", "-73.0224, 12.1371, -63.5189, 0.44", "-73.4291, 11.9659, -64.1456, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-16.6912, 16.9371, -26.9625, 0.44", "-17.2845, 16.2373, -26.4605, 0.44", "-17.9071, 15.3676, -25.7753, 0.73", "-18.2191, 14.8279, -25.3811, 0.51", "-18.7131, 13.9187, -24.8087, 0.51", "-19.1311, 13.1163, -24.3924, 0.51", "-19.7656, 11.8527, -23.904, 0.73", "-20.2534, 10.7943, -23.6844, 1.03", "-20.7777, 9.697, -23.6752, 0.37", "-21.6201, 8.09015, -23.9367, 0.07", "-22.2052, 7.13306, -24.2372, 0.73", "-23.121, 5.92189, -24.7631, 0.73", "-24.0887, 4.77605, -25.4359, 0.51", "-24.6923, 4.13786, -25.899, 0.37", "-25.0366, 3.83352, -26.1623, 0.37", "-25.9073, 3.17363, -26.8343, 0.22", "-26.8139, 2.63072, -27.3132, 0.07" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-19.5984, 15.3407, -39.5065, 0.73", "-20.3623, 15.8466, -40.6253, 0.73", "-21.202, 16.3849, -41.7334, 0.51", "-21.9107, 16.8522, -42.6521, 0.37", "-23.752, 18.08, -45.0096, 0.37", "-24.2429, 18.402, -45.606, 0.37", "-25.2748, 19.0672, -46.7566, 0.73", "-26.7598, 19.9798, -48.2391, 0.37", "-27.8216, 20.6396, -49.2966, 0.37", "-28.6122, 21.1832, -50.1345, 0.37", "-29.203, 21.676, -50.855, 0.59", "-29.827, 22.271, -51.8336, 0.59", "-30.5742, 23.056, -53.2227, 0.73", "-31.3577, 23.9349, -54.9358, 0.81", "-31.8393, 24.5403, -56.3587, 1.18", "-32.1689, 25.0673, -58.0005, 0.66", "-32.3688, 25.505, -60.0949, 0.66", "-32.3922, 25.5826, -60.6971, 0.66", "-32.4092, 25.6779, -62.6103, 0.51", "-32.4218, 25.6401, -64.7485, 0.51", "-32.4939, 25.5037, -67.1543, 0.51", "-32.5415, 25.3131, -69.2602, 0.51", "-32.5515, 25.2635, -69.7185, 0.51", "-32.6015, 25.0567, -71.6512, 0.51", "-32.784, 24.8364, -74.108, 0.51", "-33.2162, 24.6742, -76.5239, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-19.5984, 15.3407, -39.5065, 0.81", "-20.299, 15.4716, -39.6537, 0.81", "-21.277, 15.5047, -39.5721, 0.81", "-22.1815, 15.342, -39.2795, 0.81", "-23.262, 14.9146, -38.6407, 0.15", "-23.7171, 14.6727, -38.2575, 0.15", "-24.8334, 14.0484, -37.14, 0.81", "-26.7337, 12.7182, -34.4319, 0.37", "-27.1929, 12.3239, -33.5649, 1.18", "-27.8271, 11.6508, -32.0432, 0.22", "-28.2445, 11.1218, -30.7493, 0.73", "-28.5442, 10.7099, -29.6584, 0.95", "-29.1181, 9.91658, -27.3011, 0.51", "-29.3769, 9.54058, -26.1961, 0.66", "-29.4975, 9.34511, -25.5482, 0.66", "-29.6748, 9.00941, -24.3826, 0.37", "-29.8345, 8.6053, -23.1445, 0.15" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "10.7752, -6.38266, 30.078, 0.59", "10.2992, -6.44022, 30.7853, 0.59", "9.43655, -6.5445, 32.067, 0.59", "8.71592, -6.63162, 33.1377, 1.25", "7.71968, -6.75206, 34.6179, 1.25" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "10.7752, -6.38266, 30.078, 0.44", "11.2349, -6.4345, 31.1772, 0.44", "11.6671, -6.69279, 32.6492, 0.66", "11.8792, -6.98391, 33.6702, 0.81", "11.9916, -7.29902, 34.3985, 0.81", "12.0823, -7.59316, 34.952, 0.81", "12.2235, -7.97969, 35.6316, 0.81", "12.4759, -8.75802, 36.7605, 0.88", "12.6264, -9.21771, 37.3762, 0.88", "12.8644, -9.95206, 38.3904, 0.66", "13.1677, -10.8486, 39.7402, 0.73", "13.3338, -11.4322, 40.6437, 0.51", "13.4331, -11.9852, 41.5088, 0.44", "13.4719, -12.8508, 42.9772, 0.66", "13.4253, -13.4832, 44.1272, 0.66", "13.2942, -14.2359, 45.5634, 1.4", "13.114, -14.9278, 46.8981, 0.51", "12.96, -15.5591, 48.1006, 0.66", "12.8415, -16.3442, 49.6029, 0.73", "12.8388, -16.7654, 50.3606, 0.73", "12.8889, -17.1181, 50.9556, 0.88", "13.2334, -18.426, 52.9687, 0.66", "13.5865, -19.3381, 54.2737, 0.44", "13.9487, -20.1469, 55.2037, 0.59", "14.214, -20.7258, 55.6459, 0.59", "14.4564, -21.2503, 55.8729, 0.59", "14.8543, -22.0274, 55.9107, 0.59", "15.2065, -22.5898, 55.7537, 0.59", "15.7133, -23.2684, 55.4519, 0.22", "16.5617, -24.2389, 54.9546, 0.73", "17.4604, -25.1295, 54.5189, 0.22", "18.5588, -26.0975, 54.0264, 0.66", "19.064, -26.4942, 53.775, 0.66", "19.6448, -26.8963, 53.4669, 0.66", "20.3815, -27.3499, 52.9642, 0.66", "21.6235, -27.9948, 51.9897, 0.51", "22.5122, -28.3685, 51.2115, 0.29", "24.0368, -28.8974, 49.6799, 0.29", "24.8277, -29.1318, 48.6912, 0.59", "26.3503, -29.5384, 46.6257, 0.29", "26.7216, -29.6258, 46.1002, 0.81", "27.8498, -29.8927, 44.3671, 0.22", "28.7607, -30.167, 42.8661, 0.88", "29.8449, -30.6496, 40.9316, 1.25", "30.5664, -31.1129, 39.5586, 0.29", "30.829, -31.3492, 39.0336, 0.29", "31.7991, -32.537, 36.7795, 0.88", "32.1406, -33.1521, 35.7832, 1.03", "32.4639, -34.0459, 34.5317, 0.07", "32.5506, -34.4705, 34.0152, 0.66", "32.6312, -35.5325, 32.846, 0.07", "32.6402, -35.8521, 32.53, 0.07", "32.6497, -36.5718, 31.9257, 0.81", "32.6782, -37.737, 30.9498, 0.15", "32.7085, -38.8823, 29.9377, 1.62", "32.7775, -40.5284, 28.4123, 0.22", "32.8352, -41.6137, 27.4148, 0.22", "32.8865, -42.5492, 26.5216, 1.25", "32.9573, -43.9606, 25.156, 0.44", "33.0186, -45.2209, 23.9702, 1.25", "33.0644, -46.3568, 22.9235, 0.07", "33.0828, -46.9915, 22.3855, 0.51", "33.1054, -48.1814, 21.5236, 0.07", "33.1098, -48.515, 21.3285, 1.25", "33.1302, -49.7667, 20.8514, 0.07", "33.1431, -50.2837, 20.7291, 0.07", "33.151, -51.0302, 20.6262, 0.29", "33.1596, -51.757, 20.5557, 0.07", "33.168, -52.5988, 20.5396, 0.51", "33.176, -53.1973, 20.5216, 0.15", "33.1746, -53.6517, 20.4965, 0.51", "33.1836, -54.4017, 20.4578, 0.07" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "11.2555, 3.85579, 20.2864, 0.88", "12.076, 3.32208, 20.6226, 0.88", "12.9348, 2.84101, 20.9043, 0.73", "14.2916, 2.20792, 21.1997, 0.44", "15.7546, 1.60501, 21.3509, 0.44", "16.6793, 1.24839, 21.3737, 0.44", "17.3982, 0.978399, 21.3336, 0.59", "17.9905, 0.784719, 21.2029, 0.73", "18.9536, 0.531119, 20.8752, 0.59", "19.7581, 0.372244, 20.4893, 0.37", "20.5703, 0.230131, 20.0088, 0.88", "21.2837, 0.0775851, 19.5937, 0.95", "22.3311, -0.212461, 18.9591, 1.18" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "11.2555, 3.85579, 20.2864, 0.88", "11.1619, 3.5369, 21.4298, 0.88", "11.0708, 3.13569, 22.7202, 0.81", "10.902, 2.85852, 23.8295, 0.81", "10.7895, 2.75388, 24.408, 0.81", "10.6368, 2.64175, 25.2429, 0.81", "10.457, 2.47533, 26.3891, 0.81", "10.374, 2.31954, 27.3076, 0.81", "10.3439, 2.23358, 28.5224, 0.81", "10.3254, 2.29197, 29.1734, 0.81", "10.299, 2.33876, 29.6081, 0.81", "10.2311, 2.46613, 30.6882, 0.81", "10.2315, 2.55563, 31.3091, 0.81", "10.4249, 2.78524, 32.2981, 0.81", "10.8192, 3.00359, 33.2271, 0.88" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "4.5818, 31.9759, -10.024, 0.29", "5.09969, 32.6767, -10.4836, 0.29", "5.50563, 33.0781, -10.9623, 0.51", "6.02282, 33.5218, -11.7628, 0.22", "6.44452, 33.9061, -12.5715, 0.66", "6.79379, 34.2532, -13.5806, 0.44", "7.14186, 34.5802, -14.7606, 0.95", "7.68528, 34.9548, -16.8678, 0.81", "8.09576, 35.1838, -18.6379, 0.81", "8.28375, 35.2628, -19.5805, 0.59", "8.80499, 35.4407, -22.8183, 0.59", "8.87021, 35.4691, -23.4353, 0.59", "8.92468, 35.5249, -24.922, 0.59" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.5818, 31.9759, -10.024, 0.29", "5.43954, 32.8489, -10.0662, 0.29", "5.76389, 33.2616, -9.96072, 0.37", "6.21338, 33.9323, -9.66218, 0.88", "6.70993, 34.688, -9.17663, 0.07", "7.14008, 35.2977, -8.72255, 0.07", "7.39236, 35.624, -8.43136, 0.88", "8.53032, 37.1475, -6.80759, 0.07", "8.95266, 37.7687, -6.07918, 0.66", "9.45029, 38.5039, -5.08895, 0.59", "9.68087, 38.8436, -4.56075, 0.07", "10.1405, 39.4833, -3.43485, 0.07", "10.3398, 39.743, -2.94925, 0.44", "10.8052, 40.0656, -2.22275, 0.51" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "29.6784, 4.78456, -0.587917, 0.95", "30.2888, 4.14202, -0.344286, 0.95", "30.8103, 3.38745, 0.0194833, 0.81", "31.0808, 2.84108, 0.271634, 0.59", "31.4128, 1.98619, 0.626803, 0.95", "31.8021, 0.845774, 1.0737, 0.95", "32.206, -0.337542, 1.5374, 1.03", "32.6713, -2.03251, 2.20563, 1.25", "33.0671, -3.87264, 2.92573, 0.95", "33.2812, -5.12608, 3.40382, 1.25", "33.4245, -6.28463, 3.8445, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "29.6784, 4.78456, -0.587917, 0.37", "30.5747, 4.64332, 0.264039, 0.37", "31.6919, 4.46725, 1.32605, 0.37", "32.1339, 4.3976, 1.74614, 0.66", "33.2575, 4.22052, 2.81427, 0.88", "34.4929, 4.02584, 3.98855, 0.73", "35.1114, 3.92836, 4.5765, 1.1" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "7.71968, -6.75206, 34.6179, 0.15", "6.99704, -6.57677, 34.4285, 0.15", "5.47696, -6.09612, 34.0945, 0.81", "4.52044, -5.73334, 33.8085, 0.44", "3.62515, -5.37904, 33.5028, 0.29", "3.00656, -5.13798, 33.1788, 0.29", "1.63124, -4.66529, 32.2187, 0.07", "0.919949, -4.43076, 31.571, 0.66", "-0.309649, -4.01546, 30.223, 0.73", "-0.778226, -3.84568, 29.5951, 0.44", "-2.4028, -3.17657, 27.0376, 0.07", "-3.35612, -2.79219, 25.3526, 0.22", "-3.86411, -2.59837, 24.3194, 0.22", "-4.03961, -2.53953, 23.9415, 0.22", "-4.61501, -2.33657, 22.6636, 0.22", "-5.47489, -1.91819, 20.6747, 0.22" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "7.71968, -6.75206, 34.6179, 0.73", "6.61061, -7.34467, 34.6856, 0.73", "5.88226, -7.74004, 34.7758, 1.03", "4.93186, -8.25043, 35.0137, 0.73", "3.93443, -8.7798, 35.4169, 0.51", "3.05704, -9.22215, 35.9245, 0.81", "2.15738, -9.67571, 36.445, 0.95", "1.47008, -9.96779, 36.8909, 0.59", "0.48136, -10.3797, 37.6569, 0.59", "-0.367694, -10.7841, 38.5244, 0.81", "-1.0947, -11.1442, 39.5513, 1.32" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "22.3311, -0.212461, 18.9591, 0.88", "23.0011, -0.140712, 17.7991, 0.88" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.3311, -0.212461, 18.9591, 0.66", "23.4041, -1.32875, 17.9601, 0.66", "24.3009, -2.38797, 17.2016, 0.66", "24.596, -2.73643, 16.952, 0.66", "25.1311, -3.36845, 16.4995, 0.37", "25.8465, -4.21333, 15.8945, 0.29", "26.1918, -4.6212, 15.6024, 0.29", "26.5662, -5.09286, 15.456, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "10.8192, 3.00359, 33.2271, 0.59", "10.2942, 3.47993, 34.6533, 0.59", "9.75693, 3.88624, 35.853, 0.37", "9.01392, 4.2928, 37.2712, 0.51", "8.70775, 4.39722, 37.8127, 0.37", "8.45807, 4.42822, 38.2697, 0.37", "7.97824, 4.4878, 39.1479, 0.37", "7.637, 4.49865, 39.7372, 0.37", "6.95814, 4.4038, 40.7922, 0.37", "6.24137, 4.20533, 41.8072, 0.66", "5.22194, 3.77733, 43.414, 0.44" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "10.8192, 3.00359, 33.2271, 0.66", "11.8763, 2.5711, 33.612, 0.66", "12.6483, 2.18444, 33.8575, 0.81", "13.3504, 1.71905, 34.1053, 0.59", "13.7808, 1.34133, 34.2795, 0.59", "14.276, 0.784264, 34.5118, 0.59", "14.9031, -0.0620993, 34.8744, 0.51", "15.2319, -0.705987, 35.1619, 0.37", "15.4817, -1.5416, 35.6334, 0.37", "15.5776, -2.26735, 36.2029, 0.37", "15.5825, -2.81188, 36.7517, 0.37", "15.5502, -3.37807, 37.4368, 0.37", "15.4845, -4.21939, 38.6705, 0.44", "15.4569, -4.91991, 40.0376, 0.51", "15.5062, -5.75513, 42.2678, 0.37", "15.5326, -5.92498, 42.843, 0.37", "15.5634, -6.08264, 43.488, 0.37", "15.5957, -6.31794, 44.5973, 0.37", "15.6461, -6.63971, 46.5533, 0.37", "15.7166, -6.87482, 48.194, 0.37", "15.7314, -6.92678, 48.5422, 0.37", "15.7498, -7.1051, 49.6127, 0.37", "15.7163, -7.25531, 50.3939, 0.37", "15.5898, -7.52816, 51.5465, 0.37", "15.5181, -7.64478, 51.9604, 0.37", "15.4261, -7.72264, 52.4807, 0.37", "15.2845, -7.73186, 53.2573, 0.37", "15.2191, -7.7024, 53.6062, 0.37", "15.0983, -7.62742, 54.1537, 0.37", "14.91, -7.47893, 54.9294, 0.37", "14.6457, -7.1996, 56.0434, 0.37", "14.2348, -6.72795, 57.7117, 0.37", "13.9068, -6.3188, 59.0434, 0.37", "13.8158, -6.19026, 59.449, 0.37", "13.6236, -5.89654, 60.3614, 0.37", "13.4236, -5.57728, 61.3835, 0.81" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "10.8052, 40.0656, -2.22275, 0.29", "11.4858, 40.8119, -2.28493, 0.29", "12.0255, 41.514, -2.43785, 0.29", "12.4974, 42.229, -2.6248, 0.29", "13.0863, 43.276, -2.90783, 0.66", "13.4041, 43.8924, -3.09292, 0.44", "14.0955, 45.3134, -3.55373, 0.44", "14.5797, 46.3872, -3.93121, 0.44", "14.8967, 47.1041, -4.17689, 0.59", "15.3368, 48.0776, -4.52522, 0.29", "15.6765, 48.7181, -4.77014, 0.51", "16.3159, 49.6729, -5.10223, 0.29", "17.3037, 50.7868, -5.41794, 0.29", "17.9716, 51.4451, -5.57014, 0.51", "18.9511, 52.2804, -5.76208, 0.51", "19.7795, 52.88, -5.881, 0.22", "20.9245, 53.6134, -5.95858, 0.22", "21.8671, 54.0898, -5.96521, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "10.8052, 40.0656, -2.22275, 0.29", "11.5148, 39.3581, -1.22084, 0.29", "12.1032, 38.8178, -0.307802, 0.22", "12.6319, 38.3363, 0.66624, 0.37", "13.0294, 37.9163, 1.73967, 0.37", "13.1904, 37.6814, 2.41448, 0.81", "13.3855, 37.1759, 3.95944, 0.81", "13.3488, 37.0734, 4.40198, 0.51", "13.0285, 36.9913, 5.27526, 0.51", "12.0615, 37.0474, 6.72554, 0.37", "11.3134, 37.1705, 7.49168, 0.37", "10.504, 37.3718, 8.11483, 0.15", "9.88762, 37.5529, 8.43131, 0.15", "8.10797, 38.1525, 9.05299, 0.37", "7.36149, 38.4639, 9.17691, 0.07", "7.07104, 38.6015, 9.1662, 0.37", "6.44695, 38.9047, 9.07544, 0.15", "5.7844, 39.2133, 8.90729, 0.51", "5.31028, 39.4181, 8.74028, 0.15", "4.68193, 39.6548, 8.46985, 0.44", "3.63525, 40.0049, 7.99045, 0.15", "3.16512, 40.1448, 7.77219, 0.73", "2.20436, 40.3932, 7.32855, 0.22", "1.72737, 40.5099, 7.13357, 0.88" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "33.4245, -6.28463, 3.8445, 0.37", "33.5197, -7.43871, 3.74748, 0.37", "33.6062, -8.40145, 3.66247, 0.37", "33.6872, -9.53374, 3.56423, 0.59", "33.7247, -10.6011, 3.48812, 0.66", "33.6936, -11.6301, 3.4271, 0.37", "33.5939, -12.737, 3.39526, 1.18", "33.3465, -14.1648, 3.42716, 0.44", "33.1952, -14.79, 3.47963, 0.29", "33.0198, -15.4697, 3.5597, 0.29", "32.7221, -16.6468, 3.73029, 0.81", "32.5072, -17.6255, 3.87405, 0.44", "32.2204, -19.1833, 4.07527, 1.32", "32.0093, -20.4666, 4.15115, 0.22", "31.8487, -21.6861, 4.13399, 0.81", "31.7233, -23.0105, 4.02132, 0.22", "31.6618, -23.9583, 3.8755, 0.22", "31.5717, -25.1268, 3.58854, 1.4", "31.3571, -27.044, 2.98997, 0.29", "31.1659, -28.1665, 2.58337, 0.81", "30.9384, -29.1277, 2.21544, 0.07", "30.5882, -30.3539, 1.77549, 1.03", "30.1585, -31.6397, 1.38003, 0.37", "29.8219, -32.5013, 1.18574, 0.66", "29.2543, -33.7451, 1.00044, 0.15", "28.5743, -34.9446, 0.894864, 1.54", "27.6208, -36.3491, 0.855406, 0.15", "26.7914, -37.3908, 0.897504, 1.62", "25.4767, -38.8826, 1.06582, 0.81", "25.0888, -39.2776, 1.13248, 0.81", "24.3259, -39.9629, 1.29283, 0.15", "24.0991, -40.1475, 1.33597, 0.15", "23.8075, -40.3752, 1.39422, 0.15", "23.1892, -40.9075, 1.53177, 0.81", "22.2902, -41.7628, 1.72901, 0.07", "21.3316, -42.7051, 1.94933, 0.88", "20.5939, -43.4222, 2.13813, 0.07", "19.7405, -44.1868, 2.35863, 0.95", "19.2765, -44.5533, 2.47915, 0.95", "18.5588, -45.0143, 2.65026, 0.15", "17.8568, -45.3863, 2.82912, 0.15", "16.992, -45.7736, 3.05859, 1.1", "16.4255, -46.0176, 3.17724, 1.1", "15.668, -46.3641, 3.25641, 0.15", "14.5239, -46.9438, 3.35813, 0.44", "12.9516, -47.8641, 3.50965, 0.07", "12.071, -48.4498, 3.59262, 1.32", "10.8402, -49.3678, 3.73452, 0.81", "9.43279, -50.5379, 4.01631, 0.07", "8.53601, -51.3681, 4.3384, 0.88", "7.87622, -52.0397, 4.75006, 0.07", "7.54872, -52.4003, 5.07463, 1.03", "6.89965, -53.1529, 5.99342, 0.07", "6.22147, -53.9701, 7.23029, 0.66", "5.54173, -54.8394, 8.68102, 0.07", "4.88692, -55.7029, 10.1402, 0.59", "4.23092, -56.6126, 11.6617, 0.15", "3.65111, -57.4814, 13.0575, 0.15", "3.26624, -58.0855, 14.0344, 0.88", "3.10728, -58.3524, 14.4513, 0.07", "2.95023, -58.6475, 14.8613, 0.59", "2.73885, -59.1218, 15.3984, 0.07", "2.53555, -59.6442, 15.7778, 0.44" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "33.4245, -6.28463, 3.8445, 0.37", "34.0006, -7.72901, 3.51337, 0.37", "34.3672, -8.53922, 3.3296, 0.37", "34.6803, -9.1307, 3.19013, 0.73", "35.2444, -10.0793, 2.95158, 0.59", "35.8796, -11.0675, 2.70249, 0.37", "36.4426, -11.9343, 2.49079, 0.73", "36.9669, -12.6958, 2.29428, 0.44", "37.538, -13.4864, 2.07878, 0.88", "38.0398, -14.1482, 1.87862, 1.1", "38.5221, -14.7552, 1.691, 0.59", "38.91, -15.2762, 1.52698, 0.88", "39.2605, -15.8354, 1.33327, 0.95", "39.9752, -17.2756, 0.794479, 0.29", "40.4328, -18.4326, 0.352335, 0.29", "40.5216, -18.7082, 0.245495, 0.88", "40.7891, -19.6329, -0.132207, 0.59", "41.0413, -20.5961, -0.540038, 1.1", "41.2031, -21.4568, -0.901565, 0.95", "41.2485, -21.8791, -1.06745, 1.1", "41.2576, -22.237, -1.19604, 1.1" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "35.1114, 3.92836, 4.5765, 0.37", "35.1934, 3.57733, 5.39289, 0.37", "35.3208, 3.05221, 6.48202, 0.51", "35.4931, 2.44207, 7.67419, 0.95", "35.7258, 1.76845, 8.95691, 0.44", "36.1182, 0.822794, 10.7404, 0.51", "36.3517, 0.323132, 11.6779, 0.51", "36.6178, -0.148802, 12.5648, 0.29", "36.9949, -0.704921, 13.5673, 0.29", "37.4674, -1.27219, 14.6288, 0.44", "37.9857, -1.79229, 15.6625, 0.44", "38.5036, -2.23207, 16.5865, 0.44", "39.2448, -2.79933, 17.8279, 0.44", "39.8191, -3.20554, 18.7426, 0.44", "40.8826, -3.93423, 20.3113, 0.29", "41.3797, -4.28094, 20.979, 0.29", "41.7678, -4.56116, 21.4409, 0.29", "42.4684, -5.07808, 22.1648, 0.29", "43.5628, -5.92135, 23.1852, 0.29", "43.9209, -6.21974, 23.51, 0.29", "44.5505, -6.77846, 24.0297, 0.66", "45.326, -7.47857, 24.6585, 0.07", "46.1939, -8.26592, 25.3548, 0.66", "47.0022, -9.02662, 26.066, 0.29", "47.8987, -9.91605, 26.8883, 0.15", "48.2873, -10.3057, 27.2677, 0.15", "48.6296, -10.6479, 27.6225, 0.73", "49.093, -11.1287, 28.1252, 0.44", "50.0389, -12.1894, 29.1709, 0.15", "50.297, -12.4884, 29.4429, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "35.1114, 3.92836, 4.5765, 0.51", "36.1532, 3.43032, 5.26441, 0.51", "36.7869, 3.06783, 5.76345, 0.88", "37.8833, 2.35638, 6.73234, 0.44", "38.5301, 1.88239, 7.33231, 0.29", "39.1467, 1.41222, 7.83854, 0.29", "40.1423, 0.703873, 8.53284, 0.29", "40.5674, 0.395771, 8.80118, 0.29", "41.2923, -0.121607, 9.28762, 0.73", "42.2169, -0.746027, 9.97363, 0.95", "43.3176, -1.39362, 10.8313, 1.25", "44.3269, -1.91807, 11.6118, 0.44", "45.2346, -2.35265, 12.2913, 0.44", "46.5777, -2.98091, 13.3029, 0.73", "47.878, -3.5864, 14.3063, 1.47", "49.2271, -4.2296, 15.3471, 0.59", "51.1258, -5.17813, 16.7108, 0.44", "51.7435, -5.5001, 17.0854, 0.44", "52.3966, -5.82589, 17.3755, 0.81", "53.6303, -6.39869, 17.7105, 0.59", "54.8966, -6.94664, 17.8828, 1.03", "56.5342, -7.58716, 17.9345, 0.59", "57.1666, -7.80826, 17.8856, 0.37", "57.7959, -8.01678, 17.7627, 0.51", "58.3426, -8.19063, 17.5943, 0.51", "58.9248, -8.37133, 17.3515, 0.51", "59.3692, -8.52485, 17.1267, 0.15", "60.2187, -8.8917, 16.6082, 0.95", "61.7128, -9.60769, 15.591, 0.07", "62.0964, -9.8104, 15.301, 0.51", "62.4035, -9.98509, 15.0456, 0.51", "63.135, -10.4382, 14.3824, 0.37", "64.0783, -11.0646, 13.4863, 0.88" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.0947, -11.1442, 39.5513, 0.29", "-1.99143, -10.886, 41.2133, 0.29", "-2.94226, -10.5767, 42.7479, 0.51", "-4.09378, -10.2139, 44.3302, 0.29", "-4.32424, -10.1462, 44.6082, 1.03", "-5.30328, -9.91207, 45.6326, 0.66", "-6.16398, -9.77643, 46.4189, 0.44", "-6.85592, -9.73293, 46.8552, 0.44", "-7.75624, -9.79599, 47.2121, 0.15", "-8.26407, -9.89886, 47.3572, 0.15", "-9.25402, -10.1711, 47.6215, 0.37", "-10.6117, -10.6494, 47.9271, 0.07", "-11.566, -11.0405, 48.1265, 0.22", "-12.3203, -11.387, 48.3059, 0.22", "-13.6106, -12.0161, 48.6578, 0.37", "-14.3586, -12.3763, 48.8857, 0.07" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-1.0947, -11.1442, 39.5513, 0.51", "-1.9124, -10.2851, 40.9235, 0.51", "-2.06264, -10.0623, 41.3786, 0.51", "-2.18639, -9.81309, 41.941, 0.51", "-2.33593, -9.53746, 42.5708, 0.51", "-2.57537, -9.10754, 43.4794, 0.73", "-2.9025, -8.5202, 44.7208, 0.73", "-3.39259, -7.60197, 46.7685, 0.51", "-3.65985, -7.03933, 48.0532, 0.73", "-3.96474, -6.26626, 49.7844, 0.95", "-4.07569, -5.93187, 50.5268, 0.07" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "23.0011, -0.140712, 17.7991, 0.37", "24.8232, -0.529687, 17.8501, 0.37", "25.9972, -0.665051, 17.7654, 0.44", "26.7742, -0.722376, 17.6812, 0.44", "27.3847, -0.76334, 17.6076, 0.95", "27.77, -0.795491, 17.5602, 0.81", "28.6551, -0.907599, 17.4517, 1.18", "29.9989, -1.15441, 17.1744, 0.29", "30.6346, -1.27415, 17.0686, 0.29", "31.2291, -1.39226, 16.9875, 0.29", "31.8724, -1.50802, 16.9135, 0.29", "32.5841, -1.612, 16.8555, 0.29", "33.7472, -1.7594, 16.8121, 1.18", "35.1867, -1.94264, 16.8446, 0.44", "35.6422, -1.97975, 16.8582, 0.44", "36.957, -2.01677, 16.903, 0.44", "37.9088, -1.99441, 16.9563, 0.44", "38.877, -1.93338, 17.0268, 0.44", "40.5743, -1.77237, 17.1799, 0.81", "41.7934, -1.64753, 17.2782, 0.22", "43.176, -1.46856, 17.3674, 0.37", "43.928, -1.33483, 17.3814, 0.07", "44.5824, -1.17329, 17.3544, 0.44", "45.2162, -0.94847, 17.3027, 0.07", "46.0371, -0.581429, 17.1986, 1.1", "47.0529, -0.0709879, 17.0378, 0.22", "47.945, 0.427199, 16.8233, 0.59", "48.4253, 0.703847, 16.6651, 0.22", "49.0926, 1.12426, 16.4142, 1.03" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "23.0011, -0.140712, 17.7991, 0.44", "23.1715, 1.02708, 18.3064, 0.44", "23.4077, 1.9506, 18.8184, 0.66", "23.6878, 2.80096, 19.419, 0.66", "23.8778, 3.26163, 19.8879, 0.66", "24.1194, 3.82915, 20.5422, 0.22", "24.2935, 4.22419, 21.0841, 0.51", "24.6361, 4.83466, 22.138, 0.81", "24.8735, 5.18129, 22.8312, 0.88", "25.3764, 5.8411, 24.3669, 0.88", "25.5082, 6.00172, 24.8192, 0.88", "25.9031, 6.46154, 26.3745, 0.51", "26.0772, 6.71708, 27.2294, 0.15" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "41.2576, -22.237, -1.19604, 0.07", "41.548, -23.7627, -2.01538, 0.07", "41.6153, -24.053, -2.15564, 0.37", "41.888, -25.1285, -2.74658, 0.95", "42.1239, -26.0518, -3.25215, 0.37", "42.4068, -27.1637, -3.85195, 0.51", "42.6649, -28.1407, -4.37517, 0.15", "42.9891, -29.2625, -4.92602, 0.81", "43.4723, -30.8946, -5.73545, 0.07", "43.7299, -31.7155, -6.12367, 1.4", "43.8137, -31.9769, -6.23737, 1.25", "44.1684, -33.0076, -6.62185, 0.37", "44.3356, -33.4859, -6.74238, 0.07", "44.7067, -34.5202, -6.88204, 1.25", "45.3408, -36.312, -6.93726, 0.07", "45.6907, -37.3668, -6.93156, 0.95", "45.9975, -38.4002, -6.88436, 0.07", "46.2937, -39.6155, -6.76222, 0.07", "46.4321, -40.3351, -6.69834, 0.07", "46.5578, -41.31, -6.64716, 0.81", "46.6626, -42.5124, -6.72033, 0.07", "46.746, -43.5079, -6.87522, 0.81", "46.8833, -45.0158, -7.26685, 0.07", "47.0274, -46.3533, -7.73905, 0.73", "47.1651, -47.5299, -8.26474, 0.07", "47.3756, -49.1917, -9.16636, 0.07", "47.4411, -49.7798, -9.51931, 1.54", "47.5559, -50.723, -10.1401, 0.07", "47.6741, -51.5973, -10.76, 0.95", "47.8636, -52.9625, -11.6795, 0.07", "47.9458, -53.7755, -12.2176, 0.07", "47.9349, -54.8609, -12.9395, 1.03" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "41.2576, -22.237, -1.19604, 0.22", "41.6794, -23.6614, -0.218641, 0.22", "41.8131, -24.0404, 0.0745699, 0.37", "42.0359, -24.6888, 0.565184, 0.07", "42.1631, -25.0676, 0.871389, 0.59", "42.3531, -25.6429, 1.33508, 0.22", "42.5981, -26.3736, 1.97878, 1.32", "43.0603, -27.7359, 3.22588, 0.07", "43.1951, -28.1526, 3.62323, 0.59", "43.4131, -28.9453, 4.36951, 0.15", "43.513, -29.3409, 4.75361, 0.66", "43.7404, -30.4317, 5.86584, 0.29", "43.7951, -30.7838, 6.24788, 0.59", "43.8149, -31.0035, 6.47292, 0.22", "43.8637, -31.5187, 7.03827, 0.51" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_51", "dend_40", "dend_15", "dend_0", "dend_59", "dend_52", "dend_46", "dend_41", "dend_23", "dend_16", "dend_12", "dend_1", "dend_56", "dend_53", "dend_48", "dend_47", "dend_43", "dend_42", "dend_33", "dend_24", "dend_22", "dend_17", "dend_14", "dend_13", "dend_3", "dend_2", "dend_58", "dend_57", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_18", "dend_7", "dend_4", "dend_39", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_19", "dend_11", "dend_8", "dend_6", "dend_5", "dend_38", "dend_37", "dend_32", "dend_31", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_51", "dend_40", "dend_15", "dend_0", "dend_59", "dend_52", "dend_46", "dend_41", "dend_23", "dend_16", "dend_12", "dend_1", "dend_56", "dend_53", "dend_48", "dend_47", "dend_43", "dend_42", "dend_33", "dend_24", "dend_22", "dend_17", "dend_14", "dend_13", "dend_3", "dend_2", "dend_58", "dend_57", "dend_55", "dend_54", "dend_50", "dend_49", "dend_45", "dend_44", "dend_35", "dend_34", "dend_28", "dend_25", "dend_21", "dend_18", "dend_7", "dend_4", "dend_39", "dend_36", "dend_30", "dend_29", "dend_27", "dend_26", "dend_20", "dend_19", "dend_11", "dend_8", "dend_6", "dend_5", "dend_38", "dend_37", "dend_32", "dend_31", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCSA_51e1d4ecd6_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_51
create dend_59
public dend_59
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_15
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_12, id: dend_12, parent: dend_0
create dend_12
public dend_12
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_23
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_40, dend_15, dend_0, dend_59, dend_52, dend_46, dend_41, dend_23, dend_16, dend_12, dend_1, dend_56, dend_53, dend_48, dend_47, dend_43, dend_42, dend_33, dend_24, dend_22, dend_17, dend_14, dend_13, dend_3, dend_2, dend_58, dend_57, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_35, dend_34, dend_28, dend_25, dend_21, dend_18, dend_7, dend_4, dend_39, dend_36, dend_30, dend_29, dend_27, dend_26, dend_20, dend_19, dend_11, dend_8, dend_6, dend_5, dend_38, dend_37, dend_32, dend_31, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_40, dend_15, dend_0, dend_59, dend_52, dend_46, dend_41, dend_23, dend_16, dend_12, dend_1, dend_56, dend_53, dend_48, dend_47, dend_43, dend_42, dend_33, dend_24, dend_22, dend_17, dend_14, dend_13, dend_3, dend_2, dend_58, dend_57, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_35, dend_34, dend_28, dend_25, dend_21, dend_18, dend_7, dend_4, dend_39, dend_36, dend_30, dend_29, dend_27, dend_26, dend_20, dend_19, dend_11, dend_8, dend_6, dend_5, dend_38, dend_37, dend_32, dend_31, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_51(0), soma_0(0.4999997628017964)
    connect dend_40(0), soma_0(0.4999997628017964)
    connect dend_15(0), soma_0(0.4999997628017964)
    connect dend_0(0), soma_0(0.4999997628017964)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_12(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_33(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.75957, 0.791487, 0.0, 3.29624 ) }
    soma_0 { pt3dadd( -5.12789, 0.78746, 0.0, 6.1632 ) }
    soma_0 { pt3dadd( -4.4962, 0.783434, 0.0, 7.8883 ) }
    soma_0 { pt3dadd( -3.86452, 0.779407, 0.0, 9.104 ) }
    soma_0 { pt3dadd( -3.23283, 0.775381, 0.0, 10.0693 ) }
    soma_0 { pt3dadd( -2.60115, 0.771354, 0.0, 10.6049 ) }
    soma_0 { pt3dadd( -1.96946, 0.767328, 0.0, 10.887 ) }
    soma_0 { pt3dadd( -1.33778, 0.763301, 0.0, 11.088 ) }
    soma_0 { pt3dadd( -0.706092, 0.759275, 0.0, 11.2803 ) }
    soma_0 { pt3dadd( -0.0744075, 0.755248, 0.0, 11.3888 ) }
    soma_0 { pt3dadd( 0.557277, 0.751222, 0.0, 11.1824 ) }
    soma_0 { pt3dadd( 1.18896, 0.747196, 0.0, 10.9642 ) }
    soma_0 { pt3dadd( 1.82065, 0.743169, 0.0, 10.7197 ) }
    soma_0 { pt3dadd( 2.45233, 0.739143, 0.0, 10.2395 ) }
    soma_0 { pt3dadd( 3.08402, 0.735116, 0.0, 9.72707 ) }
    soma_0 { pt3dadd( 3.7157, 0.73109, 0.0, 9.05834 ) }
    soma_0 { pt3dadd( 4.34739, 0.727063, 0.0, 8.29246 ) }
    soma_0 { pt3dadd( 4.97907, 0.723037, 0.0, 7.34935 ) }
    soma_0 { pt3dadd( 5.61076, 0.71901, 0.0, 6.30151 ) }
    soma_0 { pt3dadd( 6.24244, 0.714984, 0.0, 4.5976 ) }
    soma_0 { pt3dadd( 6.87413, 0.710958, 0.0, 2.67258 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 21/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 0.25762, 5.2524, -7.46, 1.54 ) }
    dend_51 { pt3dadd( 0.401013, 5.40205, -7.52264, 1.54 ) }
    dend_51 { pt3dadd( 1.50204, 6.68507, -8.0308, 0.66 ) }
    dend_51 { pt3dadd( 1.83995, 7.1343, -8.19153, 0.66 ) }
    dend_51 { pt3dadd( 2.44679, 8.05754, -8.48658, 0.95 ) }
    dend_51 { pt3dadd( 2.86845, 8.83566, -8.67634, 0.59 ) }
    dend_51 { pt3dadd( 3.38721, 9.94516, -8.89384, 1.32 ) }
    dend_51 { pt3dadd( 3.81216, 11.1491, -9.16921, 0.44 ) }
    dend_51 { pt3dadd( 4.00275, 11.9434, -9.36421, 1.18 ) }
    dend_51 { pt3dadd( 4.15403, 12.7338, -9.56474, 1.18 ) }
    dend_51 { pt3dadd( 4.33627, 14.1811, -9.96522, 1.4 ) }
    dend_51 { pt3dadd( 4.37184, 14.8217, -10.1578, 2.2 ) }
    dend_51 { pt3dadd( 4.37988, 17.1605, -10.9636, 1.91 ) }
    dend_51 { pt3dadd( 4.35459, 17.7748, -11.1998, 1.91 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 35/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -3.11238, 4.5144, -14.26, 1.03 ) }
    dend_40 { pt3dadd( -3.56564, 5.16078, -15.1171, 1.03 ) }
    dend_40 { pt3dadd( -4.04471, 5.84397, -16.0231, 1.25 ) }
    dend_40 { pt3dadd( -5.20623, 7.50038, -18.2196, 1.54 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.88762, 2.67965, 8.22, 1.32 ) }
    dend_15 { pt3dadd( 4.99375, 3.05124, 8.63931, 1.32 ) }
    dend_15 { pt3dadd( 5.14666, 3.58666, 9.2435, 1.03 ) }
    dend_15 { pt3dadd( 5.38327, 4.41514, 10.1784, 1.03 ) }
    dend_15 { pt3dadd( 5.58067, 5.10635, 10.9584, 1.32 ) }
    dend_15 { pt3dadd( 5.82502, 5.96194, 11.9238, 1.32 ) }
    dend_15 { pt3dadd( 6.099, 6.92126, 13.0064, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 7.16762, -0.7131, 0.0100002, 1.18 ) }
    dend_0 { pt3dadd( 7.50582, -0.814568, -0.13773, 1.18 ) }
    dend_0 { pt3dadd( 8.72944, -1.15948, -0.625278, 0.66 ) }
    dend_0 { pt3dadd( 10.144, -1.55823, -1.18892, 0.88 ) }
    dend_0 { pt3dadd( 12.4936, -2.22051, -2.12507, 0.88 ) }
    dend_0 { pt3dadd( 13.0972, -2.39067, -2.3656, 0.88 ) }
    dend_0 { pt3dadd( 14.0328, -2.65438, -2.73836, 1.18 ) }
    dend_0 { pt3dadd( 14.5938, -2.82711, -2.96522, 1.62 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 54/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.87413, 0.710958, 0.0, 0.572061 ) }
    axon_0 { pt3dadd( 21.8738, 0.615348, 0.0, 0.572061 ) }
    axon_0 { pt3dadd( 36.8735, 0.519738, 0.0, 0.572061 ) }
    // Section: dend_59, id: dend_59, parent: dend_51 (entry count 57/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.35459, 17.7748, -11.1998, 0.22 ) }
    dend_59 { pt3dadd( 4.03539, 18.6011, -12.3767, 0.22 ) }
    dend_59 { pt3dadd( 3.66828, 19.4408, -13.7113, 0.66 ) }
    dend_59 { pt3dadd( 3.49924, 19.7774, -14.2959, 1.03 ) }
    dend_59 { pt3dadd( 3.06436, 20.4885, -15.6686, 0.95 ) }
    dend_59 { pt3dadd( 2.58664, 21.1865, -17.1338, 0.95 ) }
    dend_59 { pt3dadd( 2.12795, 21.8241, -18.5887, 1.18 ) }
    dend_59 { pt3dadd( 1.86861, 22.1473, -19.4775, 0.95 ) }
    dend_59 { pt3dadd( 1.54616, 22.4899, -20.5325, 0.88 ) }
    dend_59 { pt3dadd( 1.02275, 22.9263, -22.2274, 0.88 ) }
    dend_59 { pt3dadd( 0.608048, 23.1721, -23.6222, 0.66 ) }
    dend_59 { pt3dadd( 0.136528, 23.3553, -25.3215, 0.81 ) }
    dend_59 { pt3dadd( -0.218995, 23.4251, -26.6942, 0.81 ) }
    dend_59 { pt3dadd( -0.387952, 23.4293, -27.4279, 0.81 ) }
    dend_59 { pt3dadd( -0.620313, 23.3871, -28.7214, 0.66 ) }
    dend_59 { pt3dadd( -0.778996, 23.2931, -30.2813, 0.66 ) }
    dend_59 { pt3dadd( -0.824794, 23.2484, -31.1825, 0.66 ) }
    dend_59 { pt3dadd( -0.836664, 23.2486, -32.6779, 0.73 ) }
    dend_59 { pt3dadd( -0.816724, 23.3201, -33.8946, 0.73 ) }
    dend_59 { pt3dadd( -0.804144, 23.5022, -35.3093, 0.73 ) }
    dend_59 { pt3dadd( -0.831494, 23.8087, -36.7638, 0.73 ) }
    dend_59 { pt3dadd( -0.944554, 24.3952, -38.7103, 0.73 ) }
    dend_59 { pt3dadd( -1.07323, 24.9836, -40.2762, 0.73 ) }
    dend_59 { pt3dadd( -1.12236, 25.1988, -40.7548, 0.73 ) }
    dend_59 { pt3dadd( -1.23931, 25.6678, -41.6691, 0.73 ) }
    dend_59 { pt3dadd( -1.30812, 25.8758, -42.0607, 0.73 ) }
    dend_59 { pt3dadd( -1.56362, 26.5064, -43.2388, 0.73 ) }
    dend_59 { pt3dadd( -1.82686, 27.1367, -44.3862, 0.73 ) }
    dend_59 { pt3dadd( -2.25228, 28.1173, -46.1488, 0.73 ) }
    dend_59 { pt3dadd( -2.48321, 28.7083, -47.2076, 0.88 ) }
    dend_59 { pt3dadd( -2.83875, 29.7574, -49.0262, 0.51 ) }
    dend_59 { pt3dadd( -2.97777, 30.1437, -49.6959, 0.51 ) }
    dend_59 { pt3dadd( -3.15905, 30.549, -50.4081, 0.51 ) }
    dend_59 { pt3dadd( -3.39151, 30.9407, -51.0878, 0.51 ) }
    dend_59 { pt3dadd( -4.01764, 31.7165, -52.4739, 0.51 ) }
    dend_59 { pt3dadd( -4.76439, 32.393, -53.8054, 0.51 ) }
    dend_59 { pt3dadd( -5.8168, 33.119, -55.3913, 0.81 ) }
    dend_59 { pt3dadd( -7.16018, 33.7274, -57.0914, 0.81 ) }
    dend_59 { pt3dadd( -7.96878, 33.9468, -57.9267, 0.81 ) }
    dend_59 { pt3dadd( -8.99859, 34.0801, -58.7641, 0.44 ) }
    dend_59 { pt3dadd( -10.3008, 34.095, -59.5285, 0.44 ) }
    dend_59 { pt3dadd( -11.1114, 34.032, -59.8904, 0.95 ) }
    dend_59 { pt3dadd( -12.5823, 33.8532, -60.3758, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_59 { pt3dadd( -13.3635, 33.7409, -60.5821, 0.29 ) }
    dend_59 { pt3dadd( -13.9978, 33.6504, -60.7439, 0.29 ) }
    dend_59 { pt3dadd( -14.8659, 33.5442, -60.9139, 0.59 ) }
    dend_59 { pt3dadd( -16.1802, 33.4306, -61.1202, 0.37 ) }
    dend_59 { pt3dadd( -17.2808, 33.3294, -61.1965, 0.73 ) }
    dend_59 { pt3dadd( -17.9986, 33.2575, -61.1885, 0.73 ) }
    dend_59 { pt3dadd( -19.6306, 33.0792, -61.0817, 0.15 ) }
    dend_59 { pt3dadd( -20.7911, 32.9602, -60.9243, 0.44 ) }
    dend_59 { pt3dadd( -21.6615, 32.8835, -60.7629, 0.66 ) }
    dend_59 { pt3dadd( -23.2063, 32.7698, -60.339, 0.22 ) }
    dend_59 { pt3dadd( -23.767, 32.7422, -60.1443, 0.22 ) }
    dend_59 { pt3dadd( -24.5769, 32.7373, -59.8081, 0.73 ) }
    dend_59 { pt3dadd( -25.5728, 32.773, -59.3498, 0.73 ) }
    dend_59 { pt3dadd( -26.4531, 32.8169, -58.9428, 1.03 ) }
    dend_59 { pt3dadd( -27.9482, 32.8891, -58.2522, 0.37 ) }
    dend_59 { pt3dadd( -28.9726, 32.9338, -57.8137, 0.37 ) }
    dend_59 { pt3dadd( -30.0077, 32.9782, -57.3996, 0.51 ) }
    dend_59 { pt3dadd( -31.1937, 33.0428, -56.9727, 0.66 ) }
    dend_59 { pt3dadd( -31.8206, 33.0941, -56.7714, 0.66 ) }
    dend_59 { pt3dadd( -32.756, 33.193, -56.599, 0.66 ) }
    dend_59 { pt3dadd( -33.9072, 33.3421, -56.703, 0.37 ) }
    dend_59 { pt3dadd( -34.8649, 33.4822, -56.9912, 0.22 ) }
    dend_59 { pt3dadd( -35.4981, 33.5935, -57.2635, 0.22 ) }
    dend_59 { pt3dadd( -36.2377, 33.7237, -57.6505, 0.22 ) }
    dend_59 { pt3dadd( -38.3899, 34.0701, -58.7915, 0.88 ) }
    dend_59 { pt3dadd( -40.3187, 34.3617, -59.7182, 0.73 ) }
    dend_59 { pt3dadd( -41.1364, 34.4835, -60.0377, 0.37 ) }
    dend_59 { pt3dadd( -42.6739, 34.7, -60.4766, 0.59 ) }
    dend_59 { pt3dadd( -44.598, 35.0028, -60.7761, 0.15 ) }
    dend_59 { pt3dadd( -46.2765, 35.3275, -60.6959, 0.37 ) }
    dend_59 { pt3dadd( -47.6795, 35.7077, -60.2236, 0.07 ) }
    dend_59 { pt3dadd( -49.0352, 36.1382, -59.5216, 0.37 ) }
    dend_59 { pt3dadd( -49.7263, 36.4048, -59.0489, 0.37 ) }
    dend_59 { pt3dadd( -50.3584, 36.7522, -58.4015, 0.59 ) }
    dend_59 { pt3dadd( -51.3672, 37.5918, -56.8414, 0.22 ) }
    dend_59 { pt3dadd( -51.5755, 37.8708, -56.3649, 0.51 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 36/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 4.35459, 17.7748, -11.1998, 0.66 ) }
    dend_52 { pt3dadd( 4.77485, 18.5579, -11.5458, 0.66 ) }
    dend_52 { pt3dadd( 5.37373, 20.0825, -12.5271, 0.44 ) }
    dend_52 { pt3dadd( 5.68154, 20.9227, -13.1437, 0.73 ) }
    dend_52 { pt3dadd( 6.07896, 21.8823, -13.941, 0.59 ) }
    dend_52 { pt3dadd( 6.54429, 22.8029, -14.801, 0.59 ) }
    dend_52 { pt3dadd( 6.93219, 23.4647, -15.4552, 0.73 ) }
    dend_52 { pt3dadd( 7.42644, 24.2848, -16.3862, 0.73 ) }
    dend_52 { pt3dadd( 7.6952, 24.7005, -16.907, 0.88 ) }
    dend_52 { pt3dadd( 8.17856, 25.3428, -17.7669, 0.88 ) }
    dend_52 { pt3dadd( 8.76356, 25.9333, -18.5832, 0.37 ) }
    dend_52 { pt3dadd( 9.27749, 26.3263, -19.1231, 0.66 ) }
    dend_52 { pt3dadd( 9.64394, 26.5533, -19.4269, 1.18 ) }
    dend_52 { pt3dadd( 10.2267, 26.8666, -19.8031, 1.76 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 50/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -5.20623, 7.50038, -18.2196, 0.88 ) }
    dend_46 { pt3dadd( -5.94603, 8.52953, -19.7482, 0.88 ) }
    dend_46 { pt3dadd( -6.64124, 9.49665, -21.1847, 1.03 ) }
    dend_46 { pt3dadd( -7.32807, 10.4521, -22.6038, 1.18 ) }
    dend_46 { pt3dadd( -7.93108, 11.291, -23.8498, 1.32 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 55/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.20623, 7.50038, -18.2196, 0.73 ) }
    dend_41 { pt3dadd( -5.98993, 8.3179, -22.1646, 0.73 ) }
    dend_41 { pt3dadd( -6.50639, 8.69172, -23.9167, 0.73 ) }
    dend_41 { pt3dadd( -7.17631, 9.09006, -25.744, 0.88 ) }
    dend_41 { pt3dadd( -7.88692, 9.45284, -27.2722, 0.88 ) }
    dend_41 { pt3dadd( -8.7368, 9.85242, -28.811, 0.88 ) }
    dend_41 { pt3dadd( -9.33652, 10.1243, -29.7771, 0.73 ) }
    dend_41 { pt3dadd( -10.1178, 10.4271, -30.6416, 0.81 ) }
    dend_41 { pt3dadd( -10.758, 10.6455, -31.238, 0.81 ) }
    dend_41 { pt3dadd( -11.8865, 11.0123, -32.1419, 1.03 ) }
    dend_41 { pt3dadd( -13.0399, 11.39, -32.9877, 0.73 ) }
    dend_41 { pt3dadd( -13.8183, 11.6793, -33.5828, 0.73 ) }
    dend_41 { pt3dadd( -15.2855, 12.2909, -34.9146, 0.81 ) }
    // Section: dend_23, id: dend_23, parent: dend_15 (entry count 68/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 6.099, 6.92126, 13.0064, 0.95 ) }
    dend_23 { pt3dadd( 6.63228, 6.19059, 13.818, 0.95 ) }
    dend_23 { pt3dadd( 7.58832, 5.06443, 15.2834, 0.95 ) }
    dend_23 { pt3dadd( 7.86477, 4.73879, 15.7072, 0.95 ) }
    dend_23 { pt3dadd( 8.29456, 4.23252, 16.366, 0.81 ) }
    dend_23 { pt3dadd( 9.04797, 3.34505, 17.5208, 0.59 ) }
    dend_23 { pt3dadd( 9.66577, 2.61732, 18.4678, 0.88 ) }
    dend_23 { pt3dadd( 10.5965, 1.79531, 19.44, 1.32 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 76/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 6.099, 6.92126, 13.0064, 0.73 ) }
    dend_16 { pt3dadd( 5.62154, 7.92791, 13.1187, 0.73 ) }
    dend_16 { pt3dadd( 5.20258, 8.62132, 13.2354, 0.73 ) }
    dend_16 { pt3dadd( 4.82457, 9.07852, 13.3706, 0.73 ) }
    dend_16 { pt3dadd( 4.31442, 9.637, 13.525, 0.51 ) }
    dend_16 { pt3dadd( 3.78217, 10.2194, 13.6504, 0.51 ) }
    dend_16 { pt3dadd( 3.25118, 10.8171, 13.7087, 0.51 ) }
    dend_16 { pt3dadd( 2.63622, 11.4982, 13.6555, 0.51 ) }
    dend_16 { pt3dadd( 1.95139, 12.3769, 13.1327, 0.66 ) }
    dend_16 { pt3dadd( 1.62195, 12.8758, 12.5737, 0.66 ) }
    dend_16 { pt3dadd( 1.41259, 13.2308, 12.0859, 0.66 ) }
    dend_16 { pt3dadd( 1.08193, 13.8555, 11.2133, 0.66 ) }
    dend_16 { pt3dadd( 0.862684, 14.329, 10.5077, 0.66 ) }
    dend_16 { pt3dadd( 0.364201, 15.6416, 8.45801, 0.66 ) }
    dend_16 { pt3dadd( 0.109752, 16.4236, 7.17565, 0.51 ) }
    dend_16 { pt3dadd( 6.70254E-5, 16.7314, 6.65963, 0.51 ) }
    dend_16 { pt3dadd( -0.225633, 17.2946, 5.68638, 1.1 ) }
    // Section: dend_12, id: dend_12, parent: dend_0 (entry count 93/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.5938, -2.82711, -2.96522, 0.81 ) }
    dend_12 { pt3dadd( 14.9841, -1.92288, -4.25238, 0.81 ) }
    dend_12 { pt3dadd( 15.4599, -0.475134, -5.96971, 0.81 ) }
    dend_12 { pt3dadd( 15.783, 0.701375, -7.17861, 0.81 ) }
    dend_12 { pt3dadd( 15.9556, 1.38381, -7.80106, 0.59 ) }
    dend_12 { pt3dadd( 16.0732, 1.99864, -8.34994, 0.59 ) }
    dend_12 { pt3dadd( 16.1495, 2.55145, -8.84422, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_12 { pt3dadd( 16.1667, 3.57262, -9.62208, 0.59 ) }
    dend_12 { pt3dadd( 16.1001, 4.61698, -10.3279, 0.73 ) }
    dend_12 { pt3dadd( 16.0316, 5.18547, -10.7262, 0.88 ) }
    dend_12 { pt3dadd( 15.8255, 6.59587, -11.8462, 0.81 ) }
    dend_12 { pt3dadd( 15.701, 7.21181, -12.3619, 0.81 ) }
    dend_12 { pt3dadd( 15.436, 8.05593, -13.1428, 1.03 ) }
    dend_12 { pt3dadd( 15.2866, 8.38791, -13.5122, 1.03 ) }
    dend_12 { pt3dadd( 14.8245, 9.24171, -14.5565, 0.51 ) }
    dend_12 { pt3dadd( 14.4561, 9.87753, -15.3707, 0.81 ) }
    dend_12 { pt3dadd( 14.1842, 10.3357, -15.9694, 1.1 ) }
    dend_12 { pt3dadd( 13.3585, 11.6345, -17.7872, 1.1 ) }
    dend_12 { pt3dadd( 12.4618, 12.8717, -19.7442, 1.25 ) }
    dend_12 { pt3dadd( 12.1695, 13.2223, -20.3683, 1.4 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 13/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 14.5938, -2.82711, -2.96522, 1.25 ) }
    dend_1 { pt3dadd( 16.1766, -1.41599, -2.73652, 1.25 ) }
    dend_1 { pt3dadd( 16.7798, -0.832214, -2.68031, 1.1 ) }
    dend_1 { pt3dadd( 17.4804, -0.135372, -2.6324, 0.81 ) }
    dend_1 { pt3dadd( 18.3038, 0.70521, -2.58804, 1.1 ) }
    dend_1 { pt3dadd( 19.4427, 1.86783, -2.52667, 0.66 ) }
    dend_1 { pt3dadd( 20.4706, 2.91719, -2.47129, 0.73 ) }
    dend_1 { pt3dadd( 21.2397, 3.8637, -2.50476, 0.95 ) }
    dend_1 { pt3dadd( 21.7159, 4.50376, -2.52866, 1.47 ) }
    dend_1 { pt3dadd( 22.1602, 5.12527, -2.55424, 1.76 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 36.8735, 0.519738, 0.0, 0.22 ) }
    axon_1 { pt3dadd( 51.8732, 0.424127, 0.0, 0.22 ) }
    axon_1 { pt3dadd( 66.8729, 0.328517, 0.0, 0.22 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 26/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 10.2267, 26.8666, -19.8031, 0.51 ) }
    dend_56 { pt3dadd( 11.531, 26.3591, -20.0518, 0.51 ) }
    dend_56 { pt3dadd( 12.7076, 26.0212, -20.5308, 0.22 ) }
    dend_56 { pt3dadd( 13.8407, 25.7901, -21.1444, 0.22 ) }
    dend_56 { pt3dadd( 14.5274, 25.6939, -21.6313, 0.22 ) }
    dend_56 { pt3dadd( 15.805, 25.5149, -22.5371, 0.51 ) }
    dend_56 { pt3dadd( 17.1172, 25.3311, -23.4675, 0.73 ) }
    dend_56 { pt3dadd( 18.5157, 25.2104, -24.693, 0.37 ) }
    dend_56 { pt3dadd( 19.3878, 25.1956, -25.5925, 0.59 ) }
    dend_56 { pt3dadd( 20.7752, 25.3032, -27.1949, 0.66 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 36/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 10.2267, 26.8666, -19.8031, 0.59 ) }
    dend_53 { pt3dadd( 10.9236, 27.7551, -20.202, 0.59 ) }
    dend_53 { pt3dadd( 11.4657, 28.3426, -20.5935, 0.59 ) }
    dend_53 { pt3dadd( 11.9444, 28.8496, -21.0042, 0.73 ) }
    dend_53 { pt3dadd( 12.556, 29.484, -21.5879, 0.66 ) }
    dend_53 { pt3dadd( 12.9701, 29.915, -22.0665, 0.88 ) }
    dend_53 { pt3dadd( 13.6512, 30.6238, -22.8534, 0.51 ) }
    dend_53 { pt3dadd( 14.3485, 31.2547, -23.6896, 0.51 ) }
    dend_53 { pt3dadd( 14.8523, 31.6856, -24.3571, 0.81 ) }
    dend_53 { pt3dadd( 15.3946, 32.1627, -25.185, 1.69 ) }
    dend_53 { pt3dadd( 16.1359, 32.8904, -26.5246, 1.69 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 47/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -7.93108, 11.291, -23.8498, 0.73 ) }
    dend_48 { pt3dadd( -9.25045, 12.4524, -24.5134, 0.73 ) }
    dend_48 { pt3dadd( -10.4112, 13.4202, -25.0215, 0.59 ) }
    dend_48 { pt3dadd( -11.1156, 13.9601, -25.322, 0.59 ) }
    dend_48 { pt3dadd( -11.9643, 14.4997, -25.6403, 0.81 ) }
    dend_48 { pt3dadd( -13.0785, 15.208, -26.0582, 1.1 ) }
    dend_48 { pt3dadd( -13.8069, 15.6711, -26.3314, 0.88 ) }
    dend_48 { pt3dadd( -14.4518, 16.0379, -26.5367, 0.88 ) }
    dend_48 { pt3dadd( -15.3086, 16.44, -26.716, 0.51 ) }
    dend_48 { pt3dadd( -16.6912, 16.9371, -26.9625, 1.18 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 57/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -7.93108, 11.291, -23.8498, 0.73 ) }
    dend_47 { pt3dadd( -7.89195, 11.7118, -24.536, 0.73 ) }
    dend_47 { pt3dadd( -7.77241, 12.5595, -25.8874, 0.88 ) }
    dend_47 { pt3dadd( -7.65186, 13.5771, -27.3758, 0.88 ) }
    dend_47 { pt3dadd( -7.5717, 14.4981, -28.641, 1.03 ) }
    dend_47 { pt3dadd( -7.53019, 15.3922, -29.8132, 0.73 ) }
    dend_47 { pt3dadd( -7.51126, 16.2682, -30.9404, 0.37 ) }
    dend_47 { pt3dadd( -7.50138, 17.4227, -32.3679, 0.51 ) }
    dend_47 { pt3dadd( -7.50024, 18.089, -33.1678, 0.88 ) }
    dend_47 { pt3dadd( -7.49553, 19.2883, -34.5541, 0.51 ) }
    dend_47 { pt3dadd( -7.48244, 20.0748, -35.4463, 0.66 ) }
    dend_47 { pt3dadd( -7.43387, 20.8655, -36.3701, 0.66 ) }
    dend_47 { pt3dadd( -7.28573, 21.7012, -37.3672, 0.73 ) }
    dend_47 { pt3dadd( -7.0176, 22.7405, -38.643, 0.73 ) }
    dend_47 { pt3dadd( -6.8137, 23.2779, -39.3537, 0.73 ) }
    dend_47 { pt3dadd( -6.61781, 23.6349, -39.8354, 0.73 ) }
    dend_47 { pt3dadd( -6.04923, 24.4016, -40.89, 0.22 ) }
    dend_47 { pt3dadd( -5.2607, 25.2409, -42.0218, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 75/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -15.2855, 12.2909, -34.9146, 0.59 ) }
    dend_43 { pt3dadd( -15.8389, 12.6823, -35.5039, 0.59 ) }
    dend_43 { pt3dadd( -16.857, 13.4022, -36.5877, 0.59 ) }
    dend_43 { pt3dadd( -17.6487, 13.962, -37.4307, 0.59 ) }
    dend_43 { pt3dadd( -18.4949, 14.5604, -38.3316, 0.59 ) }
    dend_43 { pt3dadd( -19.5984, 15.3407, -39.5065, 0.73 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 81/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -15.2855, 12.2909, -34.9146, 0.44 ) }
    dend_42 { pt3dadd( -16.1202, 12.1621, -35.9909, 0.44 ) }
    dend_42 { pt3dadd( -16.7666, 12.0996, -37.1357, 0.88 ) }
    dend_42 { pt3dadd( -17.5602, 12.0548, -38.6665, 0.95 ) }
    dend_42 { pt3dadd( -18.4499, 11.9898, -40.4483, 1.18 ) }
    dend_42 { pt3dadd( -18.9046, 11.9431, -41.4104, 0.95 ) }
    dend_42 { pt3dadd( -19.4638, 11.8715, -42.6678, 0.66 ) }
    dend_42 { pt3dadd( -20.9136, 11.6866, -46.6657, 0.88 ) }
    dend_42 { pt3dadd( -21.2432, 11.6426, -47.8575, 0.88 ) }
    dend_42 { pt3dadd( -21.3397, 11.6329, -48.3933, 0.88 ) }
    dend_42 { pt3dadd( -21.4157, 11.6444, -49.1338, 0.88 ) }
    dend_42 { pt3dadd( -21.443, 11.6831, -49.6697, 0.88 ) }
    dend_42 { pt3dadd( -21.4466, 11.8958, -50.9353, 0.88 ) }
    dend_42 { pt3dadd( -21.3977, 12.1721, -51.7372, 0.88 ) }
    dend_42 { pt3dadd( -21.2265, 12.8218, -53.1588, 0.88 ) }
    dend_42 { pt3dadd( -21.043, 13.4772, -54.3217, 0.88 ) }
    dend_42 { pt3dadd( -20.8995, 13.9293, -54.9751, 0.88 ) }
    dend_42 { pt3dadd( -20.7118, 14.4386, -55.5957, 0.88 ) }
    dend_42 { pt3dadd( -20.2924, 15.3316, -56.4641, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_42 { pt3dadd( -19.3179, 16.9025, -57.7667, 0.37 ) }
    dend_42 { pt3dadd( -18.8224, 17.5296, -58.2015, 0.37 ) }
    dend_42 { pt3dadd( -17.9715, 18.4929, -58.7369, 0.37 ) }
    dend_42 { pt3dadd( -17.461, 19.0786, -58.977, 0.51 ) }
    dend_42 { pt3dadd( -16.5972, 20.1119, -59.2777, 0.22 ) }
    dend_42 { pt3dadd( -15.7505, 21.1806, -59.5143, 0.51 ) }
    dend_42 { pt3dadd( -15.1304, 21.9853, -59.6312, 0.66 ) }
    dend_42 { pt3dadd( -14.3778, 22.9945, -59.8139, 0.66 ) }
    dend_42 { pt3dadd( -13.1922, 24.6159, -60.1434, 0.51 ) }
    dend_42 { pt3dadd( -12.6767, 25.3142, -60.2954, 0.51 ) }
    dend_42 { pt3dadd( -11.9426, 26.2529, -60.5009, 0.73 ) }
    dend_42 { pt3dadd( -11.0486, 27.4103, -60.7506, 0.44 ) }
    dend_42 { pt3dadd( -10.4484, 28.1488, -60.9472, 0.44 ) }
    dend_42 { pt3dadd( -9.90892, 28.7038, -61.1491, 0.66 ) }
    dend_42 { pt3dadd( -9.11702, 29.3371, -61.442, 0.37 ) }
    dend_42 { pt3dadd( -8.25751, 29.9438, -61.7189, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_23 (entry count 16/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 10.5965, 1.79531, 19.44, 0.73 ) }
    dend_33 { pt3dadd( 10.5932, 0.862182, 20.5063, 0.73 ) }
    dend_33 { pt3dadd( 10.6115, 0.0633325, 21.4983, 0.66 ) }
    dend_33 { pt3dadd( 10.6431, -1.08613, 22.9781, 0.73 ) }
    dend_33 { pt3dadd( 10.6763, -2.29232, 24.5309, 1.32 ) }
    dend_33 { pt3dadd( 10.7082, -3.45561, 26.0284, 0.81 ) }
    dend_33 { pt3dadd( 10.7416, -4.66831, 27.5896, 0.88 ) }
    dend_33 { pt3dadd( 10.7692, -5.61836, 28.9127, 0.88 ) }
    dend_33 { pt3dadd( 10.7752, -6.38266, 30.078, 0.88 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 25/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 10.5965, 1.79531, 19.44, 1.03 ) }
    dend_24 { pt3dadd( 10.8613, 2.62318, 19.7801, 1.03 ) }
    dend_24 { pt3dadd( 11.1193, 3.43009, 20.1115, 1.03 ) }
    dend_24 { pt3dadd( 11.2555, 3.85579, 20.2864, 1.18 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 29/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.225633, 17.2946, 5.68638, 0.51 ) }
    dend_22 { pt3dadd( -1.03794, 17.7595, 5.03534, 0.51 ) }
    dend_22 { pt3dadd( -1.90445, 18.2885, 4.30766, 0.29 ) }
    dend_22 { pt3dadd( -2.47336, 18.6708, 3.81209, 0.29 ) }
    dend_22 { pt3dadd( -3.35648, 19.2883, 3.0086, 0.29 ) }
    dend_22 { pt3dadd( -4.09519, 19.8428, 2.27406, 0.44 ) }
    dend_22 { pt3dadd( -4.6339, 20.273, 1.73047, 0.59 ) }
    dend_22 { pt3dadd( -5.05794, 20.6418, 1.26344, 0.59 ) }
    dend_22 { pt3dadd( -5.74326, 21.258, 0.512763, 0.15 ) }
    dend_22 { pt3dadd( -6.56276, 21.9967, -0.275473, 0.15 ) }
    dend_22 { pt3dadd( -7.6185, 22.9312, -1.07348, 0.15 ) }
    dend_22 { pt3dadd( -8.16497, 23.4015, -1.40048, 0.29 ) }
    dend_22 { pt3dadd( -8.66726, 23.7983, -1.63678, 0.29 ) }
    dend_22 { pt3dadd( -9.12242, 24.0965, -1.80017, 0.22 ) }
    dend_22 { pt3dadd( -9.92852, 24.5094, -1.99535, 0.22 ) }
    dend_22 { pt3dadd( -11.3015, 25.0417, -2.19435, 0.22 ) }
    dend_22 { pt3dadd( -11.7729, 25.1894, -2.23433, 0.29 ) }
    dend_22 { pt3dadd( -12.5534, 25.3883, -2.30793, 0.22 ) }
    dend_22 { pt3dadd( -13.4946, 25.5865, -2.4082, 0.44 ) }
    dend_22 { pt3dadd( -14.6174, 25.7416, -2.54361, 0.15 ) }
    dend_22 { pt3dadd( -15.2807, 25.7513, -2.63717, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 50/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.225633, 17.2946, 5.68638, 0.66 ) }
    dend_17 { pt3dadd( -0.209195, 17.5799, 5.39819, 0.66 ) }
    dend_17 { pt3dadd( -0.303082, 18.1905, 4.73392, 0.51 ) }
    dend_17 { pt3dadd( -0.40804, 18.7863, 4.12176, 0.59 ) }
    dend_17 { pt3dadd( -0.510017, 19.5549, 3.36344, 0.66 ) }
    dend_17 { pt3dadd( -0.545196, 19.9839, 2.95741, 0.81 ) }
    dend_17 { pt3dadd( -0.554356, 21.0285, 2.00146, 0.66 ) }
    dend_17 { pt3dadd( -0.482297, 22.1769, 0.950216, 1.18 ) }
    dend_17 { pt3dadd( -0.377584, 23.0966, 0.146405, 0.66 ) }
    dend_17 { pt3dadd( -0.281376, 23.7254, -0.384794, 0.51 ) }
    dend_17 { pt3dadd( -0.199909, 24.1338, -0.721558, 0.66 ) }
    dend_17 { pt3dadd( 0.037429, 24.9391, -1.41345, 0.51 ) }
    dend_17 { pt3dadd( 0.315847, 25.6116, -1.95584, 0.51 ) }
    dend_17 { pt3dadd( 0.476146, 25.9283, -2.22515, 0.81 ) }
    dend_17 { pt3dadd( 0.702604, 26.3267, -2.58975, 0.81 ) }
    dend_17 { pt3dadd( 1.01239, 26.8435, -3.13076, 0.73 ) }
    dend_17 { pt3dadd( 1.42554, 27.5286, -3.95564, 0.59 ) }
    dend_17 { pt3dadd( 1.636, 27.8779, -4.41706, 0.44 ) }
    dend_17 { pt3dadd( 1.96243, 28.3835, -5.0645, 0.44 ) }
    dend_17 { pt3dadd( 2.36327, 28.9605, -5.82944, 1.1 ) }
    dend_17 { pt3dadd( 2.98217, 29.7919, -6.94399, 1.1 ) }
    dend_17 { pt3dadd( 3.47047, 30.4324, -7.81285, 1.1 ) }
    dend_17 { pt3dadd( 4.15228, 31.3641, -9.11476, 0.66 ) }
    dend_17 { pt3dadd( 4.5818, 31.9759, -10.024, 0.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 74/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 12.1695, 13.2223, -20.3683, 0.66 ) }
    dend_14 { pt3dadd( 12.5415, 13.032, -20.9767, 0.66 ) }
    dend_14 { pt3dadd( 13.0474, 12.8068, -21.9342, 0.66 ) }
    dend_14 { pt3dadd( 13.6276, 12.637, -23.216, 0.66 ) }
    dend_14 { pt3dadd( 14.0926, 12.5716, -24.308, 0.66 ) }
    dend_14 { pt3dadd( 14.6876, 12.5911, -25.7978, 0.81 ) }
    dend_14 { pt3dadd( 15.264, 12.7064, -27.4781, 0.95 ) }
    dend_14 { pt3dadd( 15.5708, 12.9043, -28.8347, 0.95 ) }
    dend_14 { pt3dadd( 15.8895, 13.4187, -31.1649, 0.95 ) }
    dend_14 { pt3dadd( 15.9687, 13.7326, -32.2944, 0.73 ) }
    dend_14 { pt3dadd( 16.0114, 14.1522, -33.604, 0.73 ) }
    dend_14 { pt3dadd( 16.0296, 14.7738, -35.2936, 0.95 ) }
    dend_14 { pt3dadd( 15.9637, 15.8252, -38.0207, 0.73 ) }
    dend_14 { pt3dadd( 15.8753, 16.2651, -39.1705, 1.18 ) }
    dend_14 { pt3dadd( 15.6938, 16.7216, -40.4465, 1.18 ) }
    dend_14 { pt3dadd( 15.4326, 17.1173, -41.7662, 1.18 ) }
    dend_14 { pt3dadd( 15.2678, 17.2823, -42.4126, 1.18 ) }
    dend_14 { pt3dadd( 14.7291, 17.5834, -44.0267, 0.95 ) }
    dend_14 { pt3dadd( 13.8762, 17.7562, -45.8652, 0.73 ) }
    dend_14 { pt3dadd( 12.9461, 17.7331, -47.4693, 0.88 ) }
    dend_14 { pt3dadd( 11.5723, 17.5234, -49.5145, 0.88 ) }
    dend_14 { pt3dadd( 10.9186, 17.3259, -50.4957, 0.66 ) }
    dend_14 { pt3dadd( 9.93431, 16.8316, -52.1456, 0.81 ) }
    dend_14 { pt3dadd( 9.44981, 16.4465, -53.1252, 0.81 ) }
    dend_14 { pt3dadd( 8.933, 15.7563, -54.5173, 0.95 ) }
    dend_14 { pt3dadd( 8.43108, 14.7198, -56.2954, 1.1 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_14 { pt3dadd( 7.95421, 13.2997, -58.4582, 1.18 ) }
    dend_14 { pt3dadd( 7.69469, 12.1562, -60.0501, 0.66 ) }
    dend_14 { pt3dadd( 7.53279, 10.8513, -61.6147, 0.66 ) }
    dend_14 { pt3dadd( 7.47887, 9.97367, -62.4887, 1.1 ) }
    dend_14 { pt3dadd( 7.4415, 8.54144, -63.5615, 0.29 ) }
    dend_14 { pt3dadd( 7.42982, 7.53119, -64.0935, 0.51 ) }
    dend_14 { pt3dadd( 7.42202, 6.24567, -64.5401, 0.66 ) }
    dend_14 { pt3dadd( 7.47462, 5.10895, -64.8044, 0.07 ) }
    dend_14 { pt3dadd( 7.5187, 4.42225, -64.9126, 0.29 ) }
    dend_14 { pt3dadd( 7.63362, 3.35865, -65.0564, 0.07 ) }
    dend_14 { pt3dadd( 7.82154, 2.48417, -65.1488, 1.25 ) }
    dend_14 { pt3dadd( 8.32477, 0.791413, -65.366, 0.15 ) }
    dend_14 { pt3dadd( 8.83155, -0.599426, -65.5906, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 13/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 12.1695, 13.2223, -20.3683, 0.66 ) }
    dend_13 { pt3dadd( 11.5035, 13.3316, -21.3495, 0.66 ) }
    dend_13 { pt3dadd( 10.4466, 13.6721, -23.0136, 0.66 ) }
    dend_13 { pt3dadd( 10.0861, 13.8869, -23.7027, 0.51 ) }
    dend_13 { pt3dadd( 9.73577, 14.1348, -24.4476, 0.37 ) }
    dend_13 { pt3dadd( 9.29996, 14.4587, -25.4771, 0.37 ) }
    dend_13 { pt3dadd( 9.05204, 14.6363, -26.1012, 0.37 ) }
    dend_13 { pt3dadd( 8.62986, 14.9404, -27.2311, 0.44 ) }
    dend_13 { pt3dadd( 7.81155, 15.5539, -29.4896, 0.51 ) }
    dend_13 { pt3dadd( 6.96948, 16.1605, -31.7611, 0.81 ) }
    dend_13 { pt3dadd( 6.1575, 16.6766, -33.8561, 0.81 ) }
    dend_13 { pt3dadd( 5.5035, 16.9989, -35.4847, 0.59 ) }
    dend_13 { pt3dadd( 4.93846, 17.179, -36.8995, 0.59 ) }
    dend_13 { pt3dadd( 4.5808, 17.2294, -37.7856, 0.59 ) }
    dend_13 { pt3dadd( 4.34343, 17.2376, -38.3843, 0.59 ) }
    dend_13 { pt3dadd( 4.16251, 17.2457, -38.8767, 0.59 ) }
    dend_13 { pt3dadd( 3.74536, 17.291, -40.0595, 0.59 ) }
    dend_13 { pt3dadd( 2.88286, 17.4332, -42.5506, 0.59 ) }
    dend_13 { pt3dadd( 2.12604, 17.6014, -44.7364, 0.59 ) }
    dend_13 { pt3dadd( 1.46814, 17.8081, -46.586, 0.59 ) }
    dend_13 { pt3dadd( 0.737328, 18.1314, -48.5891, 0.59 ) }
    dend_13 { pt3dadd( 0.316945, 18.3861, -49.716, 0.88 ) }
    dend_13 { pt3dadd( 0.108687, 18.5442, -50.246, 0.88 ) }
    dend_13 { pt3dadd( -0.438807, 19.0012, -51.4568, 0.59 ) }
    dend_13 { pt3dadd( -0.858344, 19.3737, -52.3459, 0.59 ) }
    dend_13 { pt3dadd( -1.70696, 20.1419, -54.0957, 0.59 ) }
    dend_13 { pt3dadd( -2.80738, 21.1913, -56.3716, 0.59 ) }
    dend_13 { pt3dadd( -3.26697, 21.6567, -57.3793, 0.59 ) }
    dend_13 { pt3dadd( -3.83458, 22.2898, -58.757, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 22.1602, 5.12527, -2.55424, 0.88 ) }
    dend_3 { pt3dadd( 23.5433, 5.08702, -2.13807, 0.88 ) }
    dend_3 { pt3dadd( 24.8258, 5.03195, -1.80208, 0.88 ) }
    dend_3 { pt3dadd( 25.5367, 5.00142, -1.61584, 0.88 ) }
    dend_3 { pt3dadd( 26.6757, 4.95251, -1.31746, 1.4 ) }
    dend_3 { pt3dadd( 27.8443, 4.90233, -1.01132, 1.18 ) }
    dend_3 { pt3dadd( 29.1575, 4.84594, -0.667309, 1.32 ) }
    dend_3 { pt3dadd( 29.6784, 4.78456, -0.587917, 1.54 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 50/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 22.1602, 5.12527, -2.55424, 0.73 ) }
    dend_2 { pt3dadd( 22.1581, 6.20923, -2.07985, 0.73 ) }
    dend_2 { pt3dadd( 22.2176, 7.12694, -1.54342, 0.73 ) }
    dend_2 { pt3dadd( 22.3463, 7.9381, -1.04983, 0.73 ) }
    dend_2 { pt3dadd( 22.5062, 8.69566, -0.607553, 1.1 ) }
    dend_2 { pt3dadd( 22.7053, 9.57903, -0.140636, 1.1 ) }
    dend_2 { pt3dadd( 22.8583, 10.3173, 0.229679, 0.81 ) }
    dend_2 { pt3dadd( 23.0469, 11.2656, 0.687056, 0.59 ) }
    dend_2 { pt3dadd( 23.1711, 12.0446, 1.00747, 0.44 ) }
    dend_2 { pt3dadd( 23.2491, 12.8621, 1.21328, 0.59 ) }
    dend_2 { pt3dadd( 23.2996, 13.8313, 1.29473, 0.66 ) }
    dend_2 { pt3dadd( 23.3085, 14.7156, 1.27253, 0.66 ) }
    dend_2 { pt3dadd( 23.2401, 16.035, 1.15191, 0.66 ) }
    dend_2 { pt3dadd( 23.1254, 16.8722, 1.04635, 0.73 ) }
    dend_2 { pt3dadd( 22.8967, 18.0608, 0.891837, 1.03 ) }
    dend_2 { pt3dadd( 22.5754, 19.5867, 0.696454, 0.29 ) }
    dend_2 { pt3dadd( 22.3956, 20.3749, 0.642557, 0.29 ) }
    dend_2 { pt3dadd( 22.2423, 21.0016, 0.638375, 0.29 ) }
    dend_2 { pt3dadd( 21.9409, 22.0582, 0.707467, 0.66 ) }
    dend_2 { pt3dadd( 21.7685, 22.5505, 0.754264, 0.22 ) }
    dend_2 { pt3dadd( 21.264, 23.7257, 0.890345, 0.73 ) }
    dend_2 { pt3dadd( 20.6269, 25.0877, 1.06649, 0.29 ) }
    dend_2 { pt3dadd( 20.1933, 26.0624, 1.1769, 1.1 ) }
    dend_2 { pt3dadd( 19.7491, 27.2303, 1.26917, 0.37 ) }
    dend_2 { pt3dadd( 19.3795, 28.4117, 1.30002, 0.66 ) }
    dend_2 { pt3dadd( 18.9007, 30.2697, 1.26224, 0.81 ) }
    dend_2 { pt3dadd( 18.7542, 31.1108, 1.17022, 0.44 ) }
    dend_2 { pt3dadd( 18.7105, 31.861, 1.01499, 0.44 ) }
    dend_2 { pt3dadd( 18.8417, 33.1966, 0.598853, 0.51 ) }
    dend_2 { pt3dadd( 19.0713, 34.0976, 0.23687, 0.51 ) }
    dend_2 { pt3dadd( 19.2421, 34.5561, 0.00613194, 0.37 ) }
    dend_2 { pt3dadd( 19.6203, 35.4542, -0.52687, 0.37 ) }
    dend_2 { pt3dadd( 19.7483, 35.8158, -0.762065, 0.37 ) }
    dend_2 { pt3dadd( 20.1427, 37.2443, -1.75093, 0.22 ) }
    dend_2 { pt3dadd( 20.2717, 37.8042, -2.13614, 0.22 ) }
    dend_2 { pt3dadd( 20.4635, 38.659, -2.69971, 0.29 ) }
    dend_2 { pt3dadd( 20.6681, 39.4916, -3.20525, 0.29 ) }
    dend_2 { pt3dadd( 20.9251, 40.3412, -3.65217, 0.29 ) }
    dend_2 { pt3dadd( 21.3392, 41.4905, -4.17147, 0.29 ) }
    dend_2 { pt3dadd( 21.6586, 42.3275, -4.49905, 0.29 ) }
    dend_2 { pt3dadd( 21.8893, 42.8656, -4.69944, 0.51 ) }
    dend_2 { pt3dadd( 22.3942, 43.8475, -5.0047, 0.22 ) }
    dend_2 { pt3dadd( 22.9142, 44.6816, -5.19852, 0.29 ) }
    dend_2 { pt3dadd( 23.4708, 45.464, -5.30044, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 94/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 20.7752, 25.3032, -27.1949, 0.95 ) }
    dend_58 { pt3dadd( 21.4808, 25.4136, -28.0135, 0.95 ) }
    dend_58 { pt3dadd( 22.3522, 25.5413, -28.9045, 0.66 ) }
    dend_58 { pt3dadd( 22.8824, 25.6263, -29.4391, 0.66 ) }
    dend_58 { pt3dadd( 24.0163, 25.8289, -30.5404, 0.37 ) }
    dend_58 { pt3dadd( 25.564, 26.1739, -32.1353, 0.73 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_58 { pt3dadd( 26.4874, 26.4027, -33.0752, 0.59 ) }
    dend_58 { pt3dadd( 27.2276, 26.5863, -33.8118, 0.88 ) }
    dend_58 { pt3dadd( 28.4418, 26.9209, -34.9695, 0.07 ) }
    dend_58 { pt3dadd( 29.1377, 27.1358, -35.6298, 0.73 ) }
    dend_58 { pt3dadd( 30.5939, 27.6855, -37.0328, 0.15 ) }
    dend_58 { pt3dadd( 31.341, 28.0367, -37.7587, 0.73 ) }
    dend_58 { pt3dadd( 32.0404, 28.4044, -38.4913, 0.15 ) }
    dend_58 { pt3dadd( 32.6539, 28.7448, -39.1892, 0.44 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 8/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 20.7752, 25.3032, -27.1949, 0.07 ) }
    dend_57 { pt3dadd( 21.5044, 24.5673, -27.2669, 0.07 ) }
    dend_57 { pt3dadd( 21.9623, 24.1401, -27.3018, 0.29 ) }
    dend_57 { pt3dadd( 22.5467, 23.6133, -27.3342, 0.07 ) }
    dend_57 { pt3dadd( 23.0565, 23.1538, -27.3624, 0.37 ) }
    dend_57 { pt3dadd( 23.4564, 22.7932, -27.3846, 0.07 ) }
    dend_57 { pt3dadd( 23.9288, 22.3673, -27.4108, 0.07 ) }
    dend_57 { pt3dadd( 24.3975, 21.9655, -27.4108, 0.07 ) }
    dend_57 { pt3dadd( 25.3431, 21.2046, -27.4108, 0.44 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 17/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 16.1359, 32.8904, -26.5246, 0.59 ) }
    dend_55 { pt3dadd( 16.9312, 33.6767, -26.948, 0.59 ) }
    dend_55 { pt3dadd( 18.0098, 34.7795, -27.4403, 0.51 ) }
    dend_55 { pt3dadd( 18.3488, 35.1764, -27.6045, 0.51 ) }
    dend_55 { pt3dadd( 18.7771, 35.7521, -27.8908, 0.51 ) }
    dend_55 { pt3dadd( 19.0403, 36.1253, -28.1748, 0.51 ) }
    dend_55 { pt3dadd( 19.4036, 36.6167, -28.6139, 0.51 ) }
    dend_55 { pt3dadd( 19.7945, 37.1511, -29.1483, 0.51 ) }
    dend_55 { pt3dadd( 20.2363, 37.7238, -29.7498, 0.81 ) }
    dend_55 { pt3dadd( 20.9931, 38.6198, -30.6401, 0.81 ) }
    dend_55 { pt3dadd( 22.1464, 39.8895, -31.8337, 0.44 ) }
    dend_55 { pt3dadd( 22.9299, 40.6603, -32.5179, 0.44 ) }
    dend_55 { pt3dadd( 24.0096, 41.5663, -33.1901, 0.44 ) }
    dend_55 { pt3dadd( 24.4757, 41.8979, -33.3875, 0.29 ) }
    dend_55 { pt3dadd( 25.4702, 42.5083, -33.5931, 0.07 ) }
    dend_55 { pt3dadd( 25.8967, 42.7548, -33.6218, 0.07 ) }
    dend_55 { pt3dadd( 26.5606, 43.1361, -33.6062, 0.44 ) }
    dend_55 { pt3dadd( 27.9636, 43.9311, -33.6971, 0.73 ) }
    dend_55 { pt3dadd( 28.8006, 44.3794, -33.76, 0.59 ) }
    dend_55 { pt3dadd( 29.9949, 45.0119, -33.8941, 0.37 ) }
    dend_55 { pt3dadd( 30.8733, 45.4847, -34.069, 0.37 ) }
    dend_55 { pt3dadd( 31.4323, 45.8122, -34.2269, 0.73 ) }
    dend_55 { pt3dadd( 32.9791, 46.8647, -34.9375, 0.37 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 16.1359, 32.8904, -26.5246, 0.73 ) }
    dend_54 { pt3dadd( 15.7554, 33.5816, -27.3735, 0.73 ) }
    dend_54 { pt3dadd( 15.2086, 34.6725, -28.6067, 0.73 ) }
    dend_54 { pt3dadd( 14.7138, 35.6623, -29.6551, 0.73 ) }
    dend_54 { pt3dadd( 14.1094, 36.7458, -30.7961, 0.81 ) }
    dend_54 { pt3dadd( 13.7618, 37.301, -31.4045, 0.95 ) }
    dend_54 { pt3dadd( 13.0299, 38.3417, -32.6602, 0.51 ) }
    dend_54 { pt3dadd( 12.6942, 38.7579, -33.2258, 0.51 ) }
    dend_54 { pt3dadd( 12.4132, 39.0423, -33.6695, 0.51 ) }
    dend_54 { pt3dadd( 11.8171, 39.5034, -34.5116, 0.51 ) }
    dend_54 { pt3dadd( 11.2713, 39.8433, -35.2585, 0.51 ) }
    dend_54 { pt3dadd( 10.5926, 40.2302, -36.25, 0.88 ) }
    dend_54 { pt3dadd( 9.95563, 40.6372, -37.3408, 0.95 ) }
    dend_54 { pt3dadd( 9.47595, 41.0627, -38.2932, 0.66 ) }
    dend_54 { pt3dadd( 9.26074, 41.3497, -38.8049, 0.66 ) }
    dend_54 { pt3dadd( 9.06126, 41.7098, -39.3067, 0.66 ) }
    dend_54 { pt3dadd( 8.6705, 42.4415, -40.1776, 0.66 ) }
    dend_54 { pt3dadd( 8.19727, 43.239, -41.0856, 0.66 ) }
    dend_54 { pt3dadd( 7.7732, 43.8268, -41.833, 0.81 ) }
    dend_54 { pt3dadd( 7.12002, 44.5768, -42.9643, 0.51 ) }
    dend_54 { pt3dadd( 6.75207, 44.9458, -43.6518, 0.37 ) }
    dend_54 { pt3dadd( 6.29074, 45.3401, -44.5384, 0.37 ) }
    dend_54 { pt3dadd( 5.5538, 45.8527, -45.9037, 0.37 ) }
    dend_54 { pt3dadd( 4.97323, 46.2105, -47.0044, 0.51 ) }
    dend_54 { pt3dadd( 4.45062, 46.5473, -48.1609, 0.66 ) }
    dend_54 { pt3dadd( 3.92594, 46.9816, -49.5884, 0.73 ) }
    dend_54 { pt3dadd( 3.69318, 47.2853, -50.4832, 0.73 ) }
    dend_54 { pt3dadd( 3.58127, 47.5859, -51.2256, 0.73 ) }
    dend_54 { pt3dadd( 3.56541, 47.8926, -51.8922, 0.73 ) }
    dend_54 { pt3dadd( 3.72424, 48.533, -53.2526, 0.51 ) }
    dend_54 { pt3dadd( 4.07375, 49.2629, -54.7056, 0.66 ) }
    dend_54 { pt3dadd( 4.40367, 49.7792, -55.5774, 0.37 ) }
    dend_54 { pt3dadd( 4.7545, 50.2369, -56.2286, 0.37 ) }
    dend_54 { pt3dadd( 5.23545, 50.8328, -56.892, 0.37 ) }
    dend_54 { pt3dadd( 5.95719, 51.8357, -57.6281, 0.51 ) }
    dend_54 { pt3dadd( 6.54281, 53.0104, -58.0359, 0.51 ) }
    dend_54 { pt3dadd( 6.68721, 54.1628, -58.1748, 1.03 ) }
    dend_54 { pt3dadd( 6.56476, 54.8377, -58.1022, 1.03 ) }
    dend_54 { pt3dadd( 6.23224, 55.7432, -57.9227, 0.29 ) }
    dend_54 { pt3dadd( 5.91806, 56.4762, -57.7473, 0.59 ) }
    dend_54 { pt3dadd( 5.48932, 57.3496, -57.5143, 0.22 ) }
    dend_54 { pt3dadd( 4.88286, 58.3995, -57.3309, 0.59 ) }
    dend_54 { pt3dadd( 3.52509, 60.333, -56.9499, 0.73 ) }
    dend_54 { pt3dadd( 2.96762, 61.0107, -56.7445, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 84/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -16.6912, 16.9371, -26.9625, 0.37 ) }
    dend_50 { pt3dadd( -17.2935, 17.2014, -27.9434, 0.37 ) }
    dend_50 { pt3dadd( -18.6387, 17.4415, -30.1917, 0.66 ) }
    dend_50 { pt3dadd( -19.1371, 17.4801, -31.0249, 1.03 ) }
    dend_50 { pt3dadd( -19.3932, 17.4879, -31.4303, 1.03 ) }
    dend_50 { pt3dadd( -20.5975, 17.5148, -33.2621, 0.81 ) }
    dend_50 { pt3dadd( -21.0224, 17.5238, -33.8937, 0.95 ) }
    dend_50 { pt3dadd( -23.5939, 17.4812, -37.5079, 0.59 ) }
    dend_50 { pt3dadd( -24.2133, 17.4577, -38.2926, 0.59 ) }
    dend_50 { pt3dadd( -24.716, 17.4515, -38.9424, 0.59 ) }
    dend_50 { pt3dadd( -25.6372, 17.4797, -40.1885, 0.59 ) }
    dend_50 { pt3dadd( -26.4334, 17.5428, -41.2367, 0.59 ) }
    dend_50 { pt3dadd( -27.2075, 17.6477, -42.2256, 0.29 ) }
    dend_50 { pt3dadd( -28.5682, 17.9141, -43.8344, 1.32 ) }
    dend_50 { pt3dadd( -30.8153, 18.4064, -46.5258, 0.37 ) }
    dend_50 { pt3dadd( -32.186, 18.7029, -48.1955, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( -32.965, 18.8584, -49.1742, 0.81 ) }
    dend_50 { pt3dadd( -33.7406, 19.0063, -50.1533, 0.44 ) }
    dend_50 { pt3dadd( -34.0191, 19.061, -50.5055, 0.73 ) }
    dend_50 { pt3dadd( -35.1238, 19.2649, -51.8145, 0.29 ) }
    dend_50 { pt3dadd( -36.2251, 19.4464, -53.0089, 0.66 ) }
    dend_50 { pt3dadd( -37.9984, 19.7264, -54.9166, 0.66 ) }
    dend_50 { pt3dadd( -38.4365, 19.7948, -55.4122, 0.59 ) }
    dend_50 { pt3dadd( -38.8879, 19.8522, -55.9169, 0.22 ) }
    dend_50 { pt3dadd( -39.5633, 19.9251, -56.6057, 0.22 ) }
    dend_50 { pt3dadd( -40.3451, 19.9713, -57.3208, 0.59 ) }
    dend_50 { pt3dadd( -40.7833, 19.975, -57.692, 0.59 ) }
    dend_50 { pt3dadd( -41.662, 19.9391, -58.3168, 0.59 ) }
    dend_50 { pt3dadd( -42.7327, 19.8536, -59.0726, 0.81 ) }
    dend_50 { pt3dadd( -43.46, 19.777, -59.5817, 0.81 ) }
    dend_50 { pt3dadd( -45.0679, 19.6294, -60.5819, 0.22 ) }
    dend_50 { pt3dadd( -46.3038, 19.5318, -61.254, 0.51 ) }
    dend_50 { pt3dadd( -47.7852, 19.4397, -61.9463, 0.51 ) }
    dend_50 { pt3dadd( -49.0711, 19.3852, -62.4409, 0.51 ) }
    dend_50 { pt3dadd( -50.2534, 19.3687, -62.7824, 0.51 ) }
    dend_50 { pt3dadd( -51.9014, 19.3953, -63.1231, 0.73 ) }
    dend_50 { pt3dadd( -53.465, 19.4662, -63.2819, 0.59 ) }
    dend_50 { pt3dadd( -54.8086, 19.511, -63.2991, 0.59 ) }
    dend_50 { pt3dadd( -55.6061, 19.4889, -63.2366, 0.59 ) }
    dend_50 { pt3dadd( -56.7932, 19.3438, -62.9859, 0.59 ) }
    dend_50 { pt3dadd( -57.6843, 19.1519, -62.6854, 0.59 ) }
    dend_50 { pt3dadd( -58.7423, 18.8157, -62.2431, 0.51 ) }
    dend_50 { pt3dadd( -60.4535, 18.1701, -61.3662, 1.1 ) }
    dend_50 { pt3dadd( -62.0243, 17.4946, -60.6577, 0.37 ) }
    dend_50 { pt3dadd( -63.9893, 16.5581, -60.0004, 0.66 ) }
    dend_50 { pt3dadd( -65.13, 15.9673, -59.8063, 0.66 ) }
    dend_50 { pt3dadd( -66.1006, 15.4405, -59.7891, 0.66 ) }
    dend_50 { pt3dadd( -67.581, 14.6654, -60.0763, 0.66 ) }
    dend_50 { pt3dadd( -70.9002, 13.0309, -61.6107, 0.51 ) }
    dend_50 { pt3dadd( -72.1143, 12.5042, -62.5369, 0.44 ) }
    dend_50 { pt3dadd( -72.8845, 12.1931, -63.3451, 0.44 ) }
    dend_50 { pt3dadd( -73.0224, 12.1371, -63.5189, 0.44 ) }
    dend_50 { pt3dadd( -73.4291, 11.9659, -64.1456, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 37/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -16.6912, 16.9371, -26.9625, 0.44 ) }
    dend_49 { pt3dadd( -17.2845, 16.2373, -26.4605, 0.44 ) }
    dend_49 { pt3dadd( -17.9071, 15.3676, -25.7753, 0.73 ) }
    dend_49 { pt3dadd( -18.2191, 14.8279, -25.3811, 0.51 ) }
    dend_49 { pt3dadd( -18.7131, 13.9187, -24.8087, 0.51 ) }
    dend_49 { pt3dadd( -19.1311, 13.1163, -24.3924, 0.51 ) }
    dend_49 { pt3dadd( -19.7656, 11.8527, -23.904, 0.73 ) }
    dend_49 { pt3dadd( -20.2534, 10.7943, -23.6844, 1.03 ) }
    dend_49 { pt3dadd( -20.7777, 9.697, -23.6752, 0.37 ) }
    dend_49 { pt3dadd( -21.6201, 8.09015, -23.9367, 0.07 ) }
    dend_49 { pt3dadd( -22.2052, 7.13306, -24.2372, 0.73 ) }
    dend_49 { pt3dadd( -23.121, 5.92189, -24.7631, 0.73 ) }
    dend_49 { pt3dadd( -24.0887, 4.77605, -25.4359, 0.51 ) }
    dend_49 { pt3dadd( -24.6923, 4.13786, -25.899, 0.37 ) }
    dend_49 { pt3dadd( -25.0366, 3.83352, -26.1623, 0.37 ) }
    dend_49 { pt3dadd( -25.9073, 3.17363, -26.8343, 0.22 ) }
    dend_49 { pt3dadd( -26.8139, 2.63072, -27.3132, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 54/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -19.5984, 15.3407, -39.5065, 0.73 ) }
    dend_45 { pt3dadd( -20.3623, 15.8466, -40.6253, 0.73 ) }
    dend_45 { pt3dadd( -21.202, 16.3849, -41.7334, 0.51 ) }
    dend_45 { pt3dadd( -21.9107, 16.8522, -42.6521, 0.37 ) }
    dend_45 { pt3dadd( -23.752, 18.08, -45.0096, 0.37 ) }
    dend_45 { pt3dadd( -24.2429, 18.402, -45.606, 0.37 ) }
    dend_45 { pt3dadd( -25.2748, 19.0672, -46.7566, 0.73 ) }
    dend_45 { pt3dadd( -26.7598, 19.9798, -48.2391, 0.37 ) }
    dend_45 { pt3dadd( -27.8216, 20.6396, -49.2966, 0.37 ) }
    dend_45 { pt3dadd( -28.6122, 21.1832, -50.1345, 0.37 ) }
    dend_45 { pt3dadd( -29.203, 21.676, -50.855, 0.59 ) }
    dend_45 { pt3dadd( -29.827, 22.271, -51.8336, 0.59 ) }
    dend_45 { pt3dadd( -30.5742, 23.056, -53.2227, 0.73 ) }
    dend_45 { pt3dadd( -31.3577, 23.9349, -54.9358, 0.81 ) }
    dend_45 { pt3dadd( -31.8393, 24.5403, -56.3587, 1.18 ) }
    dend_45 { pt3dadd( -32.1689, 25.0673, -58.0005, 0.66 ) }
    dend_45 { pt3dadd( -32.3688, 25.505, -60.0949, 0.66 ) }
    dend_45 { pt3dadd( -32.3922, 25.5826, -60.6971, 0.66 ) }
    dend_45 { pt3dadd( -32.4092, 25.6779, -62.6103, 0.51 ) }
    dend_45 { pt3dadd( -32.4218, 25.6401, -64.7485, 0.51 ) }
    dend_45 { pt3dadd( -32.4939, 25.5037, -67.1543, 0.51 ) }
    dend_45 { pt3dadd( -32.5415, 25.3131, -69.2602, 0.51 ) }
    dend_45 { pt3dadd( -32.5515, 25.2635, -69.7185, 0.51 ) }
    dend_45 { pt3dadd( -32.6015, 25.0567, -71.6512, 0.51 ) }
    dend_45 { pt3dadd( -32.784, 24.8364, -74.108, 0.51 ) }
    dend_45 { pt3dadd( -33.2162, 24.6742, -76.5239, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -19.5984, 15.3407, -39.5065, 0.81 ) }
    dend_44 { pt3dadd( -20.299, 15.4716, -39.6537, 0.81 ) }
    dend_44 { pt3dadd( -21.277, 15.5047, -39.5721, 0.81 ) }
    dend_44 { pt3dadd( -22.1815, 15.342, -39.2795, 0.81 ) }
    dend_44 { pt3dadd( -23.262, 14.9146, -38.6407, 0.15 ) }
    dend_44 { pt3dadd( -23.7171, 14.6727, -38.2575, 0.15 ) }
    dend_44 { pt3dadd( -24.8334, 14.0484, -37.14, 0.81 ) }
    dend_44 { pt3dadd( -26.7337, 12.7182, -34.4319, 0.37 ) }
    dend_44 { pt3dadd( -27.1929, 12.3239, -33.5649, 1.18 ) }
    dend_44 { pt3dadd( -27.8271, 11.6508, -32.0432, 0.22 ) }
    dend_44 { pt3dadd( -28.2445, 11.1218, -30.7493, 0.73 ) }
    dend_44 { pt3dadd( -28.5442, 10.7099, -29.6584, 0.95 ) }
    dend_44 { pt3dadd( -29.1181, 9.91658, -27.3011, 0.51 ) }
    dend_44 { pt3dadd( -29.3769, 9.54058, -26.1961, 0.66 ) }
    dend_44 { pt3dadd( -29.4975, 9.34511, -25.5482, 0.66 ) }
    dend_44 { pt3dadd( -29.6748, 9.00941, -24.3826, 0.37 ) }
    dend_44 { pt3dadd( -29.8345, 8.6053, -23.1445, 0.15 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 97/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 10.7752, -6.38266, 30.078, 0.59 ) }
    dend_35 { pt3dadd( 10.2992, -6.44022, 30.7853, 0.59 ) }
    dend_35 { pt3dadd( 9.43655, -6.5445, 32.067, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( 8.71592, -6.63162, 33.1377, 1.25 ) }
    dend_35 { pt3dadd( 7.71968, -6.75206, 34.6179, 1.25 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 2/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 10.7752, -6.38266, 30.078, 0.44 ) }
    dend_34 { pt3dadd( 11.2349, -6.4345, 31.1772, 0.44 ) }
    dend_34 { pt3dadd( 11.6671, -6.69279, 32.6492, 0.66 ) }
    dend_34 { pt3dadd( 11.8792, -6.98391, 33.6702, 0.81 ) }
    dend_34 { pt3dadd( 11.9916, -7.29902, 34.3985, 0.81 ) }
    dend_34 { pt3dadd( 12.0823, -7.59316, 34.952, 0.81 ) }
    dend_34 { pt3dadd( 12.2235, -7.97969, 35.6316, 0.81 ) }
    dend_34 { pt3dadd( 12.4759, -8.75802, 36.7605, 0.88 ) }
    dend_34 { pt3dadd( 12.6264, -9.21771, 37.3762, 0.88 ) }
    dend_34 { pt3dadd( 12.8644, -9.95206, 38.3904, 0.66 ) }
    dend_34 { pt3dadd( 13.1677, -10.8486, 39.7402, 0.73 ) }
    dend_34 { pt3dadd( 13.3338, -11.4322, 40.6437, 0.51 ) }
    dend_34 { pt3dadd( 13.4331, -11.9852, 41.5088, 0.44 ) }
    dend_34 { pt3dadd( 13.4719, -12.8508, 42.9772, 0.66 ) }
    dend_34 { pt3dadd( 13.4253, -13.4832, 44.1272, 0.66 ) }
    dend_34 { pt3dadd( 13.2942, -14.2359, 45.5634, 1.4 ) }
    dend_34 { pt3dadd( 13.114, -14.9278, 46.8981, 0.51 ) }
    dend_34 { pt3dadd( 12.96, -15.5591, 48.1006, 0.66 ) }
    dend_34 { pt3dadd( 12.8415, -16.3442, 49.6029, 0.73 ) }
    dend_34 { pt3dadd( 12.8388, -16.7654, 50.3606, 0.73 ) }
    dend_34 { pt3dadd( 12.8889, -17.1181, 50.9556, 0.88 ) }
    dend_34 { pt3dadd( 13.2334, -18.426, 52.9687, 0.66 ) }
    dend_34 { pt3dadd( 13.5865, -19.3381, 54.2737, 0.44 ) }
    dend_34 { pt3dadd( 13.9487, -20.1469, 55.2037, 0.59 ) }
    dend_34 { pt3dadd( 14.214, -20.7258, 55.6459, 0.59 ) }
    dend_34 { pt3dadd( 14.4564, -21.2503, 55.8729, 0.59 ) }
    dend_34 { pt3dadd( 14.8543, -22.0274, 55.9107, 0.59 ) }
    dend_34 { pt3dadd( 15.2065, -22.5898, 55.7537, 0.59 ) }
    dend_34 { pt3dadd( 15.7133, -23.2684, 55.4519, 0.22 ) }
    dend_34 { pt3dadd( 16.5617, -24.2389, 54.9546, 0.73 ) }
    dend_34 { pt3dadd( 17.4604, -25.1295, 54.5189, 0.22 ) }
    dend_34 { pt3dadd( 18.5588, -26.0975, 54.0264, 0.66 ) }
    dend_34 { pt3dadd( 19.064, -26.4942, 53.775, 0.66 ) }
    dend_34 { pt3dadd( 19.6448, -26.8963, 53.4669, 0.66 ) }
    dend_34 { pt3dadd( 20.3815, -27.3499, 52.9642, 0.66 ) }
    dend_34 { pt3dadd( 21.6235, -27.9948, 51.9897, 0.51 ) }
    dend_34 { pt3dadd( 22.5122, -28.3685, 51.2115, 0.29 ) }
    dend_34 { pt3dadd( 24.0368, -28.8974, 49.6799, 0.29 ) }
    dend_34 { pt3dadd( 24.8277, -29.1318, 48.6912, 0.59 ) }
    dend_34 { pt3dadd( 26.3503, -29.5384, 46.6257, 0.29 ) }
    dend_34 { pt3dadd( 26.7216, -29.6258, 46.1002, 0.81 ) }
    dend_34 { pt3dadd( 27.8498, -29.8927, 44.3671, 0.22 ) }
    dend_34 { pt3dadd( 28.7607, -30.167, 42.8661, 0.88 ) }
    dend_34 { pt3dadd( 29.8449, -30.6496, 40.9316, 1.25 ) }
    dend_34 { pt3dadd( 30.5664, -31.1129, 39.5586, 0.29 ) }
    dend_34 { pt3dadd( 30.829, -31.3492, 39.0336, 0.29 ) }
    dend_34 { pt3dadd( 31.7991, -32.537, 36.7795, 0.88 ) }
    dend_34 { pt3dadd( 32.1406, -33.1521, 35.7832, 1.03 ) }
    dend_34 { pt3dadd( 32.4639, -34.0459, 34.5317, 0.07 ) }
    dend_34 { pt3dadd( 32.5506, -34.4705, 34.0152, 0.66 ) }
    dend_34 { pt3dadd( 32.6312, -35.5325, 32.846, 0.07 ) }
    dend_34 { pt3dadd( 32.6402, -35.8521, 32.53, 0.07 ) }
    dend_34 { pt3dadd( 32.6497, -36.5718, 31.9257, 0.81 ) }
    dend_34 { pt3dadd( 32.6782, -37.737, 30.9498, 0.15 ) }
    dend_34 { pt3dadd( 32.7085, -38.8823, 29.9377, 1.62 ) }
    dend_34 { pt3dadd( 32.7775, -40.5284, 28.4123, 0.22 ) }
    dend_34 { pt3dadd( 32.8352, -41.6137, 27.4148, 0.22 ) }
    dend_34 { pt3dadd( 32.8865, -42.5492, 26.5216, 1.25 ) }
    dend_34 { pt3dadd( 32.9573, -43.9606, 25.156, 0.44 ) }
    dend_34 { pt3dadd( 33.0186, -45.2209, 23.9702, 1.25 ) }
    dend_34 { pt3dadd( 33.0644, -46.3568, 22.9235, 0.07 ) }
    dend_34 { pt3dadd( 33.0828, -46.9915, 22.3855, 0.51 ) }
    dend_34 { pt3dadd( 33.1054, -48.1814, 21.5236, 0.07 ) }
    dend_34 { pt3dadd( 33.1098, -48.515, 21.3285, 1.25 ) }
    dend_34 { pt3dadd( 33.1302, -49.7667, 20.8514, 0.07 ) }
    dend_34 { pt3dadd( 33.1431, -50.2837, 20.7291, 0.07 ) }
    dend_34 { pt3dadd( 33.151, -51.0302, 20.6262, 0.29 ) }
    dend_34 { pt3dadd( 33.1596, -51.757, 20.5557, 0.07 ) }
    dend_34 { pt3dadd( 33.168, -52.5988, 20.5396, 0.51 ) }
    dend_34 { pt3dadd( 33.176, -53.1973, 20.5216, 0.15 ) }
    dend_34 { pt3dadd( 33.1746, -53.6517, 20.4965, 0.51 ) }
    dend_34 { pt3dadd( 33.1836, -54.4017, 20.4578, 0.07 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 74/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 11.2555, 3.85579, 20.2864, 0.88 ) }
    dend_28 { pt3dadd( 12.076, 3.32208, 20.6226, 0.88 ) }
    dend_28 { pt3dadd( 12.9348, 2.84101, 20.9043, 0.73 ) }
    dend_28 { pt3dadd( 14.2916, 2.20792, 21.1997, 0.44 ) }
    dend_28 { pt3dadd( 15.7546, 1.60501, 21.3509, 0.44 ) }
    dend_28 { pt3dadd( 16.6793, 1.24839, 21.3737, 0.44 ) }
    dend_28 { pt3dadd( 17.3982, 0.978399, 21.3336, 0.59 ) }
    dend_28 { pt3dadd( 17.9905, 0.784719, 21.2029, 0.73 ) }
    dend_28 { pt3dadd( 18.9536, 0.531119, 20.8752, 0.59 ) }
    dend_28 { pt3dadd( 19.7581, 0.372244, 20.4893, 0.37 ) }
    dend_28 { pt3dadd( 20.5703, 0.230131, 20.0088, 0.88 ) }
    dend_28 { pt3dadd( 21.2837, 0.0775851, 19.5937, 0.95 ) }
    dend_28 { pt3dadd( 22.3311, -0.212461, 18.9591, 1.18 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 87/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 11.2555, 3.85579, 20.2864, 0.88 ) }
    dend_25 { pt3dadd( 11.1619, 3.5369, 21.4298, 0.88 ) }
    dend_25 { pt3dadd( 11.0708, 3.13569, 22.7202, 0.81 ) }
    dend_25 { pt3dadd( 10.902, 2.85852, 23.8295, 0.81 ) }
    dend_25 { pt3dadd( 10.7895, 2.75388, 24.408, 0.81 ) }
    dend_25 { pt3dadd( 10.6368, 2.64175, 25.2429, 0.81 ) }
    dend_25 { pt3dadd( 10.457, 2.47533, 26.3891, 0.81 ) }
    dend_25 { pt3dadd( 10.374, 2.31954, 27.3076, 0.81 ) }
    dend_25 { pt3dadd( 10.3439, 2.23358, 28.5224, 0.81 ) }
    dend_25 { pt3dadd( 10.3254, 2.29197, 29.1734, 0.81 ) }
    dend_25 { pt3dadd( 10.299, 2.33876, 29.6081, 0.81 ) }
    dend_25 { pt3dadd( 10.2311, 2.46613, 30.6882, 0.81 ) }
    dend_25 { pt3dadd( 10.2315, 2.55563, 31.3091, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_25 { pt3dadd( 10.4249, 2.78524, 32.2981, 0.81 ) }
    dend_25 { pt3dadd( 10.8192, 3.00359, 33.2271, 0.88 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 2/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 4.5818, 31.9759, -10.024, 0.29 ) }
    dend_21 { pt3dadd( 5.09969, 32.6767, -10.4836, 0.29 ) }
    dend_21 { pt3dadd( 5.50563, 33.0781, -10.9623, 0.51 ) }
    dend_21 { pt3dadd( 6.02282, 33.5218, -11.7628, 0.22 ) }
    dend_21 { pt3dadd( 6.44452, 33.9061, -12.5715, 0.66 ) }
    dend_21 { pt3dadd( 6.79379, 34.2532, -13.5806, 0.44 ) }
    dend_21 { pt3dadd( 7.14186, 34.5802, -14.7606, 0.95 ) }
    dend_21 { pt3dadd( 7.68528, 34.9548, -16.8678, 0.81 ) }
    dend_21 { pt3dadd( 8.09576, 35.1838, -18.6379, 0.81 ) }
    dend_21 { pt3dadd( 8.28375, 35.2628, -19.5805, 0.59 ) }
    dend_21 { pt3dadd( 8.80499, 35.4407, -22.8183, 0.59 ) }
    dend_21 { pt3dadd( 8.87021, 35.4691, -23.4353, 0.59 ) }
    dend_21 { pt3dadd( 8.92468, 35.5249, -24.922, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 15/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.5818, 31.9759, -10.024, 0.29 ) }
    dend_18 { pt3dadd( 5.43954, 32.8489, -10.0662, 0.29 ) }
    dend_18 { pt3dadd( 5.76389, 33.2616, -9.96072, 0.37 ) }
    dend_18 { pt3dadd( 6.21338, 33.9323, -9.66218, 0.88 ) }
    dend_18 { pt3dadd( 6.70993, 34.688, -9.17663, 0.07 ) }
    dend_18 { pt3dadd( 7.14008, 35.2977, -8.72255, 0.07 ) }
    dend_18 { pt3dadd( 7.39236, 35.624, -8.43136, 0.88 ) }
    dend_18 { pt3dadd( 8.53032, 37.1475, -6.80759, 0.07 ) }
    dend_18 { pt3dadd( 8.95266, 37.7687, -6.07918, 0.66 ) }
    dend_18 { pt3dadd( 9.45029, 38.5039, -5.08895, 0.59 ) }
    dend_18 { pt3dadd( 9.68087, 38.8436, -4.56075, 0.07 ) }
    dend_18 { pt3dadd( 10.1405, 39.4833, -3.43485, 0.07 ) }
    dend_18 { pt3dadd( 10.3398, 39.743, -2.94925, 0.44 ) }
    dend_18 { pt3dadd( 10.8052, 40.0656, -2.22275, 0.51 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 29/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 29.6784, 4.78456, -0.587917, 0.95 ) }
    dend_7 { pt3dadd( 30.2888, 4.14202, -0.344286, 0.95 ) }
    dend_7 { pt3dadd( 30.8103, 3.38745, 0.0194833, 0.81 ) }
    dend_7 { pt3dadd( 31.0808, 2.84108, 0.271634, 0.59 ) }
    dend_7 { pt3dadd( 31.4128, 1.98619, 0.626803, 0.95 ) }
    dend_7 { pt3dadd( 31.8021, 0.845774, 1.0737, 0.95 ) }
    dend_7 { pt3dadd( 32.206, -0.337542, 1.5374, 1.03 ) }
    dend_7 { pt3dadd( 32.6713, -2.03251, 2.20563, 1.25 ) }
    dend_7 { pt3dadd( 33.0671, -3.87264, 2.92573, 0.95 ) }
    dend_7 { pt3dadd( 33.2812, -5.12608, 3.40382, 1.25 ) }
    dend_7 { pt3dadd( 33.4245, -6.28463, 3.8445, 1.47 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 40/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 29.6784, 4.78456, -0.587917, 0.37 ) }
    dend_4 { pt3dadd( 30.5747, 4.64332, 0.264039, 0.37 ) }
    dend_4 { pt3dadd( 31.6919, 4.46725, 1.32605, 0.37 ) }
    dend_4 { pt3dadd( 32.1339, 4.3976, 1.74614, 0.66 ) }
    dend_4 { pt3dadd( 33.2575, 4.22052, 2.81427, 0.88 ) }
    dend_4 { pt3dadd( 34.4929, 4.02584, 3.98855, 0.73 ) }
    dend_4 { pt3dadd( 35.1114, 3.92836, 4.5765, 1.1 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 7.71968, -6.75206, 34.6179, 0.15 ) }
    dend_39 { pt3dadd( 6.99704, -6.57677, 34.4285, 0.15 ) }
    dend_39 { pt3dadd( 5.47696, -6.09612, 34.0945, 0.81 ) }
    dend_39 { pt3dadd( 4.52044, -5.73334, 33.8085, 0.44 ) }
    dend_39 { pt3dadd( 3.62515, -5.37904, 33.5028, 0.29 ) }
    dend_39 { pt3dadd( 3.00656, -5.13798, 33.1788, 0.29 ) }
    dend_39 { pt3dadd( 1.63124, -4.66529, 32.2187, 0.07 ) }
    dend_39 { pt3dadd( 0.919949, -4.43076, 31.571, 0.66 ) }
    dend_39 { pt3dadd( -0.309649, -4.01546, 30.223, 0.73 ) }
    dend_39 { pt3dadd( -0.778226, -3.84568, 29.5951, 0.44 ) }
    dend_39 { pt3dadd( -2.4028, -3.17657, 27.0376, 0.07 ) }
    dend_39 { pt3dadd( -3.35612, -2.79219, 25.3526, 0.22 ) }
    dend_39 { pt3dadd( -3.86411, -2.59837, 24.3194, 0.22 ) }
    dend_39 { pt3dadd( -4.03961, -2.53953, 23.9415, 0.22 ) }
    dend_39 { pt3dadd( -4.61501, -2.33657, 22.6636, 0.22 ) }
    dend_39 { pt3dadd( -5.47489, -1.91819, 20.6747, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 63/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 7.71968, -6.75206, 34.6179, 0.73 ) }
    dend_36 { pt3dadd( 6.61061, -7.34467, 34.6856, 0.73 ) }
    dend_36 { pt3dadd( 5.88226, -7.74004, 34.7758, 1.03 ) }
    dend_36 { pt3dadd( 4.93186, -8.25043, 35.0137, 0.73 ) }
    dend_36 { pt3dadd( 3.93443, -8.7798, 35.4169, 0.51 ) }
    dend_36 { pt3dadd( 3.05704, -9.22215, 35.9245, 0.81 ) }
    dend_36 { pt3dadd( 2.15738, -9.67571, 36.445, 0.95 ) }
    dend_36 { pt3dadd( 1.47008, -9.96779, 36.8909, 0.59 ) }
    dend_36 { pt3dadd( 0.48136, -10.3797, 37.6569, 0.59 ) }
    dend_36 { pt3dadd( -0.367694, -10.7841, 38.5244, 0.81 ) }
    dend_36 { pt3dadd( -1.0947, -11.1442, 39.5513, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 74/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 22.3311, -0.212461, 18.9591, 0.88 ) }
    dend_30 { pt3dadd( 23.0011, -0.140712, 17.7991, 0.88 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 76/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.3311, -0.212461, 18.9591, 0.66 ) }
    dend_29 { pt3dadd( 23.4041, -1.32875, 17.9601, 0.66 ) }
    dend_29 { pt3dadd( 24.3009, -2.38797, 17.2016, 0.66 ) }
    dend_29 { pt3dadd( 24.596, -2.73643, 16.952, 0.66 ) }
    dend_29 { pt3dadd( 25.1311, -3.36845, 16.4995, 0.37 ) }
    dend_29 { pt3dadd( 25.8465, -4.21333, 15.8945, 0.29 ) }
    dend_29 { pt3dadd( 26.1918, -4.6212, 15.6024, 0.29 ) }
    dend_29 { pt3dadd( 26.5662, -5.09286, 15.456, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 84/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 10.8192, 3.00359, 33.2271, 0.59 ) }
    dend_27 { pt3dadd( 10.2942, 3.47993, 34.6533, 0.59 ) }
    dend_27 { pt3dadd( 9.75693, 3.88624, 35.853, 0.37 ) }
    dend_27 { pt3dadd( 9.01392, 4.2928, 37.2712, 0.51 ) }
    dend_27 { pt3dadd( 8.70775, 4.39722, 37.8127, 0.37 ) }
    dend_27 { pt3dadd( 8.45807, 4.42822, 38.2697, 0.37 ) }
    dend_27 { pt3dadd( 7.97824, 4.4878, 39.1479, 0.37 ) }
    dend_27 { pt3dadd( 7.637, 4.49865, 39.7372, 0.37 ) }
    dend_27 { pt3dadd( 6.95814, 4.4038, 40.7922, 0.37 ) }
    dend_27 { pt3dadd( 6.24137, 4.20533, 41.8072, 0.66 ) }
    dend_27 { pt3dadd( 5.22194, 3.77733, 43.414, 0.44 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 95/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 10.8192, 3.00359, 33.2271, 0.66 ) }
    dend_26 { pt3dadd( 11.8763, 2.5711, 33.612, 0.66 ) }
    dend_26 { pt3dadd( 12.6483, 2.18444, 33.8575, 0.81 ) }
    dend_26 { pt3dadd( 13.3504, 1.71905, 34.1053, 0.59 ) }
    dend_26 { pt3dadd( 13.7808, 1.34133, 34.2795, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( 14.276, 0.784264, 34.5118, 0.59 ) }
    dend_26 { pt3dadd( 14.9031, -0.0620993, 34.8744, 0.51 ) }
    dend_26 { pt3dadd( 15.2319, -0.705987, 35.1619, 0.37 ) }
    dend_26 { pt3dadd( 15.4817, -1.5416, 35.6334, 0.37 ) }
    dend_26 { pt3dadd( 15.5776, -2.26735, 36.2029, 0.37 ) }
    dend_26 { pt3dadd( 15.5825, -2.81188, 36.7517, 0.37 ) }
    dend_26 { pt3dadd( 15.5502, -3.37807, 37.4368, 0.37 ) }
    dend_26 { pt3dadd( 15.4845, -4.21939, 38.6705, 0.44 ) }
    dend_26 { pt3dadd( 15.4569, -4.91991, 40.0376, 0.51 ) }
    dend_26 { pt3dadd( 15.5062, -5.75513, 42.2678, 0.37 ) }
    dend_26 { pt3dadd( 15.5326, -5.92498, 42.843, 0.37 ) }
    dend_26 { pt3dadd( 15.5634, -6.08264, 43.488, 0.37 ) }
    dend_26 { pt3dadd( 15.5957, -6.31794, 44.5973, 0.37 ) }
    dend_26 { pt3dadd( 15.6461, -6.63971, 46.5533, 0.37 ) }
    dend_26 { pt3dadd( 15.7166, -6.87482, 48.194, 0.37 ) }
    dend_26 { pt3dadd( 15.7314, -6.92678, 48.5422, 0.37 ) }
    dend_26 { pt3dadd( 15.7498, -7.1051, 49.6127, 0.37 ) }
    dend_26 { pt3dadd( 15.7163, -7.25531, 50.3939, 0.37 ) }
    dend_26 { pt3dadd( 15.5898, -7.52816, 51.5465, 0.37 ) }
    dend_26 { pt3dadd( 15.5181, -7.64478, 51.9604, 0.37 ) }
    dend_26 { pt3dadd( 15.4261, -7.72264, 52.4807, 0.37 ) }
    dend_26 { pt3dadd( 15.2845, -7.73186, 53.2573, 0.37 ) }
    dend_26 { pt3dadd( 15.2191, -7.7024, 53.6062, 0.37 ) }
    dend_26 { pt3dadd( 15.0983, -7.62742, 54.1537, 0.37 ) }
    dend_26 { pt3dadd( 14.91, -7.47893, 54.9294, 0.37 ) }
    dend_26 { pt3dadd( 14.6457, -7.1996, 56.0434, 0.37 ) }
    dend_26 { pt3dadd( 14.2348, -6.72795, 57.7117, 0.37 ) }
    dend_26 { pt3dadd( 13.9068, -6.3188, 59.0434, 0.37 ) }
    dend_26 { pt3dadd( 13.8158, -6.19026, 59.449, 0.37 ) }
    dend_26 { pt3dadd( 13.6236, -5.89654, 60.3614, 0.37 ) }
    dend_26 { pt3dadd( 13.4236, -5.57728, 61.3835, 0.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 10.8052, 40.0656, -2.22275, 0.29 ) }
    dend_20 { pt3dadd( 11.4858, 40.8119, -2.28493, 0.29 ) }
    dend_20 { pt3dadd( 12.0255, 41.514, -2.43785, 0.29 ) }
    dend_20 { pt3dadd( 12.4974, 42.229, -2.6248, 0.29 ) }
    dend_20 { pt3dadd( 13.0863, 43.276, -2.90783, 0.66 ) }
    dend_20 { pt3dadd( 13.4041, 43.8924, -3.09292, 0.44 ) }
    dend_20 { pt3dadd( 14.0955, 45.3134, -3.55373, 0.44 ) }
    dend_20 { pt3dadd( 14.5797, 46.3872, -3.93121, 0.44 ) }
    dend_20 { pt3dadd( 14.8967, 47.1041, -4.17689, 0.59 ) }
    dend_20 { pt3dadd( 15.3368, 48.0776, -4.52522, 0.29 ) }
    dend_20 { pt3dadd( 15.6765, 48.7181, -4.77014, 0.51 ) }
    dend_20 { pt3dadd( 16.3159, 49.6729, -5.10223, 0.29 ) }
    dend_20 { pt3dadd( 17.3037, 50.7868, -5.41794, 0.29 ) }
    dend_20 { pt3dadd( 17.9716, 51.4451, -5.57014, 0.51 ) }
    dend_20 { pt3dadd( 18.9511, 52.2804, -5.76208, 0.51 ) }
    dend_20 { pt3dadd( 19.7795, 52.88, -5.881, 0.22 ) }
    dend_20 { pt3dadd( 20.9245, 53.6134, -5.95858, 0.22 ) }
    dend_20 { pt3dadd( 21.8671, 54.0898, -5.96521, 0.29 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 49/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 10.8052, 40.0656, -2.22275, 0.29 ) }
    dend_19 { pt3dadd( 11.5148, 39.3581, -1.22084, 0.29 ) }
    dend_19 { pt3dadd( 12.1032, 38.8178, -0.307802, 0.22 ) }
    dend_19 { pt3dadd( 12.6319, 38.3363, 0.66624, 0.37 ) }
    dend_19 { pt3dadd( 13.0294, 37.9163, 1.73967, 0.37 ) }
    dend_19 { pt3dadd( 13.1904, 37.6814, 2.41448, 0.81 ) }
    dend_19 { pt3dadd( 13.3855, 37.1759, 3.95944, 0.81 ) }
    dend_19 { pt3dadd( 13.3488, 37.0734, 4.40198, 0.51 ) }
    dend_19 { pt3dadd( 13.0285, 36.9913, 5.27526, 0.51 ) }
    dend_19 { pt3dadd( 12.0615, 37.0474, 6.72554, 0.37 ) }
    dend_19 { pt3dadd( 11.3134, 37.1705, 7.49168, 0.37 ) }
    dend_19 { pt3dadd( 10.504, 37.3718, 8.11483, 0.15 ) }
    dend_19 { pt3dadd( 9.88762, 37.5529, 8.43131, 0.15 ) }
    dend_19 { pt3dadd( 8.10797, 38.1525, 9.05299, 0.37 ) }
    dend_19 { pt3dadd( 7.36149, 38.4639, 9.17691, 0.07 ) }
    dend_19 { pt3dadd( 7.07104, 38.6015, 9.1662, 0.37 ) }
    dend_19 { pt3dadd( 6.44695, 38.9047, 9.07544, 0.15 ) }
    dend_19 { pt3dadd( 5.7844, 39.2133, 8.90729, 0.51 ) }
    dend_19 { pt3dadd( 5.31028, 39.4181, 8.74028, 0.15 ) }
    dend_19 { pt3dadd( 4.68193, 39.6548, 8.46985, 0.44 ) }
    dend_19 { pt3dadd( 3.63525, 40.0049, 7.99045, 0.15 ) }
    dend_19 { pt3dadd( 3.16512, 40.1448, 7.77219, 0.73 ) }
    dend_19 { pt3dadd( 2.20436, 40.3932, 7.32855, 0.22 ) }
    dend_19 { pt3dadd( 1.72737, 40.5099, 7.13357, 0.88 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 73/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 33.4245, -6.28463, 3.8445, 0.37 ) }
    dend_11 { pt3dadd( 33.5197, -7.43871, 3.74748, 0.37 ) }
    dend_11 { pt3dadd( 33.6062, -8.40145, 3.66247, 0.37 ) }
    dend_11 { pt3dadd( 33.6872, -9.53374, 3.56423, 0.59 ) }
    dend_11 { pt3dadd( 33.7247, -10.6011, 3.48812, 0.66 ) }
    dend_11 { pt3dadd( 33.6936, -11.6301, 3.4271, 0.37 ) }
    dend_11 { pt3dadd( 33.5939, -12.737, 3.39526, 1.18 ) }
    dend_11 { pt3dadd( 33.3465, -14.1648, 3.42716, 0.44 ) }
    dend_11 { pt3dadd( 33.1952, -14.79, 3.47963, 0.29 ) }
    dend_11 { pt3dadd( 33.0198, -15.4697, 3.5597, 0.29 ) }
    dend_11 { pt3dadd( 32.7221, -16.6468, 3.73029, 0.81 ) }
    dend_11 { pt3dadd( 32.5072, -17.6255, 3.87405, 0.44 ) }
    dend_11 { pt3dadd( 32.2204, -19.1833, 4.07527, 1.32 ) }
    dend_11 { pt3dadd( 32.0093, -20.4666, 4.15115, 0.22 ) }
    dend_11 { pt3dadd( 31.8487, -21.6861, 4.13399, 0.81 ) }
    dend_11 { pt3dadd( 31.7233, -23.0105, 4.02132, 0.22 ) }
    dend_11 { pt3dadd( 31.6618, -23.9583, 3.8755, 0.22 ) }
    dend_11 { pt3dadd( 31.5717, -25.1268, 3.58854, 1.4 ) }
    dend_11 { pt3dadd( 31.3571, -27.044, 2.98997, 0.29 ) }
    dend_11 { pt3dadd( 31.1659, -28.1665, 2.58337, 0.81 ) }
    dend_11 { pt3dadd( 30.9384, -29.1277, 2.21544, 0.07 ) }
    dend_11 { pt3dadd( 30.5882, -30.3539, 1.77549, 1.03 ) }
    dend_11 { pt3dadd( 30.1585, -31.6397, 1.38003, 0.37 ) }
    dend_11 { pt3dadd( 29.8219, -32.5013, 1.18574, 0.66 ) }
    dend_11 { pt3dadd( 29.2543, -33.7451, 1.00044, 0.15 ) }
    dend_11 { pt3dadd( 28.5743, -34.9446, 0.894864, 1.54 ) }
    dend_11 { pt3dadd( 27.6208, -36.3491, 0.855406, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_11 { pt3dadd( 26.7914, -37.3908, 0.897504, 1.62 ) }
    dend_11 { pt3dadd( 25.4767, -38.8826, 1.06582, 0.81 ) }
    dend_11 { pt3dadd( 25.0888, -39.2776, 1.13248, 0.81 ) }
    dend_11 { pt3dadd( 24.3259, -39.9629, 1.29283, 0.15 ) }
    dend_11 { pt3dadd( 24.0991, -40.1475, 1.33597, 0.15 ) }
    dend_11 { pt3dadd( 23.8075, -40.3752, 1.39422, 0.15 ) }
    dend_11 { pt3dadd( 23.1892, -40.9075, 1.53177, 0.81 ) }
    dend_11 { pt3dadd( 22.2902, -41.7628, 1.72901, 0.07 ) }
    dend_11 { pt3dadd( 21.3316, -42.7051, 1.94933, 0.88 ) }
    dend_11 { pt3dadd( 20.5939, -43.4222, 2.13813, 0.07 ) }
    dend_11 { pt3dadd( 19.7405, -44.1868, 2.35863, 0.95 ) }
    dend_11 { pt3dadd( 19.2765, -44.5533, 2.47915, 0.95 ) }
    dend_11 { pt3dadd( 18.5588, -45.0143, 2.65026, 0.15 ) }
    dend_11 { pt3dadd( 17.8568, -45.3863, 2.82912, 0.15 ) }
    dend_11 { pt3dadd( 16.992, -45.7736, 3.05859, 1.1 ) }
    dend_11 { pt3dadd( 16.4255, -46.0176, 3.17724, 1.1 ) }
    dend_11 { pt3dadd( 15.668, -46.3641, 3.25641, 0.15 ) }
    dend_11 { pt3dadd( 14.5239, -46.9438, 3.35813, 0.44 ) }
    dend_11 { pt3dadd( 12.9516, -47.8641, 3.50965, 0.07 ) }
    dend_11 { pt3dadd( 12.071, -48.4498, 3.59262, 1.32 ) }
    dend_11 { pt3dadd( 10.8402, -49.3678, 3.73452, 0.81 ) }
    dend_11 { pt3dadd( 9.43279, -50.5379, 4.01631, 0.07 ) }
    dend_11 { pt3dadd( 8.53601, -51.3681, 4.3384, 0.88 ) }
    dend_11 { pt3dadd( 7.87622, -52.0397, 4.75006, 0.07 ) }
    dend_11 { pt3dadd( 7.54872, -52.4003, 5.07463, 1.03 ) }
    dend_11 { pt3dadd( 6.89965, -53.1529, 5.99342, 0.07 ) }
    dend_11 { pt3dadd( 6.22147, -53.9701, 7.23029, 0.66 ) }
    dend_11 { pt3dadd( 5.54173, -54.8394, 8.68102, 0.07 ) }
    dend_11 { pt3dadd( 4.88692, -55.7029, 10.1402, 0.59 ) }
    dend_11 { pt3dadd( 4.23092, -56.6126, 11.6617, 0.15 ) }
    dend_11 { pt3dadd( 3.65111, -57.4814, 13.0575, 0.15 ) }
    dend_11 { pt3dadd( 3.26624, -58.0855, 14.0344, 0.88 ) }
    dend_11 { pt3dadd( 3.10728, -58.3524, 14.4513, 0.07 ) }
    dend_11 { pt3dadd( 2.95023, -58.6475, 14.8613, 0.59 ) }
    dend_11 { pt3dadd( 2.73885, -59.1218, 15.3984, 0.07 ) }
    dend_11 { pt3dadd( 2.53555, -59.6442, 15.7778, 0.44 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 33.4245, -6.28463, 3.8445, 0.37 ) }
    dend_8 { pt3dadd( 34.0006, -7.72901, 3.51337, 0.37 ) }
    dend_8 { pt3dadd( 34.3672, -8.53922, 3.3296, 0.37 ) }
    dend_8 { pt3dadd( 34.6803, -9.1307, 3.19013, 0.73 ) }
    dend_8 { pt3dadd( 35.2444, -10.0793, 2.95158, 0.59 ) }
    dend_8 { pt3dadd( 35.8796, -11.0675, 2.70249, 0.37 ) }
    dend_8 { pt3dadd( 36.4426, -11.9343, 2.49079, 0.73 ) }
    dend_8 { pt3dadd( 36.9669, -12.6958, 2.29428, 0.44 ) }
    dend_8 { pt3dadd( 37.538, -13.4864, 2.07878, 0.88 ) }
    dend_8 { pt3dadd( 38.0398, -14.1482, 1.87862, 1.1 ) }
    dend_8 { pt3dadd( 38.5221, -14.7552, 1.691, 0.59 ) }
    dend_8 { pt3dadd( 38.91, -15.2762, 1.52698, 0.88 ) }
    dend_8 { pt3dadd( 39.2605, -15.8354, 1.33327, 0.95 ) }
    dend_8 { pt3dadd( 39.9752, -17.2756, 0.794479, 0.29 ) }
    dend_8 { pt3dadd( 40.4328, -18.4326, 0.352335, 0.29 ) }
    dend_8 { pt3dadd( 40.5216, -18.7082, 0.245495, 0.88 ) }
    dend_8 { pt3dadd( 40.7891, -19.6329, -0.132207, 0.59 ) }
    dend_8 { pt3dadd( 41.0413, -20.5961, -0.540038, 1.1 ) }
    dend_8 { pt3dadd( 41.2031, -21.4568, -0.901565, 0.95 ) }
    dend_8 { pt3dadd( 41.2485, -21.8791, -1.06745, 1.1 ) }
    dend_8 { pt3dadd( 41.2576, -22.237, -1.19604, 1.1 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 57/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 35.1114, 3.92836, 4.5765, 0.37 ) }
    dend_6 { pt3dadd( 35.1934, 3.57733, 5.39289, 0.37 ) }
    dend_6 { pt3dadd( 35.3208, 3.05221, 6.48202, 0.51 ) }
    dend_6 { pt3dadd( 35.4931, 2.44207, 7.67419, 0.95 ) }
    dend_6 { pt3dadd( 35.7258, 1.76845, 8.95691, 0.44 ) }
    dend_6 { pt3dadd( 36.1182, 0.822794, 10.7404, 0.51 ) }
    dend_6 { pt3dadd( 36.3517, 0.323132, 11.6779, 0.51 ) }
    dend_6 { pt3dadd( 36.6178, -0.148802, 12.5648, 0.29 ) }
    dend_6 { pt3dadd( 36.9949, -0.704921, 13.5673, 0.29 ) }
    dend_6 { pt3dadd( 37.4674, -1.27219, 14.6288, 0.44 ) }
    dend_6 { pt3dadd( 37.9857, -1.79229, 15.6625, 0.44 ) }
    dend_6 { pt3dadd( 38.5036, -2.23207, 16.5865, 0.44 ) }
    dend_6 { pt3dadd( 39.2448, -2.79933, 17.8279, 0.44 ) }
    dend_6 { pt3dadd( 39.8191, -3.20554, 18.7426, 0.44 ) }
    dend_6 { pt3dadd( 40.8826, -3.93423, 20.3113, 0.29 ) }
    dend_6 { pt3dadd( 41.3797, -4.28094, 20.979, 0.29 ) }
    dend_6 { pt3dadd( 41.7678, -4.56116, 21.4409, 0.29 ) }
    dend_6 { pt3dadd( 42.4684, -5.07808, 22.1648, 0.29 ) }
    dend_6 { pt3dadd( 43.5628, -5.92135, 23.1852, 0.29 ) }
    dend_6 { pt3dadd( 43.9209, -6.21974, 23.51, 0.29 ) }
    dend_6 { pt3dadd( 44.5505, -6.77846, 24.0297, 0.66 ) }
    dend_6 { pt3dadd( 45.326, -7.47857, 24.6585, 0.07 ) }
    dend_6 { pt3dadd( 46.1939, -8.26592, 25.3548, 0.66 ) }
    dend_6 { pt3dadd( 47.0022, -9.02662, 26.066, 0.29 ) }
    dend_6 { pt3dadd( 47.8987, -9.91605, 26.8883, 0.15 ) }
    dend_6 { pt3dadd( 48.2873, -10.3057, 27.2677, 0.15 ) }
    dend_6 { pt3dadd( 48.6296, -10.6479, 27.6225, 0.73 ) }
    dend_6 { pt3dadd( 49.093, -11.1287, 28.1252, 0.44 ) }
    dend_6 { pt3dadd( 50.0389, -12.1894, 29.1709, 0.15 ) }
    dend_6 { pt3dadd( 50.297, -12.4884, 29.4429, 0.44 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 87/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 35.1114, 3.92836, 4.5765, 0.51 ) }
    dend_5 { pt3dadd( 36.1532, 3.43032, 5.26441, 0.51 ) }
    dend_5 { pt3dadd( 36.7869, 3.06783, 5.76345, 0.88 ) }
    dend_5 { pt3dadd( 37.8833, 2.35638, 6.73234, 0.44 ) }
    dend_5 { pt3dadd( 38.5301, 1.88239, 7.33231, 0.29 ) }
    dend_5 { pt3dadd( 39.1467, 1.41222, 7.83854, 0.29 ) }
    dend_5 { pt3dadd( 40.1423, 0.703873, 8.53284, 0.29 ) }
    dend_5 { pt3dadd( 40.5674, 0.395771, 8.80118, 0.29 ) }
    dend_5 { pt3dadd( 41.2923, -0.121607, 9.28762, 0.73 ) }
    dend_5 { pt3dadd( 42.2169, -0.746027, 9.97363, 0.95 ) }
    dend_5 { pt3dadd( 43.3176, -1.39362, 10.8313, 1.25 ) }
    dend_5 { pt3dadd( 44.3269, -1.91807, 11.6118, 0.44 ) }
    dend_5 { pt3dadd( 45.2346, -2.35265, 12.2913, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_5 { pt3dadd( 46.5777, -2.98091, 13.3029, 0.73 ) }
    dend_5 { pt3dadd( 47.878, -3.5864, 14.3063, 1.47 ) }
    dend_5 { pt3dadd( 49.2271, -4.2296, 15.3471, 0.59 ) }
    dend_5 { pt3dadd( 51.1258, -5.17813, 16.7108, 0.44 ) }
    dend_5 { pt3dadd( 51.7435, -5.5001, 17.0854, 0.44 ) }
    dend_5 { pt3dadd( 52.3966, -5.82589, 17.3755, 0.81 ) }
    dend_5 { pt3dadd( 53.6303, -6.39869, 17.7105, 0.59 ) }
    dend_5 { pt3dadd( 54.8966, -6.94664, 17.8828, 1.03 ) }
    dend_5 { pt3dadd( 56.5342, -7.58716, 17.9345, 0.59 ) }
    dend_5 { pt3dadd( 57.1666, -7.80826, 17.8856, 0.37 ) }
    dend_5 { pt3dadd( 57.7959, -8.01678, 17.7627, 0.51 ) }
    dend_5 { pt3dadd( 58.3426, -8.19063, 17.5943, 0.51 ) }
    dend_5 { pt3dadd( 58.9248, -8.37133, 17.3515, 0.51 ) }
    dend_5 { pt3dadd( 59.3692, -8.52485, 17.1267, 0.15 ) }
    dend_5 { pt3dadd( 60.2187, -8.8917, 16.6082, 0.95 ) }
    dend_5 { pt3dadd( 61.7128, -9.60769, 15.591, 0.07 ) }
    dend_5 { pt3dadd( 62.0964, -9.8104, 15.301, 0.51 ) }
    dend_5 { pt3dadd( 62.4035, -9.98509, 15.0456, 0.51 ) }
    dend_5 { pt3dadd( 63.135, -10.4382, 14.3824, 0.37 ) }
    dend_5 { pt3dadd( 64.0783, -11.0646, 13.4863, 0.88 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 20/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.0947, -11.1442, 39.5513, 0.29 ) }
    dend_38 { pt3dadd( -1.99143, -10.886, 41.2133, 0.29 ) }
    dend_38 { pt3dadd( -2.94226, -10.5767, 42.7479, 0.51 ) }
    dend_38 { pt3dadd( -4.09378, -10.2139, 44.3302, 0.29 ) }
    dend_38 { pt3dadd( -4.32424, -10.1462, 44.6082, 1.03 ) }
    dend_38 { pt3dadd( -5.30328, -9.91207, 45.6326, 0.66 ) }
    dend_38 { pt3dadd( -6.16398, -9.77643, 46.4189, 0.44 ) }
    dend_38 { pt3dadd( -6.85592, -9.73293, 46.8552, 0.44 ) }
    dend_38 { pt3dadd( -7.75624, -9.79599, 47.2121, 0.15 ) }
    dend_38 { pt3dadd( -8.26407, -9.89886, 47.3572, 0.15 ) }
    dend_38 { pt3dadd( -9.25402, -10.1711, 47.6215, 0.37 ) }
    dend_38 { pt3dadd( -10.6117, -10.6494, 47.9271, 0.07 ) }
    dend_38 { pt3dadd( -11.566, -11.0405, 48.1265, 0.22 ) }
    dend_38 { pt3dadd( -12.3203, -11.387, 48.3059, 0.22 ) }
    dend_38 { pt3dadd( -13.6106, -12.0161, 48.6578, 0.37 ) }
    dend_38 { pt3dadd( -14.3586, -12.3763, 48.8857, 0.07 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 36/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -1.0947, -11.1442, 39.5513, 0.51 ) }
    dend_37 { pt3dadd( -1.9124, -10.2851, 40.9235, 0.51 ) }
    dend_37 { pt3dadd( -2.06264, -10.0623, 41.3786, 0.51 ) }
    dend_37 { pt3dadd( -2.18639, -9.81309, 41.941, 0.51 ) }
    dend_37 { pt3dadd( -2.33593, -9.53746, 42.5708, 0.51 ) }
    dend_37 { pt3dadd( -2.57537, -9.10754, 43.4794, 0.73 ) }
    dend_37 { pt3dadd( -2.9025, -8.5202, 44.7208, 0.73 ) }
    dend_37 { pt3dadd( -3.39259, -7.60197, 46.7685, 0.51 ) }
    dend_37 { pt3dadd( -3.65985, -7.03933, 48.0532, 0.73 ) }
    dend_37 { pt3dadd( -3.96474, -6.26626, 49.7844, 0.95 ) }
    dend_37 { pt3dadd( -4.07569, -5.93187, 50.5268, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 47/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 23.0011, -0.140712, 17.7991, 0.37 ) }
    dend_32 { pt3dadd( 24.8232, -0.529687, 17.8501, 0.37 ) }
    dend_32 { pt3dadd( 25.9972, -0.665051, 17.7654, 0.44 ) }
    dend_32 { pt3dadd( 26.7742, -0.722376, 17.6812, 0.44 ) }
    dend_32 { pt3dadd( 27.3847, -0.76334, 17.6076, 0.95 ) }
    dend_32 { pt3dadd( 27.77, -0.795491, 17.5602, 0.81 ) }
    dend_32 { pt3dadd( 28.6551, -0.907599, 17.4517, 1.18 ) }
    dend_32 { pt3dadd( 29.9989, -1.15441, 17.1744, 0.29 ) }
    dend_32 { pt3dadd( 30.6346, -1.27415, 17.0686, 0.29 ) }
    dend_32 { pt3dadd( 31.2291, -1.39226, 16.9875, 0.29 ) }
    dend_32 { pt3dadd( 31.8724, -1.50802, 16.9135, 0.29 ) }
    dend_32 { pt3dadd( 32.5841, -1.612, 16.8555, 0.29 ) }
    dend_32 { pt3dadd( 33.7472, -1.7594, 16.8121, 1.18 ) }
    dend_32 { pt3dadd( 35.1867, -1.94264, 16.8446, 0.44 ) }
    dend_32 { pt3dadd( 35.6422, -1.97975, 16.8582, 0.44 ) }
    dend_32 { pt3dadd( 36.957, -2.01677, 16.903, 0.44 ) }
    dend_32 { pt3dadd( 37.9088, -1.99441, 16.9563, 0.44 ) }
    dend_32 { pt3dadd( 38.877, -1.93338, 17.0268, 0.44 ) }
    dend_32 { pt3dadd( 40.5743, -1.77237, 17.1799, 0.81 ) }
    dend_32 { pt3dadd( 41.7934, -1.64753, 17.2782, 0.22 ) }
    dend_32 { pt3dadd( 43.176, -1.46856, 17.3674, 0.37 ) }
    dend_32 { pt3dadd( 43.928, -1.33483, 17.3814, 0.07 ) }
    dend_32 { pt3dadd( 44.5824, -1.17329, 17.3544, 0.44 ) }
    dend_32 { pt3dadd( 45.2162, -0.94847, 17.3027, 0.07 ) }
    dend_32 { pt3dadd( 46.0371, -0.581429, 17.1986, 1.1 ) }
    dend_32 { pt3dadd( 47.0529, -0.0709879, 17.0378, 0.22 ) }
    dend_32 { pt3dadd( 47.945, 0.427199, 16.8233, 0.59 ) }
    dend_32 { pt3dadd( 48.4253, 0.703847, 16.6651, 0.22 ) }
    dend_32 { pt3dadd( 49.0926, 1.12426, 16.4142, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 23.0011, -0.140712, 17.7991, 0.44 ) }
    dend_31 { pt3dadd( 23.1715, 1.02708, 18.3064, 0.44 ) }
    dend_31 { pt3dadd( 23.4077, 1.9506, 18.8184, 0.66 ) }
    dend_31 { pt3dadd( 23.6878, 2.80096, 19.419, 0.66 ) }
    dend_31 { pt3dadd( 23.8778, 3.26163, 19.8879, 0.66 ) }
    dend_31 { pt3dadd( 24.1194, 3.82915, 20.5422, 0.22 ) }
    dend_31 { pt3dadd( 24.2935, 4.22419, 21.0841, 0.51 ) }
    dend_31 { pt3dadd( 24.6361, 4.83466, 22.138, 0.81 ) }
    dend_31 { pt3dadd( 24.8735, 5.18129, 22.8312, 0.88 ) }
    dend_31 { pt3dadd( 25.3764, 5.8411, 24.3669, 0.88 ) }
    dend_31 { pt3dadd( 25.5082, 6.00172, 24.8192, 0.88 ) }
    dend_31 { pt3dadd( 25.9031, 6.46154, 26.3745, 0.51 ) }
    dend_31 { pt3dadd( 26.0772, 6.71708, 27.2294, 0.15 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 41.2576, -22.237, -1.19604, 0.07 ) }
    dend_10 { pt3dadd( 41.548, -23.7627, -2.01538, 0.07 ) }
    dend_10 { pt3dadd( 41.6153, -24.053, -2.15564, 0.37 ) }
    dend_10 { pt3dadd( 41.888, -25.1285, -2.74658, 0.95 ) }
    dend_10 { pt3dadd( 42.1239, -26.0518, -3.25215, 0.37 ) }
    dend_10 { pt3dadd( 42.4068, -27.1637, -3.85195, 0.51 ) }
    dend_10 { pt3dadd( 42.6649, -28.1407, -4.37517, 0.15 ) }
    dend_10 { pt3dadd( 42.9891, -29.2625, -4.92602, 0.81 ) }
    dend_10 { pt3dadd( 43.4723, -30.8946, -5.73545, 0.07 ) }
    dend_10 { pt3dadd( 43.7299, -31.7155, -6.12367, 1.4 ) }
    dend_10 { pt3dadd( 43.8137, -31.9769, -6.23737, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 44.1684, -33.0076, -6.62185, 0.37 ) }
    dend_10 { pt3dadd( 44.3356, -33.4859, -6.74238, 0.07 ) }
    dend_10 { pt3dadd( 44.7067, -34.5202, -6.88204, 1.25 ) }
    dend_10 { pt3dadd( 45.3408, -36.312, -6.93726, 0.07 ) }
    dend_10 { pt3dadd( 45.6907, -37.3668, -6.93156, 0.95 ) }
    dend_10 { pt3dadd( 45.9975, -38.4002, -6.88436, 0.07 ) }
    dend_10 { pt3dadd( 46.2937, -39.6155, -6.76222, 0.07 ) }
    dend_10 { pt3dadd( 46.4321, -40.3351, -6.69834, 0.07 ) }
    dend_10 { pt3dadd( 46.5578, -41.31, -6.64716, 0.81 ) }
    dend_10 { pt3dadd( 46.6626, -42.5124, -6.72033, 0.07 ) }
    dend_10 { pt3dadd( 46.746, -43.5079, -6.87522, 0.81 ) }
    dend_10 { pt3dadd( 46.8833, -45.0158, -7.26685, 0.07 ) }
    dend_10 { pt3dadd( 47.0274, -46.3533, -7.73905, 0.73 ) }
    dend_10 { pt3dadd( 47.1651, -47.5299, -8.26474, 0.07 ) }
    dend_10 { pt3dadd( 47.3756, -49.1917, -9.16636, 0.07 ) }
    dend_10 { pt3dadd( 47.4411, -49.7798, -9.51931, 1.54 ) }
    dend_10 { pt3dadd( 47.5559, -50.723, -10.1401, 0.07 ) }
    dend_10 { pt3dadd( 47.6741, -51.5973, -10.76, 0.95 ) }
    dend_10 { pt3dadd( 47.8636, -52.9625, -11.6795, 0.07 ) }
    dend_10 { pt3dadd( 47.9458, -53.7755, -12.2176, 0.07 ) }
    dend_10 { pt3dadd( 47.9349, -54.8609, -12.9395, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 21/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 41.2576, -22.237, -1.19604, 0.22 ) }
    dend_9 { pt3dadd( 41.6794, -23.6614, -0.218641, 0.22 ) }
    dend_9 { pt3dadd( 41.8131, -24.0404, 0.0745699, 0.37 ) }
    dend_9 { pt3dadd( 42.0359, -24.6888, 0.565184, 0.07 ) }
    dend_9 { pt3dadd( 42.1631, -25.0676, 0.871389, 0.59 ) }
    dend_9 { pt3dadd( 42.3531, -25.6429, 1.33508, 0.22 ) }
    dend_9 { pt3dadd( 42.5981, -26.3736, 1.97878, 1.32 ) }
    dend_9 { pt3dadd( 43.0603, -27.7359, 3.22588, 0.07 ) }
    dend_9 { pt3dadd( 43.1951, -28.1526, 3.62323, 0.59 ) }
    dend_9 { pt3dadd( 43.4131, -28.9453, 4.36951, 0.15 ) }
    dend_9 { pt3dadd( 43.513, -29.3409, 4.75361, 0.66 ) }
    dend_9 { pt3dadd( 43.7404, -30.4317, 5.86584, 0.29 ) }
    dend_9 { pt3dadd( 43.7951, -30.7838, 6.24788, 0.59 ) }
    dend_9 { pt3dadd( 43.8149, -31.0035, 6.47292, 0.22 ) }
    dend_9 { pt3dadd( 43.8637, -31.5187, 7.03827, 0.51 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_51, dend_40, dend_15, dend_0, dend_59, dend_52, dend_46, dend_41, dend_23, dend_16, dend_12, dend_1, dend_56, dend_53, dend_48, dend_47, dend_43, dend_42, dend_33, dend_24, dend_22, dend_17, dend_14, dend_13, dend_3, dend_2, dend_58, dend_57, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_35, dend_34, dend_28, dend_25, dend_21, dend_18, dend_7, dend_4, dend_39, dend_36, dend_30, dend_29, dend_27, dend_26, dend_20, dend_19, dend_11, dend_8, dend_6, dend_5, dend_38, dend_37, dend_32, dend_31, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_51, dend_40, dend_15, dend_0, dend_59, dend_52, dend_46, dend_41, dend_23, dend_16, dend_12, dend_1, dend_56, dend_53, dend_48, dend_47, dend_43, dend_42, dend_33, dend_24, dend_22, dend_17, dend_14, dend_13, dend_3, dend_2, dend_58, dend_57, dend_55, dend_54, dend_50, dend_49, dend_45, dend_44, dend_35, dend_34, dend_28, dend_25, dend_21, dend_18, dend_7, dend_4, dend_39, dend_36, dend_30, dend_29, dend_27, dend_26, dend_20, dend_19, dend_11, dend_8, dend_6, dend_5, dend_38, dend_37, dend_32, dend_31, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_42 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_14 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_2 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_54 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_50 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_45 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_34 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_11 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_15 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_46 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_51 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_23 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_24 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_16 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_48 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_41 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_52 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_25 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_12 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_47 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_29 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_53 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_7 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_56 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_49 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_27 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_31 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_17 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_36 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_57 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_39 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_37 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_32 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_55 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_38 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_26 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_9 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_20 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_19 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_10 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_59 nseg = 5
    dend_42 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_2 nseg = 3
    dend_54 nseg = 3
    dend_50 nseg = 3
    dend_45 nseg = 3
    dend_34 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCSA_51e1d4ecd6_0_0


