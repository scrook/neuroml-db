// Cell: bIR215_L5_DBC_893b78d08e_0_0
/*
{
  "id" : "bIR215_L5_DBC_893b78d08e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.25432, 14.9511, 0.00157081, 3.62034", "-2.93315, 13.5105, 0.00126201, 6.40385", "-2.61199, 12.0699, 9.53205E-4, 8.96308", "-2.29082, 10.6293, 6.44404E-4, 10.4523", "-1.96966, 9.18875, 3.35604E-4, 11.6707", "-1.64849, 7.74817, 2.68037E-5, 11.8736", "-1.32732, 6.30759, -2.81997E-4, 11.9675", "-1.00616, 4.86701, -5.90797E-4, 12.0614", "-0.684991, 3.42643, -8.99597E-4, 12.1873", "-0.363825, 1.98585, -0.0012084, 12.1453", "-0.0426595, 0.545272, -0.0015172, 12.019", "0.278507, -0.895307, -0.001826, 11.8927", "0.599673, -2.33589, -0.0021348, 11.8279", "0.920839, -3.77647, -0.0024436, 11.7176", "1.242, -5.21704, -0.0027524, 11.0046", "1.56317, -6.65762, -0.0030612, 10.0239", "1.88434, -8.0982, -0.00337, 9.09175", "2.2055, -9.53878, -0.0036788, 8.30332", "2.52667, -10.9794, -0.0039876, 7.17422", "2.84783, -12.4199, -0.0042964, 5.37678", "3.169, -13.8605, -0.0046052, 3.2773" ]
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-4.98075, 8.27387, 10.9227, 2.76", "-5.83876, 9.03295, 9.67084, 2.16", "-8.31663, 10.8544, 6.70594, 2.52", "-10.1148, 12.0444, 4.76932, 2.52", "-11.4226, 12.8341, 3.52368, 2.52", "-12.1104, 13.2113, 2.91865, 2.52", "-12.9405, 13.6125, 2.28383, 2.28", "-15.1523, 14.6139, 0.879698, 1.92", "-16.0989, 14.9915, 0.43591, 1.92", "-18.148, 15.7005, -0.411344, 1.8", "-19.3778, 16.1101, -0.85131, 1.8", "-22.0368, 16.8882, -1.67574, 1.56", "-24.1033, 17.425, -2.23061, 1.92", "-25.8855, 17.807, -2.63895, 1.92", "-27.1586, 17.9586, -2.86878, 1.92", "-28.7855, 17.9815, -3.09274, 1.92", "-31.8978, 17.8206, -3.50499, 1.8", "-32.4252, 17.752, -3.58402, 1.8", "-33.5292, 17.5334, -3.74979, 1.8", "-36.1466, 16.8961, -4.20404, 1.32", "-37.0724, 16.6531, -4.41159, 1.32", "-38.8581, 16.1769, -4.97652, 1.92", "-39.5541, 16.1289, -5.38331, 1.92", "-40.0546, 16.5183, -6.16556, 1.92", "-40.2817, 16.794, -6.66018, 1.92", "-40.5223, 17.1272, -7.25985, 1.92", "-40.8509, 17.3297, -7.79575, 1.92", "-41.3811, 17.4165, -8.44714, 1.92", "-42.947, 17.3971, -10.1976, 1.44", "-44.1263, 17.3267, -11.4306, 1.44", "-44.7247, 17.2661, -12.0175, 1.44", "-46.2659, 17.0253, -13.4615, 1.44", "-47.2817, 16.8085, -14.385, 1.8", "-48.076, 16.5853, -15.0998, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-3.03075, 12.2639, 1.77275, 1.32", "-2.80258, 14.9511, 0.692197, 1.32", "-2.58393, 17.7928, -0.314466, 1.32", "-2.47242, 19.3362, -0.80369, 1.32", "-2.35889, 20.9996, -1.26558, 1.32", "-2.29123, 22.0375, -1.51491, 1.32", "-2.19522, 23.2246, -1.75826, 1.32", "-2.06677, 24.6755, -1.90884, 1.32", "-1.97555, 25.5848, -1.87274, 1.32", "-1.79034, 27.278, -1.73441, 1.08", "-1.57129, 29.0855, -1.54519, 1.56", "-1.33698, 31.0047, -1.29609, 1.56", "-1.1232, 32.6777, -1.03634, 1.56", "-0.534717, 36.5116, -0.325804, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-5.85074, 9.81289, 11.3727, 1.8", "-6.58013, 10.9091, 11.7974, 1.8", "-7.38035, 12.0725, 12.2789, 1.8", "-8.94595, 14.1765, 13.3232, 1.56", "-9.3953, 14.7804, 13.6229, 1.56", "-10.4218, 16.1599, 14.3076, 1.44", "-11.492, 17.5983, 15.0215, 0.96", "-11.9467, 18.2058, 15.3543, 0.96", "-13.8276, 20.5761, 16.7742, 1.92", "-19.089, 27.7184, 20.5015, 1.92", "-25.9557, 33.1665, 24.7511, 1.92", "-33.9403, 38.1146, 27.4373, 1.92", "-41.2057, 44.1704, 29.6005, 1.92" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "1.42925, -10.8496, 11.5527, 2.64", "1.61391, -12.892, 11.396, 2.64", "1.82714, -15.2503, 11.215, 2.64", "1.9844, -16.9895, 11.0815, 2.64", "2.13103, -18.6114, 10.957, 2.64", "2.4294, -21.9113, 10.7037, 2.4", "2.73001, -25.2361, 10.4486, 3.37" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "4.77925, -11.6001, 13.0827, 2.16", "4.96854, -12.1363, 12.8931, 2.16", "5.46987, -13.8411, 12.4104, 2.16", "5.85192, -15.061, 12.1288, 2.16", "6.50961, -17.161, 11.644, 2.16", "6.99318, -18.705, 11.2876, 2.16", "7.3438, -19.8245, 11.0292, 2.16", "8.27074, -22.7403, 10.3457, 2.52", "8.92581, -25.0055, 9.81705, 3.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.610745, 11.9694, 11.8327, 2.52", "-0.008169, 16.2098, 11.8327, 2.52", "0.585238, 20.3856, 11.8327, 2.52", "1.11811, 24.1355, 11.8327, 2.52", "1.38754, 26.0315, 11.8327, 2.52", "1.71584, 28.3418, 11.8327, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000099931593607
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.169, -13.8605, -0.0046052, 1.28978", "6.433, -28.5011, -0.0046052, 1.28978", "9.697, -43.1416, -0.0046052, 1.28978" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-48.076, 16.5853, -15.0998, 1.2", "-49.4162, 18.5281, -14.1233, 1.2", "-50.8737, 19.9444, -13.3114, 1.2", "-51.9265, 20.5416, -12.8963, 1.2", "-52.6172, 20.8618, -12.6551, 1.56", "-53.05, 21.0165, -12.5917, 1.56", "-53.8145, 21.2388, -12.562, 1.56", "-55.9365, 21.6429, -12.5992, 0.96", "-59.2423, 22.1145, -12.8667, 1.56", "-59.5704, 22.1554, -12.9016, 1.56", "-63.6936, 22.5998, -13.4698, 1.08", "-64.9614, 22.7078, -13.7056, 1.08" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-48.076, 16.5853, -15.0998, 1.08", "-49.8337, 16.3049, -16.2101, 1.08", "-51.6747, 15.8047, -17.4914, 1.56", "-55.4398, 14.28, -20.7505, 0.84", "-56.8175, 13.5159, -22.2779, 0.84", "-57.2505, 13.2113, -22.8513, 0.84", "-58.3241, 12.323, -24.4707, 0.84", "-59.2471, 11.2423, -26.347, 0.84", "-60.2072, 9.66379, -28.8771, 0.84", "-60.8901, 8.07171, -31.0622, 0.84", "-61.2898, 7.04232, -32.3704, 0.84", "-61.7288, 6.02083, -33.6428, 0.84", "-62.1298, 5.234, -34.5742, 0.84", "-62.9147, 3.99776, -35.8254, 0.84", "-63.7508, 2.94443, -36.5973, 0.84", "-64.2959, 2.38804, -36.9051, 0.84", "-65.499, 1.36297, -37.3732, 0.84", "-66.3806, 0.717089, -37.6069, 0.84", "-67.7801, -0.191323, -37.8548, 0.84", "-69.5115, -1.3538, -38.0788, 0.84", "-71.3871, -2.76188, -38.2702, 0.84", "-72.5688, -3.83449, -38.3551, 0.84", "-73.9382, -5.31148, -38.4575, 0.84", "-76.0821, -8.03473, -38.7333, 0.84", "-77.7602, -10.5807, -39.034, 1.32", "-78.9436, -12.6837, -39.276, 0.6", "-80.115, -15.1808, -39.5443, 1.2", "-80.9308, -17.293, -39.797, 0.72", "-81.5318, -19.3168, -40.0862, 0.72", "-81.8025, -20.6437, -40.334, 0.72" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-0.534717, 36.5116, -0.325804, 1.32", "0.203036, 37.9607, 0.424319, 1.32", "1.87223, 41.5142, 2.00662, 0.96", "2.54483, 43.1677, 2.63687, 0.96", "3.0948, 44.897, 3.18387, 1.2", "3.32525, 45.8848, 3.4355, 1.2", "3.47903, 46.7565, 3.62673, 1.2", "3.51399, 47.734, 3.75205, 1.44", "3.28592, 49.0757, 3.75398, 1.08", "2.75571, 50.7804, 3.7555, 1.08", "2.01694, 52.6351, 3.75682, 1.56", "1.78266, 53.1408, 3.75701, 1.56", "1.06036, 54.5101, 3.75667, 1.56", "0.00626704, 56.2712, 3.75399, 1.56", "-0.088344, 56.4071, 3.75338, 1.56" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-41.2057, 44.1704, 29.6005, 1.2", "-47.0107, 50.1853, 32.6208, 1.2", "-51.8417, 55.8218, 37.5003, 1.2", "-57.8047, 61.7843, 40.3317, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-41.2057, 44.1704, 29.6005, 1.44", "-47.3549, 49.819, 32.7893, 1.2", "-52.456, 56.3677, 35.9425, 1.2", "-58.2397, 62.5261, 38.7418, 1.2", "-64.8157, 68.0174, 41.2952, 1.2" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "2.73001, -25.2361, 10.4486, 1.2", "1.40037, -29.9467, 9.98712, 1.2", "0.663069, -32.7747, 9.68595, 1.2", "-0.095907, -35.968, 9.33481, 1.2", "-0.720791, -38.7952, 9.02488, 1.2", "-1.11403, -40.8164, 8.80426, 1.2", "-1.39737, -42.3309, 8.63467, 1.2", "-1.55006, -43.4864, 8.46137, 1.2", "-1.68819, -44.9905, 8.2294, 1.2", "-1.70652, -45.8819, 8.11476, 1.2", "-1.65554, -47.5813, 7.92003, 1.2", "-1.62643, -48.8227, 7.80269, 1.2", "-1.67223, -50.1422, 7.73604, 1.2", "-1.81991, -51.1856, 7.74087, 1.2", "-2.29508, -53.224, 7.85146, 1.2", "-2.53965, -54.073, 7.92433, 1.2", "-3.12071, -55.8767, 8.10803, 1.2", "-4.11081, -58.9364, 8.44014, 1.68", "-5.34394, -62.6552, 8.85256, 1.08", "-6.41485, -65.9131, 9.20613, 0.72", "-6.92432, -67.5833, 9.37211, 1.92", "-8.11295, -71.9661, 9.75661, 0.96", "-8.86699, -75.2094, 10.0011, 0.84", "-9.20203, -77.0795, 10.1079, 1.44", "-9.50407, -79.5623, 10.204, 1.08", "-9.6931, -81.911, 10.2702, 1.08", "-9.90541, -85.6997, 10.3604, 0.72", "-9.97901, -87.3196, 10.4033, 1.44", "-10.1168, -89.6095, 10.478, 1.44", "-10.3597, -92.6777, 10.6007, 0.72", "-10.4793, -93.8751, 10.6578, 1.2", "-10.7337, -96.0674, 10.7752, 1.2", "-10.9195, -97.7669, 10.8619, 1.56", "-11.2337, -100.106, 10.9281, 1.32", "-11.6636, -102.738, 10.9682, 0.84", "-12.1298, -105.83, 10.9467, 1.56", "-12.3792, -107.661, 10.9098, 1.56", "-12.7953, -110.933, 10.8175, 0.96", "-13.1632, -113.951, 10.7154, 0.96", "-13.4655, -116.276, 10.6408, 1.32", "-13.932, -119.113, 10.5973, 1.32", "-14.724, -123.026, 10.6341, 0.72", "-15.0379, -124.339, 10.6773, 1.56", "-15.4145, -125.635, 10.7435, 1.56", "-16.2308, -128.133, 10.9117, 0.96", "-17.0958, -130.264, 11.0752, 1.68", "-18.6266, -133.58, 11.26, 1.08", "-19.9106, -136.264, 11.3418, 0.96", "-21.4802, -139.707, 11.3679, 1.44", "-22.2887, -141.577, 11.3491, 1.08", "-23.5325, -144.558, 11.2484, 0.84", "-24.614, -147.246, 11.0817, 1.44", "-25.1403, -148.579, 10.9785, 1.44", "-26.1132, -151.219, 10.7639, 0.72", "-26.7712, -153.156, 10.5818, 0.72", "-27.9127, -156.655, 10.2226, 1.32", "-28.7517, -159.245, 9.91415, 0.96", "-29.163, -160.347, 9.80123, 0.96", "-29.6583, -161.573, 9.6468, 0.96", "-30.3927, -163.13, 9.42406, 0.96", "-30.8499, -164.033, 9.3058, 0.96", "-31.5271, -165.25, 9.11982, 0.96", "-32.2624, -166.522, 8.91629, 0.96", "-34.4719, -170.3, 8.32143, 1.44", "-36.9903, -174.651, 7.68558, 0.48", "-38.1578, -176.765, 7.41127, 1.56", "-40.4302, -181.108, 6.89835, 0.84", "-41.0167, -182.295, 6.74125, 0.84", "-41.9866, -184.41, 6.43508, 0.84", "-42.697, -186.166, 6.19428, 0.84", "-43.2986, -187.906, 5.9919, 0.84", "-43.8507, -189.583, 5.84131, 0.84", "-45.249, -194.135, 5.54455, 0.6", "-46.0516, -196.648, 5.36371, 1.08", "-47.2148, -200.132, 5.08797, 0.72", "-48.3533, -203.368, 4.8345, 0.6", "-48.9329, -204.903, 4.7379, 1.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.73001, -25.2361, 10.4486, 1.92", "2.74386, -28.7436, 10.2145, 1.92", "2.75903, -32.5835, 9.95823, 1.92", "2.77613, -36.914, 9.66922, 2.28", "2.78521, -39.2132, 9.51578, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.92581, -25.0055, 9.81705, 1.32", "10.806, -25.9253, 10.1689, 1.32", "12.0809, -26.417, 10.4422, 1.32", "13.1221, -26.7581, 10.6838, 1.32", "14.2448, -27.0945, 10.958, 1.32", "15.7443, -27.5, 11.3497, 1.32", "16.5343, -27.7144, 11.5683, 1.32", "18.5914, -28.2507, 12.2264, 1.08", "19.2439, -28.4142, 12.4517, 1.08", "19.5136, -28.4844, 12.5502, 1.08", "20.9545, -28.8957, 13.105, 1.44", "22.058, -29.2951, 13.5245, 1.08", "22.6125, -29.5518, 13.7328, 1.08", "23.9335, -30.2482, 14.1912, 1.08", "24.7921, -30.7, 14.4603, 0.84", "25.6524, -31.1544, 14.7015, 0.84", "26.689, -31.6497, 14.9554, 0.84", "27.531, -32.0334, 15.1531, 0.84", "29.5875, -32.9452, 15.5386, 1.2", "30.7587, -33.4458, 15.6897, 0.84", "31.7673, -33.8214, 15.7605, 0.84", "33.7468, -34.4559, 15.8194, 0.96", "35.6977, -35.058, 15.8525, 0.72", "37.8765, -35.7187, 15.8431, 1.2", "39.0834, -36.088, 15.7897, 1.2", "40.3596, -36.4362, 15.674, 0.6", "40.9544, -36.5781, 15.5896, 0.6", "47.8843, -38.0666, 15.8526, 0.6", "54.4376, -40.6671, 15.617, 0.6", "61.4349, -41.8426, 15.8815, 0.6", "68.5399, -41.9965, 16.2083, 0.6" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "8.92581, -25.0055, 9.81705, 1.8", "9.20421, -27.7282, 9.73906, 1.8", "9.58569, -30.5015, 9.66856, 1.8", "9.87226, -32.1182, 9.63409, 1.8", "10.033, -32.9104, 9.6005, 1.8", "10.281, -34.0535, 9.53566, 1.8", "10.5187, -35.1058, 9.50865, 1.8", "10.7606, -35.9642, 9.51781, 1.8", "11.1002, -37.3584, 9.57032, 1.8", "11.2546, -38.2858, 9.60634, 1.8", "11.419, -39.595, 9.66037, 1.8", "11.645, -42.0157, 9.64811, 1.8", "11.7395, -43.2551, 9.6063, 1.8", "11.9118, -45.7438, 9.47195, 2.16", "12.0833, -47.6563, 9.31874, 1.92", "12.1841, -48.4482, 9.23661, 1.92", "12.8011, -52.9511, 8.63998, 2.16", "13.0746, -54.7302, 8.32248, 2.16", "13.2987, -55.9308, 8.08494, 2.16", "13.8519, -58.2504, 7.59292, 1.92", "14.2776, -59.7076, 7.27227, 2.16" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "1.71584, 28.3418, 11.8327, 1.8", "3.51839, 31.6706, 13.2179, 1.8", "5.1591, 34.7005, 14.4786, 1.8", "6.87609, 37.8713, 15.798, 1.8", "8.89542, 41.6004, 17.3497, 1.8" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.697, -43.1416, -0.0046052, 0.933573", "12.961, -57.7822, -0.0046052, 0.933573", "16.225, -72.4228, -0.0046052, 0.933573" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-64.9614, 22.7078, -13.7056, 1.68", "-65.2211, 22.6928, -13.7944, 1.68", "-68.3134, 22.6359, -14.7296, 1.2", "-70.7796, 22.711, -15.3752, 1.68", "-71.8788, 22.7928, -15.6366, 1.68", "-73.4981, 23.0109, -15.9915, 1.2", "-76.3466, 23.5185, -16.6104, 1.2", "-77.9646, 23.95, -17.0187, 0.84", "-79.565, 24.6218, -17.5128, 1.32", "-80.4834, 25.1313, -17.8909, 1.32", "-81.9563, 26.0746, -18.641, 0.84", "-82.5791, 26.5256, -19.0277, 0.84", "-84.7474, 28.258, -20.5769, 0.84", "-86.3804, 29.5878, -21.8151, 0.84", "-87.4675, 30.4869, -22.6357, 0.84", "-88.3153, 31.155, -23.213, 0.84", "-89.4651, 31.9789, -23.8828, 0.84", "-90.638, 32.7597, -24.4188, 0.84", "-92.3546, 33.8751, -24.966, 0.84", "-93.5554, 34.6444, -25.2526, 0.84", "-95.2261, 35.7204, -25.583, 0.84", "-97.319, 37.1405, -25.9705, 0.84", "-98.4247, 37.9249, -26.1475, 0.84", "-100.674, 39.5731, -26.5219, 1.32", "-102.254, 40.7528, -26.8054, 1.32", "-104.384, 42.437, -27.1624, 0.96", "-105.972, 43.7982, -27.4392, 0.96", "-106.872, 44.5563, -27.6006, 0.96", "-108.091, 45.5314, -27.8717, 0.96", "-109.157, 46.276, -28.1439, 0.96", "-112.055, 48.0743, -28.8966, 0.72", "-113.105, 48.6329, -29.1765, 0.72", "-117.201, 50.4453, -30.253, 1.08", "-118.375, 50.898, -30.5608, 1.08", "-122.163, 52.2801, -31.3844, 1.08", "-124.125, 53.0022, -31.8027, 1.08", "-126.322, 53.8908, -32.2165, 1.08", "-128.262, 54.7873, -32.536, 1.08", "-128.952, 55.1662, -32.6546, 1.08", "-131.926, 56.9978, -33.1791, 1.08", "-134.181, 58.5493, -33.6314, 1.08", "-138.421, 61.5436, -34.5936, 1.44", "-139.544, 62.3278, -34.8784, 1.44", "-142.243, 64.0202, -35.645, 1.2", "-143.333, 64.5563, -35.9257, 1.2", "-144.844, 65.0982, -36.2768, 1.2", "-149.161, 66.2413, -37.0992, 1.08", "-151.834, 66.823, -37.6238, 1.08", "-155.147, 67.5154, -38.2176, 1.08", "-159.876, 68.4468, -39.0306, 0.72", "-162.954, 69.0375, -39.5744, 0.72", "-165.415, 69.495, -40.0118, 1.08", "-168.416, 69.9755, -40.5712, 0.84", "-170.118, 70.1529, -40.9667, 0.84", "-171.302, 70.2232, -41.3167, 0.84", "-172.695, 70.2799, -41.8149, 0.84", "-175.083, 70.2304, -42.6827, 0.84", "-178.489, 69.8844, -43.8471, 0.84", "-183.655, 68.9298, -45.5109, 0.6", "-184.392, 68.7631, -45.7637, 0.6" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-64.9614, 22.7078, -13.7056, 1.32", "-65.3348, 23.7236, -13.9694, 1.32", "-65.8555, 25.1374, -14.3961, 0.84", "-66.4391, 26.9063, -14.9967, 1.44", "-67.3022, 29.4662, -16.0308, 1.08", "-67.8778, 30.9476, -16.6939, 1.08", "-68.1004, 31.4495, -16.9404, 1.08", "-68.9579, 33.1433, -17.9263, 1.56", "-69.9352, 34.6866, -18.9928, 0.96", "-70.7316, 35.6574, -19.7686, 0.96", "-71.7188, 36.427, -20.4471, 0.96", "-72.5104, 36.8209, -20.8543, 0.96", "-73.2649, 37.0768, -21.179, 0.96", "-74.009, 37.219, -21.4398, 0.96", "-75.0744, 37.3809, -21.7434, 0.96", "-77.3413, 37.7541, -22.3519, 0.72", "-79.3214, 38.0465, -22.9196, 0.72", "-80.7942, 38.2483, -23.3412, 0.72", "-81.8992, 38.384, -23.6706, 0.72", "-83.267, 38.5479, -24.0957, 0.72", "-85.3665, 38.8389, -24.7658, 0.72", "-87.6274, 39.2061, -25.4702, 1.2" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-0.088344, 56.4071, 3.75338, 1.32", "-0.508613, 57.1675, 4.05006, 1.32", "-1.10105, 58.1456, 4.38581, 1.32", "-1.90763, 59.4814, 4.81997, 1.08", "-2.40585, 60.3423, 5.08231, 1.08", "-2.68896, 60.8695, 5.22911, 1.08", "-3.09807, 61.6847, 5.437, 1.08", "-3.55762, 62.5881, 5.60234, 1.08", "-3.7738, 63.0078, 5.6668, 1.08", "-4.03074, 63.5347, 5.71924, 1.08", "-4.37533, 64.2062, 5.78096, 1.08", "-4.64157, 64.6483, 5.82648, 1.08", "-4.94649, 65.0167, 5.87098, 1.08", "-5.32841, 65.3212, 5.91363, 1.08", "-5.9134, 65.7112, 5.96627, 1.08", "-6.65014, 66.1802, 6.04291, 1.08", "-7.30034, 66.6105, 6.12049, 1.08", "-7.99584, 67.1453, 6.21798, 1.08", "-8.61944, 67.8284, 6.22459, 0.96", "-8.80415, 68.322, 6.12989, 0.96", "-8.86008, 69.0784, 5.8936, 0.96", "-8.8352, 69.6969, 5.68139, 0.96", "-8.78505, 70.2312, 5.49333, 0.96", "-8.53802, 72.2701, 4.76103, 0.72", "-8.44724, 73.1137, 4.43949, 0.72", "-8.41008, 73.8396, 4.15868, 0.72", "-8.40397, 74.6172, 3.88053, 0.72", "-8.44151, 75.9334, 3.49488, 0.72", "-8.47815, 76.5885, 3.35299, 0.72", "-8.54177, 77.2042, 3.28979, 0.72", "-8.66791, 78.0913, 3.16727, 0.72", "-8.87113, 79.4594, 2.9563, 0.72", "-9.05807, 80.438, 2.80019, 0.72", "-9.269, 81.2553, 2.67202, 0.72", "-9.681, 82.5106, 2.47809, 1.2", "-10.5551, 84.427, 2.19962, 1.08", "-11.1206, 85.2709, 2.09831, 1.08", "-11.7519, 85.9996, 2.03083, 1.08", "-12.2313, 86.5008, 2.00935, 1.08", "-12.678, 86.9432, 1.99117, 0.72", "-13.9552, 88.1841, 1.92368, 1.2", "-15.3257, 89.5042, 1.88343, 1.08", "-16.4793, 90.6437, 1.85407, 1.44", "-17.0458, 91.2894, 1.84038, 1.44", "-17.8989, 92.5054, 1.81748, 1.2", "-18.3661, 93.3691, 1.80625, 1.2", "-18.8566, 94.655, 1.81455, 1.08", "-19.2221, 96.1419, 1.86424, 1.08", "-19.4969, 97.617, 1.97147, 0.96", "-19.7223, 99.0963, 2.12669, 0.96", "-19.8136, 99.8682, 2.24348, 1.2", "-19.8929, 100.795, 2.33507, 0.72", "-19.9395, 102.64, 2.37743, 1.2", "-19.938, 103.129, 2.34518, 1.2", "-19.9831, 104.095, 2.22254, 1.2", "-20.1099, 105.047, 2.04449, 1.2", "-20.4963, 106.871, 1.5898, 1.2", "-20.7648, 107.685, 1.32685, 1.2", "-21.0197, 108.189, 1.13409, 1.2", "-21.7693, 109.194, 0.77957, 0.96", "-22.3945, 109.773, 0.637567, 1.2", "-22.8081, 110.098, 0.601634, 1.2", "-23.5115, 110.615, 0.604686, 1.2", "-23.952, 110.946, 0.607012, 1.2", "-25.0337, 111.839, 0.61379, 1.2", "-26.2524, 113.042, 0.622626, 1.2", "-26.8994, 113.802, 0.627497, 1.2", "-27.3143, 114.346, 0.630345, 1.2", "-27.7609, 115.021, 0.633268, 1.2", "-28.1389, 115.674, 0.635566, 1.2", "-28.7271, 116.934, 0.6388, 0.84", "-29.2437, 118.211, 0.656965, 1.32", "-29.9709, 120.118, 0.703173, 0.84", "-30.3298, 121.075, 0.735097, 0.84", "-30.6113, 121.826, 0.766305, 0.84", "-30.9893, 122.848, 0.816281, 0.84", "-31.4488, 124.014, 0.908419, 0.84", "-31.7457, 124.667, 0.977456, 0.84", "-32.2034, 125.44, 1.02817, 0.84", "-32.5408, 125.873, 1.03445, 0.84", "-33.1882, 126.527, 1.01082, 1.2", "-34.2433, 127.411, 0.906178, 0.84", "-35.2285, 128.127, 0.788606, 0.84", "-36.3856, 128.857, 0.661413, 1.2", "-37.3387, 129.291, 0.573947, 0.6", "-38.5008, 129.757, 0.463022, 0.6", "-39.7383, 130.168, 0.340312, 1.08", "-41.1615, 130.541, 0.193616, 0.48", "-41.9752, 130.698, 0.148504, 0.48", "-44.3596, 131.029, 0.227453, 0.84", "-48.1099, 137.001, 1.10329, 0.84", "-51.7928, 143.067, 0.961115, 0.84", "-54.5865, 149.543, 0.701692, 0.84", "-57.5844, 155.838, -0.505854, 0.84", "-60.38, 162.227, -1.65041, 0.84" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-0.088344, 56.4071, 3.75338, 1.32", "-2.98472, 59.1845, 3.02824, 1.32", "-3.9698, 60.1884, 2.69606, 1.32", "-5.13533, 61.5196, 2.20034, 1.32", "-6.25537, 63.0332, 1.58315, 1.32", "-6.8762, 63.9566, 1.19756, 1.32", "-7.74757, 65.5699, 0.553238, 1.32", "-8.28888, 67.2459, -0.156319, 1.32", "-8.59455, 69.2341, -0.964031, 1.56", "-8.51195, 71.2113, -1.73238, 1.56", "-8.33885, 71.915, -1.96246, 1.56", "-7.14701, 74.6968, -2.78718, 1.2", "-6.56396, 75.631, -3.03516, 1.2", "-5.49828, 76.9129, -3.38433, 1.2", "-3.70189, 78.6292, -3.92456, 1.08", "-2.32683, 79.7415, -4.33346, 1.08", "-1.45131, 80.3732, -4.64775, 1.08", "-0.61308, 80.9474, -5.03621, 1.08", "0.23068, 81.6102, -5.54804, 1.08", "1.75593, 83.0518, -6.75933, 1.8", "2.03387, 83.4128, -7.07623, 1.8", "3.02044, 85.3763, -8.75699, 1.32", "3.34975, 86.5231, -9.71064, 1.32", "3.40645, 87.9935, -10.8877, 1.08", "3.28859, 88.4168, -11.1993, 1.08", "2.68591, 89.4724, -11.8545, 1.08", "1.90984, 90.5842, -12.4713, 1.44", "1.25746, 91.3947, -12.8848, 1.44", "0.454616, 92.3746, -13.3962, 1.44", "-0.226459, 93.2359, -13.8978, 1.44", "-1.53665, 95.146, -15.1116, 0.84", "-2.18254, 96.2913, -15.8553, 0.84", "-3.16618, 98.6655, -17.4574, 1.44", "-3.56777, 100.025, -18.2126, 1.44", "-3.9745, 102.071, -19.1434, 0.96", "-4.32263, 104.176, -20.0745, 0.96", "-4.49581, 105.249, -20.5247, 0.96", "-4.64258, 106.843, -21.0599, 0.72", "-4.48912, 111.043, -21.9089, 1.2", "-4.27014, 112.859, -22.0547, 1.2" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-57.8047, 61.7843, 40.3317, 0.6", "-63.1105, 68.4997, 43.6571, 0.6", "-67.1436, 76.3733, 45.7621, 0.6", "-70.2723, 84.1374, 49.2587, 0.6", "-74.8197, 91.177, 52.919, 0.6", "-78.4563, 98.2938, 57.3112, 0.6", "-82.7091, 105.212, 61.5147, 0.6", "-87.1775, 112.625, 64.4044, 0.6", "-93.0247, 119.462, 66.3119, 0.6", "-98.8378, 126.064, 69.015, 0.6", "-103.275, 132.893, 73.1942, 0.6", "-107.852, 140.487, 75.339, 0.6", "-111.278, 148.339, 78.3328, 0.6", "-115.299, 155.668, 81.9699, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-57.8047, 61.7843, 40.3317, 0.84", "-67.0175, 67.343, 45.2365, 0.6", "-74.6243, 74.7389, 50.1989, 0.6", "-79.9822, 83.2899, 55.8802, 0.6", "-84.4648, 92.3368, 61.4544, 0.6", "-89.6895, 100.708, 67.508, 0.6", "-97.4362, 108.365, 71.8308, 0.6", "-104.419, 117.015, 75.3915, 0.6", "-111.274, 125.502, 79.5161, 0.6", "-117.51, 134.513, 83.4018, 0.6", "-123.571, 143.288, 88.0036, 0.6", "-128.623, 153.385, 90.5786, 0.6", "-133.0, 163.55, 93.8424, 0.6", "-136.376, 173.994, 97.2515, 0.6" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-48.9329, -204.903, 4.7379, 0.96", "-50.2933, -204.337, 5.86801, 0.96", "-51.3286, -203.906, 6.72805, 0.96", "-52.0644, -203.6, 7.33926, 0.72", "-52.6059, -203.375, 7.78914, 0.72", "-53.0658, -203.184, 8.17115, 0.72", "-53.8486, -202.858, 8.82149, 1.08" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-48.9329, -204.903, 4.7379, 0.96", "-50.9333, -208.424, 4.39001, 0.96", "-51.8528, -209.666, 3.95199, 0.96", "-52.8765, -211.102, 3.31306, 1.32", "-54.069, -212.994, 2.4888, 0.6", "-54.7383, -214.125, 1.87295, 0.6", "-55.4652, -215.478, 1.10801, 1.2", "-57.5616, -219.806, -1.32034, 1.2", "-58.2713, -221.263, -2.1771, 1.56", "-59.2311, -223.354, -3.41834, 0.96", "-60.7509, -227.161, -5.59547, 0.6", "-61.3362, -228.902, -6.46644, 1.08", "-61.8597, -230.508, -7.2074, 0.72", "-62.1537, -231.336, -7.49861, 0.72", "-62.6583, -232.468, -7.8656, 1.08", "-63.2674, -233.693, -8.20622, 0.72", "-63.988, -235.093, -8.45047, 0.72", "-66.0032, -238.749, -9.04682, 0.48", "-66.753, -240.067, -9.23849, 1.56", "-68.0981, -242.36, -9.46817, 1.08", "-68.6534, -243.266, -9.5047, 0.72", "-69.7304, -245.012, -9.46678, 1.08", "-70.7416, -246.64, -9.38925, 0.72", "-71.2311, -247.493, -9.30739, 0.72", "-72.4185, -249.571, -9.20802, 1.2", "-73.3383, -251.223, -9.20948, 0.72", "-73.7481, -251.973, -9.23396, 0.72", "-74.8485, -254.239, -9.39063, 0.72", "-75.4086, -255.575, -9.69685, 1.08", "-75.8193, -256.749, -10.0434, 0.96", "-76.0813, -257.634, -10.3271, 0.96", "-76.336, -258.659, -10.651, 0.96", "-76.7304, -260.561, -11.1974, 0.96", "-77.4252, -264.73, -12.2323, 1.2", "-77.8411, -267.639, -12.9648, 0.6", "-78.0356, -269.587, -13.4522, 0.6", "-78.0839, -270.695, -13.708, 0.6", "-78.0635, -271.955, -13.9579, 0.6", "-78.0326, -272.823, -14.0453, 0.6", "-77.9967, -273.533, -14.0389, 0.6", "-77.9525, -274.531, -14.0434, 0.6", "-77.9284, -276.798, -14.1626, 0.6", "-77.9439, -277.571, -14.2234, 0.6", "-78.1319, -281.996, -14.637, 0.96", "-78.2555, -284.107, -14.8448, 0.48", "-78.3637, -285.434, -14.9719, 0.48", "-78.7105, -288.557, -15.2401, 0.72", "-78.9511, -290.415, -15.3827, 0.48", "-79.127, -291.888, -15.4256, 1.2", "-79.4642, -294.664, -15.3696, 0.84", "-79.6955, -296.338, -15.2471, 1.32", "-80.0793, -298.724, -14.9537, 0.84", "-80.4132, -300.545, -14.6338, 1.44", "-81.2848, -304.6, -13.7644, 0.48", "-81.7735, -306.678, -13.2643, 0.48", "-82.5307, -309.343, -12.532, 0.48", "-83.0722, -310.909, -12.0502, 0.48", "-83.6969, -312.329, -11.5469, 0.96", "-85.4608, -315.35, -10.3173, 0.48", "-85.8524, -315.907, -10.0758, 0.84", "-87.1801, -317.577, -9.24107, 0.6", "-88.1729, -318.605, -8.61944, 0.84", "-89.3596, -319.649, -7.89519, 0.6", "-90.7486, -320.604, -7.11852, 1.2" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "2.78521, -39.2132, 9.51578, 0.96", "2.17894, -40.3489, 9.83516, 0.96", "1.67765, -41.5671, 10.0904, 0.96", "1.54259, -42.0356, 10.2402, 0.96", "1.32239, -42.8815, 10.6095, 0.96", "1.12577, -43.6464, 11.0122, 0.96", "0.912118, -44.5085, 11.5629, 0.96", "0.646951, -45.8602, 12.5395, 1.32", "0.330344, -47.5303, 13.8554, 0.84", "0.150791, -48.6315, 14.7651, 0.84", "0.057324, -49.3716, 15.4096, 0.84", "-0.124511, -50.9525, 16.8972, 1.32", "-0.260688, -51.8726, 17.8637, 1.32", "-0.428598, -52.6908, 18.8116, 1.32" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.78521, -39.2132, 9.51578, 1.44", "3.32863, -43.6256, 9.80539, 1.44", "3.71153, -46.7841, 9.98575, 1.44", "3.94745, -48.6738, 10.0809, 1.44", "4.42258, -52.6273, 10.2429, 1.8", "4.6206, -54.2751, 10.3105, 1.8", "4.81602, -55.9012, 10.3771, 1.8", "4.98264, -57.2573, 10.3878, 1.8", "5.29701, -60.0428, 10.4001, 1.56", "5.62557, -63.0125, 10.4136, 1.56" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "14.2776, -59.7076, 7.27227, 1.56", "17.7006, -62.8735, 7.62155, 1.56", "19.7628, -64.8138, 7.8298, 1.56", "22.3174, -67.2111, 8.08819, 1.2", "23.8574, -68.6522, 8.24423, 1.2", "26.1629, -70.7923, 8.47896, 1.56", "29.468, -73.9215, 8.81145, 1.2", "30.9655, -75.393, 8.95853, 1.8", "32.5483, -76.9709, 9.11251, 1.8", "35.6292, -80.1264, 9.43753, 1.08", "37.7994, -82.4032, 9.68146, 1.68", "40.2956, -85.0955, 9.93279, 1.32", "41.9216, -86.9042, 10.079, 1.32", "42.9228, -88.0352, 10.1602, 1.32", "45.2767, -90.7929, 10.3258, 1.08", "46.9097, -92.8023, 10.3814, 1.56", "49.343, -95.998, 10.4548, 1.2", "50.1955, -97.1655, 10.4796, 1.2", "51.0009, -98.2899, 10.5241, 1.2", "52.5703, -100.492, 10.6468, 1.68", "53.8676, -102.323, 10.8327, 1.2", "55.5013, -104.61, 11.1814, 0.96", "56.5662, -105.999, 11.47, 0.96", "59.3809, -109.38, 12.263, 0.84", "60.8077, -111.007, 12.6881, 0.84", "63.0302, -113.402, 13.3873, 1.44", "64.2054, -114.618, 13.7711, 1.44", "66.342, -116.79, 14.4066, 1.44", "67.5809, -118.12, 14.7701, 0.96", "68.9357, -119.68, 15.1344, 1.44", "69.4178, -120.246, 15.2503, 1.44", "70.6504, -121.721, 15.4841, 1.44", "71.6019, -122.913, 15.6559, 1.44", "73.3489, -125.149, 15.9389, 1.08", "74.9545, -127.133, 16.1639, 1.08", "75.9212, -128.226, 16.2783, 1.08", "77.8514, -130.226, 16.4929, 1.44", "78.8045, -131.147, 16.6048, 1.44", "81.2525, -133.505, 16.9226, 0.84", "82.8321, -135.062, 17.1385, 1.56", "85.4924, -137.794, 17.5154, 1.08", "86.7799, -139.146, 17.7017, 1.32", "90.6255, -142.856, 18.2707, 1.08", "92.5649, -144.596, 18.5822, 1.08", "94.2405, -146.005, 18.8644, 1.08", "96.708, -147.929, 19.2856, 1.08", "98.4056, -149.186, 19.5161, 1.08", "103.556, -152.843, 20.0289, 1.44", "107.099, -155.278, 20.2485, 1.08", "109.3, -156.799, 20.3296, 1.08", "112.83, -159.368, 20.4185, 1.08", "116.852, -162.353, 20.4546, 0.72", "119.912, -164.761, 20.4027, 1.32", "122.084, -166.71, 20.2474, 0.84", "123.432, -167.997, 20.0765, 0.84", "125.713, -170.437, 19.7078, 1.68" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "14.2776, -59.7076, 7.27227, 1.68", "14.4916, -62.2528, 7.26407, 1.68", "14.7442, -64.498, 7.25916, 1.68", "14.9274, -65.7844, 7.25606, 1.68", "15.5678, -69.4921, 7.24364, 1.32", "16.0414, -71.9546, 7.23033, 1.56", "16.5885, -75.1366, 7.20093, 1.56", "16.7932, -76.3352, 7.18085, 1.56", "17.0386, -78.1764, 7.14489, 1.56", "17.2466, -80.3959, 7.09486, 1.56", "17.4555, -83.5471, 7.01451, 1.2", "17.6798, -87.9813, 6.88829, 1.56", "17.8112, -91.07, 6.82242, 1.2", "17.9891, -94.9514, 6.77011, 1.2", "18.1007, -97.2006, 6.72997, 1.56", "18.2402, -99.7925, 6.65252, 1.56", "18.3897, -101.881, 6.55526, 1.56", "18.7209, -105.098, 6.43466, 1.2", "18.9928, -107.895, 6.34936, 1.56", "19.265, -111.073, 6.26904, 1.44", "19.4059, -113.303, 6.21984, 1.44", "19.4619, -114.906, 6.18758, 1.44", "19.6033, -120.306, 6.08729, 1.08", "19.6837, -123.21, 5.96048, 1.08", "19.7919, -125.813, 5.78859, 1.44", "19.8658, -126.974, 5.69519, 1.44", "20.0126, -128.66, 5.51875, 1.44", "20.277, -131.061, 5.16044, 1.44", "20.7751, -134.43, 4.38604, 1.32", "21.2335, -136.761, 3.79147, 1.32", "21.5056, -137.995, 3.45762, 1.32", "21.7136, -139.018, 3.19095, 1.32", "22.0266, -140.823, 2.76361, 1.32", "22.1662, -141.902, 2.55363, 1.32", "22.3194, -143.172, 2.36246, 1.32", "22.6326, -145.838, 1.94869, 1.8", "22.9081, -148.403, 1.53256, 1.8", "23.1366, -150.635, 1.23847, 1.8", "23.34, -152.866, 1.00113, 1.8", "23.6112, -156.501, 0.693325, 1.56", "23.8188, -160.197, 0.445515, 1.56", "23.8848, -161.971, 0.358518, 1.56", "23.9878, -165.756, 0.254736, 1.32", "24.0193, -167.533, 0.24235, 1.32", "24.0287, -170.723, 0.289148, 1.8", "23.9762, -173.524, 0.403382, 1.8", "23.9578, -176.393, 0.554299, 1.56", "24.0426, -179.093, 0.658997, 1.56", "24.1775, -180.906, 0.684839, 1.56", "24.3257, -182.216, 0.702821, 1.56", "24.4953, -183.557, 0.70175, 1.56", "24.735, -185.495, 0.661958, 1.56", "24.9926, -187.881, 0.566103, 1.2", "25.1724, -190.17, 0.407918, 1.2", "25.2589, -191.748, 0.269977, 1.2", "25.3353, -194.692, -0.04655, 1.56", "25.3648, -197.523, -0.408901, 1.56", "25.3761, -199.287, -0.660359, 1.56", "25.4382, -201.607, -1.00023, 1.56", "25.5269, -203.811, -1.34227, 1.56", "25.7843, -208.154, -2.04685, 1.56", "26.2019, -213.141, -2.89856, 1.32", "26.5864, -217.291, -3.65492, 1.32", "26.7959, -219.526, -4.06802, 0.84", "27.009, -221.822, -4.48987, 1.32", "27.2716, -224.547, -4.99415, 1.08", "27.5647, -227.1, -5.49291, 1.44", "27.8762, -229.792, -6.06746, 1.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "8.89542, 41.6004, 17.3497, 1.2", "7.22904, 44.2767, 18.0993, 1.2", "6.60077, 45.4982, 18.5159, 1.2", "6.13812, 46.5631, 18.9174, 1.2", "5.41789, 48.7462, 19.8997, 1.2", "5.13725, 49.9219, 20.4635, 1.2", "4.95638, 51.052, 21.0167, 1.08", "4.90403, 52.8523, 21.9751, 1.56", "4.94844, 54.0629, 22.6252, 1.56", "5.20758, 56.7323, 23.9973, 1.2", "5.46117, 58.4508, 24.8042, 0.96", "5.72568, 60.3328, 25.5771, 1.32", "5.80666, 61.1913, 25.9015, 1.32", "5.84807, 62.148, 26.2192, 1.32", "5.86798, 63.574, 26.6097, 1.32", "5.85953, 64.3739, 26.7927, 1.32", "5.86363, 65.9345, 27.1564, 1.2", "5.92199, 67.5573, 27.5852, 1.56", "5.97855, 68.6411, 27.8895, 1.2", "6.10836, 70.3104, 28.3977, 1.68", "6.39834, 72.5758, 29.1424, 1.2", "6.57879, 73.4821, 29.4582, 1.44", "7.05989, 74.9849, 29.9941, 1.08" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "8.89542, 41.6004, 17.3497, 1.44", "8.84643, 45.7675, 16.9024, 1.44", "8.82397, 47.6781, 16.6973, 1.44", "8.79801, 49.887, 16.4602, 1.44", "8.76812, 52.429, 16.1873, 1.44", "8.73195, 55.5066, 15.8569, 1.8", "8.70134, 58.1101, 15.5775, 1.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-0.428598, -52.6908, 18.8116, 0.96", "-1.08916, -55.0817, 19.5292, 0.96", "-1.55461, -56.5504, 19.9242, 0.96", "-1.84873, -57.5022, 20.1499, 0.96", "-2.07544, -58.2243, 20.3161, 0.96", "-2.33304, -59.0453, 20.4936, 0.96", "-2.75437, -60.533, 20.7941, 0.6", "-2.91092, -60.9894, 20.8732, 0.6", "-3.19858, -61.8011, 21.0349, 1.08", "-3.81621, -63.4921, 21.4395, 0.72", "-4.29128, -64.7593, 21.7723, 0.72", "-5.05177, -66.7122, 22.3028, 0.72", "-5.84067, -68.5743, 22.8174, 1.2", "-6.32004, -69.5817, 23.0985, 1.08", "-6.97811, -70.7745, 23.4343, 0.48", "-7.82464, -72.1569, 23.804, 0.48", "-8.82686, -73.6762, 24.1874, 1.44", "-9.61462, -74.8237, 24.4406, 0.84", "-10.0242, -75.4781, 24.556, 1.08", "-10.6431, -76.5397, 24.7069, 1.08", "-11.424, -78.0262, 24.8847, 1.44", "-11.9527, -79.1369, 25.0209, 0.84", "-12.2911, -79.9578, 25.1481, 1.32", "-12.7632, -81.3438, 25.392, 0.72", "-12.9859, -82.0331, 25.5268, 0.72", "-13.1984, -82.6468, 25.6724, 0.72", "-13.6355, -83.5271, 25.9427, 0.72", "-14.3864, -84.4524, 26.3181, 1.08", "-15.1344, -85.1959, 26.6688, 0.6", "-16.1246, -85.9444, 27.0908, 1.08", "-16.8968, -86.4112, 27.3994, 0.96", "-18.233, -87.0235, 27.8823, 0.84", "-19.6525, -87.4425, 28.3143, 0.84", "-22.3159, -93.6928, 29.2353, 0.84" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-0.428598, -52.6908, 18.8116, 0.84", "-1.2413, -54.4735, 20.2405, 0.84", "-1.82997, -55.749, 21.2298, 0.84", "-2.09681, -56.3602, 21.6658, 0.84", "-3.00759, -58.6922, 23.211, 0.48", "-3.47754, -59.9897, 24.013, 0.48", "-4.25283, -62.2465, 25.2896, 0.84", "-4.71235, -63.6829, 25.9803, 0.84", "-5.15873, -65.0546, 26.5508, 0.84", "-6.12342, -68.1373, 27.6582, 0.84", "-6.46502, -69.3107, 28.0065, 0.84", "-7.01202, -71.4296, 28.5534, 0.6", "-7.37045, -72.7833, 28.8657, 1.08", "-7.92974, -74.566, 29.2804, 1.08", "-8.39794, -75.8523, 29.5988, 1.56", "-9.04904, -77.3762, 29.9788, 1.56", "-9.58743, -78.5698, 30.2991, 1.08", "-10.5922, -80.6957, 30.9217, 0.72", "-11.258, -82.0482, 31.3461, 1.32", "-11.8515, -83.1868, 31.7298, 1.32", "-12.7525, -84.76, 32.2974, 0.72", "-13.745, -86.3785, 32.891, 0.72", "-19.1863, -95.941, 37.4636, 0.72", "-23.1949, -106.105, 42.0907, 0.72", "-27.548, -115.637, 47.7713, 0.72", "-31.9234, -125.181, 53.4112, 0.72", "-34.7823, -134.923, 59.6274, 0.72", "-35.4685, -144.623, 66.5186, 0.72", "-36.313, -155.263, 71.6294, 0.72", "-36.7911, -166.73, 74.1957, 0.72", "-36.7021, -178.03, 77.5168, 0.72", "-37.9115, -189.362, 80.4571, 0.72", "-41.6455, -200.443, 81.9372, 0.72", "-45.7692, -211.429, 83.1314, 0.72", "-47.9135, -222.854, 84.9043, 0.72", "-48.8372, -234.239, 87.7225, 0.72" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "5.62557, -63.0125, 10.4136, 1.08", "7.18499, -63.723, 6.71281, 1.08", "8.34094, -64.3985, 4.23146, 1.08", "8.6701, -64.6534, 3.53981, 1.08", "8.92789, -64.9374, 2.91017, 1.08", "9.07293, -65.131, 2.5398, 1.08", "9.62028, -66.0037, 1.03562, 1.44", "9.92495, -66.7427, 0.00356603, 1.44", "10.1432, -67.6126, -1.07358, 1.44", "10.3847, -69.0187, -2.71029, 1.44", "10.4424, -69.5668, -3.29156, 1.44", "10.5222, -71.0278, -4.65756, 1.2", "10.5201, -73.3886, -6.5856, 1.2", "10.4975, -75.0014, -7.82607, 1.68", "10.4495, -76.7442, -9.16829, 0.72", "10.3834, -78.0566, -10.1463, 0.72", "10.2403, -79.4996, -11.3197, 1.44", "10.0747, -80.5289, -12.2382, 1.44", "9.64952, -82.401, -14.3574, 0.96", "9.17498, -84.0496, -16.9958, 1.68", "8.99218, -84.5673, -18.0687, 1.68", "8.59419, -85.6167, -20.7379, 1.68", "8.30228, -86.3677, -22.8987, 1.68", "7.8629, -87.5288, -26.345, 1.68", "7.37584, -88.827, -30.0612, 1.68", "7.00735, -89.8202, -32.7695, 1.2", "6.63439, -90.9125, -35.4781, 0.84", "6.48072, -91.4463, -36.5854, 1.44", "6.34152, -92.0074, -37.5485, 0.72", "6.00527, -93.4141, -39.5707, 1.32", "5.47703, -95.7731, -42.5036, 0.6", "5.35738, -96.3638, -43.1883, 0.6", "5.18277, -97.1713, -44.0794, 0.96", "5.03257, -97.8484, -44.8595, 0.96", "4.48125, -100.509, -48.1421, 0.6", "4.35318, -101.481, -49.3271, 1.2" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "5.62557, -63.0125, 10.4136, 1.32", "5.64525, -63.1106, 10.3993, 1.32", "6.22592, -65.6816, 10.0607, 1.32", "6.95028, -68.6678, 9.71389, 1.68", "7.41427, -70.5694, 9.52197, 2.04", "7.81534, -72.2559, 9.36923, 1.68", "8.13832, -73.6491, 9.25693, 1.68", "8.33131, -74.4919, 9.20719, 1.68", "8.58498, -75.6192, 9.17026, 1.68", "8.9324, -77.3356, 9.14281, 2.04", "9.09658, -78.326, 9.15423, 1.68", "9.26297, -79.619, 9.18504, 1.68", "9.41709, -81.0123, 9.24821, 1.68", "9.5966, -82.5924, 9.34676, 1.56", "9.77883, -84.054, 9.45508, 1.56", "10.1866, -86.9867, 9.69766, 1.56", "10.5476, -89.3719, 9.90921, 1.8", "11.166, -93.1813, 10.2614, 1.56", "11.8068, -96.9921, 10.6045, 1.44", "12.0804, -98.6125, 10.742, 1.92", "12.4068, -100.577, 10.8885, 1.8", "12.6386, -102.092, 10.9763, 1.68", "12.8791, -103.988, 11.0568, 2.04", "13.6634, -111.756, 11.1067, 1.8", "13.8427, -114.129, 11.0506, 1.8", "13.9215, -115.418, 10.9949, 1.68", "13.9781, -116.635, 10.9192, 1.68", "14.0936, -120.008, 10.6486, 1.68", "14.1457, -121.844, 10.4158, 1.68", "14.1933, -123.382, 10.1482, 1.68", "14.2757, -125.406, 9.78451, 1.32", "14.4014, -127.831, 9.35939, 1.32", "14.5572, -130.36, 8.93441, 1.32", "14.859, -134.388, 8.30122, 1.32", "15.081, -137.113, 7.92178, 1.8", "15.2227, -138.932, 7.69587, 1.8", "15.3308, -140.395, 7.54183, 1.8", "15.4225, -141.681, 7.44339, 1.8", "15.5698, -144.074, 7.36014, 1.68", "15.7811, -147.512, 7.31408, 2.04", "15.9962, -150.218, 7.24284, 2.04", "16.1919, -152.438, 7.17323, 1.8", "16.4704, -155.256, 7.08036, 1.56", "16.7815, -158.113, 6.9865, 1.92", "17.1567, -161.742, 6.85029, 1.56", "17.4324, -164.567, 6.7172, 1.32", "17.7349, -167.755, 6.51626, 1.32", "17.8639, -169.271, 6.42006, 1.32", "17.973, -170.596, 6.3435, 1.2", "18.182, -173.665, 6.19578, 1.68", "18.3115, -176.507, 6.18912, 1.68", "18.352, -178.336, 6.19647, 1.68", "18.3793, -179.894, 6.19408, 1.68", "18.3883, -181.63, 6.19247, 1.68", "18.4027, -182.367, 6.20093, 1.68", "18.7818, -187.069, 6.42556, 2.16" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "125.713, -170.437, 19.7078, 0.84", "128.211, -170.01, 21.5754, 0.84", "130.145, -169.65, 23.1254, 0.84", "131.635, -169.376, 24.3907, 1.32", "134.047, -168.967, 26.5806, 1.32", "135.919, -168.67, 28.3856, 1.68", "138.225, -168.249, 30.7102, 1.2", "139.397, -168.044, 32.0329, 0.96", "140.857, -167.706, 33.8971, 1.44", "142.538, -167.165, 36.2806, 0.84", "143.279, -166.812, 37.5192, 0.84", "143.926, -166.354, 38.9039, 0.84", "144.255, -165.92, 40.0329, 0.84", "144.549, -165.29, 41.4519, 0.84", "144.684, -164.556, 42.8552, 0.84", "144.666, -163.526, 44.5669, 1.08", "144.562, -162.3, 46.5643, 0.72", "144.366, -160.825, 49.2356, 1.2", "152.643, -157.322, 56.9283, 1.2", "160.913, -152.311, 63.6484, 1.2", "169.154, -146.066, 69.1671, 1.2", "175.087, -138.738, 75.9754, 1.2", "182.339, -132.769, 82.9848, 1.2", "188.758, -125.878, 89.8634, 1.2", "196.448, -118.579, 94.7114, 1.2", "203.597, -111.188, 100.176, 1.2", "209.408, -103.058, 106.026, 1.2", "214.945, -93.8942, 110.253, 1.2", "219.033, -84.5715, 115.549, 1.2", "221.744, -74.2979, 119.646, 1.2", "224.425, -64.063, 123.864, 1.2", "227.319, -53.7044, 127.6, 1.2", "231.52, -44.4863, 133.008, 1.2", "235.671, -34.9989, 137.926, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "125.713, -170.437, 19.7078, 0.84", "127.076, -172.743, 20.2226, 0.84", "128.553, -175.145, 20.7409, 0.6", "129.513, -176.726, 21.0565, 1.32", "131.024, -179.212, 21.5528, 0.84", "132.0, -180.819, 21.8738, 0.72", "132.778, -182.099, 22.1294, 1.08", "133.754, -183.776, 22.4359, 0.72", "134.662, -185.374, 22.8047, 1.2", "140.991, -193.793, 24.0629, 1.2", "147.658, -201.603, 26.9065, 1.2", "154.065, -208.729, 31.6834, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "27.8762, -229.792, -6.06746, 0.96", "29.6475, -231.827, -4.55407, 0.96", "30.6495, -233.176, -3.57488, 0.96", "32.4489, -235.782, -1.68083, 1.44", "33.7776, -237.668, -0.220177, 0.96", "34.8155, -239.153, 0.930045, 0.96", "35.6642, -240.403, 1.87436, 0.96", "36.3872, -241.549, 2.71058, 0.96", "37.2171, -243.012, 3.80591, 1.08", "38.226, -245.03, 5.23484, 1.08", "38.7245, -246.04, 5.91973, 1.08", "39.1935, -246.907, 6.4829, 1.08", "40.2962, -249.014, 7.92435, 1.08", "41.2311, -251.131, 9.37783, 0.84", "41.7519, -252.9, 10.5538, 1.2", "41.9448, -254.305, 11.4207, 1.2", "42.0135, -255.467, 12.1313, 1.2", "42.0507, -258.316, 13.8948, 0.96", "42.0049, -259.816, 14.8143, 0.96", "42.0231, -261.202, 15.6586, 0.96", "42.0857, -262.974, 16.6956, 0.72", "42.1146, -264.081, 17.2939, 0.72", "42.239, -265.674, 18.1194, 0.72", "42.6813, -267.666, 19.0475, 1.2", "43.6531, -270.597, 20.5649, 0.84", "44.1632, -271.812, 21.2519, 0.84", "44.7243, -273.092, 22.0426, 0.84", "47.7089, -280.555, 26.9806, 0.84" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.8762, -229.792, -6.06746, 1.32", "28.5087, -232.952, -5.96675, 1.32", "28.849, -234.911, -5.94318, 1.32", "29.1341, -236.82, -5.94411, 1.32", "29.3018, -238.244, -5.96086, 1.32", "29.6727, -241.274, -6.00735, 1.68", "30.0312, -243.801, -6.04543, 1.68", "30.3174, -245.648, -6.15171, 1.68", "30.6017, -247.386, -6.27076, 1.68", "31.089, -250.313, -6.49616, 1.2", "31.4176, -252.238, -6.66135, 1.2", "31.9647, -255.143, -6.92457, 1.2", "32.6674, -258.44, -7.26872, 1.56", "33.0517, -260.095, -7.45574, 1.56", "33.3991, -261.521, -7.62492, 1.56", "33.7897, -263.019, -7.80638, 1.56", "34.4054, -265.628, -8.00562, 1.44", "35.0114, -268.273, -8.17177, 1.44", "35.3022, -269.474, -8.20324, 1.44", "35.6665, -270.932, -8.22545, 1.44", "36.1061, -272.608, -8.21477, 1.44", "36.876, -275.327, -8.08152, 0.96" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "7.05989, 74.9849, 29.9941, 1.44", "5.17683, 72.8482, 30.1518, 1.44", "4.43757, 72.1155, 30.2555, 1.2", "2.84566, 70.8322, 30.478, 0.96", "1.41319, 69.6775, 30.6783, 0.96", "0.426097, 68.8817, 30.8163, 0.96", "-0.624453, 68.0349, 30.9632, 0.96", "-1.68226, 67.0838, 30.9816, 0.96", "-3.69183, 65.4607, 31.0866, 1.2", "-14.096, 56.5456, 29.9966, 1.2", "-23.4499, 46.582, 30.0738, 1.2", "-32.8194, 36.7248, 28.6416, 1.2" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "7.05989, 74.9849, 29.9941, 0.96", "7.8825, 73.6803, 30.2251, 0.96", "8.82898, 72.1793, 30.4909, 0.96", "9.53294, 71.0629, 30.6885, 1.2", "9.92268, 70.4448, 30.798, 1.2", "11.209, 68.4049, 31.1591, 0.84", "11.7856, 67.4905, 31.3211, 0.84" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "8.70134, 58.1101, 15.5775, 1.44", "9.80172, 60.911, 16.1012, 1.44", "10.6384, 63.1109, 16.4844, 1.44", "11.0616, 64.2633, 16.683, 1.44", "12.0064, 66.9423, 17.1916, 1.44", "13.1445, 70.1132, 17.8672, 1.32", "13.8658, 71.9311, 18.197, 1.32", "14.7927, 73.929, 18.4843, 1.32", "15.6369, 75.5418, 18.6842, 1.56", "16.543, 77.0744, 18.8296, 1.56", "17.8644, 79.0474, 18.9606, 1.32", "20.3309, 82.3119, 19.1418, 1.32", "21.913, 84.1921, 19.2323, 1.32", "23.2954, 85.7051, 19.2042, 1.32", "24.8457, 87.3221, 19.0763, 1.56", "25.7204, 88.252, 18.9417, 1.56", "27.843, 90.5688, 18.5108, 1.2", "28.9703, 91.8275, 18.284, 1.2", "31.1722, 94.3376, 17.779, 1.44", "32.3351, 95.7122, 17.4495, 1.92", "34.5693, 98.5724, 16.8758, 1.56", "35.954, 100.474, 16.5649, 1.32", "37.9479, 103.459, 16.1719, 1.32", "39.5215, 105.989, 16.004, 1.32", "41.0578, 108.635, 16.0326, 1.56", "43.0518, 112.49, 16.2659, 1.2", "43.6526, 113.858, 16.4332, 1.2", "43.97, 114.834, 16.5917, 1.2", "44.2471, 116.15, 16.87, 0.96", "44.3623, 117.001, 17.0838, 1.32", "44.5558, 119.5, 17.758, 0.96", "44.6034, 120.728, 18.0044, 0.96", "44.6487, 121.975, 18.221, 0.96", "44.8234, 124.337, 18.6414, 1.32", "44.9645, 125.489, 18.8525, 1.32", "45.3035, 127.228, 19.2311, 0.84", "45.8158, 129.016, 19.7098, 1.08", "46.4405, 130.755, 20.3025, 1.08", "47.46, 133.216, 21.2702, 0.84", "47.9873, 134.411, 21.6938, 1.2", "48.6164, 135.732, 22.2062, 0.84", "49.3525, 137.142, 22.8105, 1.2", "50.5104, 139.262, 23.7944, 0.96", "50.8934, 139.996, 24.1364, 0.96", "52.3606, 143.459, 25.4197, 0.96" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "8.70134, 58.1101, 15.5775, 1.08", "10.1406, 60.0403, 15.6254, 1.08", "11.857, 62.4414, 15.6717, 1.08", "12.3752, 63.181, 15.6835, 1.08", "12.871, 63.9035, 15.6539, 1.08", "13.7511, 65.186, 15.6012, 1.32", "15.0586, 67.0912, 15.523, 0.96", "15.8831, 68.2818, 15.4364, 1.44", "16.4416, 69.1065, 15.3558, 1.44", "17.5519, 70.8127, 15.1589, 1.44" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "18.7818, -187.069, 6.42556, 1.08", "18.4908, -189.298, 7.08521, 1.08", "18.2863, -190.764, 7.52493, 1.08", "17.9373, -192.859, 8.12803, 1.08", "17.7104, -194.145, 8.49288, 1.08", "17.4155, -195.644, 8.91415, 1.08", "17.1882, -196.672, 9.21816, 1.08", "17.0208, -197.324, 9.40288, 1.08", "16.7028, -198.288, 9.65959, 1.08", "16.0573, -199.963, 10.02, 0.84", "15.689, -200.823, 10.1852, 0.84", "15.1235, -202.044, 10.3657, 1.32", "14.3103, -203.703, 10.5418, 1.32", "13.1562, -206.047, 10.7302, 0.96", "12.3981, -207.649, 10.8115, 0.96", "11.8832, -208.819, 10.8664, 1.2", "10.9935, -211.116, 10.9859, 1.2", "10.4713, -212.681, 11.09, 1.44", "9.94207, -214.538, 11.2682, 1.2", "9.50675, -216.485, 11.4943, 1.2", "9.00368, -219.065, 11.8291, 1.2", "8.84807, -219.997, 11.9575, 1.2", "8.70646, -221.508, 12.2367, 1.2", "8.68365, -222.351, 12.4307, 1.2" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "18.7818, -187.069, 6.42556, 0.96", "19.6111, -190.442, 5.26953, 0.96", "20.1148, -192.596, 4.55098, 1.32", "20.249, -193.466, 4.36264, 1.32", "20.4154, -194.545, 4.12902, 1.32", "20.7895, -196.97, 3.60411, 1.56", "21.0669, -198.769, 3.21473, 1.56", "21.243, -200.1, 2.9598, 1.56", "21.6488, -203.781, 2.6731, 1.92" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "36.876, -275.327, -8.08152, 0.96", "36.5318, -277.393, -7.43349, 0.96", "36.1892, -279.251, -6.92185, 0.96", "35.7839, -281.105, -6.42804, 1.44", "34.8342, -285.215, -5.29539, 1.08", "34.41, -287.129, -4.78205, 1.08", "33.8531, -290.048, -4.02481, 1.08", "33.6651, -291.417, -3.65112, 1.08", "33.3356, -294.951, -2.70101, 0.84", "33.201, -297.852, -1.98977, 0.84", "33.2128, -299.682, -1.64186, 0.84", "33.3234, -301.741, -1.25463, 0.84", "33.4979, -303.665, -0.910427, 0.84", "33.6464, -305.24, -0.685288, 0.84", "33.7353, -306.354, -0.61418, 0.84", "33.797, -307.631, -0.591625, 0.84", "33.7252, -309.335, -0.59345, 0.84", "33.4611, -310.823, -0.653407, 0.84", "33.082, -312.084, -0.766508, 0.84", "32.2093, -314.287, -0.990149, 0.6", "29.355, -325.628, -1.4141, 0.6" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.876, -275.327, -8.08152, 0.84", "37.1116, -277.392, -8.26218, 0.84", "37.2696, -278.874, -8.4285, 0.84", "37.4297, -280.449, -8.66085, 0.84", "37.6998, -283.701, -9.22413, 1.2", "37.7454, -284.459, -9.37053, 1.2", "37.8956, -287.833, -10.0701, 0.96", "37.977, -290.666, -10.7385, 1.32", "38.1029, -294.26, -11.5948, 1.08", "38.2278, -296.283, -12.0821, 1.08", "38.3525, -297.773, -12.4336, 1.08", "38.5081, -298.882, -12.6703, 1.08", "38.6478, -299.641, -12.809, 1.08", "39.279, -302.62, -13.2868, 0.84", "40.2323, -306.473, -13.8044, 1.2", "40.5374, -307.559, -13.9307, 1.2", "42.2432, -313.185, -14.5161, 0.84", "43.2162, -316.356, -14.8304, 2.04" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "11.7856, 67.4905, 31.3211, 0.72", "11.1045, 66.1467, 30.9931, 0.72", "10.5171, 64.9877, 30.7102, 0.48", "9.80903, 63.5906, 30.3693, 0.96", "9.30703, 62.6001, 30.1275, 0.96", "4.16544, 53.3648, 26.6939, 0.96" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "11.7856, 67.4905, 31.3211, 0.72", "12.1733, 66.1983, 31.4451, 0.72", "12.3721, 65.2888, 31.5462, 1.08", "12.6704, 63.7218, 31.6527, 0.72", "12.8071, 62.5901, 31.6491, 0.72", "12.9036, 60.9789, 31.5302, 0.72", "12.9897, 59.6574, 31.3865, 1.2", "12.9833, 59.031, 31.3112, 1.2", "12.8908, 57.6718, 31.1236, 0.84", "12.7069, 55.9879, 30.8332, 0.84", "12.5787, 54.6208, 30.4377, 1.32", "12.5069, 53.7377, 30.0498, 1.08", "11.8849, 45.2064, 28.9643, 1.08", "10.7302, 36.6981, 28.1472, 1.08", "9.34047, 28.4635, 25.8788, 1.08" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "52.3606, 143.459, 25.4197, 0.6", "53.0741, 144.5, 25.8421, 0.6", "53.8028, 145.563, 26.2735, 0.6", "54.7486, 146.943, 26.8333, 0.6", "56.2763, 149.172, 27.7377, 0.6", "57.2673, 150.618, 28.3243, 0.6", "58.2755, 152.089, 28.9211, 0.48", "62.868, 162.17, 30.5242, 0.48", "68.2142, 172.012, 31.1234, 0.48", "73.9041, 181.361, 33.7809, 0.48", "81.5778, 189.639, 34.9855, 0.48", "89.0083, 198.191, 35.1633, 0.48", "97.0036, 206.17, 36.5081, 0.48", "103.065, 215.646, 36.3938, 0.48", "106.907, 225.918, 34.2451, 0.48", "109.35, 236.734, 33.4275, 0.48" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "52.3606, 143.459, 25.4197, 0.84", "53.8071, 146.055, 25.2974, 0.84", "54.6234, 147.52, 25.2283, 0.84", "55.4934, 149.081, 25.1547, 0.36", "56.3202, 150.565, 25.0847, 0.6", "56.9884, 151.764, 25.0282, 0.6", "58.1777, 153.898, 24.9276, 0.6", "63.745, 162.615, 23.0742, 0.6", "68.7859, 171.418, 20.365, 0.6", "75.0793, 179.386, 17.4234, 0.6", "80.8155, 187.648, 14.2499, 0.6", "84.6241, 196.37, 9.79742, 0.6", "88.309, 205.901, 7.70281, 0.6", "92.9359, 215.213, 6.6479, 0.6", "97.2257, 224.689, 5.80398, 0.6", "99.8386, 234.473, 3.41324, 0.6" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "17.5519, 70.8127, 15.1589, 1.08", "16.5954, 73.0788, 15.612, 1.08", "15.979, 74.1605, 15.9355, 1.08", "15.0827, 75.7334, 16.4059, 1.08", "14.0876, 77.4798, 16.9283, 0.96", "12.6453, 80.0107, 17.6852, 0.96", "11.4532, 82.1028, 18.3109, 0.84", "9.7256, 84.6032, 19.3237, 1.08", "2.07054, 95.116, 20.7735, 1.08", "-4.02123, 106.442, 22.7532, 1.08" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "17.5519, 70.8127, 15.1589, 0.96", "19.4119, 71.9849, 14.568, 0.96", "20.2552, 72.4997, 14.2589, 0.96", "21.5838, 73.3435, 13.7335, 0.96", "23.1545, 74.4004, 12.9645, 0.84", "23.9785, 74.9676, 12.5286, 0.84", "25.2927, 75.8709, 11.799, 0.84", "25.902, 76.2597, 11.4212, 0.84", "26.8873, 76.8556, 10.7913, 0.84", "28.9174, 77.9344, 9.56511, 1.2", "29.3069, 78.1068, 9.37156, 1.2", "30.3675, 78.4835, 8.95387, 1.2", "32.0131, 78.9125, 8.49675, 1.2", "32.5403, 79.0108, 8.39883, 1.2", "34.6114, 79.3038, 8.1152, 1.2", "36.252, 79.5155, 7.95379, 0.96", "37.8778, 79.7549, 7.79611, 0.96", "39.7333, 80.0001, 7.62901, 0.96", "41.5744, 80.2375, 7.46415, 1.32", "44.3507, 80.6202, 7.20678, 0.84", "46.7546, 80.972, 6.9702, 1.2", "48.4378, 81.246, 6.87717, 1.2", "50.0691, 81.5662, 6.86766, 0.96", "51.4379, 81.8884, 6.95727, 1.2", "52.4572, 82.1461, 7.10875, 1.2", "53.1283, 82.3248, 7.26205, 1.2", "56.5466, 83.3539, 8.2521, 1.2", "57.9089, 83.8431, 8.68283, 1.2", "59.0534, 84.341, 9.05753, 1.2", "61.2681, 85.3131, 9.78111, 1.08", "62.2705, 85.7147, 10.0825, 1.44", "64.1806, 86.3464, 10.4342, 1.08", "65.6545, 86.7438, 10.4685, 1.08", "66.7786, 87.0427, 10.3906, 1.08", "68.6755, 87.6101, 10.1177, 1.08", "70.7718, 88.2649, 9.68011, 1.44", "74.0247, 89.29, 8.82109, 1.08", "76.1479, 90.0307, 8.15082, 0.84", "77.7445, 90.6878, 7.61763, 1.2", "79.3504, 91.4133, 7.05998, 1.2", "81.1377, 92.3425, 6.35591, 0.84", "82.4433, 93.0867, 5.82688, 1.08", "85.2472, 94.6775, 4.7789, 0.72", "88.0207, 96.1352, 3.71746, 0.72", "89.7865, 96.9142, 3.04643, 1.2", "92.3906, 97.9468, 2.07092, 0.72", "93.3087, 98.2885, 1.74909, 0.72", "95.2308, 98.9454, 1.14595, 0.96", "97.2596, 99.5742, 0.570044, 0.96", "100.849, 100.796, -0.302942, 0.72", "102.695, 101.573, -0.676443, 0.6", "104.181, 102.287, -0.913655, 0.6", "106.091, 103.37, -1.2115, 1.2", "106.658, 103.751, -1.29318, 1.2", "108.976, 105.455, -1.54497, 0.72", "110.059, 106.352, -1.64551, 0.72", "110.816, 106.964, -1.71276, 0.72", "112.625, 108.49, -1.94422, 0.6", "112.921, 108.739, -1.98818, 0.6", "114.42, 109.977, -2.31126, 0.96", "115.426, 110.832, -2.64253, 0.72", "116.081, 111.421, -2.90789, 0.96", "118.61, 113.835, -4.07565, 0.72", "120.067, 115.283, -4.81414, 0.72", "122.003, 117.187, -5.87974, 1.2", "124.049, 119.119, -6.95755, 0.72", "125.455, 120.35, -7.62078, 0.72", "127.205, 121.755, -8.36446, 0.72", "127.891, 122.242, -8.59851, 0.72", "130.023, 123.666, -9.12177, 1.08", "132.487, 125.165, -9.39276, 0.72", "134.262, 126.181, -9.43196, 1.08", "134.725, 126.448, -9.41762, 1.08", "136.671, 127.517, -9.33954, 0.72", "137.82, 128.158, -9.3215, 0.72", "139.972, 129.409, -9.36952, 1.08", "140.821, 129.892, -9.45715, 1.08", "142.502, 130.804, -9.68216, 0.84", "145.604, 132.405, -10.1401, 0.84", "148.232, 133.671, -10.5039, 0.6", "150.279, 134.531, -10.7059, 1.08", "151.262, 134.887, -10.7526, 1.08", "153.842, 135.766, -10.707, 0.72", "155.128, 136.189, -10.5934, 0.72", "157.821, 137.102, -10.0827, 1.08", "160.171, 137.884, -9.46522, 0.84", "161.405, 138.313, -9.09346, 1.08", "163.255, 139.014, -8.5189, 0.84", "164.204, 139.379, -8.23537, 0.84", "166.651, 140.298, -7.61038, 0.6", "167.858, 140.699, -7.3697, 0.6", "169.712, 141.247, -7.08907, 0.96", "170.485, 141.403, -7.00221, 0.96", "172.824, 141.617, -6.79139, 0.72", "174.665, 141.669, -6.63788, 0.72", "176.164, 141.65, -6.59042, 0.72", "176.539, 141.657, -6.59685, 0.72", "177.902, 141.768, -6.73615, 0.72", "180.118, 142.084, -7.21428, 0.72", "180.737, 142.21, -7.44478, 0.72", "183.051, 142.746, -8.52983, 0.6", "184.321, 143.049, -9.20429, 0.96", "186.513, 143.489, -10.4021, 0.96", "187.913, 143.771, -11.2266, 0.96", "190.237, 144.179, -12.7022, 0.72", "192.342, 144.467, -14.0407, 0.72", "194.348, 144.612, -15.291, 1.2", "196.236, 144.64, -16.4354, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "8.68365, -222.351, 12.4307, 0.48", "8.85952, -224.032, 12.5495, 0.48", "9.01703, -225.538, 12.6558, 0.48", "9.15181, -226.827, 12.7469, 0.84", "9.26834, -227.941, 12.8256, 0.84", "9.38092, -229.018, 12.9016, 0.6", "9.4374, -235.343, 12.1448, 0.6" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "8.68365, -222.351, 12.4307, 0.84", "9.22077, -223.939, 13.0084, 0.84", "9.63552, -225.238, 13.4509, 0.84", "10.0107, -226.516, 13.8429, 1.08", "10.4764, -228.108, 14.291, 0.84", "10.8012, -229.212, 14.5893, 0.84", "11.1058, -230.255, 14.8561, 0.84", "11.2657, -230.847, 14.9889, 0.84", "11.7296, -232.698, 15.3195, 1.32", "11.9606, -233.747, 15.4675, 1.32", "12.3091, -235.677, 15.6846, 1.2", "12.4761, -236.808, 15.7883, 0.96", "12.6443, -238.215, 15.9257, 1.32", "12.7619, -239.496, 16.0618, 1.32", "12.8413, -241.071, 16.2517, 1.08", "12.9308, -244.411, 16.6525, 1.08", "12.939, -246.158, 16.859, 0.84", "12.9279, -247.65, 17.055, 1.2", "12.8988, -249.301, 17.3028, 1.08", "12.8716, -250.633, 17.5372, 1.56" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "21.6488, -203.781, 2.6731, 0.96", "20.7686, -206.011, 3.25803, 0.96", "20.4963, -206.995, 3.59922, 0.96", "20.2465, -207.868, 3.93018, 0.96", "19.9465, -208.914, 4.32397, 0.96", "19.6068, -210.042, 4.76389, 0.96", "18.9247, -212.52, 5.71842, 1.44", "18.4909, -214.705, 6.59923, 0.96", "17.8842, -218.382, 8.11352, 1.44", "17.7242, -219.553, 8.59255, 0.96", "17.4418, -221.891, 9.53265, 1.56", "17.1515, -224.613, 10.5668, 1.2", "16.8508, -228.367, 11.84, 0.96", "16.7703, -230.028, 12.3474, 1.44", "16.731, -232.67, 13.0855, 0.96", "16.6659, -235.557, 13.823, 1.32", "16.5299, -238.621, 14.4916, 0.96", "16.3314, -240.925, 14.9093, 0.96", "16.2039, -242.265, 15.0862, 0.96", "16.1148, -243.402, 15.2054, 0.96", "15.9117, -246.444, 15.4578, 1.32", "15.7542, -249.13, 15.6376, 0.96", "15.6038, -252.957, 15.8697, 1.44", "15.555, -255.747, 16.032, 0.84", "15.6004, -257.744, 16.1615, 1.2", "15.6668, -258.771, 16.2624, 1.2", "15.749, -259.458, 16.3544, 0.84", "16.166, -262.097, 16.8581, 1.2", "16.5785, -264.52, 17.482, 1.2", "16.8014, -266.164, 17.9942, 0.96", "17.0657, -268.885, 18.9198, 0.96", "17.1674, -271.43, 19.7777, 1.32", "17.1176, -273.547, 20.5084, 1.68", "16.8698, -275.756, 21.2915, 1.2", "16.2684, -278.556, 22.3, 0.96", "15.4121, -281.014, 23.1385, 0.96", "14.2252, -283.166, 23.8294, 0.84", "13.1883, -284.295, 24.2209, 0.84", "11.8352, -284.927, 24.4932, 0.84", "10.4181, -284.406, 24.5958, 0.84", "9.64248, -283.828, 24.6189, 0.84", "8.92629, -283.078, 24.6328, 0.84", "8.27313, -282.1, 24.6771, 1.08", "7.56786, -280.719, 24.7287, 0.84", "7.15285, -279.545, 24.8056, 0.6", "7.38322, -288.06, 26.6727, 0.6" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "21.6488, -203.781, 2.6731, 1.08", "22.2575, -207.682, 2.82098, 1.08", "22.9224, -211.911, 2.94666, 1.44", "23.1835, -213.811, 2.99904, 0.84", "23.5365, -216.576, 3.06248, 1.32", "23.7723, -218.457, 3.09867, 1.32", "24.1595, -221.713, 3.10273, 1.32", "24.3484, -223.811, 3.06404, 1.32", "24.5601, -226.099, 3.00247, 1.32", "24.8642, -230.331, 2.89235, 1.44", "24.9945, -232.409, 2.84024, 1.44", "25.3539, -238.957, 2.69224, 1.44", "25.4226, -240.595, 2.66212, 1.44", "25.5399, -243.428, 2.61822, 1.08", "25.8678, -249.08, 2.53451, 1.08", "26.0405, -251.986, 2.50762, 0.84", "26.2624, -255.336, 2.51702, 1.32", "26.5005, -257.981, 2.55541, 1.32", "26.9411, -262.081, 2.61789, 0.96", "27.2117, -264.209, 2.66478, 1.44", "27.626, -267.329, 2.65914, 1.44", "27.9785, -270.638, 2.60195, 1.2", "28.2132, -273.955, 2.50359, 1.08", "28.3339, -276.601, 2.3947, 1.08", "28.3556, -279.104, 2.27718, 1.68", "28.3348, -283.071, 2.07392, 1.2", "28.337, -284.708, 1.98182, 1.2", "28.3911, -287.981, 1.7925, 1.44", "28.4892, -290.847, 1.61747, 1.44", "28.7202, -294.37, 1.40476, 1.44", "29.0054, -297.401, 1.24697, 1.44", "29.4731, -300.862, 1.1318, 1.8", "29.9953, -304.447, 0.993801, 1.32", "30.3185, -306.546, 0.904435, 1.08", "30.7467, -309.487, 0.777201, 1.56", "31.2325, -312.892, 0.612571, 1.56", "31.4965, -314.79, 0.516423, 1.56", "31.731, -316.541, 0.429968, 1.56", "32.0741, -319.214, 0.31505, 1.56", "32.3897, -321.471, 0.238723, 1.56", "32.8099, -324.069, 0.134889, 1.32", "33.0111, -325.239, 0.0867183, 1.32", "33.2397, -326.977, 0.0196699, 1.32", "33.4619, -328.897, -0.0511166, 1.32", "33.7775, -331.748, -0.201105, 1.32", "34.0101, -333.887, -0.312313, 1.32", "34.2425, -336.403, -0.43444, 1.68", "34.7224, -342.979, -0.762626, 1.32", "34.8335, -345.046, -0.873261, 1.32", "34.9165, -347.42, -1.01532, 1.32" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "43.2162, -316.356, -14.8304, 0.96", "46.0737, -317.914, -12.7147, 0.96", "47.5083, -318.672, -11.6575, 1.32", "50.4812, -320.266, -9.48165, 0.96", "52.6954, -321.526, -7.83855, 1.32", "55.5281, -323.219, -5.84892, 1.2", "56.983, -324.041, -4.87852, 1.2", "58.4129, -324.803, -3.98741, 1.2", "59.4038, -325.354, -3.37344, 1.2", "60.5589, -326.003, -2.71788, 1.2", "64.0099, -327.797, -0.993994, 0.96", "66.5073, -328.972, 0.00297237, 1.32", "67.9915, -329.596, 0.540662, 1.32" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "43.2162, -316.356, -14.8304, 1.08", "43.7106, -320.437, -14.803, 1.08", "44.0752, -324.132, -14.8203, 0.72", "44.2743, -325.94, -14.9031, 0.72", "44.7529, -330.308, -15.2061, 1.2", "45.1416, -333.864, -15.4922, 0.84", "45.3599, -336.014, -15.6787, 0.84", "45.5305, -337.585, -15.8479, 0.84", "45.974, -341.702, -16.3036, 0.6", "46.2359, -343.992, -16.5403, 0.6", "46.666, -347.041, -16.8107, 1.2", "47.2442, -350.512, -17.1195, 1.2", "47.7856, -353.43, -17.3641, 0.84", "48.2407, -355.857, -17.5505, 0.84", "48.9305, -359.712, -17.844, 1.08", "49.5387, -363.048, -18.1721, 0.72", "50.086, -365.998, -18.5518, 1.08", "50.4746, -368.029, -18.8619, 1.08", "50.8151, -369.93, -19.1957, 1.08", "51.346, -373.349, -19.8513, 0.72", "51.6593, -375.553, -20.2894, 0.72", "51.8663, -377.686, -20.6272, 1.08", "51.9536, -379.313, -20.787, 1.08", "51.9917, -380.418, -20.8317, 1.08", "52.0335, -383.474, -20.9369, 0.72", "52.0343, -385.182, -21.0055, 0.72", "52.0444, -388.976, -21.238, 1.2", "52.091, -392.763, -21.5326, 1.2", "52.2199, -397.723, -22.0219, 1.2", "52.4328, -402.49, -22.5964, 0.84", "52.5334, -404.368, -22.8755, 1.32", "52.6481, -406.443, -23.2539, 1.32", "52.7243, -407.405, -23.472, 1.32", "52.9079, -409.538, -24.0081, 0.96", "53.0572, -411.442, -24.4899, 1.56", "53.24, -413.424, -24.9238, 1.56", "53.4192, -415.096, -25.2672, 1.08", "53.5771, -416.72, -25.5954, 1.08", "53.9441, -420.038, -26.2965, 0.84", "54.1784, -421.581, -26.6181, 1.44", "54.7534, -424.441, -27.2152, 1.08", "55.2215, -426.21, -27.5928, 1.08", "56.0199, -429.016, -28.1939, 0.72", "56.9485, -432.374, -28.9042, 1.08", "57.4753, -434.124, -29.3313, 1.08", "58.102, -436.108, -29.8525, 0.96", "59.1529, -439.473, -30.7368, 0.72", "59.7121, -441.147, -31.2262, 0.72", "60.1661, -442.328, -31.6153, 0.72", "61.5217, -445.826, -32.9251, 0.72", "62.0066, -447.204, -33.5119, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.16544, 53.3648, 26.6939, 0.6", "-0.166402, 44.8126, 24.3368, 0.6", "-4.35939, 35.9537, 23.4289, 0.6", "-7.88084, 27.0498, 21.1662, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "4.16544, 53.3648, 26.6939, 0.84", "-2.13543, 43.1573, 22.0968, 0.6", "-11.0361, 34.1922, 19.2679, 0.6", "-19.6462, 24.7547, 17.4078, 0.6" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.02123, 106.442, 22.7532, 0.6", "-7.73725, 112.25, 25.1858, 0.6", "-12.5884, 117.191, 27.7415, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.02123, 106.442, 22.7532, 0.84", "-9.50805, 115.897, 23.3396, 0.6", "-13.3196, 126.083, 23.2386, 0.6" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "12.8716, -250.633, 17.5372, 0.6", "10.8088, -250.389, 18.2584, 0.6", "8.24152, -250.086, 19.1559, 0.6", "7.03536, -249.944, 19.5775, 0.6", "5.58756, -249.773, 20.0836, 0.96", "-5.57121, -247.236, 22.7356, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "12.8716, -250.633, 17.5372, 0.96", "12.6878, -251.751, 17.5246, 0.96", "12.5076, -252.847, 17.5122, 0.72", "12.2132, -254.638, 17.492, 0.72", "9.9493, -262.711, 18.7314, 0.72" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "34.9165, -347.42, -1.01532, 0.84", "36.8512, -350.169, -2.66849, 0.84", "38.8416, -352.635, -4.28961, 0.84", "39.3506, -353.31, -4.75218, 0.84", "40.5522, -355.073, -6.00145, 0.84", "42.0141, -357.45, -7.64341, 0.6", "43.2509, -359.578, -9.06538, 1.08", "44.115, -361.215, -10.1165, 1.08", "45.4401, -363.719, -11.7089, 0.72", "46.544, -365.878, -12.9846, 0.72", "47.1484, -367.197, -13.7657, 0.72", "47.6254, -368.283, -14.5023, 0.72", "48.0934, -369.451, -15.3124, 1.2", "49.2679, -372.344, -17.2602, 0.84", "50.8958, -376.017, -19.6483, 1.08", "52.7306, -380.105, -22.2104, 1.08", "54.539, -384.225, -24.7596, 0.84", "55.302, -386.054, -25.8319, 0.84", "56.2073, -388.252, -27.0546, 1.32", "57.364, -391.083, -28.4755, 0.84", "57.8177, -392.117, -28.9596, 0.84", "58.6437, -393.835, -29.6363, 1.32", "59.9313, -396.48, -30.6715, 0.84", "60.8103, -398.247, -31.571, 1.44", "62.2289, -401.305, -33.4447, 1.2", "62.8278, -402.668, -34.3968, 1.2", "63.593, -404.463, -35.6972, 1.44", "64.5542, -406.79, -37.4188, 1.08", "66.2216, -411.037, -40.5404, 0.84", "67.0778, -413.314, -42.153, 1.44", "67.9028, -415.714, -43.7569, 0.96", "68.4276, -417.508, -44.8167, 0.96", "68.7815, -418.931, -45.5267, 1.44", "69.3764, -422.22, -46.8764, 0.96", "69.4887, -423.109, -47.1809, 0.96", "69.8425, -426.497, -48.2567, 1.44", "70.1632, -430.113, -49.4283, 0.84", "70.4395, -434.21, -50.9746, 1.44", "70.6469, -438.459, -52.7198, 0.84", "70.6768, -439.69, -53.2735, 0.84", "70.7553, -442.949, -54.8896, 1.44", "70.918, -447.485, -57.3206, 1.44", "71.057, -452.465, -60.0533, 1.08", "71.1362, -455.119, -61.5718, 0.72", "71.2324, -457.814, -63.1861, 1.32", "71.2665, -460.204, -64.6518, 0.72", "71.2225, -461.42, -65.3973, 0.72", "70.9498, -464.692, -67.3234, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "34.9165, -347.42, -1.01532, 1.08", "34.8264, -349.236, -1.08998, 1.08", "34.8275, -350.431, -1.12925, 1.08", "34.8458, -351.29, -1.11517, 1.08", "34.8291, -352.914, -1.18098, 1.08", "34.7833, -354.88, -1.3746, 1.44", "34.745, -356.773, -1.62004, 0.96", "34.7513, -358.336, -1.87103, 0.96", "34.7784, -359.859, -2.17812, 0.96", "34.8708, -362.73, -2.74571, 0.96", "34.972, -364.601, -3.08275, 0.84", "35.0603, -365.701, -3.25579, 1.44", "35.2033, -367.399, -3.47517, 1.08", "35.3502, -368.757, -3.6134, 1.08", "35.6115, -370.766, -3.76837, 1.56", "36.0967, -373.884, -3.84716, 1.32", "36.3299, -375.437, -3.87337, 0.96", "36.5418, -376.987, -3.90739, 1.32", "36.9253, -379.877, -3.98947, 1.08", "37.1555, -381.7, -4.07442, 0.72", "37.3282, -383.303, -4.17818, 1.32", "37.5596, -385.546, -4.30641, 1.08", "37.74, -387.332, -4.38576, 1.56", "37.9537, -389.38, -4.44785, 0.84", "38.2127, -391.876, -4.51361, 0.6", "38.3268, -392.951, -4.54149, 1.08", "38.5632, -395.236, -4.59965, 1.2", "38.7871, -397.283, -4.65256, 0.72", "38.8667, -397.964, -4.67552, 0.72", "39.2534, -401.226, -4.81474, 1.32", "39.3404, -401.822, -4.85182, 1.32" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "67.9915, -329.596, 0.540662, 0.96", "69.3828, -328.553, 1.25461, 0.96", "69.9424, -328.134, 1.54181, 0.96", "70.6241, -327.623, 1.89164, 0.84", "72.2642, -326.394, 2.73333, 0.84", "73.2574, -325.65, 3.24298, 1.08", "74.1232, -325.002, 3.68731, 1.08", "79.8807, -319.973, 6.77393, 1.08" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "67.9915, -329.596, 0.540662, 0.6", "68.9321, -330.908, 1.38822, 0.6", "70.0402, -332.593, 2.59918, 1.08", "71.1461, -334.472, 3.93375, 0.96", "71.7623, -335.529, 4.67565, 0.96", "72.4049, -336.631, 5.4492, 1.32", "73.5795, -338.645, 6.86335, 1.08", "74.0395, -339.515, 7.51368, 1.08", "74.8815, -341.256, 8.91487, 1.08", "75.6331, -342.894, 10.195, 0.84" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "62.0066, -447.204, -33.5119, 0.72", "61.9813, -448.614, -33.9552, 0.72", "61.9789, -449.963, -34.3309, 0.72", "61.963, -451.81, -34.8559, 0.72", "61.9189, -453.035, -35.1965, 0.72", "61.901, -453.598, -35.3529, 0.72", "61.8683, -455.538, -35.8768, 0.6", "61.8311, -456.557, -36.1309, 0.6", "61.7863, -457.445, -36.3414, 0.6", "61.6854, -458.978, -36.6699, 0.48", "61.6204, -459.842, -36.8697, 0.48", "61.4563, -461.668, -37.3179, 0.84", "61.1735, -463.727, -37.8744, 0.36" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "62.0066, -447.204, -33.5119, 0.72", "63.1729, -449.661, -33.392, 0.72", "64.8149, -453.121, -33.2232, 1.2", "65.3609, -454.271, -33.167, 1.2" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "39.3404, -401.822, -4.85182, 0.48", "38.1939, -402.7, -4.67269, 0.48", "37.984, -402.844, -4.6447, 0.48", "37.3204, -403.351, -4.56114, 0.48", "36.5926, -404.008, -4.40084, 0.48", "36.2767, -404.328, -4.30204, 0.48", "35.4456, -405.199, -4.00976, 0.96", "34.4788, -406.239, -3.61467, 0.6", "33.7631, -407.06, -3.29005, 0.6", "32.7083, -408.331, -2.76229, 1.08", "31.9606, -409.267, -2.34966, 0.84", "31.4968, -409.894, -2.06288, 0.84", "30.9788, -410.704, -1.67624, 1.2", "30.4263, -411.599, -1.20399, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "39.3404, -401.822, -4.85182, 0.84", "40.1219, -405.552, -5.4264, 0.84", "40.3532, -407.336, -5.68123, 0.84", "40.5285, -408.915, -5.88172, 0.84", "40.9701, -412.938, -6.40067, 0.84", "41.1395, -414.429, -6.58876, 0.84", "41.5344, -417.899, -7.0102, 1.44", "41.8052, -420.464, -7.33815, 1.08", "42.0778, -423.387, -7.66957, 1.08", "42.3005, -426.172, -7.92143, 0.84", "42.4459, -427.92, -8.01697, 0.84", "42.6415, -429.459, -8.07965, 1.08", "43.0604, -431.492, -8.15669, 0.6", "43.4823, -433.122, -8.20541, 0.6", "43.9362, -434.824, -8.21243, 0.6", "44.5682, -437.073, -8.24785, 1.2", "45.2299, -439.321, -8.34462, 1.2", "45.6654, -440.883, -8.44032, 1.2", "46.1144, -442.651, -8.56908, 0.96", "46.395, -443.828, -8.6589, 1.44", "46.8713, -446.169, -8.83231, 1.44", "47.4333, -449.518, -9.06763, 0.96", "47.9694, -453.217, -9.30478, 1.32", "48.1884, -454.75, -9.3934, 1.32", "48.67, -458.189, -9.56477, 0.84", "49.0257, -461.02, -9.6854, 1.32", "49.2081, -462.562, -9.71927, 1.32", "49.4049, -464.374, -9.79375, 1.32", "49.7729, -467.883, -9.98903, 1.32", "49.9779, -470.196, -10.1378, 0.96", "50.1098, -472.046, -10.2696, 0.96", "50.4416, -476.205, -10.592, 1.44", "50.648, -478.755, -10.8215, 1.08", "50.7715, -480.806, -11.031, 1.08", "50.863, -482.863, -11.2936, 1.08", "51.0101, -485.374, -11.6398, 1.08", "51.193, -488.066, -12.0195, 1.08", "51.4363, -491.875, -12.6039, 1.08", "51.842, -497.523, -13.523, 0.96", "52.4542, -506.195, -14.9939, 1.32", "52.6547, -509.049, -15.494, 0.84", "52.7684, -510.748, -15.7948, 0.84", "52.9087, -513.062, -16.1942, 0.84", "53.0111, -514.83, -16.4743, 0.84", "53.2237, -518.306, -16.9589, 0.84", "53.2822, -520.04, -17.1483, 0.84", "53.2878, -521.482, -17.2882, 0.84", "53.265, -522.992, -17.4031, 1.2", "53.2349, -525.832, -17.5702, 0.72", "53.151, -528.047, -17.6911, 1.32", "53.0644, -529.808, -17.855, 0.84", "52.9356, -531.865, -18.0677, 1.56", "52.5274, -536.88, -18.7142, 0.84", "52.3302, -538.747, -18.9878, 1.32", "51.8617, -542.118, -19.5244, 0.84", "51.0561, -547.132, -20.3404, 0.6", "50.8088, -548.622, -20.5778, 1.08", "50.3333, -551.416, -21.0039, 0.84", "49.9156, -553.74, -21.3668, 1.44", "49.4505, -556.171, -21.7237, 0.96", "49.1015, -558.176, -21.9878, 0.72", "48.7443, -560.109, -22.1247, 0.72", "48.14, -563.726, -22.3805, 1.32" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "75.6331, -342.894, 10.195, 0.84", "78.4449, -342.172, 11.1734, 0.84", "79.6794, -341.855, 11.603, 0.84", "82.5841, -341.109, 12.6138, 0.72", "84.4191, -340.637, 13.2523, 0.72", "96.0283, -339.445, 16.0641, 0.72" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "75.6331, -342.894, 10.195, 0.72", "76.686, -344.83, 11.0651, 0.72", "77.8024, -346.882, 11.9877, 0.84", "78.2737, -347.749, 12.3772, 0.84", "79.2605, -349.563, 13.1927, 0.6", "79.9438, -350.819, 13.7573, 0.6", "80.6581, -352.132, 14.3476, 0.6", "85.8647, -360.338, 19.347, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "61.1735, -463.727, -37.8744, 0.48", "57.8264, -464.124, -39.6302, 0.48", "57.0478, -464.216, -40.0386, 1.08", "56.246, -464.311, -40.4592, 0.48", "55.2401, -464.43, -40.9869, 0.96", "54.3891, -464.531, -41.4332, 0.48", "52.7284, -464.728, -42.3044, 0.48" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "61.1735, -463.727, -37.8744, 0.96", "61.0387, -464.93, -38.9136, 0.96", "60.765, -467.061, -40.6325, 0.48", "60.6638, -467.901, -41.2515, 0.48", "60.5083, -469.623, -42.4635, 0.84", "60.4103, -470.875, -43.3347, 0.6", "60.3694, -471.481, -43.7521, 0.6", "60.3185, -472.794, -44.7094, 0.96", "60.3017, -473.669, -45.3584, 0.96", "60.301, -475.346, -46.7103, 0.72", "60.3462, -476.955, -48.125, 0.72", "60.432, -478.209, -49.4678, 1.2", "60.5393, -479.381, -50.8185, 1.2", "60.6182, -480.082, -51.703, 1.2", "60.7149, -480.906, -52.865, 1.08", "60.8558, -481.931, -54.5064, 0.84", "61.0882, -482.98, -56.4742, 1.08" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "65.3609, -454.271, -33.167, 0.72", "68.294, -454.581, -33.0711, 0.72", "70.0493, -454.766, -33.0137, 0.72", "71.1789, -454.886, -32.9767, 0.96" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "65.3609, -454.271, -33.167, 0.48", "65.5136, -457.405, -33.332, 0.48", "65.5132, -459.173, -33.4709, 0.96", "65.4815, -459.991, -33.5483, 0.96", "65.3447, -461.981, -33.7563, 0.48", "65.2315, -463.182, -33.8905, 0.48", "65.0373, -465.148, -34.1117, 0.96", "64.8002, -467.113, -34.349, 0.96", "64.6188, -468.416, -34.513, 0.96", "64.2916, -470.36, -34.788, 1.32", "63.9076, -472.308, -35.0906, 0.96", "63.7624, -473.071, -35.2098, 0.96", "63.6179, -473.987, -35.3446, 0.96", "63.4344, -475.494, -35.5446, 1.32", "63.3278, -477.081, -35.7328, 0.96", "63.3128, -478.814, -35.9111, 0.6", "63.4049, -480.094, -36.0895, 0.6", "63.6878, -481.662, -36.4397, 1.32", "64.1668, -483.276, -36.9402, 0.84", "64.6656, -484.606, -37.4202, 0.84", "64.9278, -485.203, -37.6462, 0.84", "66.0532, -487.577, -38.596, 0.84", "67.2661, -490.045, -39.6204, 1.44", "68.5009, -492.668, -40.7435, 0.96", "68.9401, -493.791, -41.1846, 0.96", "69.3848, -495.334, -41.7163, 0.96", "69.5965, -496.477, -42.0276, 0.96", "69.6734, -497.671, -42.2358, 0.96", "69.522, -500.519, -42.553, 0.72", "69.132, -503.466, -42.7733, 1.08", "68.7837, -505.417, -42.8826, 0.72", "68.4002, -507.253, -42.9598, 1.2", "67.9419, -509.37, -43.0166, 0.96", "67.2173, -512.699, -43.0543, 1.44", "66.7357, -514.974, -43.0541, 0.96", "66.4915, -516.273, -43.1126, 0.72", "65.9486, -519.511, -43.3713, 1.08", "65.6485, -521.447, -43.6064, 0.6", "65.4499, -522.723, -43.7658, 0.6", "65.2039, -524.281, -43.9566, 1.2", "64.5381, -527.875, -44.3168, 0.72", "64.2273, -529.365, -44.4807, 1.08", "63.663, -531.635, -44.7391, 0.96", "63.0308, -533.865, -45.0003, 0.72", "62.6569, -535.138, -45.1313, 0.72", "61.693, -538.243, -45.3705, 0.72", "60.87, -540.579, -45.4353, 0.72", "60.5067, -541.598, -45.4842, 1.2", "60.0107, -543.035, -45.6419, 1.2" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_73", "dend_69", "dend_64", "dend_41", "dend_18", "dend_0", "dend_75", "dend_74", "dend_70", "dend_66", "dend_65", "dend_61", "dend_42", "dend_40", "dend_19", "dend_1", "dend_77", "dend_76", "dend_72", "dend_71", "dend_68", "dend_67", "dend_63", "dend_62", "dend_58", "dend_43", "dend_37", "dend_20", "dend_11", "dend_2", "dend_60", "dend_59", "dend_57", "dend_44", "dend_39", "dend_38", "dend_36", "dend_21", "dend_17", "dend_12", "dend_8", "dend_3", "dend_52", "dend_45", "dend_35", "dend_22", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_4", "dend_56", "dend_53", "dend_51", "dend_46", "dend_30", "dend_23", "dend_16", "dend_15", "dend_7", "dend_6", "dend_55", "dend_54", "dend_50", "dend_47", "dend_34", "dend_31", "dend_27", "dend_24", "dend_49", "dend_48", "dend_33", "dend_32", "dend_29", "dend_28", "dend_26", "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_42", "dend_42", "dend_42", "dend_42", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_6", "dend_6", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_DBC_893b78d08e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_69, id: dend_69, parent: soma_0
create dend_69
public dend_69
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_61, id: dend_61, parent: dend_41
create dend_61
public dend_61
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_40, id: dend_40, parent: dend_18
create dend_40
public dend_40
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_68, id: dend_68, parent: dend_66
create dend_68
public dend_68
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_58, id: dend_58, parent: dend_42
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_37, id: dend_37, parent: dend_19
create dend_37
public dend_37
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_43
create dend_57
public dend_57
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_20
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_35, id: dend_35, parent: dend_21
create dend_35
public dend_35
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_56, id: dend_56, parent: dend_52
create dend_56
public dend_56
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_73(0), soma_0(0.45000099931593607)
    connect dend_69(0), soma_0(0.45000099931593607)
    connect dend_64(0), soma_0(0.45000099931593607)
    connect dend_41(0), soma_0(0.45000099931593607)
    connect dend_18(0), soma_0(0.45000099931593607)
    connect dend_0(0), soma_0(0.45000099931593607)
    connect axon_0(0), soma_0(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_61(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_40(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_68(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_58(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_37(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_35(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_56(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.25432, 14.9511, 0.00157081, 3.62034 ) }
    soma_0 { pt3dadd( -2.93315, 13.5105, 0.00126201, 6.40385 ) }
    soma_0 { pt3dadd( -2.61199, 12.0699, 9.53205E-4, 8.96308 ) }
    soma_0 { pt3dadd( -2.29082, 10.6293, 6.44404E-4, 10.4523 ) }
    soma_0 { pt3dadd( -1.96966, 9.18875, 3.35604E-4, 11.6707 ) }
    soma_0 { pt3dadd( -1.64849, 7.74817, 2.68037E-5, 11.8736 ) }
    soma_0 { pt3dadd( -1.32732, 6.30759, -2.81997E-4, 11.9675 ) }
    soma_0 { pt3dadd( -1.00616, 4.86701, -5.90797E-4, 12.0614 ) }
    soma_0 { pt3dadd( -0.684991, 3.42643, -8.99597E-4, 12.1873 ) }
    soma_0 { pt3dadd( -0.363825, 1.98585, -0.0012084, 12.1453 ) }
    soma_0 { pt3dadd( -0.0426595, 0.545272, -0.0015172, 12.019 ) }
    soma_0 { pt3dadd( 0.278507, -0.895307, -0.001826, 11.8927 ) }
    soma_0 { pt3dadd( 0.599673, -2.33589, -0.0021348, 11.8279 ) }
    soma_0 { pt3dadd( 0.920839, -3.77647, -0.0024436, 11.7176 ) }
    soma_0 { pt3dadd( 1.242, -5.21704, -0.0027524, 11.0046 ) }
    soma_0 { pt3dadd( 1.56317, -6.65762, -0.0030612, 10.0239 ) }
    soma_0 { pt3dadd( 1.88434, -8.0982, -0.00337, 9.09175 ) }
    soma_0 { pt3dadd( 2.2055, -9.53878, -0.0036788, 8.30332 ) }
    soma_0 { pt3dadd( 2.52667, -10.9794, -0.0039876, 7.17422 ) }
    soma_0 { pt3dadd( 2.84783, -12.4199, -0.0042964, 5.37678 ) }
    soma_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 3.2773 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 21/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -4.98075, 8.27387, 10.9227, 2.76 ) }
    dend_73 { pt3dadd( -5.83876, 9.03295, 9.67084, 2.16 ) }
    dend_73 { pt3dadd( -8.31663, 10.8544, 6.70594, 2.52 ) }
    dend_73 { pt3dadd( -10.1148, 12.0444, 4.76932, 2.52 ) }
    dend_73 { pt3dadd( -11.4226, 12.8341, 3.52368, 2.52 ) }
    dend_73 { pt3dadd( -12.1104, 13.2113, 2.91865, 2.52 ) }
    dend_73 { pt3dadd( -12.9405, 13.6125, 2.28383, 2.28 ) }
    dend_73 { pt3dadd( -15.1523, 14.6139, 0.879698, 1.92 ) }
    dend_73 { pt3dadd( -16.0989, 14.9915, 0.43591, 1.92 ) }
    dend_73 { pt3dadd( -18.148, 15.7005, -0.411344, 1.8 ) }
    dend_73 { pt3dadd( -19.3778, 16.1101, -0.85131, 1.8 ) }
    dend_73 { pt3dadd( -22.0368, 16.8882, -1.67574, 1.56 ) }
    dend_73 { pt3dadd( -24.1033, 17.425, -2.23061, 1.92 ) }
    dend_73 { pt3dadd( -25.8855, 17.807, -2.63895, 1.92 ) }
    dend_73 { pt3dadd( -27.1586, 17.9586, -2.86878, 1.92 ) }
    dend_73 { pt3dadd( -28.7855, 17.9815, -3.09274, 1.92 ) }
    dend_73 { pt3dadd( -31.8978, 17.8206, -3.50499, 1.8 ) }
    dend_73 { pt3dadd( -32.4252, 17.752, -3.58402, 1.8 ) }
    dend_73 { pt3dadd( -33.5292, 17.5334, -3.74979, 1.8 ) }
    dend_73 { pt3dadd( -36.1466, 16.8961, -4.20404, 1.32 ) }
    dend_73 { pt3dadd( -37.0724, 16.6531, -4.41159, 1.32 ) }
    dend_73 { pt3dadd( -38.8581, 16.1769, -4.97652, 1.92 ) }
    dend_73 { pt3dadd( -39.5541, 16.1289, -5.38331, 1.92 ) }
    dend_73 { pt3dadd( -40.0546, 16.5183, -6.16556, 1.92 ) }
    dend_73 { pt3dadd( -40.2817, 16.794, -6.66018, 1.92 ) }
    dend_73 { pt3dadd( -40.5223, 17.1272, -7.25985, 1.92 ) }
    dend_73 { pt3dadd( -40.8509, 17.3297, -7.79575, 1.92 ) }
    dend_73 { pt3dadd( -41.3811, 17.4165, -8.44714, 1.92 ) }
    dend_73 { pt3dadd( -42.947, 17.3971, -10.1976, 1.44 ) }
    dend_73 { pt3dadd( -44.1263, 17.3267, -11.4306, 1.44 ) }
    dend_73 { pt3dadd( -44.7247, 17.2661, -12.0175, 1.44 ) }
    dend_73 { pt3dadd( -46.2659, 17.0253, -13.4615, 1.44 ) }
    dend_73 { pt3dadd( -47.2817, 16.8085, -14.385, 1.8 ) }
    dend_73 { pt3dadd( -48.076, 16.5853, -15.0998, 1.8 ) }
    // Section: dend_69, id: dend_69, parent: soma_0 (entry count 55/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -3.03075, 12.2639, 1.77275, 1.32 ) }
    dend_69 { pt3dadd( -2.80258, 14.9511, 0.692197, 1.32 ) }
    dend_69 { pt3dadd( -2.58393, 17.7928, -0.314466, 1.32 ) }
    dend_69 { pt3dadd( -2.47242, 19.3362, -0.80369, 1.32 ) }
    dend_69 { pt3dadd( -2.35889, 20.9996, -1.26558, 1.32 ) }
    dend_69 { pt3dadd( -2.29123, 22.0375, -1.51491, 1.32 ) }
    dend_69 { pt3dadd( -2.19522, 23.2246, -1.75826, 1.32 ) }
    dend_69 { pt3dadd( -2.06677, 24.6755, -1.90884, 1.32 ) }
    dend_69 { pt3dadd( -1.97555, 25.5848, -1.87274, 1.32 ) }
    dend_69 { pt3dadd( -1.79034, 27.278, -1.73441, 1.08 ) }
    dend_69 { pt3dadd( -1.57129, 29.0855, -1.54519, 1.56 ) }
    dend_69 { pt3dadd( -1.33698, 31.0047, -1.29609, 1.56 ) }
    dend_69 { pt3dadd( -1.1232, 32.6777, -1.03634, 1.56 ) }
    dend_69 { pt3dadd( -0.534717, 36.5116, -0.325804, 1.56 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 69/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -5.85074, 9.81289, 11.3727, 1.8 ) }
    dend_64 { pt3dadd( -6.58013, 10.9091, 11.7974, 1.8 ) }
    dend_64 { pt3dadd( -7.38035, 12.0725, 12.2789, 1.8 ) }
    dend_64 { pt3dadd( -8.94595, 14.1765, 13.3232, 1.56 ) }
    dend_64 { pt3dadd( -9.3953, 14.7804, 13.6229, 1.56 ) }
    dend_64 { pt3dadd( -10.4218, 16.1599, 14.3076, 1.44 ) }
    dend_64 { pt3dadd( -11.492, 17.5983, 15.0215, 0.96 ) }
    dend_64 { pt3dadd( -11.9467, 18.2058, 15.3543, 0.96 ) }
    dend_64 { pt3dadd( -13.8276, 20.5761, 16.7742, 1.92 ) }
    dend_64 { pt3dadd( -19.089, 27.7184, 20.5015, 1.92 ) }
    dend_64 { pt3dadd( -25.9557, 33.1665, 24.7511, 1.92 ) }
    dend_64 { pt3dadd( -33.9403, 38.1146, 27.4373, 1.92 ) }
    dend_64 { pt3dadd( -41.2057, 44.1704, 29.6005, 1.92 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 1.42925, -10.8496, 11.5527, 2.64 ) }
    dend_41 { pt3dadd( 1.61391, -12.892, 11.396, 2.64 ) }
    dend_41 { pt3dadd( 1.82714, -15.2503, 11.215, 2.64 ) }
    dend_41 { pt3dadd( 1.9844, -16.9895, 11.0815, 2.64 ) }
    dend_41 { pt3dadd( 2.13103, -18.6114, 10.957, 2.64 ) }
    dend_41 { pt3dadd( 2.4294, -21.9113, 10.7037, 2.4 ) }
    dend_41 { pt3dadd( 2.73001, -25.2361, 10.4486, 3.37 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 4.77925, -11.6001, 13.0827, 2.16 ) }
    dend_18 { pt3dadd( 4.96854, -12.1363, 12.8931, 2.16 ) }
    dend_18 { pt3dadd( 5.46987, -13.8411, 12.4104, 2.16 ) }
    dend_18 { pt3dadd( 5.85192, -15.061, 12.1288, 2.16 ) }
    dend_18 { pt3dadd( 6.50961, -17.161, 11.644, 2.16 ) }
    dend_18 { pt3dadd( 6.99318, -18.705, 11.2876, 2.16 ) }
    dend_18 { pt3dadd( 7.3438, -19.8245, 11.0292, 2.16 ) }
    dend_18 { pt3dadd( 8.27074, -22.7403, 10.3457, 2.52 ) }
    dend_18 { pt3dadd( 8.92581, -25.0055, 9.81705, 3.0 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 98/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.610745, 11.9694, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( -0.008169, 16.2098, 11.8327, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 0.585238, 20.3856, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.11811, 24.1355, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.38754, 26.0315, 11.8327, 2.52 ) }
    dend_0 { pt3dadd( 1.71584, 28.3418, 11.8327, 2.52 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 4/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.169, -13.8605, -0.0046052, 1.28978 ) }
    axon_0 { pt3dadd( 6.433, -28.5011, -0.0046052, 1.28978 ) }
    axon_0 { pt3dadd( 9.697, -43.1416, -0.0046052, 1.28978 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 7/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -48.076, 16.5853, -15.0998, 1.2 ) }
    dend_75 { pt3dadd( -49.4162, 18.5281, -14.1233, 1.2 ) }
    dend_75 { pt3dadd( -50.8737, 19.9444, -13.3114, 1.2 ) }
    dend_75 { pt3dadd( -51.9265, 20.5416, -12.8963, 1.2 ) }
    dend_75 { pt3dadd( -52.6172, 20.8618, -12.6551, 1.56 ) }
    dend_75 { pt3dadd( -53.05, 21.0165, -12.5917, 1.56 ) }
    dend_75 { pt3dadd( -53.8145, 21.2388, -12.562, 1.56 ) }
    dend_75 { pt3dadd( -55.9365, 21.6429, -12.5992, 0.96 ) }
    dend_75 { pt3dadd( -59.2423, 22.1145, -12.8667, 1.56 ) }
    dend_75 { pt3dadd( -59.5704, 22.1554, -12.9016, 1.56 ) }
    dend_75 { pt3dadd( -63.6936, 22.5998, -13.4698, 1.08 ) }
    dend_75 { pt3dadd( -64.9614, 22.7078, -13.7056, 1.08 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 19/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -48.076, 16.5853, -15.0998, 1.08 ) }
    dend_74 { pt3dadd( -49.8337, 16.3049, -16.2101, 1.08 ) }
    dend_74 { pt3dadd( -51.6747, 15.8047, -17.4914, 1.56 ) }
    dend_74 { pt3dadd( -55.4398, 14.28, -20.7505, 0.84 ) }
    dend_74 { pt3dadd( -56.8175, 13.5159, -22.2779, 0.84 ) }
    dend_74 { pt3dadd( -57.2505, 13.2113, -22.8513, 0.84 ) }
    dend_74 { pt3dadd( -58.3241, 12.323, -24.4707, 0.84 ) }
    dend_74 { pt3dadd( -59.2471, 11.2423, -26.347, 0.84 ) }
    dend_74 { pt3dadd( -60.2072, 9.66379, -28.8771, 0.84 ) }
    dend_74 { pt3dadd( -60.8901, 8.07171, -31.0622, 0.84 ) }
    dend_74 { pt3dadd( -61.2898, 7.04232, -32.3704, 0.84 ) }
    dend_74 { pt3dadd( -61.7288, 6.02083, -33.6428, 0.84 ) }
    dend_74 { pt3dadd( -62.1298, 5.234, -34.5742, 0.84 ) }
    dend_74 { pt3dadd( -62.9147, 3.99776, -35.8254, 0.84 ) }
    dend_74 { pt3dadd( -63.7508, 2.94443, -36.5973, 0.84 ) }
    dend_74 { pt3dadd( -64.2959, 2.38804, -36.9051, 0.84 ) }
    dend_74 { pt3dadd( -65.499, 1.36297, -37.3732, 0.84 ) }
    dend_74 { pt3dadd( -66.3806, 0.717089, -37.6069, 0.84 ) }
    dend_74 { pt3dadd( -67.7801, -0.191323, -37.8548, 0.84 ) }
    dend_74 { pt3dadd( -69.5115, -1.3538, -38.0788, 0.84 ) }
    dend_74 { pt3dadd( -71.3871, -2.76188, -38.2702, 0.84 ) }
    dend_74 { pt3dadd( -72.5688, -3.83449, -38.3551, 0.84 ) }
    dend_74 { pt3dadd( -73.9382, -5.31148, -38.4575, 0.84 ) }
    dend_74 { pt3dadd( -76.0821, -8.03473, -38.7333, 0.84 ) }
    dend_74 { pt3dadd( -77.7602, -10.5807, -39.034, 1.32 ) }
    dend_74 { pt3dadd( -78.9436, -12.6837, -39.276, 0.6 ) }
    dend_74 { pt3dadd( -80.115, -15.1808, -39.5443, 1.2 ) }
    dend_74 { pt3dadd( -80.9308, -17.293, -39.797, 0.72 ) }
    dend_74 { pt3dadd( -81.5318, -19.3168, -40.0862, 0.72 ) }
    dend_74 { pt3dadd( -81.8025, -20.6437, -40.334, 0.72 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 49/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -0.534717, 36.5116, -0.325804, 1.32 ) }
    dend_70 { pt3dadd( 0.203036, 37.9607, 0.424319, 1.32 ) }
    dend_70 { pt3dadd( 1.87223, 41.5142, 2.00662, 0.96 ) }
    dend_70 { pt3dadd( 2.54483, 43.1677, 2.63687, 0.96 ) }
    dend_70 { pt3dadd( 3.0948, 44.897, 3.18387, 1.2 ) }
    dend_70 { pt3dadd( 3.32525, 45.8848, 3.4355, 1.2 ) }
    dend_70 { pt3dadd( 3.47903, 46.7565, 3.62673, 1.2 ) }
    dend_70 { pt3dadd( 3.51399, 47.734, 3.75205, 1.44 ) }
    dend_70 { pt3dadd( 3.28592, 49.0757, 3.75398, 1.08 ) }
    dend_70 { pt3dadd( 2.75571, 50.7804, 3.7555, 1.08 ) }
    dend_70 { pt3dadd( 2.01694, 52.6351, 3.75682, 1.56 ) }
    dend_70 { pt3dadd( 1.78266, 53.1408, 3.75701, 1.56 ) }
    dend_70 { pt3dadd( 1.06036, 54.5101, 3.75667, 1.56 ) }
    dend_70 { pt3dadd( 0.00626704, 56.2712, 3.75399, 1.56 ) }
    dend_70 { pt3dadd( -0.088344, 56.4071, 3.75338, 1.56 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 64/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -41.2057, 44.1704, 29.6005, 1.2 ) }
    dend_66 { pt3dadd( -47.0107, 50.1853, 32.6208, 1.2 ) }
    dend_66 { pt3dadd( -51.8417, 55.8218, 37.5003, 1.2 ) }
    dend_66 { pt3dadd( -57.8047, 61.7843, 40.3317, 1.2 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -41.2057, 44.1704, 29.6005, 1.44 ) }
    dend_65 { pt3dadd( -47.3549, 49.819, 32.7893, 1.2 ) }
    dend_65 { pt3dadd( -52.456, 56.3677, 35.9425, 1.2 ) }
    dend_65 { pt3dadd( -58.2397, 62.5261, 38.7418, 1.2 ) }
    dend_65 { pt3dadd( -64.8157, 68.0174, 41.2952, 1.2 ) }
    // Section: dend_61, id: dend_61, parent: dend_41 (entry count 73/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 2.73001, -25.2361, 10.4486, 1.2 ) }
    dend_61 { pt3dadd( 1.40037, -29.9467, 9.98712, 1.2 ) }
    dend_61 { pt3dadd( 0.663069, -32.7747, 9.68595, 1.2 ) }
    dend_61 { pt3dadd( -0.095907, -35.968, 9.33481, 1.2 ) }
    dend_61 { pt3dadd( -0.720791, -38.7952, 9.02488, 1.2 ) }
    dend_61 { pt3dadd( -1.11403, -40.8164, 8.80426, 1.2 ) }
    dend_61 { pt3dadd( -1.39737, -42.3309, 8.63467, 1.2 ) }
    dend_61 { pt3dadd( -1.55006, -43.4864, 8.46137, 1.2 ) }
    dend_61 { pt3dadd( -1.68819, -44.9905, 8.2294, 1.2 ) }
    dend_61 { pt3dadd( -1.70652, -45.8819, 8.11476, 1.2 ) }
    dend_61 { pt3dadd( -1.65554, -47.5813, 7.92003, 1.2 ) }
    dend_61 { pt3dadd( -1.62643, -48.8227, 7.80269, 1.2 ) }
    dend_61 { pt3dadd( -1.67223, -50.1422, 7.73604, 1.2 ) }
    dend_61 { pt3dadd( -1.81991, -51.1856, 7.74087, 1.2 ) }
    dend_61 { pt3dadd( -2.29508, -53.224, 7.85146, 1.2 ) }
    dend_61 { pt3dadd( -2.53965, -54.073, 7.92433, 1.2 ) }
    dend_61 { pt3dadd( -3.12071, -55.8767, 8.10803, 1.2 ) }
    dend_61 { pt3dadd( -4.11081, -58.9364, 8.44014, 1.68 ) }
    dend_61 { pt3dadd( -5.34394, -62.6552, 8.85256, 1.08 ) }
    dend_61 { pt3dadd( -6.41485, -65.9131, 9.20613, 0.72 ) }
    dend_61 { pt3dadd( -6.92432, -67.5833, 9.37211, 1.92 ) }
    dend_61 { pt3dadd( -8.11295, -71.9661, 9.75661, 0.96 ) }
    dend_61 { pt3dadd( -8.86699, -75.2094, 10.0011, 0.84 ) }
    dend_61 { pt3dadd( -9.20203, -77.0795, 10.1079, 1.44 ) }
    dend_61 { pt3dadd( -9.50407, -79.5623, 10.204, 1.08 ) }
    dend_61 { pt3dadd( -9.6931, -81.911, 10.2702, 1.08 ) }
    dend_61 { pt3dadd( -9.90541, -85.6997, 10.3604, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_61 { pt3dadd( -9.97901, -87.3196, 10.4033, 1.44 ) }
    dend_61 { pt3dadd( -10.1168, -89.6095, 10.478, 1.44 ) }
    dend_61 { pt3dadd( -10.3597, -92.6777, 10.6007, 0.72 ) }
    dend_61 { pt3dadd( -10.4793, -93.8751, 10.6578, 1.2 ) }
    dend_61 { pt3dadd( -10.7337, -96.0674, 10.7752, 1.2 ) }
    dend_61 { pt3dadd( -10.9195, -97.7669, 10.8619, 1.56 ) }
    dend_61 { pt3dadd( -11.2337, -100.106, 10.9281, 1.32 ) }
    dend_61 { pt3dadd( -11.6636, -102.738, 10.9682, 0.84 ) }
    dend_61 { pt3dadd( -12.1298, -105.83, 10.9467, 1.56 ) }
    dend_61 { pt3dadd( -12.3792, -107.661, 10.9098, 1.56 ) }
    dend_61 { pt3dadd( -12.7953, -110.933, 10.8175, 0.96 ) }
    dend_61 { pt3dadd( -13.1632, -113.951, 10.7154, 0.96 ) }
    dend_61 { pt3dadd( -13.4655, -116.276, 10.6408, 1.32 ) }
    dend_61 { pt3dadd( -13.932, -119.113, 10.5973, 1.32 ) }
    dend_61 { pt3dadd( -14.724, -123.026, 10.6341, 0.72 ) }
    dend_61 { pt3dadd( -15.0379, -124.339, 10.6773, 1.56 ) }
    dend_61 { pt3dadd( -15.4145, -125.635, 10.7435, 1.56 ) }
    dend_61 { pt3dadd( -16.2308, -128.133, 10.9117, 0.96 ) }
    dend_61 { pt3dadd( -17.0958, -130.264, 11.0752, 1.68 ) }
    dend_61 { pt3dadd( -18.6266, -133.58, 11.26, 1.08 ) }
    dend_61 { pt3dadd( -19.9106, -136.264, 11.3418, 0.96 ) }
    dend_61 { pt3dadd( -21.4802, -139.707, 11.3679, 1.44 ) }
    dend_61 { pt3dadd( -22.2887, -141.577, 11.3491, 1.08 ) }
    dend_61 { pt3dadd( -23.5325, -144.558, 11.2484, 0.84 ) }
    dend_61 { pt3dadd( -24.614, -147.246, 11.0817, 1.44 ) }
    dend_61 { pt3dadd( -25.1403, -148.579, 10.9785, 1.44 ) }
    dend_61 { pt3dadd( -26.1132, -151.219, 10.7639, 0.72 ) }
    dend_61 { pt3dadd( -26.7712, -153.156, 10.5818, 0.72 ) }
    dend_61 { pt3dadd( -27.9127, -156.655, 10.2226, 1.32 ) }
    dend_61 { pt3dadd( -28.7517, -159.245, 9.91415, 0.96 ) }
    dend_61 { pt3dadd( -29.163, -160.347, 9.80123, 0.96 ) }
    dend_61 { pt3dadd( -29.6583, -161.573, 9.6468, 0.96 ) }
    dend_61 { pt3dadd( -30.3927, -163.13, 9.42406, 0.96 ) }
    dend_61 { pt3dadd( -30.8499, -164.033, 9.3058, 0.96 ) }
    dend_61 { pt3dadd( -31.5271, -165.25, 9.11982, 0.96 ) }
    dend_61 { pt3dadd( -32.2624, -166.522, 8.91629, 0.96 ) }
    dend_61 { pt3dadd( -34.4719, -170.3, 8.32143, 1.44 ) }
    dend_61 { pt3dadd( -36.9903, -174.651, 7.68558, 0.48 ) }
    dend_61 { pt3dadd( -38.1578, -176.765, 7.41127, 1.56 ) }
    dend_61 { pt3dadd( -40.4302, -181.108, 6.89835, 0.84 ) }
    dend_61 { pt3dadd( -41.0167, -182.295, 6.74125, 0.84 ) }
    dend_61 { pt3dadd( -41.9866, -184.41, 6.43508, 0.84 ) }
    dend_61 { pt3dadd( -42.697, -186.166, 6.19428, 0.84 ) }
    dend_61 { pt3dadd( -43.2986, -187.906, 5.9919, 0.84 ) }
    dend_61 { pt3dadd( -43.8507, -189.583, 5.84131, 0.84 ) }
    dend_61 { pt3dadd( -45.249, -194.135, 5.54455, 0.6 ) }
    dend_61 { pt3dadd( -46.0516, -196.648, 5.36371, 1.08 ) }
    dend_61 { pt3dadd( -47.2148, -200.132, 5.08797, 0.72 ) }
    dend_61 { pt3dadd( -48.3533, -203.368, 4.8345, 0.6 ) }
    dend_61 { pt3dadd( -48.9329, -204.903, 4.7379, 1.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 50/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.73001, -25.2361, 10.4486, 1.92 ) }
    dend_42 { pt3dadd( 2.74386, -28.7436, 10.2145, 1.92 ) }
    dend_42 { pt3dadd( 2.75903, -32.5835, 9.95823, 1.92 ) }
    dend_42 { pt3dadd( 2.77613, -36.914, 9.66922, 2.28 ) }
    dend_42 { pt3dadd( 2.78521, -39.2132, 9.51578, 2.28 ) }
    // Section: dend_40, id: dend_40, parent: dend_18 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.92581, -25.0055, 9.81705, 1.32 ) }
    dend_40 { pt3dadd( 10.806, -25.9253, 10.1689, 1.32 ) }
    dend_40 { pt3dadd( 12.0809, -26.417, 10.4422, 1.32 ) }
    dend_40 { pt3dadd( 13.1221, -26.7581, 10.6838, 1.32 ) }
    dend_40 { pt3dadd( 14.2448, -27.0945, 10.958, 1.32 ) }
    dend_40 { pt3dadd( 15.7443, -27.5, 11.3497, 1.32 ) }
    dend_40 { pt3dadd( 16.5343, -27.7144, 11.5683, 1.32 ) }
    dend_40 { pt3dadd( 18.5914, -28.2507, 12.2264, 1.08 ) }
    dend_40 { pt3dadd( 19.2439, -28.4142, 12.4517, 1.08 ) }
    dend_40 { pt3dadd( 19.5136, -28.4844, 12.5502, 1.08 ) }
    dend_40 { pt3dadd( 20.9545, -28.8957, 13.105, 1.44 ) }
    dend_40 { pt3dadd( 22.058, -29.2951, 13.5245, 1.08 ) }
    dend_40 { pt3dadd( 22.6125, -29.5518, 13.7328, 1.08 ) }
    dend_40 { pt3dadd( 23.9335, -30.2482, 14.1912, 1.08 ) }
    dend_40 { pt3dadd( 24.7921, -30.7, 14.4603, 0.84 ) }
    dend_40 { pt3dadd( 25.6524, -31.1544, 14.7015, 0.84 ) }
    dend_40 { pt3dadd( 26.689, -31.6497, 14.9554, 0.84 ) }
    dend_40 { pt3dadd( 27.531, -32.0334, 15.1531, 0.84 ) }
    dend_40 { pt3dadd( 29.5875, -32.9452, 15.5386, 1.2 ) }
    dend_40 { pt3dadd( 30.7587, -33.4458, 15.6897, 0.84 ) }
    dend_40 { pt3dadd( 31.7673, -33.8214, 15.7605, 0.84 ) }
    dend_40 { pt3dadd( 33.7468, -34.4559, 15.8194, 0.96 ) }
    dend_40 { pt3dadd( 35.6977, -35.058, 15.8525, 0.72 ) }
    dend_40 { pt3dadd( 37.8765, -35.7187, 15.8431, 1.2 ) }
    dend_40 { pt3dadd( 39.0834, -36.088, 15.7897, 1.2 ) }
    dend_40 { pt3dadd( 40.3596, -36.4362, 15.674, 0.6 ) }
    dend_40 { pt3dadd( 40.9544, -36.5781, 15.5896, 0.6 ) }
    dend_40 { pt3dadd( 47.8843, -38.0666, 15.8526, 0.6 ) }
    dend_40 { pt3dadd( 54.4376, -40.6671, 15.617, 0.6 ) }
    dend_40 { pt3dadd( 61.4349, -41.8426, 15.8815, 0.6 ) }
    dend_40 { pt3dadd( 68.5399, -41.9965, 16.2083, 0.6 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 86/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 8.92581, -25.0055, 9.81705, 1.8 ) }
    dend_19 { pt3dadd( 9.20421, -27.7282, 9.73906, 1.8 ) }
    dend_19 { pt3dadd( 9.58569, -30.5015, 9.66856, 1.8 ) }
    dend_19 { pt3dadd( 9.87226, -32.1182, 9.63409, 1.8 ) }
    dend_19 { pt3dadd( 10.033, -32.9104, 9.6005, 1.8 ) }
    dend_19 { pt3dadd( 10.281, -34.0535, 9.53566, 1.8 ) }
    dend_19 { pt3dadd( 10.5187, -35.1058, 9.50865, 1.8 ) }
    dend_19 { pt3dadd( 10.7606, -35.9642, 9.51781, 1.8 ) }
    dend_19 { pt3dadd( 11.1002, -37.3584, 9.57032, 1.8 ) }
    dend_19 { pt3dadd( 11.2546, -38.2858, 9.60634, 1.8 ) }
    dend_19 { pt3dadd( 11.419, -39.595, 9.66037, 1.8 ) }
    dend_19 { pt3dadd( 11.645, -42.0157, 9.64811, 1.8 ) }
    dend_19 { pt3dadd( 11.7395, -43.2551, 9.6063, 1.8 ) }
    dend_19 { pt3dadd( 11.9118, -45.7438, 9.47195, 2.16 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_19 { pt3dadd( 12.0833, -47.6563, 9.31874, 1.92 ) }
    dend_19 { pt3dadd( 12.1841, -48.4482, 9.23661, 1.92 ) }
    dend_19 { pt3dadd( 12.8011, -52.9511, 8.63998, 2.16 ) }
    dend_19 { pt3dadd( 13.0746, -54.7302, 8.32248, 2.16 ) }
    dend_19 { pt3dadd( 13.2987, -55.9308, 8.08494, 2.16 ) }
    dend_19 { pt3dadd( 13.8519, -58.2504, 7.59292, 1.92 ) }
    dend_19 { pt3dadd( 14.2776, -59.7076, 7.27227, 2.16 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 1.71584, 28.3418, 11.8327, 1.8 ) }
    dend_1 { pt3dadd( 3.51839, 31.6706, 13.2179, 1.8 ) }
    dend_1 { pt3dadd( 5.1591, 34.7005, 14.4786, 1.8 ) }
    dend_1 { pt3dadd( 6.87609, 37.8713, 15.798, 1.8 ) }
    dend_1 { pt3dadd( 8.89542, 41.6004, 17.3497, 1.8 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 12/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.697, -43.1416, -0.0046052, 0.933573 ) }
    axon_1 { pt3dadd( 12.961, -57.7822, -0.0046052, 0.933573 ) }
    axon_1 { pt3dadd( 16.225, -72.4228, -0.0046052, 0.933573 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 15/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -64.9614, 22.7078, -13.7056, 1.68 ) }
    dend_77 { pt3dadd( -65.2211, 22.6928, -13.7944, 1.68 ) }
    dend_77 { pt3dadd( -68.3134, 22.6359, -14.7296, 1.2 ) }
    dend_77 { pt3dadd( -70.7796, 22.711, -15.3752, 1.68 ) }
    dend_77 { pt3dadd( -71.8788, 22.7928, -15.6366, 1.68 ) }
    dend_77 { pt3dadd( -73.4981, 23.0109, -15.9915, 1.2 ) }
    dend_77 { pt3dadd( -76.3466, 23.5185, -16.6104, 1.2 ) }
    dend_77 { pt3dadd( -77.9646, 23.95, -17.0187, 0.84 ) }
    dend_77 { pt3dadd( -79.565, 24.6218, -17.5128, 1.32 ) }
    dend_77 { pt3dadd( -80.4834, 25.1313, -17.8909, 1.32 ) }
    dend_77 { pt3dadd( -81.9563, 26.0746, -18.641, 0.84 ) }
    dend_77 { pt3dadd( -82.5791, 26.5256, -19.0277, 0.84 ) }
    dend_77 { pt3dadd( -84.7474, 28.258, -20.5769, 0.84 ) }
    dend_77 { pt3dadd( -86.3804, 29.5878, -21.8151, 0.84 ) }
    dend_77 { pt3dadd( -87.4675, 30.4869, -22.6357, 0.84 ) }
    dend_77 { pt3dadd( -88.3153, 31.155, -23.213, 0.84 ) }
    dend_77 { pt3dadd( -89.4651, 31.9789, -23.8828, 0.84 ) }
    dend_77 { pt3dadd( -90.638, 32.7597, -24.4188, 0.84 ) }
    dend_77 { pt3dadd( -92.3546, 33.8751, -24.966, 0.84 ) }
    dend_77 { pt3dadd( -93.5554, 34.6444, -25.2526, 0.84 ) }
    dend_77 { pt3dadd( -95.2261, 35.7204, -25.583, 0.84 ) }
    dend_77 { pt3dadd( -97.319, 37.1405, -25.9705, 0.84 ) }
    dend_77 { pt3dadd( -98.4247, 37.9249, -26.1475, 0.84 ) }
    dend_77 { pt3dadd( -100.674, 39.5731, -26.5219, 1.32 ) }
    dend_77 { pt3dadd( -102.254, 40.7528, -26.8054, 1.32 ) }
    dend_77 { pt3dadd( -104.384, 42.437, -27.1624, 0.96 ) }
    dend_77 { pt3dadd( -105.972, 43.7982, -27.4392, 0.96 ) }
    dend_77 { pt3dadd( -106.872, 44.5563, -27.6006, 0.96 ) }
    dend_77 { pt3dadd( -108.091, 45.5314, -27.8717, 0.96 ) }
    dend_77 { pt3dadd( -109.157, 46.276, -28.1439, 0.96 ) }
    dend_77 { pt3dadd( -112.055, 48.0743, -28.8966, 0.72 ) }
    dend_77 { pt3dadd( -113.105, 48.6329, -29.1765, 0.72 ) }
    dend_77 { pt3dadd( -117.201, 50.4453, -30.253, 1.08 ) }
    dend_77 { pt3dadd( -118.375, 50.898, -30.5608, 1.08 ) }
    dend_77 { pt3dadd( -122.163, 52.2801, -31.3844, 1.08 ) }
    dend_77 { pt3dadd( -124.125, 53.0022, -31.8027, 1.08 ) }
    dend_77 { pt3dadd( -126.322, 53.8908, -32.2165, 1.08 ) }
    dend_77 { pt3dadd( -128.262, 54.7873, -32.536, 1.08 ) }
    dend_77 { pt3dadd( -128.952, 55.1662, -32.6546, 1.08 ) }
    dend_77 { pt3dadd( -131.926, 56.9978, -33.1791, 1.08 ) }
    dend_77 { pt3dadd( -134.181, 58.5493, -33.6314, 1.08 ) }
    dend_77 { pt3dadd( -138.421, 61.5436, -34.5936, 1.44 ) }
    dend_77 { pt3dadd( -139.544, 62.3278, -34.8784, 1.44 ) }
    dend_77 { pt3dadd( -142.243, 64.0202, -35.645, 1.2 ) }
    dend_77 { pt3dadd( -143.333, 64.5563, -35.9257, 1.2 ) }
    dend_77 { pt3dadd( -144.844, 65.0982, -36.2768, 1.2 ) }
    dend_77 { pt3dadd( -149.161, 66.2413, -37.0992, 1.08 ) }
    dend_77 { pt3dadd( -151.834, 66.823, -37.6238, 1.08 ) }
    dend_77 { pt3dadd( -155.147, 67.5154, -38.2176, 1.08 ) }
    dend_77 { pt3dadd( -159.876, 68.4468, -39.0306, 0.72 ) }
    dend_77 { pt3dadd( -162.954, 69.0375, -39.5744, 0.72 ) }
    dend_77 { pt3dadd( -165.415, 69.495, -40.0118, 1.08 ) }
    dend_77 { pt3dadd( -168.416, 69.9755, -40.5712, 0.84 ) }
    dend_77 { pt3dadd( -170.118, 70.1529, -40.9667, 0.84 ) }
    dend_77 { pt3dadd( -171.302, 70.2232, -41.3167, 0.84 ) }
    dend_77 { pt3dadd( -172.695, 70.2799, -41.8149, 0.84 ) }
    dend_77 { pt3dadd( -175.083, 70.2304, -42.6827, 0.84 ) }
    dend_77 { pt3dadd( -178.489, 69.8844, -43.8471, 0.84 ) }
    dend_77 { pt3dadd( -183.655, 68.9298, -45.5109, 0.6 ) }
    dend_77 { pt3dadd( -184.392, 68.7631, -45.7637, 0.6 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 75/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -64.9614, 22.7078, -13.7056, 1.32 ) }
    dend_76 { pt3dadd( -65.3348, 23.7236, -13.9694, 1.32 ) }
    dend_76 { pt3dadd( -65.8555, 25.1374, -14.3961, 0.84 ) }
    dend_76 { pt3dadd( -66.4391, 26.9063, -14.9967, 1.44 ) }
    dend_76 { pt3dadd( -67.3022, 29.4662, -16.0308, 1.08 ) }
    dend_76 { pt3dadd( -67.8778, 30.9476, -16.6939, 1.08 ) }
    dend_76 { pt3dadd( -68.1004, 31.4495, -16.9404, 1.08 ) }
    dend_76 { pt3dadd( -68.9579, 33.1433, -17.9263, 1.56 ) }
    dend_76 { pt3dadd( -69.9352, 34.6866, -18.9928, 0.96 ) }
    dend_76 { pt3dadd( -70.7316, 35.6574, -19.7686, 0.96 ) }
    dend_76 { pt3dadd( -71.7188, 36.427, -20.4471, 0.96 ) }
    dend_76 { pt3dadd( -72.5104, 36.8209, -20.8543, 0.96 ) }
    dend_76 { pt3dadd( -73.2649, 37.0768, -21.179, 0.96 ) }
    dend_76 { pt3dadd( -74.009, 37.219, -21.4398, 0.96 ) }
    dend_76 { pt3dadd( -75.0744, 37.3809, -21.7434, 0.96 ) }
    dend_76 { pt3dadd( -77.3413, 37.7541, -22.3519, 0.72 ) }
    dend_76 { pt3dadd( -79.3214, 38.0465, -22.9196, 0.72 ) }
    dend_76 { pt3dadd( -80.7942, 38.2483, -23.3412, 0.72 ) }
    dend_76 { pt3dadd( -81.8992, 38.384, -23.6706, 0.72 ) }
    dend_76 { pt3dadd( -83.267, 38.5479, -24.0957, 0.72 ) }
    dend_76 { pt3dadd( -85.3665, 38.8389, -24.7658, 0.72 ) }
    dend_76 { pt3dadd( -87.6274, 39.2061, -25.4702, 1.2 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 97/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -0.088344, 56.4071, 3.75338, 1.32 ) }
    dend_72 { pt3dadd( -0.508613, 57.1675, 4.05006, 1.32 ) }
    dend_72 { pt3dadd( -1.10105, 58.1456, 4.38581, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_72 { pt3dadd( -1.90763, 59.4814, 4.81997, 1.08 ) }
    dend_72 { pt3dadd( -2.40585, 60.3423, 5.08231, 1.08 ) }
    dend_72 { pt3dadd( -2.68896, 60.8695, 5.22911, 1.08 ) }
    dend_72 { pt3dadd( -3.09807, 61.6847, 5.437, 1.08 ) }
    dend_72 { pt3dadd( -3.55762, 62.5881, 5.60234, 1.08 ) }
    dend_72 { pt3dadd( -3.7738, 63.0078, 5.6668, 1.08 ) }
    dend_72 { pt3dadd( -4.03074, 63.5347, 5.71924, 1.08 ) }
    dend_72 { pt3dadd( -4.37533, 64.2062, 5.78096, 1.08 ) }
    dend_72 { pt3dadd( -4.64157, 64.6483, 5.82648, 1.08 ) }
    dend_72 { pt3dadd( -4.94649, 65.0167, 5.87098, 1.08 ) }
    dend_72 { pt3dadd( -5.32841, 65.3212, 5.91363, 1.08 ) }
    dend_72 { pt3dadd( -5.9134, 65.7112, 5.96627, 1.08 ) }
    dend_72 { pt3dadd( -6.65014, 66.1802, 6.04291, 1.08 ) }
    dend_72 { pt3dadd( -7.30034, 66.6105, 6.12049, 1.08 ) }
    dend_72 { pt3dadd( -7.99584, 67.1453, 6.21798, 1.08 ) }
    dend_72 { pt3dadd( -8.61944, 67.8284, 6.22459, 0.96 ) }
    dend_72 { pt3dadd( -8.80415, 68.322, 6.12989, 0.96 ) }
    dend_72 { pt3dadd( -8.86008, 69.0784, 5.8936, 0.96 ) }
    dend_72 { pt3dadd( -8.8352, 69.6969, 5.68139, 0.96 ) }
    dend_72 { pt3dadd( -8.78505, 70.2312, 5.49333, 0.96 ) }
    dend_72 { pt3dadd( -8.53802, 72.2701, 4.76103, 0.72 ) }
    dend_72 { pt3dadd( -8.44724, 73.1137, 4.43949, 0.72 ) }
    dend_72 { pt3dadd( -8.41008, 73.8396, 4.15868, 0.72 ) }
    dend_72 { pt3dadd( -8.40397, 74.6172, 3.88053, 0.72 ) }
    dend_72 { pt3dadd( -8.44151, 75.9334, 3.49488, 0.72 ) }
    dend_72 { pt3dadd( -8.47815, 76.5885, 3.35299, 0.72 ) }
    dend_72 { pt3dadd( -8.54177, 77.2042, 3.28979, 0.72 ) }
    dend_72 { pt3dadd( -8.66791, 78.0913, 3.16727, 0.72 ) }
    dend_72 { pt3dadd( -8.87113, 79.4594, 2.9563, 0.72 ) }
    dend_72 { pt3dadd( -9.05807, 80.438, 2.80019, 0.72 ) }
    dend_72 { pt3dadd( -9.269, 81.2553, 2.67202, 0.72 ) }
    dend_72 { pt3dadd( -9.681, 82.5106, 2.47809, 1.2 ) }
    dend_72 { pt3dadd( -10.5551, 84.427, 2.19962, 1.08 ) }
    dend_72 { pt3dadd( -11.1206, 85.2709, 2.09831, 1.08 ) }
    dend_72 { pt3dadd( -11.7519, 85.9996, 2.03083, 1.08 ) }
    dend_72 { pt3dadd( -12.2313, 86.5008, 2.00935, 1.08 ) }
    dend_72 { pt3dadd( -12.678, 86.9432, 1.99117, 0.72 ) }
    dend_72 { pt3dadd( -13.9552, 88.1841, 1.92368, 1.2 ) }
    dend_72 { pt3dadd( -15.3257, 89.5042, 1.88343, 1.08 ) }
    dend_72 { pt3dadd( -16.4793, 90.6437, 1.85407, 1.44 ) }
    dend_72 { pt3dadd( -17.0458, 91.2894, 1.84038, 1.44 ) }
    dend_72 { pt3dadd( -17.8989, 92.5054, 1.81748, 1.2 ) }
    dend_72 { pt3dadd( -18.3661, 93.3691, 1.80625, 1.2 ) }
    dend_72 { pt3dadd( -18.8566, 94.655, 1.81455, 1.08 ) }
    dend_72 { pt3dadd( -19.2221, 96.1419, 1.86424, 1.08 ) }
    dend_72 { pt3dadd( -19.4969, 97.617, 1.97147, 0.96 ) }
    dend_72 { pt3dadd( -19.7223, 99.0963, 2.12669, 0.96 ) }
    dend_72 { pt3dadd( -19.8136, 99.8682, 2.24348, 1.2 ) }
    dend_72 { pt3dadd( -19.8929, 100.795, 2.33507, 0.72 ) }
    dend_72 { pt3dadd( -19.9395, 102.64, 2.37743, 1.2 ) }
    dend_72 { pt3dadd( -19.938, 103.129, 2.34518, 1.2 ) }
    dend_72 { pt3dadd( -19.9831, 104.095, 2.22254, 1.2 ) }
    dend_72 { pt3dadd( -20.1099, 105.047, 2.04449, 1.2 ) }
    dend_72 { pt3dadd( -20.4963, 106.871, 1.5898, 1.2 ) }
    dend_72 { pt3dadd( -20.7648, 107.685, 1.32685, 1.2 ) }
    dend_72 { pt3dadd( -21.0197, 108.189, 1.13409, 1.2 ) }
    dend_72 { pt3dadd( -21.7693, 109.194, 0.77957, 0.96 ) }
    dend_72 { pt3dadd( -22.3945, 109.773, 0.637567, 1.2 ) }
    dend_72 { pt3dadd( -22.8081, 110.098, 0.601634, 1.2 ) }
    dend_72 { pt3dadd( -23.5115, 110.615, 0.604686, 1.2 ) }
    dend_72 { pt3dadd( -23.952, 110.946, 0.607012, 1.2 ) }
    dend_72 { pt3dadd( -25.0337, 111.839, 0.61379, 1.2 ) }
    dend_72 { pt3dadd( -26.2524, 113.042, 0.622626, 1.2 ) }
    dend_72 { pt3dadd( -26.8994, 113.802, 0.627497, 1.2 ) }
    dend_72 { pt3dadd( -27.3143, 114.346, 0.630345, 1.2 ) }
    dend_72 { pt3dadd( -27.7609, 115.021, 0.633268, 1.2 ) }
    dend_72 { pt3dadd( -28.1389, 115.674, 0.635566, 1.2 ) }
    dend_72 { pt3dadd( -28.7271, 116.934, 0.6388, 0.84 ) }
    dend_72 { pt3dadd( -29.2437, 118.211, 0.656965, 1.32 ) }
    dend_72 { pt3dadd( -29.9709, 120.118, 0.703173, 0.84 ) }
    dend_72 { pt3dadd( -30.3298, 121.075, 0.735097, 0.84 ) }
    dend_72 { pt3dadd( -30.6113, 121.826, 0.766305, 0.84 ) }
    dend_72 { pt3dadd( -30.9893, 122.848, 0.816281, 0.84 ) }
    dend_72 { pt3dadd( -31.4488, 124.014, 0.908419, 0.84 ) }
    dend_72 { pt3dadd( -31.7457, 124.667, 0.977456, 0.84 ) }
    dend_72 { pt3dadd( -32.2034, 125.44, 1.02817, 0.84 ) }
    dend_72 { pt3dadd( -32.5408, 125.873, 1.03445, 0.84 ) }
    dend_72 { pt3dadd( -33.1882, 126.527, 1.01082, 1.2 ) }
    dend_72 { pt3dadd( -34.2433, 127.411, 0.906178, 0.84 ) }
    dend_72 { pt3dadd( -35.2285, 128.127, 0.788606, 0.84 ) }
    dend_72 { pt3dadd( -36.3856, 128.857, 0.661413, 1.2 ) }
    dend_72 { pt3dadd( -37.3387, 129.291, 0.573947, 0.6 ) }
    dend_72 { pt3dadd( -38.5008, 129.757, 0.463022, 0.6 ) }
    dend_72 { pt3dadd( -39.7383, 130.168, 0.340312, 1.08 ) }
    dend_72 { pt3dadd( -41.1615, 130.541, 0.193616, 0.48 ) }
    dend_72 { pt3dadd( -41.9752, 130.698, 0.148504, 0.48 ) }
    dend_72 { pt3dadd( -44.3596, 131.029, 0.227453, 0.84 ) }
    dend_72 { pt3dadd( -48.1099, 137.001, 1.10329, 0.84 ) }
    dend_72 { pt3dadd( -51.7928, 143.067, 0.961115, 0.84 ) }
    dend_72 { pt3dadd( -54.5865, 149.543, 0.701692, 0.84 ) }
    dend_72 { pt3dadd( -57.5844, 155.838, -0.505854, 0.84 ) }
    dend_72 { pt3dadd( -60.38, 162.227, -1.65041, 0.84 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 92/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -0.088344, 56.4071, 3.75338, 1.32 ) }
    dend_71 { pt3dadd( -2.98472, 59.1845, 3.02824, 1.32 ) }
    dend_71 { pt3dadd( -3.9698, 60.1884, 2.69606, 1.32 ) }
    dend_71 { pt3dadd( -5.13533, 61.5196, 2.20034, 1.32 ) }
    dend_71 { pt3dadd( -6.25537, 63.0332, 1.58315, 1.32 ) }
    dend_71 { pt3dadd( -6.8762, 63.9566, 1.19756, 1.32 ) }
    dend_71 { pt3dadd( -7.74757, 65.5699, 0.553238, 1.32 ) }
    dend_71 { pt3dadd( -8.28888, 67.2459, -0.156319, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_71 { pt3dadd( -8.59455, 69.2341, -0.964031, 1.56 ) }
    dend_71 { pt3dadd( -8.51195, 71.2113, -1.73238, 1.56 ) }
    dend_71 { pt3dadd( -8.33885, 71.915, -1.96246, 1.56 ) }
    dend_71 { pt3dadd( -7.14701, 74.6968, -2.78718, 1.2 ) }
    dend_71 { pt3dadd( -6.56396, 75.631, -3.03516, 1.2 ) }
    dend_71 { pt3dadd( -5.49828, 76.9129, -3.38433, 1.2 ) }
    dend_71 { pt3dadd( -3.70189, 78.6292, -3.92456, 1.08 ) }
    dend_71 { pt3dadd( -2.32683, 79.7415, -4.33346, 1.08 ) }
    dend_71 { pt3dadd( -1.45131, 80.3732, -4.64775, 1.08 ) }
    dend_71 { pt3dadd( -0.61308, 80.9474, -5.03621, 1.08 ) }
    dend_71 { pt3dadd( 0.23068, 81.6102, -5.54804, 1.08 ) }
    dend_71 { pt3dadd( 1.75593, 83.0518, -6.75933, 1.8 ) }
    dend_71 { pt3dadd( 2.03387, 83.4128, -7.07623, 1.8 ) }
    dend_71 { pt3dadd( 3.02044, 85.3763, -8.75699, 1.32 ) }
    dend_71 { pt3dadd( 3.34975, 86.5231, -9.71064, 1.32 ) }
    dend_71 { pt3dadd( 3.40645, 87.9935, -10.8877, 1.08 ) }
    dend_71 { pt3dadd( 3.28859, 88.4168, -11.1993, 1.08 ) }
    dend_71 { pt3dadd( 2.68591, 89.4724, -11.8545, 1.08 ) }
    dend_71 { pt3dadd( 1.90984, 90.5842, -12.4713, 1.44 ) }
    dend_71 { pt3dadd( 1.25746, 91.3947, -12.8848, 1.44 ) }
    dend_71 { pt3dadd( 0.454616, 92.3746, -13.3962, 1.44 ) }
    dend_71 { pt3dadd( -0.226459, 93.2359, -13.8978, 1.44 ) }
    dend_71 { pt3dadd( -1.53665, 95.146, -15.1116, 0.84 ) }
    dend_71 { pt3dadd( -2.18254, 96.2913, -15.8553, 0.84 ) }
    dend_71 { pt3dadd( -3.16618, 98.6655, -17.4574, 1.44 ) }
    dend_71 { pt3dadd( -3.56777, 100.025, -18.2126, 1.44 ) }
    dend_71 { pt3dadd( -3.9745, 102.071, -19.1434, 0.96 ) }
    dend_71 { pt3dadd( -4.32263, 104.176, -20.0745, 0.96 ) }
    dend_71 { pt3dadd( -4.49581, 105.249, -20.5247, 0.96 ) }
    dend_71 { pt3dadd( -4.64258, 106.843, -21.0599, 0.72 ) }
    dend_71 { pt3dadd( -4.48912, 111.043, -21.9089, 1.2 ) }
    dend_71 { pt3dadd( -4.27014, 112.859, -22.0547, 1.2 ) }
    // Section: dend_68, id: dend_68, parent: dend_66 (entry count 32/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -57.8047, 61.7843, 40.3317, 0.6 ) }
    dend_68 { pt3dadd( -63.1105, 68.4997, 43.6571, 0.6 ) }
    dend_68 { pt3dadd( -67.1436, 76.3733, 45.7621, 0.6 ) }
    dend_68 { pt3dadd( -70.2723, 84.1374, 49.2587, 0.6 ) }
    dend_68 { pt3dadd( -74.8197, 91.177, 52.919, 0.6 ) }
    dend_68 { pt3dadd( -78.4563, 98.2938, 57.3112, 0.6 ) }
    dend_68 { pt3dadd( -82.7091, 105.212, 61.5147, 0.6 ) }
    dend_68 { pt3dadd( -87.1775, 112.625, 64.4044, 0.6 ) }
    dend_68 { pt3dadd( -93.0247, 119.462, 66.3119, 0.6 ) }
    dend_68 { pt3dadd( -98.8378, 126.064, 69.015, 0.6 ) }
    dend_68 { pt3dadd( -103.275, 132.893, 73.1942, 0.6 ) }
    dend_68 { pt3dadd( -107.852, 140.487, 75.339, 0.6 ) }
    dend_68 { pt3dadd( -111.278, 148.339, 78.3328, 0.6 ) }
    dend_68 { pt3dadd( -115.299, 155.668, 81.9699, 0.6 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 46/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -57.8047, 61.7843, 40.3317, 0.84 ) }
    dend_67 { pt3dadd( -67.0175, 67.343, 45.2365, 0.6 ) }
    dend_67 { pt3dadd( -74.6243, 74.7389, 50.1989, 0.6 ) }
    dend_67 { pt3dadd( -79.9822, 83.2899, 55.8802, 0.6 ) }
    dend_67 { pt3dadd( -84.4648, 92.3368, 61.4544, 0.6 ) }
    dend_67 { pt3dadd( -89.6895, 100.708, 67.508, 0.6 ) }
    dend_67 { pt3dadd( -97.4362, 108.365, 71.8308, 0.6 ) }
    dend_67 { pt3dadd( -104.419, 117.015, 75.3915, 0.6 ) }
    dend_67 { pt3dadd( -111.274, 125.502, 79.5161, 0.6 ) }
    dend_67 { pt3dadd( -117.51, 134.513, 83.4018, 0.6 ) }
    dend_67 { pt3dadd( -123.571, 143.288, 88.0036, 0.6 ) }
    dend_67 { pt3dadd( -128.623, 153.385, 90.5786, 0.6 ) }
    dend_67 { pt3dadd( -133.0, 163.55, 93.8424, 0.6 ) }
    dend_67 { pt3dadd( -136.376, 173.994, 97.2515, 0.6 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 60/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -48.9329, -204.903, 4.7379, 0.96 ) }
    dend_63 { pt3dadd( -50.2933, -204.337, 5.86801, 0.96 ) }
    dend_63 { pt3dadd( -51.3286, -203.906, 6.72805, 0.96 ) }
    dend_63 { pt3dadd( -52.0644, -203.6, 7.33926, 0.72 ) }
    dend_63 { pt3dadd( -52.6059, -203.375, 7.78914, 0.72 ) }
    dend_63 { pt3dadd( -53.0658, -203.184, 8.17115, 0.72 ) }
    dend_63 { pt3dadd( -53.8486, -202.858, 8.82149, 1.08 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 67/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -48.9329, -204.903, 4.7379, 0.96 ) }
    dend_62 { pt3dadd( -50.9333, -208.424, 4.39001, 0.96 ) }
    dend_62 { pt3dadd( -51.8528, -209.666, 3.95199, 0.96 ) }
    dend_62 { pt3dadd( -52.8765, -211.102, 3.31306, 1.32 ) }
    dend_62 { pt3dadd( -54.069, -212.994, 2.4888, 0.6 ) }
    dend_62 { pt3dadd( -54.7383, -214.125, 1.87295, 0.6 ) }
    dend_62 { pt3dadd( -55.4652, -215.478, 1.10801, 1.2 ) }
    dend_62 { pt3dadd( -57.5616, -219.806, -1.32034, 1.2 ) }
    dend_62 { pt3dadd( -58.2713, -221.263, -2.1771, 1.56 ) }
    dend_62 { pt3dadd( -59.2311, -223.354, -3.41834, 0.96 ) }
    dend_62 { pt3dadd( -60.7509, -227.161, -5.59547, 0.6 ) }
    dend_62 { pt3dadd( -61.3362, -228.902, -6.46644, 1.08 ) }
    dend_62 { pt3dadd( -61.8597, -230.508, -7.2074, 0.72 ) }
    dend_62 { pt3dadd( -62.1537, -231.336, -7.49861, 0.72 ) }
    dend_62 { pt3dadd( -62.6583, -232.468, -7.8656, 1.08 ) }
    dend_62 { pt3dadd( -63.2674, -233.693, -8.20622, 0.72 ) }
    dend_62 { pt3dadd( -63.988, -235.093, -8.45047, 0.72 ) }
    dend_62 { pt3dadd( -66.0032, -238.749, -9.04682, 0.48 ) }
    dend_62 { pt3dadd( -66.753, -240.067, -9.23849, 1.56 ) }
    dend_62 { pt3dadd( -68.0981, -242.36, -9.46817, 1.08 ) }
    dend_62 { pt3dadd( -68.6534, -243.266, -9.5047, 0.72 ) }
    dend_62 { pt3dadd( -69.7304, -245.012, -9.46678, 1.08 ) }
    dend_62 { pt3dadd( -70.7416, -246.64, -9.38925, 0.72 ) }
    dend_62 { pt3dadd( -71.2311, -247.493, -9.30739, 0.72 ) }
    dend_62 { pt3dadd( -72.4185, -249.571, -9.20802, 1.2 ) }
    dend_62 { pt3dadd( -73.3383, -251.223, -9.20948, 0.72 ) }
    dend_62 { pt3dadd( -73.7481, -251.973, -9.23396, 0.72 ) }
    dend_62 { pt3dadd( -74.8485, -254.239, -9.39063, 0.72 ) }
    dend_62 { pt3dadd( -75.4086, -255.575, -9.69685, 1.08 ) }
    dend_62 { pt3dadd( -75.8193, -256.749, -10.0434, 0.96 ) }
    dend_62 { pt3dadd( -76.0813, -257.634, -10.3271, 0.96 ) }
    dend_62 { pt3dadd( -76.336, -258.659, -10.651, 0.96 ) }
    dend_62 { pt3dadd( -76.7304, -260.561, -11.1974, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_62 { pt3dadd( -77.4252, -264.73, -12.2323, 1.2 ) }
    dend_62 { pt3dadd( -77.8411, -267.639, -12.9648, 0.6 ) }
    dend_62 { pt3dadd( -78.0356, -269.587, -13.4522, 0.6 ) }
    dend_62 { pt3dadd( -78.0839, -270.695, -13.708, 0.6 ) }
    dend_62 { pt3dadd( -78.0635, -271.955, -13.9579, 0.6 ) }
    dend_62 { pt3dadd( -78.0326, -272.823, -14.0453, 0.6 ) }
    dend_62 { pt3dadd( -77.9967, -273.533, -14.0389, 0.6 ) }
    dend_62 { pt3dadd( -77.9525, -274.531, -14.0434, 0.6 ) }
    dend_62 { pt3dadd( -77.9284, -276.798, -14.1626, 0.6 ) }
    dend_62 { pt3dadd( -77.9439, -277.571, -14.2234, 0.6 ) }
    dend_62 { pt3dadd( -78.1319, -281.996, -14.637, 0.96 ) }
    dend_62 { pt3dadd( -78.2555, -284.107, -14.8448, 0.48 ) }
    dend_62 { pt3dadd( -78.3637, -285.434, -14.9719, 0.48 ) }
    dend_62 { pt3dadd( -78.7105, -288.557, -15.2401, 0.72 ) }
    dend_62 { pt3dadd( -78.9511, -290.415, -15.3827, 0.48 ) }
    dend_62 { pt3dadd( -79.127, -291.888, -15.4256, 1.2 ) }
    dend_62 { pt3dadd( -79.4642, -294.664, -15.3696, 0.84 ) }
    dend_62 { pt3dadd( -79.6955, -296.338, -15.2471, 1.32 ) }
    dend_62 { pt3dadd( -80.0793, -298.724, -14.9537, 0.84 ) }
    dend_62 { pt3dadd( -80.4132, -300.545, -14.6338, 1.44 ) }
    dend_62 { pt3dadd( -81.2848, -304.6, -13.7644, 0.48 ) }
    dend_62 { pt3dadd( -81.7735, -306.678, -13.2643, 0.48 ) }
    dend_62 { pt3dadd( -82.5307, -309.343, -12.532, 0.48 ) }
    dend_62 { pt3dadd( -83.0722, -310.909, -12.0502, 0.48 ) }
    dend_62 { pt3dadd( -83.6969, -312.329, -11.5469, 0.96 ) }
    dend_62 { pt3dadd( -85.4608, -315.35, -10.3173, 0.48 ) }
    dend_62 { pt3dadd( -85.8524, -315.907, -10.0758, 0.84 ) }
    dend_62 { pt3dadd( -87.1801, -317.577, -9.24107, 0.6 ) }
    dend_62 { pt3dadd( -88.1729, -318.605, -8.61944, 0.84 ) }
    dend_62 { pt3dadd( -89.3596, -319.649, -7.89519, 0.6 ) }
    dend_62 { pt3dadd( -90.7486, -320.604, -7.11852, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_42 (entry count 31/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 2.78521, -39.2132, 9.51578, 0.96 ) }
    dend_58 { pt3dadd( 2.17894, -40.3489, 9.83516, 0.96 ) }
    dend_58 { pt3dadd( 1.67765, -41.5671, 10.0904, 0.96 ) }
    dend_58 { pt3dadd( 1.54259, -42.0356, 10.2402, 0.96 ) }
    dend_58 { pt3dadd( 1.32239, -42.8815, 10.6095, 0.96 ) }
    dend_58 { pt3dadd( 1.12577, -43.6464, 11.0122, 0.96 ) }
    dend_58 { pt3dadd( 0.912118, -44.5085, 11.5629, 0.96 ) }
    dend_58 { pt3dadd( 0.646951, -45.8602, 12.5395, 1.32 ) }
    dend_58 { pt3dadd( 0.330344, -47.5303, 13.8554, 0.84 ) }
    dend_58 { pt3dadd( 0.150791, -48.6315, 14.7651, 0.84 ) }
    dend_58 { pt3dadd( 0.057324, -49.3716, 15.4096, 0.84 ) }
    dend_58 { pt3dadd( -0.124511, -50.9525, 16.8972, 1.32 ) }
    dend_58 { pt3dadd( -0.260688, -51.8726, 17.8637, 1.32 ) }
    dend_58 { pt3dadd( -0.428598, -52.6908, 18.8116, 1.32 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 45/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.78521, -39.2132, 9.51578, 1.44 ) }
    dend_43 { pt3dadd( 3.32863, -43.6256, 9.80539, 1.44 ) }
    dend_43 { pt3dadd( 3.71153, -46.7841, 9.98575, 1.44 ) }
    dend_43 { pt3dadd( 3.94745, -48.6738, 10.0809, 1.44 ) }
    dend_43 { pt3dadd( 4.42258, -52.6273, 10.2429, 1.8 ) }
    dend_43 { pt3dadd( 4.6206, -54.2751, 10.3105, 1.8 ) }
    dend_43 { pt3dadd( 4.81602, -55.9012, 10.3771, 1.8 ) }
    dend_43 { pt3dadd( 4.98264, -57.2573, 10.3878, 1.8 ) }
    dend_43 { pt3dadd( 5.29701, -60.0428, 10.4001, 1.56 ) }
    dend_43 { pt3dadd( 5.62557, -63.0125, 10.4136, 1.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_19 (entry count 55/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 14.2776, -59.7076, 7.27227, 1.56 ) }
    dend_37 { pt3dadd( 17.7006, -62.8735, 7.62155, 1.56 ) }
    dend_37 { pt3dadd( 19.7628, -64.8138, 7.8298, 1.56 ) }
    dend_37 { pt3dadd( 22.3174, -67.2111, 8.08819, 1.2 ) }
    dend_37 { pt3dadd( 23.8574, -68.6522, 8.24423, 1.2 ) }
    dend_37 { pt3dadd( 26.1629, -70.7923, 8.47896, 1.56 ) }
    dend_37 { pt3dadd( 29.468, -73.9215, 8.81145, 1.2 ) }
    dend_37 { pt3dadd( 30.9655, -75.393, 8.95853, 1.8 ) }
    dend_37 { pt3dadd( 32.5483, -76.9709, 9.11251, 1.8 ) }
    dend_37 { pt3dadd( 35.6292, -80.1264, 9.43753, 1.08 ) }
    dend_37 { pt3dadd( 37.7994, -82.4032, 9.68146, 1.68 ) }
    dend_37 { pt3dadd( 40.2956, -85.0955, 9.93279, 1.32 ) }
    dend_37 { pt3dadd( 41.9216, -86.9042, 10.079, 1.32 ) }
    dend_37 { pt3dadd( 42.9228, -88.0352, 10.1602, 1.32 ) }
    dend_37 { pt3dadd( 45.2767, -90.7929, 10.3258, 1.08 ) }
    dend_37 { pt3dadd( 46.9097, -92.8023, 10.3814, 1.56 ) }
    dend_37 { pt3dadd( 49.343, -95.998, 10.4548, 1.2 ) }
    dend_37 { pt3dadd( 50.1955, -97.1655, 10.4796, 1.2 ) }
    dend_37 { pt3dadd( 51.0009, -98.2899, 10.5241, 1.2 ) }
    dend_37 { pt3dadd( 52.5703, -100.492, 10.6468, 1.68 ) }
    dend_37 { pt3dadd( 53.8676, -102.323, 10.8327, 1.2 ) }
    dend_37 { pt3dadd( 55.5013, -104.61, 11.1814, 0.96 ) }
    dend_37 { pt3dadd( 56.5662, -105.999, 11.47, 0.96 ) }
    dend_37 { pt3dadd( 59.3809, -109.38, 12.263, 0.84 ) }
    dend_37 { pt3dadd( 60.8077, -111.007, 12.6881, 0.84 ) }
    dend_37 { pt3dadd( 63.0302, -113.402, 13.3873, 1.44 ) }
    dend_37 { pt3dadd( 64.2054, -114.618, 13.7711, 1.44 ) }
    dend_37 { pt3dadd( 66.342, -116.79, 14.4066, 1.44 ) }
    dend_37 { pt3dadd( 67.5809, -118.12, 14.7701, 0.96 ) }
    dend_37 { pt3dadd( 68.9357, -119.68, 15.1344, 1.44 ) }
    dend_37 { pt3dadd( 69.4178, -120.246, 15.2503, 1.44 ) }
    dend_37 { pt3dadd( 70.6504, -121.721, 15.4841, 1.44 ) }
    dend_37 { pt3dadd( 71.6019, -122.913, 15.6559, 1.44 ) }
    dend_37 { pt3dadd( 73.3489, -125.149, 15.9389, 1.08 ) }
    dend_37 { pt3dadd( 74.9545, -127.133, 16.1639, 1.08 ) }
    dend_37 { pt3dadd( 75.9212, -128.226, 16.2783, 1.08 ) }
    dend_37 { pt3dadd( 77.8514, -130.226, 16.4929, 1.44 ) }
    dend_37 { pt3dadd( 78.8045, -131.147, 16.6048, 1.44 ) }
    dend_37 { pt3dadd( 81.2525, -133.505, 16.9226, 0.84 ) }
    dend_37 { pt3dadd( 82.8321, -135.062, 17.1385, 1.56 ) }
    dend_37 { pt3dadd( 85.4924, -137.794, 17.5154, 1.08 ) }
    dend_37 { pt3dadd( 86.7799, -139.146, 17.7017, 1.32 ) }
    dend_37 { pt3dadd( 90.6255, -142.856, 18.2707, 1.08 ) }
    dend_37 { pt3dadd( 92.5649, -144.596, 18.5822, 1.08 ) }
    dend_37 { pt3dadd( 94.2405, -146.005, 18.8644, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( 96.708, -147.929, 19.2856, 1.08 ) }
    dend_37 { pt3dadd( 98.4056, -149.186, 19.5161, 1.08 ) }
    dend_37 { pt3dadd( 103.556, -152.843, 20.0289, 1.44 ) }
    dend_37 { pt3dadd( 107.099, -155.278, 20.2485, 1.08 ) }
    dend_37 { pt3dadd( 109.3, -156.799, 20.3296, 1.08 ) }
    dend_37 { pt3dadd( 112.83, -159.368, 20.4185, 1.08 ) }
    dend_37 { pt3dadd( 116.852, -162.353, 20.4546, 0.72 ) }
    dend_37 { pt3dadd( 119.912, -164.761, 20.4027, 1.32 ) }
    dend_37 { pt3dadd( 122.084, -166.71, 20.2474, 0.84 ) }
    dend_37 { pt3dadd( 123.432, -167.997, 20.0765, 0.84 ) }
    dend_37 { pt3dadd( 125.713, -170.437, 19.7078, 1.68 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 14.2776, -59.7076, 7.27227, 1.68 ) }
    dend_20 { pt3dadd( 14.4916, -62.2528, 7.26407, 1.68 ) }
    dend_20 { pt3dadd( 14.7442, -64.498, 7.25916, 1.68 ) }
    dend_20 { pt3dadd( 14.9274, -65.7844, 7.25606, 1.68 ) }
    dend_20 { pt3dadd( 15.5678, -69.4921, 7.24364, 1.32 ) }
    dend_20 { pt3dadd( 16.0414, -71.9546, 7.23033, 1.56 ) }
    dend_20 { pt3dadd( 16.5885, -75.1366, 7.20093, 1.56 ) }
    dend_20 { pt3dadd( 16.7932, -76.3352, 7.18085, 1.56 ) }
    dend_20 { pt3dadd( 17.0386, -78.1764, 7.14489, 1.56 ) }
    dend_20 { pt3dadd( 17.2466, -80.3959, 7.09486, 1.56 ) }
    dend_20 { pt3dadd( 17.4555, -83.5471, 7.01451, 1.2 ) }
    dend_20 { pt3dadd( 17.6798, -87.9813, 6.88829, 1.56 ) }
    dend_20 { pt3dadd( 17.8112, -91.07, 6.82242, 1.2 ) }
    dend_20 { pt3dadd( 17.9891, -94.9514, 6.77011, 1.2 ) }
    dend_20 { pt3dadd( 18.1007, -97.2006, 6.72997, 1.56 ) }
    dend_20 { pt3dadd( 18.2402, -99.7925, 6.65252, 1.56 ) }
    dend_20 { pt3dadd( 18.3897, -101.881, 6.55526, 1.56 ) }
    dend_20 { pt3dadd( 18.7209, -105.098, 6.43466, 1.2 ) }
    dend_20 { pt3dadd( 18.9928, -107.895, 6.34936, 1.56 ) }
    dend_20 { pt3dadd( 19.265, -111.073, 6.26904, 1.44 ) }
    dend_20 { pt3dadd( 19.4059, -113.303, 6.21984, 1.44 ) }
    dend_20 { pt3dadd( 19.4619, -114.906, 6.18758, 1.44 ) }
    dend_20 { pt3dadd( 19.6033, -120.306, 6.08729, 1.08 ) }
    dend_20 { pt3dadd( 19.6837, -123.21, 5.96048, 1.08 ) }
    dend_20 { pt3dadd( 19.7919, -125.813, 5.78859, 1.44 ) }
    dend_20 { pt3dadd( 19.8658, -126.974, 5.69519, 1.44 ) }
    dend_20 { pt3dadd( 20.0126, -128.66, 5.51875, 1.44 ) }
    dend_20 { pt3dadd( 20.277, -131.061, 5.16044, 1.44 ) }
    dend_20 { pt3dadd( 20.7751, -134.43, 4.38604, 1.32 ) }
    dend_20 { pt3dadd( 21.2335, -136.761, 3.79147, 1.32 ) }
    dend_20 { pt3dadd( 21.5056, -137.995, 3.45762, 1.32 ) }
    dend_20 { pt3dadd( 21.7136, -139.018, 3.19095, 1.32 ) }
    dend_20 { pt3dadd( 22.0266, -140.823, 2.76361, 1.32 ) }
    dend_20 { pt3dadd( 22.1662, -141.902, 2.55363, 1.32 ) }
    dend_20 { pt3dadd( 22.3194, -143.172, 2.36246, 1.32 ) }
    dend_20 { pt3dadd( 22.6326, -145.838, 1.94869, 1.8 ) }
    dend_20 { pt3dadd( 22.9081, -148.403, 1.53256, 1.8 ) }
    dend_20 { pt3dadd( 23.1366, -150.635, 1.23847, 1.8 ) }
    dend_20 { pt3dadd( 23.34, -152.866, 1.00113, 1.8 ) }
    dend_20 { pt3dadd( 23.6112, -156.501, 0.693325, 1.56 ) }
    dend_20 { pt3dadd( 23.8188, -160.197, 0.445515, 1.56 ) }
    dend_20 { pt3dadd( 23.8848, -161.971, 0.358518, 1.56 ) }
    dend_20 { pt3dadd( 23.9878, -165.756, 0.254736, 1.32 ) }
    dend_20 { pt3dadd( 24.0193, -167.533, 0.24235, 1.32 ) }
    dend_20 { pt3dadd( 24.0287, -170.723, 0.289148, 1.8 ) }
    dend_20 { pt3dadd( 23.9762, -173.524, 0.403382, 1.8 ) }
    dend_20 { pt3dadd( 23.9578, -176.393, 0.554299, 1.56 ) }
    dend_20 { pt3dadd( 24.0426, -179.093, 0.658997, 1.56 ) }
    dend_20 { pt3dadd( 24.1775, -180.906, 0.684839, 1.56 ) }
    dend_20 { pt3dadd( 24.3257, -182.216, 0.702821, 1.56 ) }
    dend_20 { pt3dadd( 24.4953, -183.557, 0.70175, 1.56 ) }
    dend_20 { pt3dadd( 24.735, -185.495, 0.661958, 1.56 ) }
    dend_20 { pt3dadd( 24.9926, -187.881, 0.566103, 1.2 ) }
    dend_20 { pt3dadd( 25.1724, -190.17, 0.407918, 1.2 ) }
    dend_20 { pt3dadd( 25.2589, -191.748, 0.269977, 1.2 ) }
    dend_20 { pt3dadd( 25.3353, -194.692, -0.04655, 1.56 ) }
    dend_20 { pt3dadd( 25.3648, -197.523, -0.408901, 1.56 ) }
    dend_20 { pt3dadd( 25.3761, -199.287, -0.660359, 1.56 ) }
    dend_20 { pt3dadd( 25.4382, -201.607, -1.00023, 1.56 ) }
    dend_20 { pt3dadd( 25.5269, -203.811, -1.34227, 1.56 ) }
    dend_20 { pt3dadd( 25.7843, -208.154, -2.04685, 1.56 ) }
    dend_20 { pt3dadd( 26.2019, -213.141, -2.89856, 1.32 ) }
    dend_20 { pt3dadd( 26.5864, -217.291, -3.65492, 1.32 ) }
    dend_20 { pt3dadd( 26.7959, -219.526, -4.06802, 0.84 ) }
    dend_20 { pt3dadd( 27.009, -221.822, -4.48987, 1.32 ) }
    dend_20 { pt3dadd( 27.2716, -224.547, -4.99415, 1.08 ) }
    dend_20 { pt3dadd( 27.5647, -227.1, -5.49291, 1.44 ) }
    dend_20 { pt3dadd( 27.8762, -229.792, -6.06746, 1.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 8.89542, 41.6004, 17.3497, 1.2 ) }
    dend_11 { pt3dadd( 7.22904, 44.2767, 18.0993, 1.2 ) }
    dend_11 { pt3dadd( 6.60077, 45.4982, 18.5159, 1.2 ) }
    dend_11 { pt3dadd( 6.13812, 46.5631, 18.9174, 1.2 ) }
    dend_11 { pt3dadd( 5.41789, 48.7462, 19.8997, 1.2 ) }
    dend_11 { pt3dadd( 5.13725, 49.9219, 20.4635, 1.2 ) }
    dend_11 { pt3dadd( 4.95638, 51.052, 21.0167, 1.08 ) }
    dend_11 { pt3dadd( 4.90403, 52.8523, 21.9751, 1.56 ) }
    dend_11 { pt3dadd( 4.94844, 54.0629, 22.6252, 1.56 ) }
    dend_11 { pt3dadd( 5.20758, 56.7323, 23.9973, 1.2 ) }
    dend_11 { pt3dadd( 5.46117, 58.4508, 24.8042, 0.96 ) }
    dend_11 { pt3dadd( 5.72568, 60.3328, 25.5771, 1.32 ) }
    dend_11 { pt3dadd( 5.80666, 61.1913, 25.9015, 1.32 ) }
    dend_11 { pt3dadd( 5.84807, 62.148, 26.2192, 1.32 ) }
    dend_11 { pt3dadd( 5.86798, 63.574, 26.6097, 1.32 ) }
    dend_11 { pt3dadd( 5.85953, 64.3739, 26.7927, 1.32 ) }
    dend_11 { pt3dadd( 5.86363, 65.9345, 27.1564, 1.2 ) }
    dend_11 { pt3dadd( 5.92199, 67.5573, 27.5852, 1.56 ) }
    dend_11 { pt3dadd( 5.97855, 68.6411, 27.8895, 1.2 ) }
    dend_11 { pt3dadd( 6.10836, 70.3104, 28.3977, 1.68 ) }
    dend_11 { pt3dadd( 6.39834, 72.5758, 29.1424, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_11 { pt3dadd( 6.57879, 73.4821, 29.4582, 1.44 ) }
    dend_11 { pt3dadd( 7.05989, 74.9849, 29.9941, 1.08 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 2/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 8.89542, 41.6004, 17.3497, 1.44 ) }
    dend_2 { pt3dadd( 8.84643, 45.7675, 16.9024, 1.44 ) }
    dend_2 { pt3dadd( 8.82397, 47.6781, 16.6973, 1.44 ) }
    dend_2 { pt3dadd( 8.79801, 49.887, 16.4602, 1.44 ) }
    dend_2 { pt3dadd( 8.76812, 52.429, 16.1873, 1.44 ) }
    dend_2 { pt3dadd( 8.73195, 55.5066, 15.8569, 1.8 ) }
    dend_2 { pt3dadd( 8.70134, 58.1101, 15.5775, 1.8 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 9/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -0.428598, -52.6908, 18.8116, 0.96 ) }
    dend_60 { pt3dadd( -1.08916, -55.0817, 19.5292, 0.96 ) }
    dend_60 { pt3dadd( -1.55461, -56.5504, 19.9242, 0.96 ) }
    dend_60 { pt3dadd( -1.84873, -57.5022, 20.1499, 0.96 ) }
    dend_60 { pt3dadd( -2.07544, -58.2243, 20.3161, 0.96 ) }
    dend_60 { pt3dadd( -2.33304, -59.0453, 20.4936, 0.96 ) }
    dend_60 { pt3dadd( -2.75437, -60.533, 20.7941, 0.6 ) }
    dend_60 { pt3dadd( -2.91092, -60.9894, 20.8732, 0.6 ) }
    dend_60 { pt3dadd( -3.19858, -61.8011, 21.0349, 1.08 ) }
    dend_60 { pt3dadd( -3.81621, -63.4921, 21.4395, 0.72 ) }
    dend_60 { pt3dadd( -4.29128, -64.7593, 21.7723, 0.72 ) }
    dend_60 { pt3dadd( -5.05177, -66.7122, 22.3028, 0.72 ) }
    dend_60 { pt3dadd( -5.84067, -68.5743, 22.8174, 1.2 ) }
    dend_60 { pt3dadd( -6.32004, -69.5817, 23.0985, 1.08 ) }
    dend_60 { pt3dadd( -6.97811, -70.7745, 23.4343, 0.48 ) }
    dend_60 { pt3dadd( -7.82464, -72.1569, 23.804, 0.48 ) }
    dend_60 { pt3dadd( -8.82686, -73.6762, 24.1874, 1.44 ) }
    dend_60 { pt3dadd( -9.61462, -74.8237, 24.4406, 0.84 ) }
    dend_60 { pt3dadd( -10.0242, -75.4781, 24.556, 1.08 ) }
    dend_60 { pt3dadd( -10.6431, -76.5397, 24.7069, 1.08 ) }
    dend_60 { pt3dadd( -11.424, -78.0262, 24.8847, 1.44 ) }
    dend_60 { pt3dadd( -11.9527, -79.1369, 25.0209, 0.84 ) }
    dend_60 { pt3dadd( -12.2911, -79.9578, 25.1481, 1.32 ) }
    dend_60 { pt3dadd( -12.7632, -81.3438, 25.392, 0.72 ) }
    dend_60 { pt3dadd( -12.9859, -82.0331, 25.5268, 0.72 ) }
    dend_60 { pt3dadd( -13.1984, -82.6468, 25.6724, 0.72 ) }
    dend_60 { pt3dadd( -13.6355, -83.5271, 25.9427, 0.72 ) }
    dend_60 { pt3dadd( -14.3864, -84.4524, 26.3181, 1.08 ) }
    dend_60 { pt3dadd( -15.1344, -85.1959, 26.6688, 0.6 ) }
    dend_60 { pt3dadd( -16.1246, -85.9444, 27.0908, 1.08 ) }
    dend_60 { pt3dadd( -16.8968, -86.4112, 27.3994, 0.96 ) }
    dend_60 { pt3dadd( -18.233, -87.0235, 27.8823, 0.84 ) }
    dend_60 { pt3dadd( -19.6525, -87.4425, 28.3143, 0.84 ) }
    dend_60 { pt3dadd( -22.3159, -93.6928, 29.2353, 0.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 43/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -0.428598, -52.6908, 18.8116, 0.84 ) }
    dend_59 { pt3dadd( -1.2413, -54.4735, 20.2405, 0.84 ) }
    dend_59 { pt3dadd( -1.82997, -55.749, 21.2298, 0.84 ) }
    dend_59 { pt3dadd( -2.09681, -56.3602, 21.6658, 0.84 ) }
    dend_59 { pt3dadd( -3.00759, -58.6922, 23.211, 0.48 ) }
    dend_59 { pt3dadd( -3.47754, -59.9897, 24.013, 0.48 ) }
    dend_59 { pt3dadd( -4.25283, -62.2465, 25.2896, 0.84 ) }
    dend_59 { pt3dadd( -4.71235, -63.6829, 25.9803, 0.84 ) }
    dend_59 { pt3dadd( -5.15873, -65.0546, 26.5508, 0.84 ) }
    dend_59 { pt3dadd( -6.12342, -68.1373, 27.6582, 0.84 ) }
    dend_59 { pt3dadd( -6.46502, -69.3107, 28.0065, 0.84 ) }
    dend_59 { pt3dadd( -7.01202, -71.4296, 28.5534, 0.6 ) }
    dend_59 { pt3dadd( -7.37045, -72.7833, 28.8657, 1.08 ) }
    dend_59 { pt3dadd( -7.92974, -74.566, 29.2804, 1.08 ) }
    dend_59 { pt3dadd( -8.39794, -75.8523, 29.5988, 1.56 ) }
    dend_59 { pt3dadd( -9.04904, -77.3762, 29.9788, 1.56 ) }
    dend_59 { pt3dadd( -9.58743, -78.5698, 30.2991, 1.08 ) }
    dend_59 { pt3dadd( -10.5922, -80.6957, 30.9217, 0.72 ) }
    dend_59 { pt3dadd( -11.258, -82.0482, 31.3461, 1.32 ) }
    dend_59 { pt3dadd( -11.8515, -83.1868, 31.7298, 1.32 ) }
    dend_59 { pt3dadd( -12.7525, -84.76, 32.2974, 0.72 ) }
    dend_59 { pt3dadd( -13.745, -86.3785, 32.891, 0.72 ) }
    dend_59 { pt3dadd( -19.1863, -95.941, 37.4636, 0.72 ) }
    dend_59 { pt3dadd( -23.1949, -106.105, 42.0907, 0.72 ) }
    dend_59 { pt3dadd( -27.548, -115.637, 47.7713, 0.72 ) }
    dend_59 { pt3dadd( -31.9234, -125.181, 53.4112, 0.72 ) }
    dend_59 { pt3dadd( -34.7823, -134.923, 59.6274, 0.72 ) }
    dend_59 { pt3dadd( -35.4685, -144.623, 66.5186, 0.72 ) }
    dend_59 { pt3dadd( -36.313, -155.263, 71.6294, 0.72 ) }
    dend_59 { pt3dadd( -36.7911, -166.73, 74.1957, 0.72 ) }
    dend_59 { pt3dadd( -36.7021, -178.03, 77.5168, 0.72 ) }
    dend_59 { pt3dadd( -37.9115, -189.362, 80.4571, 0.72 ) }
    dend_59 { pt3dadd( -41.6455, -200.443, 81.9372, 0.72 ) }
    dend_59 { pt3dadd( -45.7692, -211.429, 83.1314, 0.72 ) }
    dend_59 { pt3dadd( -47.9135, -222.854, 84.9043, 0.72 ) }
    dend_59 { pt3dadd( -48.8372, -234.239, 87.7225, 0.72 ) }
    // Section: dend_57, id: dend_57, parent: dend_43 (entry count 79/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 5.62557, -63.0125, 10.4136, 1.08 ) }
    dend_57 { pt3dadd( 7.18499, -63.723, 6.71281, 1.08 ) }
    dend_57 { pt3dadd( 8.34094, -64.3985, 4.23146, 1.08 ) }
    dend_57 { pt3dadd( 8.6701, -64.6534, 3.53981, 1.08 ) }
    dend_57 { pt3dadd( 8.92789, -64.9374, 2.91017, 1.08 ) }
    dend_57 { pt3dadd( 9.07293, -65.131, 2.5398, 1.08 ) }
    dend_57 { pt3dadd( 9.62028, -66.0037, 1.03562, 1.44 ) }
    dend_57 { pt3dadd( 9.92495, -66.7427, 0.00356603, 1.44 ) }
    dend_57 { pt3dadd( 10.1432, -67.6126, -1.07358, 1.44 ) }
    dend_57 { pt3dadd( 10.3847, -69.0187, -2.71029, 1.44 ) }
    dend_57 { pt3dadd( 10.4424, -69.5668, -3.29156, 1.44 ) }
    dend_57 { pt3dadd( 10.5222, -71.0278, -4.65756, 1.2 ) }
    dend_57 { pt3dadd( 10.5201, -73.3886, -6.5856, 1.2 ) }
    dend_57 { pt3dadd( 10.4975, -75.0014, -7.82607, 1.68 ) }
    dend_57 { pt3dadd( 10.4495, -76.7442, -9.16829, 0.72 ) }
    dend_57 { pt3dadd( 10.3834, -78.0566, -10.1463, 0.72 ) }
    dend_57 { pt3dadd( 10.2403, -79.4996, -11.3197, 1.44 ) }
    dend_57 { pt3dadd( 10.0747, -80.5289, -12.2382, 1.44 ) }
    dend_57 { pt3dadd( 9.64952, -82.401, -14.3574, 0.96 ) }
    dend_57 { pt3dadd( 9.17498, -84.0496, -16.9958, 1.68 ) }
    dend_57 { pt3dadd( 8.99218, -84.5673, -18.0687, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_57 { pt3dadd( 8.59419, -85.6167, -20.7379, 1.68 ) }
    dend_57 { pt3dadd( 8.30228, -86.3677, -22.8987, 1.68 ) }
    dend_57 { pt3dadd( 7.8629, -87.5288, -26.345, 1.68 ) }
    dend_57 { pt3dadd( 7.37584, -88.827, -30.0612, 1.68 ) }
    dend_57 { pt3dadd( 7.00735, -89.8202, -32.7695, 1.2 ) }
    dend_57 { pt3dadd( 6.63439, -90.9125, -35.4781, 0.84 ) }
    dend_57 { pt3dadd( 6.48072, -91.4463, -36.5854, 1.44 ) }
    dend_57 { pt3dadd( 6.34152, -92.0074, -37.5485, 0.72 ) }
    dend_57 { pt3dadd( 6.00527, -93.4141, -39.5707, 1.32 ) }
    dend_57 { pt3dadd( 5.47703, -95.7731, -42.5036, 0.6 ) }
    dend_57 { pt3dadd( 5.35738, -96.3638, -43.1883, 0.6 ) }
    dend_57 { pt3dadd( 5.18277, -97.1713, -44.0794, 0.96 ) }
    dend_57 { pt3dadd( 5.03257, -97.8484, -44.8595, 0.96 ) }
    dend_57 { pt3dadd( 4.48125, -100.509, -48.1421, 0.6 ) }
    dend_57 { pt3dadd( 4.35318, -101.481, -49.3271, 1.2 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 15/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 5.62557, -63.0125, 10.4136, 1.32 ) }
    dend_44 { pt3dadd( 5.64525, -63.1106, 10.3993, 1.32 ) }
    dend_44 { pt3dadd( 6.22592, -65.6816, 10.0607, 1.32 ) }
    dend_44 { pt3dadd( 6.95028, -68.6678, 9.71389, 1.68 ) }
    dend_44 { pt3dadd( 7.41427, -70.5694, 9.52197, 2.04 ) }
    dend_44 { pt3dadd( 7.81534, -72.2559, 9.36923, 1.68 ) }
    dend_44 { pt3dadd( 8.13832, -73.6491, 9.25693, 1.68 ) }
    dend_44 { pt3dadd( 8.33131, -74.4919, 9.20719, 1.68 ) }
    dend_44 { pt3dadd( 8.58498, -75.6192, 9.17026, 1.68 ) }
    dend_44 { pt3dadd( 8.9324, -77.3356, 9.14281, 2.04 ) }
    dend_44 { pt3dadd( 9.09658, -78.326, 9.15423, 1.68 ) }
    dend_44 { pt3dadd( 9.26297, -79.619, 9.18504, 1.68 ) }
    dend_44 { pt3dadd( 9.41709, -81.0123, 9.24821, 1.68 ) }
    dend_44 { pt3dadd( 9.5966, -82.5924, 9.34676, 1.56 ) }
    dend_44 { pt3dadd( 9.77883, -84.054, 9.45508, 1.56 ) }
    dend_44 { pt3dadd( 10.1866, -86.9867, 9.69766, 1.56 ) }
    dend_44 { pt3dadd( 10.5476, -89.3719, 9.90921, 1.8 ) }
    dend_44 { pt3dadd( 11.166, -93.1813, 10.2614, 1.56 ) }
    dend_44 { pt3dadd( 11.8068, -96.9921, 10.6045, 1.44 ) }
    dend_44 { pt3dadd( 12.0804, -98.6125, 10.742, 1.92 ) }
    dend_44 { pt3dadd( 12.4068, -100.577, 10.8885, 1.8 ) }
    dend_44 { pt3dadd( 12.6386, -102.092, 10.9763, 1.68 ) }
    dend_44 { pt3dadd( 12.8791, -103.988, 11.0568, 2.04 ) }
    dend_44 { pt3dadd( 13.6634, -111.756, 11.1067, 1.8 ) }
    dend_44 { pt3dadd( 13.8427, -114.129, 11.0506, 1.8 ) }
    dend_44 { pt3dadd( 13.9215, -115.418, 10.9949, 1.68 ) }
    dend_44 { pt3dadd( 13.9781, -116.635, 10.9192, 1.68 ) }
    dend_44 { pt3dadd( 14.0936, -120.008, 10.6486, 1.68 ) }
    dend_44 { pt3dadd( 14.1457, -121.844, 10.4158, 1.68 ) }
    dend_44 { pt3dadd( 14.1933, -123.382, 10.1482, 1.68 ) }
    dend_44 { pt3dadd( 14.2757, -125.406, 9.78451, 1.32 ) }
    dend_44 { pt3dadd( 14.4014, -127.831, 9.35939, 1.32 ) }
    dend_44 { pt3dadd( 14.5572, -130.36, 8.93441, 1.32 ) }
    dend_44 { pt3dadd( 14.859, -134.388, 8.30122, 1.32 ) }
    dend_44 { pt3dadd( 15.081, -137.113, 7.92178, 1.8 ) }
    dend_44 { pt3dadd( 15.2227, -138.932, 7.69587, 1.8 ) }
    dend_44 { pt3dadd( 15.3308, -140.395, 7.54183, 1.8 ) }
    dend_44 { pt3dadd( 15.4225, -141.681, 7.44339, 1.8 ) }
    dend_44 { pt3dadd( 15.5698, -144.074, 7.36014, 1.68 ) }
    dend_44 { pt3dadd( 15.7811, -147.512, 7.31408, 2.04 ) }
    dend_44 { pt3dadd( 15.9962, -150.218, 7.24284, 2.04 ) }
    dend_44 { pt3dadd( 16.1919, -152.438, 7.17323, 1.8 ) }
    dend_44 { pt3dadd( 16.4704, -155.256, 7.08036, 1.56 ) }
    dend_44 { pt3dadd( 16.7815, -158.113, 6.9865, 1.92 ) }
    dend_44 { pt3dadd( 17.1567, -161.742, 6.85029, 1.56 ) }
    dend_44 { pt3dadd( 17.4324, -164.567, 6.7172, 1.32 ) }
    dend_44 { pt3dadd( 17.7349, -167.755, 6.51626, 1.32 ) }
    dend_44 { pt3dadd( 17.8639, -169.271, 6.42006, 1.32 ) }
    dend_44 { pt3dadd( 17.973, -170.596, 6.3435, 1.2 ) }
    dend_44 { pt3dadd( 18.182, -173.665, 6.19578, 1.68 ) }
    dend_44 { pt3dadd( 18.3115, -176.507, 6.18912, 1.68 ) }
    dend_44 { pt3dadd( 18.352, -178.336, 6.19647, 1.68 ) }
    dend_44 { pt3dadd( 18.3793, -179.894, 6.19408, 1.68 ) }
    dend_44 { pt3dadd( 18.3883, -181.63, 6.19247, 1.68 ) }
    dend_44 { pt3dadd( 18.4027, -182.367, 6.20093, 1.68 ) }
    dend_44 { pt3dadd( 18.7818, -187.069, 6.42556, 2.16 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 71/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 125.713, -170.437, 19.7078, 0.84 ) }
    dend_39 { pt3dadd( 128.211, -170.01, 21.5754, 0.84 ) }
    dend_39 { pt3dadd( 130.145, -169.65, 23.1254, 0.84 ) }
    dend_39 { pt3dadd( 131.635, -169.376, 24.3907, 1.32 ) }
    dend_39 { pt3dadd( 134.047, -168.967, 26.5806, 1.32 ) }
    dend_39 { pt3dadd( 135.919, -168.67, 28.3856, 1.68 ) }
    dend_39 { pt3dadd( 138.225, -168.249, 30.7102, 1.2 ) }
    dend_39 { pt3dadd( 139.397, -168.044, 32.0329, 0.96 ) }
    dend_39 { pt3dadd( 140.857, -167.706, 33.8971, 1.44 ) }
    dend_39 { pt3dadd( 142.538, -167.165, 36.2806, 0.84 ) }
    dend_39 { pt3dadd( 143.279, -166.812, 37.5192, 0.84 ) }
    dend_39 { pt3dadd( 143.926, -166.354, 38.9039, 0.84 ) }
    dend_39 { pt3dadd( 144.255, -165.92, 40.0329, 0.84 ) }
    dend_39 { pt3dadd( 144.549, -165.29, 41.4519, 0.84 ) }
    dend_39 { pt3dadd( 144.684, -164.556, 42.8552, 0.84 ) }
    dend_39 { pt3dadd( 144.666, -163.526, 44.5669, 1.08 ) }
    dend_39 { pt3dadd( 144.562, -162.3, 46.5643, 0.72 ) }
    dend_39 { pt3dadd( 144.366, -160.825, 49.2356, 1.2 ) }
    dend_39 { pt3dadd( 152.643, -157.322, 56.9283, 1.2 ) }
    dend_39 { pt3dadd( 160.913, -152.311, 63.6484, 1.2 ) }
    dend_39 { pt3dadd( 169.154, -146.066, 69.1671, 1.2 ) }
    dend_39 { pt3dadd( 175.087, -138.738, 75.9754, 1.2 ) }
    dend_39 { pt3dadd( 182.339, -132.769, 82.9848, 1.2 ) }
    dend_39 { pt3dadd( 188.758, -125.878, 89.8634, 1.2 ) }
    dend_39 { pt3dadd( 196.448, -118.579, 94.7114, 1.2 ) }
    dend_39 { pt3dadd( 203.597, -111.188, 100.176, 1.2 ) }
    dend_39 { pt3dadd( 209.408, -103.058, 106.026, 1.2 ) }
    dend_39 { pt3dadd( 214.945, -93.8942, 110.253, 1.2 ) }
    dend_39 { pt3dadd( 219.033, -84.5715, 115.549, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_39 { pt3dadd( 221.744, -74.2979, 119.646, 1.2 ) }
    dend_39 { pt3dadd( 224.425, -64.063, 123.864, 1.2 ) }
    dend_39 { pt3dadd( 227.319, -53.7044, 127.6, 1.2 ) }
    dend_39 { pt3dadd( 231.52, -44.4863, 133.008, 1.2 ) }
    dend_39 { pt3dadd( 235.671, -34.9989, 137.926, 1.2 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 125.713, -170.437, 19.7078, 0.84 ) }
    dend_38 { pt3dadd( 127.076, -172.743, 20.2226, 0.84 ) }
    dend_38 { pt3dadd( 128.553, -175.145, 20.7409, 0.6 ) }
    dend_38 { pt3dadd( 129.513, -176.726, 21.0565, 1.32 ) }
    dend_38 { pt3dadd( 131.024, -179.212, 21.5528, 0.84 ) }
    dend_38 { pt3dadd( 132.0, -180.819, 21.8738, 0.72 ) }
    dend_38 { pt3dadd( 132.778, -182.099, 22.1294, 1.08 ) }
    dend_38 { pt3dadd( 133.754, -183.776, 22.4359, 0.72 ) }
    dend_38 { pt3dadd( 134.662, -185.374, 22.8047, 1.2 ) }
    dend_38 { pt3dadd( 140.991, -193.793, 24.0629, 1.2 ) }
    dend_38 { pt3dadd( 147.658, -201.603, 26.9065, 1.2 ) }
    dend_38 { pt3dadd( 154.065, -208.729, 31.6834, 1.2 ) }
    // Section: dend_36, id: dend_36, parent: dend_20 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 27.8762, -229.792, -6.06746, 0.96 ) }
    dend_36 { pt3dadd( 29.6475, -231.827, -4.55407, 0.96 ) }
    dend_36 { pt3dadd( 30.6495, -233.176, -3.57488, 0.96 ) }
    dend_36 { pt3dadd( 32.4489, -235.782, -1.68083, 1.44 ) }
    dend_36 { pt3dadd( 33.7776, -237.668, -0.220177, 0.96 ) }
    dend_36 { pt3dadd( 34.8155, -239.153, 0.930045, 0.96 ) }
    dend_36 { pt3dadd( 35.6642, -240.403, 1.87436, 0.96 ) }
    dend_36 { pt3dadd( 36.3872, -241.549, 2.71058, 0.96 ) }
    dend_36 { pt3dadd( 37.2171, -243.012, 3.80591, 1.08 ) }
    dend_36 { pt3dadd( 38.226, -245.03, 5.23484, 1.08 ) }
    dend_36 { pt3dadd( 38.7245, -246.04, 5.91973, 1.08 ) }
    dend_36 { pt3dadd( 39.1935, -246.907, 6.4829, 1.08 ) }
    dend_36 { pt3dadd( 40.2962, -249.014, 7.92435, 1.08 ) }
    dend_36 { pt3dadd( 41.2311, -251.131, 9.37783, 0.84 ) }
    dend_36 { pt3dadd( 41.7519, -252.9, 10.5538, 1.2 ) }
    dend_36 { pt3dadd( 41.9448, -254.305, 11.4207, 1.2 ) }
    dend_36 { pt3dadd( 42.0135, -255.467, 12.1313, 1.2 ) }
    dend_36 { pt3dadd( 42.0507, -258.316, 13.8948, 0.96 ) }
    dend_36 { pt3dadd( 42.0049, -259.816, 14.8143, 0.96 ) }
    dend_36 { pt3dadd( 42.0231, -261.202, 15.6586, 0.96 ) }
    dend_36 { pt3dadd( 42.0857, -262.974, 16.6956, 0.72 ) }
    dend_36 { pt3dadd( 42.1146, -264.081, 17.2939, 0.72 ) }
    dend_36 { pt3dadd( 42.239, -265.674, 18.1194, 0.72 ) }
    dend_36 { pt3dadd( 42.6813, -267.666, 19.0475, 1.2 ) }
    dend_36 { pt3dadd( 43.6531, -270.597, 20.5649, 0.84 ) }
    dend_36 { pt3dadd( 44.1632, -271.812, 21.2519, 0.84 ) }
    dend_36 { pt3dadd( 44.7243, -273.092, 22.0426, 0.84 ) }
    dend_36 { pt3dadd( 47.7089, -280.555, 26.9806, 0.84 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 45/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.8762, -229.792, -6.06746, 1.32 ) }
    dend_21 { pt3dadd( 28.5087, -232.952, -5.96675, 1.32 ) }
    dend_21 { pt3dadd( 28.849, -234.911, -5.94318, 1.32 ) }
    dend_21 { pt3dadd( 29.1341, -236.82, -5.94411, 1.32 ) }
    dend_21 { pt3dadd( 29.3018, -238.244, -5.96086, 1.32 ) }
    dend_21 { pt3dadd( 29.6727, -241.274, -6.00735, 1.68 ) }
    dend_21 { pt3dadd( 30.0312, -243.801, -6.04543, 1.68 ) }
    dend_21 { pt3dadd( 30.3174, -245.648, -6.15171, 1.68 ) }
    dend_21 { pt3dadd( 30.6017, -247.386, -6.27076, 1.68 ) }
    dend_21 { pt3dadd( 31.089, -250.313, -6.49616, 1.2 ) }
    dend_21 { pt3dadd( 31.4176, -252.238, -6.66135, 1.2 ) }
    dend_21 { pt3dadd( 31.9647, -255.143, -6.92457, 1.2 ) }
    dend_21 { pt3dadd( 32.6674, -258.44, -7.26872, 1.56 ) }
    dend_21 { pt3dadd( 33.0517, -260.095, -7.45574, 1.56 ) }
    dend_21 { pt3dadd( 33.3991, -261.521, -7.62492, 1.56 ) }
    dend_21 { pt3dadd( 33.7897, -263.019, -7.80638, 1.56 ) }
    dend_21 { pt3dadd( 34.4054, -265.628, -8.00562, 1.44 ) }
    dend_21 { pt3dadd( 35.0114, -268.273, -8.17177, 1.44 ) }
    dend_21 { pt3dadd( 35.3022, -269.474, -8.20324, 1.44 ) }
    dend_21 { pt3dadd( 35.6665, -270.932, -8.22545, 1.44 ) }
    dend_21 { pt3dadd( 36.1061, -272.608, -8.21477, 1.44 ) }
    dend_21 { pt3dadd( 36.876, -275.327, -8.08152, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 67/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 7.05989, 74.9849, 29.9941, 1.44 ) }
    dend_17 { pt3dadd( 5.17683, 72.8482, 30.1518, 1.44 ) }
    dend_17 { pt3dadd( 4.43757, 72.1155, 30.2555, 1.2 ) }
    dend_17 { pt3dadd( 2.84566, 70.8322, 30.478, 0.96 ) }
    dend_17 { pt3dadd( 1.41319, 69.6775, 30.6783, 0.96 ) }
    dend_17 { pt3dadd( 0.426097, 68.8817, 30.8163, 0.96 ) }
    dend_17 { pt3dadd( -0.624453, 68.0349, 30.9632, 0.96 ) }
    dend_17 { pt3dadd( -1.68226, 67.0838, 30.9816, 0.96 ) }
    dend_17 { pt3dadd( -3.69183, 65.4607, 31.0866, 1.2 ) }
    dend_17 { pt3dadd( -14.096, 56.5456, 29.9966, 1.2 ) }
    dend_17 { pt3dadd( -23.4499, 46.582, 30.0738, 1.2 ) }
    dend_17 { pt3dadd( -32.8194, 36.7248, 28.6416, 1.2 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 7.05989, 74.9849, 29.9941, 0.96 ) }
    dend_12 { pt3dadd( 7.8825, 73.6803, 30.2251, 0.96 ) }
    dend_12 { pt3dadd( 8.82898, 72.1793, 30.4909, 0.96 ) }
    dend_12 { pt3dadd( 9.53294, 71.0629, 30.6885, 1.2 ) }
    dend_12 { pt3dadd( 9.92268, 70.4448, 30.798, 1.2 ) }
    dend_12 { pt3dadd( 11.209, 68.4049, 31.1591, 0.84 ) }
    dend_12 { pt3dadd( 11.7856, 67.4905, 31.3211, 0.84 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 86/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 8.70134, 58.1101, 15.5775, 1.44 ) }
    dend_8 { pt3dadd( 9.80172, 60.911, 16.1012, 1.44 ) }
    dend_8 { pt3dadd( 10.6384, 63.1109, 16.4844, 1.44 ) }
    dend_8 { pt3dadd( 11.0616, 64.2633, 16.683, 1.44 ) }
    dend_8 { pt3dadd( 12.0064, 66.9423, 17.1916, 1.44 ) }
    dend_8 { pt3dadd( 13.1445, 70.1132, 17.8672, 1.32 ) }
    dend_8 { pt3dadd( 13.8658, 71.9311, 18.197, 1.32 ) }
    dend_8 { pt3dadd( 14.7927, 73.929, 18.4843, 1.32 ) }
    dend_8 { pt3dadd( 15.6369, 75.5418, 18.6842, 1.56 ) }
    dend_8 { pt3dadd( 16.543, 77.0744, 18.8296, 1.56 ) }
    dend_8 { pt3dadd( 17.8644, 79.0474, 18.9606, 1.32 ) }
    dend_8 { pt3dadd( 20.3309, 82.3119, 19.1418, 1.32 ) }
    dend_8 { pt3dadd( 21.913, 84.1921, 19.2323, 1.32 ) }
    dend_8 { pt3dadd( 23.2954, 85.7051, 19.2042, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( 24.8457, 87.3221, 19.0763, 1.56 ) }
    dend_8 { pt3dadd( 25.7204, 88.252, 18.9417, 1.56 ) }
    dend_8 { pt3dadd( 27.843, 90.5688, 18.5108, 1.2 ) }
    dend_8 { pt3dadd( 28.9703, 91.8275, 18.284, 1.2 ) }
    dend_8 { pt3dadd( 31.1722, 94.3376, 17.779, 1.44 ) }
    dend_8 { pt3dadd( 32.3351, 95.7122, 17.4495, 1.92 ) }
    dend_8 { pt3dadd( 34.5693, 98.5724, 16.8758, 1.56 ) }
    dend_8 { pt3dadd( 35.954, 100.474, 16.5649, 1.32 ) }
    dend_8 { pt3dadd( 37.9479, 103.459, 16.1719, 1.32 ) }
    dend_8 { pt3dadd( 39.5215, 105.989, 16.004, 1.32 ) }
    dend_8 { pt3dadd( 41.0578, 108.635, 16.0326, 1.56 ) }
    dend_8 { pt3dadd( 43.0518, 112.49, 16.2659, 1.2 ) }
    dend_8 { pt3dadd( 43.6526, 113.858, 16.4332, 1.2 ) }
    dend_8 { pt3dadd( 43.97, 114.834, 16.5917, 1.2 ) }
    dend_8 { pt3dadd( 44.2471, 116.15, 16.87, 0.96 ) }
    dend_8 { pt3dadd( 44.3623, 117.001, 17.0838, 1.32 ) }
    dend_8 { pt3dadd( 44.5558, 119.5, 17.758, 0.96 ) }
    dend_8 { pt3dadd( 44.6034, 120.728, 18.0044, 0.96 ) }
    dend_8 { pt3dadd( 44.6487, 121.975, 18.221, 0.96 ) }
    dend_8 { pt3dadd( 44.8234, 124.337, 18.6414, 1.32 ) }
    dend_8 { pt3dadd( 44.9645, 125.489, 18.8525, 1.32 ) }
    dend_8 { pt3dadd( 45.3035, 127.228, 19.2311, 0.84 ) }
    dend_8 { pt3dadd( 45.8158, 129.016, 19.7098, 1.08 ) }
    dend_8 { pt3dadd( 46.4405, 130.755, 20.3025, 1.08 ) }
    dend_8 { pt3dadd( 47.46, 133.216, 21.2702, 0.84 ) }
    dend_8 { pt3dadd( 47.9873, 134.411, 21.6938, 1.2 ) }
    dend_8 { pt3dadd( 48.6164, 135.732, 22.2062, 0.84 ) }
    dend_8 { pt3dadd( 49.3525, 137.142, 22.8105, 1.2 ) }
    dend_8 { pt3dadd( 50.5104, 139.262, 23.7944, 0.96 ) }
    dend_8 { pt3dadd( 50.8934, 139.996, 24.1364, 0.96 ) }
    dend_8 { pt3dadd( 52.3606, 143.459, 25.4197, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 8.70134, 58.1101, 15.5775, 1.08 ) }
    dend_3 { pt3dadd( 10.1406, 60.0403, 15.6254, 1.08 ) }
    dend_3 { pt3dadd( 11.857, 62.4414, 15.6717, 1.08 ) }
    dend_3 { pt3dadd( 12.3752, 63.181, 15.6835, 1.08 ) }
    dend_3 { pt3dadd( 12.871, 63.9035, 15.6539, 1.08 ) }
    dend_3 { pt3dadd( 13.7511, 65.186, 15.6012, 1.32 ) }
    dend_3 { pt3dadd( 15.0586, 67.0912, 15.523, 0.96 ) }
    dend_3 { pt3dadd( 15.8831, 68.2818, 15.4364, 1.44 ) }
    dend_3 { pt3dadd( 16.4416, 69.1065, 15.3558, 1.44 ) }
    dend_3 { pt3dadd( 17.5519, 70.8127, 15.1589, 1.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 18.7818, -187.069, 6.42556, 1.08 ) }
    dend_52 { pt3dadd( 18.4908, -189.298, 7.08521, 1.08 ) }
    dend_52 { pt3dadd( 18.2863, -190.764, 7.52493, 1.08 ) }
    dend_52 { pt3dadd( 17.9373, -192.859, 8.12803, 1.08 ) }
    dend_52 { pt3dadd( 17.7104, -194.145, 8.49288, 1.08 ) }
    dend_52 { pt3dadd( 17.4155, -195.644, 8.91415, 1.08 ) }
    dend_52 { pt3dadd( 17.1882, -196.672, 9.21816, 1.08 ) }
    dend_52 { pt3dadd( 17.0208, -197.324, 9.40288, 1.08 ) }
    dend_52 { pt3dadd( 16.7028, -198.288, 9.65959, 1.08 ) }
    dend_52 { pt3dadd( 16.0573, -199.963, 10.02, 0.84 ) }
    dend_52 { pt3dadd( 15.689, -200.823, 10.1852, 0.84 ) }
    dend_52 { pt3dadd( 15.1235, -202.044, 10.3657, 1.32 ) }
    dend_52 { pt3dadd( 14.3103, -203.703, 10.5418, 1.32 ) }
    dend_52 { pt3dadd( 13.1562, -206.047, 10.7302, 0.96 ) }
    dend_52 { pt3dadd( 12.3981, -207.649, 10.8115, 0.96 ) }
    dend_52 { pt3dadd( 11.8832, -208.819, 10.8664, 1.2 ) }
    dend_52 { pt3dadd( 10.9935, -211.116, 10.9859, 1.2 ) }
    dend_52 { pt3dadd( 10.4713, -212.681, 11.09, 1.44 ) }
    dend_52 { pt3dadd( 9.94207, -214.538, 11.2682, 1.2 ) }
    dend_52 { pt3dadd( 9.50675, -216.485, 11.4943, 1.2 ) }
    dend_52 { pt3dadd( 9.00368, -219.065, 11.8291, 1.2 ) }
    dend_52 { pt3dadd( 8.84807, -219.997, 11.9575, 1.2 ) }
    dend_52 { pt3dadd( 8.70646, -221.508, 12.2367, 1.2 ) }
    dend_52 { pt3dadd( 8.68365, -222.351, 12.4307, 1.2 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 65/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 18.7818, -187.069, 6.42556, 0.96 ) }
    dend_45 { pt3dadd( 19.6111, -190.442, 5.26953, 0.96 ) }
    dend_45 { pt3dadd( 20.1148, -192.596, 4.55098, 1.32 ) }
    dend_45 { pt3dadd( 20.249, -193.466, 4.36264, 1.32 ) }
    dend_45 { pt3dadd( 20.4154, -194.545, 4.12902, 1.32 ) }
    dend_45 { pt3dadd( 20.7895, -196.97, 3.60411, 1.56 ) }
    dend_45 { pt3dadd( 21.0669, -198.769, 3.21473, 1.56 ) }
    dend_45 { pt3dadd( 21.243, -200.1, 2.9598, 1.56 ) }
    dend_45 { pt3dadd( 21.6488, -203.781, 2.6731, 1.92 ) }
    // Section: dend_35, id: dend_35, parent: dend_21 (entry count 74/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 36.876, -275.327, -8.08152, 0.96 ) }
    dend_35 { pt3dadd( 36.5318, -277.393, -7.43349, 0.96 ) }
    dend_35 { pt3dadd( 36.1892, -279.251, -6.92185, 0.96 ) }
    dend_35 { pt3dadd( 35.7839, -281.105, -6.42804, 1.44 ) }
    dend_35 { pt3dadd( 34.8342, -285.215, -5.29539, 1.08 ) }
    dend_35 { pt3dadd( 34.41, -287.129, -4.78205, 1.08 ) }
    dend_35 { pt3dadd( 33.8531, -290.048, -4.02481, 1.08 ) }
    dend_35 { pt3dadd( 33.6651, -291.417, -3.65112, 1.08 ) }
    dend_35 { pt3dadd( 33.3356, -294.951, -2.70101, 0.84 ) }
    dend_35 { pt3dadd( 33.201, -297.852, -1.98977, 0.84 ) }
    dend_35 { pt3dadd( 33.2128, -299.682, -1.64186, 0.84 ) }
    dend_35 { pt3dadd( 33.3234, -301.741, -1.25463, 0.84 ) }
    dend_35 { pt3dadd( 33.4979, -303.665, -0.910427, 0.84 ) }
    dend_35 { pt3dadd( 33.6464, -305.24, -0.685288, 0.84 ) }
    dend_35 { pt3dadd( 33.7353, -306.354, -0.61418, 0.84 ) }
    dend_35 { pt3dadd( 33.797, -307.631, -0.591625, 0.84 ) }
    dend_35 { pt3dadd( 33.7252, -309.335, -0.59345, 0.84 ) }
    dend_35 { pt3dadd( 33.4611, -310.823, -0.653407, 0.84 ) }
    dend_35 { pt3dadd( 33.082, -312.084, -0.766508, 0.84 ) }
    dend_35 { pt3dadd( 32.2093, -314.287, -0.990149, 0.6 ) }
    dend_35 { pt3dadd( 29.355, -325.628, -1.4141, 0.6 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 95/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.876, -275.327, -8.08152, 0.84 ) }
    dend_22 { pt3dadd( 37.1116, -277.392, -8.26218, 0.84 ) }
    dend_22 { pt3dadd( 37.2696, -278.874, -8.4285, 0.84 ) }
    dend_22 { pt3dadd( 37.4297, -280.449, -8.66085, 0.84 ) }
    dend_22 { pt3dadd( 37.6998, -283.701, -9.22413, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 37.7454, -284.459, -9.37053, 1.2 ) }
    dend_22 { pt3dadd( 37.8956, -287.833, -10.0701, 0.96 ) }
    dend_22 { pt3dadd( 37.977, -290.666, -10.7385, 1.32 ) }
    dend_22 { pt3dadd( 38.1029, -294.26, -11.5948, 1.08 ) }
    dend_22 { pt3dadd( 38.2278, -296.283, -12.0821, 1.08 ) }
    dend_22 { pt3dadd( 38.3525, -297.773, -12.4336, 1.08 ) }
    dend_22 { pt3dadd( 38.5081, -298.882, -12.6703, 1.08 ) }
    dend_22 { pt3dadd( 38.6478, -299.641, -12.809, 1.08 ) }
    dend_22 { pt3dadd( 39.279, -302.62, -13.2868, 0.84 ) }
    dend_22 { pt3dadd( 40.2323, -306.473, -13.8044, 1.2 ) }
    dend_22 { pt3dadd( 40.5374, -307.559, -13.9307, 1.2 ) }
    dend_22 { pt3dadd( 42.2432, -313.185, -14.5161, 0.84 ) }
    dend_22 { pt3dadd( 43.2162, -316.356, -14.8304, 2.04 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 13/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 11.7856, 67.4905, 31.3211, 0.72 ) }
    dend_14 { pt3dadd( 11.1045, 66.1467, 30.9931, 0.72 ) }
    dend_14 { pt3dadd( 10.5171, 64.9877, 30.7102, 0.48 ) }
    dend_14 { pt3dadd( 9.80903, 63.5906, 30.3693, 0.96 ) }
    dend_14 { pt3dadd( 9.30703, 62.6001, 30.1275, 0.96 ) }
    dend_14 { pt3dadd( 4.16544, 53.3648, 26.6939, 0.96 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 11.7856, 67.4905, 31.3211, 0.72 ) }
    dend_13 { pt3dadd( 12.1733, 66.1983, 31.4451, 0.72 ) }
    dend_13 { pt3dadd( 12.3721, 65.2888, 31.5462, 1.08 ) }
    dend_13 { pt3dadd( 12.6704, 63.7218, 31.6527, 0.72 ) }
    dend_13 { pt3dadd( 12.8071, 62.5901, 31.6491, 0.72 ) }
    dend_13 { pt3dadd( 12.9036, 60.9789, 31.5302, 0.72 ) }
    dend_13 { pt3dadd( 12.9897, 59.6574, 31.3865, 1.2 ) }
    dend_13 { pt3dadd( 12.9833, 59.031, 31.3112, 1.2 ) }
    dend_13 { pt3dadd( 12.8908, 57.6718, 31.1236, 0.84 ) }
    dend_13 { pt3dadd( 12.7069, 55.9879, 30.8332, 0.84 ) }
    dend_13 { pt3dadd( 12.5787, 54.6208, 30.4377, 1.32 ) }
    dend_13 { pt3dadd( 12.5069, 53.7377, 30.0498, 1.08 ) }
    dend_13 { pt3dadd( 11.8849, 45.2064, 28.9643, 1.08 ) }
    dend_13 { pt3dadd( 10.7302, 36.6981, 28.1472, 1.08 ) }
    dend_13 { pt3dadd( 9.34047, 28.4635, 25.8788, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 52.3606, 143.459, 25.4197, 0.6 ) }
    dend_10 { pt3dadd( 53.0741, 144.5, 25.8421, 0.6 ) }
    dend_10 { pt3dadd( 53.8028, 145.563, 26.2735, 0.6 ) }
    dend_10 { pt3dadd( 54.7486, 146.943, 26.8333, 0.6 ) }
    dend_10 { pt3dadd( 56.2763, 149.172, 27.7377, 0.6 ) }
    dend_10 { pt3dadd( 57.2673, 150.618, 28.3243, 0.6 ) }
    dend_10 { pt3dadd( 58.2755, 152.089, 28.9211, 0.48 ) }
    dend_10 { pt3dadd( 62.868, 162.17, 30.5242, 0.48 ) }
    dend_10 { pt3dadd( 68.2142, 172.012, 31.1234, 0.48 ) }
    dend_10 { pt3dadd( 73.9041, 181.361, 33.7809, 0.48 ) }
    dend_10 { pt3dadd( 81.5778, 189.639, 34.9855, 0.48 ) }
    dend_10 { pt3dadd( 89.0083, 198.191, 35.1633, 0.48 ) }
    dend_10 { pt3dadd( 97.0036, 206.17, 36.5081, 0.48 ) }
    dend_10 { pt3dadd( 103.065, 215.646, 36.3938, 0.48 ) }
    dend_10 { pt3dadd( 106.907, 225.918, 34.2451, 0.48 ) }
    dend_10 { pt3dadd( 109.35, 236.734, 33.4275, 0.48 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 52.3606, 143.459, 25.4197, 0.84 ) }
    dend_9 { pt3dadd( 53.8071, 146.055, 25.2974, 0.84 ) }
    dend_9 { pt3dadd( 54.6234, 147.52, 25.2283, 0.84 ) }
    dend_9 { pt3dadd( 55.4934, 149.081, 25.1547, 0.36 ) }
    dend_9 { pt3dadd( 56.3202, 150.565, 25.0847, 0.6 ) }
    dend_9 { pt3dadd( 56.9884, 151.764, 25.0282, 0.6 ) }
    dend_9 { pt3dadd( 58.1777, 153.898, 24.9276, 0.6 ) }
    dend_9 { pt3dadd( 63.745, 162.615, 23.0742, 0.6 ) }
    dend_9 { pt3dadd( 68.7859, 171.418, 20.365, 0.6 ) }
    dend_9 { pt3dadd( 75.0793, 179.386, 17.4234, 0.6 ) }
    dend_9 { pt3dadd( 80.8155, 187.648, 14.2499, 0.6 ) }
    dend_9 { pt3dadd( 84.6241, 196.37, 9.79742, 0.6 ) }
    dend_9 { pt3dadd( 88.309, 205.901, 7.70281, 0.6 ) }
    dend_9 { pt3dadd( 92.9359, 215.213, 6.6479, 0.6 ) }
    dend_9 { pt3dadd( 97.2257, 224.689, 5.80398, 0.6 ) }
    dend_9 { pt3dadd( 99.8386, 234.473, 3.41324, 0.6 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 17.5519, 70.8127, 15.1589, 1.08 ) }
    dend_5 { pt3dadd( 16.5954, 73.0788, 15.612, 1.08 ) }
    dend_5 { pt3dadd( 15.979, 74.1605, 15.9355, 1.08 ) }
    dend_5 { pt3dadd( 15.0827, 75.7334, 16.4059, 1.08 ) }
    dend_5 { pt3dadd( 14.0876, 77.4798, 16.9283, 0.96 ) }
    dend_5 { pt3dadd( 12.6453, 80.0107, 17.6852, 0.96 ) }
    dend_5 { pt3dadd( 11.4532, 82.1028, 18.3109, 0.84 ) }
    dend_5 { pt3dadd( 9.7256, 84.6032, 19.3237, 1.08 ) }
    dend_5 { pt3dadd( 2.07054, 95.116, 20.7735, 1.08 ) }
    dend_5 { pt3dadd( -4.02123, 106.442, 22.7532, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 76/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 17.5519, 70.8127, 15.1589, 0.96 ) }
    dend_4 { pt3dadd( 19.4119, 71.9849, 14.568, 0.96 ) }
    dend_4 { pt3dadd( 20.2552, 72.4997, 14.2589, 0.96 ) }
    dend_4 { pt3dadd( 21.5838, 73.3435, 13.7335, 0.96 ) }
    dend_4 { pt3dadd( 23.1545, 74.4004, 12.9645, 0.84 ) }
    dend_4 { pt3dadd( 23.9785, 74.9676, 12.5286, 0.84 ) }
    dend_4 { pt3dadd( 25.2927, 75.8709, 11.799, 0.84 ) }
    dend_4 { pt3dadd( 25.902, 76.2597, 11.4212, 0.84 ) }
    dend_4 { pt3dadd( 26.8873, 76.8556, 10.7913, 0.84 ) }
    dend_4 { pt3dadd( 28.9174, 77.9344, 9.56511, 1.2 ) }
    dend_4 { pt3dadd( 29.3069, 78.1068, 9.37156, 1.2 ) }
    dend_4 { pt3dadd( 30.3675, 78.4835, 8.95387, 1.2 ) }
    dend_4 { pt3dadd( 32.0131, 78.9125, 8.49675, 1.2 ) }
    dend_4 { pt3dadd( 32.5403, 79.0108, 8.39883, 1.2 ) }
    dend_4 { pt3dadd( 34.6114, 79.3038, 8.1152, 1.2 ) }
    dend_4 { pt3dadd( 36.252, 79.5155, 7.95379, 0.96 ) }
    dend_4 { pt3dadd( 37.8778, 79.7549, 7.79611, 0.96 ) }
    dend_4 { pt3dadd( 39.7333, 80.0001, 7.62901, 0.96 ) }
    dend_4 { pt3dadd( 41.5744, 80.2375, 7.46415, 1.32 ) }
    dend_4 { pt3dadd( 44.3507, 80.6202, 7.20678, 0.84 ) }
    dend_4 { pt3dadd( 46.7546, 80.972, 6.9702, 1.2 ) }
    dend_4 { pt3dadd( 48.4378, 81.246, 6.87717, 1.2 ) }
    dend_4 { pt3dadd( 50.0691, 81.5662, 6.86766, 0.96 ) }
    dend_4 { pt3dadd( 51.4379, 81.8884, 6.95727, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( 52.4572, 82.1461, 7.10875, 1.2 ) }
    dend_4 { pt3dadd( 53.1283, 82.3248, 7.26205, 1.2 ) }
    dend_4 { pt3dadd( 56.5466, 83.3539, 8.2521, 1.2 ) }
    dend_4 { pt3dadd( 57.9089, 83.8431, 8.68283, 1.2 ) }
    dend_4 { pt3dadd( 59.0534, 84.341, 9.05753, 1.2 ) }
    dend_4 { pt3dadd( 61.2681, 85.3131, 9.78111, 1.08 ) }
    dend_4 { pt3dadd( 62.2705, 85.7147, 10.0825, 1.44 ) }
    dend_4 { pt3dadd( 64.1806, 86.3464, 10.4342, 1.08 ) }
    dend_4 { pt3dadd( 65.6545, 86.7438, 10.4685, 1.08 ) }
    dend_4 { pt3dadd( 66.7786, 87.0427, 10.3906, 1.08 ) }
    dend_4 { pt3dadd( 68.6755, 87.6101, 10.1177, 1.08 ) }
    dend_4 { pt3dadd( 70.7718, 88.2649, 9.68011, 1.44 ) }
    dend_4 { pt3dadd( 74.0247, 89.29, 8.82109, 1.08 ) }
    dend_4 { pt3dadd( 76.1479, 90.0307, 8.15082, 0.84 ) }
    dend_4 { pt3dadd( 77.7445, 90.6878, 7.61763, 1.2 ) }
    dend_4 { pt3dadd( 79.3504, 91.4133, 7.05998, 1.2 ) }
    dend_4 { pt3dadd( 81.1377, 92.3425, 6.35591, 0.84 ) }
    dend_4 { pt3dadd( 82.4433, 93.0867, 5.82688, 1.08 ) }
    dend_4 { pt3dadd( 85.2472, 94.6775, 4.7789, 0.72 ) }
    dend_4 { pt3dadd( 88.0207, 96.1352, 3.71746, 0.72 ) }
    dend_4 { pt3dadd( 89.7865, 96.9142, 3.04643, 1.2 ) }
    dend_4 { pt3dadd( 92.3906, 97.9468, 2.07092, 0.72 ) }
    dend_4 { pt3dadd( 93.3087, 98.2885, 1.74909, 0.72 ) }
    dend_4 { pt3dadd( 95.2308, 98.9454, 1.14595, 0.96 ) }
    dend_4 { pt3dadd( 97.2596, 99.5742, 0.570044, 0.96 ) }
    dend_4 { pt3dadd( 100.849, 100.796, -0.302942, 0.72 ) }
    dend_4 { pt3dadd( 102.695, 101.573, -0.676443, 0.6 ) }
    dend_4 { pt3dadd( 104.181, 102.287, -0.913655, 0.6 ) }
    dend_4 { pt3dadd( 106.091, 103.37, -1.2115, 1.2 ) }
    dend_4 { pt3dadd( 106.658, 103.751, -1.29318, 1.2 ) }
    dend_4 { pt3dadd( 108.976, 105.455, -1.54497, 0.72 ) }
    dend_4 { pt3dadd( 110.059, 106.352, -1.64551, 0.72 ) }
    dend_4 { pt3dadd( 110.816, 106.964, -1.71276, 0.72 ) }
    dend_4 { pt3dadd( 112.625, 108.49, -1.94422, 0.6 ) }
    dend_4 { pt3dadd( 112.921, 108.739, -1.98818, 0.6 ) }
    dend_4 { pt3dadd( 114.42, 109.977, -2.31126, 0.96 ) }
    dend_4 { pt3dadd( 115.426, 110.832, -2.64253, 0.72 ) }
    dend_4 { pt3dadd( 116.081, 111.421, -2.90789, 0.96 ) }
    dend_4 { pt3dadd( 118.61, 113.835, -4.07565, 0.72 ) }
    dend_4 { pt3dadd( 120.067, 115.283, -4.81414, 0.72 ) }
    dend_4 { pt3dadd( 122.003, 117.187, -5.87974, 1.2 ) }
    dend_4 { pt3dadd( 124.049, 119.119, -6.95755, 0.72 ) }
    dend_4 { pt3dadd( 125.455, 120.35, -7.62078, 0.72 ) }
    dend_4 { pt3dadd( 127.205, 121.755, -8.36446, 0.72 ) }
    dend_4 { pt3dadd( 127.891, 122.242, -8.59851, 0.72 ) }
    dend_4 { pt3dadd( 130.023, 123.666, -9.12177, 1.08 ) }
    dend_4 { pt3dadd( 132.487, 125.165, -9.39276, 0.72 ) }
    dend_4 { pt3dadd( 134.262, 126.181, -9.43196, 1.08 ) }
    dend_4 { pt3dadd( 134.725, 126.448, -9.41762, 1.08 ) }
    dend_4 { pt3dadd( 136.671, 127.517, -9.33954, 0.72 ) }
    dend_4 { pt3dadd( 137.82, 128.158, -9.3215, 0.72 ) }
    dend_4 { pt3dadd( 139.972, 129.409, -9.36952, 1.08 ) }
    dend_4 { pt3dadd( 140.821, 129.892, -9.45715, 1.08 ) }
    dend_4 { pt3dadd( 142.502, 130.804, -9.68216, 0.84 ) }
    dend_4 { pt3dadd( 145.604, 132.405, -10.1401, 0.84 ) }
    dend_4 { pt3dadd( 148.232, 133.671, -10.5039, 0.6 ) }
    dend_4 { pt3dadd( 150.279, 134.531, -10.7059, 1.08 ) }
    dend_4 { pt3dadd( 151.262, 134.887, -10.7526, 1.08 ) }
    dend_4 { pt3dadd( 153.842, 135.766, -10.707, 0.72 ) }
    dend_4 { pt3dadd( 155.128, 136.189, -10.5934, 0.72 ) }
    dend_4 { pt3dadd( 157.821, 137.102, -10.0827, 1.08 ) }
    dend_4 { pt3dadd( 160.171, 137.884, -9.46522, 0.84 ) }
    dend_4 { pt3dadd( 161.405, 138.313, -9.09346, 1.08 ) }
    dend_4 { pt3dadd( 163.255, 139.014, -8.5189, 0.84 ) }
    dend_4 { pt3dadd( 164.204, 139.379, -8.23537, 0.84 ) }
    dend_4 { pt3dadd( 166.651, 140.298, -7.61038, 0.6 ) }
    dend_4 { pt3dadd( 167.858, 140.699, -7.3697, 0.6 ) }
    dend_4 { pt3dadd( 169.712, 141.247, -7.08907, 0.96 ) }
    dend_4 { pt3dadd( 170.485, 141.403, -7.00221, 0.96 ) }
    dend_4 { pt3dadd( 172.824, 141.617, -6.79139, 0.72 ) }
    dend_4 { pt3dadd( 174.665, 141.669, -6.63788, 0.72 ) }
    dend_4 { pt3dadd( 176.164, 141.65, -6.59042, 0.72 ) }
    dend_4 { pt3dadd( 176.539, 141.657, -6.59685, 0.72 ) }
    dend_4 { pt3dadd( 177.902, 141.768, -6.73615, 0.72 ) }
    dend_4 { pt3dadd( 180.118, 142.084, -7.21428, 0.72 ) }
    dend_4 { pt3dadd( 180.737, 142.21, -7.44478, 0.72 ) }
    dend_4 { pt3dadd( 183.051, 142.746, -8.52983, 0.6 ) }
    dend_4 { pt3dadd( 184.321, 143.049, -9.20429, 0.96 ) }
    dend_4 { pt3dadd( 186.513, 143.489, -10.4021, 0.96 ) }
    dend_4 { pt3dadd( 187.913, 143.771, -11.2266, 0.96 ) }
    dend_4 { pt3dadd( 190.237, 144.179, -12.7022, 0.72 ) }
    dend_4 { pt3dadd( 192.342, 144.467, -14.0407, 0.72 ) }
    dend_4 { pt3dadd( 194.348, 144.612, -15.291, 1.2 ) }
    dend_4 { pt3dadd( 196.236, 144.64, -16.4354, 1.2 ) }
    // Section: dend_56, id: dend_56, parent: dend_52 (entry count 84/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 8.68365, -222.351, 12.4307, 0.48 ) }
    dend_56 { pt3dadd( 8.85952, -224.032, 12.5495, 0.48 ) }
    dend_56 { pt3dadd( 9.01703, -225.538, 12.6558, 0.48 ) }
    dend_56 { pt3dadd( 9.15181, -226.827, 12.7469, 0.84 ) }
    dend_56 { pt3dadd( 9.26834, -227.941, 12.8256, 0.84 ) }
    dend_56 { pt3dadd( 9.38092, -229.018, 12.9016, 0.6 ) }
    dend_56 { pt3dadd( 9.4374, -235.343, 12.1448, 0.6 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 91/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 8.68365, -222.351, 12.4307, 0.84 ) }
    dend_53 { pt3dadd( 9.22077, -223.939, 13.0084, 0.84 ) }
    dend_53 { pt3dadd( 9.63552, -225.238, 13.4509, 0.84 ) }
    dend_53 { pt3dadd( 10.0107, -226.516, 13.8429, 1.08 ) }
    dend_53 { pt3dadd( 10.4764, -228.108, 14.291, 0.84 ) }
    dend_53 { pt3dadd( 10.8012, -229.212, 14.5893, 0.84 ) }
    dend_53 { pt3dadd( 11.1058, -230.255, 14.8561, 0.84 ) }
    dend_53 { pt3dadd( 11.2657, -230.847, 14.9889, 0.84 ) }
    dend_53 { pt3dadd( 11.7296, -232.698, 15.3195, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_53 { pt3dadd( 11.9606, -233.747, 15.4675, 1.32 ) }
    dend_53 { pt3dadd( 12.3091, -235.677, 15.6846, 1.2 ) }
    dend_53 { pt3dadd( 12.4761, -236.808, 15.7883, 0.96 ) }
    dend_53 { pt3dadd( 12.6443, -238.215, 15.9257, 1.32 ) }
    dend_53 { pt3dadd( 12.7619, -239.496, 16.0618, 1.32 ) }
    dend_53 { pt3dadd( 12.8413, -241.071, 16.2517, 1.08 ) }
    dend_53 { pt3dadd( 12.9308, -244.411, 16.6525, 1.08 ) }
    dend_53 { pt3dadd( 12.939, -246.158, 16.859, 0.84 ) }
    dend_53 { pt3dadd( 12.9279, -247.65, 17.055, 1.2 ) }
    dend_53 { pt3dadd( 12.8988, -249.301, 17.3028, 1.08 ) }
    dend_53 { pt3dadd( 12.8716, -250.633, 17.5372, 1.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 11/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 21.6488, -203.781, 2.6731, 0.96 ) }
    dend_51 { pt3dadd( 20.7686, -206.011, 3.25803, 0.96 ) }
    dend_51 { pt3dadd( 20.4963, -206.995, 3.59922, 0.96 ) }
    dend_51 { pt3dadd( 20.2465, -207.868, 3.93018, 0.96 ) }
    dend_51 { pt3dadd( 19.9465, -208.914, 4.32397, 0.96 ) }
    dend_51 { pt3dadd( 19.6068, -210.042, 4.76389, 0.96 ) }
    dend_51 { pt3dadd( 18.9247, -212.52, 5.71842, 1.44 ) }
    dend_51 { pt3dadd( 18.4909, -214.705, 6.59923, 0.96 ) }
    dend_51 { pt3dadd( 17.8842, -218.382, 8.11352, 1.44 ) }
    dend_51 { pt3dadd( 17.7242, -219.553, 8.59255, 0.96 ) }
    dend_51 { pt3dadd( 17.4418, -221.891, 9.53265, 1.56 ) }
    dend_51 { pt3dadd( 17.1515, -224.613, 10.5668, 1.2 ) }
    dend_51 { pt3dadd( 16.8508, -228.367, 11.84, 0.96 ) }
    dend_51 { pt3dadd( 16.7703, -230.028, 12.3474, 1.44 ) }
    dend_51 { pt3dadd( 16.731, -232.67, 13.0855, 0.96 ) }
    dend_51 { pt3dadd( 16.6659, -235.557, 13.823, 1.32 ) }
    dend_51 { pt3dadd( 16.5299, -238.621, 14.4916, 0.96 ) }
    dend_51 { pt3dadd( 16.3314, -240.925, 14.9093, 0.96 ) }
    dend_51 { pt3dadd( 16.2039, -242.265, 15.0862, 0.96 ) }
    dend_51 { pt3dadd( 16.1148, -243.402, 15.2054, 0.96 ) }
    dend_51 { pt3dadd( 15.9117, -246.444, 15.4578, 1.32 ) }
    dend_51 { pt3dadd( 15.7542, -249.13, 15.6376, 0.96 ) }
    dend_51 { pt3dadd( 15.6038, -252.957, 15.8697, 1.44 ) }
    dend_51 { pt3dadd( 15.555, -255.747, 16.032, 0.84 ) }
    dend_51 { pt3dadd( 15.6004, -257.744, 16.1615, 1.2 ) }
    dend_51 { pt3dadd( 15.6668, -258.771, 16.2624, 1.2 ) }
    dend_51 { pt3dadd( 15.749, -259.458, 16.3544, 0.84 ) }
    dend_51 { pt3dadd( 16.166, -262.097, 16.8581, 1.2 ) }
    dend_51 { pt3dadd( 16.5785, -264.52, 17.482, 1.2 ) }
    dend_51 { pt3dadd( 16.8014, -266.164, 17.9942, 0.96 ) }
    dend_51 { pt3dadd( 17.0657, -268.885, 18.9198, 0.96 ) }
    dend_51 { pt3dadd( 17.1674, -271.43, 19.7777, 1.32 ) }
    dend_51 { pt3dadd( 17.1176, -273.547, 20.5084, 1.68 ) }
    dend_51 { pt3dadd( 16.8698, -275.756, 21.2915, 1.2 ) }
    dend_51 { pt3dadd( 16.2684, -278.556, 22.3, 0.96 ) }
    dend_51 { pt3dadd( 15.4121, -281.014, 23.1385, 0.96 ) }
    dend_51 { pt3dadd( 14.2252, -283.166, 23.8294, 0.84 ) }
    dend_51 { pt3dadd( 13.1883, -284.295, 24.2209, 0.84 ) }
    dend_51 { pt3dadd( 11.8352, -284.927, 24.4932, 0.84 ) }
    dend_51 { pt3dadd( 10.4181, -284.406, 24.5958, 0.84 ) }
    dend_51 { pt3dadd( 9.64248, -283.828, 24.6189, 0.84 ) }
    dend_51 { pt3dadd( 8.92629, -283.078, 24.6328, 0.84 ) }
    dend_51 { pt3dadd( 8.27313, -282.1, 24.6771, 1.08 ) }
    dend_51 { pt3dadd( 7.56786, -280.719, 24.7287, 0.84 ) }
    dend_51 { pt3dadd( 7.15285, -279.545, 24.8056, 0.6 ) }
    dend_51 { pt3dadd( 7.38322, -288.06, 26.6727, 0.6 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 57/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 21.6488, -203.781, 2.6731, 1.08 ) }
    dend_46 { pt3dadd( 22.2575, -207.682, 2.82098, 1.08 ) }
    dend_46 { pt3dadd( 22.9224, -211.911, 2.94666, 1.44 ) }
    dend_46 { pt3dadd( 23.1835, -213.811, 2.99904, 0.84 ) }
    dend_46 { pt3dadd( 23.5365, -216.576, 3.06248, 1.32 ) }
    dend_46 { pt3dadd( 23.7723, -218.457, 3.09867, 1.32 ) }
    dend_46 { pt3dadd( 24.1595, -221.713, 3.10273, 1.32 ) }
    dend_46 { pt3dadd( 24.3484, -223.811, 3.06404, 1.32 ) }
    dend_46 { pt3dadd( 24.5601, -226.099, 3.00247, 1.32 ) }
    dend_46 { pt3dadd( 24.8642, -230.331, 2.89235, 1.44 ) }
    dend_46 { pt3dadd( 24.9945, -232.409, 2.84024, 1.44 ) }
    dend_46 { pt3dadd( 25.3539, -238.957, 2.69224, 1.44 ) }
    dend_46 { pt3dadd( 25.4226, -240.595, 2.66212, 1.44 ) }
    dend_46 { pt3dadd( 25.5399, -243.428, 2.61822, 1.08 ) }
    dend_46 { pt3dadd( 25.8678, -249.08, 2.53451, 1.08 ) }
    dend_46 { pt3dadd( 26.0405, -251.986, 2.50762, 0.84 ) }
    dend_46 { pt3dadd( 26.2624, -255.336, 2.51702, 1.32 ) }
    dend_46 { pt3dadd( 26.5005, -257.981, 2.55541, 1.32 ) }
    dend_46 { pt3dadd( 26.9411, -262.081, 2.61789, 0.96 ) }
    dend_46 { pt3dadd( 27.2117, -264.209, 2.66478, 1.44 ) }
    dend_46 { pt3dadd( 27.626, -267.329, 2.65914, 1.44 ) }
    dend_46 { pt3dadd( 27.9785, -270.638, 2.60195, 1.2 ) }
    dend_46 { pt3dadd( 28.2132, -273.955, 2.50359, 1.08 ) }
    dend_46 { pt3dadd( 28.3339, -276.601, 2.3947, 1.08 ) }
    dend_46 { pt3dadd( 28.3556, -279.104, 2.27718, 1.68 ) }
    dend_46 { pt3dadd( 28.3348, -283.071, 2.07392, 1.2 ) }
    dend_46 { pt3dadd( 28.337, -284.708, 1.98182, 1.2 ) }
    dend_46 { pt3dadd( 28.3911, -287.981, 1.7925, 1.44 ) }
    dend_46 { pt3dadd( 28.4892, -290.847, 1.61747, 1.44 ) }
    dend_46 { pt3dadd( 28.7202, -294.37, 1.40476, 1.44 ) }
    dend_46 { pt3dadd( 29.0054, -297.401, 1.24697, 1.44 ) }
    dend_46 { pt3dadd( 29.4731, -300.862, 1.1318, 1.8 ) }
    dend_46 { pt3dadd( 29.9953, -304.447, 0.993801, 1.32 ) }
    dend_46 { pt3dadd( 30.3185, -306.546, 0.904435, 1.08 ) }
    dend_46 { pt3dadd( 30.7467, -309.487, 0.777201, 1.56 ) }
    dend_46 { pt3dadd( 31.2325, -312.892, 0.612571, 1.56 ) }
    dend_46 { pt3dadd( 31.4965, -314.79, 0.516423, 1.56 ) }
    dend_46 { pt3dadd( 31.731, -316.541, 0.429968, 1.56 ) }
    dend_46 { pt3dadd( 32.0741, -319.214, 0.31505, 1.56 ) }
    dend_46 { pt3dadd( 32.3897, -321.471, 0.238723, 1.56 ) }
    dend_46 { pt3dadd( 32.8099, -324.069, 0.134889, 1.32 ) }
    dend_46 { pt3dadd( 33.0111, -325.239, 0.0867183, 1.32 ) }
    dend_46 { pt3dadd( 33.2397, -326.977, 0.0196699, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( 33.4619, -328.897, -0.0511166, 1.32 ) }
    dend_46 { pt3dadd( 33.7775, -331.748, -0.201105, 1.32 ) }
    dend_46 { pt3dadd( 34.0101, -333.887, -0.312313, 1.32 ) }
    dend_46 { pt3dadd( 34.2425, -336.403, -0.43444, 1.68 ) }
    dend_46 { pt3dadd( 34.7224, -342.979, -0.762626, 1.32 ) }
    dend_46 { pt3dadd( 34.8335, -345.046, -0.873261, 1.32 ) }
    dend_46 { pt3dadd( 34.9165, -347.42, -1.01532, 1.32 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 43.2162, -316.356, -14.8304, 0.96 ) }
    dend_30 { pt3dadd( 46.0737, -317.914, -12.7147, 0.96 ) }
    dend_30 { pt3dadd( 47.5083, -318.672, -11.6575, 1.32 ) }
    dend_30 { pt3dadd( 50.4812, -320.266, -9.48165, 0.96 ) }
    dend_30 { pt3dadd( 52.6954, -321.526, -7.83855, 1.32 ) }
    dend_30 { pt3dadd( 55.5281, -323.219, -5.84892, 1.2 ) }
    dend_30 { pt3dadd( 56.983, -324.041, -4.87852, 1.2 ) }
    dend_30 { pt3dadd( 58.4129, -324.803, -3.98741, 1.2 ) }
    dend_30 { pt3dadd( 59.4038, -325.354, -3.37344, 1.2 ) }
    dend_30 { pt3dadd( 60.5589, -326.003, -2.71788, 1.2 ) }
    dend_30 { pt3dadd( 64.0099, -327.797, -0.993994, 0.96 ) }
    dend_30 { pt3dadd( 66.5073, -328.972, 0.00297237, 1.32 ) }
    dend_30 { pt3dadd( 67.9915, -329.596, 0.540662, 1.32 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 43.2162, -316.356, -14.8304, 1.08 ) }
    dend_23 { pt3dadd( 43.7106, -320.437, -14.803, 1.08 ) }
    dend_23 { pt3dadd( 44.0752, -324.132, -14.8203, 0.72 ) }
    dend_23 { pt3dadd( 44.2743, -325.94, -14.9031, 0.72 ) }
    dend_23 { pt3dadd( 44.7529, -330.308, -15.2061, 1.2 ) }
    dend_23 { pt3dadd( 45.1416, -333.864, -15.4922, 0.84 ) }
    dend_23 { pt3dadd( 45.3599, -336.014, -15.6787, 0.84 ) }
    dend_23 { pt3dadd( 45.5305, -337.585, -15.8479, 0.84 ) }
    dend_23 { pt3dadd( 45.974, -341.702, -16.3036, 0.6 ) }
    dend_23 { pt3dadd( 46.2359, -343.992, -16.5403, 0.6 ) }
    dend_23 { pt3dadd( 46.666, -347.041, -16.8107, 1.2 ) }
    dend_23 { pt3dadd( 47.2442, -350.512, -17.1195, 1.2 ) }
    dend_23 { pt3dadd( 47.7856, -353.43, -17.3641, 0.84 ) }
    dend_23 { pt3dadd( 48.2407, -355.857, -17.5505, 0.84 ) }
    dend_23 { pt3dadd( 48.9305, -359.712, -17.844, 1.08 ) }
    dend_23 { pt3dadd( 49.5387, -363.048, -18.1721, 0.72 ) }
    dend_23 { pt3dadd( 50.086, -365.998, -18.5518, 1.08 ) }
    dend_23 { pt3dadd( 50.4746, -368.029, -18.8619, 1.08 ) }
    dend_23 { pt3dadd( 50.8151, -369.93, -19.1957, 1.08 ) }
    dend_23 { pt3dadd( 51.346, -373.349, -19.8513, 0.72 ) }
    dend_23 { pt3dadd( 51.6593, -375.553, -20.2894, 0.72 ) }
    dend_23 { pt3dadd( 51.8663, -377.686, -20.6272, 1.08 ) }
    dend_23 { pt3dadd( 51.9536, -379.313, -20.787, 1.08 ) }
    dend_23 { pt3dadd( 51.9917, -380.418, -20.8317, 1.08 ) }
    dend_23 { pt3dadd( 52.0335, -383.474, -20.9369, 0.72 ) }
    dend_23 { pt3dadd( 52.0343, -385.182, -21.0055, 0.72 ) }
    dend_23 { pt3dadd( 52.0444, -388.976, -21.238, 1.2 ) }
    dend_23 { pt3dadd( 52.091, -392.763, -21.5326, 1.2 ) }
    dend_23 { pt3dadd( 52.2199, -397.723, -22.0219, 1.2 ) }
    dend_23 { pt3dadd( 52.4328, -402.49, -22.5964, 0.84 ) }
    dend_23 { pt3dadd( 52.5334, -404.368, -22.8755, 1.32 ) }
    dend_23 { pt3dadd( 52.6481, -406.443, -23.2539, 1.32 ) }
    dend_23 { pt3dadd( 52.7243, -407.405, -23.472, 1.32 ) }
    dend_23 { pt3dadd( 52.9079, -409.538, -24.0081, 0.96 ) }
    dend_23 { pt3dadd( 53.0572, -411.442, -24.4899, 1.56 ) }
    dend_23 { pt3dadd( 53.24, -413.424, -24.9238, 1.56 ) }
    dend_23 { pt3dadd( 53.4192, -415.096, -25.2672, 1.08 ) }
    dend_23 { pt3dadd( 53.5771, -416.72, -25.5954, 1.08 ) }
    dend_23 { pt3dadd( 53.9441, -420.038, -26.2965, 0.84 ) }
    dend_23 { pt3dadd( 54.1784, -421.581, -26.6181, 1.44 ) }
    dend_23 { pt3dadd( 54.7534, -424.441, -27.2152, 1.08 ) }
    dend_23 { pt3dadd( 55.2215, -426.21, -27.5928, 1.08 ) }
    dend_23 { pt3dadd( 56.0199, -429.016, -28.1939, 0.72 ) }
    dend_23 { pt3dadd( 56.9485, -432.374, -28.9042, 1.08 ) }
    dend_23 { pt3dadd( 57.4753, -434.124, -29.3313, 1.08 ) }
    dend_23 { pt3dadd( 58.102, -436.108, -29.8525, 0.96 ) }
    dend_23 { pt3dadd( 59.1529, -439.473, -30.7368, 0.72 ) }
    dend_23 { pt3dadd( 59.7121, -441.147, -31.2262, 0.72 ) }
    dend_23 { pt3dadd( 60.1661, -442.328, -31.6153, 0.72 ) }
    dend_23 { pt3dadd( 61.5217, -445.826, -32.9251, 0.72 ) }
    dend_23 { pt3dadd( 62.0066, -447.204, -33.5119, 0.72 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 71/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.16544, 53.3648, 26.6939, 0.6 ) }
    dend_16 { pt3dadd( -0.166402, 44.8126, 24.3368, 0.6 ) }
    dend_16 { pt3dadd( -4.35939, 35.9537, 23.4289, 0.6 ) }
    dend_16 { pt3dadd( -7.88084, 27.0498, 21.1662, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 75/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 4.16544, 53.3648, 26.6939, 0.84 ) }
    dend_15 { pt3dadd( -2.13543, 43.1573, 22.0968, 0.6 ) }
    dend_15 { pt3dadd( -11.0361, 34.1922, 19.2679, 0.6 ) }
    dend_15 { pt3dadd( -19.6462, 24.7547, 17.4078, 0.6 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 79/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.02123, 106.442, 22.7532, 0.6 ) }
    dend_7 { pt3dadd( -7.73725, 112.25, 25.1858, 0.6 ) }
    dend_7 { pt3dadd( -12.5884, 117.191, 27.7415, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 82/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.02123, 106.442, 22.7532, 0.84 ) }
    dend_6 { pt3dadd( -9.50805, 115.897, 23.3396, 0.6 ) }
    dend_6 { pt3dadd( -13.3196, 126.083, 23.2386, 0.6 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 12.8716, -250.633, 17.5372, 0.6 ) }
    dend_55 { pt3dadd( 10.8088, -250.389, 18.2584, 0.6 ) }
    dend_55 { pt3dadd( 8.24152, -250.086, 19.1559, 0.6 ) }
    dend_55 { pt3dadd( 7.03536, -249.944, 19.5775, 0.6 ) }
    dend_55 { pt3dadd( 5.58756, -249.773, 20.0836, 0.96 ) }
    dend_55 { pt3dadd( -5.57121, -247.236, 22.7356, 0.96 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 91/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 12.8716, -250.633, 17.5372, 0.96 ) }
    dend_54 { pt3dadd( 12.6878, -251.751, 17.5246, 0.96 ) }
    dend_54 { pt3dadd( 12.5076, -252.847, 17.5122, 0.72 ) }
    dend_54 { pt3dadd( 12.2132, -254.638, 17.492, 0.72 ) }
    dend_54 { pt3dadd( 9.9493, -262.711, 18.7314, 0.72 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 96/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 34.9165, -347.42, -1.01532, 0.84 ) }
    dend_50 { pt3dadd( 36.8512, -350.169, -2.66849, 0.84 ) }
    dend_50 { pt3dadd( 38.8416, -352.635, -4.28961, 0.84 ) }
    dend_50 { pt3dadd( 39.3506, -353.31, -4.75218, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_50 { pt3dadd( 40.5522, -355.073, -6.00145, 0.84 ) }
    dend_50 { pt3dadd( 42.0141, -357.45, -7.64341, 0.6 ) }
    dend_50 { pt3dadd( 43.2509, -359.578, -9.06538, 1.08 ) }
    dend_50 { pt3dadd( 44.115, -361.215, -10.1165, 1.08 ) }
    dend_50 { pt3dadd( 45.4401, -363.719, -11.7089, 0.72 ) }
    dend_50 { pt3dadd( 46.544, -365.878, -12.9846, 0.72 ) }
    dend_50 { pt3dadd( 47.1484, -367.197, -13.7657, 0.72 ) }
    dend_50 { pt3dadd( 47.6254, -368.283, -14.5023, 0.72 ) }
    dend_50 { pt3dadd( 48.0934, -369.451, -15.3124, 1.2 ) }
    dend_50 { pt3dadd( 49.2679, -372.344, -17.2602, 0.84 ) }
    dend_50 { pt3dadd( 50.8958, -376.017, -19.6483, 1.08 ) }
    dend_50 { pt3dadd( 52.7306, -380.105, -22.2104, 1.08 ) }
    dend_50 { pt3dadd( 54.539, -384.225, -24.7596, 0.84 ) }
    dend_50 { pt3dadd( 55.302, -386.054, -25.8319, 0.84 ) }
    dend_50 { pt3dadd( 56.2073, -388.252, -27.0546, 1.32 ) }
    dend_50 { pt3dadd( 57.364, -391.083, -28.4755, 0.84 ) }
    dend_50 { pt3dadd( 57.8177, -392.117, -28.9596, 0.84 ) }
    dend_50 { pt3dadd( 58.6437, -393.835, -29.6363, 1.32 ) }
    dend_50 { pt3dadd( 59.9313, -396.48, -30.6715, 0.84 ) }
    dend_50 { pt3dadd( 60.8103, -398.247, -31.571, 1.44 ) }
    dend_50 { pt3dadd( 62.2289, -401.305, -33.4447, 1.2 ) }
    dend_50 { pt3dadd( 62.8278, -402.668, -34.3968, 1.2 ) }
    dend_50 { pt3dadd( 63.593, -404.463, -35.6972, 1.44 ) }
    dend_50 { pt3dadd( 64.5542, -406.79, -37.4188, 1.08 ) }
    dend_50 { pt3dadd( 66.2216, -411.037, -40.5404, 0.84 ) }
    dend_50 { pt3dadd( 67.0778, -413.314, -42.153, 1.44 ) }
    dend_50 { pt3dadd( 67.9028, -415.714, -43.7569, 0.96 ) }
    dend_50 { pt3dadd( 68.4276, -417.508, -44.8167, 0.96 ) }
    dend_50 { pt3dadd( 68.7815, -418.931, -45.5267, 1.44 ) }
    dend_50 { pt3dadd( 69.3764, -422.22, -46.8764, 0.96 ) }
    dend_50 { pt3dadd( 69.4887, -423.109, -47.1809, 0.96 ) }
    dend_50 { pt3dadd( 69.8425, -426.497, -48.2567, 1.44 ) }
    dend_50 { pt3dadd( 70.1632, -430.113, -49.4283, 0.84 ) }
    dend_50 { pt3dadd( 70.4395, -434.21, -50.9746, 1.44 ) }
    dend_50 { pt3dadd( 70.6469, -438.459, -52.7198, 0.84 ) }
    dend_50 { pt3dadd( 70.6768, -439.69, -53.2735, 0.84 ) }
    dend_50 { pt3dadd( 70.7553, -442.949, -54.8896, 1.44 ) }
    dend_50 { pt3dadd( 70.918, -447.485, -57.3206, 1.44 ) }
    dend_50 { pt3dadd( 71.057, -452.465, -60.0533, 1.08 ) }
    dend_50 { pt3dadd( 71.1362, -455.119, -61.5718, 0.72 ) }
    dend_50 { pt3dadd( 71.2324, -457.814, -63.1861, 1.32 ) }
    dend_50 { pt3dadd( 71.2665, -460.204, -64.6518, 0.72 ) }
    dend_50 { pt3dadd( 71.2225, -461.42, -65.3973, 0.72 ) }
    dend_50 { pt3dadd( 70.9498, -464.692, -67.3234, 1.32 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 44/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 34.9165, -347.42, -1.01532, 1.08 ) }
    dend_47 { pt3dadd( 34.8264, -349.236, -1.08998, 1.08 ) }
    dend_47 { pt3dadd( 34.8275, -350.431, -1.12925, 1.08 ) }
    dend_47 { pt3dadd( 34.8458, -351.29, -1.11517, 1.08 ) }
    dend_47 { pt3dadd( 34.8291, -352.914, -1.18098, 1.08 ) }
    dend_47 { pt3dadd( 34.7833, -354.88, -1.3746, 1.44 ) }
    dend_47 { pt3dadd( 34.745, -356.773, -1.62004, 0.96 ) }
    dend_47 { pt3dadd( 34.7513, -358.336, -1.87103, 0.96 ) }
    dend_47 { pt3dadd( 34.7784, -359.859, -2.17812, 0.96 ) }
    dend_47 { pt3dadd( 34.8708, -362.73, -2.74571, 0.96 ) }
    dend_47 { pt3dadd( 34.972, -364.601, -3.08275, 0.84 ) }
    dend_47 { pt3dadd( 35.0603, -365.701, -3.25579, 1.44 ) }
    dend_47 { pt3dadd( 35.2033, -367.399, -3.47517, 1.08 ) }
    dend_47 { pt3dadd( 35.3502, -368.757, -3.6134, 1.08 ) }
    dend_47 { pt3dadd( 35.6115, -370.766, -3.76837, 1.56 ) }
    dend_47 { pt3dadd( 36.0967, -373.884, -3.84716, 1.32 ) }
    dend_47 { pt3dadd( 36.3299, -375.437, -3.87337, 0.96 ) }
    dend_47 { pt3dadd( 36.5418, -376.987, -3.90739, 1.32 ) }
    dend_47 { pt3dadd( 36.9253, -379.877, -3.98947, 1.08 ) }
    dend_47 { pt3dadd( 37.1555, -381.7, -4.07442, 0.72 ) }
    dend_47 { pt3dadd( 37.3282, -383.303, -4.17818, 1.32 ) }
    dend_47 { pt3dadd( 37.5596, -385.546, -4.30641, 1.08 ) }
    dend_47 { pt3dadd( 37.74, -387.332, -4.38576, 1.56 ) }
    dend_47 { pt3dadd( 37.9537, -389.38, -4.44785, 0.84 ) }
    dend_47 { pt3dadd( 38.2127, -391.876, -4.51361, 0.6 ) }
    dend_47 { pt3dadd( 38.3268, -392.951, -4.54149, 1.08 ) }
    dend_47 { pt3dadd( 38.5632, -395.236, -4.59965, 1.2 ) }
    dend_47 { pt3dadd( 38.7871, -397.283, -4.65256, 0.72 ) }
    dend_47 { pt3dadd( 38.8667, -397.964, -4.67552, 0.72 ) }
    dend_47 { pt3dadd( 39.2534, -401.226, -4.81474, 1.32 ) }
    dend_47 { pt3dadd( 39.3404, -401.822, -4.85182, 1.32 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 75/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 67.9915, -329.596, 0.540662, 0.96 ) }
    dend_34 { pt3dadd( 69.3828, -328.553, 1.25461, 0.96 ) }
    dend_34 { pt3dadd( 69.9424, -328.134, 1.54181, 0.96 ) }
    dend_34 { pt3dadd( 70.6241, -327.623, 1.89164, 0.84 ) }
    dend_34 { pt3dadd( 72.2642, -326.394, 2.73333, 0.84 ) }
    dend_34 { pt3dadd( 73.2574, -325.65, 3.24298, 1.08 ) }
    dend_34 { pt3dadd( 74.1232, -325.002, 3.68731, 1.08 ) }
    dend_34 { pt3dadd( 79.8807, -319.973, 6.77393, 1.08 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 83/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 67.9915, -329.596, 0.540662, 0.6 ) }
    dend_31 { pt3dadd( 68.9321, -330.908, 1.38822, 0.6 ) }
    dend_31 { pt3dadd( 70.0402, -332.593, 2.59918, 1.08 ) }
    dend_31 { pt3dadd( 71.1461, -334.472, 3.93375, 0.96 ) }
    dend_31 { pt3dadd( 71.7623, -335.529, 4.67565, 0.96 ) }
    dend_31 { pt3dadd( 72.4049, -336.631, 5.4492, 1.32 ) }
    dend_31 { pt3dadd( 73.5795, -338.645, 6.86335, 1.08 ) }
    dend_31 { pt3dadd( 74.0395, -339.515, 7.51368, 1.08 ) }
    dend_31 { pt3dadd( 74.8815, -341.256, 8.91487, 1.08 ) }
    dend_31 { pt3dadd( 75.6331, -342.894, 10.195, 0.84 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 62.0066, -447.204, -33.5119, 0.72 ) }
    dend_27 { pt3dadd( 61.9813, -448.614, -33.9552, 0.72 ) }
    dend_27 { pt3dadd( 61.9789, -449.963, -34.3309, 0.72 ) }
    dend_27 { pt3dadd( 61.963, -451.81, -34.8559, 0.72 ) }
    dend_27 { pt3dadd( 61.9189, -453.035, -35.1965, 0.72 ) }
    dend_27 { pt3dadd( 61.901, -453.598, -35.3529, 0.72 ) }
    dend_27 { pt3dadd( 61.8683, -455.538, -35.8768, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_27 { pt3dadd( 61.8311, -456.557, -36.1309, 0.6 ) }
    dend_27 { pt3dadd( 61.7863, -457.445, -36.3414, 0.6 ) }
    dend_27 { pt3dadd( 61.6854, -458.978, -36.6699, 0.48 ) }
    dend_27 { pt3dadd( 61.6204, -459.842, -36.8697, 0.48 ) }
    dend_27 { pt3dadd( 61.4563, -461.668, -37.3179, 0.84 ) }
    dend_27 { pt3dadd( 61.1735, -463.727, -37.8744, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 62.0066, -447.204, -33.5119, 0.72 ) }
    dend_24 { pt3dadd( 63.1729, -449.661, -33.392, 0.72 ) }
    dend_24 { pt3dadd( 64.8149, -453.121, -33.2232, 1.2 ) }
    dend_24 { pt3dadd( 65.3609, -454.271, -33.167, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 10/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 39.3404, -401.822, -4.85182, 0.48 ) }
    dend_49 { pt3dadd( 38.1939, -402.7, -4.67269, 0.48 ) }
    dend_49 { pt3dadd( 37.984, -402.844, -4.6447, 0.48 ) }
    dend_49 { pt3dadd( 37.3204, -403.351, -4.56114, 0.48 ) }
    dend_49 { pt3dadd( 36.5926, -404.008, -4.40084, 0.48 ) }
    dend_49 { pt3dadd( 36.2767, -404.328, -4.30204, 0.48 ) }
    dend_49 { pt3dadd( 35.4456, -405.199, -4.00976, 0.96 ) }
    dend_49 { pt3dadd( 34.4788, -406.239, -3.61467, 0.6 ) }
    dend_49 { pt3dadd( 33.7631, -407.06, -3.29005, 0.6 ) }
    dend_49 { pt3dadd( 32.7083, -408.331, -2.76229, 1.08 ) }
    dend_49 { pt3dadd( 31.9606, -409.267, -2.34966, 0.84 ) }
    dend_49 { pt3dadd( 31.4968, -409.894, -2.06288, 0.84 ) }
    dend_49 { pt3dadd( 30.9788, -410.704, -1.67624, 1.2 ) }
    dend_49 { pt3dadd( 30.4263, -411.599, -1.20399, 0.84 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 24/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 39.3404, -401.822, -4.85182, 0.84 ) }
    dend_48 { pt3dadd( 40.1219, -405.552, -5.4264, 0.84 ) }
    dend_48 { pt3dadd( 40.3532, -407.336, -5.68123, 0.84 ) }
    dend_48 { pt3dadd( 40.5285, -408.915, -5.88172, 0.84 ) }
    dend_48 { pt3dadd( 40.9701, -412.938, -6.40067, 0.84 ) }
    dend_48 { pt3dadd( 41.1395, -414.429, -6.58876, 0.84 ) }
    dend_48 { pt3dadd( 41.5344, -417.899, -7.0102, 1.44 ) }
    dend_48 { pt3dadd( 41.8052, -420.464, -7.33815, 1.08 ) }
    dend_48 { pt3dadd( 42.0778, -423.387, -7.66957, 1.08 ) }
    dend_48 { pt3dadd( 42.3005, -426.172, -7.92143, 0.84 ) }
    dend_48 { pt3dadd( 42.4459, -427.92, -8.01697, 0.84 ) }
    dend_48 { pt3dadd( 42.6415, -429.459, -8.07965, 1.08 ) }
    dend_48 { pt3dadd( 43.0604, -431.492, -8.15669, 0.6 ) }
    dend_48 { pt3dadd( 43.4823, -433.122, -8.20541, 0.6 ) }
    dend_48 { pt3dadd( 43.9362, -434.824, -8.21243, 0.6 ) }
    dend_48 { pt3dadd( 44.5682, -437.073, -8.24785, 1.2 ) }
    dend_48 { pt3dadd( 45.2299, -439.321, -8.34462, 1.2 ) }
    dend_48 { pt3dadd( 45.6654, -440.883, -8.44032, 1.2 ) }
    dend_48 { pt3dadd( 46.1144, -442.651, -8.56908, 0.96 ) }
    dend_48 { pt3dadd( 46.395, -443.828, -8.6589, 1.44 ) }
    dend_48 { pt3dadd( 46.8713, -446.169, -8.83231, 1.44 ) }
    dend_48 { pt3dadd( 47.4333, -449.518, -9.06763, 0.96 ) }
    dend_48 { pt3dadd( 47.9694, -453.217, -9.30478, 1.32 ) }
    dend_48 { pt3dadd( 48.1884, -454.75, -9.3934, 1.32 ) }
    dend_48 { pt3dadd( 48.67, -458.189, -9.56477, 0.84 ) }
    dend_48 { pt3dadd( 49.0257, -461.02, -9.6854, 1.32 ) }
    dend_48 { pt3dadd( 49.2081, -462.562, -9.71927, 1.32 ) }
    dend_48 { pt3dadd( 49.4049, -464.374, -9.79375, 1.32 ) }
    dend_48 { pt3dadd( 49.7729, -467.883, -9.98903, 1.32 ) }
    dend_48 { pt3dadd( 49.9779, -470.196, -10.1378, 0.96 ) }
    dend_48 { pt3dadd( 50.1098, -472.046, -10.2696, 0.96 ) }
    dend_48 { pt3dadd( 50.4416, -476.205, -10.592, 1.44 ) }
    dend_48 { pt3dadd( 50.648, -478.755, -10.8215, 1.08 ) }
    dend_48 { pt3dadd( 50.7715, -480.806, -11.031, 1.08 ) }
    dend_48 { pt3dadd( 50.863, -482.863, -11.2936, 1.08 ) }
    dend_48 { pt3dadd( 51.0101, -485.374, -11.6398, 1.08 ) }
    dend_48 { pt3dadd( 51.193, -488.066, -12.0195, 1.08 ) }
    dend_48 { pt3dadd( 51.4363, -491.875, -12.6039, 1.08 ) }
    dend_48 { pt3dadd( 51.842, -497.523, -13.523, 0.96 ) }
    dend_48 { pt3dadd( 52.4542, -506.195, -14.9939, 1.32 ) }
    dend_48 { pt3dadd( 52.6547, -509.049, -15.494, 0.84 ) }
    dend_48 { pt3dadd( 52.7684, -510.748, -15.7948, 0.84 ) }
    dend_48 { pt3dadd( 52.9087, -513.062, -16.1942, 0.84 ) }
    dend_48 { pt3dadd( 53.0111, -514.83, -16.4743, 0.84 ) }
    dend_48 { pt3dadd( 53.2237, -518.306, -16.9589, 0.84 ) }
    dend_48 { pt3dadd( 53.2822, -520.04, -17.1483, 0.84 ) }
    dend_48 { pt3dadd( 53.2878, -521.482, -17.2882, 0.84 ) }
    dend_48 { pt3dadd( 53.265, -522.992, -17.4031, 1.2 ) }
    dend_48 { pt3dadd( 53.2349, -525.832, -17.5702, 0.72 ) }
    dend_48 { pt3dadd( 53.151, -528.047, -17.6911, 1.32 ) }
    dend_48 { pt3dadd( 53.0644, -529.808, -17.855, 0.84 ) }
    dend_48 { pt3dadd( 52.9356, -531.865, -18.0677, 1.56 ) }
    dend_48 { pt3dadd( 52.5274, -536.88, -18.7142, 0.84 ) }
    dend_48 { pt3dadd( 52.3302, -538.747, -18.9878, 1.32 ) }
    dend_48 { pt3dadd( 51.8617, -542.118, -19.5244, 0.84 ) }
    dend_48 { pt3dadd( 51.0561, -547.132, -20.3404, 0.6 ) }
    dend_48 { pt3dadd( 50.8088, -548.622, -20.5778, 1.08 ) }
    dend_48 { pt3dadd( 50.3333, -551.416, -21.0039, 0.84 ) }
    dend_48 { pt3dadd( 49.9156, -553.74, -21.3668, 1.44 ) }
    dend_48 { pt3dadd( 49.4505, -556.171, -21.7237, 0.96 ) }
    dend_48 { pt3dadd( 49.1015, -558.176, -21.9878, 0.72 ) }
    dend_48 { pt3dadd( 48.7443, -560.109, -22.1247, 0.72 ) }
    dend_48 { pt3dadd( 48.14, -563.726, -22.3805, 1.32 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 75.6331, -342.894, 10.195, 0.84 ) }
    dend_33 { pt3dadd( 78.4449, -342.172, 11.1734, 0.84 ) }
    dend_33 { pt3dadd( 79.6794, -341.855, 11.603, 0.84 ) }
    dend_33 { pt3dadd( 82.5841, -341.109, 12.6138, 0.72 ) }
    dend_33 { pt3dadd( 84.4191, -340.637, 13.2523, 0.72 ) }
    dend_33 { pt3dadd( 96.0283, -339.445, 16.0641, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 93/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 75.6331, -342.894, 10.195, 0.72 ) }
    dend_32 { pt3dadd( 76.686, -344.83, 11.0651, 0.72 ) }
    dend_32 { pt3dadd( 77.8024, -346.882, 11.9877, 0.84 ) }
    dend_32 { pt3dadd( 78.2737, -347.749, 12.3772, 0.84 ) }
    dend_32 { pt3dadd( 79.2605, -349.563, 13.1927, 0.6 ) }
    dend_32 { pt3dadd( 79.9438, -350.819, 13.7573, 0.6 ) }
    dend_32 { pt3dadd( 80.6581, -352.132, 14.3476, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_32 { pt3dadd( 85.8647, -360.338, 19.347, 0.6 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 1/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 61.1735, -463.727, -37.8744, 0.48 ) }
    dend_29 { pt3dadd( 57.8264, -464.124, -39.6302, 0.48 ) }
    dend_29 { pt3dadd( 57.0478, -464.216, -40.0386, 1.08 ) }
    dend_29 { pt3dadd( 56.246, -464.311, -40.4592, 0.48 ) }
    dend_29 { pt3dadd( 55.2401, -464.43, -40.9869, 0.96 ) }
    dend_29 { pt3dadd( 54.3891, -464.531, -41.4332, 0.48 ) }
    dend_29 { pt3dadd( 52.7284, -464.728, -42.3044, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 8/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 61.1735, -463.727, -37.8744, 0.96 ) }
    dend_28 { pt3dadd( 61.0387, -464.93, -38.9136, 0.96 ) }
    dend_28 { pt3dadd( 60.765, -467.061, -40.6325, 0.48 ) }
    dend_28 { pt3dadd( 60.6638, -467.901, -41.2515, 0.48 ) }
    dend_28 { pt3dadd( 60.5083, -469.623, -42.4635, 0.84 ) }
    dend_28 { pt3dadd( 60.4103, -470.875, -43.3347, 0.6 ) }
    dend_28 { pt3dadd( 60.3694, -471.481, -43.7521, 0.6 ) }
    dend_28 { pt3dadd( 60.3185, -472.794, -44.7094, 0.96 ) }
    dend_28 { pt3dadd( 60.3017, -473.669, -45.3584, 0.96 ) }
    dend_28 { pt3dadd( 60.301, -475.346, -46.7103, 0.72 ) }
    dend_28 { pt3dadd( 60.3462, -476.955, -48.125, 0.72 ) }
    dend_28 { pt3dadd( 60.432, -478.209, -49.4678, 1.2 ) }
    dend_28 { pt3dadd( 60.5393, -479.381, -50.8185, 1.2 ) }
    dend_28 { pt3dadd( 60.6182, -480.082, -51.703, 1.2 ) }
    dend_28 { pt3dadd( 60.7149, -480.906, -52.865, 1.08 ) }
    dend_28 { pt3dadd( 60.8558, -481.931, -54.5064, 0.84 ) }
    dend_28 { pt3dadd( 61.0882, -482.98, -56.4742, 1.08 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 25/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 65.3609, -454.271, -33.167, 0.72 ) }
    dend_26 { pt3dadd( 68.294, -454.581, -33.0711, 0.72 ) }
    dend_26 { pt3dadd( 70.0493, -454.766, -33.0137, 0.72 ) }
    dend_26 { pt3dadd( 71.1789, -454.886, -32.9767, 0.96 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 29/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 65.3609, -454.271, -33.167, 0.48 ) }
    dend_25 { pt3dadd( 65.5136, -457.405, -33.332, 0.48 ) }
    dend_25 { pt3dadd( 65.5132, -459.173, -33.4709, 0.96 ) }
    dend_25 { pt3dadd( 65.4815, -459.991, -33.5483, 0.96 ) }
    dend_25 { pt3dadd( 65.3447, -461.981, -33.7563, 0.48 ) }
    dend_25 { pt3dadd( 65.2315, -463.182, -33.8905, 0.48 ) }
    dend_25 { pt3dadd( 65.0373, -465.148, -34.1117, 0.96 ) }
    dend_25 { pt3dadd( 64.8002, -467.113, -34.349, 0.96 ) }
    dend_25 { pt3dadd( 64.6188, -468.416, -34.513, 0.96 ) }
    dend_25 { pt3dadd( 64.2916, -470.36, -34.788, 1.32 ) }
    dend_25 { pt3dadd( 63.9076, -472.308, -35.0906, 0.96 ) }
    dend_25 { pt3dadd( 63.7624, -473.071, -35.2098, 0.96 ) }
    dend_25 { pt3dadd( 63.6179, -473.987, -35.3446, 0.96 ) }
    dend_25 { pt3dadd( 63.4344, -475.494, -35.5446, 1.32 ) }
    dend_25 { pt3dadd( 63.3278, -477.081, -35.7328, 0.96 ) }
    dend_25 { pt3dadd( 63.3128, -478.814, -35.9111, 0.6 ) }
    dend_25 { pt3dadd( 63.4049, -480.094, -36.0895, 0.6 ) }
    dend_25 { pt3dadd( 63.6878, -481.662, -36.4397, 1.32 ) }
    dend_25 { pt3dadd( 64.1668, -483.276, -36.9402, 0.84 ) }
    dend_25 { pt3dadd( 64.6656, -484.606, -37.4202, 0.84 ) }
    dend_25 { pt3dadd( 64.9278, -485.203, -37.6462, 0.84 ) }
    dend_25 { pt3dadd( 66.0532, -487.577, -38.596, 0.84 ) }
    dend_25 { pt3dadd( 67.2661, -490.045, -39.6204, 1.44 ) }
    dend_25 { pt3dadd( 68.5009, -492.668, -40.7435, 0.96 ) }
    dend_25 { pt3dadd( 68.9401, -493.791, -41.1846, 0.96 ) }
    dend_25 { pt3dadd( 69.3848, -495.334, -41.7163, 0.96 ) }
    dend_25 { pt3dadd( 69.5965, -496.477, -42.0276, 0.96 ) }
    dend_25 { pt3dadd( 69.6734, -497.671, -42.2358, 0.96 ) }
    dend_25 { pt3dadd( 69.522, -500.519, -42.553, 0.72 ) }
    dend_25 { pt3dadd( 69.132, -503.466, -42.7733, 1.08 ) }
    dend_25 { pt3dadd( 68.7837, -505.417, -42.8826, 0.72 ) }
    dend_25 { pt3dadd( 68.4002, -507.253, -42.9598, 1.2 ) }
    dend_25 { pt3dadd( 67.9419, -509.37, -43.0166, 0.96 ) }
    dend_25 { pt3dadd( 67.2173, -512.699, -43.0543, 1.44 ) }
    dend_25 { pt3dadd( 66.7357, -514.974, -43.0541, 0.96 ) }
    dend_25 { pt3dadd( 66.4915, -516.273, -43.1126, 0.72 ) }
    dend_25 { pt3dadd( 65.9486, -519.511, -43.3713, 1.08 ) }
    dend_25 { pt3dadd( 65.6485, -521.447, -43.6064, 0.6 ) }
    dend_25 { pt3dadd( 65.4499, -522.723, -43.7658, 0.6 ) }
    dend_25 { pt3dadd( 65.2039, -524.281, -43.9566, 1.2 ) }
    dend_25 { pt3dadd( 64.5381, -527.875, -44.3168, 0.72 ) }
    dend_25 { pt3dadd( 64.2273, -529.365, -44.4807, 1.08 ) }
    dend_25 { pt3dadd( 63.663, -531.635, -44.7391, 0.96 ) }
    dend_25 { pt3dadd( 63.0308, -533.865, -45.0003, 0.72 ) }
    dend_25 { pt3dadd( 62.6569, -535.138, -45.1313, 0.72 ) }
    dend_25 { pt3dadd( 61.693, -538.243, -45.3705, 0.72 ) }
    dend_25 { pt3dadd( 60.87, -540.579, -45.4353, 0.72 ) }
    dend_25 { pt3dadd( 60.5067, -541.598, -45.4842, 1.2 ) }
    dend_25 { pt3dadd( 60.0107, -543.035, -45.6419, 1.2 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_2 = new SectionList()
    dend_73 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_73, dend_69, dend_64, dend_41, dend_18, dend_0, dend_75, dend_74, dend_70, dend_66, dend_65, dend_61, dend_42, dend_40, dend_19, dend_1, dend_77, dend_76, dend_72, dend_71, dend_68, dend_67, dend_63, dend_62, dend_58, dend_43, dend_37, dend_20, dend_11, dend_2, dend_60, dend_59, dend_57, dend_44, dend_39, dend_38, dend_36, dend_21, dend_17, dend_12, dend_8, dend_3, dend_52, dend_45, dend_35, dend_22, dend_14, dend_13, dend_10, dend_9, dend_5, dend_4, dend_56, dend_53, dend_51, dend_46, dend_30, dend_23, dend_16, dend_15, dend_7, dend_6, dend_55, dend_54, dend_50, dend_47, dend_34, dend_31, dend_27, dend_24, dend_49, dend_48, dend_33, dend_32, dend_29, dend_28, dend_26, dend_25]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_73 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_64 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_74 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_40 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_77 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_72 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_71 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_68 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_67 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_62 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_37 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_60 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_59 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_57 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_44 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_39 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_38 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_36 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_21 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_17 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_35 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_22 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_13 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_10 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_9 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_5 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_4 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_46 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_23 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_47 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_48 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_25 OneSecGrp_SectionRef_81.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_41 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_69 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_58 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_70 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_2 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_19 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_43 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_3 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_11 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_75 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_12 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_66 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_65 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_14 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_76 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_7 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_16 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_6 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_15 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_45 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_63 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_52 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_53 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_54 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_55 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_30 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_34 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_31 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_33 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_32 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_49 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_24 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_26 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_27 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_29 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_42, dend_42, dend_42, dend_42, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_7, dend_7, dend_6, dend_6, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_57 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_64 nseg = 3
    dend_74 nseg = 3
    dend_61 nseg = 9
    dend_40 nseg = 3
    dend_77 nseg = 7
    dend_72 nseg = 7
    dend_71 nseg = 3
    dend_68 nseg = 5
    dend_67 nseg = 7
    dend_62 nseg = 7
    dend_37 nseg = 7
    dend_20 nseg = 9
    dend_60 nseg = 3
    dend_59 nseg = 11
    dend_57 nseg = 3
    dend_44 nseg = 7
    dend_39 nseg = 11
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_21 nseg = 3
    dend_17 nseg = 3
    dend_8 nseg = 5
    dend_35 nseg = 3
    dend_22 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 5
    dend_9 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 11
    dend_51 nseg = 5
    dend_46 nseg = 7
    dend_23 nseg = 7
    dend_50 nseg = 7
    dend_47 nseg = 3
    dend_48 nseg = 9
    dend_25 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_DBC_893b78d08e_0_0


