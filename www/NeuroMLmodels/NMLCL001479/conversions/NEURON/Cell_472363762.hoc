// Cell: Cell_472363762
/*
{
  "id" : "Cell_472363762",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "297.717, 379.465, 28.56, 10.8856", "303.16, 379.465, 28.56, 10.8856", "308.603, 379.465, 28.56, 10.8856" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "303.16, 379.465, 28.56, 1.0", "309.001, 393.281, 28.56, 1.0", "314.843, 407.097, 28.56, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "301.534, 375.937, 23.3178, 0.4066", "301.116, 375.027, 21.966, 0.387", "300.556, 374.232, 22.4974, 0.4796", "299.876, 373.68, 23.6998, 0.2888", "298.87, 373.668, 23.7132, 0.334", "297.763, 373.529, 23.3369, 0.4576", "296.791, 373.306, 22.68, 0.2578", "296.001, 373.378, 24.0027, 0.3524", "295.177, 373.013, 24.92, 0.4276", "294.767, 372.847, 22.7923, 0.2606", "293.894, 372.903, 22.9284, 0.3626", "293.418, 372.515, 24.3314, 0.6844", "292.374, 372.143, 24.1287, 0.5818", "291.329, 371.967, 23.9428, 0.3938", "290.478, 371.658, 22.6307, 0.5218", "290.086, 371.737, 24.2155, 0.4008", "289.307, 371.594, 25.2608, 0.3256", "288.517, 371.406, 25.1384, 0.2962", "287.885, 370.987, 23.9887, 0.6102", "287.0, 370.53, 24.2298, 0.5858", "285.92, 370.387, 24.362, 0.5322", "285.293, 369.573, 24.92, 0.3086", "284.435, 369.283, 24.2001, 0.356", "283.658, 368.715, 22.902, 0.2288", "283.349, 368.254, 21.7669, 0.2288", "283.026, 367.83, 21.9876, 0.4176", "282.284, 367.695, 23.4424, 0.3922", "281.642, 367.264, 21.9478, 0.5138", "280.962, 367.178, 20.4596, 0.3532", "280.222, 366.538, 21.0484, 0.356", "279.31, 366.165, 21.9526, 0.6544", "278.516, 365.599, 21.5424, 0.4614", "277.666, 365.283, 22.0234, 0.8512", "276.764, 364.83, 21.5838, 0.3936", "275.959, 364.029, 21.2383, 0.4148", "275.155, 363.228, 20.893, 0.4364", "274.349, 362.427, 20.5475, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "305.141, 375.251, 27.8631, 0.5742", "305.353, 374.191, 28.0683, 0.9486", "305.493, 373.332, 29.0111, 0.4674", "306.244, 372.808, 28.9262, 0.4576", "306.764, 371.833, 28.6373, 0.4576", "307.408, 371.457, 27.7245, 0.4576", "308.121, 371.228, 29.3124, 0.5592", "308.806, 370.472, 29.5221, 0.5416", "309.371, 370.229, 27.7206, 0.415", "309.251, 369.324, 27.6763, 0.6322", "309.417, 368.382, 27.9832, 0.5222", "310.052, 367.771, 27.1438, 0.6864", "310.494, 367.113, 27.6755, 0.5344", "310.682, 366.19, 28.5524, 0.6098", "311.008, 365.299, 28.0162, 0.6514", "311.941, 364.936, 27.2852, 0.4112", "312.87, 365.279, 28.1708, 0.737", "313.894, 365.26, 28.4698, 0.788", "314.823, 364.878, 27.1281, 0.788" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "304.81, 381.468, 38.6523, 0.4306", "305.196, 381.938, 41.022, 0.4184", "305.584, 382.408, 43.3919, 0.4062", "305.971, 382.879, 45.7618, 0.3938", "306.359, 383.349, 48.1317, 0.3816", "306.878, 384.276, 47.9699, 0.6864", "307.297, 385.188, 48.9698, 0.6864", "307.638, 386.071, 49.2293, 0.4932", "307.645, 387.092, 50.104, 0.4976", "307.951, 388.06, 49.7342, 0.337", "308.201, 389.142, 49.3119, 0.292", "308.43, 389.92, 50.4, 0.2288", "308.481, 390.941, 49.8677, 0.3232", "308.688, 391.825, 49.1817, 0.6742", "308.766, 392.863, 49.5001, 0.4644", "308.537, 393.574, 50.2107, 0.6864", "308.766, 394.257, 49.6667, 0.6864", "308.477, 394.921, 51.142, 0.4286", "308.651, 395.894, 50.0354, 0.5036", "308.616, 396.8, 49.7227, 0.7792", "308.537, 397.938, 49.7487, 0.5062", "308.559, 399.078, 49.733, 0.4214", "308.679, 400.202, 49.8408, 0.5542", "308.913, 401.256, 49.8532, 0.7264", "309.109, 402.319, 49.5729, 0.5848", "309.223, 403.404, 49.8308, 0.5288", "309.452, 404.151, 48.095, 0.356", "309.443, 404.974, 46.2944, 0.2604", "309.109, 405.675, 44.8711, 0.483", "309.325, 406.54, 46.0443, 0.4322" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "302.672, 383.722, 32.6642, 0.6086", "302.453, 384.821, 33.2063, 0.5612", "302.316, 385.858, 34.3378, 0.483" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "299.808, 376.161, 30.4601, 0.6102", "299.301, 375.145, 30.7992, 0.7128", "298.851, 374.094, 30.7941, 0.8396", "298.051, 373.277, 30.7602, 0.9174", "297.235, 372.479, 30.5836, 0.9942", "296.569, 371.607, 29.8116, 1.0692", "295.836, 370.73, 29.6834, 1.0878", "295.09, 369.866, 29.6951, 0.9846", "294.529, 368.87, 29.7615, 0.86", "294.045, 367.843, 30.109, 0.7928", "293.647, 366.808, 30.7479, 0.868", "293.514, 365.673, 30.8496, 0.917", "293.343, 364.549, 31.1094, 0.9406", "293.107, 363.497, 32.027, 0.9384", "293.084, 362.42, 32.928, 0.906", "293.044, 361.277, 33.0453, 0.8136" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "304.935, 375.198, 30.2879, 0.6556", "304.998, 374.153, 31.3407, 0.6166", "305.044, 373.047, 32.018, 0.588", "305.335, 371.978, 32.6869, 0.5848", "306.03, 371.086, 32.753, 0.5386", "306.678, 370.256, 31.7075, 0.5104", "307.116, 369.282, 30.7244, 0.6034", "307.995, 368.592, 30.2492, 0.736", "309.109, 368.485, 30.8, 0.788" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "301.585, 384.198, 25.1188, 0.532", "300.971, 385.122, 24.5062, 0.5552", "300.079, 385.772, 24.9561, 0.5592", "299.601, 385.871, 24.8889, 0.6356" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "302.665, 375.232, 23.2562, 0.5048", "302.469, 374.236, 21.9996, 0.523", "302.006, 373.292, 21.0081, 0.6052", "301.236, 372.496, 20.7318, 0.72", "300.337, 371.832, 20.7847, 0.7456", "299.718, 370.877, 20.9602, 0.715", "299.505, 369.798, 21.7249, 0.787", "299.52, 368.656, 21.8372, 0.8134", "299.632, 367.518, 21.8288, 0.864", "299.931, 366.414, 21.7669, 0.7882", "299.953, 365.28, 21.3934, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000027
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "314.843, 407.097, 28.56, 1.0", "320.684, 420.913, 28.56, 1.0", "326.525, 434.729, 28.56, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "274.349, 362.427, 20.5475, 0.4576", "274.204, 361.768, 21.7151, 0.5338", "273.796, 360.702, 21.8392, 0.4954", "273.216, 359.737, 21.835, 0.4128", "272.334, 359.034, 21.8131, 0.3814", "271.335, 358.484, 21.6882, 0.4018", "270.384, 357.888, 21.212, 0.453", "269.448, 357.284, 20.7281, 0.483", "268.548, 356.581, 20.6886, 0.4938", "267.805, 355.734, 20.4834, 0.5084", "267.195, 354.776, 20.1608, 0.52", "266.477, 353.9, 20.1967, 0.5338", "265.641, 353.218, 19.7008, 0.5338", "265.132, 352.342, 19.2217, 0.5338", "264.684, 351.313, 19.4253, 0.5184", "263.869, 350.552, 19.3225, 0.4612", "263.052, 349.937, 18.2426, 0.3672", "262.406, 349.239, 16.7065, 0.2806", "261.512, 348.853, 15.5254, 0.2542", "260.707, 348.793, 16.9098, 0.2938", "260.099, 348.729, 19.2685, 0.3862", "259.206, 348.359, 20.5587, 0.4922", "258.161, 347.925, 20.6758, 0.5516", "257.135, 347.436, 20.396, 0.5154", "256.21, 346.815, 19.7862, 0.397", "255.143, 346.494, 20.1709, 0.2886", "254.215, 346.078, 19.0078, 0.2306", "253.612, 346.274, 19.6, 0.3798", "252.81, 346.182, 20.5422, 0.2288", "251.769, 346.259, 19.88, 0.269", "250.793, 345.996, 19.9576, 0.2478", "250.242, 345.405, 21.0, 0.4576", "249.526, 344.706, 20.2765, 0.387", "248.691, 344.279, 21.0423, 0.318", "247.904, 344.048, 20.0236, 0.4322", "247.238, 343.469, 19.6, 0.356", "246.396, 342.857, 20.1303, 0.4318", "245.273, 342.92, 20.4089, 0.2364", "244.219, 342.959, 20.3468, 0.3304" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "274.349, 362.427, 20.5475, 0.4576", "274.009, 362.201, 20.417, 0.3668", "273.152, 361.567, 19.4051, 0.356", "272.734, 360.599, 18.3408, 0.3308", "272.132, 359.747, 17.1959, 0.356" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "314.823, 364.878, 27.1281, 0.788", "315.713, 364.727, 26.4046, 0.7434", "315.976, 365.271, 24.6618, 0.6178", "316.739, 365.803, 24.2222, 0.5848", "317.725, 366.154, 24.4348, 0.5238", "318.63, 365.672, 24.719, 0.6842", "319.591, 365.851, 24.5347, 0.559", "319.977, 365.006, 23.9781, 0.237", "320.715, 364.397, 24.059, 0.5534", "321.711, 364.621, 24.1024, 0.3856", "322.531, 364.159, 23.52, 0.6482", "323.602, 364.115, 23.5771, 0.3756", "324.051, 363.513, 22.7035, 0.5338", "324.029, 363.236, 20.267, 0.6864", "324.445, 362.272, 20.1659, 0.71", "325.339, 361.811, 20.8544, 0.3994", "326.099, 361.039, 21.0, 0.4098", "326.119, 359.966, 20.4154, 0.613", "325.492, 359.186, 20.0883, 0.3364", "325.701, 358.628, 19.2147, 0.3272", "325.926, 357.822, 20.4336, 0.5942", "325.95, 356.931, 19.4387, 0.5338", "325.634, 356.543, 16.921, 0.5338", "325.258, 355.9, 16.4909, 0.6576", "324.782, 355.52, 15.745, 0.6864", "324.851, 354.983, 14.5737, 0.4576", "325.906, 355.06, 14.1168, 0.641", "326.689, 354.703, 15.057, 0.3136", "327.178, 354.537, 13.1452, 0.396", "327.51, 353.734, 12.0532, 0.356", "327.961, 352.841, 12.6, 0.5202", "328.891, 353.257, 12.731, 0.376", "329.542, 353.636, 13.7203, 0.5974", "330.457, 353.801, 14.5656, 0.4836", "331.336, 353.568, 13.5542, 0.4322", "331.624, 354.137, 12.2844, 0.4068", "332.4, 354.516, 12.087, 0.4022", "333.522, 354.65, 12.04, 0.2628", "334.169, 355.496, 11.7888, 0.2288", "334.734, 355.563, 12.9968, 0.6432", "335.535, 355.212, 13.44, 0.5084" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "314.823, 364.878, 27.1281, 0.788", "315.631, 364.576, 26.8223, 0.88", "315.988, 363.544, 26.3511, 0.85", "316.601, 362.836, 27.16, 0.3784", "316.888, 361.853, 27.6231, 0.356", "317.345, 361.47, 29.5854, 0.3196", "318.271, 360.94, 30.24, 0.305", "318.5, 360.144, 28.8812, 0.4026", "319.528, 359.988, 28.5519, 0.2818", "320.339, 359.607, 27.2507, 0.4254", "320.909, 358.914, 27.0637, 0.9028", "321.613, 358.193, 27.6587, 0.7886", "322.277, 357.304, 27.711, 0.7264", "322.894, 356.451, 27.44, 0.678", "323.784, 355.844, 26.861, 0.8178", "324.363, 354.965, 26.6406, 0.3904", "325.122, 354.344, 26.88, 0.2506", "325.705, 353.839, 27.3073, 0.239", "326.694, 353.725, 28.238, 0.33", "327.642, 353.395, 28.1812, 0.4576", "328.003, 352.802, 26.7358, 0.5814", "328.784, 352.466, 25.4806, 0.4564", "329.4, 352.555, 27.3697, 0.341", "330.028, 352.396, 28.5852, 0.2492", "330.387, 351.524, 28.9528, 0.4516", "331.094, 351.322, 29.223, 0.483", "331.816, 350.8, 29.2172, 0.5546", "332.683, 350.16, 28.5925, 0.4558", "333.51, 349.427, 28.091, 0.3304", "334.212, 348.569, 27.72, 0.4304", "334.9, 347.759, 27.6786, 0.566", "335.543, 346.902, 27.7186, 0.4544", "336.263, 346.387, 28.4866, 0.6102", "337.011, 345.871, 28.056, 0.6864", "337.562, 345.274, 27.2275, 0.3272", "338.343, 344.802, 26.5073, 0.2388", "339.198, 344.893, 28.2192, 0.4322", "339.94, 344.44, 27.7794, 0.4576", "340.909, 344.366, 27.9644, 0.4576", "341.741, 344.349, 28.1212, 0.365", "342.599, 344.136, 28.6051, 0.6486", "343.444, 343.533, 28.6345, 0.4434", "344.049, 343.2, 28.4976, 0.493", "344.857, 342.736, 28.4343, 0.4576", "345.72, 342.327, 28.3228, 0.4814", "346.677, 341.91, 28.0468, 0.4702", "346.65, 341.015, 27.2863, 0.434", "347.042, 340.004, 27.141, 0.283", "347.69, 339.29, 27.72, 0.4952", "348.168, 338.618, 27.7253, 0.4692", "348.733, 337.729, 27.6156, 0.6072", "349.39, 337.189, 26.9461, 0.3656", "350.041, 336.772, 28.0, 0.4068", "351.096, 336.385, 27.7343, 0.4986", "351.437, 335.838, 26.129, 0.229", "351.993, 335.265, 26.6, 0.4576", "352.437, 334.443, 27.2292, 0.4576", "352.596, 333.587, 27.5131, 0.3896", "353.155, 332.797, 27.9443, 0.2542", "354.017, 332.144, 28.5541, 0.353", "354.552, 331.156, 28.3772, 0.3814", "355.342, 330.379, 28.6532, 0.3686", "356.31, 330.193, 28.7787, 0.3474", "357.412, 330.098, 29.342, 0.3252", "358.483, 329.81, 29.1673, 0.3052", "359.235, 329.159, 28.448, 0.351", "360.052, 328.5, 28.8271, 0.3814", "360.966, 328.253, 28.6294, 0.4324", "361.629, 327.698, 29.7223, 0.4576", "362.256, 326.995, 29.2754, 0.2966", "363.347, 326.812, 29.3927, 0.2288", "364.471, 326.634, 29.4, 0.2288", "365.595, 326.498, 29.4, 0.2288", "366.728, 326.446, 29.4622, 0.3306", "367.849, 326.331, 29.0433, 0.4692", "368.945, 326.269, 28.317, 0.4576", "369.68, 325.932, 28.1002, 0.2288", "370.52, 325.906, 29.0976, 0.3262", "371.255, 326.495, 28.6373, 0.4576", "372.169, 326.626, 29.0492, 0.423", "373.18, 326.806, 28.7468, 0.2326", "374.279, 326.979, 29.12, 0.27", "375.186, 327.408, 28.2562, 0.4262", "376.172, 327.75, 28.3825, 0.3316", "376.99, 327.718, 28.0104, 0.3644", "377.833, 327.406, 28.7106, 0.5294", "378.664, 326.956, 28.7249, 0.4546", "379.691, 326.551, 28.2971, 0.2636", "380.708, 326.296, 28.901, 0.2962", "381.66, 325.865, 29.1032, 0.3352", "382.676, 325.578, 28.28, 0.5432", "383.678, 325.15, 28.4581, 0.3564", "384.787, 324.958, 28.0563, 0.2288", "385.891, 324.675, 28.0, 0.2288", "387.007, 324.451, 28.0, 0.2288", "388.105, 324.14, 28.0, 0.2288", "389.159, 323.701, 27.9555, 0.253", "390.129, 323.516, 28.2047, 0.3658", "391.11, 323.116, 28.6532, 0.402", "392.092, 322.608, 28.84, 0.2986", "393.172, 322.619, 29.3171, 0.2986", "394.217, 322.608, 30.2089, 0.2882", "395.251, 322.722, 29.9594, 0.2544", "396.158, 322.504, 30.3419, 0.3182", "397.259, 322.608, 29.96, 0.2288", "398.158, 323.179, 29.6918, 0.2288", "399.123, 323.523, 29.12, 0.2288", "400.267, 323.523, 29.12, 0.2288", "401.195, 323.981, 28.8417, 0.2288", "401.891, 324.674, 28.6916, 0.2288", "402.983, 324.782, 29.1292, 0.2672", "404.048, 324.782, 29.9499, 0.3304", "405.109, 324.871, 30.52, 0.2302", "406.165, 324.433, 30.52, 0.3244", "407.03, 323.721, 30.6186, 0.5578", "407.461, 322.861, 31.08, 0.2722", "407.984, 322.025, 31.08, 0.2288", "408.994, 321.586, 30.7045, 0.2288", "410.131, 321.578, 30.52, 0.2288", "411.241, 321.671, 30.464, 0.4132", "411.84, 322.081, 30.3604, 0.356", "412.675, 322.494, 30.4774, 0.5826", "413.775, 322.539, 30.4746, 0.608", "414.795, 322.842, 30.0507, 0.4964", "415.876, 322.559, 29.68, 0.5438", "416.554, 323.039, 28.5222, 0.3918", "417.547, 322.959, 27.7612, 0.6158", "418.267, 322.618, 28.0319, 0.2288", "419.135, 322.629, 27.2532, 0.3882", "419.806, 323.22, 27.6651, 0.3304", "420.537, 323.635, 26.8402, 0.6864", "421.443, 324.092, 27.0337, 0.8028", "422.445, 323.928, 27.5979, 0.7366", "423.455, 323.838, 28.6516, 0.6356", "424.424, 323.488, 28.5051, 0.6102", "425.113, 322.861, 27.9359, 0.6232", "425.798, 322.428, 27.4254, 0.6444", "426.717, 322.034, 27.6298, 0.7944", "427.523, 322.221, 28.6698, 0.7852", "428.231, 322.385, 29.5736, 0.2508", "429.009, 321.692, 29.5806, 0.4302", "429.458, 320.892, 29.12, 0.6102" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "309.325, 406.54, 46.0443, 0.4322", "309.975, 406.812, 46.0188, 0.4738", "311.03, 407.255, 45.9777, 0.5414", "312.084, 407.698, 45.9365, 0.6088", "312.77, 408.234, 44.8417, 0.3474", "313.178, 408.951, 44.1854, 0.4576", "313.22, 408.751, 46.6082, 0.3044", "313.779, 408.957, 47.6132, 0.3374", "314.028, 409.671, 48.5948, 0.4526", "314.404, 410.012, 50.4431, 0.3522", "314.6, 410.798, 49.5886, 0.6102", "315.148, 411.167, 50.0436, 0.4598", "316.007, 411.726, 50.3829, 0.521", "316.541, 411.404, 52.6288, 0.4576", "317.26, 411.336, 53.503, 0.4514", "317.481, 412.219, 54.0238, 0.494", "318.522, 412.412, 53.5049, 0.6864", "319.245, 412.081, 55.0458, 0.5592", "320.315, 412.349, 55.1342, 0.5338", "321.024, 412.722, 56.0829, 0.5364", "321.649, 413.415, 56.84, 0.5848", "322.141, 414.345, 57.0713, 0.6066", "322.608, 414.987, 58.52, 0.4324", "323.066, 415.638, 57.636, 0.866", "323.935, 416.036, 57.12, 0.8574", "324.21, 417.113, 57.391, 0.9078", "324.053, 417.949, 58.7891, 0.797", "324.313, 418.722, 60.2, 0.6864", "324.882, 419.523, 60.3691, 0.5884", "325.046, 420.522, 60.6472, 0.2946", "325.417, 421.442, 60.48, 0.6864", "325.267, 422.431, 60.6889, 0.6238", "325.708, 423.297, 60.226, 0.76", "325.866, 424.086, 61.2926, 0.517", "325.92, 425.018, 60.2588, 0.5682", "325.707, 425.862, 61.6358, 0.4628", "326.097, 426.137, 63.3153, 0.539", "326.451, 426.626, 65.0787, 0.4384", "326.726, 427.419, 66.561, 0.4796", "326.876, 428.374, 66.6456, 0.6118", "326.844, 429.395, 67.4338, 0.6296", "327.11, 430.342, 67.7748, 0.5736", "327.508, 431.161, 67.8936, 0.3942", "328.171, 431.563, 66.7019, 0.288", "329.021, 431.545, 67.2294, 0.3088", "329.798, 432.187, 66.64, 0.5848", "329.995, 432.966, 67.7648, 0.5822", "330.18, 433.004, 70.4287, 0.6742", "330.565, 433.63, 72.228, 0.2628", "331.288, 434.153, 73.4877, 0.2288", "331.854, 434.73, 72.4069, 0.395", "332.882, 435.061, 72.5502, 0.4844", "333.525, 435.291, 74.4629, 0.675", "334.468, 435.631, 75.5014, 0.5624", "335.238, 435.75, 74.8157, 0.666", "335.078, 436.436, 73.64, 0.661" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "309.325, 406.54, 46.0443, 0.4322", "309.402, 406.693, 46.3918, 0.4442", "309.566, 407.559, 47.8649, 0.2288", "309.566, 408.703, 47.88, 0.2288", "309.748, 409.552, 49.1047, 0.5194", "310.045, 410.056, 51.1157, 0.8136", "309.91, 411.056, 51.5217, 0.6088", "309.572, 411.819, 52.8315, 0.2382", "309.155, 412.655, 51.7496, 0.5152", "308.398, 413.076, 50.2944, 0.6134", "307.919, 413.912, 49.0896, 0.7372", "307.522, 414.951, 49.28, 0.6514", "307.051, 415.607, 49.5709, 0.2318", "307.236, 416.646, 49.0, 0.2484", "306.592, 417.47, 48.7676, 0.571", "306.084, 417.907, 50.0948, 0.3622", "305.575, 418.69, 48.9404, 0.5836", "305.448, 419.505, 49.2313, 0.2674", "304.858, 419.887, 49.84, 0.2814", "304.542, 420.969, 50.0088, 0.397", "304.304, 421.588, 51.7129, 0.7908", "303.892, 422.365, 51.938, 0.2608", "303.043, 422.714, 52.0425, 0.62", "302.51, 423.616, 51.3766, 0.4576", "302.421, 424.514, 50.7396, 0.299", "301.866, 425.301, 50.7237, 0.2288", "301.298, 425.807, 49.2954, 0.4454", "300.853, 426.604, 48.4319, 0.3936", "300.319, 427.284, 48.972, 0.5338", "300.202, 427.627, 50.9886, 0.4608", "299.526, 428.21, 50.2354, 0.6102", "298.798, 428.873, 49.0008, 0.6104", "298.391, 429.51, 49.9215, 0.3994", "298.628, 430.374, 50.9821, 0.385", "298.813, 431.373, 50.65, 0.305", "298.296, 432.005, 49.2226, 0.2398", "297.453, 432.488, 48.2731, 0.3168", "296.715, 432.962, 48.8113, 0.4518", "296.137, 433.893, 49.2744, 0.6864", "295.621, 434.622, 49.8859, 0.5558", "295.075, 434.949, 48.627, 0.3306", "294.58, 435.437, 49.6874, 0.413", "294.133, 435.768, 51.52, 0.661", "293.572, 436.741, 51.7588, 0.6848", "293.006, 437.351, 53.1894, 0.6812", "292.108, 437.466, 54.5742, 0.3228", "291.131, 437.945, 54.6, 0.4322", "290.788, 438.269, 56.558, 0.2288", "290.405, 439.02, 57.9569, 0.2288", "290.122, 439.691, 56.2906, 0.4192", "289.66, 440.329, 54.6, 0.508", "289.229, 441.232, 54.2987, 0.569", "289.018, 441.914, 55.8494, 0.4374", "288.519, 442.784, 55.44, 0.7958", "288.396, 443.822, 55.9689, 0.6818", "287.674, 444.446, 56.1383, 0.4718", "287.373, 445.016, 56.1686, 0.5184", "286.961, 444.59, 57.904, 0.233", "286.343, 445.272, 57.0769, 0.3406", "285.476, 445.562, 56.8282, 0.6852", "284.586, 445.995, 58.0994, 0.627", "283.584, 446.046, 59.0573, 0.7422", "282.551, 446.047, 58.9596, 0.5666", "281.948, 446.646, 59.3718, 0.5752", "281.125, 446.737, 58.1423, 0.6772", "280.224, 446.67, 57.3493, 0.517", "279.373, 446.389, 56.7204, 0.2288", "278.793, 446.16, 54.88, 0.4576" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "302.316, 385.858, 34.3378, 0.483", "301.802, 385.967, 32.2, 0.5586", "300.986, 386.228, 32.3224, 0.5242", "301.056, 386.558, 34.214, 0.57", "300.3, 386.46, 35.5289, 0.4576", "299.957, 386.451, 33.717, 0.2882", "299.521, 387.308, 32.7891, 0.2316", "299.237, 388.358, 33.0509, 0.3304", "298.507, 388.681, 34.4084, 0.4826", "297.509, 388.62, 34.2768, 0.4892", "296.771, 389.12, 34.5391, 0.4524", "296.29, 389.82, 35.3847, 0.5968", "295.802, 390.679, 35.3133, 0.5024", "295.031, 391.052, 35.399, 0.2302", "294.502, 391.66, 36.2202, 0.3886", "293.854, 392.461, 35.6334, 0.4628", "293.034, 392.931, 35.6964, 0.327", "292.705, 393.407, 37.413, 0.3512", "291.811, 393.536, 36.2429, 0.4904", "291.091, 394.045, 36.7394, 0.5848", "290.323, 394.868, 36.6402, 0.6974", "289.797, 395.821, 37.4128, 0.7372", "289.337, 396.733, 38.3197, 0.7236", "288.875, 397.753, 37.8179, 0.671", "288.182, 398.639, 37.6398, 0.6356", "287.254, 399.2, 38.1455, 0.658", "286.199, 399.584, 38.6672, 0.661", "285.376, 400.37, 38.8872, 0.6356" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "302.316, 385.858, 34.3378, 0.483", "302.74, 386.59, 35.1868, 0.3966", "303.721, 387.083, 35.6171, 0.4952", "304.813, 386.837, 35.7064, 0.6036", "305.876, 386.514, 35.0546, 0.634", "306.99, 386.407, 34.4957, 0.6598", "308.003, 386.775, 35.352, 0.6358", "308.661, 387.631, 36.2673, 0.6356" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_34",
    "id" : "apic_34",
    "points3d" : [ "293.044, 361.277, 33.0453, 0.8136", "293.26, 361.41, 35.4603, 0.6086", "293.504, 361.56, 38.1721, 0.3782", "294.153, 361.728, 39.6091, 0.2542", "294.999, 362.479, 39.6463, 0.276", "295.161, 363.491, 39.6082, 0.3622", "294.478, 364.351, 39.48, 0.4322" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "293.044, 361.277, 33.0453, 0.8136", "292.795, 360.231, 33.073, 0.741", "292.64, 359.1, 33.2525, 0.7856", "292.623, 358.0, 34.0102, 0.8124", "292.553, 356.863, 34.1984, 0.8624", "292.238, 355.767, 34.4064, 0.8644", "292.075, 354.679, 35.1644, 0.8396", "291.609, 353.638, 35.2895, 0.7136", "291.115, 352.606, 35.3405, 0.6108", "290.475, 351.663, 35.5897, 0.5338" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "309.109, 368.485, 30.8, 0.788", "308.826, 367.785, 31.4258, 0.688", "308.613, 367.007, 33.3189, 0.5318", "308.277, 365.979, 33.3928, 0.3958", "307.559, 365.135, 33.9052, 0.311", "307.501, 364.111, 35.028, 0.3294", "307.706, 362.996, 35.3438, 0.3304", "307.521, 361.901, 36.0018, 0.3814" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "309.109, 368.485, 30.8, 0.788", "309.957, 368.492, 30.8, 0.729", "311.098, 368.55, 30.8006, 0.7134", "312.184, 368.902, 30.8025, 0.6394", "313.078, 369.61, 30.8106, 0.6598", "314.074, 370.172, 30.856, 0.7594", "315.18, 369.954, 31.1878, 0.8132", "316.245, 369.628, 31.8214, 0.788" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "299.601, 385.871, 24.8889, 0.6356", "299.696, 386.184, 25.3509, 0.6206", "299.983, 387.132, 26.752, 0.575", "300.271, 388.079, 28.1529, 0.5294", "300.543, 388.605, 27.4324, 0.2288", "300.962, 389.524, 27.6203, 0.6814", "301.609, 390.139, 28.4374, 0.297", "301.328, 390.861, 27.0418, 0.446", "301.059, 391.757, 27.5248, 0.536", "300.848, 392.865, 27.8715, 0.375", "300.594, 393.925, 28.289, 0.2468", "300.302, 394.682, 29.4, 0.3944", "300.306, 395.708, 28.5732, 0.4866", "300.186, 396.838, 28.5625, 0.5578", "299.981, 397.934, 28.1716, 0.4928", "299.704, 398.597, 26.88, 0.2288", "299.999, 399.513, 27.5587, 0.3616", "300.242, 400.434, 28.6289, 0.2288", "299.642, 401.184, 29.6425, 0.527", "299.512, 402.026, 31.2648, 0.6606", "299.855, 402.99, 30.5864, 0.483", "299.973, 403.914, 30.87, 0.614", "299.957, 404.652, 32.48, 0.2536", "299.936, 405.777, 32.3028, 0.2288", "299.369, 406.263, 30.5458, 0.2288", "299.002, 406.921, 31.5487, 0.48", "298.099, 406.976, 31.8665, 0.472", "297.299, 407.164, 32.6116, 0.4246", "296.868, 407.687, 32.9731, 0.6864", "296.299, 407.911, 32.0695, 0.6356", "295.485, 408.502, 31.3928, 0.6334", "295.097, 408.866, 33.0562, 0.4576", "295.304, 408.701, 35.5289, 0.6102" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "299.601, 385.871, 24.8889, 0.6356", "299.102, 386.095, 26.0089, 0.4068", "298.496, 386.443, 28.1512, 0.4322", "297.836, 387.154, 28.3161, 0.579", "297.156, 387.755, 26.7473, 0.3936", "296.271, 388.054, 26.32, 0.6294", "295.443, 388.119, 27.5495, 0.617", "294.662, 388.236, 28.6437, 0.3874", "293.64, 388.65, 28.9167, 0.3648", "292.549, 388.932, 28.5172, 0.4786", "291.45, 389.071, 27.832, 0.385", "290.309, 389.079, 27.9558, 0.3814", "289.287, 389.101, 26.7179, 0.4312", "288.167, 389.238, 26.2828, 0.558", "287.201, 389.847, 26.124, 0.6356" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "299.953, 365.28, 21.3934, 0.6864", "299.926, 364.172, 19.7714, 0.6512", "299.802, 363.186, 18.3994, 0.523", "300.187, 362.321, 17.1349, 0.446", "300.708, 361.581, 15.4552, 0.4322", "300.559, 360.574, 14.7638, 0.455", "299.617, 360.004, 14.3074, 0.4576", "298.705, 360.466, 13.1547, 0.4326", "297.692, 360.985, 12.9111, 0.407", "296.561, 361.146, 13.0838, 0.3814", "295.52, 360.993, 12.2881, 0.4284", "294.746, 360.216, 12.3057, 0.5428", "295.293, 359.473, 12.292, 0.5084", "296.405, 359.448, 12.1187, 0.5084", "296.85, 358.4, 12.1646, 0.5338" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "299.953, 365.28, 21.3934, 0.6864", "299.282, 364.184, 21.835, 0.6852", "298.411, 363.444, 21.8336, 0.6614", "297.537, 362.705, 21.8064, 0.5858", "297.047, 361.676, 21.639, 0.5592" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "244.219, 342.959, 20.3468, 0.3304", "244.165, 343.194, 20.1984, 0.3438", "243.412, 343.879, 19.88, 0.243", "242.268, 343.886, 19.88, 0.2288", "241.124, 343.886, 19.88, 0.2288", "240.038, 343.886, 20.5313, 0.2382", "239.099, 343.4, 20.9782, 0.448", "238.488, 343.086, 20.9353, 0.3348", "237.43, 342.974, 20.72, 0.2326", "236.36, 343.099, 21.28, 0.3082", "235.602, 342.569, 21.84, 0.5724", "234.633, 342.342, 21.4194, 0.2924", "233.686, 342.462, 21.6006, 0.3782", "232.891, 342.834, 22.6789, 0.3332", "232.271, 343.019, 21.1238, 0.237", "231.22, 343.04, 21.8156, 0.2542", "230.253, 342.557, 22.4, 0.4024", "229.207, 342.388, 21.7767, 0.4342", "228.708, 341.525, 20.8393, 0.334", "227.874, 340.795, 20.7152, 0.2288", "226.793, 340.475, 20.44, 0.2288", "225.747, 340.015, 20.44, 0.2744", "224.854, 339.328, 20.0712, 0.3304", "224.191, 338.555, 20.6422, 0.2612", "223.3, 337.917, 20.44, 0.2288", "222.566, 337.137, 20.16, 0.2634", "221.703, 336.416, 20.3157, 0.3304", "220.679, 336.131, 20.7642, 0.2994", "219.656, 335.981, 21.8025, 0.2514", "218.904, 335.844, 20.5265, 0.385", "217.838, 335.65, 20.9936, 0.561", "217.088, 335.542, 19.462, 0.6254", "216.671, 334.912, 20.1984, 0.5078", "216.465, 334.055, 19.6381, 0.4464", "216.078, 334.349, 18.5623, 0.5114", "215.158, 334.047, 18.0796, 0.641", "214.537, 333.182, 17.6159, 0.3872", "213.77, 332.754, 16.3534, 0.4732", "212.944, 332.17, 17.0458, 0.573", "211.895, 332.242, 17.36, 0.6864", "211.86, 333.219, 17.0727, 0.6864", "211.372, 333.932, 16.1269, 0.5638", "211.051, 333.333, 15.5893, 0.6864", "210.078, 332.975, 15.1718, 0.6018", "209.008, 332.843, 14.6695, 0.4768", "207.971, 332.593, 15.12, 0.823", "206.908, 332.226, 14.7008, 0.604", "205.918, 331.766, 14.6818, 0.5454", "204.945, 332.157, 14.6793, 0.5216", "204.361, 332.694, 13.1911, 0.6074", "203.404, 332.717, 12.3166, 0.6624", "202.573, 332.904, 12.0851, 0.3066", "201.536, 332.841, 12.7812, 0.5232", "200.675, 332.561, 13.1897, 0.3082", "199.782, 332.801, 14.1159, 0.284", "198.748, 333.042, 13.8667, 0.6114", "198.548, 333.484, 12.868, 0.7372", "198.172, 333.734, 11.3226, 0.6052", "197.743, 334.51, 12.3385, 0.4372", "196.703, 334.869, 12.9396, 0.4178", "195.764, 334.819, 12.9847, 0.3984", "195.503, 334.843, 11.3277, 0.3588", "194.865, 334.262, 10.9175, 0.2522", "194.171, 333.526, 11.3341, 0.5206", "194.137, 332.904, 12.04, 0.2288" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "244.219, 342.959, 20.3468, 0.3304", "244.13, 342.496, 20.519, 0.2288", "244.587, 341.713, 19.32, 0.2796" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "272.132, 359.747, 17.1959, 0.356", "270.992, 360.22, 17.9925, 0.2774", "269.872, 360.249, 17.6128, 0.3036", "268.803, 360.265, 16.6219, 0.2806", "267.805, 360.584, 15.6657, 0.2504", "267.083, 361.241, 14.6471, 0.2288", "266.118, 361.581, 15.5982, 0.2288", "265.223, 361.387, 16.9036, 0.2288", "264.701, 360.655, 16.0037, 0.2288", "264.466, 359.81, 14.2313, 0.2288", "264.088, 358.895, 14.0526, 0.2434", "263.682, 358.272, 15.9303, 0.2702", "263.323, 358.69, 17.901, 0.2968", "262.712, 359.389, 19.4491, 0.2866", "262.02, 360.234, 19.9346, 0.2594", "261.363, 361.17, 20.0416, 0.2326", "261.061, 360.703, 21.84, 0.2542" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "272.132, 359.747, 17.1959, 0.356", "271.98, 359.164, 16.1445, 0.3016", "272.371, 358.199, 15.171, 0.3644", "272.154, 357.215, 14.5897, 0.4098", "271.421, 356.387, 14.5961, 0.4576", "270.982, 355.537, 13.6086, 0.4802", "271.022, 354.457, 12.964, 0.4826", "270.488, 353.631, 13.2376, 0.4576", "269.487, 353.322, 14.1644, 0.4284", "268.451, 353.018, 14.4956, 0.4222", "267.516, 352.476, 13.7063, 0.4162", "267.075, 351.541, 13.4476, 0.4404", "267.012, 350.415, 13.8457, 0.475", "267.028, 349.277, 13.9997, 0.5004", "267.139, 348.14, 13.9989, 0.491", "267.472, 347.053, 13.9941, 0.4656", "267.548, 345.935, 13.9616, 0.476", "266.996, 344.988, 13.7052, 0.5022", "266.06, 344.36, 13.6181, 0.5492", "265.141, 343.683, 13.704, 0.5592", "264.386, 342.957, 12.7128, 0.5166", "263.678, 342.112, 12.0123, 0.3982", "262.705, 341.658, 12.7042, 0.287", "261.823, 342.253, 13.4966, 0.2548", "261.518, 343.314, 12.88, 0.305" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "285.376, 400.37, 38.8872, 0.6356", "284.751, 401.076, 36.9678, 0.5876", "283.854, 401.417, 37.3548, 0.3814", "282.925, 402.005, 37.24, 0.5592", "282.108, 402.536, 36.5078, 0.4068", "281.288, 403.117, 36.12, 0.3314", "280.328, 403.146, 37.1675, 0.2796", "279.671, 403.112, 35.2377, 0.392", "278.736, 402.917, 34.7536, 0.3912", "278.007, 403.26, 35.84, 0.6464", "276.964, 403.489, 36.5394, 0.356", "275.887, 403.753, 36.68, 0.2288", "275.354, 404.404, 36.1544, 0.2496", "274.907, 404.92, 37.7216, 0.305", "274.467, 405.4, 35.84, 0.4708", "273.736, 406.107, 36.1598, 0.5382", "272.932, 406.123, 35.84, 0.4068", "272.089, 406.644, 35.0672, 0.5274", "271.172, 407.218, 35.6367, 0.3452", "270.416, 407.835, 35.6793, 0.472", "269.664, 407.979, 33.9052, 0.6102", "268.903, 408.259, 32.48, 0.358", "268.047, 408.858, 32.7146, 0.3258", "266.938, 408.751, 33.04, 0.6124", "265.936, 408.614, 32.0146, 0.5136", "264.953, 408.697, 31.5182, 0.5334", "263.906, 408.732, 31.4266, 0.4576", "262.809, 408.866, 31.7685, 0.4014", "261.683, 408.814, 31.92, 0.3304", "260.56, 408.932, 31.619, 0.3386", "259.435, 409.075, 31.2483, 0.28", "258.6, 409.679, 31.0845, 0.2342", "257.597, 410.157, 31.0845, 0.2288", "256.525, 410.558, 31.0845, 0.2288", "255.455, 410.961, 31.0845, 0.2288", "254.314, 411.026, 31.0845, 0.2288", "253.187, 411.207, 31.0845, 0.2288", "252.095, 411.522, 31.0845, 0.2346", "251.079, 412.051, 31.0845, 0.2584", "250.075, 412.589, 31.019, 0.2822", "249.163, 413.225, 30.3652, 0.3068", "248.25, 413.863, 29.7111, 0.3314", "247.339, 414.499, 29.0573, 0.356" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "285.376, 400.37, 38.8872, 0.6356", "285.135, 401.084, 39.4862, 0.618", "284.89, 402.147, 40.3077, 0.5742", "284.738, 403.262, 40.7478, 0.5774", "284.293, 404.291, 40.6952, 0.6032", "283.743, 405.265, 40.1495, 0.647", "283.259, 406.287, 40.1386, 0.6238", "282.95, 407.321, 40.9646, 0.6102", "282.364, 408.019, 42.4886, 0.5518", "281.467, 408.611, 43.2656, 0.5138", "280.451, 409.033, 43.9835, 0.4482", "279.385, 409.415, 44.3092, 0.4322", "278.373, 409.134, 45.0106, 0.477", "277.627, 408.332, 45.7288, 0.5758", "276.962, 407.632, 46.8222, 0.661" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "308.661, 387.631, 36.2673, 0.6356", "308.911, 388.267, 36.2933, 0.7516", "308.252, 388.841, 37.5782, 0.517", "307.352, 389.387, 37.8, 0.2288", "306.645, 390.102, 37.8, 0.4372", "306.181, 391.058, 37.5416, 0.4478", "305.56, 391.822, 37.6449, 0.615", "304.636, 392.377, 37.8, 0.585", "303.864, 393.177, 37.5522, 0.5418", "303.006, 393.692, 38.5846, 0.6356", "302.477, 394.009, 40.32, 0.4858", "301.598, 394.535, 40.5866, 0.3486", "300.873, 394.965, 41.5528, 0.4482", "301.319, 394.866, 43.8623, 0.551", "300.911, 393.943, 44.52, 0.593", "300.206, 393.422, 43.2432, 0.6864", "300.186, 392.717, 41.7766, 0.6864", "299.725, 391.764, 42.0, 0.483", "299.726, 390.694, 41.72, 0.776", "299.085, 390.218, 43.1973, 0.4322", "298.925, 389.853, 45.395, 0.3814", "298.986, 388.77, 45.64, 0.5202", "299.087, 387.972, 44.5883, 0.5238", "299.156, 387.159, 45.3986, 0.6092", "298.492, 386.453, 46.422, 0.4068", "297.74, 385.869, 47.04, 0.5746", "297.055, 385.326, 46.494, 0.6292", "296.661, 384.843, 47.248, 0.3852", "296.537, 384.263, 48.6836, 0.2894", "296.297, 383.804, 46.7191, 0.273", "295.622, 383.126, 46.5027, 0.4576", "294.951, 382.515, 46.6771, 0.8486", "294.209, 381.701, 47.2125, 0.8234", "293.817, 380.914, 48.72, 0.483" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "308.661, 387.631, 36.2673, 0.6356", "309.396, 388.315, 36.3852, 0.5452", "310.045, 389.254, 36.4014, 0.5338", "310.764, 390.142, 36.4059, 0.5564", "311.686, 390.811, 36.4297, 0.5136", "312.569, 391.536, 36.5445, 0.5084", "313.458, 392.142, 37.4556, 0.5084", "314.189, 392.946, 38.3135, 0.484", "315.132, 393.451, 37.4072, 0.3832", "315.973, 394.108, 36.4, 0.3304" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_38",
    "id" : "apic_38",
    "points3d" : [ "294.478, 364.351, 39.48, 0.4322", "295.082, 364.602, 38.6672, 0.6388", "295.995, 364.75, 37.52, 0.4828", "296.198, 363.783, 36.4311, 0.5772", "296.572, 363.4, 38.5311, 0.3788", "297.383, 363.106, 39.76, 0.2372", "298.397, 362.762, 39.5097, 0.4214", "299.069, 363.328, 38.36, 0.2288", "300.165, 363.449, 38.36, 0.314", "301.275, 363.298, 38.5571, 0.4216", "302.315, 363.116, 39.48, 0.5382", "303.198, 362.608, 39.0286, 0.5804", "303.996, 362.268, 38.0766, 0.8224", "304.575, 361.792, 37.8834, 0.4492", "304.819, 362.076, 35.9254, 0.623", "305.715, 361.962, 35.9327, 0.254", "306.486, 361.7, 35.9904, 0.4238", "307.172, 361.489, 37.3514, 0.2288", "307.826, 360.858, 37.52, 0.591", "308.077, 359.84, 37.0423, 0.709", "308.743, 359.538, 38.6562, 0.3182", "309.345, 359.046, 40.241, 0.5654", "309.923, 358.751, 41.9989, 0.2552", "310.851, 358.693, 41.1401, 0.2564", "311.716, 359.091, 40.4001, 0.7576", "312.807, 359.102, 41.0239, 0.6864", "313.827, 359.054, 41.44, 0.5592", "314.816, 358.987, 41.8132, 0.5592", "315.894, 358.917, 42.6574, 0.4576", "317.01, 358.985, 42.84, 0.5608", "318.111, 358.852, 42.707, 0.777", "319.103, 359.179, 41.7267, 0.6852", "319.827, 359.47, 43.0469, 0.4622", "320.768, 359.771, 43.5072, 0.4322", "321.551, 359.464, 44.3794, 0.3458", "322.514, 359.172, 44.3442, 0.4576", "323.187, 358.419, 43.4, 0.3986", "323.902, 357.729, 42.9044, 0.7506", "324.842, 357.867, 43.6657, 0.6516", "325.532, 357.993, 42.383, 0.6726", "326.358, 358.347, 43.6738, 0.5438", "326.865, 358.675, 42.84, 0.4708", "327.936, 358.811, 42.56, 0.5082", "328.747, 359.294, 41.8317, 0.4002", "329.836, 359.33, 42.0885, 0.661", "330.627, 359.358, 43.6836, 0.474", "331.258, 360.022, 44.8, 0.5958", "332.233, 360.474, 44.8, 0.6324", "333.289, 360.808, 44.564, 0.4576", "334.112, 361.322, 44.5886, 0.5782", "334.724, 362.03, 44.24, 0.5166", "335.078, 362.534, 45.6095, 0.6836", "335.936, 362.932, 45.92, 0.5848", "336.939, 363.416, 45.9584, 0.6884", "337.755, 364.139, 46.1555, 0.9818", "338.611, 364.689, 46.0813, 0.4764", "339.156, 365.153, 46.8138, 0.6102", "340.098, 365.463, 47.2567, 0.5858", "340.882, 365.608, 45.7307, 0.661", "341.5, 366.082, 47.2892, 0.7122", "342.455, 366.657, 47.1313, 0.6334", "343.455, 367.126, 47.3796, 0.5358", "344.447, 367.509, 47.971, 0.6076", "345.383, 367.821, 47.9027, 0.5592", "346.45, 368.113, 47.6, 0.4258", "347.557, 368.247, 47.2335, 0.3078", "348.452, 368.638, 47.5264, 0.5186", "349.334, 369.169, 47.9419, 0.4574", "350.411, 369.169, 48.16, 0.4078", "351.062, 369.323, 46.76, 0.605", "352.098, 369.727, 47.0159, 0.3814", "353.147, 370.148, 46.9907, 0.3674", "354.061, 370.54, 45.92, 0.256", "354.86, 370.542, 47.1531, 0.2962", "355.326, 371.096, 47.3718, 0.288", "355.837, 371.791, 46.3669, 0.3358", "356.341, 372.568, 47.7907, 0.3288", "356.925, 373.47, 48.5654, 0.3986", "357.581, 374.088, 48.6797, 0.4686", "357.857, 374.979, 49.4337, 0.5832", "358.305, 375.789, 48.1631, 0.4778", "358.828, 376.33, 49.5362, 0.4516", "359.365, 377.053, 50.267, 0.3834", "360.053, 377.82, 50.7931, 0.3182", "360.664, 378.546, 51.2117, 0.5338", "361.356, 379.4, 50.96, 0.5832", "361.858, 380.322, 51.1081, 0.4606", "362.195, 381.058, 50.2555, 0.2542", "362.883, 381.587, 49.28, 0.3664", "363.67, 382.103, 50.2001, 0.2288", "364.348, 382.261, 52.3382, 0.3104", "364.985, 383.116, 52.7881, 0.4576", "365.984, 383.539, 53.0956, 0.5244", "366.906, 384.14, 53.503, 0.4268", "367.779, 384.626, 53.2258, 0.2632", "368.479, 385.276, 54.4043, 0.4688", "369.1, 386.094, 55.295, 0.2768", "370.011, 386.614, 54.6507, 0.419", "371.068, 386.762, 54.7016, 0.3304", "372.028, 387.126, 55.3468, 0.4576", "372.833, 387.061, 56.0515, 0.3118", "373.694, 387.166, 56.84, 0.251", "374.47, 387.993, 56.84, 0.2288", "375.542, 388.236, 57.12, 0.2574", "376.212, 389.119, 56.6913, 0.249", "376.86, 390.014, 57.1463, 0.2288", "377.557, 390.854, 57.4, 0.3364", "378.391, 391.586, 57.4781, 0.2908", "379.472, 391.75, 57.96, 0.2288", "380.585, 391.947, 57.96, 0.2288", "381.35, 392.676, 58.655, 0.4446", "382.164, 393.289, 59.1808, 0.3112", "382.435, 393.994, 60.5164, 0.2288", "383.561, 393.994, 60.76, 0.2288", "384.498, 394.251, 61.0137, 0.2288", "384.498, 395.394, 61.04, 0.2288", "384.555, 396.509, 61.3186, 0.2288", "385.561, 396.739, 61.768, 0.2288", "386.28, 397.381, 62.344, 0.3442", "387.339, 397.725, 62.16, 0.2796", "387.841, 398.194, 62.72, 0.2288", "388.231, 399.134, 63.4063, 0.2626", "389.061, 399.256, 64.6979, 0.2288", "389.95, 399.394, 65.9674, 0.3304", "390.423, 400.171, 66.0232, 0.2288", "391.015, 400.252, 67.2, 0.2706", "391.899, 400.559, 68.278, 0.2288", "392.909, 400.742, 69.5159, 0.2288", "393.782, 401.215, 70.2778, 0.2288", "394.439, 402.151, 70.2778, 0.2288", "395.094, 403.088, 70.2778, 0.2288", "395.83, 403.959, 70.2778, 0.2288", "396.638, 404.768, 70.2778, 0.2288", "397.498, 405.483, 70.835, 0.2288", "398.364, 406.182, 71.4823, 0.2288", "399.23, 406.881, 72.1297, 0.2288", "400.055, 407.66, 72.305, 0.2288", "400.863, 408.469, 72.305, 0.2288", "401.673, 409.244, 71.9141, 0.2288", "402.484, 409.988, 71.1505, 0.2288", "403.294, 410.733, 70.3867, 0.2288", "404.105, 411.476, 69.6231, 0.2288", "404.862, 412.18, 69.099, 0.2288", "405.23, 412.34, 71.3798, 0.25", "405.638, 412.763, 73.3477, 0.5748", "406.444, 413.214, 74.3761, 0.6006", "407.532, 413.423, 74.76, 0.3092", "408.645, 413.444, 75.04, 0.3056", "409.729, 413.548, 75.5255, 0.4626", "410.776, 413.39, 76.2818, 0.5196", "411.408, 413.874, 77.84, 0.4576", "412.017, 414.591, 78.8379, 0.519", "412.92, 414.952, 77.7151, 0.704", "413.341, 415.625, 76.2947, 0.6402", "413.832, 416.187, 77.2131, 0.6654", "414.357, 416.073, 77.0, 0.305" ],
    "parent" : "apic_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_35",
    "id" : "apic_35",
    "points3d" : [ "294.478, 364.351, 39.48, 0.4322", "293.939, 364.881, 39.8709, 0.313", "293.423, 364.414, 42.0932, 0.5338" ],
    "parent" : "apic_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "290.475, 351.663, 35.5897, 0.5338", "290.118, 350.845, 35.0, 0.7372", "290.411, 349.944, 34.1653, 0.4932", "289.803, 349.409, 33.7159, 0.2958", "290.233, 348.711, 35.1868, 0.6642", "290.495, 347.712, 35.56, 0.5926", "290.017, 346.848, 34.7208, 0.6612", "289.827, 345.935, 35.4668, 0.5226", "289.775, 345.037, 33.8705, 0.287", "289.661, 343.988, 33.1139, 0.5084", "289.78, 343.075, 33.6806, 0.416", "289.775, 342.175, 34.5044, 0.4312", "290.138, 341.128, 34.44, 0.2358", "290.118, 340.66, 32.5077, 0.6944", "290.118, 339.768, 33.32, 0.483" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "290.475, 351.663, 35.5897, 0.5338", "289.876, 350.949, 36.5243, 0.5388", "289.302, 350.053, 37.5057, 0.4714", "288.637, 349.233, 37.863, 0.4576", "287.75, 348.557, 37.2428, 0.508", "286.962, 347.77, 36.9382, 0.5854", "286.308, 346.847, 37.2775, 0.624", "285.661, 345.915, 37.5234, 0.6216", "284.998, 344.983, 37.5365, 0.6242", "284.269, 344.106, 37.5906, 0.6778", "283.495, 343.274, 37.8624, 0.7402", "282.889, 342.434, 38.8769, 0.777", "282.361, 341.505, 39.6357, 0.7584", "281.906, 340.462, 39.6536, 0.7224", "281.537, 339.401, 39.2008, 0.7118", "281.068, 338.378, 38.8234, 0.7272", "280.47, 337.417, 39.0328, 0.7528", "279.825, 336.494, 39.5248, 0.7468", "279.194, 335.549, 39.7446, 0.7214", "278.786, 334.494, 39.7603, 0.6958", "278.293, 333.477, 39.7625, 0.7024", "277.72, 332.488, 39.7743, 0.728", "277.144, 331.499, 39.8362, 0.7696", "276.654, 330.484, 40.2108, 0.788", "276.219, 329.447, 40.7154, 0.805", "275.792, 328.391, 40.88, 0.7628", "275.413, 327.313, 40.8806, 0.6692", "275.132, 326.205, 40.8836, 0.5158", "275.067, 325.07, 40.9055, 0.4058", "274.666, 324.043, 41.0228, 0.399", "273.97, 323.242, 41.8933, 0.4804", "273.438, 322.314, 42.7798, 0.5908", "273.061, 321.299, 42.1565, 0.675", "272.615, 320.752, 41.9695, 0.4576", "272.255, 319.695, 41.6987, 0.6922", "271.685, 318.875, 41.6464, 0.771", "271.0, 318.175, 42.4326, 0.9198", "270.439, 317.255, 43.2054, 0.725", "270.096, 316.234, 43.7791, 0.6366", "269.366, 315.509, 44.4444, 0.5736", "269.262, 314.646, 43.127, 0.6592", "268.466, 314.069, 42.4511, 0.618", "267.863, 313.195, 42.014, 0.8136", "267.019, 312.51, 41.5904, 0.6864", "266.411, 311.734, 42.0263, 0.7976", "265.925, 310.982, 41.9614, 0.6864", "265.751, 310.286, 43.4372, 0.6978", "265.344, 309.287, 43.12, 0.6102" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "307.521, 361.901, 36.0018, 0.3814", "307.539, 361.686, 36.8749, 0.556", "307.659, 360.71, 37.3873, 0.5518", "307.622, 359.708, 36.5616, 0.4554", "307.507, 358.794, 36.2776, 0.4068", "307.951, 358.034, 35.0669, 0.2684", "308.422, 357.132, 35.2184, 0.2288", "308.264, 356.588, 37.3752, 0.4576", "308.609, 355.701, 37.8725, 0.6552", "308.427, 354.754, 38.5445, 0.4128", "308.198, 354.301, 40.2822, 0.3362", "308.414, 353.203, 40.32, 0.2288", "308.183, 352.352, 39.5142, 0.6864", "307.998, 351.466, 39.6662, 0.44", "307.411, 351.128, 41.1289, 0.2926", "307.617, 350.531, 39.4271, 0.3462", "306.904, 350.164, 38.3037, 0.2846", "306.478, 349.231, 38.1595, 0.2976", "306.911, 348.994, 40.159, 0.4962", "306.47, 348.477, 40.3231, 0.5836", "305.864, 348.135, 40.7154, 0.2822", "306.039, 347.587, 42.56, 0.241", "305.791, 346.862, 41.2264, 0.5868", "305.866, 345.911, 40.3262, 0.2558", "305.553, 345.104, 41.2087, 0.252", "305.413, 344.114, 42.5216, 0.2388", "305.226, 343.116, 42.9176, 0.4576", "305.12, 342.193, 42.0095, 0.3814", "305.296, 341.264, 43.1805, 0.5742", "305.542, 340.221, 42.9741, 0.6356", "305.252, 339.265, 43.2849, 0.3382", "305.058, 338.161, 43.12, 0.447", "305.041, 337.328, 42.7781, 0.4574", "304.524, 336.424, 42.1725, 0.2288", "303.977, 335.821, 43.12, 0.6", "303.629, 335.262, 43.68, 0.3632", "303.459, 334.523, 43.0181, 0.4784", "303.314, 333.806, 43.0004, 0.459", "303.732, 333.133, 42.5919, 0.5054", "303.755, 332.25, 42.3956, 0.5058", "303.913, 331.292, 42.2422, 0.5798", "304.152, 330.616, 42.9332, 0.5592" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "307.521, 361.901, 36.0018, 0.3814", "306.782, 362.076, 36.2443, 0.6048", "305.672, 362.324, 36.54, 0.7996", "304.592, 362.288, 37.0306, 0.7894", "303.56, 361.874, 37.613, 0.688", "302.544, 361.536, 38.4048, 0.5718", "301.689, 361.025, 39.4593, 0.5202", "300.996, 360.175, 40.2433, 0.5084", "300.095, 359.692, 41.1124, 0.5084", "299.205, 359.128, 41.8561, 0.4926", "298.577, 358.215, 42.4536, 0.4994", "297.8, 357.426, 42.905, 0.4746", "296.97, 356.661, 42.7372, 0.4924", "296.175, 355.866, 42.2282, 0.526", "295.507, 354.957, 42.2663, 0.6424", "295.019, 353.959, 42.875, 0.7048", "294.383, 353.034, 43.2312, 0.6932", "293.485, 352.576, 44.2467, 0.5854", "292.457, 352.517, 45.4297, 0.5134", "291.713, 351.766, 46.3053, 0.58", "290.903, 351.199, 47.696, 0.661" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "316.245, 369.628, 31.8214, 0.788", "317.119, 369.221, 30.52, 0.5512", "318.065, 368.586, 30.5348, 0.3038", "318.817, 368.383, 32.2255, 0.6242", "319.517, 367.64, 32.965, 0.4118", "320.349, 366.991, 32.6228, 0.5472", "321.013, 366.419, 31.8998, 0.579", "321.521, 365.92, 31.0766, 0.6158", "322.189, 365.279, 31.9074, 0.3992", "322.895, 364.812, 31.6546, 0.653", "323.724, 364.601, 32.9871, 0.7134", "324.279, 364.578, 32.3036, 0.531", "325.283, 364.878, 32.851, 0.4898", "326.145, 365.26, 32.6794, 0.5332", "327.213, 365.255, 32.7712, 0.4576", "327.908, 365.568, 34.3888, 0.4912", "328.854, 365.884, 33.6389, 0.466", "329.908, 366.103, 33.9643, 0.3278", "330.773, 366.59, 33.5709, 0.305", "331.642, 366.877, 34.4884, 0.2288", "332.719, 367.0, 34.9499, 0.2404", "333.685, 367.338, 35.8439, 0.3886", "334.535, 367.11, 35.138, 0.35", "335.481, 366.835, 34.1099, 0.4184", "336.362, 367.161, 33.5208, 0.5036", "337.128, 367.682, 32.3882, 0.5468", "337.871, 367.763, 32.2591, 0.2854", "338.678, 367.662, 33.4734, 0.4694", "339.414, 367.325, 32.1992, 0.6616", "339.631, 366.423, 32.4215, 0.4022", "340.293, 366.538, 32.6239, 0.3012", "341.342, 366.542, 31.8206, 0.4116", "342.108, 366.716, 31.92, 0.6614", "342.933, 367.224, 32.7771, 0.6702", "343.828, 367.748, 32.6852, 0.3458", "344.736, 367.645, 34.0544, 0.3304", "345.735, 367.338, 34.7774, 0.8418", "346.445, 366.901, 33.9522, 0.6356", "347.101, 366.564, 35.4668, 0.6444", "347.884, 365.87, 34.7645, 0.661", "348.907, 365.622, 34.4946, 0.5988", "349.62, 365.319, 34.3185, 0.4588", "350.418, 365.082, 33.0529, 0.4516", "350.864, 364.373, 32.97, 0.356", "351.322, 363.489, 32.6749, 0.4858", "352.23, 363.469, 31.8889, 0.5848", "353.139, 363.402, 31.1097, 0.8114", "354.01, 363.191, 31.5011, 0.3876", "354.939, 363.106, 30.3108, 0.349", "355.836, 363.106, 30.6432, 0.356", "356.502, 363.293, 31.3572, 0.5636", "357.506, 363.552, 31.0402, 0.3608", "358.283, 363.547, 31.64, 0.4068", "359.004, 362.817, 31.5025, 0.5158", "359.648, 361.971, 31.36, 0.2822", "360.437, 361.3, 31.8268, 0.4322" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "316.245, 369.628, 31.8214, 0.788", "317.171, 369.39, 31.6772, 0.7452", "318.248, 369.134, 31.0097, 0.7372", "319.379, 369.13, 30.8162, 0.652", "320.329, 369.715, 30.8193, 0.5278", "321.069, 370.579, 30.9002, 0.4002", "321.924, 371.308, 31.362, 0.337", "322.943, 371.718, 30.7787, 0.3764", "323.903, 371.903, 29.349, 0.5084" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "295.304, 408.701, 35.5289, 0.6102", "294.146, 409.494, 35.1772, 0.5364", "293.207, 410.135, 34.8916, 0.4764", "292.268, 410.778, 34.6063, 0.4164", "291.657, 410.724, 34.7637, 0.4068", "290.816, 410.582, 35.9296, 0.5932", "290.63, 410.238, 37.602, 0.6194", "289.782, 410.829, 38.08, 0.6604", "288.892, 411.497, 37.9756, 0.3326", "288.087, 411.189, 37.0972, 0.278", "287.033, 411.437, 37.5164, 0.2806", "286.3, 411.165, 38.871, 0.6102", "285.418, 411.154, 38.4384, 0.2288", "284.785, 411.73, 38.2794, 0.3878", "284.029, 412.192, 38.9096, 0.4152", "283.391, 412.935, 38.0534, 0.5848", "282.832, 413.426, 37.52, 0.5074", "282.519, 414.366, 36.9275, 0.4008", "282.576, 415.362, 37.2686, 0.3096", "281.995, 415.958, 38.9211, 0.2288", "280.897, 416.073, 39.2, 0.2288", "279.753, 416.073, 39.2, 0.2644", "278.821, 416.073, 40.3066, 0.5228", "277.891, 416.341, 39.485, 0.598", "277.11, 415.73, 39.6396, 0.7188", "276.02, 415.511, 40.2094, 0.6426", "274.967, 415.835, 40.171, 0.5668", "274.227, 415.836, 38.8486, 0.6424", "273.5, 416.297, 38.08, 0.3804", "272.412, 416.622, 38.08, 0.3152", "271.346, 416.874, 38.187, 0.2288", "270.487, 416.874, 39.9459, 0.231", "269.834, 417.331, 41.16, 0.2288", "268.711, 417.331, 41.5554, 0.303", "267.736, 417.408, 42.8954, 0.3546", "267.028, 416.864, 43.1659, 0.4576", "266.271, 416.872, 41.7393, 0.3876", "265.836, 417.412, 40.4373, 0.8612", "264.801, 417.763, 40.6266, 0.5262", "263.986, 418.084, 40.0389, 0.4576", "263.069, 418.281, 38.9225, 0.2542", "262.694, 418.942, 40.5563, 0.48", "262.542, 419.879, 41.3003, 0.5722", "262.097, 420.706, 41.44, 0.5116", "262.288, 421.539, 42.0403, 0.5382", "262.043, 422.245, 40.3976, 0.2934", "261.979, 422.92, 38.64, 0.2288", "261.746, 423.83, 37.7292, 0.266", "261.105, 424.616, 36.7794, 0.3544", "260.905, 425.661, 36.7069, 0.6264", "260.593, 426.596, 36.1645, 0.4212", "260.146, 427.613, 36.12, 0.289", "259.852, 428.573, 35.7227, 0.3444", "259.368, 429.214, 35.7098, 0.5694", "259.233, 430.313, 36.12, 0.6822", "259.846, 431.065, 36.6016, 0.475", "260.071, 431.914, 38.2928, 0.3036", "260.139, 431.694, 40.329, 0.2288", "260.26, 432.074, 42.3195, 0.3814", "260.726, 433.029, 42.2408, 0.3814", "261.38, 433.901, 42.28, 0.4482", "261.069, 434.602, 42.8389, 0.6112", "260.889, 435.522, 43.7461, 0.5542", "260.846, 436.458, 44.1017, 0.2356", "261.633, 437.047, 44.1913, 0.5084", "261.641, 438.01, 42.7336, 0.4866", "262.205, 438.724, 41.44, 0.356" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "295.304, 408.701, 35.5289, 0.6102", "295.146, 407.401, 34.72, 0.5862", "295.036, 406.439, 34.2241, 0.5078", "295.6, 406.257, 36.6134, 0.5084", "296.125, 406.112, 38.8612, 0.4976", "295.186, 406.412, 38.332, 0.5862", "294.564, 407.096, 37.6662, 0.6684", "293.686, 407.72, 37.828, 0.8136", "293.665, 407.902, 40.3287, 0.5306", "293.049, 408.441, 41.097, 0.4772", "292.787, 409.43, 41.44, 0.3814", "293.232, 410.187, 41.6993, 0.61", "293.465, 410.845, 42.0742, 0.7178", "293.569, 411.846, 42.7207, 0.5608", "293.436, 412.799, 42.9685, 0.4206", "293.902, 413.314, 44.8232, 0.72", "293.889, 414.023, 45.7422, 0.586", "293.85, 415.06, 45.6753, 0.8522", "293.394, 416.06, 46.1387, 0.9352", "293.024, 417.13, 46.2, 0.721", "292.978, 418.123, 45.9802, 1.0202", "293.207, 418.987, 46.1664, 0.5404", "293.029, 419.962, 46.2552, 0.4576", "292.372, 420.094, 48.16, 0.8876", "291.606, 419.865, 49.0, 0.7408", "291.327, 418.968, 49.628, 0.8898", "290.69, 418.976, 51.2089, 0.356", "290.812, 419.855, 50.4851, 0.5572", "290.748, 420.571, 51.7454, 0.7784", "290.241, 421.406, 52.8763, 0.5288", "290.343, 422.446, 52.8864, 0.6912", "290.576, 423.504, 53.48, 0.6456", "290.328, 424.347, 53.9879, 0.5222", "290.528, 425.217, 52.9836, 0.4068", "290.919, 425.391, 54.985, 0.474", "291.092, 425.816, 56.3242, 0.6864", "291.87, 426.321, 56.3749, 0.3148", "292.045, 427.257, 57.4, 0.4274", "292.512, 427.199, 58.3377, 0.3462", "292.737, 427.967, 59.7498, 0.483", "293.643, 428.476, 60.6522, 0.732", "293.692, 429.474, 60.5377, 0.5854", "294.12, 430.292, 61.9864, 0.4262", "294.499, 431.269, 62.72, 0.4068", "294.881, 432.291, 63.212, 0.3468", "294.923, 433.378, 63.84, 0.2288", "295.461, 434.229, 63.5986, 0.251", "295.221, 435.194, 62.9821, 0.5794", "294.864, 436.211, 63.56, 0.675", "294.261, 436.665, 64.0494, 0.4694", "294.358, 437.017, 66.1256, 0.4532", "293.643, 437.722, 66.6543, 0.2796", "293.094, 437.809, 64.5411, 0.4068", "292.521, 438.254, 65.8417, 0.375", "291.949, 438.511, 66.915, 0.423", "291.603, 438.908, 68.3133, 0.3904", "290.835, 439.48, 68.3544, 0.2514", "290.011, 440.131, 68.32, 0.5604", "289.775, 441.174, 68.7425, 0.55", "289.523, 442.193, 69.6147, 0.2288", "289.181, 442.978, 67.9496, 0.2288", "288.591, 443.806, 67.0709, 0.2288", "288.064, 444.706, 67.405, 0.2288", "287.565, 445.646, 67.8146, 0.3462", "287.348, 446.694, 68.1652, 0.4236", "286.451, 446.748, 69.6704, 0.3896", "286.288, 447.636, 69.991, 0.4778", "286.0, 448.33, 68.5292, 0.2542", "285.985, 449.046, 66.6526, 0.2946", "285.542, 448.922, 68.5896, 0.6346", "285.311, 449.314, 70.56, 0.6402", "284.742, 450.278, 70.28, 0.661" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "287.201, 389.847, 26.124, 0.6356", "287.211, 390.183, 25.6178, 0.5376", "287.248, 391.156, 24.1534, 0.2866", "287.339, 392.119, 22.6792, 0.3656", "287.188, 393.008, 20.9756, 0.443", "287.388, 393.82, 19.1523, 0.4896", "287.978, 394.203, 17.3737, 0.376", "287.901, 393.537, 15.2382, 0.3476", "287.441, 392.629, 14.187, 0.3394", "286.706, 391.757, 13.9997, 0.347", "285.814, 391.193, 13.9983, 0.3398", "284.687, 391.055, 13.9882, 0.3454", "283.815, 390.447, 13.9205, 0.3304", "283.415, 389.402, 14.0134, 0.3062", "282.964, 388.541, 14.996, 0.2796", "282.361, 387.805, 16.483, 0.293", "281.669, 386.999, 17.1492, 0.3326", "280.738, 386.619, 16.4133, 0.356", "280.241, 385.904, 15.8567, 0.3394", "279.592, 385.068, 15.4342, 0.3304", "278.674, 384.656, 16.4245, 0.3526", "278.803, 384.121, 18.6477, 0.356", "278.92, 383.09, 19.6624, 0.3088", "279.033, 382.002, 20.477, 0.2572", "279.554, 381.186, 21.9338, 0.2298", "280.248, 380.397, 23.0336, 0.2288", "281.195, 379.922, 24.08, 0.2542" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "287.201, 389.847, 26.124, 0.6356", "285.973, 390.663, 26.2811, 0.504", "285.0, 391.122, 27.2227, 0.6068", "283.881, 391.327, 27.4739, 0.6598", "282.758, 391.142, 27.6842, 0.661", "281.696, 390.913, 28.5636, 0.6356", "280.616, 390.925, 29.4868, 0.5592" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "297.047, 361.676, 21.639, 0.5592", "297.677, 360.982, 21.0529, 0.5038", "298.177, 360.148, 21.8341, 0.4322", "298.847, 359.25, 21.56, 0.5628", "299.562, 358.621, 20.615, 0.7518", "300.082, 357.824, 20.72, 0.4264", "300.292, 357.176, 22.12, 0.4678", "299.957, 356.127, 21.84, 0.5084", "299.439, 355.205, 21.56, 0.3364", "298.774, 355.09, 20.44, 0.268", "298.017, 354.925, 20.144, 0.305", "297.371, 353.986, 20.16, 0.3546", "296.854, 353.049, 20.16, 0.5078", "296.296, 352.655, 21.1915, 0.4322", "295.98, 351.789, 22.2888, 0.3378", "294.995, 351.65, 21.9878, 0.5882", "294.31, 350.881, 21.5746, 0.5078", "294.076, 349.905, 21.553, 0.612", "294.118, 348.878, 21.5995, 0.38", "293.804, 347.817, 21.9859, 0.3818", "293.322, 347.217, 20.7444, 0.4576", "292.88, 346.297, 21.0288, 0.5838", "292.064, 345.741, 21.4584, 0.574", "291.509, 344.929, 21.9114, 0.6102", "291.127, 344.303, 23.312, 0.6362", "290.722, 343.321, 24.0131, 0.5702", "290.035, 342.999, 22.4826, 0.5592", "289.637, 342.072, 22.5103, 0.3814", "288.764, 341.855, 23.6482, 0.2956", "288.513, 341.141, 22.7452, 0.2288", "287.989, 340.733, 21.0946, 0.3564", "287.544, 339.84, 21.1212, 0.7482", "286.763, 339.497, 22.6559, 0.5468", "286.114, 338.765, 22.4328, 0.5924", "285.191, 338.499, 21.5729, 0.5102", "284.458, 337.684, 22.12, 0.5668", "283.773, 337.041, 22.7903, 0.5452", "283.029, 336.468, 24.0041, 0.707", "282.241, 335.753, 23.9999, 0.6274", "281.646, 335.02, 23.2201, 0.5084", "281.176, 334.605, 21.6723, 0.6558", "280.724, 333.894, 21.908, 0.5756", "280.72, 333.248, 22.5652, 0.356" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "297.047, 361.676, 21.639, 0.5592", "297.509, 361.244, 21.7473, 0.5168", "298.246, 360.381, 21.812, 0.4406", "299.031, 359.573, 21.5678, 0.378", "299.825, 358.993, 20.3588, 0.3262", "300.676, 358.494, 19.0198, 0.3206", "301.608, 357.905, 18.9526, 0.3792", "302.668, 357.585, 19.1615, 0.4576", "303.646, 357.658, 18.0536, 0.518", "304.314, 358.286, 16.6068, 0.5154", "305.273, 358.709, 15.9995, 0.5084", "306.3, 358.385, 15.4902, 0.5492", "307.22, 357.772, 15.972, 0.6432", "308.319, 357.594, 16.03, 0.7036", "309.372, 357.903, 15.4003, 0.7118", "310.27, 358.588, 15.2365, 0.7118", "311.224, 359.191, 15.6405, 0.8014", "312.345, 359.323, 15.6626, 0.9058", "313.363, 359.328, 14.45, 0.9152", "314.49, 359.315, 14.0638, 0.7744", "315.623, 359.218, 14.3315, 0.55", "316.615, 358.677, 14.0784, 0.3814" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "297.047, 361.676, 21.639, 0.5592", "296.557, 360.91, 20.5181, 0.3928", "296.402, 359.875, 19.7562, 0.383", "296.234, 358.758, 19.6034, 0.4954", "295.821, 357.697, 19.6199, 0.605", "295.316, 356.672, 19.7109, 0.6534", "294.811, 355.658, 20.0852, 0.625", "294.082, 354.828, 20.6212, 0.5834", "293.196, 354.116, 20.4296, 0.5592", "292.202, 353.664, 19.6, 0.5518", "291.27, 353.092, 18.898, 0.4556", "290.768, 352.083, 18.6127, 0.4322", "290.511, 351.043, 17.754, 0.4458", "289.771, 350.196, 17.3659, 0.5338", "288.907, 349.46, 17.3953, 0.517", "288.231, 348.543, 17.535, 0.449", "287.717, 347.572, 18.1266, 0.3616", "287.812, 346.482, 18.8541, 0.356", "288.068, 345.577, 17.267, 0.3814", "288.104, 344.684, 15.5235, 0.3814", "288.357, 343.608, 14.8921, 0.3864", "289.001, 342.669, 15.113, 0.4612", "289.47, 341.628, 15.0758, 0.5106", "289.733, 340.523, 14.8417, 0.5242", "289.947, 339.471, 13.8762, 0.4264", "289.982, 338.453, 12.9086, 0.3814", "289.201, 337.625, 12.7764, 0.386", "288.28, 336.962, 12.5132, 0.4068", "287.387, 336.447, 12.6182, 0.3956", "286.779, 336.009, 14.0918, 0.3476", "285.652, 336.058, 14.2492, 0.303", "284.694, 335.85, 15.4532, 0.258", "284.075, 334.936, 15.6929, 0.231", "283.221, 334.478, 14.3422, 0.3006", "282.11, 334.62, 14.0, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "276.962, 407.632, 46.8222, 0.661", "276.908, 407.388, 49.266, 0.7834", "277.164, 408.122, 50.85, 0.5084", "277.479, 409.116, 51.45, 0.5848", "278.182, 409.851, 51.254, 0.6508", "278.844, 409.607, 51.2011, 0.4576", "279.819, 409.605, 51.8115, 0.7976", "280.483, 409.726, 53.2549, 0.6864", "280.632, 410.42, 54.3906, 0.2288", "279.904, 411.171, 55.16, 0.4942", "279.708, 412.164, 55.4663, 0.788", "279.484, 413.168, 56.0899, 0.6274", "279.812, 413.98, 56.9985, 0.95", "279.71, 414.572, 58.175, 0.5706", "280.224, 415.518, 58.5108, 0.3992", "280.672, 416.533, 58.0042, 0.2602", "281.572, 417.156, 57.96, 0.2288", "281.747, 418.257, 58.1955, 0.435", "281.682, 419.331, 59.005, 0.6444", "281.686, 420.364, 59.36, 0.6102", "281.783, 421.212, 59.0996, 0.572", "282.142, 422.175, 59.36, 0.8592", "282.84, 422.975, 59.64, 0.6864", "282.725, 423.923, 58.3181, 0.574", "282.352, 424.803, 57.3266, 0.3526", "282.121, 425.763, 56.2884, 0.4462", "282.12, 426.493, 57.9961, 0.2516", "282.61, 426.857, 60.1488, 0.617", "282.927, 427.452, 61.8425, 0.6762", "282.568, 428.359, 63.1408, 0.6534", "282.789, 429.279, 63.936, 0.3044", "282.688, 430.329, 64.412, 0.3734", "282.36, 431.185, 64.4232, 0.5892", "282.11, 431.852, 62.7718, 0.5718", "281.696, 432.432, 63.6236, 0.3894", "281.407, 433.06, 65.4696, 0.6198", "281.195, 433.916, 64.9006, 0.4644", "280.784, 434.289, 65.6645, 0.305", "280.854, 435.091, 66.6658, 0.2542", "280.838, 436.071, 66.1097, 0.3734", "280.977, 436.923, 66.64, 0.3604", "281.122, 437.795, 68.0103, 0.253", "281.32, 438.84, 67.345, 0.2288", "281.653, 439.362, 65.5085, 0.2288", "281.081, 439.914, 64.328, 0.4576", "281.779, 440.586, 64.6702, 0.4908", "281.983, 441.677, 64.43, 0.6346", "282.462, 442.691, 64.4221, 0.6864", "283.186, 443.521, 64.96, 0.6864", "283.742, 444.47, 64.757, 0.5926", "284.316, 445.408, 64.2502, 0.416", "284.518, 446.436, 63.28, 0.4576", "285.308, 446.88, 64.045, 0.5848", "285.825, 447.836, 63.9262, 0.5848", "286.366, 448.752, 63.635, 0.5592", "286.801, 449.706, 64.12, 0.3304" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "276.962, 407.632, 46.8222, 0.661", "277.077, 407.138, 48.0374, 0.5988", "276.609, 406.482, 48.4624, 0.4068", "276.454, 405.996, 46.727, 0.6864", "276.507, 405.363, 48.1037, 0.5898", "276.727, 405.022, 50.1592, 0.332", "276.562, 404.627, 52.624, 0.5084", "276.521, 403.604, 52.08, 0.5264", "277.017, 402.917, 51.5032, 0.393", "277.42, 402.051, 50.9886, 0.3262", "277.534, 401.712, 53.496, 0.5772", "277.498, 400.77, 54.4981, 0.725", "277.42, 399.957, 56.3069, 0.382", "277.485, 399.246, 55.7511, 0.4576", "276.857, 398.448, 55.5302, 0.4916", "277.241, 398.112, 56.7157, 0.3304" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "293.817, 380.914, 48.72, 0.483", "293.089, 380.589, 46.76, 0.2542", "291.961, 380.723, 46.76, 0.3076", "290.859, 380.819, 46.1504, 0.4324", "289.772, 380.592, 46.0222, 0.4322", "288.678, 380.645, 46.569, 0.4068", "287.843, 381.07, 47.3659, 0.4328", "287.469, 381.295, 49.56, 0.2288", "286.42, 381.289, 49.474, 0.7834", "285.799, 381.136, 47.6291, 0.5004", "285.189, 381.261, 49.3774, 0.6536", "284.238, 381.285, 50.0567, 0.3538", "283.55, 381.453, 50.9362, 0.2382", "282.578, 381.712, 51.0138, 0.591", "281.554, 381.705, 50.3496, 0.4068", "281.351, 382.525, 50.9832, 0.5064", "280.64, 383.202, 51.52, 0.2288", "279.758, 383.469, 52.2348, 0.2798", "278.749, 383.307, 51.8476, 0.3814", "278.111, 383.023, 49.8753, 0.2304", "277.649, 383.466, 51.2845, 0.2634", "277.269, 383.235, 52.92, 0.238", "276.608, 383.406, 54.0921, 0.2796", "275.667, 383.479, 53.4988, 0.5134", "274.943, 383.051, 52.4569, 0.482", "274.187, 383.019, 52.7344, 0.6864", "273.917, 383.578, 54.32, 0.5302", "272.835, 383.569, 54.6, 0.3788", "272.218, 382.925, 53.3431, 0.5968", "271.258, 382.782, 53.4733, 0.6596", "270.858, 382.668, 55.1729, 0.6276", "270.376, 382.318, 53.3095, 0.658", "269.485, 381.916, 53.8037, 0.4402", "268.851, 381.18, 54.6538, 0.2288", "268.337, 380.687, 56.0804, 0.465", "267.459, 380.047, 55.8768, 0.5304", "266.704, 379.999, 54.04, 0.305", "266.03, 379.465, 53.48, 0.6754", "265.17, 379.181, 53.004, 0.4246", "264.407, 378.755, 54.061, 0.4328", "263.518, 378.306, 54.628, 0.6788", "262.982, 377.321, 55.0556, 0.7388", "262.44, 376.432, 54.5476, 0.6202", "261.974, 375.55, 54.36, 0.6088", "261.188, 375.08, 55.421, 0.3522", "260.813, 374.175, 54.5619, 0.2418", "260.166, 373.376, 54.5667, 0.423", "259.337, 372.819, 53.76, 0.5658", "258.693, 371.946, 54.1013, 0.6052", "257.913, 371.228, 53.5413, 0.3382", "257.035, 370.737, 52.9477, 0.6556", "256.315, 370.259, 53.7499, 0.5424", "255.544, 369.598, 53.1342, 0.4796", "254.883, 368.943, 53.3448, 0.6978", "254.367, 368.264, 52.169, 0.5282", "253.784, 367.616, 53.48, 0.2442", "252.909, 366.929, 53.48, 0.5304", "252.087, 366.15, 53.1748, 0.5754", "251.256, 365.372, 53.2, 0.6026", "250.487, 364.58, 53.7205, 0.4684", "249.59, 363.932, 53.739, 0.2878", "248.672, 363.563, 53.872, 0.4264", "247.916, 363.062, 53.8311, 0.6696", "247.226, 362.325, 53.9406, 0.5576", "246.441, 361.612, 54.3077, 0.2896", "245.679, 360.813, 54.04, 0.2796", "245.21, 359.794, 54.243, 0.3006", "244.53, 358.924, 54.6, 0.289", "243.948, 358.025, 54.642, 0.5084", "243.558, 357.332, 53.5553, 0.2442", "243.275, 356.604, 53.3238, 0.3176", "242.829, 356.032, 54.6244, 0.4576", "242.299, 355.15, 54.899, 0.5338", "242.121, 354.275, 56.28, 0.6864", "241.636, 353.368, 56.0123, 0.5286", "240.827, 352.609, 56.089, 0.2288", "240.645, 351.715, 57.12, 0.2288", "239.892, 351.237, 57.68, 0.2288", "239.042, 350.54, 57.9356, 0.2288", "238.821, 349.442, 57.68, 0.2288", "238.752, 348.306, 57.68, 0.2288", "238.049, 347.553, 57.68, 0.2288", "237.128, 346.925, 57.68, 0.2288", "236.238, 346.423, 57.68, 0.2492", "236.465, 345.488, 58.24, 0.3304" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "293.817, 380.914, 48.72, 0.483", "293.01, 379.901, 48.72, 0.4864", "292.381, 378.986, 48.974, 0.5296", "292.091, 377.968, 48.841, 0.4598", "291.949, 377.336, 50.96, 0.624", "291.961, 376.247, 51.2392, 0.6862", "291.378, 375.405, 50.68, 0.597", "290.602, 374.721, 50.9846, 0.556", "290.714, 374.168, 52.9108, 0.567", "290.805, 373.279, 54.1652, 0.2962", "290.385, 372.601, 53.3868, 0.4322" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_37",
    "id" : "apic_37",
    "points3d" : [ "293.423, 364.414, 42.0932, 0.5338", "292.405, 364.936, 41.7189, 0.6362", "291.88, 365.05, 43.143, 0.6864", "290.773, 365.032, 43.5554, 0.572", "289.898, 364.707, 42.7706, 0.4784", "289.137, 364.736, 42.8515, 0.4096", "288.24, 364.139, 43.5266, 0.6312", "287.36, 363.461, 43.68, 0.8898", "286.311, 363.563, 44.5917, 0.6296", "285.383, 363.832, 45.808, 0.3436", "284.317, 363.678, 45.6646, 0.4764", "283.444, 363.079, 45.7114, 0.544", "282.538, 362.987, 46.6374, 0.388", "281.617, 362.693, 46.7496, 0.2796", "280.819, 363.403, 46.6312, 0.6724", "279.782, 363.517, 47.031, 0.6838", "279.146, 362.991, 48.0472, 0.6864", "278.395, 362.45, 48.5447, 0.5288", "277.537, 362.419, 50.2354, 0.2422", "276.411, 362.472, 50.4969, 0.3324", "275.338, 362.679, 49.9425, 0.483", "274.49, 363.14, 49.84, 0.5848", "273.877, 363.132, 51.6174, 0.6688", "273.052, 362.559, 51.9669, 0.5686", "272.249, 362.559, 50.4311, 0.5142", "271.377, 362.631, 51.52, 0.3416", "270.268, 362.422, 51.52, 0.233", "269.3, 362.162, 50.7111, 0.4008", "268.708, 362.18, 52.0719, 0.4642", "267.759, 361.745, 51.333, 0.5594", "266.781, 361.542, 51.7672, 0.5578", "266.321, 361.688, 53.6942, 0.797", "265.406, 362.047, 53.4526, 0.4878", "264.574, 362.489, 53.4411, 0.5566", "263.954, 362.762, 55.3714, 0.3422", "263.175, 362.375, 55.6721, 0.4668", "262.529, 362.864, 54.3262, 0.5826", "261.655, 362.987, 55.9026, 0.2894", "260.84, 363.656, 56.5356, 0.3728", "260.024, 364.147, 55.44, 0.4768", "259.349, 364.707, 56.467, 0.337", "258.979, 365.532, 57.4, 0.3304", "258.989, 366.457, 57.4445, 0.646", "258.633, 367.195, 58.905, 0.5164", "258.721, 367.66, 60.2, 0.5078", "258.259, 368.424, 60.944, 0.6216", "257.567, 367.916, 59.5952, 0.2542", "257.019, 368.112, 58.0854, 0.2466", "256.388, 368.901, 58.2106, 0.2288", "256.256, 370.031, 58.24, 0.2288", "255.686, 370.436, 59.7954, 0.2288", "254.931, 370.599, 61.8593, 0.2288", "254.175, 370.762, 63.9234, 0.2288", "253.976, 371.771, 64.1962, 0.2288", "253.749, 372.879, 64.1962, 0.2288", "253.255, 373.897, 64.1962, 0.2288", "252.139, 373.649, 64.1962, 0.2288", "251.203, 373.368, 65.2669, 0.2288", "250.401, 373.063, 67.118, 0.2288", "249.504, 373.055, 68.2506, 0.2288", "248.456, 373.516, 68.2506, 0.2288", "247.47, 373.653, 68.2506, 0.2288", "246.692, 372.971, 68.9321, 0.2288", "245.967, 372.504, 70.7717, 0.2288", "245.198, 372.02, 72.305, 0.2288", "244.207, 371.448, 72.305, 0.2288", "243.217, 370.875, 72.305, 0.2288", "242.226, 370.302, 72.305, 0.2288", "241.227, 369.821, 72.305, 0.2288", "240.144, 370.191, 72.305, 0.2288", "239.062, 370.562, 72.305, 0.2288", "237.969, 370.838, 72.305, 0.2288", "237.017, 370.456, 72.8028, 0.2288", "236.337, 369.682, 74.0242, 0.2288", "235.657, 368.909, 75.2455, 0.2288", "234.992, 368.114, 76.3596, 0.2288", "234.481, 367.091, 76.3596, 0.2288", "233.971, 366.067, 76.3596, 0.2288", "233.502, 365.025, 76.3596, 0.2288", "233.085, 363.96, 76.3596, 0.2288", "232.668, 362.894, 76.3596, 0.2288", "232.25, 361.829, 76.3596, 0.2288", "231.869, 360.755, 76.3596, 0.2288", "231.495, 359.813, 76.3596, 0.234", "230.366, 359.626, 76.3596, 0.2606", "229.363, 359.231, 76.3596, 0.3022", "228.665, 358.324, 76.3596, 0.3814" ],
    "parent" : "apic_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_36",
    "id" : "apic_36",
    "points3d" : [ "293.423, 364.414, 42.0932, 0.5338", "293.436, 364.786, 41.6783, 0.3304", "293.761, 365.622, 41.16, 0.297", "294.572, 366.26, 41.461, 0.3846", "295.159, 367.227, 41.7816, 0.7028", "295.495, 368.271, 42.1366, 0.7644", "295.61, 369.385, 42.5919, 0.559", "296.233, 370.059, 43.7928, 0.37", "296.532, 371.094, 43.7464, 0.2994", "297.326, 371.8, 43.4, 0.4576" ],
    "parent" : "apic_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_29",
    "id" : "apic_29",
    "points3d" : [ "290.118, 339.768, 33.32, 0.483", "290.092, 338.46, 34.3658, 0.2776", "290.068, 337.696, 32.3868, 0.5848" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "290.118, 339.768, 33.32, 0.483", "290.29, 339.406, 32.8076, 0.4164", "290.649, 339.196, 30.3363, 0.4576", "291.299, 339.532, 31.306, 0.4576", "291.832, 339.871, 30.9137, 0.7426", "292.775, 339.991, 31.1419, 0.4576", "293.331, 340.015, 32.2, 0.4642", "293.787, 340.768, 30.8314, 0.4244", "294.587, 340.83, 30.081, 0.6298", "295.389, 341.263, 30.7476, 0.4322", "296.313, 341.14, 29.7128, 0.5582", "297.419, 340.913, 29.96, 0.3576", "298.145, 340.999, 28.5631, 0.5322", "298.919, 341.621, 29.1942, 0.5698", "299.905, 342.042, 29.986, 0.5258", "300.682, 341.399, 29.7195, 0.6102", "301.661, 341.219, 29.3048, 0.3366", "302.686, 340.912, 29.68, 0.7096", "303.303, 340.22, 28.4917, 0.682", "304.266, 339.817, 27.7732, 0.5702", "305.067, 339.364, 28.3984, 0.342", "305.6, 338.579, 28.94, 0.2888", "306.134, 337.915, 29.6363, 0.5608", "306.366, 337.8, 27.72, 0.551", "307.201, 337.426, 27.7794, 0.6154", "307.844, 336.889, 28.7468, 0.4422", "308.65, 336.241, 28.2559, 0.661", "309.407, 335.993, 27.9028, 0.5624", "310.193, 335.451, 27.5775, 0.7058", "310.834, 334.668, 27.1043, 0.74", "311.755, 334.108, 26.6213, 0.5848", "312.81, 333.862, 27.1384, 0.618", "313.558, 333.196, 27.6273, 0.7114", "314.057, 332.545, 26.9713, 0.6598", "314.893, 332.082, 26.5826, 0.5848", "315.654, 331.369, 26.8442, 0.4984", "316.476, 330.745, 26.6924, 0.3968", "317.169, 330.285, 27.4565, 0.6262", "317.917, 330.605, 27.3935, 0.632", "318.466, 329.858, 27.4991, 0.4482", "318.604, 328.866, 27.5164, 0.6288", "318.572, 327.801, 28.3119, 0.5048", "318.948, 326.961, 29.3812, 0.4322", "319.763, 326.447, 28.5135, 0.6546", "320.52, 325.91, 28.6572, 0.6146", "321.297, 325.206, 28.6513, 0.2994", "321.996, 324.634, 27.8844, 0.5848", "322.76, 323.862, 28.1249, 0.5338", "323.286, 323.266, 28.84, 0.3514", "323.887, 322.606, 28.1473, 0.2992", "324.398, 321.91, 27.9451, 0.3606", "324.974, 321.337, 27.5022, 0.3052", "326.015, 320.903, 27.48, 0.4322", "326.753, 320.076, 27.3938, 0.4068", "326.811, 318.967, 26.9954, 0.512", "326.726, 317.851, 26.5798, 0.5338", "327.241, 317.371, 25.2857, 0.5904", "328.341, 317.22, 25.3772, 0.6128", "329.0, 316.727, 25.9823, 0.44", "329.709, 315.958, 25.947, 0.7032", "330.251, 315.102, 26.04, 0.5018", "330.61, 314.079, 25.6869, 0.661", "330.577, 313.31, 24.4042, 0.523", "331.281, 312.561, 23.4982, 0.4442", "332.289, 312.185, 22.6657, 0.599", "333.231, 311.606, 22.5624, 0.4322", "334.162, 311.236, 22.414, 0.4668", "335.152, 311.322, 21.9624, 0.6736", "336.155, 311.774, 21.3206, 0.4686", "336.852, 311.635, 22.0352, 0.439", "337.597, 310.983, 21.1904, 0.5096", "338.418, 310.722, 21.2789, 0.5184", "339.465, 310.596, 21.4693, 0.6106", "340.226, 310.141, 21.5516, 0.6596", "340.956, 309.569, 22.526, 0.4418", "341.605, 309.334, 21.0, 0.3304", "342.628, 308.918, 20.6268, 0.4576" ],
    "parent" : "apic_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "265.344, 309.287, 43.12, 0.6102", "264.617, 308.572, 44.3792, 0.6864", "264.035, 308.11, 43.7251, 0.6102", "263.411, 307.301, 43.7478, 0.8092", "263.055, 306.479, 43.4862, 0.4126", "262.397, 305.879, 43.9267, 0.3826", "261.859, 305.426, 44.24, 0.6318", "261.292, 304.514, 43.7203, 0.81", "261.029, 303.516, 43.5868, 0.6032", "261.077, 302.544, 43.787, 0.5226", "260.787, 301.811, 42.4673, 0.7554", "260.705, 300.855, 41.2639, 0.486", "260.247, 300.007, 41.8135, 0.661", "259.898, 299.362, 43.3874, 0.7626", "259.129, 298.624, 42.8565, 0.5202", "258.655, 298.058, 43.2172, 0.5338", "258.141, 297.171, 43.1343, 0.6494", "257.629, 296.639, 43.96, 0.7372" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "265.344, 309.287, 43.12, 0.6102", "265.248, 308.707, 42.3116, 0.5996", "264.836, 308.389, 41.0894, 0.6632", "265.375, 307.563, 40.9175, 0.4068", "265.179, 306.668, 40.1321, 0.2288", "264.847, 306.258, 40.0011, 0.3304", "265.25, 305.475, 41.498, 0.3626", "265.702, 304.605, 42.56, 0.634", "265.651, 303.745, 41.993, 0.335", "266.471, 303.343, 41.6858, 0.4374", "267.052, 302.626, 40.7162, 0.4354", "267.841, 301.997, 41.0822, 0.4322", "268.529, 301.378, 41.6612, 0.4576", "268.585, 300.437, 41.6147, 0.575", "269.063, 299.574, 41.7836, 0.9516", "269.391, 298.994, 40.8884, 0.6424", "269.832, 298.326, 41.2056, 0.8072", "270.237, 297.308, 40.6137, 0.4972", "270.625, 296.369, 41.0295, 0.7066", "270.858, 295.385, 41.8037, 0.4576", "271.445, 294.642, 42.6056, 0.5434", "272.345, 294.102, 42.814, 0.2288", "272.454, 293.609, 40.8814, 0.3292", "272.72, 292.803, 41.979, 0.5756", "272.814, 291.925, 40.7901, 0.6102", "273.232, 291.254, 41.5232, 0.4088", "273.416, 290.282, 42.1518, 0.2542", "272.793, 289.846, 40.8962, 0.396", "272.621, 288.984, 40.3808, 0.5962", "272.575, 288.449, 39.2081, 0.4642", "272.668, 287.534, 40.2833, 0.2696", "272.766, 286.76, 38.92, 0.4068", "273.049, 286.106, 40.0319, 0.3846", "272.882, 285.127, 40.3096, 0.4152", "272.958, 284.269, 39.5111, 0.3304", "273.55, 283.681, 40.6347, 0.2288", "274.133, 282.915, 39.6525, 0.27", "274.248, 281.838, 39.0757, 0.4954", "274.238, 280.948, 38.3975, 0.4514", "273.838, 279.924, 38.4, 0.3216", "273.354, 278.928, 38.1562, 0.349", "272.835, 278.082, 38.2018, 0.3844", "272.386, 277.177, 38.519, 0.5338", "272.155, 276.269, 37.8008, 0.3056", "271.929, 275.198, 38.4185, 0.3782", "272.309, 274.412, 38.0405, 0.5094", "272.575, 273.435, 38.3214, 0.4068", "272.328, 272.758, 38.0467, 0.5668", "271.598, 272.241, 36.9163, 0.493", "271.13, 271.568, 38.2782, 0.2288", "271.686, 270.808, 37.8616, 0.4068", "271.875, 269.957, 36.8329, 0.4516", "271.631, 269.072, 37.3332, 0.3566", "271.241, 268.321, 36.2782, 0.543", "271.21, 267.52, 36.0186, 0.393", "271.128, 266.737, 36.9883, 0.5848", "270.924, 265.726, 36.4, 0.4068" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "304.152, 330.616, 42.9332, 0.5592", "304.075, 329.366, 42.9649, 0.3942", "303.938, 328.481, 43.7172, 0.4422", "304.024, 327.483, 43.7984, 0.4576", "303.737, 326.583, 44.0798, 0.4304", "303.263, 326.287, 45.64, 0.2782", "303.21, 325.518, 44.0255, 0.4068", "303.168, 324.549, 44.4763, 0.507", "303.745, 323.993, 45.6145, 0.342", "304.289, 323.074, 45.472, 0.2288", "304.476, 322.22, 45.36, 0.3844", "303.952, 321.41, 44.5449, 0.3188", "303.758, 321.035, 46.7432, 0.2288", "302.784, 320.688, 46.9501, 0.2542", "301.748, 320.25, 46.9535, 0.3732", "301.024, 319.97, 47.9032, 0.4068", "300.372, 319.236, 48.314, 0.828", "300.077, 318.234, 48.0668, 0.6834", "300.128, 317.161, 48.44, 0.7546", "300.139, 316.121, 47.8092, 0.483", "300.758, 315.528, 48.7463, 0.6528", "301.311, 314.912, 50.029, 0.6164", "301.902, 314.829, 50.68, 0.4322" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "304.152, 330.616, 42.9332, 0.5592", "303.618, 330.845, 43.4, 0.2542" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "290.903, 351.199, 47.696, 0.661", "290.328, 351.116, 47.679, 0.5416", "289.445, 351.321, 48.44, 0.893", "288.869, 350.881, 48.9726, 0.6462", "288.938, 349.863, 49.6104, 0.3676", "288.517, 348.818, 49.84, 0.2316", "288.061, 348.223, 50.6125, 0.4238", "287.512, 347.807, 52.6414, 0.6742", "287.467, 346.881, 54.061, 0.5196", "287.034, 346.253, 55.2619, 0.5062", "286.74, 345.259, 55.1911, 0.6024", "286.398, 344.593, 56.4668, 0.6864", "286.801, 344.37, 58.2319, 0.661", "287.138, 343.772, 56.8837, 0.5338", "287.945, 343.707, 58.1101, 0.3078", "288.384, 343.963, 59.8041, 0.2288", "288.852, 342.938, 59.92, 0.451", "289.423, 342.239, 61.0697, 0.356", "290.013, 341.541, 61.0467, 0.436", "290.219, 340.464, 60.7583, 0.5364", "289.661, 339.779, 61.2724, 0.2914", "289.112, 338.846, 61.2363, 0.3402", "288.468, 338.087, 61.0095, 0.3", "288.027, 337.282, 62.0203, 0.661", "288.366, 336.966, 63.5295, 0.2792", "288.667, 336.033, 63.8448, 0.38", "288.974, 335.286, 62.4943, 0.4448", "289.442, 334.552, 63.56, 0.2658", "289.549, 333.61, 63.4805, 0.4576", "289.653, 332.584, 64.0836, 0.4524", "290.38, 332.103, 65.2215, 0.2288", "291.448, 331.863, 65.5102, 0.2824", "292.148, 331.092, 65.52, 0.2914", "293.29, 331.045, 65.52, 0.2288", "294.289, 330.569, 65.52, 0.239", "295.103, 329.863, 65.4682, 0.4518", "295.497, 329.129, 65.5682, 0.2494", "295.621, 328.708, 67.7009, 0.2288", "296.426, 328.354, 66.901, 0.381", "297.074, 327.598, 66.64, 0.527", "297.445, 326.599, 67.2532, 0.2512", "298.153, 325.864, 67.76, 0.2288", "298.914, 325.119, 67.0289, 0.3914", "299.156, 324.205, 67.4909, 0.6102", "299.479, 323.244, 68.3516, 0.6356", "299.728, 322.267, 68.5404, 0.3976", "300.035, 321.224, 68.3284, 0.356", "299.957, 320.234, 69.3118, 0.652", "299.852, 319.402, 67.8031, 0.5338", "300.332, 319.362, 66.0887, 0.4682", "300.071, 319.977, 64.1455, 0.2294", "300.071, 319.977, 61.3455, 0.2288", "300.526, 319.837, 59.1923, 0.3708", "300.75, 318.734, 59.08, 0.4524", "300.216, 318.349, 57.801, 0.4204", "300.506, 317.621, 56.56, 0.4326", "300.529, 316.752, 56.3066, 0.2288", "300.795, 316.291, 58.0303, 0.6756", "300.526, 315.519, 59.4642, 0.5368", "300.58, 314.427, 59.619, 0.4402", "300.3, 313.482, 58.8, 0.7178", "300.872, 312.655, 59.36, 0.483" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "290.903, 351.199, 47.696, 0.661", "289.861, 351.272, 48.3708, 0.612", "288.85, 351.761, 48.8673, 0.6594", "287.882, 352.338, 49.3408, 0.5848", "286.773, 352.467, 48.7295, 0.5582", "285.632, 352.48, 48.5968, 0.4578", "284.657, 352.654, 49.8602, 0.4856", "284.079, 353.254, 51.3724, 0.5282", "283.134, 352.799, 51.1025, 0.6452", "282.686, 352.393, 51.2627, 0.6864", "282.395, 351.511, 51.8311, 0.5368", "282.082, 350.721, 53.4391, 0.3934", "281.099, 350.357, 52.9659, 0.5976", "279.968, 350.405, 52.9491, 0.537", "279.006, 350.434, 52.08, 0.5514", "278.072, 350.249, 52.7481, 0.2906", "277.14, 350.448, 52.1564, 0.3538", "276.17, 350.683, 51.5343, 0.2658", "275.596, 351.107, 52.92, 0.3098", "274.792, 351.587, 53.6547, 0.2288", "273.796, 351.288, 53.333, 0.701", "272.732, 350.941, 53.1544, 0.6998", "271.993, 350.293, 53.636, 0.483", "270.914, 350.16, 54.1618, 0.4204", "270.121, 349.468, 54.0184, 0.3834", "269.367, 348.92, 53.1742, 0.6654", "268.716, 348.87, 51.9848, 0.6864", "267.769, 348.568, 52.9592, 0.4258", "266.781, 348.366, 53.8432, 0.3526", "266.505, 347.436, 54.8932, 0.2434", "266.219, 346.832, 54.2982, 0.307", "265.686, 345.899, 53.6281, 0.554", "265.302, 344.895, 53.8294, 0.4776", "264.685, 344.447, 55.1692, 0.2418", "264.566, 343.612, 56.28, 0.2602", "263.519, 343.653, 56.2257, 0.3502", "262.893, 343.393, 54.654, 0.3836", "261.905, 342.927, 54.5208, 0.4284", "261.119, 342.971, 54.4513, 0.627", "260.242, 342.563, 54.0876, 0.5964", "259.164, 342.224, 53.8779, 0.4162", "258.129, 341.806, 53.6679, 0.2476", "257.007, 341.713, 53.76, 0.2288", "256.041, 341.57, 54.4544, 0.296", "255.533, 340.817, 55.2919, 0.3708", "255.035, 339.972, 54.5689, 0.483", "254.793, 339.696, 55.4229, 0.2288", "253.792, 339.336, 56.0, 0.2288", "252.782, 338.972, 56.0, 0.2288", "251.948, 338.51, 55.347, 0.305", "251.085, 337.938, 55.0889, 0.2288", "250.161, 337.388, 54.6378, 0.239", "249.161, 337.022, 55.4408, 0.2536", "248.82, 336.17, 55.72, 0.2288", "248.594, 335.136, 55.72, 0.2288", "247.647, 334.577, 55.72, 0.2288", "246.541, 334.391, 55.72, 0.2288", "245.405, 334.336, 55.72, 0.2288", "244.465, 333.745, 55.72, 0.2288", "243.578, 333.042, 55.6349, 0.2682", "242.72, 332.339, 55.592, 0.4322", "242.149, 331.563, 54.6, 0.355", "241.197, 331.183, 55.3101, 0.2288", "240.253, 330.718, 55.44, 0.2288", "239.704, 329.924, 55.44, 0.2288", "238.61, 329.73, 55.44, 0.2288", "237.656, 329.189, 55.44, 0.2288", "236.767, 328.479, 55.44, 0.2288", "235.766, 327.997, 55.16, 0.305" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "360.437, 361.3, 31.8268, 0.4322", "360.946, 361.504, 31.36, 0.4068", "361.837, 361.69, 32.3196, 0.3008", "362.575, 362.332, 31.374, 0.2618", "363.585, 362.752, 31.7204, 0.2338", "364.706, 362.909, 31.92, 0.2998", "365.759, 363.346, 31.92, 0.356", "366.867, 363.599, 31.92, 0.2934", "367.892, 364.04, 31.948, 0.295", "368.855, 364.609, 31.8046, 0.3754", "369.858, 365.115, 31.8534, 0.3158", "370.776, 365.085, 31.4709, 0.2578", "371.52, 365.141, 31.843, 0.4576", "372.41, 365.388, 31.4978, 0.4642", "373.188, 365.556, 32.48, 0.4318", "374.221, 365.823, 32.9132, 0.2842", "375.126, 366.168, 31.92, 0.3374", "376.179, 366.207, 32.3148, 0.4576", "377.096, 366.194, 33.4337, 0.2764", "377.879, 366.653, 32.76, 0.5072", "378.733, 367.12, 32.8205, 0.4014", "379.733, 367.234, 33.551, 0.4528", "380.602, 367.161, 33.4841, 0.2394", "381.716, 366.995, 33.4622, 0.2856", "382.839, 367.008, 33.6888, 0.2798", "383.871, 367.215, 34.3179, 0.3636", "384.919, 367.383, 34.2345, 0.3518", "385.853, 367.682, 35.0, 0.2288", "386.992, 367.74, 35.0, 0.2288", "387.992, 368.139, 35.2248, 0.2288", "389.119, 368.139, 34.9247, 0.2288", "390.185, 368.246, 34.9238, 0.319", "391.261, 368.558, 35.453, 0.4524", "392.303, 368.973, 35.3298, 0.401", "393.289, 369.26, 35.9719, 0.4576", "394.043, 369.889, 36.7556, 0.308", "394.924, 370.476, 36.1953, 0.4142", "394.931, 371.15, 37.6628, 0.3908", "395.023, 371.493, 36.36, 0.3004", "394.744, 371.533, 34.4089, 0.356" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "360.437, 361.3, 31.8268, 0.4322", "361.072, 360.934, 32.1446, 0.4122", "361.836, 360.339, 32.1476, 0.3814", "362.696, 359.973, 31.3158, 0.3572", "363.556, 359.483, 30.8, 0.5896", "364.215, 358.873, 30.9005, 0.5098", "364.761, 358.353, 30.0868, 0.3304", "365.474, 357.723, 30.2728, 0.4642", "365.979, 356.842, 30.6594, 0.3782", "366.872, 356.309, 30.6664, 0.375", "367.937, 356.303, 29.96, 0.4968", "369.0, 356.252, 29.4608, 0.2542", "369.93, 355.762, 29.6708, 0.4462", "370.971, 355.427, 28.8912, 0.4406", "371.79, 355.21, 29.1948, 0.2288", "372.115, 354.518, 29.0657, 0.4004", "372.925, 353.835, 29.4, 0.2288", "373.728, 353.221, 29.2788, 0.2288", "374.217, 352.266, 29.6145, 0.356", "374.476, 351.348, 29.7707, 0.4514", "374.804, 350.467, 29.6677, 0.3514", "375.553, 349.673, 29.3412, 0.2748", "376.22, 349.082, 28.7042, 0.3946", "377.178, 348.628, 28.9979, 0.2288", "377.995, 347.954, 28.56, 0.295", "379.079, 347.824, 28.3665, 0.399", "380.104, 347.906, 28.2044, 0.3414", "380.832, 347.38, 27.4327, 0.2288", "381.488, 346.512, 27.9989, 0.2288", "382.276, 345.724, 28.1588, 0.296", "383.254, 345.285, 28.1644, 0.2288", "384.159, 344.837, 28.3847, 0.3298", "384.863, 344.349, 28.1022, 0.3304", "385.861, 344.232, 28.5589, 0.4576", "386.847, 344.115, 29.3882, 0.3338", "387.859, 343.858, 28.84, 0.2288", "388.73, 343.756, 29.8402, 0.4576", "389.723, 343.662, 29.0175, 0.2288", "390.678, 343.772, 29.6909, 0.2542", "391.693, 343.66, 29.2886, 0.3786", "392.546, 343.005, 28.3965, 0.2542", "393.392, 342.385, 27.8029, 0.4454", "394.233, 341.841, 27.4509, 0.272", "395.364, 341.708, 27.3224, 0.2288", "396.481, 341.747, 27.5232, 0.2288", "397.541, 341.99, 27.7264, 0.2612", "398.54, 342.271, 27.4305, 0.4816", "399.579, 342.263, 27.0824, 0.3304", "400.636, 342.368, 26.8537, 0.3158", "401.499, 342.046, 26.0968, 0.3732", "402.523, 341.658, 26.1246, 0.2288", "403.467, 341.254, 26.4256, 0.356", "404.42, 340.809, 26.1114, 0.3814", "405.309, 340.44, 26.7702, 0.3674", "406.069, 339.779, 26.7064, 0.3322", "407.073, 339.411, 26.88, 0.3764", "408.061, 339.052, 27.4232, 0.2288", "409.02, 338.929, 26.8265, 0.5232", "410.002, 339.023, 26.0212, 0.314", "411.104, 339.173, 25.6119, 0.3108", "412.202, 338.967, 25.2, 0.5606", "413.145, 338.658, 24.9427, 0.356", "414.063, 338.427, 25.4892, 0.4058", "415.131, 338.422, 25.8672, 0.4498", "416.099, 338.166, 25.9473, 0.43", "416.702, 338.885, 26.0316, 0.4302", "417.517, 339.409, 25.5066, 0.6282", "418.522, 339.544, 26.1649, 0.5592", "419.58, 339.612, 26.04, 0.6144", "420.671, 339.454, 25.583, 0.678", "421.645, 339.91, 25.8838, 0.6312", "422.634, 339.953, 24.8178, 0.7942", "423.509, 340.454, 25.2, 0.4322" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "323.903, 371.903, 29.349, 0.5084", "323.609, 371.699, 28.1929, 0.4576", "324.438, 371.862, 28.9036, 0.4576", "324.561, 372.719, 30.4763, 0.2542", "324.896, 373.705, 31.451, 0.4824", "325.715, 374.18, 31.2404, 0.4182", "326.411, 375.026, 30.8311, 0.5306", "327.328, 375.509, 30.9173, 0.6314", "328.019, 376.291, 30.5701, 0.6374", "328.556, 377.089, 31.3734, 0.389", "328.557, 378.078, 32.4615, 0.6154", "328.481, 379.147, 31.9816, 0.5508", "329.118, 379.892, 32.804, 0.2846", "329.329, 380.714, 33.9329, 0.3194", "329.514, 381.699, 34.0948, 0.4322", "329.841, 382.542, 35.278, 0.2288", "330.499, 383.265, 35.0767, 0.4142", "330.736, 384.151, 34.8345, 0.3452", "331.687, 384.589, 34.9706, 0.3334", "332.227, 385.384, 35.1459, 0.3986", "332.79, 386.17, 35.6972, 0.4098", "332.888, 387.075, 35.8142, 0.296", "333.138, 387.879, 34.7026, 0.7912", "333.518, 388.801, 34.16, 0.7068", "333.672, 389.746, 35.1375, 0.616", "333.819, 390.644, 35.8789, 0.4364", "334.01, 391.591, 34.7861, 0.4416", "334.15, 392.181, 33.6048, 0.5342", "334.475, 392.615, 35.5673, 0.661", "334.734, 393.663, 35.4668, 0.4788", "334.866, 394.687, 36.2284, 0.424", "334.921, 395.795, 35.915, 0.3206", "335.133, 396.651, 35.0773, 0.3608", "335.112, 397.628, 33.9312, 0.2288", "335.178, 398.138, 36.0595, 0.2734", "335.192, 399.126, 36.955, 0.5084", "335.192, 399.905, 35.9332, 0.6102", "335.381, 400.99, 36.3689, 0.6336", "335.833, 401.878, 36.3334, 0.4794", "335.754, 402.206, 37.52, 0.2288", "336.294, 403.026, 37.24, 0.4216", "337.093, 403.127, 35.588, 0.3008", "337.075, 404.197, 36.197, 0.4462", "337.258, 405.269, 36.7077, 0.5338", "337.663, 405.98, 37.5264, 0.661", "337.48, 406.75, 39.1902, 0.2862", "337.366, 407.798, 39.9468, 0.2796", "337.481, 408.64, 38.409, 0.3874", "337.272, 409.498, 37.1927, 0.2542", "337.334, 410.407, 36.47, 0.2924", "337.242, 411.269, 37.3898, 0.438", "337.362, 412.076, 38.8119, 0.615", "337.449, 412.843, 37.7871, 0.6716", "337.594, 413.739, 38.8321, 0.2288", "337.194, 414.621, 38.08, 0.2402", "336.739, 415.501, 38.5437, 0.272", "336.138, 416.165, 37.413, 0.5508", "335.777, 416.81, 38.7058, 0.4906", "336.152, 417.448, 40.2559, 0.4576", "336.529, 418.251, 39.3781, 0.3304", "336.559, 419.277, 39.4108, 0.2764", "335.993, 420.093, 38.92, 0.6294", "335.993, 421.011, 39.7541, 0.5954", "336.055, 422.072, 39.0631, 0.5524", "336.237, 422.953, 38.2088, 0.4368", "336.75, 423.478, 36.2264, 0.449", "337.1, 424.076, 37.91, 0.3814", "337.225, 424.657, 39.9143, 0.2288", "337.252, 425.613, 41.3504, 0.2294", "337.48, 426.493, 42.6188, 0.2768", "338.204, 426.966, 43.6439, 0.524", "339.036, 427.404, 42.84, 0.4158", "339.489, 428.008, 43.3224, 0.5466", "340.033, 428.659, 43.96, 0.2626", "340.361, 429.333, 42.7087, 0.3518", "341.129, 430.118, 43.0422, 0.4788", "341.939, 430.887, 42.56, 0.534", "342.514, 431.784, 42.233, 0.661", "343.179, 432.525, 41.4946, 0.42", "343.658, 433.443, 41.16, 0.2288", "344.351, 433.59, 42.3948, 0.4438", "345.152, 434.249, 42.9887, 0.4412", "345.742, 435.057, 43.2373, 0.5656", "346.433, 435.885, 42.56, 0.6356", "346.877, 436.789, 41.8286, 0.2436", "347.204, 437.506, 40.166, 0.2736", "347.549, 438.17, 39.8614, 0.3606", "348.234, 438.463, 41.5862, 0.4702", "348.848, 439.355, 41.5716, 0.447", "349.065, 440.21, 41.2084, 0.613", "349.215, 440.863, 42.8428, 0.3352", "349.149, 441.862, 42.9296, 0.6122", "349.124, 442.924, 43.265, 0.6102", "349.502, 443.063, 45.7447, 0.3966", "349.835, 443.553, 45.7615, 0.3724", "350.205, 444.009, 44.4489, 0.3756", "350.507, 444.667, 43.1172, 0.3028", "350.293, 445.514, 42.0227, 0.3882", "350.865, 445.931, 42.56, 0.2288" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "323.903, 371.903, 29.349, 0.5084", "325.167, 371.721, 28.2125, 0.5784", "326.272, 371.847, 27.8522, 0.5392", "327.371, 371.961, 28.2954, 0.483", "328.486, 371.747, 28.4099, 0.5058", "329.593, 371.654, 27.8642, 0.5978", "330.65, 371.514, 26.9097, 0.6944", "331.735, 371.265, 26.6641, 0.7036", "332.843, 371.088, 27.1762, 0.669", "333.96, 370.963, 27.3795, 0.6356", "335.082, 371.095, 27.0542, 0.6452", "336.186, 371.122, 26.4715, 0.671", "337.304, 370.923, 26.1551, 0.6656", "338.419, 370.905, 26.2452, 0.6246", "339.468, 371.298, 26.5978, 0.5752", "340.458, 371.735, 26.1926, 0.5214", "341.356, 372.271, 25.8188, 0.4706", "342.155, 373.054, 25.6956, 0.4192", "342.916, 373.867, 25.0858, 0.42", "343.62, 374.652, 24.1058, 0.4732", "344.489, 375.25, 23.2224, 0.572", "345.544, 375.646, 22.9561, 0.6704", "346.671, 375.755, 22.932, 0.747", "347.786, 375.555, 22.7942, 0.7998", "348.841, 375.216, 22.2068, 0.7896", "349.876, 374.936, 21.2456, 0.6964", "350.968, 374.71, 20.7687, 0.5778", "352.08, 374.781, 20.7197, 0.5488", "353.028, 375.364, 20.7183, 0.6212", "353.855, 376.153, 20.7136, 0.661", "354.68, 376.946, 20.694, 0.5988", "355.561, 377.672, 20.601, 0.4812", "356.579, 378.075, 20.1124, 0.4164", "357.626, 378.467, 20.0402, 0.4576", "358.475, 379.188, 20.4714, 0.5536", "359.278, 379.98, 20.3031, 0.6208", "360.181, 380.367, 19.1052, 0.6174", "361.252, 380.328, 18.4184, 0.5272", "362.373, 380.172, 18.1129, 0.5016", "363.467, 380.065, 17.5246, 0.476", "364.582, 380.115, 17.3424, 0.4354", "365.673, 379.777, 17.2281, 0.366", "366.614, 379.231, 16.7706, 0.3222", "367.41, 378.499, 16.2392, 0.3228", "368.477, 378.317, 16.235, 0.3848", "369.583, 378.611, 16.2044, 0.4518", "370.617, 379.032, 15.9354, 0.4626", "371.632, 379.401, 15.6229, 0.3994", "372.729, 379.234, 15.9883, 0.3444", "373.683, 378.711, 16.7238, 0.3426", "374.652, 378.19, 17.2309, 0.381", "375.768, 378.034, 17.3594, 0.4204", "376.776, 378.439, 17.3552, 0.4612", "377.717, 379.087, 17.3337, 0.4976", "378.773, 379.47, 17.1931, 0.5084", "379.862, 379.413, 16.6001, 0.5248", "380.975, 379.4, 16.5245, 0.5686", "382.08, 379.225, 16.3531, 0.656", "383.209, 379.121, 16.24, 0.7044", "384.35, 379.197, 16.24, 0.7306", "385.386, 379.078, 15.2995, 0.4466", "386.342, 378.778, 15.12, 0.2292", "387.484, 378.759, 15.2163, 0.2806", "388.461, 378.828, 15.68, 0.3718", "389.586, 378.893, 16.0115, 0.2656", "390.476, 378.751, 15.4241, 0.2876", "391.329, 378.85, 15.4104, 0.4604", "391.831, 378.442, 14.0403, 0.4856", "392.742, 378.092, 14.7252, 0.2936", "393.449, 378.612, 13.72, 0.2288", "394.567, 378.741, 13.72, 0.2288", "395.596, 379.007, 13.8774, 0.2288", "396.705, 378.918, 13.44, 0.2288", "397.837, 378.792, 13.44, 0.2962", "398.833, 378.48, 13.9776, 0.291", "399.569, 377.662, 13.9605, 0.2994", "400.323, 377.189, 13.4246, 0.4534", "401.083, 376.774, 13.7911, 0.4684", "401.975, 376.264, 13.7155, 0.4576", "402.863, 376.027, 13.7511, 0.3888", "403.643, 375.609, 14.0017, 0.2288", "404.406, 375.357, 13.9342, 0.3416", "405.28, 375.693, 13.16, 0.3128", "406.149, 376.226, 12.5938, 0.2592", "407.012, 375.647, 12.3544, 0.3546", "407.841, 375.088, 12.7042, 0.3902", "408.616, 375.509, 13.0488, 0.262", "409.511, 376.206, 12.8391, 0.314", "410.535, 376.544, 12.8391, 0.3698", "411.472, 375.95, 12.8391, 0.3112", "412.118, 375.009, 12.8391, 0.2934", "412.746, 374.052, 12.8391, 0.2796" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "280.616, 390.925, 29.4868, 0.5592", "279.449, 390.893, 30.7238, 0.4906", "278.542, 390.909, 30.9336, 0.4096", "277.776, 391.128, 31.9984, 0.3462", "276.786, 390.8, 31.8228, 0.4968", "276.001, 390.497, 30.2618, 0.389", "275.405, 390.249, 28.856, 0.4366", "274.733, 389.753, 27.2588, 0.3664", "273.842, 389.45, 27.2994, 0.521", "273.931, 389.167, 29.3796, 0.5038", "273.886, 389.168, 31.8548, 0.7242", "273.0, 389.074, 32.9714, 0.5238", "272.194, 389.532, 32.3515, 0.2288", "271.592, 390.056, 31.2754, 0.5084", "270.666, 390.057, 32.4526, 0.4516", "269.744, 390.236, 33.3948, 0.26", "268.779, 390.577, 34.44, 0.528", "268.011, 390.211, 33.6622, 0.5478", "267.292, 389.458, 34.1312, 0.2542", "266.352, 389.068, 33.5334, 0.5628", "265.368, 388.613, 34.3104, 0.5182", "264.524, 388.16, 33.99, 0.4796", "263.625, 388.166, 35.3114, 0.4446", "262.765, 387.91, 35.56, 0.3378", "262.205, 387.816, 36.0805, 0.6864", "261.603, 388.319, 35.567, 0.4888", "260.659, 388.803, 36.3129, 0.5084", "259.631, 388.856, 36.7486, 0.5392", "258.745, 388.705, 37.9579, 0.4156", "257.852, 388.33, 37.3388, 0.409", "256.803, 388.163, 37.2663, 0.2918", "255.889, 388.121, 38.355, 0.25", "254.916, 387.559, 38.3541, 0.5084", "253.816, 387.331, 38.5255, 0.5084", "252.937, 386.999, 38.5213, 0.483", "252.386, 386.553, 39.2498, 0.389", "251.839, 385.748, 38.9091, 0.4784", "250.989, 385.359, 39.2, 0.545", "250.003, 385.513, 39.508, 0.4576", "249.264, 385.256, 38.6526, 0.575", "248.18, 385.078, 39.1978, 0.3632", "247.113, 384.857, 39.4895, 0.2538", "246.188, 385.217, 39.7379, 0.3578", "245.234, 384.928, 40.0249, 0.47", "244.176, 384.766, 40.1657, 0.3812", "243.075, 384.621, 39.7701, 0.404", "242.004, 384.684, 40.1551, 0.4322", "240.938, 384.347, 40.46, 0.3616", "239.983, 384.055, 40.2576, 0.4322", "239.008, 383.598, 40.6, 0.3208", "238.059, 382.988, 40.9763, 0.3304", "237.164, 382.295, 41.2821, 0.3136", "236.163, 381.788, 41.2378, 0.305", "235.465, 380.935, 41.4308, 0.329", "234.79, 380.367, 41.44, 0.483", "234.035, 379.594, 41.8566, 0.283", "233.153, 378.925, 41.7665, 0.4196", "232.137, 378.445, 41.72, 0.4268", "231.097, 378.036, 41.4546, 0.5456", "230.087, 377.549, 41.274, 0.5082", "229.1, 377.077, 41.72, 0.4068", "228.32, 376.33, 41.804, 0.2288", "227.286, 375.889, 41.8964, 0.2288", "226.156, 375.804, 42.0006, 0.2292", "225.055, 375.732, 42.408, 0.2904", "224.0, 375.69, 42.0014, 0.659", "223.088, 375.675, 42.2831, 0.5068", "222.041, 375.28, 42.8243, 0.2302", "220.992, 374.826, 42.84, 0.2288", "219.856, 374.774, 42.84, 0.2288", "218.712, 374.774, 42.84, 0.2288", "217.601, 374.676, 42.84, 0.2288", "217.147, 373.816, 43.2247, 0.4576", "216.788, 373.51, 44.518, 0.4576", "216.002, 373.194, 43.96, 0.4618", "215.293, 372.423, 43.1281, 0.4294", "214.453, 371.683, 42.8305, 0.4166", "213.396, 371.464, 43.3462, 0.6512", "212.372, 371.123, 44.032, 0.7372", "211.444, 371.379, 44.1913, 0.8258", "210.386, 371.166, 43.4162, 0.3182", "209.361, 370.763, 43.4, 0.2288", "208.767, 370.098, 44.52, 0.356", "208.437, 369.225, 43.7898, 0.4994", "207.683, 368.78, 43.5193, 0.7272", "206.64, 368.622, 43.3784, 0.7796", "205.587, 368.464, 42.9618, 0.6592", "204.664, 368.239, 42.0204, 0.6434", "203.794, 367.93, 41.72, 0.661", "202.734, 367.91, 42.142, 0.768", "201.659, 367.827, 41.4999, 0.5196", "200.785, 368.193, 40.88, 0.5326", "199.941, 367.795, 41.6248, 0.555", "199.17, 367.224, 41.16, 0.5338" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "280.616, 390.925, 29.4868, 0.5592", "279.597, 391.04, 30.196, 0.6074", "278.913, 391.639, 28.6348, 0.5914", "278.086, 392.294, 27.7707, 0.5672", "277.198, 392.957, 28.1789, 0.523", "276.317, 393.664, 28.5155, 0.5266", "275.419, 394.372, 28.5597, 0.5154", "274.49, 395.038, 28.5578, 0.5084", "273.54, 395.675, 28.5491, 0.527", "272.516, 396.179, 28.4962, 0.5338", "271.415, 396.366, 28.0876, 0.4958", "270.622, 396.353, 26.2741, 0.4244", "269.648, 396.095, 25.2118, 0.4068", "268.524, 396.004, 24.8928, 0.4068", "267.413, 396.223, 24.6056, 0.45", "266.417, 396.151, 23.3486, 0.503", "266.279, 395.214, 22.104, 0.6038", "265.517, 394.547, 20.9006, 0.6102", "264.766, 393.694, 20.7833, 0.5326", "263.972, 392.885, 21.0798, 0.5222", "263.052, 392.437, 20.6038, 0.5636", "262.018, 392.543, 20.5906, 0.5848", "260.965, 392.405, 21.2766, 0.534", "260.051, 391.848, 20.7978, 0.473", "259.409, 391.201, 19.1794, 0.439", "258.586, 390.53, 18.559, 0.4512", "257.707, 389.807, 18.7202, 0.438", "256.645, 389.638, 18.3042, 0.4118", "255.667, 390.022, 17.3244, 0.3858", "255.008, 390.703, 15.8211, 0.3814", "254.056, 391.09, 14.7022, 0.3814", "252.981, 391.373, 14.478, 0.3814", "251.911, 391.702, 14.1028, 0.3642", "250.918, 392.168, 13.3364, 0.3382", "249.977, 392.779, 12.8573, 0.3126", "248.971, 393.307, 12.6571, 0.305", "248.071, 393.99, 12.8103, 0.305", "247.54, 394.974, 12.8797, 0.3436", "247.652, 396.073, 12.8789, 0.4148", "247.717, 397.209, 12.8719, 0.4916", "247.959, 398.32, 12.8086, 0.4874", "248.941, 398.698, 12.6235, 0.4172", "250.07, 398.747, 12.9685, 0.3388", "251.161, 398.494, 13.4901, 0.3076", "252.258, 398.263, 13.0374, 0.305", "253.387, 398.352, 12.7434, 0.2816", "254.498, 398.224, 12.185, 0.2796", "255.112, 397.311, 12.88, 0.305" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "280.72, 333.248, 22.5652, 0.356", "279.936, 332.907, 22.2953, 0.3902", "279.008, 333.37, 21.2652, 0.2718", "278.542, 334.162, 19.686, 0.2288", "278.37, 334.811, 17.4812, 0.2288", "278.222, 335.818, 16.4077, 0.2288", "278.276, 336.941, 16.6925, 0.2346", "278.128, 337.996, 17.7047, 0.2606", "277.969, 339.015, 18.8966, 0.2866", "277.788, 340.076, 19.5807, 0.305", "277.1, 340.75, 19.434, 0.305", "276.104, 340.857, 18.5035, 0.305", "275.492, 341.243, 16.3864, 0.2924", "274.772, 341.358, 14.527, 0.2652", "273.966, 341.837, 13.839, 0.2378", "273.708, 342.852, 13.092, 0.2288", "274.176, 343.777, 12.2651, 0.2726", "274.789, 344.687, 12.88, 0.3304" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "280.72, 333.248, 22.5652, 0.356", "280.611, 331.962, 21.9254, 0.4476", "280.278, 330.897, 21.8338, 0.3718", "279.634, 329.953, 21.7932, 0.345", "279.493, 328.977, 21.4362, 0.3426", "279.876, 327.922, 20.9927, 0.356", "279.557, 326.996, 20.8474, 0.4004", "278.984, 326.04, 20.7374, 0.4788", "278.606, 324.961, 20.6027, 0.5398", "278.318, 323.893, 20.0052, 0.5432", "277.926, 322.894, 19.0859, 0.484", "277.473, 321.933, 19.4888, 0.4576", "277.103, 320.9, 19.395, 0.4762", "276.814, 319.857, 18.5102, 0.5208", "276.644, 318.746, 18.1843, 0.5338", "276.607, 317.671, 18.996, 0.5338", "276.549, 316.576, 18.625, 0.5586", "276.203, 315.489, 18.4803, 0.6096", "275.728, 314.449, 18.4696, 0.6606", "275.259, 313.406, 18.4229, 0.661", "274.528, 312.529, 18.2322, 0.6104", "273.905, 311.621, 17.484, 0.5336", "273.29, 310.691, 17.3606, 0.4528", "273.098, 309.588, 17.365, 0.4174", "272.695, 308.579, 17.3846, 0.4068", "271.951, 307.713, 17.4605, 0.4526", "271.246, 306.835, 17.8511, 0.5448", "270.59, 305.918, 18.3238, 0.6314", "269.963, 304.967, 18.482, 0.6446", "269.303, 304.034, 18.4895, 0.5758", "268.634, 303.11, 18.5256, 0.5292", "267.844, 302.291, 18.7183, 0.5038", "267.031, 301.522, 19.1531, 0.4882", "266.212, 300.737, 18.8048, 0.5084", "265.457, 299.888, 18.48, 0.5084", "264.654, 299.073, 18.4803, 0.5592", "263.869, 298.241, 18.4806, 0.5338" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "277.241, 398.112, 56.7157, 0.3304", "277.356, 397.99, 57.1217, 0.2922", "277.071, 397.426, 58.8, 0.6368", "275.969, 397.311, 58.4248, 0.6864", "275.464, 398.035, 59.08, 0.2578", "274.81, 398.157, 60.4094, 0.3348", "274.258, 398.477, 61.0156, 0.8798", "273.259, 398.937, 60.727, 0.628", "272.731, 399.674, 59.5501, 0.4494", "272.238, 399.932, 60.3288, 0.2976", "272.272, 399.828, 62.9796, 0.4086", "271.4, 399.566, 63.1621, 0.8564", "270.345, 399.471, 63.7241, 0.2902", "269.334, 399.256, 64.12, 0.2288", "268.19, 399.256, 64.12, 0.242", "267.047, 399.218, 64.12, 0.305", "266.085, 398.634, 64.12, 0.4524", "265.152, 398.721, 63.56, 0.3728", "264.47, 399.058, 64.496, 0.2796", "263.409, 399.129, 65.2028, 0.2338", "262.406, 398.798, 65.0188, 0.4068", "261.39, 398.944, 65.6172, 0.5758", "260.489, 399.507, 65.8, 0.4544", "260.211, 400.267, 66.743, 0.5836", "259.459, 399.853, 67.3868, 0.356" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "277.241, 398.112, 56.7157, 0.3304", "277.008, 397.62, 57.134, 0.5848", "276.162, 397.426, 56.0, 0.2796" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "290.385, 372.601, 53.3868, 0.4322", "289.93, 372.486, 52.08, 0.2288", "288.871, 372.562, 51.6617, 0.493", "287.887, 372.944, 51.52, 0.4198", "287.144, 373.058, 52.561, 0.5704", "286.46, 372.944, 54.04, 0.7112", "285.345, 372.982, 53.7656, 0.5546", "284.742, 372.931, 55.4616, 0.4338", "284.108, 372.601, 56.56, 0.2802", "283.64, 373.058, 57.862, 0.697", "282.597, 373.216, 57.9992, 1.1214", "282.1, 374.069, 58.8, 0.6896", "281.255, 373.982, 60.0006, 0.3304", "281.145, 374.202, 61.9125, 0.4666", "281.059, 374.658, 63.9733, 0.5732", "280.934, 375.765, 64.3952, 0.3716", "280.437, 376.59, 65.0448, 0.25", "280.394, 377.673, 65.52, 0.2316", "280.779, 378.63, 65.728, 0.26", "280.621, 379.696, 65.7233, 0.4516", "279.893, 380.311, 66.6324, 0.481", "279.764, 381.208, 65.8182, 0.7564", "279.928, 381.963, 67.1437, 0.6346", "279.877, 382.63, 68.7977, 0.4236", "279.503, 383.578, 69.1964, 0.2288", "279.253, 384.595, 68.7786, 0.3722", "279.411, 384.977, 71.2944, 0.2642", "278.764, 385.71, 71.12, 0.5962", "277.649, 385.871, 70.84, 0.661" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "290.385, 372.601, 53.3868, 0.4322", "290.347, 372.03, 52.64, 0.5166", "290.118, 371.085, 53.436, 0.6386", "289.942, 370.124, 54.4421, 0.5784", "289.754, 369.248, 55.1698, 0.645", "289.98, 368.573, 57.2592, 0.5662", "290.424, 367.987, 58.52, 0.4322" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_33",
    "id" : "apic_33",
    "points3d" : [ "290.068, 337.696, 32.3868, 0.5848", "289.445, 338.261, 32.2, 0.5348", "289.775, 339.31, 31.92, 0.5338" ],
    "parent" : "apic_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_30",
    "id" : "apic_30",
    "points3d" : [ "290.068, 337.696, 32.3868, 0.5848", "290.105, 337.478, 31.3883, 0.3038", "289.41, 336.796, 30.8266, 0.5412", "289.359, 335.805, 31.08, 0.5084", "289.318, 334.889, 29.9827, 0.5084", "289.537, 334.222, 28.9201, 0.7938", "289.314, 333.413, 29.8189, 0.5734", "289.012, 332.572, 30.6541, 0.4122", "288.249, 331.906, 30.4088, 0.262", "288.096, 331.159, 29.0746, 0.305", "287.945, 330.54, 29.972, 0.5592", "287.819, 329.753, 28.651, 0.4078", "287.622, 328.927, 28.2212, 0.483", "287.234, 327.997, 28.0, 0.5238", "286.406, 327.43, 28.5463, 0.3636", "285.379, 327.148, 27.9919, 0.5468", "284.877, 326.395, 26.9802, 0.6044", "284.005, 325.812, 26.8688, 0.4834", "283.481, 325.096, 26.9111, 0.483", "283.115, 324.299, 27.1603, 0.3056", "282.267, 324.093, 26.476, 0.234", "281.298, 323.752, 26.6874, 0.3338", "280.42, 323.816, 26.63, 0.3222", "279.579, 323.375, 26.857, 0.4816", "278.498, 323.07, 26.6916, 0.4326", "277.626, 322.949, 25.76, 0.5706", "276.95, 322.24, 26.3388, 0.4372", "275.977, 322.07, 25.7673, 0.4576", "274.981, 321.956, 24.6616, 0.6024", "274.243, 321.831, 25.9028, 0.4948", "273.145, 321.922, 25.716, 0.605", "272.424, 322.503, 24.638, 0.5784", "271.748, 322.551, 22.7035, 0.5276", "270.848, 322.689, 23.0023, 0.4008", "269.857, 322.862, 22.4932, 0.3814" ],
    "parent" : "apic_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_28",
    "id" : "apic_28",
    "points3d" : [ "342.628, 308.918, 20.6268, 0.4576", "343.137, 308.426, 20.5128, 0.4732" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_27",
    "id" : "apic_27",
    "points3d" : [ "342.628, 308.918, 20.6268, 0.4576", "343.42, 309.748, 21.2587, 0.3184", "344.071, 310.646, 21.7641, 0.2796", "344.758, 311.471, 22.0494, 0.3278", "345.846, 311.154, 22.1822, 0.3304", "346.974, 311.139, 21.947, 0.304", "347.925, 310.859, 21.7479, 0.2746", "348.545, 309.898, 21.7862, 0.2602", "348.788, 308.832, 21.6224, 0.2542", "348.827, 307.702, 21.5869, 0.2668", "348.762, 306.579, 21.5572, 0.2928", "348.259, 305.695, 21.3786, 0.305", "348.06, 303.663, 19.4102, 0.6232", "348.897, 302.934, 19.32, 0.6356", "349.796, 302.27, 19.465, 0.574", "350.692, 301.723, 19.7728, 0.5424", "351.305, 301.684, 19.8923, 0.4296", "352.016, 300.934, 19.5054, 0.5592", "352.434, 300.016, 20.16, 0.3628", "352.679, 299.119, 19.88, 0.3168", "353.279, 298.704, 19.0756, 0.2796", "353.603, 297.698, 19.3934, 0.5954", "353.569, 296.629, 18.7415, 0.6306", "353.428, 295.753, 18.6782, 0.251", "353.48, 294.891, 19.4062, 0.6834", "353.153, 293.895, 19.206, 0.4626", "353.231, 292.918, 18.76, 0.6592", "353.178, 291.856, 19.32, 0.3722", "353.744, 290.893, 19.6078, 0.3878", "353.94, 289.806, 20.0869, 0.4416", "354.078, 288.731, 20.72, 0.405", "354.64, 288.288, 19.32, 0.305" ],
    "parent" : "apic_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "257.629, 296.639, 43.96, 0.7372", "256.011, 296.698, 44.9501, 0.6472", "254.902, 296.736, 45.6288, 0.5858", "253.95, 296.858, 44.9366, 0.6934", "253.097, 296.748, 45.8354, 0.3926", "252.562, 297.5, 45.8088, 0.5948", "252.061, 298.263, 46.1437, 0.3508", "251.718, 298.927, 45.7472, 0.562", "251.019, 299.703, 46.1378, 0.4888", "250.879, 300.529, 45.9091, 0.253", "250.348, 300.971, 45.1931, 0.2288", "249.489, 301.068, 46.3456, 0.3622", "248.495, 300.986, 46.9482, 0.3182", "247.531, 301.144, 46.9288, 0.4178", "246.5, 301.22, 46.762, 0.356", "245.489, 301.625, 47.0109, 0.383", "244.602, 302.049, 46.2, 0.233", "244.38, 302.905, 46.5077, 0.5112", "243.863, 303.807, 47.2077, 0.3204", "243.473, 304.557, 46.9384, 0.3478", "243.467, 305.613, 46.7082, 0.571", "243.554, 306.471, 47.4116, 0.681", "243.577, 307.395, 48.5206, 0.6382", "243.999, 308.132, 48.7589, 0.4258", "243.558, 308.897, 48.5593, 0.2358", "243.558, 309.636, 46.7286, 0.4104", "243.214, 310.427, 45.4168, 0.2658", "243.434, 311.365, 45.8693, 0.4126", "243.407, 312.051, 47.6, 0.4524", "243.011, 313.073, 47.1414, 0.261", "242.535, 313.957, 46.5548, 0.4172", "242.168, 315.019, 46.4145, 0.5084", "241.826, 315.99, 45.876, 0.3446", "241.188, 316.839, 45.64, 0.4962", "240.123, 317.115, 45.6218, 0.3468", "239.32, 317.381, 45.1825, 0.3126", "238.349, 317.693, 45.1732, 0.3906", "237.795, 318.612, 45.5972, 0.3224", "237.282, 319.511, 44.8636, 0.3982", "236.465, 320.185, 44.8146, 0.2886", "235.72, 320.667, 44.24, 0.2288", "235.161, 321.664, 44.24, 0.2288", "234.544, 322.556, 43.701, 0.2288", "234.099, 323.573, 43.96, 0.2288", "233.935, 324.679, 43.7427, 0.2288", "233.143, 325.279, 43.68, 0.2288", "232.781, 326.339, 43.615, 0.2288", "232.003, 326.979, 43.4, 0.2288", "231.671, 328.002, 43.4, 0.2288", "231.364, 329.076, 43.4, 0.2288", "231.143, 330.126, 43.209, 0.2288", "230.772, 330.758, 42.6717, 0.4016", "230.63, 331.754, 43.4437, 0.3356", "230.596, 332.885, 43.12, 0.2796", "230.341, 333.983, 43.4, 0.2978", "229.954, 335.032, 43.12, 0.2488", "229.748, 336.138, 43.12, 0.2288", "229.571, 337.265, 43.12, 0.2288", "229.486, 338.346, 42.5877, 0.2288", "229.072, 339.354, 43.12, 0.2288", "229.029, 340.454, 43.12, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "257.629, 296.639, 43.96, 0.7372", "257.065, 295.747, 44.8678, 0.552", "256.724, 294.871, 46.3028, 0.3814", "256.22, 294.496, 45.6817, 0.7342", "255.896, 293.525, 45.9388, 0.7868", "255.788, 292.41, 45.4096, 0.6772", "255.169, 291.799, 45.0251, 0.972", "254.654, 291.252, 46.5273, 0.7106", "254.351, 290.576, 46.132, 0.5688", "253.739, 289.938, 46.058, 0.3322", "253.433, 289.267, 47.7621, 0.55", "253.078, 288.383, 47.1654, 0.4408", "252.774, 287.311, 46.8532, 0.4188", "252.349, 286.486, 47.0719, 0.6416", "252.043, 285.725, 48.1449, 0.5344", "251.975, 284.914, 49.3147, 0.4576", "251.206, 284.279, 50.3468, 0.4576", "250.554, 283.404, 50.0458, 0.6404", "249.994, 282.997, 48.16, 0.5624", "249.423, 282.463, 49.287, 0.6864", "249.125, 281.551, 49.9022, 0.5592" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "270.924, 265.726, 36.4, 0.4068", "271.117, 265.128, 36.12, 0.2628", "271.238, 264.243, 36.2631, 0.2288", "271.118, 263.172, 36.0511, 0.2504", "270.979, 262.24, 37.1862, 0.2362", "271.323, 261.248, 37.2089, 0.3262", "271.242, 260.548, 36.1147, 0.34", "271.128, 259.877, 35.3027, 0.4644", "271.184, 258.94, 36.1043, 0.3682", "271.471, 257.993, 35.8907, 0.327", "271.586, 257.068, 35.5264, 0.3808", "271.383, 256.065, 34.7922, 0.2894", "271.141, 254.999, 34.7516, 0.4574", "271.128, 254.057, 35.4824, 0.5338", "271.022, 253.477, 34.2278, 0.3966", "271.095, 252.552, 34.9602, 0.3272", "271.357, 251.681, 35.3447, 0.356", "271.801, 250.755, 35.2814, 0.432", "271.953, 249.928, 34.2157, 0.2892", "272.031, 249.073, 33.32, 0.5778", "272.541, 248.585, 35.0, 0.5338", "272.73, 247.586, 34.1986, 0.3354", "272.518, 246.564, 34.7589, 0.4386", "272.123, 245.498, 35.0, 0.538", "271.814, 244.448, 35.0297, 0.4888", "271.702, 243.338, 35.3186, 0.3318", "271.889, 242.529, 35.0, 0.494", "272.501, 241.831, 35.5236, 0.5596", "273.256, 241.182, 35.6112, 0.4576", "273.828, 240.275, 36.2239, 0.404", "274.126, 239.252, 36.0335, 0.345", "274.327, 238.182, 36.2085, 0.2288", "274.647, 237.256, 35.1226, 0.339", "275.151, 236.461, 35.7316, 0.3304", "275.704, 235.721, 35.5776, 0.391", "275.765, 234.668, 35.6908, 0.3934", "276.135, 233.749, 36.0923, 0.5112", "276.276, 232.79, 35.2531, 0.4576", "276.7, 231.967, 34.5369, 0.6476", "276.746, 230.964, 33.6, 0.4408", "276.993, 230.235, 33.8254, 0.4576", "277.857, 229.707, 34.16, 0.2288", "277.999, 228.622, 33.8125, 0.4104", "278.696, 227.83, 33.6129, 0.2612", "279.343, 227.102, 33.0711, 0.3024", "279.2, 226.207, 33.8484, 0.5848", "279.479, 225.826, 35.0, 0.483" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "270.924, 265.726, 36.4, 0.4068", "270.899, 265.866, 37.24, 0.4576" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "235.766, 327.997, 55.16, 0.305", "234.861, 327.603, 55.4764, 0.3224", "233.821, 327.15, 55.8398, 0.3426", "232.774, 326.705, 56.0871, 0.3444", "231.713, 326.28, 56.0871, 0.3076", "230.632, 325.979, 56.0871, 0.2656", "229.537, 325.848, 56.0871, 0.2288", "228.514, 325.336, 56.0871, 0.2288", "227.514, 324.78, 56.0871, 0.2288", "226.531, 324.196, 56.0871, 0.2288", "225.574, 323.57, 56.0871, 0.2288", "224.615, 322.945, 56.0871, 0.2288" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "235.766, 327.997, 55.16, 0.305", "235.435, 328.557, 55.16, 0.2288" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "394.744, 371.533, 34.4089, 0.356", "394.132, 370.999, 33.8898, 0.405", "393.295, 370.307, 33.4527, 0.3358", "392.194, 370.095, 33.8008, 0.3828", "391.088, 369.97, 33.9741, 0.4406", "390.141, 370.362, 34.3882, 0.4348", "389.194, 370.905, 34.72, 0.3298", "388.366, 371.675, 34.72, 0.3746", "387.355, 371.89, 35.4945, 0.4576", "386.251, 371.914, 35.2262, 0.4576", "385.204, 372.065, 35.1434, 0.4128", "384.08, 372.251, 35.0, 0.4562", "382.973, 372.486, 35.373, 0.3814", "381.9, 372.547, 34.7393, 0.5382", "380.981, 372.769, 35.5846, 0.5192", "380.151, 373.021, 36.0769, 0.3176", "379.363, 373.334, 36.8822, 0.356", "378.439, 372.944, 36.4, 0.5086", "377.634, 373.381, 35.4897, 0.2574", "377.041, 374.009, 36.3947, 0.5428", "376.332, 374.725, 37.2814, 0.5592", "375.299, 374.954, 37.5794, 0.3498", "374.397, 375.461, 38.08, 0.2288", "373.833, 375.909, 38.2687, 0.3438", "373.678, 376.823, 37.6214, 0.386", "372.884, 377.626, 37.8, 0.4288", "372.07, 377.978, 38.3062, 0.6092", "371.213, 377.863, 39.3232, 0.2288", "370.315, 377.378, 38.92, 0.3692", "369.449, 377.011, 39.6841, 0.3466", "368.335, 377.062, 39.76, 0.5486", "367.303, 377.177, 39.3705, 0.3814", "366.421, 376.855, 39.7869, 0.3576", "365.599, 377.084, 41.1348, 0.2748", "364.704, 377.613, 40.5958, 0.2686", "364.059, 378.319, 40.0674, 0.6066", "363.334, 378.537, 39.44, 0.7054", "362.752, 379.307, 40.2749, 0.291", "361.62, 379.316, 40.32, 0.2998", "360.525, 379.272, 40.8702, 0.4336", "360.178, 379.613, 39.503, 0.5084", "359.781, 379.292, 37.5351, 0.3304", "359.318, 379.35, 40.0089, 0.4576" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "394.744, 371.533, 34.4089, 0.356", "395.329, 372.096, 33.88, 0.4448", "396.167, 372.551, 33.1643, 0.4576" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "263.869, 298.241, 18.4806, 0.5338", "263.036, 298.382, 16.9333, 0.2414", "262.135, 299.022, 16.2985, 0.2288", "261.326, 299.83, 16.282, 0.2288", "260.576, 300.691, 16.4343, 0.2538", "259.75, 301.437, 17.0794, 0.2796", "258.743, 301.778, 16.214, 0.3304", "257.834, 301.22, 15.2989, 0.3304", "257.244, 300.565, 13.564, 0.3238", "256.358, 300.409, 12.8741, 0.273", "255.514, 300.576, 14.7162, 0.2466", "254.604, 300.779, 16.1795, 0.2288", "253.742, 301.362, 17.075, 0.2288", "253.21, 302.152, 17.3463, 0.2288", "252.984, 302.204, 15.5907, 0.2288", "252.763, 301.76, 13.638, 0.241", "251.869, 301.785, 12.1612, 0.2674", "251.1, 301.237, 12.2864, 0.2966", "251.409, 300.903, 14.238, 0.284", "251.916, 301.2, 16.6026, 0.2572", "251.817, 302.241, 17.01, 0.23", "251.451, 303.274, 16.24, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "263.869, 298.241, 18.4806, 0.5338", "262.928, 296.907, 18.4859, 0.7118", "262.291, 295.956, 18.5091, 0.7118", "261.611, 295.038, 18.62, 0.661" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "290.424, 367.987, 58.52, 0.4322", "290.561, 367.875, 59.4359, 0.3006", "290.393, 367.064, 60.5357, 0.2288", "289.727, 366.538, 61.3404, 0.4068", "289.368, 365.831, 61.8419, 0.4364", "289.941, 365.254, 62.519, 0.4576", "290.536, 364.902, 64.3983, 0.4082", "290.174, 363.934, 63.84, 0.3428", "289.657, 363.079, 64.2852, 0.2894", "289.318, 362.208, 64.68, 0.2506", "289.332, 361.639, 63.1912, 0.2522", "289.149, 361.467, 60.4593, 0.2482", "288.967, 361.296, 57.7273, 0.2444", "288.784, 361.123, 54.9956, 0.2404", "288.602, 360.951, 52.2637, 0.2366", "288.418, 360.78, 49.5317, 0.2326", "288.237, 360.608, 46.8, 0.2288", "287.544, 359.716, 46.7289, 0.2288", "286.802, 358.859, 46.7149, 0.2288", "285.831, 358.254, 46.7561, 0.2288", "284.949, 357.586, 46.8082, 0.2288", "284.332, 356.731, 46.858, 0.2288", "283.292, 356.292, 46.6906, 0.2782", "282.793, 355.27, 46.809, 0.3814" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "290.424, 367.987, 58.52, 0.4322", "290.645, 367.727, 58.688, 0.6102", "291.626, 367.321, 59.36, 0.6768", "292.497, 366.615, 59.4339, 0.5954", "292.872, 365.653, 59.9701, 0.3224", "293.665, 365.165, 61.04, 0.3304" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_32",
    "id" : "apic_32",
    "points3d" : [ "269.857, 322.862, 22.4932, 0.3814", "269.271, 322.951, 22.4319, 0.48", "268.284, 323.201, 22.0886, 0.483", "267.336, 323.189, 21.7022, 0.5338", "266.351, 322.989, 21.1994, 0.465", "265.83, 323.497, 22.8928, 0.3814", "265.298, 323.989, 21.6639, 0.4492", "265.187, 324.756, 21.0683, 0.2442", "264.608, 325.354, 21.2783, 0.4578", "263.801, 325.64, 21.0157, 0.3558", "262.696, 325.552, 21.0356, 0.6042", "261.707, 325.593, 21.4749, 0.2564", "260.928, 325.752, 21.7305, 0.4068", "260.057, 325.775, 21.0339, 0.3814", "259.345, 325.905, 21.3052, 0.2912", "258.78, 326.214, 19.3486, 0.3342", "257.766, 326.15, 19.1464, 0.4576", "257.4, 326.382, 20.4674, 0.2288", "256.811, 325.793, 20.6774, 0.4066", "256.147, 325.24, 19.0994, 0.5316", "255.091, 325.165, 19.0725, 0.5066", "254.734, 324.609, 18.1877, 0.523", "253.787, 324.196, 17.8245, 0.4824", "252.957, 323.52, 17.92, 0.2468", "252.046, 323.087, 17.5305, 0.2858", "251.105, 323.608, 17.3564, 0.5084", "250.327, 323.172, 16.3918, 0.4576", "249.303, 322.876, 17.2875, 0.3436", "248.317, 322.952, 16.9501, 0.4554", "247.79, 322.951, 15.68, 0.5338" ],
    "parent" : "apic_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_31",
    "id" : "apic_31",
    "points3d" : [ "269.857, 322.862, 22.4932, 0.3814", "269.412, 322.816, 22.7172, 0.4766", "268.954, 322.494, 23.8, 0.2796" ],
    "parent" : "apic_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "249.125, 281.551, 49.9022, 0.5592", "248.388, 280.598, 49.28, 0.6356" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "249.125, 281.551, 49.9022, 0.5592", "248.563, 281.624, 48.8846, 0.3366", "247.492, 281.427, 49.5628, 0.4926", "246.751, 280.798, 49.3511, 0.503", "245.852, 280.381, 50.1315, 0.562", "245.282, 279.885, 50.1273, 0.4338", "244.567, 279.454, 49.28, 0.6102", "243.681, 278.792, 49.6138, 0.5836", "243.012, 278.161, 50.6066, 0.6764", "242.311, 277.403, 51.2865, 0.5884", "241.975, 276.657, 50.4053, 0.4786", "241.475, 275.798, 50.8094, 0.5174", "240.724, 275.103, 51.8507, 0.356", "240.234, 274.207, 52.0618, 0.4576", "239.71, 273.383, 52.1007, 0.4406", "239.583, 272.451, 53.1185, 0.661", "238.947, 271.92, 52.7853, 0.4864", "238.594, 271.185, 53.6505, 0.3942", "237.834, 270.421, 53.9773, 0.3304", "237.029, 270.385, 54.3074, 0.4678", "236.323, 269.753, 53.5836, 0.5686", "235.672, 269.018, 54.2688, 0.4022", "235.062, 268.245, 53.7323, 0.4322", "234.568, 267.379, 53.5648, 0.4948", "234.137, 266.677, 54.0492, 0.422", "234.046, 266.427, 56.2489, 0.458", "233.719, 265.331, 56.2489, 0.5032", "232.846, 264.652, 56.0311, 0.4386", "232.242, 264.075, 54.9332, 0.434", "231.721, 263.27, 54.9489, 0.4576", "231.01, 262.901, 55.5892, 0.5086", "230.794, 262.248, 55.9908, 0.5174", "230.601, 261.386, 56.5454, 0.6864", "230.064, 260.482, 55.5845, 0.4848", "229.83, 259.625, 54.5714, 0.8554", "229.596, 258.785, 54.6501, 0.5868", "228.809, 258.36, 55.8144, 0.643", "228.503, 257.406, 56.4029, 0.4764", "228.588, 256.598, 56.84, 0.3752", "228.259, 255.505, 56.8851, 0.3418", "227.594, 254.732, 57.3448, 0.3926", "226.86, 254.167, 56.6222, 0.5338", "226.167, 253.338, 56.9898, 0.3972", "225.904, 252.379, 57.12, 0.3968", "225.399, 251.361, 57.3017, 0.5332", "225.145, 250.733, 58.3472, 0.5988", "224.644, 250.15, 59.6285, 0.451", "224.621, 249.208, 59.0848, 0.6394", "223.909, 248.572, 59.64, 0.5534", "223.881, 247.957, 59.8441, 0.6244", "223.012, 247.599, 59.3158, 0.5098", "222.966, 246.646, 60.48, 0.6102" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "359.318, 379.35, 40.0089, 0.4576", "359.445, 378.65, 40.8708, 0.3534", "359.492, 377.541, 40.3816, 0.3224", "360.192, 376.754, 40.3472, 0.4256", "361.255, 376.941, 40.2298, 0.4716", "361.904, 376.263, 41.1191, 0.5228", "362.447, 375.964, 41.515, 0.4928", "363.106, 375.38, 42.1775, 0.3224", "363.563, 374.485, 42.2528, 0.5592", "364.183, 373.791, 42.0, 0.3216", "365.243, 373.415, 41.7004, 0.3358", "366.157, 373.043, 42.5138, 0.4292", "367.186, 372.875, 43.1015, 0.498", "368.049, 372.415, 42.5309, 0.4464", "368.565, 371.867, 41.9955, 0.375", "368.911, 370.956, 41.9356, 0.4668", "369.695, 370.966, 42.2554, 0.651", "370.302, 370.105, 42.84, 0.5638", "371.272, 369.654, 43.2916, 0.4158", "372.354, 369.405, 43.4361, 0.3354", "373.485, 369.432, 43.2706, 0.4464", "374.232, 369.398, 43.7108, 0.6814", "375.134, 369.169, 44.3694, 0.6864", "376.018, 368.683, 44.8, 0.5214", "376.376, 367.873, 43.7732, 0.305" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "359.318, 379.35, 40.0089, 0.4576", "359.183, 380.001, 40.04, 0.517", "358.524, 380.842, 39.949, 0.4138", "358.022, 381.039, 37.8619, 0.4286", "357.593, 381.484, 39.968, 0.5518", "356.862, 381.554, 41.3596, 0.661", "355.929, 382.048, 41.1018, 0.483", "355.664, 382.365, 40.2892, 0.4212", "354.98, 382.533, 40.5706, 0.6034", "354.055, 382.73, 40.6, 0.548", "353.566, 383.497, 41.1533, 0.4576", "353.089, 384.397, 40.9732, 0.6102", "352.247, 385.126, 41.44, 0.4576", "351.699, 385.931, 40.5871, 0.6282", "351.481, 386.906, 39.76, 0.613", "350.651, 387.451, 40.0075, 0.5226", "349.767, 387.784, 39.7818, 0.5492", "349.074, 388.459, 39.6984, 0.9066", "348.208, 388.96, 40.0128, 0.5974", "347.62, 389.637, 39.76, 0.5154", "346.523, 389.706, 40.0711, 0.4576", "345.625, 389.993, 40.6137, 0.4576", "344.95, 390.562, 39.76, 0.483", "344.492, 390.333, 38.08, 0.74", "343.551, 390.532, 37.9854, 0.3814", "343.027, 391.122, 38.722, 0.4038", "342.058, 391.591, 38.36, 0.5328", "341.267, 391.477, 38.7943, 0.4908", "340.509, 391.897, 39.6838, 0.8042", "339.921, 392.278, 39.3649, 0.4866", "338.905, 392.529, 40.0218, 0.5404", "338.195, 393.264, 40.4678, 0.565", "337.516, 393.992, 39.7645, 0.4408", "337.292, 394.484, 37.5225, 0.4556", "336.535, 395.13, 37.7451, 0.518", "335.833, 395.802, 37.2537, 0.733", "334.875, 396.092, 37.7474, 0.4674", "334.275, 396.797, 38.36, 0.813", "333.476, 397.311, 37.6709, 0.4322", "332.538, 397.018, 37.0154, 0.5976", "331.731, 396.739, 35.84, 0.464", "330.861, 397.192, 35.434, 0.7118", "330.09, 397.049, 35.5359, 0.6562", "329.296, 396.864, 36.2076, 0.7072", "328.526, 397.184, 37.6566, 0.6804", "327.619, 396.833, 36.9667, 0.4268", "327.134, 396.633, 35.5225, 0.5238", "326.217, 396.523, 34.2513, 0.3826", "325.535, 396.968, 34.9423, 0.673", "324.464, 397.197, 35.2884, 0.6102", "323.637, 396.968, 35.5902, 0.5184", "322.656, 396.739, 35.0154, 0.3434", "321.727, 397.197, 35.2876, 0.5716", "320.788, 396.859, 36.12, 0.7044", "319.748, 396.51, 35.84, 0.483" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "396.167, 372.551, 33.1643, 0.4576", "396.592, 372.949, 33.2268, 0.383", "397.327, 373.715, 33.1453, 0.5418", "397.694, 374.592, 32.8703, 0.2386", "398.383, 375.357, 32.76, 0.2288", "399.317, 375.999, 32.7578, 0.2288", "400.109, 376.645, 32.76, 0.2288", "400.961, 377.384, 32.76, 0.2288", "401.664, 378.254, 32.76, 0.2668", "402.335, 379.142, 32.76, 0.2938", "403.284, 379.561, 33.2833, 0.2488", "404.294, 380.04, 32.9918, 0.563", "405.308, 380.345, 33.0333, 0.2896", "406.422, 380.406, 32.6018, 0.2288", "407.48, 380.75, 32.1376, 0.2288", "408.434, 381.316, 31.64, 0.312", "409.316, 382.017, 31.2348, 0.432", "410.207, 382.723, 31.08, 0.2672", "410.782, 383.674, 31.08, 0.2288", "411.738, 384.201, 31.1044, 0.2338", "412.25, 384.757, 32.608, 0.548", "413.268, 384.398, 32.226, 0.3612", "414.087, 384.613, 32.1314, 0.3848", "414.993, 385.036, 31.92, 0.4576", "415.961, 385.538, 31.7419, 0.4054", "416.614, 386.11, 31.309, 0.3974", "417.446, 386.483, 32.4512, 0.3586", "418.036, 386.958, 31.4381, 0.4566", "418.147, 387.973, 32.0832, 0.6568", "419.039, 388.159, 32.8843, 0.286", "419.686, 388.617, 33.6, 0.3346", "420.715, 388.804, 34.4226, 0.2684", "421.826, 388.625, 34.72, 0.2288", "422.689, 388.617, 33.3572, 0.572", "423.614, 388.968, 33.88, 0.4914", "424.477, 389.448, 33.8828, 0.3256", "425.527, 389.614, 34.5685, 0.4672", "426.635, 389.659, 34.7354, 0.661", "427.177, 390.335, 34.694, 0.8474", "427.812, 390.969, 34.9034, 0.4698", "427.993, 391.944, 34.1468, 0.2464", "428.508, 392.876, 34.7071, 0.421", "429.186, 393.68, 34.16, 0.5356", "429.94, 394.426, 34.16, 0.3814", "430.576, 395.239, 33.833, 0.377", "431.167, 395.976, 33.4718, 0.3882", "431.973, 396.505, 34.2622, 0.4156", "432.66, 397.181, 34.72, 0.23", "433.371, 397.721, 33.922, 0.3132", "434.202, 398.246, 33.6748, 0.471", "434.687, 398.567, 33.6417, 0.415", "435.584, 398.455, 33.796, 0.498", "436.678, 398.557, 33.88, 0.4836", "437.471, 398.716, 33.2741, 0.6224", "438.211, 398.74, 33.4642, 0.369", "439.026, 398.614, 33.6924, 0.5014", "439.982, 398.913, 32.76, 0.3814" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "396.167, 372.551, 33.1643, 0.4576", "396.282, 373.173, 34.72, 0.4322" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "261.611, 295.038, 18.62, 0.661", "261.558, 294.532, 16.9543, 0.2616", "260.976, 294.491, 15.1875, 0.3222", "259.902, 294.881, 15.218, 0.356", "258.877, 295.271, 15.7959, 0.3366", "258.012, 295.737, 17.2021, 0.2842", "257.27, 296.418, 18.1712, 0.243", "256.389, 296.908, 17.7859, 0.2288", "256.064, 296.354, 16.7219, 0.2288", "256.09, 295.296, 15.757, 0.2288", "255.898, 294.214, 16.0994, 0.2288", "255.613, 293.143, 16.7947, 0.2288", "255.382, 292.121, 17.8914, 0.2488", "254.613, 291.434, 18.7561, 0.2748", "253.554, 291.059, 19.1251, 0.3006", "252.642, 291.139, 17.7044, 0.283", "251.846, 291.53, 15.9541, 0.2568", "251.574, 291.039, 13.6618, 0.2294", "251.909, 290.004, 12.88, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "261.611, 295.038, 18.62, 0.661", "261.365, 294.634, 18.8754, 0.605", "260.93, 293.619, 19.4855, 0.7092", "260.621, 292.518, 19.6, 0.788", "260.559, 291.377, 19.6, 0.7626" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "248.388, 280.598, 49.28, 0.6356", "247.88, 280.42, 48.72, 0.483" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "248.388, 280.598, 49.28, 0.6356", "248.531, 279.479, 50.3552, 0.5864", "249.35, 278.986, 51.3752, 0.5226", "249.191, 278.035, 50.5926, 0.3814", "249.506, 277.151, 51.711, 0.484", "249.527, 276.281, 52.5893, 0.5512", "250.323, 275.666, 51.8263, 0.276", "250.546, 274.654, 52.3508, 0.5312", "250.903, 273.9, 52.4465, 0.2664", "250.879, 272.812, 52.92, 0.3414", "251.227, 271.885, 53.2734, 0.4748", "251.658, 271.239, 53.7068, 0.4744", "251.794, 270.458, 54.2497, 0.4576", "251.794, 269.545, 55.0642, 0.4576", "251.68, 268.847, 54.962, 0.6746", "252.19, 268.165, 55.5307, 0.23", "252.722, 267.355, 54.7929, 0.415", "253.148, 266.539, 56.1554, 0.4448", "253.732, 265.606, 56.203, 0.5338", "253.396, 264.725, 56.5452, 0.5084", "253.107, 263.778, 56.3046, 0.4576", "253.675, 262.849, 56.3634, 0.5008", "254.311, 262.22, 56.6989, 0.7786", "254.654, 261.404, 58.002, 0.5822", "254.581, 260.35, 57.6265, 0.2368", "253.919, 259.909, 56.7602, 0.2652", "253.731, 259.345, 57.5523, 0.743", "253.865, 258.558, 57.1096, 0.356", "254.804, 258.417, 57.148, 0.646", "255.633, 258.094, 58.0398, 0.4078", "256.332, 257.439, 58.3862, 0.3304", "257.345, 257.154, 58.7997, 0.5254", "258.147, 256.861, 60.1888, 0.357", "259.141, 256.485, 60.2, 0.486", "259.886, 256.899, 61.3021, 0.6138", "260.641, 257.514, 62.6268, 0.3814" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "222.966, 246.646, 60.48, 0.6102", "223.806, 247.008, 61.161, 0.5598", "224.224, 247.905, 59.92, 0.5592" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "222.966, 246.646, 60.48, 0.6102", "222.285, 246.133, 61.6753, 0.3778", "221.484, 245.588, 61.88, 0.3746", "221.006, 245.04, 60.1888, 0.4728", "220.471, 244.806, 60.76, 0.2542", "219.649, 244.13, 60.48, 0.4576", "219.222, 243.764, 62.5162, 0.4642", "218.632, 243.131, 63.4094, 0.5338", "218.374, 242.323, 64.4028, 0.6528", "217.562, 241.759, 64.3283, 0.618", "216.816, 240.934, 64.12, 0.7452", "216.07, 240.095, 64.3737, 1.0106", "215.465, 239.363, 65.2288, 1.0262", "215.018, 238.537, 66.0988, 0.8544", "214.125, 237.945, 66.5414, 0.6764", "213.374, 237.105, 66.6534, 0.6864", "213.469, 236.236, 66.9186, 0.5342", "212.62, 235.666, 65.8, 0.6716", "212.437, 234.775, 66.642, 0.3844", "211.75, 234.314, 67.0466, 0.6874", "211.252, 233.605, 67.7359, 0.964", "210.573, 232.78, 67.7757, 0.6868", "209.902, 232.041, 67.1216, 0.6562", "209.452, 231.192, 66.9393, 0.753", "208.995, 230.378, 67.6855, 0.706", "208.481, 229.69, 68.88, 0.8982", "207.979, 228.722, 68.698, 0.5138", "207.511, 228.228, 69.953, 0.775", "207.014, 227.491, 70.5186, 0.5848", "206.393, 226.694, 70.74, 0.9442", "205.577, 225.715, 68.9307, 0.4938", "205.007, 225.049, 69.7799, 0.6408", "204.355, 224.286, 69.19, 0.4576", "203.888, 223.761, 70.6776, 0.755", "203.696, 223.051, 70.6726, 0.6536", "202.979, 222.652, 71.4692, 0.944", "202.614, 221.697, 71.6864, 0.7072", "201.974, 221.012, 72.142, 0.745", "201.36, 220.156, 71.2379, 0.4872", "201.184, 219.909, 72.266, 0.2288", "200.812, 219.171, 73.67, 0.3314", "200.289, 218.226, 74.403, 0.3954", "199.846, 217.223, 73.7769, 0.5552", "199.523, 216.37, 72.6037, 0.553", "198.801, 215.57, 72.4802, 0.788", "198.24, 214.662, 72.0619, 0.4576", "198.016, 214.089, 74.1482, 0.5636", "197.508, 213.334, 75.0126, 0.8346", "196.917, 212.538, 74.6911, 0.4846", "196.547, 211.737, 75.3514, 0.6864", "195.971, 211.021, 75.7884, 0.9116", "195.655, 210.146, 75.7711, 0.6312", "194.963, 209.768, 74.2092, 0.9838", "194.594, 208.805, 75.0795, 0.79", "194.224, 207.935, 75.8545, 0.8526", "192.9, 206.724, 77.1, 0.847", "192.415, 206.031, 77.5869, 0.6596", "191.895, 205.39, 77.3111, 0.5134", "191.571, 204.654, 77.28, 0.5168", "190.86, 203.976, 77.9212, 1.0678", "190.769, 203.447, 79.8238, 0.7722", "190.247, 202.732, 80.0873, 0.8908", "190.028, 201.706, 80.2984, 0.7114", "189.247, 201.152, 80.0103, 0.7512", "189.007, 200.395, 78.5932, 0.7642", "188.765, 199.908, 80.1206, 0.449", "188.261, 199.229, 79.6816, 0.6318", "187.344, 198.747, 79.002, 0.8598", "186.643, 197.957, 79.469, 0.7172", "185.953, 197.46, 80.3799, 0.8908", "185.573, 197.198, 82.04, 0.839", "185.131, 196.19, 82.2343, 0.7372", "184.346, 195.418, 82.7114, 0.6626", "183.607, 194.623, 83.4165, 0.7622", "183.329, 193.548, 83.72, 0.9204", "182.72, 192.732, 83.5853, 0.723", "182.121, 191.829, 83.8956, 0.706", "181.477, 191.138, 82.88, 0.7626", "180.972, 190.209, 82.9116, 0.6076", "180.315, 189.418, 82.88, 0.7408", "179.608, 189.001, 83.54, 0.4638", "179.4, 188.181, 84.5513, 0.6102", "178.912, 187.33, 84.6866, 0.7382", "178.02, 186.758, 84.9971, 0.6784", "177.573, 185.824, 84.84, 0.5906", "177.092, 184.877, 84.0062, 0.8116", "176.61, 184.083, 84.0118, 0.642", "175.84, 183.495, 84.5995, 0.8348", "175.487, 182.944, 85.8561, 0.6696", "174.934, 182.158, 86.6746, 0.483", "174.677, 181.324, 85.9636, 0.8614", "174.34, 180.595, 87.08, 0.7494", "173.639, 179.934, 86.8935, 0.8218", "173.381, 178.975, 86.8045, 0.6848", "173.077, 178.332, 87.3152, 0.4776", "172.829, 177.423, 86.133, 0.6102", "172.058, 176.698, 86.5354, 0.8136", "171.694, 176.128, 88.2837, 0.6772", "171.199, 175.261, 89.0798, 0.4704", "170.662, 174.683, 89.7005, 0.6736", "170.156, 173.745, 88.7788, 0.5832", "169.508, 173.054, 89.32, 0.659", "169.073, 172.38, 88.2059, 0.6198", "168.337, 171.695, 88.4366, 0.3562", "167.583, 171.261, 89.6221, 0.7774", "167.068, 170.576, 90.72, 0.6974", "166.692, 169.577, 90.9504, 0.5472", "166.01, 168.68, 90.8214, 0.723", "165.533, 167.865, 89.4449, 0.9818", "164.776, 167.209, 89.5843, 0.8522", "164.202, 166.258, 89.6132, 0.733", "163.883, 165.66, 91.0482, 0.674", "163.701, 164.641, 90.5915, 0.675", "163.396, 163.616, 91.0115, 0.4682", "163.331, 162.735, 91.56, 0.4458", "162.835, 161.907, 91.9881, 0.6982", "162.079, 161.137, 92.694, 0.5962", "161.176, 160.507, 93.1837, 0.4754", "160.76, 159.505, 93.2467, 0.4068", "160.256, 158.572, 93.7045, 0.4188", "159.749, 157.923, 93.0404, 0.5796", "159.461, 156.962, 93.5558, 0.5354", "159.135, 156.029, 94.5098, 0.4412", "158.604, 155.166, 95.1686, 0.3476", "158.288, 154.089, 94.92, 0.2384", "157.753, 153.217, 95.2812, 0.6454", "157.424, 152.129, 95.2, 0.6568", "157.057, 151.055, 95.4198, 0.583", "156.662, 150.198, 96.8103, 0.521", "156.23, 149.4, 97.7693, 0.5202", "155.758, 148.598, 97.071, 0.7822", "155.332, 147.764, 96.9422, 0.6244", "154.898, 146.955, 98.4326, 0.2802", "154.324, 146.061, 98.84, 0.2288", "153.605, 145.314, 98.8308, 0.2364", "152.816, 144.54, 98.4931, 0.3796", "152.246, 143.593, 98.7792, 0.3692", "151.554, 142.862, 99.12, 0.6244", "150.756, 142.264, 98.7109, 0.4576", "149.993, 141.833, 99.6128, 0.5338", "149.7, 140.942, 100.614, 0.6784", "149.37, 139.933, 101.39, 0.4168", "149.159, 138.855, 102.012, 0.248", "148.519, 137.926, 102.2, 0.2288", "147.655, 137.314, 102.467, 0.2288", "146.994, 136.424, 102.48, 0.2672", "146.475, 135.46, 102.787, 0.345", "146.215, 134.435, 103.141, 0.327", "145.756, 133.545, 103.9, 0.2288", "145.342, 132.52, 104.16, 0.2288", "144.477, 131.895, 104.227, 0.245", "143.708, 131.117, 104.429, 0.4232", "143.562, 130.569, 106.387, 0.334", "143.12, 129.718, 106.699, 0.3878", "142.781, 128.793, 106.238, 0.4576", "142.426, 127.861, 106.788, 0.3814", "142.078, 127.046, 107.8, 0.3428", "141.704, 125.992, 107.8, 0.3814", "141.068, 125.109, 107.825, 0.265", "140.229, 124.528, 108.547, 0.2288", "139.455, 123.706, 108.64, 0.2288", "138.859, 122.965, 109.482, 0.2288", "138.534, 122.02, 109.913, 0.2624", "137.952, 121.089, 110.247, 0.2382", "137.192, 120.313, 111.055, 0.3028", "136.703, 119.311, 111.517, 0.4068", "136.16, 118.338, 112.0, 0.324", "136.033, 117.324, 112.572, 0.232", "136.23, 116.288, 113.346, 0.2682", "136.086, 115.179, 113.68, 0.2974", "135.768, 114.082, 113.68, 0.4576" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "376.376, 367.873, 43.7732, 0.305", "377.117, 367.156, 44.8291, 0.4846", "378.01, 366.806, 45.0825, 0.3044", "378.685, 366.095, 45.1637, 0.3236", "379.168, 365.337, 45.9732, 0.4068", "380.02, 364.793, 46.6575, 0.4894", "380.609, 364.242, 47.6966, 0.4182", "380.936, 363.316, 47.1383, 0.428", "381.467, 362.402, 47.3833, 0.2346", "382.216, 361.554, 47.32, 0.2288", "382.937, 360.818, 47.32, 0.2288", "383.949, 360.493, 47.3088, 0.238", "384.731, 359.787, 47.0977, 0.2892", "385.491, 359.052, 47.6, 0.306", "385.811, 357.995, 47.8464, 0.4068", "386.392, 357.031, 47.5714, 0.2584", "387.435, 356.92, 47.2458, 0.2814", "388.52, 356.756, 47.8979, 0.275", "389.403, 356.096, 47.978, 0.2434", "390.06, 355.16, 47.978, 0.2288", "390.706, 354.22, 48.1034, 0.2288", "391.375, 353.311, 48.5416, 0.2288", "392.044, 352.4, 48.9796, 0.2288", "392.714, 351.489, 49.4178, 0.2288", "393.383, 350.58, 49.856, 0.2288", "393.892, 349.569, 50.0055, 0.2288", "394.316, 348.507, 50.0055, 0.2288" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "376.376, 367.873, 43.7732, 0.305", "375.918, 367.682, 43.68, 0.305" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "319.748, 396.51, 35.84, 0.483", "319.987, 397.26, 36.0366, 0.6826", "320.471, 397.999, 35.2884, 0.4554", "321.426, 397.908, 36.2471, 0.424", "321.442, 398.52, 38.3443, 0.3448", "321.636, 399.46, 38.5795, 0.2418", "322.062, 400.025, 37.24, 0.3966", "322.526, 400.933, 36.9874, 0.4292", "322.773, 401.997, 36.9496, 0.3132", "323.179, 402.679, 35.3444, 0.257", "323.603, 403.26, 33.8366, 0.2542", "323.867, 404.176, 33.8803, 0.2544", "324.665, 404.573, 34.5604, 0.2412", "325.239, 404.903, 35.331, 0.4954", "325.255, 406.03, 35.6014, 0.431", "325.256, 407.153, 35.84, 0.3856", "325.435, 408.144, 36.6506, 0.3814", "325.471, 409.147, 35.6468, 0.3814", "325.736, 409.877, 37.1683, 0.2718", "325.697, 410.888, 36.8656, 0.5528", "325.81, 411.898, 35.8918, 0.3788", "325.683, 413.01, 36.0612, 0.6544", "325.689, 414.09, 36.251, 0.8452", "325.357, 415.043, 36.3311, 0.6158", "325.609, 415.96, 37.6037, 0.6864", "325.804, 416.863, 37.3937, 0.5138", "326.043, 417.712, 37.8328, 0.2348", "326.3, 418.777, 37.2907, 0.3422", "326.577, 419.853, 36.6489, 0.5382", "326.956, 420.666, 37.4965, 0.5842", "327.121, 421.504, 38.5434, 0.5404", "326.726, 422.337, 37.5738, 0.579", "326.726, 423.41, 38.1671, 0.6266", "326.44, 424.44, 38.4423, 0.6012", "326.371, 425.416, 38.7649, 0.5084", "326.279, 426.42, 39.2269, 0.5558", "326.407, 426.887, 41.2261, 0.491", "326.602, 427.681, 40.0582, 0.6154", "326.611, 428.531, 39.8115, 0.437", "326.691, 429.01, 40.4762, 0.3664", "327.181, 429.819, 40.2114, 0.3794", "327.629, 430.739, 40.88, 0.6096", "327.645, 431.881, 40.9004, 0.552", "327.756, 432.758, 42.0, 0.2736", "327.424, 433.69, 41.7236, 0.6864", "327.03, 434.321, 41.8681, 0.519", "327.07, 435.149, 40.6, 0.6164", "327.177, 436.085, 41.8146, 0.3406", "326.845, 436.661, 42.8425, 0.38", "326.573, 437.603, 43.4308, 0.6606", "326.896, 438.509, 44.7199, 0.3196", "327.192, 439.457, 43.692, 0.4126", "327.53, 440.541, 43.8869, 0.6158", "328.262, 441.282, 44.4058, 0.4436", "328.749, 442.247, 44.3265, 0.3542", "328.878, 442.957, 43.5341, 0.2432", "328.946, 444.0, 43.3107, 0.3232", "329.751, 444.595, 42.574, 0.2288", "330.077, 445.677, 42.56, 0.2288", "330.376, 446.753, 42.7403, 0.434", "330.405, 447.179, 44.6519, 0.3184", "330.733, 447.741, 46.5478, 0.356", "330.957, 448.606, 45.9763, 0.4782", "331.157, 449.61, 45.92, 0.2542", "331.372, 450.614, 46.879, 0.483", "331.467, 451.739, 47.2268, 0.393", "331.682, 452.841, 47.4578, 0.3172", "331.76, 453.526, 47.6854, 0.4146", "332.103, 454.091, 48.4089, 0.6864", "332.461, 454.864, 47.88, 0.6404", "332.904, 455.541, 46.76, 0.3814" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "319.748, 396.51, 35.84, 0.483", "318.836, 396.55, 36.9866, 0.501", "318.721, 395.938, 36.1304, 0.4576", "317.978, 395.257, 35.8204, 0.3506", "317.174, 394.681, 35.7185, 0.3394", "316.242, 394.232, 36.6596, 0.3814", "315.286, 393.879, 35.84, 0.483" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "260.559, 291.377, 19.6, 0.7626", "261.211, 291.167, 23.0731, 0.264", "261.332, 291.735, 25.429, 0.3014", "261.34, 292.518, 27.4683, 0.3304", "261.052, 292.654, 29.4815, 0.3304", "260.233, 292.136, 30.6804, 0.3156", "259.17, 291.987, 31.3396, 0.305", "258.053, 292.146, 31.5524, 0.305", "256.954, 292.0, 31.2376, 0.2876", "255.883, 291.798, 31.7621, 0.2618", "254.997, 292.18, 32.9613, 0.2358", "254.207, 292.922, 33.7809, 0.2288", "253.831, 293.878, 33.0526, 0.249", "253.907, 294.736, 31.2824, 0.2956", "253.217, 295.333, 29.9491, 0.3486", "252.114, 295.441, 29.9594, 0.4032", "251.451, 295.038, 31.92, 0.4576" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "260.559, 291.377, 19.6, 0.7626", "260.014, 289.921, 19.6003, 0.6224", "259.345, 288.995, 19.6011, 0.678", "258.729, 288.032, 19.605, 0.6652", "258.369, 286.952, 19.6297, 0.618", "258.351, 285.819, 19.8562, 0.545", "258.559, 284.699, 19.7708, 0.4894", "258.744, 283.571, 19.696, 0.4382", "258.732, 282.448, 20.1611, 0.4096", "258.689, 281.324, 20.678, 0.3834", "258.856, 280.195, 20.722, 0.428", "259.197, 279.105, 20.7326, 0.5258", "259.472, 277.995, 20.8085, 0.628", "259.314, 276.889, 21.3156, 0.6836", "259.224, 275.767, 21.8182, 0.6378", "259.163, 274.625, 21.845, 0.6114", "258.814, 273.538, 21.8708, 0.5364", "258.333, 272.502, 22.0217, 0.5088", "258.148, 271.421, 22.8038, 0.4332", "257.405, 270.561, 23.0583, 0.4322", "257.376, 269.459, 23.7723, 0.4338", "257.399, 268.317, 23.6776, 0.4576", "257.387, 267.204, 23.1045, 0.4576", "257.319, 266.073, 23.4097, 0.4602", "257.097, 264.962, 23.3033, 0.4884", "257.172, 263.853, 23.949, 0.5444", "257.111, 262.733, 24.2225, 0.6184", "256.718, 261.7, 24.6588, 0.6566", "256.768, 260.591, 25.1857, 0.6154", "256.505, 259.479, 25.2347, 0.5008", "256.095, 258.423, 25.4514, 0.3642", "255.667, 257.406, 25.9174, 0.2986", "255.607, 256.278, 25.9837, 0.2866", "255.774, 255.197, 26.7282, 0.305", "256.148, 254.16, 27.2308, 0.3134", "256.438, 253.073, 27.1474, 0.348", "256.466, 251.936, 27.3862, 0.3992", "256.449, 250.792, 27.4484, 0.4322", "256.602, 249.675, 27.4938, 0.4226", "256.868, 248.584, 27.7956, 0.3872", "256.836, 247.476, 28.4071, 0.3764", "256.539, 246.411, 29.0318, 0.4276", "256.118, 245.372, 29.5506, 0.5214", "255.715, 244.306, 29.766, 0.6102", "255.303, 243.257, 30.1381, 0.6102", "254.978, 242.185, 30.6589, 0.5652", "254.685, 241.084, 30.8904, 0.5198", "254.397, 239.995, 31.2897, 0.5572", "254.365, 238.899, 31.7878, 0.621", "254.564, 237.776, 31.9194, 0.6734", "254.645, 236.639, 31.9155, 0.6616", "254.583, 235.497, 31.885, 0.586", "254.224, 234.458, 31.5837, 0.4698", "254.109, 233.481, 30.8118, 0.356", "254.554, 232.779, 32.1006, 0.3304", "254.694, 231.755, 32.4584, 0.3304", "254.911, 230.651, 32.0104, 0.3304", "255.041, 229.52, 31.9483, 0.2876", "255.056, 228.386, 32.2728, 0.2562", "256.042, 227.923, 32.51, 0.2542", "256.942, 227.77, 34.16, 0.356" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "260.641, 257.514, 62.6268, 0.3814", "260.374, 257.514, 63.0, 0.3304" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "260.641, 257.514, 62.6268, 0.3814", "261.44, 258.18, 63.7185, 0.5006", "261.946, 257.866, 65.1568, 0.2288", "262.469, 258.383, 66.36, 0.2288", "263.154, 258.758, 64.6996, 0.3936", "264.015, 259.017, 63.9954, 0.4322", "265.007, 259.43, 63.84, 0.5444", "265.675, 259.598, 65.3114, 0.538", "266.507, 259.456, 65.9789, 0.4392", "267.071, 258.678, 66.6439, 0.5274", "268.023, 258.628, 67.4579, 0.2866", "268.632, 257.966, 67.7295, 0.4336", "269.569, 257.376, 68.2223, 0.4876", "270.326, 256.834, 68.8433, 0.305", "270.148, 256.608, 66.3426, 0.3668", "270.787, 256.598, 65.24, 0.305", "271.128, 256.47, 66.9774, 0.4798", "271.582, 256.333, 69.3199, 0.6998", "272.462, 255.976, 69.1911, 0.466", "272.945, 255.393, 70.7585, 0.2288", "273.416, 254.841, 70.0694, 0.4164", "274.07, 254.205, 70.6558, 0.4086", "275.069, 253.807, 70.5488, 0.5384", "275.719, 252.951, 70.8397, 0.4056", "276.718, 252.7, 70.4701, 0.2288", "277.27, 252.481, 72.3192, 0.2288", "278.28, 252.176, 73.1259, 0.2446", "279.311, 251.736, 73.36, 0.3346", "280.08, 250.946, 73.8038, 0.3814", "280.579, 250.031, 74.1401, 0.4098", "281.48, 249.621, 73.64, 0.2628", "282.11, 248.972, 74.7093, 0.427", "282.193, 247.968, 74.8362, 0.4794", "282.738, 247.255, 75.9433, 0.4576", "283.471, 246.867, 76.979, 0.237", "283.703, 245.788, 76.72, 0.2288", "283.929, 244.691, 76.72, 0.2288", "284.831, 244.038, 76.7138, 0.2288", "285.306, 243.123, 76.44, 0.2288", "285.489, 242.416, 77.8445, 0.3014", "285.476, 241.608, 78.1063, 0.5154", "286.166, 240.771, 78.4, 0.4692", "286.479, 239.834, 79.2714, 0.3814", "287.425, 239.297, 79.3766, 0.5406", "288.409, 238.919, 80.0892, 0.2288", "288.655, 238.276, 82.0187, 0.3988", "289.334, 238.181, 80.421, 0.3486", "289.763, 237.615, 78.797, 0.6642", "290.241, 237.792, 79.8389, 0.3814", "290.821, 237.027, 81.3596, 0.3814", "291.402, 236.261, 82.88, 0.3814" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "135.768, 114.082, 113.68, 0.4576", "135.399, 113.606, 114.21, 0.6102", "134.671, 113.058, 113.126, 0.5544", "134.284, 112.995, 114.611, 0.6552", "133.777, 112.732, 116.48, 0.483", "133.072, 112.094, 117.708, 0.555", "132.975, 111.135, 118.623, 0.5008", "132.341, 110.395, 118.454, 0.3126", "131.56, 110.001, 119.576, 0.546", "131.211, 109.33, 121.222, 0.2906", "130.637, 108.794, 122.293, 0.411", "129.961, 108.295, 121.293, 0.53", "129.523, 107.985, 122.703, 0.2628", "129.725, 107.373, 124.25, 0.2956", "129.289, 106.854, 123.705, 0.4576", "128.595, 106.322, 124.88, 0.4628", "128.343, 105.299, 125.535, 0.3304", "127.455, 104.808, 126.28, 0.2288", "126.897, 104.003, 127.073, 0.521", "125.942, 103.402, 127.12, 0.553", "125.174, 102.852, 127.912, 0.3814", "124.452, 102.635, 129.64, 0.2542", "123.569, 101.967, 129.92, 0.2666", "122.823, 101.304, 130.735, 0.253", "121.803, 100.81, 130.76, 0.262", "120.944, 100.405, 131.224, 0.4016", "120.075, 99.7797, 130.684, 0.3698", "119.406, 99.3095, 129.199, 0.2604", "118.515, 99.143, 128.666, 0.2288", "117.67, 98.5148, 128.24, 0.2288", "116.55, 98.384, 128.436, 0.2288", "115.409, 98.384, 128.52, 0.2388", "114.517, 98.384, 129.778, 0.3238", "113.896, 98.4984, 132.006, 0.4576", "113.011, 98.9001, 132.085, 0.5736", "112.094, 99.2735, 131.33, 0.4836", "111.18, 99.3057, 131.068, 0.427", "110.123, 99.362, 131.04, 0.4574", "109.268, 99.4342, 132.02, 0.4862", "108.375, 99.0196, 131.631, 0.6356" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "135.768, 114.082, 113.68, 0.4576", "135.398, 113.557, 113.96, 0.6764", "134.878, 112.78, 114.747, 0.6432", "134.842, 111.721, 115.093, 0.53", "135.442, 110.898, 115.483, 0.451", "135.693, 110.084, 114.0, 0.5228", "135.678, 109.115, 114.408, 0.5456", "135.964, 108.34, 116.134, 0.5462", "135.773, 107.383, 116.247, 0.5508", "135.816, 106.378, 116.713, 0.3602", "135.756, 105.276, 117.298, 0.461", "135.431, 104.187, 117.436, 0.553", "135.176, 103.141, 118.147, 0.4516", "134.681, 102.723, 116.569, 0.3946", "134.63, 101.825, 115.64, 0.4512", "134.649, 100.792, 116.094, 0.2288", "134.691, 100.088, 117.651, 0.296", "134.781, 99.3526, 118.72, 0.7626", "135.212, 98.4157, 118.269, 0.6482", "135.244, 97.7976, 116.341, 0.5038", "135.54, 96.8788, 117.32, 0.3894", "135.638, 96.0939, 116.952, 0.531", "135.569, 95.3231, 116.032, 0.4222", "135.961, 94.9299, 114.431, 0.4682", "136.247, 93.8935, 113.96, 0.4896", "136.357, 92.8218, 114.175, 0.525", "136.453, 91.8987, 115.36, 0.3698", "137.051, 91.0443, 115.564, 0.477", "136.94, 90.948, 118.258, 0.2664", "136.937, 90.9226, 121.053, 0.2288", "137.051, 90.5832, 123.489, 0.2288", "137.064, 89.7208, 125.123, 0.2288", "137.021, 89.0255, 127.139, 0.2698", "137.059, 88.0054, 127.991, 0.4524", "137.18, 86.96, 128.778, 0.2464", "137.857, 86.1886, 129.064, 0.3438", "138.081, 85.5975, 129.832, 0.447", "138.608, 84.7646, 130.188, 0.2288", "139.201, 83.8653, 130.76, 0.4532", "139.465, 83.1791, 129.38, 0.3546", "140.212, 82.5405, 129.261, 0.3124", "140.826, 81.6683, 129.08, 0.2364", "141.622, 80.9534, 129.019, 0.2288", "142.566, 80.3992, 128.589, 0.2288", "143.118, 79.4848, 128.358, 0.2288", "143.229, 78.4465, 128.488, 0.2288", "143.015, 77.6787, 129.345, 0.335", "143.152, 77.233, 131.043, 0.4944", "143.47, 76.4309, 132.16, 0.4956", "143.871, 75.5771, 132.66, 0.4138", "143.796, 74.8564, 134.117, 0.2508", "143.303, 74.0542, 135.242, 0.2288", "143.08, 73.2361, 136.215, 0.2936", "143.217, 72.1136, 136.08, 0.4764", "143.458, 71.3856, 136.64, 0.2796" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "291.402, 236.261, 82.88, 0.3814", "291.155, 236.37, 82.885, 0.253", "290.708, 237.107, 84.3951, 0.4302", "290.233, 237.723, 85.68, 0.305" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "291.402, 236.261, 82.88, 0.3814", "291.768, 235.893, 83.5344, 0.2288", "292.27, 235.729, 85.9606, 0.2288", "292.572, 234.978, 87.0643, 0.2288", "292.635, 233.853, 86.8, 0.2288", "292.635, 232.709, 86.8, 0.2288", "292.628, 231.587, 87.0794, 0.281", "292.75, 230.745, 87.92, 0.356" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "108.375, 99.0196, 131.631, 0.6356", "107.624, 98.956, 132.314, 0.498", "107.017, 99.6743, 131.874, 0.4188", "106.461, 100.224, 130.558, 0.3436", "105.724, 100.696, 131.559, 0.3304", "105.326, 101.205, 133.0, 0.5094", "104.51, 101.914, 132.731, 0.5344", "103.748, 102.355, 133.756, 0.321", "103.03, 102.887, 134.373, 0.3844", "102.452, 103.634, 134.027, 0.4576" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "108.375, 99.0196, 131.631, 0.6356", "107.941, 98.8416, 132.742, 0.6398", "107.581, 98.384, 132.778, 0.2954", "107.269, 98.023, 131.239, 0.5796", "106.462, 97.3663, 131.608, 0.2526", "105.826, 97.391, 133.261, 0.2288", "105.623, 96.6324, 133.56, 0.2542", "105.478, 95.6784, 132.905, 0.3814", "104.79, 95.5017, 131.471, 0.3008", "104.719, 94.465, 130.975, 0.4008", "104.755, 93.4246, 131.051, 0.3576", "104.918, 92.3282, 131.05, 0.3132", "105.171, 91.5068, 129.856, 0.3044", "104.965, 90.7354, 129.587, 0.4576", "105.131, 90.376, 131.893, 0.343", "105.019, 89.9533, 133.387, 0.626", "104.676, 89.1177, 132.64, 0.3906", "104.447, 88.307, 133.53, 0.5486", "104.333, 87.3038, 132.462, 0.5384", "104.062, 86.414, 130.999, 0.3842", "103.235, 85.8715, 130.322, 0.403", "103.036, 85.1773, 128.832, 0.3814", "103.293, 84.8392, 127.165, 0.31", "103.628, 83.8574, 126.84, 0.3962", "102.994, 83.0582, 127.132, 0.3364", "102.325, 82.3305, 126.904, 0.6774", "102.189, 81.4099, 126.556, 0.2764", "101.526, 80.9671, 124.667, 0.4814", "101.265, 80.3004, 123.976, 0.2456", "101.538, 79.6142, 124.12, 0.5084", "101.587, 78.8216, 124.04, 0.5084" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "102.452, 103.634, 134.027, 0.4576", "101.621, 104.052, 134.933, 0.2832", "100.832, 104.448, 134.782, 0.5038", "100.201, 104.982, 135.456, 0.3554", "99.5304, 105.59, 134.637, 0.2288", "99.1649, 106.396, 135.597, 0.284", "98.4944, 106.978, 136.891, 0.2288", "97.8302, 107.385, 138.113, 0.4376", "97.2462, 107.783, 139.806, 0.3314", "97.0504, 108.418, 139.754, 0.4024", "96.6121, 109.138, 140.445, 0.5436", "96.2954, 109.781, 141.956, 0.4102", "95.3715, 109.824, 143.267, 0.4068", "94.4802, 110.282, 143.503, 0.4268", "93.6863, 110.42, 144.887, 0.3136", "93.1176, 111.073, 144.938, 0.2796", "92.3406, 110.968, 143.742, 0.5262", "91.5187, 110.849, 145.438, 0.3908", "90.5336, 110.54, 146.574, 0.3304", "89.9027, 110.739, 148.649, 0.356", "88.9348, 111.082, 147.985, 0.5078", "87.9145, 110.967, 146.886, 0.3172", "86.8543, 111.273, 146.736, 0.3304", "85.9644, 111.89, 147.499, 0.3304", "85.1134, 112.226, 148.411, 0.381", "84.7254, 112.259, 150.609, 0.2998", "83.9685, 112.676, 151.582, 0.4522", "83.2832, 112.455, 149.8, 0.305" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "102.452, 103.634, 134.027, 0.4576", "101.816, 103.913, 134.213, 0.4576" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_140",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_141",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_70", "dend_67", "dend_50", "apic_0", "dend_23", "dend_14", "dend_0", "dend_77", "dend_74", "dend_72", "dend_71", "dend_69", "dend_68", "dend_60", "dend_51", "apic_34", "apic_1", "dend_41", "dend_24", "dend_20", "dend_15", "dend_13", "dend_1", "dend_79", "dend_78", "dend_76", "dend_75", "dend_66", "dend_61", "dend_53", "dend_52", "apic_38", "apic_35", "apic_25", "apic_2", "dend_47", "dend_42", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_4", "dend_3", "dend_2", "dend_65", "dend_62", "dend_59", "dend_54", "apic_37", "apic_36", "apic_29", "apic_26", "apic_6", "apic_3", "dend_49", "dend_48", "dend_46", "dend_43", "dend_30", "dend_29", "dend_27", "dend_26", "dend_18", "dend_17", "dend_12", "dend_5", "dend_64", "dend_63", "dend_58", "dend_55", "apic_33", "apic_30", "apic_28", "apic_27", "apic_24", "apic_7", "apic_5", "apic_4", "dend_45", "dend_44", "dend_34", "dend_31", "dend_11", "dend_6", "dend_57", "dend_56", "apic_32", "apic_31", "apic_17", "apic_8", "dend_38", "dend_35", "dend_33", "dend_32", "dend_10", "dend_7", "apic_23", "apic_18", "apic_16", "apic_9", "dend_40", "dend_39", "dend_37", "dend_36", "dend_9", "dend_8", "apic_22", "apic_19", "apic_11", "apic_10", "apic_21", "apic_20", "apic_13", "apic_12", "apic_15", "apic_14" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_73", "dend_70", "dend_67", "dend_50", "dend_23", "dend_14", "dend_0", "dend_77", "dend_74", "dend_72", "dend_71", "dend_69", "dend_68", "dend_60", "dend_51", "dend_41", "dend_24", "dend_20", "dend_15", "dend_13", "dend_1", "dend_79", "dend_78", "dend_76", "dend_75", "dend_66", "dend_61", "dend_53", "dend_52", "dend_47", "dend_42", "dend_28", "dend_25", "dend_22", "dend_21", "dend_19", "dend_16", "dend_4", "dend_3", "dend_2", "dend_65", "dend_62", "dend_59", "dend_54", "dend_49", "dend_48", "dend_46", "dend_43", "dend_30", "dend_29", "dend_27", "dend_26", "dend_18", "dend_17", "dend_12", "dend_5", "dend_64", "dend_63", "dend_58", "dend_55", "dend_45", "dend_44", "dend_34", "dend_31", "dend_11", "dend_6", "dend_57", "dend_56", "dend_38", "dend_35", "dend_33", "dend_32", "dend_10", "dend_7", "dend_40", "dend_39", "dend_37", "dend_36", "dend_9", "dend_8" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_34", "apic_1", "apic_38", "apic_35", "apic_25", "apic_2", "apic_37", "apic_36", "apic_29", "apic_26", "apic_6", "apic_3", "apic_33", "apic_30", "apic_28", "apic_27", "apic_24", "apic_7", "apic_5", "apic_4", "apic_32", "apic_31", "apic_17", "apic_8", "apic_23", "apic_18", "apic_16", "apic_9", "apic_22", "apic_19", "apic_11", "apic_10", "apic_21", "apic_20", "apic_13", "apic_12", "apic_15", "apic_14" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6481",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_50", "dend_50", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_14", "dend_14", "dend_14", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_74", "dend_74", "dend_74", "dend_74", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_34", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_1", "dend_1", "dend_1", "dend_1", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_38", "apic_35", "apic_35", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_37", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_36", "apic_29", "apic_29", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "apic_33", "apic_33", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_30", "apic_28", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_27", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_32", "apic_31", "apic_31", "apic_17", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "apic_23", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_16", "apic_16", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_22", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "2.12"
  }, {
    "group" : "dend",
    "value" : "2.12"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "138.28"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0012021156",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "4.122259E-5",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.9822899",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "2.0934899E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.05175836",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.3160714E-4",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.9222005E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0572648",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "5.718807E-6",
    "erev" : "-92.499115"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.573876E-4",
    "erev" : "-92.499115"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "3.2393273E-6",
    "erev" : "-92.499115"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "9.5861855E-5",
    "erev" : "-92.499115"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "5.359973E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0070061292",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_472363762

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_73, id: dend_73, parent: soma_0
create dend_73
public dend_73
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_77, id: dend_77, parent: dend_73
create dend_77
public dend_77
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_72, id: dend_72, parent: dend_70
create dend_72
public dend_72
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_60, id: dend_60, parent: dend_50
create dend_60
public dend_60
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: apic_34, id: apic_34, parent: apic_0
create apic_34
public apic_34
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_41, id: dend_41, parent: dend_23
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_0
create dend_13
public dend_13
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_66, id: dend_66, parent: dend_60
create dend_66
public dend_66
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: apic_38, id: apic_38, parent: apic_34
create apic_38
public apic_38
// Section: apic_35, id: apic_35, parent: apic_34
create apic_35
public apic_35
// Section: apic_25, id: apic_25, parent: apic_1
create apic_25
public apic_25
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_4, id: dend_4, parent: dend_1
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_59, id: dend_59, parent: dend_53
create dend_59
public dend_59
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: apic_37, id: apic_37, parent: apic_35
create apic_37
public apic_37
// Section: apic_36, id: apic_36, parent: apic_35
create apic_36
public apic_36
// Section: apic_29, id: apic_29, parent: apic_25
create apic_29
public apic_29
// Section: apic_26, id: apic_26, parent: apic_25
create apic_26
public apic_26
// Section: apic_6, id: apic_6, parent: apic_2
create apic_6
public apic_6
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: apic_33, id: apic_33, parent: apic_29
create apic_33
public apic_33
// Section: apic_30, id: apic_30, parent: apic_29
create apic_30
public apic_30
// Section: apic_28, id: apic_28, parent: apic_26
create apic_28
public apic_28
// Section: apic_27, id: apic_27, parent: apic_26
create apic_27
public apic_27
// Section: apic_24, id: apic_24, parent: apic_6
create apic_24
public apic_24
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: apic_32, id: apic_32, parent: apic_30
create apic_32
public apic_32
// Section: apic_31, id: apic_31, parent: apic_30
create apic_31
public apic_31
// Section: apic_17, id: apic_17, parent: apic_7
create apic_17
public apic_17
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_23, id: apic_23, parent: apic_17
create apic_23
public apic_23
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_16, id: apic_16, parent: apic_8
create apic_16
public apic_16
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_22, id: apic_22, parent: apic_18
create apic_22
public apic_22
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_140, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_140
// Group: {name=ModelViewParmSubset_141, groups=[], sections=[dend_73, dend_70, dend_67, dend_50, apic_0, dend_23, dend_14, dend_0, dend_77, dend_74, dend_72, dend_71, dend_69, dend_68, dend_60, dend_51, apic_34, apic_1, dend_41, dend_24, dend_20, dend_15, dend_13, dend_1, dend_79, dend_78, dend_76, dend_75, dend_66, dend_61, dend_53, dend_52, apic_38, apic_35, apic_25, apic_2, dend_47, dend_42, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_4, dend_3, dend_2, dend_65, dend_62, dend_59, dend_54, apic_37, apic_36, apic_29, apic_26, apic_6, apic_3, dend_49, dend_48, dend_46, dend_43, dend_30, dend_29, dend_27, dend_26, dend_18, dend_17, dend_12, dend_5, dend_64, dend_63, dend_58, dend_55, apic_33, apic_30, apic_28, apic_27, apic_24, apic_7, apic_5, apic_4, dend_45, dend_44, dend_34, dend_31, dend_11, dend_6, dend_57, dend_56, apic_32, apic_31, apic_17, apic_8, dend_38, dend_35, dend_33, dend_32, dend_10, dend_7, apic_23, apic_18, apic_16, apic_9, dend_40, dend_39, dend_37, dend_36, dend_9, dend_8, apic_22, apic_19, apic_11, apic_10, apic_21, apic_20, apic_13, apic_12, apic_15, apic_14]}
objref ModelViewParmSubset_141
// Group: {name=dend, groups=[], sections=[dend_73, dend_70, dend_67, dend_50, dend_23, dend_14, dend_0, dend_77, dend_74, dend_72, dend_71, dend_69, dend_68, dend_60, dend_51, dend_41, dend_24, dend_20, dend_15, dend_13, dend_1, dend_79, dend_78, dend_76, dend_75, dend_66, dend_61, dend_53, dend_52, dend_47, dend_42, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_4, dend_3, dend_2, dend_65, dend_62, dend_59, dend_54, dend_49, dend_48, dend_46, dend_43, dend_30, dend_29, dend_27, dend_26, dend_18, dend_17, dend_12, dend_5, dend_64, dend_63, dend_58, dend_55, dend_45, dend_44, dend_34, dend_31, dend_11, dend_6, dend_57, dend_56, dend_38, dend_35, dend_33, dend_32, dend_10, dend_7, dend_40, dend_39, dend_37, dend_36, dend_9, dend_8]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_34, apic_1, apic_38, apic_35, apic_25, apic_2, apic_37, apic_36, apic_29, apic_26, apic_6, apic_3, apic_33, apic_30, apic_28, apic_27, apic_24, apic_7, apic_5, apic_4, apic_32, apic_31, apic_17, apic_8, apic_23, apic_18, apic_16, apic_9, apic_22, apic_19, apic_11, apic_10, apic_21, apic_20, apic_13, apic_12, apic_15, apic_14]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_6481, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_6481
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_50, dend_50, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_1, dend_1, dend_1, dend_1, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_35, apic_35, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_29, apic_29, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, apic_33, apic_33, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_31, apic_31, apic_17, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, apic_23, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_22, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000027)
    connect dend_73(0), soma_0(0.5000000000000027)
    connect dend_70(0), soma_0(0.5000000000000027)
    connect dend_67(0), soma_0(0.5000000000000027)
    connect dend_50(0), soma_0(0.5000000000000027)
    connect apic_0(0), soma_0(0.5000000000000027)
    connect dend_23(0), soma_0(0.5000000000000027)
    connect dend_14(0), soma_0(0.5000000000000027)
    connect dend_0(0), soma_0(0.5000000000000027)
    connect axon_1(0), axon_0(1.0)
    connect dend_77(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_72(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_60(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect apic_34(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_41(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_66(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect apic_38(0), apic_34(1.0)
    connect apic_35(0), apic_34(1.0)
    connect apic_25(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_4(0), dend_1(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_59(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect apic_37(0), apic_35(1.0)
    connect apic_36(0), apic_35(1.0)
    connect apic_29(0), apic_25(1.0)
    connect apic_26(0), apic_25(1.0)
    connect apic_6(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect apic_33(0), apic_29(1.0)
    connect apic_30(0), apic_29(1.0)
    connect apic_28(0), apic_26(1.0)
    connect apic_27(0), apic_26(1.0)
    connect apic_24(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect apic_32(0), apic_30(1.0)
    connect apic_31(0), apic_30(1.0)
    connect apic_17(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_23(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_16(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_22(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 297.717, 379.465, 28.56, 10.8856 ) }
    soma_0 { pt3dadd( 303.16, 379.465, 28.56, 10.8856 ) }
    soma_0 { pt3dadd( 308.603, 379.465, 28.56, 10.8856 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 303.16, 379.465, 28.56, 1.0 ) }
    axon_0 { pt3dadd( 309.001, 393.281, 28.56, 1.0 ) }
    axon_0 { pt3dadd( 314.843, 407.097, 28.56, 1.0 ) }
    // Section: dend_73, id: dend_73, parent: soma_0 (entry count 6/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 301.534, 375.937, 23.3178, 0.4066 ) }
    dend_73 { pt3dadd( 301.116, 375.027, 21.966, 0.387 ) }
    dend_73 { pt3dadd( 300.556, 374.232, 22.4974, 0.4796 ) }
    dend_73 { pt3dadd( 299.876, 373.68, 23.6998, 0.2888 ) }
    dend_73 { pt3dadd( 298.87, 373.668, 23.7132, 0.334 ) }
    dend_73 { pt3dadd( 297.763, 373.529, 23.3369, 0.4576 ) }
    dend_73 { pt3dadd( 296.791, 373.306, 22.68, 0.2578 ) }
    dend_73 { pt3dadd( 296.001, 373.378, 24.0027, 0.3524 ) }
    dend_73 { pt3dadd( 295.177, 373.013, 24.92, 0.4276 ) }
    dend_73 { pt3dadd( 294.767, 372.847, 22.7923, 0.2606 ) }
    dend_73 { pt3dadd( 293.894, 372.903, 22.9284, 0.3626 ) }
    dend_73 { pt3dadd( 293.418, 372.515, 24.3314, 0.6844 ) }
    dend_73 { pt3dadd( 292.374, 372.143, 24.1287, 0.5818 ) }
    dend_73 { pt3dadd( 291.329, 371.967, 23.9428, 0.3938 ) }
    dend_73 { pt3dadd( 290.478, 371.658, 22.6307, 0.5218 ) }
    dend_73 { pt3dadd( 290.086, 371.737, 24.2155, 0.4008 ) }
    dend_73 { pt3dadd( 289.307, 371.594, 25.2608, 0.3256 ) }
    dend_73 { pt3dadd( 288.517, 371.406, 25.1384, 0.2962 ) }
    dend_73 { pt3dadd( 287.885, 370.987, 23.9887, 0.6102 ) }
    dend_73 { pt3dadd( 287.0, 370.53, 24.2298, 0.5858 ) }
    dend_73 { pt3dadd( 285.92, 370.387, 24.362, 0.5322 ) }
    dend_73 { pt3dadd( 285.293, 369.573, 24.92, 0.3086 ) }
    dend_73 { pt3dadd( 284.435, 369.283, 24.2001, 0.356 ) }
    dend_73 { pt3dadd( 283.658, 368.715, 22.902, 0.2288 ) }
    dend_73 { pt3dadd( 283.349, 368.254, 21.7669, 0.2288 ) }
    dend_73 { pt3dadd( 283.026, 367.83, 21.9876, 0.4176 ) }
    dend_73 { pt3dadd( 282.284, 367.695, 23.4424, 0.3922 ) }
    dend_73 { pt3dadd( 281.642, 367.264, 21.9478, 0.5138 ) }
    dend_73 { pt3dadd( 280.962, 367.178, 20.4596, 0.3532 ) }
    dend_73 { pt3dadd( 280.222, 366.538, 21.0484, 0.356 ) }
    dend_73 { pt3dadd( 279.31, 366.165, 21.9526, 0.6544 ) }
    dend_73 { pt3dadd( 278.516, 365.599, 21.5424, 0.4614 ) }
    dend_73 { pt3dadd( 277.666, 365.283, 22.0234, 0.8512 ) }
    dend_73 { pt3dadd( 276.764, 364.83, 21.5838, 0.3936 ) }
    dend_73 { pt3dadd( 275.959, 364.029, 21.2383, 0.4148 ) }
    dend_73 { pt3dadd( 275.155, 363.228, 20.893, 0.4364 ) }
    dend_73 { pt3dadd( 274.349, 362.427, 20.5475, 0.4576 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 43/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 305.141, 375.251, 27.8631, 0.5742 ) }
    dend_70 { pt3dadd( 305.353, 374.191, 28.0683, 0.9486 ) }
    dend_70 { pt3dadd( 305.493, 373.332, 29.0111, 0.4674 ) }
    dend_70 { pt3dadd( 306.244, 372.808, 28.9262, 0.4576 ) }
    dend_70 { pt3dadd( 306.764, 371.833, 28.6373, 0.4576 ) }
    dend_70 { pt3dadd( 307.408, 371.457, 27.7245, 0.4576 ) }
    dend_70 { pt3dadd( 308.121, 371.228, 29.3124, 0.5592 ) }
    dend_70 { pt3dadd( 308.806, 370.472, 29.5221, 0.5416 ) }
    dend_70 { pt3dadd( 309.371, 370.229, 27.7206, 0.415 ) }
    dend_70 { pt3dadd( 309.251, 369.324, 27.6763, 0.6322 ) }
    dend_70 { pt3dadd( 309.417, 368.382, 27.9832, 0.5222 ) }
    dend_70 { pt3dadd( 310.052, 367.771, 27.1438, 0.6864 ) }
    dend_70 { pt3dadd( 310.494, 367.113, 27.6755, 0.5344 ) }
    dend_70 { pt3dadd( 310.682, 366.19, 28.5524, 0.6098 ) }
    dend_70 { pt3dadd( 311.008, 365.299, 28.0162, 0.6514 ) }
    dend_70 { pt3dadd( 311.941, 364.936, 27.2852, 0.4112 ) }
    dend_70 { pt3dadd( 312.87, 365.279, 28.1708, 0.737 ) }
    dend_70 { pt3dadd( 313.894, 365.26, 28.4698, 0.788 ) }
    dend_70 { pt3dadd( 314.823, 364.878, 27.1281, 0.788 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 62/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 304.81, 381.468, 38.6523, 0.4306 ) }
    dend_67 { pt3dadd( 305.196, 381.938, 41.022, 0.4184 ) }
    dend_67 { pt3dadd( 305.584, 382.408, 43.3919, 0.4062 ) }
    dend_67 { pt3dadd( 305.971, 382.879, 45.7618, 0.3938 ) }
    dend_67 { pt3dadd( 306.359, 383.349, 48.1317, 0.3816 ) }
    dend_67 { pt3dadd( 306.878, 384.276, 47.9699, 0.6864 ) }
    dend_67 { pt3dadd( 307.297, 385.188, 48.9698, 0.6864 ) }
    dend_67 { pt3dadd( 307.638, 386.071, 49.2293, 0.4932 ) }
    dend_67 { pt3dadd( 307.645, 387.092, 50.104, 0.4976 ) }
    dend_67 { pt3dadd( 307.951, 388.06, 49.7342, 0.337 ) }
    dend_67 { pt3dadd( 308.201, 389.142, 49.3119, 0.292 ) }
    dend_67 { pt3dadd( 308.43, 389.92, 50.4, 0.2288 ) }
    dend_67 { pt3dadd( 308.481, 390.941, 49.8677, 0.3232 ) }
    dend_67 { pt3dadd( 308.688, 391.825, 49.1817, 0.6742 ) }
    dend_67 { pt3dadd( 308.766, 392.863, 49.5001, 0.4644 ) }
    dend_67 { pt3dadd( 308.537, 393.574, 50.2107, 0.6864 ) }
    dend_67 { pt3dadd( 308.766, 394.257, 49.6667, 0.6864 ) }
    dend_67 { pt3dadd( 308.477, 394.921, 51.142, 0.4286 ) }
    dend_67 { pt3dadd( 308.651, 395.894, 50.0354, 0.5036 ) }
    dend_67 { pt3dadd( 308.616, 396.8, 49.7227, 0.7792 ) }
    dend_67 { pt3dadd( 308.537, 397.938, 49.7487, 0.5062 ) }
    dend_67 { pt3dadd( 308.559, 399.078, 49.733, 0.4214 ) }
    dend_67 { pt3dadd( 308.679, 400.202, 49.8408, 0.5542 ) }
    dend_67 { pt3dadd( 308.913, 401.256, 49.8532, 0.7264 ) }
    dend_67 { pt3dadd( 309.109, 402.319, 49.5729, 0.5848 ) }
    dend_67 { pt3dadd( 309.223, 403.404, 49.8308, 0.5288 ) }
    dend_67 { pt3dadd( 309.452, 404.151, 48.095, 0.356 ) }
    dend_67 { pt3dadd( 309.443, 404.974, 46.2944, 0.2604 ) }
    dend_67 { pt3dadd( 309.109, 405.675, 44.8711, 0.483 ) }
    dend_67 { pt3dadd( 309.325, 406.54, 46.0443, 0.4322 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 92/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 302.672, 383.722, 32.6642, 0.6086 ) }
    dend_50 { pt3dadd( 302.453, 384.821, 33.2063, 0.5612 ) }
    dend_50 { pt3dadd( 302.316, 385.858, 34.3378, 0.483 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 95/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 299.808, 376.161, 30.4601, 0.6102 ) }
    apic_0 { pt3dadd( 299.301, 375.145, 30.7992, 0.7128 ) }
    apic_0 { pt3dadd( 298.851, 374.094, 30.7941, 0.8396 ) }
    apic_0 { pt3dadd( 298.051, 373.277, 30.7602, 0.9174 ) }
    apic_0 { pt3dadd( 297.235, 372.479, 30.5836, 0.9942 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_0 { pt3dadd( 296.569, 371.607, 29.8116, 1.0692 ) }
    apic_0 { pt3dadd( 295.836, 370.73, 29.6834, 1.0878 ) }
    apic_0 { pt3dadd( 295.09, 369.866, 29.6951, 0.9846 ) }
    apic_0 { pt3dadd( 294.529, 368.87, 29.7615, 0.86 ) }
    apic_0 { pt3dadd( 294.045, 367.843, 30.109, 0.7928 ) }
    apic_0 { pt3dadd( 293.647, 366.808, 30.7479, 0.868 ) }
    apic_0 { pt3dadd( 293.514, 365.673, 30.8496, 0.917 ) }
    apic_0 { pt3dadd( 293.343, 364.549, 31.1094, 0.9406 ) }
    apic_0 { pt3dadd( 293.107, 363.497, 32.027, 0.9384 ) }
    apic_0 { pt3dadd( 293.084, 362.42, 32.928, 0.906 ) }
    apic_0 { pt3dadd( 293.044, 361.277, 33.0453, 0.8136 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 11/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 304.935, 375.198, 30.2879, 0.6556 ) }
    dend_23 { pt3dadd( 304.998, 374.153, 31.3407, 0.6166 ) }
    dend_23 { pt3dadd( 305.044, 373.047, 32.018, 0.588 ) }
    dend_23 { pt3dadd( 305.335, 371.978, 32.6869, 0.5848 ) }
    dend_23 { pt3dadd( 306.03, 371.086, 32.753, 0.5386 ) }
    dend_23 { pt3dadd( 306.678, 370.256, 31.7075, 0.5104 ) }
    dend_23 { pt3dadd( 307.116, 369.282, 30.7244, 0.6034 ) }
    dend_23 { pt3dadd( 307.995, 368.592, 30.2492, 0.736 ) }
    dend_23 { pt3dadd( 309.109, 368.485, 30.8, 0.788 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 20/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 301.585, 384.198, 25.1188, 0.532 ) }
    dend_14 { pt3dadd( 300.971, 385.122, 24.5062, 0.5552 ) }
    dend_14 { pt3dadd( 300.079, 385.772, 24.9561, 0.5592 ) }
    dend_14 { pt3dadd( 299.601, 385.871, 24.8889, 0.6356 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 302.665, 375.232, 23.2562, 0.5048 ) }
    dend_0 { pt3dadd( 302.469, 374.236, 21.9996, 0.523 ) }
    dend_0 { pt3dadd( 302.006, 373.292, 21.0081, 0.6052 ) }
    dend_0 { pt3dadd( 301.236, 372.496, 20.7318, 0.72 ) }
    dend_0 { pt3dadd( 300.337, 371.832, 20.7847, 0.7456 ) }
    dend_0 { pt3dadd( 299.718, 370.877, 20.9602, 0.715 ) }
    dend_0 { pt3dadd( 299.505, 369.798, 21.7249, 0.787 ) }
    dend_0 { pt3dadd( 299.52, 368.656, 21.8372, 0.8134 ) }
    dend_0 { pt3dadd( 299.632, 367.518, 21.8288, 0.864 ) }
    dend_0 { pt3dadd( 299.931, 366.414, 21.7669, 0.7882 ) }
    dend_0 { pt3dadd( 299.953, 365.28, 21.3934, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 35/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 314.843, 407.097, 28.56, 1.0 ) }
    axon_1 { pt3dadd( 320.684, 420.913, 28.56, 1.0 ) }
    axon_1 { pt3dadd( 326.525, 434.729, 28.56, 1.0 ) }
    // Section: dend_77, id: dend_77, parent: dend_73 (entry count 38/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 274.349, 362.427, 20.5475, 0.4576 ) }
    dend_77 { pt3dadd( 274.204, 361.768, 21.7151, 0.5338 ) }
    dend_77 { pt3dadd( 273.796, 360.702, 21.8392, 0.4954 ) }
    dend_77 { pt3dadd( 273.216, 359.737, 21.835, 0.4128 ) }
    dend_77 { pt3dadd( 272.334, 359.034, 21.8131, 0.3814 ) }
    dend_77 { pt3dadd( 271.335, 358.484, 21.6882, 0.4018 ) }
    dend_77 { pt3dadd( 270.384, 357.888, 21.212, 0.453 ) }
    dend_77 { pt3dadd( 269.448, 357.284, 20.7281, 0.483 ) }
    dend_77 { pt3dadd( 268.548, 356.581, 20.6886, 0.4938 ) }
    dend_77 { pt3dadd( 267.805, 355.734, 20.4834, 0.5084 ) }
    dend_77 { pt3dadd( 267.195, 354.776, 20.1608, 0.52 ) }
    dend_77 { pt3dadd( 266.477, 353.9, 20.1967, 0.5338 ) }
    dend_77 { pt3dadd( 265.641, 353.218, 19.7008, 0.5338 ) }
    dend_77 { pt3dadd( 265.132, 352.342, 19.2217, 0.5338 ) }
    dend_77 { pt3dadd( 264.684, 351.313, 19.4253, 0.5184 ) }
    dend_77 { pt3dadd( 263.869, 350.552, 19.3225, 0.4612 ) }
    dend_77 { pt3dadd( 263.052, 349.937, 18.2426, 0.3672 ) }
    dend_77 { pt3dadd( 262.406, 349.239, 16.7065, 0.2806 ) }
    dend_77 { pt3dadd( 261.512, 348.853, 15.5254, 0.2542 ) }
    dend_77 { pt3dadd( 260.707, 348.793, 16.9098, 0.2938 ) }
    dend_77 { pt3dadd( 260.099, 348.729, 19.2685, 0.3862 ) }
    dend_77 { pt3dadd( 259.206, 348.359, 20.5587, 0.4922 ) }
    dend_77 { pt3dadd( 258.161, 347.925, 20.6758, 0.5516 ) }
    dend_77 { pt3dadd( 257.135, 347.436, 20.396, 0.5154 ) }
    dend_77 { pt3dadd( 256.21, 346.815, 19.7862, 0.397 ) }
    dend_77 { pt3dadd( 255.143, 346.494, 20.1709, 0.2886 ) }
    dend_77 { pt3dadd( 254.215, 346.078, 19.0078, 0.2306 ) }
    dend_77 { pt3dadd( 253.612, 346.274, 19.6, 0.3798 ) }
    dend_77 { pt3dadd( 252.81, 346.182, 20.5422, 0.2288 ) }
    dend_77 { pt3dadd( 251.769, 346.259, 19.88, 0.269 ) }
    dend_77 { pt3dadd( 250.793, 345.996, 19.9576, 0.2478 ) }
    dend_77 { pt3dadd( 250.242, 345.405, 21.0, 0.4576 ) }
    dend_77 { pt3dadd( 249.526, 344.706, 20.2765, 0.387 ) }
    dend_77 { pt3dadd( 248.691, 344.279, 21.0423, 0.318 ) }
    dend_77 { pt3dadd( 247.904, 344.048, 20.0236, 0.4322 ) }
    dend_77 { pt3dadd( 247.238, 343.469, 19.6, 0.356 ) }
    dend_77 { pt3dadd( 246.396, 342.857, 20.1303, 0.4318 ) }
    dend_77 { pt3dadd( 245.273, 342.92, 20.4089, 0.2364 ) }
    dend_77 { pt3dadd( 244.219, 342.959, 20.3468, 0.3304 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 77/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 274.349, 362.427, 20.5475, 0.4576 ) }
    dend_74 { pt3dadd( 274.009, 362.201, 20.417, 0.3668 ) }
    dend_74 { pt3dadd( 273.152, 361.567, 19.4051, 0.356 ) }
    dend_74 { pt3dadd( 272.734, 360.599, 18.3408, 0.3308 ) }
    dend_74 { pt3dadd( 272.132, 359.747, 17.1959, 0.356 ) }
    // Section: dend_72, id: dend_72, parent: dend_70 (entry count 82/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 314.823, 364.878, 27.1281, 0.788 ) }
    dend_72 { pt3dadd( 315.713, 364.727, 26.4046, 0.7434 ) }
    dend_72 { pt3dadd( 315.976, 365.271, 24.6618, 0.6178 ) }
    dend_72 { pt3dadd( 316.739, 365.803, 24.2222, 0.5848 ) }
    dend_72 { pt3dadd( 317.725, 366.154, 24.4348, 0.5238 ) }
    dend_72 { pt3dadd( 318.63, 365.672, 24.719, 0.6842 ) }
    dend_72 { pt3dadd( 319.591, 365.851, 24.5347, 0.559 ) }
    dend_72 { pt3dadd( 319.977, 365.006, 23.9781, 0.237 ) }
    dend_72 { pt3dadd( 320.715, 364.397, 24.059, 0.5534 ) }
    dend_72 { pt3dadd( 321.711, 364.621, 24.1024, 0.3856 ) }
    dend_72 { pt3dadd( 322.531, 364.159, 23.52, 0.6482 ) }
    dend_72 { pt3dadd( 323.602, 364.115, 23.5771, 0.3756 ) }
    dend_72 { pt3dadd( 324.051, 363.513, 22.7035, 0.5338 ) }
    dend_72 { pt3dadd( 324.029, 363.236, 20.267, 0.6864 ) }
    dend_72 { pt3dadd( 324.445, 362.272, 20.1659, 0.71 ) }
    dend_72 { pt3dadd( 325.339, 361.811, 20.8544, 0.3994 ) }
    dend_72 { pt3dadd( 326.099, 361.039, 21.0, 0.4098 ) }
    dend_72 { pt3dadd( 326.119, 359.966, 20.4154, 0.613 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_72 { pt3dadd( 325.492, 359.186, 20.0883, 0.3364 ) }
    dend_72 { pt3dadd( 325.701, 358.628, 19.2147, 0.3272 ) }
    dend_72 { pt3dadd( 325.926, 357.822, 20.4336, 0.5942 ) }
    dend_72 { pt3dadd( 325.95, 356.931, 19.4387, 0.5338 ) }
    dend_72 { pt3dadd( 325.634, 356.543, 16.921, 0.5338 ) }
    dend_72 { pt3dadd( 325.258, 355.9, 16.4909, 0.6576 ) }
    dend_72 { pt3dadd( 324.782, 355.52, 15.745, 0.6864 ) }
    dend_72 { pt3dadd( 324.851, 354.983, 14.5737, 0.4576 ) }
    dend_72 { pt3dadd( 325.906, 355.06, 14.1168, 0.641 ) }
    dend_72 { pt3dadd( 326.689, 354.703, 15.057, 0.3136 ) }
    dend_72 { pt3dadd( 327.178, 354.537, 13.1452, 0.396 ) }
    dend_72 { pt3dadd( 327.51, 353.734, 12.0532, 0.356 ) }
    dend_72 { pt3dadd( 327.961, 352.841, 12.6, 0.5202 ) }
    dend_72 { pt3dadd( 328.891, 353.257, 12.731, 0.376 ) }
    dend_72 { pt3dadd( 329.542, 353.636, 13.7203, 0.5974 ) }
    dend_72 { pt3dadd( 330.457, 353.801, 14.5656, 0.4836 ) }
    dend_72 { pt3dadd( 331.336, 353.568, 13.5542, 0.4322 ) }
    dend_72 { pt3dadd( 331.624, 354.137, 12.2844, 0.4068 ) }
    dend_72 { pt3dadd( 332.4, 354.516, 12.087, 0.4022 ) }
    dend_72 { pt3dadd( 333.522, 354.65, 12.04, 0.2628 ) }
    dend_72 { pt3dadd( 334.169, 355.496, 11.7888, 0.2288 ) }
    dend_72 { pt3dadd( 334.734, 355.563, 12.9968, 0.6432 ) }
    dend_72 { pt3dadd( 335.535, 355.212, 13.44, 0.5084 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 23/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 314.823, 364.878, 27.1281, 0.788 ) }
    dend_71 { pt3dadd( 315.631, 364.576, 26.8223, 0.88 ) }
    dend_71 { pt3dadd( 315.988, 363.544, 26.3511, 0.85 ) }
    dend_71 { pt3dadd( 316.601, 362.836, 27.16, 0.3784 ) }
    dend_71 { pt3dadd( 316.888, 361.853, 27.6231, 0.356 ) }
    dend_71 { pt3dadd( 317.345, 361.47, 29.5854, 0.3196 ) }
    dend_71 { pt3dadd( 318.271, 360.94, 30.24, 0.305 ) }
    dend_71 { pt3dadd( 318.5, 360.144, 28.8812, 0.4026 ) }
    dend_71 { pt3dadd( 319.528, 359.988, 28.5519, 0.2818 ) }
    dend_71 { pt3dadd( 320.339, 359.607, 27.2507, 0.4254 ) }
    dend_71 { pt3dadd( 320.909, 358.914, 27.0637, 0.9028 ) }
    dend_71 { pt3dadd( 321.613, 358.193, 27.6587, 0.7886 ) }
    dend_71 { pt3dadd( 322.277, 357.304, 27.711, 0.7264 ) }
    dend_71 { pt3dadd( 322.894, 356.451, 27.44, 0.678 ) }
    dend_71 { pt3dadd( 323.784, 355.844, 26.861, 0.8178 ) }
    dend_71 { pt3dadd( 324.363, 354.965, 26.6406, 0.3904 ) }
    dend_71 { pt3dadd( 325.122, 354.344, 26.88, 0.2506 ) }
    dend_71 { pt3dadd( 325.705, 353.839, 27.3073, 0.239 ) }
    dend_71 { pt3dadd( 326.694, 353.725, 28.238, 0.33 ) }
    dend_71 { pt3dadd( 327.642, 353.395, 28.1812, 0.4576 ) }
    dend_71 { pt3dadd( 328.003, 352.802, 26.7358, 0.5814 ) }
    dend_71 { pt3dadd( 328.784, 352.466, 25.4806, 0.4564 ) }
    dend_71 { pt3dadd( 329.4, 352.555, 27.3697, 0.341 ) }
    dend_71 { pt3dadd( 330.028, 352.396, 28.5852, 0.2492 ) }
    dend_71 { pt3dadd( 330.387, 351.524, 28.9528, 0.4516 ) }
    dend_71 { pt3dadd( 331.094, 351.322, 29.223, 0.483 ) }
    dend_71 { pt3dadd( 331.816, 350.8, 29.2172, 0.5546 ) }
    dend_71 { pt3dadd( 332.683, 350.16, 28.5925, 0.4558 ) }
    dend_71 { pt3dadd( 333.51, 349.427, 28.091, 0.3304 ) }
    dend_71 { pt3dadd( 334.212, 348.569, 27.72, 0.4304 ) }
    dend_71 { pt3dadd( 334.9, 347.759, 27.6786, 0.566 ) }
    dend_71 { pt3dadd( 335.543, 346.902, 27.7186, 0.4544 ) }
    dend_71 { pt3dadd( 336.263, 346.387, 28.4866, 0.6102 ) }
    dend_71 { pt3dadd( 337.011, 345.871, 28.056, 0.6864 ) }
    dend_71 { pt3dadd( 337.562, 345.274, 27.2275, 0.3272 ) }
    dend_71 { pt3dadd( 338.343, 344.802, 26.5073, 0.2388 ) }
    dend_71 { pt3dadd( 339.198, 344.893, 28.2192, 0.4322 ) }
    dend_71 { pt3dadd( 339.94, 344.44, 27.7794, 0.4576 ) }
    dend_71 { pt3dadd( 340.909, 344.366, 27.9644, 0.4576 ) }
    dend_71 { pt3dadd( 341.741, 344.349, 28.1212, 0.365 ) }
    dend_71 { pt3dadd( 342.599, 344.136, 28.6051, 0.6486 ) }
    dend_71 { pt3dadd( 343.444, 343.533, 28.6345, 0.4434 ) }
    dend_71 { pt3dadd( 344.049, 343.2, 28.4976, 0.493 ) }
    dend_71 { pt3dadd( 344.857, 342.736, 28.4343, 0.4576 ) }
    dend_71 { pt3dadd( 345.72, 342.327, 28.3228, 0.4814 ) }
    dend_71 { pt3dadd( 346.677, 341.91, 28.0468, 0.4702 ) }
    dend_71 { pt3dadd( 346.65, 341.015, 27.2863, 0.434 ) }
    dend_71 { pt3dadd( 347.042, 340.004, 27.141, 0.283 ) }
    dend_71 { pt3dadd( 347.69, 339.29, 27.72, 0.4952 ) }
    dend_71 { pt3dadd( 348.168, 338.618, 27.7253, 0.4692 ) }
    dend_71 { pt3dadd( 348.733, 337.729, 27.6156, 0.6072 ) }
    dend_71 { pt3dadd( 349.39, 337.189, 26.9461, 0.3656 ) }
    dend_71 { pt3dadd( 350.041, 336.772, 28.0, 0.4068 ) }
    dend_71 { pt3dadd( 351.096, 336.385, 27.7343, 0.4986 ) }
    dend_71 { pt3dadd( 351.437, 335.838, 26.129, 0.229 ) }
    dend_71 { pt3dadd( 351.993, 335.265, 26.6, 0.4576 ) }
    dend_71 { pt3dadd( 352.437, 334.443, 27.2292, 0.4576 ) }
    dend_71 { pt3dadd( 352.596, 333.587, 27.5131, 0.3896 ) }
    dend_71 { pt3dadd( 353.155, 332.797, 27.9443, 0.2542 ) }
    dend_71 { pt3dadd( 354.017, 332.144, 28.5541, 0.353 ) }
    dend_71 { pt3dadd( 354.552, 331.156, 28.3772, 0.3814 ) }
    dend_71 { pt3dadd( 355.342, 330.379, 28.6532, 0.3686 ) }
    dend_71 { pt3dadd( 356.31, 330.193, 28.7787, 0.3474 ) }
    dend_71 { pt3dadd( 357.412, 330.098, 29.342, 0.3252 ) }
    dend_71 { pt3dadd( 358.483, 329.81, 29.1673, 0.3052 ) }
    dend_71 { pt3dadd( 359.235, 329.159, 28.448, 0.351 ) }
    dend_71 { pt3dadd( 360.052, 328.5, 28.8271, 0.3814 ) }
    dend_71 { pt3dadd( 360.966, 328.253, 28.6294, 0.4324 ) }
    dend_71 { pt3dadd( 361.629, 327.698, 29.7223, 0.4576 ) }
    dend_71 { pt3dadd( 362.256, 326.995, 29.2754, 0.2966 ) }
    dend_71 { pt3dadd( 363.347, 326.812, 29.3927, 0.2288 ) }
    dend_71 { pt3dadd( 364.471, 326.634, 29.4, 0.2288 ) }
    dend_71 { pt3dadd( 365.595, 326.498, 29.4, 0.2288 ) }
    dend_71 { pt3dadd( 366.728, 326.446, 29.4622, 0.3306 ) }
    dend_71 { pt3dadd( 367.849, 326.331, 29.0433, 0.4692 ) }
    dend_71 { pt3dadd( 368.945, 326.269, 28.317, 0.4576 ) }
    dend_71 { pt3dadd( 369.68, 325.932, 28.1002, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_71 { pt3dadd( 370.52, 325.906, 29.0976, 0.3262 ) }
    dend_71 { pt3dadd( 371.255, 326.495, 28.6373, 0.4576 ) }
    dend_71 { pt3dadd( 372.169, 326.626, 29.0492, 0.423 ) }
    dend_71 { pt3dadd( 373.18, 326.806, 28.7468, 0.2326 ) }
    dend_71 { pt3dadd( 374.279, 326.979, 29.12, 0.27 ) }
    dend_71 { pt3dadd( 375.186, 327.408, 28.2562, 0.4262 ) }
    dend_71 { pt3dadd( 376.172, 327.75, 28.3825, 0.3316 ) }
    dend_71 { pt3dadd( 376.99, 327.718, 28.0104, 0.3644 ) }
    dend_71 { pt3dadd( 377.833, 327.406, 28.7106, 0.5294 ) }
    dend_71 { pt3dadd( 378.664, 326.956, 28.7249, 0.4546 ) }
    dend_71 { pt3dadd( 379.691, 326.551, 28.2971, 0.2636 ) }
    dend_71 { pt3dadd( 380.708, 326.296, 28.901, 0.2962 ) }
    dend_71 { pt3dadd( 381.66, 325.865, 29.1032, 0.3352 ) }
    dend_71 { pt3dadd( 382.676, 325.578, 28.28, 0.5432 ) }
    dend_71 { pt3dadd( 383.678, 325.15, 28.4581, 0.3564 ) }
    dend_71 { pt3dadd( 384.787, 324.958, 28.0563, 0.2288 ) }
    dend_71 { pt3dadd( 385.891, 324.675, 28.0, 0.2288 ) }
    dend_71 { pt3dadd( 387.007, 324.451, 28.0, 0.2288 ) }
    dend_71 { pt3dadd( 388.105, 324.14, 28.0, 0.2288 ) }
    dend_71 { pt3dadd( 389.159, 323.701, 27.9555, 0.253 ) }
    dend_71 { pt3dadd( 390.129, 323.516, 28.2047, 0.3658 ) }
    dend_71 { pt3dadd( 391.11, 323.116, 28.6532, 0.402 ) }
    dend_71 { pt3dadd( 392.092, 322.608, 28.84, 0.2986 ) }
    dend_71 { pt3dadd( 393.172, 322.619, 29.3171, 0.2986 ) }
    dend_71 { pt3dadd( 394.217, 322.608, 30.2089, 0.2882 ) }
    dend_71 { pt3dadd( 395.251, 322.722, 29.9594, 0.2544 ) }
    dend_71 { pt3dadd( 396.158, 322.504, 30.3419, 0.3182 ) }
    dend_71 { pt3dadd( 397.259, 322.608, 29.96, 0.2288 ) }
    dend_71 { pt3dadd( 398.158, 323.179, 29.6918, 0.2288 ) }
    dend_71 { pt3dadd( 399.123, 323.523, 29.12, 0.2288 ) }
    dend_71 { pt3dadd( 400.267, 323.523, 29.12, 0.2288 ) }
    dend_71 { pt3dadd( 401.195, 323.981, 28.8417, 0.2288 ) }
    dend_71 { pt3dadd( 401.891, 324.674, 28.6916, 0.2288 ) }
    dend_71 { pt3dadd( 402.983, 324.782, 29.1292, 0.2672 ) }
    dend_71 { pt3dadd( 404.048, 324.782, 29.9499, 0.3304 ) }
    dend_71 { pt3dadd( 405.109, 324.871, 30.52, 0.2302 ) }
    dend_71 { pt3dadd( 406.165, 324.433, 30.52, 0.3244 ) }
    dend_71 { pt3dadd( 407.03, 323.721, 30.6186, 0.5578 ) }
    dend_71 { pt3dadd( 407.461, 322.861, 31.08, 0.2722 ) }
    dend_71 { pt3dadd( 407.984, 322.025, 31.08, 0.2288 ) }
    dend_71 { pt3dadd( 408.994, 321.586, 30.7045, 0.2288 ) }
    dend_71 { pt3dadd( 410.131, 321.578, 30.52, 0.2288 ) }
    dend_71 { pt3dadd( 411.241, 321.671, 30.464, 0.4132 ) }
    dend_71 { pt3dadd( 411.84, 322.081, 30.3604, 0.356 ) }
    dend_71 { pt3dadd( 412.675, 322.494, 30.4774, 0.5826 ) }
    dend_71 { pt3dadd( 413.775, 322.539, 30.4746, 0.608 ) }
    dend_71 { pt3dadd( 414.795, 322.842, 30.0507, 0.4964 ) }
    dend_71 { pt3dadd( 415.876, 322.559, 29.68, 0.5438 ) }
    dend_71 { pt3dadd( 416.554, 323.039, 28.5222, 0.3918 ) }
    dend_71 { pt3dadd( 417.547, 322.959, 27.7612, 0.6158 ) }
    dend_71 { pt3dadd( 418.267, 322.618, 28.0319, 0.2288 ) }
    dend_71 { pt3dadd( 419.135, 322.629, 27.2532, 0.3882 ) }
    dend_71 { pt3dadd( 419.806, 323.22, 27.6651, 0.3304 ) }
    dend_71 { pt3dadd( 420.537, 323.635, 26.8402, 0.6864 ) }
    dend_71 { pt3dadd( 421.443, 324.092, 27.0337, 0.8028 ) }
    dend_71 { pt3dadd( 422.445, 323.928, 27.5979, 0.7366 ) }
    dend_71 { pt3dadd( 423.455, 323.838, 28.6516, 0.6356 ) }
    dend_71 { pt3dadd( 424.424, 323.488, 28.5051, 0.6102 ) }
    dend_71 { pt3dadd( 425.113, 322.861, 27.9359, 0.6232 ) }
    dend_71 { pt3dadd( 425.798, 322.428, 27.4254, 0.6444 ) }
    dend_71 { pt3dadd( 426.717, 322.034, 27.6298, 0.7944 ) }
    dend_71 { pt3dadd( 427.523, 322.221, 28.6698, 0.7852 ) }
    dend_71 { pt3dadd( 428.231, 322.385, 29.5736, 0.2508 ) }
    dend_71 { pt3dadd( 429.009, 321.692, 29.5806, 0.4302 ) }
    dend_71 { pt3dadd( 429.458, 320.892, 29.12, 0.6102 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 65/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 309.325, 406.54, 46.0443, 0.4322 ) }
    dend_69 { pt3dadd( 309.975, 406.812, 46.0188, 0.4738 ) }
    dend_69 { pt3dadd( 311.03, 407.255, 45.9777, 0.5414 ) }
    dend_69 { pt3dadd( 312.084, 407.698, 45.9365, 0.6088 ) }
    dend_69 { pt3dadd( 312.77, 408.234, 44.8417, 0.3474 ) }
    dend_69 { pt3dadd( 313.178, 408.951, 44.1854, 0.4576 ) }
    dend_69 { pt3dadd( 313.22, 408.751, 46.6082, 0.3044 ) }
    dend_69 { pt3dadd( 313.779, 408.957, 47.6132, 0.3374 ) }
    dend_69 { pt3dadd( 314.028, 409.671, 48.5948, 0.4526 ) }
    dend_69 { pt3dadd( 314.404, 410.012, 50.4431, 0.3522 ) }
    dend_69 { pt3dadd( 314.6, 410.798, 49.5886, 0.6102 ) }
    dend_69 { pt3dadd( 315.148, 411.167, 50.0436, 0.4598 ) }
    dend_69 { pt3dadd( 316.007, 411.726, 50.3829, 0.521 ) }
    dend_69 { pt3dadd( 316.541, 411.404, 52.6288, 0.4576 ) }
    dend_69 { pt3dadd( 317.26, 411.336, 53.503, 0.4514 ) }
    dend_69 { pt3dadd( 317.481, 412.219, 54.0238, 0.494 ) }
    dend_69 { pt3dadd( 318.522, 412.412, 53.5049, 0.6864 ) }
    dend_69 { pt3dadd( 319.245, 412.081, 55.0458, 0.5592 ) }
    dend_69 { pt3dadd( 320.315, 412.349, 55.1342, 0.5338 ) }
    dend_69 { pt3dadd( 321.024, 412.722, 56.0829, 0.5364 ) }
    dend_69 { pt3dadd( 321.649, 413.415, 56.84, 0.5848 ) }
    dend_69 { pt3dadd( 322.141, 414.345, 57.0713, 0.6066 ) }
    dend_69 { pt3dadd( 322.608, 414.987, 58.52, 0.4324 ) }
    dend_69 { pt3dadd( 323.066, 415.638, 57.636, 0.866 ) }
    dend_69 { pt3dadd( 323.935, 416.036, 57.12, 0.8574 ) }
    dend_69 { pt3dadd( 324.21, 417.113, 57.391, 0.9078 ) }
    dend_69 { pt3dadd( 324.053, 417.949, 58.7891, 0.797 ) }
    dend_69 { pt3dadd( 324.313, 418.722, 60.2, 0.6864 ) }
    dend_69 { pt3dadd( 324.882, 419.523, 60.3691, 0.5884 ) }
    dend_69 { pt3dadd( 325.046, 420.522, 60.6472, 0.2946 ) }
    dend_69 { pt3dadd( 325.417, 421.442, 60.48, 0.6864 ) }
    dend_69 { pt3dadd( 325.267, 422.431, 60.6889, 0.6238 ) }
    dend_69 { pt3dadd( 325.708, 423.297, 60.226, 0.76 ) }
    dend_69 { pt3dadd( 325.866, 424.086, 61.2926, 0.517 ) }
    dend_69 { pt3dadd( 325.92, 425.018, 60.2588, 0.5682 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_69 { pt3dadd( 325.707, 425.862, 61.6358, 0.4628 ) }
    dend_69 { pt3dadd( 326.097, 426.137, 63.3153, 0.539 ) }
    dend_69 { pt3dadd( 326.451, 426.626, 65.0787, 0.4384 ) }
    dend_69 { pt3dadd( 326.726, 427.419, 66.561, 0.4796 ) }
    dend_69 { pt3dadd( 326.876, 428.374, 66.6456, 0.6118 ) }
    dend_69 { pt3dadd( 326.844, 429.395, 67.4338, 0.6296 ) }
    dend_69 { pt3dadd( 327.11, 430.342, 67.7748, 0.5736 ) }
    dend_69 { pt3dadd( 327.508, 431.161, 67.8936, 0.3942 ) }
    dend_69 { pt3dadd( 328.171, 431.563, 66.7019, 0.288 ) }
    dend_69 { pt3dadd( 329.021, 431.545, 67.2294, 0.3088 ) }
    dend_69 { pt3dadd( 329.798, 432.187, 66.64, 0.5848 ) }
    dend_69 { pt3dadd( 329.995, 432.966, 67.7648, 0.5822 ) }
    dend_69 { pt3dadd( 330.18, 433.004, 70.4287, 0.6742 ) }
    dend_69 { pt3dadd( 330.565, 433.63, 72.228, 0.2628 ) }
    dend_69 { pt3dadd( 331.288, 434.153, 73.4877, 0.2288 ) }
    dend_69 { pt3dadd( 331.854, 434.73, 72.4069, 0.395 ) }
    dend_69 { pt3dadd( 332.882, 435.061, 72.5502, 0.4844 ) }
    dend_69 { pt3dadd( 333.525, 435.291, 74.4629, 0.675 ) }
    dend_69 { pt3dadd( 334.468, 435.631, 75.5014, 0.5624 ) }
    dend_69 { pt3dadd( 335.238, 435.75, 74.8157, 0.666 ) }
    dend_69 { pt3dadd( 335.078, 436.436, 73.64, 0.661 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 21/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 309.325, 406.54, 46.0443, 0.4322 ) }
    dend_68 { pt3dadd( 309.402, 406.693, 46.3918, 0.4442 ) }
    dend_68 { pt3dadd( 309.566, 407.559, 47.8649, 0.2288 ) }
    dend_68 { pt3dadd( 309.566, 408.703, 47.88, 0.2288 ) }
    dend_68 { pt3dadd( 309.748, 409.552, 49.1047, 0.5194 ) }
    dend_68 { pt3dadd( 310.045, 410.056, 51.1157, 0.8136 ) }
    dend_68 { pt3dadd( 309.91, 411.056, 51.5217, 0.6088 ) }
    dend_68 { pt3dadd( 309.572, 411.819, 52.8315, 0.2382 ) }
    dend_68 { pt3dadd( 309.155, 412.655, 51.7496, 0.5152 ) }
    dend_68 { pt3dadd( 308.398, 413.076, 50.2944, 0.6134 ) }
    dend_68 { pt3dadd( 307.919, 413.912, 49.0896, 0.7372 ) }
    dend_68 { pt3dadd( 307.522, 414.951, 49.28, 0.6514 ) }
    dend_68 { pt3dadd( 307.051, 415.607, 49.5709, 0.2318 ) }
    dend_68 { pt3dadd( 307.236, 416.646, 49.0, 0.2484 ) }
    dend_68 { pt3dadd( 306.592, 417.47, 48.7676, 0.571 ) }
    dend_68 { pt3dadd( 306.084, 417.907, 50.0948, 0.3622 ) }
    dend_68 { pt3dadd( 305.575, 418.69, 48.9404, 0.5836 ) }
    dend_68 { pt3dadd( 305.448, 419.505, 49.2313, 0.2674 ) }
    dend_68 { pt3dadd( 304.858, 419.887, 49.84, 0.2814 ) }
    dend_68 { pt3dadd( 304.542, 420.969, 50.0088, 0.397 ) }
    dend_68 { pt3dadd( 304.304, 421.588, 51.7129, 0.7908 ) }
    dend_68 { pt3dadd( 303.892, 422.365, 51.938, 0.2608 ) }
    dend_68 { pt3dadd( 303.043, 422.714, 52.0425, 0.62 ) }
    dend_68 { pt3dadd( 302.51, 423.616, 51.3766, 0.4576 ) }
    dend_68 { pt3dadd( 302.421, 424.514, 50.7396, 0.299 ) }
    dend_68 { pt3dadd( 301.866, 425.301, 50.7237, 0.2288 ) }
    dend_68 { pt3dadd( 301.298, 425.807, 49.2954, 0.4454 ) }
    dend_68 { pt3dadd( 300.853, 426.604, 48.4319, 0.3936 ) }
    dend_68 { pt3dadd( 300.319, 427.284, 48.972, 0.5338 ) }
    dend_68 { pt3dadd( 300.202, 427.627, 50.9886, 0.4608 ) }
    dend_68 { pt3dadd( 299.526, 428.21, 50.2354, 0.6102 ) }
    dend_68 { pt3dadd( 298.798, 428.873, 49.0008, 0.6104 ) }
    dend_68 { pt3dadd( 298.391, 429.51, 49.9215, 0.3994 ) }
    dend_68 { pt3dadd( 298.628, 430.374, 50.9821, 0.385 ) }
    dend_68 { pt3dadd( 298.813, 431.373, 50.65, 0.305 ) }
    dend_68 { pt3dadd( 298.296, 432.005, 49.2226, 0.2398 ) }
    dend_68 { pt3dadd( 297.453, 432.488, 48.2731, 0.3168 ) }
    dend_68 { pt3dadd( 296.715, 432.962, 48.8113, 0.4518 ) }
    dend_68 { pt3dadd( 296.137, 433.893, 49.2744, 0.6864 ) }
    dend_68 { pt3dadd( 295.621, 434.622, 49.8859, 0.5558 ) }
    dend_68 { pt3dadd( 295.075, 434.949, 48.627, 0.3306 ) }
    dend_68 { pt3dadd( 294.58, 435.437, 49.6874, 0.413 ) }
    dend_68 { pt3dadd( 294.133, 435.768, 51.52, 0.661 ) }
    dend_68 { pt3dadd( 293.572, 436.741, 51.7588, 0.6848 ) }
    dend_68 { pt3dadd( 293.006, 437.351, 53.1894, 0.6812 ) }
    dend_68 { pt3dadd( 292.108, 437.466, 54.5742, 0.3228 ) }
    dend_68 { pt3dadd( 291.131, 437.945, 54.6, 0.4322 ) }
    dend_68 { pt3dadd( 290.788, 438.269, 56.558, 0.2288 ) }
    dend_68 { pt3dadd( 290.405, 439.02, 57.9569, 0.2288 ) }
    dend_68 { pt3dadd( 290.122, 439.691, 56.2906, 0.4192 ) }
    dend_68 { pt3dadd( 289.66, 440.329, 54.6, 0.508 ) }
    dend_68 { pt3dadd( 289.229, 441.232, 54.2987, 0.569 ) }
    dend_68 { pt3dadd( 289.018, 441.914, 55.8494, 0.4374 ) }
    dend_68 { pt3dadd( 288.519, 442.784, 55.44, 0.7958 ) }
    dend_68 { pt3dadd( 288.396, 443.822, 55.9689, 0.6818 ) }
    dend_68 { pt3dadd( 287.674, 444.446, 56.1383, 0.4718 ) }
    dend_68 { pt3dadd( 287.373, 445.016, 56.1686, 0.5184 ) }
    dend_68 { pt3dadd( 286.961, 444.59, 57.904, 0.233 ) }
    dend_68 { pt3dadd( 286.343, 445.272, 57.0769, 0.3406 ) }
    dend_68 { pt3dadd( 285.476, 445.562, 56.8282, 0.6852 ) }
    dend_68 { pt3dadd( 284.586, 445.995, 58.0994, 0.627 ) }
    dend_68 { pt3dadd( 283.584, 446.046, 59.0573, 0.7422 ) }
    dend_68 { pt3dadd( 282.551, 446.047, 58.9596, 0.5666 ) }
    dend_68 { pt3dadd( 281.948, 446.646, 59.3718, 0.5752 ) }
    dend_68 { pt3dadd( 281.125, 446.737, 58.1423, 0.6772 ) }
    dend_68 { pt3dadd( 280.224, 446.67, 57.3493, 0.517 ) }
    dend_68 { pt3dadd( 279.373, 446.389, 56.7204, 0.2288 ) }
    dend_68 { pt3dadd( 278.793, 446.16, 54.88, 0.4576 ) }
    // Section: dend_60, id: dend_60, parent: dend_50 (entry count 89/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 302.316, 385.858, 34.3378, 0.483 ) }
    dend_60 { pt3dadd( 301.802, 385.967, 32.2, 0.5586 ) }
    dend_60 { pt3dadd( 300.986, 386.228, 32.3224, 0.5242 ) }
    dend_60 { pt3dadd( 301.056, 386.558, 34.214, 0.57 ) }
    dend_60 { pt3dadd( 300.3, 386.46, 35.5289, 0.4576 ) }
    dend_60 { pt3dadd( 299.957, 386.451, 33.717, 0.2882 ) }
    dend_60 { pt3dadd( 299.521, 387.308, 32.7891, 0.2316 ) }
    dend_60 { pt3dadd( 299.237, 388.358, 33.0509, 0.3304 ) }
    dend_60 { pt3dadd( 298.507, 388.681, 34.4084, 0.4826 ) }
    dend_60 { pt3dadd( 297.509, 388.62, 34.2768, 0.4892 ) }
    dend_60 { pt3dadd( 296.771, 389.12, 34.5391, 0.4524 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_60 { pt3dadd( 296.29, 389.82, 35.3847, 0.5968 ) }
    dend_60 { pt3dadd( 295.802, 390.679, 35.3133, 0.5024 ) }
    dend_60 { pt3dadd( 295.031, 391.052, 35.399, 0.2302 ) }
    dend_60 { pt3dadd( 294.502, 391.66, 36.2202, 0.3886 ) }
    dend_60 { pt3dadd( 293.854, 392.461, 35.6334, 0.4628 ) }
    dend_60 { pt3dadd( 293.034, 392.931, 35.6964, 0.327 ) }
    dend_60 { pt3dadd( 292.705, 393.407, 37.413, 0.3512 ) }
    dend_60 { pt3dadd( 291.811, 393.536, 36.2429, 0.4904 ) }
    dend_60 { pt3dadd( 291.091, 394.045, 36.7394, 0.5848 ) }
    dend_60 { pt3dadd( 290.323, 394.868, 36.6402, 0.6974 ) }
    dend_60 { pt3dadd( 289.797, 395.821, 37.4128, 0.7372 ) }
    dend_60 { pt3dadd( 289.337, 396.733, 38.3197, 0.7236 ) }
    dend_60 { pt3dadd( 288.875, 397.753, 37.8179, 0.671 ) }
    dend_60 { pt3dadd( 288.182, 398.639, 37.6398, 0.6356 ) }
    dend_60 { pt3dadd( 287.254, 399.2, 38.1455, 0.658 ) }
    dend_60 { pt3dadd( 286.199, 399.584, 38.6672, 0.661 ) }
    dend_60 { pt3dadd( 285.376, 400.37, 38.8872, 0.6356 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 17/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 302.316, 385.858, 34.3378, 0.483 ) }
    dend_51 { pt3dadd( 302.74, 386.59, 35.1868, 0.3966 ) }
    dend_51 { pt3dadd( 303.721, 387.083, 35.6171, 0.4952 ) }
    dend_51 { pt3dadd( 304.813, 386.837, 35.7064, 0.6036 ) }
    dend_51 { pt3dadd( 305.876, 386.514, 35.0546, 0.634 ) }
    dend_51 { pt3dadd( 306.99, 386.407, 34.4957, 0.6598 ) }
    dend_51 { pt3dadd( 308.003, 386.775, 35.352, 0.6358 ) }
    dend_51 { pt3dadd( 308.661, 387.631, 36.2673, 0.6356 ) }
    // Section: apic_34, id: apic_34, parent: apic_0 (entry count 25/100)
    apic_34 { pt3dclear() }
    apic_34 { pt3dadd( 293.044, 361.277, 33.0453, 0.8136 ) }
    apic_34 { pt3dadd( 293.26, 361.41, 35.4603, 0.6086 ) }
    apic_34 { pt3dadd( 293.504, 361.56, 38.1721, 0.3782 ) }
    apic_34 { pt3dadd( 294.153, 361.728, 39.6091, 0.2542 ) }
    apic_34 { pt3dadd( 294.999, 362.479, 39.6463, 0.276 ) }
    apic_34 { pt3dadd( 295.161, 363.491, 39.6082, 0.3622 ) }
    apic_34 { pt3dadd( 294.478, 364.351, 39.48, 0.4322 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 32/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 293.044, 361.277, 33.0453, 0.8136 ) }
    apic_1 { pt3dadd( 292.795, 360.231, 33.073, 0.741 ) }
    apic_1 { pt3dadd( 292.64, 359.1, 33.2525, 0.7856 ) }
    apic_1 { pt3dadd( 292.623, 358.0, 34.0102, 0.8124 ) }
    apic_1 { pt3dadd( 292.553, 356.863, 34.1984, 0.8624 ) }
    apic_1 { pt3dadd( 292.238, 355.767, 34.4064, 0.8644 ) }
    apic_1 { pt3dadd( 292.075, 354.679, 35.1644, 0.8396 ) }
    apic_1 { pt3dadd( 291.609, 353.638, 35.2895, 0.7136 ) }
    apic_1 { pt3dadd( 291.115, 352.606, 35.3405, 0.6108 ) }
    apic_1 { pt3dadd( 290.475, 351.663, 35.5897, 0.5338 ) }
    // Section: dend_41, id: dend_41, parent: dend_23 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 309.109, 368.485, 30.8, 0.788 ) }
    dend_41 { pt3dadd( 308.826, 367.785, 31.4258, 0.688 ) }
    dend_41 { pt3dadd( 308.613, 367.007, 33.3189, 0.5318 ) }
    dend_41 { pt3dadd( 308.277, 365.979, 33.3928, 0.3958 ) }
    dend_41 { pt3dadd( 307.559, 365.135, 33.9052, 0.311 ) }
    dend_41 { pt3dadd( 307.501, 364.111, 35.028, 0.3294 ) }
    dend_41 { pt3dadd( 307.706, 362.996, 35.3438, 0.3304 ) }
    dend_41 { pt3dadd( 307.521, 361.901, 36.0018, 0.3814 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 50/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 309.109, 368.485, 30.8, 0.788 ) }
    dend_24 { pt3dadd( 309.957, 368.492, 30.8, 0.729 ) }
    dend_24 { pt3dadd( 311.098, 368.55, 30.8006, 0.7134 ) }
    dend_24 { pt3dadd( 312.184, 368.902, 30.8025, 0.6394 ) }
    dend_24 { pt3dadd( 313.078, 369.61, 30.8106, 0.6598 ) }
    dend_24 { pt3dadd( 314.074, 370.172, 30.856, 0.7594 ) }
    dend_24 { pt3dadd( 315.18, 369.954, 31.1878, 0.8132 ) }
    dend_24 { pt3dadd( 316.245, 369.628, 31.8214, 0.788 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 58/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 299.601, 385.871, 24.8889, 0.6356 ) }
    dend_20 { pt3dadd( 299.696, 386.184, 25.3509, 0.6206 ) }
    dend_20 { pt3dadd( 299.983, 387.132, 26.752, 0.575 ) }
    dend_20 { pt3dadd( 300.271, 388.079, 28.1529, 0.5294 ) }
    dend_20 { pt3dadd( 300.543, 388.605, 27.4324, 0.2288 ) }
    dend_20 { pt3dadd( 300.962, 389.524, 27.6203, 0.6814 ) }
    dend_20 { pt3dadd( 301.609, 390.139, 28.4374, 0.297 ) }
    dend_20 { pt3dadd( 301.328, 390.861, 27.0418, 0.446 ) }
    dend_20 { pt3dadd( 301.059, 391.757, 27.5248, 0.536 ) }
    dend_20 { pt3dadd( 300.848, 392.865, 27.8715, 0.375 ) }
    dend_20 { pt3dadd( 300.594, 393.925, 28.289, 0.2468 ) }
    dend_20 { pt3dadd( 300.302, 394.682, 29.4, 0.3944 ) }
    dend_20 { pt3dadd( 300.306, 395.708, 28.5732, 0.4866 ) }
    dend_20 { pt3dadd( 300.186, 396.838, 28.5625, 0.5578 ) }
    dend_20 { pt3dadd( 299.981, 397.934, 28.1716, 0.4928 ) }
    dend_20 { pt3dadd( 299.704, 398.597, 26.88, 0.2288 ) }
    dend_20 { pt3dadd( 299.999, 399.513, 27.5587, 0.3616 ) }
    dend_20 { pt3dadd( 300.242, 400.434, 28.6289, 0.2288 ) }
    dend_20 { pt3dadd( 299.642, 401.184, 29.6425, 0.527 ) }
    dend_20 { pt3dadd( 299.512, 402.026, 31.2648, 0.6606 ) }
    dend_20 { pt3dadd( 299.855, 402.99, 30.5864, 0.483 ) }
    dend_20 { pt3dadd( 299.973, 403.914, 30.87, 0.614 ) }
    dend_20 { pt3dadd( 299.957, 404.652, 32.48, 0.2536 ) }
    dend_20 { pt3dadd( 299.936, 405.777, 32.3028, 0.2288 ) }
    dend_20 { pt3dadd( 299.369, 406.263, 30.5458, 0.2288 ) }
    dend_20 { pt3dadd( 299.002, 406.921, 31.5487, 0.48 ) }
    dend_20 { pt3dadd( 298.099, 406.976, 31.8665, 0.472 ) }
    dend_20 { pt3dadd( 297.299, 407.164, 32.6116, 0.4246 ) }
    dend_20 { pt3dadd( 296.868, 407.687, 32.9731, 0.6864 ) }
    dend_20 { pt3dadd( 296.299, 407.911, 32.0695, 0.6356 ) }
    dend_20 { pt3dadd( 295.485, 408.502, 31.3928, 0.6334 ) }
    dend_20 { pt3dadd( 295.097, 408.866, 33.0562, 0.4576 ) }
    dend_20 { pt3dadd( 295.304, 408.701, 35.5289, 0.6102 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 91/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 299.601, 385.871, 24.8889, 0.6356 ) }
    dend_15 { pt3dadd( 299.102, 386.095, 26.0089, 0.4068 ) }
    dend_15 { pt3dadd( 298.496, 386.443, 28.1512, 0.4322 ) }
    dend_15 { pt3dadd( 297.836, 387.154, 28.3161, 0.579 ) }
    dend_15 { pt3dadd( 297.156, 387.755, 26.7473, 0.3936 ) }
    dend_15 { pt3dadd( 296.271, 388.054, 26.32, 0.6294 ) }
    dend_15 { pt3dadd( 295.443, 388.119, 27.5495, 0.617 ) }
    dend_15 { pt3dadd( 294.662, 388.236, 28.6437, 0.3874 ) }
    dend_15 { pt3dadd( 293.64, 388.65, 28.9167, 0.3648 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( 292.549, 388.932, 28.5172, 0.4786 ) }
    dend_15 { pt3dadd( 291.45, 389.071, 27.832, 0.385 ) }
    dend_15 { pt3dadd( 290.309, 389.079, 27.9558, 0.3814 ) }
    dend_15 { pt3dadd( 289.287, 389.101, 26.7179, 0.4312 ) }
    dend_15 { pt3dadd( 288.167, 389.238, 26.2828, 0.558 ) }
    dend_15 { pt3dadd( 287.201, 389.847, 26.124, 0.6356 ) }
    // Section: dend_13, id: dend_13, parent: dend_0 (entry count 6/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 299.953, 365.28, 21.3934, 0.6864 ) }
    dend_13 { pt3dadd( 299.926, 364.172, 19.7714, 0.6512 ) }
    dend_13 { pt3dadd( 299.802, 363.186, 18.3994, 0.523 ) }
    dend_13 { pt3dadd( 300.187, 362.321, 17.1349, 0.446 ) }
    dend_13 { pt3dadd( 300.708, 361.581, 15.4552, 0.4322 ) }
    dend_13 { pt3dadd( 300.559, 360.574, 14.7638, 0.455 ) }
    dend_13 { pt3dadd( 299.617, 360.004, 14.3074, 0.4576 ) }
    dend_13 { pt3dadd( 298.705, 360.466, 13.1547, 0.4326 ) }
    dend_13 { pt3dadd( 297.692, 360.985, 12.9111, 0.407 ) }
    dend_13 { pt3dadd( 296.561, 361.146, 13.0838, 0.3814 ) }
    dend_13 { pt3dadd( 295.52, 360.993, 12.2881, 0.4284 ) }
    dend_13 { pt3dadd( 294.746, 360.216, 12.3057, 0.5428 ) }
    dend_13 { pt3dadd( 295.293, 359.473, 12.292, 0.5084 ) }
    dend_13 { pt3dadd( 296.405, 359.448, 12.1187, 0.5084 ) }
    dend_13 { pt3dadd( 296.85, 358.4, 12.1646, 0.5338 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 21/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 299.953, 365.28, 21.3934, 0.6864 ) }
    dend_1 { pt3dadd( 299.282, 364.184, 21.835, 0.6852 ) }
    dend_1 { pt3dadd( 298.411, 363.444, 21.8336, 0.6614 ) }
    dend_1 { pt3dadd( 297.537, 362.705, 21.8064, 0.5858 ) }
    dend_1 { pt3dadd( 297.047, 361.676, 21.639, 0.5592 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 26/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 244.219, 342.959, 20.3468, 0.3304 ) }
    dend_79 { pt3dadd( 244.165, 343.194, 20.1984, 0.3438 ) }
    dend_79 { pt3dadd( 243.412, 343.879, 19.88, 0.243 ) }
    dend_79 { pt3dadd( 242.268, 343.886, 19.88, 0.2288 ) }
    dend_79 { pt3dadd( 241.124, 343.886, 19.88, 0.2288 ) }
    dend_79 { pt3dadd( 240.038, 343.886, 20.5313, 0.2382 ) }
    dend_79 { pt3dadd( 239.099, 343.4, 20.9782, 0.448 ) }
    dend_79 { pt3dadd( 238.488, 343.086, 20.9353, 0.3348 ) }
    dend_79 { pt3dadd( 237.43, 342.974, 20.72, 0.2326 ) }
    dend_79 { pt3dadd( 236.36, 343.099, 21.28, 0.3082 ) }
    dend_79 { pt3dadd( 235.602, 342.569, 21.84, 0.5724 ) }
    dend_79 { pt3dadd( 234.633, 342.342, 21.4194, 0.2924 ) }
    dend_79 { pt3dadd( 233.686, 342.462, 21.6006, 0.3782 ) }
    dend_79 { pt3dadd( 232.891, 342.834, 22.6789, 0.3332 ) }
    dend_79 { pt3dadd( 232.271, 343.019, 21.1238, 0.237 ) }
    dend_79 { pt3dadd( 231.22, 343.04, 21.8156, 0.2542 ) }
    dend_79 { pt3dadd( 230.253, 342.557, 22.4, 0.4024 ) }
    dend_79 { pt3dadd( 229.207, 342.388, 21.7767, 0.4342 ) }
    dend_79 { pt3dadd( 228.708, 341.525, 20.8393, 0.334 ) }
    dend_79 { pt3dadd( 227.874, 340.795, 20.7152, 0.2288 ) }
    dend_79 { pt3dadd( 226.793, 340.475, 20.44, 0.2288 ) }
    dend_79 { pt3dadd( 225.747, 340.015, 20.44, 0.2744 ) }
    dend_79 { pt3dadd( 224.854, 339.328, 20.0712, 0.3304 ) }
    dend_79 { pt3dadd( 224.191, 338.555, 20.6422, 0.2612 ) }
    dend_79 { pt3dadd( 223.3, 337.917, 20.44, 0.2288 ) }
    dend_79 { pt3dadd( 222.566, 337.137, 20.16, 0.2634 ) }
    dend_79 { pt3dadd( 221.703, 336.416, 20.3157, 0.3304 ) }
    dend_79 { pt3dadd( 220.679, 336.131, 20.7642, 0.2994 ) }
    dend_79 { pt3dadd( 219.656, 335.981, 21.8025, 0.2514 ) }
    dend_79 { pt3dadd( 218.904, 335.844, 20.5265, 0.385 ) }
    dend_79 { pt3dadd( 217.838, 335.65, 20.9936, 0.561 ) }
    dend_79 { pt3dadd( 217.088, 335.542, 19.462, 0.6254 ) }
    dend_79 { pt3dadd( 216.671, 334.912, 20.1984, 0.5078 ) }
    dend_79 { pt3dadd( 216.465, 334.055, 19.6381, 0.4464 ) }
    dend_79 { pt3dadd( 216.078, 334.349, 18.5623, 0.5114 ) }
    dend_79 { pt3dadd( 215.158, 334.047, 18.0796, 0.641 ) }
    dend_79 { pt3dadd( 214.537, 333.182, 17.6159, 0.3872 ) }
    dend_79 { pt3dadd( 213.77, 332.754, 16.3534, 0.4732 ) }
    dend_79 { pt3dadd( 212.944, 332.17, 17.0458, 0.573 ) }
    dend_79 { pt3dadd( 211.895, 332.242, 17.36, 0.6864 ) }
    dend_79 { pt3dadd( 211.86, 333.219, 17.0727, 0.6864 ) }
    dend_79 { pt3dadd( 211.372, 333.932, 16.1269, 0.5638 ) }
    dend_79 { pt3dadd( 211.051, 333.333, 15.5893, 0.6864 ) }
    dend_79 { pt3dadd( 210.078, 332.975, 15.1718, 0.6018 ) }
    dend_79 { pt3dadd( 209.008, 332.843, 14.6695, 0.4768 ) }
    dend_79 { pt3dadd( 207.971, 332.593, 15.12, 0.823 ) }
    dend_79 { pt3dadd( 206.908, 332.226, 14.7008, 0.604 ) }
    dend_79 { pt3dadd( 205.918, 331.766, 14.6818, 0.5454 ) }
    dend_79 { pt3dadd( 204.945, 332.157, 14.6793, 0.5216 ) }
    dend_79 { pt3dadd( 204.361, 332.694, 13.1911, 0.6074 ) }
    dend_79 { pt3dadd( 203.404, 332.717, 12.3166, 0.6624 ) }
    dend_79 { pt3dadd( 202.573, 332.904, 12.0851, 0.3066 ) }
    dend_79 { pt3dadd( 201.536, 332.841, 12.7812, 0.5232 ) }
    dend_79 { pt3dadd( 200.675, 332.561, 13.1897, 0.3082 ) }
    dend_79 { pt3dadd( 199.782, 332.801, 14.1159, 0.284 ) }
    dend_79 { pt3dadd( 198.748, 333.042, 13.8667, 0.6114 ) }
    dend_79 { pt3dadd( 198.548, 333.484, 12.868, 0.7372 ) }
    dend_79 { pt3dadd( 198.172, 333.734, 11.3226, 0.6052 ) }
    dend_79 { pt3dadd( 197.743, 334.51, 12.3385, 0.4372 ) }
    dend_79 { pt3dadd( 196.703, 334.869, 12.9396, 0.4178 ) }
    dend_79 { pt3dadd( 195.764, 334.819, 12.9847, 0.3984 ) }
    dend_79 { pt3dadd( 195.503, 334.843, 11.3277, 0.3588 ) }
    dend_79 { pt3dadd( 194.865, 334.262, 10.9175, 0.2522 ) }
    dend_79 { pt3dadd( 194.171, 333.526, 11.3341, 0.5206 ) }
    dend_79 { pt3dadd( 194.137, 332.904, 12.04, 0.2288 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 91/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 244.219, 342.959, 20.3468, 0.3304 ) }
    dend_78 { pt3dadd( 244.13, 342.496, 20.519, 0.2288 ) }
    dend_78 { pt3dadd( 244.587, 341.713, 19.32, 0.2796 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 94/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 272.132, 359.747, 17.1959, 0.356 ) }
    dend_76 { pt3dadd( 270.992, 360.22, 17.9925, 0.2774 ) }
    dend_76 { pt3dadd( 269.872, 360.249, 17.6128, 0.3036 ) }
    dend_76 { pt3dadd( 268.803, 360.265, 16.6219, 0.2806 ) }
    dend_76 { pt3dadd( 267.805, 360.584, 15.6657, 0.2504 ) }
    dend_76 { pt3dadd( 267.083, 361.241, 14.6471, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_76 { pt3dadd( 266.118, 361.581, 15.5982, 0.2288 ) }
    dend_76 { pt3dadd( 265.223, 361.387, 16.9036, 0.2288 ) }
    dend_76 { pt3dadd( 264.701, 360.655, 16.0037, 0.2288 ) }
    dend_76 { pt3dadd( 264.466, 359.81, 14.2313, 0.2288 ) }
    dend_76 { pt3dadd( 264.088, 358.895, 14.0526, 0.2434 ) }
    dend_76 { pt3dadd( 263.682, 358.272, 15.9303, 0.2702 ) }
    dend_76 { pt3dadd( 263.323, 358.69, 17.901, 0.2968 ) }
    dend_76 { pt3dadd( 262.712, 359.389, 19.4491, 0.2866 ) }
    dend_76 { pt3dadd( 262.02, 360.234, 19.9346, 0.2594 ) }
    dend_76 { pt3dadd( 261.363, 361.17, 20.0416, 0.2326 ) }
    dend_76 { pt3dadd( 261.061, 360.703, 21.84, 0.2542 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 11/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 272.132, 359.747, 17.1959, 0.356 ) }
    dend_75 { pt3dadd( 271.98, 359.164, 16.1445, 0.3016 ) }
    dend_75 { pt3dadd( 272.371, 358.199, 15.171, 0.3644 ) }
    dend_75 { pt3dadd( 272.154, 357.215, 14.5897, 0.4098 ) }
    dend_75 { pt3dadd( 271.421, 356.387, 14.5961, 0.4576 ) }
    dend_75 { pt3dadd( 270.982, 355.537, 13.6086, 0.4802 ) }
    dend_75 { pt3dadd( 271.022, 354.457, 12.964, 0.4826 ) }
    dend_75 { pt3dadd( 270.488, 353.631, 13.2376, 0.4576 ) }
    dend_75 { pt3dadd( 269.487, 353.322, 14.1644, 0.4284 ) }
    dend_75 { pt3dadd( 268.451, 353.018, 14.4956, 0.4222 ) }
    dend_75 { pt3dadd( 267.516, 352.476, 13.7063, 0.4162 ) }
    dend_75 { pt3dadd( 267.075, 351.541, 13.4476, 0.4404 ) }
    dend_75 { pt3dadd( 267.012, 350.415, 13.8457, 0.475 ) }
    dend_75 { pt3dadd( 267.028, 349.277, 13.9997, 0.5004 ) }
    dend_75 { pt3dadd( 267.139, 348.14, 13.9989, 0.491 ) }
    dend_75 { pt3dadd( 267.472, 347.053, 13.9941, 0.4656 ) }
    dend_75 { pt3dadd( 267.548, 345.935, 13.9616, 0.476 ) }
    dend_75 { pt3dadd( 266.996, 344.988, 13.7052, 0.5022 ) }
    dend_75 { pt3dadd( 266.06, 344.36, 13.6181, 0.5492 ) }
    dend_75 { pt3dadd( 265.141, 343.683, 13.704, 0.5592 ) }
    dend_75 { pt3dadd( 264.386, 342.957, 12.7128, 0.5166 ) }
    dend_75 { pt3dadd( 263.678, 342.112, 12.0123, 0.3982 ) }
    dend_75 { pt3dadd( 262.705, 341.658, 12.7042, 0.287 ) }
    dend_75 { pt3dadd( 261.823, 342.253, 13.4966, 0.2548 ) }
    dend_75 { pt3dadd( 261.518, 343.314, 12.88, 0.305 ) }
    // Section: dend_66, id: dend_66, parent: dend_60 (entry count 36/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 285.376, 400.37, 38.8872, 0.6356 ) }
    dend_66 { pt3dadd( 284.751, 401.076, 36.9678, 0.5876 ) }
    dend_66 { pt3dadd( 283.854, 401.417, 37.3548, 0.3814 ) }
    dend_66 { pt3dadd( 282.925, 402.005, 37.24, 0.5592 ) }
    dend_66 { pt3dadd( 282.108, 402.536, 36.5078, 0.4068 ) }
    dend_66 { pt3dadd( 281.288, 403.117, 36.12, 0.3314 ) }
    dend_66 { pt3dadd( 280.328, 403.146, 37.1675, 0.2796 ) }
    dend_66 { pt3dadd( 279.671, 403.112, 35.2377, 0.392 ) }
    dend_66 { pt3dadd( 278.736, 402.917, 34.7536, 0.3912 ) }
    dend_66 { pt3dadd( 278.007, 403.26, 35.84, 0.6464 ) }
    dend_66 { pt3dadd( 276.964, 403.489, 36.5394, 0.356 ) }
    dend_66 { pt3dadd( 275.887, 403.753, 36.68, 0.2288 ) }
    dend_66 { pt3dadd( 275.354, 404.404, 36.1544, 0.2496 ) }
    dend_66 { pt3dadd( 274.907, 404.92, 37.7216, 0.305 ) }
    dend_66 { pt3dadd( 274.467, 405.4, 35.84, 0.4708 ) }
    dend_66 { pt3dadd( 273.736, 406.107, 36.1598, 0.5382 ) }
    dend_66 { pt3dadd( 272.932, 406.123, 35.84, 0.4068 ) }
    dend_66 { pt3dadd( 272.089, 406.644, 35.0672, 0.5274 ) }
    dend_66 { pt3dadd( 271.172, 407.218, 35.6367, 0.3452 ) }
    dend_66 { pt3dadd( 270.416, 407.835, 35.6793, 0.472 ) }
    dend_66 { pt3dadd( 269.664, 407.979, 33.9052, 0.6102 ) }
    dend_66 { pt3dadd( 268.903, 408.259, 32.48, 0.358 ) }
    dend_66 { pt3dadd( 268.047, 408.858, 32.7146, 0.3258 ) }
    dend_66 { pt3dadd( 266.938, 408.751, 33.04, 0.6124 ) }
    dend_66 { pt3dadd( 265.936, 408.614, 32.0146, 0.5136 ) }
    dend_66 { pt3dadd( 264.953, 408.697, 31.5182, 0.5334 ) }
    dend_66 { pt3dadd( 263.906, 408.732, 31.4266, 0.4576 ) }
    dend_66 { pt3dadd( 262.809, 408.866, 31.7685, 0.4014 ) }
    dend_66 { pt3dadd( 261.683, 408.814, 31.92, 0.3304 ) }
    dend_66 { pt3dadd( 260.56, 408.932, 31.619, 0.3386 ) }
    dend_66 { pt3dadd( 259.435, 409.075, 31.2483, 0.28 ) }
    dend_66 { pt3dadd( 258.6, 409.679, 31.0845, 0.2342 ) }
    dend_66 { pt3dadd( 257.597, 410.157, 31.0845, 0.2288 ) }
    dend_66 { pt3dadd( 256.525, 410.558, 31.0845, 0.2288 ) }
    dend_66 { pt3dadd( 255.455, 410.961, 31.0845, 0.2288 ) }
    dend_66 { pt3dadd( 254.314, 411.026, 31.0845, 0.2288 ) }
    dend_66 { pt3dadd( 253.187, 411.207, 31.0845, 0.2288 ) }
    dend_66 { pt3dadd( 252.095, 411.522, 31.0845, 0.2346 ) }
    dend_66 { pt3dadd( 251.079, 412.051, 31.0845, 0.2584 ) }
    dend_66 { pt3dadd( 250.075, 412.589, 31.019, 0.2822 ) }
    dend_66 { pt3dadd( 249.163, 413.225, 30.3652, 0.3068 ) }
    dend_66 { pt3dadd( 248.25, 413.863, 29.7111, 0.3314 ) }
    dend_66 { pt3dadd( 247.339, 414.499, 29.0573, 0.356 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 79/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 285.376, 400.37, 38.8872, 0.6356 ) }
    dend_61 { pt3dadd( 285.135, 401.084, 39.4862, 0.618 ) }
    dend_61 { pt3dadd( 284.89, 402.147, 40.3077, 0.5742 ) }
    dend_61 { pt3dadd( 284.738, 403.262, 40.7478, 0.5774 ) }
    dend_61 { pt3dadd( 284.293, 404.291, 40.6952, 0.6032 ) }
    dend_61 { pt3dadd( 283.743, 405.265, 40.1495, 0.647 ) }
    dend_61 { pt3dadd( 283.259, 406.287, 40.1386, 0.6238 ) }
    dend_61 { pt3dadd( 282.95, 407.321, 40.9646, 0.6102 ) }
    dend_61 { pt3dadd( 282.364, 408.019, 42.4886, 0.5518 ) }
    dend_61 { pt3dadd( 281.467, 408.611, 43.2656, 0.5138 ) }
    dend_61 { pt3dadd( 280.451, 409.033, 43.9835, 0.4482 ) }
    dend_61 { pt3dadd( 279.385, 409.415, 44.3092, 0.4322 ) }
    dend_61 { pt3dadd( 278.373, 409.134, 45.0106, 0.477 ) }
    dend_61 { pt3dadd( 277.627, 408.332, 45.7288, 0.5758 ) }
    dend_61 { pt3dadd( 276.962, 407.632, 46.8222, 0.661 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 94/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 308.661, 387.631, 36.2673, 0.6356 ) }
    dend_53 { pt3dadd( 308.911, 388.267, 36.2933, 0.7516 ) }
    dend_53 { pt3dadd( 308.252, 388.841, 37.5782, 0.517 ) }
    dend_53 { pt3dadd( 307.352, 389.387, 37.8, 0.2288 ) }
    dend_53 { pt3dadd( 306.645, 390.102, 37.8, 0.4372 ) }
    dend_53 { pt3dadd( 306.181, 391.058, 37.5416, 0.4478 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_53 { pt3dadd( 305.56, 391.822, 37.6449, 0.615 ) }
    dend_53 { pt3dadd( 304.636, 392.377, 37.8, 0.585 ) }
    dend_53 { pt3dadd( 303.864, 393.177, 37.5522, 0.5418 ) }
    dend_53 { pt3dadd( 303.006, 393.692, 38.5846, 0.6356 ) }
    dend_53 { pt3dadd( 302.477, 394.009, 40.32, 0.4858 ) }
    dend_53 { pt3dadd( 301.598, 394.535, 40.5866, 0.3486 ) }
    dend_53 { pt3dadd( 300.873, 394.965, 41.5528, 0.4482 ) }
    dend_53 { pt3dadd( 301.319, 394.866, 43.8623, 0.551 ) }
    dend_53 { pt3dadd( 300.911, 393.943, 44.52, 0.593 ) }
    dend_53 { pt3dadd( 300.206, 393.422, 43.2432, 0.6864 ) }
    dend_53 { pt3dadd( 300.186, 392.717, 41.7766, 0.6864 ) }
    dend_53 { pt3dadd( 299.725, 391.764, 42.0, 0.483 ) }
    dend_53 { pt3dadd( 299.726, 390.694, 41.72, 0.776 ) }
    dend_53 { pt3dadd( 299.085, 390.218, 43.1973, 0.4322 ) }
    dend_53 { pt3dadd( 298.925, 389.853, 45.395, 0.3814 ) }
    dend_53 { pt3dadd( 298.986, 388.77, 45.64, 0.5202 ) }
    dend_53 { pt3dadd( 299.087, 387.972, 44.5883, 0.5238 ) }
    dend_53 { pt3dadd( 299.156, 387.159, 45.3986, 0.6092 ) }
    dend_53 { pt3dadd( 298.492, 386.453, 46.422, 0.4068 ) }
    dend_53 { pt3dadd( 297.74, 385.869, 47.04, 0.5746 ) }
    dend_53 { pt3dadd( 297.055, 385.326, 46.494, 0.6292 ) }
    dend_53 { pt3dadd( 296.661, 384.843, 47.248, 0.3852 ) }
    dend_53 { pt3dadd( 296.537, 384.263, 48.6836, 0.2894 ) }
    dend_53 { pt3dadd( 296.297, 383.804, 46.7191, 0.273 ) }
    dend_53 { pt3dadd( 295.622, 383.126, 46.5027, 0.4576 ) }
    dend_53 { pt3dadd( 294.951, 382.515, 46.6771, 0.8486 ) }
    dend_53 { pt3dadd( 294.209, 381.701, 47.2125, 0.8234 ) }
    dend_53 { pt3dadd( 293.817, 380.914, 48.72, 0.483 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 28/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 308.661, 387.631, 36.2673, 0.6356 ) }
    dend_52 { pt3dadd( 309.396, 388.315, 36.3852, 0.5452 ) }
    dend_52 { pt3dadd( 310.045, 389.254, 36.4014, 0.5338 ) }
    dend_52 { pt3dadd( 310.764, 390.142, 36.4059, 0.5564 ) }
    dend_52 { pt3dadd( 311.686, 390.811, 36.4297, 0.5136 ) }
    dend_52 { pt3dadd( 312.569, 391.536, 36.5445, 0.5084 ) }
    dend_52 { pt3dadd( 313.458, 392.142, 37.4556, 0.5084 ) }
    dend_52 { pt3dadd( 314.189, 392.946, 38.3135, 0.484 ) }
    dend_52 { pt3dadd( 315.132, 393.451, 37.4072, 0.3832 ) }
    dend_52 { pt3dadd( 315.973, 394.108, 36.4, 0.3304 ) }
    // Section: apic_38, id: apic_38, parent: apic_34 (entry count 38/100)
    apic_38 { pt3dclear() }
    apic_38 { pt3dadd( 294.478, 364.351, 39.48, 0.4322 ) }
    apic_38 { pt3dadd( 295.082, 364.602, 38.6672, 0.6388 ) }
    apic_38 { pt3dadd( 295.995, 364.75, 37.52, 0.4828 ) }
    apic_38 { pt3dadd( 296.198, 363.783, 36.4311, 0.5772 ) }
    apic_38 { pt3dadd( 296.572, 363.4, 38.5311, 0.3788 ) }
    apic_38 { pt3dadd( 297.383, 363.106, 39.76, 0.2372 ) }
    apic_38 { pt3dadd( 298.397, 362.762, 39.5097, 0.4214 ) }
    apic_38 { pt3dadd( 299.069, 363.328, 38.36, 0.2288 ) }
    apic_38 { pt3dadd( 300.165, 363.449, 38.36, 0.314 ) }
    apic_38 { pt3dadd( 301.275, 363.298, 38.5571, 0.4216 ) }
    apic_38 { pt3dadd( 302.315, 363.116, 39.48, 0.5382 ) }
    apic_38 { pt3dadd( 303.198, 362.608, 39.0286, 0.5804 ) }
    apic_38 { pt3dadd( 303.996, 362.268, 38.0766, 0.8224 ) }
    apic_38 { pt3dadd( 304.575, 361.792, 37.8834, 0.4492 ) }
    apic_38 { pt3dadd( 304.819, 362.076, 35.9254, 0.623 ) }
    apic_38 { pt3dadd( 305.715, 361.962, 35.9327, 0.254 ) }
    apic_38 { pt3dadd( 306.486, 361.7, 35.9904, 0.4238 ) }
    apic_38 { pt3dadd( 307.172, 361.489, 37.3514, 0.2288 ) }
    apic_38 { pt3dadd( 307.826, 360.858, 37.52, 0.591 ) }
    apic_38 { pt3dadd( 308.077, 359.84, 37.0423, 0.709 ) }
    apic_38 { pt3dadd( 308.743, 359.538, 38.6562, 0.3182 ) }
    apic_38 { pt3dadd( 309.345, 359.046, 40.241, 0.5654 ) }
    apic_38 { pt3dadd( 309.923, 358.751, 41.9989, 0.2552 ) }
    apic_38 { pt3dadd( 310.851, 358.693, 41.1401, 0.2564 ) }
    apic_38 { pt3dadd( 311.716, 359.091, 40.4001, 0.7576 ) }
    apic_38 { pt3dadd( 312.807, 359.102, 41.0239, 0.6864 ) }
    apic_38 { pt3dadd( 313.827, 359.054, 41.44, 0.5592 ) }
    apic_38 { pt3dadd( 314.816, 358.987, 41.8132, 0.5592 ) }
    apic_38 { pt3dadd( 315.894, 358.917, 42.6574, 0.4576 ) }
    apic_38 { pt3dadd( 317.01, 358.985, 42.84, 0.5608 ) }
    apic_38 { pt3dadd( 318.111, 358.852, 42.707, 0.777 ) }
    apic_38 { pt3dadd( 319.103, 359.179, 41.7267, 0.6852 ) }
    apic_38 { pt3dadd( 319.827, 359.47, 43.0469, 0.4622 ) }
    apic_38 { pt3dadd( 320.768, 359.771, 43.5072, 0.4322 ) }
    apic_38 { pt3dadd( 321.551, 359.464, 44.3794, 0.3458 ) }
    apic_38 { pt3dadd( 322.514, 359.172, 44.3442, 0.4576 ) }
    apic_38 { pt3dadd( 323.187, 358.419, 43.4, 0.3986 ) }
    apic_38 { pt3dadd( 323.902, 357.729, 42.9044, 0.7506 ) }
    apic_38 { pt3dadd( 324.842, 357.867, 43.6657, 0.6516 ) }
    apic_38 { pt3dadd( 325.532, 357.993, 42.383, 0.6726 ) }
    apic_38 { pt3dadd( 326.358, 358.347, 43.6738, 0.5438 ) }
    apic_38 { pt3dadd( 326.865, 358.675, 42.84, 0.4708 ) }
    apic_38 { pt3dadd( 327.936, 358.811, 42.56, 0.5082 ) }
    apic_38 { pt3dadd( 328.747, 359.294, 41.8317, 0.4002 ) }
    apic_38 { pt3dadd( 329.836, 359.33, 42.0885, 0.661 ) }
    apic_38 { pt3dadd( 330.627, 359.358, 43.6836, 0.474 ) }
    apic_38 { pt3dadd( 331.258, 360.022, 44.8, 0.5958 ) }
    apic_38 { pt3dadd( 332.233, 360.474, 44.8, 0.6324 ) }
    apic_38 { pt3dadd( 333.289, 360.808, 44.564, 0.4576 ) }
    apic_38 { pt3dadd( 334.112, 361.322, 44.5886, 0.5782 ) }
    apic_38 { pt3dadd( 334.724, 362.03, 44.24, 0.5166 ) }
    apic_38 { pt3dadd( 335.078, 362.534, 45.6095, 0.6836 ) }
    apic_38 { pt3dadd( 335.936, 362.932, 45.92, 0.5848 ) }
    apic_38 { pt3dadd( 336.939, 363.416, 45.9584, 0.6884 ) }
    apic_38 { pt3dadd( 337.755, 364.139, 46.1555, 0.9818 ) }
    apic_38 { pt3dadd( 338.611, 364.689, 46.0813, 0.4764 ) }
    apic_38 { pt3dadd( 339.156, 365.153, 46.8138, 0.6102 ) }
    apic_38 { pt3dadd( 340.098, 365.463, 47.2567, 0.5858 ) }
    apic_38 { pt3dadd( 340.882, 365.608, 45.7307, 0.661 ) }
    apic_38 { pt3dadd( 341.5, 366.082, 47.2892, 0.7122 ) }
    apic_38 { pt3dadd( 342.455, 366.657, 47.1313, 0.6334 ) }
    apic_38 { pt3dadd( 343.455, 367.126, 47.3796, 0.5358 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_38 { pt3dadd( 344.447, 367.509, 47.971, 0.6076 ) }
    apic_38 { pt3dadd( 345.383, 367.821, 47.9027, 0.5592 ) }
    apic_38 { pt3dadd( 346.45, 368.113, 47.6, 0.4258 ) }
    apic_38 { pt3dadd( 347.557, 368.247, 47.2335, 0.3078 ) }
    apic_38 { pt3dadd( 348.452, 368.638, 47.5264, 0.5186 ) }
    apic_38 { pt3dadd( 349.334, 369.169, 47.9419, 0.4574 ) }
    apic_38 { pt3dadd( 350.411, 369.169, 48.16, 0.4078 ) }
    apic_38 { pt3dadd( 351.062, 369.323, 46.76, 0.605 ) }
    apic_38 { pt3dadd( 352.098, 369.727, 47.0159, 0.3814 ) }
    apic_38 { pt3dadd( 353.147, 370.148, 46.9907, 0.3674 ) }
    apic_38 { pt3dadd( 354.061, 370.54, 45.92, 0.256 ) }
    apic_38 { pt3dadd( 354.86, 370.542, 47.1531, 0.2962 ) }
    apic_38 { pt3dadd( 355.326, 371.096, 47.3718, 0.288 ) }
    apic_38 { pt3dadd( 355.837, 371.791, 46.3669, 0.3358 ) }
    apic_38 { pt3dadd( 356.341, 372.568, 47.7907, 0.3288 ) }
    apic_38 { pt3dadd( 356.925, 373.47, 48.5654, 0.3986 ) }
    apic_38 { pt3dadd( 357.581, 374.088, 48.6797, 0.4686 ) }
    apic_38 { pt3dadd( 357.857, 374.979, 49.4337, 0.5832 ) }
    apic_38 { pt3dadd( 358.305, 375.789, 48.1631, 0.4778 ) }
    apic_38 { pt3dadd( 358.828, 376.33, 49.5362, 0.4516 ) }
    apic_38 { pt3dadd( 359.365, 377.053, 50.267, 0.3834 ) }
    apic_38 { pt3dadd( 360.053, 377.82, 50.7931, 0.3182 ) }
    apic_38 { pt3dadd( 360.664, 378.546, 51.2117, 0.5338 ) }
    apic_38 { pt3dadd( 361.356, 379.4, 50.96, 0.5832 ) }
    apic_38 { pt3dadd( 361.858, 380.322, 51.1081, 0.4606 ) }
    apic_38 { pt3dadd( 362.195, 381.058, 50.2555, 0.2542 ) }
    apic_38 { pt3dadd( 362.883, 381.587, 49.28, 0.3664 ) }
    apic_38 { pt3dadd( 363.67, 382.103, 50.2001, 0.2288 ) }
    apic_38 { pt3dadd( 364.348, 382.261, 52.3382, 0.3104 ) }
    apic_38 { pt3dadd( 364.985, 383.116, 52.7881, 0.4576 ) }
    apic_38 { pt3dadd( 365.984, 383.539, 53.0956, 0.5244 ) }
    apic_38 { pt3dadd( 366.906, 384.14, 53.503, 0.4268 ) }
    apic_38 { pt3dadd( 367.779, 384.626, 53.2258, 0.2632 ) }
    apic_38 { pt3dadd( 368.479, 385.276, 54.4043, 0.4688 ) }
    apic_38 { pt3dadd( 369.1, 386.094, 55.295, 0.2768 ) }
    apic_38 { pt3dadd( 370.011, 386.614, 54.6507, 0.419 ) }
    apic_38 { pt3dadd( 371.068, 386.762, 54.7016, 0.3304 ) }
    apic_38 { pt3dadd( 372.028, 387.126, 55.3468, 0.4576 ) }
    apic_38 { pt3dadd( 372.833, 387.061, 56.0515, 0.3118 ) }
    apic_38 { pt3dadd( 373.694, 387.166, 56.84, 0.251 ) }
    apic_38 { pt3dadd( 374.47, 387.993, 56.84, 0.2288 ) }
    apic_38 { pt3dadd( 375.542, 388.236, 57.12, 0.2574 ) }
    apic_38 { pt3dadd( 376.212, 389.119, 56.6913, 0.249 ) }
    apic_38 { pt3dadd( 376.86, 390.014, 57.1463, 0.2288 ) }
    apic_38 { pt3dadd( 377.557, 390.854, 57.4, 0.3364 ) }
    apic_38 { pt3dadd( 378.391, 391.586, 57.4781, 0.2908 ) }
    apic_38 { pt3dadd( 379.472, 391.75, 57.96, 0.2288 ) }
    apic_38 { pt3dadd( 380.585, 391.947, 57.96, 0.2288 ) }
    apic_38 { pt3dadd( 381.35, 392.676, 58.655, 0.4446 ) }
    apic_38 { pt3dadd( 382.164, 393.289, 59.1808, 0.3112 ) }
    apic_38 { pt3dadd( 382.435, 393.994, 60.5164, 0.2288 ) }
    apic_38 { pt3dadd( 383.561, 393.994, 60.76, 0.2288 ) }
    apic_38 { pt3dadd( 384.498, 394.251, 61.0137, 0.2288 ) }
    apic_38 { pt3dadd( 384.498, 395.394, 61.04, 0.2288 ) }
    apic_38 { pt3dadd( 384.555, 396.509, 61.3186, 0.2288 ) }
    apic_38 { pt3dadd( 385.561, 396.739, 61.768, 0.2288 ) }
    apic_38 { pt3dadd( 386.28, 397.381, 62.344, 0.3442 ) }
    apic_38 { pt3dadd( 387.339, 397.725, 62.16, 0.2796 ) }
    apic_38 { pt3dadd( 387.841, 398.194, 62.72, 0.2288 ) }
    apic_38 { pt3dadd( 388.231, 399.134, 63.4063, 0.2626 ) }
    apic_38 { pt3dadd( 389.061, 399.256, 64.6979, 0.2288 ) }
    apic_38 { pt3dadd( 389.95, 399.394, 65.9674, 0.3304 ) }
    apic_38 { pt3dadd( 390.423, 400.171, 66.0232, 0.2288 ) }
    apic_38 { pt3dadd( 391.015, 400.252, 67.2, 0.2706 ) }
    apic_38 { pt3dadd( 391.899, 400.559, 68.278, 0.2288 ) }
    apic_38 { pt3dadd( 392.909, 400.742, 69.5159, 0.2288 ) }
    apic_38 { pt3dadd( 393.782, 401.215, 70.2778, 0.2288 ) }
    apic_38 { pt3dadd( 394.439, 402.151, 70.2778, 0.2288 ) }
    apic_38 { pt3dadd( 395.094, 403.088, 70.2778, 0.2288 ) }
    apic_38 { pt3dadd( 395.83, 403.959, 70.2778, 0.2288 ) }
    apic_38 { pt3dadd( 396.638, 404.768, 70.2778, 0.2288 ) }
    apic_38 { pt3dadd( 397.498, 405.483, 70.835, 0.2288 ) }
    apic_38 { pt3dadd( 398.364, 406.182, 71.4823, 0.2288 ) }
    apic_38 { pt3dadd( 399.23, 406.881, 72.1297, 0.2288 ) }
    apic_38 { pt3dadd( 400.055, 407.66, 72.305, 0.2288 ) }
    apic_38 { pt3dadd( 400.863, 408.469, 72.305, 0.2288 ) }
    apic_38 { pt3dadd( 401.673, 409.244, 71.9141, 0.2288 ) }
    apic_38 { pt3dadd( 402.484, 409.988, 71.1505, 0.2288 ) }
    apic_38 { pt3dadd( 403.294, 410.733, 70.3867, 0.2288 ) }
    apic_38 { pt3dadd( 404.105, 411.476, 69.6231, 0.2288 ) }
    apic_38 { pt3dadd( 404.862, 412.18, 69.099, 0.2288 ) }
    apic_38 { pt3dadd( 405.23, 412.34, 71.3798, 0.25 ) }
    apic_38 { pt3dadd( 405.638, 412.763, 73.3477, 0.5748 ) }
    apic_38 { pt3dadd( 406.444, 413.214, 74.3761, 0.6006 ) }
    apic_38 { pt3dadd( 407.532, 413.423, 74.76, 0.3092 ) }
    apic_38 { pt3dadd( 408.645, 413.444, 75.04, 0.3056 ) }
    apic_38 { pt3dadd( 409.729, 413.548, 75.5255, 0.4626 ) }
    apic_38 { pt3dadd( 410.776, 413.39, 76.2818, 0.5196 ) }
    apic_38 { pt3dadd( 411.408, 413.874, 77.84, 0.4576 ) }
    apic_38 { pt3dadd( 412.017, 414.591, 78.8379, 0.519 ) }
    apic_38 { pt3dadd( 412.92, 414.952, 77.7151, 0.704 ) }
    apic_38 { pt3dadd( 413.341, 415.625, 76.2947, 0.6402 ) }
    apic_38 { pt3dadd( 413.832, 416.187, 77.2131, 0.6654 ) }
    apic_38 { pt3dadd( 414.357, 416.073, 77.0, 0.305 ) }
    // Section: apic_35, id: apic_35, parent: apic_34 (entry count 94/100)
    apic_35 { pt3dclear() }
    apic_35 { pt3dadd( 294.478, 364.351, 39.48, 0.4322 ) }
    apic_35 { pt3dadd( 293.939, 364.881, 39.8709, 0.313 ) }
    apic_35 { pt3dadd( 293.423, 364.414, 42.0932, 0.5338 ) }
    // Section: apic_25, id: apic_25, parent: apic_1 (entry count 97/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 290.475, 351.663, 35.5897, 0.5338 ) }
    apic_25 { pt3dadd( 290.118, 350.845, 35.0, 0.7372 ) }
    apic_25 { pt3dadd( 290.411, 349.944, 34.1653, 0.4932 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_25 { pt3dadd( 289.803, 349.409, 33.7159, 0.2958 ) }
    apic_25 { pt3dadd( 290.233, 348.711, 35.1868, 0.6642 ) }
    apic_25 { pt3dadd( 290.495, 347.712, 35.56, 0.5926 ) }
    apic_25 { pt3dadd( 290.017, 346.848, 34.7208, 0.6612 ) }
    apic_25 { pt3dadd( 289.827, 345.935, 35.4668, 0.5226 ) }
    apic_25 { pt3dadd( 289.775, 345.037, 33.8705, 0.287 ) }
    apic_25 { pt3dadd( 289.661, 343.988, 33.1139, 0.5084 ) }
    apic_25 { pt3dadd( 289.78, 343.075, 33.6806, 0.416 ) }
    apic_25 { pt3dadd( 289.775, 342.175, 34.5044, 0.4312 ) }
    apic_25 { pt3dadd( 290.138, 341.128, 34.44, 0.2358 ) }
    apic_25 { pt3dadd( 290.118, 340.66, 32.5077, 0.6944 ) }
    apic_25 { pt3dadd( 290.118, 339.768, 33.32, 0.483 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 12/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 290.475, 351.663, 35.5897, 0.5338 ) }
    apic_2 { pt3dadd( 289.876, 350.949, 36.5243, 0.5388 ) }
    apic_2 { pt3dadd( 289.302, 350.053, 37.5057, 0.4714 ) }
    apic_2 { pt3dadd( 288.637, 349.233, 37.863, 0.4576 ) }
    apic_2 { pt3dadd( 287.75, 348.557, 37.2428, 0.508 ) }
    apic_2 { pt3dadd( 286.962, 347.77, 36.9382, 0.5854 ) }
    apic_2 { pt3dadd( 286.308, 346.847, 37.2775, 0.624 ) }
    apic_2 { pt3dadd( 285.661, 345.915, 37.5234, 0.6216 ) }
    apic_2 { pt3dadd( 284.998, 344.983, 37.5365, 0.6242 ) }
    apic_2 { pt3dadd( 284.269, 344.106, 37.5906, 0.6778 ) }
    apic_2 { pt3dadd( 283.495, 343.274, 37.8624, 0.7402 ) }
    apic_2 { pt3dadd( 282.889, 342.434, 38.8769, 0.777 ) }
    apic_2 { pt3dadd( 282.361, 341.505, 39.6357, 0.7584 ) }
    apic_2 { pt3dadd( 281.906, 340.462, 39.6536, 0.7224 ) }
    apic_2 { pt3dadd( 281.537, 339.401, 39.2008, 0.7118 ) }
    apic_2 { pt3dadd( 281.068, 338.378, 38.8234, 0.7272 ) }
    apic_2 { pt3dadd( 280.47, 337.417, 39.0328, 0.7528 ) }
    apic_2 { pt3dadd( 279.825, 336.494, 39.5248, 0.7468 ) }
    apic_2 { pt3dadd( 279.194, 335.549, 39.7446, 0.7214 ) }
    apic_2 { pt3dadd( 278.786, 334.494, 39.7603, 0.6958 ) }
    apic_2 { pt3dadd( 278.293, 333.477, 39.7625, 0.7024 ) }
    apic_2 { pt3dadd( 277.72, 332.488, 39.7743, 0.728 ) }
    apic_2 { pt3dadd( 277.144, 331.499, 39.8362, 0.7696 ) }
    apic_2 { pt3dadd( 276.654, 330.484, 40.2108, 0.788 ) }
    apic_2 { pt3dadd( 276.219, 329.447, 40.7154, 0.805 ) }
    apic_2 { pt3dadd( 275.792, 328.391, 40.88, 0.7628 ) }
    apic_2 { pt3dadd( 275.413, 327.313, 40.8806, 0.6692 ) }
    apic_2 { pt3dadd( 275.132, 326.205, 40.8836, 0.5158 ) }
    apic_2 { pt3dadd( 275.067, 325.07, 40.9055, 0.4058 ) }
    apic_2 { pt3dadd( 274.666, 324.043, 41.0228, 0.399 ) }
    apic_2 { pt3dadd( 273.97, 323.242, 41.8933, 0.4804 ) }
    apic_2 { pt3dadd( 273.438, 322.314, 42.7798, 0.5908 ) }
    apic_2 { pt3dadd( 273.061, 321.299, 42.1565, 0.675 ) }
    apic_2 { pt3dadd( 272.615, 320.752, 41.9695, 0.4576 ) }
    apic_2 { pt3dadd( 272.255, 319.695, 41.6987, 0.6922 ) }
    apic_2 { pt3dadd( 271.685, 318.875, 41.6464, 0.771 ) }
    apic_2 { pt3dadd( 271.0, 318.175, 42.4326, 0.9198 ) }
    apic_2 { pt3dadd( 270.439, 317.255, 43.2054, 0.725 ) }
    apic_2 { pt3dadd( 270.096, 316.234, 43.7791, 0.6366 ) }
    apic_2 { pt3dadd( 269.366, 315.509, 44.4444, 0.5736 ) }
    apic_2 { pt3dadd( 269.262, 314.646, 43.127, 0.6592 ) }
    apic_2 { pt3dadd( 268.466, 314.069, 42.4511, 0.618 ) }
    apic_2 { pt3dadd( 267.863, 313.195, 42.014, 0.8136 ) }
    apic_2 { pt3dadd( 267.019, 312.51, 41.5904, 0.6864 ) }
    apic_2 { pt3dadd( 266.411, 311.734, 42.0263, 0.7976 ) }
    apic_2 { pt3dadd( 265.925, 310.982, 41.9614, 0.6864 ) }
    apic_2 { pt3dadd( 265.751, 310.286, 43.4372, 0.6978 ) }
    apic_2 { pt3dadd( 265.344, 309.287, 43.12, 0.6102 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 60/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 307.521, 361.901, 36.0018, 0.3814 ) }
    dend_47 { pt3dadd( 307.539, 361.686, 36.8749, 0.556 ) }
    dend_47 { pt3dadd( 307.659, 360.71, 37.3873, 0.5518 ) }
    dend_47 { pt3dadd( 307.622, 359.708, 36.5616, 0.4554 ) }
    dend_47 { pt3dadd( 307.507, 358.794, 36.2776, 0.4068 ) }
    dend_47 { pt3dadd( 307.951, 358.034, 35.0669, 0.2684 ) }
    dend_47 { pt3dadd( 308.422, 357.132, 35.2184, 0.2288 ) }
    dend_47 { pt3dadd( 308.264, 356.588, 37.3752, 0.4576 ) }
    dend_47 { pt3dadd( 308.609, 355.701, 37.8725, 0.6552 ) }
    dend_47 { pt3dadd( 308.427, 354.754, 38.5445, 0.4128 ) }
    dend_47 { pt3dadd( 308.198, 354.301, 40.2822, 0.3362 ) }
    dend_47 { pt3dadd( 308.414, 353.203, 40.32, 0.2288 ) }
    dend_47 { pt3dadd( 308.183, 352.352, 39.5142, 0.6864 ) }
    dend_47 { pt3dadd( 307.998, 351.466, 39.6662, 0.44 ) }
    dend_47 { pt3dadd( 307.411, 351.128, 41.1289, 0.2926 ) }
    dend_47 { pt3dadd( 307.617, 350.531, 39.4271, 0.3462 ) }
    dend_47 { pt3dadd( 306.904, 350.164, 38.3037, 0.2846 ) }
    dend_47 { pt3dadd( 306.478, 349.231, 38.1595, 0.2976 ) }
    dend_47 { pt3dadd( 306.911, 348.994, 40.159, 0.4962 ) }
    dend_47 { pt3dadd( 306.47, 348.477, 40.3231, 0.5836 ) }
    dend_47 { pt3dadd( 305.864, 348.135, 40.7154, 0.2822 ) }
    dend_47 { pt3dadd( 306.039, 347.587, 42.56, 0.241 ) }
    dend_47 { pt3dadd( 305.791, 346.862, 41.2264, 0.5868 ) }
    dend_47 { pt3dadd( 305.866, 345.911, 40.3262, 0.2558 ) }
    dend_47 { pt3dadd( 305.553, 345.104, 41.2087, 0.252 ) }
    dend_47 { pt3dadd( 305.413, 344.114, 42.5216, 0.2388 ) }
    dend_47 { pt3dadd( 305.226, 343.116, 42.9176, 0.4576 ) }
    dend_47 { pt3dadd( 305.12, 342.193, 42.0095, 0.3814 ) }
    dend_47 { pt3dadd( 305.296, 341.264, 43.1805, 0.5742 ) }
    dend_47 { pt3dadd( 305.542, 340.221, 42.9741, 0.6356 ) }
    dend_47 { pt3dadd( 305.252, 339.265, 43.2849, 0.3382 ) }
    dend_47 { pt3dadd( 305.058, 338.161, 43.12, 0.447 ) }
    dend_47 { pt3dadd( 305.041, 337.328, 42.7781, 0.4574 ) }
    dend_47 { pt3dadd( 304.524, 336.424, 42.1725, 0.2288 ) }
    dend_47 { pt3dadd( 303.977, 335.821, 43.12, 0.6 ) }
    dend_47 { pt3dadd( 303.629, 335.262, 43.68, 0.3632 ) }
    dend_47 { pt3dadd( 303.459, 334.523, 43.0181, 0.4784 ) }
    dend_47 { pt3dadd( 303.314, 333.806, 43.0004, 0.459 ) }
    dend_47 { pt3dadd( 303.732, 333.133, 42.5919, 0.5054 ) }
    dend_47 { pt3dadd( 303.755, 332.25, 42.3956, 0.5058 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_47 { pt3dadd( 303.913, 331.292, 42.2422, 0.5798 ) }
    dend_47 { pt3dadd( 304.152, 330.616, 42.9332, 0.5592 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 307.521, 361.901, 36.0018, 0.3814 ) }
    dend_42 { pt3dadd( 306.782, 362.076, 36.2443, 0.6048 ) }
    dend_42 { pt3dadd( 305.672, 362.324, 36.54, 0.7996 ) }
    dend_42 { pt3dadd( 304.592, 362.288, 37.0306, 0.7894 ) }
    dend_42 { pt3dadd( 303.56, 361.874, 37.613, 0.688 ) }
    dend_42 { pt3dadd( 302.544, 361.536, 38.4048, 0.5718 ) }
    dend_42 { pt3dadd( 301.689, 361.025, 39.4593, 0.5202 ) }
    dend_42 { pt3dadd( 300.996, 360.175, 40.2433, 0.5084 ) }
    dend_42 { pt3dadd( 300.095, 359.692, 41.1124, 0.5084 ) }
    dend_42 { pt3dadd( 299.205, 359.128, 41.8561, 0.4926 ) }
    dend_42 { pt3dadd( 298.577, 358.215, 42.4536, 0.4994 ) }
    dend_42 { pt3dadd( 297.8, 357.426, 42.905, 0.4746 ) }
    dend_42 { pt3dadd( 296.97, 356.661, 42.7372, 0.4924 ) }
    dend_42 { pt3dadd( 296.175, 355.866, 42.2282, 0.526 ) }
    dend_42 { pt3dadd( 295.507, 354.957, 42.2663, 0.6424 ) }
    dend_42 { pt3dadd( 295.019, 353.959, 42.875, 0.7048 ) }
    dend_42 { pt3dadd( 294.383, 353.034, 43.2312, 0.6932 ) }
    dend_42 { pt3dadd( 293.485, 352.576, 44.2467, 0.5854 ) }
    dend_42 { pt3dadd( 292.457, 352.517, 45.4297, 0.5134 ) }
    dend_42 { pt3dadd( 291.713, 351.766, 46.3053, 0.58 ) }
    dend_42 { pt3dadd( 290.903, 351.199, 47.696, 0.661 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 23/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 316.245, 369.628, 31.8214, 0.788 ) }
    dend_28 { pt3dadd( 317.119, 369.221, 30.52, 0.5512 ) }
    dend_28 { pt3dadd( 318.065, 368.586, 30.5348, 0.3038 ) }
    dend_28 { pt3dadd( 318.817, 368.383, 32.2255, 0.6242 ) }
    dend_28 { pt3dadd( 319.517, 367.64, 32.965, 0.4118 ) }
    dend_28 { pt3dadd( 320.349, 366.991, 32.6228, 0.5472 ) }
    dend_28 { pt3dadd( 321.013, 366.419, 31.8998, 0.579 ) }
    dend_28 { pt3dadd( 321.521, 365.92, 31.0766, 0.6158 ) }
    dend_28 { pt3dadd( 322.189, 365.279, 31.9074, 0.3992 ) }
    dend_28 { pt3dadd( 322.895, 364.812, 31.6546, 0.653 ) }
    dend_28 { pt3dadd( 323.724, 364.601, 32.9871, 0.7134 ) }
    dend_28 { pt3dadd( 324.279, 364.578, 32.3036, 0.531 ) }
    dend_28 { pt3dadd( 325.283, 364.878, 32.851, 0.4898 ) }
    dend_28 { pt3dadd( 326.145, 365.26, 32.6794, 0.5332 ) }
    dend_28 { pt3dadd( 327.213, 365.255, 32.7712, 0.4576 ) }
    dend_28 { pt3dadd( 327.908, 365.568, 34.3888, 0.4912 ) }
    dend_28 { pt3dadd( 328.854, 365.884, 33.6389, 0.466 ) }
    dend_28 { pt3dadd( 329.908, 366.103, 33.9643, 0.3278 ) }
    dend_28 { pt3dadd( 330.773, 366.59, 33.5709, 0.305 ) }
    dend_28 { pt3dadd( 331.642, 366.877, 34.4884, 0.2288 ) }
    dend_28 { pt3dadd( 332.719, 367.0, 34.9499, 0.2404 ) }
    dend_28 { pt3dadd( 333.685, 367.338, 35.8439, 0.3886 ) }
    dend_28 { pt3dadd( 334.535, 367.11, 35.138, 0.35 ) }
    dend_28 { pt3dadd( 335.481, 366.835, 34.1099, 0.4184 ) }
    dend_28 { pt3dadd( 336.362, 367.161, 33.5208, 0.5036 ) }
    dend_28 { pt3dadd( 337.128, 367.682, 32.3882, 0.5468 ) }
    dend_28 { pt3dadd( 337.871, 367.763, 32.2591, 0.2854 ) }
    dend_28 { pt3dadd( 338.678, 367.662, 33.4734, 0.4694 ) }
    dend_28 { pt3dadd( 339.414, 367.325, 32.1992, 0.6616 ) }
    dend_28 { pt3dadd( 339.631, 366.423, 32.4215, 0.4022 ) }
    dend_28 { pt3dadd( 340.293, 366.538, 32.6239, 0.3012 ) }
    dend_28 { pt3dadd( 341.342, 366.542, 31.8206, 0.4116 ) }
    dend_28 { pt3dadd( 342.108, 366.716, 31.92, 0.6614 ) }
    dend_28 { pt3dadd( 342.933, 367.224, 32.7771, 0.6702 ) }
    dend_28 { pt3dadd( 343.828, 367.748, 32.6852, 0.3458 ) }
    dend_28 { pt3dadd( 344.736, 367.645, 34.0544, 0.3304 ) }
    dend_28 { pt3dadd( 345.735, 367.338, 34.7774, 0.8418 ) }
    dend_28 { pt3dadd( 346.445, 366.901, 33.9522, 0.6356 ) }
    dend_28 { pt3dadd( 347.101, 366.564, 35.4668, 0.6444 ) }
    dend_28 { pt3dadd( 347.884, 365.87, 34.7645, 0.661 ) }
    dend_28 { pt3dadd( 348.907, 365.622, 34.4946, 0.5988 ) }
    dend_28 { pt3dadd( 349.62, 365.319, 34.3185, 0.4588 ) }
    dend_28 { pt3dadd( 350.418, 365.082, 33.0529, 0.4516 ) }
    dend_28 { pt3dadd( 350.864, 364.373, 32.97, 0.356 ) }
    dend_28 { pt3dadd( 351.322, 363.489, 32.6749, 0.4858 ) }
    dend_28 { pt3dadd( 352.23, 363.469, 31.8889, 0.5848 ) }
    dend_28 { pt3dadd( 353.139, 363.402, 31.1097, 0.8114 ) }
    dend_28 { pt3dadd( 354.01, 363.191, 31.5011, 0.3876 ) }
    dend_28 { pt3dadd( 354.939, 363.106, 30.3108, 0.349 ) }
    dend_28 { pt3dadd( 355.836, 363.106, 30.6432, 0.356 ) }
    dend_28 { pt3dadd( 356.502, 363.293, 31.3572, 0.5636 ) }
    dend_28 { pt3dadd( 357.506, 363.552, 31.0402, 0.3608 ) }
    dend_28 { pt3dadd( 358.283, 363.547, 31.64, 0.4068 ) }
    dend_28 { pt3dadd( 359.004, 362.817, 31.5025, 0.5158 ) }
    dend_28 { pt3dadd( 359.648, 361.971, 31.36, 0.2822 ) }
    dend_28 { pt3dadd( 360.437, 361.3, 31.8268, 0.4322 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 79/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 316.245, 369.628, 31.8214, 0.788 ) }
    dend_25 { pt3dadd( 317.171, 369.39, 31.6772, 0.7452 ) }
    dend_25 { pt3dadd( 318.248, 369.134, 31.0097, 0.7372 ) }
    dend_25 { pt3dadd( 319.379, 369.13, 30.8162, 0.652 ) }
    dend_25 { pt3dadd( 320.329, 369.715, 30.8193, 0.5278 ) }
    dend_25 { pt3dadd( 321.069, 370.579, 30.9002, 0.4002 ) }
    dend_25 { pt3dadd( 321.924, 371.308, 31.362, 0.337 ) }
    dend_25 { pt3dadd( 322.943, 371.718, 30.7787, 0.3764 ) }
    dend_25 { pt3dadd( 323.903, 371.903, 29.349, 0.5084 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 88/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 295.304, 408.701, 35.5289, 0.6102 ) }
    dend_22 { pt3dadd( 294.146, 409.494, 35.1772, 0.5364 ) }
    dend_22 { pt3dadd( 293.207, 410.135, 34.8916, 0.4764 ) }
    dend_22 { pt3dadd( 292.268, 410.778, 34.6063, 0.4164 ) }
    dend_22 { pt3dadd( 291.657, 410.724, 34.7637, 0.4068 ) }
    dend_22 { pt3dadd( 290.816, 410.582, 35.9296, 0.5932 ) }
    dend_22 { pt3dadd( 290.63, 410.238, 37.602, 0.6194 ) }
    dend_22 { pt3dadd( 289.782, 410.829, 38.08, 0.6604 ) }
    dend_22 { pt3dadd( 288.892, 411.497, 37.9756, 0.3326 ) }
    dend_22 { pt3dadd( 288.087, 411.189, 37.0972, 0.278 ) }
    dend_22 { pt3dadd( 287.033, 411.437, 37.5164, 0.2806 ) }
    dend_22 { pt3dadd( 286.3, 411.165, 38.871, 0.6102 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( 285.418, 411.154, 38.4384, 0.2288 ) }
    dend_22 { pt3dadd( 284.785, 411.73, 38.2794, 0.3878 ) }
    dend_22 { pt3dadd( 284.029, 412.192, 38.9096, 0.4152 ) }
    dend_22 { pt3dadd( 283.391, 412.935, 38.0534, 0.5848 ) }
    dend_22 { pt3dadd( 282.832, 413.426, 37.52, 0.5074 ) }
    dend_22 { pt3dadd( 282.519, 414.366, 36.9275, 0.4008 ) }
    dend_22 { pt3dadd( 282.576, 415.362, 37.2686, 0.3096 ) }
    dend_22 { pt3dadd( 281.995, 415.958, 38.9211, 0.2288 ) }
    dend_22 { pt3dadd( 280.897, 416.073, 39.2, 0.2288 ) }
    dend_22 { pt3dadd( 279.753, 416.073, 39.2, 0.2644 ) }
    dend_22 { pt3dadd( 278.821, 416.073, 40.3066, 0.5228 ) }
    dend_22 { pt3dadd( 277.891, 416.341, 39.485, 0.598 ) }
    dend_22 { pt3dadd( 277.11, 415.73, 39.6396, 0.7188 ) }
    dend_22 { pt3dadd( 276.02, 415.511, 40.2094, 0.6426 ) }
    dend_22 { pt3dadd( 274.967, 415.835, 40.171, 0.5668 ) }
    dend_22 { pt3dadd( 274.227, 415.836, 38.8486, 0.6424 ) }
    dend_22 { pt3dadd( 273.5, 416.297, 38.08, 0.3804 ) }
    dend_22 { pt3dadd( 272.412, 416.622, 38.08, 0.3152 ) }
    dend_22 { pt3dadd( 271.346, 416.874, 38.187, 0.2288 ) }
    dend_22 { pt3dadd( 270.487, 416.874, 39.9459, 0.231 ) }
    dend_22 { pt3dadd( 269.834, 417.331, 41.16, 0.2288 ) }
    dend_22 { pt3dadd( 268.711, 417.331, 41.5554, 0.303 ) }
    dend_22 { pt3dadd( 267.736, 417.408, 42.8954, 0.3546 ) }
    dend_22 { pt3dadd( 267.028, 416.864, 43.1659, 0.4576 ) }
    dend_22 { pt3dadd( 266.271, 416.872, 41.7393, 0.3876 ) }
    dend_22 { pt3dadd( 265.836, 417.412, 40.4373, 0.8612 ) }
    dend_22 { pt3dadd( 264.801, 417.763, 40.6266, 0.5262 ) }
    dend_22 { pt3dadd( 263.986, 418.084, 40.0389, 0.4576 ) }
    dend_22 { pt3dadd( 263.069, 418.281, 38.9225, 0.2542 ) }
    dend_22 { pt3dadd( 262.694, 418.942, 40.5563, 0.48 ) }
    dend_22 { pt3dadd( 262.542, 419.879, 41.3003, 0.5722 ) }
    dend_22 { pt3dadd( 262.097, 420.706, 41.44, 0.5116 ) }
    dend_22 { pt3dadd( 262.288, 421.539, 42.0403, 0.5382 ) }
    dend_22 { pt3dadd( 262.043, 422.245, 40.3976, 0.2934 ) }
    dend_22 { pt3dadd( 261.979, 422.92, 38.64, 0.2288 ) }
    dend_22 { pt3dadd( 261.746, 423.83, 37.7292, 0.266 ) }
    dend_22 { pt3dadd( 261.105, 424.616, 36.7794, 0.3544 ) }
    dend_22 { pt3dadd( 260.905, 425.661, 36.7069, 0.6264 ) }
    dend_22 { pt3dadd( 260.593, 426.596, 36.1645, 0.4212 ) }
    dend_22 { pt3dadd( 260.146, 427.613, 36.12, 0.289 ) }
    dend_22 { pt3dadd( 259.852, 428.573, 35.7227, 0.3444 ) }
    dend_22 { pt3dadd( 259.368, 429.214, 35.7098, 0.5694 ) }
    dend_22 { pt3dadd( 259.233, 430.313, 36.12, 0.6822 ) }
    dend_22 { pt3dadd( 259.846, 431.065, 36.6016, 0.475 ) }
    dend_22 { pt3dadd( 260.071, 431.914, 38.2928, 0.3036 ) }
    dend_22 { pt3dadd( 260.139, 431.694, 40.329, 0.2288 ) }
    dend_22 { pt3dadd( 260.26, 432.074, 42.3195, 0.3814 ) }
    dend_22 { pt3dadd( 260.726, 433.029, 42.2408, 0.3814 ) }
    dend_22 { pt3dadd( 261.38, 433.901, 42.28, 0.4482 ) }
    dend_22 { pt3dadd( 261.069, 434.602, 42.8389, 0.6112 ) }
    dend_22 { pt3dadd( 260.889, 435.522, 43.7461, 0.5542 ) }
    dend_22 { pt3dadd( 260.846, 436.458, 44.1017, 0.2356 ) }
    dend_22 { pt3dadd( 261.633, 437.047, 44.1913, 0.5084 ) }
    dend_22 { pt3dadd( 261.641, 438.01, 42.7336, 0.4866 ) }
    dend_22 { pt3dadd( 262.205, 438.724, 41.44, 0.356 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 55/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 295.304, 408.701, 35.5289, 0.6102 ) }
    dend_21 { pt3dadd( 295.146, 407.401, 34.72, 0.5862 ) }
    dend_21 { pt3dadd( 295.036, 406.439, 34.2241, 0.5078 ) }
    dend_21 { pt3dadd( 295.6, 406.257, 36.6134, 0.5084 ) }
    dend_21 { pt3dadd( 296.125, 406.112, 38.8612, 0.4976 ) }
    dend_21 { pt3dadd( 295.186, 406.412, 38.332, 0.5862 ) }
    dend_21 { pt3dadd( 294.564, 407.096, 37.6662, 0.6684 ) }
    dend_21 { pt3dadd( 293.686, 407.72, 37.828, 0.8136 ) }
    dend_21 { pt3dadd( 293.665, 407.902, 40.3287, 0.5306 ) }
    dend_21 { pt3dadd( 293.049, 408.441, 41.097, 0.4772 ) }
    dend_21 { pt3dadd( 292.787, 409.43, 41.44, 0.3814 ) }
    dend_21 { pt3dadd( 293.232, 410.187, 41.6993, 0.61 ) }
    dend_21 { pt3dadd( 293.465, 410.845, 42.0742, 0.7178 ) }
    dend_21 { pt3dadd( 293.569, 411.846, 42.7207, 0.5608 ) }
    dend_21 { pt3dadd( 293.436, 412.799, 42.9685, 0.4206 ) }
    dend_21 { pt3dadd( 293.902, 413.314, 44.8232, 0.72 ) }
    dend_21 { pt3dadd( 293.889, 414.023, 45.7422, 0.586 ) }
    dend_21 { pt3dadd( 293.85, 415.06, 45.6753, 0.8522 ) }
    dend_21 { pt3dadd( 293.394, 416.06, 46.1387, 0.9352 ) }
    dend_21 { pt3dadd( 293.024, 417.13, 46.2, 0.721 ) }
    dend_21 { pt3dadd( 292.978, 418.123, 45.9802, 1.0202 ) }
    dend_21 { pt3dadd( 293.207, 418.987, 46.1664, 0.5404 ) }
    dend_21 { pt3dadd( 293.029, 419.962, 46.2552, 0.4576 ) }
    dend_21 { pt3dadd( 292.372, 420.094, 48.16, 0.8876 ) }
    dend_21 { pt3dadd( 291.606, 419.865, 49.0, 0.7408 ) }
    dend_21 { pt3dadd( 291.327, 418.968, 49.628, 0.8898 ) }
    dend_21 { pt3dadd( 290.69, 418.976, 51.2089, 0.356 ) }
    dend_21 { pt3dadd( 290.812, 419.855, 50.4851, 0.5572 ) }
    dend_21 { pt3dadd( 290.748, 420.571, 51.7454, 0.7784 ) }
    dend_21 { pt3dadd( 290.241, 421.406, 52.8763, 0.5288 ) }
    dend_21 { pt3dadd( 290.343, 422.446, 52.8864, 0.6912 ) }
    dend_21 { pt3dadd( 290.576, 423.504, 53.48, 0.6456 ) }
    dend_21 { pt3dadd( 290.328, 424.347, 53.9879, 0.5222 ) }
    dend_21 { pt3dadd( 290.528, 425.217, 52.9836, 0.4068 ) }
    dend_21 { pt3dadd( 290.919, 425.391, 54.985, 0.474 ) }
    dend_21 { pt3dadd( 291.092, 425.816, 56.3242, 0.6864 ) }
    dend_21 { pt3dadd( 291.87, 426.321, 56.3749, 0.3148 ) }
    dend_21 { pt3dadd( 292.045, 427.257, 57.4, 0.4274 ) }
    dend_21 { pt3dadd( 292.512, 427.199, 58.3377, 0.3462 ) }
    dend_21 { pt3dadd( 292.737, 427.967, 59.7498, 0.483 ) }
    dend_21 { pt3dadd( 293.643, 428.476, 60.6522, 0.732 ) }
    dend_21 { pt3dadd( 293.692, 429.474, 60.5377, 0.5854 ) }
    dend_21 { pt3dadd( 294.12, 430.292, 61.9864, 0.4262 ) }
    dend_21 { pt3dadd( 294.499, 431.269, 62.72, 0.4068 ) }
    dend_21 { pt3dadd( 294.881, 432.291, 63.212, 0.3468 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( 294.923, 433.378, 63.84, 0.2288 ) }
    dend_21 { pt3dadd( 295.461, 434.229, 63.5986, 0.251 ) }
    dend_21 { pt3dadd( 295.221, 435.194, 62.9821, 0.5794 ) }
    dend_21 { pt3dadd( 294.864, 436.211, 63.56, 0.675 ) }
    dend_21 { pt3dadd( 294.261, 436.665, 64.0494, 0.4694 ) }
    dend_21 { pt3dadd( 294.358, 437.017, 66.1256, 0.4532 ) }
    dend_21 { pt3dadd( 293.643, 437.722, 66.6543, 0.2796 ) }
    dend_21 { pt3dadd( 293.094, 437.809, 64.5411, 0.4068 ) }
    dend_21 { pt3dadd( 292.521, 438.254, 65.8417, 0.375 ) }
    dend_21 { pt3dadd( 291.949, 438.511, 66.915, 0.423 ) }
    dend_21 { pt3dadd( 291.603, 438.908, 68.3133, 0.3904 ) }
    dend_21 { pt3dadd( 290.835, 439.48, 68.3544, 0.2514 ) }
    dend_21 { pt3dadd( 290.011, 440.131, 68.32, 0.5604 ) }
    dend_21 { pt3dadd( 289.775, 441.174, 68.7425, 0.55 ) }
    dend_21 { pt3dadd( 289.523, 442.193, 69.6147, 0.2288 ) }
    dend_21 { pt3dadd( 289.181, 442.978, 67.9496, 0.2288 ) }
    dend_21 { pt3dadd( 288.591, 443.806, 67.0709, 0.2288 ) }
    dend_21 { pt3dadd( 288.064, 444.706, 67.405, 0.2288 ) }
    dend_21 { pt3dadd( 287.565, 445.646, 67.8146, 0.3462 ) }
    dend_21 { pt3dadd( 287.348, 446.694, 68.1652, 0.4236 ) }
    dend_21 { pt3dadd( 286.451, 446.748, 69.6704, 0.3896 ) }
    dend_21 { pt3dadd( 286.288, 447.636, 69.991, 0.4778 ) }
    dend_21 { pt3dadd( 286.0, 448.33, 68.5292, 0.2542 ) }
    dend_21 { pt3dadd( 285.985, 449.046, 66.6526, 0.2946 ) }
    dend_21 { pt3dadd( 285.542, 448.922, 68.5896, 0.6346 ) }
    dend_21 { pt3dadd( 285.311, 449.314, 70.56, 0.6402 ) }
    dend_21 { pt3dadd( 284.742, 450.278, 70.28, 0.661 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 287.201, 389.847, 26.124, 0.6356 ) }
    dend_19 { pt3dadd( 287.211, 390.183, 25.6178, 0.5376 ) }
    dend_19 { pt3dadd( 287.248, 391.156, 24.1534, 0.2866 ) }
    dend_19 { pt3dadd( 287.339, 392.119, 22.6792, 0.3656 ) }
    dend_19 { pt3dadd( 287.188, 393.008, 20.9756, 0.443 ) }
    dend_19 { pt3dadd( 287.388, 393.82, 19.1523, 0.4896 ) }
    dend_19 { pt3dadd( 287.978, 394.203, 17.3737, 0.376 ) }
    dend_19 { pt3dadd( 287.901, 393.537, 15.2382, 0.3476 ) }
    dend_19 { pt3dadd( 287.441, 392.629, 14.187, 0.3394 ) }
    dend_19 { pt3dadd( 286.706, 391.757, 13.9997, 0.347 ) }
    dend_19 { pt3dadd( 285.814, 391.193, 13.9983, 0.3398 ) }
    dend_19 { pt3dadd( 284.687, 391.055, 13.9882, 0.3454 ) }
    dend_19 { pt3dadd( 283.815, 390.447, 13.9205, 0.3304 ) }
    dend_19 { pt3dadd( 283.415, 389.402, 14.0134, 0.3062 ) }
    dend_19 { pt3dadd( 282.964, 388.541, 14.996, 0.2796 ) }
    dend_19 { pt3dadd( 282.361, 387.805, 16.483, 0.293 ) }
    dend_19 { pt3dadd( 281.669, 386.999, 17.1492, 0.3326 ) }
    dend_19 { pt3dadd( 280.738, 386.619, 16.4133, 0.356 ) }
    dend_19 { pt3dadd( 280.241, 385.904, 15.8567, 0.3394 ) }
    dend_19 { pt3dadd( 279.592, 385.068, 15.4342, 0.3304 ) }
    dend_19 { pt3dadd( 278.674, 384.656, 16.4245, 0.3526 ) }
    dend_19 { pt3dadd( 278.803, 384.121, 18.6477, 0.356 ) }
    dend_19 { pt3dadd( 278.92, 383.09, 19.6624, 0.3088 ) }
    dend_19 { pt3dadd( 279.033, 382.002, 20.477, 0.2572 ) }
    dend_19 { pt3dadd( 279.554, 381.186, 21.9338, 0.2298 ) }
    dend_19 { pt3dadd( 280.248, 380.397, 23.0336, 0.2288 ) }
    dend_19 { pt3dadd( 281.195, 379.922, 24.08, 0.2542 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 54/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 287.201, 389.847, 26.124, 0.6356 ) }
    dend_16 { pt3dadd( 285.973, 390.663, 26.2811, 0.504 ) }
    dend_16 { pt3dadd( 285.0, 391.122, 27.2227, 0.6068 ) }
    dend_16 { pt3dadd( 283.881, 391.327, 27.4739, 0.6598 ) }
    dend_16 { pt3dadd( 282.758, 391.142, 27.6842, 0.661 ) }
    dend_16 { pt3dadd( 281.696, 390.913, 28.5636, 0.6356 ) }
    dend_16 { pt3dadd( 280.616, 390.925, 29.4868, 0.5592 ) }
    // Section: dend_4, id: dend_4, parent: dend_1 (entry count 61/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 297.047, 361.676, 21.639, 0.5592 ) }
    dend_4 { pt3dadd( 297.677, 360.982, 21.0529, 0.5038 ) }
    dend_4 { pt3dadd( 298.177, 360.148, 21.8341, 0.4322 ) }
    dend_4 { pt3dadd( 298.847, 359.25, 21.56, 0.5628 ) }
    dend_4 { pt3dadd( 299.562, 358.621, 20.615, 0.7518 ) }
    dend_4 { pt3dadd( 300.082, 357.824, 20.72, 0.4264 ) }
    dend_4 { pt3dadd( 300.292, 357.176, 22.12, 0.4678 ) }
    dend_4 { pt3dadd( 299.957, 356.127, 21.84, 0.5084 ) }
    dend_4 { pt3dadd( 299.439, 355.205, 21.56, 0.3364 ) }
    dend_4 { pt3dadd( 298.774, 355.09, 20.44, 0.268 ) }
    dend_4 { pt3dadd( 298.017, 354.925, 20.144, 0.305 ) }
    dend_4 { pt3dadd( 297.371, 353.986, 20.16, 0.3546 ) }
    dend_4 { pt3dadd( 296.854, 353.049, 20.16, 0.5078 ) }
    dend_4 { pt3dadd( 296.296, 352.655, 21.1915, 0.4322 ) }
    dend_4 { pt3dadd( 295.98, 351.789, 22.2888, 0.3378 ) }
    dend_4 { pt3dadd( 294.995, 351.65, 21.9878, 0.5882 ) }
    dend_4 { pt3dadd( 294.31, 350.881, 21.5746, 0.5078 ) }
    dend_4 { pt3dadd( 294.076, 349.905, 21.553, 0.612 ) }
    dend_4 { pt3dadd( 294.118, 348.878, 21.5995, 0.38 ) }
    dend_4 { pt3dadd( 293.804, 347.817, 21.9859, 0.3818 ) }
    dend_4 { pt3dadd( 293.322, 347.217, 20.7444, 0.4576 ) }
    dend_4 { pt3dadd( 292.88, 346.297, 21.0288, 0.5838 ) }
    dend_4 { pt3dadd( 292.064, 345.741, 21.4584, 0.574 ) }
    dend_4 { pt3dadd( 291.509, 344.929, 21.9114, 0.6102 ) }
    dend_4 { pt3dadd( 291.127, 344.303, 23.312, 0.6362 ) }
    dend_4 { pt3dadd( 290.722, 343.321, 24.0131, 0.5702 ) }
    dend_4 { pt3dadd( 290.035, 342.999, 22.4826, 0.5592 ) }
    dend_4 { pt3dadd( 289.637, 342.072, 22.5103, 0.3814 ) }
    dend_4 { pt3dadd( 288.764, 341.855, 23.6482, 0.2956 ) }
    dend_4 { pt3dadd( 288.513, 341.141, 22.7452, 0.2288 ) }
    dend_4 { pt3dadd( 287.989, 340.733, 21.0946, 0.3564 ) }
    dend_4 { pt3dadd( 287.544, 339.84, 21.1212, 0.7482 ) }
    dend_4 { pt3dadd( 286.763, 339.497, 22.6559, 0.5468 ) }
    dend_4 { pt3dadd( 286.114, 338.765, 22.4328, 0.5924 ) }
    dend_4 { pt3dadd( 285.191, 338.499, 21.5729, 0.5102 ) }
    dend_4 { pt3dadd( 284.458, 337.684, 22.12, 0.5668 ) }
    dend_4 { pt3dadd( 283.773, 337.041, 22.7903, 0.5452 ) }
    dend_4 { pt3dadd( 283.029, 336.468, 24.0041, 0.707 ) }
    dend_4 { pt3dadd( 282.241, 335.753, 23.9999, 0.6274 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( 281.646, 335.02, 23.2201, 0.5084 ) }
    dend_4 { pt3dadd( 281.176, 334.605, 21.6723, 0.6558 ) }
    dend_4 { pt3dadd( 280.724, 333.894, 21.908, 0.5756 ) }
    dend_4 { pt3dadd( 280.72, 333.248, 22.5652, 0.356 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 4/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 297.047, 361.676, 21.639, 0.5592 ) }
    dend_3 { pt3dadd( 297.509, 361.244, 21.7473, 0.5168 ) }
    dend_3 { pt3dadd( 298.246, 360.381, 21.812, 0.4406 ) }
    dend_3 { pt3dadd( 299.031, 359.573, 21.5678, 0.378 ) }
    dend_3 { pt3dadd( 299.825, 358.993, 20.3588, 0.3262 ) }
    dend_3 { pt3dadd( 300.676, 358.494, 19.0198, 0.3206 ) }
    dend_3 { pt3dadd( 301.608, 357.905, 18.9526, 0.3792 ) }
    dend_3 { pt3dadd( 302.668, 357.585, 19.1615, 0.4576 ) }
    dend_3 { pt3dadd( 303.646, 357.658, 18.0536, 0.518 ) }
    dend_3 { pt3dadd( 304.314, 358.286, 16.6068, 0.5154 ) }
    dend_3 { pt3dadd( 305.273, 358.709, 15.9995, 0.5084 ) }
    dend_3 { pt3dadd( 306.3, 358.385, 15.4902, 0.5492 ) }
    dend_3 { pt3dadd( 307.22, 357.772, 15.972, 0.6432 ) }
    dend_3 { pt3dadd( 308.319, 357.594, 16.03, 0.7036 ) }
    dend_3 { pt3dadd( 309.372, 357.903, 15.4003, 0.7118 ) }
    dend_3 { pt3dadd( 310.27, 358.588, 15.2365, 0.7118 ) }
    dend_3 { pt3dadd( 311.224, 359.191, 15.6405, 0.8014 ) }
    dend_3 { pt3dadd( 312.345, 359.323, 15.6626, 0.9058 ) }
    dend_3 { pt3dadd( 313.363, 359.328, 14.45, 0.9152 ) }
    dend_3 { pt3dadd( 314.49, 359.315, 14.0638, 0.7744 ) }
    dend_3 { pt3dadd( 315.623, 359.218, 14.3315, 0.55 ) }
    dend_3 { pt3dadd( 316.615, 358.677, 14.0784, 0.3814 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 26/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 297.047, 361.676, 21.639, 0.5592 ) }
    dend_2 { pt3dadd( 296.557, 360.91, 20.5181, 0.3928 ) }
    dend_2 { pt3dadd( 296.402, 359.875, 19.7562, 0.383 ) }
    dend_2 { pt3dadd( 296.234, 358.758, 19.6034, 0.4954 ) }
    dend_2 { pt3dadd( 295.821, 357.697, 19.6199, 0.605 ) }
    dend_2 { pt3dadd( 295.316, 356.672, 19.7109, 0.6534 ) }
    dend_2 { pt3dadd( 294.811, 355.658, 20.0852, 0.625 ) }
    dend_2 { pt3dadd( 294.082, 354.828, 20.6212, 0.5834 ) }
    dend_2 { pt3dadd( 293.196, 354.116, 20.4296, 0.5592 ) }
    dend_2 { pt3dadd( 292.202, 353.664, 19.6, 0.5518 ) }
    dend_2 { pt3dadd( 291.27, 353.092, 18.898, 0.4556 ) }
    dend_2 { pt3dadd( 290.768, 352.083, 18.6127, 0.4322 ) }
    dend_2 { pt3dadd( 290.511, 351.043, 17.754, 0.4458 ) }
    dend_2 { pt3dadd( 289.771, 350.196, 17.3659, 0.5338 ) }
    dend_2 { pt3dadd( 288.907, 349.46, 17.3953, 0.517 ) }
    dend_2 { pt3dadd( 288.231, 348.543, 17.535, 0.449 ) }
    dend_2 { pt3dadd( 287.717, 347.572, 18.1266, 0.3616 ) }
    dend_2 { pt3dadd( 287.812, 346.482, 18.8541, 0.356 ) }
    dend_2 { pt3dadd( 288.068, 345.577, 17.267, 0.3814 ) }
    dend_2 { pt3dadd( 288.104, 344.684, 15.5235, 0.3814 ) }
    dend_2 { pt3dadd( 288.357, 343.608, 14.8921, 0.3864 ) }
    dend_2 { pt3dadd( 289.001, 342.669, 15.113, 0.4612 ) }
    dend_2 { pt3dadd( 289.47, 341.628, 15.0758, 0.5106 ) }
    dend_2 { pt3dadd( 289.733, 340.523, 14.8417, 0.5242 ) }
    dend_2 { pt3dadd( 289.947, 339.471, 13.8762, 0.4264 ) }
    dend_2 { pt3dadd( 289.982, 338.453, 12.9086, 0.3814 ) }
    dend_2 { pt3dadd( 289.201, 337.625, 12.7764, 0.386 ) }
    dend_2 { pt3dadd( 288.28, 336.962, 12.5132, 0.4068 ) }
    dend_2 { pt3dadd( 287.387, 336.447, 12.6182, 0.3956 ) }
    dend_2 { pt3dadd( 286.779, 336.009, 14.0918, 0.3476 ) }
    dend_2 { pt3dadd( 285.652, 336.058, 14.2492, 0.303 ) }
    dend_2 { pt3dadd( 284.694, 335.85, 15.4532, 0.258 ) }
    dend_2 { pt3dadd( 284.075, 334.936, 15.6929, 0.231 ) }
    dend_2 { pt3dadd( 283.221, 334.478, 14.3422, 0.3006 ) }
    dend_2 { pt3dadd( 282.11, 334.62, 14.0, 0.4576 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 61/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 276.962, 407.632, 46.8222, 0.661 ) }
    dend_65 { pt3dadd( 276.908, 407.388, 49.266, 0.7834 ) }
    dend_65 { pt3dadd( 277.164, 408.122, 50.85, 0.5084 ) }
    dend_65 { pt3dadd( 277.479, 409.116, 51.45, 0.5848 ) }
    dend_65 { pt3dadd( 278.182, 409.851, 51.254, 0.6508 ) }
    dend_65 { pt3dadd( 278.844, 409.607, 51.2011, 0.4576 ) }
    dend_65 { pt3dadd( 279.819, 409.605, 51.8115, 0.7976 ) }
    dend_65 { pt3dadd( 280.483, 409.726, 53.2549, 0.6864 ) }
    dend_65 { pt3dadd( 280.632, 410.42, 54.3906, 0.2288 ) }
    dend_65 { pt3dadd( 279.904, 411.171, 55.16, 0.4942 ) }
    dend_65 { pt3dadd( 279.708, 412.164, 55.4663, 0.788 ) }
    dend_65 { pt3dadd( 279.484, 413.168, 56.0899, 0.6274 ) }
    dend_65 { pt3dadd( 279.812, 413.98, 56.9985, 0.95 ) }
    dend_65 { pt3dadd( 279.71, 414.572, 58.175, 0.5706 ) }
    dend_65 { pt3dadd( 280.224, 415.518, 58.5108, 0.3992 ) }
    dend_65 { pt3dadd( 280.672, 416.533, 58.0042, 0.2602 ) }
    dend_65 { pt3dadd( 281.572, 417.156, 57.96, 0.2288 ) }
    dend_65 { pt3dadd( 281.747, 418.257, 58.1955, 0.435 ) }
    dend_65 { pt3dadd( 281.682, 419.331, 59.005, 0.6444 ) }
    dend_65 { pt3dadd( 281.686, 420.364, 59.36, 0.6102 ) }
    dend_65 { pt3dadd( 281.783, 421.212, 59.0996, 0.572 ) }
    dend_65 { pt3dadd( 282.142, 422.175, 59.36, 0.8592 ) }
    dend_65 { pt3dadd( 282.84, 422.975, 59.64, 0.6864 ) }
    dend_65 { pt3dadd( 282.725, 423.923, 58.3181, 0.574 ) }
    dend_65 { pt3dadd( 282.352, 424.803, 57.3266, 0.3526 ) }
    dend_65 { pt3dadd( 282.121, 425.763, 56.2884, 0.4462 ) }
    dend_65 { pt3dadd( 282.12, 426.493, 57.9961, 0.2516 ) }
    dend_65 { pt3dadd( 282.61, 426.857, 60.1488, 0.617 ) }
    dend_65 { pt3dadd( 282.927, 427.452, 61.8425, 0.6762 ) }
    dend_65 { pt3dadd( 282.568, 428.359, 63.1408, 0.6534 ) }
    dend_65 { pt3dadd( 282.789, 429.279, 63.936, 0.3044 ) }
    dend_65 { pt3dadd( 282.688, 430.329, 64.412, 0.3734 ) }
    dend_65 { pt3dadd( 282.36, 431.185, 64.4232, 0.5892 ) }
    dend_65 { pt3dadd( 282.11, 431.852, 62.7718, 0.5718 ) }
    dend_65 { pt3dadd( 281.696, 432.432, 63.6236, 0.3894 ) }
    dend_65 { pt3dadd( 281.407, 433.06, 65.4696, 0.6198 ) }
    dend_65 { pt3dadd( 281.195, 433.916, 64.9006, 0.4644 ) }
    dend_65 { pt3dadd( 280.784, 434.289, 65.6645, 0.305 ) }
    dend_65 { pt3dadd( 280.854, 435.091, 66.6658, 0.2542 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_65 { pt3dadd( 280.838, 436.071, 66.1097, 0.3734 ) }
    dend_65 { pt3dadd( 280.977, 436.923, 66.64, 0.3604 ) }
    dend_65 { pt3dadd( 281.122, 437.795, 68.0103, 0.253 ) }
    dend_65 { pt3dadd( 281.32, 438.84, 67.345, 0.2288 ) }
    dend_65 { pt3dadd( 281.653, 439.362, 65.5085, 0.2288 ) }
    dend_65 { pt3dadd( 281.081, 439.914, 64.328, 0.4576 ) }
    dend_65 { pt3dadd( 281.779, 440.586, 64.6702, 0.4908 ) }
    dend_65 { pt3dadd( 281.983, 441.677, 64.43, 0.6346 ) }
    dend_65 { pt3dadd( 282.462, 442.691, 64.4221, 0.6864 ) }
    dend_65 { pt3dadd( 283.186, 443.521, 64.96, 0.6864 ) }
    dend_65 { pt3dadd( 283.742, 444.47, 64.757, 0.5926 ) }
    dend_65 { pt3dadd( 284.316, 445.408, 64.2502, 0.416 ) }
    dend_65 { pt3dadd( 284.518, 446.436, 63.28, 0.4576 ) }
    dend_65 { pt3dadd( 285.308, 446.88, 64.045, 0.5848 ) }
    dend_65 { pt3dadd( 285.825, 447.836, 63.9262, 0.5848 ) }
    dend_65 { pt3dadd( 286.366, 448.752, 63.635, 0.5592 ) }
    dend_65 { pt3dadd( 286.801, 449.706, 64.12, 0.3304 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 17/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 276.962, 407.632, 46.8222, 0.661 ) }
    dend_62 { pt3dadd( 277.077, 407.138, 48.0374, 0.5988 ) }
    dend_62 { pt3dadd( 276.609, 406.482, 48.4624, 0.4068 ) }
    dend_62 { pt3dadd( 276.454, 405.996, 46.727, 0.6864 ) }
    dend_62 { pt3dadd( 276.507, 405.363, 48.1037, 0.5898 ) }
    dend_62 { pt3dadd( 276.727, 405.022, 50.1592, 0.332 ) }
    dend_62 { pt3dadd( 276.562, 404.627, 52.624, 0.5084 ) }
    dend_62 { pt3dadd( 276.521, 403.604, 52.08, 0.5264 ) }
    dend_62 { pt3dadd( 277.017, 402.917, 51.5032, 0.393 ) }
    dend_62 { pt3dadd( 277.42, 402.051, 50.9886, 0.3262 ) }
    dend_62 { pt3dadd( 277.534, 401.712, 53.496, 0.5772 ) }
    dend_62 { pt3dadd( 277.498, 400.77, 54.4981, 0.725 ) }
    dend_62 { pt3dadd( 277.42, 399.957, 56.3069, 0.382 ) }
    dend_62 { pt3dadd( 277.485, 399.246, 55.7511, 0.4576 ) }
    dend_62 { pt3dadd( 276.857, 398.448, 55.5302, 0.4916 ) }
    dend_62 { pt3dadd( 277.241, 398.112, 56.7157, 0.3304 ) }
    // Section: dend_59, id: dend_59, parent: dend_53 (entry count 33/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 293.817, 380.914, 48.72, 0.483 ) }
    dend_59 { pt3dadd( 293.089, 380.589, 46.76, 0.2542 ) }
    dend_59 { pt3dadd( 291.961, 380.723, 46.76, 0.3076 ) }
    dend_59 { pt3dadd( 290.859, 380.819, 46.1504, 0.4324 ) }
    dend_59 { pt3dadd( 289.772, 380.592, 46.0222, 0.4322 ) }
    dend_59 { pt3dadd( 288.678, 380.645, 46.569, 0.4068 ) }
    dend_59 { pt3dadd( 287.843, 381.07, 47.3659, 0.4328 ) }
    dend_59 { pt3dadd( 287.469, 381.295, 49.56, 0.2288 ) }
    dend_59 { pt3dadd( 286.42, 381.289, 49.474, 0.7834 ) }
    dend_59 { pt3dadd( 285.799, 381.136, 47.6291, 0.5004 ) }
    dend_59 { pt3dadd( 285.189, 381.261, 49.3774, 0.6536 ) }
    dend_59 { pt3dadd( 284.238, 381.285, 50.0567, 0.3538 ) }
    dend_59 { pt3dadd( 283.55, 381.453, 50.9362, 0.2382 ) }
    dend_59 { pt3dadd( 282.578, 381.712, 51.0138, 0.591 ) }
    dend_59 { pt3dadd( 281.554, 381.705, 50.3496, 0.4068 ) }
    dend_59 { pt3dadd( 281.351, 382.525, 50.9832, 0.5064 ) }
    dend_59 { pt3dadd( 280.64, 383.202, 51.52, 0.2288 ) }
    dend_59 { pt3dadd( 279.758, 383.469, 52.2348, 0.2798 ) }
    dend_59 { pt3dadd( 278.749, 383.307, 51.8476, 0.3814 ) }
    dend_59 { pt3dadd( 278.111, 383.023, 49.8753, 0.2304 ) }
    dend_59 { pt3dadd( 277.649, 383.466, 51.2845, 0.2634 ) }
    dend_59 { pt3dadd( 277.269, 383.235, 52.92, 0.238 ) }
    dend_59 { pt3dadd( 276.608, 383.406, 54.0921, 0.2796 ) }
    dend_59 { pt3dadd( 275.667, 383.479, 53.4988, 0.5134 ) }
    dend_59 { pt3dadd( 274.943, 383.051, 52.4569, 0.482 ) }
    dend_59 { pt3dadd( 274.187, 383.019, 52.7344, 0.6864 ) }
    dend_59 { pt3dadd( 273.917, 383.578, 54.32, 0.5302 ) }
    dend_59 { pt3dadd( 272.835, 383.569, 54.6, 0.3788 ) }
    dend_59 { pt3dadd( 272.218, 382.925, 53.3431, 0.5968 ) }
    dend_59 { pt3dadd( 271.258, 382.782, 53.4733, 0.6596 ) }
    dend_59 { pt3dadd( 270.858, 382.668, 55.1729, 0.6276 ) }
    dend_59 { pt3dadd( 270.376, 382.318, 53.3095, 0.658 ) }
    dend_59 { pt3dadd( 269.485, 381.916, 53.8037, 0.4402 ) }
    dend_59 { pt3dadd( 268.851, 381.18, 54.6538, 0.2288 ) }
    dend_59 { pt3dadd( 268.337, 380.687, 56.0804, 0.465 ) }
    dend_59 { pt3dadd( 267.459, 380.047, 55.8768, 0.5304 ) }
    dend_59 { pt3dadd( 266.704, 379.999, 54.04, 0.305 ) }
    dend_59 { pt3dadd( 266.03, 379.465, 53.48, 0.6754 ) }
    dend_59 { pt3dadd( 265.17, 379.181, 53.004, 0.4246 ) }
    dend_59 { pt3dadd( 264.407, 378.755, 54.061, 0.4328 ) }
    dend_59 { pt3dadd( 263.518, 378.306, 54.628, 0.6788 ) }
    dend_59 { pt3dadd( 262.982, 377.321, 55.0556, 0.7388 ) }
    dend_59 { pt3dadd( 262.44, 376.432, 54.5476, 0.6202 ) }
    dend_59 { pt3dadd( 261.974, 375.55, 54.36, 0.6088 ) }
    dend_59 { pt3dadd( 261.188, 375.08, 55.421, 0.3522 ) }
    dend_59 { pt3dadd( 260.813, 374.175, 54.5619, 0.2418 ) }
    dend_59 { pt3dadd( 260.166, 373.376, 54.5667, 0.423 ) }
    dend_59 { pt3dadd( 259.337, 372.819, 53.76, 0.5658 ) }
    dend_59 { pt3dadd( 258.693, 371.946, 54.1013, 0.6052 ) }
    dend_59 { pt3dadd( 257.913, 371.228, 53.5413, 0.3382 ) }
    dend_59 { pt3dadd( 257.035, 370.737, 52.9477, 0.6556 ) }
    dend_59 { pt3dadd( 256.315, 370.259, 53.7499, 0.5424 ) }
    dend_59 { pt3dadd( 255.544, 369.598, 53.1342, 0.4796 ) }
    dend_59 { pt3dadd( 254.883, 368.943, 53.3448, 0.6978 ) }
    dend_59 { pt3dadd( 254.367, 368.264, 52.169, 0.5282 ) }
    dend_59 { pt3dadd( 253.784, 367.616, 53.48, 0.2442 ) }
    dend_59 { pt3dadd( 252.909, 366.929, 53.48, 0.5304 ) }
    dend_59 { pt3dadd( 252.087, 366.15, 53.1748, 0.5754 ) }
    dend_59 { pt3dadd( 251.256, 365.372, 53.2, 0.6026 ) }
    dend_59 { pt3dadd( 250.487, 364.58, 53.7205, 0.4684 ) }
    dend_59 { pt3dadd( 249.59, 363.932, 53.739, 0.2878 ) }
    dend_59 { pt3dadd( 248.672, 363.563, 53.872, 0.4264 ) }
    dend_59 { pt3dadd( 247.916, 363.062, 53.8311, 0.6696 ) }
    dend_59 { pt3dadd( 247.226, 362.325, 53.9406, 0.5576 ) }
    dend_59 { pt3dadd( 246.441, 361.612, 54.3077, 0.2896 ) }
    dend_59 { pt3dadd( 245.679, 360.813, 54.04, 0.2796 ) }
    dend_59 { pt3dadd( 245.21, 359.794, 54.243, 0.3006 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_59 { pt3dadd( 244.53, 358.924, 54.6, 0.289 ) }
    dend_59 { pt3dadd( 243.948, 358.025, 54.642, 0.5084 ) }
    dend_59 { pt3dadd( 243.558, 357.332, 53.5553, 0.2442 ) }
    dend_59 { pt3dadd( 243.275, 356.604, 53.3238, 0.3176 ) }
    dend_59 { pt3dadd( 242.829, 356.032, 54.6244, 0.4576 ) }
    dend_59 { pt3dadd( 242.299, 355.15, 54.899, 0.5338 ) }
    dend_59 { pt3dadd( 242.121, 354.275, 56.28, 0.6864 ) }
    dend_59 { pt3dadd( 241.636, 353.368, 56.0123, 0.5286 ) }
    dend_59 { pt3dadd( 240.827, 352.609, 56.089, 0.2288 ) }
    dend_59 { pt3dadd( 240.645, 351.715, 57.12, 0.2288 ) }
    dend_59 { pt3dadd( 239.892, 351.237, 57.68, 0.2288 ) }
    dend_59 { pt3dadd( 239.042, 350.54, 57.9356, 0.2288 ) }
    dend_59 { pt3dadd( 238.821, 349.442, 57.68, 0.2288 ) }
    dend_59 { pt3dadd( 238.752, 348.306, 57.68, 0.2288 ) }
    dend_59 { pt3dadd( 238.049, 347.553, 57.68, 0.2288 ) }
    dend_59 { pt3dadd( 237.128, 346.925, 57.68, 0.2288 ) }
    dend_59 { pt3dadd( 236.238, 346.423, 57.68, 0.2492 ) }
    dend_59 { pt3dadd( 236.465, 345.488, 58.24, 0.3304 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 293.817, 380.914, 48.72, 0.483 ) }
    dend_54 { pt3dadd( 293.01, 379.901, 48.72, 0.4864 ) }
    dend_54 { pt3dadd( 292.381, 378.986, 48.974, 0.5296 ) }
    dend_54 { pt3dadd( 292.091, 377.968, 48.841, 0.4598 ) }
    dend_54 { pt3dadd( 291.949, 377.336, 50.96, 0.624 ) }
    dend_54 { pt3dadd( 291.961, 376.247, 51.2392, 0.6862 ) }
    dend_54 { pt3dadd( 291.378, 375.405, 50.68, 0.597 ) }
    dend_54 { pt3dadd( 290.602, 374.721, 50.9846, 0.556 ) }
    dend_54 { pt3dadd( 290.714, 374.168, 52.9108, 0.567 ) }
    dend_54 { pt3dadd( 290.805, 373.279, 54.1652, 0.2962 ) }
    dend_54 { pt3dadd( 290.385, 372.601, 53.3868, 0.4322 ) }
    // Section: apic_37, id: apic_37, parent: apic_35 (entry count 29/100)
    apic_37 { pt3dclear() }
    apic_37 { pt3dadd( 293.423, 364.414, 42.0932, 0.5338 ) }
    apic_37 { pt3dadd( 292.405, 364.936, 41.7189, 0.6362 ) }
    apic_37 { pt3dadd( 291.88, 365.05, 43.143, 0.6864 ) }
    apic_37 { pt3dadd( 290.773, 365.032, 43.5554, 0.572 ) }
    apic_37 { pt3dadd( 289.898, 364.707, 42.7706, 0.4784 ) }
    apic_37 { pt3dadd( 289.137, 364.736, 42.8515, 0.4096 ) }
    apic_37 { pt3dadd( 288.24, 364.139, 43.5266, 0.6312 ) }
    apic_37 { pt3dadd( 287.36, 363.461, 43.68, 0.8898 ) }
    apic_37 { pt3dadd( 286.311, 363.563, 44.5917, 0.6296 ) }
    apic_37 { pt3dadd( 285.383, 363.832, 45.808, 0.3436 ) }
    apic_37 { pt3dadd( 284.317, 363.678, 45.6646, 0.4764 ) }
    apic_37 { pt3dadd( 283.444, 363.079, 45.7114, 0.544 ) }
    apic_37 { pt3dadd( 282.538, 362.987, 46.6374, 0.388 ) }
    apic_37 { pt3dadd( 281.617, 362.693, 46.7496, 0.2796 ) }
    apic_37 { pt3dadd( 280.819, 363.403, 46.6312, 0.6724 ) }
    apic_37 { pt3dadd( 279.782, 363.517, 47.031, 0.6838 ) }
    apic_37 { pt3dadd( 279.146, 362.991, 48.0472, 0.6864 ) }
    apic_37 { pt3dadd( 278.395, 362.45, 48.5447, 0.5288 ) }
    apic_37 { pt3dadd( 277.537, 362.419, 50.2354, 0.2422 ) }
    apic_37 { pt3dadd( 276.411, 362.472, 50.4969, 0.3324 ) }
    apic_37 { pt3dadd( 275.338, 362.679, 49.9425, 0.483 ) }
    apic_37 { pt3dadd( 274.49, 363.14, 49.84, 0.5848 ) }
    apic_37 { pt3dadd( 273.877, 363.132, 51.6174, 0.6688 ) }
    apic_37 { pt3dadd( 273.052, 362.559, 51.9669, 0.5686 ) }
    apic_37 { pt3dadd( 272.249, 362.559, 50.4311, 0.5142 ) }
    apic_37 { pt3dadd( 271.377, 362.631, 51.52, 0.3416 ) }
    apic_37 { pt3dadd( 270.268, 362.422, 51.52, 0.233 ) }
    apic_37 { pt3dadd( 269.3, 362.162, 50.7111, 0.4008 ) }
    apic_37 { pt3dadd( 268.708, 362.18, 52.0719, 0.4642 ) }
    apic_37 { pt3dadd( 267.759, 361.745, 51.333, 0.5594 ) }
    apic_37 { pt3dadd( 266.781, 361.542, 51.7672, 0.5578 ) }
    apic_37 { pt3dadd( 266.321, 361.688, 53.6942, 0.797 ) }
    apic_37 { pt3dadd( 265.406, 362.047, 53.4526, 0.4878 ) }
    apic_37 { pt3dadd( 264.574, 362.489, 53.4411, 0.5566 ) }
    apic_37 { pt3dadd( 263.954, 362.762, 55.3714, 0.3422 ) }
    apic_37 { pt3dadd( 263.175, 362.375, 55.6721, 0.4668 ) }
    apic_37 { pt3dadd( 262.529, 362.864, 54.3262, 0.5826 ) }
    apic_37 { pt3dadd( 261.655, 362.987, 55.9026, 0.2894 ) }
    apic_37 { pt3dadd( 260.84, 363.656, 56.5356, 0.3728 ) }
    apic_37 { pt3dadd( 260.024, 364.147, 55.44, 0.4768 ) }
    apic_37 { pt3dadd( 259.349, 364.707, 56.467, 0.337 ) }
    apic_37 { pt3dadd( 258.979, 365.532, 57.4, 0.3304 ) }
    apic_37 { pt3dadd( 258.989, 366.457, 57.4445, 0.646 ) }
    apic_37 { pt3dadd( 258.633, 367.195, 58.905, 0.5164 ) }
    apic_37 { pt3dadd( 258.721, 367.66, 60.2, 0.5078 ) }
    apic_37 { pt3dadd( 258.259, 368.424, 60.944, 0.6216 ) }
    apic_37 { pt3dadd( 257.567, 367.916, 59.5952, 0.2542 ) }
    apic_37 { pt3dadd( 257.019, 368.112, 58.0854, 0.2466 ) }
    apic_37 { pt3dadd( 256.388, 368.901, 58.2106, 0.2288 ) }
    apic_37 { pt3dadd( 256.256, 370.031, 58.24, 0.2288 ) }
    apic_37 { pt3dadd( 255.686, 370.436, 59.7954, 0.2288 ) }
    apic_37 { pt3dadd( 254.931, 370.599, 61.8593, 0.2288 ) }
    apic_37 { pt3dadd( 254.175, 370.762, 63.9234, 0.2288 ) }
    apic_37 { pt3dadd( 253.976, 371.771, 64.1962, 0.2288 ) }
    apic_37 { pt3dadd( 253.749, 372.879, 64.1962, 0.2288 ) }
    apic_37 { pt3dadd( 253.255, 373.897, 64.1962, 0.2288 ) }
    apic_37 { pt3dadd( 252.139, 373.649, 64.1962, 0.2288 ) }
    apic_37 { pt3dadd( 251.203, 373.368, 65.2669, 0.2288 ) }
    apic_37 { pt3dadd( 250.401, 373.063, 67.118, 0.2288 ) }
    apic_37 { pt3dadd( 249.504, 373.055, 68.2506, 0.2288 ) }
    apic_37 { pt3dadd( 248.456, 373.516, 68.2506, 0.2288 ) }
    apic_37 { pt3dadd( 247.47, 373.653, 68.2506, 0.2288 ) }
    apic_37 { pt3dadd( 246.692, 372.971, 68.9321, 0.2288 ) }
    apic_37 { pt3dadd( 245.967, 372.504, 70.7717, 0.2288 ) }
    apic_37 { pt3dadd( 245.198, 372.02, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 244.207, 371.448, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 243.217, 370.875, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 242.226, 370.302, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 241.227, 369.821, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 240.144, 370.191, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 239.062, 370.562, 72.305, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_37 { pt3dadd( 237.969, 370.838, 72.305, 0.2288 ) }
    apic_37 { pt3dadd( 237.017, 370.456, 72.8028, 0.2288 ) }
    apic_37 { pt3dadd( 236.337, 369.682, 74.0242, 0.2288 ) }
    apic_37 { pt3dadd( 235.657, 368.909, 75.2455, 0.2288 ) }
    apic_37 { pt3dadd( 234.992, 368.114, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 234.481, 367.091, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 233.971, 366.067, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 233.502, 365.025, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 233.085, 363.96, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 232.668, 362.894, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 232.25, 361.829, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 231.869, 360.755, 76.3596, 0.2288 ) }
    apic_37 { pt3dadd( 231.495, 359.813, 76.3596, 0.234 ) }
    apic_37 { pt3dadd( 230.366, 359.626, 76.3596, 0.2606 ) }
    apic_37 { pt3dadd( 229.363, 359.231, 76.3596, 0.3022 ) }
    apic_37 { pt3dadd( 228.665, 358.324, 76.3596, 0.3814 ) }
    // Section: apic_36, id: apic_36, parent: apic_35 (entry count 16/100)
    apic_36 { pt3dclear() }
    apic_36 { pt3dadd( 293.423, 364.414, 42.0932, 0.5338 ) }
    apic_36 { pt3dadd( 293.436, 364.786, 41.6783, 0.3304 ) }
    apic_36 { pt3dadd( 293.761, 365.622, 41.16, 0.297 ) }
    apic_36 { pt3dadd( 294.572, 366.26, 41.461, 0.3846 ) }
    apic_36 { pt3dadd( 295.159, 367.227, 41.7816, 0.7028 ) }
    apic_36 { pt3dadd( 295.495, 368.271, 42.1366, 0.7644 ) }
    apic_36 { pt3dadd( 295.61, 369.385, 42.5919, 0.559 ) }
    apic_36 { pt3dadd( 296.233, 370.059, 43.7928, 0.37 ) }
    apic_36 { pt3dadd( 296.532, 371.094, 43.7464, 0.2994 ) }
    apic_36 { pt3dadd( 297.326, 371.8, 43.4, 0.4576 ) }
    // Section: apic_29, id: apic_29, parent: apic_25 (entry count 26/100)
    apic_29 { pt3dclear() }
    apic_29 { pt3dadd( 290.118, 339.768, 33.32, 0.483 ) }
    apic_29 { pt3dadd( 290.092, 338.46, 34.3658, 0.2776 ) }
    apic_29 { pt3dadd( 290.068, 337.696, 32.3868, 0.5848 ) }
    // Section: apic_26, id: apic_26, parent: apic_25 (entry count 29/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 290.118, 339.768, 33.32, 0.483 ) }
    apic_26 { pt3dadd( 290.29, 339.406, 32.8076, 0.4164 ) }
    apic_26 { pt3dadd( 290.649, 339.196, 30.3363, 0.4576 ) }
    apic_26 { pt3dadd( 291.299, 339.532, 31.306, 0.4576 ) }
    apic_26 { pt3dadd( 291.832, 339.871, 30.9137, 0.7426 ) }
    apic_26 { pt3dadd( 292.775, 339.991, 31.1419, 0.4576 ) }
    apic_26 { pt3dadd( 293.331, 340.015, 32.2, 0.4642 ) }
    apic_26 { pt3dadd( 293.787, 340.768, 30.8314, 0.4244 ) }
    apic_26 { pt3dadd( 294.587, 340.83, 30.081, 0.6298 ) }
    apic_26 { pt3dadd( 295.389, 341.263, 30.7476, 0.4322 ) }
    apic_26 { pt3dadd( 296.313, 341.14, 29.7128, 0.5582 ) }
    apic_26 { pt3dadd( 297.419, 340.913, 29.96, 0.3576 ) }
    apic_26 { pt3dadd( 298.145, 340.999, 28.5631, 0.5322 ) }
    apic_26 { pt3dadd( 298.919, 341.621, 29.1942, 0.5698 ) }
    apic_26 { pt3dadd( 299.905, 342.042, 29.986, 0.5258 ) }
    apic_26 { pt3dadd( 300.682, 341.399, 29.7195, 0.6102 ) }
    apic_26 { pt3dadd( 301.661, 341.219, 29.3048, 0.3366 ) }
    apic_26 { pt3dadd( 302.686, 340.912, 29.68, 0.7096 ) }
    apic_26 { pt3dadd( 303.303, 340.22, 28.4917, 0.682 ) }
    apic_26 { pt3dadd( 304.266, 339.817, 27.7732, 0.5702 ) }
    apic_26 { pt3dadd( 305.067, 339.364, 28.3984, 0.342 ) }
    apic_26 { pt3dadd( 305.6, 338.579, 28.94, 0.2888 ) }
    apic_26 { pt3dadd( 306.134, 337.915, 29.6363, 0.5608 ) }
    apic_26 { pt3dadd( 306.366, 337.8, 27.72, 0.551 ) }
    apic_26 { pt3dadd( 307.201, 337.426, 27.7794, 0.6154 ) }
    apic_26 { pt3dadd( 307.844, 336.889, 28.7468, 0.4422 ) }
    apic_26 { pt3dadd( 308.65, 336.241, 28.2559, 0.661 ) }
    apic_26 { pt3dadd( 309.407, 335.993, 27.9028, 0.5624 ) }
    apic_26 { pt3dadd( 310.193, 335.451, 27.5775, 0.7058 ) }
    apic_26 { pt3dadd( 310.834, 334.668, 27.1043, 0.74 ) }
    apic_26 { pt3dadd( 311.755, 334.108, 26.6213, 0.5848 ) }
    apic_26 { pt3dadd( 312.81, 333.862, 27.1384, 0.618 ) }
    apic_26 { pt3dadd( 313.558, 333.196, 27.6273, 0.7114 ) }
    apic_26 { pt3dadd( 314.057, 332.545, 26.9713, 0.6598 ) }
    apic_26 { pt3dadd( 314.893, 332.082, 26.5826, 0.5848 ) }
    apic_26 { pt3dadd( 315.654, 331.369, 26.8442, 0.4984 ) }
    apic_26 { pt3dadd( 316.476, 330.745, 26.6924, 0.3968 ) }
    apic_26 { pt3dadd( 317.169, 330.285, 27.4565, 0.6262 ) }
    apic_26 { pt3dadd( 317.917, 330.605, 27.3935, 0.632 ) }
    apic_26 { pt3dadd( 318.466, 329.858, 27.4991, 0.4482 ) }
    apic_26 { pt3dadd( 318.604, 328.866, 27.5164, 0.6288 ) }
    apic_26 { pt3dadd( 318.572, 327.801, 28.3119, 0.5048 ) }
    apic_26 { pt3dadd( 318.948, 326.961, 29.3812, 0.4322 ) }
    apic_26 { pt3dadd( 319.763, 326.447, 28.5135, 0.6546 ) }
    apic_26 { pt3dadd( 320.52, 325.91, 28.6572, 0.6146 ) }
    apic_26 { pt3dadd( 321.297, 325.206, 28.6513, 0.2994 ) }
    apic_26 { pt3dadd( 321.996, 324.634, 27.8844, 0.5848 ) }
    apic_26 { pt3dadd( 322.76, 323.862, 28.1249, 0.5338 ) }
    apic_26 { pt3dadd( 323.286, 323.266, 28.84, 0.3514 ) }
    apic_26 { pt3dadd( 323.887, 322.606, 28.1473, 0.2992 ) }
    apic_26 { pt3dadd( 324.398, 321.91, 27.9451, 0.3606 ) }
    apic_26 { pt3dadd( 324.974, 321.337, 27.5022, 0.3052 ) }
    apic_26 { pt3dadd( 326.015, 320.903, 27.48, 0.4322 ) }
    apic_26 { pt3dadd( 326.753, 320.076, 27.3938, 0.4068 ) }
    apic_26 { pt3dadd( 326.811, 318.967, 26.9954, 0.512 ) }
    apic_26 { pt3dadd( 326.726, 317.851, 26.5798, 0.5338 ) }
    apic_26 { pt3dadd( 327.241, 317.371, 25.2857, 0.5904 ) }
    apic_26 { pt3dadd( 328.341, 317.22, 25.3772, 0.6128 ) }
    apic_26 { pt3dadd( 329.0, 316.727, 25.9823, 0.44 ) }
    apic_26 { pt3dadd( 329.709, 315.958, 25.947, 0.7032 ) }
    apic_26 { pt3dadd( 330.251, 315.102, 26.04, 0.5018 ) }
    apic_26 { pt3dadd( 330.61, 314.079, 25.6869, 0.661 ) }
    apic_26 { pt3dadd( 330.577, 313.31, 24.4042, 0.523 ) }
    apic_26 { pt3dadd( 331.281, 312.561, 23.4982, 0.4442 ) }
    apic_26 { pt3dadd( 332.289, 312.185, 22.6657, 0.599 ) }
    apic_26 { pt3dadd( 333.231, 311.606, 22.5624, 0.4322 ) }
    apic_26 { pt3dadd( 334.162, 311.236, 22.414, 0.4668 ) }
    apic_26 { pt3dadd( 335.152, 311.322, 21.9624, 0.6736 ) }
    apic_26 { pt3dadd( 336.155, 311.774, 21.3206, 0.4686 ) }
    apic_26 { pt3dadd( 336.852, 311.635, 22.0352, 0.439 ) }
    apic_26 { pt3dadd( 337.597, 310.983, 21.1904, 0.5096 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_26 { pt3dadd( 338.418, 310.722, 21.2789, 0.5184 ) }
    apic_26 { pt3dadd( 339.465, 310.596, 21.4693, 0.6106 ) }
    apic_26 { pt3dadd( 340.226, 310.141, 21.5516, 0.6596 ) }
    apic_26 { pt3dadd( 340.956, 309.569, 22.526, 0.4418 ) }
    apic_26 { pt3dadd( 341.605, 309.334, 21.0, 0.3304 ) }
    apic_26 { pt3dadd( 342.628, 308.918, 20.6268, 0.4576 ) }
    // Section: apic_6, id: apic_6, parent: apic_2 (entry count 6/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 265.344, 309.287, 43.12, 0.6102 ) }
    apic_6 { pt3dadd( 264.617, 308.572, 44.3792, 0.6864 ) }
    apic_6 { pt3dadd( 264.035, 308.11, 43.7251, 0.6102 ) }
    apic_6 { pt3dadd( 263.411, 307.301, 43.7478, 0.8092 ) }
    apic_6 { pt3dadd( 263.055, 306.479, 43.4862, 0.4126 ) }
    apic_6 { pt3dadd( 262.397, 305.879, 43.9267, 0.3826 ) }
    apic_6 { pt3dadd( 261.859, 305.426, 44.24, 0.6318 ) }
    apic_6 { pt3dadd( 261.292, 304.514, 43.7203, 0.81 ) }
    apic_6 { pt3dadd( 261.029, 303.516, 43.5868, 0.6032 ) }
    apic_6 { pt3dadd( 261.077, 302.544, 43.787, 0.5226 ) }
    apic_6 { pt3dadd( 260.787, 301.811, 42.4673, 0.7554 ) }
    apic_6 { pt3dadd( 260.705, 300.855, 41.2639, 0.486 ) }
    apic_6 { pt3dadd( 260.247, 300.007, 41.8135, 0.661 ) }
    apic_6 { pt3dadd( 259.898, 299.362, 43.3874, 0.7626 ) }
    apic_6 { pt3dadd( 259.129, 298.624, 42.8565, 0.5202 ) }
    apic_6 { pt3dadd( 258.655, 298.058, 43.2172, 0.5338 ) }
    apic_6 { pt3dadd( 258.141, 297.171, 43.1343, 0.6494 ) }
    apic_6 { pt3dadd( 257.629, 296.639, 43.96, 0.7372 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 24/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 265.344, 309.287, 43.12, 0.6102 ) }
    apic_3 { pt3dadd( 265.248, 308.707, 42.3116, 0.5996 ) }
    apic_3 { pt3dadd( 264.836, 308.389, 41.0894, 0.6632 ) }
    apic_3 { pt3dadd( 265.375, 307.563, 40.9175, 0.4068 ) }
    apic_3 { pt3dadd( 265.179, 306.668, 40.1321, 0.2288 ) }
    apic_3 { pt3dadd( 264.847, 306.258, 40.0011, 0.3304 ) }
    apic_3 { pt3dadd( 265.25, 305.475, 41.498, 0.3626 ) }
    apic_3 { pt3dadd( 265.702, 304.605, 42.56, 0.634 ) }
    apic_3 { pt3dadd( 265.651, 303.745, 41.993, 0.335 ) }
    apic_3 { pt3dadd( 266.471, 303.343, 41.6858, 0.4374 ) }
    apic_3 { pt3dadd( 267.052, 302.626, 40.7162, 0.4354 ) }
    apic_3 { pt3dadd( 267.841, 301.997, 41.0822, 0.4322 ) }
    apic_3 { pt3dadd( 268.529, 301.378, 41.6612, 0.4576 ) }
    apic_3 { pt3dadd( 268.585, 300.437, 41.6147, 0.575 ) }
    apic_3 { pt3dadd( 269.063, 299.574, 41.7836, 0.9516 ) }
    apic_3 { pt3dadd( 269.391, 298.994, 40.8884, 0.6424 ) }
    apic_3 { pt3dadd( 269.832, 298.326, 41.2056, 0.8072 ) }
    apic_3 { pt3dadd( 270.237, 297.308, 40.6137, 0.4972 ) }
    apic_3 { pt3dadd( 270.625, 296.369, 41.0295, 0.7066 ) }
    apic_3 { pt3dadd( 270.858, 295.385, 41.8037, 0.4576 ) }
    apic_3 { pt3dadd( 271.445, 294.642, 42.6056, 0.5434 ) }
    apic_3 { pt3dadd( 272.345, 294.102, 42.814, 0.2288 ) }
    apic_3 { pt3dadd( 272.454, 293.609, 40.8814, 0.3292 ) }
    apic_3 { pt3dadd( 272.72, 292.803, 41.979, 0.5756 ) }
    apic_3 { pt3dadd( 272.814, 291.925, 40.7901, 0.6102 ) }
    apic_3 { pt3dadd( 273.232, 291.254, 41.5232, 0.4088 ) }
    apic_3 { pt3dadd( 273.416, 290.282, 42.1518, 0.2542 ) }
    apic_3 { pt3dadd( 272.793, 289.846, 40.8962, 0.396 ) }
    apic_3 { pt3dadd( 272.621, 288.984, 40.3808, 0.5962 ) }
    apic_3 { pt3dadd( 272.575, 288.449, 39.2081, 0.4642 ) }
    apic_3 { pt3dadd( 272.668, 287.534, 40.2833, 0.2696 ) }
    apic_3 { pt3dadd( 272.766, 286.76, 38.92, 0.4068 ) }
    apic_3 { pt3dadd( 273.049, 286.106, 40.0319, 0.3846 ) }
    apic_3 { pt3dadd( 272.882, 285.127, 40.3096, 0.4152 ) }
    apic_3 { pt3dadd( 272.958, 284.269, 39.5111, 0.3304 ) }
    apic_3 { pt3dadd( 273.55, 283.681, 40.6347, 0.2288 ) }
    apic_3 { pt3dadd( 274.133, 282.915, 39.6525, 0.27 ) }
    apic_3 { pt3dadd( 274.248, 281.838, 39.0757, 0.4954 ) }
    apic_3 { pt3dadd( 274.238, 280.948, 38.3975, 0.4514 ) }
    apic_3 { pt3dadd( 273.838, 279.924, 38.4, 0.3216 ) }
    apic_3 { pt3dadd( 273.354, 278.928, 38.1562, 0.349 ) }
    apic_3 { pt3dadd( 272.835, 278.082, 38.2018, 0.3844 ) }
    apic_3 { pt3dadd( 272.386, 277.177, 38.519, 0.5338 ) }
    apic_3 { pt3dadd( 272.155, 276.269, 37.8008, 0.3056 ) }
    apic_3 { pt3dadd( 271.929, 275.198, 38.4185, 0.3782 ) }
    apic_3 { pt3dadd( 272.309, 274.412, 38.0405, 0.5094 ) }
    apic_3 { pt3dadd( 272.575, 273.435, 38.3214, 0.4068 ) }
    apic_3 { pt3dadd( 272.328, 272.758, 38.0467, 0.5668 ) }
    apic_3 { pt3dadd( 271.598, 272.241, 36.9163, 0.493 ) }
    apic_3 { pt3dadd( 271.13, 271.568, 38.2782, 0.2288 ) }
    apic_3 { pt3dadd( 271.686, 270.808, 37.8616, 0.4068 ) }
    apic_3 { pt3dadd( 271.875, 269.957, 36.8329, 0.4516 ) }
    apic_3 { pt3dadd( 271.631, 269.072, 37.3332, 0.3566 ) }
    apic_3 { pt3dadd( 271.241, 268.321, 36.2782, 0.543 ) }
    apic_3 { pt3dadd( 271.21, 267.52, 36.0186, 0.393 ) }
    apic_3 { pt3dadd( 271.128, 266.737, 36.9883, 0.5848 ) }
    apic_3 { pt3dadd( 270.924, 265.726, 36.4, 0.4068 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 81/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 304.152, 330.616, 42.9332, 0.5592 ) }
    dend_49 { pt3dadd( 304.075, 329.366, 42.9649, 0.3942 ) }
    dend_49 { pt3dadd( 303.938, 328.481, 43.7172, 0.4422 ) }
    dend_49 { pt3dadd( 304.024, 327.483, 43.7984, 0.4576 ) }
    dend_49 { pt3dadd( 303.737, 326.583, 44.0798, 0.4304 ) }
    dend_49 { pt3dadd( 303.263, 326.287, 45.64, 0.2782 ) }
    dend_49 { pt3dadd( 303.21, 325.518, 44.0255, 0.4068 ) }
    dend_49 { pt3dadd( 303.168, 324.549, 44.4763, 0.507 ) }
    dend_49 { pt3dadd( 303.745, 323.993, 45.6145, 0.342 ) }
    dend_49 { pt3dadd( 304.289, 323.074, 45.472, 0.2288 ) }
    dend_49 { pt3dadd( 304.476, 322.22, 45.36, 0.3844 ) }
    dend_49 { pt3dadd( 303.952, 321.41, 44.5449, 0.3188 ) }
    dend_49 { pt3dadd( 303.758, 321.035, 46.7432, 0.2288 ) }
    dend_49 { pt3dadd( 302.784, 320.688, 46.9501, 0.2542 ) }
    dend_49 { pt3dadd( 301.748, 320.25, 46.9535, 0.3732 ) }
    dend_49 { pt3dadd( 301.024, 319.97, 47.9032, 0.4068 ) }
    dend_49 { pt3dadd( 300.372, 319.236, 48.314, 0.828 ) }
    dend_49 { pt3dadd( 300.077, 318.234, 48.0668, 0.6834 ) }
    dend_49 { pt3dadd( 300.128, 317.161, 48.44, 0.7546 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_49 { pt3dadd( 300.139, 316.121, 47.8092, 0.483 ) }
    dend_49 { pt3dadd( 300.758, 315.528, 48.7463, 0.6528 ) }
    dend_49 { pt3dadd( 301.311, 314.912, 50.029, 0.6164 ) }
    dend_49 { pt3dadd( 301.902, 314.829, 50.68, 0.4322 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 4/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 304.152, 330.616, 42.9332, 0.5592 ) }
    dend_48 { pt3dadd( 303.618, 330.845, 43.4, 0.2542 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 290.903, 351.199, 47.696, 0.661 ) }
    dend_46 { pt3dadd( 290.328, 351.116, 47.679, 0.5416 ) }
    dend_46 { pt3dadd( 289.445, 351.321, 48.44, 0.893 ) }
    dend_46 { pt3dadd( 288.869, 350.881, 48.9726, 0.6462 ) }
    dend_46 { pt3dadd( 288.938, 349.863, 49.6104, 0.3676 ) }
    dend_46 { pt3dadd( 288.517, 348.818, 49.84, 0.2316 ) }
    dend_46 { pt3dadd( 288.061, 348.223, 50.6125, 0.4238 ) }
    dend_46 { pt3dadd( 287.512, 347.807, 52.6414, 0.6742 ) }
    dend_46 { pt3dadd( 287.467, 346.881, 54.061, 0.5196 ) }
    dend_46 { pt3dadd( 287.034, 346.253, 55.2619, 0.5062 ) }
    dend_46 { pt3dadd( 286.74, 345.259, 55.1911, 0.6024 ) }
    dend_46 { pt3dadd( 286.398, 344.593, 56.4668, 0.6864 ) }
    dend_46 { pt3dadd( 286.801, 344.37, 58.2319, 0.661 ) }
    dend_46 { pt3dadd( 287.138, 343.772, 56.8837, 0.5338 ) }
    dend_46 { pt3dadd( 287.945, 343.707, 58.1101, 0.3078 ) }
    dend_46 { pt3dadd( 288.384, 343.963, 59.8041, 0.2288 ) }
    dend_46 { pt3dadd( 288.852, 342.938, 59.92, 0.451 ) }
    dend_46 { pt3dadd( 289.423, 342.239, 61.0697, 0.356 ) }
    dend_46 { pt3dadd( 290.013, 341.541, 61.0467, 0.436 ) }
    dend_46 { pt3dadd( 290.219, 340.464, 60.7583, 0.5364 ) }
    dend_46 { pt3dadd( 289.661, 339.779, 61.2724, 0.2914 ) }
    dend_46 { pt3dadd( 289.112, 338.846, 61.2363, 0.3402 ) }
    dend_46 { pt3dadd( 288.468, 338.087, 61.0095, 0.3 ) }
    dend_46 { pt3dadd( 288.027, 337.282, 62.0203, 0.661 ) }
    dend_46 { pt3dadd( 288.366, 336.966, 63.5295, 0.2792 ) }
    dend_46 { pt3dadd( 288.667, 336.033, 63.8448, 0.38 ) }
    dend_46 { pt3dadd( 288.974, 335.286, 62.4943, 0.4448 ) }
    dend_46 { pt3dadd( 289.442, 334.552, 63.56, 0.2658 ) }
    dend_46 { pt3dadd( 289.549, 333.61, 63.4805, 0.4576 ) }
    dend_46 { pt3dadd( 289.653, 332.584, 64.0836, 0.4524 ) }
    dend_46 { pt3dadd( 290.38, 332.103, 65.2215, 0.2288 ) }
    dend_46 { pt3dadd( 291.448, 331.863, 65.5102, 0.2824 ) }
    dend_46 { pt3dadd( 292.148, 331.092, 65.52, 0.2914 ) }
    dend_46 { pt3dadd( 293.29, 331.045, 65.52, 0.2288 ) }
    dend_46 { pt3dadd( 294.289, 330.569, 65.52, 0.239 ) }
    dend_46 { pt3dadd( 295.103, 329.863, 65.4682, 0.4518 ) }
    dend_46 { pt3dadd( 295.497, 329.129, 65.5682, 0.2494 ) }
    dend_46 { pt3dadd( 295.621, 328.708, 67.7009, 0.2288 ) }
    dend_46 { pt3dadd( 296.426, 328.354, 66.901, 0.381 ) }
    dend_46 { pt3dadd( 297.074, 327.598, 66.64, 0.527 ) }
    dend_46 { pt3dadd( 297.445, 326.599, 67.2532, 0.2512 ) }
    dend_46 { pt3dadd( 298.153, 325.864, 67.76, 0.2288 ) }
    dend_46 { pt3dadd( 298.914, 325.119, 67.0289, 0.3914 ) }
    dend_46 { pt3dadd( 299.156, 324.205, 67.4909, 0.6102 ) }
    dend_46 { pt3dadd( 299.479, 323.244, 68.3516, 0.6356 ) }
    dend_46 { pt3dadd( 299.728, 322.267, 68.5404, 0.3976 ) }
    dend_46 { pt3dadd( 300.035, 321.224, 68.3284, 0.356 ) }
    dend_46 { pt3dadd( 299.957, 320.234, 69.3118, 0.652 ) }
    dend_46 { pt3dadd( 299.852, 319.402, 67.8031, 0.5338 ) }
    dend_46 { pt3dadd( 300.332, 319.362, 66.0887, 0.4682 ) }
    dend_46 { pt3dadd( 300.071, 319.977, 64.1455, 0.2294 ) }
    dend_46 { pt3dadd( 300.071, 319.977, 61.3455, 0.2288 ) }
    dend_46 { pt3dadd( 300.526, 319.837, 59.1923, 0.3708 ) }
    dend_46 { pt3dadd( 300.75, 318.734, 59.08, 0.4524 ) }
    dend_46 { pt3dadd( 300.216, 318.349, 57.801, 0.4204 ) }
    dend_46 { pt3dadd( 300.506, 317.621, 56.56, 0.4326 ) }
    dend_46 { pt3dadd( 300.529, 316.752, 56.3066, 0.2288 ) }
    dend_46 { pt3dadd( 300.795, 316.291, 58.0303, 0.6756 ) }
    dend_46 { pt3dadd( 300.526, 315.519, 59.4642, 0.5368 ) }
    dend_46 { pt3dadd( 300.58, 314.427, 59.619, 0.4402 ) }
    dend_46 { pt3dadd( 300.3, 313.482, 58.8, 0.7178 ) }
    dend_46 { pt3dadd( 300.872, 312.655, 59.36, 0.483 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 68/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 290.903, 351.199, 47.696, 0.661 ) }
    dend_43 { pt3dadd( 289.861, 351.272, 48.3708, 0.612 ) }
    dend_43 { pt3dadd( 288.85, 351.761, 48.8673, 0.6594 ) }
    dend_43 { pt3dadd( 287.882, 352.338, 49.3408, 0.5848 ) }
    dend_43 { pt3dadd( 286.773, 352.467, 48.7295, 0.5582 ) }
    dend_43 { pt3dadd( 285.632, 352.48, 48.5968, 0.4578 ) }
    dend_43 { pt3dadd( 284.657, 352.654, 49.8602, 0.4856 ) }
    dend_43 { pt3dadd( 284.079, 353.254, 51.3724, 0.5282 ) }
    dend_43 { pt3dadd( 283.134, 352.799, 51.1025, 0.6452 ) }
    dend_43 { pt3dadd( 282.686, 352.393, 51.2627, 0.6864 ) }
    dend_43 { pt3dadd( 282.395, 351.511, 51.8311, 0.5368 ) }
    dend_43 { pt3dadd( 282.082, 350.721, 53.4391, 0.3934 ) }
    dend_43 { pt3dadd( 281.099, 350.357, 52.9659, 0.5976 ) }
    dend_43 { pt3dadd( 279.968, 350.405, 52.9491, 0.537 ) }
    dend_43 { pt3dadd( 279.006, 350.434, 52.08, 0.5514 ) }
    dend_43 { pt3dadd( 278.072, 350.249, 52.7481, 0.2906 ) }
    dend_43 { pt3dadd( 277.14, 350.448, 52.1564, 0.3538 ) }
    dend_43 { pt3dadd( 276.17, 350.683, 51.5343, 0.2658 ) }
    dend_43 { pt3dadd( 275.596, 351.107, 52.92, 0.3098 ) }
    dend_43 { pt3dadd( 274.792, 351.587, 53.6547, 0.2288 ) }
    dend_43 { pt3dadd( 273.796, 351.288, 53.333, 0.701 ) }
    dend_43 { pt3dadd( 272.732, 350.941, 53.1544, 0.6998 ) }
    dend_43 { pt3dadd( 271.993, 350.293, 53.636, 0.483 ) }
    dend_43 { pt3dadd( 270.914, 350.16, 54.1618, 0.4204 ) }
    dend_43 { pt3dadd( 270.121, 349.468, 54.0184, 0.3834 ) }
    dend_43 { pt3dadd( 269.367, 348.92, 53.1742, 0.6654 ) }
    dend_43 { pt3dadd( 268.716, 348.87, 51.9848, 0.6864 ) }
    dend_43 { pt3dadd( 267.769, 348.568, 52.9592, 0.4258 ) }
    dend_43 { pt3dadd( 266.781, 348.366, 53.8432, 0.3526 ) }
    dend_43 { pt3dadd( 266.505, 347.436, 54.8932, 0.2434 ) }
    dend_43 { pt3dadd( 266.219, 346.832, 54.2982, 0.307 ) }
    dend_43 { pt3dadd( 265.686, 345.899, 53.6281, 0.554 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_43 { pt3dadd( 265.302, 344.895, 53.8294, 0.4776 ) }
    dend_43 { pt3dadd( 264.685, 344.447, 55.1692, 0.2418 ) }
    dend_43 { pt3dadd( 264.566, 343.612, 56.28, 0.2602 ) }
    dend_43 { pt3dadd( 263.519, 343.653, 56.2257, 0.3502 ) }
    dend_43 { pt3dadd( 262.893, 343.393, 54.654, 0.3836 ) }
    dend_43 { pt3dadd( 261.905, 342.927, 54.5208, 0.4284 ) }
    dend_43 { pt3dadd( 261.119, 342.971, 54.4513, 0.627 ) }
    dend_43 { pt3dadd( 260.242, 342.563, 54.0876, 0.5964 ) }
    dend_43 { pt3dadd( 259.164, 342.224, 53.8779, 0.4162 ) }
    dend_43 { pt3dadd( 258.129, 341.806, 53.6679, 0.2476 ) }
    dend_43 { pt3dadd( 257.007, 341.713, 53.76, 0.2288 ) }
    dend_43 { pt3dadd( 256.041, 341.57, 54.4544, 0.296 ) }
    dend_43 { pt3dadd( 255.533, 340.817, 55.2919, 0.3708 ) }
    dend_43 { pt3dadd( 255.035, 339.972, 54.5689, 0.483 ) }
    dend_43 { pt3dadd( 254.793, 339.696, 55.4229, 0.2288 ) }
    dend_43 { pt3dadd( 253.792, 339.336, 56.0, 0.2288 ) }
    dend_43 { pt3dadd( 252.782, 338.972, 56.0, 0.2288 ) }
    dend_43 { pt3dadd( 251.948, 338.51, 55.347, 0.305 ) }
    dend_43 { pt3dadd( 251.085, 337.938, 55.0889, 0.2288 ) }
    dend_43 { pt3dadd( 250.161, 337.388, 54.6378, 0.239 ) }
    dend_43 { pt3dadd( 249.161, 337.022, 55.4408, 0.2536 ) }
    dend_43 { pt3dadd( 248.82, 336.17, 55.72, 0.2288 ) }
    dend_43 { pt3dadd( 248.594, 335.136, 55.72, 0.2288 ) }
    dend_43 { pt3dadd( 247.647, 334.577, 55.72, 0.2288 ) }
    dend_43 { pt3dadd( 246.541, 334.391, 55.72, 0.2288 ) }
    dend_43 { pt3dadd( 245.405, 334.336, 55.72, 0.2288 ) }
    dend_43 { pt3dadd( 244.465, 333.745, 55.72, 0.2288 ) }
    dend_43 { pt3dadd( 243.578, 333.042, 55.6349, 0.2682 ) }
    dend_43 { pt3dadd( 242.72, 332.339, 55.592, 0.4322 ) }
    dend_43 { pt3dadd( 242.149, 331.563, 54.6, 0.355 ) }
    dend_43 { pt3dadd( 241.197, 331.183, 55.3101, 0.2288 ) }
    dend_43 { pt3dadd( 240.253, 330.718, 55.44, 0.2288 ) }
    dend_43 { pt3dadd( 239.704, 329.924, 55.44, 0.2288 ) }
    dend_43 { pt3dadd( 238.61, 329.73, 55.44, 0.2288 ) }
    dend_43 { pt3dadd( 237.656, 329.189, 55.44, 0.2288 ) }
    dend_43 { pt3dadd( 236.767, 328.479, 55.44, 0.2288 ) }
    dend_43 { pt3dadd( 235.766, 327.997, 55.16, 0.305 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 360.437, 361.3, 31.8268, 0.4322 ) }
    dend_30 { pt3dadd( 360.946, 361.504, 31.36, 0.4068 ) }
    dend_30 { pt3dadd( 361.837, 361.69, 32.3196, 0.3008 ) }
    dend_30 { pt3dadd( 362.575, 362.332, 31.374, 0.2618 ) }
    dend_30 { pt3dadd( 363.585, 362.752, 31.7204, 0.2338 ) }
    dend_30 { pt3dadd( 364.706, 362.909, 31.92, 0.2998 ) }
    dend_30 { pt3dadd( 365.759, 363.346, 31.92, 0.356 ) }
    dend_30 { pt3dadd( 366.867, 363.599, 31.92, 0.2934 ) }
    dend_30 { pt3dadd( 367.892, 364.04, 31.948, 0.295 ) }
    dend_30 { pt3dadd( 368.855, 364.609, 31.8046, 0.3754 ) }
    dend_30 { pt3dadd( 369.858, 365.115, 31.8534, 0.3158 ) }
    dend_30 { pt3dadd( 370.776, 365.085, 31.4709, 0.2578 ) }
    dend_30 { pt3dadd( 371.52, 365.141, 31.843, 0.4576 ) }
    dend_30 { pt3dadd( 372.41, 365.388, 31.4978, 0.4642 ) }
    dend_30 { pt3dadd( 373.188, 365.556, 32.48, 0.4318 ) }
    dend_30 { pt3dadd( 374.221, 365.823, 32.9132, 0.2842 ) }
    dend_30 { pt3dadd( 375.126, 366.168, 31.92, 0.3374 ) }
    dend_30 { pt3dadd( 376.179, 366.207, 32.3148, 0.4576 ) }
    dend_30 { pt3dadd( 377.096, 366.194, 33.4337, 0.2764 ) }
    dend_30 { pt3dadd( 377.879, 366.653, 32.76, 0.5072 ) }
    dend_30 { pt3dadd( 378.733, 367.12, 32.8205, 0.4014 ) }
    dend_30 { pt3dadd( 379.733, 367.234, 33.551, 0.4528 ) }
    dend_30 { pt3dadd( 380.602, 367.161, 33.4841, 0.2394 ) }
    dend_30 { pt3dadd( 381.716, 366.995, 33.4622, 0.2856 ) }
    dend_30 { pt3dadd( 382.839, 367.008, 33.6888, 0.2798 ) }
    dend_30 { pt3dadd( 383.871, 367.215, 34.3179, 0.3636 ) }
    dend_30 { pt3dadd( 384.919, 367.383, 34.2345, 0.3518 ) }
    dend_30 { pt3dadd( 385.853, 367.682, 35.0, 0.2288 ) }
    dend_30 { pt3dadd( 386.992, 367.74, 35.0, 0.2288 ) }
    dend_30 { pt3dadd( 387.992, 368.139, 35.2248, 0.2288 ) }
    dend_30 { pt3dadd( 389.119, 368.139, 34.9247, 0.2288 ) }
    dend_30 { pt3dadd( 390.185, 368.246, 34.9238, 0.319 ) }
    dend_30 { pt3dadd( 391.261, 368.558, 35.453, 0.4524 ) }
    dend_30 { pt3dadd( 392.303, 368.973, 35.3298, 0.401 ) }
    dend_30 { pt3dadd( 393.289, 369.26, 35.9719, 0.4576 ) }
    dend_30 { pt3dadd( 394.043, 369.889, 36.7556, 0.308 ) }
    dend_30 { pt3dadd( 394.924, 370.476, 36.1953, 0.4142 ) }
    dend_30 { pt3dadd( 394.931, 371.15, 37.6628, 0.3908 ) }
    dend_30 { pt3dadd( 395.023, 371.493, 36.36, 0.3004 ) }
    dend_30 { pt3dadd( 394.744, 371.533, 34.4089, 0.356 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 77/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 360.437, 361.3, 31.8268, 0.4322 ) }
    dend_29 { pt3dadd( 361.072, 360.934, 32.1446, 0.4122 ) }
    dend_29 { pt3dadd( 361.836, 360.339, 32.1476, 0.3814 ) }
    dend_29 { pt3dadd( 362.696, 359.973, 31.3158, 0.3572 ) }
    dend_29 { pt3dadd( 363.556, 359.483, 30.8, 0.5896 ) }
    dend_29 { pt3dadd( 364.215, 358.873, 30.9005, 0.5098 ) }
    dend_29 { pt3dadd( 364.761, 358.353, 30.0868, 0.3304 ) }
    dend_29 { pt3dadd( 365.474, 357.723, 30.2728, 0.4642 ) }
    dend_29 { pt3dadd( 365.979, 356.842, 30.6594, 0.3782 ) }
    dend_29 { pt3dadd( 366.872, 356.309, 30.6664, 0.375 ) }
    dend_29 { pt3dadd( 367.937, 356.303, 29.96, 0.4968 ) }
    dend_29 { pt3dadd( 369.0, 356.252, 29.4608, 0.2542 ) }
    dend_29 { pt3dadd( 369.93, 355.762, 29.6708, 0.4462 ) }
    dend_29 { pt3dadd( 370.971, 355.427, 28.8912, 0.4406 ) }
    dend_29 { pt3dadd( 371.79, 355.21, 29.1948, 0.2288 ) }
    dend_29 { pt3dadd( 372.115, 354.518, 29.0657, 0.4004 ) }
    dend_29 { pt3dadd( 372.925, 353.835, 29.4, 0.2288 ) }
    dend_29 { pt3dadd( 373.728, 353.221, 29.2788, 0.2288 ) }
    dend_29 { pt3dadd( 374.217, 352.266, 29.6145, 0.356 ) }
    dend_29 { pt3dadd( 374.476, 351.348, 29.7707, 0.4514 ) }
    dend_29 { pt3dadd( 374.804, 350.467, 29.6677, 0.3514 ) }
    dend_29 { pt3dadd( 375.553, 349.673, 29.3412, 0.2748 ) }
    dend_29 { pt3dadd( 376.22, 349.082, 28.7042, 0.3946 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_29 { pt3dadd( 377.178, 348.628, 28.9979, 0.2288 ) }
    dend_29 { pt3dadd( 377.995, 347.954, 28.56, 0.295 ) }
    dend_29 { pt3dadd( 379.079, 347.824, 28.3665, 0.399 ) }
    dend_29 { pt3dadd( 380.104, 347.906, 28.2044, 0.3414 ) }
    dend_29 { pt3dadd( 380.832, 347.38, 27.4327, 0.2288 ) }
    dend_29 { pt3dadd( 381.488, 346.512, 27.9989, 0.2288 ) }
    dend_29 { pt3dadd( 382.276, 345.724, 28.1588, 0.296 ) }
    dend_29 { pt3dadd( 383.254, 345.285, 28.1644, 0.2288 ) }
    dend_29 { pt3dadd( 384.159, 344.837, 28.3847, 0.3298 ) }
    dend_29 { pt3dadd( 384.863, 344.349, 28.1022, 0.3304 ) }
    dend_29 { pt3dadd( 385.861, 344.232, 28.5589, 0.4576 ) }
    dend_29 { pt3dadd( 386.847, 344.115, 29.3882, 0.3338 ) }
    dend_29 { pt3dadd( 387.859, 343.858, 28.84, 0.2288 ) }
    dend_29 { pt3dadd( 388.73, 343.756, 29.8402, 0.4576 ) }
    dend_29 { pt3dadd( 389.723, 343.662, 29.0175, 0.2288 ) }
    dend_29 { pt3dadd( 390.678, 343.772, 29.6909, 0.2542 ) }
    dend_29 { pt3dadd( 391.693, 343.66, 29.2886, 0.3786 ) }
    dend_29 { pt3dadd( 392.546, 343.005, 28.3965, 0.2542 ) }
    dend_29 { pt3dadd( 393.392, 342.385, 27.8029, 0.4454 ) }
    dend_29 { pt3dadd( 394.233, 341.841, 27.4509, 0.272 ) }
    dend_29 { pt3dadd( 395.364, 341.708, 27.3224, 0.2288 ) }
    dend_29 { pt3dadd( 396.481, 341.747, 27.5232, 0.2288 ) }
    dend_29 { pt3dadd( 397.541, 341.99, 27.7264, 0.2612 ) }
    dend_29 { pt3dadd( 398.54, 342.271, 27.4305, 0.4816 ) }
    dend_29 { pt3dadd( 399.579, 342.263, 27.0824, 0.3304 ) }
    dend_29 { pt3dadd( 400.636, 342.368, 26.8537, 0.3158 ) }
    dend_29 { pt3dadd( 401.499, 342.046, 26.0968, 0.3732 ) }
    dend_29 { pt3dadd( 402.523, 341.658, 26.1246, 0.2288 ) }
    dend_29 { pt3dadd( 403.467, 341.254, 26.4256, 0.356 ) }
    dend_29 { pt3dadd( 404.42, 340.809, 26.1114, 0.3814 ) }
    dend_29 { pt3dadd( 405.309, 340.44, 26.7702, 0.3674 ) }
    dend_29 { pt3dadd( 406.069, 339.779, 26.7064, 0.3322 ) }
    dend_29 { pt3dadd( 407.073, 339.411, 26.88, 0.3764 ) }
    dend_29 { pt3dadd( 408.061, 339.052, 27.4232, 0.2288 ) }
    dend_29 { pt3dadd( 409.02, 338.929, 26.8265, 0.5232 ) }
    dend_29 { pt3dadd( 410.002, 339.023, 26.0212, 0.314 ) }
    dend_29 { pt3dadd( 411.104, 339.173, 25.6119, 0.3108 ) }
    dend_29 { pt3dadd( 412.202, 338.967, 25.2, 0.5606 ) }
    dend_29 { pt3dadd( 413.145, 338.658, 24.9427, 0.356 ) }
    dend_29 { pt3dadd( 414.063, 338.427, 25.4892, 0.4058 ) }
    dend_29 { pt3dadd( 415.131, 338.422, 25.8672, 0.4498 ) }
    dend_29 { pt3dadd( 416.099, 338.166, 25.9473, 0.43 ) }
    dend_29 { pt3dadd( 416.702, 338.885, 26.0316, 0.4302 ) }
    dend_29 { pt3dadd( 417.517, 339.409, 25.5066, 0.6282 ) }
    dend_29 { pt3dadd( 418.522, 339.544, 26.1649, 0.5592 ) }
    dend_29 { pt3dadd( 419.58, 339.612, 26.04, 0.6144 ) }
    dend_29 { pt3dadd( 420.671, 339.454, 25.583, 0.678 ) }
    dend_29 { pt3dadd( 421.645, 339.91, 25.8838, 0.6312 ) }
    dend_29 { pt3dadd( 422.634, 339.953, 24.8178, 0.7942 ) }
    dend_29 { pt3dadd( 423.509, 340.454, 25.2, 0.4322 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 323.903, 371.903, 29.349, 0.5084 ) }
    dend_27 { pt3dadd( 323.609, 371.699, 28.1929, 0.4576 ) }
    dend_27 { pt3dadd( 324.438, 371.862, 28.9036, 0.4576 ) }
    dend_27 { pt3dadd( 324.561, 372.719, 30.4763, 0.2542 ) }
    dend_27 { pt3dadd( 324.896, 373.705, 31.451, 0.4824 ) }
    dend_27 { pt3dadd( 325.715, 374.18, 31.2404, 0.4182 ) }
    dend_27 { pt3dadd( 326.411, 375.026, 30.8311, 0.5306 ) }
    dend_27 { pt3dadd( 327.328, 375.509, 30.9173, 0.6314 ) }
    dend_27 { pt3dadd( 328.019, 376.291, 30.5701, 0.6374 ) }
    dend_27 { pt3dadd( 328.556, 377.089, 31.3734, 0.389 ) }
    dend_27 { pt3dadd( 328.557, 378.078, 32.4615, 0.6154 ) }
    dend_27 { pt3dadd( 328.481, 379.147, 31.9816, 0.5508 ) }
    dend_27 { pt3dadd( 329.118, 379.892, 32.804, 0.2846 ) }
    dend_27 { pt3dadd( 329.329, 380.714, 33.9329, 0.3194 ) }
    dend_27 { pt3dadd( 329.514, 381.699, 34.0948, 0.4322 ) }
    dend_27 { pt3dadd( 329.841, 382.542, 35.278, 0.2288 ) }
    dend_27 { pt3dadd( 330.499, 383.265, 35.0767, 0.4142 ) }
    dend_27 { pt3dadd( 330.736, 384.151, 34.8345, 0.3452 ) }
    dend_27 { pt3dadd( 331.687, 384.589, 34.9706, 0.3334 ) }
    dend_27 { pt3dadd( 332.227, 385.384, 35.1459, 0.3986 ) }
    dend_27 { pt3dadd( 332.79, 386.17, 35.6972, 0.4098 ) }
    dend_27 { pt3dadd( 332.888, 387.075, 35.8142, 0.296 ) }
    dend_27 { pt3dadd( 333.138, 387.879, 34.7026, 0.7912 ) }
    dend_27 { pt3dadd( 333.518, 388.801, 34.16, 0.7068 ) }
    dend_27 { pt3dadd( 333.672, 389.746, 35.1375, 0.616 ) }
    dend_27 { pt3dadd( 333.819, 390.644, 35.8789, 0.4364 ) }
    dend_27 { pt3dadd( 334.01, 391.591, 34.7861, 0.4416 ) }
    dend_27 { pt3dadd( 334.15, 392.181, 33.6048, 0.5342 ) }
    dend_27 { pt3dadd( 334.475, 392.615, 35.5673, 0.661 ) }
    dend_27 { pt3dadd( 334.734, 393.663, 35.4668, 0.4788 ) }
    dend_27 { pt3dadd( 334.866, 394.687, 36.2284, 0.424 ) }
    dend_27 { pt3dadd( 334.921, 395.795, 35.915, 0.3206 ) }
    dend_27 { pt3dadd( 335.133, 396.651, 35.0773, 0.3608 ) }
    dend_27 { pt3dadd( 335.112, 397.628, 33.9312, 0.2288 ) }
    dend_27 { pt3dadd( 335.178, 398.138, 36.0595, 0.2734 ) }
    dend_27 { pt3dadd( 335.192, 399.126, 36.955, 0.5084 ) }
    dend_27 { pt3dadd( 335.192, 399.905, 35.9332, 0.6102 ) }
    dend_27 { pt3dadd( 335.381, 400.99, 36.3689, 0.6336 ) }
    dend_27 { pt3dadd( 335.833, 401.878, 36.3334, 0.4794 ) }
    dend_27 { pt3dadd( 335.754, 402.206, 37.52, 0.2288 ) }
    dend_27 { pt3dadd( 336.294, 403.026, 37.24, 0.4216 ) }
    dend_27 { pt3dadd( 337.093, 403.127, 35.588, 0.3008 ) }
    dend_27 { pt3dadd( 337.075, 404.197, 36.197, 0.4462 ) }
    dend_27 { pt3dadd( 337.258, 405.269, 36.7077, 0.5338 ) }
    dend_27 { pt3dadd( 337.663, 405.98, 37.5264, 0.661 ) }
    dend_27 { pt3dadd( 337.48, 406.75, 39.1902, 0.2862 ) }
    dend_27 { pt3dadd( 337.366, 407.798, 39.9468, 0.2796 ) }
    dend_27 { pt3dadd( 337.481, 408.64, 38.409, 0.3874 ) }
    dend_27 { pt3dadd( 337.272, 409.498, 37.1927, 0.2542 ) }
    dend_27 { pt3dadd( 337.334, 410.407, 36.47, 0.2924 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_27 { pt3dadd( 337.242, 411.269, 37.3898, 0.438 ) }
    dend_27 { pt3dadd( 337.362, 412.076, 38.8119, 0.615 ) }
    dend_27 { pt3dadd( 337.449, 412.843, 37.7871, 0.6716 ) }
    dend_27 { pt3dadd( 337.594, 413.739, 38.8321, 0.2288 ) }
    dend_27 { pt3dadd( 337.194, 414.621, 38.08, 0.2402 ) }
    dend_27 { pt3dadd( 336.739, 415.501, 38.5437, 0.272 ) }
    dend_27 { pt3dadd( 336.138, 416.165, 37.413, 0.5508 ) }
    dend_27 { pt3dadd( 335.777, 416.81, 38.7058, 0.4906 ) }
    dend_27 { pt3dadd( 336.152, 417.448, 40.2559, 0.4576 ) }
    dend_27 { pt3dadd( 336.529, 418.251, 39.3781, 0.3304 ) }
    dend_27 { pt3dadd( 336.559, 419.277, 39.4108, 0.2764 ) }
    dend_27 { pt3dadd( 335.993, 420.093, 38.92, 0.6294 ) }
    dend_27 { pt3dadd( 335.993, 421.011, 39.7541, 0.5954 ) }
    dend_27 { pt3dadd( 336.055, 422.072, 39.0631, 0.5524 ) }
    dend_27 { pt3dadd( 336.237, 422.953, 38.2088, 0.4368 ) }
    dend_27 { pt3dadd( 336.75, 423.478, 36.2264, 0.449 ) }
    dend_27 { pt3dadd( 337.1, 424.076, 37.91, 0.3814 ) }
    dend_27 { pt3dadd( 337.225, 424.657, 39.9143, 0.2288 ) }
    dend_27 { pt3dadd( 337.252, 425.613, 41.3504, 0.2294 ) }
    dend_27 { pt3dadd( 337.48, 426.493, 42.6188, 0.2768 ) }
    dend_27 { pt3dadd( 338.204, 426.966, 43.6439, 0.524 ) }
    dend_27 { pt3dadd( 339.036, 427.404, 42.84, 0.4158 ) }
    dend_27 { pt3dadd( 339.489, 428.008, 43.3224, 0.5466 ) }
    dend_27 { pt3dadd( 340.033, 428.659, 43.96, 0.2626 ) }
    dend_27 { pt3dadd( 340.361, 429.333, 42.7087, 0.3518 ) }
    dend_27 { pt3dadd( 341.129, 430.118, 43.0422, 0.4788 ) }
    dend_27 { pt3dadd( 341.939, 430.887, 42.56, 0.534 ) }
    dend_27 { pt3dadd( 342.514, 431.784, 42.233, 0.661 ) }
    dend_27 { pt3dadd( 343.179, 432.525, 41.4946, 0.42 ) }
    dend_27 { pt3dadd( 343.658, 433.443, 41.16, 0.2288 ) }
    dend_27 { pt3dadd( 344.351, 433.59, 42.3948, 0.4438 ) }
    dend_27 { pt3dadd( 345.152, 434.249, 42.9887, 0.4412 ) }
    dend_27 { pt3dadd( 345.742, 435.057, 43.2373, 0.5656 ) }
    dend_27 { pt3dadd( 346.433, 435.885, 42.56, 0.6356 ) }
    dend_27 { pt3dadd( 346.877, 436.789, 41.8286, 0.2436 ) }
    dend_27 { pt3dadd( 347.204, 437.506, 40.166, 0.2736 ) }
    dend_27 { pt3dadd( 347.549, 438.17, 39.8614, 0.3606 ) }
    dend_27 { pt3dadd( 348.234, 438.463, 41.5862, 0.4702 ) }
    dend_27 { pt3dadd( 348.848, 439.355, 41.5716, 0.447 ) }
    dend_27 { pt3dadd( 349.065, 440.21, 41.2084, 0.613 ) }
    dend_27 { pt3dadd( 349.215, 440.863, 42.8428, 0.3352 ) }
    dend_27 { pt3dadd( 349.149, 441.862, 42.9296, 0.6122 ) }
    dend_27 { pt3dadd( 349.124, 442.924, 43.265, 0.6102 ) }
    dend_27 { pt3dadd( 349.502, 443.063, 45.7447, 0.3966 ) }
    dend_27 { pt3dadd( 349.835, 443.553, 45.7615, 0.3724 ) }
    dend_27 { pt3dadd( 350.205, 444.009, 44.4489, 0.3756 ) }
    dend_27 { pt3dadd( 350.507, 444.667, 43.1172, 0.3028 ) }
    dend_27 { pt3dadd( 350.293, 445.514, 42.0227, 0.3882 ) }
    dend_27 { pt3dadd( 350.865, 445.931, 42.56, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 49/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 323.903, 371.903, 29.349, 0.5084 ) }
    dend_26 { pt3dadd( 325.167, 371.721, 28.2125, 0.5784 ) }
    dend_26 { pt3dadd( 326.272, 371.847, 27.8522, 0.5392 ) }
    dend_26 { pt3dadd( 327.371, 371.961, 28.2954, 0.483 ) }
    dend_26 { pt3dadd( 328.486, 371.747, 28.4099, 0.5058 ) }
    dend_26 { pt3dadd( 329.593, 371.654, 27.8642, 0.5978 ) }
    dend_26 { pt3dadd( 330.65, 371.514, 26.9097, 0.6944 ) }
    dend_26 { pt3dadd( 331.735, 371.265, 26.6641, 0.7036 ) }
    dend_26 { pt3dadd( 332.843, 371.088, 27.1762, 0.669 ) }
    dend_26 { pt3dadd( 333.96, 370.963, 27.3795, 0.6356 ) }
    dend_26 { pt3dadd( 335.082, 371.095, 27.0542, 0.6452 ) }
    dend_26 { pt3dadd( 336.186, 371.122, 26.4715, 0.671 ) }
    dend_26 { pt3dadd( 337.304, 370.923, 26.1551, 0.6656 ) }
    dend_26 { pt3dadd( 338.419, 370.905, 26.2452, 0.6246 ) }
    dend_26 { pt3dadd( 339.468, 371.298, 26.5978, 0.5752 ) }
    dend_26 { pt3dadd( 340.458, 371.735, 26.1926, 0.5214 ) }
    dend_26 { pt3dadd( 341.356, 372.271, 25.8188, 0.4706 ) }
    dend_26 { pt3dadd( 342.155, 373.054, 25.6956, 0.4192 ) }
    dend_26 { pt3dadd( 342.916, 373.867, 25.0858, 0.42 ) }
    dend_26 { pt3dadd( 343.62, 374.652, 24.1058, 0.4732 ) }
    dend_26 { pt3dadd( 344.489, 375.25, 23.2224, 0.572 ) }
    dend_26 { pt3dadd( 345.544, 375.646, 22.9561, 0.6704 ) }
    dend_26 { pt3dadd( 346.671, 375.755, 22.932, 0.747 ) }
    dend_26 { pt3dadd( 347.786, 375.555, 22.7942, 0.7998 ) }
    dend_26 { pt3dadd( 348.841, 375.216, 22.2068, 0.7896 ) }
    dend_26 { pt3dadd( 349.876, 374.936, 21.2456, 0.6964 ) }
    dend_26 { pt3dadd( 350.968, 374.71, 20.7687, 0.5778 ) }
    dend_26 { pt3dadd( 352.08, 374.781, 20.7197, 0.5488 ) }
    dend_26 { pt3dadd( 353.028, 375.364, 20.7183, 0.6212 ) }
    dend_26 { pt3dadd( 353.855, 376.153, 20.7136, 0.661 ) }
    dend_26 { pt3dadd( 354.68, 376.946, 20.694, 0.5988 ) }
    dend_26 { pt3dadd( 355.561, 377.672, 20.601, 0.4812 ) }
    dend_26 { pt3dadd( 356.579, 378.075, 20.1124, 0.4164 ) }
    dend_26 { pt3dadd( 357.626, 378.467, 20.0402, 0.4576 ) }
    dend_26 { pt3dadd( 358.475, 379.188, 20.4714, 0.5536 ) }
    dend_26 { pt3dadd( 359.278, 379.98, 20.3031, 0.6208 ) }
    dend_26 { pt3dadd( 360.181, 380.367, 19.1052, 0.6174 ) }
    dend_26 { pt3dadd( 361.252, 380.328, 18.4184, 0.5272 ) }
    dend_26 { pt3dadd( 362.373, 380.172, 18.1129, 0.5016 ) }
    dend_26 { pt3dadd( 363.467, 380.065, 17.5246, 0.476 ) }
    dend_26 { pt3dadd( 364.582, 380.115, 17.3424, 0.4354 ) }
    dend_26 { pt3dadd( 365.673, 379.777, 17.2281, 0.366 ) }
    dend_26 { pt3dadd( 366.614, 379.231, 16.7706, 0.3222 ) }
    dend_26 { pt3dadd( 367.41, 378.499, 16.2392, 0.3228 ) }
    dend_26 { pt3dadd( 368.477, 378.317, 16.235, 0.3848 ) }
    dend_26 { pt3dadd( 369.583, 378.611, 16.2044, 0.4518 ) }
    dend_26 { pt3dadd( 370.617, 379.032, 15.9354, 0.4626 ) }
    dend_26 { pt3dadd( 371.632, 379.401, 15.6229, 0.3994 ) }
    dend_26 { pt3dadd( 372.729, 379.234, 15.9883, 0.3444 ) }
    dend_26 { pt3dadd( 373.683, 378.711, 16.7238, 0.3426 ) }
    dend_26 { pt3dadd( 374.652, 378.19, 17.2309, 0.381 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 375.768, 378.034, 17.3594, 0.4204 ) }
    dend_26 { pt3dadd( 376.776, 378.439, 17.3552, 0.4612 ) }
    dend_26 { pt3dadd( 377.717, 379.087, 17.3337, 0.4976 ) }
    dend_26 { pt3dadd( 378.773, 379.47, 17.1931, 0.5084 ) }
    dend_26 { pt3dadd( 379.862, 379.413, 16.6001, 0.5248 ) }
    dend_26 { pt3dadd( 380.975, 379.4, 16.5245, 0.5686 ) }
    dend_26 { pt3dadd( 382.08, 379.225, 16.3531, 0.656 ) }
    dend_26 { pt3dadd( 383.209, 379.121, 16.24, 0.7044 ) }
    dend_26 { pt3dadd( 384.35, 379.197, 16.24, 0.7306 ) }
    dend_26 { pt3dadd( 385.386, 379.078, 15.2995, 0.4466 ) }
    dend_26 { pt3dadd( 386.342, 378.778, 15.12, 0.2292 ) }
    dend_26 { pt3dadd( 387.484, 378.759, 15.2163, 0.2806 ) }
    dend_26 { pt3dadd( 388.461, 378.828, 15.68, 0.3718 ) }
    dend_26 { pt3dadd( 389.586, 378.893, 16.0115, 0.2656 ) }
    dend_26 { pt3dadd( 390.476, 378.751, 15.4241, 0.2876 ) }
    dend_26 { pt3dadd( 391.329, 378.85, 15.4104, 0.4604 ) }
    dend_26 { pt3dadd( 391.831, 378.442, 14.0403, 0.4856 ) }
    dend_26 { pt3dadd( 392.742, 378.092, 14.7252, 0.2936 ) }
    dend_26 { pt3dadd( 393.449, 378.612, 13.72, 0.2288 ) }
    dend_26 { pt3dadd( 394.567, 378.741, 13.72, 0.2288 ) }
    dend_26 { pt3dadd( 395.596, 379.007, 13.8774, 0.2288 ) }
    dend_26 { pt3dadd( 396.705, 378.918, 13.44, 0.2288 ) }
    dend_26 { pt3dadd( 397.837, 378.792, 13.44, 0.2962 ) }
    dend_26 { pt3dadd( 398.833, 378.48, 13.9776, 0.291 ) }
    dend_26 { pt3dadd( 399.569, 377.662, 13.9605, 0.2994 ) }
    dend_26 { pt3dadd( 400.323, 377.189, 13.4246, 0.4534 ) }
    dend_26 { pt3dadd( 401.083, 376.774, 13.7911, 0.4684 ) }
    dend_26 { pt3dadd( 401.975, 376.264, 13.7155, 0.4576 ) }
    dend_26 { pt3dadd( 402.863, 376.027, 13.7511, 0.3888 ) }
    dend_26 { pt3dadd( 403.643, 375.609, 14.0017, 0.2288 ) }
    dend_26 { pt3dadd( 404.406, 375.357, 13.9342, 0.3416 ) }
    dend_26 { pt3dadd( 405.28, 375.693, 13.16, 0.3128 ) }
    dend_26 { pt3dadd( 406.149, 376.226, 12.5938, 0.2592 ) }
    dend_26 { pt3dadd( 407.012, 375.647, 12.3544, 0.3546 ) }
    dend_26 { pt3dadd( 407.841, 375.088, 12.7042, 0.3902 ) }
    dend_26 { pt3dadd( 408.616, 375.509, 13.0488, 0.262 ) }
    dend_26 { pt3dadd( 409.511, 376.206, 12.8391, 0.314 ) }
    dend_26 { pt3dadd( 410.535, 376.544, 12.8391, 0.3698 ) }
    dend_26 { pt3dadd( 411.472, 375.95, 12.8391, 0.3112 ) }
    dend_26 { pt3dadd( 412.118, 375.009, 12.8391, 0.2934 ) }
    dend_26 { pt3dadd( 412.746, 374.052, 12.8391, 0.2796 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 41/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 280.616, 390.925, 29.4868, 0.5592 ) }
    dend_18 { pt3dadd( 279.449, 390.893, 30.7238, 0.4906 ) }
    dend_18 { pt3dadd( 278.542, 390.909, 30.9336, 0.4096 ) }
    dend_18 { pt3dadd( 277.776, 391.128, 31.9984, 0.3462 ) }
    dend_18 { pt3dadd( 276.786, 390.8, 31.8228, 0.4968 ) }
    dend_18 { pt3dadd( 276.001, 390.497, 30.2618, 0.389 ) }
    dend_18 { pt3dadd( 275.405, 390.249, 28.856, 0.4366 ) }
    dend_18 { pt3dadd( 274.733, 389.753, 27.2588, 0.3664 ) }
    dend_18 { pt3dadd( 273.842, 389.45, 27.2994, 0.521 ) }
    dend_18 { pt3dadd( 273.931, 389.167, 29.3796, 0.5038 ) }
    dend_18 { pt3dadd( 273.886, 389.168, 31.8548, 0.7242 ) }
    dend_18 { pt3dadd( 273.0, 389.074, 32.9714, 0.5238 ) }
    dend_18 { pt3dadd( 272.194, 389.532, 32.3515, 0.2288 ) }
    dend_18 { pt3dadd( 271.592, 390.056, 31.2754, 0.5084 ) }
    dend_18 { pt3dadd( 270.666, 390.057, 32.4526, 0.4516 ) }
    dend_18 { pt3dadd( 269.744, 390.236, 33.3948, 0.26 ) }
    dend_18 { pt3dadd( 268.779, 390.577, 34.44, 0.528 ) }
    dend_18 { pt3dadd( 268.011, 390.211, 33.6622, 0.5478 ) }
    dend_18 { pt3dadd( 267.292, 389.458, 34.1312, 0.2542 ) }
    dend_18 { pt3dadd( 266.352, 389.068, 33.5334, 0.5628 ) }
    dend_18 { pt3dadd( 265.368, 388.613, 34.3104, 0.5182 ) }
    dend_18 { pt3dadd( 264.524, 388.16, 33.99, 0.4796 ) }
    dend_18 { pt3dadd( 263.625, 388.166, 35.3114, 0.4446 ) }
    dend_18 { pt3dadd( 262.765, 387.91, 35.56, 0.3378 ) }
    dend_18 { pt3dadd( 262.205, 387.816, 36.0805, 0.6864 ) }
    dend_18 { pt3dadd( 261.603, 388.319, 35.567, 0.4888 ) }
    dend_18 { pt3dadd( 260.659, 388.803, 36.3129, 0.5084 ) }
    dend_18 { pt3dadd( 259.631, 388.856, 36.7486, 0.5392 ) }
    dend_18 { pt3dadd( 258.745, 388.705, 37.9579, 0.4156 ) }
    dend_18 { pt3dadd( 257.852, 388.33, 37.3388, 0.409 ) }
    dend_18 { pt3dadd( 256.803, 388.163, 37.2663, 0.2918 ) }
    dend_18 { pt3dadd( 255.889, 388.121, 38.355, 0.25 ) }
    dend_18 { pt3dadd( 254.916, 387.559, 38.3541, 0.5084 ) }
    dend_18 { pt3dadd( 253.816, 387.331, 38.5255, 0.5084 ) }
    dend_18 { pt3dadd( 252.937, 386.999, 38.5213, 0.483 ) }
    dend_18 { pt3dadd( 252.386, 386.553, 39.2498, 0.389 ) }
    dend_18 { pt3dadd( 251.839, 385.748, 38.9091, 0.4784 ) }
    dend_18 { pt3dadd( 250.989, 385.359, 39.2, 0.545 ) }
    dend_18 { pt3dadd( 250.003, 385.513, 39.508, 0.4576 ) }
    dend_18 { pt3dadd( 249.264, 385.256, 38.6526, 0.575 ) }
    dend_18 { pt3dadd( 248.18, 385.078, 39.1978, 0.3632 ) }
    dend_18 { pt3dadd( 247.113, 384.857, 39.4895, 0.2538 ) }
    dend_18 { pt3dadd( 246.188, 385.217, 39.7379, 0.3578 ) }
    dend_18 { pt3dadd( 245.234, 384.928, 40.0249, 0.47 ) }
    dend_18 { pt3dadd( 244.176, 384.766, 40.1657, 0.3812 ) }
    dend_18 { pt3dadd( 243.075, 384.621, 39.7701, 0.404 ) }
    dend_18 { pt3dadd( 242.004, 384.684, 40.1551, 0.4322 ) }
    dend_18 { pt3dadd( 240.938, 384.347, 40.46, 0.3616 ) }
    dend_18 { pt3dadd( 239.983, 384.055, 40.2576, 0.4322 ) }
    dend_18 { pt3dadd( 239.008, 383.598, 40.6, 0.3208 ) }
    dend_18 { pt3dadd( 238.059, 382.988, 40.9763, 0.3304 ) }
    dend_18 { pt3dadd( 237.164, 382.295, 41.2821, 0.3136 ) }
    dend_18 { pt3dadd( 236.163, 381.788, 41.2378, 0.305 ) }
    dend_18 { pt3dadd( 235.465, 380.935, 41.4308, 0.329 ) }
    dend_18 { pt3dadd( 234.79, 380.367, 41.44, 0.483 ) }
    dend_18 { pt3dadd( 234.035, 379.594, 41.8566, 0.283 ) }
    dend_18 { pt3dadd( 233.153, 378.925, 41.7665, 0.4196 ) }
    dend_18 { pt3dadd( 232.137, 378.445, 41.72, 0.4268 ) }
    dend_18 { pt3dadd( 231.097, 378.036, 41.4546, 0.5456 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_18 { pt3dadd( 230.087, 377.549, 41.274, 0.5082 ) }
    dend_18 { pt3dadd( 229.1, 377.077, 41.72, 0.4068 ) }
    dend_18 { pt3dadd( 228.32, 376.33, 41.804, 0.2288 ) }
    dend_18 { pt3dadd( 227.286, 375.889, 41.8964, 0.2288 ) }
    dend_18 { pt3dadd( 226.156, 375.804, 42.0006, 0.2292 ) }
    dend_18 { pt3dadd( 225.055, 375.732, 42.408, 0.2904 ) }
    dend_18 { pt3dadd( 224.0, 375.69, 42.0014, 0.659 ) }
    dend_18 { pt3dadd( 223.088, 375.675, 42.2831, 0.5068 ) }
    dend_18 { pt3dadd( 222.041, 375.28, 42.8243, 0.2302 ) }
    dend_18 { pt3dadd( 220.992, 374.826, 42.84, 0.2288 ) }
    dend_18 { pt3dadd( 219.856, 374.774, 42.84, 0.2288 ) }
    dend_18 { pt3dadd( 218.712, 374.774, 42.84, 0.2288 ) }
    dend_18 { pt3dadd( 217.601, 374.676, 42.84, 0.2288 ) }
    dend_18 { pt3dadd( 217.147, 373.816, 43.2247, 0.4576 ) }
    dend_18 { pt3dadd( 216.788, 373.51, 44.518, 0.4576 ) }
    dend_18 { pt3dadd( 216.002, 373.194, 43.96, 0.4618 ) }
    dend_18 { pt3dadd( 215.293, 372.423, 43.1281, 0.4294 ) }
    dend_18 { pt3dadd( 214.453, 371.683, 42.8305, 0.4166 ) }
    dend_18 { pt3dadd( 213.396, 371.464, 43.3462, 0.6512 ) }
    dend_18 { pt3dadd( 212.372, 371.123, 44.032, 0.7372 ) }
    dend_18 { pt3dadd( 211.444, 371.379, 44.1913, 0.8258 ) }
    dend_18 { pt3dadd( 210.386, 371.166, 43.4162, 0.3182 ) }
    dend_18 { pt3dadd( 209.361, 370.763, 43.4, 0.2288 ) }
    dend_18 { pt3dadd( 208.767, 370.098, 44.52, 0.356 ) }
    dend_18 { pt3dadd( 208.437, 369.225, 43.7898, 0.4994 ) }
    dend_18 { pt3dadd( 207.683, 368.78, 43.5193, 0.7272 ) }
    dend_18 { pt3dadd( 206.64, 368.622, 43.3784, 0.7796 ) }
    dend_18 { pt3dadd( 205.587, 368.464, 42.9618, 0.6592 ) }
    dend_18 { pt3dadd( 204.664, 368.239, 42.0204, 0.6434 ) }
    dend_18 { pt3dadd( 203.794, 367.93, 41.72, 0.661 ) }
    dend_18 { pt3dadd( 202.734, 367.91, 42.142, 0.768 ) }
    dend_18 { pt3dadd( 201.659, 367.827, 41.4999, 0.5196 ) }
    dend_18 { pt3dadd( 200.785, 368.193, 40.88, 0.5326 ) }
    dend_18 { pt3dadd( 199.941, 367.795, 41.6248, 0.555 ) }
    dend_18 { pt3dadd( 199.17, 367.224, 41.16, 0.5338 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 35/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 280.616, 390.925, 29.4868, 0.5592 ) }
    dend_17 { pt3dadd( 279.597, 391.04, 30.196, 0.6074 ) }
    dend_17 { pt3dadd( 278.913, 391.639, 28.6348, 0.5914 ) }
    dend_17 { pt3dadd( 278.086, 392.294, 27.7707, 0.5672 ) }
    dend_17 { pt3dadd( 277.198, 392.957, 28.1789, 0.523 ) }
    dend_17 { pt3dadd( 276.317, 393.664, 28.5155, 0.5266 ) }
    dend_17 { pt3dadd( 275.419, 394.372, 28.5597, 0.5154 ) }
    dend_17 { pt3dadd( 274.49, 395.038, 28.5578, 0.5084 ) }
    dend_17 { pt3dadd( 273.54, 395.675, 28.5491, 0.527 ) }
    dend_17 { pt3dadd( 272.516, 396.179, 28.4962, 0.5338 ) }
    dend_17 { pt3dadd( 271.415, 396.366, 28.0876, 0.4958 ) }
    dend_17 { pt3dadd( 270.622, 396.353, 26.2741, 0.4244 ) }
    dend_17 { pt3dadd( 269.648, 396.095, 25.2118, 0.4068 ) }
    dend_17 { pt3dadd( 268.524, 396.004, 24.8928, 0.4068 ) }
    dend_17 { pt3dadd( 267.413, 396.223, 24.6056, 0.45 ) }
    dend_17 { pt3dadd( 266.417, 396.151, 23.3486, 0.503 ) }
    dend_17 { pt3dadd( 266.279, 395.214, 22.104, 0.6038 ) }
    dend_17 { pt3dadd( 265.517, 394.547, 20.9006, 0.6102 ) }
    dend_17 { pt3dadd( 264.766, 393.694, 20.7833, 0.5326 ) }
    dend_17 { pt3dadd( 263.972, 392.885, 21.0798, 0.5222 ) }
    dend_17 { pt3dadd( 263.052, 392.437, 20.6038, 0.5636 ) }
    dend_17 { pt3dadd( 262.018, 392.543, 20.5906, 0.5848 ) }
    dend_17 { pt3dadd( 260.965, 392.405, 21.2766, 0.534 ) }
    dend_17 { pt3dadd( 260.051, 391.848, 20.7978, 0.473 ) }
    dend_17 { pt3dadd( 259.409, 391.201, 19.1794, 0.439 ) }
    dend_17 { pt3dadd( 258.586, 390.53, 18.559, 0.4512 ) }
    dend_17 { pt3dadd( 257.707, 389.807, 18.7202, 0.438 ) }
    dend_17 { pt3dadd( 256.645, 389.638, 18.3042, 0.4118 ) }
    dend_17 { pt3dadd( 255.667, 390.022, 17.3244, 0.3858 ) }
    dend_17 { pt3dadd( 255.008, 390.703, 15.8211, 0.3814 ) }
    dend_17 { pt3dadd( 254.056, 391.09, 14.7022, 0.3814 ) }
    dend_17 { pt3dadd( 252.981, 391.373, 14.478, 0.3814 ) }
    dend_17 { pt3dadd( 251.911, 391.702, 14.1028, 0.3642 ) }
    dend_17 { pt3dadd( 250.918, 392.168, 13.3364, 0.3382 ) }
    dend_17 { pt3dadd( 249.977, 392.779, 12.8573, 0.3126 ) }
    dend_17 { pt3dadd( 248.971, 393.307, 12.6571, 0.305 ) }
    dend_17 { pt3dadd( 248.071, 393.99, 12.8103, 0.305 ) }
    dend_17 { pt3dadd( 247.54, 394.974, 12.8797, 0.3436 ) }
    dend_17 { pt3dadd( 247.652, 396.073, 12.8789, 0.4148 ) }
    dend_17 { pt3dadd( 247.717, 397.209, 12.8719, 0.4916 ) }
    dend_17 { pt3dadd( 247.959, 398.32, 12.8086, 0.4874 ) }
    dend_17 { pt3dadd( 248.941, 398.698, 12.6235, 0.4172 ) }
    dend_17 { pt3dadd( 250.07, 398.747, 12.9685, 0.3388 ) }
    dend_17 { pt3dadd( 251.161, 398.494, 13.4901, 0.3076 ) }
    dend_17 { pt3dadd( 252.258, 398.263, 13.0374, 0.305 ) }
    dend_17 { pt3dadd( 253.387, 398.352, 12.7434, 0.2816 ) }
    dend_17 { pt3dadd( 254.498, 398.224, 12.185, 0.2796 ) }
    dend_17 { pt3dadd( 255.112, 397.311, 12.88, 0.305 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 83/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 280.72, 333.248, 22.5652, 0.356 ) }
    dend_12 { pt3dadd( 279.936, 332.907, 22.2953, 0.3902 ) }
    dend_12 { pt3dadd( 279.008, 333.37, 21.2652, 0.2718 ) }
    dend_12 { pt3dadd( 278.542, 334.162, 19.686, 0.2288 ) }
    dend_12 { pt3dadd( 278.37, 334.811, 17.4812, 0.2288 ) }
    dend_12 { pt3dadd( 278.222, 335.818, 16.4077, 0.2288 ) }
    dend_12 { pt3dadd( 278.276, 336.941, 16.6925, 0.2346 ) }
    dend_12 { pt3dadd( 278.128, 337.996, 17.7047, 0.2606 ) }
    dend_12 { pt3dadd( 277.969, 339.015, 18.8966, 0.2866 ) }
    dend_12 { pt3dadd( 277.788, 340.076, 19.5807, 0.305 ) }
    dend_12 { pt3dadd( 277.1, 340.75, 19.434, 0.305 ) }
    dend_12 { pt3dadd( 276.104, 340.857, 18.5035, 0.305 ) }
    dend_12 { pt3dadd( 275.492, 341.243, 16.3864, 0.2924 ) }
    dend_12 { pt3dadd( 274.772, 341.358, 14.527, 0.2652 ) }
    dend_12 { pt3dadd( 273.966, 341.837, 13.839, 0.2378 ) }
    dend_12 { pt3dadd( 273.708, 342.852, 13.092, 0.2288 ) }
    dend_12 { pt3dadd( 274.176, 343.777, 12.2651, 0.2726 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_12 { pt3dadd( 274.789, 344.687, 12.88, 0.3304 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 1/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 280.72, 333.248, 22.5652, 0.356 ) }
    dend_5 { pt3dadd( 280.611, 331.962, 21.9254, 0.4476 ) }
    dend_5 { pt3dadd( 280.278, 330.897, 21.8338, 0.3718 ) }
    dend_5 { pt3dadd( 279.634, 329.953, 21.7932, 0.345 ) }
    dend_5 { pt3dadd( 279.493, 328.977, 21.4362, 0.3426 ) }
    dend_5 { pt3dadd( 279.876, 327.922, 20.9927, 0.356 ) }
    dend_5 { pt3dadd( 279.557, 326.996, 20.8474, 0.4004 ) }
    dend_5 { pt3dadd( 278.984, 326.04, 20.7374, 0.4788 ) }
    dend_5 { pt3dadd( 278.606, 324.961, 20.6027, 0.5398 ) }
    dend_5 { pt3dadd( 278.318, 323.893, 20.0052, 0.5432 ) }
    dend_5 { pt3dadd( 277.926, 322.894, 19.0859, 0.484 ) }
    dend_5 { pt3dadd( 277.473, 321.933, 19.4888, 0.4576 ) }
    dend_5 { pt3dadd( 277.103, 320.9, 19.395, 0.4762 ) }
    dend_5 { pt3dadd( 276.814, 319.857, 18.5102, 0.5208 ) }
    dend_5 { pt3dadd( 276.644, 318.746, 18.1843, 0.5338 ) }
    dend_5 { pt3dadd( 276.607, 317.671, 18.996, 0.5338 ) }
    dend_5 { pt3dadd( 276.549, 316.576, 18.625, 0.5586 ) }
    dend_5 { pt3dadd( 276.203, 315.489, 18.4803, 0.6096 ) }
    dend_5 { pt3dadd( 275.728, 314.449, 18.4696, 0.6606 ) }
    dend_5 { pt3dadd( 275.259, 313.406, 18.4229, 0.661 ) }
    dend_5 { pt3dadd( 274.528, 312.529, 18.2322, 0.6104 ) }
    dend_5 { pt3dadd( 273.905, 311.621, 17.484, 0.5336 ) }
    dend_5 { pt3dadd( 273.29, 310.691, 17.3606, 0.4528 ) }
    dend_5 { pt3dadd( 273.098, 309.588, 17.365, 0.4174 ) }
    dend_5 { pt3dadd( 272.695, 308.579, 17.3846, 0.4068 ) }
    dend_5 { pt3dadd( 271.951, 307.713, 17.4605, 0.4526 ) }
    dend_5 { pt3dadd( 271.246, 306.835, 17.8511, 0.5448 ) }
    dend_5 { pt3dadd( 270.59, 305.918, 18.3238, 0.6314 ) }
    dend_5 { pt3dadd( 269.963, 304.967, 18.482, 0.6446 ) }
    dend_5 { pt3dadd( 269.303, 304.034, 18.4895, 0.5758 ) }
    dend_5 { pt3dadd( 268.634, 303.11, 18.5256, 0.5292 ) }
    dend_5 { pt3dadd( 267.844, 302.291, 18.7183, 0.5038 ) }
    dend_5 { pt3dadd( 267.031, 301.522, 19.1531, 0.4882 ) }
    dend_5 { pt3dadd( 266.212, 300.737, 18.8048, 0.5084 ) }
    dend_5 { pt3dadd( 265.457, 299.888, 18.48, 0.5084 ) }
    dend_5 { pt3dadd( 264.654, 299.073, 18.4803, 0.5592 ) }
    dend_5 { pt3dadd( 263.869, 298.241, 18.4806, 0.5338 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 38/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 277.241, 398.112, 56.7157, 0.3304 ) }
    dend_64 { pt3dadd( 277.356, 397.99, 57.1217, 0.2922 ) }
    dend_64 { pt3dadd( 277.071, 397.426, 58.8, 0.6368 ) }
    dend_64 { pt3dadd( 275.969, 397.311, 58.4248, 0.6864 ) }
    dend_64 { pt3dadd( 275.464, 398.035, 59.08, 0.2578 ) }
    dend_64 { pt3dadd( 274.81, 398.157, 60.4094, 0.3348 ) }
    dend_64 { pt3dadd( 274.258, 398.477, 61.0156, 0.8798 ) }
    dend_64 { pt3dadd( 273.259, 398.937, 60.727, 0.628 ) }
    dend_64 { pt3dadd( 272.731, 399.674, 59.5501, 0.4494 ) }
    dend_64 { pt3dadd( 272.238, 399.932, 60.3288, 0.2976 ) }
    dend_64 { pt3dadd( 272.272, 399.828, 62.9796, 0.4086 ) }
    dend_64 { pt3dadd( 271.4, 399.566, 63.1621, 0.8564 ) }
    dend_64 { pt3dadd( 270.345, 399.471, 63.7241, 0.2902 ) }
    dend_64 { pt3dadd( 269.334, 399.256, 64.12, 0.2288 ) }
    dend_64 { pt3dadd( 268.19, 399.256, 64.12, 0.242 ) }
    dend_64 { pt3dadd( 267.047, 399.218, 64.12, 0.305 ) }
    dend_64 { pt3dadd( 266.085, 398.634, 64.12, 0.4524 ) }
    dend_64 { pt3dadd( 265.152, 398.721, 63.56, 0.3728 ) }
    dend_64 { pt3dadd( 264.47, 399.058, 64.496, 0.2796 ) }
    dend_64 { pt3dadd( 263.409, 399.129, 65.2028, 0.2338 ) }
    dend_64 { pt3dadd( 262.406, 398.798, 65.0188, 0.4068 ) }
    dend_64 { pt3dadd( 261.39, 398.944, 65.6172, 0.5758 ) }
    dend_64 { pt3dadd( 260.489, 399.507, 65.8, 0.4544 ) }
    dend_64 { pt3dadd( 260.211, 400.267, 66.743, 0.5836 ) }
    dend_64 { pt3dadd( 259.459, 399.853, 67.3868, 0.356 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 63/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 277.241, 398.112, 56.7157, 0.3304 ) }
    dend_63 { pt3dadd( 277.008, 397.62, 57.134, 0.5848 ) }
    dend_63 { pt3dadd( 276.162, 397.426, 56.0, 0.2796 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 66/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 290.385, 372.601, 53.3868, 0.4322 ) }
    dend_58 { pt3dadd( 289.93, 372.486, 52.08, 0.2288 ) }
    dend_58 { pt3dadd( 288.871, 372.562, 51.6617, 0.493 ) }
    dend_58 { pt3dadd( 287.887, 372.944, 51.52, 0.4198 ) }
    dend_58 { pt3dadd( 287.144, 373.058, 52.561, 0.5704 ) }
    dend_58 { pt3dadd( 286.46, 372.944, 54.04, 0.7112 ) }
    dend_58 { pt3dadd( 285.345, 372.982, 53.7656, 0.5546 ) }
    dend_58 { pt3dadd( 284.742, 372.931, 55.4616, 0.4338 ) }
    dend_58 { pt3dadd( 284.108, 372.601, 56.56, 0.2802 ) }
    dend_58 { pt3dadd( 283.64, 373.058, 57.862, 0.697 ) }
    dend_58 { pt3dadd( 282.597, 373.216, 57.9992, 1.1214 ) }
    dend_58 { pt3dadd( 282.1, 374.069, 58.8, 0.6896 ) }
    dend_58 { pt3dadd( 281.255, 373.982, 60.0006, 0.3304 ) }
    dend_58 { pt3dadd( 281.145, 374.202, 61.9125, 0.4666 ) }
    dend_58 { pt3dadd( 281.059, 374.658, 63.9733, 0.5732 ) }
    dend_58 { pt3dadd( 280.934, 375.765, 64.3952, 0.3716 ) }
    dend_58 { pt3dadd( 280.437, 376.59, 65.0448, 0.25 ) }
    dend_58 { pt3dadd( 280.394, 377.673, 65.52, 0.2316 ) }
    dend_58 { pt3dadd( 280.779, 378.63, 65.728, 0.26 ) }
    dend_58 { pt3dadd( 280.621, 379.696, 65.7233, 0.4516 ) }
    dend_58 { pt3dadd( 279.893, 380.311, 66.6324, 0.481 ) }
    dend_58 { pt3dadd( 279.764, 381.208, 65.8182, 0.7564 ) }
    dend_58 { pt3dadd( 279.928, 381.963, 67.1437, 0.6346 ) }
    dend_58 { pt3dadd( 279.877, 382.63, 68.7977, 0.4236 ) }
    dend_58 { pt3dadd( 279.503, 383.578, 69.1964, 0.2288 ) }
    dend_58 { pt3dadd( 279.253, 384.595, 68.7786, 0.3722 ) }
    dend_58 { pt3dadd( 279.411, 384.977, 71.2944, 0.2642 ) }
    dend_58 { pt3dadd( 278.764, 385.71, 71.12, 0.5962 ) }
    dend_58 { pt3dadd( 277.649, 385.871, 70.84, 0.661 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 95/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 290.385, 372.601, 53.3868, 0.4322 ) }
    dend_55 { pt3dadd( 290.347, 372.03, 52.64, 0.5166 ) }
    dend_55 { pt3dadd( 290.118, 371.085, 53.436, 0.6386 ) }
    dend_55 { pt3dadd( 289.942, 370.124, 54.4421, 0.5784 ) }
    dend_55 { pt3dadd( 289.754, 369.248, 55.1698, 0.645 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_55 { pt3dadd( 289.98, 368.573, 57.2592, 0.5662 ) }
    dend_55 { pt3dadd( 290.424, 367.987, 58.52, 0.4322 ) }
    // Section: apic_33, id: apic_33, parent: apic_29 (entry count 2/100)
    apic_33 { pt3dclear() }
    apic_33 { pt3dadd( 290.068, 337.696, 32.3868, 0.5848 ) }
    apic_33 { pt3dadd( 289.445, 338.261, 32.2, 0.5348 ) }
    apic_33 { pt3dadd( 289.775, 339.31, 31.92, 0.5338 ) }
    // Section: apic_30, id: apic_30, parent: apic_29 (entry count 5/100)
    apic_30 { pt3dclear() }
    apic_30 { pt3dadd( 290.068, 337.696, 32.3868, 0.5848 ) }
    apic_30 { pt3dadd( 290.105, 337.478, 31.3883, 0.3038 ) }
    apic_30 { pt3dadd( 289.41, 336.796, 30.8266, 0.5412 ) }
    apic_30 { pt3dadd( 289.359, 335.805, 31.08, 0.5084 ) }
    apic_30 { pt3dadd( 289.318, 334.889, 29.9827, 0.5084 ) }
    apic_30 { pt3dadd( 289.537, 334.222, 28.9201, 0.7938 ) }
    apic_30 { pt3dadd( 289.314, 333.413, 29.8189, 0.5734 ) }
    apic_30 { pt3dadd( 289.012, 332.572, 30.6541, 0.4122 ) }
    apic_30 { pt3dadd( 288.249, 331.906, 30.4088, 0.262 ) }
    apic_30 { pt3dadd( 288.096, 331.159, 29.0746, 0.305 ) }
    apic_30 { pt3dadd( 287.945, 330.54, 29.972, 0.5592 ) }
    apic_30 { pt3dadd( 287.819, 329.753, 28.651, 0.4078 ) }
    apic_30 { pt3dadd( 287.622, 328.927, 28.2212, 0.483 ) }
    apic_30 { pt3dadd( 287.234, 327.997, 28.0, 0.5238 ) }
    apic_30 { pt3dadd( 286.406, 327.43, 28.5463, 0.3636 ) }
    apic_30 { pt3dadd( 285.379, 327.148, 27.9919, 0.5468 ) }
    apic_30 { pt3dadd( 284.877, 326.395, 26.9802, 0.6044 ) }
    apic_30 { pt3dadd( 284.005, 325.812, 26.8688, 0.4834 ) }
    apic_30 { pt3dadd( 283.481, 325.096, 26.9111, 0.483 ) }
    apic_30 { pt3dadd( 283.115, 324.299, 27.1603, 0.3056 ) }
    apic_30 { pt3dadd( 282.267, 324.093, 26.476, 0.234 ) }
    apic_30 { pt3dadd( 281.298, 323.752, 26.6874, 0.3338 ) }
    apic_30 { pt3dadd( 280.42, 323.816, 26.63, 0.3222 ) }
    apic_30 { pt3dadd( 279.579, 323.375, 26.857, 0.4816 ) }
    apic_30 { pt3dadd( 278.498, 323.07, 26.6916, 0.4326 ) }
    apic_30 { pt3dadd( 277.626, 322.949, 25.76, 0.5706 ) }
    apic_30 { pt3dadd( 276.95, 322.24, 26.3388, 0.4372 ) }
    apic_30 { pt3dadd( 275.977, 322.07, 25.7673, 0.4576 ) }
    apic_30 { pt3dadd( 274.981, 321.956, 24.6616, 0.6024 ) }
    apic_30 { pt3dadd( 274.243, 321.831, 25.9028, 0.4948 ) }
    apic_30 { pt3dadd( 273.145, 321.922, 25.716, 0.605 ) }
    apic_30 { pt3dadd( 272.424, 322.503, 24.638, 0.5784 ) }
    apic_30 { pt3dadd( 271.748, 322.551, 22.7035, 0.5276 ) }
    apic_30 { pt3dadd( 270.848, 322.689, 23.0023, 0.4008 ) }
    apic_30 { pt3dadd( 269.857, 322.862, 22.4932, 0.3814 ) }
    // Section: apic_28, id: apic_28, parent: apic_26 (entry count 40/100)
    apic_28 { pt3dclear() }
    apic_28 { pt3dadd( 342.628, 308.918, 20.6268, 0.4576 ) }
    apic_28 { pt3dadd( 343.137, 308.426, 20.5128, 0.4732 ) }
    // Section: apic_27, id: apic_27, parent: apic_26 (entry count 42/100)
    apic_27 { pt3dclear() }
    apic_27 { pt3dadd( 342.628, 308.918, 20.6268, 0.4576 ) }
    apic_27 { pt3dadd( 343.42, 309.748, 21.2587, 0.3184 ) }
    apic_27 { pt3dadd( 344.071, 310.646, 21.7641, 0.2796 ) }
    apic_27 { pt3dadd( 344.758, 311.471, 22.0494, 0.3278 ) }
    apic_27 { pt3dadd( 345.846, 311.154, 22.1822, 0.3304 ) }
    apic_27 { pt3dadd( 346.974, 311.139, 21.947, 0.304 ) }
    apic_27 { pt3dadd( 347.925, 310.859, 21.7479, 0.2746 ) }
    apic_27 { pt3dadd( 348.545, 309.898, 21.7862, 0.2602 ) }
    apic_27 { pt3dadd( 348.788, 308.832, 21.6224, 0.2542 ) }
    apic_27 { pt3dadd( 348.827, 307.702, 21.5869, 0.2668 ) }
    apic_27 { pt3dadd( 348.762, 306.579, 21.5572, 0.2928 ) }
    apic_27 { pt3dadd( 348.259, 305.695, 21.3786, 0.305 ) }
    apic_27 { pt3dadd( 348.06, 303.663, 19.4102, 0.6232 ) }
    apic_27 { pt3dadd( 348.897, 302.934, 19.32, 0.6356 ) }
    apic_27 { pt3dadd( 349.796, 302.27, 19.465, 0.574 ) }
    apic_27 { pt3dadd( 350.692, 301.723, 19.7728, 0.5424 ) }
    apic_27 { pt3dadd( 351.305, 301.684, 19.8923, 0.4296 ) }
    apic_27 { pt3dadd( 352.016, 300.934, 19.5054, 0.5592 ) }
    apic_27 { pt3dadd( 352.434, 300.016, 20.16, 0.3628 ) }
    apic_27 { pt3dadd( 352.679, 299.119, 19.88, 0.3168 ) }
    apic_27 { pt3dadd( 353.279, 298.704, 19.0756, 0.2796 ) }
    apic_27 { pt3dadd( 353.603, 297.698, 19.3934, 0.5954 ) }
    apic_27 { pt3dadd( 353.569, 296.629, 18.7415, 0.6306 ) }
    apic_27 { pt3dadd( 353.428, 295.753, 18.6782, 0.251 ) }
    apic_27 { pt3dadd( 353.48, 294.891, 19.4062, 0.6834 ) }
    apic_27 { pt3dadd( 353.153, 293.895, 19.206, 0.4626 ) }
    apic_27 { pt3dadd( 353.231, 292.918, 18.76, 0.6592 ) }
    apic_27 { pt3dadd( 353.178, 291.856, 19.32, 0.3722 ) }
    apic_27 { pt3dadd( 353.744, 290.893, 19.6078, 0.3878 ) }
    apic_27 { pt3dadd( 353.94, 289.806, 20.0869, 0.4416 ) }
    apic_27 { pt3dadd( 354.078, 288.731, 20.72, 0.405 ) }
    apic_27 { pt3dadd( 354.64, 288.288, 19.32, 0.305 ) }
    // Section: apic_24, id: apic_24, parent: apic_6 (entry count 74/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 257.629, 296.639, 43.96, 0.7372 ) }
    apic_24 { pt3dadd( 256.011, 296.698, 44.9501, 0.6472 ) }
    apic_24 { pt3dadd( 254.902, 296.736, 45.6288, 0.5858 ) }
    apic_24 { pt3dadd( 253.95, 296.858, 44.9366, 0.6934 ) }
    apic_24 { pt3dadd( 253.097, 296.748, 45.8354, 0.3926 ) }
    apic_24 { pt3dadd( 252.562, 297.5, 45.8088, 0.5948 ) }
    apic_24 { pt3dadd( 252.061, 298.263, 46.1437, 0.3508 ) }
    apic_24 { pt3dadd( 251.718, 298.927, 45.7472, 0.562 ) }
    apic_24 { pt3dadd( 251.019, 299.703, 46.1378, 0.4888 ) }
    apic_24 { pt3dadd( 250.879, 300.529, 45.9091, 0.253 ) }
    apic_24 { pt3dadd( 250.348, 300.971, 45.1931, 0.2288 ) }
    apic_24 { pt3dadd( 249.489, 301.068, 46.3456, 0.3622 ) }
    apic_24 { pt3dadd( 248.495, 300.986, 46.9482, 0.3182 ) }
    apic_24 { pt3dadd( 247.531, 301.144, 46.9288, 0.4178 ) }
    apic_24 { pt3dadd( 246.5, 301.22, 46.762, 0.356 ) }
    apic_24 { pt3dadd( 245.489, 301.625, 47.0109, 0.383 ) }
    apic_24 { pt3dadd( 244.602, 302.049, 46.2, 0.233 ) }
    apic_24 { pt3dadd( 244.38, 302.905, 46.5077, 0.5112 ) }
    apic_24 { pt3dadd( 243.863, 303.807, 47.2077, 0.3204 ) }
    apic_24 { pt3dadd( 243.473, 304.557, 46.9384, 0.3478 ) }
    apic_24 { pt3dadd( 243.467, 305.613, 46.7082, 0.571 ) }
    apic_24 { pt3dadd( 243.554, 306.471, 47.4116, 0.681 ) }
    apic_24 { pt3dadd( 243.577, 307.395, 48.5206, 0.6382 ) }
    apic_24 { pt3dadd( 243.999, 308.132, 48.7589, 0.4258 ) }
    apic_24 { pt3dadd( 243.558, 308.897, 48.5593, 0.2358 ) }
    apic_24 { pt3dadd( 243.558, 309.636, 46.7286, 0.4104 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_24 { pt3dadd( 243.214, 310.427, 45.4168, 0.2658 ) }
    apic_24 { pt3dadd( 243.434, 311.365, 45.8693, 0.4126 ) }
    apic_24 { pt3dadd( 243.407, 312.051, 47.6, 0.4524 ) }
    apic_24 { pt3dadd( 243.011, 313.073, 47.1414, 0.261 ) }
    apic_24 { pt3dadd( 242.535, 313.957, 46.5548, 0.4172 ) }
    apic_24 { pt3dadd( 242.168, 315.019, 46.4145, 0.5084 ) }
    apic_24 { pt3dadd( 241.826, 315.99, 45.876, 0.3446 ) }
    apic_24 { pt3dadd( 241.188, 316.839, 45.64, 0.4962 ) }
    apic_24 { pt3dadd( 240.123, 317.115, 45.6218, 0.3468 ) }
    apic_24 { pt3dadd( 239.32, 317.381, 45.1825, 0.3126 ) }
    apic_24 { pt3dadd( 238.349, 317.693, 45.1732, 0.3906 ) }
    apic_24 { pt3dadd( 237.795, 318.612, 45.5972, 0.3224 ) }
    apic_24 { pt3dadd( 237.282, 319.511, 44.8636, 0.3982 ) }
    apic_24 { pt3dadd( 236.465, 320.185, 44.8146, 0.2886 ) }
    apic_24 { pt3dadd( 235.72, 320.667, 44.24, 0.2288 ) }
    apic_24 { pt3dadd( 235.161, 321.664, 44.24, 0.2288 ) }
    apic_24 { pt3dadd( 234.544, 322.556, 43.701, 0.2288 ) }
    apic_24 { pt3dadd( 234.099, 323.573, 43.96, 0.2288 ) }
    apic_24 { pt3dadd( 233.935, 324.679, 43.7427, 0.2288 ) }
    apic_24 { pt3dadd( 233.143, 325.279, 43.68, 0.2288 ) }
    apic_24 { pt3dadd( 232.781, 326.339, 43.615, 0.2288 ) }
    apic_24 { pt3dadd( 232.003, 326.979, 43.4, 0.2288 ) }
    apic_24 { pt3dadd( 231.671, 328.002, 43.4, 0.2288 ) }
    apic_24 { pt3dadd( 231.364, 329.076, 43.4, 0.2288 ) }
    apic_24 { pt3dadd( 231.143, 330.126, 43.209, 0.2288 ) }
    apic_24 { pt3dadd( 230.772, 330.758, 42.6717, 0.4016 ) }
    apic_24 { pt3dadd( 230.63, 331.754, 43.4437, 0.3356 ) }
    apic_24 { pt3dadd( 230.596, 332.885, 43.12, 0.2796 ) }
    apic_24 { pt3dadd( 230.341, 333.983, 43.4, 0.2978 ) }
    apic_24 { pt3dadd( 229.954, 335.032, 43.12, 0.2488 ) }
    apic_24 { pt3dadd( 229.748, 336.138, 43.12, 0.2288 ) }
    apic_24 { pt3dadd( 229.571, 337.265, 43.12, 0.2288 ) }
    apic_24 { pt3dadd( 229.486, 338.346, 42.5877, 0.2288 ) }
    apic_24 { pt3dadd( 229.072, 339.354, 43.12, 0.2288 ) }
    apic_24 { pt3dadd( 229.029, 340.454, 43.12, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 35/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 257.629, 296.639, 43.96, 0.7372 ) }
    apic_7 { pt3dadd( 257.065, 295.747, 44.8678, 0.552 ) }
    apic_7 { pt3dadd( 256.724, 294.871, 46.3028, 0.3814 ) }
    apic_7 { pt3dadd( 256.22, 294.496, 45.6817, 0.7342 ) }
    apic_7 { pt3dadd( 255.896, 293.525, 45.9388, 0.7868 ) }
    apic_7 { pt3dadd( 255.788, 292.41, 45.4096, 0.6772 ) }
    apic_7 { pt3dadd( 255.169, 291.799, 45.0251, 0.972 ) }
    apic_7 { pt3dadd( 254.654, 291.252, 46.5273, 0.7106 ) }
    apic_7 { pt3dadd( 254.351, 290.576, 46.132, 0.5688 ) }
    apic_7 { pt3dadd( 253.739, 289.938, 46.058, 0.3322 ) }
    apic_7 { pt3dadd( 253.433, 289.267, 47.7621, 0.55 ) }
    apic_7 { pt3dadd( 253.078, 288.383, 47.1654, 0.4408 ) }
    apic_7 { pt3dadd( 252.774, 287.311, 46.8532, 0.4188 ) }
    apic_7 { pt3dadd( 252.349, 286.486, 47.0719, 0.6416 ) }
    apic_7 { pt3dadd( 252.043, 285.725, 48.1449, 0.5344 ) }
    apic_7 { pt3dadd( 251.975, 284.914, 49.3147, 0.4576 ) }
    apic_7 { pt3dadd( 251.206, 284.279, 50.3468, 0.4576 ) }
    apic_7 { pt3dadd( 250.554, 283.404, 50.0458, 0.6404 ) }
    apic_7 { pt3dadd( 249.994, 282.997, 48.16, 0.5624 ) }
    apic_7 { pt3dadd( 249.423, 282.463, 49.287, 0.6864 ) }
    apic_7 { pt3dadd( 249.125, 281.551, 49.9022, 0.5592 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 56/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 270.924, 265.726, 36.4, 0.4068 ) }
    apic_5 { pt3dadd( 271.117, 265.128, 36.12, 0.2628 ) }
    apic_5 { pt3dadd( 271.238, 264.243, 36.2631, 0.2288 ) }
    apic_5 { pt3dadd( 271.118, 263.172, 36.0511, 0.2504 ) }
    apic_5 { pt3dadd( 270.979, 262.24, 37.1862, 0.2362 ) }
    apic_5 { pt3dadd( 271.323, 261.248, 37.2089, 0.3262 ) }
    apic_5 { pt3dadd( 271.242, 260.548, 36.1147, 0.34 ) }
    apic_5 { pt3dadd( 271.128, 259.877, 35.3027, 0.4644 ) }
    apic_5 { pt3dadd( 271.184, 258.94, 36.1043, 0.3682 ) }
    apic_5 { pt3dadd( 271.471, 257.993, 35.8907, 0.327 ) }
    apic_5 { pt3dadd( 271.586, 257.068, 35.5264, 0.3808 ) }
    apic_5 { pt3dadd( 271.383, 256.065, 34.7922, 0.2894 ) }
    apic_5 { pt3dadd( 271.141, 254.999, 34.7516, 0.4574 ) }
    apic_5 { pt3dadd( 271.128, 254.057, 35.4824, 0.5338 ) }
    apic_5 { pt3dadd( 271.022, 253.477, 34.2278, 0.3966 ) }
    apic_5 { pt3dadd( 271.095, 252.552, 34.9602, 0.3272 ) }
    apic_5 { pt3dadd( 271.357, 251.681, 35.3447, 0.356 ) }
    apic_5 { pt3dadd( 271.801, 250.755, 35.2814, 0.432 ) }
    apic_5 { pt3dadd( 271.953, 249.928, 34.2157, 0.2892 ) }
    apic_5 { pt3dadd( 272.031, 249.073, 33.32, 0.5778 ) }
    apic_5 { pt3dadd( 272.541, 248.585, 35.0, 0.5338 ) }
    apic_5 { pt3dadd( 272.73, 247.586, 34.1986, 0.3354 ) }
    apic_5 { pt3dadd( 272.518, 246.564, 34.7589, 0.4386 ) }
    apic_5 { pt3dadd( 272.123, 245.498, 35.0, 0.538 ) }
    apic_5 { pt3dadd( 271.814, 244.448, 35.0297, 0.4888 ) }
    apic_5 { pt3dadd( 271.702, 243.338, 35.3186, 0.3318 ) }
    apic_5 { pt3dadd( 271.889, 242.529, 35.0, 0.494 ) }
    apic_5 { pt3dadd( 272.501, 241.831, 35.5236, 0.5596 ) }
    apic_5 { pt3dadd( 273.256, 241.182, 35.6112, 0.4576 ) }
    apic_5 { pt3dadd( 273.828, 240.275, 36.2239, 0.404 ) }
    apic_5 { pt3dadd( 274.126, 239.252, 36.0335, 0.345 ) }
    apic_5 { pt3dadd( 274.327, 238.182, 36.2085, 0.2288 ) }
    apic_5 { pt3dadd( 274.647, 237.256, 35.1226, 0.339 ) }
    apic_5 { pt3dadd( 275.151, 236.461, 35.7316, 0.3304 ) }
    apic_5 { pt3dadd( 275.704, 235.721, 35.5776, 0.391 ) }
    apic_5 { pt3dadd( 275.765, 234.668, 35.6908, 0.3934 ) }
    apic_5 { pt3dadd( 276.135, 233.749, 36.0923, 0.5112 ) }
    apic_5 { pt3dadd( 276.276, 232.79, 35.2531, 0.4576 ) }
    apic_5 { pt3dadd( 276.7, 231.967, 34.5369, 0.6476 ) }
    apic_5 { pt3dadd( 276.746, 230.964, 33.6, 0.4408 ) }
    apic_5 { pt3dadd( 276.993, 230.235, 33.8254, 0.4576 ) }
    apic_5 { pt3dadd( 277.857, 229.707, 34.16, 0.2288 ) }
    apic_5 { pt3dadd( 277.999, 228.622, 33.8125, 0.4104 ) }
    apic_5 { pt3dadd( 278.696, 227.83, 33.6129, 0.2612 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_5 { pt3dadd( 279.343, 227.102, 33.0711, 0.3024 ) }
    apic_5 { pt3dadd( 279.2, 226.207, 33.8484, 0.5848 ) }
    apic_5 { pt3dadd( 279.479, 225.826, 35.0, 0.483 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 3/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 270.924, 265.726, 36.4, 0.4068 ) }
    apic_4 { pt3dadd( 270.899, 265.866, 37.24, 0.4576 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 5/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 235.766, 327.997, 55.16, 0.305 ) }
    dend_45 { pt3dadd( 234.861, 327.603, 55.4764, 0.3224 ) }
    dend_45 { pt3dadd( 233.821, 327.15, 55.8398, 0.3426 ) }
    dend_45 { pt3dadd( 232.774, 326.705, 56.0871, 0.3444 ) }
    dend_45 { pt3dadd( 231.713, 326.28, 56.0871, 0.3076 ) }
    dend_45 { pt3dadd( 230.632, 325.979, 56.0871, 0.2656 ) }
    dend_45 { pt3dadd( 229.537, 325.848, 56.0871, 0.2288 ) }
    dend_45 { pt3dadd( 228.514, 325.336, 56.0871, 0.2288 ) }
    dend_45 { pt3dadd( 227.514, 324.78, 56.0871, 0.2288 ) }
    dend_45 { pt3dadd( 226.531, 324.196, 56.0871, 0.2288 ) }
    dend_45 { pt3dadd( 225.574, 323.57, 56.0871, 0.2288 ) }
    dend_45 { pt3dadd( 224.615, 322.945, 56.0871, 0.2288 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 17/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 235.766, 327.997, 55.16, 0.305 ) }
    dend_44 { pt3dadd( 235.435, 328.557, 55.16, 0.2288 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 19/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 394.744, 371.533, 34.4089, 0.356 ) }
    dend_34 { pt3dadd( 394.132, 370.999, 33.8898, 0.405 ) }
    dend_34 { pt3dadd( 393.295, 370.307, 33.4527, 0.3358 ) }
    dend_34 { pt3dadd( 392.194, 370.095, 33.8008, 0.3828 ) }
    dend_34 { pt3dadd( 391.088, 369.97, 33.9741, 0.4406 ) }
    dend_34 { pt3dadd( 390.141, 370.362, 34.3882, 0.4348 ) }
    dend_34 { pt3dadd( 389.194, 370.905, 34.72, 0.3298 ) }
    dend_34 { pt3dadd( 388.366, 371.675, 34.72, 0.3746 ) }
    dend_34 { pt3dadd( 387.355, 371.89, 35.4945, 0.4576 ) }
    dend_34 { pt3dadd( 386.251, 371.914, 35.2262, 0.4576 ) }
    dend_34 { pt3dadd( 385.204, 372.065, 35.1434, 0.4128 ) }
    dend_34 { pt3dadd( 384.08, 372.251, 35.0, 0.4562 ) }
    dend_34 { pt3dadd( 382.973, 372.486, 35.373, 0.3814 ) }
    dend_34 { pt3dadd( 381.9, 372.547, 34.7393, 0.5382 ) }
    dend_34 { pt3dadd( 380.981, 372.769, 35.5846, 0.5192 ) }
    dend_34 { pt3dadd( 380.151, 373.021, 36.0769, 0.3176 ) }
    dend_34 { pt3dadd( 379.363, 373.334, 36.8822, 0.356 ) }
    dend_34 { pt3dadd( 378.439, 372.944, 36.4, 0.5086 ) }
    dend_34 { pt3dadd( 377.634, 373.381, 35.4897, 0.2574 ) }
    dend_34 { pt3dadd( 377.041, 374.009, 36.3947, 0.5428 ) }
    dend_34 { pt3dadd( 376.332, 374.725, 37.2814, 0.5592 ) }
    dend_34 { pt3dadd( 375.299, 374.954, 37.5794, 0.3498 ) }
    dend_34 { pt3dadd( 374.397, 375.461, 38.08, 0.2288 ) }
    dend_34 { pt3dadd( 373.833, 375.909, 38.2687, 0.3438 ) }
    dend_34 { pt3dadd( 373.678, 376.823, 37.6214, 0.386 ) }
    dend_34 { pt3dadd( 372.884, 377.626, 37.8, 0.4288 ) }
    dend_34 { pt3dadd( 372.07, 377.978, 38.3062, 0.6092 ) }
    dend_34 { pt3dadd( 371.213, 377.863, 39.3232, 0.2288 ) }
    dend_34 { pt3dadd( 370.315, 377.378, 38.92, 0.3692 ) }
    dend_34 { pt3dadd( 369.449, 377.011, 39.6841, 0.3466 ) }
    dend_34 { pt3dadd( 368.335, 377.062, 39.76, 0.5486 ) }
    dend_34 { pt3dadd( 367.303, 377.177, 39.3705, 0.3814 ) }
    dend_34 { pt3dadd( 366.421, 376.855, 39.7869, 0.3576 ) }
    dend_34 { pt3dadd( 365.599, 377.084, 41.1348, 0.2748 ) }
    dend_34 { pt3dadd( 364.704, 377.613, 40.5958, 0.2686 ) }
    dend_34 { pt3dadd( 364.059, 378.319, 40.0674, 0.6066 ) }
    dend_34 { pt3dadd( 363.334, 378.537, 39.44, 0.7054 ) }
    dend_34 { pt3dadd( 362.752, 379.307, 40.2749, 0.291 ) }
    dend_34 { pt3dadd( 361.62, 379.316, 40.32, 0.2998 ) }
    dend_34 { pt3dadd( 360.525, 379.272, 40.8702, 0.4336 ) }
    dend_34 { pt3dadd( 360.178, 379.613, 39.503, 0.5084 ) }
    dend_34 { pt3dadd( 359.781, 379.292, 37.5351, 0.3304 ) }
    dend_34 { pt3dadd( 359.318, 379.35, 40.0089, 0.4576 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 62/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 394.744, 371.533, 34.4089, 0.356 ) }
    dend_31 { pt3dadd( 395.329, 372.096, 33.88, 0.4448 ) }
    dend_31 { pt3dadd( 396.167, 372.551, 33.1643, 0.4576 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 65/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 263.869, 298.241, 18.4806, 0.5338 ) }
    dend_11 { pt3dadd( 263.036, 298.382, 16.9333, 0.2414 ) }
    dend_11 { pt3dadd( 262.135, 299.022, 16.2985, 0.2288 ) }
    dend_11 { pt3dadd( 261.326, 299.83, 16.282, 0.2288 ) }
    dend_11 { pt3dadd( 260.576, 300.691, 16.4343, 0.2538 ) }
    dend_11 { pt3dadd( 259.75, 301.437, 17.0794, 0.2796 ) }
    dend_11 { pt3dadd( 258.743, 301.778, 16.214, 0.3304 ) }
    dend_11 { pt3dadd( 257.834, 301.22, 15.2989, 0.3304 ) }
    dend_11 { pt3dadd( 257.244, 300.565, 13.564, 0.3238 ) }
    dend_11 { pt3dadd( 256.358, 300.409, 12.8741, 0.273 ) }
    dend_11 { pt3dadd( 255.514, 300.576, 14.7162, 0.2466 ) }
    dend_11 { pt3dadd( 254.604, 300.779, 16.1795, 0.2288 ) }
    dend_11 { pt3dadd( 253.742, 301.362, 17.075, 0.2288 ) }
    dend_11 { pt3dadd( 253.21, 302.152, 17.3463, 0.2288 ) }
    dend_11 { pt3dadd( 252.984, 302.204, 15.5907, 0.2288 ) }
    dend_11 { pt3dadd( 252.763, 301.76, 13.638, 0.241 ) }
    dend_11 { pt3dadd( 251.869, 301.785, 12.1612, 0.2674 ) }
    dend_11 { pt3dadd( 251.1, 301.237, 12.2864, 0.2966 ) }
    dend_11 { pt3dadd( 251.409, 300.903, 14.238, 0.284 ) }
    dend_11 { pt3dadd( 251.916, 301.2, 16.6026, 0.2572 ) }
    dend_11 { pt3dadd( 251.817, 302.241, 17.01, 0.23 ) }
    dend_11 { pt3dadd( 251.451, 303.274, 16.24, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 263.869, 298.241, 18.4806, 0.5338 ) }
    dend_6 { pt3dadd( 262.928, 296.907, 18.4859, 0.7118 ) }
    dend_6 { pt3dadd( 262.291, 295.956, 18.5091, 0.7118 ) }
    dend_6 { pt3dadd( 261.611, 295.038, 18.62, 0.661 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 91/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 290.424, 367.987, 58.52, 0.4322 ) }
    dend_57 { pt3dadd( 290.561, 367.875, 59.4359, 0.3006 ) }
    dend_57 { pt3dadd( 290.393, 367.064, 60.5357, 0.2288 ) }
    dend_57 { pt3dadd( 289.727, 366.538, 61.3404, 0.4068 ) }
    dend_57 { pt3dadd( 289.368, 365.831, 61.8419, 0.4364 ) }
    dend_57 { pt3dadd( 289.941, 365.254, 62.519, 0.4576 ) }
    dend_57 { pt3dadd( 290.536, 364.902, 64.3983, 0.4082 ) }
    dend_57 { pt3dadd( 290.174, 363.934, 63.84, 0.3428 ) }
    dend_57 { pt3dadd( 289.657, 363.079, 64.2852, 0.2894 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_57 { pt3dadd( 289.318, 362.208, 64.68, 0.2506 ) }
    dend_57 { pt3dadd( 289.332, 361.639, 63.1912, 0.2522 ) }
    dend_57 { pt3dadd( 289.149, 361.467, 60.4593, 0.2482 ) }
    dend_57 { pt3dadd( 288.967, 361.296, 57.7273, 0.2444 ) }
    dend_57 { pt3dadd( 288.784, 361.123, 54.9956, 0.2404 ) }
    dend_57 { pt3dadd( 288.602, 360.951, 52.2637, 0.2366 ) }
    dend_57 { pt3dadd( 288.418, 360.78, 49.5317, 0.2326 ) }
    dend_57 { pt3dadd( 288.237, 360.608, 46.8, 0.2288 ) }
    dend_57 { pt3dadd( 287.544, 359.716, 46.7289, 0.2288 ) }
    dend_57 { pt3dadd( 286.802, 358.859, 46.7149, 0.2288 ) }
    dend_57 { pt3dadd( 285.831, 358.254, 46.7561, 0.2288 ) }
    dend_57 { pt3dadd( 284.949, 357.586, 46.8082, 0.2288 ) }
    dend_57 { pt3dadd( 284.332, 356.731, 46.858, 0.2288 ) }
    dend_57 { pt3dadd( 283.292, 356.292, 46.6906, 0.2782 ) }
    dend_57 { pt3dadd( 282.793, 355.27, 46.809, 0.3814 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 15/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 290.424, 367.987, 58.52, 0.4322 ) }
    dend_56 { pt3dadd( 290.645, 367.727, 58.688, 0.6102 ) }
    dend_56 { pt3dadd( 291.626, 367.321, 59.36, 0.6768 ) }
    dend_56 { pt3dadd( 292.497, 366.615, 59.4339, 0.5954 ) }
    dend_56 { pt3dadd( 292.872, 365.653, 59.9701, 0.3224 ) }
    dend_56 { pt3dadd( 293.665, 365.165, 61.04, 0.3304 ) }
    // Section: apic_32, id: apic_32, parent: apic_30 (entry count 21/100)
    apic_32 { pt3dclear() }
    apic_32 { pt3dadd( 269.857, 322.862, 22.4932, 0.3814 ) }
    apic_32 { pt3dadd( 269.271, 322.951, 22.4319, 0.48 ) }
    apic_32 { pt3dadd( 268.284, 323.201, 22.0886, 0.483 ) }
    apic_32 { pt3dadd( 267.336, 323.189, 21.7022, 0.5338 ) }
    apic_32 { pt3dadd( 266.351, 322.989, 21.1994, 0.465 ) }
    apic_32 { pt3dadd( 265.83, 323.497, 22.8928, 0.3814 ) }
    apic_32 { pt3dadd( 265.298, 323.989, 21.6639, 0.4492 ) }
    apic_32 { pt3dadd( 265.187, 324.756, 21.0683, 0.2442 ) }
    apic_32 { pt3dadd( 264.608, 325.354, 21.2783, 0.4578 ) }
    apic_32 { pt3dadd( 263.801, 325.64, 21.0157, 0.3558 ) }
    apic_32 { pt3dadd( 262.696, 325.552, 21.0356, 0.6042 ) }
    apic_32 { pt3dadd( 261.707, 325.593, 21.4749, 0.2564 ) }
    apic_32 { pt3dadd( 260.928, 325.752, 21.7305, 0.4068 ) }
    apic_32 { pt3dadd( 260.057, 325.775, 21.0339, 0.3814 ) }
    apic_32 { pt3dadd( 259.345, 325.905, 21.3052, 0.2912 ) }
    apic_32 { pt3dadd( 258.78, 326.214, 19.3486, 0.3342 ) }
    apic_32 { pt3dadd( 257.766, 326.15, 19.1464, 0.4576 ) }
    apic_32 { pt3dadd( 257.4, 326.382, 20.4674, 0.2288 ) }
    apic_32 { pt3dadd( 256.811, 325.793, 20.6774, 0.4066 ) }
    apic_32 { pt3dadd( 256.147, 325.24, 19.0994, 0.5316 ) }
    apic_32 { pt3dadd( 255.091, 325.165, 19.0725, 0.5066 ) }
    apic_32 { pt3dadd( 254.734, 324.609, 18.1877, 0.523 ) }
    apic_32 { pt3dadd( 253.787, 324.196, 17.8245, 0.4824 ) }
    apic_32 { pt3dadd( 252.957, 323.52, 17.92, 0.2468 ) }
    apic_32 { pt3dadd( 252.046, 323.087, 17.5305, 0.2858 ) }
    apic_32 { pt3dadd( 251.105, 323.608, 17.3564, 0.5084 ) }
    apic_32 { pt3dadd( 250.327, 323.172, 16.3918, 0.4576 ) }
    apic_32 { pt3dadd( 249.303, 322.876, 17.2875, 0.3436 ) }
    apic_32 { pt3dadd( 248.317, 322.952, 16.9501, 0.4554 ) }
    apic_32 { pt3dadd( 247.79, 322.951, 15.68, 0.5338 ) }
    // Section: apic_31, id: apic_31, parent: apic_30 (entry count 51/100)
    apic_31 { pt3dclear() }
    apic_31 { pt3dadd( 269.857, 322.862, 22.4932, 0.3814 ) }
    apic_31 { pt3dadd( 269.412, 322.816, 22.7172, 0.4766 ) }
    apic_31 { pt3dadd( 268.954, 322.494, 23.8, 0.2796 ) }
    // Section: apic_17, id: apic_17, parent: apic_7 (entry count 54/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 249.125, 281.551, 49.9022, 0.5592 ) }
    apic_17 { pt3dadd( 248.388, 280.598, 49.28, 0.6356 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 56/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 249.125, 281.551, 49.9022, 0.5592 ) }
    apic_8 { pt3dadd( 248.563, 281.624, 48.8846, 0.3366 ) }
    apic_8 { pt3dadd( 247.492, 281.427, 49.5628, 0.4926 ) }
    apic_8 { pt3dadd( 246.751, 280.798, 49.3511, 0.503 ) }
    apic_8 { pt3dadd( 245.852, 280.381, 50.1315, 0.562 ) }
    apic_8 { pt3dadd( 245.282, 279.885, 50.1273, 0.4338 ) }
    apic_8 { pt3dadd( 244.567, 279.454, 49.28, 0.6102 ) }
    apic_8 { pt3dadd( 243.681, 278.792, 49.6138, 0.5836 ) }
    apic_8 { pt3dadd( 243.012, 278.161, 50.6066, 0.6764 ) }
    apic_8 { pt3dadd( 242.311, 277.403, 51.2865, 0.5884 ) }
    apic_8 { pt3dadd( 241.975, 276.657, 50.4053, 0.4786 ) }
    apic_8 { pt3dadd( 241.475, 275.798, 50.8094, 0.5174 ) }
    apic_8 { pt3dadd( 240.724, 275.103, 51.8507, 0.356 ) }
    apic_8 { pt3dadd( 240.234, 274.207, 52.0618, 0.4576 ) }
    apic_8 { pt3dadd( 239.71, 273.383, 52.1007, 0.4406 ) }
    apic_8 { pt3dadd( 239.583, 272.451, 53.1185, 0.661 ) }
    apic_8 { pt3dadd( 238.947, 271.92, 52.7853, 0.4864 ) }
    apic_8 { pt3dadd( 238.594, 271.185, 53.6505, 0.3942 ) }
    apic_8 { pt3dadd( 237.834, 270.421, 53.9773, 0.3304 ) }
    apic_8 { pt3dadd( 237.029, 270.385, 54.3074, 0.4678 ) }
    apic_8 { pt3dadd( 236.323, 269.753, 53.5836, 0.5686 ) }
    apic_8 { pt3dadd( 235.672, 269.018, 54.2688, 0.4022 ) }
    apic_8 { pt3dadd( 235.062, 268.245, 53.7323, 0.4322 ) }
    apic_8 { pt3dadd( 234.568, 267.379, 53.5648, 0.4948 ) }
    apic_8 { pt3dadd( 234.137, 266.677, 54.0492, 0.422 ) }
    apic_8 { pt3dadd( 234.046, 266.427, 56.2489, 0.458 ) }
    apic_8 { pt3dadd( 233.719, 265.331, 56.2489, 0.5032 ) }
    apic_8 { pt3dadd( 232.846, 264.652, 56.0311, 0.4386 ) }
    apic_8 { pt3dadd( 232.242, 264.075, 54.9332, 0.434 ) }
    apic_8 { pt3dadd( 231.721, 263.27, 54.9489, 0.4576 ) }
    apic_8 { pt3dadd( 231.01, 262.901, 55.5892, 0.5086 ) }
    apic_8 { pt3dadd( 230.794, 262.248, 55.9908, 0.5174 ) }
    apic_8 { pt3dadd( 230.601, 261.386, 56.5454, 0.6864 ) }
    apic_8 { pt3dadd( 230.064, 260.482, 55.5845, 0.4848 ) }
    apic_8 { pt3dadd( 229.83, 259.625, 54.5714, 0.8554 ) }
    apic_8 { pt3dadd( 229.596, 258.785, 54.6501, 0.5868 ) }
    apic_8 { pt3dadd( 228.809, 258.36, 55.8144, 0.643 ) }
    apic_8 { pt3dadd( 228.503, 257.406, 56.4029, 0.4764 ) }
    apic_8 { pt3dadd( 228.588, 256.598, 56.84, 0.3752 ) }
    apic_8 { pt3dadd( 228.259, 255.505, 56.8851, 0.3418 ) }
    apic_8 { pt3dadd( 227.594, 254.732, 57.3448, 0.3926 ) }
    apic_8 { pt3dadd( 226.86, 254.167, 56.6222, 0.5338 ) }
    apic_8 { pt3dadd( 226.167, 253.338, 56.9898, 0.3972 ) }
    apic_8 { pt3dadd( 225.904, 252.379, 57.12, 0.3968 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_8 { pt3dadd( 225.399, 251.361, 57.3017, 0.5332 ) }
    apic_8 { pt3dadd( 225.145, 250.733, 58.3472, 0.5988 ) }
    apic_8 { pt3dadd( 224.644, 250.15, 59.6285, 0.451 ) }
    apic_8 { pt3dadd( 224.621, 249.208, 59.0848, 0.6394 ) }
    apic_8 { pt3dadd( 223.909, 248.572, 59.64, 0.5534 ) }
    apic_8 { pt3dadd( 223.881, 247.957, 59.8441, 0.6244 ) }
    apic_8 { pt3dadd( 223.012, 247.599, 59.3158, 0.5098 ) }
    apic_8 { pt3dadd( 222.966, 246.646, 60.48, 0.6102 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 8/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 359.318, 379.35, 40.0089, 0.4576 ) }
    dend_38 { pt3dadd( 359.445, 378.65, 40.8708, 0.3534 ) }
    dend_38 { pt3dadd( 359.492, 377.541, 40.3816, 0.3224 ) }
    dend_38 { pt3dadd( 360.192, 376.754, 40.3472, 0.4256 ) }
    dend_38 { pt3dadd( 361.255, 376.941, 40.2298, 0.4716 ) }
    dend_38 { pt3dadd( 361.904, 376.263, 41.1191, 0.5228 ) }
    dend_38 { pt3dadd( 362.447, 375.964, 41.515, 0.4928 ) }
    dend_38 { pt3dadd( 363.106, 375.38, 42.1775, 0.3224 ) }
    dend_38 { pt3dadd( 363.563, 374.485, 42.2528, 0.5592 ) }
    dend_38 { pt3dadd( 364.183, 373.791, 42.0, 0.3216 ) }
    dend_38 { pt3dadd( 365.243, 373.415, 41.7004, 0.3358 ) }
    dend_38 { pt3dadd( 366.157, 373.043, 42.5138, 0.4292 ) }
    dend_38 { pt3dadd( 367.186, 372.875, 43.1015, 0.498 ) }
    dend_38 { pt3dadd( 368.049, 372.415, 42.5309, 0.4464 ) }
    dend_38 { pt3dadd( 368.565, 371.867, 41.9955, 0.375 ) }
    dend_38 { pt3dadd( 368.911, 370.956, 41.9356, 0.4668 ) }
    dend_38 { pt3dadd( 369.695, 370.966, 42.2554, 0.651 ) }
    dend_38 { pt3dadd( 370.302, 370.105, 42.84, 0.5638 ) }
    dend_38 { pt3dadd( 371.272, 369.654, 43.2916, 0.4158 ) }
    dend_38 { pt3dadd( 372.354, 369.405, 43.4361, 0.3354 ) }
    dend_38 { pt3dadd( 373.485, 369.432, 43.2706, 0.4464 ) }
    dend_38 { pt3dadd( 374.232, 369.398, 43.7108, 0.6814 ) }
    dend_38 { pt3dadd( 375.134, 369.169, 44.3694, 0.6864 ) }
    dend_38 { pt3dadd( 376.018, 368.683, 44.8, 0.5214 ) }
    dend_38 { pt3dadd( 376.376, 367.873, 43.7732, 0.305 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 33/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 359.318, 379.35, 40.0089, 0.4576 ) }
    dend_35 { pt3dadd( 359.183, 380.001, 40.04, 0.517 ) }
    dend_35 { pt3dadd( 358.524, 380.842, 39.949, 0.4138 ) }
    dend_35 { pt3dadd( 358.022, 381.039, 37.8619, 0.4286 ) }
    dend_35 { pt3dadd( 357.593, 381.484, 39.968, 0.5518 ) }
    dend_35 { pt3dadd( 356.862, 381.554, 41.3596, 0.661 ) }
    dend_35 { pt3dadd( 355.929, 382.048, 41.1018, 0.483 ) }
    dend_35 { pt3dadd( 355.664, 382.365, 40.2892, 0.4212 ) }
    dend_35 { pt3dadd( 354.98, 382.533, 40.5706, 0.6034 ) }
    dend_35 { pt3dadd( 354.055, 382.73, 40.6, 0.548 ) }
    dend_35 { pt3dadd( 353.566, 383.497, 41.1533, 0.4576 ) }
    dend_35 { pt3dadd( 353.089, 384.397, 40.9732, 0.6102 ) }
    dend_35 { pt3dadd( 352.247, 385.126, 41.44, 0.4576 ) }
    dend_35 { pt3dadd( 351.699, 385.931, 40.5871, 0.6282 ) }
    dend_35 { pt3dadd( 351.481, 386.906, 39.76, 0.613 ) }
    dend_35 { pt3dadd( 350.651, 387.451, 40.0075, 0.5226 ) }
    dend_35 { pt3dadd( 349.767, 387.784, 39.7818, 0.5492 ) }
    dend_35 { pt3dadd( 349.074, 388.459, 39.6984, 0.9066 ) }
    dend_35 { pt3dadd( 348.208, 388.96, 40.0128, 0.5974 ) }
    dend_35 { pt3dadd( 347.62, 389.637, 39.76, 0.5154 ) }
    dend_35 { pt3dadd( 346.523, 389.706, 40.0711, 0.4576 ) }
    dend_35 { pt3dadd( 345.625, 389.993, 40.6137, 0.4576 ) }
    dend_35 { pt3dadd( 344.95, 390.562, 39.76, 0.483 ) }
    dend_35 { pt3dadd( 344.492, 390.333, 38.08, 0.74 ) }
    dend_35 { pt3dadd( 343.551, 390.532, 37.9854, 0.3814 ) }
    dend_35 { pt3dadd( 343.027, 391.122, 38.722, 0.4038 ) }
    dend_35 { pt3dadd( 342.058, 391.591, 38.36, 0.5328 ) }
    dend_35 { pt3dadd( 341.267, 391.477, 38.7943, 0.4908 ) }
    dend_35 { pt3dadd( 340.509, 391.897, 39.6838, 0.8042 ) }
    dend_35 { pt3dadd( 339.921, 392.278, 39.3649, 0.4866 ) }
    dend_35 { pt3dadd( 338.905, 392.529, 40.0218, 0.5404 ) }
    dend_35 { pt3dadd( 338.195, 393.264, 40.4678, 0.565 ) }
    dend_35 { pt3dadd( 337.516, 393.992, 39.7645, 0.4408 ) }
    dend_35 { pt3dadd( 337.292, 394.484, 37.5225, 0.4556 ) }
    dend_35 { pt3dadd( 336.535, 395.13, 37.7451, 0.518 ) }
    dend_35 { pt3dadd( 335.833, 395.802, 37.2537, 0.733 ) }
    dend_35 { pt3dadd( 334.875, 396.092, 37.7474, 0.4674 ) }
    dend_35 { pt3dadd( 334.275, 396.797, 38.36, 0.813 ) }
    dend_35 { pt3dadd( 333.476, 397.311, 37.6709, 0.4322 ) }
    dend_35 { pt3dadd( 332.538, 397.018, 37.0154, 0.5976 ) }
    dend_35 { pt3dadd( 331.731, 396.739, 35.84, 0.464 ) }
    dend_35 { pt3dadd( 330.861, 397.192, 35.434, 0.7118 ) }
    dend_35 { pt3dadd( 330.09, 397.049, 35.5359, 0.6562 ) }
    dend_35 { pt3dadd( 329.296, 396.864, 36.2076, 0.7072 ) }
    dend_35 { pt3dadd( 328.526, 397.184, 37.6566, 0.6804 ) }
    dend_35 { pt3dadd( 327.619, 396.833, 36.9667, 0.4268 ) }
    dend_35 { pt3dadd( 327.134, 396.633, 35.5225, 0.5238 ) }
    dend_35 { pt3dadd( 326.217, 396.523, 34.2513, 0.3826 ) }
    dend_35 { pt3dadd( 325.535, 396.968, 34.9423, 0.673 ) }
    dend_35 { pt3dadd( 324.464, 397.197, 35.2884, 0.6102 ) }
    dend_35 { pt3dadd( 323.637, 396.968, 35.5902, 0.5184 ) }
    dend_35 { pt3dadd( 322.656, 396.739, 35.0154, 0.3434 ) }
    dend_35 { pt3dadd( 321.727, 397.197, 35.2876, 0.5716 ) }
    dend_35 { pt3dadd( 320.788, 396.859, 36.12, 0.7044 ) }
    dend_35 { pt3dadd( 319.748, 396.51, 35.84, 0.483 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 88/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 396.167, 372.551, 33.1643, 0.4576 ) }
    dend_33 { pt3dadd( 396.592, 372.949, 33.2268, 0.383 ) }
    dend_33 { pt3dadd( 397.327, 373.715, 33.1453, 0.5418 ) }
    dend_33 { pt3dadd( 397.694, 374.592, 32.8703, 0.2386 ) }
    dend_33 { pt3dadd( 398.383, 375.357, 32.76, 0.2288 ) }
    dend_33 { pt3dadd( 399.317, 375.999, 32.7578, 0.2288 ) }
    dend_33 { pt3dadd( 400.109, 376.645, 32.76, 0.2288 ) }
    dend_33 { pt3dadd( 400.961, 377.384, 32.76, 0.2288 ) }
    dend_33 { pt3dadd( 401.664, 378.254, 32.76, 0.2668 ) }
    dend_33 { pt3dadd( 402.335, 379.142, 32.76, 0.2938 ) }
    dend_33 { pt3dadd( 403.284, 379.561, 33.2833, 0.2488 ) }
    dend_33 { pt3dadd( 404.294, 380.04, 32.9918, 0.563 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_33 { pt3dadd( 405.308, 380.345, 33.0333, 0.2896 ) }
    dend_33 { pt3dadd( 406.422, 380.406, 32.6018, 0.2288 ) }
    dend_33 { pt3dadd( 407.48, 380.75, 32.1376, 0.2288 ) }
    dend_33 { pt3dadd( 408.434, 381.316, 31.64, 0.312 ) }
    dend_33 { pt3dadd( 409.316, 382.017, 31.2348, 0.432 ) }
    dend_33 { pt3dadd( 410.207, 382.723, 31.08, 0.2672 ) }
    dend_33 { pt3dadd( 410.782, 383.674, 31.08, 0.2288 ) }
    dend_33 { pt3dadd( 411.738, 384.201, 31.1044, 0.2338 ) }
    dend_33 { pt3dadd( 412.25, 384.757, 32.608, 0.548 ) }
    dend_33 { pt3dadd( 413.268, 384.398, 32.226, 0.3612 ) }
    dend_33 { pt3dadd( 414.087, 384.613, 32.1314, 0.3848 ) }
    dend_33 { pt3dadd( 414.993, 385.036, 31.92, 0.4576 ) }
    dend_33 { pt3dadd( 415.961, 385.538, 31.7419, 0.4054 ) }
    dend_33 { pt3dadd( 416.614, 386.11, 31.309, 0.3974 ) }
    dend_33 { pt3dadd( 417.446, 386.483, 32.4512, 0.3586 ) }
    dend_33 { pt3dadd( 418.036, 386.958, 31.4381, 0.4566 ) }
    dend_33 { pt3dadd( 418.147, 387.973, 32.0832, 0.6568 ) }
    dend_33 { pt3dadd( 419.039, 388.159, 32.8843, 0.286 ) }
    dend_33 { pt3dadd( 419.686, 388.617, 33.6, 0.3346 ) }
    dend_33 { pt3dadd( 420.715, 388.804, 34.4226, 0.2684 ) }
    dend_33 { pt3dadd( 421.826, 388.625, 34.72, 0.2288 ) }
    dend_33 { pt3dadd( 422.689, 388.617, 33.3572, 0.572 ) }
    dend_33 { pt3dadd( 423.614, 388.968, 33.88, 0.4914 ) }
    dend_33 { pt3dadd( 424.477, 389.448, 33.8828, 0.3256 ) }
    dend_33 { pt3dadd( 425.527, 389.614, 34.5685, 0.4672 ) }
    dend_33 { pt3dadd( 426.635, 389.659, 34.7354, 0.661 ) }
    dend_33 { pt3dadd( 427.177, 390.335, 34.694, 0.8474 ) }
    dend_33 { pt3dadd( 427.812, 390.969, 34.9034, 0.4698 ) }
    dend_33 { pt3dadd( 427.993, 391.944, 34.1468, 0.2464 ) }
    dend_33 { pt3dadd( 428.508, 392.876, 34.7071, 0.421 ) }
    dend_33 { pt3dadd( 429.186, 393.68, 34.16, 0.5356 ) }
    dend_33 { pt3dadd( 429.94, 394.426, 34.16, 0.3814 ) }
    dend_33 { pt3dadd( 430.576, 395.239, 33.833, 0.377 ) }
    dend_33 { pt3dadd( 431.167, 395.976, 33.4718, 0.3882 ) }
    dend_33 { pt3dadd( 431.973, 396.505, 34.2622, 0.4156 ) }
    dend_33 { pt3dadd( 432.66, 397.181, 34.72, 0.23 ) }
    dend_33 { pt3dadd( 433.371, 397.721, 33.922, 0.3132 ) }
    dend_33 { pt3dadd( 434.202, 398.246, 33.6748, 0.471 ) }
    dend_33 { pt3dadd( 434.687, 398.567, 33.6417, 0.415 ) }
    dend_33 { pt3dadd( 435.584, 398.455, 33.796, 0.498 ) }
    dend_33 { pt3dadd( 436.678, 398.557, 33.88, 0.4836 ) }
    dend_33 { pt3dadd( 437.471, 398.716, 33.2741, 0.6224 ) }
    dend_33 { pt3dadd( 438.211, 398.74, 33.4642, 0.369 ) }
    dend_33 { pt3dadd( 439.026, 398.614, 33.6924, 0.5014 ) }
    dend_33 { pt3dadd( 439.982, 398.913, 32.76, 0.3814 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 45/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 396.167, 372.551, 33.1643, 0.4576 ) }
    dend_32 { pt3dadd( 396.282, 373.173, 34.72, 0.4322 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 47/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 261.611, 295.038, 18.62, 0.661 ) }
    dend_10 { pt3dadd( 261.558, 294.532, 16.9543, 0.2616 ) }
    dend_10 { pt3dadd( 260.976, 294.491, 15.1875, 0.3222 ) }
    dend_10 { pt3dadd( 259.902, 294.881, 15.218, 0.356 ) }
    dend_10 { pt3dadd( 258.877, 295.271, 15.7959, 0.3366 ) }
    dend_10 { pt3dadd( 258.012, 295.737, 17.2021, 0.2842 ) }
    dend_10 { pt3dadd( 257.27, 296.418, 18.1712, 0.243 ) }
    dend_10 { pt3dadd( 256.389, 296.908, 17.7859, 0.2288 ) }
    dend_10 { pt3dadd( 256.064, 296.354, 16.7219, 0.2288 ) }
    dend_10 { pt3dadd( 256.09, 295.296, 15.757, 0.2288 ) }
    dend_10 { pt3dadd( 255.898, 294.214, 16.0994, 0.2288 ) }
    dend_10 { pt3dadd( 255.613, 293.143, 16.7947, 0.2288 ) }
    dend_10 { pt3dadd( 255.382, 292.121, 17.8914, 0.2488 ) }
    dend_10 { pt3dadd( 254.613, 291.434, 18.7561, 0.2748 ) }
    dend_10 { pt3dadd( 253.554, 291.059, 19.1251, 0.3006 ) }
    dend_10 { pt3dadd( 252.642, 291.139, 17.7044, 0.283 ) }
    dend_10 { pt3dadd( 251.846, 291.53, 15.9541, 0.2568 ) }
    dend_10 { pt3dadd( 251.574, 291.039, 13.6618, 0.2294 ) }
    dend_10 { pt3dadd( 251.909, 290.004, 12.88, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 66/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 261.611, 295.038, 18.62, 0.661 ) }
    dend_7 { pt3dadd( 261.365, 294.634, 18.8754, 0.605 ) }
    dend_7 { pt3dadd( 260.93, 293.619, 19.4855, 0.7092 ) }
    dend_7 { pt3dadd( 260.621, 292.518, 19.6, 0.788 ) }
    dend_7 { pt3dadd( 260.559, 291.377, 19.6, 0.7626 ) }
    // Section: apic_23, id: apic_23, parent: apic_17 (entry count 71/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 248.388, 280.598, 49.28, 0.6356 ) }
    apic_23 { pt3dadd( 247.88, 280.42, 48.72, 0.483 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 73/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 248.388, 280.598, 49.28, 0.6356 ) }
    apic_18 { pt3dadd( 248.531, 279.479, 50.3552, 0.5864 ) }
    apic_18 { pt3dadd( 249.35, 278.986, 51.3752, 0.5226 ) }
    apic_18 { pt3dadd( 249.191, 278.035, 50.5926, 0.3814 ) }
    apic_18 { pt3dadd( 249.506, 277.151, 51.711, 0.484 ) }
    apic_18 { pt3dadd( 249.527, 276.281, 52.5893, 0.5512 ) }
    apic_18 { pt3dadd( 250.323, 275.666, 51.8263, 0.276 ) }
    apic_18 { pt3dadd( 250.546, 274.654, 52.3508, 0.5312 ) }
    apic_18 { pt3dadd( 250.903, 273.9, 52.4465, 0.2664 ) }
    apic_18 { pt3dadd( 250.879, 272.812, 52.92, 0.3414 ) }
    apic_18 { pt3dadd( 251.227, 271.885, 53.2734, 0.4748 ) }
    apic_18 { pt3dadd( 251.658, 271.239, 53.7068, 0.4744 ) }
    apic_18 { pt3dadd( 251.794, 270.458, 54.2497, 0.4576 ) }
    apic_18 { pt3dadd( 251.794, 269.545, 55.0642, 0.4576 ) }
    apic_18 { pt3dadd( 251.68, 268.847, 54.962, 0.6746 ) }
    apic_18 { pt3dadd( 252.19, 268.165, 55.5307, 0.23 ) }
    apic_18 { pt3dadd( 252.722, 267.355, 54.7929, 0.415 ) }
    apic_18 { pt3dadd( 253.148, 266.539, 56.1554, 0.4448 ) }
    apic_18 { pt3dadd( 253.732, 265.606, 56.203, 0.5338 ) }
    apic_18 { pt3dadd( 253.396, 264.725, 56.5452, 0.5084 ) }
    apic_18 { pt3dadd( 253.107, 263.778, 56.3046, 0.4576 ) }
    apic_18 { pt3dadd( 253.675, 262.849, 56.3634, 0.5008 ) }
    apic_18 { pt3dadd( 254.311, 262.22, 56.6989, 0.7786 ) }
    apic_18 { pt3dadd( 254.654, 261.404, 58.002, 0.5822 ) }
    apic_18 { pt3dadd( 254.581, 260.35, 57.6265, 0.2368 ) }
    apic_18 { pt3dadd( 253.919, 259.909, 56.7602, 0.2652 ) }
    apic_18 { pt3dadd( 253.731, 259.345, 57.5523, 0.743 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_18 { pt3dadd( 253.865, 258.558, 57.1096, 0.356 ) }
    apic_18 { pt3dadd( 254.804, 258.417, 57.148, 0.646 ) }
    apic_18 { pt3dadd( 255.633, 258.094, 58.0398, 0.4078 ) }
    apic_18 { pt3dadd( 256.332, 257.439, 58.3862, 0.3304 ) }
    apic_18 { pt3dadd( 257.345, 257.154, 58.7997, 0.5254 ) }
    apic_18 { pt3dadd( 258.147, 256.861, 60.1888, 0.357 ) }
    apic_18 { pt3dadd( 259.141, 256.485, 60.2, 0.486 ) }
    apic_18 { pt3dadd( 259.886, 256.899, 61.3021, 0.6138 ) }
    apic_18 { pt3dadd( 260.641, 257.514, 62.6268, 0.3814 ) }
    // Section: apic_16, id: apic_16, parent: apic_8 (entry count 9/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 222.966, 246.646, 60.48, 0.6102 ) }
    apic_16 { pt3dadd( 223.806, 247.008, 61.161, 0.5598 ) }
    apic_16 { pt3dadd( 224.224, 247.905, 59.92, 0.5592 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 12/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 222.966, 246.646, 60.48, 0.6102 ) }
    apic_9 { pt3dadd( 222.285, 246.133, 61.6753, 0.3778 ) }
    apic_9 { pt3dadd( 221.484, 245.588, 61.88, 0.3746 ) }
    apic_9 { pt3dadd( 221.006, 245.04, 60.1888, 0.4728 ) }
    apic_9 { pt3dadd( 220.471, 244.806, 60.76, 0.2542 ) }
    apic_9 { pt3dadd( 219.649, 244.13, 60.48, 0.4576 ) }
    apic_9 { pt3dadd( 219.222, 243.764, 62.5162, 0.4642 ) }
    apic_9 { pt3dadd( 218.632, 243.131, 63.4094, 0.5338 ) }
    apic_9 { pt3dadd( 218.374, 242.323, 64.4028, 0.6528 ) }
    apic_9 { pt3dadd( 217.562, 241.759, 64.3283, 0.618 ) }
    apic_9 { pt3dadd( 216.816, 240.934, 64.12, 0.7452 ) }
    apic_9 { pt3dadd( 216.07, 240.095, 64.3737, 1.0106 ) }
    apic_9 { pt3dadd( 215.465, 239.363, 65.2288, 1.0262 ) }
    apic_9 { pt3dadd( 215.018, 238.537, 66.0988, 0.8544 ) }
    apic_9 { pt3dadd( 214.125, 237.945, 66.5414, 0.6764 ) }
    apic_9 { pt3dadd( 213.374, 237.105, 66.6534, 0.6864 ) }
    apic_9 { pt3dadd( 213.469, 236.236, 66.9186, 0.5342 ) }
    apic_9 { pt3dadd( 212.62, 235.666, 65.8, 0.6716 ) }
    apic_9 { pt3dadd( 212.437, 234.775, 66.642, 0.3844 ) }
    apic_9 { pt3dadd( 211.75, 234.314, 67.0466, 0.6874 ) }
    apic_9 { pt3dadd( 211.252, 233.605, 67.7359, 0.964 ) }
    apic_9 { pt3dadd( 210.573, 232.78, 67.7757, 0.6868 ) }
    apic_9 { pt3dadd( 209.902, 232.041, 67.1216, 0.6562 ) }
    apic_9 { pt3dadd( 209.452, 231.192, 66.9393, 0.753 ) }
    apic_9 { pt3dadd( 208.995, 230.378, 67.6855, 0.706 ) }
    apic_9 { pt3dadd( 208.481, 229.69, 68.88, 0.8982 ) }
    apic_9 { pt3dadd( 207.979, 228.722, 68.698, 0.5138 ) }
    apic_9 { pt3dadd( 207.511, 228.228, 69.953, 0.775 ) }
    apic_9 { pt3dadd( 207.014, 227.491, 70.5186, 0.5848 ) }
    apic_9 { pt3dadd( 206.393, 226.694, 70.74, 0.9442 ) }
    apic_9 { pt3dadd( 205.577, 225.715, 68.9307, 0.4938 ) }
    apic_9 { pt3dadd( 205.007, 225.049, 69.7799, 0.6408 ) }
    apic_9 { pt3dadd( 204.355, 224.286, 69.19, 0.4576 ) }
    apic_9 { pt3dadd( 203.888, 223.761, 70.6776, 0.755 ) }
    apic_9 { pt3dadd( 203.696, 223.051, 70.6726, 0.6536 ) }
    apic_9 { pt3dadd( 202.979, 222.652, 71.4692, 0.944 ) }
    apic_9 { pt3dadd( 202.614, 221.697, 71.6864, 0.7072 ) }
    apic_9 { pt3dadd( 201.974, 221.012, 72.142, 0.745 ) }
    apic_9 { pt3dadd( 201.36, 220.156, 71.2379, 0.4872 ) }
    apic_9 { pt3dadd( 201.184, 219.909, 72.266, 0.2288 ) }
    apic_9 { pt3dadd( 200.812, 219.171, 73.67, 0.3314 ) }
    apic_9 { pt3dadd( 200.289, 218.226, 74.403, 0.3954 ) }
    apic_9 { pt3dadd( 199.846, 217.223, 73.7769, 0.5552 ) }
    apic_9 { pt3dadd( 199.523, 216.37, 72.6037, 0.553 ) }
    apic_9 { pt3dadd( 198.801, 215.57, 72.4802, 0.788 ) }
    apic_9 { pt3dadd( 198.24, 214.662, 72.0619, 0.4576 ) }
    apic_9 { pt3dadd( 198.016, 214.089, 74.1482, 0.5636 ) }
    apic_9 { pt3dadd( 197.508, 213.334, 75.0126, 0.8346 ) }
    apic_9 { pt3dadd( 196.917, 212.538, 74.6911, 0.4846 ) }
    apic_9 { pt3dadd( 196.547, 211.737, 75.3514, 0.6864 ) }
    apic_9 { pt3dadd( 195.971, 211.021, 75.7884, 0.9116 ) }
    apic_9 { pt3dadd( 195.655, 210.146, 75.7711, 0.6312 ) }
    apic_9 { pt3dadd( 194.963, 209.768, 74.2092, 0.9838 ) }
    apic_9 { pt3dadd( 194.594, 208.805, 75.0795, 0.79 ) }
    apic_9 { pt3dadd( 194.224, 207.935, 75.8545, 0.8526 ) }
    apic_9 { pt3dadd( 192.9, 206.724, 77.1, 0.847 ) }
    apic_9 { pt3dadd( 192.415, 206.031, 77.5869, 0.6596 ) }
    apic_9 { pt3dadd( 191.895, 205.39, 77.3111, 0.5134 ) }
    apic_9 { pt3dadd( 191.571, 204.654, 77.28, 0.5168 ) }
    apic_9 { pt3dadd( 190.86, 203.976, 77.9212, 1.0678 ) }
    apic_9 { pt3dadd( 190.769, 203.447, 79.8238, 0.7722 ) }
    apic_9 { pt3dadd( 190.247, 202.732, 80.0873, 0.8908 ) }
    apic_9 { pt3dadd( 190.028, 201.706, 80.2984, 0.7114 ) }
    apic_9 { pt3dadd( 189.247, 201.152, 80.0103, 0.7512 ) }
    apic_9 { pt3dadd( 189.007, 200.395, 78.5932, 0.7642 ) }
    apic_9 { pt3dadd( 188.765, 199.908, 80.1206, 0.449 ) }
    apic_9 { pt3dadd( 188.261, 199.229, 79.6816, 0.6318 ) }
    apic_9 { pt3dadd( 187.344, 198.747, 79.002, 0.8598 ) }
    apic_9 { pt3dadd( 186.643, 197.957, 79.469, 0.7172 ) }
    apic_9 { pt3dadd( 185.953, 197.46, 80.3799, 0.8908 ) }
    apic_9 { pt3dadd( 185.573, 197.198, 82.04, 0.839 ) }
    apic_9 { pt3dadd( 185.131, 196.19, 82.2343, 0.7372 ) }
    apic_9 { pt3dadd( 184.346, 195.418, 82.7114, 0.6626 ) }
    apic_9 { pt3dadd( 183.607, 194.623, 83.4165, 0.7622 ) }
    apic_9 { pt3dadd( 183.329, 193.548, 83.72, 0.9204 ) }
    apic_9 { pt3dadd( 182.72, 192.732, 83.5853, 0.723 ) }
    apic_9 { pt3dadd( 182.121, 191.829, 83.8956, 0.706 ) }
    apic_9 { pt3dadd( 181.477, 191.138, 82.88, 0.7626 ) }
    apic_9 { pt3dadd( 180.972, 190.209, 82.9116, 0.6076 ) }
    apic_9 { pt3dadd( 180.315, 189.418, 82.88, 0.7408 ) }
    apic_9 { pt3dadd( 179.608, 189.001, 83.54, 0.4638 ) }
    apic_9 { pt3dadd( 179.4, 188.181, 84.5513, 0.6102 ) }
    apic_9 { pt3dadd( 178.912, 187.33, 84.6866, 0.7382 ) }
    apic_9 { pt3dadd( 178.02, 186.758, 84.9971, 0.6784 ) }
    apic_9 { pt3dadd( 177.573, 185.824, 84.84, 0.5906 ) }
    apic_9 { pt3dadd( 177.092, 184.877, 84.0062, 0.8116 ) }
    apic_9 { pt3dadd( 176.61, 184.083, 84.0118, 0.642 ) }
    apic_9 { pt3dadd( 175.84, 183.495, 84.5995, 0.8348 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_9 { pt3dadd( 175.487, 182.944, 85.8561, 0.6696 ) }
    apic_9 { pt3dadd( 174.934, 182.158, 86.6746, 0.483 ) }
    apic_9 { pt3dadd( 174.677, 181.324, 85.9636, 0.8614 ) }
    apic_9 { pt3dadd( 174.34, 180.595, 87.08, 0.7494 ) }
    apic_9 { pt3dadd( 173.639, 179.934, 86.8935, 0.8218 ) }
    apic_9 { pt3dadd( 173.381, 178.975, 86.8045, 0.6848 ) }
    apic_9 { pt3dadd( 173.077, 178.332, 87.3152, 0.4776 ) }
    apic_9 { pt3dadd( 172.829, 177.423, 86.133, 0.6102 ) }
    apic_9 { pt3dadd( 172.058, 176.698, 86.5354, 0.8136 ) }
    apic_9 { pt3dadd( 171.694, 176.128, 88.2837, 0.6772 ) }
    apic_9 { pt3dadd( 171.199, 175.261, 89.0798, 0.4704 ) }
    apic_9 { pt3dadd( 170.662, 174.683, 89.7005, 0.6736 ) }
    apic_9 { pt3dadd( 170.156, 173.745, 88.7788, 0.5832 ) }
    apic_9 { pt3dadd( 169.508, 173.054, 89.32, 0.659 ) }
    apic_9 { pt3dadd( 169.073, 172.38, 88.2059, 0.6198 ) }
    apic_9 { pt3dadd( 168.337, 171.695, 88.4366, 0.3562 ) }
    apic_9 { pt3dadd( 167.583, 171.261, 89.6221, 0.7774 ) }
    apic_9 { pt3dadd( 167.068, 170.576, 90.72, 0.6974 ) }
    apic_9 { pt3dadd( 166.692, 169.577, 90.9504, 0.5472 ) }
    apic_9 { pt3dadd( 166.01, 168.68, 90.8214, 0.723 ) }
    apic_9 { pt3dadd( 165.533, 167.865, 89.4449, 0.9818 ) }
    apic_9 { pt3dadd( 164.776, 167.209, 89.5843, 0.8522 ) }
    apic_9 { pt3dadd( 164.202, 166.258, 89.6132, 0.733 ) }
    apic_9 { pt3dadd( 163.883, 165.66, 91.0482, 0.674 ) }
    apic_9 { pt3dadd( 163.701, 164.641, 90.5915, 0.675 ) }
    apic_9 { pt3dadd( 163.396, 163.616, 91.0115, 0.4682 ) }
    apic_9 { pt3dadd( 163.331, 162.735, 91.56, 0.4458 ) }
    apic_9 { pt3dadd( 162.835, 161.907, 91.9881, 0.6982 ) }
    apic_9 { pt3dadd( 162.079, 161.137, 92.694, 0.5962 ) }
    apic_9 { pt3dadd( 161.176, 160.507, 93.1837, 0.4754 ) }
    apic_9 { pt3dadd( 160.76, 159.505, 93.2467, 0.4068 ) }
    apic_9 { pt3dadd( 160.256, 158.572, 93.7045, 0.4188 ) }
    apic_9 { pt3dadd( 159.749, 157.923, 93.0404, 0.5796 ) }
    apic_9 { pt3dadd( 159.461, 156.962, 93.5558, 0.5354 ) }
    apic_9 { pt3dadd( 159.135, 156.029, 94.5098, 0.4412 ) }
    apic_9 { pt3dadd( 158.604, 155.166, 95.1686, 0.3476 ) }
    apic_9 { pt3dadd( 158.288, 154.089, 94.92, 0.2384 ) }
    apic_9 { pt3dadd( 157.753, 153.217, 95.2812, 0.6454 ) }
    apic_9 { pt3dadd( 157.424, 152.129, 95.2, 0.6568 ) }
    apic_9 { pt3dadd( 157.057, 151.055, 95.4198, 0.583 ) }
    apic_9 { pt3dadd( 156.662, 150.198, 96.8103, 0.521 ) }
    apic_9 { pt3dadd( 156.23, 149.4, 97.7693, 0.5202 ) }
    apic_9 { pt3dadd( 155.758, 148.598, 97.071, 0.7822 ) }
    apic_9 { pt3dadd( 155.332, 147.764, 96.9422, 0.6244 ) }
    apic_9 { pt3dadd( 154.898, 146.955, 98.4326, 0.2802 ) }
    apic_9 { pt3dadd( 154.324, 146.061, 98.84, 0.2288 ) }
    apic_9 { pt3dadd( 153.605, 145.314, 98.8308, 0.2364 ) }
    apic_9 { pt3dadd( 152.816, 144.54, 98.4931, 0.3796 ) }
    apic_9 { pt3dadd( 152.246, 143.593, 98.7792, 0.3692 ) }
    apic_9 { pt3dadd( 151.554, 142.862, 99.12, 0.6244 ) }
    apic_9 { pt3dadd( 150.756, 142.264, 98.7109, 0.4576 ) }
    apic_9 { pt3dadd( 149.993, 141.833, 99.6128, 0.5338 ) }
    apic_9 { pt3dadd( 149.7, 140.942, 100.614, 0.6784 ) }
    apic_9 { pt3dadd( 149.37, 139.933, 101.39, 0.4168 ) }
    apic_9 { pt3dadd( 149.159, 138.855, 102.012, 0.248 ) }
    apic_9 { pt3dadd( 148.519, 137.926, 102.2, 0.2288 ) }
    apic_9 { pt3dadd( 147.655, 137.314, 102.467, 0.2288 ) }
    apic_9 { pt3dadd( 146.994, 136.424, 102.48, 0.2672 ) }
    apic_9 { pt3dadd( 146.475, 135.46, 102.787, 0.345 ) }
    apic_9 { pt3dadd( 146.215, 134.435, 103.141, 0.327 ) }
    apic_9 { pt3dadd( 145.756, 133.545, 103.9, 0.2288 ) }
    apic_9 { pt3dadd( 145.342, 132.52, 104.16, 0.2288 ) }
    apic_9 { pt3dadd( 144.477, 131.895, 104.227, 0.245 ) }
    apic_9 { pt3dadd( 143.708, 131.117, 104.429, 0.4232 ) }
    apic_9 { pt3dadd( 143.562, 130.569, 106.387, 0.334 ) }
    apic_9 { pt3dadd( 143.12, 129.718, 106.699, 0.3878 ) }
    apic_9 { pt3dadd( 142.781, 128.793, 106.238, 0.4576 ) }
    apic_9 { pt3dadd( 142.426, 127.861, 106.788, 0.3814 ) }
    apic_9 { pt3dadd( 142.078, 127.046, 107.8, 0.3428 ) }
    apic_9 { pt3dadd( 141.704, 125.992, 107.8, 0.3814 ) }
    apic_9 { pt3dadd( 141.068, 125.109, 107.825, 0.265 ) }
    apic_9 { pt3dadd( 140.229, 124.528, 108.547, 0.2288 ) }
    apic_9 { pt3dadd( 139.455, 123.706, 108.64, 0.2288 ) }
    apic_9 { pt3dadd( 138.859, 122.965, 109.482, 0.2288 ) }
    apic_9 { pt3dadd( 138.534, 122.02, 109.913, 0.2624 ) }
    apic_9 { pt3dadd( 137.952, 121.089, 110.247, 0.2382 ) }
    apic_9 { pt3dadd( 137.192, 120.313, 111.055, 0.3028 ) }
    apic_9 { pt3dadd( 136.703, 119.311, 111.517, 0.4068 ) }
    apic_9 { pt3dadd( 136.16, 118.338, 112.0, 0.324 ) }
    apic_9 { pt3dadd( 136.033, 117.324, 112.572, 0.232 ) }
    apic_9 { pt3dadd( 136.23, 116.288, 113.346, 0.2682 ) }
    apic_9 { pt3dadd( 136.086, 115.179, 113.68, 0.2974 ) }
    apic_9 { pt3dadd( 135.768, 114.082, 113.68, 0.4576 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 83/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 376.376, 367.873, 43.7732, 0.305 ) }
    dend_40 { pt3dadd( 377.117, 367.156, 44.8291, 0.4846 ) }
    dend_40 { pt3dadd( 378.01, 366.806, 45.0825, 0.3044 ) }
    dend_40 { pt3dadd( 378.685, 366.095, 45.1637, 0.3236 ) }
    dend_40 { pt3dadd( 379.168, 365.337, 45.9732, 0.4068 ) }
    dend_40 { pt3dadd( 380.02, 364.793, 46.6575, 0.4894 ) }
    dend_40 { pt3dadd( 380.609, 364.242, 47.6966, 0.4182 ) }
    dend_40 { pt3dadd( 380.936, 363.316, 47.1383, 0.428 ) }
    dend_40 { pt3dadd( 381.467, 362.402, 47.3833, 0.2346 ) }
    dend_40 { pt3dadd( 382.216, 361.554, 47.32, 0.2288 ) }
    dend_40 { pt3dadd( 382.937, 360.818, 47.32, 0.2288 ) }
    dend_40 { pt3dadd( 383.949, 360.493, 47.3088, 0.238 ) }
    dend_40 { pt3dadd( 384.731, 359.787, 47.0977, 0.2892 ) }
    dend_40 { pt3dadd( 385.491, 359.052, 47.6, 0.306 ) }
    dend_40 { pt3dadd( 385.811, 357.995, 47.8464, 0.4068 ) }
    dend_40 { pt3dadd( 386.392, 357.031, 47.5714, 0.2584 ) }
    dend_40 { pt3dadd( 387.435, 356.92, 47.2458, 0.2814 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_40 { pt3dadd( 388.52, 356.756, 47.8979, 0.275 ) }
    dend_40 { pt3dadd( 389.403, 356.096, 47.978, 0.2434 ) }
    dend_40 { pt3dadd( 390.06, 355.16, 47.978, 0.2288 ) }
    dend_40 { pt3dadd( 390.706, 354.22, 48.1034, 0.2288 ) }
    dend_40 { pt3dadd( 391.375, 353.311, 48.5416, 0.2288 ) }
    dend_40 { pt3dadd( 392.044, 352.4, 48.9796, 0.2288 ) }
    dend_40 { pt3dadd( 392.714, 351.489, 49.4178, 0.2288 ) }
    dend_40 { pt3dadd( 393.383, 350.58, 49.856, 0.2288 ) }
    dend_40 { pt3dadd( 393.892, 349.569, 50.0055, 0.2288 ) }
    dend_40 { pt3dadd( 394.316, 348.507, 50.0055, 0.2288 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 10/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 376.376, 367.873, 43.7732, 0.305 ) }
    dend_39 { pt3dadd( 375.918, 367.682, 43.68, 0.305 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 319.748, 396.51, 35.84, 0.483 ) }
    dend_37 { pt3dadd( 319.987, 397.26, 36.0366, 0.6826 ) }
    dend_37 { pt3dadd( 320.471, 397.999, 35.2884, 0.4554 ) }
    dend_37 { pt3dadd( 321.426, 397.908, 36.2471, 0.424 ) }
    dend_37 { pt3dadd( 321.442, 398.52, 38.3443, 0.3448 ) }
    dend_37 { pt3dadd( 321.636, 399.46, 38.5795, 0.2418 ) }
    dend_37 { pt3dadd( 322.062, 400.025, 37.24, 0.3966 ) }
    dend_37 { pt3dadd( 322.526, 400.933, 36.9874, 0.4292 ) }
    dend_37 { pt3dadd( 322.773, 401.997, 36.9496, 0.3132 ) }
    dend_37 { pt3dadd( 323.179, 402.679, 35.3444, 0.257 ) }
    dend_37 { pt3dadd( 323.603, 403.26, 33.8366, 0.2542 ) }
    dend_37 { pt3dadd( 323.867, 404.176, 33.8803, 0.2544 ) }
    dend_37 { pt3dadd( 324.665, 404.573, 34.5604, 0.2412 ) }
    dend_37 { pt3dadd( 325.239, 404.903, 35.331, 0.4954 ) }
    dend_37 { pt3dadd( 325.255, 406.03, 35.6014, 0.431 ) }
    dend_37 { pt3dadd( 325.256, 407.153, 35.84, 0.3856 ) }
    dend_37 { pt3dadd( 325.435, 408.144, 36.6506, 0.3814 ) }
    dend_37 { pt3dadd( 325.471, 409.147, 35.6468, 0.3814 ) }
    dend_37 { pt3dadd( 325.736, 409.877, 37.1683, 0.2718 ) }
    dend_37 { pt3dadd( 325.697, 410.888, 36.8656, 0.5528 ) }
    dend_37 { pt3dadd( 325.81, 411.898, 35.8918, 0.3788 ) }
    dend_37 { pt3dadd( 325.683, 413.01, 36.0612, 0.6544 ) }
    dend_37 { pt3dadd( 325.689, 414.09, 36.251, 0.8452 ) }
    dend_37 { pt3dadd( 325.357, 415.043, 36.3311, 0.6158 ) }
    dend_37 { pt3dadd( 325.609, 415.96, 37.6037, 0.6864 ) }
    dend_37 { pt3dadd( 325.804, 416.863, 37.3937, 0.5138 ) }
    dend_37 { pt3dadd( 326.043, 417.712, 37.8328, 0.2348 ) }
    dend_37 { pt3dadd( 326.3, 418.777, 37.2907, 0.3422 ) }
    dend_37 { pt3dadd( 326.577, 419.853, 36.6489, 0.5382 ) }
    dend_37 { pt3dadd( 326.956, 420.666, 37.4965, 0.5842 ) }
    dend_37 { pt3dadd( 327.121, 421.504, 38.5434, 0.5404 ) }
    dend_37 { pt3dadd( 326.726, 422.337, 37.5738, 0.579 ) }
    dend_37 { pt3dadd( 326.726, 423.41, 38.1671, 0.6266 ) }
    dend_37 { pt3dadd( 326.44, 424.44, 38.4423, 0.6012 ) }
    dend_37 { pt3dadd( 326.371, 425.416, 38.7649, 0.5084 ) }
    dend_37 { pt3dadd( 326.279, 426.42, 39.2269, 0.5558 ) }
    dend_37 { pt3dadd( 326.407, 426.887, 41.2261, 0.491 ) }
    dend_37 { pt3dadd( 326.602, 427.681, 40.0582, 0.6154 ) }
    dend_37 { pt3dadd( 326.611, 428.531, 39.8115, 0.437 ) }
    dend_37 { pt3dadd( 326.691, 429.01, 40.4762, 0.3664 ) }
    dend_37 { pt3dadd( 327.181, 429.819, 40.2114, 0.3794 ) }
    dend_37 { pt3dadd( 327.629, 430.739, 40.88, 0.6096 ) }
    dend_37 { pt3dadd( 327.645, 431.881, 40.9004, 0.552 ) }
    dend_37 { pt3dadd( 327.756, 432.758, 42.0, 0.2736 ) }
    dend_37 { pt3dadd( 327.424, 433.69, 41.7236, 0.6864 ) }
    dend_37 { pt3dadd( 327.03, 434.321, 41.8681, 0.519 ) }
    dend_37 { pt3dadd( 327.07, 435.149, 40.6, 0.6164 ) }
    dend_37 { pt3dadd( 327.177, 436.085, 41.8146, 0.3406 ) }
    dend_37 { pt3dadd( 326.845, 436.661, 42.8425, 0.38 ) }
    dend_37 { pt3dadd( 326.573, 437.603, 43.4308, 0.6606 ) }
    dend_37 { pt3dadd( 326.896, 438.509, 44.7199, 0.3196 ) }
    dend_37 { pt3dadd( 327.192, 439.457, 43.692, 0.4126 ) }
    dend_37 { pt3dadd( 327.53, 440.541, 43.8869, 0.6158 ) }
    dend_37 { pt3dadd( 328.262, 441.282, 44.4058, 0.4436 ) }
    dend_37 { pt3dadd( 328.749, 442.247, 44.3265, 0.3542 ) }
    dend_37 { pt3dadd( 328.878, 442.957, 43.5341, 0.2432 ) }
    dend_37 { pt3dadd( 328.946, 444.0, 43.3107, 0.3232 ) }
    dend_37 { pt3dadd( 329.751, 444.595, 42.574, 0.2288 ) }
    dend_37 { pt3dadd( 330.077, 445.677, 42.56, 0.2288 ) }
    dend_37 { pt3dadd( 330.376, 446.753, 42.7403, 0.434 ) }
    dend_37 { pt3dadd( 330.405, 447.179, 44.6519, 0.3184 ) }
    dend_37 { pt3dadd( 330.733, 447.741, 46.5478, 0.356 ) }
    dend_37 { pt3dadd( 330.957, 448.606, 45.9763, 0.4782 ) }
    dend_37 { pt3dadd( 331.157, 449.61, 45.92, 0.2542 ) }
    dend_37 { pt3dadd( 331.372, 450.614, 46.879, 0.483 ) }
    dend_37 { pt3dadd( 331.467, 451.739, 47.2268, 0.393 ) }
    dend_37 { pt3dadd( 331.682, 452.841, 47.4578, 0.3172 ) }
    dend_37 { pt3dadd( 331.76, 453.526, 47.6854, 0.4146 ) }
    dend_37 { pt3dadd( 332.103, 454.091, 48.4089, 0.6864 ) }
    dend_37 { pt3dadd( 332.461, 454.864, 47.88, 0.6404 ) }
    dend_37 { pt3dadd( 332.904, 455.541, 46.76, 0.3814 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 83/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 319.748, 396.51, 35.84, 0.483 ) }
    dend_36 { pt3dadd( 318.836, 396.55, 36.9866, 0.501 ) }
    dend_36 { pt3dadd( 318.721, 395.938, 36.1304, 0.4576 ) }
    dend_36 { pt3dadd( 317.978, 395.257, 35.8204, 0.3506 ) }
    dend_36 { pt3dadd( 317.174, 394.681, 35.7185, 0.3394 ) }
    dend_36 { pt3dadd( 316.242, 394.232, 36.6596, 0.3814 ) }
    dend_36 { pt3dadd( 315.286, 393.879, 35.84, 0.483 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 90/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 260.559, 291.377, 19.6, 0.7626 ) }
    dend_9 { pt3dadd( 261.211, 291.167, 23.0731, 0.264 ) }
    dend_9 { pt3dadd( 261.332, 291.735, 25.429, 0.3014 ) }
    dend_9 { pt3dadd( 261.34, 292.518, 27.4683, 0.3304 ) }
    dend_9 { pt3dadd( 261.052, 292.654, 29.4815, 0.3304 ) }
    dend_9 { pt3dadd( 260.233, 292.136, 30.6804, 0.3156 ) }
    dend_9 { pt3dadd( 259.17, 291.987, 31.3396, 0.305 ) }
    dend_9 { pt3dadd( 258.053, 292.146, 31.5524, 0.305 ) }
    dend_9 { pt3dadd( 256.954, 292.0, 31.2376, 0.2876 ) }
    dend_9 { pt3dadd( 255.883, 291.798, 31.7621, 0.2618 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_9 { pt3dadd( 254.997, 292.18, 32.9613, 0.2358 ) }
    dend_9 { pt3dadd( 254.207, 292.922, 33.7809, 0.2288 ) }
    dend_9 { pt3dadd( 253.831, 293.878, 33.0526, 0.249 ) }
    dend_9 { pt3dadd( 253.907, 294.736, 31.2824, 0.2956 ) }
    dend_9 { pt3dadd( 253.217, 295.333, 29.9491, 0.3486 ) }
    dend_9 { pt3dadd( 252.114, 295.441, 29.9594, 0.4032 ) }
    dend_9 { pt3dadd( 251.451, 295.038, 31.92, 0.4576 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 7/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 260.559, 291.377, 19.6, 0.7626 ) }
    dend_8 { pt3dadd( 260.014, 289.921, 19.6003, 0.6224 ) }
    dend_8 { pt3dadd( 259.345, 288.995, 19.6011, 0.678 ) }
    dend_8 { pt3dadd( 258.729, 288.032, 19.605, 0.6652 ) }
    dend_8 { pt3dadd( 258.369, 286.952, 19.6297, 0.618 ) }
    dend_8 { pt3dadd( 258.351, 285.819, 19.8562, 0.545 ) }
    dend_8 { pt3dadd( 258.559, 284.699, 19.7708, 0.4894 ) }
    dend_8 { pt3dadd( 258.744, 283.571, 19.696, 0.4382 ) }
    dend_8 { pt3dadd( 258.732, 282.448, 20.1611, 0.4096 ) }
    dend_8 { pt3dadd( 258.689, 281.324, 20.678, 0.3834 ) }
    dend_8 { pt3dadd( 258.856, 280.195, 20.722, 0.428 ) }
    dend_8 { pt3dadd( 259.197, 279.105, 20.7326, 0.5258 ) }
    dend_8 { pt3dadd( 259.472, 277.995, 20.8085, 0.628 ) }
    dend_8 { pt3dadd( 259.314, 276.889, 21.3156, 0.6836 ) }
    dend_8 { pt3dadd( 259.224, 275.767, 21.8182, 0.6378 ) }
    dend_8 { pt3dadd( 259.163, 274.625, 21.845, 0.6114 ) }
    dend_8 { pt3dadd( 258.814, 273.538, 21.8708, 0.5364 ) }
    dend_8 { pt3dadd( 258.333, 272.502, 22.0217, 0.5088 ) }
    dend_8 { pt3dadd( 258.148, 271.421, 22.8038, 0.4332 ) }
    dend_8 { pt3dadd( 257.405, 270.561, 23.0583, 0.4322 ) }
    dend_8 { pt3dadd( 257.376, 269.459, 23.7723, 0.4338 ) }
    dend_8 { pt3dadd( 257.399, 268.317, 23.6776, 0.4576 ) }
    dend_8 { pt3dadd( 257.387, 267.204, 23.1045, 0.4576 ) }
    dend_8 { pt3dadd( 257.319, 266.073, 23.4097, 0.4602 ) }
    dend_8 { pt3dadd( 257.097, 264.962, 23.3033, 0.4884 ) }
    dend_8 { pt3dadd( 257.172, 263.853, 23.949, 0.5444 ) }
    dend_8 { pt3dadd( 257.111, 262.733, 24.2225, 0.6184 ) }
    dend_8 { pt3dadd( 256.718, 261.7, 24.6588, 0.6566 ) }
    dend_8 { pt3dadd( 256.768, 260.591, 25.1857, 0.6154 ) }
    dend_8 { pt3dadd( 256.505, 259.479, 25.2347, 0.5008 ) }
    dend_8 { pt3dadd( 256.095, 258.423, 25.4514, 0.3642 ) }
    dend_8 { pt3dadd( 255.667, 257.406, 25.9174, 0.2986 ) }
    dend_8 { pt3dadd( 255.607, 256.278, 25.9837, 0.2866 ) }
    dend_8 { pt3dadd( 255.774, 255.197, 26.7282, 0.305 ) }
    dend_8 { pt3dadd( 256.148, 254.16, 27.2308, 0.3134 ) }
    dend_8 { pt3dadd( 256.438, 253.073, 27.1474, 0.348 ) }
    dend_8 { pt3dadd( 256.466, 251.936, 27.3862, 0.3992 ) }
    dend_8 { pt3dadd( 256.449, 250.792, 27.4484, 0.4322 ) }
    dend_8 { pt3dadd( 256.602, 249.675, 27.4938, 0.4226 ) }
    dend_8 { pt3dadd( 256.868, 248.584, 27.7956, 0.3872 ) }
    dend_8 { pt3dadd( 256.836, 247.476, 28.4071, 0.3764 ) }
    dend_8 { pt3dadd( 256.539, 246.411, 29.0318, 0.4276 ) }
    dend_8 { pt3dadd( 256.118, 245.372, 29.5506, 0.5214 ) }
    dend_8 { pt3dadd( 255.715, 244.306, 29.766, 0.6102 ) }
    dend_8 { pt3dadd( 255.303, 243.257, 30.1381, 0.6102 ) }
    dend_8 { pt3dadd( 254.978, 242.185, 30.6589, 0.5652 ) }
    dend_8 { pt3dadd( 254.685, 241.084, 30.8904, 0.5198 ) }
    dend_8 { pt3dadd( 254.397, 239.995, 31.2897, 0.5572 ) }
    dend_8 { pt3dadd( 254.365, 238.899, 31.7878, 0.621 ) }
    dend_8 { pt3dadd( 254.564, 237.776, 31.9194, 0.6734 ) }
    dend_8 { pt3dadd( 254.645, 236.639, 31.9155, 0.6616 ) }
    dend_8 { pt3dadd( 254.583, 235.497, 31.885, 0.586 ) }
    dend_8 { pt3dadd( 254.224, 234.458, 31.5837, 0.4698 ) }
    dend_8 { pt3dadd( 254.109, 233.481, 30.8118, 0.356 ) }
    dend_8 { pt3dadd( 254.554, 232.779, 32.1006, 0.3304 ) }
    dend_8 { pt3dadd( 254.694, 231.755, 32.4584, 0.3304 ) }
    dend_8 { pt3dadd( 254.911, 230.651, 32.0104, 0.3304 ) }
    dend_8 { pt3dadd( 255.041, 229.52, 31.9483, 0.2876 ) }
    dend_8 { pt3dadd( 255.056, 228.386, 32.2728, 0.2562 ) }
    dend_8 { pt3dadd( 256.042, 227.923, 32.51, 0.2542 ) }
    dend_8 { pt3dadd( 256.942, 227.77, 34.16, 0.356 ) }
    // Section: apic_22, id: apic_22, parent: apic_18 (entry count 68/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 260.641, 257.514, 62.6268, 0.3814 ) }
    apic_22 { pt3dadd( 260.374, 257.514, 63.0, 0.3304 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 70/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 260.641, 257.514, 62.6268, 0.3814 ) }
    apic_19 { pt3dadd( 261.44, 258.18, 63.7185, 0.5006 ) }
    apic_19 { pt3dadd( 261.946, 257.866, 65.1568, 0.2288 ) }
    apic_19 { pt3dadd( 262.469, 258.383, 66.36, 0.2288 ) }
    apic_19 { pt3dadd( 263.154, 258.758, 64.6996, 0.3936 ) }
    apic_19 { pt3dadd( 264.015, 259.017, 63.9954, 0.4322 ) }
    apic_19 { pt3dadd( 265.007, 259.43, 63.84, 0.5444 ) }
    apic_19 { pt3dadd( 265.675, 259.598, 65.3114, 0.538 ) }
    apic_19 { pt3dadd( 266.507, 259.456, 65.9789, 0.4392 ) }
    apic_19 { pt3dadd( 267.071, 258.678, 66.6439, 0.5274 ) }
    apic_19 { pt3dadd( 268.023, 258.628, 67.4579, 0.2866 ) }
    apic_19 { pt3dadd( 268.632, 257.966, 67.7295, 0.4336 ) }
    apic_19 { pt3dadd( 269.569, 257.376, 68.2223, 0.4876 ) }
    apic_19 { pt3dadd( 270.326, 256.834, 68.8433, 0.305 ) }
    apic_19 { pt3dadd( 270.148, 256.608, 66.3426, 0.3668 ) }
    apic_19 { pt3dadd( 270.787, 256.598, 65.24, 0.305 ) }
    apic_19 { pt3dadd( 271.128, 256.47, 66.9774, 0.4798 ) }
    apic_19 { pt3dadd( 271.582, 256.333, 69.3199, 0.6998 ) }
    apic_19 { pt3dadd( 272.462, 255.976, 69.1911, 0.466 ) }
    apic_19 { pt3dadd( 272.945, 255.393, 70.7585, 0.2288 ) }
    apic_19 { pt3dadd( 273.416, 254.841, 70.0694, 0.4164 ) }
    apic_19 { pt3dadd( 274.07, 254.205, 70.6558, 0.4086 ) }
    apic_19 { pt3dadd( 275.069, 253.807, 70.5488, 0.5384 ) }
    apic_19 { pt3dadd( 275.719, 252.951, 70.8397, 0.4056 ) }
    apic_19 { pt3dadd( 276.718, 252.7, 70.4701, 0.2288 ) }
    apic_19 { pt3dadd( 277.27, 252.481, 72.3192, 0.2288 ) }
    apic_19 { pt3dadd( 278.28, 252.176, 73.1259, 0.2446 ) }
    apic_19 { pt3dadd( 279.311, 251.736, 73.36, 0.3346 ) }
    apic_19 { pt3dadd( 280.08, 250.946, 73.8038, 0.3814 ) }
    apic_19 { pt3dadd( 280.579, 250.031, 74.1401, 0.4098 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    apic_19 { pt3dadd( 281.48, 249.621, 73.64, 0.2628 ) }
    apic_19 { pt3dadd( 282.11, 248.972, 74.7093, 0.427 ) }
    apic_19 { pt3dadd( 282.193, 247.968, 74.8362, 0.4794 ) }
    apic_19 { pt3dadd( 282.738, 247.255, 75.9433, 0.4576 ) }
    apic_19 { pt3dadd( 283.471, 246.867, 76.979, 0.237 ) }
    apic_19 { pt3dadd( 283.703, 245.788, 76.72, 0.2288 ) }
    apic_19 { pt3dadd( 283.929, 244.691, 76.72, 0.2288 ) }
    apic_19 { pt3dadd( 284.831, 244.038, 76.7138, 0.2288 ) }
    apic_19 { pt3dadd( 285.306, 243.123, 76.44, 0.2288 ) }
    apic_19 { pt3dadd( 285.489, 242.416, 77.8445, 0.3014 ) }
    apic_19 { pt3dadd( 285.476, 241.608, 78.1063, 0.5154 ) }
    apic_19 { pt3dadd( 286.166, 240.771, 78.4, 0.4692 ) }
    apic_19 { pt3dadd( 286.479, 239.834, 79.2714, 0.3814 ) }
    apic_19 { pt3dadd( 287.425, 239.297, 79.3766, 0.5406 ) }
    apic_19 { pt3dadd( 288.409, 238.919, 80.0892, 0.2288 ) }
    apic_19 { pt3dadd( 288.655, 238.276, 82.0187, 0.3988 ) }
    apic_19 { pt3dadd( 289.334, 238.181, 80.421, 0.3486 ) }
    apic_19 { pt3dadd( 289.763, 237.615, 78.797, 0.6642 ) }
    apic_19 { pt3dadd( 290.241, 237.792, 79.8389, 0.3814 ) }
    apic_19 { pt3dadd( 290.821, 237.027, 81.3596, 0.3814 ) }
    apic_19 { pt3dadd( 291.402, 236.261, 82.88, 0.3814 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 21/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 135.768, 114.082, 113.68, 0.4576 ) }
    apic_11 { pt3dadd( 135.399, 113.606, 114.21, 0.6102 ) }
    apic_11 { pt3dadd( 134.671, 113.058, 113.126, 0.5544 ) }
    apic_11 { pt3dadd( 134.284, 112.995, 114.611, 0.6552 ) }
    apic_11 { pt3dadd( 133.777, 112.732, 116.48, 0.483 ) }
    apic_11 { pt3dadd( 133.072, 112.094, 117.708, 0.555 ) }
    apic_11 { pt3dadd( 132.975, 111.135, 118.623, 0.5008 ) }
    apic_11 { pt3dadd( 132.341, 110.395, 118.454, 0.3126 ) }
    apic_11 { pt3dadd( 131.56, 110.001, 119.576, 0.546 ) }
    apic_11 { pt3dadd( 131.211, 109.33, 121.222, 0.2906 ) }
    apic_11 { pt3dadd( 130.637, 108.794, 122.293, 0.411 ) }
    apic_11 { pt3dadd( 129.961, 108.295, 121.293, 0.53 ) }
    apic_11 { pt3dadd( 129.523, 107.985, 122.703, 0.2628 ) }
    apic_11 { pt3dadd( 129.725, 107.373, 124.25, 0.2956 ) }
    apic_11 { pt3dadd( 129.289, 106.854, 123.705, 0.4576 ) }
    apic_11 { pt3dadd( 128.595, 106.322, 124.88, 0.4628 ) }
    apic_11 { pt3dadd( 128.343, 105.299, 125.535, 0.3304 ) }
    apic_11 { pt3dadd( 127.455, 104.808, 126.28, 0.2288 ) }
    apic_11 { pt3dadd( 126.897, 104.003, 127.073, 0.521 ) }
    apic_11 { pt3dadd( 125.942, 103.402, 127.12, 0.553 ) }
    apic_11 { pt3dadd( 125.174, 102.852, 127.912, 0.3814 ) }
    apic_11 { pt3dadd( 124.452, 102.635, 129.64, 0.2542 ) }
    apic_11 { pt3dadd( 123.569, 101.967, 129.92, 0.2666 ) }
    apic_11 { pt3dadd( 122.823, 101.304, 130.735, 0.253 ) }
    apic_11 { pt3dadd( 121.803, 100.81, 130.76, 0.262 ) }
    apic_11 { pt3dadd( 120.944, 100.405, 131.224, 0.4016 ) }
    apic_11 { pt3dadd( 120.075, 99.7797, 130.684, 0.3698 ) }
    apic_11 { pt3dadd( 119.406, 99.3095, 129.199, 0.2604 ) }
    apic_11 { pt3dadd( 118.515, 99.143, 128.666, 0.2288 ) }
    apic_11 { pt3dadd( 117.67, 98.5148, 128.24, 0.2288 ) }
    apic_11 { pt3dadd( 116.55, 98.384, 128.436, 0.2288 ) }
    apic_11 { pt3dadd( 115.409, 98.384, 128.52, 0.2388 ) }
    apic_11 { pt3dadd( 114.517, 98.384, 129.778, 0.3238 ) }
    apic_11 { pt3dadd( 113.896, 98.4984, 132.006, 0.4576 ) }
    apic_11 { pt3dadd( 113.011, 98.9001, 132.085, 0.5736 ) }
    apic_11 { pt3dadd( 112.094, 99.2735, 131.33, 0.4836 ) }
    apic_11 { pt3dadd( 111.18, 99.3057, 131.068, 0.427 ) }
    apic_11 { pt3dadd( 110.123, 99.362, 131.04, 0.4574 ) }
    apic_11 { pt3dadd( 109.268, 99.4342, 132.02, 0.4862 ) }
    apic_11 { pt3dadd( 108.375, 99.0196, 131.631, 0.6356 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 61/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 135.768, 114.082, 113.68, 0.4576 ) }
    apic_10 { pt3dadd( 135.398, 113.557, 113.96, 0.6764 ) }
    apic_10 { pt3dadd( 134.878, 112.78, 114.747, 0.6432 ) }
    apic_10 { pt3dadd( 134.842, 111.721, 115.093, 0.53 ) }
    apic_10 { pt3dadd( 135.442, 110.898, 115.483, 0.451 ) }
    apic_10 { pt3dadd( 135.693, 110.084, 114.0, 0.5228 ) }
    apic_10 { pt3dadd( 135.678, 109.115, 114.408, 0.5456 ) }
    apic_10 { pt3dadd( 135.964, 108.34, 116.134, 0.5462 ) }
    apic_10 { pt3dadd( 135.773, 107.383, 116.247, 0.5508 ) }
    apic_10 { pt3dadd( 135.816, 106.378, 116.713, 0.3602 ) }
    apic_10 { pt3dadd( 135.756, 105.276, 117.298, 0.461 ) }
    apic_10 { pt3dadd( 135.431, 104.187, 117.436, 0.553 ) }
    apic_10 { pt3dadd( 135.176, 103.141, 118.147, 0.4516 ) }
    apic_10 { pt3dadd( 134.681, 102.723, 116.569, 0.3946 ) }
    apic_10 { pt3dadd( 134.63, 101.825, 115.64, 0.4512 ) }
    apic_10 { pt3dadd( 134.649, 100.792, 116.094, 0.2288 ) }
    apic_10 { pt3dadd( 134.691, 100.088, 117.651, 0.296 ) }
    apic_10 { pt3dadd( 134.781, 99.3526, 118.72, 0.7626 ) }
    apic_10 { pt3dadd( 135.212, 98.4157, 118.269, 0.6482 ) }
    apic_10 { pt3dadd( 135.244, 97.7976, 116.341, 0.5038 ) }
    apic_10 { pt3dadd( 135.54, 96.8788, 117.32, 0.3894 ) }
    apic_10 { pt3dadd( 135.638, 96.0939, 116.952, 0.531 ) }
    apic_10 { pt3dadd( 135.569, 95.3231, 116.032, 0.4222 ) }
    apic_10 { pt3dadd( 135.961, 94.9299, 114.431, 0.4682 ) }
    apic_10 { pt3dadd( 136.247, 93.8935, 113.96, 0.4896 ) }
    apic_10 { pt3dadd( 136.357, 92.8218, 114.175, 0.525 ) }
    apic_10 { pt3dadd( 136.453, 91.8987, 115.36, 0.3698 ) }
    apic_10 { pt3dadd( 137.051, 91.0443, 115.564, 0.477 ) }
    apic_10 { pt3dadd( 136.94, 90.948, 118.258, 0.2664 ) }
    apic_10 { pt3dadd( 136.937, 90.9226, 121.053, 0.2288 ) }
    apic_10 { pt3dadd( 137.051, 90.5832, 123.489, 0.2288 ) }
    apic_10 { pt3dadd( 137.064, 89.7208, 125.123, 0.2288 ) }
    apic_10 { pt3dadd( 137.021, 89.0255, 127.139, 0.2698 ) }
    apic_10 { pt3dadd( 137.059, 88.0054, 127.991, 0.4524 ) }
    apic_10 { pt3dadd( 137.18, 86.96, 128.778, 0.2464 ) }
    apic_10 { pt3dadd( 137.857, 86.1886, 129.064, 0.3438 ) }
    apic_10 { pt3dadd( 138.081, 85.5975, 129.832, 0.447 ) }
    apic_10 { pt3dadd( 138.608, 84.7646, 130.188, 0.2288 ) }
    apic_10 { pt3dadd( 139.201, 83.8653, 130.76, 0.4532 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    apic_10 { pt3dadd( 139.465, 83.1791, 129.38, 0.3546 ) }
    apic_10 { pt3dadd( 140.212, 82.5405, 129.261, 0.3124 ) }
    apic_10 { pt3dadd( 140.826, 81.6683, 129.08, 0.2364 ) }
    apic_10 { pt3dadd( 141.622, 80.9534, 129.019, 0.2288 ) }
    apic_10 { pt3dadd( 142.566, 80.3992, 128.589, 0.2288 ) }
    apic_10 { pt3dadd( 143.118, 79.4848, 128.358, 0.2288 ) }
    apic_10 { pt3dadd( 143.229, 78.4465, 128.488, 0.2288 ) }
    apic_10 { pt3dadd( 143.015, 77.6787, 129.345, 0.335 ) }
    apic_10 { pt3dadd( 143.152, 77.233, 131.043, 0.4944 ) }
    apic_10 { pt3dadd( 143.47, 76.4309, 132.16, 0.4956 ) }
    apic_10 { pt3dadd( 143.871, 75.5771, 132.66, 0.4138 ) }
    apic_10 { pt3dadd( 143.796, 74.8564, 134.117, 0.2508 ) }
    apic_10 { pt3dadd( 143.303, 74.0542, 135.242, 0.2288 ) }
    apic_10 { pt3dadd( 143.08, 73.2361, 136.215, 0.2936 ) }
    apic_10 { pt3dadd( 143.217, 72.1136, 136.08, 0.4764 ) }
    apic_10 { pt3dadd( 143.458, 71.3856, 136.64, 0.2796 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 16/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 291.402, 236.261, 82.88, 0.3814 ) }
    apic_21 { pt3dadd( 291.155, 236.37, 82.885, 0.253 ) }
    apic_21 { pt3dadd( 290.708, 237.107, 84.3951, 0.4302 ) }
    apic_21 { pt3dadd( 290.233, 237.723, 85.68, 0.305 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 20/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 291.402, 236.261, 82.88, 0.3814 ) }
    apic_20 { pt3dadd( 291.768, 235.893, 83.5344, 0.2288 ) }
    apic_20 { pt3dadd( 292.27, 235.729, 85.9606, 0.2288 ) }
    apic_20 { pt3dadd( 292.572, 234.978, 87.0643, 0.2288 ) }
    apic_20 { pt3dadd( 292.635, 233.853, 86.8, 0.2288 ) }
    apic_20 { pt3dadd( 292.635, 232.709, 86.8, 0.2288 ) }
    apic_20 { pt3dadd( 292.628, 231.587, 87.0794, 0.281 ) }
    apic_20 { pt3dadd( 292.75, 230.745, 87.92, 0.356 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 28/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 108.375, 99.0196, 131.631, 0.6356 ) }
    apic_13 { pt3dadd( 107.624, 98.956, 132.314, 0.498 ) }
    apic_13 { pt3dadd( 107.017, 99.6743, 131.874, 0.4188 ) }
    apic_13 { pt3dadd( 106.461, 100.224, 130.558, 0.3436 ) }
    apic_13 { pt3dadd( 105.724, 100.696, 131.559, 0.3304 ) }
    apic_13 { pt3dadd( 105.326, 101.205, 133.0, 0.5094 ) }
    apic_13 { pt3dadd( 104.51, 101.914, 132.731, 0.5344 ) }
    apic_13 { pt3dadd( 103.748, 102.355, 133.756, 0.321 ) }
    apic_13 { pt3dadd( 103.03, 102.887, 134.373, 0.3844 ) }
    apic_13 { pt3dadd( 102.452, 103.634, 134.027, 0.4576 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 38/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 108.375, 99.0196, 131.631, 0.6356 ) }
    apic_12 { pt3dadd( 107.941, 98.8416, 132.742, 0.6398 ) }
    apic_12 { pt3dadd( 107.581, 98.384, 132.778, 0.2954 ) }
    apic_12 { pt3dadd( 107.269, 98.023, 131.239, 0.5796 ) }
    apic_12 { pt3dadd( 106.462, 97.3663, 131.608, 0.2526 ) }
    apic_12 { pt3dadd( 105.826, 97.391, 133.261, 0.2288 ) }
    apic_12 { pt3dadd( 105.623, 96.6324, 133.56, 0.2542 ) }
    apic_12 { pt3dadd( 105.478, 95.6784, 132.905, 0.3814 ) }
    apic_12 { pt3dadd( 104.79, 95.5017, 131.471, 0.3008 ) }
    apic_12 { pt3dadd( 104.719, 94.465, 130.975, 0.4008 ) }
    apic_12 { pt3dadd( 104.755, 93.4246, 131.051, 0.3576 ) }
    apic_12 { pt3dadd( 104.918, 92.3282, 131.05, 0.3132 ) }
    apic_12 { pt3dadd( 105.171, 91.5068, 129.856, 0.3044 ) }
    apic_12 { pt3dadd( 104.965, 90.7354, 129.587, 0.4576 ) }
    apic_12 { pt3dadd( 105.131, 90.376, 131.893, 0.343 ) }
    apic_12 { pt3dadd( 105.019, 89.9533, 133.387, 0.626 ) }
    apic_12 { pt3dadd( 104.676, 89.1177, 132.64, 0.3906 ) }
    apic_12 { pt3dadd( 104.447, 88.307, 133.53, 0.5486 ) }
    apic_12 { pt3dadd( 104.333, 87.3038, 132.462, 0.5384 ) }
    apic_12 { pt3dadd( 104.062, 86.414, 130.999, 0.3842 ) }
    apic_12 { pt3dadd( 103.235, 85.8715, 130.322, 0.403 ) }
    apic_12 { pt3dadd( 103.036, 85.1773, 128.832, 0.3814 ) }
    apic_12 { pt3dadd( 103.293, 84.8392, 127.165, 0.31 ) }
    apic_12 { pt3dadd( 103.628, 83.8574, 126.84, 0.3962 ) }
    apic_12 { pt3dadd( 102.994, 83.0582, 127.132, 0.3364 ) }
    apic_12 { pt3dadd( 102.325, 82.3305, 126.904, 0.6774 ) }
    apic_12 { pt3dadd( 102.189, 81.4099, 126.556, 0.2764 ) }
    apic_12 { pt3dadd( 101.526, 80.9671, 124.667, 0.4814 ) }
    apic_12 { pt3dadd( 101.265, 80.3004, 123.976, 0.2456 ) }
    apic_12 { pt3dadd( 101.538, 79.6142, 124.12, 0.5084 ) }
    apic_12 { pt3dadd( 101.587, 78.8216, 124.04, 0.5084 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 69/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 102.452, 103.634, 134.027, 0.4576 ) }
    apic_15 { pt3dadd( 101.621, 104.052, 134.933, 0.2832 ) }
    apic_15 { pt3dadd( 100.832, 104.448, 134.782, 0.5038 ) }
    apic_15 { pt3dadd( 100.201, 104.982, 135.456, 0.3554 ) }
    apic_15 { pt3dadd( 99.5304, 105.59, 134.637, 0.2288 ) }
    apic_15 { pt3dadd( 99.1649, 106.396, 135.597, 0.284 ) }
    apic_15 { pt3dadd( 98.4944, 106.978, 136.891, 0.2288 ) }
    apic_15 { pt3dadd( 97.8302, 107.385, 138.113, 0.4376 ) }
    apic_15 { pt3dadd( 97.2462, 107.783, 139.806, 0.3314 ) }
    apic_15 { pt3dadd( 97.0504, 108.418, 139.754, 0.4024 ) }
    apic_15 { pt3dadd( 96.6121, 109.138, 140.445, 0.5436 ) }
    apic_15 { pt3dadd( 96.2954, 109.781, 141.956, 0.4102 ) }
    apic_15 { pt3dadd( 95.3715, 109.824, 143.267, 0.4068 ) }
    apic_15 { pt3dadd( 94.4802, 110.282, 143.503, 0.4268 ) }
    apic_15 { pt3dadd( 93.6863, 110.42, 144.887, 0.3136 ) }
    apic_15 { pt3dadd( 93.1176, 111.073, 144.938, 0.2796 ) }
    apic_15 { pt3dadd( 92.3406, 110.968, 143.742, 0.5262 ) }
    apic_15 { pt3dadd( 91.5187, 110.849, 145.438, 0.3908 ) }
    apic_15 { pt3dadd( 90.5336, 110.54, 146.574, 0.3304 ) }
    apic_15 { pt3dadd( 89.9027, 110.739, 148.649, 0.356 ) }
    apic_15 { pt3dadd( 88.9348, 111.082, 147.985, 0.5078 ) }
    apic_15 { pt3dadd( 87.9145, 110.967, 146.886, 0.3172 ) }
    apic_15 { pt3dadd( 86.8543, 111.273, 146.736, 0.3304 ) }
    apic_15 { pt3dadd( 85.9644, 111.89, 147.499, 0.3304 ) }
    apic_15 { pt3dadd( 85.1134, 112.226, 148.411, 0.381 ) }
    apic_15 { pt3dadd( 84.7254, 112.259, 150.609, 0.2998 ) }
    apic_15 { pt3dadd( 83.9685, 112.676, 151.582, 0.4522 ) }
    apic_15 { pt3dadd( 83.2832, 112.455, 149.8, 0.305 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 97/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 102.452, 103.634, 134.027, 0.4576 ) }
    apic_14 { pt3dadd( 101.816, 103.913, 134.213, 0.4576 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_140, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_140 = new SectionList()
    soma_0 ModelViewParmSubset_140.append()
    axon_0 ModelViewParmSubset_140.append()
    axon_1 ModelViewParmSubset_140.append()

    // Group: {name=ModelViewParmSubset_141, groups=[], sections=[dend_73, dend_70, dend_67, dend_50, apic_0, dend_23, dend_14, dend_0, dend_77, dend_74, dend_72, dend_71, dend_69, dend_68, dend_60, dend_51, apic_34, apic_1, dend_41, dend_24, dend_20, dend_15, dend_13, dend_1, dend_79, dend_78, dend_76, dend_75, dend_66, dend_61, dend_53, dend_52, apic_38, apic_35, apic_25, apic_2, dend_47, dend_42, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_4, dend_3, dend_2, dend_65, dend_62, dend_59, dend_54, apic_37, apic_36, apic_29, apic_26, apic_6, apic_3, dend_49, dend_48, dend_46, dend_43, dend_30, dend_29, dend_27, dend_26, dend_18, dend_17, dend_12, dend_5, dend_64, dend_63, dend_58, dend_55, apic_33, apic_30, apic_28, apic_27, apic_24, apic_7, apic_5, apic_4, dend_45, dend_44, dend_34, dend_31, dend_11, dend_6, dend_57, dend_56, apic_32, apic_31, apic_17, apic_8, dend_38, dend_35, dend_33, dend_32, dend_10, dend_7, apic_23, apic_18, apic_16, apic_9, dend_40, dend_39, dend_37, dend_36, dend_9, dend_8, apic_22, apic_19, apic_11, apic_10, apic_21, apic_20, apic_13, apic_12, apic_15, apic_14]}
    ModelViewParmSubset_141 = new SectionList()
    dend_73 ModelViewParmSubset_141.append()
    dend_70 ModelViewParmSubset_141.append()
    dend_67 ModelViewParmSubset_141.append()
    dend_50 ModelViewParmSubset_141.append()
    apic_0 ModelViewParmSubset_141.append()
    dend_23 ModelViewParmSubset_141.append()
    dend_14 ModelViewParmSubset_141.append()
    dend_0 ModelViewParmSubset_141.append()
    dend_77 ModelViewParmSubset_141.append()
    dend_74 ModelViewParmSubset_141.append()
    dend_72 ModelViewParmSubset_141.append()
    dend_71 ModelViewParmSubset_141.append()
    dend_69 ModelViewParmSubset_141.append()
    dend_68 ModelViewParmSubset_141.append()
    dend_60 ModelViewParmSubset_141.append()
    dend_51 ModelViewParmSubset_141.append()
    apic_34 ModelViewParmSubset_141.append()
    apic_1 ModelViewParmSubset_141.append()
    dend_41 ModelViewParmSubset_141.append()
    dend_24 ModelViewParmSubset_141.append()
    dend_20 ModelViewParmSubset_141.append()
    dend_15 ModelViewParmSubset_141.append()
    dend_13 ModelViewParmSubset_141.append()
    dend_1 ModelViewParmSubset_141.append()
    dend_79 ModelViewParmSubset_141.append()
    dend_78 ModelViewParmSubset_141.append()
    dend_76 ModelViewParmSubset_141.append()
    dend_75 ModelViewParmSubset_141.append()
    dend_66 ModelViewParmSubset_141.append()
    dend_61 ModelViewParmSubset_141.append()
    dend_53 ModelViewParmSubset_141.append()
    dend_52 ModelViewParmSubset_141.append()
    apic_38 ModelViewParmSubset_141.append()
    apic_35 ModelViewParmSubset_141.append()
    apic_25 ModelViewParmSubset_141.append()
    apic_2 ModelViewParmSubset_141.append()
    dend_47 ModelViewParmSubset_141.append()
    dend_42 ModelViewParmSubset_141.append()
    dend_28 ModelViewParmSubset_141.append()
    dend_25 ModelViewParmSubset_141.append()
    dend_22 ModelViewParmSubset_141.append()
    dend_21 ModelViewParmSubset_141.append()
    dend_19 ModelViewParmSubset_141.append()
    dend_16 ModelViewParmSubset_141.append()
    dend_4 ModelViewParmSubset_141.append()
    dend_3 ModelViewParmSubset_141.append()
    dend_2 ModelViewParmSubset_141.append()
    dend_65 ModelViewParmSubset_141.append()
    dend_62 ModelViewParmSubset_141.append()
    dend_59 ModelViewParmSubset_141.append()
    dend_54 ModelViewParmSubset_141.append()
    apic_37 ModelViewParmSubset_141.append()
    apic_36 ModelViewParmSubset_141.append()
    apic_29 ModelViewParmSubset_141.append()
    apic_26 ModelViewParmSubset_141.append()
    apic_6 ModelViewParmSubset_141.append()
    apic_3 ModelViewParmSubset_141.append()
    dend_49 ModelViewParmSubset_141.append()
    dend_48 ModelViewParmSubset_141.append()
    dend_46 ModelViewParmSubset_141.append()
    dend_43 ModelViewParmSubset_141.append()
    dend_30 ModelViewParmSubset_141.append()
    dend_29 ModelViewParmSubset_141.append()
    dend_27 ModelViewParmSubset_141.append()
    dend_26 ModelViewParmSubset_141.append()
    dend_18 ModelViewParmSubset_141.append()
    dend_17 ModelViewParmSubset_141.append()
    dend_12 ModelViewParmSubset_141.append()
    dend_5 ModelViewParmSubset_141.append()
    dend_64 ModelViewParmSubset_141.append()
    dend_63 ModelViewParmSubset_141.append()
    dend_58 ModelViewParmSubset_141.append()
    dend_55 ModelViewParmSubset_141.append()
    apic_33 ModelViewParmSubset_141.append()
    apic_30 ModelViewParmSubset_141.append()
    apic_28 ModelViewParmSubset_141.append()
    apic_27 ModelViewParmSubset_141.append()
    apic_24 ModelViewParmSubset_141.append()
    apic_7 ModelViewParmSubset_141.append()
    apic_5 ModelViewParmSubset_141.append()
    apic_4 ModelViewParmSubset_141.append()
    dend_45 ModelViewParmSubset_141.append()
    dend_44 ModelViewParmSubset_141.append()
    dend_34 ModelViewParmSubset_141.append()
    dend_31 ModelViewParmSubset_141.append()
    dend_11 ModelViewParmSubset_141.append()
    dend_6 ModelViewParmSubset_141.append()
    dend_57 ModelViewParmSubset_141.append()
    dend_56 ModelViewParmSubset_141.append()
    apic_32 ModelViewParmSubset_141.append()
    apic_31 ModelViewParmSubset_141.append()
    apic_17 ModelViewParmSubset_141.append()
    apic_8 ModelViewParmSubset_141.append()
    dend_38 ModelViewParmSubset_141.append()
    dend_35 ModelViewParmSubset_141.append()
    dend_33 ModelViewParmSubset_141.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_32 ModelViewParmSubset_141.append()
    dend_10 ModelViewParmSubset_141.append()
    dend_7 ModelViewParmSubset_141.append()
    apic_23 ModelViewParmSubset_141.append()
    apic_18 ModelViewParmSubset_141.append()
    apic_16 ModelViewParmSubset_141.append()
    apic_9 ModelViewParmSubset_141.append()
    dend_40 ModelViewParmSubset_141.append()
    dend_39 ModelViewParmSubset_141.append()
    dend_37 ModelViewParmSubset_141.append()
    dend_36 ModelViewParmSubset_141.append()
    dend_9 ModelViewParmSubset_141.append()
    dend_8 ModelViewParmSubset_141.append()
    apic_22 ModelViewParmSubset_141.append()
    apic_19 ModelViewParmSubset_141.append()
    apic_11 ModelViewParmSubset_141.append()
    apic_10 ModelViewParmSubset_141.append()
    apic_21 ModelViewParmSubset_141.append()
    apic_20 ModelViewParmSubset_141.append()
    apic_13 ModelViewParmSubset_141.append()
    apic_12 ModelViewParmSubset_141.append()
    apic_15 ModelViewParmSubset_141.append()
    apic_14 ModelViewParmSubset_141.append()

    // Group: {name=dend, groups=[], sections=[dend_73, dend_70, dend_67, dend_50, dend_23, dend_14, dend_0, dend_77, dend_74, dend_72, dend_71, dend_69, dend_68, dend_60, dend_51, dend_41, dend_24, dend_20, dend_15, dend_13, dend_1, dend_79, dend_78, dend_76, dend_75, dend_66, dend_61, dend_53, dend_52, dend_47, dend_42, dend_28, dend_25, dend_22, dend_21, dend_19, dend_16, dend_4, dend_3, dend_2, dend_65, dend_62, dend_59, dend_54, dend_49, dend_48, dend_46, dend_43, dend_30, dend_29, dend_27, dend_26, dend_18, dend_17, dend_12, dend_5, dend_64, dend_63, dend_58, dend_55, dend_45, dend_44, dend_34, dend_31, dend_11, dend_6, dend_57, dend_56, dend_38, dend_35, dend_33, dend_32, dend_10, dend_7, dend_40, dend_39, dend_37, dend_36, dend_9, dend_8]}
    dend = new SectionList()
    dend_73 dend.append()
    dend_70 dend.append()
    dend_67 dend.append()
    dend_50 dend.append()
    dend_23 dend.append()
    dend_14 dend.append()
    dend_0 dend.append()
    dend_77 dend.append()
    dend_74 dend.append()
    dend_72 dend.append()
    dend_71 dend.append()
    dend_69 dend.append()
    dend_68 dend.append()
    dend_60 dend.append()
    dend_51 dend.append()
    dend_41 dend.append()
    dend_24 dend.append()
    dend_20 dend.append()
    dend_15 dend.append()
    dend_13 dend.append()
    dend_1 dend.append()
    dend_79 dend.append()
    dend_78 dend.append()
    dend_76 dend.append()
    dend_75 dend.append()
    dend_66 dend.append()
    dend_61 dend.append()
    dend_53 dend.append()
    dend_52 dend.append()
    dend_47 dend.append()
    dend_42 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_19 dend.append()
    dend_16 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_65 dend.append()
    dend_62 dend.append()
    dend_59 dend.append()
    dend_54 dend.append()
    dend_49 dend.append()
    dend_48 dend.append()
    dend_46 dend.append()
    dend_43 dend.append()
    dend_30 dend.append()
    dend_29 dend.append()
    dend_27 dend.append()
    dend_26 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_5 dend.append()
    dend_64 dend.append()
    dend_63 dend.append()
    dend_58 dend.append()
    dend_55 dend.append()
    dend_45 dend.append()
    dend_44 dend.append()
    dend_34 dend.append()
    dend_31 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_57 dend.append()
    dend_56 dend.append()
    dend_38 dend.append()
    dend_35 dend.append()
    dend_33 dend.append()
    dend_32 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_40 dend.append()
    dend_39 dend.append()
    dend_37 dend.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_36 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_34, apic_1, apic_38, apic_35, apic_25, apic_2, apic_37, apic_36, apic_29, apic_26, apic_6, apic_3, apic_33, apic_30, apic_28, apic_27, apic_24, apic_7, apic_5, apic_4, apic_32, apic_31, apic_17, apic_8, apic_23, apic_18, apic_16, apic_9, apic_22, apic_19, apic_11, apic_10, apic_21, apic_20, apic_13, apic_12, apic_15, apic_14]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_34 apic.append()
    apic_1 apic.append()
    apic_38 apic.append()
    apic_35 apic.append()
    apic_25 apic.append()
    apic_2 apic.append()
    apic_37 apic.append()
    apic_36 apic.append()
    apic_29 apic.append()
    apic_26 apic.append()
    apic_6 apic.append()
    apic_3 apic.append()
    apic_33 apic.append()
    apic_30 apic.append()
    apic_28 apic.append()
    apic_27 apic.append()
    apic_24 apic.append()
    apic_7 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_32 apic.append()
    apic_31 apic.append()
    apic_17 apic.append()
    apic_8 apic.append()
    apic_23 apic.append()
    apic_18 apic.append()
    apic_16 apic.append()
    apic_9 apic.append()
    apic_22 apic.append()
    apic_19 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()
    apic_21 apic.append()
    apic_20 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()
    apic_15 apic.append()
    apic_14 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_6481, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_6481 = new SectionList()
    soma_0 OneSecGrp_SectionRef_6481.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_50, dend_50, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_14, dend_14, dend_14, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_74, dend_74, dend_74, dend_74, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, apic_34, apic_34, apic_34, apic_34, apic_34, apic_34, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_1, dend_1, dend_1, dend_1, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_38, apic_35, apic_35, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_37, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_36, apic_29, apic_29, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, apic_33, apic_33, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_30, apic_28, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_27, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_32, apic_31, apic_31, apic_17, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, apic_23, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_16, apic_16, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_22, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_50 all.append()
    dend_50 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_34 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_38 all.append()
    apic_38 all.append()
    apic_38 all.append()
    apic_35 all.append()
    apic_35 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_37 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_36 all.append()
    apic_29 all.append()
    apic_29 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    apic_33 all.append()
    apic_33 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_30 all.append()
    apic_28 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_27 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_32 all.append()
    apic_32 all.append()
    apic_32 all.append()
    apic_31 all.append()
    apic_31 all.append()
    apic_17 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    apic_23 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_8 all.append()
    apic_22 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 2.12  // units: uF/cm2
    forsec dend cm = 2.12  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 138.28  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0012021156  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 4.122259E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.9822899  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 2.0934899E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.05175836  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 7.3160714E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 1.9222005E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.0572648  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 5.718807E-6  // units: S cm-2
        e_pas_nml2 = -92.499115  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.573876E-4  // units: S cm-2
        e_pas_nml2 = -92.499115  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 3.2393273E-6  // units: S cm-2
        e_pas_nml2 = -92.499115  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 9.5861855E-5  // units: S cm-2
        e_pas_nml2 = -92.499115  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 5.359973E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0070061292  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_73 nseg = 3
    dend_67 nseg = 3
    dend_77 nseg = 3
    dend_72 nseg = 3
    dend_71 nseg = 9
    dend_69 nseg = 3
    dend_68 nseg = 5
    dend_20 nseg = 3
    dend_79 nseg = 3
    dend_66 nseg = 3
    dend_53 nseg = 3
    apic_38 nseg = 9
    apic_2 nseg = 3
    dend_47 nseg = 3
    dend_28 nseg = 3
    dend_22 nseg = 5
    dend_21 nseg = 5
    dend_4 nseg = 3
    dend_2 nseg = 3
    dend_65 nseg = 3
    dend_59 nseg = 5
    apic_37 nseg = 5
    apic_26 nseg = 5
    apic_3 nseg = 3
    dend_46 nseg = 5
    dend_43 nseg = 5
    dend_30 nseg = 3
    dend_29 nseg = 5
    dend_27 nseg = 7
    dend_26 nseg = 5
    dend_18 nseg = 5
    dend_17 nseg = 3
    dend_5 nseg = 3
    apic_30 nseg = 3
    apic_24 nseg = 3
    apic_5 nseg = 3
    dend_34 nseg = 3
    apic_8 nseg = 3
    dend_35 nseg = 3
    dend_33 nseg = 3
    apic_18 nseg = 3
    apic_9 nseg = 11
    dend_37 nseg = 5
    dend_8 nseg = 3
    apic_19 nseg = 3
    apic_11 nseg = 3
    apic_10 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_472363762


