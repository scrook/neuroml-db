// Cell: bAC217_L6_BP_f61a000b31_0_0
/*
{
  "id" : "bAC217_L6_BP_f61a000b31_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.4506, 7.6394, 2.70579, 0.83", "-4.40284, 9.15255, 3.00022, 1.11", "-5.5539, 10.0441, 3.15337, 0.83", "-6.67219, 10.9028, 3.29059, 0.83", "-7.33431, 11.3925, 3.36579, 1.11", "-9.40774, 12.9225, 3.60679, 1.11", "-13.1163, 15.542, 4.03281, 0.83", "-14.4524, 16.4497, 4.17349, 0.83", "-15.5104, 17.1472, 4.26088, 0.83", "-16.5421, 17.8384, 4.33652, 0.83", "-17.382, 18.4081, 4.37733, 0.55", "-18.0133, 18.7939, 4.41875, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.12636, 6.03698, -6.08512, 0.55", "6.11265, 6.46665, -6.5287, 0.55", "7.26523, 6.57512, -7.11564, 0.83", "9.0894, 6.69055, -8.20593, 0.55", "9.96996, 6.74627, -8.73224, 1.38", "12.135, 6.88327, -10.0263, 0.55", "13.0572, 6.83688, -10.6437, 0.83", "17.8272, 5.98605, -14.113, 0.55", "18.2887, 5.87164, -14.4946, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.687353, -10.7722, 3.33474, 1.11", "-0.741826, -15.5783, 5.05773, 1.11", "-0.76401, -17.5357, 5.75944, 0.83", "-0.793483, -20.1361, 6.6917, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.800956, 10.0613, -1.37526, 1.11", "0.788859, 12.2294, -1.36296, 1.11", "0.732147, 15.7665, -1.21886, 1.38", "0.731553, 15.9636, -1.20666, 1.38", "0.862013, 18.4097, -0.999946, 0.83", "1.07219, 21.0011, -0.624449, 0.83", "1.47595, 23.9384, 0.196579, 0.83", "1.733, 25.0588, 0.669951, 0.83", "2.00637, 25.875, 1.11448, 1.11", "2.85217, 27.8721, 2.29232, 0.55", "3.84057, 29.9631, 3.69524, 0.83", "5.20595, 32.1313, 5.34013, 0.55", "5.92774, 33.0396, 6.10769, 0.83", "6.91794, 34.2716, 7.27692, 0.55", "8.11995, 35.8369, 8.83117, 0.55", "9.75603, 38.1848, 11.164, 0.55", "11.5537, 40.8643, 13.7377, 0.55", "12.6326, 42.6014, 15.6059, 0.55", "13.8887, 44.7953, 18.1881, 0.55", "14.1413, 45.236, 18.7673, 0.83", "14.7887, 46.4004, 20.3878, 0.55", "15.3542, 47.3111, 21.6719, 0.83", "16.6221, 49.7821, 24.7011, 0.55", "17.1491, 50.6854, 25.6184, 0.83", "17.6936, 51.3579, 26.2796, 0.55", "18.2632, 51.941, 26.8184, 0.83", "19.5706, 53.0364, 27.8524, 0.83", "21.3366, 54.5249, 29.0384, 0.83", "22.4458, 55.5043, 29.6304, 0.55", "23.286, 56.346, 30.0861, 0.55", "25.498, 58.5222, 31.2436, 0.83", "26.9408, 59.9183, 31.9264, 0.55", "29.1556, 61.9672, 32.8646, 0.55", "31.2108, 63.6937, 33.6363, 0.55", "33.0639, 65.161, 34.2737, 0.55", "35.4356, 66.8884, 34.966, 0.55", "36.9046, 67.7488, 35.3412, 0.55", "37.9375, 68.2407, 35.4728, 0.55", "39.3458, 68.6362, 35.5332, 0.55", "41.4985, 68.8838, 35.4577, 0.55", "42.8588, 68.8717, 35.3626, 0.55", "44.8218, 68.8023, 35.3562, 0.55", "48.4893, 68.7865, 35.6629, 0.55", "51.3195, 68.9067, 36.1023, 0.55", "54.2758, 69.1787, 36.7444, 0.55", "56.137, 69.42, 37.3062, 0.55", "60.8837, 70.5047, 39.0878, 0.55", "63.6357, 71.3772, 40.3607, 0.55", "65.6498, 72.1787, 41.52, 0.55", "66.8522, 72.8924, 42.2742, 0.55", "68.2376, 73.9331, 43.1386, 0.55", "70.6184, 75.9645, 44.3641, 0.55", "71.1807, 76.4522, 44.5615, 0.55", "72.8218, 77.7615, 45.0145, 0.55", "74.3227, 79.1444, 45.4229, 0.83", "75.1441, 79.9108, 45.6319, 0.55", "76.3773, 81.2174, 45.8916, 0.83", "82.494, 88.1925, 49.0629, 0.83", "87.8238, 96.103, 51.3301, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-18.0133, 18.7939, 4.41875, 0.55", "-19.8935, 19.4497, 3.74663, 0.55", "-21.9381, 20.1628, 3.01577, 0.55", "-24.4055, 21.0234, 2.13377, 0.55", "-26.4429, 21.734, 1.40549, 0.83", "-28.1502, 22.3295, 0.795184, 0.55", "-31.3193, 23.4348, -0.337626, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-18.0133, 18.7939, 4.41875, 0.55", "-20.4493, 19.2803, 4.05394, 0.55", "-23.0518, 19.7043, 3.92198, 0.55", "-26.0057, 20.1768, 3.84437, 0.55", "-30.2988, 20.7966, 4.12358, 0.55", "-33.9016, 21.1991, 4.60794, 0.55", "-37.6866, 21.5556, 5.27441, 0.55", "-41.3616, 21.6354, 6.30092, 0.55", "-44.5382, 21.3842, 7.47543, 0.55", "-48.5139, 20.7777, 9.3473, 0.55", "-50.2521, 20.3779, 10.3937, 0.55", "-52.1328, 19.9228, 11.6027, 0.55", "-55.446, 18.8808, 13.5765, 0.55", "-57.199, 18.3442, 14.3543, 0.55", "-59.0351, 17.7271, 15.1559, 0.55", "-61.2103, 17.0306, 15.8917, 0.55", "-63.5716, 16.3255, 16.6294, 0.55", "-66.9389, 15.3142, 17.6089, 0.55", "-71.4197, 14.2801, 18.5295, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "18.2887, 5.87164, -14.4946, 0.55", "24.3642, 7.40895, -15.7809, 0.55", "27.8607, 8.10931, -17.024, 0.55", "31.3091, 8.64718, -18.3077, 0.55", "33.664, 8.9202, -19.188, 0.55", "37.1046, 9.23796, -20.4517, 0.55", "44.2391, 9.76767, -23.3027, 0.55", "52.3295, 10.3393, -27.0816, 0.55", "56.2477, 10.3813, -29.1978, 0.55", "58.3448, 10.3574, -30.4721, 0.55", "60.644, 10.3463, -31.963, 0.55", "64.7452, 10.2103, -34.6121, 0.55", "66.233, 10.0747, -35.628, 0.55", "72.5319, 9.67971, -40.4132, 0.55", "76.9898, 9.48596, -44.1307, 0.55", "79.5567, 9.42781, -46.3402, 0.55", "82.1166, 9.34689, -48.5429, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "18.2887, 5.87164, -14.4946, 0.83", "20.7447, 7.51547, -14.5707, 0.83", "22.1496, 8.45114, -14.6802, 0.55", "24.2181, 9.86814, -15.0246, 0.83", "25.6081, 10.8558, -15.3009, 0.55", "27.5226, 12.2719, -15.6551, 0.83", "29.8218, 14.0246, -15.9951, 0.55", "30.9814, 14.8202, -16.1131, 0.55", "33.6619, 16.2854, -16.1755, 0.83", "36.1024, 17.3279, -15.895, 0.55", "37.4653, 17.9015, -15.6037, 0.83", "39.5052, 18.817, -14.9479, 0.55", "42.4273, 20.2015, -13.6225, 0.55", "46.4905, 21.9172, -11.5583, 0.55", "50.3663, 23.4214, -9.30791, 0.55", "53.4373, 24.5817, -7.46685, 0.55", "58.4988, 26.5199, -4.40526, 0.55", "62.1963, 28.0508, -2.08575, 0.55", "64.4194, 29.1712, -0.608285, 0.55", "68.4949, 31.6702, 2.13465, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.793483, -20.1361, 6.6917, 0.83", "-1.08642, -22.4145, 6.6139, 0.83", "-1.37181, -24.6344, 6.53811, 0.83", "-1.69046, -27.1128, 6.45349, 0.83", "-1.85685, -28.407, 6.4093, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.793483, -20.1361, 6.6917, 0.55", "-0.035318, -22.1922, 8.10199, 0.55", "0.643656, -24.7089, 9.94362, 0.55", "1.03158, -28.0049, 12.4994, 0.55", "1.09304, -29.2857, 13.5295, 0.83", "0.956546, -32.5533, 16.539, 0.55", "0.747734, -34.2401, 18.1283, 0.55", "0.274687, -37.5202, 21.3603, 0.83", "-0.214686, -39.9553, 23.9187, 0.55", "-0.798573, -41.9631, 26.0015, 0.55", "-1.99197, -45.7652, 29.8787, 0.55", "-2.94075, -48.7955, 32.9331, 0.55", "-3.65104, -51.2251, 35.4149, 0.55", "-4.2638, -53.8054, 37.9651, 0.28", "-4.42898, -54.8805, 38.9839, 0.55", "-4.68446, -56.8665, 40.7513, 0.28", "-4.66898, -59.9683, 43.0175, 0.55", "-7.10243, -70.2761, 51.1694, 0.55", "-9.78279, -79.7996, 60.1552, 0.55", "-11.8221, -87.6308, 70.7919, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-31.3193, 23.4348, -0.337626, 0.55", "-32.8992, 24.2269, 1.3842, 0.55", "-33.5131, 24.5655, 2.22152, 0.83", "-34.1681, 24.9765, 3.33939, 0.55", "-34.6404, 25.3236, 4.25565, 0.83", "-35.8964, 26.2934, 6.60905, 0.55", "-36.3715, 26.6757, 7.49969, 0.28", "-37.1212, 27.3773, 9.07199, 0.55", "-38.132, 28.3247, 11.1702, 0.55", "-38.9243, 29.0162, 12.7113, 0.55", "-40.0057, 29.9135, 14.7219, 0.28", "-40.3098, 30.1242, 15.1955, 0.55", "-40.9555, 30.5542, 16.14, 0.28", "-41.4212, 30.834, 16.7222, 0.55", "-42.4172, 31.3434, 17.8172, 0.28", "-43.0118, 31.5837, 18.4445, 0.55", "-44.0415, 31.919, 19.6045, 0.28", "-44.7452, 32.1236, 20.3588, 0.55", "-47.9536, 34.1015, 27.2715, 0.55", "-50.452, 35.5564, 34.5948, 0.55", "-52.6723, 36.3223, 42.1097, 0.55", "-54.8882, 36.1068, 49.6617, 0.55", "-56.0316, 36.5161, 57.4408, 0.55", "-57.8619, 37.0714, 65.0783, 0.55", "-59.8405, 38.9078, 72.4744, 0.55", "-61.7578, 40.1306, 80.0122, 0.55", "-63.525, 41.9184, 87.4735, 0.55", "-64.8592, 43.6891, 95.0282, 0.55", "-65.2866, 44.727, 102.821, 0.55", "-65.8207, 46.4892, 110.476, 0.55", "-66.4423, 47.437, 118.267, 0.55", "-66.0661, 48.1861, 126.096, 0.55", "-64.3591, 49.5984, 133.651, 0.55", "-62.6134, 49.4869, 141.327, 0.55", "-59.795, 49.2249, 148.674, 0.55", "-57.3554, 49.329, 156.159, 0.55", "-55.7221, 50.0209, 163.83, 0.55", "-55.8077, 51.8076, 171.498, 0.55", "-55.1425, 52.7973, 179.28, 0.55", "-53.0703, 55.1737, 186.495, 0.55", "-52.3018, 58.0338, 193.79, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-31.3193, 23.4348, -0.337626, 0.55", "-33.3392, 23.3852, -1.63732, 0.55", "-35.1032, 23.316, -3.25079, 0.55", "-36.85, 23.3624, -5.05442, 0.55", "-37.9438, 23.3915, -6.18384, 0.55", "-39.9391, 23.4445, -8.24402, 0.83", "-41.3988, 23.4833, -9.75128, 0.55", "-43.2597, 23.4619, -12.0309, 0.83", "-44.129, 23.5582, -13.4222, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-71.4197, 14.2801, 18.5295, 0.28", "-72.5192, 11.9958, 18.5349, 0.28", "-73.053, 10.9969, 18.461, 0.28", "-73.7447, 9.57934, 18.3063, 0.55", "-74.3117, 8.33684, 18.1788, 0.28", "-75.1447, 6.44944, 18.0058, 0.55", "-77.4469, 0.924216, 17.5766, 0.28", "-78.1982, -1.03589, 17.2801, 0.55", "-79.3387, -4.07015, 16.729, 0.28", "-79.9943, -5.8969, 16.3235, 0.55", "-80.4484, -7.16078, 16.0165, 0.28", "-80.9652, -8.60926, 15.6748, 0.55", "-82.5063, -13.4151, 14.6361, 0.28", "-82.9951, -14.8782, 14.2758, 0.55", "-83.8702, -17.1589, 13.519, 0.28", "-84.6081, -18.648, 12.9266, 0.28", "-85.2812, -19.6573, 12.5033, 0.55", "-87.6417, -22.5006, 11.3954, 0.28", "-88.7427, -23.655, 10.9713, 0.55", "-91.4474, -26.3183, 9.86965, 0.28", "-94.1631, -28.6996, 8.85313, 0.28", "-97.1286, -31.007, 7.79317, 0.28", "-98.4915, -31.8895, 7.39211, 0.55", "-104.843, -40.8588, 5.05878, 0.55", "-111.857, -49.6321, 4.79889, 0.55", "-118.807, -58.241, 2.84397, 0.55", "-126.016, -66.3268, -0.136923, 0.55", "-133.398, -73.7766, -4.16659, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-71.4197, 14.2801, 18.5295, 0.55", "-72.4067, 14.184, 18.6891, 0.55", "-75.1863, 13.9659, 19.4989, 0.55", "-76.2292, 13.8649, 19.8627, 0.55", "-78.6789, 13.5581, 20.7661, 0.55", "-82.4499, 13.0995, 21.9674, 0.55", "-84.4121, 12.9167, 22.5485, 0.28", "-87.4641, 12.5575, 23.4021, 0.55", "-89.7302, 12.2329, 23.9609, 0.55", "-90.6869, 12.0898, 24.1997, 0.28", "-96.4254, 11.2272, 25.6255, 0.55", "-99.1056, 10.6776, 26.1447, 0.28", "-102.722, 9.8931, 26.6347, 0.28", "-105.845, 9.2372, 26.8678, 0.55", "-118.053, 8.82727, 30.1782, 0.55", "-129.814, 8.29661, 34.8249, 0.55", "-140.83, 6.68277, 40.8417, 0.55", "-151.572, 7.31186, 47.5045, 0.55", "-160.692, 7.86036, 56.2627, 0.55", "-167.983, 9.37721, 66.4957, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "82.1166, 9.34689, -48.5429, 0.55", "85.7355, 10.5819, -51.3521, 0.55", "86.8718, 10.9369, -52.3197, 0.55", "88.289, 11.3321, -53.5228, 0.55", "90.8542, 12.0558, -55.8595, 0.55", "93.517, 12.7144, -58.3847, 0.55", "94.8071, 12.9263, -59.6063, 0.83", "95.8582, 13.0425, -60.7067, 0.55", "96.6346, 13.0787, -61.6234, 0.83", "98.4696, 12.9209, -64.0184, 0.55", "99.9624, 12.644, -66.0299, 0.55", "101.681, 12.2955, -68.2552, 0.55", "103.599, 11.9742, -70.7634, 0.55", "104.881, 11.7329, -72.486, 0.55", "106.326, 11.4653, -74.4798, 0.55", "107.577, 11.2995, -76.2875, 0.55", "108.372, 11.294, -77.5223, 0.55", "109.35, 11.4, -79.9716, 0.55", "109.871, 11.4306, -81.5081, 0.55", "110.282, 11.418, -83.5533, 0.55", "110.805, 11.3157, -87.0215, 0.55", "110.905, 11.2663, -87.808, 0.28", "112.213, 10.5526, -97.3929, 0.28", "112.68, 10.3521, -100.207, 0.83", "114.554, 9.44484, -110.228, 0.83", "115.522, 8.83448, -114.918, 0.83", "115.999, 8.5041, -116.835, 0.55", "116.566, 8.16218, -118.708, 0.55", "118.23, 7.3787, -122.22, 0.55", "120.051, 6.61784, -125.325, 0.28", "120.633, 6.37924, -125.551, 0.55", "121.938, 5.85715, -125.553, 0.28", "122.755, 5.5701, -125.424, 0.55", "123.607, 5.24554, -125.217, 0.28", "124.637, 4.89856, -124.912, 0.55", "126.185, 4.49221, -124.607, 0.28", "127.422, 4.13556, -124.409, 0.55", "128.801, 3.85261, -124.283, 0.28", "130.671, 3.50555, -124.276, 0.55", "132.772, 3.18854, -124.386, 0.55", "134.62, 2.95471, -124.601, 0.28", "137.177, 2.68098, -125.036, 0.55", "141.602, 2.41787, -126.235, 0.55", "143.565, 2.44679, -126.981, 0.55", "144.41, 2.51093, -127.386, 0.83", "146.02, 2.67214, -128.301, 0.55", "147.14, 2.84199, -128.998, 0.83", "150.165, 3.38378, -130.891, 0.55", "151.995, 3.59825, -132.118, 0.28", "152.761, 3.62465, -132.557, 0.55", "154.842, 3.45897, -133.561, 0.28", "155.564, 3.3243, -133.877, 0.55", "157.045, 2.90802, -134.311, 0.28", "158.54, 2.28482, -134.513, 0.55", "161.551, 0.756432, -134.405, 0.28", "162.934, -0.0401523, -134.213, 0.55", "164.98, -1.36837, -133.837, 0.28", "167.567, -3.05414, -133.262, 0.55", "169.442, -4.25246, -132.81, 0.55", "172.705, -6.2331, -131.952, 0.28", "174.049, -6.96055, -131.703, 0.55", "176.378, -8.02929, -131.511, 0.28", "178.717, -8.88138, -131.453, 0.55", "180.015, -9.16716, -131.577, 0.28", "181.204, -9.24973, -131.751, 0.55", "184.58, -9.22571, -132.524, 0.28", "187.011, -9.03715, -133.084, 0.28", "189.142, -8.71715, -133.573, 0.55", "191.499, -8.27832, -134.219, 0.28", "192.098, -8.13541, -134.355, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "82.1166, 9.34689, -48.5429, 0.55", "82.4144, 7.72806, -50.2681, 0.55", "82.5222, 6.34, -51.6106, 0.28", "82.6209, 5.03566, -52.716, 0.55", "82.9924, 2.26553, -55.0949, 0.28", "83.01, 2.09887, -55.2718, 0.55", "83.1302, 1.2456, -56.2835, 0.28", "83.1487, 0.581527, -57.2509, 0.55", "83.1154, -0.0809444, -58.3592, 0.28", "83.0333, -0.96689, -59.9251, 0.55", "82.8255, -3.2065, -63.7999, 0.55", "82.6032, -5.2322, -67.3792, 0.55", "82.4031, -6.84866, -70.2422, 0.55", "82.1661, -8.44452, -73.0163, 0.55", "82.1033, -8.86301, -73.7092, 0.28", "82.0543, -9.32461, -74.4002, 0.55", "82.0664, -9.99082, -75.2842, 0.28", "82.2438, -11.2336, -76.7396, 0.55", "82.8361, -13.7525, -79.0892, 0.55", "83.1699, -15.1442, -80.2172, 0.28", "83.4168, -16.5334, -81.4275, 0.55", "83.5997, -18.4441, -83.1971, 0.28", "83.6327, -19.9658, -84.6613, 0.55", "83.5681, -22.2301, -86.8509, 0.28", "83.5224, -24.5966, -89.034, 0.55", "83.4026, -28.019, -92.2358, 0.28", "83.292, -29.8377, -93.9474, 0.55", "83.1429, -31.6817, -95.747, 0.28", "82.99, -33.2731, -97.4474, 0.28", "82.879, -35.2181, -99.7802, 0.55", "82.9309, -37.0485, -101.895, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "68.4949, 31.6702, 2.13465, 0.55", "71.8661, 31.379, 2.93215, 0.55", "74.328, 31.0602, 3.28299, 0.55", "79.7215, 30.2858, 3.77128, 0.55", "82.1498, 29.8764, 3.77651, 0.55", "84.7998, 29.4795, 3.64463, 0.55", "88.3585, 28.9969, 3.21212, 0.55", "92.1172, 28.3702, 2.40375, 0.55", "94.092, 28.0043, 1.75514, 0.55", "98.1086, 27.2324, -0.11098, 0.55", "99.9584, 26.8893, -1.02997, 0.55", "104.296, 25.9965, -3.29191, 0.55", "107.235, 25.2742, -4.79424, 0.55", "109.398, 24.7338, -5.8006, 0.83", "112.856, 23.743, -7.36338, 0.55", "116.245, 22.6126, -8.7545, 0.83", "119.123, 21.5254, -9.82599, 0.55", "121.683, 20.6022, -10.6468, 0.55", "123.137, 20.1453, -11.0359, 0.83", "126.532, 19.0981, -11.7648, 0.28", "128.219, 18.653, -12.0228, 0.28", "129.853, 18.1136, -12.3526, 0.28", "131.618, 17.5779, -12.7192, 0.28", "134.443, 16.7712, -13.3668, 0.28", "135.579, 16.4625, -13.5941, 0.55", "138.296, 15.7652, -13.8715, 0.55", "143.185, 14.4747, -14.1213, 0.55", "144.539, 14.0845, -14.1292, 0.55", "145.749, 13.6987, -14.0824, 0.83", "148.374, 12.9528, -13.7713, 0.55", "150.656, 12.3108, -13.4644, 0.55", "152.813, 11.7138, -13.1646, 0.55", "154.483, 11.2198, -12.9788, 0.55", "157.134, 10.2435, -12.8067, 0.55", "160.262, 8.80642, -12.7664, 0.55", "165.13, 6.00396, -13.0244, 0.55", "167.806, 4.0597, -13.3212, 0.55", "170.129, 1.96811, -13.6803, 0.28", "170.823, 1.1886, -13.822, 0.55", "172.361, -1.00702, -14.1978, 0.28", "173.687, -3.4802, -14.5689, 0.55", "174.938, -6.56735, -14.7867, 0.55", "175.783, -8.59076, -14.8334, 0.28", "176.092, -9.30344, -14.8149, 0.55", "176.894, -11.0713, -14.7444, 0.28", "177.987, -13.3667, -14.5967, 0.55", "180.836, -18.8825, -14.1021, 0.55", "182.319, -21.6574, -13.7937, 0.55", "183.697, -24.1987, -13.488, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "68.4949, 31.6702, 2.13465, 0.55", "69.8422, 32.5304, 3.39337, 0.55", "70.2799, 32.7934, 3.7722, 0.55", "71.9322, 33.6557, 5.14549, 0.55", "73.7683, 34.6698, 6.69057, 0.55", "76.1076, 35.9925, 8.7395, 0.55", "76.7547, 36.3566, 9.30049, 0.55", "77.9213, 36.9564, 10.3157, 0.55", "79.2093, 37.6236, 11.3637, 0.55", "80.7192, 38.4134, 12.4922, 0.55", "82.1396, 39.1814, 13.5516, 0.55", "82.9246, 39.624, 14.0789, 0.55", "83.8448, 40.1711, 14.6843, 0.55", "84.9855, 40.8734, 15.3969, 0.83", "86.8977, 41.932, 16.3637, 0.55", "88.1804, 42.555, 16.9645, 0.83", "89.9796, 43.3106, 17.7731, 0.55", "90.5357, 43.5089, 18.0266, 0.55", "92.2742, 44.0235, 18.8144, 0.55", "95.4226, 44.7057, 20.1827, 0.55", "97.7469, 45.0579, 21.1876, 0.55", "99.5833, 45.2713, 22.06, 0.55", "101.449, 45.4194, 23.052, 0.55", "101.842, 45.4411, 23.2669, 0.28", "102.64, 45.453, 23.7144, 0.83", "105.917, 45.4633, 25.59, 0.55", "108.219, 45.4547, 26.8583, 0.55", "110.096, 45.5138, 27.9249, 0.55", "111.215, 45.5502, 28.5739, 0.83", "112.095, 45.5921, 29.081, 0.28", "112.895, 45.6283, 29.5332, 0.55", "118.848, 47.7727, 33.2888, 0.55", "125.492, 48.4423, 36.381, 0.55", "131.991, 50.058, 39.4309, 0.55", "137.527, 51.2218, 44.1378, 0.55", "142.627, 51.5482, 49.433, 0.55", "148.693, 50.1937, 53.3713, 0.55", "154.916, 47.7338, 56.4347, 0.55", "161.779, 46.3648, 58.7079, 0.55", "168.483, 45.0719, 61.4544, 0.55", "175.51, 44.3621, 63.5202, 0.55", "182.318, 44.3053, 66.3131, 0.55", "188.675, 43.2021, 69.852, 0.55", "195.008, 43.5766, 73.5806, 0.55", "200.807, 45.2968, 77.7712, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.85685, -28.407, 6.4093, 1.38", "1.38704, -31.8935, 5.66727, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.85685, -28.407, 6.4093, 0.55", "-3.43436, -30.1097, 6.98381, 0.55", "-5.20984, -32.3174, 7.61715, 0.55", "-6.55994, -33.7616, 8.12654, 0.55", "-7.7607, -34.9605, 8.39098, 0.55", "-10.451, -37.4218, 8.75161, 0.55", "-12.3464, -39.0553, 8.96053, 0.55", "-14.0541, -40.5185, 9.09184, 0.55", "-18.4187, -44.0588, 9.43467, 0.55", "-23.6327, -48.1417, 9.88347, 0.55", "-27.6861, -51.223, 10.1722, 0.55", "-30.2916, -53.2519, 10.3242, 0.55", "-33.2897, -55.6994, 10.5051, 0.55", "-37.1206, -59.2582, 10.7722, 0.55", "-39.394, -61.8291, 10.9632, 0.55", "-42.1757, -65.5786, 11.3952, 0.55", "-44.4202, -69.1298, 11.8071, 0.55", "-46.7635, -73.6086, 12.2469, 0.55", "-49.0502, -78.9154, 12.7267, 0.55", "-50.3787, -83.0149, 13.0387, 0.55", "-50.8584, -85.074, 13.2702, 0.55", "-51.615, -89.9515, 13.9575, 0.55", "-52.2035, -94.528, 14.6833, 0.55", "-52.4514, -99.1747, 15.6482, 0.55", "-52.5671, -101.844, 16.3472, 0.55", "-52.7696, -110.114, 18.7718, 0.55", "-52.7844, -110.723, 18.9617, 0.55", "-52.7775, -114.463, 20.1842, 0.55", "-52.9962, -121.128, 22.6273, 0.55", "-53.1289, -123.35, 23.3261, 0.55", "-53.6298, -126.791, 23.8954, 0.55", "-53.8911, -128.061, 23.8202, 0.55", "-54.8918, -132.343, 22.7327, 0.55", "-55.6083, -135.106, 21.4166, 0.55", "-56.9647, -139.484, 18.4237, 0.55", "-58.5705, -144.842, 14.2848, 0.28", "-59.0139, -146.161, 13.0825, 0.55", "-59.7455, -148.154, 11.0877, 0.28", "-59.8643, -148.453, 10.7727, 0.55", "-60.4726, -150.098, 9.18788, 0.28", "-60.6678, -150.658, 8.78818, 0.55", "-61.5367, -153.587, 7.27607, 0.28", "-61.8645, -154.58, 6.78793, 0.55", "-62.7861, -157.457, 5.54649, 0.28", "-63.0711, -158.363, 5.15736, 0.55", "-64.0601, -161.49, 3.87297, 0.28", "-64.5107, -162.928, 3.2723, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.8221, -87.6308, 70.7919, 0.55", "-14.0361, -92.3638, 76.1779, 0.55", "-16.7501, -96.324, 81.9453, 0.55", "-19.4663, -100.783, 87.3352, 0.55", "-22.3393, -105.235, 92.649, 0.55", "-24.7922, -110.632, 97.2497, 0.55", "-27.0307, -115.83, 102.177, 0.55", "-29.111, -122.246, 105.466, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-11.8221, -87.6308, 70.7919, 0.55", "-11.2217, -94.3597, 77.5665, 0.55", "-10.0307, -102.119, 83.0349, 0.55", "-10.358, -110.075, 88.3385, 0.55", "-11.1154, -118.543, 92.7277, 0.55", "-11.5062, -126.94, 97.2949, 0.55", "-11.9057, -134.986, 102.456, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-44.129, 23.5582, -13.4222, 0.83", "-44.7671, 23.8588, -15.5769, 0.83", "-46.2671, 24.7617, -20.5272, 0.55", "-46.8544, 25.2266, -22.568, 0.83", "-47.4263, 25.7896, -24.6705, 0.55", "-47.9069, 26.5109, -26.6545, 0.55", "-48.0927, 26.9371, -27.573, 0.28", "-48.1844, 27.3077, -28.0598, 0.55", "-48.2569, 28.7737, -29.4146, 0.28", "-48.2513, 29.4219, -29.9737, 0.55", "-48.2115, 31.7464, -31.817, 0.28", "-48.1984, 33.6399, -33.1953, 0.55", "-48.2806, 36.6815, -35.1903, 0.28", "-48.4238, 39.403, -36.8504, 0.28", "-48.5788, 40.9584, -37.7085, 0.55", "-48.8752, 42.8191, -38.6661, 0.28", "-49.0683, 43.7228, -39.083, 0.55", "-49.6818, 45.8046, -40.0798, 0.28", "-50.2182, 47.1586, -40.7543, 0.28", "-50.7942, 48.4661, -41.435, 0.28", "-51.0728, 49.1515, -41.8112, 0.55", "-52.0795, 51.8608, -43.4691, 0.28", "-53.1901, 55.0153, -45.5432, 0.55", "-53.5588, 56.0995, -46.2724, 0.55", "-53.9345, 57.2053, -46.9729, 0.55", "-54.8858, 59.5453, -48.4242, 0.55", "-55.6338, 61.0721, -49.3497, 0.28", "-55.9932, 61.6537, -49.6686, 0.55", "-57.0668, 63.266, -50.4403, 0.28", "-58.3186, 64.9457, -51.2804, 0.55", "-60.4087, 67.3257, -52.4421, 0.28", "-61.4151, 68.3108, -52.8931, 0.28", "-63.082, 69.6078, -53.5394, 0.55", "-64.9639, 70.9185, -54.2241, 0.28", "-65.3022, 71.1208, -54.3219, 0.55", "-66.507, 71.7581, -54.601, 0.28", "-70.6093, 73.8152, -55.3864, 0.55", "-76.3537, 76.2042, -56.3504, 0.28", "-77.434, 76.5656, -56.533, 0.55", "-80.4091, 77.4532, -57.007, 0.28", "-81.67, 77.7972, -57.2179, 0.28", "-82.7838, 78.0515, -57.4185, 0.55", "-86.1046, 78.4096, -57.9625, 0.28", "-88.3938, 78.5442, -58.1767, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-44.129, 23.5582, -13.4222, 0.55", "-44.4772, 24.4272, -14.0444, 0.55", "-44.6713, 24.9747, -14.36, 0.28", "-44.8434, 25.4382, -14.4616, 0.55", "-45.2387, 26.5025, -14.6949, 0.28", "-45.5163, 27.2501, -14.8588, 0.55", "-46.0281, 28.6282, -15.161, 0.28", "-46.3133, 29.4448, -15.1955, 0.55", "-47.19, 31.7863, -14.5862, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-133.398, -73.7766, -4.16659, 0.55", "-138.533, -81.4903, -5.56648, 0.55", "-142.172, -89.9149, -7.46927, 0.55", "-145.102, -97.943, -11.3159, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-133.398, -73.7766, -4.16659, 0.55", "-140.704, -84.555, -6.03354, 0.55", "-146.561, -95.9471, -9.02861, 0.55", "-151.864, -107.58, -12.1267, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-167.983, 9.37721, 66.4957, 0.55", "-177.644, 9.26385, 72.9618, 0.55", "-187.787, 10.7221, 78.4544, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-167.983, 9.37721, 66.4957, 0.55", "-177.228, 8.37702, 69.3725, 0.55", "-186.381, 8.9373, 72.6369, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "82.9309, -37.0485, -101.895, 0.28", "88.125, -39.5428, -112.453, 0.28", "88.6445, -39.8481, -113.402, 0.55", "89.5217, -40.3636, -115.004, 0.28", "90.2604, -40.7977, -116.353, 0.28", "91.2381, -41.3722, -118.139, 0.55", "92.5271, -42.1297, -120.493, 0.55", "94.3417, -43.6662, -121.865, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "82.9309, -37.0485, -101.895, 0.55", "83.3913, -37.8764, -103.302, 0.55", "83.5057, -38.2315, -103.929, 0.28", "83.657, -38.8261, -105.022, 0.55", "83.9903, -40.136, -107.428, 0.28", "84.2213, -41.0438, -109.095, 0.55", "84.6126, -42.5818, -111.921, 0.28", "85.0243, -44.3818, -115.583, 0.28", "85.1612, -45.1916, -117.292, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "183.697, -24.1987, -13.488, 0.28", "185.92, -26.507, -11.8761, 0.28", "188.727, -29.4607, -9.43979, 0.28", "190.502, -31.3473, -7.76136, 0.55", "191.568, -32.3573, -6.76734, 0.28", "192.135, -32.8992, -6.22527, 0.28", "194.946, -35.5936, -3.60425, 0.55", "195.59, -36.1536, -2.91728, 0.28", "197.115, -37.5957, -0.967692, 0.55", "198.418, -38.879, 0.651018, 0.28", "199.554, -39.9254, 1.93962, 0.55", "200.89, -41.2195, 3.36972, 0.55", "203.025, -43.4021, 5.28724, 0.55", "203.541, -43.9475, 5.73268, 0.55", "205.39, -46.002, 7.36582, 0.28", "206.108, -46.8552, 8.00468, 0.55", "207.107, -47.9387, 8.8173, 0.28", "208.521, -49.5092, 9.88387, 0.55", "210.872, -52.1314, 11.1317, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "183.697, -24.1987, -13.488, 0.55", "180.933, -24.1807, -13.6833, 0.55", "178.689, -24.1662, -13.8419, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.38704, -31.8935, 5.66727, 0.83", "1.51074, -32.1407, 5.66232, 0.83", "2.91463, -34.323, 5.79615, 0.83", "4.16113, -36.2344, 5.78485, 0.55", "5.15557, -37.7593, 5.77583, 0.55", "7.26929, -41.0006, 5.75668, 0.83", "9.8331, -44.932, 5.73344, 0.55", "11.2247, -46.9888, 5.76948, 0.83", "13.6642, -50.257, 6.00559, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.38704, -31.8935, 5.66727, 0.55", "0.820293, -32.939, 2.65086, 0.55", "0.211958, -34.0612, -0.586887, 0.55", "-0.506186, -35.3861, -4.40907, 0.55", "-1.37825, -36.9948, -9.05045, 0.55", "-1.87311, -37.9077, -11.6843, 0.55", "-1.97252, -38.0911, -12.2134, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-11.9057, -134.986, 102.456, 0.55", "-11.6971, -140.813, 106.929, 0.55", "-10.2975, -146.827, 110.915, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-11.9057, -134.986, 102.456, 0.55", "-12.2236, -142.524, 106.864, 0.55", "-12.9528, -149.895, 111.501, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-47.19, 31.7863, -14.5862, 0.28", "-48.2061, 33.8358, -13.3051, 0.28", "-48.5662, 34.6397, -12.7524, 0.55", "-49.5779, 36.9835, -11.1216, 0.28", "-50.1106, 38.1103, -10.3994, 0.55", "-51.5983, 41.1273, -8.51935, 0.28", "-53.1103, 44.1937, -6.60857, 0.55", "-55.579, 49.0792, -3.33671, 0.28", "-56.105, 50.1265, -2.64176, 0.55", "-57.2946, 52.5165, -1.21681, 0.28", "-57.7612, 53.495, -0.673521, 0.55", "-63.2471, 60.4094, 5.0529, 0.55", "-70.212, 67.5031, 8.49762, 0.55", "-75.7953, 75.3615, 12.713, 0.55", "-80.278, 84.341, 15.8703, 0.55", "-85.9458, 92.6772, 18.8835, 0.55", "-91.975, 99.8838, 23.6176, 0.55", "-96.844, 106.904, 29.7577, 0.55", "-100.279, 113.479, 37.2187, 0.55", "-103.893, 120.488, 44.1833, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-47.19, 31.7863, -14.5862, 0.55", "-49.2416, 31.6882, -12.0638, 0.55", "-50.3019, 31.5917, -10.7319, 0.28", "-51.091, 31.5198, -9.74074, 0.55", "-51.7486, 31.4599, -8.91465, 0.28", "-52.2093, 31.418, -8.33602, 0.55", "-53.4795, 31.3023, -6.7405, 0.28", "-54.3679, 31.0627, -5.75311, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-145.102, -97.943, -11.3159, 0.55", "-148.291, -106.185, -11.0864, 0.55", "-151.258, -114.425, -9.87872, 0.55", "-153.627, -122.935, -10.2327, 0.55", "-156.84, -131.131, -9.42924, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-145.102, -97.943, -11.3159, 0.55", "-149.92, -104.961, -17.9398, 0.55", "-154.313, -110.801, -25.8733, 0.55", "-159.515, -117.619, -32.4154, 0.55", "-166.874, -122.703, -38.4432, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-151.864, -107.58, -12.1267, 0.55", "-157.938, -116.094, -20.1369, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-151.864, -107.58, -12.1267, 0.55", "-154.704, -115.178, -10.3351, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "94.3417, -43.6662, -121.865, 0.28", "97.0097, -44.4991, -123.731, 0.28", "98.2491, -44.886, -124.597, 0.55", "100.613, -45.6237, -126.249, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "94.3417, -43.6662, -121.865, 0.55", "93.947, -44.2438, -122.931, 0.55", "93.1574, -45.3993, -125.063, 0.28", "92.9002, -45.7757, -125.758, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "85.1612, -45.1916, -117.292, 0.28", "85.7199, -47.3076, -121.66, 0.28", "85.9966, -48.3554, -123.822, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "85.1612, -45.1916, -117.292, 0.55", "83.4576, -45.6862, -116.76, 0.55", "78.7071, -47.0655, -115.277, 0.28", "77.5786, -47.3932, -114.925, 0.55", "74.4915, -48.2896, -113.962, 0.28", "72.5016, -48.8674, -113.34, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.6642, -50.257, 6.00559, 0.83", "13.716, -50.5887, 5.97099, 0.83", "14.4398, -54.9266, 5.64812, 0.83", "14.6696, -58.1839, 5.56763, 0.83", "14.6219, -61.3333, 5.77708, 0.83", "14.362, -65.5268, 6.34557, 0.83", "13.9025, -70.3609, 7.15606, 0.83", "13.3676, -75.7561, 8.34459, 0.83", "12.8114, -80.9953, 9.73879, 0.83", "11.7371, -87.4392, 11.2368, 0.83", "11.109, -90.4049, 11.733, 0.83", "10.6503, -92.6364, 11.9657, 0.83", "9.69455, -96.9205, 12.3083, 0.83", "8.96078, -100.757, 12.42, 0.83", "7.97825, -108.933, 11.8254, 0.83", "7.58396, -113.407, 10.9315, 0.83", "7.26528, -117.532, 9.80983, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "13.6642, -50.257, 6.00559, 0.55", "12.4527, -53.3214, 5.6214, 0.55", "11.4872, -55.5511, 5.48746, 0.55", "10.8569, -56.9793, 5.548, 0.55", "9.89614, -59.2169, 5.88053, 0.55", "8.00484, -63.6511, 6.84248, 0.55", "6.42381, -67.0175, 7.904, 0.55", "5.06277, -69.7229, 9.02225, 0.55", "3.56229, -72.4623, 10.3084, 0.55", "2.26099, -74.7375, 11.478, 0.28", "1.08293, -76.6039, 12.6752, 0.55", "-1.29024, -80.0141, 15.2653, 0.55", "-2.92367, -82.113, 17.0216, 0.55", "-3.84675, -83.2889, 17.9906, 0.55", "-4.97551, -84.6762, 19.0441, 0.83", "-8.26581, -88.7844, 21.9047, 0.28", "-9.34129, -90.1431, 22.8178, 0.55", "-11.1866, -92.5919, 24.4184, 0.28", "-11.773, -93.348, 24.9626, 0.55", "-13.0477, -95.1201, 26.241, 0.28", "-13.7419, -96.1259, 26.9021, 0.55", "-15.896, -99.384, 28.1753, 0.55", "-20.809, -108.185, 35.5151, 0.55", "-25.3507, -116.58, 43.5378, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.97252, -38.0911, -12.2134, 0.55", "-1.64079, -39.1175, -15.41, 0.55", "-1.56219, -39.3621, -16.3356, 0.55", "-1.4169, -39.9702, -18.6219, 0.55", "-1.21134, -41.1748, -23.536, 0.28", "-1.2069, -41.338, -24.2473, 0.55", "-1.2668, -42.0737, -27.16, 0.55", "-1.58744, -43.0541, -30.9698, 0.55", "-1.72872, -43.3897, -32.4112, 0.28", "-1.89139, -43.6084, -33.6405, 0.28", "-2.35117, -43.9251, -35.5979, 0.55", "-2.83911, -44.2201, -38.0373, 0.28", "-3.23725, -44.3308, -40.3227, 0.55", "-3.55424, -44.2896, -42.0753, 0.55", "-3.73737, -44.1779, -43.305, 0.55", "-4.18879, -43.722, -46.9789, 0.55", "-4.68814, -43.0194, -50.8148, 0.55", "-4.91242, -42.6533, -52.3814, 0.28", "-5.10947, -42.3276, -53.8837, 0.55", "-5.5485, -41.8285, -56.9114, 0.28", "-5.70585, -41.6843, -57.9243, 0.83", "-6.0837, -41.386, -59.7492, 0.28", "-6.48399, -41.2435, -60.9684, 0.55", "-7.09833, -41.0918, -62.7163, 0.28", "-7.35928, -41.0207, -63.3989, 0.55", "-7.89751, -40.9062, -64.6217, 0.55", "-8.7453, -40.5403, -66.4286, 0.55", "-9.34387, -40.2199, -67.5671, 0.28", "-9.873, -39.8335, -68.4377, 0.55", "-10.4765, -39.2373, -69.4704, 0.28", "-10.5691, -39.1248, -69.6448, 0.55", "-11.1871, -38.0746, -71.4545, 0.28", "-11.529, -37.2995, -72.857, 0.55", "-11.7895, -36.1877, -74.8606, 0.83", "-11.8809, -35.2547, -76.6128, 0.28", "-11.8775, -35.0195, -77.0883, 0.55", "-11.7377, -33.2703, -80.8338, 0.28", "-11.6774, -32.9766, -81.5197, 0.55", "-11.4183, -32.0219, -83.6036, 0.28", "-11.3494, -31.7767, -84.1433, 0.55", "-11.2223, -31.1318, -85.4868, 0.28", "-11.1647, -30.6633, -86.4115, 0.55", "-11.2133, -29.5961, -88.3317, 0.28", "-11.2772, -29.0225, -89.4492, 0.55", "-11.5088, -27.9088, -91.7676, 0.28", "-11.5889, -27.6076, -92.4522, 0.55", "-11.7488, -27.2014, -93.504, 0.28", "-11.9134, -26.8559, -94.3712, 0.55", "-12.3319, -26.1511, -96.1109, 0.28", "-12.4714, -25.9481, -96.6247, 0.55", "-13.6268, -24.3558, -100.337, 0.28", "-14.1044, -23.6999, -101.568, 0.55", "-15.0513, -22.4108, -103.672, 0.28", "-15.4965, -21.7876, -104.6, 0.55", "-16.6189, -20.3634, -106.641, 0.28", "-17.0635, -19.8746, -107.365, 0.55", "-18.8297, -18.3646, -109.87, 0.28", "-19.5955, -17.893, -110.906, 0.55", "-20.7427, -17.5158, -112.366, 0.55", "-21.4774, -17.3522, -113.246, 0.55", "-23.1124, -17.0622, -114.916, 0.28", "-24.8268, -16.7871, -116.459, 0.28", "-26.2936, -16.5462, -117.706, 0.55", "-28.2394, -16.0316, -119.049, 0.28", "-29.2898, -15.6221, -119.602, 0.55", "-31.9154, -14.1877, -120.713, 0.28", "-33.4485, -13.1452, -121.025, 0.55", "-34.5453, -12.3127, -121.067, 0.28", "-35.9271, -11.3547, -120.908, 0.55", "-37.7423, -10.0961, -120.575, 0.28", "-38.4324, -9.64774, -120.455, 0.55", "-41.8728, -7.60808, -120.11, 0.28", "-43.0342, -6.9577, -120.003, 0.55", "-45.8387, -5.49283, -119.703, 0.28", "-47.3644, -4.71164, -119.541, 0.55", "-48.6185, -4.07132, -119.41, 0.55", "-50.1023, -3.3176, -119.281, 0.28", "-50.8238, -2.93966, -119.303, 0.55", "-53.1669, -1.61354, -119.488, 0.28", "-54.3865, -0.791698, -119.564, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.97252, -38.0911, -12.2134, 0.55", "-1.08777, -38.2146, -13.1344, 0.55", "-0.172913, -38.1992, -14.034, 0.55", "1.02076, -38.0701, -15.0947, 0.55", "2.02689, -37.8633, -15.9148, 0.55", "8.96752, -35.6543, -20.7729, 0.55", "10.5233, -34.9551, -21.8845, 0.55", "12.7989, -33.7331, -23.571, 0.55", "14.4043, -32.8061, -24.7738, 0.55", "15.9799, -31.797, -25.9061, 0.28", "18.4472, -30.0863, -27.5185, 0.55", "22.1926, -27.4111, -29.7024, 0.28", "22.4967, -27.2499, -29.9794, 0.55", "24.0726, -26.7211, -32.3207, 0.28", "24.8749, -26.4954, -34.0799, 0.55", "25.5731, -26.4067, -36.0703, 0.55", "26.7865, -26.4403, -39.6674, 0.55", "29.1892, -26.5574, -46.7201, 0.55", "30.8884, -26.6834, -51.427, 0.55", "31.5186, -26.7398, -53.0355, 0.55", "35.904, -27.008, -63.5038, 0.55", "37.208, -27.0297, -66.2861, 0.55", "38.0567, -27.0354, -67.7916, 0.55", "40.3451, -27.1285, -71.1281, 0.55", "46.3285, -27.8036, -78.8139, 0.55", "48.0342, -28.0833, -80.8154, 0.28", "49.0952, -28.301, -81.8816, 0.55", "50.7024, -28.7087, -83.4324, 0.28", "51.415, -28.9606, -84.0201, 0.55", "53.9345, -30.0692, -85.1971, 0.28", "55.8884, -31.5783, -84.9541, 0.55", "57.0494, -32.6581, -84.7289, 0.28", "58.0902, -33.8543, -84.3866, 0.55", "58.9887, -35.163, -83.9977, 0.28", "59.3829, -35.8395, -83.843, 0.55", "60.2814, -37.6149, -83.4001, 0.28", "60.5321, -38.1459, -83.3627, 0.55", "61.9993, -41.1893, -83.3235, 0.28", "62.7641, -42.5942, -83.4782, 0.55", "64.5934, -45.5873, -84.1225, 0.28", "65.3453, -46.6864, -84.4731, 0.55", "68.016, -50.2865, -85.8136, 0.28", "68.6806, -51.1611, -86.1764, 0.55", "70.7315, -53.9338, -87.4475, 0.28", "71.1606, -54.5858, -87.7036, 0.55", "72.2319, -56.312, -88.3794, 0.28", "72.8875, -57.3122, -88.8683, 0.55", "73.586, -58.2919, -89.4198, 0.55", "74.977, -60.2468, -90.5048, 0.28", "75.9888, -61.4491, -91.292, 0.55", "79.3022, -64.4143, -93.8213, 0.28", "80.6174, -65.3648, -94.8539, 0.55", "81.5364, -65.964, -95.547, 0.28", "82.4799, -66.5056, -96.2317, 0.55", "85.4255, -68.0069, -98.2792, 0.28", "87.662, -69.1739, -99.7707, 0.55", "91.4867, -71.4138, -102.036, 0.28", "92.6924, -72.11, -102.743, 0.55", "95.0166, -73.3845, -103.905, 0.28", "95.7924, -73.802, -104.233, 0.55", "97.049, -74.4691, -104.551, 0.28", "98.1542, -75.0297, -104.74, 0.55", "101.134, -76.4084, -104.96, 0.28", "104.551, -77.86, -105.157, 0.28", "106.272, -78.5224, -105.139, 0.28", "108.019, -79.1382, -105.22, 0.55", "110.577, -79.9275, -105.347, 0.28", "111.713, -80.2627, -105.38, 0.83", "114.597, -81.1543, -105.36, 0.28", "115.855, -81.5673, -105.419, 0.55", "121.404, -83.5776, -105.921, 0.28", "124.198, -84.6119, -106.383, 0.28", "126.239, -85.3629, -106.844, 0.55", "127.436, -85.8228, -107.239, 0.55", "130.622, -87.0822, -108.521, 0.28", "133.599, -88.3833, -109.833, 0.55", "136.307, -89.646, -111.03, 0.28", "138.759, -90.8203, -112.234, 0.55", "140.786, -91.7685, -113.217, 0.28", "142.449, -92.4346, -113.937, 0.55", "146.466, -93.8321, -115.498, 0.28", "148.502, -94.538, -116.21, 0.55", "151.556, -95.6063, -117.176, 0.28", "154.057, -96.4137, -117.911, 0.55", "159.92, -98.0651, -119.635, 0.28", "162.317, -98.6113, -120.485, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.2975, -146.827, 110.915, 0.55", "-9.107, -155.592, 115.873, 0.55", "-6.01089, -164.681, 119.132, 0.55", "-4.04285, -173.657, 123.42, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.2975, -146.827, 110.915, 0.55", "-9.71672, -152.396, 116.147, 0.55", "-10.8196, -157.689, 121.575, 0.55", "-12.9276, -161.918, 127.608, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-12.9528, -149.895, 111.501, 0.55", "-12.0177, -161.259, 118.699, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.9528, -149.895, 111.501, 0.55", "-13.7388, -157.122, 115.685, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.26528, -117.532, 9.80983, 0.83", "8.28722, -121.685, 10.5199, 0.83", "9.29918, -125.176, 11.3836, 0.83", "10.3051, -128.646, 12.2421, 0.83", "11.2603, -131.941, 13.0574, 0.83", "12.7325, -137.019, 14.3139, 0.83", "14.194, -142.06, 15.5613, 0.83", "15.4133, -145.38, 16.83, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.26528, -117.532, 9.80983, 0.55", "8.7785, -119.668, 9.58475, 0.55", "9.88434, -121.344, 9.13023, 0.55", "10.6228, -122.588, 8.68583, 0.55", "11.2375, -124.052, 8.0293, 0.83", "11.7899, -125.722, 7.10914, 0.55", "12.3302, -127.356, 6.2091, 0.83", "12.7875, -129.132, 5.09382, 0.55", "13.0322, -130.166, 4.35468, 0.83", "13.6379, -133.519, 1.73907, 0.55", "13.8728, -136.157, -0.430722, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-25.3507, -116.58, 43.5378, 0.55", "-30.6304, -125.429, 48.3491, 0.55", "-37.42, -133.144, 53.2196, 0.55", "-45.0033, -139.791, 58.4765, 0.55", "-53.5108, -145.097, 63.8439, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-25.3507, -116.58, 43.5378, 0.55", "-28.4471, -122.179, 47.3877, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.4133, -145.38, 16.83, 0.55", "15.5033, -146.826, 17.2443, 0.55", "15.6635, -148.669, 17.8252, 0.55", "15.8164, -150.408, 18.3641, 0.55", "15.9129, -151.646, 18.7267, 0.55", "16.0639, -153.857, 19.3368, 0.55", "16.6005, -160.07, 20.9027, 0.55", "16.8437, -162.18, 21.3486, 0.55", "17.029, -163.669, 21.5885, 0.55", "17.2692, -165.371, 21.7273, 0.55", "17.4451, -166.69, 21.7152, 0.55", "17.9613, -169.773, 21.569, 0.55", "18.2718, -172.116, 21.4466, 0.55", "18.5124, -173.652, 21.4157, 0.55", "19.1008, -177.633, 21.5386, 0.55", "19.4672, -180.307, 21.7384, 0.55", "19.9361, -183.751, 22.1921, 0.55", "20.4885, -187.652, 23.014, 0.55", "20.959, -190.249, 23.7365, 0.55", "21.2703, -191.782, 24.2085, 0.55", "21.5312, -193.196, 24.637, 0.55", "21.9007, -194.986, 25.0973, 0.55", "22.7692, -199.311, 25.9066, 0.55", "23.1686, -200.983, 26.1627, 0.55", "23.5698, -202.848, 26.4308, 0.55", "24.1504, -205.649, 26.8164, 0.55", "24.4937, -207.805, 27.124, 0.55", "24.7032, -209.859, 27.3781, 0.55", "24.8155, -211.821, 27.6124, 0.55", "24.8894, -213.736, 27.8658, 0.55", "24.9517, -215.099, 28.0333, 0.55", "25.0753, -217.33, 28.2315, 0.55", "25.2071, -220.014, 28.2611, 0.55", "25.315, -221.317, 28.1804, 0.55", "25.4313, -222.463, 28.0238, 0.55", "25.7634, -224.623, 27.6092, 0.55", "25.964, -225.993, 27.3066, 0.55", "26.2236, -227.681, 26.9997, 0.55", "26.3536, -228.867, 26.852, 0.55", "26.6232, -231.953, 26.5837, 0.55", "26.7507, -234.262, 26.5435, 0.55", "26.8575, -237.835, 26.7695, 0.55", "26.9533, -240.135, 27.1386, 0.55", "27.0269, -242.549, 27.6033, 0.28", "27.0281, -243.52, 27.8279, 0.28", "26.9968, -245.872, 28.5872, 0.28", "26.9291, -248.043, 29.4604, 0.28", "27.0742, -250.898, 30.9401, 0.28", "28.4277, -257.313, 32.6906, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.4133, -145.38, 16.83, 0.55", "16.2782, -145.839, 18.061, 0.55", "17.9191, -147.037, 20.737, 0.55", "19.2684, -148.228, 23.1196, 0.28", "20.6623, -149.589, 25.7311, 0.55", "21.3469, -150.466, 27.458, 0.28", "22.3458, -152.056, 30.6305, 0.55", "22.521, -152.913, 32.1824, 0.28", "22.524, -153.226, 32.7963, 0.28", "22.5176, -153.674, 33.8647, 0.55", "22.6769, -155.131, 37.8839, 0.28", "22.7866, -155.697, 39.5631, 0.55", "23.497, -157.322, 44.3618, 0.28", "24.0093, -158.114, 46.8732, 0.28", "24.7811, -159.127, 49.9047, 0.55", "26.219, -160.689, 54.197, 0.28", "26.4603, -160.894, 54.741, 0.55", "27.7903, -161.885, 57.3031, 0.28", "27.9316, -161.976, 57.5182, 0.55", "29.143, -163.076, 59.4581, 0.28", "29.6757, -163.683, 60.422, 0.55", "33.9759, -168.152, 68.4028, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-53.5108, -145.097, 63.8439, 0.55", "-58.2568, -149.888, 72.1131, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-53.5108, -145.097, 63.8439, 0.55", "-60.062, -152.598, 66.5909, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L6_BP_f61a000b31_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.4506, 7.6394, 2.70579, 0.83 ) }
    dend_43 { pt3dadd( -4.40284, 9.15255, 3.00022, 1.11 ) }
    dend_43 { pt3dadd( -5.5539, 10.0441, 3.15337, 0.83 ) }
    dend_43 { pt3dadd( -6.67219, 10.9028, 3.29059, 0.83 ) }
    dend_43 { pt3dadd( -7.33431, 11.3925, 3.36579, 1.11 ) }
    dend_43 { pt3dadd( -9.40774, 12.9225, 3.60679, 1.11 ) }
    dend_43 { pt3dadd( -13.1163, 15.542, 4.03281, 0.83 ) }
    dend_43 { pt3dadd( -14.4524, 16.4497, 4.17349, 0.83 ) }
    dend_43 { pt3dadd( -15.5104, 17.1472, 4.26088, 0.83 ) }
    dend_43 { pt3dadd( -16.5421, 17.8384, 4.33652, 0.83 ) }
    dend_43 { pt3dadd( -17.382, 18.4081, 4.37733, 0.55 ) }
    dend_43 { pt3dadd( -18.0133, 18.7939, 4.41875, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.12636, 6.03698, -6.08512, 0.55 ) }
    dend_28 { pt3dadd( 6.11265, 6.46665, -6.5287, 0.55 ) }
    dend_28 { pt3dadd( 7.26523, 6.57512, -7.11564, 0.83 ) }
    dend_28 { pt3dadd( 9.0894, 6.69055, -8.20593, 0.55 ) }
    dend_28 { pt3dadd( 9.96996, 6.74627, -8.73224, 1.38 ) }
    dend_28 { pt3dadd( 12.135, 6.88327, -10.0263, 0.55 ) }
    dend_28 { pt3dadd( 13.0572, 6.83688, -10.6437, 0.83 ) }
    dend_28 { pt3dadd( 17.8272, 5.98605, -14.113, 0.55 ) }
    dend_28 { pt3dadd( 18.2887, 5.87164, -14.4946, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.687353, -10.7722, 3.33474, 1.11 ) }
    dend_1 { pt3dadd( -0.741826, -15.5783, 5.05773, 1.11 ) }
    dend_1 { pt3dadd( -0.76401, -17.5357, 5.75944, 0.83 ) }
    dend_1 { pt3dadd( -0.793483, -20.1361, 6.6917, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.800956, 10.0613, -1.37526, 1.11 ) }
    dend_0 { pt3dadd( 0.788859, 12.2294, -1.36296, 1.11 ) }
    dend_0 { pt3dadd( 0.732147, 15.7665, -1.21886, 1.38 ) }
    dend_0 { pt3dadd( 0.731553, 15.9636, -1.20666, 1.38 ) }
    dend_0 { pt3dadd( 0.862013, 18.4097, -0.999946, 0.83 ) }
    dend_0 { pt3dadd( 1.07219, 21.0011, -0.624449, 0.83 ) }
    dend_0 { pt3dadd( 1.47595, 23.9384, 0.196579, 0.83 ) }
    dend_0 { pt3dadd( 1.733, 25.0588, 0.669951, 0.83 ) }
    dend_0 { pt3dadd( 2.00637, 25.875, 1.11448, 1.11 ) }
    dend_0 { pt3dadd( 2.85217, 27.8721, 2.29232, 0.55 ) }
    dend_0 { pt3dadd( 3.84057, 29.9631, 3.69524, 0.83 ) }
    dend_0 { pt3dadd( 5.20595, 32.1313, 5.34013, 0.55 ) }
    dend_0 { pt3dadd( 5.92774, 33.0396, 6.10769, 0.83 ) }
    dend_0 { pt3dadd( 6.91794, 34.2716, 7.27692, 0.55 ) }
    dend_0 { pt3dadd( 8.11995, 35.8369, 8.83117, 0.55 ) }
    dend_0 { pt3dadd( 9.75603, 38.1848, 11.164, 0.55 ) }
    dend_0 { pt3dadd( 11.5537, 40.8643, 13.7377, 0.55 ) }
    dend_0 { pt3dadd( 12.6326, 42.6014, 15.6059, 0.55 ) }
    dend_0 { pt3dadd( 13.8887, 44.7953, 18.1881, 0.55 ) }
    dend_0 { pt3dadd( 14.1413, 45.236, 18.7673, 0.83 ) }
    dend_0 { pt3dadd( 14.7887, 46.4004, 20.3878, 0.55 ) }
    dend_0 { pt3dadd( 15.3542, 47.3111, 21.6719, 0.83 ) }
    dend_0 { pt3dadd( 16.6221, 49.7821, 24.7011, 0.55 ) }
    dend_0 { pt3dadd( 17.1491, 50.6854, 25.6184, 0.83 ) }
    dend_0 { pt3dadd( 17.6936, 51.3579, 26.2796, 0.55 ) }
    dend_0 { pt3dadd( 18.2632, 51.941, 26.8184, 0.83 ) }
    dend_0 { pt3dadd( 19.5706, 53.0364, 27.8524, 0.83 ) }
    dend_0 { pt3dadd( 21.3366, 54.5249, 29.0384, 0.83 ) }
    dend_0 { pt3dadd( 22.4458, 55.5043, 29.6304, 0.55 ) }
    dend_0 { pt3dadd( 23.286, 56.346, 30.0861, 0.55 ) }
    dend_0 { pt3dadd( 25.498, 58.5222, 31.2436, 0.83 ) }
    dend_0 { pt3dadd( 26.9408, 59.9183, 31.9264, 0.55 ) }
    dend_0 { pt3dadd( 29.1556, 61.9672, 32.8646, 0.55 ) }
    dend_0 { pt3dadd( 31.2108, 63.6937, 33.6363, 0.55 ) }
    dend_0 { pt3dadd( 33.0639, 65.161, 34.2737, 0.55 ) }
    dend_0 { pt3dadd( 35.4356, 66.8884, 34.966, 0.55 ) }
    dend_0 { pt3dadd( 36.9046, 67.7488, 35.3412, 0.55 ) }
    dend_0 { pt3dadd( 37.9375, 68.2407, 35.4728, 0.55 ) }
    dend_0 { pt3dadd( 39.3458, 68.6362, 35.5332, 0.55 ) }
    dend_0 { pt3dadd( 41.4985, 68.8838, 35.4577, 0.55 ) }
    dend_0 { pt3dadd( 42.8588, 68.8717, 35.3626, 0.55 ) }
    dend_0 { pt3dadd( 44.8218, 68.8023, 35.3562, 0.55 ) }
    dend_0 { pt3dadd( 48.4893, 68.7865, 35.6629, 0.55 ) }
    dend_0 { pt3dadd( 51.3195, 68.9067, 36.1023, 0.55 ) }
    dend_0 { pt3dadd( 54.2758, 69.1787, 36.7444, 0.55 ) }
    dend_0 { pt3dadd( 56.137, 69.42, 37.3062, 0.55 ) }
    dend_0 { pt3dadd( 60.8837, 70.5047, 39.0878, 0.55 ) }
    dend_0 { pt3dadd( 63.6357, 71.3772, 40.3607, 0.55 ) }
    dend_0 { pt3dadd( 65.6498, 72.1787, 41.52, 0.55 ) }
    dend_0 { pt3dadd( 66.8522, 72.8924, 42.2742, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 68.2376, 73.9331, 43.1386, 0.55 ) }
    dend_0 { pt3dadd( 70.6184, 75.9645, 44.3641, 0.55 ) }
    dend_0 { pt3dadd( 71.1807, 76.4522, 44.5615, 0.55 ) }
    dend_0 { pt3dadd( 72.8218, 77.7615, 45.0145, 0.55 ) }
    dend_0 { pt3dadd( 74.3227, 79.1444, 45.4229, 0.83 ) }
    dend_0 { pt3dadd( 75.1441, 79.9108, 45.6319, 0.55 ) }
    dend_0 { pt3dadd( 76.3773, 81.2174, 45.8916, 0.83 ) }
    dend_0 { pt3dadd( 82.494, 88.1925, 49.0629, 0.83 ) }
    dend_0 { pt3dadd( 87.8238, 96.103, 51.3301, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -18.0133, 18.7939, 4.41875, 0.55 ) }
    dend_55 { pt3dadd( -19.8935, 19.4497, 3.74663, 0.55 ) }
    dend_55 { pt3dadd( -21.9381, 20.1628, 3.01577, 0.55 ) }
    dend_55 { pt3dadd( -24.4055, 21.0234, 2.13377, 0.55 ) }
    dend_55 { pt3dadd( -26.4429, 21.734, 1.40549, 0.83 ) }
    dend_55 { pt3dadd( -28.1502, 22.3295, 0.795184, 0.55 ) }
    dend_55 { pt3dadd( -31.3193, 23.4348, -0.337626, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -18.0133, 18.7939, 4.41875, 0.55 ) }
    dend_44 { pt3dadd( -20.4493, 19.2803, 4.05394, 0.55 ) }
    dend_44 { pt3dadd( -23.0518, 19.7043, 3.92198, 0.55 ) }
    dend_44 { pt3dadd( -26.0057, 20.1768, 3.84437, 0.55 ) }
    dend_44 { pt3dadd( -30.2988, 20.7966, 4.12358, 0.55 ) }
    dend_44 { pt3dadd( -33.9016, 21.1991, 4.60794, 0.55 ) }
    dend_44 { pt3dadd( -37.6866, 21.5556, 5.27441, 0.55 ) }
    dend_44 { pt3dadd( -41.3616, 21.6354, 6.30092, 0.55 ) }
    dend_44 { pt3dadd( -44.5382, 21.3842, 7.47543, 0.55 ) }
    dend_44 { pt3dadd( -48.5139, 20.7777, 9.3473, 0.55 ) }
    dend_44 { pt3dadd( -50.2521, 20.3779, 10.3937, 0.55 ) }
    dend_44 { pt3dadd( -52.1328, 19.9228, 11.6027, 0.55 ) }
    dend_44 { pt3dadd( -55.446, 18.8808, 13.5765, 0.55 ) }
    dend_44 { pt3dadd( -57.199, 18.3442, 14.3543, 0.55 ) }
    dend_44 { pt3dadd( -59.0351, 17.7271, 15.1559, 0.55 ) }
    dend_44 { pt3dadd( -61.2103, 17.0306, 15.8917, 0.55 ) }
    dend_44 { pt3dadd( -63.5716, 16.3255, 16.6294, 0.55 ) }
    dend_44 { pt3dadd( -66.9389, 15.3142, 17.6089, 0.55 ) }
    dend_44 { pt3dadd( -71.4197, 14.2801, 18.5295, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 18.2887, 5.87164, -14.4946, 0.55 ) }
    dend_34 { pt3dadd( 24.3642, 7.40895, -15.7809, 0.55 ) }
    dend_34 { pt3dadd( 27.8607, 8.10931, -17.024, 0.55 ) }
    dend_34 { pt3dadd( 31.3091, 8.64718, -18.3077, 0.55 ) }
    dend_34 { pt3dadd( 33.664, 8.9202, -19.188, 0.55 ) }
    dend_34 { pt3dadd( 37.1046, 9.23796, -20.4517, 0.55 ) }
    dend_34 { pt3dadd( 44.2391, 9.76767, -23.3027, 0.55 ) }
    dend_34 { pt3dadd( 52.3295, 10.3393, -27.0816, 0.55 ) }
    dend_34 { pt3dadd( 56.2477, 10.3813, -29.1978, 0.55 ) }
    dend_34 { pt3dadd( 58.3448, 10.3574, -30.4721, 0.55 ) }
    dend_34 { pt3dadd( 60.644, 10.3463, -31.963, 0.55 ) }
    dend_34 { pt3dadd( 64.7452, 10.2103, -34.6121, 0.55 ) }
    dend_34 { pt3dadd( 66.233, 10.0747, -35.628, 0.55 ) }
    dend_34 { pt3dadd( 72.5319, 9.67971, -40.4132, 0.55 ) }
    dend_34 { pt3dadd( 76.9898, 9.48596, -44.1307, 0.55 ) }
    dend_34 { pt3dadd( 79.5567, 9.42781, -46.3402, 0.55 ) }
    dend_34 { pt3dadd( 82.1166, 9.34689, -48.5429, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 18.2887, 5.87164, -14.4946, 0.83 ) }
    dend_29 { pt3dadd( 20.7447, 7.51547, -14.5707, 0.83 ) }
    dend_29 { pt3dadd( 22.1496, 8.45114, -14.6802, 0.55 ) }
    dend_29 { pt3dadd( 24.2181, 9.86814, -15.0246, 0.83 ) }
    dend_29 { pt3dadd( 25.6081, 10.8558, -15.3009, 0.55 ) }
    dend_29 { pt3dadd( 27.5226, 12.2719, -15.6551, 0.83 ) }
    dend_29 { pt3dadd( 29.8218, 14.0246, -15.9951, 0.55 ) }
    dend_29 { pt3dadd( 30.9814, 14.8202, -16.1131, 0.55 ) }
    dend_29 { pt3dadd( 33.6619, 16.2854, -16.1755, 0.83 ) }
    dend_29 { pt3dadd( 36.1024, 17.3279, -15.895, 0.55 ) }
    dend_29 { pt3dadd( 37.4653, 17.9015, -15.6037, 0.83 ) }
    dend_29 { pt3dadd( 39.5052, 18.817, -14.9479, 0.55 ) }
    dend_29 { pt3dadd( 42.4273, 20.2015, -13.6225, 0.55 ) }
    dend_29 { pt3dadd( 46.4905, 21.9172, -11.5583, 0.55 ) }
    dend_29 { pt3dadd( 50.3663, 23.4214, -9.30791, 0.55 ) }
    dend_29 { pt3dadd( 53.4373, 24.5817, -7.46685, 0.55 ) }
    dend_29 { pt3dadd( 58.4988, 26.5199, -4.40526, 0.55 ) }
    dend_29 { pt3dadd( 62.1963, 28.0508, -2.08575, 0.55 ) }
    dend_29 { pt3dadd( 64.4194, 29.1712, -0.608285, 0.55 ) }
    dend_29 { pt3dadd( 68.4949, 31.6702, 2.13465, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.793483, -20.1361, 6.6917, 0.83 ) }
    dend_11 { pt3dadd( -1.08642, -22.4145, 6.6139, 0.83 ) }
    dend_11 { pt3dadd( -1.37181, -24.6344, 6.53811, 0.83 ) }
    dend_11 { pt3dadd( -1.69046, -27.1128, 6.45349, 0.83 ) }
    dend_11 { pt3dadd( -1.85685, -28.407, 6.4093, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.793483, -20.1361, 6.6917, 0.55 ) }
    dend_2 { pt3dadd( -0.035318, -22.1922, 8.10199, 0.55 ) }
    dend_2 { pt3dadd( 0.643656, -24.7089, 9.94362, 0.55 ) }
    dend_2 { pt3dadd( 1.03158, -28.0049, 12.4994, 0.55 ) }
    dend_2 { pt3dadd( 1.09304, -29.2857, 13.5295, 0.83 ) }
    dend_2 { pt3dadd( 0.956546, -32.5533, 16.539, 0.55 ) }
    dend_2 { pt3dadd( 0.747734, -34.2401, 18.1283, 0.55 ) }
    dend_2 { pt3dadd( 0.274687, -37.5202, 21.3603, 0.83 ) }
    dend_2 { pt3dadd( -0.214686, -39.9553, 23.9187, 0.55 ) }
    dend_2 { pt3dadd( -0.798573, -41.9631, 26.0015, 0.55 ) }
    dend_2 { pt3dadd( -1.99197, -45.7652, 29.8787, 0.55 ) }
    dend_2 { pt3dadd( -2.94075, -48.7955, 32.9331, 0.55 ) }
    dend_2 { pt3dadd( -3.65104, -51.2251, 35.4149, 0.55 ) }
    dend_2 { pt3dadd( -4.2638, -53.8054, 37.9651, 0.28 ) }
    dend_2 { pt3dadd( -4.42898, -54.8805, 38.9839, 0.55 ) }
    dend_2 { pt3dadd( -4.68446, -56.8665, 40.7513, 0.28 ) }
    dend_2 { pt3dadd( -4.66898, -59.9683, 43.0175, 0.55 ) }
    dend_2 { pt3dadd( -7.10243, -70.2761, 51.1694, 0.55 ) }
    dend_2 { pt3dadd( -9.78279, -79.7996, 60.1552, 0.55 ) }
    dend_2 { pt3dadd( -11.8221, -87.6308, 70.7919, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -31.3193, 23.4348, -0.337626, 0.55 ) }
    dend_61 { pt3dadd( -32.8992, 24.2269, 1.3842, 0.55 ) }
    dend_61 { pt3dadd( -33.5131, 24.5655, 2.22152, 0.83 ) }
    dend_61 { pt3dadd( -34.1681, 24.9765, 3.33939, 0.55 ) }
    dend_61 { pt3dadd( -34.6404, 25.3236, 4.25565, 0.83 ) }
    dend_61 { pt3dadd( -35.8964, 26.2934, 6.60905, 0.55 ) }
    dend_61 { pt3dadd( -36.3715, 26.6757, 7.49969, 0.28 ) }
    dend_61 { pt3dadd( -37.1212, 27.3773, 9.07199, 0.55 ) }
    dend_61 { pt3dadd( -38.132, 28.3247, 11.1702, 0.55 ) }
    dend_61 { pt3dadd( -38.9243, 29.0162, 12.7113, 0.55 ) }
    dend_61 { pt3dadd( -40.0057, 29.9135, 14.7219, 0.28 ) }
    dend_61 { pt3dadd( -40.3098, 30.1242, 15.1955, 0.55 ) }
    dend_61 { pt3dadd( -40.9555, 30.5542, 16.14, 0.28 ) }
    dend_61 { pt3dadd( -41.4212, 30.834, 16.7222, 0.55 ) }
    dend_61 { pt3dadd( -42.4172, 31.3434, 17.8172, 0.28 ) }
    dend_61 { pt3dadd( -43.0118, 31.5837, 18.4445, 0.55 ) }
    dend_61 { pt3dadd( -44.0415, 31.919, 19.6045, 0.28 ) }
    dend_61 { pt3dadd( -44.7452, 32.1236, 20.3588, 0.55 ) }
    dend_61 { pt3dadd( -47.9536, 34.1015, 27.2715, 0.55 ) }
    dend_61 { pt3dadd( -50.452, 35.5564, 34.5948, 0.55 ) }
    dend_61 { pt3dadd( -52.6723, 36.3223, 42.1097, 0.55 ) }
    dend_61 { pt3dadd( -54.8882, 36.1068, 49.6617, 0.55 ) }
    dend_61 { pt3dadd( -56.0316, 36.5161, 57.4408, 0.55 ) }
    dend_61 { pt3dadd( -57.8619, 37.0714, 65.0783, 0.55 ) }
    dend_61 { pt3dadd( -59.8405, 38.9078, 72.4744, 0.55 ) }
    dend_61 { pt3dadd( -61.7578, 40.1306, 80.0122, 0.55 ) }
    dend_61 { pt3dadd( -63.525, 41.9184, 87.4735, 0.55 ) }
    dend_61 { pt3dadd( -64.8592, 43.6891, 95.0282, 0.55 ) }
    dend_61 { pt3dadd( -65.2866, 44.727, 102.821, 0.55 ) }
    dend_61 { pt3dadd( -65.8207, 46.4892, 110.476, 0.55 ) }
    dend_61 { pt3dadd( -66.4423, 47.437, 118.267, 0.55 ) }
    dend_61 { pt3dadd( -66.0661, 48.1861, 126.096, 0.55 ) }
    dend_61 { pt3dadd( -64.3591, 49.5984, 133.651, 0.55 ) }
    dend_61 { pt3dadd( -62.6134, 49.4869, 141.327, 0.55 ) }
    dend_61 { pt3dadd( -59.795, 49.2249, 148.674, 0.55 ) }
    dend_61 { pt3dadd( -57.3554, 49.329, 156.159, 0.55 ) }
    dend_61 { pt3dadd( -55.7221, 50.0209, 163.83, 0.55 ) }
    dend_61 { pt3dadd( -55.8077, 51.8076, 171.498, 0.55 ) }
    dend_61 { pt3dadd( -55.1425, 52.7973, 179.28, 0.55 ) }
    dend_61 { pt3dadd( -53.0703, 55.1737, 186.495, 0.55 ) }
    dend_61 { pt3dadd( -52.3018, 58.0338, 193.79, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -31.3193, 23.4348, -0.337626, 0.55 ) }
    dend_56 { pt3dadd( -33.3392, 23.3852, -1.63732, 0.55 ) }
    dend_56 { pt3dadd( -35.1032, 23.316, -3.25079, 0.55 ) }
    dend_56 { pt3dadd( -36.85, 23.3624, -5.05442, 0.55 ) }
    dend_56 { pt3dadd( -37.9438, 23.3915, -6.18384, 0.55 ) }
    dend_56 { pt3dadd( -39.9391, 23.4445, -8.24402, 0.83 ) }
    dend_56 { pt3dadd( -41.3988, 23.4833, -9.75128, 0.55 ) }
    dend_56 { pt3dadd( -43.2597, 23.4619, -12.0309, 0.83 ) }
    dend_56 { pt3dadd( -44.129, 23.5582, -13.4222, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -71.4197, 14.2801, 18.5295, 0.28 ) }
    dend_48 { pt3dadd( -72.5192, 11.9958, 18.5349, 0.28 ) }
    dend_48 { pt3dadd( -73.053, 10.9969, 18.461, 0.28 ) }
    dend_48 { pt3dadd( -73.7447, 9.57934, 18.3063, 0.55 ) }
    dend_48 { pt3dadd( -74.3117, 8.33684, 18.1788, 0.28 ) }
    dend_48 { pt3dadd( -75.1447, 6.44944, 18.0058, 0.55 ) }
    dend_48 { pt3dadd( -77.4469, 0.924216, 17.5766, 0.28 ) }
    dend_48 { pt3dadd( -78.1982, -1.03589, 17.2801, 0.55 ) }
    dend_48 { pt3dadd( -79.3387, -4.07015, 16.729, 0.28 ) }
    dend_48 { pt3dadd( -79.9943, -5.8969, 16.3235, 0.55 ) }
    dend_48 { pt3dadd( -80.4484, -7.16078, 16.0165, 0.28 ) }
    dend_48 { pt3dadd( -80.9652, -8.60926, 15.6748, 0.55 ) }
    dend_48 { pt3dadd( -82.5063, -13.4151, 14.6361, 0.28 ) }
    dend_48 { pt3dadd( -82.9951, -14.8782, 14.2758, 0.55 ) }
    dend_48 { pt3dadd( -83.8702, -17.1589, 13.519, 0.28 ) }
    dend_48 { pt3dadd( -84.6081, -18.648, 12.9266, 0.28 ) }
    dend_48 { pt3dadd( -85.2812, -19.6573, 12.5033, 0.55 ) }
    dend_48 { pt3dadd( -87.6417, -22.5006, 11.3954, 0.28 ) }
    dend_48 { pt3dadd( -88.7427, -23.655, 10.9713, 0.55 ) }
    dend_48 { pt3dadd( -91.4474, -26.3183, 9.86965, 0.28 ) }
    dend_48 { pt3dadd( -94.1631, -28.6996, 8.85313, 0.28 ) }
    dend_48 { pt3dadd( -97.1286, -31.007, 7.79317, 0.28 ) }
    dend_48 { pt3dadd( -98.4915, -31.8895, 7.39211, 0.55 ) }
    dend_48 { pt3dadd( -104.843, -40.8588, 5.05878, 0.55 ) }
    dend_48 { pt3dadd( -111.857, -49.6321, 4.79889, 0.55 ) }
    dend_48 { pt3dadd( -118.807, -58.241, 2.84397, 0.55 ) }
    dend_48 { pt3dadd( -126.016, -66.3268, -0.136923, 0.55 ) }
    dend_48 { pt3dadd( -133.398, -73.7766, -4.16659, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -71.4197, 14.2801, 18.5295, 0.55 ) }
    dend_45 { pt3dadd( -72.4067, 14.184, 18.6891, 0.55 ) }
    dend_45 { pt3dadd( -75.1863, 13.9659, 19.4989, 0.55 ) }
    dend_45 { pt3dadd( -76.2292, 13.8649, 19.8627, 0.55 ) }
    dend_45 { pt3dadd( -78.6789, 13.5581, 20.7661, 0.55 ) }
    dend_45 { pt3dadd( -82.4499, 13.0995, 21.9674, 0.55 ) }
    dend_45 { pt3dadd( -84.4121, 12.9167, 22.5485, 0.28 ) }
    dend_45 { pt3dadd( -87.4641, 12.5575, 23.4021, 0.55 ) }
    dend_45 { pt3dadd( -89.7302, 12.2329, 23.9609, 0.55 ) }
    dend_45 { pt3dadd( -90.6869, 12.0898, 24.1997, 0.28 ) }
    dend_45 { pt3dadd( -96.4254, 11.2272, 25.6255, 0.55 ) }
    dend_45 { pt3dadd( -99.1056, 10.6776, 26.1447, 0.28 ) }
    dend_45 { pt3dadd( -102.722, 9.8931, 26.6347, 0.28 ) }
    dend_45 { pt3dadd( -105.845, 9.2372, 26.8678, 0.55 ) }
    dend_45 { pt3dadd( -118.053, 8.82727, 30.1782, 0.55 ) }
    dend_45 { pt3dadd( -129.814, 8.29661, 34.8249, 0.55 ) }
    dend_45 { pt3dadd( -140.83, 6.68277, 40.8417, 0.55 ) }
    dend_45 { pt3dadd( -151.572, 7.31186, 47.5045, 0.55 ) }
    dend_45 { pt3dadd( -160.692, 7.86036, 56.2627, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -167.983, 9.37721, 66.4957, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 82.1166, 9.34689, -48.5429, 0.55 ) }
    dend_42 { pt3dadd( 85.7355, 10.5819, -51.3521, 0.55 ) }
    dend_42 { pt3dadd( 86.8718, 10.9369, -52.3197, 0.55 ) }
    dend_42 { pt3dadd( 88.289, 11.3321, -53.5228, 0.55 ) }
    dend_42 { pt3dadd( 90.8542, 12.0558, -55.8595, 0.55 ) }
    dend_42 { pt3dadd( 93.517, 12.7144, -58.3847, 0.55 ) }
    dend_42 { pt3dadd( 94.8071, 12.9263, -59.6063, 0.83 ) }
    dend_42 { pt3dadd( 95.8582, 13.0425, -60.7067, 0.55 ) }
    dend_42 { pt3dadd( 96.6346, 13.0787, -61.6234, 0.83 ) }
    dend_42 { pt3dadd( 98.4696, 12.9209, -64.0184, 0.55 ) }
    dend_42 { pt3dadd( 99.9624, 12.644, -66.0299, 0.55 ) }
    dend_42 { pt3dadd( 101.681, 12.2955, -68.2552, 0.55 ) }
    dend_42 { pt3dadd( 103.599, 11.9742, -70.7634, 0.55 ) }
    dend_42 { pt3dadd( 104.881, 11.7329, -72.486, 0.55 ) }
    dend_42 { pt3dadd( 106.326, 11.4653, -74.4798, 0.55 ) }
    dend_42 { pt3dadd( 107.577, 11.2995, -76.2875, 0.55 ) }
    dend_42 { pt3dadd( 108.372, 11.294, -77.5223, 0.55 ) }
    dend_42 { pt3dadd( 109.35, 11.4, -79.9716, 0.55 ) }
    dend_42 { pt3dadd( 109.871, 11.4306, -81.5081, 0.55 ) }
    dend_42 { pt3dadd( 110.282, 11.418, -83.5533, 0.55 ) }
    dend_42 { pt3dadd( 110.805, 11.3157, -87.0215, 0.55 ) }
    dend_42 { pt3dadd( 110.905, 11.2663, -87.808, 0.28 ) }
    dend_42 { pt3dadd( 112.213, 10.5526, -97.3929, 0.28 ) }
    dend_42 { pt3dadd( 112.68, 10.3521, -100.207, 0.83 ) }
    dend_42 { pt3dadd( 114.554, 9.44484, -110.228, 0.83 ) }
    dend_42 { pt3dadd( 115.522, 8.83448, -114.918, 0.83 ) }
    dend_42 { pt3dadd( 115.999, 8.5041, -116.835, 0.55 ) }
    dend_42 { pt3dadd( 116.566, 8.16218, -118.708, 0.55 ) }
    dend_42 { pt3dadd( 118.23, 7.3787, -122.22, 0.55 ) }
    dend_42 { pt3dadd( 120.051, 6.61784, -125.325, 0.28 ) }
    dend_42 { pt3dadd( 120.633, 6.37924, -125.551, 0.55 ) }
    dend_42 { pt3dadd( 121.938, 5.85715, -125.553, 0.28 ) }
    dend_42 { pt3dadd( 122.755, 5.5701, -125.424, 0.55 ) }
    dend_42 { pt3dadd( 123.607, 5.24554, -125.217, 0.28 ) }
    dend_42 { pt3dadd( 124.637, 4.89856, -124.912, 0.55 ) }
    dend_42 { pt3dadd( 126.185, 4.49221, -124.607, 0.28 ) }
    dend_42 { pt3dadd( 127.422, 4.13556, -124.409, 0.55 ) }
    dend_42 { pt3dadd( 128.801, 3.85261, -124.283, 0.28 ) }
    dend_42 { pt3dadd( 130.671, 3.50555, -124.276, 0.55 ) }
    dend_42 { pt3dadd( 132.772, 3.18854, -124.386, 0.55 ) }
    dend_42 { pt3dadd( 134.62, 2.95471, -124.601, 0.28 ) }
    dend_42 { pt3dadd( 137.177, 2.68098, -125.036, 0.55 ) }
    dend_42 { pt3dadd( 141.602, 2.41787, -126.235, 0.55 ) }
    dend_42 { pt3dadd( 143.565, 2.44679, -126.981, 0.55 ) }
    dend_42 { pt3dadd( 144.41, 2.51093, -127.386, 0.83 ) }
    dend_42 { pt3dadd( 146.02, 2.67214, -128.301, 0.55 ) }
    dend_42 { pt3dadd( 147.14, 2.84199, -128.998, 0.83 ) }
    dend_42 { pt3dadd( 150.165, 3.38378, -130.891, 0.55 ) }
    dend_42 { pt3dadd( 151.995, 3.59825, -132.118, 0.28 ) }
    dend_42 { pt3dadd( 152.761, 3.62465, -132.557, 0.55 ) }
    dend_42 { pt3dadd( 154.842, 3.45897, -133.561, 0.28 ) }
    dend_42 { pt3dadd( 155.564, 3.3243, -133.877, 0.55 ) }
    dend_42 { pt3dadd( 157.045, 2.90802, -134.311, 0.28 ) }
    dend_42 { pt3dadd( 158.54, 2.28482, -134.513, 0.55 ) }
    dend_42 { pt3dadd( 161.551, 0.756432, -134.405, 0.28 ) }
    dend_42 { pt3dadd( 162.934, -0.0401523, -134.213, 0.55 ) }
    dend_42 { pt3dadd( 164.98, -1.36837, -133.837, 0.28 ) }
    dend_42 { pt3dadd( 167.567, -3.05414, -133.262, 0.55 ) }
    dend_42 { pt3dadd( 169.442, -4.25246, -132.81, 0.55 ) }
    dend_42 { pt3dadd( 172.705, -6.2331, -131.952, 0.28 ) }
    dend_42 { pt3dadd( 174.049, -6.96055, -131.703, 0.55 ) }
    dend_42 { pt3dadd( 176.378, -8.02929, -131.511, 0.28 ) }
    dend_42 { pt3dadd( 178.717, -8.88138, -131.453, 0.55 ) }
    dend_42 { pt3dadd( 180.015, -9.16716, -131.577, 0.28 ) }
    dend_42 { pt3dadd( 181.204, -9.24973, -131.751, 0.55 ) }
    dend_42 { pt3dadd( 184.58, -9.22571, -132.524, 0.28 ) }
    dend_42 { pt3dadd( 187.011, -9.03715, -133.084, 0.28 ) }
    dend_42 { pt3dadd( 189.142, -8.71715, -133.573, 0.55 ) }
    dend_42 { pt3dadd( 191.499, -8.27832, -134.219, 0.28 ) }
    dend_42 { pt3dadd( 192.098, -8.13541, -134.355, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 82.1166, 9.34689, -48.5429, 0.55 ) }
    dend_35 { pt3dadd( 82.4144, 7.72806, -50.2681, 0.55 ) }
    dend_35 { pt3dadd( 82.5222, 6.34, -51.6106, 0.28 ) }
    dend_35 { pt3dadd( 82.6209, 5.03566, -52.716, 0.55 ) }
    dend_35 { pt3dadd( 82.9924, 2.26553, -55.0949, 0.28 ) }
    dend_35 { pt3dadd( 83.01, 2.09887, -55.2718, 0.55 ) }
    dend_35 { pt3dadd( 83.1302, 1.2456, -56.2835, 0.28 ) }
    dend_35 { pt3dadd( 83.1487, 0.581527, -57.2509, 0.55 ) }
    dend_35 { pt3dadd( 83.1154, -0.0809444, -58.3592, 0.28 ) }
    dend_35 { pt3dadd( 83.0333, -0.96689, -59.9251, 0.55 ) }
    dend_35 { pt3dadd( 82.8255, -3.2065, -63.7999, 0.55 ) }
    dend_35 { pt3dadd( 82.6032, -5.2322, -67.3792, 0.55 ) }
    dend_35 { pt3dadd( 82.4031, -6.84866, -70.2422, 0.55 ) }
    dend_35 { pt3dadd( 82.1661, -8.44452, -73.0163, 0.55 ) }
    dend_35 { pt3dadd( 82.1033, -8.86301, -73.7092, 0.28 ) }
    dend_35 { pt3dadd( 82.0543, -9.32461, -74.4002, 0.55 ) }
    dend_35 { pt3dadd( 82.0664, -9.99082, -75.2842, 0.28 ) }
    dend_35 { pt3dadd( 82.2438, -11.2336, -76.7396, 0.55 ) }
    dend_35 { pt3dadd( 82.8361, -13.7525, -79.0892, 0.55 ) }
    dend_35 { pt3dadd( 83.1699, -15.1442, -80.2172, 0.28 ) }
    dend_35 { pt3dadd( 83.4168, -16.5334, -81.4275, 0.55 ) }
    dend_35 { pt3dadd( 83.5997, -18.4441, -83.1971, 0.28 ) }
    dend_35 { pt3dadd( 83.6327, -19.9658, -84.6613, 0.55 ) }
    dend_35 { pt3dadd( 83.5681, -22.2301, -86.8509, 0.28 ) }
    dend_35 { pt3dadd( 83.5224, -24.5966, -89.034, 0.55 ) }
    dend_35 { pt3dadd( 83.4026, -28.019, -92.2358, 0.28 ) }
    dend_35 { pt3dadd( 83.292, -29.8377, -93.9474, 0.55 ) }
    dend_35 { pt3dadd( 83.1429, -31.6817, -95.747, 0.28 ) }
    dend_35 { pt3dadd( 82.99, -33.2731, -97.4474, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 82.879, -35.2181, -99.7802, 0.55 ) }
    dend_35 { pt3dadd( 82.9309, -37.0485, -101.895, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 68.4949, 31.6702, 2.13465, 0.55 ) }
    dend_31 { pt3dadd( 71.8661, 31.379, 2.93215, 0.55 ) }
    dend_31 { pt3dadd( 74.328, 31.0602, 3.28299, 0.55 ) }
    dend_31 { pt3dadd( 79.7215, 30.2858, 3.77128, 0.55 ) }
    dend_31 { pt3dadd( 82.1498, 29.8764, 3.77651, 0.55 ) }
    dend_31 { pt3dadd( 84.7998, 29.4795, 3.64463, 0.55 ) }
    dend_31 { pt3dadd( 88.3585, 28.9969, 3.21212, 0.55 ) }
    dend_31 { pt3dadd( 92.1172, 28.3702, 2.40375, 0.55 ) }
    dend_31 { pt3dadd( 94.092, 28.0043, 1.75514, 0.55 ) }
    dend_31 { pt3dadd( 98.1086, 27.2324, -0.11098, 0.55 ) }
    dend_31 { pt3dadd( 99.9584, 26.8893, -1.02997, 0.55 ) }
    dend_31 { pt3dadd( 104.296, 25.9965, -3.29191, 0.55 ) }
    dend_31 { pt3dadd( 107.235, 25.2742, -4.79424, 0.55 ) }
    dend_31 { pt3dadd( 109.398, 24.7338, -5.8006, 0.83 ) }
    dend_31 { pt3dadd( 112.856, 23.743, -7.36338, 0.55 ) }
    dend_31 { pt3dadd( 116.245, 22.6126, -8.7545, 0.83 ) }
    dend_31 { pt3dadd( 119.123, 21.5254, -9.82599, 0.55 ) }
    dend_31 { pt3dadd( 121.683, 20.6022, -10.6468, 0.55 ) }
    dend_31 { pt3dadd( 123.137, 20.1453, -11.0359, 0.83 ) }
    dend_31 { pt3dadd( 126.532, 19.0981, -11.7648, 0.28 ) }
    dend_31 { pt3dadd( 128.219, 18.653, -12.0228, 0.28 ) }
    dend_31 { pt3dadd( 129.853, 18.1136, -12.3526, 0.28 ) }
    dend_31 { pt3dadd( 131.618, 17.5779, -12.7192, 0.28 ) }
    dend_31 { pt3dadd( 134.443, 16.7712, -13.3668, 0.28 ) }
    dend_31 { pt3dadd( 135.579, 16.4625, -13.5941, 0.55 ) }
    dend_31 { pt3dadd( 138.296, 15.7652, -13.8715, 0.55 ) }
    dend_31 { pt3dadd( 143.185, 14.4747, -14.1213, 0.55 ) }
    dend_31 { pt3dadd( 144.539, 14.0845, -14.1292, 0.55 ) }
    dend_31 { pt3dadd( 145.749, 13.6987, -14.0824, 0.83 ) }
    dend_31 { pt3dadd( 148.374, 12.9528, -13.7713, 0.55 ) }
    dend_31 { pt3dadd( 150.656, 12.3108, -13.4644, 0.55 ) }
    dend_31 { pt3dadd( 152.813, 11.7138, -13.1646, 0.55 ) }
    dend_31 { pt3dadd( 154.483, 11.2198, -12.9788, 0.55 ) }
    dend_31 { pt3dadd( 157.134, 10.2435, -12.8067, 0.55 ) }
    dend_31 { pt3dadd( 160.262, 8.80642, -12.7664, 0.55 ) }
    dend_31 { pt3dadd( 165.13, 6.00396, -13.0244, 0.55 ) }
    dend_31 { pt3dadd( 167.806, 4.0597, -13.3212, 0.55 ) }
    dend_31 { pt3dadd( 170.129, 1.96811, -13.6803, 0.28 ) }
    dend_31 { pt3dadd( 170.823, 1.1886, -13.822, 0.55 ) }
    dend_31 { pt3dadd( 172.361, -1.00702, -14.1978, 0.28 ) }
    dend_31 { pt3dadd( 173.687, -3.4802, -14.5689, 0.55 ) }
    dend_31 { pt3dadd( 174.938, -6.56735, -14.7867, 0.55 ) }
    dend_31 { pt3dadd( 175.783, -8.59076, -14.8334, 0.28 ) }
    dend_31 { pt3dadd( 176.092, -9.30344, -14.8149, 0.55 ) }
    dend_31 { pt3dadd( 176.894, -11.0713, -14.7444, 0.28 ) }
    dend_31 { pt3dadd( 177.987, -13.3667, -14.5967, 0.55 ) }
    dend_31 { pt3dadd( 180.836, -18.8825, -14.1021, 0.55 ) }
    dend_31 { pt3dadd( 182.319, -21.6574, -13.7937, 0.55 ) }
    dend_31 { pt3dadd( 183.697, -24.1987, -13.488, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 68.4949, 31.6702, 2.13465, 0.55 ) }
    dend_30 { pt3dadd( 69.8422, 32.5304, 3.39337, 0.55 ) }
    dend_30 { pt3dadd( 70.2799, 32.7934, 3.7722, 0.55 ) }
    dend_30 { pt3dadd( 71.9322, 33.6557, 5.14549, 0.55 ) }
    dend_30 { pt3dadd( 73.7683, 34.6698, 6.69057, 0.55 ) }
    dend_30 { pt3dadd( 76.1076, 35.9925, 8.7395, 0.55 ) }
    dend_30 { pt3dadd( 76.7547, 36.3566, 9.30049, 0.55 ) }
    dend_30 { pt3dadd( 77.9213, 36.9564, 10.3157, 0.55 ) }
    dend_30 { pt3dadd( 79.2093, 37.6236, 11.3637, 0.55 ) }
    dend_30 { pt3dadd( 80.7192, 38.4134, 12.4922, 0.55 ) }
    dend_30 { pt3dadd( 82.1396, 39.1814, 13.5516, 0.55 ) }
    dend_30 { pt3dadd( 82.9246, 39.624, 14.0789, 0.55 ) }
    dend_30 { pt3dadd( 83.8448, 40.1711, 14.6843, 0.55 ) }
    dend_30 { pt3dadd( 84.9855, 40.8734, 15.3969, 0.83 ) }
    dend_30 { pt3dadd( 86.8977, 41.932, 16.3637, 0.55 ) }
    dend_30 { pt3dadd( 88.1804, 42.555, 16.9645, 0.83 ) }
    dend_30 { pt3dadd( 89.9796, 43.3106, 17.7731, 0.55 ) }
    dend_30 { pt3dadd( 90.5357, 43.5089, 18.0266, 0.55 ) }
    dend_30 { pt3dadd( 92.2742, 44.0235, 18.8144, 0.55 ) }
    dend_30 { pt3dadd( 95.4226, 44.7057, 20.1827, 0.55 ) }
    dend_30 { pt3dadd( 97.7469, 45.0579, 21.1876, 0.55 ) }
    dend_30 { pt3dadd( 99.5833, 45.2713, 22.06, 0.55 ) }
    dend_30 { pt3dadd( 101.449, 45.4194, 23.052, 0.55 ) }
    dend_30 { pt3dadd( 101.842, 45.4411, 23.2669, 0.28 ) }
    dend_30 { pt3dadd( 102.64, 45.453, 23.7144, 0.83 ) }
    dend_30 { pt3dadd( 105.917, 45.4633, 25.59, 0.55 ) }
    dend_30 { pt3dadd( 108.219, 45.4547, 26.8583, 0.55 ) }
    dend_30 { pt3dadd( 110.096, 45.5138, 27.9249, 0.55 ) }
    dend_30 { pt3dadd( 111.215, 45.5502, 28.5739, 0.83 ) }
    dend_30 { pt3dadd( 112.095, 45.5921, 29.081, 0.28 ) }
    dend_30 { pt3dadd( 112.895, 45.6283, 29.5332, 0.55 ) }
    dend_30 { pt3dadd( 118.848, 47.7727, 33.2888, 0.55 ) }
    dend_30 { pt3dadd( 125.492, 48.4423, 36.381, 0.55 ) }
    dend_30 { pt3dadd( 131.991, 50.058, 39.4309, 0.55 ) }
    dend_30 { pt3dadd( 137.527, 51.2218, 44.1378, 0.55 ) }
    dend_30 { pt3dadd( 142.627, 51.5482, 49.433, 0.55 ) }
    dend_30 { pt3dadd( 148.693, 50.1937, 53.3713, 0.55 ) }
    dend_30 { pt3dadd( 154.916, 47.7338, 56.4347, 0.55 ) }
    dend_30 { pt3dadd( 161.779, 46.3648, 58.7079, 0.55 ) }
    dend_30 { pt3dadd( 168.483, 45.0719, 61.4544, 0.55 ) }
    dend_30 { pt3dadd( 175.51, 44.3621, 63.5202, 0.55 ) }
    dend_30 { pt3dadd( 182.318, 44.3053, 66.3131, 0.55 ) }
    dend_30 { pt3dadd( 188.675, 43.2021, 69.852, 0.55 ) }
    dend_30 { pt3dadd( 195.008, 43.5766, 73.5806, 0.55 ) }
    dend_30 { pt3dadd( 200.807, 45.2968, 77.7712, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.85685, -28.407, 6.4093, 1.38 ) }
    dend_13 { pt3dadd( 1.38704, -31.8935, 5.66727, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.85685, -28.407, 6.4093, 0.55 ) }
    dend_12 { pt3dadd( -3.43436, -30.1097, 6.98381, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.20984, -32.3174, 7.61715, 0.55 ) }
    dend_12 { pt3dadd( -6.55994, -33.7616, 8.12654, 0.55 ) }
    dend_12 { pt3dadd( -7.7607, -34.9605, 8.39098, 0.55 ) }
    dend_12 { pt3dadd( -10.451, -37.4218, 8.75161, 0.55 ) }
    dend_12 { pt3dadd( -12.3464, -39.0553, 8.96053, 0.55 ) }
    dend_12 { pt3dadd( -14.0541, -40.5185, 9.09184, 0.55 ) }
    dend_12 { pt3dadd( -18.4187, -44.0588, 9.43467, 0.55 ) }
    dend_12 { pt3dadd( -23.6327, -48.1417, 9.88347, 0.55 ) }
    dend_12 { pt3dadd( -27.6861, -51.223, 10.1722, 0.55 ) }
    dend_12 { pt3dadd( -30.2916, -53.2519, 10.3242, 0.55 ) }
    dend_12 { pt3dadd( -33.2897, -55.6994, 10.5051, 0.55 ) }
    dend_12 { pt3dadd( -37.1206, -59.2582, 10.7722, 0.55 ) }
    dend_12 { pt3dadd( -39.394, -61.8291, 10.9632, 0.55 ) }
    dend_12 { pt3dadd( -42.1757, -65.5786, 11.3952, 0.55 ) }
    dend_12 { pt3dadd( -44.4202, -69.1298, 11.8071, 0.55 ) }
    dend_12 { pt3dadd( -46.7635, -73.6086, 12.2469, 0.55 ) }
    dend_12 { pt3dadd( -49.0502, -78.9154, 12.7267, 0.55 ) }
    dend_12 { pt3dadd( -50.3787, -83.0149, 13.0387, 0.55 ) }
    dend_12 { pt3dadd( -50.8584, -85.074, 13.2702, 0.55 ) }
    dend_12 { pt3dadd( -51.615, -89.9515, 13.9575, 0.55 ) }
    dend_12 { pt3dadd( -52.2035, -94.528, 14.6833, 0.55 ) }
    dend_12 { pt3dadd( -52.4514, -99.1747, 15.6482, 0.55 ) }
    dend_12 { pt3dadd( -52.5671, -101.844, 16.3472, 0.55 ) }
    dend_12 { pt3dadd( -52.7696, -110.114, 18.7718, 0.55 ) }
    dend_12 { pt3dadd( -52.7844, -110.723, 18.9617, 0.55 ) }
    dend_12 { pt3dadd( -52.7775, -114.463, 20.1842, 0.55 ) }
    dend_12 { pt3dadd( -52.9962, -121.128, 22.6273, 0.55 ) }
    dend_12 { pt3dadd( -53.1289, -123.35, 23.3261, 0.55 ) }
    dend_12 { pt3dadd( -53.6298, -126.791, 23.8954, 0.55 ) }
    dend_12 { pt3dadd( -53.8911, -128.061, 23.8202, 0.55 ) }
    dend_12 { pt3dadd( -54.8918, -132.343, 22.7327, 0.55 ) }
    dend_12 { pt3dadd( -55.6083, -135.106, 21.4166, 0.55 ) }
    dend_12 { pt3dadd( -56.9647, -139.484, 18.4237, 0.55 ) }
    dend_12 { pt3dadd( -58.5705, -144.842, 14.2848, 0.28 ) }
    dend_12 { pt3dadd( -59.0139, -146.161, 13.0825, 0.55 ) }
    dend_12 { pt3dadd( -59.7455, -148.154, 11.0877, 0.28 ) }
    dend_12 { pt3dadd( -59.8643, -148.453, 10.7727, 0.55 ) }
    dend_12 { pt3dadd( -60.4726, -150.098, 9.18788, 0.28 ) }
    dend_12 { pt3dadd( -60.6678, -150.658, 8.78818, 0.55 ) }
    dend_12 { pt3dadd( -61.5367, -153.587, 7.27607, 0.28 ) }
    dend_12 { pt3dadd( -61.8645, -154.58, 6.78793, 0.55 ) }
    dend_12 { pt3dadd( -62.7861, -157.457, 5.54649, 0.28 ) }
    dend_12 { pt3dadd( -63.0711, -158.363, 5.15736, 0.55 ) }
    dend_12 { pt3dadd( -64.0601, -161.49, 3.87297, 0.28 ) }
    dend_12 { pt3dadd( -64.5107, -162.928, 3.2723, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.8221, -87.6308, 70.7919, 0.55 ) }
    dend_10 { pt3dadd( -14.0361, -92.3638, 76.1779, 0.55 ) }
    dend_10 { pt3dadd( -16.7501, -96.324, 81.9453, 0.55 ) }
    dend_10 { pt3dadd( -19.4663, -100.783, 87.3352, 0.55 ) }
    dend_10 { pt3dadd( -22.3393, -105.235, 92.649, 0.55 ) }
    dend_10 { pt3dadd( -24.7922, -110.632, 97.2497, 0.55 ) }
    dend_10 { pt3dadd( -27.0307, -115.83, 102.177, 0.55 ) }
    dend_10 { pt3dadd( -29.111, -122.246, 105.466, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -11.8221, -87.6308, 70.7919, 0.55 ) }
    dend_3 { pt3dadd( -11.2217, -94.3597, 77.5665, 0.55 ) }
    dend_3 { pt3dadd( -10.0307, -102.119, 83.0349, 0.55 ) }
    dend_3 { pt3dadd( -10.358, -110.075, 88.3385, 0.55 ) }
    dend_3 { pt3dadd( -11.1154, -118.543, 92.7277, 0.55 ) }
    dend_3 { pt3dadd( -11.5062, -126.94, 97.2949, 0.55 ) }
    dend_3 { pt3dadd( -11.9057, -134.986, 102.456, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -44.129, 23.5582, -13.4222, 0.83 ) }
    dend_60 { pt3dadd( -44.7671, 23.8588, -15.5769, 0.83 ) }
    dend_60 { pt3dadd( -46.2671, 24.7617, -20.5272, 0.55 ) }
    dend_60 { pt3dadd( -46.8544, 25.2266, -22.568, 0.83 ) }
    dend_60 { pt3dadd( -47.4263, 25.7896, -24.6705, 0.55 ) }
    dend_60 { pt3dadd( -47.9069, 26.5109, -26.6545, 0.55 ) }
    dend_60 { pt3dadd( -48.0927, 26.9371, -27.573, 0.28 ) }
    dend_60 { pt3dadd( -48.1844, 27.3077, -28.0598, 0.55 ) }
    dend_60 { pt3dadd( -48.2569, 28.7737, -29.4146, 0.28 ) }
    dend_60 { pt3dadd( -48.2513, 29.4219, -29.9737, 0.55 ) }
    dend_60 { pt3dadd( -48.2115, 31.7464, -31.817, 0.28 ) }
    dend_60 { pt3dadd( -48.1984, 33.6399, -33.1953, 0.55 ) }
    dend_60 { pt3dadd( -48.2806, 36.6815, -35.1903, 0.28 ) }
    dend_60 { pt3dadd( -48.4238, 39.403, -36.8504, 0.28 ) }
    dend_60 { pt3dadd( -48.5788, 40.9584, -37.7085, 0.55 ) }
    dend_60 { pt3dadd( -48.8752, 42.8191, -38.6661, 0.28 ) }
    dend_60 { pt3dadd( -49.0683, 43.7228, -39.083, 0.55 ) }
    dend_60 { pt3dadd( -49.6818, 45.8046, -40.0798, 0.28 ) }
    dend_60 { pt3dadd( -50.2182, 47.1586, -40.7543, 0.28 ) }
    dend_60 { pt3dadd( -50.7942, 48.4661, -41.435, 0.28 ) }
    dend_60 { pt3dadd( -51.0728, 49.1515, -41.8112, 0.55 ) }
    dend_60 { pt3dadd( -52.0795, 51.8608, -43.4691, 0.28 ) }
    dend_60 { pt3dadd( -53.1901, 55.0153, -45.5432, 0.55 ) }
    dend_60 { pt3dadd( -53.5588, 56.0995, -46.2724, 0.55 ) }
    dend_60 { pt3dadd( -53.9345, 57.2053, -46.9729, 0.55 ) }
    dend_60 { pt3dadd( -54.8858, 59.5453, -48.4242, 0.55 ) }
    dend_60 { pt3dadd( -55.6338, 61.0721, -49.3497, 0.28 ) }
    dend_60 { pt3dadd( -55.9932, 61.6537, -49.6686, 0.55 ) }
    dend_60 { pt3dadd( -57.0668, 63.266, -50.4403, 0.28 ) }
    dend_60 { pt3dadd( -58.3186, 64.9457, -51.2804, 0.55 ) }
    dend_60 { pt3dadd( -60.4087, 67.3257, -52.4421, 0.28 ) }
    dend_60 { pt3dadd( -61.4151, 68.3108, -52.8931, 0.28 ) }
    dend_60 { pt3dadd( -63.082, 69.6078, -53.5394, 0.55 ) }
    dend_60 { pt3dadd( -64.9639, 70.9185, -54.2241, 0.28 ) }
    dend_60 { pt3dadd( -65.3022, 71.1208, -54.3219, 0.55 ) }
    dend_60 { pt3dadd( -66.507, 71.7581, -54.601, 0.28 ) }
    dend_60 { pt3dadd( -70.6093, 73.8152, -55.3864, 0.55 ) }
    dend_60 { pt3dadd( -76.3537, 76.2042, -56.3504, 0.28 ) }
    dend_60 { pt3dadd( -77.434, 76.5656, -56.533, 0.55 ) }
    dend_60 { pt3dadd( -80.4091, 77.4532, -57.007, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -81.67, 77.7972, -57.2179, 0.28 ) }
    dend_60 { pt3dadd( -82.7838, 78.0515, -57.4185, 0.55 ) }
    dend_60 { pt3dadd( -86.1046, 78.4096, -57.9625, 0.28 ) }
    dend_60 { pt3dadd( -88.3938, 78.5442, -58.1767, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -44.129, 23.5582, -13.4222, 0.55 ) }
    dend_57 { pt3dadd( -44.4772, 24.4272, -14.0444, 0.55 ) }
    dend_57 { pt3dadd( -44.6713, 24.9747, -14.36, 0.28 ) }
    dend_57 { pt3dadd( -44.8434, 25.4382, -14.4616, 0.55 ) }
    dend_57 { pt3dadd( -45.2387, 26.5025, -14.6949, 0.28 ) }
    dend_57 { pt3dadd( -45.5163, 27.2501, -14.8588, 0.55 ) }
    dend_57 { pt3dadd( -46.0281, 28.6282, -15.161, 0.28 ) }
    dend_57 { pt3dadd( -46.3133, 29.4448, -15.1955, 0.55 ) }
    dend_57 { pt3dadd( -47.19, 31.7863, -14.5862, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -133.398, -73.7766, -4.16659, 0.55 ) }
    dend_52 { pt3dadd( -138.533, -81.4903, -5.56648, 0.55 ) }
    dend_52 { pt3dadd( -142.172, -89.9149, -7.46927, 0.55 ) }
    dend_52 { pt3dadd( -145.102, -97.943, -11.3159, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -133.398, -73.7766, -4.16659, 0.55 ) }
    dend_49 { pt3dadd( -140.704, -84.555, -6.03354, 0.55 ) }
    dend_49 { pt3dadd( -146.561, -95.9471, -9.02861, 0.55 ) }
    dend_49 { pt3dadd( -151.864, -107.58, -12.1267, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -167.983, 9.37721, 66.4957, 0.55 ) }
    dend_47 { pt3dadd( -177.644, 9.26385, 72.9618, 0.55 ) }
    dend_47 { pt3dadd( -187.787, 10.7221, 78.4544, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -167.983, 9.37721, 66.4957, 0.55 ) }
    dend_46 { pt3dadd( -177.228, 8.37702, 69.3725, 0.55 ) }
    dend_46 { pt3dadd( -186.381, 8.9373, 72.6369, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 82.9309, -37.0485, -101.895, 0.28 ) }
    dend_39 { pt3dadd( 88.125, -39.5428, -112.453, 0.28 ) }
    dend_39 { pt3dadd( 88.6445, -39.8481, -113.402, 0.55 ) }
    dend_39 { pt3dadd( 89.5217, -40.3636, -115.004, 0.28 ) }
    dend_39 { pt3dadd( 90.2604, -40.7977, -116.353, 0.28 ) }
    dend_39 { pt3dadd( 91.2381, -41.3722, -118.139, 0.55 ) }
    dend_39 { pt3dadd( 92.5271, -42.1297, -120.493, 0.55 ) }
    dend_39 { pt3dadd( 94.3417, -43.6662, -121.865, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 82.9309, -37.0485, -101.895, 0.55 ) }
    dend_36 { pt3dadd( 83.3913, -37.8764, -103.302, 0.55 ) }
    dend_36 { pt3dadd( 83.5057, -38.2315, -103.929, 0.28 ) }
    dend_36 { pt3dadd( 83.657, -38.8261, -105.022, 0.55 ) }
    dend_36 { pt3dadd( 83.9903, -40.136, -107.428, 0.28 ) }
    dend_36 { pt3dadd( 84.2213, -41.0438, -109.095, 0.55 ) }
    dend_36 { pt3dadd( 84.6126, -42.5818, -111.921, 0.28 ) }
    dend_36 { pt3dadd( 85.0243, -44.3818, -115.583, 0.28 ) }
    dend_36 { pt3dadd( 85.1612, -45.1916, -117.292, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 183.697, -24.1987, -13.488, 0.28 ) }
    dend_33 { pt3dadd( 185.92, -26.507, -11.8761, 0.28 ) }
    dend_33 { pt3dadd( 188.727, -29.4607, -9.43979, 0.28 ) }
    dend_33 { pt3dadd( 190.502, -31.3473, -7.76136, 0.55 ) }
    dend_33 { pt3dadd( 191.568, -32.3573, -6.76734, 0.28 ) }
    dend_33 { pt3dadd( 192.135, -32.8992, -6.22527, 0.28 ) }
    dend_33 { pt3dadd( 194.946, -35.5936, -3.60425, 0.55 ) }
    dend_33 { pt3dadd( 195.59, -36.1536, -2.91728, 0.28 ) }
    dend_33 { pt3dadd( 197.115, -37.5957, -0.967692, 0.55 ) }
    dend_33 { pt3dadd( 198.418, -38.879, 0.651018, 0.28 ) }
    dend_33 { pt3dadd( 199.554, -39.9254, 1.93962, 0.55 ) }
    dend_33 { pt3dadd( 200.89, -41.2195, 3.36972, 0.55 ) }
    dend_33 { pt3dadd( 203.025, -43.4021, 5.28724, 0.55 ) }
    dend_33 { pt3dadd( 203.541, -43.9475, 5.73268, 0.55 ) }
    dend_33 { pt3dadd( 205.39, -46.002, 7.36582, 0.28 ) }
    dend_33 { pt3dadd( 206.108, -46.8552, 8.00468, 0.55 ) }
    dend_33 { pt3dadd( 207.107, -47.9387, 8.8173, 0.28 ) }
    dend_33 { pt3dadd( 208.521, -49.5092, 9.88387, 0.55 ) }
    dend_33 { pt3dadd( 210.872, -52.1314, 11.1317, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 183.697, -24.1987, -13.488, 0.55 ) }
    dend_32 { pt3dadd( 180.933, -24.1807, -13.6833, 0.55 ) }
    dend_32 { pt3dadd( 178.689, -24.1662, -13.8419, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.38704, -31.8935, 5.66727, 0.83 ) }
    dend_17 { pt3dadd( 1.51074, -32.1407, 5.66232, 0.83 ) }
    dend_17 { pt3dadd( 2.91463, -34.323, 5.79615, 0.83 ) }
    dend_17 { pt3dadd( 4.16113, -36.2344, 5.78485, 0.55 ) }
    dend_17 { pt3dadd( 5.15557, -37.7593, 5.77583, 0.55 ) }
    dend_17 { pt3dadd( 7.26929, -41.0006, 5.75668, 0.83 ) }
    dend_17 { pt3dadd( 9.8331, -44.932, 5.73344, 0.55 ) }
    dend_17 { pt3dadd( 11.2247, -46.9888, 5.76948, 0.83 ) }
    dend_17 { pt3dadd( 13.6642, -50.257, 6.00559, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.38704, -31.8935, 5.66727, 0.55 ) }
    dend_14 { pt3dadd( 0.820293, -32.939, 2.65086, 0.55 ) }
    dend_14 { pt3dadd( 0.211958, -34.0612, -0.586887, 0.55 ) }
    dend_14 { pt3dadd( -0.506186, -35.3861, -4.40907, 0.55 ) }
    dend_14 { pt3dadd( -1.37825, -36.9948, -9.05045, 0.55 ) }
    dend_14 { pt3dadd( -1.87311, -37.9077, -11.6843, 0.55 ) }
    dend_14 { pt3dadd( -1.97252, -38.0911, -12.2134, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -11.9057, -134.986, 102.456, 0.55 ) }
    dend_7 { pt3dadd( -11.6971, -140.813, 106.929, 0.55 ) }
    dend_7 { pt3dadd( -10.2975, -146.827, 110.915, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -11.9057, -134.986, 102.456, 0.55 ) }
    dend_4 { pt3dadd( -12.2236, -142.524, 106.864, 0.55 ) }
    dend_4 { pt3dadd( -12.9528, -149.895, 111.501, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -47.19, 31.7863, -14.5862, 0.28 ) }
    dend_59 { pt3dadd( -48.2061, 33.8358, -13.3051, 0.28 ) }
    dend_59 { pt3dadd( -48.5662, 34.6397, -12.7524, 0.55 ) }
    dend_59 { pt3dadd( -49.5779, 36.9835, -11.1216, 0.28 ) }
    dend_59 { pt3dadd( -50.1106, 38.1103, -10.3994, 0.55 ) }
    dend_59 { pt3dadd( -51.5983, 41.1273, -8.51935, 0.28 ) }
    dend_59 { pt3dadd( -53.1103, 44.1937, -6.60857, 0.55 ) }
    dend_59 { pt3dadd( -55.579, 49.0792, -3.33671, 0.28 ) }
    dend_59 { pt3dadd( -56.105, 50.1265, -2.64176, 0.55 ) }
    dend_59 { pt3dadd( -57.2946, 52.5165, -1.21681, 0.28 ) }
    dend_59 { pt3dadd( -57.7612, 53.495, -0.673521, 0.55 ) }
    dend_59 { pt3dadd( -63.2471, 60.4094, 5.0529, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -70.212, 67.5031, 8.49762, 0.55 ) }
    dend_59 { pt3dadd( -75.7953, 75.3615, 12.713, 0.55 ) }
    dend_59 { pt3dadd( -80.278, 84.341, 15.8703, 0.55 ) }
    dend_59 { pt3dadd( -85.9458, 92.6772, 18.8835, 0.55 ) }
    dend_59 { pt3dadd( -91.975, 99.8838, 23.6176, 0.55 ) }
    dend_59 { pt3dadd( -96.844, 106.904, 29.7577, 0.55 ) }
    dend_59 { pt3dadd( -100.279, 113.479, 37.2187, 0.55 ) }
    dend_59 { pt3dadd( -103.893, 120.488, 44.1833, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -47.19, 31.7863, -14.5862, 0.55 ) }
    dend_58 { pt3dadd( -49.2416, 31.6882, -12.0638, 0.55 ) }
    dend_58 { pt3dadd( -50.3019, 31.5917, -10.7319, 0.28 ) }
    dend_58 { pt3dadd( -51.091, 31.5198, -9.74074, 0.55 ) }
    dend_58 { pt3dadd( -51.7486, 31.4599, -8.91465, 0.28 ) }
    dend_58 { pt3dadd( -52.2093, 31.418, -8.33602, 0.55 ) }
    dend_58 { pt3dadd( -53.4795, 31.3023, -6.7405, 0.28 ) }
    dend_58 { pt3dadd( -54.3679, 31.0627, -5.75311, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -145.102, -97.943, -11.3159, 0.55 ) }
    dend_54 { pt3dadd( -148.291, -106.185, -11.0864, 0.55 ) }
    dend_54 { pt3dadd( -151.258, -114.425, -9.87872, 0.55 ) }
    dend_54 { pt3dadd( -153.627, -122.935, -10.2327, 0.55 ) }
    dend_54 { pt3dadd( -156.84, -131.131, -9.42924, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -145.102, -97.943, -11.3159, 0.55 ) }
    dend_53 { pt3dadd( -149.92, -104.961, -17.9398, 0.55 ) }
    dend_53 { pt3dadd( -154.313, -110.801, -25.8733, 0.55 ) }
    dend_53 { pt3dadd( -159.515, -117.619, -32.4154, 0.55 ) }
    dend_53 { pt3dadd( -166.874, -122.703, -38.4432, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -151.864, -107.58, -12.1267, 0.55 ) }
    dend_51 { pt3dadd( -157.938, -116.094, -20.1369, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -151.864, -107.58, -12.1267, 0.55 ) }
    dend_50 { pt3dadd( -154.704, -115.178, -10.3351, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 94.3417, -43.6662, -121.865, 0.28 ) }
    dend_41 { pt3dadd( 97.0097, -44.4991, -123.731, 0.28 ) }
    dend_41 { pt3dadd( 98.2491, -44.886, -124.597, 0.55 ) }
    dend_41 { pt3dadd( 100.613, -45.6237, -126.249, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 94.3417, -43.6662, -121.865, 0.55 ) }
    dend_40 { pt3dadd( 93.947, -44.2438, -122.931, 0.55 ) }
    dend_40 { pt3dadd( 93.1574, -45.3993, -125.063, 0.28 ) }
    dend_40 { pt3dadd( 92.9002, -45.7757, -125.758, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 85.1612, -45.1916, -117.292, 0.28 ) }
    dend_38 { pt3dadd( 85.7199, -47.3076, -121.66, 0.28 ) }
    dend_38 { pt3dadd( 85.9966, -48.3554, -123.822, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 85.1612, -45.1916, -117.292, 0.55 ) }
    dend_37 { pt3dadd( 83.4576, -45.6862, -116.76, 0.55 ) }
    dend_37 { pt3dadd( 78.7071, -47.0655, -115.277, 0.28 ) }
    dend_37 { pt3dadd( 77.5786, -47.3932, -114.925, 0.55 ) }
    dend_37 { pt3dadd( 74.4915, -48.2896, -113.962, 0.28 ) }
    dend_37 { pt3dadd( 72.5016, -48.8674, -113.34, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.6642, -50.257, 6.00559, 0.83 ) }
    dend_23 { pt3dadd( 13.716, -50.5887, 5.97099, 0.83 ) }
    dend_23 { pt3dadd( 14.4398, -54.9266, 5.64812, 0.83 ) }
    dend_23 { pt3dadd( 14.6696, -58.1839, 5.56763, 0.83 ) }
    dend_23 { pt3dadd( 14.6219, -61.3333, 5.77708, 0.83 ) }
    dend_23 { pt3dadd( 14.362, -65.5268, 6.34557, 0.83 ) }
    dend_23 { pt3dadd( 13.9025, -70.3609, 7.15606, 0.83 ) }
    dend_23 { pt3dadd( 13.3676, -75.7561, 8.34459, 0.83 ) }
    dend_23 { pt3dadd( 12.8114, -80.9953, 9.73879, 0.83 ) }
    dend_23 { pt3dadd( 11.7371, -87.4392, 11.2368, 0.83 ) }
    dend_23 { pt3dadd( 11.109, -90.4049, 11.733, 0.83 ) }
    dend_23 { pt3dadd( 10.6503, -92.6364, 11.9657, 0.83 ) }
    dend_23 { pt3dadd( 9.69455, -96.9205, 12.3083, 0.83 ) }
    dend_23 { pt3dadd( 8.96078, -100.757, 12.42, 0.83 ) }
    dend_23 { pt3dadd( 7.97825, -108.933, 11.8254, 0.83 ) }
    dend_23 { pt3dadd( 7.58396, -113.407, 10.9315, 0.83 ) }
    dend_23 { pt3dadd( 7.26528, -117.532, 9.80983, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 13.6642, -50.257, 6.00559, 0.55 ) }
    dend_18 { pt3dadd( 12.4527, -53.3214, 5.6214, 0.55 ) }
    dend_18 { pt3dadd( 11.4872, -55.5511, 5.48746, 0.55 ) }
    dend_18 { pt3dadd( 10.8569, -56.9793, 5.548, 0.55 ) }
    dend_18 { pt3dadd( 9.89614, -59.2169, 5.88053, 0.55 ) }
    dend_18 { pt3dadd( 8.00484, -63.6511, 6.84248, 0.55 ) }
    dend_18 { pt3dadd( 6.42381, -67.0175, 7.904, 0.55 ) }
    dend_18 { pt3dadd( 5.06277, -69.7229, 9.02225, 0.55 ) }
    dend_18 { pt3dadd( 3.56229, -72.4623, 10.3084, 0.55 ) }
    dend_18 { pt3dadd( 2.26099, -74.7375, 11.478, 0.28 ) }
    dend_18 { pt3dadd( 1.08293, -76.6039, 12.6752, 0.55 ) }
    dend_18 { pt3dadd( -1.29024, -80.0141, 15.2653, 0.55 ) }
    dend_18 { pt3dadd( -2.92367, -82.113, 17.0216, 0.55 ) }
    dend_18 { pt3dadd( -3.84675, -83.2889, 17.9906, 0.55 ) }
    dend_18 { pt3dadd( -4.97551, -84.6762, 19.0441, 0.83 ) }
    dend_18 { pt3dadd( -8.26581, -88.7844, 21.9047, 0.28 ) }
    dend_18 { pt3dadd( -9.34129, -90.1431, 22.8178, 0.55 ) }
    dend_18 { pt3dadd( -11.1866, -92.5919, 24.4184, 0.28 ) }
    dend_18 { pt3dadd( -11.773, -93.348, 24.9626, 0.55 ) }
    dend_18 { pt3dadd( -13.0477, -95.1201, 26.241, 0.28 ) }
    dend_18 { pt3dadd( -13.7419, -96.1259, 26.9021, 0.55 ) }
    dend_18 { pt3dadd( -15.896, -99.384, 28.1753, 0.55 ) }
    dend_18 { pt3dadd( -20.809, -108.185, 35.5151, 0.55 ) }
    dend_18 { pt3dadd( -25.3507, -116.58, 43.5378, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.97252, -38.0911, -12.2134, 0.55 ) }
    dend_16 { pt3dadd( -1.64079, -39.1175, -15.41, 0.55 ) }
    dend_16 { pt3dadd( -1.56219, -39.3621, -16.3356, 0.55 ) }
    dend_16 { pt3dadd( -1.4169, -39.9702, -18.6219, 0.55 ) }
    dend_16 { pt3dadd( -1.21134, -41.1748, -23.536, 0.28 ) }
    dend_16 { pt3dadd( -1.2069, -41.338, -24.2473, 0.55 ) }
    dend_16 { pt3dadd( -1.2668, -42.0737, -27.16, 0.55 ) }
    dend_16 { pt3dadd( -1.58744, -43.0541, -30.9698, 0.55 ) }
    dend_16 { pt3dadd( -1.72872, -43.3897, -32.4112, 0.28 ) }
    dend_16 { pt3dadd( -1.89139, -43.6084, -33.6405, 0.28 ) }
    dend_16 { pt3dadd( -2.35117, -43.9251, -35.5979, 0.55 ) }
    dend_16 { pt3dadd( -2.83911, -44.2201, -38.0373, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -3.23725, -44.3308, -40.3227, 0.55 ) }
    dend_16 { pt3dadd( -3.55424, -44.2896, -42.0753, 0.55 ) }
    dend_16 { pt3dadd( -3.73737, -44.1779, -43.305, 0.55 ) }
    dend_16 { pt3dadd( -4.18879, -43.722, -46.9789, 0.55 ) }
    dend_16 { pt3dadd( -4.68814, -43.0194, -50.8148, 0.55 ) }
    dend_16 { pt3dadd( -4.91242, -42.6533, -52.3814, 0.28 ) }
    dend_16 { pt3dadd( -5.10947, -42.3276, -53.8837, 0.55 ) }
    dend_16 { pt3dadd( -5.5485, -41.8285, -56.9114, 0.28 ) }
    dend_16 { pt3dadd( -5.70585, -41.6843, -57.9243, 0.83 ) }
    dend_16 { pt3dadd( -6.0837, -41.386, -59.7492, 0.28 ) }
    dend_16 { pt3dadd( -6.48399, -41.2435, -60.9684, 0.55 ) }
    dend_16 { pt3dadd( -7.09833, -41.0918, -62.7163, 0.28 ) }
    dend_16 { pt3dadd( -7.35928, -41.0207, -63.3989, 0.55 ) }
    dend_16 { pt3dadd( -7.89751, -40.9062, -64.6217, 0.55 ) }
    dend_16 { pt3dadd( -8.7453, -40.5403, -66.4286, 0.55 ) }
    dend_16 { pt3dadd( -9.34387, -40.2199, -67.5671, 0.28 ) }
    dend_16 { pt3dadd( -9.873, -39.8335, -68.4377, 0.55 ) }
    dend_16 { pt3dadd( -10.4765, -39.2373, -69.4704, 0.28 ) }
    dend_16 { pt3dadd( -10.5691, -39.1248, -69.6448, 0.55 ) }
    dend_16 { pt3dadd( -11.1871, -38.0746, -71.4545, 0.28 ) }
    dend_16 { pt3dadd( -11.529, -37.2995, -72.857, 0.55 ) }
    dend_16 { pt3dadd( -11.7895, -36.1877, -74.8606, 0.83 ) }
    dend_16 { pt3dadd( -11.8809, -35.2547, -76.6128, 0.28 ) }
    dend_16 { pt3dadd( -11.8775, -35.0195, -77.0883, 0.55 ) }
    dend_16 { pt3dadd( -11.7377, -33.2703, -80.8338, 0.28 ) }
    dend_16 { pt3dadd( -11.6774, -32.9766, -81.5197, 0.55 ) }
    dend_16 { pt3dadd( -11.4183, -32.0219, -83.6036, 0.28 ) }
    dend_16 { pt3dadd( -11.3494, -31.7767, -84.1433, 0.55 ) }
    dend_16 { pt3dadd( -11.2223, -31.1318, -85.4868, 0.28 ) }
    dend_16 { pt3dadd( -11.1647, -30.6633, -86.4115, 0.55 ) }
    dend_16 { pt3dadd( -11.2133, -29.5961, -88.3317, 0.28 ) }
    dend_16 { pt3dadd( -11.2772, -29.0225, -89.4492, 0.55 ) }
    dend_16 { pt3dadd( -11.5088, -27.9088, -91.7676, 0.28 ) }
    dend_16 { pt3dadd( -11.5889, -27.6076, -92.4522, 0.55 ) }
    dend_16 { pt3dadd( -11.7488, -27.2014, -93.504, 0.28 ) }
    dend_16 { pt3dadd( -11.9134, -26.8559, -94.3712, 0.55 ) }
    dend_16 { pt3dadd( -12.3319, -26.1511, -96.1109, 0.28 ) }
    dend_16 { pt3dadd( -12.4714, -25.9481, -96.6247, 0.55 ) }
    dend_16 { pt3dadd( -13.6268, -24.3558, -100.337, 0.28 ) }
    dend_16 { pt3dadd( -14.1044, -23.6999, -101.568, 0.55 ) }
    dend_16 { pt3dadd( -15.0513, -22.4108, -103.672, 0.28 ) }
    dend_16 { pt3dadd( -15.4965, -21.7876, -104.6, 0.55 ) }
    dend_16 { pt3dadd( -16.6189, -20.3634, -106.641, 0.28 ) }
    dend_16 { pt3dadd( -17.0635, -19.8746, -107.365, 0.55 ) }
    dend_16 { pt3dadd( -18.8297, -18.3646, -109.87, 0.28 ) }
    dend_16 { pt3dadd( -19.5955, -17.893, -110.906, 0.55 ) }
    dend_16 { pt3dadd( -20.7427, -17.5158, -112.366, 0.55 ) }
    dend_16 { pt3dadd( -21.4774, -17.3522, -113.246, 0.55 ) }
    dend_16 { pt3dadd( -23.1124, -17.0622, -114.916, 0.28 ) }
    dend_16 { pt3dadd( -24.8268, -16.7871, -116.459, 0.28 ) }
    dend_16 { pt3dadd( -26.2936, -16.5462, -117.706, 0.55 ) }
    dend_16 { pt3dadd( -28.2394, -16.0316, -119.049, 0.28 ) }
    dend_16 { pt3dadd( -29.2898, -15.6221, -119.602, 0.55 ) }
    dend_16 { pt3dadd( -31.9154, -14.1877, -120.713, 0.28 ) }
    dend_16 { pt3dadd( -33.4485, -13.1452, -121.025, 0.55 ) }
    dend_16 { pt3dadd( -34.5453, -12.3127, -121.067, 0.28 ) }
    dend_16 { pt3dadd( -35.9271, -11.3547, -120.908, 0.55 ) }
    dend_16 { pt3dadd( -37.7423, -10.0961, -120.575, 0.28 ) }
    dend_16 { pt3dadd( -38.4324, -9.64774, -120.455, 0.55 ) }
    dend_16 { pt3dadd( -41.8728, -7.60808, -120.11, 0.28 ) }
    dend_16 { pt3dadd( -43.0342, -6.9577, -120.003, 0.55 ) }
    dend_16 { pt3dadd( -45.8387, -5.49283, -119.703, 0.28 ) }
    dend_16 { pt3dadd( -47.3644, -4.71164, -119.541, 0.55 ) }
    dend_16 { pt3dadd( -48.6185, -4.07132, -119.41, 0.55 ) }
    dend_16 { pt3dadd( -50.1023, -3.3176, -119.281, 0.28 ) }
    dend_16 { pt3dadd( -50.8238, -2.93966, -119.303, 0.55 ) }
    dend_16 { pt3dadd( -53.1669, -1.61354, -119.488, 0.28 ) }
    dend_16 { pt3dadd( -54.3865, -0.791698, -119.564, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.97252, -38.0911, -12.2134, 0.55 ) }
    dend_15 { pt3dadd( -1.08777, -38.2146, -13.1344, 0.55 ) }
    dend_15 { pt3dadd( -0.172913, -38.1992, -14.034, 0.55 ) }
    dend_15 { pt3dadd( 1.02076, -38.0701, -15.0947, 0.55 ) }
    dend_15 { pt3dadd( 2.02689, -37.8633, -15.9148, 0.55 ) }
    dend_15 { pt3dadd( 8.96752, -35.6543, -20.7729, 0.55 ) }
    dend_15 { pt3dadd( 10.5233, -34.9551, -21.8845, 0.55 ) }
    dend_15 { pt3dadd( 12.7989, -33.7331, -23.571, 0.55 ) }
    dend_15 { pt3dadd( 14.4043, -32.8061, -24.7738, 0.55 ) }
    dend_15 { pt3dadd( 15.9799, -31.797, -25.9061, 0.28 ) }
    dend_15 { pt3dadd( 18.4472, -30.0863, -27.5185, 0.55 ) }
    dend_15 { pt3dadd( 22.1926, -27.4111, -29.7024, 0.28 ) }
    dend_15 { pt3dadd( 22.4967, -27.2499, -29.9794, 0.55 ) }
    dend_15 { pt3dadd( 24.0726, -26.7211, -32.3207, 0.28 ) }
    dend_15 { pt3dadd( 24.8749, -26.4954, -34.0799, 0.55 ) }
    dend_15 { pt3dadd( 25.5731, -26.4067, -36.0703, 0.55 ) }
    dend_15 { pt3dadd( 26.7865, -26.4403, -39.6674, 0.55 ) }
    dend_15 { pt3dadd( 29.1892, -26.5574, -46.7201, 0.55 ) }
    dend_15 { pt3dadd( 30.8884, -26.6834, -51.427, 0.55 ) }
    dend_15 { pt3dadd( 31.5186, -26.7398, -53.0355, 0.55 ) }
    dend_15 { pt3dadd( 35.904, -27.008, -63.5038, 0.55 ) }
    dend_15 { pt3dadd( 37.208, -27.0297, -66.2861, 0.55 ) }
    dend_15 { pt3dadd( 38.0567, -27.0354, -67.7916, 0.55 ) }
    dend_15 { pt3dadd( 40.3451, -27.1285, -71.1281, 0.55 ) }
    dend_15 { pt3dadd( 46.3285, -27.8036, -78.8139, 0.55 ) }
    dend_15 { pt3dadd( 48.0342, -28.0833, -80.8154, 0.28 ) }
    dend_15 { pt3dadd( 49.0952, -28.301, -81.8816, 0.55 ) }
    dend_15 { pt3dadd( 50.7024, -28.7087, -83.4324, 0.28 ) }
    dend_15 { pt3dadd( 51.415, -28.9606, -84.0201, 0.55 ) }
    dend_15 { pt3dadd( 53.9345, -30.0692, -85.1971, 0.28 ) }
    dend_15 { pt3dadd( 55.8884, -31.5783, -84.9541, 0.55 ) }
    dend_15 { pt3dadd( 57.0494, -32.6581, -84.7289, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 58.0902, -33.8543, -84.3866, 0.55 ) }
    dend_15 { pt3dadd( 58.9887, -35.163, -83.9977, 0.28 ) }
    dend_15 { pt3dadd( 59.3829, -35.8395, -83.843, 0.55 ) }
    dend_15 { pt3dadd( 60.2814, -37.6149, -83.4001, 0.28 ) }
    dend_15 { pt3dadd( 60.5321, -38.1459, -83.3627, 0.55 ) }
    dend_15 { pt3dadd( 61.9993, -41.1893, -83.3235, 0.28 ) }
    dend_15 { pt3dadd( 62.7641, -42.5942, -83.4782, 0.55 ) }
    dend_15 { pt3dadd( 64.5934, -45.5873, -84.1225, 0.28 ) }
    dend_15 { pt3dadd( 65.3453, -46.6864, -84.4731, 0.55 ) }
    dend_15 { pt3dadd( 68.016, -50.2865, -85.8136, 0.28 ) }
    dend_15 { pt3dadd( 68.6806, -51.1611, -86.1764, 0.55 ) }
    dend_15 { pt3dadd( 70.7315, -53.9338, -87.4475, 0.28 ) }
    dend_15 { pt3dadd( 71.1606, -54.5858, -87.7036, 0.55 ) }
    dend_15 { pt3dadd( 72.2319, -56.312, -88.3794, 0.28 ) }
    dend_15 { pt3dadd( 72.8875, -57.3122, -88.8683, 0.55 ) }
    dend_15 { pt3dadd( 73.586, -58.2919, -89.4198, 0.55 ) }
    dend_15 { pt3dadd( 74.977, -60.2468, -90.5048, 0.28 ) }
    dend_15 { pt3dadd( 75.9888, -61.4491, -91.292, 0.55 ) }
    dend_15 { pt3dadd( 79.3022, -64.4143, -93.8213, 0.28 ) }
    dend_15 { pt3dadd( 80.6174, -65.3648, -94.8539, 0.55 ) }
    dend_15 { pt3dadd( 81.5364, -65.964, -95.547, 0.28 ) }
    dend_15 { pt3dadd( 82.4799, -66.5056, -96.2317, 0.55 ) }
    dend_15 { pt3dadd( 85.4255, -68.0069, -98.2792, 0.28 ) }
    dend_15 { pt3dadd( 87.662, -69.1739, -99.7707, 0.55 ) }
    dend_15 { pt3dadd( 91.4867, -71.4138, -102.036, 0.28 ) }
    dend_15 { pt3dadd( 92.6924, -72.11, -102.743, 0.55 ) }
    dend_15 { pt3dadd( 95.0166, -73.3845, -103.905, 0.28 ) }
    dend_15 { pt3dadd( 95.7924, -73.802, -104.233, 0.55 ) }
    dend_15 { pt3dadd( 97.049, -74.4691, -104.551, 0.28 ) }
    dend_15 { pt3dadd( 98.1542, -75.0297, -104.74, 0.55 ) }
    dend_15 { pt3dadd( 101.134, -76.4084, -104.96, 0.28 ) }
    dend_15 { pt3dadd( 104.551, -77.86, -105.157, 0.28 ) }
    dend_15 { pt3dadd( 106.272, -78.5224, -105.139, 0.28 ) }
    dend_15 { pt3dadd( 108.019, -79.1382, -105.22, 0.55 ) }
    dend_15 { pt3dadd( 110.577, -79.9275, -105.347, 0.28 ) }
    dend_15 { pt3dadd( 111.713, -80.2627, -105.38, 0.83 ) }
    dend_15 { pt3dadd( 114.597, -81.1543, -105.36, 0.28 ) }
    dend_15 { pt3dadd( 115.855, -81.5673, -105.419, 0.55 ) }
    dend_15 { pt3dadd( 121.404, -83.5776, -105.921, 0.28 ) }
    dend_15 { pt3dadd( 124.198, -84.6119, -106.383, 0.28 ) }
    dend_15 { pt3dadd( 126.239, -85.3629, -106.844, 0.55 ) }
    dend_15 { pt3dadd( 127.436, -85.8228, -107.239, 0.55 ) }
    dend_15 { pt3dadd( 130.622, -87.0822, -108.521, 0.28 ) }
    dend_15 { pt3dadd( 133.599, -88.3833, -109.833, 0.55 ) }
    dend_15 { pt3dadd( 136.307, -89.646, -111.03, 0.28 ) }
    dend_15 { pt3dadd( 138.759, -90.8203, -112.234, 0.55 ) }
    dend_15 { pt3dadd( 140.786, -91.7685, -113.217, 0.28 ) }
    dend_15 { pt3dadd( 142.449, -92.4346, -113.937, 0.55 ) }
    dend_15 { pt3dadd( 146.466, -93.8321, -115.498, 0.28 ) }
    dend_15 { pt3dadd( 148.502, -94.538, -116.21, 0.55 ) }
    dend_15 { pt3dadd( 151.556, -95.6063, -117.176, 0.28 ) }
    dend_15 { pt3dadd( 154.057, -96.4137, -117.911, 0.55 ) }
    dend_15 { pt3dadd( 159.92, -98.0651, -119.635, 0.28 ) }
    dend_15 { pt3dadd( 162.317, -98.6113, -120.485, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.2975, -146.827, 110.915, 0.55 ) }
    dend_9 { pt3dadd( -9.107, -155.592, 115.873, 0.55 ) }
    dend_9 { pt3dadd( -6.01089, -164.681, 119.132, 0.55 ) }
    dend_9 { pt3dadd( -4.04285, -173.657, 123.42, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.2975, -146.827, 110.915, 0.55 ) }
    dend_8 { pt3dadd( -9.71672, -152.396, 116.147, 0.55 ) }
    dend_8 { pt3dadd( -10.8196, -157.689, 121.575, 0.55 ) }
    dend_8 { pt3dadd( -12.9276, -161.918, 127.608, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -12.9528, -149.895, 111.501, 0.55 ) }
    dend_6 { pt3dadd( -12.0177, -161.259, 118.699, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.9528, -149.895, 111.501, 0.55 ) }
    dend_5 { pt3dadd( -13.7388, -157.122, 115.685, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.26528, -117.532, 9.80983, 0.83 ) }
    dend_25 { pt3dadd( 8.28722, -121.685, 10.5199, 0.83 ) }
    dend_25 { pt3dadd( 9.29918, -125.176, 11.3836, 0.83 ) }
    dend_25 { pt3dadd( 10.3051, -128.646, 12.2421, 0.83 ) }
    dend_25 { pt3dadd( 11.2603, -131.941, 13.0574, 0.83 ) }
    dend_25 { pt3dadd( 12.7325, -137.019, 14.3139, 0.83 ) }
    dend_25 { pt3dadd( 14.194, -142.06, 15.5613, 0.83 ) }
    dend_25 { pt3dadd( 15.4133, -145.38, 16.83, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.26528, -117.532, 9.80983, 0.55 ) }
    dend_24 { pt3dadd( 8.7785, -119.668, 9.58475, 0.55 ) }
    dend_24 { pt3dadd( 9.88434, -121.344, 9.13023, 0.55 ) }
    dend_24 { pt3dadd( 10.6228, -122.588, 8.68583, 0.55 ) }
    dend_24 { pt3dadd( 11.2375, -124.052, 8.0293, 0.83 ) }
    dend_24 { pt3dadd( 11.7899, -125.722, 7.10914, 0.55 ) }
    dend_24 { pt3dadd( 12.3302, -127.356, 6.2091, 0.83 ) }
    dend_24 { pt3dadd( 12.7875, -129.132, 5.09382, 0.55 ) }
    dend_24 { pt3dadd( 13.0322, -130.166, 4.35468, 0.83 ) }
    dend_24 { pt3dadd( 13.6379, -133.519, 1.73907, 0.55 ) }
    dend_24 { pt3dadd( 13.8728, -136.157, -0.430722, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -25.3507, -116.58, 43.5378, 0.55 ) }
    dend_20 { pt3dadd( -30.6304, -125.429, 48.3491, 0.55 ) }
    dend_20 { pt3dadd( -37.42, -133.144, 53.2196, 0.55 ) }
    dend_20 { pt3dadd( -45.0033, -139.791, 58.4765, 0.55 ) }
    dend_20 { pt3dadd( -53.5108, -145.097, 63.8439, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -25.3507, -116.58, 43.5378, 0.55 ) }
    dend_19 { pt3dadd( -28.4471, -122.179, 47.3877, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.4133, -145.38, 16.83, 0.55 ) }
    dend_27 { pt3dadd( 15.5033, -146.826, 17.2443, 0.55 ) }
    dend_27 { pt3dadd( 15.6635, -148.669, 17.8252, 0.55 ) }
    dend_27 { pt3dadd( 15.8164, -150.408, 18.3641, 0.55 ) }
    dend_27 { pt3dadd( 15.9129, -151.646, 18.7267, 0.55 ) }
    dend_27 { pt3dadd( 16.0639, -153.857, 19.3368, 0.55 ) }
    dend_27 { pt3dadd( 16.6005, -160.07, 20.9027, 0.55 ) }
    dend_27 { pt3dadd( 16.8437, -162.18, 21.3486, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 17.029, -163.669, 21.5885, 0.55 ) }
    dend_27 { pt3dadd( 17.2692, -165.371, 21.7273, 0.55 ) }
    dend_27 { pt3dadd( 17.4451, -166.69, 21.7152, 0.55 ) }
    dend_27 { pt3dadd( 17.9613, -169.773, 21.569, 0.55 ) }
    dend_27 { pt3dadd( 18.2718, -172.116, 21.4466, 0.55 ) }
    dend_27 { pt3dadd( 18.5124, -173.652, 21.4157, 0.55 ) }
    dend_27 { pt3dadd( 19.1008, -177.633, 21.5386, 0.55 ) }
    dend_27 { pt3dadd( 19.4672, -180.307, 21.7384, 0.55 ) }
    dend_27 { pt3dadd( 19.9361, -183.751, 22.1921, 0.55 ) }
    dend_27 { pt3dadd( 20.4885, -187.652, 23.014, 0.55 ) }
    dend_27 { pt3dadd( 20.959, -190.249, 23.7365, 0.55 ) }
    dend_27 { pt3dadd( 21.2703, -191.782, 24.2085, 0.55 ) }
    dend_27 { pt3dadd( 21.5312, -193.196, 24.637, 0.55 ) }
    dend_27 { pt3dadd( 21.9007, -194.986, 25.0973, 0.55 ) }
    dend_27 { pt3dadd( 22.7692, -199.311, 25.9066, 0.55 ) }
    dend_27 { pt3dadd( 23.1686, -200.983, 26.1627, 0.55 ) }
    dend_27 { pt3dadd( 23.5698, -202.848, 26.4308, 0.55 ) }
    dend_27 { pt3dadd( 24.1504, -205.649, 26.8164, 0.55 ) }
    dend_27 { pt3dadd( 24.4937, -207.805, 27.124, 0.55 ) }
    dend_27 { pt3dadd( 24.7032, -209.859, 27.3781, 0.55 ) }
    dend_27 { pt3dadd( 24.8155, -211.821, 27.6124, 0.55 ) }
    dend_27 { pt3dadd( 24.8894, -213.736, 27.8658, 0.55 ) }
    dend_27 { pt3dadd( 24.9517, -215.099, 28.0333, 0.55 ) }
    dend_27 { pt3dadd( 25.0753, -217.33, 28.2315, 0.55 ) }
    dend_27 { pt3dadd( 25.2071, -220.014, 28.2611, 0.55 ) }
    dend_27 { pt3dadd( 25.315, -221.317, 28.1804, 0.55 ) }
    dend_27 { pt3dadd( 25.4313, -222.463, 28.0238, 0.55 ) }
    dend_27 { pt3dadd( 25.7634, -224.623, 27.6092, 0.55 ) }
    dend_27 { pt3dadd( 25.964, -225.993, 27.3066, 0.55 ) }
    dend_27 { pt3dadd( 26.2236, -227.681, 26.9997, 0.55 ) }
    dend_27 { pt3dadd( 26.3536, -228.867, 26.852, 0.55 ) }
    dend_27 { pt3dadd( 26.6232, -231.953, 26.5837, 0.55 ) }
    dend_27 { pt3dadd( 26.7507, -234.262, 26.5435, 0.55 ) }
    dend_27 { pt3dadd( 26.8575, -237.835, 26.7695, 0.55 ) }
    dend_27 { pt3dadd( 26.9533, -240.135, 27.1386, 0.55 ) }
    dend_27 { pt3dadd( 27.0269, -242.549, 27.6033, 0.28 ) }
    dend_27 { pt3dadd( 27.0281, -243.52, 27.8279, 0.28 ) }
    dend_27 { pt3dadd( 26.9968, -245.872, 28.5872, 0.28 ) }
    dend_27 { pt3dadd( 26.9291, -248.043, 29.4604, 0.28 ) }
    dend_27 { pt3dadd( 27.0742, -250.898, 30.9401, 0.28 ) }
    dend_27 { pt3dadd( 28.4277, -257.313, 32.6906, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.4133, -145.38, 16.83, 0.55 ) }
    dend_26 { pt3dadd( 16.2782, -145.839, 18.061, 0.55 ) }
    dend_26 { pt3dadd( 17.9191, -147.037, 20.737, 0.55 ) }
    dend_26 { pt3dadd( 19.2684, -148.228, 23.1196, 0.28 ) }
    dend_26 { pt3dadd( 20.6623, -149.589, 25.7311, 0.55 ) }
    dend_26 { pt3dadd( 21.3469, -150.466, 27.458, 0.28 ) }
    dend_26 { pt3dadd( 22.3458, -152.056, 30.6305, 0.55 ) }
    dend_26 { pt3dadd( 22.521, -152.913, 32.1824, 0.28 ) }
    dend_26 { pt3dadd( 22.524, -153.226, 32.7963, 0.28 ) }
    dend_26 { pt3dadd( 22.5176, -153.674, 33.8647, 0.55 ) }
    dend_26 { pt3dadd( 22.6769, -155.131, 37.8839, 0.28 ) }
    dend_26 { pt3dadd( 22.7866, -155.697, 39.5631, 0.55 ) }
    dend_26 { pt3dadd( 23.497, -157.322, 44.3618, 0.28 ) }
    dend_26 { pt3dadd( 24.0093, -158.114, 46.8732, 0.28 ) }
    dend_26 { pt3dadd( 24.7811, -159.127, 49.9047, 0.55 ) }
    dend_26 { pt3dadd( 26.219, -160.689, 54.197, 0.28 ) }
    dend_26 { pt3dadd( 26.4603, -160.894, 54.741, 0.55 ) }
    dend_26 { pt3dadd( 27.7903, -161.885, 57.3031, 0.28 ) }
    dend_26 { pt3dadd( 27.9316, -161.976, 57.5182, 0.55 ) }
    dend_26 { pt3dadd( 29.143, -163.076, 59.4581, 0.28 ) }
    dend_26 { pt3dadd( 29.6757, -163.683, 60.422, 0.55 ) }
    dend_26 { pt3dadd( 33.9759, -168.152, 68.4028, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -53.5108, -145.097, 63.8439, 0.55 ) }
    dend_22 { pt3dadd( -58.2568, -149.888, 72.1131, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -53.5108, -145.097, 63.8439, 0.55 ) }
    dend_21 { pt3dadd( -60.062, -152.598, 66.5909, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 11
    dend_48 nseg = 5
    dend_45 nseg = 5
    dend_42 nseg = 9
    dend_35 nseg = 3
    dend_31 nseg = 7
    dend_30 nseg = 7
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_33 nseg = 3
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 7
    dend_15 nseg = 11
    dend_20 nseg = 3
    dend_27 nseg = 5
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L6_BP_f61a000b31_0_0


