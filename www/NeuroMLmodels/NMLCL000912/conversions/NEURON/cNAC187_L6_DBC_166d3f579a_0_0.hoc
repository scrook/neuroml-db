// Cell: cNAC187_L6_DBC_166d3f579a_0_0
/*
{
  "id" : "cNAC187_L6_DBC_166d3f579a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -3.92838, -7.44048, 0.74", "-6.8285, -3.92838, -7.44048, 0.74", "-7.39373, -4.85786, -7.52135, 0.74", "-7.44068, -4.9078, -7.52703, 0.74", "-8.38138, -5.56394, -7.62169, 0.66", "-9.30902, -5.99869, -7.69946, 0.44", "-10.3948, -6.35523, -7.77574, 0.44", "-11.4161, -6.52877, -7.95362, 0.44", "-12.0755, -6.57977, -8.11098, 1.03", "-12.8979, -6.63255, -8.38887, 1.33", "-13.6303, -6.65027, -8.70067, 1.47", "-14.3571, -6.69008, -9.10229, 0.66", "-15.7518, -7.09175, -10.3005, 0.37", "-16.0585, -7.34465, -10.7775, 0.37", "-16.4781, -7.96065, -11.7464, 1.11", "-16.4972, -8.00513, -11.8092, 1.11", "-16.6108, -8.40763, -12.3192, 0.88", "-16.7763, -9.31207, -13.3446, 0.59", "-16.9562, -10.5132, -14.5367, 1.03", "-16.987, -10.7211, -14.7544, 1.25", "-17.0011, -10.7928, -14.8279, 1.25", "-17.0761, -11.107, -15.1526, 1.25", "-17.1056, -11.1915, -15.2449, 1.25", "-17.5273, -12.016, -16.1271, 0.52", "-18.0005, -12.6274, -16.792, 0.22", "-18.3065, -12.8437, -17.1125, 0.22", "-18.523, -12.9307, -17.2896, 0.22", "-19.0533, -13.0573, -17.6484, 0.88", "-19.4173, -13.134, -17.8499, 1.25", "-19.9829, -13.2629, -18.1188, 1.25", "-21.164, -13.6453, -18.7565, 0.29", "-21.4991, -13.8134, -18.9805, 0.29", "-21.9948, -14.1831, -19.3709, 0.29", "-22.5392, -14.7275, -19.8484, 0.29", "-23.0742, -15.363, -20.3642, 0.29", "-23.5804, -16.0522, -20.8766, 0.52", "-23.7781, -16.3595, -21.0806, 0.52", "-23.952, -16.6004, -21.2459, 0.29", "-24.2184, -16.9298, -21.5668, 0.29", "-24.5487, -17.2854, -22.0172, 1.25", "-24.7858, -17.5093, -22.3339, 1.47", "-24.8227, -17.5435, -22.3853, 1.47", "-25.0, -17.7176, -22.66, 1.47", "-26.02, -18.8211, -24.4868, 0.22", "-26.1791, -19.0231, -24.8149, 0.81", "-26.3735, -19.2817, -25.2204, 0.81", "-26.3999, -19.3144, -25.2753, 0.81", "-26.6719, -19.5985, -25.7801, 0.96", "-27.2868, -20.1687, -26.8905, 0.29", "-27.327, -20.1991, -26.955, 0.29", "-27.5635, -20.4175, -27.3756, 0.29", "-28.23, -21.257, -28.6752, 1.92", "-28.5761, -21.8028, -29.3952, 2.58", "-28.9107, -22.4301, -30.132, 2.58", "-28.9348, -22.4752, -30.1785, 2.58", "-29.6156, -23.7189, -31.3309, 0.66", "-30.1481, -24.5561, -32.0493, 0.22", "-30.2603, -24.7003, -32.154, 0.81", "-30.9254, -25.4174, -32.6781, 0.22", "-31.7258, -26.1856, -33.2299, 2.58", "-32.106, -26.5146, -33.4827, 3.32", "-33.5506, -27.6417, -34.4052, 0.44", "-34.3043, -28.2318, -34.8985, 1.33", "-34.8871, -28.7375, -35.2888, 1.47", "-35.5199, -29.4264, -35.7778, 0.22", "-35.5854, -29.5149, -35.8406, 0.22", "-35.9792, -30.0905, -36.2411, 0.22", "-36.3666, -30.7342, -36.6459, 1.69", "-36.5146, -30.9639, -36.792, 2.06", "-37.5793, -32.3498, -37.8509, 0.22", "-37.6174, -32.3918, -37.8896, 0.22", "-38.0862, -32.9084, -38.416, 0.22", "-38.3223, -33.1688, -38.7022, 0.88", "-38.5495, -33.4692, -39.0641, 1.11", "-39.4889, -34.8501, -40.7295, 0.22", "-39.5159, -34.8969, -40.7873, 0.22", "-39.8342, -35.524, -41.5736, 1.84", "-39.9716, -35.8469, -41.9721, 1.99", "-40.5619, -37.3737, -43.7684, 0.29", "-40.7392, -37.8198, -44.2469, 0.29", "-41.3448, -39.0497, -45.4419, 0.29", "-41.4151, -39.1725, -45.5622, 0.29", "-41.879, -39.8351, -46.2188, 1.11", "-42.1313, -40.1459, -46.5557, 1.47", "-42.7896, -40.8517, -47.3571, 0.29", "-43.6727, -41.7057, -48.3977, 2.43", "-44.3877, -42.304, -49.166, 2.43", "-45.4898, -43.1249, -50.3272, 0.52", "-46.3118, -43.6658, -51.1877, 0.66", "-46.9738, -44.0616, -51.8795, 0.22", "-47.3153, -44.242, -52.2193, 0.59", "-47.6389, -44.402, -52.5081, 0.59", "-48.4118, -44.804, -53.1172, 0.22", "-48.9613, -45.1575, -53.5293, 1.18", "-49.2087, -45.357, -53.7001, 1.33", "-50.2047, -46.33, -54.4601, 0.37", "-50.7935, -46.991, -54.9419, 0.22", "-51.2731, -47.5819, -55.3399, 0.22", "-51.8273, -48.3303, -55.7925, 1.55", "-52.1873, -48.8548, -56.0847, 2.06", "-53.1186, -50.3293, -56.8532, 0.22", "-53.3082, -50.6453, -57.0009, 0.52", "-53.5033, -50.9302, -57.1371, 0.52", "-54.1113, -51.7235, -57.5196, 0.22", "-54.4551, -52.1513, -57.7198, 0.22", "-54.8322, -52.6176, -57.9602, 1.11", "-55.1548, -53.0055, -58.1602, 1.33", "-56.1158, -54.1102, -58.7992, 0.22", "-56.455, -54.4761, -59.0289, 1.03", "-56.6447, -54.6607, -59.1571, 1.03", "-57.6652, -55.6112, -59.8319, 0.22", "-58.0379, -55.96, -60.0693, 0.22", "-58.3594, -56.2637, -60.2668, 1.18", "-58.659, -56.5357, -60.4407, 1.4", "-59.8403, -57.5774, -61.1938, 0.22", "-60.2277, -57.9083, -61.4371, 1.11", "-60.5177, -58.1497, -61.6129, 1.33", "-60.7679, -58.3709, -61.7807, 1.18", "-61.7382, -59.2836, -62.4589, 0.15", "-62.5666, -60.098, -63.0472, 0.15", "-62.8862, -60.4196, -63.2685, 0.81", "-63.0807, -60.6244, -63.4304, 0.81", "-63.8824, -61.4957, -64.1436, 0.22", "-64.5405, -62.2372, -64.7436, 0.22", "-65.1412, -62.937, -65.2994, 1.47", "-65.4006, -63.2305, -65.5504, 1.84", "-66.7909, -64.785, -67.0989, 0.15", "-67.1278, -65.1411, -67.4991, 0.15", "-67.3318, -65.347, -67.7657, 0.74", "-67.4284, -65.4394, -67.8973, 0.74", "-68.1931, -66.1131, -68.9381, 0.29", "-68.8754, -66.6709, -69.8339, 1.25", "-69.1411, -66.8725, -70.1516, 1.33", "-69.9914, -67.5601, -71.3582, 0.15", "-70.2511, -67.7803, -71.7597, 0.74", "-70.7979, -68.2582, -72.6302, 0.22", "-70.8268, -68.2839, -72.6752, 0.22", "-71.0575, -68.4849, -73.0191, 0.88", "-72.3649, -69.6213, -74.9472, 0.22", "-72.4079, -69.658, -75.006, 0.22", "-72.5352, -69.7576, -75.1509, 0.22", "-73.106, -70.1622, -75.6606, 1.47", "-73.3729, -70.3345, -75.8483, 1.84", "-73.6101, -70.4798, -75.9733, 1.84", "-73.8899, -70.6438, -76.0675, 1.84", "-75.1053, -71.4619, -76.7601, 0.15", "-75.182, -71.5134, -76.8138, 0.15", "-75.7986, -71.8912, -77.2972, 0.15", "-76.3263, -72.2165, -77.7295, 0.96", "-76.6495, -72.429, -78.0029, 0.96", "-78.3417, -73.6231, -79.4873, 0.22", "-78.7798, -73.9734, -79.8944, 0.22", "-79.3268, -74.4352, -80.3956, 0.22", "-79.9468, -74.9778, -80.9354, 1.11", "-80.3613, -75.3578, -81.2782, 1.69", "-80.4976, -75.4961, -81.3818, 1.69", "-81.6914, -76.8845, -82.2141, 0.22", "-82.1148, -77.4361, -82.5298, 0.37", "-82.5133, -77.9755, -82.8386, 0.22", "-83.0601, -78.6847, -83.2484, 1.47", "-83.4462, -79.1576, -83.5589, 1.69", "-84.4321, -80.3243, -84.3524, 0.22", "-85.2667, -81.3376, -85.0267, 0.22", "-85.6836, -81.8481, -85.3839, 1.4", "-86.0798, -82.3341, -85.7358, 1.84", "-87.3652, -83.8568, -86.8846, 0.15", "-87.8159, -84.3667, -87.295, 0.15", "-88.2424, -84.8252, -87.6874, 1.18", "-88.4747, -85.0748, -87.9093, 1.18", "-88.508, -85.1114, -87.941, 1.18", "-89.5558, -86.3487, -88.9368, 0.22", "-90.0494, -86.9889, -89.3653, 1.25", "-90.7526, -87.9128, -90.0001, 0.15", "-91.0361, -88.2495, -90.254, 0.88", "-91.1832, -88.4145, -90.3796, 1.03", "-91.642, -88.9084, -90.7466, 0.15", "-92.1665, -89.4463, -91.1249, 0.15", "-92.587, -89.8387, -91.4401, 0.74", "-93.3818, -90.5184, -92.0341, 0.22", "-94.0663, -91.1057, -92.5446, 0.22", "-94.6803, -91.6353, -93.0006, 1.99", "-94.9581, -91.8821, -93.2052, 2.28", "-96.5067, -93.3513, -94.3179, 0.22", "-96.7211, -93.5838, -94.472, 0.52", "-97.4318, -94.406, -94.9498, 0.15", "-97.4736, -94.4534, -94.9774, 0.15", "-97.803, -94.807, -95.1682, 0.81", "-97.8414, -94.8474, -95.186, 0.81", "-98.9184, -95.9628, -95.5304, 0.22", "-99.7077, -96.7923, -95.837, 0.22", "-99.7608, -96.8461, -95.8589, 0.22", "-100.515, -97.6406, -96.1764, 0.22", "-101.042, -98.2062, -96.4324, 0.81", "-101.09, -98.2617, -96.4576, 0.81", "-101.898, -99.2775, -96.9448, 0.22", "-102.367, -99.8767, -97.2482, 1.47", "-102.537, -100.09, -97.3545, 1.77", "-103.831, -101.669, -98.1484, 0.22", "-104.211, -102.103, -98.3725, 0.52", "-105.079, -103.032, -98.8414, 0.22", "-106.141, -104.089, -99.3586, 0.22", "-106.686, -104.614, -99.625, 1.18", "-106.852, -104.771, -99.7034, 1.4", "-108.137, -106.031, -100.396, 0.15", "-108.428, -106.326, -100.574, 0.66", "-109.86, -107.846, -101.529, 0.15", "-110.546, -108.608, -102.056, 1.69", "-110.757, -108.846, -102.227, 1.84", "-112.291, -110.657, -103.539, 0.22", "-112.576, -111.017, -103.809, 0.66", "-112.615, -111.071, -103.853, 0.66", "-113.001, -111.648, -104.365, 0.15", "-113.168, -111.883, -104.58, 0.59", "-113.221, -111.954, -104.647, 0.59", "-113.868, -112.777, -105.404, 0.22", "-114.455, -113.508, -106.118, 1.33", "-115.068, -114.292, -106.894, 0.15", "-115.346, -114.674, -107.275, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.26762, -8.94048, 1.18", "4.32448, 6.12273, -8.65322, 1.18", "4.36731, 7.32014, -8.27696, 1.47", "4.39283, 8.25196, -8.08886, 1.92", "4.40692, 9.51278, -7.97713, 0.81", "4.40262, 10.5599, -7.97885, 0.81", "4.39234, 11.229, -8.03157, 0.74", "4.38691, 11.3383, -8.06504, 0.74", "4.26849, 12.5878, -8.73067, 0.74", "4.19156, 13.2753, -9.25577, 1.11", "4.14931, 13.6873, -9.66885, 1.11", "4.10615, 14.2866, -10.3424, 1.11", "4.09009, 15.391, -11.5436, 1.25", "4.09128, 15.4314, -11.5858, 1.25", "4.19169, 16.4228, -12.5666, 1.03", "4.36997, 17.5216, -13.5937, 0.52", "4.6225, 18.6497, -14.5637, 0.52", "4.8426, 19.4074, -15.1423, 0.81", "4.85985, 19.4552, -15.1701, 0.81", "5.09441, 20.0292, -15.4445, 1.18", "5.2205, 20.2646, -15.5045, 1.18", "5.41655, 20.5613, -15.506, 1.18", "5.45672, 20.6164, -15.5007, 1.18", "5.60104, 20.8259, -15.4859, 1.4", "5.67824, 20.964, -15.4752, 1.4", "5.90415, 21.4791, -15.4324, 1.4", "6.08418, 22.0162, -15.3814, 0.88", "6.25889, 22.8614, -15.2935, 0.52", "6.29539, 23.6423, -15.2866, 0.37", "6.22334, 24.4688, -15.3855, 0.37", "6.15339, 24.837, -15.4674, 0.29", "5.96392, 25.4913, -15.6817, 0.29", "5.83241, 25.8741, -15.8701, 0.29", "5.42764, 27.0966, -16.8144, 1.33", "5.20771, 27.7784, -17.4302, 1.92", "5.16551, 27.9479, -17.6004, 2.21", "5.1463, 28.0779, -17.7357, 2.21", "5.12224, 28.7899, -18.4925, 2.5", "5.16207, 29.7208, -19.549, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 9.48563, -2.50048, 3.68", "1.6115, 9.48563, -2.50048, 3.68", "0.970905, 11.4083, -2.81767, 2.8", "0.927556, 11.5353, -2.84506, 2.8", "0.661266, 12.3086, -3.02318, 2.8", "0.541339, 12.6411, -3.10312, 2.8", "0.26527, 13.3894, -3.28896, 2.8", "-0.150932, 14.4586, -3.57997, 3.02", "-0.733681, 15.8352, -4.01783, 3.02", "-0.756165, 15.8851, -4.03619, 3.02", "-1.2484, 16.9069, -4.44371, 3.02", "-1.27232, 16.9557, -4.46349, 3.02", "-1.82805, 18.0689, -4.92932, 2.87", "-2.34444, 19.1502, -5.32872, 2.87", "-2.36782, 19.2011, -5.3425, 2.87", "-2.85227, 20.3054, -5.57344, 2.73", "-3.35762, 21.49, -5.75631, 2.58", "-3.38387, 21.5512, -5.76405, 2.58", "-4.10656, 23.2245, -5.91904, 2.36", "-4.83128, 24.8582, -6.03932, 2.06", "-5.49413, 26.28, -6.13778, 2.06", "-5.92568, 27.1887, -6.19913, 2.65", "-6.69572, 28.7652, -6.29554, 2.73", "-7.3264, 30.0258, -6.37614, 2.95", "-7.91339, 31.1339, -6.46209, 3.17", "-8.45043, 32.1007, -6.55137, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -10.1699, 0.999524, 4.05", "-3.5085, -10.1699, 0.999524, 4.05", "-4.17673, -11.7569, 0.999524, 3.68", "-4.81564, -13.2743, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.532278", "8.20573, 24.4316, -1.24848, 0.532278", "13.1806, 38.5826, -1.24848, 0.532278" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.16207, 29.7208, -19.549, 1.25", "4.79964, 30.598, -20.3375, 1.25", "4.50244, 31.4593, -21.098, 1.77", "4.43842, 31.6683, -21.2827, 1.84", "4.22636, 32.7867, -22.4612, 0.22", "4.18745, 33.5576, -23.4304, 1.33", "4.19058, 33.5964, -23.4905, 1.33", "4.24296, 33.7776, -23.8339, 1.77", "4.26698, 33.8276, -23.939, 1.77", "4.75423, 34.5909, -25.7155, 1.18", "5.15705, 35.0755, -26.9819, 1.4", "5.72186, 35.6835, -28.8944, 0.29", "5.73717, 35.7001, -28.9498, 0.29", "6.17924, 36.1897, -30.6053, 1.55", "6.23022, 36.2561, -30.8137, 1.84", "6.24478, 36.2806, -30.8771, 1.84", "6.86668, 37.6416, -33.7588, 0.52", "6.88123, 37.6797, -33.8178, 0.52", "6.96269, 37.9274, -34.1281, 0.74", "7.48904, 39.7536, -36.0596, 1.47", "7.73243, 40.6488, -36.8378, 0.29", "7.96187, 41.5323, -37.4455, 1.69", "8.42006, 43.5821, -38.5874, 0.15", "8.53552, 44.207, -38.9289, 0.66", "8.5442, 44.2657, -38.9605, 0.66", "8.67301, 45.4009, -39.5909, 0.15", "8.73713, 46.2104, -40.0977, 1.69", "8.83875, 48.5919, -41.6662, 0.22", "8.8413, 49.1825, -42.0909, 0.59", "8.83414, 50.454, -43.0676, 1.92", "8.80598, 52.4347, -44.6561, 0.15", "8.8033, 52.5396, -44.7444, 0.15", "8.80214, 53.0148, -45.1625, 0.37", "8.81549, 53.7452, -45.8431, 0.22", "8.84409, 54.5177, -46.6681, 1.11", "8.84493, 54.5641, -46.722, 1.11", "8.8443, 54.8834, -47.1061, 1.25", "8.82949, 56.1854, -48.7307, 0.22", "8.80865, 57.0693, -49.8451, 0.96", "8.76099, 58.0513, -51.0168, 0.15", "8.71898, 58.8765, -51.9382, 1.18", "8.7082, 59.0376, -52.1035, 1.47", "8.61593, 60.2209, -53.1569, 0.22", "8.5791, 60.5682, -53.3941, 0.44", "8.50136, 61.2525, -53.7486, 0.15", "8.36361, 62.1889, -54.1307, 1.11", "8.2963, 62.5912, -54.2713, 1.47", "8.03982, 64.2937, -54.7661, 0.22", "7.94529, 64.9689, -54.9236, 0.74", "7.81027, 66.0014, -55.1552, 0.15", "7.71867, 66.8023, -55.3282, 1.11", "7.68113, 67.1448, -55.396, 1.55", "7.37439, 70.1898, -55.9654, 0.15", "7.3104, 70.8912, -56.0805, 0.66", "7.28623, 71.2328, -56.1383, 0.66", "7.18545, 73.2275, -56.4802, 0.15", "7.16133, 73.8588, -56.5821, 0.37", "7.15781, 73.9427, -56.5958, 0.37", "7.12947, 74.2956, -56.6506, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.16207, 29.7208, -19.549, 0.37", "5.68842, 31.107, -19.6838, 0.37", "6.06985, 32.352, -19.8057, 0.37", "6.33393, 33.4558, -19.9121, 0.37", "6.34576, 33.5313, -19.9192, 0.37", "6.37825, 34.068, -19.9669, 0.37", "6.37806, 34.134, -19.9755, 0.37", "6.20902, 34.9178, -20.137, 0.66", "6.09782, 35.195, -20.2075, 0.81", "5.91784, 35.6563, -20.3318, 0.81", "5.76595, 36.155, -20.4578, 0.37", "5.59956, 36.9442, -20.6272, 0.29", "5.59119, 37.0098, -20.6395, 0.29", "5.5426, 37.8169, -20.7735, 0.29", "5.52195, 39.1201, -20.9549, 1.84", "5.53368, 39.6172, -21.0087, 2.36", "5.5953, 40.7431, -21.096, 1.55", "5.68204, 42.0376, -21.1534, 1.92", "5.72923, 42.541, -21.172, 2.5", "5.83766, 43.3413, -21.2054, 1.99", "6.03614, 44.4917, -21.2524, 0.22", "6.16281, 45.2344, -21.2939, 0.22", "6.24529, 45.7553, -21.3257, 0.88", "6.30153, 46.1962, -21.3581, 0.59", "6.37916, 47.0064, -21.4263, 0.29", "6.43927, 47.9104, -21.5087, 0.29", "6.49035, 48.9655, -21.607, 0.29", "6.52888, 49.8923, -21.6974, 0.29", "6.57151, 50.886, -21.7902, 1.18", "6.60495, 51.4803, -21.8338, 1.84", "6.65601, 52.0757, -21.867, 1.4", "6.74358, 52.7223, -21.901, 0.88", "6.93542, 53.8529, -21.959, 0.29", "7.11613, 54.835, -22.0039, 0.29", "7.4304, 56.4365, -22.0565, 2.14", "7.55688, 57.0859, -22.0773, 3.09", "7.67333, 57.6982, -22.0947, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-8.45043, 32.1007, -6.55137, 1.62", "-8.84512, 33.9228, -6.94, 1.62", "-8.85182, 33.989, -6.94947, 1.62", "-8.94613, 34.9225, -7.08284, 1.62", "-8.96637, 35.1228, -7.11146, 1.62", "-9.05786, 36.0284, -7.24084, 1.62", "-9.06385, 36.0877, -7.24931, 1.62", "-8.98412, 37.5465, -7.24931, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-8.45043, 32.1007, -6.55137, 0.66", "-7.18808, 34.2575, -5.59061, 0.66", "-6.71579, 34.9695, -5.45916, 0.59", "-6.25844, 35.6214, -5.40849, 1.03", "-6.1719, 35.7471, -5.40736, 1.03", "-5.98019, 36.0494, -5.41741, 1.18", "-5.31502, 37.2593, -5.50999, 0.81", "-4.89234, 38.0854, -5.72822, 0.66", "-4.86288, 38.1542, -5.74802, 0.66", "-4.6032, 38.9422, -5.91592, 0.66", "-4.37702, 39.8485, -6.03844, 0.88", "-4.1786, 41.0839, -6.11265, 1.4", "-4.15369, 41.3988, -6.10694, 1.77", "-4.13295, 42.0887, -6.06028, 2.14", "-4.11875, 43.4211, -5.82782, 1.77", "-4.08489, 44.2844, -5.51766, 1.25", "-4.03235, 44.9755, -5.15388, 1.03", "-3.94119, 45.5418, -4.73817, 0.81", "-3.77309, 46.2522, -4.10681, 0.81", "-3.39436, 47.303, -2.95475, 0.59", "-2.85981, 48.2779, -1.65429, 0.59", "-2.83203, 48.3165, -1.59041, 0.59", "-2.4032, 48.7624, -0.668079, 1.77", "-2.37762, 48.7812, -0.617542, 1.77", "-2.0874, 48.9015, -0.131092, 1.92", "-2.04411, 48.9052, -0.0762192, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.81564, -13.2743, 0.999524, 0.37", "-6.18051, -13.9472, 0.614511, 0.37", "-7.0009, -14.5271, 0.556358, 0.37", "-8.00728, -15.5672, 0.834917, 0.37", "-8.3518, -16.1715, 1.2122, 0.66", "-8.51243, -16.5542, 1.52086, 0.96", "-8.53263, -16.6005, 1.5711, 0.96", "-8.90144, -17.9075, 3.42048, 0.59", "-8.90854, -17.9364, 3.47172, 0.59", "-9.03778, -18.2651, 4.24492, 1.25", "-9.10407, -18.3444, 4.47102, 1.25", "-9.67797, -18.7737, 5.72665, 0.59", "-9.96921, -18.9598, 6.17947, 0.96", "-10.0204, -18.9879, 6.23428, 0.96", "-10.4653, -19.3508, 6.80366, 0.96", "-10.7968, -19.7703, 7.3205, 0.59", "-11.0024, -20.2781, 7.83064, 0.29", "-11.0824, -20.9035, 8.37437, 0.29", "-11.1247, -21.4668, 8.89035, 1.11", "-11.2092, -22.5581, 9.93631, 0.22", "-11.2348, -22.8265, 10.2025, 1.25", "-11.3359, -23.2503, 10.6557, 1.55", "-11.3776, -23.3289, 10.7468, 1.55", "-12.1527, -24.0145, 11.6226, 0.59", "-12.4492, -24.2087, 11.853, 0.74", "-12.9558, -24.4885, 12.1588, 0.74", "-13.6678, -24.8811, 12.5716, 0.59", "-13.7714, -24.9526, 12.6355, 0.59", "-14.3823, -25.6642, 13.115, 0.59", "-14.522, -26.1377, 13.3851, 1.11", "-14.5659, -26.5105, 13.6238, 1.18", "-14.5707, -26.5925, 13.6798, 1.18", "-14.6592, -27.483, 14.3553, 0.59", "-14.8141, -28.1937, 14.9558, 0.59", "-15.1616, -28.8965, 15.654, 0.44", "-15.5599, -29.2531, 16.1542, 0.74", "-15.9669, -29.4204, 16.5134, 0.88", "-16.8769, -29.6026, 17.1569, 0.44", "-17.3837, -29.6307, 17.4295, 0.44", "-18.011, -29.638, 17.7018, 0.44", "-18.0683, -29.6403, 17.7193, 0.44", "-18.8011, -29.7376, 17.8891, 0.88", "-18.8794, -29.7561, 17.9061, 0.88", "-19.751, -30.0245, 18.0475, 1.18", "-20.1697, -30.1789, 18.1046, 1.11", "-20.8192, -30.4367, 18.1719, 0.59", "-21.4302, -30.6942, 18.2138, 0.44", "-21.4846, -30.7183, 18.2149, 0.44", "-22.3059, -31.1518, 18.2311, 0.66", "-22.851, -31.5317, 18.244, 0.37", "-23.174, -31.8558, 18.2598, 1.03", "-23.3396, -32.1351, 18.276, 1.03", "-23.377, -32.2532, 18.2829, 1.03", "-23.6141, -33.3305, 18.3499, 0.37", "-23.6641, -33.958, 18.3969, 0.44", "-23.6586, -34.4499, 18.44, 0.74", "-23.6285, -34.8533, 18.48, 0.88", "-23.554, -35.5908, 18.5651, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.81564, -13.2743, 0.999524, 3.09", "-4.82808, -13.3203, 0.997704, 3.09", "-5.17403, -14.6443, 0.975215, 2.8", "-5.63239, -16.4159, 0.951142, 2.43", "-6.0017, -17.8434, 0.931746, 2.43", "-6.01841, -17.9079, 0.930868, 2.43", "-6.5471, -19.9514, 0.903101, 2.43", "-6.82956, -21.0614, 0.897138, 2.87", "-7.05654, -21.9708, 0.911928, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.15", "18.1555, 52.7336, -1.24848, 0.15", "23.1303, 66.8846, -1.24848, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "7.67333, 57.6982, -22.0947, 0.29", "8.61202, 59.3585, -22.4734, 0.29", "9.03889, 59.977, -22.6704, 0.29", "9.49088, 60.6168, -22.9024, 0.37", "9.53396, 60.6776, -22.9259, 0.37", "9.85036, 61.1556, -23.1118, 0.37", "9.8798, 61.2021, -23.1302, 0.37", "10.2652, 61.922, -23.4764, 0.22", "10.4596, 62.3363, -23.7115, 0.44", "10.4749, 62.3939, -23.7488, 0.44", "10.566, 62.8777, -24.0626, 0.66", "10.5759, 62.9267, -24.0916, 0.66", "10.7339, 63.5139, -24.4465, 0.96", "10.7547, 63.5785, -24.5052, 0.96", "11.0359, 64.4068, -25.3405, 0.22", "11.054, 64.4613, -25.3969, 0.22", "11.3207, 65.2339, -26.1896, 1.92", "11.6063, 65.9479, -26.9238, 2.36", "12.6291, 68.2028, -29.2438, 0.44", "12.791, 68.5391, -29.5866, 0.44", "12.9118, 68.7762, -29.8238, 0.44", "13.1717, 69.2935, -30.3106, 0.22", "13.4991, 69.9579, -30.8811, 0.22", "13.8882, 70.7045, -31.4298, 0.74", "13.924, 70.7644, -31.4689, 0.74", "14.0291, 70.9372, -31.5989, 0.74", "14.5662, 71.8253, -32.3525, 0.22", "14.9903, 72.597, -33.0433, 1.33", "15.3167, 73.2637, -33.6349, 1.77", "15.9034, 74.5447, -34.7575, 0.22", "16.1525, 75.088, -35.2198, 0.22", "16.4895, 75.8151, -35.8142, 0.22", "16.8804, 76.6364, -36.4599, 1.92", "17.0334, 76.9634, -36.696, 2.28", "17.9974, 78.9478, -37.9608, 0.22", "18.3801, 79.6888, -38.3807, 0.22", "18.6592, 80.1772, -38.6395, 0.88", "18.7352, 80.2924, -38.6937, 0.88", "18.8238, 80.4043, -38.7425, 0.88", "19.7593, 81.4327, -39.1952, 0.22", "20.4264, 82.0844, -39.4894, 0.22", "20.5097, 82.1705, -39.5313, 0.22", "21.2119, 82.9158, -39.9123, 1.33", "21.4976, 83.2324, -40.0731, 2.06", "21.9391, 83.7467, -40.3513, 2.06", "22.976, 85.0363, -41.0637, 0.15", "23.2507, 85.3856, -41.2621, 0.74", "23.2899, 85.435, -41.2896, 0.74", "23.4845, 85.6916, -41.43, 0.74", "24.1078, 86.5275, -41.8502, 0.22", "24.4386, 86.9702, -42.0429, 0.59", "24.478, 87.0224, -42.0635, 0.59", "25.1647, 87.9039, -42.4904, 0.15", "25.7105, 88.6382, -42.8626, 1.55", "25.8475, 88.8305, -42.9625, 1.92", "25.8852, 88.8841, -42.9888, 1.92", "26.0679, 89.165, -43.1304, 1.92", "27.0303, 90.6898, -43.8857, 0.22", "27.2916, 91.0531, -44.0763, 0.52", "27.3315, 91.1025, -44.1028, 0.52", "27.9417, 91.7315, -44.4418, 0.22", "28.4764, 92.2313, -44.7349, 1.55", "28.8745, 92.5035, -44.9368, 1.55", "30.3237, 93.3184, -45.6206, 0.15", "30.3746, 93.345, -45.6457, 0.15", "31.3801, 93.8391, -46.1466, 0.15", "32.8716, 94.5145, -46.895, 2.21", "35.0933, 95.4512, -47.969, 0.22", "35.3416, 95.5565, -48.088, 0.37", "36.3628, 96.0154, -48.5448, 0.22", "36.7276, 96.1932, -48.6971, 0.59", "36.9729, 96.3239, -48.7899, 0.59", "37.8005, 96.8158, -49.0718, 0.22", "38.117, 97.0462, -49.1964, 0.66", "38.9879, 97.6703, -49.5789, 0.15", "39.6186, 98.1307, -49.8756, 1.77", "39.7738, 98.2463, -49.958, 1.77", "41.2325, 99.3035, -50.7878, 0.22", "41.7921, 99.6604, -51.195, 0.74", "42.3986, 99.9994, -51.7121, 0.15", "42.7528, 100.178, -52.0695, 0.74", "43.3321, 100.481, -52.7058, 0.15", "43.8557, 100.769, -53.3073, 2.14", "45.5151, 101.808, -55.3664, 0.37", "46.1854, 102.324, -56.253, 1.55", "47.416, 103.43, -57.9784, 0.15", "47.9373, 103.985, -58.7555, 0.15", "48.1827, 104.293, -59.1452, 1.4", "48.9597, 105.419, -60.5296, 0.22", "49.3441, 105.999, -61.2478, 1.33", "49.4127, 106.083, -61.3684, 1.62", "50.447, 106.993, -62.9281, 0.15", "51.1491, 107.448, -63.8903, 1.18", "52.3618, 108.055, -65.4146, 0.88", "53.5153, 108.48, -66.6974, 0.44", "54.5959, 108.817, -67.7798, 1.77", "55.7502, 109.139, -68.7649, 0.22", "55.8179, 109.154, -68.8092, 0.22", "56.2529, 109.263, -69.0083, 0.66", "57.2287, 109.559, -69.253, 0.15", "57.9159, 109.858, -69.3319, 1.11", "58.3372, 110.112, -69.3648, 1.11", "58.4019, 110.157, -69.3688, 1.11", "59.1287, 110.681, -69.4201, 0.22", "59.4641, 110.916, -69.4494, 0.59", "60.3193, 111.507, -69.534, 0.22", "61.0652, 112.011, -69.6306, 1.4", "61.1307, 112.055, -69.6389, 1.4", "61.24, 112.126, -69.6524, 1.55", "62.635, 112.989, -69.8107, 0.22", "62.695, 113.023, -69.8187, 0.22", "62.9248, 113.152, -69.8514, 0.22", "63.4096, 113.41, -69.9434, 0.81", "63.4698, 113.442, -69.9571, 0.81", "63.7657, 113.616, -70.0432, 0.81", "65.1792, 114.478, -70.5081, 0.22", "65.663, 114.769, -70.6721, 0.22", "66.7265, 115.395, -71.0389, 1.55", "66.7828, 115.429, -71.0608, 1.55", "68.1702, 116.316, -71.6331, 0.22", "68.6983, 116.66, -71.8637, 0.22", "69.6204, 117.264, -72.2754, 1.62", "69.7955, 117.379, -72.3507, 1.99", "71.6087, 118.585, -73.0911, 0.22", "71.6717, 118.627, -73.1165, 0.22", "72.3543, 119.072, -73.3841, 0.74", "72.7689, 119.348, -73.5497, 0.74", "74.8276, 120.717, -74.3534, 0.15", "75.5916, 121.214, -74.6349, 1.55", "75.6511, 121.25, -74.6531, 1.55", "75.9888, 121.459, -74.7568, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "7.67333, 57.6982, -22.0947, 0.29", "7.24058, 59.6912, -22.3402, 0.29", "7.14351, 60.1716, -22.4025, 0.44", "6.94115, 61.1479, -22.5198, 0.22", "6.67573, 62.4385, -22.6682, 1.55", "6.59189, 62.8566, -22.712, 2.21", "6.47132, 63.4665, -22.7704, 1.84", "6.34703, 64.239, -22.8361, 0.96", "6.26526, 64.738, -22.8634, 0.44", "6.25178, 64.8135, -22.8642, 0.44", "6.09625, 65.7887, -22.866, 0.29", "6.08153, 65.927, -22.8658, 0.29", "6.0396, 66.632, -22.8657, 0.29", "6.01592, 67.3284, -22.8674, 0.81", "6.01112, 67.6748, -22.8833, 1.11", "5.99318, 68.3749, -22.947, 0.88", "5.97255, 69.8052, -23.1183, 0.22", "5.96845, 70.5041, -23.2251, 0.81", "5.96964, 71.0581, -23.3287, 0.81", "5.97069, 72.7191, -23.6722, 0.22", "5.96125, 73.9387, -23.9417, 1.84", "5.94617, 74.5758, -24.0906, 2.21", "5.92173, 75.1316, -24.225, 2.21", "5.84566, 77.2605, -24.703, 0.22", "5.83011, 78.0018, -24.8529, 0.81", "5.82759, 78.3523, -24.9113, 0.88", "5.82494, 78.7074, -24.9603, 0.66", "5.79635, 79.7628, -25.0867, 0.22", "5.74493, 81.2367, -25.2262, 1.84", "5.73882, 81.6872, -25.26, 2.21", "5.7428, 82.1377, -25.2897, 2.21", "5.79739, 84.09, -25.4015, 0.22", "5.82765, 84.7852, -25.4399, 0.88", "5.83822, 84.9972, -25.4507, 0.88", "5.91267, 86.4327, -25.5261, 0.22", "5.98826, 87.7004, -25.6291, 0.22", "6.04095, 88.3663, -25.6963, 1.33", "6.09926, 88.8908, -25.7585, 1.62", "6.12178, 89.0931, -25.7859, 1.62", "6.12942, 89.2071, -25.8067, 1.62", "6.1651, 91.0653, -26.2043, 0.22", "6.16072, 92.4293, -26.5188, 0.22", "6.13848, 93.3673, -26.738, 1.4", "6.12508, 93.8595, -26.8496, 1.69", "6.0606, 95.9438, -27.3146, 0.22", "6.02857, 96.6474, -27.4508, 0.96", "6.02375, 96.7138, -27.4601, 0.96", "5.99401, 97.0015, -27.4923, 0.81", "5.83062, 98.335, -27.5785, 0.22", "5.81258, 98.4939, -27.5808, 0.22", "5.72484, 99.4217, -27.5611, 0.22", "5.6212, 100.521, -27.5503, 1.69", "5.58784, 100.882, -27.5504, 2.43", "5.51622, 101.643, -27.5564, 2.36", "5.30973, 104.091, -27.592, 0.22", "5.26181, 105.028, -27.6333, 0.22", "5.25905, 105.173, -27.6444, 0.22", "5.26846, 106.367, -27.7522, 0.22", "5.29386, 107.27, -27.8454, 1.11", "5.32702, 107.813, -27.9087, 1.4", "5.47648, 109.359, -28.1118, 0.22", "5.48312, 109.418, -28.1196, 0.22", "5.53841, 109.828, -28.1641, 0.22", "5.65642, 110.683, -28.2302, 1.55", "5.70985, 111.124, -28.2485, 1.77", "5.7176, 111.191, -28.2491, 1.77", "5.7553, 111.493, -28.242, 1.77", "5.92569, 112.791, -28.2137, 0.22", "6.02891, 113.687, -28.1944, 0.66", "6.07248, 114.171, -28.1836, 0.66", "6.1687, 115.762, -28.1596, 0.22", "6.17343, 115.907, -28.1574, 0.22", "6.18828, 117.441, -28.1271, 0.22", "6.15734, 118.488, -28.0867, 1.11", "6.11669, 119.116, -28.0438, 1.99", "6.05431, 119.652, -27.992, 1.55", "5.81514, 120.969, -27.8186, 0.22", "5.77825, 121.144, -27.7923, 0.22", "5.50422, 122.217, -27.5994, 0.22", "5.35797, 122.832, -27.4724, 0.88", "5.31553, 123.025, -27.4323, 1.18", "5.30494, 123.089, -27.414, 1.18", "5.24918, 123.691, -27.2287, 0.66", "5.2278, 124.029, -27.1274, 0.37", "5.16007, 124.913, -26.8761, 0.22", "5.08677, 125.565, -26.695, 0.59", "4.93529, 126.733, -26.4635, 0.52", "4.84122, 127.385, -26.3617, 0.66", "4.76952, 127.88, -26.2996, 0.22", "4.65421, 128.635, -26.2316, 1.47", "4.5967, 128.997, -26.2164, 2.14", "4.26659, 131.193, -26.1965, 0.22", "4.25852, 131.253, -26.1985, 0.22", "4.20066, 131.941, -26.2074, 1.11", "4.198, 132.086, -26.2096, 1.47", "4.20063, 132.189, -26.211, 1.47", "4.21697, 132.82, -26.2271, 0.81", "4.22502, 133.343, -26.2554, 0.29", "4.24736, 134.893, -26.3737, 0.22", "4.25161, 135.61, -26.4437, 0.96", "4.25319, 135.745, -26.4576, 0.96", "4.25563, 135.89, -26.4708, 0.96", "4.29419, 137.011, -26.556, 0.22", "4.29785, 137.077, -26.5598, 0.22", "4.3534, 137.762, -26.5825, 0.81", "4.38249, 138.109, -26.5904, 0.81", "4.50944, 139.731, -26.6062, 0.15", "4.57576, 140.831, -26.623, 1.18", "4.59023, 141.139, -26.6277, 1.47", "4.59353, 141.197, -26.6328, 1.47", "4.61349, 141.474, -26.6804, 1.47", "4.72337, 142.982, -27.0357, 0.22", "4.79511, 143.828, -27.2901, 1.11", "4.82719, 144.184, -27.4118, 1.47", "5.04478, 146.147, -28.1888, 0.15", "5.14575, 146.912, -28.521, 0.81", "5.15541, 146.972, -28.5498, 0.81", "5.22163, 147.321, -28.7307, 0.81", "5.23213, 147.372, -28.7556, 0.81", "5.42729, 148.585, -29.2844, 0.22", "5.47222, 148.99, -29.4248, 0.37", "5.52293, 149.615, -29.6169, 0.22", "5.56698, 150.388, -29.834, 1.18", "5.58072, 150.849, -29.9532, 1.47", "5.60198, 152.601, -30.3695, 0.22", "5.59715, 153.375, -30.5279, 1.03", "5.59443, 153.642, -30.5823, 1.03", "5.5903, 155.356, -30.9486, 0.22", "5.59344, 155.974, -31.0793, 0.22", "5.59442, 156.039, -31.0929, 0.22", "5.62549, 156.821, -31.2145, 0.81", "5.65151, 157.303, -31.2757, 0.81", "5.72627, 158.735, -31.4106, 0.22", "5.76953, 159.715, -31.4331, 1.11", "5.77652, 159.926, -31.4291, 1.11", "5.80417, 161.689, -31.3115, 0.22", "5.8033, 162.466, -31.2291, 0.59", "5.77873, 163.722, -31.0513, 0.22", "5.73013, 164.785, -30.8572, 1.18", "5.70828, 165.195, -30.7787, 1.62", "5.60358, 166.75, -30.4565, 0.22", "5.55833, 167.232, -30.3501, 0.22", "5.50011, 167.768, -30.2232, 0.59", "5.46928, 168.039, -30.1573, 0.59", "5.45997, 168.115, -30.1409, 0.59", "5.34883, 168.965, -29.9431, 0.22", "5.28885, 169.43, -29.817, 0.52", "5.27492, 169.569, -29.7752, 0.52", "5.27095, 169.634, -29.7546, 0.52", "5.27369, 170.777, -29.4466, 0.22", "5.30974, 171.657, -29.25, 1.11", "5.36003, 172.072, -29.1841, 1.47", "5.38358, 172.205, -29.1645, 1.47", "5.48033, 172.67, -29.1035, 1.47", "5.827, 174.115, -28.9389, 0.22", "5.84231, 174.17, -28.9344, 0.22", "6.1379, 175.246, -28.8637, 0.22", "6.36925, 176.165, -28.8164, 1.11", "6.46686, 176.587, -28.7865, 1.55", "6.55742, 176.997, -28.7521, 1.55", "6.88346, 178.418, -28.6062, 0.22", "7.00757, 178.954, -28.5461, 0.74", "7.05406, 179.162, -28.5181, 0.74", "7.46509, 180.956, -28.257, 0.22", "7.58499, 181.47, -28.174, 0.74", "7.93403, 183.005, -27.8448, 0.22", "7.97161, 183.167, -27.8017, 0.22", "8.1856, 184.058, -27.5516, 0.74", "8.20997, 184.162, -27.5203, 0.74", "8.33197, 184.715, -27.3441, 1.03", "8.73009, 186.599, -26.7511, 0.15", "8.74246, 186.664, -26.7319, 0.15", "8.95778, 187.823, -26.443, 0.15", "9.06243, 188.388, -26.3218, 1.03", "9.11741, 188.696, -26.2723, 1.03", "9.25663, 189.621, -26.1832, 0.15", "9.34827, 190.376, -26.1766, 1.11", "9.38208, 190.745, -26.1802, 1.4", "9.38502, 190.802, -26.1822, 1.4", "9.41279, 192.173, -26.273, 0.22", "9.39591, 192.882, -26.3237, 0.59", "9.39176, 192.942, -26.3282, 0.59", "9.36865, 193.151, -26.3415, 0.59", "9.25816, 193.999, -26.3949, 0.22", "9.1686, 194.613, -26.434, 1.18", "9.05615, 195.23, -26.4752, 1.84", "8.98523, 195.581, -26.5033, 1.47", "8.55818, 197.338, -26.6564, 0.22", "8.36969, 198.0, -26.7204, 0.22", "8.35093, 198.054, -26.7262, 0.22", "8.09087, 198.681, -26.8163, 0.81", "7.88672, 199.144, -26.8951, 1.62", "7.62644, 199.699, -27.0004, 2.28", "7.52829, 199.908, -27.0425, 2.5", "7.25613, 200.532, -27.1584, 2.14", "6.58342, 202.256, -27.4613, 0.22", "6.38789, 202.838, -27.5602, 0.59", "6.36846, 202.913, -27.5716, 0.59", "6.22557, 203.65, -27.6664, 0.22", "6.14776, 204.205, -27.7151, 0.81", "6.13942, 204.294, -27.7195, 0.81", "6.11346, 204.646, -27.7183, 0.81", "6.00761, 205.729, -27.703, 0.22", "5.94202, 206.354, -27.6918, 0.44", "5.76307, 207.863, -27.6552, 0.15", "5.69795, 208.42, -27.6372, 0.15", "5.64003, 208.877, -27.6205, 0.59", "5.6003, 209.163, -27.6073, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.98412, 37.5465, -7.24931, 1.55", "-8.59343, 39.3264, -8.95773, 1.55", "-8.57322, 39.4139, -9.03198, 1.55", "-8.28156, 40.5947, -9.87001, 1.47", "-8.26693, 40.6514, -9.9034, 1.47", "-8.05659, 41.4456, -10.3247, 1.25", "-7.70905, 42.7611, -10.9208, 1.25", "-7.66818, 42.9178, -10.9613, 1.25", "-7.3988, 43.8942, -11.1632, 0.81", "-7.094, 44.9989, -11.3266, 1.18", "-7.06594, 45.1057, -11.3399, 1.18", "-6.75252, 46.3983, -11.4711, 1.84", "-6.54555, 47.3734, -11.552, 2.14", "-6.3644, 48.3548, -11.6337, 2.14", "-6.21241, 49.4811, -11.7401, 2.14", "-6.20851, 49.5377, -11.7455, 2.14", "-6.20276, 50.1959, -11.8192, 1.77", "-6.26613, 51.4162, -11.9753, 1.77", "-6.37683, 52.2491, -12.0852, 1.47", "-6.6094, 53.2992, -12.2143, 1.25", "-6.93884, 54.3715, -12.3594, 1.62", "-7.22909, 55.1445, -12.473, 1.84", "-7.25739, 55.2075, -12.4832, 1.84", "-7.74588, 56.1133, -12.6672, 1.99", "-8.309, 57.1256, -12.8915, 1.69", "-8.79592, 58.0849, -13.1037, 1.47", "-9.06367, 58.7739, -13.2942, 1.33", "-9.07825, 58.8269, -13.3107, 1.33", "-9.19195, 59.7657, -13.6411, 1.11", "-9.11669, 60.729, -14.0429, 0.88", "-8.89174, 61.5138, -14.4038, 0.96", "-8.40832, 62.694, -14.9248, 0.81", "-8.37005, 62.7838, -14.9607, 0.81", "-8.15091, 63.3461, -15.1633, 0.66", "-8.09653, 63.5022, -15.2129, 0.66", "-7.96625, 64.4188, -15.4544, 0.66", "-8.0154, 65.1702, -15.5909, 0.96", "-8.21733, 65.9864, -15.6733, 1.69", "-8.34093, 66.3569, -15.7059, 1.99", "-8.50452, 66.735, -15.7422, 1.99", "-8.91354, 67.5808, -15.8337, 1.84", "-8.94596, 67.6401, -15.8408, 1.84", "-9.52091, 68.6647, -15.9921, 2.06", "-9.71549, 69.0315, -16.0524, 2.21", "-10.0258, 69.6813, -16.1585, 2.14", "-10.4486, 70.6501, -16.3103, 1.18", "-10.8974, 71.7908, -16.4762, 1.03", "-11.2091, 72.6517, -16.5846, 1.03", "-11.4741, 73.453, -16.6699, 1.33", "-11.7547, 74.3909, -16.7516, 2.14", "-11.9267, 75.0768, -16.7918, 2.65", "-12.0813, 75.8244, -16.8328, 2.65", "-12.2252, 76.7236, -16.8884, 2.65", "-12.2408, 76.8493, -16.8957, 2.65", "-12.3011, 77.4738, -16.9329, 2.36", "-12.3281, 78.1967, -16.986, 2.06", "-12.3307, 79.123, -17.0612, 1.4", "-12.3026, 80.1221, -17.1451, 0.81", "-12.1945, 81.7387, -17.2775, 0.66", "-12.0513, 83.0899, -17.3754, 0.66", "-11.8395, 84.5482, -17.4676, 1.11", "-11.8271, 84.6162, -17.4718, 1.11", "-11.6275, 85.5082, -17.5199, 1.55", "-11.3563, 86.5393, -17.5732, 1.84", "-11.0165, 87.7096, -17.6382, 2.28", "-10.8572, 88.2532, -17.6677, 2.58", "-10.6656, 88.9517, -17.7218, 2.58", "-10.5415, 89.4593, -17.7743, 2.58", "-10.3896, 90.2823, -17.8945, 2.36", "-10.3065, 90.9922, -18.0311, 1.92", "-10.302, 91.0689, -18.0477, 1.92", "-10.2635, 92.2005, -18.2908, 0.88", "-10.2503, 93.3041, -18.5124, 0.66", "-10.2496, 94.4487, -18.7493, 0.66", "-10.2499, 95.1886, -18.9148, 0.81", "-10.2339, 95.9993, -19.1058, 0.74", "-10.2033, 96.8185, -19.3035, 0.59", "-10.168, 97.64, -19.4918, 1.25", "-10.1098, 98.4218, -19.6844, 1.84", "-9.98211, 99.5192, -19.9548, 2.5", "-9.88555, 100.177, -20.127, 2.65", "-9.86611, 100.285, -20.1616, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.98412, 37.5465, -7.24931, 0.52", "-8.62803, 38.8845, -7.18887, 0.52", "-8.61499, 38.9504, -7.18413, 0.52", "-8.5729, 39.5986, -7.1252, 0.52", "-8.66323, 40.808, -7.00631, 0.52", "-8.67334, 40.8736, -6.99981, 0.52", "-8.74716, 41.1701, -6.97124, 0.66", "-8.79778, 41.2581, -6.9497, 0.66", "-9.1541, 41.7386, -6.83453, 0.52", "-9.47187, 42.0859, -6.74815, 0.66", "-9.52712, 42.1419, -6.73175, 0.66", "-9.86531, 42.4931, -6.60723, 0.59", "-10.3833, 43.0425, -6.38848, 0.29", "-10.8122, 43.5236, -6.17117, 0.29", "-10.8886, 43.6133, -6.12479, 0.29", "-11.3816, 44.2253, -5.78354, 0.59", "-11.7141, 44.6402, -5.56184, 0.81", "-11.7568, 44.6909, -5.53676, 0.81", "-12.0643, 45.0165, -5.40047, 0.81", "-12.1076, 45.0536, -5.38611, 0.81", "-12.5476, 45.3737, -5.27505, 0.81", "-13.3188, 45.9231, -5.10983, 0.37", "-13.8445, 46.3366, -4.95372, 0.37", "-14.2631, 46.6976, -4.79145, 0.59", "-14.6076, 47.03, -4.61909, 0.81", "-15.1543, 47.6065, -4.27743, 0.29", "-15.6767, 48.2004, -3.89325, 0.52", "-16.2331, 48.8983, -3.40729, 1.33", "-16.4755, 49.2266, -3.17053, 1.55", "-17.1734, 50.2236, -2.43384, 0.29", "-17.7237, 51.0149, -1.8487, 1.55", "-17.8592, 51.1941, -1.72813, 1.84", "-17.935, 51.277, -1.68406, 1.84", "-18.1631, 51.4953, -1.62509, 1.84", "-18.2057, 51.5354, -1.62396, 1.84", "-18.5359, 51.8412, -1.69323, 1.62", "-19.206, 52.4488, -1.91998, 0.37", "-19.7605, 52.9701, -2.15402, 0.29", "-20.1757, 53.4012, -2.37892, 0.59", "-20.4404, 53.6926, -2.55692, 0.59", "-20.6255, 53.903, -2.69394, 0.59", "-20.8684, 54.1949, -2.89539, 0.52", "-21.315, 54.8216, -3.2949, 0.29", "-21.6095, 55.2952, -3.59348, 0.74", "-21.9555, 55.8599, -3.91999, 0.66", "-22.148, 56.1684, -4.08114, 0.88", "-22.4917, 56.7078, -4.33174, 0.66", "-23.4388, 58.1241, -4.899, 2.14", "-23.8099, 58.6396, -5.07335, 2.14", "-24.5921, 59.6703, -5.37397, 0.22", "-25.0154, 60.212, -5.50412, 0.22", "-25.4684, 60.7823, -5.61819, 0.22", "-25.9199, 61.3198, -5.67197, 0.88", "-26.1601, 61.5846, -5.66727, 1.03", "-26.4612, 61.9017, -5.63006, 0.74", "-27.1903, 62.6693, -5.49156, 0.22", "-27.6311, 63.1277, -5.38173, 0.22", "-28.2201, 63.747, -5.23506, 0.22", "-28.2988, 63.8311, -5.21592, 0.22", "-28.8557, 64.4539, -5.08477, 0.22", "-29.6806, 65.3676, -4.91211, 1.69", "-29.9567, 65.7042, -4.86824, 2.21", "-30.4043, 66.2825, -4.82294, 2.21", "-30.4365, 66.3305, -4.81987, 2.21", "-31.0675, 67.4141, -4.73325, 0.22", "-31.4271, 68.1331, -4.66451, 0.22", "-31.988, 69.3438, -4.48192, 0.22", "-32.0294, 69.4355, -4.46515, 0.22", "-32.426, 70.2959, -4.26785, 1.11", "-32.7173, 70.9289, -4.12852, 1.11", "-32.975, 71.4949, -3.98857, 0.59", "-33.4661, 72.5627, -3.70511, 1.69", "-33.6007, 72.8377, -3.6297, 1.77", "-34.4834, 74.6032, -3.1821, 0.22", "-35.2119, 76.0208, -2.8119, 0.22", "-35.4871, 76.5587, -2.65673, 1.03", "-35.6933, 76.9653, -2.53255, 1.03", "-35.8778, 77.3282, -2.41816, 0.81", "-36.4232, 78.2876, -2.04255, 0.22", "-37.0993, 79.3357, -1.55355, 1.11", "-37.2377, 79.5249, -1.45874, 1.62", "-37.4352, 79.782, -1.31102, 1.62", "-37.4676, 79.8225, -1.28393, 1.62", "-38.6617, 81.2704, -0.18621, 0.22", "-39.1056, 81.7958, 0.240017, 0.81", "-39.305, 82.0284, 0.428918, 0.81", "-40.2612, 83.1506, 1.35907, 0.22", "-40.2976, 83.1947, 1.3967, 0.22", "-40.893, 83.9512, 2.05921, 1.18", "-41.1378, 84.3274, 2.43059, 1.55", "-45.7834, 92.718, 3.06955, 1.55", "-50.4832, 101.015, 4.34492, 1.55", "-56.5061, 108.458, 5.87853, 1.55", "-62.3383, 115.72, 8.62476, 1.55", "-68.7306, 121.643, 13.1269, 1.55", "-74.8528, 128.066, 17.2264, 1.55", "-78.8764, 135.437, 22.0852, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-2.04411, 48.9052, -0.0762192, 0.88", "-2.58321, 49.3821, 1.94948, 0.88", "-2.61693, 49.4002, 2.07358, 0.88", "-3.04519, 49.4881, 3.49208, 0.88", "-3.06329, 49.4892, 3.54927, 0.88", "-3.60094, 49.5461, 6.71451, 0.59", "-3.61038, 49.5485, 6.78382, 0.59", "-3.71298, 49.5789, 7.80414, 1.18", "-3.82919, 49.6433, 9.19554, 1.18", "-3.83208, 49.6473, 9.25532, 1.18", "-3.86199, 50.386, 14.2577, 0.22", "-3.82936, 50.5408, 14.8308, 0.29", "-3.73829, 50.9138, 15.9219, 1.11", "-3.73071, 50.9426, 15.9876, 1.11", "-3.61815, 51.2998, 16.694, 1.11", "-3.4079, 52.0486, 17.978, 0.22", "-3.29733, 52.6652, 18.5746, 0.59", "-3.2857, 52.7057, 18.6151, 0.59", "-3.18994, 52.955, 18.85, 1.11", "-4.72737, 55.246, 28.4323, 1.11", "-8.66331, 57.6626, 37.2662, 1.11", "-10.4976, 61.1074, 46.4033, 1.11", "-13.3165, 64.7732, 55.1876, 1.11", "-15.9853, 68.9201, 63.7797, 1.11", "-18.3252, 73.57, 72.1801, 1.11", "-21.1811, 78.5439, 80.207, 1.11", "-23.5226, 82.6922, 88.8932, 1.11", "-24.7188, 86.7989, 97.8309, 1.11", "-26.2013, 90.7824, 106.788, 1.11", "-27.0224, 95.9179, 115.161, 1.11", "-28.0988, 101.475, 123.2, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-2.04411, 48.9052, -0.0762192, 0.52", "-1.73786, 50.1239, 0.64964, 0.52", "-1.5768, 51.1821, 1.22036, 0.52", "-1.57628, 51.2344, 1.24427, 0.44", "-1.65031, 52.1208, 1.57698, 0.44", "-1.65937, 52.1941, 1.59849, 0.44", "-1.74824, 52.8867, 1.75832, 0.66", "-1.76359, 52.9514, 1.76951, 0.66", "-1.93516, 53.6148, 1.89598, 0.66", "-2.06243, 54.1558, 2.03863, 0.44", "-2.21803, 54.9463, 2.34835, 0.44", "-2.33093, 55.6501, 2.68649, 0.96", "-2.40716, 56.6533, 3.22955, 0.81", "-2.40819, 56.8034, 3.31564, 0.81", "-2.29898, 57.8337, 3.93737, 0.66", "-2.08585, 58.7817, 4.57657, 0.44", "-2.04352, 58.8975, 4.65869, 0.44", "-1.68413, 59.6159, 5.16421, 0.29", "-1.44208, 59.9788, 5.41819, 0.29", "-1.02529, 60.5407, 5.80814, 1.11", "-0.40974, 61.2697, 6.31883, 1.47", "-0.0631508, 61.6851, 6.62254, 1.47", "-0.0325762, 61.724, 6.65405, 1.47", "0.633144, 62.607, 7.45666, 0.88", "1.10756, 63.2689, 8.09202, 0.52", "1.13323, 63.3069, 8.12868, 0.52", "1.50659, 63.8667, 8.63861, 0.74", "1.53315, 63.9052, 8.67399, 0.74", "1.81244, 64.2767, 8.98088, 0.74", "1.84623, 64.3159, 9.0083, 0.74", "2.15452, 64.6418, 9.19815, 0.74", "2.86987, 65.4366, 9.56015, 0.37", "3.24273, 65.892, 9.71556, 0.37", "3.6958, 66.5372, 9.88633, 0.52", "4.01719, 67.1028, 10.02, 0.37", "4.43893, 68.0399, 10.217, 0.74", "4.6502, 68.7505, 10.3421, 1.11", "4.76081, 69.4333, 10.4365, 0.96", "4.78099, 70.2919, 10.5525, 0.44", "4.68394, 71.2992, 10.691, 0.44", "4.60338, 71.7854, 10.7644, 0.29", "4.46126, 72.5172, 10.8806, 0.29", "4.45041, 72.5829, 10.8907, 0.29", "4.37496, 73.2805, 10.9935, 0.37", "4.34608, 74.1459, 11.1022, 0.52", "4.39434, 74.9448, 11.1733, 1.11", "4.47087, 75.4967, 11.2245, 1.69", "4.53826, 75.8961, 11.259, 1.77", "4.59665, 76.3622, 11.2945, 1.69", "4.63834, 76.8321, 11.3256, 1.47", "4.63773, 77.1476, 11.3405, 1.47", "4.62771, 77.2161, 11.3415, 1.47", "4.32085, 78.4183, 11.3548, 0.29", "4.14495, 78.9588, 11.3582, 0.66", "4.12294, 79.0226, 11.3611, 0.66", "4.02586, 79.3235, 11.3878, 0.37", "3.85803, 79.9638, 11.4777, 0.29", "3.71038, 80.7318, 11.6135, 0.29", "3.70387, 80.7974, 11.6272, 0.29", "3.69285, 81.6206, 11.7968, 1.03", "3.72112, 82.3136, 11.9318, 1.69", "3.79708, 83.0516, 12.0579, 2.14", "3.83805, 83.3881, 12.1084, 2.28", "3.87751, 83.927, 12.157, 1.77", "3.89388, 84.5517, 12.1761, 1.18", "3.87321, 85.2038, 12.1492, 0.52", "3.82181, 85.8331, 12.1018, 0.37", "3.76385, 86.2693, 12.0351, 0.37", "3.63248, 87.1789, 11.8702, 0.74", "3.59102, 87.5113, 11.8015, 1.25", "3.52892, 88.0568, 11.6745, 1.4", "3.4648, 88.8077, 11.4908, 0.81", "3.38987, 90.321, 11.1265, 0.37", "3.39121, 91.1488, 10.9322, 0.37", "3.44232, 92.487, 10.638, 0.29", "3.50864, 93.5071, 10.4213, 1.84", "3.54909, 93.8884, 10.3453, 2.28", "3.63937, 94.4628, 10.243, 2.14", "3.89137, 95.6941, 10.0899, 0.52", "4.04866, 96.3877, 10.0205, 0.74", "4.15953, 96.8697, 9.99342, 0.74", "4.30677, 97.5456, 9.97925, 0.22", "4.37219, 97.968, 9.97554, 0.22", "4.42325, 98.8211, 9.95518, 0.74", "4.40847, 99.0406, 9.94148, 0.74", "4.31184, 99.7625, 9.86891, 0.22", "4.21807, 100.301, 9.80168, 0.74", "4.13144, 100.749, 9.7369, 0.96", "3.95535, 101.795, 9.57595, 0.37", "3.8037, 103.068, 9.36826, 1.25", "3.78321, 103.513, 9.30088, 1.55", "3.79066, 103.864, 9.26274, 1.77", "3.82157, 104.453, 9.23289, 1.77", "3.87469, 105.233, 9.23327, 0.88", "3.91392, 105.745, 9.26143, 0.52", "3.96571, 106.548, 9.34121, 0.44", "4.01294, 107.575, 9.41995, 0.29", "4.03239, 108.834, 9.49383, 1.25", "4.0256, 109.385, 9.51904, 2.21", "4.01175, 109.761, 9.53001, 2.5", "3.97403, 110.544, 9.53788, 2.28", "3.86963, 111.866, 9.47053, 0.66", "3.80956, 112.579, 9.39606, 0.52", "3.74713, 113.348, 9.29478, 0.66", "3.70525, 113.902, 9.21634, 0.96", "3.65578, 114.606, 9.10613, 0.96", "3.54872, 116.301, 8.81399, 0.22", "3.52403, 117.005, 8.70319, 1.18", "3.53049, 117.395, 8.63593, 0.88", "3.56798, 117.921, 8.53871, 0.74", "3.66173, 118.598, 8.41472, 0.29", "3.67712, 118.663, 8.40417, 0.29", "3.90424, 119.224, 8.34709, 0.81", "3.92723, 119.287, 8.33737, 0.81", "4.02634, 119.681, 8.26983, 1.03", "4.06054, 119.881, 8.23406, 1.03", "4.07539, 120.153, 8.1863, 1.03", "3.97292, 121.38, 7.91157, 0.29", "3.7947, 122.277, 7.67609, 0.29", "3.65868, 122.839, 7.52235, 0.59", "3.62166, 122.974, 7.48501, 0.59", "3.49148, 123.488, 7.34805, 0.37", "3.31828, 124.39, 7.13471, 0.29", "3.21043, 125.373, 6.95208, 1.11", "3.20784, 125.775, 6.89442, 1.69", "3.23469, 126.212, 6.84351, 1.84", "3.30213, 126.908, 6.78073, 1.62", "3.44192, 127.893, 6.72424, 0.74", "3.60797, 128.826, 6.71281, 0.52", "3.621, 128.894, 6.71281, 0.52", "3.79279, 129.915, 6.71281, 0.37", "3.80276, 129.991, 6.71182, 0.37", "3.83858, 130.632, 6.69473, 1.25", "3.82508, 131.081, 6.64115, 0.96", "3.82067, 131.147, 6.62937, 0.96", "3.77204, 131.757, 6.50854, 0.74", "3.7186, 132.385, 6.35575, 0.59", "3.67005, 132.903, 6.22533, 0.74", "3.51099, 134.272, 5.87662, 0.37", "3.40132, 135.114, 5.66348, 0.74", "3.30375, 135.839, 5.48409, 0.52", "3.1511, 136.77, 5.24257, 0.29", "2.99983, 137.496, 5.03867, 0.81", "2.87078, 137.978, 4.88727, 1.18", "2.85092, 138.033, 4.86894, 1.18", "2.74446, 138.297, 4.76854, 1.18", "2.45664, 139.111, 4.47935, 1.18", "2.25449, 139.808, 4.26413, 0.44", "2.08689, 140.578, 4.04827, 0.29", "2.0635, 140.731, 4.01148, 0.29", "1.97138, 141.795, 3.80522, 0.29", "1.95386, 143.261, 3.60452, 1.62", "1.97488, 143.765, 3.56545, 2.65", "2.00224, 144.269, 3.54637, 2.87", "2.03738, 144.83, 3.53781, 2.36", "2.08071, 145.61, 3.53319, 1.69", "2.13382, 146.84, 3.52292, 0.52", "2.17789, 147.805, 3.515, 0.52", "2.19286, 148.289, 3.50585, 0.81", "2.20601, 148.983, 3.48262, 0.44", "2.22073, 149.97, 3.43524, 0.44", "2.22415, 150.703, 3.3894, 0.37", "2.22565, 150.77, 3.38428, 0.37", "2.28713, 151.614, 3.30674, 0.37", "2.30212, 151.736, 3.29505, 0.37", "2.43498, 152.616, 3.20862, 1.62", "2.53421, 153.187, 3.15879, 2.36", "2.6165, 153.625, 3.12713, 2.36", "2.89565, 155.045, 3.03637, 0.29", "3.03899, 155.727, 2.9972, 0.29", "3.18963, 156.428, 2.96732, 0.37", "3.39308, 157.329, 2.93971, 0.37", "3.47136, 157.688, 2.91759, 0.59", "3.54217, 158.06, 2.87566, 0.59", "3.55085, 158.115, 2.86577, 0.59", "3.70189, 159.508, 2.54508, 0.29", "3.84667, 161.222, 2.07528, 0.29", "3.89787, 162.047, 1.8079, 0.96", "3.927, 162.782, 1.54078, 1.18", "3.92636, 163.35, 1.31979, 0.66", "3.90113, 163.911, 1.09328, 0.44", "3.89305, 163.972, 1.06565, 0.44", "3.76717, 164.65, 0.789174, 0.22", "3.73963, 164.798, 0.746082, 0.22", "3.571, 165.889, 0.533036, 1.47", "3.50873, 166.366, 0.468489, 2.28", "3.46435, 166.792, 0.427194, 2.58", "3.35628, 168.005, 0.350173, 0.29", "3.3029, 168.671, 0.333569, 0.22", "3.26066, 169.352, 0.333336, 0.22", "3.23195, 169.923, 0.341622, 0.22", "3.17477, 170.867, 0.361499, 1.33", "3.15547, 171.122, 0.369464, 1.62", "3.11912, 171.461, 0.369803, 1.62", "3.00084, 172.223, 0.325873, 0.37", "2.85447, 172.927, 0.255387, 0.22", "2.77139, 173.285, 0.216702, 0.22", "2.68061, 173.645, 0.176309, 0.52", "2.49347, 174.433, 0.0899631, 0.29", "2.21368, 175.793, -0.0502361, 0.29", "2.08689, 176.544, -0.119954, 1.03", "2.03934, 177.025, -0.154995, 1.33", "2.0338, 177.238, -0.166517, 1.33", "2.05136, 177.679, -0.180018, 1.18", "2.11416, 178.315, -0.177506, 0.96", "2.18856, 178.795, -0.173864, 0.37", "2.34041, 179.637, -0.165287, 0.22", "2.47971, 180.396, -0.156189, 0.22", "2.61569, 181.186, -0.145791, 1.11", "2.68452, 181.625, -0.152426, 1.92", "2.73665, 181.988, -0.176525, 2.5", "2.74472, 182.055, -0.184167, 2.5", "2.78039, 182.465, -0.256892, 2.5", "2.80728, 183.032, -0.384463, 2.36", "2.83845, 184.37, -0.735775, 0.29", "2.84009, 185.079, -0.934339, 0.29", "2.83738, 185.189, -0.964707, 0.29", "2.80534, 185.924, -1.17834, 1.33", "2.78234, 186.352, -1.30171, 1.55", "2.77854, 186.41, -1.31748, 1.55", "2.7508, 186.827, -1.41189, 1.25", "2.75669, 187.505, -1.52939, 0.66", "2.81615, 188.773, -1.6968, 0.29", "2.87726, 189.502, -1.76872, 0.88", "2.91806, 189.878, -1.79848, 1.11", "2.98142, 190.525, -1.83831, 0.96", "3.05887, 191.819, -1.8483, 0.29", "3.08498, 193.211, -1.79924, 0.29", "3.06203, 194.112, -1.73576, 1.33", "3.02613, 194.822, -1.68664, 1.92", "2.96597, 195.604, -1.62652, 2.21", "2.73962, 197.761, -1.44633, 0.37", "2.5711, 198.994, -1.33604, 0.37", "2.39982, 200.168, -1.22982, 0.37", "2.26919, 201.028, -1.15695, 0.22", "2.13164, 201.974, -1.08504, 1.33", "2.08581, 202.319, -1.06401, 2.06", "2.03209, 202.662, -1.05338, 2.21", "1.87533, 203.481, -1.0264, 1.69", "1.58248, 204.778, -0.983177, 0.22", "1.4127, 205.456, -0.962207, 0.81", "1.31505, 205.86, -0.956967, 0.81", "1.11311, 206.902, -0.959365, 0.22", "1.01701, 207.593, -0.974239, 0.81", "1.00526, 207.749, -0.980076, 0.81", "1.00162, 208.244, -1.00675, 0.81", "1.02173, 208.667, -1.03028, 0.74", "1.12098, 209.717, -1.08547, 0.22", "1.21913, 210.501, -1.13505, 0.81", "1.25999, 210.871, -1.15991, 1.03", "1.3091, 211.43, -1.19779, 0.44", "1.37205, 212.473, -1.26711, 0.29", "1.4047, 213.352, -1.32837, 0.29", "1.41124, 214.44, -1.39956, 1.55", "1.41606, 214.779, -1.42326, 1.92", "1.41795, 214.857, -1.42905, 1.92", "1.42491, 215.203, -1.45431, 1.92", "1.44105, 217.314, -1.61222, 0.22", "1.42421, 218.297, -1.68213, 0.66", "1.40536, 218.686, -1.70583, 1.03", "1.35399, 219.269, -1.74344, 1.03", "1.26514, 219.921, -1.78502, 0.81", "1.13284, 220.607, -1.82772, 0.37", "1.05781, 220.902, -1.84309, 0.37", "0.922209, 221.434, -1.87156, 0.37", "0.736234, 222.185, -1.91209, 0.29", "0.542207, 223.065, -1.95912, 0.29", "0.531237, 223.131, -1.96306, 0.29", "0.380486, 224.314, -2.02871, 0.22", "0.373708, 224.39, -2.03342, 0.22", "0.336637, 225.079, -2.07872, 0.22", "0.336731, 225.157, -2.08658, 0.22", "0.382566, 225.999, -2.19406, 1.47", "0.415229, 226.414, -2.25879, 1.84", "0.420125, 226.47, -2.26865, 1.84", "0.457628, 226.879, -2.34021, 1.84", "0.580748, 228.12, -2.55811, 0.22", "0.686128, 229.307, -2.75648, 0.22", "0.732758, 229.86, -2.83265, 0.88", "0.75466, 230.273, -2.87828, 1.18", "0.760011, 230.698, -2.91022, 0.96", "0.756597, 230.767, -2.91229, 0.96", "0.6529, 231.379, -2.88639, 0.37", "0.534995, 231.888, -2.85099, 0.37", "0.425361, 232.433, -2.80537, 0.37", "0.381547, 232.719, -2.78498, 0.29", "0.319362, 233.333, -2.74996, 0.22", "0.295447, 233.715, -2.73369, 0.52", "0.283414, 234.505, -2.71474, 0.22", "0.302035, 235.121, -2.71474, 0.22", "0.352385, 235.68, -2.73977, 1.11", "0.405261, 236.2, -2.80209, 1.47", "0.410558, 236.275, -2.81561, 1.47", "0.422854, 236.632, -2.89657, 1.33", "0.419008, 236.732, -2.92338, 1.33", "0.329624, 237.606, -3.16557, 0.74", "0.221099, 238.616, -3.45297, 0.29", "0.163756, 239.186, -3.60752, 0.37", "0.159966, 239.245, -3.62191, 0.37", "0.143471, 239.727, -3.72384, 0.37", "0.140952, 240.429, -3.85064, 0.22", "0.172738, 241.262, -3.97478, 1.11", "0.214966, 241.762, -4.04674, 1.4", "0.267425, 242.232, -4.1202, 1.18", "0.342995, 242.865, -4.22861, 0.44", "0.479291, 243.862, -4.43098, 0.22", "0.599479, 244.525, -4.5712, 0.74", "0.678764, 244.931, -4.64899, 1.33", "0.690252, 244.986, -4.65938, 1.33", "0.833771, 245.683, -4.77585, 1.62", "0.912038, 246.062, -4.82915, 1.62", "1.24132, 247.618, -5.00023, 0.29", "1.44472, 248.651, -5.0904, 0.29", "1.45557, 248.718, -5.09577, 0.29", "1.58468, 249.859, -5.17288, 0.29", "1.60972, 250.419, -5.19758, 1.03", "1.60799, 250.497, -5.1998, 1.03", "1.54561, 251.131, -5.21907, 1.18", "1.3941, 252.261, -5.25242, 0.29", "1.26983, 253.161, -5.27488, 0.29", "1.14617, 253.99, -5.29258, 1.18", "1.09832, 254.349, -5.29796, 1.47", "1.03283, 254.888, -5.30252, 1.25", "0.992274, 255.328, -5.30203, 1.33", "0.933705, 256.512, -5.28429, 0.22", "0.936304, 256.657, -5.28304, 0.22", "1.05457, 257.727, -5.2574, 0.22", "1.06733, 257.803, -5.25428, 0.22", "1.21915, 258.541, -5.21287, 0.74", "1.29806, 258.893, -5.1888, 1.18", "1.37208, 259.317, -5.15721, 1.18", "1.51965, 260.575, -5.0682, 0.22", "1.52522, 260.642, -5.06347, 0.22", "1.56783, 261.327, -5.01969, 0.66", "1.58857, 261.684, -5.0197, 0.66", "1.6794, 262.933, -5.08155, 0.22", "1.73418, 263.626, -5.14003, 1.25", "1.78669, 264.235, -5.21037, 1.55", "1.86119, 264.911, -5.29466, 1.69", "2.04672, 266.277, -5.48185, 0.29", "2.24284, 267.617, -5.67048, 0.22", "2.33321, 268.192, -5.75432, 0.66", "2.40297, 268.609, -5.80993, 0.81", "2.41309, 268.675, -5.81751, 0.81", "2.60824, 270.097, -5.93587, 0.22", "2.71468, 270.932, -5.96567, 1.03", "2.73816, 271.145, -5.97667, 1.33", "2.8689, 272.428, -6.04755, 0.22", "2.92286, 272.987, -6.07782, 0.81", "2.96281, 273.469, -6.10187, 1.03", "2.98989, 273.865, -6.11939, 0.74", "3.06406, 275.366, -6.18653, 0.22", "3.07622, 276.08, -6.21666, 0.44", "3.04714, 276.945, -6.25045, 0.22", "3.01299, 277.713, -6.27679, 1.11", "2.98857, 278.128, -6.28813, 1.33", "2.94908, 278.766, -6.30244, 0.37", "2.90123, 279.595, -6.3114, 0.15", "2.88041, 280.22, -6.32475, 0.74", "2.88477, 280.289, -6.32742, 0.74", "2.91868, 280.568, -6.34082, 0.74", "3.09493, 281.658, -6.39943, 0.22", "3.20877, 282.268, -6.43368, 1.18", "3.29635, 282.704, -6.46076, 1.62", "3.67775, 284.662, -6.59089, 0.22", "3.79073, 285.281, -6.63298, 0.29", "3.80182, 285.349, -6.63758, 0.29", "3.9174, 286.177, -6.69019, 0.29", "4.01681, 286.98, -6.74442, 0.59", "4.05955, 287.531, -6.79309, 1.11", "4.06342, 287.626, -6.80228, 1.11", "4.09581, 288.175, -6.85541, 1.55", "4.13094, 288.775, -6.91208, 1.55", "4.13401, 288.832, -6.91719, 1.55", "4.21277, 290.704, -7.06673, 0.22", "4.2729, 292.059, -7.16197, 0.22", "4.35619, 292.999, -7.21935, 1.4", "4.3823, 293.215, -7.23049, 1.77", "4.46807, 293.838, -7.25637, 1.4", "4.60129, 294.591, -7.27692, 0.74", "4.82474, 295.575, -7.28657, 0.29", "5.2924, 297.336, -7.3057, 0.22", "5.49539, 298.036, -7.31364, 0.66", "5.60086, 298.372, -7.31828, 0.66", "5.9009, 299.222, -7.32979, 0.22", "5.92474, 299.287, -7.32877, 0.22", "6.11205, 299.848, -7.29857, 0.52", "6.13175, 299.922, -7.29106, 0.52", "6.21973, 300.263, -7.25011, 0.52", "6.35595, 300.738, -7.15617, 0.22", "6.63931, 301.616, -6.92774, 1.03", "6.81894, 302.073, -6.78357, 1.62", "6.9847, 302.474, -6.64697, 1.47", "7.22267, 303.05, -6.43343, 1.33", "7.78117, 304.435, -5.85945, 0.22", "8.14397, 305.331, -5.46376, 1.18", "8.61908, 306.452, -4.953, 0.22", "8.82172, 306.923, -4.72843, 0.22", "9.09819, 307.56, -4.41677, 0.81", "9.69451, 308.919, -3.75362, 0.22", "9.71759, 308.977, -3.72645, 0.22", "9.8727, 309.411, -3.52198, 0.81", "9.89209, 309.47, -3.49483, 0.81", "9.99784, 309.729, -3.37348, 1.11", "10.204, 310.131, -3.23126, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-23.554, -35.5908, 18.5651, 0.29", "-24.6461, -35.6289, 19.2742, 0.29", "-25.8711, -35.6835, 20.2932, 0.29", "-26.4737, -35.7663, 20.762, 0.59", "-27.4542, -36.0222, 21.4325, 0.59", "-27.5543, -36.0571, 21.4876, 0.59", "-29.2199, -36.7164, 22.2802, 0.59", "-29.2759, -36.7426, 22.312, 0.59", "-30.0327, -37.1794, 22.8648, 0.37", "-30.644, -37.5986, 23.3297, 0.29", "-31.1889, -38.0005, 23.7234, 0.29", "-31.2294, -38.0318, 23.7529, 0.29", "-32.2314, -38.8993, 24.5093, 0.74", "-32.4733, -39.1321, 24.7516, 1.03", "-33.0187, -39.7644, 25.4872, 0.29", "-33.0765, -39.84, 25.5721, 0.29", "-33.42, -40.3314, 26.0656, 0.37", "-33.6789, -40.6994, 26.3747, 0.52", "-33.8983, -41.0118, 26.5581, 0.52", "-34.4223, -41.5296, 26.8087, 0.29", "-35.1111, -41.933, 26.9766, 0.29", "-35.5289, -42.0865, 27.0502, 0.59", "-35.8281, -42.1562, 27.0907, 0.88", "-36.1305, -42.2148, 27.1255, 1.03", "-37.5426, -42.4849, 27.3491, 0.29", "-38.4001, -42.6453, 27.5302, 0.44", "-38.8957, -42.775, 27.674, 0.74", "-38.986, -42.8116, 27.7049, 0.74", "-39.5112, -43.0631, 27.9062, 0.66", "-40.3771, -43.5709, 28.2981, 0.66", "-40.4251, -43.6107, 28.3272, 0.66", "-40.7959, -43.9635, 28.5586, 0.29", "-41.5452, -44.7446, 29.0686, 0.22", "-48.4004, -49.1427, 34.6876, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-23.554, -35.5908, 18.5651, 0.74", "-24.1395, -34.9263, 20.0313, 0.74", "-24.9365, -34.0648, 21.7144, 0.66", "-24.9871, -34.0101, 21.8213, 0.66", "-25.223, -33.755, 22.3196, 0.66", "-25.2511, -33.7248, 22.3787, 0.66", "-25.4314, -33.5299, 22.7595, 0.52", "-25.6, -33.2769, 22.9996, 0.52", "-30.2053, -29.5198, 30.9464, 0.52", "-33.9893, -24.9653, 38.8646, 0.52", "-37.3037, -22.1041, 47.8057, 0.52", "-38.7293, -18.3752, 56.892, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.05654, -21.9708, 0.911928, 0.96", "-7.64862, -23.3135, 0.941366, 0.96", "-8.1724, -24.6523, 0.965416, 0.96", "-8.22002, -24.8049, 0.967467, 0.96", "-8.41841, -25.5909, 0.949369, 0.96", "-8.71988, -26.9406, 0.895459, 1.11", "-9.03448, -28.5554, 0.763651, 1.11", "-9.04332, -28.633, 0.75572, 1.11", "-9.16043, -30.2435, 0.562934, 1.03", "-9.22704, -31.4059, 0.406186, 1.99", "-9.22913, -31.4832, 0.393248, 1.99", "-9.22658, -32.5487, 0.146408, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.05654, -21.9708, 0.911928, 1.92", "-6.67402, -23.8764, 1.01778, 1.92", "-6.31778, -25.5913, 1.10283, 1.92", "-5.98775, -27.151, 1.17186, 1.92", "-5.69088, -28.596, 1.22862, 2.14", "-5.40109, -29.9515, 1.27518, 1.62", "-5.08769, -31.3105, 1.31218, 1.99", "-4.84774, -32.2231, 1.31225, 2.73", "-4.53774, -33.2376, 1.31129, 2.36", "-4.1431, -34.3641, 1.34495, 1.99", "-3.56684, -35.8325, 1.432, 1.92", "-3.18225, -36.7069, 1.50849, 2.28", "-2.77634, -37.5841, 1.62674, 2.5", "-2.38636, -38.4228, 1.78452, 2.58", "-1.77358, -39.7862, 2.14644, 1.69", "-1.75204, -39.8371, 2.16281, 1.69", "-1.33507, -41.0502, 2.58482, 1.47", "-0.901075, -42.7542, 3.18809, 1.25", "-0.742817, -43.7103, 3.51652, 1.62", "-0.663468, -44.722, 3.83507, 1.62", "-0.669462, -45.8074, 4.12814, 1.25", "-0.776952, -47.0487, 4.43, 1.25", "-1.03204, -48.2521, 4.67632, 1.77", "-1.26065, -48.9203, 4.76711, 1.92", "-1.57332, -49.6737, 4.82541, 1.92", "-1.91814, -50.4017, 4.85168, 2.06", "-2.37863, -51.2757, 4.87419, 1.92", "-2.98302, -52.3765, 4.88926, 1.77", "-3.6302, -53.5573, 4.88926, 1.55", "-4.39991, -54.9951, 4.88926, 1.4", "-4.99192, -56.1455, 4.91903, 1.4", "-5.4626, -57.1414, 4.96659, 1.84", "-5.77277, -57.9238, 5.04086, 1.77", "-6.08763, -58.9912, 5.19166, 1.25", "-6.10075, -59.0656, 5.2052, 1.25", "-6.20471, -60.4619, 5.51132, 0.88", "-6.17716, -61.1396, 5.66772, 1.62", "-6.01797, -62.3623, 5.93648, 1.92", "-5.8238, -63.4318, 6.14342, 1.92", "-5.63134, -64.4401, 6.30345, 1.77", "-5.62005, -64.506, 6.31098, 1.77", "-5.40549, -65.885, 6.40181, 1.62", "-5.27231, -66.9952, 6.41478, 1.33", "-5.17499, -68.037, 6.37382, 1.18", "-5.1029, -69.0308, 6.31726, 1.18", "-5.04116, -70.1572, 6.23606, 1.55", "-5.01764, -71.5422, 6.10432, 1.62", "-5.05966, -72.7467, 5.96552, 2.14", "-5.12806, -73.6586, 5.85403, 2.36", "-5.21349, -74.5221, 5.74674, 2.58", "-5.28095, -75.1639, 5.67264, 3.02", "-5.43897, -76.7011, 5.54171, 2.21", "-5.55196, -78.0593, 5.46732, 1.77", "-5.62546, -79.2888, 5.4382, 1.77", "-5.65947, -80.6549, 5.455, 1.84", "-5.61823, -82.2592, 5.57578, 1.84", "-5.4925, -83.8835, 5.79741, 1.18", "-5.25067, -85.5696, 6.13584, 0.96", "-5.2378, -85.635, 6.15579, 0.96", "-4.95436, -86.7563, 6.66666, 1.33", "-4.61536, -87.8764, 7.31978, 1.84", "-4.34996, -88.7441, 7.89522, 1.84", "-4.11057, -89.5935, 8.4571, 1.77", "-3.73999, -91.1579, 9.39825, 1.69", "-3.46, -92.6571, 10.1153, 0.74", "-3.3526, -93.5273, 10.409, 0.74", "-3.26486, -94.6176, 10.6528, 1.18", "-3.21838, -95.6497, 10.7712, 1.47", "-3.22264, -96.6607, 10.7271, 1.62", "-3.26676, -97.4131, 10.5559, 1.92", "-3.33257, -98.0112, 10.376, 1.92", "-3.33994, -98.0658, 10.3604, 1.92", "-3.44571, -98.7877, 10.1838, 1.92", "-3.61664, -99.8336, 9.99542, 1.33", "-3.82164, -100.866, 9.84065, 1.47", "-4.03846, -101.915, 9.70058, 1.92", "-4.18474, -102.687, 9.60581, 1.92", "-4.35871, -103.726, 9.49588, 1.99", "-4.51641, -105.021, 9.38502, 1.99", "-4.61871, -106.516, 9.2778, 1.99", "-4.62255, -106.872, 9.26028, 2.36", "-4.60194, -107.72, 9.21761, 1.62", "-4.5532, -108.618, 9.17508, 1.25", "-4.46381, -109.734, 9.12388, 1.11", "-4.39647, -110.677, 9.08293, 0.81", "-4.33612, -111.906, 9.04688, 0.66", "-4.34585, -112.969, 9.02321, 1.55", "-4.3497, -113.038, 9.02219, 1.55", "-4.39989, -113.606, 9.06069, 2.21", "-4.49231, -114.402, 9.16667, 1.92", "-4.61178, -115.451, 9.35323, 1.62", "-4.71668, -116.423, 9.56295, 1.4", "-4.80088, -117.501, 9.88628, 1.4", "-4.90906, -119.198, 10.482, 1.33", "-4.93273, -120.033, 10.8058, 0.96", "-4.90421, -121.293, 11.323, 0.74", "-4.89824, -121.369, 11.3573, 0.74", "-4.63574, -123.095, 12.1874, 0.66", "-4.61793, -123.152, 12.2186, 0.66", "-4.10484, -124.296, 12.8481, 1.69", "-3.78899, -124.932, 13.2075, 2.21", "-3.3055, -125.927, 13.7493, 3.02", "-3.02449, -126.579, 14.0676, 3.02", "-2.26929, -128.666, 14.9294, 0.52", "-2.08072, -129.45, 15.1857, 0.52", "-1.96916, -130.429, 15.4199, 2.36", "-1.96172, -131.354, 15.5516, 3.09", "-2.00051, -131.799, 15.571, 3.24", "-2.14098, -132.702, 15.56, 3.02", "-2.5703, -134.696, 15.419, 1.11", "-2.77566, -135.739, 15.3471, 0.96", "-2.8993, -136.508, 15.2944, 1.25", "-3.01673, -137.564, 15.2508, 1.18", "-3.06427, -138.361, 15.2447, 0.52", "-3.06357, -138.43, 15.2475, 0.52", "-2.95607, -139.175, 15.3401, 1.4", "-2.94045, -139.229, 15.3476, 1.4", "-2.54972, -140.143, 15.4645, 2.14", "-2.24129, -140.778, 15.5302, 2.14", "-2.02529, -141.239, 15.5613, 2.36", "-1.6571, -142.106, 15.6007, 1.33", "-1.26387, -143.156, 15.6072, 0.81", "-0.849228, -144.484, 15.5547, 0.81", "-0.53875, -145.772, 15.4506, 0.81", "-0.277865, -147.143, 15.3407, 1.62", "-0.16242, -147.878, 15.2844, 1.92", "-0.0102291, -149.011, 15.2475, 1.25", "0.120993, -150.099, 15.2539, 0.96", "0.292397, -151.571, 15.3139, 0.96", "0.483278, -152.846, 15.4142, 0.88", "0.72332, -154.148, 15.579, 1.62", "1.06035, -155.641, 15.819, 1.84", "1.25988, -156.447, 16.023, 1.92", "1.27784, -156.518, 16.0466, 1.92", "1.54191, -157.581, 16.4466, 1.62", "1.83939, -158.898, 16.958, 0.59", "2.04976, -159.926, 17.3518, 0.59", "2.35473, -161.47, 17.8727, 0.52", "2.55453, -162.493, 18.2381, 1.69", "2.6787, -163.154, 18.4825, 2.5", "2.77264, -163.738, 18.7139, 2.5", "2.88708, -164.438, 18.9924, 2.5", "3.06297, -165.494, 19.3573, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.86611, 100.285, -20.1616, 0.59", "-10.7343, 101.107, -20.6365, 0.59", "-11.3972, 101.857, -21.0996, 0.44", "-11.4198, 101.977, -21.7381, 0.74", "-11.4437, 102.178, -22.7382, 0.74", "-11.4526, 102.209, -22.8897, 0.74", "-11.5293, 102.384, -23.6535, 0.88", "-11.5355, 102.398, -23.7215, 0.88", "-12.1012, 103.589, -29.1514, 1.62", "-12.3209, 103.924, -30.6819, 1.4", "-12.627, 104.254, -32.2593, 0.37", "-12.8349, 104.431, -33.1087, 0.74", "-13.3766, 104.816, -34.865, 0.29", "-13.6309, 104.992, -35.4907, 1.4", "-13.9402, 105.197, -35.991, 1.84", "-15.0178, 105.872, -37.8648, 0.44", "-15.189, 105.993, -38.187, 0.29", "-15.4673, 106.184, -38.7269, 0.29", "-15.7379, 106.371, -39.2301, 0.59", "-16.6677, 107.055, -41.0327, 0.44", "-16.9853, 107.324, -41.6148, 0.22", "-17.2355, 107.566, -42.0197, 0.74", "-17.6487, 108.002, -42.7558, 0.15", "-17.7138, 108.071, -42.8732, 0.15", "-17.8689, 108.246, -43.1369, 0.15", "-18.4524, 108.944, -43.9947, 1.47", "-18.7551, 109.307, -44.4187, 1.62", "-19.8906, 110.626, -46.0608, 0.22", "-19.9239, 110.665, -46.1106, 0.22", "-20.3405, 111.122, -46.722, 0.22", "-20.8928, 111.69, -47.5183, 1.25", "-21.1506, 111.961, -47.9366, 1.4", "-21.9308, 112.818, -49.2647, 0.22", "-21.9788, 112.877, -49.3556, 0.22", "-22.5786, 113.702, -50.6547, 1.47", "-22.7486, 113.962, -51.0523, 1.99", "-23.5828, 115.436, -53.1394, 0.37", "-23.7799, 115.833, -53.6512, 0.29", "-24.0891, 116.524, -54.453, 1.18", "-24.4235, 117.326, -55.3133, 0.52", "-24.6984, 118.099, -56.0466, 1.55", "-24.7891, 118.379, -56.2823, 1.84", "-25.2916, 120.069, -57.4202, 0.22", "-25.3047, 120.125, -57.4563, 0.22", "-25.3884, 120.627, -57.7446, 0.22", "-25.4028, 121.232, -58.0555, 1.4", "-25.3983, 121.301, -58.0897, 1.4", "-25.3583, 121.693, -58.2639, 1.4", "-25.12, 123.176, -58.8971, 0.15", "-25.0166, 123.799, -59.1873, 0.74", "-24.7613, 125.243, -59.9063, 0.15", "-24.6649, 125.748, -60.1687, 0.74", "-24.6081, 125.999, -60.3, 0.88", "-24.258, 127.258, -60.9413, 0.15", "-24.2404, 127.306, -60.9685, 0.15", "-24.0817, 127.669, -61.2084, 0.37", "-24.0251, 127.75, -61.3089, 0.37", "-23.6524, 128.099, -62.002, 0.22", "-23.3343, 128.354, -62.599, 0.59", "-22.474, 128.896, -64.2315, 1.69", "-22.3807, 128.948, -64.4161, 1.69", "-20.9387, 129.552, -67.4622, 0.22", "-20.6694, 129.623, -68.0653, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.86611, 100.285, -20.1616, 2.65", "-9.74065, 101.132, -19.6738, 2.65", "-9.67061, 102.096, -19.2302, 2.06", "-9.63021, 103.808, -18.5645, 1.92", "-9.63065, 103.862, -18.5456, 1.92", "-9.67781, 104.847, -18.2379, 0.74", "-9.77519, 106.278, -17.8232, 0.52", "-9.92968, 107.408, -17.5361, 0.52", "-10.0257, 107.946, -17.4441, 0.52", "-10.067, 108.172, -17.436, 0.52", "-10.1753, 108.883, -17.426, 0.52", "-10.1872, 108.993, -17.4272, 0.52", "-10.2197, 109.807, -17.4593, 0.44", "-10.2169, 110.453, -17.4577, 0.44", "-10.1643, 111.685, -17.4446, 1.84", "-10.1055, 112.694, -17.3991, 2.73", "-10.0696, 113.231, -17.3596, 3.54", "-10.0279, 113.94, -17.2921, 3.9", "-10.0023, 114.506, -17.2244, 4.05", "-9.99401, 115.04, -17.1626, 3.9", "-10.0201, 116.024, -17.0586, 3.61", "-10.0769, 116.714, -16.9847, 2.8", "-10.1693, 117.488, -16.9085, 1.69", "-10.2913, 118.398, -16.8206, 1.11", "-10.444, 119.42, -16.7294, 0.81", "-10.5369, 119.977, -16.6892, 0.66", "-10.7423, 121.153, -16.6488, 0.52", "-10.9434, 122.181, -16.6091, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-48.4004, -49.1427, 34.6876, 0.37", "-55.9473, -53.263, 39.6105, 0.37", "-61.9103, -59.0775, 44.8048, 0.37", "-68.5852, -63.4706, 50.641, 0.37", "-73.7833, -67.7149, 57.9224, 0.37", "-80.6755, -72.022, 63.5742, 0.37", "-87.5742, -75.8383, 69.5967, 0.37", "-93.8262, -81.5875, 74.525, 0.37", "-101.833, -86.0592, 78.2302, 0.37", "-111.242, -88.8032, 80.0002, 0.37", "-120.693, -91.7959, 80.8647, 0.37", "-130.369, -93.126, 82.9658, 0.37", "-140.109, -94.1902, 84.9372, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-48.4004, -49.1427, 34.6876, 0.29", "-55.9772, -53.2684, 39.5592, 0.37", "-62.6385, -57.8929, 45.2099, 0.37", "-69.4583, -63.5289, 49.4872, 0.37", "-76.3561, -69.7513, 52.5724, 0.37", "-83.3092, -76.1491, 55.0823, 0.37", "-89.6908, -82.4481, 58.9954, 0.37", "-95.3836, -89.6059, 62.2851, 0.37", "-100.613, -97.5265, 64.0582, 0.37", "-107.503, -104.399, 64.51, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-38.7293, -18.3752, 56.892, 0.37", "-42.3386, -14.442, 65.2485, 0.37", "-46.7107, -10.5199, 73.2385, 0.37", "-51.8516, -5.5758, 80.0566, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-38.7293, -18.3752, 56.892, 0.29", "-40.6556, -15.2589, 66.1401, 0.37", "-42.1093, -11.6719, 75.2851, 0.37", "-42.0065, -9.66172, 85.0581, 0.37", "-41.4226, -8.74091, 94.9939, 0.37", "-41.5451, -8.85988, 104.993, 0.37", "-42.7575, -8.40609, 114.908, 0.37", "-44.6551, -7.83333, 124.707, 0.37", "-46.3598, -7.04925, 134.526, 0.37", "-48.6991, -4.94459, 143.993, 0.37", "-51.2655, -2.78966, 153.388, 0.37", "-53.1759, -0.647103, 162.941, 0.37", "-54.2242, 0.292264, 172.837, 0.37", "-55.5088, 1.84884, 182.618, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.22658, -32.5487, 0.146408, 0.59", "-9.59948, -32.9649, -0.172241, 0.59", "-10.2649, -33.4943, -0.647218, 0.44", "-11.0174, -33.8906, -1.18298, 0.29", "-11.4344, -34.0519, -1.44969, 0.22", "-11.9547, -34.2369, -1.76139, 0.29", "-12.5837, -34.4577, -2.11918, 0.29", "-13.3881, -34.6977, -2.51984, 0.29", "-14.3067, -34.9607, -2.96687, 0.29", "-15.0139, -35.1913, -3.31553, 0.29", "-15.9267, -35.5639, -3.7914, 1.25", "-16.1986, -35.7127, -3.94255, 1.77", "-16.6073, -36.0111, -4.18683, 1.77", "-17.7328, -37.0089, -4.88119, 1.11", "-18.3437, -37.6533, -5.28377, 0.52", "-18.7541, -38.1549, -5.61345, 0.37", "-19.2595, -38.857, -6.11398, 0.37", "-19.6024, -39.3864, -6.5072, 0.37", "-19.6582, -39.4766, -6.57617, 0.37", "-20.1168, -40.2243, -7.14213, 1.25", "-20.4247, -40.6723, -7.53389, 1.18", "-21.0179, -41.3612, -8.21051, 0.29", "-21.3206, -41.611, -8.47911, 0.22", "-21.7582, -41.9116, -8.77999, 0.22", "-22.1115, -42.1435, -8.96987, 0.44", "-22.4844, -42.3696, -9.11402, 0.44", "-22.8759, -42.6038, -9.21646, 0.29", "-23.2825, -42.8365, -9.31165, 0.29", "-23.8782, -43.1844, -9.53301, 0.37", "-24.3409, -43.4681, -9.74586, 0.37", "-24.8676, -43.7696, -10.0213, 0.29", "-25.82, -44.2583, -10.577, 1.18", "-26.5228, -44.5989, -10.9976, 1.99", "-27.2131, -44.9062, -11.4123, 2.28", "-27.6416, -45.0881, -11.6619, 1.99", "-28.7218, -45.5807, -12.2742, 0.59", "-29.4343, -45.9772, -12.6642, 0.37", "-29.9566, -46.3727, -12.9574, 0.37", "-30.5189, -46.8565, -13.2689, 1.11", "-30.9086, -47.206, -13.4718, 1.69", "-31.3255, -47.5992, -13.6938, 1.84", "-31.8798, -48.138, -13.9722, 1.4", "-32.8246, -48.9879, -14.3998, 0.44", "-33.3304, -49.3973, -14.6231, 0.44", "-33.9675, -49.8721, -14.8841, 0.37", "-34.5329, -50.2512, -15.1066, 1.18", "-35.0253, -50.5699, -15.2931, 1.62", "-35.5373, -50.9292, -15.4779, 1.03", "-35.5874, -50.9725, -15.4984, 1.03", "-35.8384, -51.2534, -15.6327, 0.88", "-36.2438, -51.776, -15.9094, 0.44", "-36.6617, -52.3349, -16.2235, 0.29", "-37.0312, -52.8499, -16.5247, 0.29", "-37.6972, -53.7908, -17.0873, 1.92", "-38.1506, -54.4382, -17.4702, 2.73", "-38.6081, -55.1004, -17.8684, 2.65", "-39.5024, -56.3442, -18.6285, 0.66", "-39.5453, -56.3997, -18.6639, 0.66", "-40.2102, -57.214, -19.1921, 0.29", "-40.5072, -57.5664, -19.407, 0.29", "-40.875, -57.9946, -19.6748, 0.29", "-41.2989, -58.5072, -20.0349, 0.29", "-41.6881, -58.9799, -20.4086, 1.11", "-41.7301, -59.0323, -20.4498, 1.11", "-42.0764, -59.4695, -20.7868, 1.25", "-42.5215, -60.0314, -21.2052, 0.96", "-43.2833, -61.0979, -21.8637, 0.37", "-43.3159, -61.1504, -21.8936, 0.37", "-43.6706, -61.7414, -22.205, 0.22", "-43.9102, -62.1433, -22.3984, 0.22", "-43.9813, -62.2564, -22.4556, 0.66", "-44.4842, -63.0285, -22.822, 0.52", "-45.313, -64.2743, -23.3948, 1.77", "-45.9089, -65.159, -23.8033, 2.58", "-46.4185, -65.8971, -24.149, 2.58", "-47.4076, -67.306, -24.8008, 0.44", "-47.9346, -68.0326, -25.1215, 0.29", "-47.9813, -68.093, -25.1458, 0.29", "-48.3401, -68.5465, -25.2853, 0.29", "-48.8869, -69.2518, -25.4677, 1.47", "-49.1809, -69.6477, -25.5474, 1.84", "-49.5356, -70.1984, -25.61, 1.47", "-50.3878, -71.653, -25.7626, 0.29", "-50.6835, -72.2079, -25.8134, 1.11", "-50.8817, -72.6053, -25.8438, 1.25", "-51.1576, -73.2023, -25.8763, 1.03", "-51.5344, -74.0486, -25.9132, 0.22", "-51.7815, -74.5957, -25.927, 0.22", "-51.9373, -74.9336, -25.9254, 0.59", "-52.1799, -75.3988, -25.9254, 0.74", "-52.3472, -75.6755, -25.9365, 0.37", "-52.689, -76.1845, -25.9713, 0.22", "-53.1944, -76.8714, -26.0299, 1.55", "-53.6642, -77.5073, -26.0898, 2.21", "-53.9314, -77.8678, -26.1237, 1.84", "-54.7739, -78.9985, -26.2263, 0.22", "-55.2081, -79.5697, -26.2756, 0.22", "-55.7115, -80.1933, -26.3265, 1.11", "-56.0101, -80.5436, -26.3518, 1.62", "-56.3841, -80.9557, -26.3734, 1.84", "-56.9535, -81.5652, -26.3925, 1.11", "-57.2762, -81.9062, -26.3962, 0.66", "-58.1248, -82.803, -26.4133, 0.29", "-58.5834, -83.2922, -26.4259, 0.59", "-59.6592, -84.5076, -26.443, 0.29", "-59.7046, -84.5617, -26.4432, 0.29", "-60.4302, -85.4673, -26.4375, 1.18", "-60.707, -85.8265, -26.4314, 1.55", "-60.9638, -86.1901, -26.4197, 1.55", "-61.6448, -87.22, -26.4336, 0.52", "-62.2206, -88.1631, -26.5038, 0.37", "-62.255, -88.2236, -26.5119, 0.37", "-62.6551, -89.0009, -26.6479, 0.37", "-62.9777, -89.6596, -26.782, 0.29", "-63.5736, -90.9294, -27.0768, 1.99", "-63.8349, -91.5119, -27.2289, 2.28", "-64.4282, -92.9145, -27.5826, 0.22", "-64.7848, -93.7312, -27.7691, 0.22", "-64.9486, -94.1049, -27.8277, 0.74", "-64.9766, -94.1685, -27.8329, 0.74", "-65.2225, -94.7427, -27.8306, 0.74", "-65.5454, -95.5253, -27.7998, 0.22", "-65.9227, -96.4105, -27.7557, 0.22", "-66.5491, -97.8276, -27.6871, 2.14", "-66.691, -98.1485, -27.6727, 2.36", "-67.2267, -99.311, -27.6233, 0.29", "-67.4754, -99.8194, -27.5958, 0.22", "-67.8216, -100.464, -27.5568, 0.22", "-68.2522, -101.217, -27.5055, 1.4", "-68.4924, -101.623, -27.4797, 1.77", "-68.8293, -102.207, -27.4298, 1.33", "-69.3861, -103.288, -27.3118, 0.37", "-69.7469, -104.066, -27.2293, 0.22", "-69.9592, -104.6, -27.1768, 0.22", "-70.2066, -105.295, -27.1245, 0.81", "-70.3416, -105.702, -27.1004, 0.81", "-70.6343, -106.571, -27.0854, 0.22", "-70.8331, -107.069, -27.111, 0.22", "-71.0933, -107.609, -27.1569, 1.25", "-71.3232, -108.001, -27.1996, 1.77", "-71.5975, -108.422, -27.251, 1.77", "-72.2026, -109.339, -27.372, 0.44", "-72.7615, -110.171, -27.4838, 0.29", "-73.2332, -110.887, -27.5883, 1.4", "-73.5116, -111.309, -27.6506, 1.77", "-73.7422, -111.672, -27.7045, 1.77", "-74.3688, -112.7, -27.8517, 0.37", "-74.8135, -113.485, -27.951, 0.29", "-75.2801, -114.31, -28.0694, 0.22", "-75.6948, -114.982, -28.1867, 0.22", "-76.2164, -115.757, -28.3355, 1.11", "-76.4169, -116.034, -28.3919, 1.4", "-76.8281, -116.591, -28.5078, 0.59", "-77.2865, -117.237, -28.6424, 0.22", "-77.7349, -117.898, -28.7753, 0.22", "-78.1922, -118.557, -28.9154, 1.11", "-78.4007, -118.838, -28.9753, 1.55", "-78.7092, -119.241, -29.0613, 1.33", "-79.2349, -119.908, -29.1988, 0.59", "-79.6412, -120.454, -29.2885, 0.22", "-79.8935, -120.799, -29.3284, 0.66", "-80.0259, -120.969, -29.3408, 0.66", "-80.1625, -121.137, -29.345, 0.66", "-80.58, -121.646, -29.3495, 0.22", "-81.0475, -122.198, -29.2999, 0.22", "-81.6352, -122.879, -29.1934, 1.33", "-81.8951, -123.176, -29.1362, 1.62", "-82.1743, -123.489, -29.0696, 1.33", "-83.0624, -124.463, -28.8471, 0.29", "-83.6297, -125.048, -28.7134, 0.29", "-84.1116, -125.478, -28.6272, 0.29", "-84.5789, -125.844, -28.573, 0.88", "-84.9055, -126.083, -28.542, 0.88", "-85.2875, -126.342, -28.5146, 0.66", "-85.9627, -126.788, -28.4886, 0.15", "-86.5487, -127.223, -28.526, 0.15", "-87.0962, -127.657, -28.5825, 0.15", "-87.3708, -127.871, -28.6214, 0.59", "-87.4295, -127.912, -28.6237, 0.59", "-87.737, -128.124, -28.613, 0.59", "-88.2462, -128.5, -28.5641, 0.22", "-88.3102, -128.556, -28.5562, 0.22", "-89.0207, -129.185, -28.4658, 0.22", "-90.0913, -130.167, -28.3283, 1.77", "-90.4691, -130.521, -28.2793, 2.14", "-90.953, -130.978, -28.2258, 1.47", "-91.8491, -131.893, -28.1672, 0.37", "-92.5772, -132.708, -28.1585, 0.22", "-92.9526, -133.207, -28.1849, 0.81", "-93.1515, -133.502, -28.2256, 0.96", "-93.4648, -133.982, -28.3137, 0.96", "-93.9937, -134.848, -28.5093, 0.22", "-94.0271, -134.906, -28.5244, 0.22", "-94.3493, -135.517, -28.6973, 0.22", "-94.6967, -136.209, -28.8859, 0.22", "-94.9095, -136.688, -29.0288, 0.96", "-95.0931, -137.111, -29.1534, 1.33", "-95.3407, -137.64, -29.3105, 1.11", "-95.7445, -138.413, -29.5944, 0.22", "-95.9516, -138.763, -29.7401, 0.59", "-96.5387, -139.716, -30.1241, 0.22", "-96.9832, -140.412, -30.3912, 1.18", "-97.2866, -140.86, -30.573, 1.4", "-98.0373, -141.895, -30.9911, 0.22", "-98.4822, -142.453, -31.2043, 0.22", "-98.9922, -143.069, -31.4155, 1.99", "-99.3903, -143.526, -31.5494, 2.5", "-99.8074, -144.011, -31.6829, 2.43", "-100.891, -145.275, -31.9729, 0.22", "-101.297, -145.76, -32.05, 0.29", "-101.861, -146.436, -32.1498, 0.22", "-102.182, -146.833, -32.2003, 0.74", "-102.333, -147.035, -32.2071, 0.74", "-102.843, -147.802, -32.1621, 0.15", "-103.175, -148.438, -32.1052, 0.15", "-103.262, -148.638, -32.0944, 0.81", "-103.526, -149.29, -32.0937, 1.33", "-103.779, -149.944, -32.1173, 1.33", "-103.803, -150.006, -32.1214, 1.33", "-104.17, -150.971, -32.2777, 0.22", "-104.56, -152.032, -32.5142, 0.22", "-104.851, -152.868, -32.7405, 1.62", "-105.045, -153.411, -32.9081, 1.92", "-105.209, -153.87, -33.0611, 1.92", "-105.632, -155.1, -33.4578, 0.22", "-105.867, -155.804, -33.6768, 0.22", "-106.117, -156.655, -33.9565, 0.22", "-106.322, -157.392, -34.2079, 1.25", "-106.438, -157.746, -34.332, 1.62", "-106.616, -158.19, -34.4745, 1.62", "-106.678, -158.318, -34.5122, 1.62", "-107.462, -159.709, -34.9788, 0.22", "-107.531, -159.831, -35.0274, 0.22", "-107.906, -160.559, -35.3424, 0.22", "-108.304, -161.371, -35.7038, 0.22", "-108.612, -161.98, -35.9742, 1.03", "-108.767, -162.28, -36.1055, 1.03", "-109.257, -163.213, -36.4993, 0.22", "-109.474, -163.64, -36.6801, 0.59", "-109.77, -164.291, -36.9484, 0.22", "-109.983, -164.772, -37.1255, 0.22", "-110.248, -165.411, -37.3133, 1.25", "-110.398, -165.78, -37.408, 1.62", "-110.443, -165.893, -37.4329, 1.62", "-110.91, -167.057, -37.7041, 0.15", "-111.196, -167.834, -37.8855, 1.25", "-111.301, -168.153, -37.9594, 1.25", "-111.651, -169.165, -38.2101, 0.22", "-111.677, -169.226, -38.2275, 0.22", "-111.949, -169.737, -38.3925, 0.74", "-111.981, -169.785, -38.4114, 0.74", "-112.149, -170.014, -38.4918, 0.74", "-112.801, -170.889, -38.7418, 0.15", "-113.314, -171.603, -38.8937, 1.11", "-113.403, -171.731, -38.9204, 1.11", "-113.447, -171.797, -38.9333, 1.11", "-114.581, -173.43, -39.2603, 0.22", "-114.934, -173.922, -39.3631, 1.03", "-115.22, -174.313, -39.4439, 1.11", "-116.104, -175.467, -39.7078, 0.22", "-116.248, -175.647, -39.7535, 0.59", "-116.94, -176.456, -39.96, 0.22", "-117.29, -176.831, -40.0591, 1.33", "-117.59, -177.138, -40.1253, 1.55", "-118.066, -177.588, -40.1925, 0.88", "-119.041, -178.503, -40.2688, 0.22", "-119.477, -178.918, -40.2945, 0.66", "-119.683, -179.109, -40.33, 0.66", "-120.464, -179.812, -40.5232, 0.22", "-121.21, -180.476, -40.7612, 1.62", "-121.767, -180.966, -40.9876, 2.06", "-122.251, -181.375, -41.2165, 2.06", "-123.935, -182.81, -42.072, 0.22", "-123.935, -182.81, -42.072, 0.59", "-124.045, -182.897, -42.1252, 0.59", "-124.75, -183.411, -42.4202, 0.22", "-125.455, -183.868, -42.652, 0.22", "-126.227, -184.326, -42.818, 1.77", "-126.664, -184.569, -42.8481, 2.06", "-128.352, -185.492, -42.8608, 0.15", "-128.692, -185.667, -42.8459, 0.74", "-129.076, -185.841, -42.7873, 0.74", "-129.906, -186.192, -42.5756, 0.22", "-130.618, -186.47, -42.3351, 0.22", "-131.401, -186.758, -42.0133, 1.18", "-131.778, -186.897, -41.8164, 1.55", "-132.979, -187.333, -41.1458, 0.29", "-133.865, -187.648, -40.6299, 0.22", "-134.256, -187.764, -40.4139, 0.74", "-134.578, -187.839, -40.2561, 1.03", "-135.629, -188.01, -39.8215, 0.15", "-135.961, -188.046, -39.7247, 0.37", "-136.033, -188.05, -39.7139, 0.37", "-137.181, -188.046, -39.6336, 0.22", "-137.987, -188.026, -39.6156, 1.18", "-138.56, -188.013, -39.6291, 1.55", "-139.953, -187.992, -39.7237, 0.22", "-140.615, -187.99, -39.7494, 0.22", "-141.431, -188.004, -39.7557, 0.96", "-141.717, -188.012, -39.7399, 1.33", "-143.123, -188.044, -39.5962, 0.22", "-143.703, -188.064, -39.5023, 0.22", "-144.758, -188.102, -39.2779, 0.96", "-145.035, -188.112, -39.2044, 1.25", "-146.831, -188.196, -38.6688, 0.22", "-147.548, -188.238, -38.4513, 0.22", "-148.914, -188.328, -38.0216, 1.84", "-149.196, -188.357, -37.9359, 2.36", "-151.048, -188.612, -37.4185, 0.22", "-151.541, -188.694, -37.28, 0.66", "-152.291, -188.858, -37.0921, 0.22", "-152.347, -188.872, -37.0796, 0.22", "-153.118, -189.058, -36.9753, 0.96", "-153.482, -189.143, -36.9481, 0.96", "-153.55, -189.16, -36.9499, 0.96", "-154.584, -189.408, -36.9795, 0.22", "-154.653, -189.423, -36.9814, 0.22", "-155.724, -189.668, -37.0185, 0.22", "-155.801, -189.686, -37.0216, 0.22", "-156.898, -189.983, -37.0393, 0.22", "-156.975, -190.005, -37.0392, 0.22", "-157.461, -190.153, -37.0288, 1.11", "-157.957, -190.306, -37.0169, 1.4", "-158.158, -190.369, -37.0112, 1.69", "-160.09, -190.969, -36.9509, 0.22", "-160.581, -191.116, -36.9328, 0.66", "-160.81, -191.187, -36.9239, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.22658, -32.5487, 0.146408, 2.58", "-8.75473, -33.7777, -0.288673, 2.58", "-8.41746, -35.1702, -0.815484, 1.11", "-8.18776, -36.3581, -1.24344, 0.66", "-8.02583, -37.2822, -1.57515, 0.59", "-7.76799, -38.7624, -2.12612, 1.25", "-7.65124, -39.3837, -2.36423, 1.62", "-7.32292, -41.3295, -3.09802, 1.11", "-7.10631, -42.4857, -3.5578, 1.33", "-6.87034, -43.5277, -4.01517, 1.92", "-6.55724, -44.6304, -4.53481, 1.99", "-6.17088, -45.7643, -5.12357, 1.33", "-5.74373, -46.9742, -5.78649, 0.96", "-5.25509, -48.2987, -6.53579, 0.96", "-5.23977, -48.3462, -6.56517, 0.96", "-5.0492, -49.1635, -7.11087, 0.74", "-4.94805, -50.3753, -8.08035, 0.52", "-5.02054, -51.1968, -8.85482, 0.52", "-5.03117, -51.2431, -8.90394, 0.52", "-5.22454, -51.8861, -9.62359, 0.88", "-5.47342, -52.707, -10.5227, 1.18", "-5.88776, -54.045, -11.9456, 0.59", "-6.13137, -54.8487, -12.7215, 0.59", "-6.14281, -54.8914, -12.7597, 0.59", "-6.30444, -55.6193, -13.3286, 0.59", "-6.51662, -56.8594, -14.1054, 1.55", "-6.63861, -57.783, -14.514, 2.14", "-6.71396, -58.319, -14.6858, 2.36", "-6.7246, -58.3738, -14.702, 2.36", "-6.89463, -58.956, -14.8886, 2.36", "-7.18301, -59.6096, -15.1462, 2.06", "-7.72767, -60.5417, -15.5675, 1.77", "-8.34433, -61.4928, -16.0335, 0.74", "-8.66102, -61.9483, -16.2777, 0.52", "-9.23339, -62.7095, -16.7191, 0.44", "-9.98461, -63.5759, -17.2995, 0.44", "-10.776, -64.3659, -17.9223, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "3.06297, -165.494, 19.3573, 0.88", "2.9216, -166.76, 19.204, 0.88", "2.82434, -167.967, 18.9685, 0.88", "2.79097, -168.809, 18.7826, 1.18", "2.77556, -169.354, 18.645, 1.18", "2.74273, -170.831, 18.2641, 0.52", "2.72785, -171.5, 18.0914, 0.52", "2.72882, -172.813, 17.7104, 1.99", "2.75296, -174.072, 17.2914, 3.09", "2.78166, -174.864, 17.001, 3.61", "2.81883, -175.795, 16.6542, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.06297, -165.494, 19.3573, 0.74", "3.74887, -166.431, 18.8933, 0.74", "4.49429, -167.607, 18.3888, 0.66", "4.86581, -168.193, 18.1373, 1.11", "5.10465, -168.57, 17.9756, 1.25", "6.1971, -170.293, 17.2362, 0.29", "6.66141, -171.026, 16.9219, 0.29", "7.20178, -172.005, 16.4829, 0.29", "12.1581, -179.88, 13.8914, 0.29", "18.0868, -187.453, 12.7531, 0.29", "24.591, -194.503, 11.1296, 0.29", "30.3568, -202.254, 10.716, 0.29", "35.6226, -210.32, 10.2815, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-20.6694, 129.623, -68.0653, 0.22", "-21.3977, 128.94, -69.3978, 0.22", "-21.6864, 128.708, -69.9703, 1.18", "-21.787, 128.634, -70.1567, 1.18", "-23.1584, 127.698, -72.5956, 0.22", "-23.4565, 127.502, -73.1184, 0.22", "-24.4313, 126.863, -74.8284, 0.74", "-25.7005, 126.176, -77.0303, 0.22", "-26.1085, 125.977, -77.7404, 1.03", "-26.2704, 125.901, -78.0199, 1.25", "-26.4015, 125.848, -78.2253, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-20.6694, 129.623, -68.0653, 0.52", "-20.3793, 130.768, -69.6656, 0.52", "-20.2266, 131.476, -70.6133, 0.22", "-20.0517, 132.59, -71.9232, 0.88", "-20.0298, 132.782, -72.1247, 1.03", "-19.8961, 134.481, -73.7816, 0.15", "-19.8711, 134.903, -74.1747, 0.52", "-19.8783, 135.069, -74.3025, 0.52", "-19.9681, 136.278, -75.107, 0.15", "-20.0139, 136.83, -75.4188, 0.81", "-20.0838, 137.561, -75.8045, 1.11", "-20.0917, 137.622, -75.8306, 1.11", "-20.269, 139.037, -76.4503, 0.22", "-20.3451, 139.66, -76.7452, 0.96", "-20.3925, 140.053, -76.9623, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-10.9434, 122.181, -16.6091, 0.96", "-11.4484, 123.051, -17.7904, 0.96", "-11.9563, 123.932, -18.9706, 1.03", "-12.0608, 124.138, -19.247, 1.03", "-12.4012, 124.859, -20.2001, 0.29", "-12.6218, 125.424, -20.8731, 1.25", "-12.7514, 125.816, -21.2992, 1.47", "-12.7825, 125.952, -21.4201, 1.47", "-13.0239, 127.208, -22.3316, 0.29", "-13.0423, 127.322, -22.4116, 0.29", "-13.1579, 128.287, -23.0254, 0.29", "-13.1886, 128.65, -23.2696, 0.59", "-13.2398, 129.458, -23.821, 0.44", "-13.2948, 130.482, -24.5183, 2.28", "-13.326, 131.096, -24.9301, 2.65", "-13.3406, 131.389, -25.1342, 2.65", "-13.4522, 133.301, -26.5251, 0.37", "-13.4806, 133.909, -26.9425, 0.29", "-13.482, 133.986, -26.9907, 0.29", "-13.4811, 134.424, -27.225, 0.44", "-13.4824, 134.686, -27.3345, 0.44", "-13.4959, 135.467, -27.5912, 0.15", "-13.524, 136.152, -27.7167, 0.74", "-13.5266, 136.218, -27.7309, 0.74", "-13.5526, 136.619, -27.8548, 0.74", "-13.5802, 136.953, -27.9722, 0.52", "-13.6744, 137.731, -28.2594, 0.29", "-13.8179, 138.695, -28.6197, 1.18", "-13.8963, 139.148, -28.7912, 1.69", "-14.1966, 140.756, -29.4763, 0.29", "-14.3227, 141.379, -29.7543, 0.29", "-14.5877, 142.558, -30.2888, 1.77", "-14.6709, 142.869, -30.4363, 2.73", "-14.7479, 143.113, -30.5566, 2.73", "-15.449, 145.134, -31.5721, 0.29", "-15.6737, 145.724, -31.8679, 0.29", "-15.7659, 145.937, -31.9828, 0.59", "-16.111, 146.645, -32.3887, 0.22", "-16.3764, 147.131, -32.6756, 0.74", "-16.4918, 147.299, -32.7742, 1.03", "-16.538, 147.344, -32.7996, 1.03", "-16.8397, 147.613, -32.9727, 0.81", "-16.9241, 147.694, -33.022, 0.81", "-17.7039, 148.53, -33.4486, 0.22", "-18.0639, 148.948, -33.6427, 0.59", "-18.6545, 149.649, -33.9483, 0.22", "-18.7466, 149.76, -33.9922, 0.22", "-19.1344, 150.247, -34.155, 0.22", "-19.5843, 150.841, -34.3187, 0.22", "-20.2025, 151.711, -34.5241, 1.62", "-20.6309, 152.343, -34.6622, 2.14", "-20.9982, 152.892, -34.7734, 2.14", "-21.9489, 154.27, -35.053, 0.29", "-22.2544, 154.702, -35.1405, 0.44", "-22.5958, 155.193, -35.2408, 0.22", "-23.1197, 155.979, -35.3988, 0.22", "-23.5935, 156.736, -35.5545, 1.25", "-23.7871, 157.061, -35.6254, 1.62", "-23.8862, 157.248, -35.6726, 1.84", "-24.5466, 158.657, -36.0837, 0.29", "-25.0105, 159.788, -36.4369, 0.29", "-25.2708, 160.569, -36.7154, 0.74", "-25.3629, 160.882, -36.8478, 0.74", "-25.6537, 161.968, -37.3561, 0.22", "-25.8831, 162.928, -37.8362, 1.62", "-25.8928, 162.979, -37.8621, 1.62", "-26.0103, 163.674, -38.2164, 1.99", "-26.2666, 165.348, -39.0406, 0.22", "-26.2745, 165.4, -39.0649, 0.22", "-26.408, 166.182, -39.3945, 0.22", "-26.554, 167.039, -39.7214, 0.96", "-26.6137, 167.367, -39.84, 1.25", "-26.877, 168.87, -40.2987, 0.22", "-26.8855, 168.925, -40.3128, 0.22", "-27.0128, 169.682, -40.5052, 0.74", "-27.0502, 169.886, -40.5555, 0.88", "-27.1595, 170.425, -40.6873, 0.29", "-27.38, 171.47, -40.9162, 0.22", "-27.5211, 172.147, -41.0344, 0.22", "-27.6689, 173.104, -41.1551, 1.33", "-27.7045, 173.459, -41.1831, 1.92", "-27.709, 173.516, -41.1854, 1.92", "-27.7365, 173.943, -41.1911, 1.77", "-27.7668, 174.387, -41.1926, 1.69", "-27.8676, 175.905, -41.1862, 0.22", "-27.9828, 177.158, -41.1533, 0.22", "-28.1196, 178.333, -41.1132, 1.47", "-28.1924, 178.837, -41.0932, 1.99", "-28.2545, 179.173, -41.0793, 1.92", "-28.366, 179.645, -41.0603, 1.47", "-28.8534, 181.287, -41.0061, 0.22", "-29.0781, 181.948, -40.979, 0.44", "-29.1831, 182.257, -40.9715, 0.44", "-29.4754, 183.128, -40.9628, 0.22", "-29.7954, 184.138, -40.9729, 1.18", "-29.937, 184.621, -40.9868, 2.14", "-30.0905, 185.179, -41.0204, 1.62", "-30.5568, 186.956, -41.1426, 0.22", "-30.5728, 187.021, -41.1475, 0.22", "-30.8855, 188.449, -41.2446, 0.22", "-31.132, 189.673, -41.3175, 0.22", "-31.2811, 190.475, -41.3422, 1.03", "-31.3301, 190.751, -41.343, 1.62", "-31.3803, 191.028, -41.3332, 1.11", "-31.5623, 192.356, -41.2209, 0.22", "-31.5675, 192.412, -41.2132, 0.22", "-31.6192, 193.482, -41.0259, 1.47", "-31.6284, 193.831, -40.9568, 2.06", "-31.6304, 193.906, -40.9419, 2.06", "-31.6973, 195.53, -40.6681, 0.22", "-31.7488, 196.432, -40.5415, 0.52", "-31.8511, 197.631, -40.4053, 0.22", "-31.9387, 198.427, -40.3349, 1.33", "-31.994, 198.838, -40.3139, 1.33", "-32.221, 200.235, -40.2971, 0.22", "-32.3256, 200.769, -40.3207, 0.22", "-32.4643, 201.499, -40.3766, 0.66", "-32.5171, 201.784, -40.4076, 0.66", "-32.7308, 203.131, -40.5724, 0.22", "-32.7369, 203.199, -40.5819, 0.22", "-32.7643, 204.112, -40.7166, 0.22", "-32.7551, 204.974, -40.8675, 0.96", "-32.7343, 205.45, -40.959, 1.62", "-32.7087, 205.946, -41.0574, 1.4", "-32.6725, 207.521, -41.3858, 0.22", "-32.6774, 207.93, -41.4782, 0.22", "-32.7235, 208.908, -41.711, 1.11", "-32.7347, 209.05, -41.7445, 1.33", "-32.7785, 209.453, -41.8503, 1.18", "-33.007, 211.234, -42.3244, 0.22", "-33.134, 212.062, -42.5543, 1.03", "-33.2079, 212.525, -42.6845, 1.18", "-33.262, 212.857, -42.792, 1.03", "-33.4441, 213.99, -43.2024, 0.15", "-33.587, 214.938, -43.5736, 0.15", "-33.7128, 215.827, -43.9296, 1.33", "-33.7855, 216.321, -44.1234, 1.55", "-34.0499, 218.064, -44.8228, 0.15", "-34.0602, 218.128, -44.8476, 0.15", "-34.2, 218.93, -45.1264, 0.15", "-34.3678, 219.848, -45.4325, 1.11", "-34.421, 220.165, -45.5238, 1.55", "-34.6296, 221.537, -45.8599, 0.15", "-34.7405, 222.276, -45.9898, 0.74", "-34.9129, 223.37, -46.1651, 0.15", "-34.9245, 223.435, -46.1743, 0.15", "-35.043, 224.058, -46.2513, 0.15", "-35.1858, 224.807, -46.3182, 0.96", "-35.2494, 225.15, -46.337, 0.96", "-35.5215, 226.67, -46.4344, 0.15", "-35.6273, 227.316, -46.4783, 0.44", "-35.6396, 227.392, -46.4857, 0.44", "-35.7914, 228.361, -46.6151, 0.15", "-35.9269, 229.295, -46.7624, 1.03", "-35.9793, 229.702, -46.8324, 1.33", "-36.0401, 230.34, -46.9585, 0.59", "-36.1179, 231.409, -47.1895, 0.15", "-36.1746, 232.212, -47.3697, 0.88", "-36.2047, 232.676, -47.4761, 1.03", "-36.2344, 233.16, -47.5833, 0.66", "-36.2762, 234.266, -47.8917, 0.15", "-36.3034, 235.426, -48.2566, 0.15", "-36.3099, 236.173, -48.467, 0.96", "-36.3177, 236.602, -48.5787, 1.25", "-36.325, 236.888, -48.6472, 1.25", "-36.4039, 238.674, -49.031, 0.15", "-36.44, 239.152, -49.111, 0.44", "-36.5449, 240.193, -49.2438, 0.15", "-36.5993, 240.681, -49.2808, 0.74", "-36.6563, 241.172, -49.2969, 0.74", "-36.7483, 242.098, -49.2859, 0.15", "-36.8274, 242.868, -49.2394, 0.88", "-36.8687, 243.351, -49.2262, 0.96", "-36.9501, 244.551, -49.2369, 0.15", "-36.9924, 245.186, -49.2362, 0.29", "-37.0734, 246.35, -49.2242, 0.15", "-37.1166, 246.986, -49.2107, 0.96", "-37.1468, 247.537, -49.1999, 1.18", "-37.2461, 249.417, -49.1438, 0.22", "-37.288, 250.264, -49.1122, 0.22", "-37.298, 250.476, -49.1018, 0.22", "-37.3039, 250.623, -49.0928, 0.22", "-37.3161, 251.612, -49.0762, 0.15", "-37.32, 252.44, -49.0999, 1.11", "-37.3173, 252.896, -49.1317, 1.77", "-37.3119, 253.252, -49.1664, 1.77", "-37.3114, 253.33, -49.1755, 1.77", "-37.3066, 255.419, -49.4149, 0.22", "-37.3217, 256.105, -49.49, 0.15", "-37.3231, 256.161, -49.4958, 0.15", "-37.3468, 256.822, -49.5469, 0.52", "-37.3658, 257.108, -49.5632, 0.59", "-37.5276, 258.69, -49.6165, 0.15", "-37.6226, 259.521, -49.6154, 1.03", "-37.6715, 259.959, -49.6176, 1.77", "-37.7202, 260.382, -49.623, 1.55", "-37.9729, 262.195, -49.6629, 0.15", "-38.0424, 262.628, -49.6813, 0.29", "-38.1756, 263.365, -49.7309, 0.15", "-38.3313, 264.186, -49.7935, 0.15", "-38.3593, 264.328, -49.8044, 0.15", "-38.6491, 265.78, -49.9319, 0.15", "-38.861, 266.823, -50.0283, 1.11", "-38.8749, 266.889, -50.0347, 1.11", "-39.0074, 267.471, -50.092, 1.4", "-39.1373, 268.128, -50.1661, 0.59", "-39.3191, 269.18, -50.2905, 0.22", "-39.4327, 270.01, -50.3892, 0.22", "-39.5419, 270.898, -50.4901, 1.03", "-39.5973, 271.445, -50.556, 1.55", "-39.7876, 273.86, -50.8403, 0.15", "-39.7927, 273.929, -50.848, 0.15", "-39.8355, 274.514, -50.8962, 0.44", "-39.8586, 274.871, -50.9167, 0.44", "-39.9552, 276.339, -50.977, 0.15", "-40.0158, 277.185, -51.004, 1.03", "-40.0582, 277.752, -51.0141, 1.62", "-40.2139, 279.56, -51.1406, 0.15", "-40.4433, 281.888, -51.3838, 0.15", "-40.5447, 282.832, -51.5078, 0.15", "-40.6204, 283.476, -51.6092, 1.11", "-40.7004, 284.173, -51.7424, 1.4", "-40.9358, 286.483, -52.2499, 0.15", "-41.0018, 287.158, -52.4188, 0.15", "-41.0799, 287.974, -52.6239, 0.74", "-41.1008, 288.338, -52.7005, 0.74", "-41.1023, 288.404, -52.7116, 0.74", "-41.0916, 290.253, -52.948, 0.15", "-41.0522, 291.363, -53.0254, 1.55", "-41.0116, 292.051, -53.0756, 1.92", "-40.8732, 294.079, -53.2214, 0.15", "-40.8252, 294.747, -53.2676, 0.88", "-40.8137, 294.89, -53.2775, 0.88", "-40.7665, 295.373, -53.312, 0.88", "-40.6088, 296.836, -53.4244, 0.15", "-40.5555, 297.395, -53.4584, 0.15", "-40.5037, 297.991, -53.4802, 0.74", "-40.3892, 299.37, -53.515, 0.15", "-40.3849, 299.436, -53.5151, 0.15", "-40.3689, 299.775, -53.5069, 0.37", "-40.3564, 300.557, -53.4645, 0.22", "-40.3571, 301.061, -53.4223, 0.88", "-40.3588, 301.119, -53.4161, 0.88", "-40.4346, 302.652, -53.3101, 0.15", "-40.4688, 303.303, -53.2868, 0.15", "-40.4725, 303.379, -53.2866, 0.15", "-40.5265, 304.454, -53.3209, 1.25", "-40.5401, 304.724, -53.3422, 1.25", "-40.658, 306.51, -53.5448, 0.15", "-40.6635, 306.578, -53.555, 0.15", "-40.7218, 307.228, -53.6781, 1.18", "-40.7434, 307.428, -53.7184, 1.18", "-40.9169, 308.883, -54.0821, 0.15", "-41.0886, 309.949, -54.4026, 0.15", "-41.1429, 310.212, -54.4899, 0.44", "-41.5489, 312.023, -55.124, 0.15", "-41.8651, 313.319, -55.607, 1.77", "-42.0634, 314.086, -55.9135, 1.55", "-42.4004, 315.303, -56.4327, 0.22", "-42.5518, 315.809, -56.6731, 0.37", "-42.816, 316.614, -57.0705, 0.15", "-42.8352, 316.663, -57.0953, 0.15", "-43.0651, 317.212, -57.3869, 0.74", "-43.1923, 317.513, -57.5298, 0.74", "-43.4708, 318.219, -57.8386, 0.15", "-43.6528, 318.649, -58.024, 0.66", "-43.7959, 318.969, -58.1541, 1.25", "-44.451, 320.358, -58.7185, 0.15", "-44.4837, 320.425, -58.7453, 0.15", "-44.8876, 321.271, -59.068, 0.15", "-45.2488, 322.068, -59.3457, 0.96", "-45.4117, 322.434, -59.4742, 1.55", "-46.2237, 324.342, -60.1208, 0.15", "-46.2438, 324.393, -60.1364, 0.15", "-46.59, 325.351, -60.4159, 1.18", "-46.7823, 325.933, -60.5798, 0.52", "-47.0823, 326.962, -60.8446, 0.15", "-47.2406, 327.561, -60.9803, 0.52", "-47.677, 329.312, -61.2935, 0.15", "-47.8434, 329.906, -61.3829, 0.15", "-48.1244, 330.778, -61.4901, 0.66", "-48.3176, 331.306, -61.5361, 0.96", "-48.478, 331.694, -61.5504, 0.96", "-49.1769, 333.085, -61.5103, 0.15", "-49.7149, 333.982, -61.4312, 0.52", "-49.9607, 334.364, -61.3868, 0.52", "-50.3699, 334.968, -61.3022, 0.15", "-50.8681, 335.677, -61.1918, 1.11", "-52.1205, 337.41, -60.8873, 0.15", "-52.5689, 338.018, -60.7596, 1.18", "-52.9027, 338.475, -60.6689, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.9434, 122.181, -16.6091, 0.59", "-10.8168, 123.039, -16.6312, 0.59", "-10.7364, 123.807, -16.6652, 1.18", "-10.6861, 124.549, -16.7182, 1.84", "-10.6679, 124.988, -16.753, 2.06", "-10.6626, 125.412, -16.7861, 2.06", "-10.6701, 125.952, -16.826, 1.84", "-10.7075, 126.546, -16.8676, 1.55", "-10.8161, 127.609, -16.9415, 0.37", "-10.9056, 128.289, -16.9859, 0.37", "-11.0329, 129.12, -17.0507, 0.96", "-11.1732, 129.947, -17.1195, 1.47", "-11.2487, 130.357, -17.1525, 1.69", "-11.3603, 130.965, -17.1952, 1.55", "-11.4627, 131.517, -17.2326, 1.33", "-11.5645, 132.234, -17.2806, 0.66", "-11.6434, 133.137, -17.3563, 0.37", "-11.6808, 134.167, -17.4518, 0.29", "-11.6756, 135.046, -17.5368, 0.29", "-11.6718, 135.115, -17.5434, 0.29", "-11.5147, 136.611, -17.6739, 0.29", "-11.4125, 137.328, -17.7238, 0.81", "-11.3269, 137.855, -17.761, 0.96", "-11.3173, 137.921, -17.765, 0.96", "-11.2733, 138.342, -17.787, 0.96", "-11.2115, 139.406, -17.8284, 0.29", "-11.21, 140.034, -17.8461, 0.29", "-11.2319, 140.889, -17.8572, 1.47", "-11.2688, 141.712, -17.8882, 2.06", "-11.279, 142.014, -17.9049, 2.5", "-11.2941, 142.497, -17.9377, 2.43", "-11.3056, 143.017, -17.977, 2.14", "-11.314, 143.612, -18.0259, 1.77", "-11.3232, 144.419, -18.0927, 0.66", "-11.3417, 145.644, -18.1884, 0.44", "-11.3659, 146.619, -18.255, 0.37", "-11.4025, 147.529, -18.3092, 0.37", "-11.4663, 148.442, -18.3523, 1.33", "-11.5491, 149.259, -18.3823, 1.77", "-11.6514, 150.028, -18.3978, 2.28", "-11.7351, 150.504, -18.4118, 2.65", "-11.8116, 150.913, -18.4266, 2.8", "-11.9219, 151.481, -18.4484, 2.5", "-12.0061, 151.958, -18.4656, 1.99", "-12.0706, 152.361, -18.4812, 1.77", "-12.1565, 153.019, -18.5069, 0.81", "-12.2317, 153.914, -18.5345, 0.44", "-12.2773, 154.822, -18.5603, 0.37", "-12.2817, 155.623, -18.5767, 0.74", "-12.2755, 156.029, -18.5814, 0.74", "-12.2663, 156.624, -18.5822, 0.74", "-12.2653, 157.822, -18.5851, 0.52", "-12.2661, 157.879, -18.5856, 0.44", "-12.2933, 158.782, -18.5999, 0.44", "-12.3297, 159.537, -18.6147, 0.44", "-12.4126, 160.858, -18.6444, 0.44", "-12.5509, 162.458, -18.684, 1.55", "-12.6309, 163.227, -18.7048, 2.43", "-12.6879, 163.786, -18.7184, 2.65", "-12.7377, 164.268, -18.7369, 2.87", "-12.8097, 164.97, -18.7693, 2.36", "-12.888, 165.72, -18.8219, 1.47", "-12.9405, 166.221, -18.8561, 0.96", "-13.0543, 167.211, -18.9263, 0.37", "-13.1613, 168.093, -18.987, 0.37", "-13.2949, 169.184, -19.0575, 0.29", "-13.3889, 170.027, -19.1164, 1.69", "-13.4769, 170.862, -19.2022, 2.28", "-13.5216, 171.234, -19.2513, 2.73", "-13.5718, 171.583, -19.3054, 2.8", "-13.6697, 172.215, -19.4097, 1.99", "-13.8137, 173.103, -19.579, 0.88", "-14.0184, 174.142, -19.7898, 0.29", "-14.187, 174.841, -19.9497, 0.37", "-14.3189, 175.336, -20.0613, 0.44", "-14.399, 175.602, -20.1132, 0.59", "-14.4403, 175.734, -20.1311, 0.59", "-14.5688, 176.163, -20.1566, 0.44", "-14.7331, 176.853, -20.1566, 0.37", "-14.745, 176.919, -20.1558, 0.37", "-14.8775, 177.957, -20.147, 0.52", "-14.957, 178.866, -20.1386, 0.81", "-14.9763, 179.297, -20.1386, 0.81", "-14.9789, 179.741, -20.1434, 0.66", "-14.9777, 179.798, -20.146, 0.66", "-14.9756, 180.325, -20.193, 0.44", "-14.974, 181.308, -20.3192, 0.37", "-14.9719, 182.229, -20.4515, 0.37", "-14.9714, 182.285, -20.4623, 0.37", "-14.9579, 183.188, -20.6885, 1.62", "-14.9471, 183.956, -20.9135, 2.65", "-14.9413, 184.399, -21.0577, 2.65", "-14.9259, 185.321, -21.3883, 1.92", "-14.9077, 186.439, -21.8002, 0.74", "-14.9051, 187.448, -22.1569, 0.37", "-14.9253, 188.343, -22.425, 0.37", "-14.9284, 188.398, -22.4383, 0.37", "-14.9942, 188.974, -22.5396, 0.37", "-15.0191, 189.117, -22.5527, 0.37", "-15.2056, 189.939, -22.5338, 0.37", "-15.4605, 190.932, -22.4457, 1.03", "-15.6696, 191.735, -22.3597, 1.77", "-15.7857, 192.204, -22.3116, 2.06", "-15.8972, 192.675, -22.263, 1.92", "-16.0475, 193.367, -22.2012, 1.33", "-16.1404, 193.855, -22.1689, 0.59", "-16.2778, 194.677, -22.146, 0.37", "-16.3375, 195.179, -22.1335, 0.59", "-16.3559, 195.527, -22.127, 0.66", "-16.3569, 195.739, -22.1245, 0.66", "-16.3518, 196.233, -22.1228, 0.37", "-16.3498, 196.728, -22.1228, 0.37", "-16.3726, 197.654, -22.1228, 0.37", "-16.4147, 198.557, -22.1228, 0.37", "-16.4664, 199.397, -22.1228, 0.59", "-16.5537, 200.648, -22.1228, 0.52", "-16.6116, 201.41, -22.1228, 1.33", "-16.6707, 202.13, -22.1331, 2.14", "-16.7383, 202.839, -22.1663, 2.36", "-16.787, 203.465, -22.2173, 2.58", "-16.8006, 203.987, -22.2741, 2.36", "-16.7874, 204.77, -22.3709, 1.62", "-16.7574, 205.539, -22.4742, 0.81", "-16.7058, 206.508, -22.6055, 0.52", "-16.6501, 207.543, -22.733, 0.52", "-16.6121, 208.283, -22.815, 0.44", "-16.5566, 209.668, -22.9462, 0.44", "-16.5222, 211.044, -23.0465, 1.11", "-16.5223, 211.813, -23.0768, 1.84", "-16.5495, 212.569, -23.0872, 2.36", "-16.5747, 212.838, -23.088, 2.5", "-16.67, 213.461, -23.086, 2.21", "-16.7888, 214.07, -23.0787, 1.55", "-16.9139, 214.622, -23.0669, 0.96", "-17.0377, 215.146, -23.0572, 0.66", "-17.2107, 215.97, -23.047, 0.37", "-17.3351, 216.708, -23.0356, 0.66", "-17.412, 217.274, -23.0239, 0.88", "-17.4991, 218.183, -23.0019, 0.37", "-17.5316, 218.745, -22.9872, 0.37", "-17.5544, 219.658, -22.9589, 0.37", "-17.5362, 220.781, -22.9243, 1.11", "-17.533, 220.838, -22.9227, 1.11", "-17.4531, 221.615, -22.9163, 1.99", "-17.3727, 222.191, -22.9225, 2.21", "-17.3068, 222.604, -22.9345, 2.36", "-17.1533, 223.563, -22.9726, 1.33", "-17.0475, 224.228, -23.0042, 0.52", "-16.9101, 225.223, -23.0542, 0.29", "-16.8632, 225.638, -23.0744, 0.59", "-16.8315, 225.987, -23.0899, 0.59", "-16.7797, 226.682, -23.1159, 0.44", "-16.743, 227.318, -23.1339, 0.37", "-16.7065, 228.02, -23.145, 0.37", "-16.6665, 228.808, -23.1576, 1.18", "-16.6257, 229.386, -23.1759, 1.77", "-16.5682, 230.012, -23.203, 2.06", "-16.508, 230.573, -23.2331, 1.92", "-16.4452, 231.121, -23.2675, 1.55", "-16.3695, 231.977, -23.3235, 0.37", "-16.3133, 232.911, -23.3866, 0.37", "-16.3126, 232.98, -23.3925, 0.37", "-16.3377, 233.68, -23.4594, 0.37", "-16.3423, 233.748, -23.4661, 0.37", "-16.4476, 235.064, -23.5867, 0.37", "-16.4545, 235.133, -23.5921, 0.37", "-16.5897, 236.359, -23.7025, 1.18", "-16.6738, 237.117, -23.7729, 1.62", "-16.7132, 237.532, -23.8113, 1.84", "-16.759, 238.241, -23.8713, 1.55", "-16.7734, 238.935, -23.936, 1.11", "-16.7741, 239.62, -23.9988, 0.52", "-16.7525, 240.661, -24.0887, 0.44", "-16.7253, 241.468, -24.1636, 0.37", "-16.6818, 242.49, -24.2584, 0.37", "-16.6036, 243.853, -24.3933, 1.33", "-16.5767, 244.266, -24.4333, 1.84", "-16.5669, 244.413, -24.4461, 1.84", "-16.5378, 244.829, -24.482, 1.84", "-16.4952, 245.757, -24.5517, 1.25", "-16.4781, 246.313, -24.5959, 0.74", "-16.4669, 247.219, -24.662, 0.37", "-16.4595, 247.877, -24.7132, 0.44", "-16.4531, 248.6, -24.7794, 0.44", "-16.4498, 249.638, -24.8835, 0.44", "-16.454, 250.5, -24.976, 1.03", "-16.4674, 251.271, -25.058, 1.18", "-16.4784, 251.928, -25.1414, 0.74", "-16.4914, 252.415, -25.2077, 0.74", "-16.5192, 253.172, -25.3116, 0.59", "-16.5223, 253.241, -25.3204, 0.59", "-16.5517, 253.799, -25.3767, 0.59", "-16.605, 254.907, -25.5035, 1.47", "-16.6312, 255.6, -25.5811, 2.21", "-16.6462, 256.158, -25.6398, 2.5", "-16.6469, 256.64, -25.69, 2.65", "-16.6206, 257.558, -25.7754, 1.55", "-16.5603, 258.491, -25.8496, 0.74", "-16.4551, 259.577, -25.9333, 0.52", "-16.4458, 259.653, -25.9405, 0.52", "-16.3148, 260.534, -26.0346, 0.52", "-16.1113, 261.704, -26.1759, 1.33", "-15.9534, 262.525, -26.2812, 1.4", "-15.7764, 263.393, -26.3945, 1.18", "-15.6497, 264.064, -26.4961, 0.52", "-15.629, 264.197, -26.5189, 0.52", "-15.5313, 264.981, -26.6666, 0.52", "-15.4685, 265.629, -26.7922, 0.52", "-15.3826, 266.807, -27.0073, 0.74", "-15.3292, 267.844, -27.1681, 0.96", "-15.2894, 268.928, -27.3245, 1.99", "-15.2796, 269.286, -27.3723, 2.58", "-15.2622, 269.789, -27.4304, 2.36", "-15.2341, 270.357, -27.4879, 2.14", "-15.1713, 271.188, -27.554, 1.03", "-15.071, 272.079, -27.6139, 0.52", "-14.9363, 273.099, -27.682, 0.52", "-14.7954, 274.172, -27.744, 0.52", "-14.7222, 274.747, -27.7723, 0.88", "-14.6533, 275.299, -27.7943, 0.52", "-14.5481, 276.2, -27.8197, 0.52", "-14.4775, 276.923, -27.8278, 0.52", "-14.3988, 278.089, -27.8353, 1.4", "-14.3714, 278.734, -27.8377, 1.77", "-14.3605, 279.164, -27.8365, 1.92", "-14.3534, 279.58, -27.8328, 1.62", "-14.3452, 280.292, -27.822, 1.11", "-14.3331, 281.138, -27.8111, 0.74", "-14.3133, 282.369, -27.8113, 0.59", "-14.2971, 283.844, -27.8108, 0.59", "-14.2881, 285.0, -27.8099, 0.44", "-14.2828, 285.492, -27.8093, 0.66", "-14.2819, 285.561, -27.8092, 0.66", "-14.2637, 286.682, -27.8062, 1.33", "-14.2497, 287.591, -27.8027, 2.21", "-14.2356, 288.294, -27.7878, 2.73", "-14.2336, 288.955, -27.7688, 2.87", "-14.2352, 289.261, -27.7625, 3.09", "-14.25, 289.907, -27.7577, 2.36", "-14.2835, 290.676, -27.7606, 1.25", "-14.3205, 291.228, -27.7707, 0.66", "-14.4276, 292.351, -27.8215, 0.37", "-14.5349, 293.208, -27.8779, 0.66", "-14.6197, 293.839, -27.9289, 0.52", "-14.6651, 294.188, -27.9623, 0.66", "-14.7449, 294.878, -28.0363, 0.74", "-14.818, 295.669, -28.1419, 0.81", "-14.8689, 296.502, -28.2736, 1.25", "-14.8821, 297.03, -28.3643, 1.69", "-14.8777, 297.421, -28.4368, 1.69", "-14.8466, 298.187, -28.5834, 1.4", "-14.7932, 299.025, -28.7481, 1.11", "-14.7339, 299.706, -28.8713, 0.74", "-14.644, 300.718, -29.0444, 0.59", "-14.6382, 300.794, -29.0566, 0.59", "-14.5934, 301.565, -29.1655, 0.59", "-14.59, 301.632, -29.1727, 0.59", "-14.5493, 302.954, -29.252, 0.59", "-14.5496, 303.788, -29.2755, 1.11", "-14.5524, 303.855, -29.2774, 1.11", "-14.5937, 304.472, -29.2942, 1.77", "-14.6456, 305.05, -29.313, 2.06", "-14.6966, 305.532, -29.3333, 2.06", "-14.7778, 306.154, -29.3631, 1.77", "-14.8321, 306.581, -29.3832, 1.4", "-14.8898, 307.072, -29.4063, 0.81", "-15.0206, 308.184, -29.4627, 0.59", "-15.1453, 309.307, -29.521, 0.59", "-15.2108, 309.999, -29.5651, 0.96", "-15.2577, 310.482, -29.5984, 0.96", "-15.2724, 310.631, -29.6086, 0.96", "-15.3094, 311.008, -29.6364, 0.81", "-15.37, 311.666, -29.6847, 0.81", "-15.4562, 312.734, -29.7625, 0.37", "-15.5309, 313.781, -29.8392, 0.37", "-15.5899, 314.758, -29.8899, 0.37", "-15.6256, 315.44, -29.9119, 1.25", "-15.6474, 316.143, -29.9119, 1.77", "-15.6576, 316.723, -29.8918, 2.28", "-15.6506, 317.275, -29.8516, 2.58", "-15.6225, 317.973, -29.7886, 2.36", "-15.5965, 318.589, -29.7256, 1.92", "-15.5641, 319.349, -29.6465, 0.96", "-15.5343, 320.058, -29.5797, 0.37", "-15.5026, 321.066, -29.5016, 0.37", "-15.4899, 321.777, -29.4713, 0.74", "-15.4896, 322.196, -29.4699, 0.74", "-15.4987, 322.804, -29.4815, 0.74", "-15.5184, 323.434, -29.5258, 0.37", "-15.5452, 324.125, -29.6134, 0.29", "-15.5691, 324.656, -29.7101, 0.29", "-15.572, 324.722, -29.7249, 0.29", "-15.621, 326.021, -30.0713, 0.29", "-15.6327, 326.693, -30.2759, 0.74", "-15.6284, 327.717, -30.5996, 1.84", "-15.6213, 328.097, -30.7154, 2.28", "-15.6204, 328.152, -30.7302, 2.28", "-15.6121, 328.764, -30.8776, 2.06", "-15.6049, 329.606, -31.0509, 1.25", "-15.6123, 330.589, -31.1914, 0.15", "-15.6204, 331.15, -31.2435, 0.15", "-15.6416, 331.999, -31.2959, 0.74", "-15.6538, 332.342, -31.3081, 1.03", "-15.6743, 332.769, -31.3128, 1.03", "-15.7039, 333.245, -31.3128, 0.74", "-15.7424, 333.915, -31.3445, 0.22", "-15.7815, 334.745, -31.4104, 0.22", "-15.8314, 336.145, -31.547, 0.88", "-15.8478, 336.704, -31.604, 1.47", "-15.8593, 337.185, -31.6577, 1.69", "-15.8767, 338.228, -31.7793, 1.03", "-15.8927, 339.289, -31.9054, 0.37", "-15.8923, 340.705, -32.0702, 0.37", "-15.8711, 341.961, -32.2214, 0.29", "-15.8428, 343.249, -32.3647, 1.4", "-15.8324, 343.753, -32.4131, 1.84", "-15.8231, 344.313, -32.4533, 1.69", "-15.8103, 345.081, -32.5148, 0.81", "-15.7894, 346.369, -32.6211, 0.29", "-15.7679, 347.544, -32.7146, 0.29", "-15.7551, 348.163, -32.7547, 0.96", "-15.7443, 348.733, -32.7864, 1.33", "-15.7314, 349.267, -32.8083, 1.33", "-15.7174, 349.74, -32.826, 1.03", "-15.7145, 349.8, -32.8276, 1.03", "-15.6372, 350.883, -32.8665, 0.29", "-15.5561, 351.868, -32.9067, 0.29", "-15.4584, 353.102, -32.9829, 0.88", "-15.3994, 354.002, -33.0492, 1.69", "-15.3723, 354.515, -33.0896, 2.36", "-15.3642, 354.799, -33.1123, 2.58", "-15.3587, 355.523, -33.1728, 2.06", "-15.3623, 356.978, -33.2848, 0.37", "-15.3766, 357.943, -33.3507, 0.37", "-15.4037, 358.998, -33.4063, 0.37", "-15.4257, 359.829, -33.4438, 0.37", "-15.427, 359.898, -33.4462, 0.37", "-15.4281, 361.505, -33.4793, 0.37", "-15.426, 361.575, -33.4814, 0.37", "-15.3689, 362.479, -33.5303, 0.37", "-15.3091, 363.192, -33.5825, 0.96", "-15.2328, 364.003, -33.6517, 1.25", "-15.152, 364.828, -33.7282, 0.88", "-15.0108, 366.164, -33.8651, 0.29", "-14.999, 366.266, -33.8754, 0.29", "-14.891, 367.1, -33.9804, 0.88", "-14.7917, 367.867, -34.0819, 1.62", "-14.7333, 368.326, -34.1404, 1.99", "-14.6715, 368.792, -34.1923, 1.99", "-14.6059, 369.218, -34.2276, 1.69", "-14.4461, 370.138, -34.3237, 0.59", "-14.2225, 371.289, -34.4559, 0.29", "-14.0894, 371.988, -34.5506, 0.81", "-13.9775, 372.599, -34.6376, 0.81", "-13.8293, 373.454, -34.7606, 0.29", "-13.684, 374.369, -34.8868, 0.29", "-13.4829, 375.755, -35.1089, 0.29", "-13.3093, 377.126, -35.3736, 1.25", "-13.2503, 377.646, -35.48, 1.69", "-13.2069, 378.061, -35.5662, 1.92", "-13.1356, 378.799, -35.716, 1.47", "-12.9971, 380.092, -35.9564, 0.29", "-12.8957, 380.863, -36.1004, 0.29", "-12.7282, 381.89, -36.2763, 0.88", "-12.6364, 382.383, -36.3553, 1.18", "-12.5323, 382.874, -36.4261, 0.96", "-12.3711, 383.561, -36.5044, 0.44", "-12.1629, 384.45, -36.555, 0.29", "-12.1417, 384.546, -36.564, 0.29", "-12.0044, 385.35, -36.6637, 0.29", "-11.9962, 385.418, -36.6728, 0.29", "-11.9505, 385.908, -36.7449, 0.81", "-11.9209, 386.32, -36.8057, 0.81", "-11.8594, 387.061, -36.9108, 0.66", "-11.7545, 388.102, -37.0545, 0.29", "-11.6444, 388.955, -37.1624, 0.29", "-11.5221, 389.793, -37.2702, 1.11", "-11.4112, 390.535, -37.3606, 1.69", "-11.3422, 391.056, -37.4218, 1.92", "-11.2908, 391.514, -37.4696, 1.92", "-11.193, 392.67, -37.5962, 0.74", "-11.1441, 393.584, -37.6948, 0.37", "-11.1203, 394.616, -37.798, 0.37", "-11.1212, 395.825, -37.9233, 0.29", "-11.1341, 396.533, -38.0014, 0.29", "-11.1461, 397.159, -38.0762, 0.88", "-11.1512, 397.565, -38.1254, 0.88", "-11.1412, 398.079, -38.1795, 0.52", "-11.1083, 398.674, -38.2431, 0.29", "-11.0603, 399.302, -38.3061, 0.29", "-11.0084, 400.126, -38.3863, 0.29", "-10.9748, 400.904, -38.4547, 1.55", "-10.9367, 401.823, -38.522, 2.58", "-10.918, 402.262, -38.5447, 2.65", "-10.8772, 402.958, -38.5647, 2.21", "-10.8053, 403.864, -38.5878, 1.11", "-10.7251, 404.692, -38.6118, 0.52", "-10.614, 405.696, -38.648, 0.52", "-10.4759, 406.717, -38.6907, 0.74", "-10.3235, 407.682, -38.7348, 0.88", "-10.1414, 408.614, -38.7811, 1.33", "-10.1277, 408.669, -38.785, 1.33", "-9.97201, 409.201, -38.832, 1.62", "-9.85088, 409.572, -38.8691, 1.62", "-9.82406, 409.644, -38.8762, 1.62", "-9.75528, 409.822, -38.8906, 1.62", "-9.33635, 410.875, -38.9535, 0.52", "-9.02211, 411.684, -38.9982, 0.29", "-8.73895, 412.412, -39.0392, 0.29", "-8.47484, 413.152, -39.0421, 0.96", "-8.32162, 413.645, -39.0125, 1.4", "-8.30617, 413.71, -39.0049, 1.4", "-8.24118, 414.128, -38.9348, 1.4", "-8.23337, 414.208, -38.9181, 1.4", "-8.17496, 415.233, -38.686, 1.03", "-8.14236, 416.169, -38.4727, 0.44", "-8.10285, 417.341, -38.2187, 0.29", "-8.07841, 418.166, -38.0253, 0.29", "-8.04924, 419.187, -37.7891, 1.33", "-8.03583, 419.726, -37.6694, 1.84", "-8.02505, 420.278, -37.5597, 1.84", "-8.01622, 420.899, -37.4385, 1.25", "-8.01259, 422.068, -37.2223, 0.37", "-8.03204, 423.36, -37.0264, 0.29", "-8.0346, 423.426, -37.0181, 0.29", "-8.07761, 424.19, -36.9291, 0.44", "-8.14739, 425.168, -36.8288, 0.52", "-8.23469, 426.128, -36.7494, 0.44", "-8.35671, 427.378, -36.6995, 0.44", "-8.49578, 428.731, -36.6587, 1.11", "-8.57261, 429.502, -36.6422, 1.69", "-8.62076, 430.005, -36.6365, 1.84", "-8.66562, 430.545, -36.6368, 1.84", "-8.74178, 431.592, -36.6509, 0.66", "-8.81238, 432.704, -36.6838, 0.37", "-8.81983, 432.84, -36.6901, 0.37", "-8.88593, 434.172, -36.7466, 0.37", "-8.91847, 435.235, -36.783, 0.96", "-8.91814, 435.373, -36.7873, 0.96", "-8.89051, 436.079, -36.8043, 1.55", "-8.83005, 436.713, -36.8272, 1.84", "-8.82119, 436.779, -36.8302, 1.84", "-8.72797, 437.36, -36.8607, 1.69", "-8.58908, 438.194, -36.9074, 0.74", "-8.44976, 439.084, -36.926, 0.29", "-8.31267, 440.078, -36.9174, 0.29", "-8.30567, 440.146, -36.9151, 0.29", "-8.23816, 441.12, -36.8611, 0.29", "-8.23642, 441.187, -36.8556, 0.29", "-8.24015, 442.168, -36.7409, 0.81", "-8.25862, 442.782, -36.6602, 1.47", "-8.28178, 443.272, -36.5993, 1.77", "-8.28784, 443.38, -36.5899, 1.77", "-8.31428, 443.931, -36.5613, 1.55", "-8.3209, 444.067, -36.5583, 1.55", "-8.35351, 444.712, -36.5663, 0.96", "-8.37101, 445.425, -36.5752, 0.59", "-8.38051, 446.743, -36.5659, 0.29", "-8.37697, 447.615, -36.5483, 0.29", "-8.376, 447.684, -36.5462, 0.29", "-8.35044, 448.738, -36.5043, 0.59", "-8.32433, 449.434, -36.4692, 0.81", "-8.26911, 450.327, -36.4184, 1.25", "-8.23121, 450.764, -36.3918, 1.62", "-8.2045, 451.11, -36.3745, 1.69", "-8.19228, 451.259, -36.3694, 1.69", "-8.15326, 451.764, -36.36, 1.25", "-8.10155, 452.581, -36.3439, 0.66", "-8.05063, 453.425, -36.3304, 0.66", "-7.99254, 454.411, -36.3077, 0.66", "-7.9263, 455.604, -36.2743, 0.37", "-7.89041, 456.449, -36.2476, 0.37", "-7.8478, 457.464, -36.2122, 1.62", "-7.81949, 458.025, -36.1915, 2.06", "-7.79502, 458.405, -36.1779, 2.06", "-7.73627, 459.248, -36.1503, 1.47", "-7.67414, 460.079, -36.1278, 0.81", "-7.58631, 461.013, -36.1154, 0.37", "-7.46054, 462.13, -36.122, 0.88", "-7.45151, 462.197, -36.1226, 0.88", "-7.37917, 462.675, -36.1281, 0.88", "-7.36908, 462.734, -36.129, 0.88", "-7.27686, 463.319, -36.1441, 1.11", "-7.25343, 463.486, -36.1509, 1.11", "-7.21352, 463.823, -36.1451, 1.11", "-7.20556, 463.892, -36.1418, 1.11", "-7.14093, 464.448, -36.1011, 0.81", "-7.0476, 465.289, -36.0252, 0.66", "-6.96062, 466.073, -35.9444, 0.44", "-6.83638, 467.15, -35.8283, 0.29", "-6.8233, 467.255, -35.8168, 0.29", "-6.73999, 467.811, -35.755, 0.29", "-6.72245, 467.911, -35.7444, 0.29", "-6.59755, 468.718, -35.6852, 0.81", "-6.58676, 468.805, -35.682, 0.81", "-6.52879, 469.336, -35.6599, 0.81", "-6.50939, 469.541, -35.6468, 0.81", "-6.40808, 470.609, -35.5644, 0.59", "-6.29428, 471.922, -35.453, 0.88", "-6.2846, 472.058, -35.4414, 0.88", "-6.21632, 473.237, -35.2945, 1.62", "-6.19466, 473.746, -35.2181, 1.77", "-6.1649, 474.527, -35.0893, 1.4", "-6.13839, 475.295, -34.9517, 0.88", "-6.10204, 476.614, -34.7118, 0.52", "-6.09143, 477.744, -34.5264, 0.74", "-6.109, 478.444, -34.4317, 1.33", "-6.15615, 479.18, -34.3324, 1.84", "-6.18948, 479.582, -34.2823, 1.99", "-6.236, 480.148, -34.2224, 1.99", "-6.29114, 480.891, -34.1627, 1.18", "-6.35723, 481.879, -34.1142, 0.52", "-6.43699, 483.356, -34.0391, 0.44", "-6.48785, 484.464, -33.9836, 1.03", "-6.50943, 485.32, -33.9442, 1.25", "-6.4971, 485.91, -33.9219, 1.55", "-6.49302, 485.979, -33.9198, 1.55", "-6.43595, 486.638, -33.9092, 1.55", "-6.36105, 487.476, -33.9092, 1.25", "-6.29698, 488.396, -33.9092, 0.74", "-6.19435, 490.108, -33.9092, 0.29", "-6.191, 490.175, -33.9092, 0.29", "-6.12453, 491.722, -33.9092, 0.29", "-6.09166, 492.986, -33.9092, 0.29", "-6.08701, 494.177, -33.9092, 1.47", "-6.10165, 494.913, -33.9092, 2.06", "-6.12656, 495.398, -33.9092, 2.36", "-6.17538, 496.252, -33.9092, 2.06", "-6.26482, 497.701, -33.9092, 0.81", "-6.36167, 499.03, -33.8794, 0.81", "-6.43007, 499.883, -33.8436, 0.52", "-6.51535, 500.915, -33.7822, 0.81", "-6.59164, 501.907, -33.7063, 1.03", "-6.59591, 501.974, -33.6997, 1.03", "-6.6223, 502.875, -33.5929, 1.03", "-6.62024, 503.041, -33.5666, 1.03", "-6.58182, 503.965, -33.4101, 0.88", "-6.57349, 504.071, -33.3923, 0.88", "-6.4789, 505.047, -33.243, 0.74", "-6.34814, 506.134, -33.1045, 0.37", "-6.15413, 507.526, -32.9697, 1.18", "-6.02901, 508.461, -32.8886, 1.92", "-5.9605, 509.02, -32.8467, 1.92", "-5.88799, 509.667, -32.806, 1.62", "-5.78832, 510.687, -32.759, 0.96", "-5.70392, 511.681, -32.7318, 0.74", "-5.61904, 512.875, -32.7388, 0.74", "-5.56911, 513.93, -32.7503, 0.74", "-5.56456, 514.066, -32.7523, 0.74", "-5.54459, 515.103, -32.7706, 0.74", "-5.54303, 515.264, -32.7753, 0.74", "-5.52689, 516.412, -32.8189, 0.74", "-5.50187, 517.679, -32.8752, 0.96", "-5.49422, 517.965, -32.889, 0.96", "-5.45934, 519.154, -32.9431, 0.96", "-5.44111, 519.89, -32.9726, 1.47", "-5.43772, 520.103, -32.9794, 1.47", "-5.42936, 521.11, -33.0006, 1.69", "-5.42944, 521.205, -33.002, 1.69", "-5.43034, 521.844, -33.0224, 1.69", "-5.40543, 522.965, -33.0671, 1.11", "-5.38497, 523.469, -33.0974, 1.03", "-5.36087, 523.949, -33.1333, 1.03", "-5.29994, 525.058, -33.227, 0.59", "-5.20628, 526.634, -33.3667, 0.44", "-5.09486, 528.323, -33.5271, 0.44", "-5.01011, 529.352, -33.6252, 1.11", "-4.90993, 530.313, -33.7252, 1.69", "-4.81436, 531.007, -33.7968, 1.99", "-4.69607, 531.73, -33.8694, 1.62", "-4.68364, 531.798, -33.8753, 1.62", "-4.47793, 532.866, -33.9575, 0.88", "-4.20184, 534.292, -34.0657, 0.74", "-3.85089, 536.076, -34.2161, 0.74", "-3.83796, 536.142, -34.2218, 0.74", "-3.62267, 537.25, -34.323, 0.74", "-3.35292, 538.652, -34.4059, 0.88", "-3.08879, 540.123, -34.4448, 0.66", "-3.07587, 540.201, -34.444, 0.66", "-2.87439, 541.49, -34.4051, 0.66", "-2.71888, 542.506, -34.357, 0.66", "-2.53551, 543.906, -34.2579, 1.25", "-2.47644, 544.533, -34.1975, 1.99", "-2.45766, 544.948, -34.1494, 1.99", "-2.4575, 545.658, -34.077, 1.55", "-2.4661, 545.801, -34.0644, 1.55", "-2.56026, 546.697, -34.0104, 1.33", "-2.67145, 547.669, -34.0181, 1.18", "-2.74135, 548.512, -34.0343, 0.96", "-2.7663, 549.224, -34.0257, 0.96", "-2.76282, 549.369, -34.0206, 0.96", "-2.70654, 550.196, -33.9791, 0.66", "-2.58589, 551.176, -33.9165, 0.52", "-2.44655, 552.056, -33.8511, 0.52", "-2.21528, 553.332, -33.7452, 0.81", "-1.99627, 554.396, -33.6517, 1.33", "-1.96439, 554.538, -33.6377, 1.33", "-1.76743, 555.343, -33.5728, 1.77", "-1.64185, 555.843, -33.5428, 2.28", "-1.62609, 555.908, -33.545, 2.28", "-1.50407, 556.548, -33.642, 2.28", "-1.43698, 556.964, -33.7201, 2.28", "-1.31472, 557.833, -33.8928, 1.92", "-1.30652, 557.898, -33.9066, 1.92", "-1.14756, 559.296, -34.2017, 0.81", "-1.00577, 560.705, -34.4019, 0.81", "-0.99306, 560.851, -34.4153, 0.81", "-0.928942, 561.707, -34.446, 0.66", "-0.923921, 561.785, -34.4431, 0.66", "-0.87553, 562.799, -34.3603, 0.66", "-0.836058, 564.134, -34.1541, 0.66", "-0.835419, 564.266, -34.1287, 0.66", "-0.860501, 565.03, -33.9493, 1.18", "-0.869705, 565.153, -33.9184, 1.18", "-0.93154, 565.841, -33.764, 1.4", "-0.95285, 566.042, -33.7265, 1.4", "-1.00802, 566.541, -33.6556, 1.4", "-1.10708, 567.525, -33.5202, 1.11", "-1.23819, 569.099, -33.3224, 0.88", "-1.32715, 570.298, -33.197, 1.03", "-1.40097, 571.481, -33.1013, 1.33", "-1.40857, 571.615, -33.0939, 1.33", "-1.43431, 572.055, -33.0736, 1.33", "-1.51683, 573.345, -33.0414, 0.88", "-1.56343, 574.04, -33.0144, 0.88", "-1.63343, 575.167, -32.9541, 0.74", "-1.66877, 575.996, -32.9004, 0.74", "-1.69166, 576.903, -32.8366, 1.33", "-1.6924, 576.979, -32.8309, 1.33", "-1.68557, 577.77, -32.8026, 1.92", "-1.67659, 578.387, -32.8092, 2.21", "-1.68248, 578.851, -32.8507, 2.21", "-1.72075, 579.569, -32.9594, 1.77", "-1.78976, 580.464, -33.1311, 1.18", "-1.88305, 581.407, -33.32, 0.81", "-2.05145, 582.829, -33.621, 0.74", "-2.24021, 584.385, -33.9417, 0.66", "-2.3846, 585.714, -34.1917, 0.66", "-2.39094, 585.782, -34.2033, 0.66", "-2.44317, 586.762, -34.3384, 0.66", "-2.4412, 586.873, -34.3474, 0.66", "-2.31528, 588.308, -34.4266, 0.66", "-2.12357, 589.591, -34.4519, 0.66", "-2.10543, 589.688, -34.4523, 0.66", "-1.87127, 590.886, -34.4557, 0.66", "-1.49389, 592.68, -34.4557, 0.66", "-1.47172, 592.781, -34.4557, 0.66", "-1.35167, 593.301, -34.4557, 1.25", "-1.33423, 593.376, -34.4557, 1.25", "-1.08254, 594.507, -34.4557, 1.25", "-1.06221, 594.608, -34.4557, 1.25", "-0.864105, 595.59, -34.4379, 1.25", "-0.69771, 596.431, -34.4077, 0.96", "-0.538353, 597.268, -34.3539, 0.96", "-0.528013, 597.327, -34.3491, 0.96", "-0.392568, 598.18, -34.2682, 1.11", "-0.181013, 599.643, -34.1173, 0.52", "-0.0494398, 600.607, -34.0141, 1.18", "0.101927, 601.635, -33.9093, 1.92", "0.208805, 602.323, -33.8576, 2.43", "0.311076, 602.943, -33.8262, 2.43", "0.439163, 603.691, -33.8059, 2.43", "0.657313, 604.945, -33.809, 1.25", "0.886368, 606.144, -33.8495, 0.59", "1.1333, 607.425, -33.9676, 0.74", "1.29084, 608.232, -34.0759, 1.03", "1.32483, 608.428, -34.1113, 1.03", "1.39799, 608.956, -34.2318, 1.03", "1.47002, 609.693, -34.4283, 0.59", "1.52486, 610.8, -34.7431, 0.59", "1.52734, 610.91, -34.7724, 0.59", "1.57886, 611.939, -35.0285, 0.59", "1.61208, 612.227, -35.0825, 1.03", "1.73339, 612.962, -35.1804, 0.66", "1.83231, 613.437, -35.2165, 0.66", "2.03689, 614.281, -35.2089, 0.66", "2.31815, 615.438, -35.1562, 0.59", "2.6456, 616.805, -35.0589, 1.03", "2.76402, 617.317, -35.0155, 1.84", "2.87005, 617.811, -34.9694, 1.84", "3.1176, 619.111, -34.8448, 1.18", "3.28491, 620.15, -34.7437, 0.66", "3.38847, 621.139, -34.6522, 0.66", "3.39808, 621.311, -34.6407, 0.66", "3.43749, 622.686, -34.5754, 0.66", "3.44202, 623.76, -34.5479, 1.18", "3.42695, 624.496, -34.5495, 1.18", "3.38802, 625.675, -34.5532, 0.66", "3.34271, 626.643, -34.5575, 0.66", "3.28322, 627.559, -34.5635, 1.25", "3.21514, 628.311, -34.5669, 1.99", "3.156, 628.87, -34.5669, 2.21", "3.01202, 630.089, -34.5669, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 25
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.776, -64.3659, -17.9223, 0.44", "-11.3059, -64.7567, -17.8765, 0.44", "-11.3532, -64.7926, -17.8717, 0.44", "-12.0513, -65.3487, -17.7911, 1.03", "-12.7229, -65.8709, -17.7151, 1.18", "-13.1957, -66.2314, -17.664, 0.59", "-13.2424, -66.2668, -17.6592, 0.59", "-13.6926, -66.6299, -17.6162, 0.22", "-14.1421, -66.9837, -17.5686, 0.22", "-14.6012, -67.3295, -17.5164, 0.59", "-14.9086, -67.5648, -17.4781, 0.59", "-14.9778, -67.6246, -17.4654, 0.59", "-15.4531, -68.0729, -17.3616, 0.22", "-15.8217, -68.4574, -17.2717, 1.18", "-16.1743, -68.9042, -17.1764, 1.25", "-16.2078, -68.9543, -17.1664, 1.25", "-16.7716, -69.9123, -16.9385, 0.22", "-16.9297, -70.2091, -16.8651, 0.37", "-17.0192, -70.4141, -16.8064, 0.37", "-17.445, -71.5585, -16.4367, 0.22", "-17.5751, -71.9529, -16.3009, 0.22", "-17.8519, -72.839, -15.9834, 1.47", "-18.0473, -73.5492, -15.7533, 2.21", "-18.2304, -74.2706, -15.5316, 2.21", "-18.2441, -74.3236, -15.5143, 2.21", "-18.4541, -75.3374, -15.1861, 0.74", "-18.4629, -75.3917, -15.17, 0.74", "-18.6057, -76.4966, -14.8975, 0.22", "-18.6333, -76.733, -14.8425, 0.59", "-18.7818, -77.8808, -14.6041, 0.22", "-18.8697, -78.6161, -14.4544, 0.22", "-18.9354, -79.2727, -14.3136, 0.22", "-18.9948, -79.8296, -14.1934, 0.52", "-19.0238, -80.0831, -14.143, 0.52", "-19.1423, -81.1401, -13.97, 0.22", "-19.2061, -81.817, -13.8863, 0.22", "-19.296, -82.7848, -13.7755, 1.55", "-19.3228, -83.3395, -13.7094, 1.69", "-19.3086, -84.86, -13.4856, 0.22", "-19.2521, -85.6326, -13.3515, 0.22", "-19.1705, -86.1579, -13.2475, 0.52", "-19.0388, -86.6974, -13.1482, 0.52", "-18.7705, -87.5229, -13.0205, 0.22", "-18.5236, -88.1714, -12.933, 1.4", "-18.2897, -88.7119, -12.8727, 1.69", "-18.1043, -89.1467, -12.8298, 1.77", "-17.5217, -90.583, -12.7005, 0.15", "-17.1395, -91.5675, -12.6302, 0.22", "-16.8987, -92.2252, -12.6045, 0.74", "-16.7117, -92.7994, -12.5912, 0.74", "-16.5048, -93.5209, -12.5678, 0.22", "-16.456, -93.7248, -12.5548, 0.59", "-16.3875, -94.0763, -12.5142, 0.59", "-16.3742, -94.142, -12.508, 0.59", "-16.1648, -95.1686, -12.4198, 0.22", "-16.0485, -95.7882, -12.3924, 0.74", "-15.9023, -96.4803, -12.3834, 0.96", "-15.7944, -96.9558, -12.3807, 0.66", "-15.4229, -98.4809, -12.3964, 0.29", "-15.2015, -99.3242, -12.413, 0.22", "-14.9442, -100.23, -12.4362, 0.22", "-14.6306, -101.353, -12.474, 1.55", "-14.5365, -101.689, -12.4895, 1.92", "-14.3022, -102.531, -12.539, 0.96", "-14.1728, -103.014, -12.5822, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.776, -64.3659, -17.9223, 2.43", "-11.082, -65.8372, -18.7247, 2.43", "-11.3652, -67.2106, -19.3676, 0.96", "-11.5938, -68.2546, -19.7848, 0.52", "-11.8069, -69.2159, -20.133, 0.52", "-12.0697, -70.4197, -20.542, 0.52", "-12.3186, -71.596, -20.9235, 0.52", "-12.5337, -72.6712, -21.1824, 0.52", "-12.7532, -73.7951, -21.3955, 0.52", "-12.9595, -74.9157, -21.5841, 2.58", "-13.1891, -76.2604, -21.8397, 3.68", "-13.2494, -76.597, -21.9127, 3.68", "-13.4161, -77.4079, -22.103, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "2.81883, -175.795, 16.6542, 0.59", "2.43872, -177.635, 16.352, 0.59", "2.22425, -178.517, 16.223, 0.37", "1.94566, -179.389, 16.1273, 0.37", "1.69208, -179.974, 16.0831, 0.74", "1.36162, -180.618, 16.0489, 0.74", "1.05767, -181.136, 16.0331, 0.96", "1.01708, -181.19, 16.0382, 0.96", "0.52012, -181.767, 16.1025, 1.25", "-0.012179, -182.384, 16.233, 0.81", "-0.0497908, -182.439, 16.2473, 0.81", "-0.479356, -183.206, 16.4633, 0.59", "-0.901355, -184.143, 16.7018, 0.59", "-0.921483, -184.196, 16.7135, 0.59", "-1.27428, -185.273, 16.923, 0.44", "-1.64543, -186.46, 17.1368, 0.44", "-1.66531, -186.523, 17.1482, 0.44", "-2.02492, -187.612, 17.3457, 2.14", "-2.25436, -188.219, 17.4455, 3.09", "-2.46785, -188.776, 17.5135, 3.61", "-2.72553, -189.419, 17.5135, 3.61", "-6.11354, -198.324, 16.7003, 3.61", "-10.5394, -206.606, 14.6019, 3.61", "-15.6039, -214.19, 11.3433, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "2.81883, -175.795, 16.6542, 0.59", "3.7137, -176.868, 16.4344, 0.59", "4.57938, -177.854, 16.2902, 0.37", "5.30166, -178.516, 16.4543, 0.37", "6.26819, -179.238, 16.9775, 0.37", "6.33369, -179.28, 17.0262, 0.37", "7.24021, -179.845, 17.7749, 0.74", "7.28705, -179.873, 17.8363, 0.74", "8.59021, -180.675, 19.9191, 0.74", "8.6184, -180.695, 19.9678, 0.74", "9.01624, -181.018, 20.6362, 0.74", "9.34943, -181.359, 21.1457, 0.29", "9.84764, -181.996, 21.7611, 0.29", "10.2542, -182.557, 22.1452, 0.29", "10.6295, -183.123, 22.3389, 0.29", "10.9705, -183.628, 22.4959, 0.81", "11.0089, -183.682, 22.5096, 0.81", "11.3756, -184.117, 22.5827, 1.25", "11.7128, -184.415, 22.5864, 1.25", "12.2136, -184.767, 22.5786, 0.59", "19.1394, -190.818, 25.9649, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "3.01202, 630.089, -34.5669, 0.44", "1.15087, 632.058, -36.9789, 0.44", "0.440917, 632.909, -37.9223, 0.44", "-1.64732E-5, 633.482, -38.5174, 0.74", "-0.025243, 633.521, -38.5547, 0.74", "-0.35477, 634.162, -39.108, 0.74", "-0.373221, 634.205, -39.1419, 0.74", "-0.489198, 634.984, -39.4822, 0.44", "-0.487818, 635.044, -39.5152, 0.44", "-0.435013, 635.761, -39.962, 0.88", "-0.407627, 636.499, -40.4106, 0.96", "-0.409606, 636.922, -40.6593, 1.25", "-0.411315, 636.971, -40.6904, 1.25", "-0.517227, 637.977, -41.3388, 0.66", "-0.671258, 638.767, -41.8482, 0.37", "-0.831151, 639.309, -42.1912, 0.74", "-1.01093, 639.831, -42.5274, 0.74", "-1.24009, 640.426, -42.9036, 0.74", "-1.61414, 641.324, -43.4432, 0.29", "-2.09243, 642.349, -44.0017, 0.29", "-2.43205, 643.045, -44.3732, 0.29", "-2.91751, 644.057, -44.9183, 1.47", "-3.0957, 644.442, -45.1108, 1.69", "-3.12356, 644.499, -45.1361, 1.69", "-3.41959, 645.066, -45.4192, 1.47", "-3.44989, 645.121, -45.4467, 1.47", "-4.27334, 646.632, -46.333, 0.22", "-4.55852, 647.175, -46.6731, 0.22", "-4.99538, 648.084, -47.2663, 0.22", "-5.4537, 649.24, -48.0127, 1.03", "-5.61495, 649.704, -48.3352, 1.4", "-6.07909, 651.152, -49.3826, 0.22", "-6.20358, 651.557, -49.686, 0.59", "-6.33581, 652.015, -50.0368, 0.74", "-6.72457, 653.5, -51.1368, 0.29", "-7.04681, 654.569, -51.863, 0.29", "-7.06868, 654.624, -51.9012, 0.29", "-7.37356, 655.208, -52.2955, 0.44", "-7.4037, 655.264, -52.3414, 0.44", "-7.64565, 655.713, -52.737, 0.44", "-8.00312, 656.395, -53.3454, 0.22", "-8.49106, 657.444, -54.2357, 1.92", "-8.58204, 657.654, -54.4295, 2.5", "-9.35757, 659.779, -56.4776, 0.15", "-9.45606, 660.083, -56.7745, 0.15", "-9.68033, 660.879, -57.5757, 1.4", "-9.72836, 661.062, -57.7573, 1.69", "-10.191, 662.8, -59.4598, 0.15", "-10.3598, 663.387, -60.0063, 0.15", "-10.4116, 663.544, -60.1287, 0.15", "-10.4594, 663.683, -60.2223, 0.15", "-10.6932, 664.364, -60.5806, 0.96", "-10.8537, 664.835, -60.7878, 1.47", "-10.9736, 665.173, -60.8954, 1.62", "-11.256, 665.931, -61.1392, 0.88", "-11.7848, 667.44, -61.6329, 0.22", "-11.958, 668.013, -61.8461, 0.22", "-12.1086, 668.606, -62.0981, 0.74", "-12.1216, 668.669, -62.1252, 0.74", "-12.2123, 669.189, -62.3254, 0.74", "-12.2543, 669.46, -62.4111, 0.74", "-12.4537, 670.878, -62.7691, 0.29", "-12.4639, 670.945, -62.784, 0.29", "-12.6736, 672.222, -63.0239, 0.29", "-12.8971, 673.515, -63.2451, 0.29", "-13.0807, 674.527, -63.3905, 0.29", "-13.2252, 675.279, -63.4696, 1.47", "-13.3111, 675.7, -63.5031, 2.06", "-13.3248, 675.766, -63.509, 2.06", "-13.4831, 676.512, -63.6021, 1.18", "-13.9233, 678.468, -63.9356, 0.22", "-14.2359, 679.876, -64.2095, 0.22", "-14.4687, 680.992, -64.4881, 1.47", "-14.5481, 681.395, -64.6059, 1.18", "-14.8339, 683.021, -65.1485, 0.22", "-15.0044, 684.105, -65.5583, 1.11", "-15.0776, 684.679, -65.8012, 1.33", "-15.2869, 686.784, -66.7474, 0.22", "-15.2914, 686.846, -66.7747, 0.22", "-15.3741, 688.322, -67.4126, 0.22", "-15.3761, 688.385, -67.4377, 0.22", "-15.4044, 689.979, -68.0367, 0.22", "-15.4068, 690.042, -68.0592, 0.22", "-15.4604, 690.925, -68.2997, 1.55", "-15.477, 691.066, -68.3321, 2.14", "-15.568, 691.552, -68.4188, 2.36", "-15.581, 691.607, -68.427, 2.36", "-15.9178, 692.58, -68.5592, 1.11", "-16.4503, 693.865, -68.7301, 0.22", "-16.9555, 694.956, -68.8699, 0.22", "-17.3281, 695.715, -68.9649, 1.4", "-17.5333, 696.104, -69.0114, 1.4", "-18.5581, 697.939, -69.2473, 0.22", "-18.9603, 698.604, -69.3373, 0.88", "-19.1901, 698.967, -69.392, 0.59", "-19.2309, 699.034, -69.4024, 0.59", "-19.3276, 699.202, -69.4259, 0.59", "-19.9657, 700.469, -69.5578, 0.22", "-20.3125, 701.26, -69.6076, 0.22", "-20.6333, 702.074, -69.6509, 1.03", "-20.7808, 702.468, -69.6684, 1.4", "-20.9489, 702.97, -69.6597, 1.4", "-21.3302, 704.307, -69.5713, 0.22", "-21.3466, 704.374, -69.5638, 0.22", "-21.6686, 705.87, -69.3746, 0.22", "-21.693, 706.004, -69.358, 0.22", "-21.9622, 707.711, -69.1545, 0.22", "-22.0985, 708.684, -69.031, 1.33", "-22.14, 709.01, -68.9863, 1.62", "-22.2146, 709.631, -68.9012, 0.81", "-22.3903, 711.284, -68.6743, 0.22", "-22.4969, 712.347, -68.5641, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.01202, 630.089, -34.5669, 0.59", "2.93191, 631.138, -34.4907, 0.59", "2.83952, 632.249, -34.3325, 0.59", "2.76154, 633.294, -34.1524, 0.81", "2.70562, 634.115, -34.0083, 1.25", "2.70043, 634.192, -33.9948, 1.25", "2.66565, 634.671, -33.9152, 1.11", "2.58083, 635.665, -33.7407, 0.88", "2.52225, 636.382, -33.6299, 0.44", "2.44398, 637.428, -33.5007, 0.37", "2.42405, 637.707, -33.4717, 0.37", "2.36673, 638.469, -33.4118, 0.37", "2.27203, 639.616, -33.3616, 1.47", "2.19563, 640.306, -33.3557, 1.84", "2.16099, 640.58, -33.3533, 1.84", "2.09759, 641.131, -33.3482, 1.84", "2.00389, 642.049, -33.3401, 1.25", "1.8683, 643.58, -33.3275, 0.66", "1.75418, 644.967, -33.3172, 0.66", "1.74753, 645.065, -33.3166, 0.66", "1.69134, 646.066, -33.3131, 0.66", "1.68579, 646.213, -33.3135, 0.66", "1.65958, 647.125, -33.3194, 0.66", "1.65865, 647.204, -33.3202, 0.66", "1.65722, 648.036, -33.3311, 0.66", "1.65055, 648.286, -33.3347, 0.66", "1.62128, 649.076, -33.3464, 0.66", "1.6036, 649.701, -33.3554, 0.66", "1.60336, 649.77, -33.3563, 0.66", "1.62186, 650.768, -33.3677, 0.66", "1.62479, 650.828, -33.3682, 0.66", "1.69081, 651.802, -33.3812, 1.18", "1.69911, 651.871, -33.3758, 1.18", "1.84179, 652.743, -33.2416, 1.33", "1.8568, 652.822, -33.2247, 1.33", "1.91044, 653.068, -33.154, 1.33", "1.93364, 653.175, -33.1208, 1.33", "2.23199, 654.537, -32.6481, 0.81", "2.24349, 654.594, -32.6314, 0.81", "2.37377, 655.135, -32.5045, 0.81", "2.38893, 655.2, -32.4918, 0.81", "2.57238, 655.953, -32.3729, 0.96", "2.60121, 656.065, -32.3596, 0.96", "2.92113, 657.255, -32.2869, 0.37", "3.18822, 658.26, -32.2368, 0.37", "3.38392, 659.055, -32.1757, 1.33", "3.56256, 659.781, -32.0889, 2.06", "3.63854, 660.107, -32.022, 2.36", "3.75575, 660.624, -31.8893, 2.36", "3.92799, 661.447, -31.6237, 1.62", "4.1687, 662.715, -31.1796, 0.52", "4.44404, 664.142, -30.6484, 0.37", "4.67262, 665.405, -30.1328, 1.55", "4.78428, 666.036, -29.8537, 2.21", "4.90365, 666.693, -29.5283, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-13.4161, -77.4079, -22.103, 0.44", "-12.9457, -78.6161, -21.6542, 0.44", "-12.4645, -79.7886, -21.1704, 0.22", "-12.4369, -79.8467, -21.142, 0.22", "-11.9953, -80.6917, -20.601, 0.22", "-11.3333, -81.8775, -19.8313, 1.47", "-11.131, -82.2301, -19.6147, 1.99", "-11.06, -82.3487, -19.5354, 1.99", "-10.5006, -83.2062, -18.9729, 1.77", "-9.59412, -84.5552, -18.1328, 0.52", "-8.89605, -85.57, -17.5283, 0.29", "-8.36352, -86.3443, -17.1209, 0.29", "-8.32854, -86.397, -17.0944, 0.29", "-7.80562, -87.2055, -16.7138, 1.03", "-7.30711, -88.0552, -16.3755, 1.03", "-6.63185, -89.3232, -15.9665, 0.22", "-6.60878, -89.3735, -15.9504, 0.22", "-6.39614, -89.8825, -15.8032, 0.44", "-6.37534, -89.9338, -15.7876, 0.44", "-6.09229, -90.614, -15.5619, 0.44", "-5.89514, -91.1239, -15.4149, 0.29", "-5.56747, -91.9864, -15.1743, 1.55", "-5.47694, -92.2145, -15.1054, 2.21", "-5.00917, -93.2654, -14.7553, 2.21", "-4.55755, -94.1939, -14.4311, 0.44", "-3.99162, -95.1904, -14.0538, 0.29", "-3.73716, -95.5936, -13.8928, 0.52", "-3.69581, -95.655, -13.8679, 0.52", "-3.39166, -96.0564, -13.7344, 0.22", "-3.33962, -96.1041, -13.7262, 0.22", "-2.96481, -96.3391, -13.6909, 0.22", "-2.5891, -96.5502, -13.632, 0.74", "-2.52128, -96.5931, -13.6191, 0.74", "-2.03187, -96.9513, -13.5151, 0.74", "-1.17216, -97.6811, -13.3201, 0.29", "-0.642227, -98.2033, -13.1601, 0.29", "-0.0927408, -98.8491, -12.959, 1.33", "0.220184, -99.2528, -12.839, 1.92", "0.381383, -99.4702, -12.7788, 1.99", "0.720433, -99.9537, -12.6519, 1.55", "1.34599, -100.859, -12.4626, 0.66", "1.7559, -101.443, -12.3836, 0.29", "2.40959, -102.38, -12.3606, 0.22", "2.81086, -102.992, -12.3862, 1.03", "3.10978, -103.479, -12.4329, 1.55", "3.57841, -104.3, -12.5583, 0.88", "3.95712, -105.033, -12.7159, 0.29", "4.33196, -105.844, -12.9054, 0.29", "4.71244, -106.811, -13.1427, 0.22", "4.87611, -107.258, -13.2505, 0.52", "4.89915, -107.32, -13.2624, 0.52", "5.1222, -107.911, -13.3145, 0.52", "5.38727, -108.542, -13.3107, 0.44", "5.4677, -108.727, -13.2885, 0.66", "5.67324, -109.209, -13.2045, 0.37", "5.94402, -109.92, -13.0572, 0.29", "6.21094, -110.779, -12.8705, 0.29", "6.22249, -110.834, -12.8565, 0.29", "6.34478, -111.679, -12.636, 1.25", "6.38329, -112.079, -12.5393, 1.84", "6.39711, -112.448, -12.4626, 1.84", "6.39652, -113.296, -12.3411, 0.81", "6.38114, -114.285, -12.2355, 0.29", "6.3698, -114.991, -12.1843, 0.22", "6.36771, -115.087, -12.1809, 0.22", "6.33007, -115.903, -12.1965, 0.22", "6.23274, -117.015, -12.2911, 1.33", "6.16449, -117.539, -12.3672, 1.99", "6.10213, -117.879, -12.4352, 2.28", "5.98364, -118.394, -12.5326, 2.28", "5.64936, -119.715, -12.769, 0.66", "5.42643, -120.501, -12.9091, 0.22", "5.40627, -120.566, -12.9197, 0.22", "5.26274, -121.085, -12.984, 0.22", "5.12623, -121.621, -13.0289, 0.74", "5.04238, -121.99, -13.0375, 1.03", "4.98386, -122.266, -13.0202, 1.11", "4.87716, -122.817, -12.9753, 0.44", "4.69942, -123.722, -12.9233, 0.22", "4.68615, -123.788, -12.9213, 0.22", "4.57443, -124.283, -12.9213, 0.44", "4.44224, -125.017, -12.9213, 0.29", "4.42962, -125.083, -12.9213, 0.29", "4.18565, -125.868, -12.8925, 0.29", "3.99281, -126.359, -12.8575, 0.22", "3.96714, -126.423, -12.8515, 0.22", "3.64522, -127.296, -12.718, 0.22", "3.49124, -127.822, -12.5787, 0.22", "3.18577, -129.309, -12.1022, 2.14", "3.17828, -129.363, -12.0835, 2.14", "3.13715, -129.949, -11.8778, 1.99", "3.1343, -130.81, -11.576, 1.69", "3.20329, -132.094, -11.1196, 0.59", "3.3869, -133.289, -10.7121, 0.22", "3.53161, -133.881, -10.5401, 0.37", "3.69629, -134.505, -10.4187, 0.37", "3.8968, -135.224, -10.3571, 0.74", "3.91592, -135.289, -10.36, 0.74", "4.05689, -135.774, -10.4433, 1.11", "4.32105, -136.735, -10.6695, 0.59", "4.61058, -137.81, -10.9462, 0.29", "4.81192, -138.537, -11.1399, 0.29", "4.84261, -138.638, -11.1677, 0.29", "5.07118, -139.331, -11.3447, 0.29", "5.13955, -139.512, -11.3823, 0.29", "5.46343, -140.231, -11.4694, 0.29", "5.75735, -140.827, -11.4981, 1.18", "5.93805, -141.174, -11.5148, 1.47", "5.96955, -141.234, -11.5171, 1.47", "6.4597, -142.212, -11.5478, 0.44", "6.78736, -143.017, -11.5645, 0.37", "6.94882, -143.626, -11.5699, 0.81", "7.02277, -144.038, -11.576, 0.81", "7.1016, -144.678, -11.586, 0.59", "7.13726, -145.123, -11.597, 0.29", "7.1776, -146.111, -11.6269, 0.22", "7.21466, -147.169, -11.6875, 0.22", "7.24824, -147.788, -11.7353, 0.44", "7.26623, -147.999, -11.7546, 0.44", "7.32512, -148.41, -11.7965, 0.44", "7.48731, -149.189, -11.8801, 0.29", "7.69532, -150.008, -11.9659, 1.4", "7.8585, -150.614, -12.0272, 1.69", "7.99177, -151.148, -12.0748, 1.92", "8.16877, -151.898, -12.1488, 0.74", "8.32421, -152.811, -12.2477, 0.22", "8.42372, -153.709, -12.35, 0.22", "8.4618, -154.354, -12.4173, 0.88", "8.46222, -154.845, -12.4725, 0.88", "8.42101, -155.639, -12.5638, 0.22", "8.31962, -156.629, -12.6767, 0.22", "8.31003, -156.705, -12.6848, 0.22", "8.19784, -157.407, -12.7516, 0.22", "8.03338, -158.341, -12.7958, 1.03", "7.95248, -158.752, -12.7997, 1.33", "7.89585, -159.028, -12.7915, 1.33", "7.65536, -160.26, -12.7666, 0.22", "7.46672, -161.154, -12.8012, 0.22", "7.33412, -161.701, -12.8595, 0.88", "7.23509, -162.08, -12.9213, 1.11", "7.15241, -162.381, -12.9834, 0.88", "6.83815, -163.552, -13.2732, 0.22", "6.56319, -164.503, -13.5409, 0.22", "6.40677, -165.036, -13.7018, 1.55", "6.26911, -165.506, -13.84, 1.77", "6.12053, -166.025, -13.9763, 1.25", "5.84648, -167.061, -14.2041, 0.22", "5.60802, -168.114, -14.3612, 0.22", "5.59853, -168.17, -14.3673, 0.22", "5.51481, -169.108, -14.467, 0.22", "5.5125, -169.186, -14.4786, 0.22", "5.5469, -170.038, -14.6307, 0.96", "5.5762, -170.578, -14.7351, 1.47", "5.61752, -171.162, -14.873, 0.88", "5.64034, -171.696, -15.0155, 0.66", "5.67642, -172.915, -15.3821, 0.29", "5.67952, -173.393, -15.5306, 0.59", "5.66918, -174.201, -15.7972, 0.59", "5.65849, -175.036, -16.0755, 0.29", "5.66045, -175.12, -16.1021, 0.29", "5.73356, -176.165, -16.4101, 0.29", "5.7426, -176.229, -16.4273, 0.29", "5.8425, -176.753, -16.5697, 0.74", "5.95725, -177.353, -16.7271, 0.88", "6.09619, -178.311, -16.9645, 0.22", "6.17026, -179.089, -17.15, 0.22", "6.18139, -179.955, -17.3615, 1.99", "6.15259, -180.581, -17.5242, 2.43", "5.99844, -181.965, -17.8934, 0.22", "5.8669, -182.709, -18.0983, 0.44", "5.66278, -183.623, -18.3602, 0.37", "5.42177, -184.573, -18.6317, 0.22", "5.24636, -185.203, -18.7991, 1.03", "5.14979, -185.573, -18.9085, 1.25", "5.03667, -186.099, -19.0825, 0.96", "4.84567, -187.294, -19.4986, 0.15", "4.78073, -187.919, -19.7184, 0.74", "4.75784, -188.38, -19.8744, 0.96", "4.72986, -189.812, -20.3429, 0.22", "4.73151, -189.949, -20.3865, 0.22", "4.78381, -190.546, -20.584, 0.22", "4.89677, -191.343, -20.8341, 0.22", "4.90678, -191.4, -20.851, 0.22", "5.11194, -192.415, -21.1464, 2.5", "5.20013, -192.811, -21.2534, 2.73", "5.68126, -194.72, -21.7992, 0.22", "5.85768, -195.293, -21.9772, 0.52", "6.05367, -195.827, -22.15, 0.52", "6.49261, -196.925, -22.4923, 0.22", "6.52026, -196.984, -22.5117, 0.22", "6.75928, -197.459, -22.6724, 0.22", "7.1925, -198.253, -22.9202, 1.18", "7.37065, -198.571, -23.0171, 1.69", "7.73684, -199.228, -23.1985, 1.33", "8.23636, -200.138, -23.3913, 0.22", "8.43472, -200.538, -23.4632, 0.22", "8.6837, -201.148, -23.5591, 1.47", "8.84063, -201.607, -23.6186, 1.69", "8.97945, -202.079, -23.6824, 1.69", "9.33476, -203.452, -23.8592, 0.29", "9.48328, -204.114, -23.9338, 0.29", "9.64294, -204.836, -24.0256, 1.03", "9.66774, -204.981, -24.0438, 1.33", "9.82359, -206.23, -24.1823, 0.22", "9.85733, -206.71, -24.2283, 0.22", "9.85649, -207.055, -24.249, 1.03", "9.85055, -207.48, -24.2517, 1.03", "9.7946, -208.832, -24.1989, 0.22", "9.72196, -209.618, -24.1445, 1.33", "9.67478, -209.923, -24.1132, 1.47", "9.56092, -210.525, -24.0775, 1.55", "9.27654, -211.859, -24.0396, 0.22", "9.16793, -212.297, -24.0438, 0.22", "8.96918, -213.026, -24.0793, 0.96", "8.81404, -213.563, -24.1187, 1.25", "8.42356, -214.917, -24.2714, 0.22", "8.40275, -214.99, -24.282, 0.22", "8.04826, -216.347, -24.4822, 0.22", "7.97475, -216.653, -24.5234, 0.74", "7.91353, -216.921, -24.5579, 0.74", "7.61626, -218.274, -24.7106, 0.22", "7.37052, -219.444, -24.8035, 0.22", "7.07807, -220.973, -24.9306, 0.22", "6.99865, -221.469, -24.9759, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.4161, -77.4079, -22.103, 0.66", "-14.2137, -79.0324, -22.015, 0.66", "-14.5276, -79.6245, -21.956, 0.52", "-14.8896, -80.2368, -21.8829, 0.88", "-15.1243, -80.6236, -21.8207, 1.03", "-15.4444, -81.1502, -21.7168, 0.96", "-15.9378, -81.9658, -21.5363, 0.37", "-16.4237, -82.7645, -21.2795, 0.29", "-16.6513, -83.1774, -21.1407, 0.29", "-17.0556, -84.0663, -20.8072, 0.29", "-17.1599, -84.3563, -20.6965, 0.74", "-17.1823, -84.4375, -20.6685, 0.74", "-17.2479, -84.7607, -20.5826, 0.74", "-17.3424, -85.384, -20.4442, 0.59", "-17.4897, -86.421, -20.2501, 0.29", "-17.6559, -87.4878, -20.0966, 0.29", "-17.8237, -88.4936, -19.9779, 0.29", "-18.0211, -89.6295, -19.8604, 0.29", "-18.1653, -90.5416, -19.8079, 1.33", "-18.1765, -90.6192, -19.8074, 1.33", "-18.2717, -91.413, -19.8444, 1.99", "-18.3018, -91.9068, -19.8744, 2.21", "-18.3148, -92.3342, -19.9065, 2.21", "-18.3265, -93.7631, -20.0291, 0.29", "-18.32, -94.9448, -20.1281, 0.29", "-18.3088, -95.6324, -20.1793, 0.29", "-18.2904, -96.1138, -20.2097, 0.96", "-18.275, -96.6872, -20.236, 1.47", "-18.2694, -97.0374, -20.2435, 1.84", "-18.2547, -97.7413, -20.2215, 0.88", "-18.2486, -97.8075, -20.2212, 0.88", "-18.1542, -98.5036, -20.2495, 0.29", "-18.0507, -99.185, -20.3031, 0.29", "-18.0373, -99.2602, -20.3108, 0.29", "-17.8543, -100.215, -20.4249, 0.52", "-17.6388, -101.291, -20.5667, 0.52", "-17.4608, -102.201, -20.6814, 0.22", "-17.3227, -102.957, -20.7729, 1.47", "-17.2211, -103.589, -20.841, 2.06", "-17.1862, -103.925, -20.8719, 2.36", "-17.1707, -104.639, -20.9212, 1.69", "-17.2405, -105.748, -20.9671, 0.74", "-17.3696, -106.745, -20.9929, 0.44", "-17.5585, -107.79, -21.0312, 0.44", "-17.7008, -108.417, -21.0616, 0.44", "-17.9981, -109.627, -21.1312, 0.29", "-18.1429, -110.245, -21.1727, 0.59", "-18.2834, -110.891, -21.2213, 0.59", "-18.4032, -111.574, -21.2745, 0.29", "-18.4118, -111.65, -21.2813, 0.29", "-18.4863, -112.628, -21.3877, 0.29", "-18.5246, -113.732, -21.532, 0.29", "-18.5317, -113.865, -21.5515, 0.29", "-18.6026, -114.349, -21.6326, 0.29", "-18.6224, -114.411, -21.6473, 0.29", "-18.8774, -114.996, -21.8896, 0.29", "-18.9033, -115.051, -21.9182, 0.29", "-19.1861, -115.675, -22.2805, 0.29", "-19.5782, -116.62, -22.8444, 2.28", "-20.0718, -117.81, -23.5642, 2.65", "-20.7517, -119.494, -24.5777, 0.29", "-21.0956, -120.357, -25.0825, 0.29", "-21.3493, -120.951, -25.4265, 0.59", "-21.4786, -121.24, -25.5948, 0.22", "-21.8068, -121.868, -25.9728, 0.22", "-22.0944, -122.298, -26.2685, 0.22", "-22.6466, -122.992, -26.789, 1.03", "-23.1647, -123.589, -27.2792, 1.92", "-23.6002, -124.104, -27.7104, 2.06", "-24.0088, -124.646, -28.1757, 1.92", "-25.0799, -126.373, -29.6314, 0.29", "-25.3858, -126.973, -30.1098, 0.52", "-25.4046, -127.018, -30.1431, 0.52", "-25.5679, -127.494, -30.4435, 0.52", "-25.8148, -128.326, -30.8555, 0.37", "-25.9824, -129.048, -31.098, 0.29", "-26.1239, -129.87, -31.261, 0.29", "-26.2442, -130.524, -31.3742, 0.88", "-26.3195, -130.955, -31.4442, 0.88", "-26.4734, -132.065, -31.6059, 0.22", "-26.5575, -132.988, -31.7158, 1.55", "-26.5722, -133.557, -31.7797, 1.84", "-26.5509, -134.07, -31.8302, 1.62", "-26.4368, -135.31, -31.9735, 0.22", "-26.3319, -136.169, -32.079, 0.22", "-26.2591, -136.713, -32.1432, 0.22", "-26.2136, -137.27, -32.2042, 0.74", "-26.2024, -137.762, -32.2506, 0.74", "-26.2408, -138.844, -32.3403, 0.29", "-26.3154, -139.468, -32.3767, 0.29", "-26.5033, -140.473, -32.4004, 0.29", "-26.7135, -141.44, -32.3923, 1.77", "-26.8474, -142.013, -32.3718, 2.21", "-26.9832, -142.556, -32.3375, 2.21", "-27.2384, -143.499, -32.2465, 0.74", "-27.4961, -144.38, -32.1816, 0.22", "-27.8297, -145.455, -32.1315, 0.22", "-28.0053, -146.018, -32.1224, 0.88", "-28.1634, -146.55, -32.1263, 1.03", "-28.2021, -146.69, -32.1311, 1.03", "-28.4574, -147.704, -32.2055, 0.22", "-28.6244, -148.376, -32.2747, 0.22", "-28.6582, -148.505, -32.2877, 0.22", "-28.8501, -149.253, -32.3619, 0.22", "-28.9866, -149.75, -32.4027, 0.22", "-29.2313, -150.57, -32.4647, 1.33", "-29.3837, -151.041, -32.4934, 1.77", "-29.6267, -151.753, -32.52, 1.77", "-29.8172, -152.321, -32.5309, 0.88", "-30.2015, -153.456, -32.5392, 0.29", "-30.3188, -153.886, -32.5362, 0.74", "-30.4385, -154.352, -32.544, 0.74", "-30.6975, -155.453, -32.588, 0.22", "-30.8034, -155.939, -32.6146, 0.22", "-30.822, -156.025, -32.621, 0.22", "-31.0123, -156.906, -32.7154, 0.96", "-31.317, -158.182, -32.8678, 1.18", "-31.4154, -158.545, -32.9195, 1.47", "-31.4415, -158.629, -32.9334, 1.47", "-31.5888, -159.063, -32.9967, 1.47", "-31.9834, -160.274, -33.1361, 0.22", "-32.1053, -160.673, -33.1774, 0.22", "-32.2294, -161.221, -33.2172, 0.74", "-32.2975, -161.485, -33.2403, 0.96", "-32.3379, -161.624, -33.2537, 0.96", "-32.4429, -161.954, -33.292, 0.96", "-32.7404, -162.876, -33.4192, 0.22", "-32.9114, -163.436, -33.4981, 0.29", "-33.0899, -164.107, -33.6453, 0.29", "-33.2092, -164.568, -33.8018, 0.29", "-33.4175, -165.392, -34.1387, 1.25", "-33.54, -165.893, -34.37, 1.69", "-33.6282, -166.277, -34.5725, 1.69", "-33.8704, -167.407, -35.2464, 1.03", "-34.1395, -168.571, -35.97, 0.22", "-34.2585, -169.039, -36.2565, 0.22", "-34.5808, -170.201, -36.9465, 1.99", "-34.8036, -170.935, -37.3568, 2.5", "-35.2844, -172.475, -38.1158, 0.29", "-35.518, -173.18, -38.4045, 0.22", "-35.7666, -173.928, -38.6525, 0.52", "-35.8797, -174.251, -38.7435, 0.59", "-36.2628, -175.33, -38.9635, 0.22", "-36.5653, -176.226, -39.0707, 0.22", "-36.7418, -176.771, -39.0971, 0.22", "-37.091, -177.882, -39.1366, 1.33", "-37.2705, -178.402, -39.1572, 1.69", "-37.4672, -178.92, -39.1767, 1.47", "-37.7756, -179.627, -39.2159, 0.52", "-38.039, -180.175, -39.2623, 0.29", "-38.7648, -181.548, -39.4076, 0.29", "-39.2951, -182.443, -39.5326, 1.11", "-39.6051, -182.949, -39.6191, 1.47", "-40.4422, -184.252, -39.8713, 0.22", "-40.7609, -184.755, -39.9771, 1.77", "-41.1913, -185.448, -40.1341, 2.14", "-41.4464, -185.873, -40.2373, 1.69", "-42.0155, -186.942, -40.4801, 0.22", "-42.0437, -187.004, -40.4934, 0.22", "-42.2533, -187.562, -40.6048, 0.22", "-42.4541, -188.152, -40.7421, 0.52", "-42.5087, -188.332, -40.7883, 0.52", "-42.7595, -189.23, -41.0256, 0.22", "-42.9053, -189.781, -41.181, 0.22", "-43.0858, -190.573, -41.4141, 1.99", "-43.2286, -191.304, -41.6426, 2.5", "-43.347, -192.319, -42.0119, 0.81", "-43.4083, -192.986, -42.2707, 0.22", "-43.4133, -193.039, -42.2914, 0.22", "-43.4557, -193.399, -42.4279, 0.52", "-43.4635, -193.452, -42.4472, 0.52", "-43.73, -194.501, -42.8226, 0.22", "-44.0564, -195.468, -43.1555, 0.22", "-44.3756, -196.277, -43.4251, 0.22", "-44.706, -196.987, -43.654, 1.33", "-44.8684, -197.289, -43.7475, 1.33", "-45.5551, -198.439, -44.0922, 0.22", "-46.1046, -199.153, -44.2893, 0.22", "-46.1457, -199.197, -44.3025, 0.22", "-47.2318, -200.182, -44.6011, 2.28", "-47.5691, -200.439, -44.6784, 2.73", "-47.9046, -200.665, -44.7486, 2.73", "-49.5572, -201.6, -45.0624, 0.22", "-49.8861, -201.75, -45.1334, 0.74", "-50.2238, -201.886, -45.2114, 0.96", "-51.3277, -202.238, -45.5135, 0.22", "-51.8346, -202.374, -45.678, 1.03", "-52.1466, -202.462, -45.8469, 1.03", "-53.3287, -202.836, -46.8035, 0.22", "-53.376, -202.853, -46.8529, 0.22", "-54.0115, -203.1, -47.5964, 1.4", "-54.18, -203.169, -47.813, 1.4", "-55.8204, -203.891, -49.9724, 0.59", "-56.1969, -204.071, -50.4716, 1.03", "-57.3614, -204.69, -51.9363, 0.22", "-57.9462, -205.003, -52.5843, 0.22", "-57.9856, -205.025, -52.623, 0.22", "-58.4832, -205.301, -53.0471, 1.11", "-58.8632, -205.496, -53.3023, 1.25", "-60.2251, -206.216, -54.1452, 0.22", "-60.6749, -206.461, -54.4017, 0.66", "-61.9097, -207.151, -55.1323, 0.22", "-61.966, -207.182, -55.1647, 0.22", "-62.3471, -207.389, -55.3776, 0.96", "-62.7065, -207.569, -55.5616, 1.4", "-63.2676, -207.831, -55.813, 0.96", "-64.2829, -208.3, -56.2099, 0.22", "-64.8527, -208.571, -56.3969, 1.62", "-65.3177, -208.801, -56.5441, 1.99", "-66.794, -209.579, -56.9717, 0.22", "-67.2195, -209.828, -57.0891, 0.37", "-67.4395, -209.967, -57.1401, 0.37", "-68.0087, -210.343, -57.259, 0.22", "-68.4727, -210.675, -57.3646, 0.22", "-69.1409, -211.173, -57.5256, 0.52", "-69.9105, -211.764, -57.7269, 0.22", "-70.3384, -212.081, -57.8525, 0.96", "-70.758, -212.378, -58.012, 0.96", "-71.7888, -213.128, -58.4739, 0.22", "-72.5498, -213.695, -58.931, 1.18", "-72.8791, -213.954, -59.2126, 1.55", "-72.9152, -213.983, -59.2494, 1.55", "-73.9211, -214.838, -60.3988, 0.29", "-74.3973, -215.244, -60.9787, 0.29", "-75.3464, -216.02, -62.1693, 1.55", "-76.7962, -217.158, -63.9972, 0.29", "-76.8419, -217.192, -64.053, 0.29", "-77.2513, -217.495, -64.5343, 1.18", "-77.9783, -218.021, -65.3611, 0.22", "-78.5744, -218.442, -66.0116, 1.25", "-79.5111, -219.151, -66.9771, 0.22", "-79.6599, -219.264, -67.1177, 0.74", "-80.3027, -219.782, -67.7226, 0.22", "-80.3386, -219.814, -67.7566, 0.22", "-80.8696, -220.361, -68.2666, 1.11", "-81.2426, -220.783, -68.6171, 1.47", "-82.0574, -221.765, -69.3254, 0.22", "-82.2744, -222.029, -69.5067, 0.59", "-82.7777, -222.645, -69.8971, 1.18", "-82.8179, -222.695, -69.928, 1.18", "-83.3073, -223.315, -70.2883, 1.18", "-84.2011, -224.443, -70.9128, 0.22", "-84.6592, -225.064, -71.2296, 1.25", "-84.8432, -225.309, -71.3526, 1.25", "-85.5248, -226.14, -71.7934, 0.29", "-85.9196, -226.594, -72.049, 0.96", "-86.9115, -227.753, -72.6166, 0.29", "-87.6047, -228.545, -72.947, 0.44", "-88.3711, -229.386, -73.2456, 0.22", "-89.1162, -230.152, -73.4755, 1.18", "-89.6432, -230.631, -73.5618, 1.77", "-90.9626, -231.679, -73.6129, 0.29", "-91.5068, -232.049, -73.552, 0.29", "-91.92, -232.276, -73.4521, 0.29", "-92.3046, -232.442, -73.3322, 0.88", "-93.5061, -232.887, -72.9333, 0.22", "-94.2849, -233.113, -72.7175, 1.03", "-94.7022, -233.206, -72.6303, 1.03", "-95.5435, -233.359, -72.4512, 0.22", "-97.7602, -233.654, -72.0031, 0.22", "-97.8295, -233.66, -71.9902, 0.22", "-99.2188, -233.643, -71.7746, 0.81", "-99.4845, -233.62, -71.7432, 1.03", "-100.262, -233.483, -71.6347, 0.22", "-101.204, -233.234, -71.4966, 0.22", "-101.269, -233.211, -71.4822, 0.22", "-102.39, -232.83, -71.235, 1.33", "-102.888, -232.677, -71.1398, 1.55", "-104.586, -232.256, -70.9128, 0.22", "-105.074, -232.161, -70.8713, 0.59", "-105.837, -232.049, -70.8648, 0.59", "-106.652, -231.963, -70.9156, 0.44", "-107.941, -231.888, -71.0958, 0.22", "-108.75, -231.849, -71.2486, 1.03", "-109.043, -231.844, -71.3165, 1.03", "-110.28, -231.814, -71.5776, 0.22", "-110.813, -231.778, -71.6753, 0.22", "-110.873, -231.77, -71.6809, 0.22", "-111.985, -231.533, -71.7531, 0.22", "-112.99, -231.267, -71.8018, 0.22", "-113.047, -231.25, -71.8043, 0.22", "-114.094, -230.907, -71.9099, 1.11", "-114.487, -230.782, -72.0035, 1.55", "-115.563, -230.457, -72.3645, 0.22", "-116.357, -230.257, -72.727, 0.22", "-116.756, -230.162, -72.9369, 0.66", "-117.91, -229.931, -73.5886, 0.22", "-118.932, -229.755, -74.1921, 1.25", "-119.317, -229.7, -74.4466, 1.47", "-120.56, -229.615, -75.2677, 0.22", "-120.619, -229.616, -75.3052, 0.22", "-121.087, -229.66, -75.584, 1.03", "-121.811, -229.785, -75.9656, 1.33", "-123.67, -230.172, -76.9047, 0.22", "-125.069, -230.501, -77.6152, 0.22", "-126.137, -230.786, -78.1376, 0.22", "-126.529, -230.903, -78.3269, 1.03", "-127.024, -231.081, -78.5562, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-22.4969, 712.347, -68.5641, 0.88", "-22.8974, 713.507, -68.4432, 0.88", "-23.5114, 715.29, -68.2864, 0.15", "-23.8605, 716.442, -68.2849, 0.15", "-23.8971, 716.56, -68.2889, 0.15", "-24.0881, 717.179, -68.3098, 1.03", "-24.1741, 717.458, -68.3192, 1.4", "-24.252, 717.718, -68.3496, 1.4", "-24.9405, 720.015, -68.6498, 0.22", "-25.4183, 721.728, -68.8835, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-22.4969, 712.347, -68.5641, 0.22", "-21.5643, 714.269, -68.0556, 0.22", "-21.1434, 715.149, -67.7824, 0.81", "-21.0121, 715.426, -67.6896, 1.03", "-20.8005, 715.898, -67.5287, 0.81", "-19.8917, 717.999, -66.8117, 0.22", "-19.7575, 718.329, -66.7105, 0.44", "-19.5164, 719.066, -66.4931, 0.15", "-19.5007, 719.12, -66.4798, 0.15", "-19.303, 719.929, -66.3023, 1.03", "-19.2837, 720.029, -66.2839, 1.03", "-19.0367, 721.447, -66.1125, 0.15", "-18.9786, 721.79, -66.0746, 0.29", "-18.7095, 723.373, -65.9141, 0.15", "-18.6097, 723.927, -65.8532, 0.66", "-18.5957, 724.002, -65.8416, 0.66", "-18.3544, 725.335, -65.5782, 0.15", "-18.1842, 726.269, -65.3426, 0.66", "-18.0305, 727.076, -65.1291, 0.22", "-18.0138, 727.15, -65.1084, 0.22", "-17.8214, 727.959, -64.8621, 0.74", "-17.7789, 728.158, -64.7951, 0.74", "-17.7617, 728.331, -64.7144, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "4.90365, 666.693, -29.5283, 0.37", "3.36602, 667.585, -29.5569, 0.37", "2.69999, 667.978, -29.5747, 0.37", "2.63304, 668.02, -29.5699, 0.37", "2.07386, 668.387, -29.4979, 0.37", "1.36299, 668.881, -29.3638, 0.88", "0.967727, 669.166, -29.2719, 0.88", "0.908163, 669.215, -29.248, 0.88", "0.0755657, 669.995, -28.7974, 0.88", "0.0392481, 670.034, -28.7734, 0.88", "-0.239397, 670.399, -28.5418, 1.03", "-0.292983, 670.47, -28.4998, 1.03", "-0.569514, 670.792, -28.3191, 1.03", "-0.653681, 670.882, -28.2714, 1.03", "-1.16279, 671.386, -28.0295, 0.74", "-1.83988, 672.02, -27.7229, 0.29", "-2.52218, 672.633, -27.4059, 0.29", "-3.21685, 673.278, -27.06, 0.29", "-3.29972, 673.362, -27.0123, 0.29", "-3.7004, 673.812, -26.74, 0.22", "-3.7476, 673.875, -26.6972, 0.22", "-4.03445, 674.396, -26.3086, 0.52", "-4.15559, 675.027, -25.8061, 1.18", "-4.16627, 675.545, -25.4026, 1.18", "-4.16299, 675.599, -25.3615, 1.18", "-4.10184, 675.88, -25.1441, 1.18", "-4.08782, 675.924, -25.1093, 1.18", "-3.69068, 676.614, -24.5582, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "4.90365, 666.693, -29.5283, 0.52", "5.74218, 667.89, -29.3911, 0.52", "6.47906, 668.96, -29.2379, 0.37", "6.51714, 669.016, -29.2293, 0.37", "7.01431, 669.768, -29.1028, 0.37", "7.36737, 670.309, -29.0075, 0.74", "7.89466, 671.147, -28.8541, 0.44", "8.50132, 672.281, -28.6241, 0.37", "8.52774, 672.332, -28.6129, 0.37", "8.72203, 672.708, -28.5273, 0.37", "8.75302, 672.769, -28.5126, 0.37", "9.22567, 673.78, -28.285, 0.88", "9.51021, 674.517, -28.1835, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-25.4183, 721.728, -68.8835, 0.22", "-26.4804, 720.727, -70.0672, 0.22", "-26.7623, 720.455, -70.4045, 1.25", "-27.7892, 719.457, -71.6788, 0.22", "-28.1556, 719.108, -72.1345, 0.96", "-29.2128, 718.133, -73.4252, 0.22", "-29.2563, 718.092, -73.4807, 0.22", "-29.9718, 717.389, -74.475, 0.22", "-29.9994, 717.359, -74.5179, 0.22", "-30.2546, 717.047, -74.9747, 0.74", "-30.3665, 716.905, -75.189, 0.88", "-31.1447, 715.983, -76.4954, 0.22", "-31.1733, 715.952, -76.5368, 0.22", "-31.7629, 715.268, -77.4035, 0.22", "-32.1235, 714.826, -77.9496, 0.22", "-32.1483, 714.791, -77.9906, 0.22", "-32.612, 714.112, -78.7759, 1.11", "-33.1076, 713.622, -79.1825, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-25.4183, 721.728, -68.8835, 0.96", "-25.617, 722.318, -69.0079, 0.96", "-25.6384, 722.381, -69.0192, 0.96", "-25.7476, 722.708, -69.0723, 1.18", "-25.9613, 723.358, -69.1729, 0.88", "-26.8764, 726.191, -69.6004, 0.15", "-26.8973, 726.257, -69.61, 0.15", "-27.3907, 727.853, -69.8517, 0.15", "-27.7025, 728.915, -70.043, 0.96", "-27.8287, 729.379, -70.1378, 1.33", "-27.8461, 729.452, -70.1543, 1.33", "-27.8807, 729.656, -70.2048, 1.33", "-27.898, 729.775, -70.2373, 1.33", "-28.1005, 731.533, -70.7502, 0.15", "-28.1443, 731.946, -70.8617, 0.44", "-28.1879, 732.35, -70.9658, 0.44", "-28.3674, 733.799, -71.305, 0.22", "-28.3885, 733.94, -71.3344, 0.22", "-28.6101, 735.017, -71.514, 0.81", "-28.8576, 735.977, -71.633, 0.22", "-28.8932, 736.095, -71.6474, 0.22", "-29.1504, 736.831, -71.7331, 1.18", "-29.2959, 737.202, -71.7712, 1.33", "-30.1689, 739.069, -72.0101, 0.22", "-30.235, 739.186, -72.0271, 0.22", "-30.5198, 739.646, -72.0958, 0.22", "-30.9334, 740.244, -72.1867, 1.03", "-31.2774, 740.694, -72.2611, 1.33", "-32.2986, 741.929, -72.4963, 0.15", "-32.8729, 742.519, -72.628, 0.15", "-32.9211, 742.567, -72.6392, 0.15", "-33.7024, 743.301, -72.8259, 0.15", "-33.7539, 743.345, -72.8381, 0.15", "-34.5108, 743.942, -73.0084, 1.03", "-34.9713, 744.291, -73.089, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-3.69068, 676.614, -24.5582, 0.52", "-3.83018, 678.325, -25.5867, 0.52", "-3.86065, 678.698, -25.7754, 0.52", "-3.864, 678.761, -25.806, 0.52", "-3.89389, 679.641, -26.2274, 0.37", "-3.89382, 679.704, -26.2574, 0.37", "-3.83803, 680.611, -26.6997, 0.37", "-3.72927, 681.383, -27.0103, 1.03", "-3.61235, 682.025, -27.2726, 0.88", "-3.59767, 682.096, -27.3026, 0.88", "-3.44036, 682.822, -27.6041, 0.59", "-3.14195, 684.472, -28.3618, 0.22", "-2.98499, 685.545, -28.8658, 0.22", "-2.97741, 685.605, -28.897, 0.22", "-2.89439, 686.473, -29.3652, 0.88", "-2.84726, 687.032, -29.6626, 1.11", "-2.71177, 688.809, -30.5613, 0.29", "-2.66113, 689.388, -30.8411, 0.22", "-2.51342, 690.356, -31.3495, 0.22", "-2.5006, 690.417, -31.3818, 0.22", "-2.15586, 691.745, -32.0389, 0.22", "-1.89778, 692.632, -32.4396, 1.33", "-1.75836, 693.05, -32.6095, 1.33", "-1.15227, 694.867, -33.3698, 0.22", "-1.13231, 694.928, -33.3955, 0.22", "-0.78612, 696.047, -33.8834, 0.22", "-0.562542, 696.817, -34.2564, 0.81", "-0.11854, 698.431, -35.0297, 0.22", "0.0939008, 699.202, -35.3713, 0.81", "0.11361, 699.265, -35.3948, 0.81", "0.210648, 699.549, -35.5058, 0.81", "0.67916, 700.72, -36.0022, 0.22", "1.0508, 701.555, -36.348, 1.4", "1.29728, 702.08, -36.5317, 1.77", "1.696, 702.834, -36.7827, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-3.69068, 676.614, -24.5582, 0.52", "-4.28953, 677.629, -24.1779, 0.52", "-4.34801, 677.736, -24.1467, 0.52", "-4.60766, 678.232, -24.0328, 0.81", "-4.64281, 678.302, -24.02, 0.81", "-4.79673, 678.628, -23.9703, 0.59", "-5.43631, 680.056, -23.7505, 0.29", "-5.49137, 680.19, -23.7361, 0.29", "-5.75606, 680.847, -23.6306, 1.03", "-6.00751, 681.502, -23.4812, 0.96", "-6.26744, 682.189, -23.2803, 0.59", "-6.5113, 682.871, -23.0178, 0.59", "-6.54738, 682.978, -22.962, 0.59", "-6.74611, 683.684, -22.5428, 0.59", "-6.82968, 684.318, -22.1217, 0.29", "-6.8302, 684.365, -22.0882, 0.29", "-6.80527, 684.804, -21.7868, 0.29", "-6.79688, 684.902, -21.7259, 0.29", "-6.76839, 685.562, -21.3658, 0.59", "-6.77945, 686.686, -20.8673, 0.22", "-6.78474, 686.748, -20.8425, 0.22", "-6.95987, 687.438, -20.5991, 0.22", "-7.04377, 687.645, -20.536, 0.22", "-7.39653, 688.125, -20.4163, 0.22", "-7.91036, 688.375, -20.4001, 0.66", "-8.05441, 688.404, -20.4149, 0.66", "-8.87324, 688.499, -20.5445, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "9.51021, 674.517, -28.1835, 0.29", "10.0259, 675.571, -27.9088, 0.29", "10.0839, 675.703, -27.8821, 0.29", "10.4061, 676.475, -27.7531, 0.88", "10.6737, 677.148, -27.6556, 1.25", "10.8848, 677.695, -27.5826, 1.25", "11.2054, 678.52, -27.4816, 0.44", "11.5478, 679.45, -27.3984, 0.29", "11.778, 680.073, -27.3537, 0.88", "11.9293, 680.489, -27.3384, 1.25", "11.9526, 680.553, -27.3388, 1.25", "12.1418, 681.062, -27.3496, 0.96", "12.1958, 681.203, -27.3516, 0.96", "12.4227, 681.776, -27.3615, 0.74", "12.8715, 682.905, -27.3837, 0.29", "13.1991, 683.722, -27.4012, 0.52", "13.2749, 683.917, -27.4057, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "9.51021, 674.517, -28.1835, 0.22", "8.60717, 675.343, -28.0607, 0.22", "8.55467, 675.388, -28.0558, 0.22", "7.95487, 675.884, -28.0133, 0.22", "7.90722, 675.923, -28.01, 0.22", "7.00991, 676.664, -27.9464, 0.22", "6.95663, 676.709, -27.9426, 0.22", "6.1722, 677.441, -27.9426, 0.22", "5.82884, 677.744, -27.9426, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-8.87324, 688.499, -20.5445, 0.22", "-8.63866, 689.641, -20.6958, 0.22", "-8.63314, 689.783, -20.6224, 0.22", "-8.72391, 690.403, -20.1563, 0.22", "-8.84724, 690.73, -19.8156, 0.37", "-9.12427, 691.298, -19.1303, 0.37", "-9.15123, 691.344, -19.0537, 0.37", "-9.69235, 692.21, -17.2552, 1.18", "-9.90055, 692.446, -16.6381, 1.18", "-10.2755, 692.761, -15.6028, 0.96", "-10.3742, 692.817, -15.3692, 0.96", "-11.4217, 693.259, -13.1871, 0.52", "-11.4762, 693.279, -13.0822, 0.52", "-11.83, 693.409, -12.441, 0.52", "-11.9115, 693.439, -12.2838, 0.52", "-12.4002, 693.609, -11.394, 0.74", "-12.8022, 693.742, -10.7595, 0.88", "-12.8519, 693.754, -10.7081, 0.88", "-13.6196, 694.007, -9.88789, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-8.87324, 688.499, -20.5445, 0.22", "-9.72574, 687.924, -20.7222, 0.22", "-9.80691, 687.869, -20.7391, 0.22", "-10.83, 687.179, -20.9522, 0.22", "-10.8948, 687.135, -20.9657, 0.22", "-11.5426, 686.698, -21.1007, 0.66", "-11.857, 686.485, -21.1662, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "13.2749, 683.917, -27.4057, 0.15", "14.5223, 683.781, -27.4374, 0.15", "15.2665, 683.535, -27.5007, 0.44", "15.3303, 683.507, -27.5094, 0.44", "15.9841, 683.177, -27.6483, 0.15", "16.4853, 682.921, -27.7671, 0.96", "17.0335, 682.649, -27.8954, 0.96", "18.0805, 682.066, -28.1761, 0.22", "18.2399, 681.978, -28.2217, 0.22", "19.0922, 681.538, -28.4705, 0.52", "19.6897, 681.246, -28.6468, 0.52", "20.4258, 680.943, -28.8582, 0.59", "20.6225, 680.883, -28.9208, 0.59", "21.53, 680.713, -29.2076, 0.15", "21.5966, 680.702, -29.2287, 0.15", "21.9564, 680.644, -29.4166, 0.15", "22.095, 680.619, -29.5131, 0.15", "22.9195, 680.488, -30.1768, 0.88", "23.2896, 680.434, -30.4935, 1.18", "23.7427, 680.391, -30.9237, 1.18", "25.2214, 680.296, -32.3861, 0.22", "25.2789, 680.292, -32.4424, 0.22", "25.5792, 680.263, -32.7206, 0.37", "25.641, 680.256, -32.7747, 0.37", "26.5444, 680.193, -33.5705, 0.22", "26.5918, 680.188, -33.6082, 0.22", "27.2577, 680.158, -34.0204, 0.22", "27.6102, 680.132, -34.2394, 0.74", "27.9866, 680.091, -34.4721, 1.03", "28.0658, 680.081, -34.5192, 1.03", "29.5907, 679.854, -35.3356, 0.37", "30.4349, 679.745, -35.8209, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "13.2749, 683.917, -27.4057, 0.29", "13.6432, 685.114, -27.4483, 0.29", "13.9058, 685.851, -27.475, 0.29", "13.9304, 685.913, -27.4772, 0.29", "14.2589, 686.744, -27.5063, 0.15", "14.6025, 687.614, -27.5367, 1.18", "14.7969, 688.105, -27.5539, 1.77", "15.1161, 688.785, -27.5838, 1.18", "15.3544, 689.243, -27.6062, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-13.6196, 694.007, -9.88789, 0.59", "-13.6717, 694.776, -9.66712, 0.59", "-13.677, 694.842, -9.65278, 0.59", "-13.7139, 695.32, -9.57666, 0.59", "-13.7157, 695.396, -9.56804, 0.59", "-13.6944, 695.706, -9.55414, 0.59", "-13.656, 695.89, -9.46559, 0.59", "-13.59, 696.063, -9.19561, 0.29", "-13.5207, 696.279, -8.82521, 0.22", "-13.465, 696.565, -8.32326, 0.22", "-13.4487, 696.84, -7.84525, 0.74", "-13.4841, 698.126, -5.57392, 0.74", "-13.6371, 699.513, -3.13107, 0.88", "-13.7363, 700.023, -2.22123, 0.22", "-13.8601, 700.512, -1.3676, 0.22", "-13.9823, 700.889, -0.778159, 0.22", "-14.0016, 700.937, -0.716541, 0.22", "-14.1572, 701.271, -0.521683, 0.22", "-14.1871, 701.34, -0.503857, 0.22", "-14.3953, 702.015, -0.287763, 0.22", "-14.6195, 702.951, 0.0395053, 0.81", "-14.6358, 703.003, 0.057693, 0.81", "-14.8983, 703.596, 0.240303, 0.96", "-14.9443, 703.687, 0.264456, 0.96", "-15.1792, 704.125, 0.360588, 0.96", "-15.54, 704.785, 0.47114, 0.44", "-15.8031, 705.327, 0.53433, 0.44", "-16.1757, 706.19, 0.621338, 0.22", "-16.502, 707.056, 0.705996, 0.37", "-16.7928, 707.909, 0.801489, 0.37", "-17.0143, 708.646, 0.911057, 0.37", "-17.2485, 709.52, 1.10133, 0.22", "-17.2635, 709.583, 1.11969, 0.22", "-17.389, 710.005, 1.34219, 0.22", "-17.4249, 710.09, 1.42958, 0.22", "-17.7272, 710.637, 2.3594, 0.15", "-17.8709, 710.932, 2.92228, 0.44", "-17.8829, 710.96, 2.9731, 0.44", "-18.1953, 711.837, 4.26707, 0.88", "-18.4013, 712.535, 5.09952, 0.88", "-18.4417, 712.754, 5.31267, 0.88", "-18.5384, 713.81, 6.15829, 0.37", "-18.5431, 714.448, 6.54738, 0.22", "-18.5135, 715.162, 6.89868, 0.22", "-18.451, 715.56, 7.04352, 0.59", "-18.2183, 716.629, 7.41138, 0.44", "-18.1907, 716.707, 7.44468, 0.44", "-17.7629, 717.402, 7.89511, 0.29", "-17.6971, 717.46, 7.94387, 0.29", "-16.832, 717.825, 8.32907, 0.29", "-16.7781, 717.84, 8.35051, 0.29", "-15.9492, 718.113, 8.71412, 0.81", "-15.8614, 718.156, 8.75909, 0.81", "-15.3624, 718.521, 9.07934, 0.81", "-14.6604, 719.276, 9.62034, 0.29", "-13.9864, 720.256, 10.2371, 0.29", "-13.2125, 721.638, 10.9729, 0.52", "-12.8285, 722.505, 11.3649, 1.33", "-12.4069, 723.618, 11.8433, 0.22", "-12.2384, 724.211, 12.0775, 0.74", "-12.2108, 724.357, 12.1267, 0.74", "-12.0722, 725.202, 12.2921, 0.37", "-11.9637, 725.689, 12.3303, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-13.6196, 694.007, -9.88789, 0.22", "-14.5399, 694.528, -9.66817, 0.22", "-15.1336, 694.855, -9.53121, 0.15", "-15.9151, 695.27, -9.37404, 0.15", "-16.8552, 695.77, -9.18498, 0.52", "-17.2661, 695.988, -9.10236, 0.52", "-17.84, 696.293, -8.98693, 0.52", "-18.0077, 696.38, -8.95099, 0.52", "-18.968, 696.856, -8.73455, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "15.3544, 689.243, -27.6062, 0.22", "16.6617, 687.822, -27.9709, 0.22", "17.0396, 687.352, -28.0737, 0.29", "17.719, 686.379, -28.2613, 0.22", "18.2739, 685.584, -28.4146, 0.44", "18.8096, 684.817, -28.5626, 0.22", "18.8482, 684.762, -28.5733, 0.22", "19.0044, 684.392, -28.5733, 0.44", "19.1135, 684.002, -28.5733, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "15.3544, 689.243, -27.6062, 0.29", "15.4533, 689.702, -27.5514, 0.29", "15.7283, 690.76, -27.3282, 0.29", "16.0389, 691.841, -27.049, 0.29", "16.0708, 691.939, -27.0213, 0.29", "16.4503, 692.915, -26.7218, 0.29", "16.5305, 693.098, -26.6624, 0.81", "16.9763, 693.985, -26.3551, 0.66", "17.0001, 694.025, -26.341, 0.66", "17.31, 694.515, -26.1644, 0.52", "18.1175, 695.787, -25.7441, 0.29", "18.6265, 696.609, -25.4481, 0.29", "18.8818, 697.059, -25.2969, 1.33", "19.1758, 697.62, -25.128, 1.55", "19.2051, 697.681, -25.1099, 1.55", "19.516, 698.386, -24.8644, 1.25", "20.1179, 699.854, -24.332, 0.37", "20.4575, 700.729, -23.9995, 0.29", "20.4798, 700.788, -23.9753, 0.29", "20.8253, 701.734, -23.5675, 0.29", "21.4389, 703.419, -22.8265, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-11.9637, 725.689, 12.3303, 0.44", "-11.7032, 724.456, 12.2113, 0.44", "-11.4714, 723.36, 12.1054, 0.37", "-11.3106, 722.598, 12.0318, 0.22", "-11.2967, 722.533, 12.0255, 0.22", "-11.0363, 721.3, 11.9064, 0.22", "-11.0224, 721.235, 11.9001, 0.22", "-9.58208, 711.873, 12.7999, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-11.9637, 725.689, 12.3303, 0.74", "-12.1544, 726.286, 12.3008, 0.74", "-12.3113, 727.111, 12.2638, 0.22", "-12.3238, 727.177, 12.2596, 0.22", "-12.4459, 727.875, 12.2371, 0.22", "-12.4826, 728.092, 12.2341, 0.22", "-12.5927, 728.787, 12.2408, 0.22", "-12.7296, 729.708, 12.2782, 1.4", "-12.8641, 730.939, 12.395, 0.29", "-12.9329, 731.742, 12.5252, 0.29", "-12.9387, 731.835, 12.546, 0.29", "-13.0036, 732.731, 12.7945, 0.29", "-13.0089, 732.794, 12.8167, 0.29", "-13.1053, 733.822, 13.2836, 0.81", "-13.1442, 734.43, 13.6179, 1.11", "-13.1475, 734.488, 13.6505, 1.11", "-13.203, 735.244, 14.043, 1.11", "-13.2133, 735.346, 14.0943, 1.11", "-13.2956, 735.846, 14.303, 1.11", "-13.3079, 735.898, 14.3242, 1.11", "-13.4704, 736.56, 14.576, 0.22", "-13.6489, 737.254, 14.8441, 0.29", "-13.6658, 737.315, 14.8681, 0.29", "-13.8582, 737.968, 15.1074, 0.22", "-14.2255, 739.078, 15.4903, 0.81", "-16.5758, 748.115, 17.4851, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "21.4389, 703.419, -22.8265, 1.84", "22.3689, 704.008, -23.0065, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "21.4389, 703.419, -22.8265, 0.22", "21.4051, 705.228, -23.1898, 0.22", "21.4056, 706.203, -23.3544, 0.22", "21.406, 706.26, -23.363, 0.22", "21.4177, 707.418, -23.5118, 0.59", "21.4359, 708.603, -23.65, 0.22", "21.4576, 709.497, -23.7433, 0.66", "21.4665, 709.565, -23.7392, 0.66", "21.5071, 709.773, -23.7152, 0.66", "21.6949, 710.59, -23.5816, 0.15", "21.7119, 710.654, -23.5669, 0.15", "21.8752, 711.21, -23.403, 1.18", "22.3413, 712.509, -22.9537, 0.29", "22.4979, 712.91, -22.804, 0.52", "22.5236, 712.969, -22.7795, 0.52", "22.6494, 713.207, -22.6577, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "22.3689, 704.008, -23.0065, 0.15", "22.8747, 705.67, -22.5471, 0.15", "23.1122, 706.492, -22.3454, 0.15", "23.2745, 707.053, -22.2075, 0.29", "23.3319, 707.251, -22.1588, 0.29", "23.4768, 707.753, -22.0357, 0.15", "23.5905, 708.146, -21.9391, 0.29", "23.6063, 708.247, -21.9391, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "22.3689, 704.008, -23.0065, 0.29", "22.9575, 702.666, -22.19, 0.29", "23.1335, 702.216, -21.9072, 0.29", "23.4065, 701.456, -21.4353, 0.22", "23.5089, 701.198, -21.2732, 0.52", "23.9262, 700.17, -20.6255, 0.22", "23.9436, 700.123, -20.5958, 0.22", "24.0487, 699.767, -20.377, 0.88", "24.1171, 699.545, -20.2128, 1.03", "24.4089, 698.376, -19.2417, 0.22", "24.4181, 698.314, -19.192, 0.22", "24.5294, 697.19, -18.2792, 0.22", "24.5323, 697.146, -18.2417, 0.22", "24.6316, 696.145, -17.3798, 0.22", "24.7019, 695.499, -16.8077, 0.22", "24.7923, 694.749, -16.0676, 0.22", "24.9989, 693.837, -15.097, 0.29", "25.0263, 693.774, -15.026, 0.29", "25.672, 692.81, -13.9808, 0.15", "25.7034, 692.775, -13.9446, 0.15", "26.7055, 691.94, -13.0895, 0.96", "27.0229, 691.717, -12.865, 0.96", "28.1515, 690.943, -12.1573, 0.22", "29.0783, 690.322, -11.6044, 0.22", "29.1242, 690.292, -11.5792, 0.22", "30.0339, 689.719, -11.1371, 0.22", "31.4756, 688.836, -10.598, 0.22", "32.099, 688.439, -10.3507, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "23.6063, 708.247, -21.9391, 0.37", "23.8133, 709.402, -21.6797, 0.37", "23.825, 709.467, -21.6688, 0.37", "23.8859, 709.863, -21.6201, 0.22", "24.0024, 710.737, -21.5657, 0.22", "24.0501, 711.2, -21.5518, 0.66", "24.058, 711.277, -21.5495, 0.66", "24.1368, 712.08, -21.5881, 0.52", "24.1968, 712.772, -21.6249, 0.52", "24.2475, 713.603, -21.6775, 1.33", "24.2698, 714.296, -21.7326, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "23.6063, 708.247, -21.9391, 0.29", "24.6218, 708.277, -21.4833, 0.29", "24.6768, 708.283, -21.4605, 0.29", "26.2822, 708.537, -20.8144, 0.66", "27.3182, 708.725, -20.3972, 0.15", "27.8563, 708.826, -20.1852, 0.88", "28.4398, 708.926, -19.9818, 0.88", "29.3296, 709.083, -19.6846, 0.22", "29.3869, 709.092, -19.6699, 0.22", "30.1282, 709.21, -19.5738, 0.81", "30.4449, 709.294, -19.5456, 0.81", "31.4778, 709.615, -19.4682, 0.22", "31.7602, 709.698, -19.4536, 0.96", "31.8274, 709.719, -19.4524, 0.96", "32.3828, 709.909, -19.4686, 0.52", "33.3189, 710.215, -19.4608, 0.22", "33.4146, 710.245, -19.4531, 0.22", "33.7114, 710.327, -19.404, 0.22", "33.802, 710.346, -19.3872, 0.22", "34.663, 710.489, -19.2176, 0.66", "35.9024, 710.651, -18.9647, 0.15", "35.9609, 710.656, -18.9528, 0.15", "36.761, 710.712, -18.8241, 0.15", "37.3414, 710.747, -18.7226, 0.74", "37.5088, 710.757, -18.6932, 0.74", "37.9995, 710.799, -18.6077, 0.74", "38.0687, 710.804, -18.5985, 0.74", "39.1355, 710.867, -18.4542, 0.22", "40.649, 710.908, -18.233, 0.66", "41.0226, 710.909, -18.1721, 0.66", "41.102, 710.908, -18.1581, 0.66", "41.7417, 710.88, -18.0316, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "24.2698, 714.296, -21.7326, 0.44", "24.1223, 715.462, -21.1859, 0.44", "24.0939, 716.276, -20.7588, 0.29", "24.1038, 717.077, -20.3223, 0.29", "24.1736, 718.336, -19.639, 0.81", "24.2163, 718.781, -19.4024, 1.18", "24.2419, 718.993, -19.292, 1.18", "24.5305, 720.174, -18.6937, 0.15", "24.577, 720.3, -18.6272, 0.15", "24.7628, 720.673, -18.4376, 0.66", "24.9471, 721.008, -18.3167, 0.96", "24.9733, 721.068, -18.2958, 0.96", "25.0317, 721.267, -18.2131, 0.96", "25.1909, 721.955, -17.8371, 0.29", "25.2188, 722.076, -17.7603, 0.29", "25.3425, 722.592, -17.4007, 0.29", "25.5655, 723.508, -16.7374, 0.37", "25.7399, 724.235, -16.2045, 0.52", "25.9991, 725.342, -15.3775, 0.96", "26.0147, 725.404, -15.3326, 0.96", "26.1979, 726.018, -14.9124, 1.18", "26.2658, 726.21, -14.7981, 1.18", "26.3931, 726.539, -14.6809, 1.18", "26.428, 726.633, -14.6626, 1.18", "26.6981, 727.493, -14.5676, 1.33", "26.7206, 727.566, -14.5609, 1.33", "26.8851, 728.114, -14.5231, 1.25", "27.3364, 729.62, -14.4328, 0.22", "27.59, 730.536, -14.3885, 0.22", "27.7034, 731.019, -14.3686, 0.59", "27.7264, 731.124, -14.3647, 0.59", "27.7849, 731.404, -14.355, 0.59", "27.9375, 732.232, -14.3324, 0.22", "27.9918, 732.867, -14.3324, 0.96", "28.0074, 733.636, -14.3324, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "24.2698, 714.296, -21.7326, 0.15", "25.0609, 716.636, -22.1509, 0.15", "25.0838, 716.731, -22.165, 0.15", "25.2008, 717.213, -22.227, 0.15", "25.2168, 717.289, -22.2358, 0.15", "25.3038, 717.807, -22.3013, 0.59", "25.3524, 718.143, -22.3429, 0.59", "25.5487, 720.242, -22.5686, 0.22", "25.6068, 721.074, -22.6588, 1.25", "25.6459, 721.664, -22.7114, 0.88", "25.7365, 723.198, -22.822, 0.15", "25.7638, 723.846, -22.8574, 0.15", "25.7746, 724.561, -22.8861, 0.74", "25.7673, 725.046, -22.8946, 1.11", "25.7247, 726.142, -22.9138, 0.15", "25.7037, 726.716, -22.9197, 0.96", "25.6642, 727.412, -22.9177, 1.18", "25.5201, 729.376, -22.9354, 0.15", "25.512, 729.464, -22.9368, 0.15", "25.4101, 730.375, -22.9696, 0.15", "25.4011, 730.441, -22.9736, 0.15", "25.3384, 731.0, -23.0017, 0.52", "25.3247, 731.134, -23.0056, 0.52", "25.2982, 731.42, -23.0143, 0.52", "25.2945, 731.476, -23.0165, 0.52", "25.2543, 732.422, -23.0532, 0.22", "25.2282, 733.109, -23.0822, 1.11", "25.2071, 733.75, -23.0893, 0.81", "25.1538, 735.442, -23.0743, 0.15", "25.0979, 737.238, -23.0264, 0.15", "25.0853, 737.842, -22.9894, 1.03", "25.0743, 738.516, -22.915, 0.81", "25.0627, 739.97, -22.6709, 0.22", "25.0625, 740.026, -22.658, 0.22", "25.0622, 740.952, -22.3468, 0.52", "25.0573, 741.826, -21.9883, 0.22", "25.0507, 742.608, -21.6562, 0.74", "25.0476, 743.051, -21.466, 0.74", "25.0467, 743.113, -21.4398, 0.74", "25.0436, 744.401, -20.9267, 0.22", "25.0442, 744.455, -20.9064, 0.22", "25.0832, 745.467, -20.6037, 0.66", "25.1094, 745.818, -20.5166, 0.66", "25.1157, 745.873, -20.5048, 0.66", "25.2267, 746.504, -20.4001, 0.22", "25.5116, 747.522, -20.205, 1.4", "25.911, 748.712, -19.9606, 0.15", "25.9626, 748.846, -19.9321, 0.15", "26.2431, 749.529, -19.7745, 0.15", "26.6818, 750.57, -19.5269, 0.15", "27.4787, 752.397, -19.0753, 0.15", "27.9281, 753.355, -18.8084, 1.33", "28.1138, 753.743, -18.6698, 1.47", "28.8031, 755.214, -18.1831, 0.22", "28.8793, 755.383, -18.131, 0.44", "28.9007, 755.435, -18.1197, 0.44", "29.2137, 756.308, -18.1717, 0.22", "29.5809, 757.43, -18.0969, 0.88", "30.0414, 759.175, -17.7804, 0.59", "30.1294, 759.5, -17.6795, 0.37", "30.3837, 760.365, -17.3316, 0.15", "30.7645, 761.603, -16.7563, 1.62", "31.7076, 764.395, -15.3111, 0.88", "31.9209, 764.968, -14.9691, 1.25", "32.3279, 765.992, -14.2475, 0.15", "32.4753, 766.338, -13.9915, 0.66", "32.504, 766.398, -13.9475, 0.66", "33.0443, 767.448, -13.3053, 0.22", "33.3227, 768.003, -13.1295, 0.88", "33.4294, 768.23, -13.0662, 0.88", "33.4619, 768.31, -13.0459, 0.88", "34.0437, 769.859, -12.6577, 0.22", "34.2433, 770.416, -12.524, 0.66", "34.7087, 771.849, -12.203, 0.15", "34.9283, 772.564, -12.0508, 0.15", "34.9442, 772.621, -12.0394, 0.15", "35.0537, 773.095, -11.953, 0.44", "35.1451, 773.718, -11.8636, 0.22", "35.179, 774.266, -11.8107, 0.52", "35.1666, 774.344, -11.8107, 0.52", "35.086, 774.627, -11.8107, 0.52", "34.9674, 774.96, -11.8107, 0.37", "34.9289, 775.029, -11.8107, 0.37", "34.6641, 775.327, -11.8107, 0.22", "34.1733, 775.775, -11.8107, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "28.0074, 733.636, -14.3324, 0.22", "28.2336, 734.972, -13.8671, 0.22", "28.3456, 735.65, -13.6178, 0.52", "28.6229, 737.354, -12.9726, 0.29", "28.7508, 738.148, -12.6644, 0.88", "28.859, 738.745, -12.4468, 1.18", "28.9383, 739.171, -12.3052, 1.18", "28.9836, 739.39, -12.2444, 1.18", "28.9836, 739.39, -12.2444, 1.18", "28.9959, 739.445, -12.2359, 1.18", "29.2369, 740.531, -12.0942, 0.22", "29.4331, 741.191, -11.9679, 0.44", "29.7543, 742.145, -11.7352, 0.59", "29.9406, 742.596, -11.6045, 1.11", "30.1562, 743.052, -11.4569, 1.11", "30.1821, 743.101, -11.4391, 1.11", "31.1587, 744.595, -10.7717, 0.22", "31.1998, 744.644, -10.7478, 0.22", "31.7967, 745.283, -10.4471, 0.22", "32.122, 745.631, -10.2741, 0.74", "32.167, 745.68, -10.2498, 0.74", "32.5236, 746.102, -10.0487, 0.52", "33.0561, 746.845, -9.73025, 0.22", "33.4216, 747.481, -9.42016, 0.74", "33.931, 748.619, -8.79874, 1.25", "33.9575, 748.695, -8.75662, 1.25", "34.0277, 748.968, -8.60501, 1.11", "34.1456, 749.561, -8.22549, 0.52", "34.3299, 750.441, -7.59693, 0.15", "34.3452, 750.495, -7.55337, 0.15", "34.5903, 750.906, -7.11886, 0.15", "34.6488, 750.966, -7.03526, 0.15", "35.3956, 751.566, -5.93892, 0.44", "35.703, 751.772, -5.49281, 0.66", "35.7429, 751.793, -5.43997, 0.66", "36.7274, 752.272, -4.14424, 0.22", "36.7689, 752.289, -4.0899, 0.22", "37.789, 752.733, -2.71982, 1.33", "37.908, 752.794, -2.53914, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "28.0074, 733.636, -14.3324, 0.15", "29.5052, 734.8, -14.462, 0.15", "30.0353, 735.192, -14.4881, 0.15", "30.1587, 735.278, -14.4913, 0.15", "30.75, 735.675, -14.5004, 0.44", "30.881, 735.759, -14.5005, 0.44", "31.7398, 736.296, -14.4989, 0.22", "32.1806, 736.561, -14.483, 0.44", "32.7777, 736.871, -14.4668, 0.15", "32.841, 736.901, -14.4655, 0.15", "33.4706, 737.176, -14.4574, 0.66", "33.535, 737.202, -14.4571, 0.66", "34.3907, 737.519, -14.464, 0.22", "35.0872, 737.783, -14.4834, 0.88", "35.1624, 737.81, -14.486, 0.88", "35.3642, 737.883, -14.4939, 1.11", "35.4977, 737.927, -14.5009, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "37.908, 752.794, -2.53914, 0.29", "38.2514, 754.117, -1.42122, 0.29", "38.2719, 754.171, -1.38106, 0.29", "38.6215, 754.933, -0.854232, 0.29", "38.6712, 755.019, -0.799718, 0.29", "39.0222, 755.604, -0.463701, 0.74", "39.0513, 755.651, -0.438143, 0.74", "39.3963, 756.238, -0.110414, 0.74", "39.4542, 756.342, -0.0368845, 0.74", "39.8291, 757.016, 0.484544, 0.15", "40.0093, 757.329, 0.730965, 0.15", "40.0318, 757.371, 0.764485, 0.15", "40.762, 758.8, 1.8893, 0.15", "40.9736, 759.277, 2.24998, 1.11", "41.1553, 759.75, 2.57645, 1.25", "41.5516, 760.861, 3.29921, 0.22", "41.7919, 761.52, 3.69929, 0.22", "41.8086, 761.57, 3.72501, 0.22", "42.0449, 762.287, 3.96827, 0.29", "42.2573, 763.01, 4.17255, 0.74", "42.4049, 763.518, 4.31821, 1.11", "42.4264, 763.582, 4.33592, 1.11", "42.7367, 764.272, 4.52577, 0.66", "43.1687, 765.12, 4.75421, 0.22", "43.4851, 765.619, 4.88755, 0.15", "43.9244, 766.214, 5.04268, 1.11", "44.3465, 766.762, 5.16948, 1.69", "44.3839, 766.806, 5.18107, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "37.908, 752.794, -2.53914, 0.29", "37.086, 753.632, -2.67628, 0.29", "36.867, 753.852, -2.71934, 0.29", "36.2469, 754.454, -2.83539, 0.15", "36.1136, 754.581, -2.85951, 0.15", "35.6849, 754.999, -2.93297, 0.29", "35.0244, 755.654, -3.04505, 0.15", "34.9453, 755.738, -3.06317, 0.15", "34.3134, 756.495, -3.2259, 0.15", "34.2601, 756.576, -3.24479, 0.15", "33.9481, 757.133, -3.37253, 0.15", "33.8801, 757.296, -3.41054, 0.15", "33.5157, 758.378, -3.68446, 0.15", "33.4919, 758.462, -3.70621, 0.15", "33.3122, 759.475, -3.99954, 0.15", "33.3032, 759.539, -4.01877, 0.15", "33.2605, 760.064, -4.19369, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "44.3839, 766.806, 5.18107, 0.52", "44.6861, 768.124, 6.45125, 0.52", "44.8467, 769.39, 7.61397, 0.29", "44.8585, 769.843, 7.96567, 0.96", "44.8502, 770.4, 8.3695, 1.11", "44.8459, 770.494, 8.43804, 1.11", "44.7973, 771.284, 9.02448, 0.81", "44.6875, 772.141, 9.60297, 1.11", "44.5584, 773.352, 10.33, 0.37", "44.5556, 773.401, 10.3597, 0.37", "44.5857, 774.525, 10.9865, 0.29", "44.594, 774.583, 11.019, 0.29", "44.8841, 775.316, 11.4939, 0.81", "45.1222, 775.691, 11.7778, 1.03", "45.1575, 775.736, 11.8163, 1.03", "45.4816, 776.138, 12.152, 0.96", "46.3277, 777.146, 12.9773, 0.66", "47.15, 778.149, 13.7675, 0.52", "47.7818, 778.972, 14.3896, 0.44", "48.0842, 779.41, 14.7007, 0.44", "48.3604, 779.791, 15.0056, 0.37", "48.4437, 779.895, 15.0964, 0.37", "49.075, 780.579, 15.7202, 0.37", "49.684, 781.256, 16.3207, 0.22", "50.5368, 782.138, 17.1469, 1.4", "51.7914, 783.343, 18.4024, 0.29", "52.1879, 783.69, 18.8168, 0.96", "52.5091, 783.939, 19.168, 0.96", "57.8048, 790.13, 24.5976, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "44.3839, 766.806, 5.18107, 0.22", "43.6602, 768.257, 5.31214, 0.22", "43.0185, 769.543, 5.42837, 0.22", "42.9532, 769.674, 5.4402, 0.22", "42.3909, 770.802, 5.54206, 0.22", "39.2514, 779.629, 7.49143, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L6_DBC_166d3f579a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -3.92838, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -3.92838, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.39373, -4.85786, -7.52135, 0.74 ) }
    dend_75 { pt3dadd( -7.44068, -4.9078, -7.52703, 0.74 ) }
    dend_75 { pt3dadd( -8.38138, -5.56394, -7.62169, 0.66 ) }
    dend_75 { pt3dadd( -9.30902, -5.99869, -7.69946, 0.44 ) }
    dend_75 { pt3dadd( -10.3948, -6.35523, -7.77574, 0.44 ) }
    dend_75 { pt3dadd( -11.4161, -6.52877, -7.95362, 0.44 ) }
    dend_75 { pt3dadd( -12.0755, -6.57977, -8.11098, 1.03 ) }
    dend_75 { pt3dadd( -12.8979, -6.63255, -8.38887, 1.33 ) }
    dend_75 { pt3dadd( -13.6303, -6.65027, -8.70067, 1.47 ) }
    dend_75 { pt3dadd( -14.3571, -6.69008, -9.10229, 0.66 ) }
    dend_75 { pt3dadd( -15.7518, -7.09175, -10.3005, 0.37 ) }
    dend_75 { pt3dadd( -16.0585, -7.34465, -10.7775, 0.37 ) }
    dend_75 { pt3dadd( -16.4781, -7.96065, -11.7464, 1.11 ) }
    dend_75 { pt3dadd( -16.4972, -8.00513, -11.8092, 1.11 ) }
    dend_75 { pt3dadd( -16.6108, -8.40763, -12.3192, 0.88 ) }
    dend_75 { pt3dadd( -16.7763, -9.31207, -13.3446, 0.59 ) }
    dend_75 { pt3dadd( -16.9562, -10.5132, -14.5367, 1.03 ) }
    dend_75 { pt3dadd( -16.987, -10.7211, -14.7544, 1.25 ) }
    dend_75 { pt3dadd( -17.0011, -10.7928, -14.8279, 1.25 ) }
    dend_75 { pt3dadd( -17.0761, -11.107, -15.1526, 1.25 ) }
    dend_75 { pt3dadd( -17.1056, -11.1915, -15.2449, 1.25 ) }
    dend_75 { pt3dadd( -17.5273, -12.016, -16.1271, 0.52 ) }
    dend_75 { pt3dadd( -18.0005, -12.6274, -16.792, 0.22 ) }
    dend_75 { pt3dadd( -18.3065, -12.8437, -17.1125, 0.22 ) }
    dend_75 { pt3dadd( -18.523, -12.9307, -17.2896, 0.22 ) }
    dend_75 { pt3dadd( -19.0533, -13.0573, -17.6484, 0.88 ) }
    dend_75 { pt3dadd( -19.4173, -13.134, -17.8499, 1.25 ) }
    dend_75 { pt3dadd( -19.9829, -13.2629, -18.1188, 1.25 ) }
    dend_75 { pt3dadd( -21.164, -13.6453, -18.7565, 0.29 ) }
    dend_75 { pt3dadd( -21.4991, -13.8134, -18.9805, 0.29 ) }
    dend_75 { pt3dadd( -21.9948, -14.1831, -19.3709, 0.29 ) }
    dend_75 { pt3dadd( -22.5392, -14.7275, -19.8484, 0.29 ) }
    dend_75 { pt3dadd( -23.0742, -15.363, -20.3642, 0.29 ) }
    dend_75 { pt3dadd( -23.5804, -16.0522, -20.8766, 0.52 ) }
    dend_75 { pt3dadd( -23.7781, -16.3595, -21.0806, 0.52 ) }
    dend_75 { pt3dadd( -23.952, -16.6004, -21.2459, 0.29 ) }
    dend_75 { pt3dadd( -24.2184, -16.9298, -21.5668, 0.29 ) }
    dend_75 { pt3dadd( -24.5487, -17.2854, -22.0172, 1.25 ) }
    dend_75 { pt3dadd( -24.7858, -17.5093, -22.3339, 1.47 ) }
    dend_75 { pt3dadd( -24.8227, -17.5435, -22.3853, 1.47 ) }
    dend_75 { pt3dadd( -25.0, -17.7176, -22.66, 1.47 ) }
    dend_75 { pt3dadd( -26.02, -18.8211, -24.4868, 0.22 ) }
    dend_75 { pt3dadd( -26.1791, -19.0231, -24.8149, 0.81 ) }
    dend_75 { pt3dadd( -26.3735, -19.2817, -25.2204, 0.81 ) }
    dend_75 { pt3dadd( -26.3999, -19.3144, -25.2753, 0.81 ) }
    dend_75 { pt3dadd( -26.6719, -19.5985, -25.7801, 0.96 ) }
    dend_75 { pt3dadd( -27.2868, -20.1687, -26.8905, 0.29 ) }
    dend_75 { pt3dadd( -27.327, -20.1991, -26.955, 0.29 ) }
    dend_75 { pt3dadd( -27.5635, -20.4175, -27.3756, 0.29 ) }
    dend_75 { pt3dadd( -28.23, -21.257, -28.6752, 1.92 ) }
    dend_75 { pt3dadd( -28.5761, -21.8028, -29.3952, 2.58 ) }
    dend_75 { pt3dadd( -28.9107, -22.4301, -30.132, 2.58 ) }
    dend_75 { pt3dadd( -28.9348, -22.4752, -30.1785, 2.58 ) }
    dend_75 { pt3dadd( -29.6156, -23.7189, -31.3309, 0.66 ) }
    dend_75 { pt3dadd( -30.1481, -24.5561, -32.0493, 0.22 ) }
    dend_75 { pt3dadd( -30.2603, -24.7003, -32.154, 0.81 ) }
    dend_75 { pt3dadd( -30.9254, -25.4174, -32.6781, 0.22 ) }
    dend_75 { pt3dadd( -31.7258, -26.1856, -33.2299, 2.58 ) }
    dend_75 { pt3dadd( -32.106, -26.5146, -33.4827, 3.32 ) }
    dend_75 { pt3dadd( -33.5506, -27.6417, -34.4052, 0.44 ) }
    dend_75 { pt3dadd( -34.3043, -28.2318, -34.8985, 1.33 ) }
    dend_75 { pt3dadd( -34.8871, -28.7375, -35.2888, 1.47 ) }
    dend_75 { pt3dadd( -35.5199, -29.4264, -35.7778, 0.22 ) }
    dend_75 { pt3dadd( -35.5854, -29.5149, -35.8406, 0.22 ) }
    dend_75 { pt3dadd( -35.9792, -30.0905, -36.2411, 0.22 ) }
    dend_75 { pt3dadd( -36.3666, -30.7342, -36.6459, 1.69 ) }
    dend_75 { pt3dadd( -36.5146, -30.9639, -36.792, 2.06 ) }
    dend_75 { pt3dadd( -37.5793, -32.3498, -37.8509, 0.22 ) }
    dend_75 { pt3dadd( -37.6174, -32.3918, -37.8896, 0.22 ) }
    dend_75 { pt3dadd( -38.0862, -32.9084, -38.416, 0.22 ) }
    dend_75 { pt3dadd( -38.3223, -33.1688, -38.7022, 0.88 ) }
    dend_75 { pt3dadd( -38.5495, -33.4692, -39.0641, 1.11 ) }
    dend_75 { pt3dadd( -39.4889, -34.8501, -40.7295, 0.22 ) }
    dend_75 { pt3dadd( -39.5159, -34.8969, -40.7873, 0.22 ) }
    dend_75 { pt3dadd( -39.8342, -35.524, -41.5736, 1.84 ) }
    dend_75 { pt3dadd( -39.9716, -35.8469, -41.9721, 1.99 ) }
    dend_75 { pt3dadd( -40.5619, -37.3737, -43.7684, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -40.7392, -37.8198, -44.2469, 0.29 ) }
    dend_75 { pt3dadd( -41.3448, -39.0497, -45.4419, 0.29 ) }
    dend_75 { pt3dadd( -41.4151, -39.1725, -45.5622, 0.29 ) }
    dend_75 { pt3dadd( -41.879, -39.8351, -46.2188, 1.11 ) }
    dend_75 { pt3dadd( -42.1313, -40.1459, -46.5557, 1.47 ) }
    dend_75 { pt3dadd( -42.7896, -40.8517, -47.3571, 0.29 ) }
    dend_75 { pt3dadd( -43.6727, -41.7057, -48.3977, 2.43 ) }
    dend_75 { pt3dadd( -44.3877, -42.304, -49.166, 2.43 ) }
    dend_75 { pt3dadd( -45.4898, -43.1249, -50.3272, 0.52 ) }
    dend_75 { pt3dadd( -46.3118, -43.6658, -51.1877, 0.66 ) }
    dend_75 { pt3dadd( -46.9738, -44.0616, -51.8795, 0.22 ) }
    dend_75 { pt3dadd( -47.3153, -44.242, -52.2193, 0.59 ) }
    dend_75 { pt3dadd( -47.6389, -44.402, -52.5081, 0.59 ) }
    dend_75 { pt3dadd( -48.4118, -44.804, -53.1172, 0.22 ) }
    dend_75 { pt3dadd( -48.9613, -45.1575, -53.5293, 1.18 ) }
    dend_75 { pt3dadd( -49.2087, -45.357, -53.7001, 1.33 ) }
    dend_75 { pt3dadd( -50.2047, -46.33, -54.4601, 0.37 ) }
    dend_75 { pt3dadd( -50.7935, -46.991, -54.9419, 0.22 ) }
    dend_75 { pt3dadd( -51.2731, -47.5819, -55.3399, 0.22 ) }
    dend_75 { pt3dadd( -51.8273, -48.3303, -55.7925, 1.55 ) }
    dend_75 { pt3dadd( -52.1873, -48.8548, -56.0847, 2.06 ) }
    dend_75 { pt3dadd( -53.1186, -50.3293, -56.8532, 0.22 ) }
    dend_75 { pt3dadd( -53.3082, -50.6453, -57.0009, 0.52 ) }
    dend_75 { pt3dadd( -53.5033, -50.9302, -57.1371, 0.52 ) }
    dend_75 { pt3dadd( -54.1113, -51.7235, -57.5196, 0.22 ) }
    dend_75 { pt3dadd( -54.4551, -52.1513, -57.7198, 0.22 ) }
    dend_75 { pt3dadd( -54.8322, -52.6176, -57.9602, 1.11 ) }
    dend_75 { pt3dadd( -55.1548, -53.0055, -58.1602, 1.33 ) }
    dend_75 { pt3dadd( -56.1158, -54.1102, -58.7992, 0.22 ) }
    dend_75 { pt3dadd( -56.455, -54.4761, -59.0289, 1.03 ) }
    dend_75 { pt3dadd( -56.6447, -54.6607, -59.1571, 1.03 ) }
    dend_75 { pt3dadd( -57.6652, -55.6112, -59.8319, 0.22 ) }
    dend_75 { pt3dadd( -58.0379, -55.96, -60.0693, 0.22 ) }
    dend_75 { pt3dadd( -58.3594, -56.2637, -60.2668, 1.18 ) }
    dend_75 { pt3dadd( -58.659, -56.5357, -60.4407, 1.4 ) }
    dend_75 { pt3dadd( -59.8403, -57.5774, -61.1938, 0.22 ) }
    dend_75 { pt3dadd( -60.2277, -57.9083, -61.4371, 1.11 ) }
    dend_75 { pt3dadd( -60.5177, -58.1497, -61.6129, 1.33 ) }
    dend_75 { pt3dadd( -60.7679, -58.3709, -61.7807, 1.18 ) }
    dend_75 { pt3dadd( -61.7382, -59.2836, -62.4589, 0.15 ) }
    dend_75 { pt3dadd( -62.5666, -60.098, -63.0472, 0.15 ) }
    dend_75 { pt3dadd( -62.8862, -60.4196, -63.2685, 0.81 ) }
    dend_75 { pt3dadd( -63.0807, -60.6244, -63.4304, 0.81 ) }
    dend_75 { pt3dadd( -63.8824, -61.4957, -64.1436, 0.22 ) }
    dend_75 { pt3dadd( -64.5405, -62.2372, -64.7436, 0.22 ) }
    dend_75 { pt3dadd( -65.1412, -62.937, -65.2994, 1.47 ) }
    dend_75 { pt3dadd( -65.4006, -63.2305, -65.5504, 1.84 ) }
    dend_75 { pt3dadd( -66.7909, -64.785, -67.0989, 0.15 ) }
    dend_75 { pt3dadd( -67.1278, -65.1411, -67.4991, 0.15 ) }
    dend_75 { pt3dadd( -67.3318, -65.347, -67.7657, 0.74 ) }
    dend_75 { pt3dadd( -67.4284, -65.4394, -67.8973, 0.74 ) }
    dend_75 { pt3dadd( -68.1931, -66.1131, -68.9381, 0.29 ) }
    dend_75 { pt3dadd( -68.8754, -66.6709, -69.8339, 1.25 ) }
    dend_75 { pt3dadd( -69.1411, -66.8725, -70.1516, 1.33 ) }
    dend_75 { pt3dadd( -69.9914, -67.5601, -71.3582, 0.15 ) }
    dend_75 { pt3dadd( -70.2511, -67.7803, -71.7597, 0.74 ) }
    dend_75 { pt3dadd( -70.7979, -68.2582, -72.6302, 0.22 ) }
    dend_75 { pt3dadd( -70.8268, -68.2839, -72.6752, 0.22 ) }
    dend_75 { pt3dadd( -71.0575, -68.4849, -73.0191, 0.88 ) }
    dend_75 { pt3dadd( -72.3649, -69.6213, -74.9472, 0.22 ) }
    dend_75 { pt3dadd( -72.4079, -69.658, -75.006, 0.22 ) }
    dend_75 { pt3dadd( -72.5352, -69.7576, -75.1509, 0.22 ) }
    dend_75 { pt3dadd( -73.106, -70.1622, -75.6606, 1.47 ) }
    dend_75 { pt3dadd( -73.3729, -70.3345, -75.8483, 1.84 ) }
    dend_75 { pt3dadd( -73.6101, -70.4798, -75.9733, 1.84 ) }
    dend_75 { pt3dadd( -73.8899, -70.6438, -76.0675, 1.84 ) }
    dend_75 { pt3dadd( -75.1053, -71.4619, -76.7601, 0.15 ) }
    dend_75 { pt3dadd( -75.182, -71.5134, -76.8138, 0.15 ) }
    dend_75 { pt3dadd( -75.7986, -71.8912, -77.2972, 0.15 ) }
    dend_75 { pt3dadd( -76.3263, -72.2165, -77.7295, 0.96 ) }
    dend_75 { pt3dadd( -76.6495, -72.429, -78.0029, 0.96 ) }
    dend_75 { pt3dadd( -78.3417, -73.6231, -79.4873, 0.22 ) }
    dend_75 { pt3dadd( -78.7798, -73.9734, -79.8944, 0.22 ) }
    dend_75 { pt3dadd( -79.3268, -74.4352, -80.3956, 0.22 ) }
    dend_75 { pt3dadd( -79.9468, -74.9778, -80.9354, 1.11 ) }
    dend_75 { pt3dadd( -80.3613, -75.3578, -81.2782, 1.69 ) }
    dend_75 { pt3dadd( -80.4976, -75.4961, -81.3818, 1.69 ) }
    dend_75 { pt3dadd( -81.6914, -76.8845, -82.2141, 0.22 ) }
    dend_75 { pt3dadd( -82.1148, -77.4361, -82.5298, 0.37 ) }
    dend_75 { pt3dadd( -82.5133, -77.9755, -82.8386, 0.22 ) }
    dend_75 { pt3dadd( -83.0601, -78.6847, -83.2484, 1.47 ) }
    dend_75 { pt3dadd( -83.4462, -79.1576, -83.5589, 1.69 ) }
    dend_75 { pt3dadd( -84.4321, -80.3243, -84.3524, 0.22 ) }
    dend_75 { pt3dadd( -85.2667, -81.3376, -85.0267, 0.22 ) }
    dend_75 { pt3dadd( -85.6836, -81.8481, -85.3839, 1.4 ) }
    dend_75 { pt3dadd( -86.0798, -82.3341, -85.7358, 1.84 ) }
    dend_75 { pt3dadd( -87.3652, -83.8568, -86.8846, 0.15 ) }
    dend_75 { pt3dadd( -87.8159, -84.3667, -87.295, 0.15 ) }
    dend_75 { pt3dadd( -88.2424, -84.8252, -87.6874, 1.18 ) }
    dend_75 { pt3dadd( -88.4747, -85.0748, -87.9093, 1.18 ) }
    dend_75 { pt3dadd( -88.508, -85.1114, -87.941, 1.18 ) }
    dend_75 { pt3dadd( -89.5558, -86.3487, -88.9368, 0.22 ) }
    dend_75 { pt3dadd( -90.0494, -86.9889, -89.3653, 1.25 ) }
    dend_75 { pt3dadd( -90.7526, -87.9128, -90.0001, 0.15 ) }
    dend_75 { pt3dadd( -91.0361, -88.2495, -90.254, 0.88 ) }
    dend_75 { pt3dadd( -91.1832, -88.4145, -90.3796, 1.03 ) }
    dend_75 { pt3dadd( -91.642, -88.9084, -90.7466, 0.15 ) }
    dend_75 { pt3dadd( -92.1665, -89.4463, -91.1249, 0.15 ) }
    dend_75 { pt3dadd( -92.587, -89.8387, -91.4401, 0.74 ) }
    dend_75 { pt3dadd( -93.3818, -90.5184, -92.0341, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -94.0663, -91.1057, -92.5446, 0.22 ) }
    dend_75 { pt3dadd( -94.6803, -91.6353, -93.0006, 1.99 ) }
    dend_75 { pt3dadd( -94.9581, -91.8821, -93.2052, 2.28 ) }
    dend_75 { pt3dadd( -96.5067, -93.3513, -94.3179, 0.22 ) }
    dend_75 { pt3dadd( -96.7211, -93.5838, -94.472, 0.52 ) }
    dend_75 { pt3dadd( -97.4318, -94.406, -94.9498, 0.15 ) }
    dend_75 { pt3dadd( -97.4736, -94.4534, -94.9774, 0.15 ) }
    dend_75 { pt3dadd( -97.803, -94.807, -95.1682, 0.81 ) }
    dend_75 { pt3dadd( -97.8414, -94.8474, -95.186, 0.81 ) }
    dend_75 { pt3dadd( -98.9184, -95.9628, -95.5304, 0.22 ) }
    dend_75 { pt3dadd( -99.7077, -96.7923, -95.837, 0.22 ) }
    dend_75 { pt3dadd( -99.7608, -96.8461, -95.8589, 0.22 ) }
    dend_75 { pt3dadd( -100.515, -97.6406, -96.1764, 0.22 ) }
    dend_75 { pt3dadd( -101.042, -98.2062, -96.4324, 0.81 ) }
    dend_75 { pt3dadd( -101.09, -98.2617, -96.4576, 0.81 ) }
    dend_75 { pt3dadd( -101.898, -99.2775, -96.9448, 0.22 ) }
    dend_75 { pt3dadd( -102.367, -99.8767, -97.2482, 1.47 ) }
    dend_75 { pt3dadd( -102.537, -100.09, -97.3545, 1.77 ) }
    dend_75 { pt3dadd( -103.831, -101.669, -98.1484, 0.22 ) }
    dend_75 { pt3dadd( -104.211, -102.103, -98.3725, 0.52 ) }
    dend_75 { pt3dadd( -105.079, -103.032, -98.8414, 0.22 ) }
    dend_75 { pt3dadd( -106.141, -104.089, -99.3586, 0.22 ) }
    dend_75 { pt3dadd( -106.686, -104.614, -99.625, 1.18 ) }
    dend_75 { pt3dadd( -106.852, -104.771, -99.7034, 1.4 ) }
    dend_75 { pt3dadd( -108.137, -106.031, -100.396, 0.15 ) }
    dend_75 { pt3dadd( -108.428, -106.326, -100.574, 0.66 ) }
    dend_75 { pt3dadd( -109.86, -107.846, -101.529, 0.15 ) }
    dend_75 { pt3dadd( -110.546, -108.608, -102.056, 1.69 ) }
    dend_75 { pt3dadd( -110.757, -108.846, -102.227, 1.84 ) }
    dend_75 { pt3dadd( -112.291, -110.657, -103.539, 0.22 ) }
    dend_75 { pt3dadd( -112.576, -111.017, -103.809, 0.66 ) }
    dend_75 { pt3dadd( -112.615, -111.071, -103.853, 0.66 ) }
    dend_75 { pt3dadd( -113.001, -111.648, -104.365, 0.15 ) }
    dend_75 { pt3dadd( -113.168, -111.883, -104.58, 0.59 ) }
    dend_75 { pt3dadd( -113.221, -111.954, -104.647, 0.59 ) }
    dend_75 { pt3dadd( -113.868, -112.777, -105.404, 0.22 ) }
    dend_75 { pt3dadd( -114.455, -113.508, -106.118, 1.33 ) }
    dend_75 { pt3dadd( -115.068, -114.292, -106.894, 0.15 ) }
    dend_75 { pt3dadd( -115.346, -114.674, -107.275, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.26762, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.32448, 6.12273, -8.65322, 1.18 ) }
    dend_70 { pt3dadd( 4.36731, 7.32014, -8.27696, 1.47 ) }
    dend_70 { pt3dadd( 4.39283, 8.25196, -8.08886, 1.92 ) }
    dend_70 { pt3dadd( 4.40692, 9.51278, -7.97713, 0.81 ) }
    dend_70 { pt3dadd( 4.40262, 10.5599, -7.97885, 0.81 ) }
    dend_70 { pt3dadd( 4.39234, 11.229, -8.03157, 0.74 ) }
    dend_70 { pt3dadd( 4.38691, 11.3383, -8.06504, 0.74 ) }
    dend_70 { pt3dadd( 4.26849, 12.5878, -8.73067, 0.74 ) }
    dend_70 { pt3dadd( 4.19156, 13.2753, -9.25577, 1.11 ) }
    dend_70 { pt3dadd( 4.14931, 13.6873, -9.66885, 1.11 ) }
    dend_70 { pt3dadd( 4.10615, 14.2866, -10.3424, 1.11 ) }
    dend_70 { pt3dadd( 4.09009, 15.391, -11.5436, 1.25 ) }
    dend_70 { pt3dadd( 4.09128, 15.4314, -11.5858, 1.25 ) }
    dend_70 { pt3dadd( 4.19169, 16.4228, -12.5666, 1.03 ) }
    dend_70 { pt3dadd( 4.36997, 17.5216, -13.5937, 0.52 ) }
    dend_70 { pt3dadd( 4.6225, 18.6497, -14.5637, 0.52 ) }
    dend_70 { pt3dadd( 4.8426, 19.4074, -15.1423, 0.81 ) }
    dend_70 { pt3dadd( 4.85985, 19.4552, -15.1701, 0.81 ) }
    dend_70 { pt3dadd( 5.09441, 20.0292, -15.4445, 1.18 ) }
    dend_70 { pt3dadd( 5.2205, 20.2646, -15.5045, 1.18 ) }
    dend_70 { pt3dadd( 5.41655, 20.5613, -15.506, 1.18 ) }
    dend_70 { pt3dadd( 5.45672, 20.6164, -15.5007, 1.18 ) }
    dend_70 { pt3dadd( 5.60104, 20.8259, -15.4859, 1.4 ) }
    dend_70 { pt3dadd( 5.67824, 20.964, -15.4752, 1.4 ) }
    dend_70 { pt3dadd( 5.90415, 21.4791, -15.4324, 1.4 ) }
    dend_70 { pt3dadd( 6.08418, 22.0162, -15.3814, 0.88 ) }
    dend_70 { pt3dadd( 6.25889, 22.8614, -15.2935, 0.52 ) }
    dend_70 { pt3dadd( 6.29539, 23.6423, -15.2866, 0.37 ) }
    dend_70 { pt3dadd( 6.22334, 24.4688, -15.3855, 0.37 ) }
    dend_70 { pt3dadd( 6.15339, 24.837, -15.4674, 0.29 ) }
    dend_70 { pt3dadd( 5.96392, 25.4913, -15.6817, 0.29 ) }
    dend_70 { pt3dadd( 5.83241, 25.8741, -15.8701, 0.29 ) }
    dend_70 { pt3dadd( 5.42764, 27.0966, -16.8144, 1.33 ) }
    dend_70 { pt3dadd( 5.20771, 27.7784, -17.4302, 1.92 ) }
    dend_70 { pt3dadd( 5.16551, 27.9479, -17.6004, 2.21 ) }
    dend_70 { pt3dadd( 5.1463, 28.0779, -17.7357, 2.21 ) }
    dend_70 { pt3dadd( 5.12224, 28.7899, -18.4925, 2.5 ) }
    dend_70 { pt3dadd( 5.16207, 29.7208, -19.549, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 9.48563, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 9.48563, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 0.970905, 11.4083, -2.81767, 2.8 ) }
    dend_21 { pt3dadd( 0.927556, 11.5353, -2.84506, 2.8 ) }
    dend_21 { pt3dadd( 0.661266, 12.3086, -3.02318, 2.8 ) }
    dend_21 { pt3dadd( 0.541339, 12.6411, -3.10312, 2.8 ) }
    dend_21 { pt3dadd( 0.26527, 13.3894, -3.28896, 2.8 ) }
    dend_21 { pt3dadd( -0.150932, 14.4586, -3.57997, 3.02 ) }
    dend_21 { pt3dadd( -0.733681, 15.8352, -4.01783, 3.02 ) }
    dend_21 { pt3dadd( -0.756165, 15.8851, -4.03619, 3.02 ) }
    dend_21 { pt3dadd( -1.2484, 16.9069, -4.44371, 3.02 ) }
    dend_21 { pt3dadd( -1.27232, 16.9557, -4.46349, 3.02 ) }
    dend_21 { pt3dadd( -1.82805, 18.0689, -4.92932, 2.87 ) }
    dend_21 { pt3dadd( -2.34444, 19.1502, -5.32872, 2.87 ) }
    dend_21 { pt3dadd( -2.36782, 19.2011, -5.3425, 2.87 ) }
    dend_21 { pt3dadd( -2.85227, 20.3054, -5.57344, 2.73 ) }
    dend_21 { pt3dadd( -3.35762, 21.49, -5.75631, 2.58 ) }
    dend_21 { pt3dadd( -3.38387, 21.5512, -5.76405, 2.58 ) }
    dend_21 { pt3dadd( -4.10656, 23.2245, -5.91904, 2.36 ) }
    dend_21 { pt3dadd( -4.83128, 24.8582, -6.03932, 2.06 ) }
    dend_21 { pt3dadd( -5.49413, 26.28, -6.13778, 2.06 ) }
    dend_21 { pt3dadd( -5.92568, 27.1887, -6.19913, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -6.69572, 28.7652, -6.29554, 2.73 ) }
    dend_21 { pt3dadd( -7.3264, 30.0258, -6.37614, 2.95 ) }
    dend_21 { pt3dadd( -7.91339, 31.1339, -6.46209, 3.17 ) }
    dend_21 { pt3dadd( -8.45043, 32.1007, -6.55137, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -10.1699, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -10.1699, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.17673, -11.7569, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -4.81564, -13.2743, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.532278 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.532278 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532278 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.16207, 29.7208, -19.549, 1.25 ) }
    dend_74 { pt3dadd( 4.79964, 30.598, -20.3375, 1.25 ) }
    dend_74 { pt3dadd( 4.50244, 31.4593, -21.098, 1.77 ) }
    dend_74 { pt3dadd( 4.43842, 31.6683, -21.2827, 1.84 ) }
    dend_74 { pt3dadd( 4.22636, 32.7867, -22.4612, 0.22 ) }
    dend_74 { pt3dadd( 4.18745, 33.5576, -23.4304, 1.33 ) }
    dend_74 { pt3dadd( 4.19058, 33.5964, -23.4905, 1.33 ) }
    dend_74 { pt3dadd( 4.24296, 33.7776, -23.8339, 1.77 ) }
    dend_74 { pt3dadd( 4.26698, 33.8276, -23.939, 1.77 ) }
    dend_74 { pt3dadd( 4.75423, 34.5909, -25.7155, 1.18 ) }
    dend_74 { pt3dadd( 5.15705, 35.0755, -26.9819, 1.4 ) }
    dend_74 { pt3dadd( 5.72186, 35.6835, -28.8944, 0.29 ) }
    dend_74 { pt3dadd( 5.73717, 35.7001, -28.9498, 0.29 ) }
    dend_74 { pt3dadd( 6.17924, 36.1897, -30.6053, 1.55 ) }
    dend_74 { pt3dadd( 6.23022, 36.2561, -30.8137, 1.84 ) }
    dend_74 { pt3dadd( 6.24478, 36.2806, -30.8771, 1.84 ) }
    dend_74 { pt3dadd( 6.86668, 37.6416, -33.7588, 0.52 ) }
    dend_74 { pt3dadd( 6.88123, 37.6797, -33.8178, 0.52 ) }
    dend_74 { pt3dadd( 6.96269, 37.9274, -34.1281, 0.74 ) }
    dend_74 { pt3dadd( 7.48904, 39.7536, -36.0596, 1.47 ) }
    dend_74 { pt3dadd( 7.73243, 40.6488, -36.8378, 0.29 ) }
    dend_74 { pt3dadd( 7.96187, 41.5323, -37.4455, 1.69 ) }
    dend_74 { pt3dadd( 8.42006, 43.5821, -38.5874, 0.15 ) }
    dend_74 { pt3dadd( 8.53552, 44.207, -38.9289, 0.66 ) }
    dend_74 { pt3dadd( 8.5442, 44.2657, -38.9605, 0.66 ) }
    dend_74 { pt3dadd( 8.67301, 45.4009, -39.5909, 0.15 ) }
    dend_74 { pt3dadd( 8.73713, 46.2104, -40.0977, 1.69 ) }
    dend_74 { pt3dadd( 8.83875, 48.5919, -41.6662, 0.22 ) }
    dend_74 { pt3dadd( 8.8413, 49.1825, -42.0909, 0.59 ) }
    dend_74 { pt3dadd( 8.83414, 50.454, -43.0676, 1.92 ) }
    dend_74 { pt3dadd( 8.80598, 52.4347, -44.6561, 0.15 ) }
    dend_74 { pt3dadd( 8.8033, 52.5396, -44.7444, 0.15 ) }
    dend_74 { pt3dadd( 8.80214, 53.0148, -45.1625, 0.37 ) }
    dend_74 { pt3dadd( 8.81549, 53.7452, -45.8431, 0.22 ) }
    dend_74 { pt3dadd( 8.84409, 54.5177, -46.6681, 1.11 ) }
    dend_74 { pt3dadd( 8.84493, 54.5641, -46.722, 1.11 ) }
    dend_74 { pt3dadd( 8.8443, 54.8834, -47.1061, 1.25 ) }
    dend_74 { pt3dadd( 8.82949, 56.1854, -48.7307, 0.22 ) }
    dend_74 { pt3dadd( 8.80865, 57.0693, -49.8451, 0.96 ) }
    dend_74 { pt3dadd( 8.76099, 58.0513, -51.0168, 0.15 ) }
    dend_74 { pt3dadd( 8.71898, 58.8765, -51.9382, 1.18 ) }
    dend_74 { pt3dadd( 8.7082, 59.0376, -52.1035, 1.47 ) }
    dend_74 { pt3dadd( 8.61593, 60.2209, -53.1569, 0.22 ) }
    dend_74 { pt3dadd( 8.5791, 60.5682, -53.3941, 0.44 ) }
    dend_74 { pt3dadd( 8.50136, 61.2525, -53.7486, 0.15 ) }
    dend_74 { pt3dadd( 8.36361, 62.1889, -54.1307, 1.11 ) }
    dend_74 { pt3dadd( 8.2963, 62.5912, -54.2713, 1.47 ) }
    dend_74 { pt3dadd( 8.03982, 64.2937, -54.7661, 0.22 ) }
    dend_74 { pt3dadd( 7.94529, 64.9689, -54.9236, 0.74 ) }
    dend_74 { pt3dadd( 7.81027, 66.0014, -55.1552, 0.15 ) }
    dend_74 { pt3dadd( 7.71867, 66.8023, -55.3282, 1.11 ) }
    dend_74 { pt3dadd( 7.68113, 67.1448, -55.396, 1.55 ) }
    dend_74 { pt3dadd( 7.37439, 70.1898, -55.9654, 0.15 ) }
    dend_74 { pt3dadd( 7.3104, 70.8912, -56.0805, 0.66 ) }
    dend_74 { pt3dadd( 7.28623, 71.2328, -56.1383, 0.66 ) }
    dend_74 { pt3dadd( 7.18545, 73.2275, -56.4802, 0.15 ) }
    dend_74 { pt3dadd( 7.16133, 73.8588, -56.5821, 0.37 ) }
    dend_74 { pt3dadd( 7.15781, 73.9427, -56.5958, 0.37 ) }
    dend_74 { pt3dadd( 7.12947, 74.2956, -56.6506, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.16207, 29.7208, -19.549, 0.37 ) }
    dend_71 { pt3dadd( 5.68842, 31.107, -19.6838, 0.37 ) }
    dend_71 { pt3dadd( 6.06985, 32.352, -19.8057, 0.37 ) }
    dend_71 { pt3dadd( 6.33393, 33.4558, -19.9121, 0.37 ) }
    dend_71 { pt3dadd( 6.34576, 33.5313, -19.9192, 0.37 ) }
    dend_71 { pt3dadd( 6.37825, 34.068, -19.9669, 0.37 ) }
    dend_71 { pt3dadd( 6.37806, 34.134, -19.9755, 0.37 ) }
    dend_71 { pt3dadd( 6.20902, 34.9178, -20.137, 0.66 ) }
    dend_71 { pt3dadd( 6.09782, 35.195, -20.2075, 0.81 ) }
    dend_71 { pt3dadd( 5.91784, 35.6563, -20.3318, 0.81 ) }
    dend_71 { pt3dadd( 5.76595, 36.155, -20.4578, 0.37 ) }
    dend_71 { pt3dadd( 5.59956, 36.9442, -20.6272, 0.29 ) }
    dend_71 { pt3dadd( 5.59119, 37.0098, -20.6395, 0.29 ) }
    dend_71 { pt3dadd( 5.5426, 37.8169, -20.7735, 0.29 ) }
    dend_71 { pt3dadd( 5.52195, 39.1201, -20.9549, 1.84 ) }
    dend_71 { pt3dadd( 5.53368, 39.6172, -21.0087, 2.36 ) }
    dend_71 { pt3dadd( 5.5953, 40.7431, -21.096, 1.55 ) }
    dend_71 { pt3dadd( 5.68204, 42.0376, -21.1534, 1.92 ) }
    dend_71 { pt3dadd( 5.72923, 42.541, -21.172, 2.5 ) }
    dend_71 { pt3dadd( 5.83766, 43.3413, -21.2054, 1.99 ) }
    dend_71 { pt3dadd( 6.03614, 44.4917, -21.2524, 0.22 ) }
    dend_71 { pt3dadd( 6.16281, 45.2344, -21.2939, 0.22 ) }
    dend_71 { pt3dadd( 6.24529, 45.7553, -21.3257, 0.88 ) }
    dend_71 { pt3dadd( 6.30153, 46.1962, -21.3581, 0.59 ) }
    dend_71 { pt3dadd( 6.37916, 47.0064, -21.4263, 0.29 ) }
    dend_71 { pt3dadd( 6.43927, 47.9104, -21.5087, 0.29 ) }
    dend_71 { pt3dadd( 6.49035, 48.9655, -21.607, 0.29 ) }
    dend_71 { pt3dadd( 6.52888, 49.8923, -21.6974, 0.29 ) }
    dend_71 { pt3dadd( 6.57151, 50.886, -21.7902, 1.18 ) }
    dend_71 { pt3dadd( 6.60495, 51.4803, -21.8338, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 6.65601, 52.0757, -21.867, 1.4 ) }
    dend_71 { pt3dadd( 6.74358, 52.7223, -21.901, 0.88 ) }
    dend_71 { pt3dadd( 6.93542, 53.8529, -21.959, 0.29 ) }
    dend_71 { pt3dadd( 7.11613, 54.835, -22.0039, 0.29 ) }
    dend_71 { pt3dadd( 7.4304, 56.4365, -22.0565, 2.14 ) }
    dend_71 { pt3dadd( 7.55688, 57.0859, -22.0773, 3.09 ) }
    dend_71 { pt3dadd( 7.67333, 57.6982, -22.0947, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -8.45043, 32.1007, -6.55137, 1.62 ) }
    dend_25 { pt3dadd( -8.84512, 33.9228, -6.94, 1.62 ) }
    dend_25 { pt3dadd( -8.85182, 33.989, -6.94947, 1.62 ) }
    dend_25 { pt3dadd( -8.94613, 34.9225, -7.08284, 1.62 ) }
    dend_25 { pt3dadd( -8.96637, 35.1228, -7.11146, 1.62 ) }
    dend_25 { pt3dadd( -9.05786, 36.0284, -7.24084, 1.62 ) }
    dend_25 { pt3dadd( -9.06385, 36.0877, -7.24931, 1.62 ) }
    dend_25 { pt3dadd( -8.98412, 37.5465, -7.24931, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -8.45043, 32.1007, -6.55137, 0.66 ) }
    dend_22 { pt3dadd( -7.18808, 34.2575, -5.59061, 0.66 ) }
    dend_22 { pt3dadd( -6.71579, 34.9695, -5.45916, 0.59 ) }
    dend_22 { pt3dadd( -6.25844, 35.6214, -5.40849, 1.03 ) }
    dend_22 { pt3dadd( -6.1719, 35.7471, -5.40736, 1.03 ) }
    dend_22 { pt3dadd( -5.98019, 36.0494, -5.41741, 1.18 ) }
    dend_22 { pt3dadd( -5.31502, 37.2593, -5.50999, 0.81 ) }
    dend_22 { pt3dadd( -4.89234, 38.0854, -5.72822, 0.66 ) }
    dend_22 { pt3dadd( -4.86288, 38.1542, -5.74802, 0.66 ) }
    dend_22 { pt3dadd( -4.6032, 38.9422, -5.91592, 0.66 ) }
    dend_22 { pt3dadd( -4.37702, 39.8485, -6.03844, 0.88 ) }
    dend_22 { pt3dadd( -4.1786, 41.0839, -6.11265, 1.4 ) }
    dend_22 { pt3dadd( -4.15369, 41.3988, -6.10694, 1.77 ) }
    dend_22 { pt3dadd( -4.13295, 42.0887, -6.06028, 2.14 ) }
    dend_22 { pt3dadd( -4.11875, 43.4211, -5.82782, 1.77 ) }
    dend_22 { pt3dadd( -4.08489, 44.2844, -5.51766, 1.25 ) }
    dend_22 { pt3dadd( -4.03235, 44.9755, -5.15388, 1.03 ) }
    dend_22 { pt3dadd( -3.94119, 45.5418, -4.73817, 0.81 ) }
    dend_22 { pt3dadd( -3.77309, 46.2522, -4.10681, 0.81 ) }
    dend_22 { pt3dadd( -3.39436, 47.303, -2.95475, 0.59 ) }
    dend_22 { pt3dadd( -2.85981, 48.2779, -1.65429, 0.59 ) }
    dend_22 { pt3dadd( -2.83203, 48.3165, -1.59041, 0.59 ) }
    dend_22 { pt3dadd( -2.4032, 48.7624, -0.668079, 1.77 ) }
    dend_22 { pt3dadd( -2.37762, 48.7812, -0.617542, 1.77 ) }
    dend_22 { pt3dadd( -2.0874, 48.9015, -0.131092, 1.92 ) }
    dend_22 { pt3dadd( -2.04411, 48.9052, -0.0762192, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.81564, -13.2743, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.18051, -13.9472, 0.614511, 0.37 ) }
    dend_14 { pt3dadd( -7.0009, -14.5271, 0.556358, 0.37 ) }
    dend_14 { pt3dadd( -8.00728, -15.5672, 0.834917, 0.37 ) }
    dend_14 { pt3dadd( -8.3518, -16.1715, 1.2122, 0.66 ) }
    dend_14 { pt3dadd( -8.51243, -16.5542, 1.52086, 0.96 ) }
    dend_14 { pt3dadd( -8.53263, -16.6005, 1.5711, 0.96 ) }
    dend_14 { pt3dadd( -8.90144, -17.9075, 3.42048, 0.59 ) }
    dend_14 { pt3dadd( -8.90854, -17.9364, 3.47172, 0.59 ) }
    dend_14 { pt3dadd( -9.03778, -18.2651, 4.24492, 1.25 ) }
    dend_14 { pt3dadd( -9.10407, -18.3444, 4.47102, 1.25 ) }
    dend_14 { pt3dadd( -9.67797, -18.7737, 5.72665, 0.59 ) }
    dend_14 { pt3dadd( -9.96921, -18.9598, 6.17947, 0.96 ) }
    dend_14 { pt3dadd( -10.0204, -18.9879, 6.23428, 0.96 ) }
    dend_14 { pt3dadd( -10.4653, -19.3508, 6.80366, 0.96 ) }
    dend_14 { pt3dadd( -10.7968, -19.7703, 7.3205, 0.59 ) }
    dend_14 { pt3dadd( -11.0024, -20.2781, 7.83064, 0.29 ) }
    dend_14 { pt3dadd( -11.0824, -20.9035, 8.37437, 0.29 ) }
    dend_14 { pt3dadd( -11.1247, -21.4668, 8.89035, 1.11 ) }
    dend_14 { pt3dadd( -11.2092, -22.5581, 9.93631, 0.22 ) }
    dend_14 { pt3dadd( -11.2348, -22.8265, 10.2025, 1.25 ) }
    dend_14 { pt3dadd( -11.3359, -23.2503, 10.6557, 1.55 ) }
    dend_14 { pt3dadd( -11.3776, -23.3289, 10.7468, 1.55 ) }
    dend_14 { pt3dadd( -12.1527, -24.0145, 11.6226, 0.59 ) }
    dend_14 { pt3dadd( -12.4492, -24.2087, 11.853, 0.74 ) }
    dend_14 { pt3dadd( -12.9558, -24.4885, 12.1588, 0.74 ) }
    dend_14 { pt3dadd( -13.6678, -24.8811, 12.5716, 0.59 ) }
    dend_14 { pt3dadd( -13.7714, -24.9526, 12.6355, 0.59 ) }
    dend_14 { pt3dadd( -14.3823, -25.6642, 13.115, 0.59 ) }
    dend_14 { pt3dadd( -14.522, -26.1377, 13.3851, 1.11 ) }
    dend_14 { pt3dadd( -14.5659, -26.5105, 13.6238, 1.18 ) }
    dend_14 { pt3dadd( -14.5707, -26.5925, 13.6798, 1.18 ) }
    dend_14 { pt3dadd( -14.6592, -27.483, 14.3553, 0.59 ) }
    dend_14 { pt3dadd( -14.8141, -28.1937, 14.9558, 0.59 ) }
    dend_14 { pt3dadd( -15.1616, -28.8965, 15.654, 0.44 ) }
    dend_14 { pt3dadd( -15.5599, -29.2531, 16.1542, 0.74 ) }
    dend_14 { pt3dadd( -15.9669, -29.4204, 16.5134, 0.88 ) }
    dend_14 { pt3dadd( -16.8769, -29.6026, 17.1569, 0.44 ) }
    dend_14 { pt3dadd( -17.3837, -29.6307, 17.4295, 0.44 ) }
    dend_14 { pt3dadd( -18.011, -29.638, 17.7018, 0.44 ) }
    dend_14 { pt3dadd( -18.0683, -29.6403, 17.7193, 0.44 ) }
    dend_14 { pt3dadd( -18.8011, -29.7376, 17.8891, 0.88 ) }
    dend_14 { pt3dadd( -18.8794, -29.7561, 17.9061, 0.88 ) }
    dend_14 { pt3dadd( -19.751, -30.0245, 18.0475, 1.18 ) }
    dend_14 { pt3dadd( -20.1697, -30.1789, 18.1046, 1.11 ) }
    dend_14 { pt3dadd( -20.8192, -30.4367, 18.1719, 0.59 ) }
    dend_14 { pt3dadd( -21.4302, -30.6942, 18.2138, 0.44 ) }
    dend_14 { pt3dadd( -21.4846, -30.7183, 18.2149, 0.44 ) }
    dend_14 { pt3dadd( -22.3059, -31.1518, 18.2311, 0.66 ) }
    dend_14 { pt3dadd( -22.851, -31.5317, 18.244, 0.37 ) }
    dend_14 { pt3dadd( -23.174, -31.8558, 18.2598, 1.03 ) }
    dend_14 { pt3dadd( -23.3396, -32.1351, 18.276, 1.03 ) }
    dend_14 { pt3dadd( -23.377, -32.2532, 18.2829, 1.03 ) }
    dend_14 { pt3dadd( -23.6141, -33.3305, 18.3499, 0.37 ) }
    dend_14 { pt3dadd( -23.6641, -33.958, 18.3969, 0.44 ) }
    dend_14 { pt3dadd( -23.6586, -34.4499, 18.44, 0.74 ) }
    dend_14 { pt3dadd( -23.6285, -34.8533, 18.48, 0.88 ) }
    dend_14 { pt3dadd( -23.554, -35.5908, 18.5651, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.81564, -13.2743, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -4.82808, -13.3203, 0.997704, 3.09 ) }
    dend_1 { pt3dadd( -5.17403, -14.6443, 0.975215, 2.8 ) }
    dend_1 { pt3dadd( -5.63239, -16.4159, 0.951142, 2.43 ) }
    dend_1 { pt3dadd( -6.0017, -17.8434, 0.931746, 2.43 ) }
    dend_1 { pt3dadd( -6.01841, -17.9079, 0.930868, 2.43 ) }
    dend_1 { pt3dadd( -6.5471, -19.9514, 0.903101, 2.43 ) }
    dend_1 { pt3dadd( -6.82956, -21.0614, 0.897138, 2.87 ) }
    dend_1 { pt3dadd( -7.05654, -21.9708, 0.911928, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.15 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 7.67333, 57.6982, -22.0947, 0.29 ) }
    dend_73 { pt3dadd( 8.61202, 59.3585, -22.4734, 0.29 ) }
    dend_73 { pt3dadd( 9.03889, 59.977, -22.6704, 0.29 ) }
    dend_73 { pt3dadd( 9.49088, 60.6168, -22.9024, 0.37 ) }
    dend_73 { pt3dadd( 9.53396, 60.6776, -22.9259, 0.37 ) }
    dend_73 { pt3dadd( 9.85036, 61.1556, -23.1118, 0.37 ) }
    dend_73 { pt3dadd( 9.8798, 61.2021, -23.1302, 0.37 ) }
    dend_73 { pt3dadd( 10.2652, 61.922, -23.4764, 0.22 ) }
    dend_73 { pt3dadd( 10.4596, 62.3363, -23.7115, 0.44 ) }
    dend_73 { pt3dadd( 10.4749, 62.3939, -23.7488, 0.44 ) }
    dend_73 { pt3dadd( 10.566, 62.8777, -24.0626, 0.66 ) }
    dend_73 { pt3dadd( 10.5759, 62.9267, -24.0916, 0.66 ) }
    dend_73 { pt3dadd( 10.7339, 63.5139, -24.4465, 0.96 ) }
    dend_73 { pt3dadd( 10.7547, 63.5785, -24.5052, 0.96 ) }
    dend_73 { pt3dadd( 11.0359, 64.4068, -25.3405, 0.22 ) }
    dend_73 { pt3dadd( 11.054, 64.4613, -25.3969, 0.22 ) }
    dend_73 { pt3dadd( 11.3207, 65.2339, -26.1896, 1.92 ) }
    dend_73 { pt3dadd( 11.6063, 65.9479, -26.9238, 2.36 ) }
    dend_73 { pt3dadd( 12.6291, 68.2028, -29.2438, 0.44 ) }
    dend_73 { pt3dadd( 12.791, 68.5391, -29.5866, 0.44 ) }
    dend_73 { pt3dadd( 12.9118, 68.7762, -29.8238, 0.44 ) }
    dend_73 { pt3dadd( 13.1717, 69.2935, -30.3106, 0.22 ) }
    dend_73 { pt3dadd( 13.4991, 69.9579, -30.8811, 0.22 ) }
    dend_73 { pt3dadd( 13.8882, 70.7045, -31.4298, 0.74 ) }
    dend_73 { pt3dadd( 13.924, 70.7644, -31.4689, 0.74 ) }
    dend_73 { pt3dadd( 14.0291, 70.9372, -31.5989, 0.74 ) }
    dend_73 { pt3dadd( 14.5662, 71.8253, -32.3525, 0.22 ) }
    dend_73 { pt3dadd( 14.9903, 72.597, -33.0433, 1.33 ) }
    dend_73 { pt3dadd( 15.3167, 73.2637, -33.6349, 1.77 ) }
    dend_73 { pt3dadd( 15.9034, 74.5447, -34.7575, 0.22 ) }
    dend_73 { pt3dadd( 16.1525, 75.088, -35.2198, 0.22 ) }
    dend_73 { pt3dadd( 16.4895, 75.8151, -35.8142, 0.22 ) }
    dend_73 { pt3dadd( 16.8804, 76.6364, -36.4599, 1.92 ) }
    dend_73 { pt3dadd( 17.0334, 76.9634, -36.696, 2.28 ) }
    dend_73 { pt3dadd( 17.9974, 78.9478, -37.9608, 0.22 ) }
    dend_73 { pt3dadd( 18.3801, 79.6888, -38.3807, 0.22 ) }
    dend_73 { pt3dadd( 18.6592, 80.1772, -38.6395, 0.88 ) }
    dend_73 { pt3dadd( 18.7352, 80.2924, -38.6937, 0.88 ) }
    dend_73 { pt3dadd( 18.8238, 80.4043, -38.7425, 0.88 ) }
    dend_73 { pt3dadd( 19.7593, 81.4327, -39.1952, 0.22 ) }
    dend_73 { pt3dadd( 20.4264, 82.0844, -39.4894, 0.22 ) }
    dend_73 { pt3dadd( 20.5097, 82.1705, -39.5313, 0.22 ) }
    dend_73 { pt3dadd( 21.2119, 82.9158, -39.9123, 1.33 ) }
    dend_73 { pt3dadd( 21.4976, 83.2324, -40.0731, 2.06 ) }
    dend_73 { pt3dadd( 21.9391, 83.7467, -40.3513, 2.06 ) }
    dend_73 { pt3dadd( 22.976, 85.0363, -41.0637, 0.15 ) }
    dend_73 { pt3dadd( 23.2507, 85.3856, -41.2621, 0.74 ) }
    dend_73 { pt3dadd( 23.2899, 85.435, -41.2896, 0.74 ) }
    dend_73 { pt3dadd( 23.4845, 85.6916, -41.43, 0.74 ) }
    dend_73 { pt3dadd( 24.1078, 86.5275, -41.8502, 0.22 ) }
    dend_73 { pt3dadd( 24.4386, 86.9702, -42.0429, 0.59 ) }
    dend_73 { pt3dadd( 24.478, 87.0224, -42.0635, 0.59 ) }
    dend_73 { pt3dadd( 25.1647, 87.9039, -42.4904, 0.15 ) }
    dend_73 { pt3dadd( 25.7105, 88.6382, -42.8626, 1.55 ) }
    dend_73 { pt3dadd( 25.8475, 88.8305, -42.9625, 1.92 ) }
    dend_73 { pt3dadd( 25.8852, 88.8841, -42.9888, 1.92 ) }
    dend_73 { pt3dadd( 26.0679, 89.165, -43.1304, 1.92 ) }
    dend_73 { pt3dadd( 27.0303, 90.6898, -43.8857, 0.22 ) }
    dend_73 { pt3dadd( 27.2916, 91.0531, -44.0763, 0.52 ) }
    dend_73 { pt3dadd( 27.3315, 91.1025, -44.1028, 0.52 ) }
    dend_73 { pt3dadd( 27.9417, 91.7315, -44.4418, 0.22 ) }
    dend_73 { pt3dadd( 28.4764, 92.2313, -44.7349, 1.55 ) }
    dend_73 { pt3dadd( 28.8745, 92.5035, -44.9368, 1.55 ) }
    dend_73 { pt3dadd( 30.3237, 93.3184, -45.6206, 0.15 ) }
    dend_73 { pt3dadd( 30.3746, 93.345, -45.6457, 0.15 ) }
    dend_73 { pt3dadd( 31.3801, 93.8391, -46.1466, 0.15 ) }
    dend_73 { pt3dadd( 32.8716, 94.5145, -46.895, 2.21 ) }
    dend_73 { pt3dadd( 35.0933, 95.4512, -47.969, 0.22 ) }
    dend_73 { pt3dadd( 35.3416, 95.5565, -48.088, 0.37 ) }
    dend_73 { pt3dadd( 36.3628, 96.0154, -48.5448, 0.22 ) }
    dend_73 { pt3dadd( 36.7276, 96.1932, -48.6971, 0.59 ) }
    dend_73 { pt3dadd( 36.9729, 96.3239, -48.7899, 0.59 ) }
    dend_73 { pt3dadd( 37.8005, 96.8158, -49.0718, 0.22 ) }
    dend_73 { pt3dadd( 38.117, 97.0462, -49.1964, 0.66 ) }
    dend_73 { pt3dadd( 38.9879, 97.6703, -49.5789, 0.15 ) }
    dend_73 { pt3dadd( 39.6186, 98.1307, -49.8756, 1.77 ) }
    dend_73 { pt3dadd( 39.7738, 98.2463, -49.958, 1.77 ) }
    dend_73 { pt3dadd( 41.2325, 99.3035, -50.7878, 0.22 ) }
    dend_73 { pt3dadd( 41.7921, 99.6604, -51.195, 0.74 ) }
    dend_73 { pt3dadd( 42.3986, 99.9994, -51.7121, 0.15 ) }
    dend_73 { pt3dadd( 42.7528, 100.178, -52.0695, 0.74 ) }
    dend_73 { pt3dadd( 43.3321, 100.481, -52.7058, 0.15 ) }
    dend_73 { pt3dadd( 43.8557, 100.769, -53.3073, 2.14 ) }
    dend_73 { pt3dadd( 45.5151, 101.808, -55.3664, 0.37 ) }
    dend_73 { pt3dadd( 46.1854, 102.324, -56.253, 1.55 ) }
    dend_73 { pt3dadd( 47.416, 103.43, -57.9784, 0.15 ) }
    dend_73 { pt3dadd( 47.9373, 103.985, -58.7555, 0.15 ) }
    dend_73 { pt3dadd( 48.1827, 104.293, -59.1452, 1.4 ) }
    dend_73 { pt3dadd( 48.9597, 105.419, -60.5296, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 49.3441, 105.999, -61.2478, 1.33 ) }
    dend_73 { pt3dadd( 49.4127, 106.083, -61.3684, 1.62 ) }
    dend_73 { pt3dadd( 50.447, 106.993, -62.9281, 0.15 ) }
    dend_73 { pt3dadd( 51.1491, 107.448, -63.8903, 1.18 ) }
    dend_73 { pt3dadd( 52.3618, 108.055, -65.4146, 0.88 ) }
    dend_73 { pt3dadd( 53.5153, 108.48, -66.6974, 0.44 ) }
    dend_73 { pt3dadd( 54.5959, 108.817, -67.7798, 1.77 ) }
    dend_73 { pt3dadd( 55.7502, 109.139, -68.7649, 0.22 ) }
    dend_73 { pt3dadd( 55.8179, 109.154, -68.8092, 0.22 ) }
    dend_73 { pt3dadd( 56.2529, 109.263, -69.0083, 0.66 ) }
    dend_73 { pt3dadd( 57.2287, 109.559, -69.253, 0.15 ) }
    dend_73 { pt3dadd( 57.9159, 109.858, -69.3319, 1.11 ) }
    dend_73 { pt3dadd( 58.3372, 110.112, -69.3648, 1.11 ) }
    dend_73 { pt3dadd( 58.4019, 110.157, -69.3688, 1.11 ) }
    dend_73 { pt3dadd( 59.1287, 110.681, -69.4201, 0.22 ) }
    dend_73 { pt3dadd( 59.4641, 110.916, -69.4494, 0.59 ) }
    dend_73 { pt3dadd( 60.3193, 111.507, -69.534, 0.22 ) }
    dend_73 { pt3dadd( 61.0652, 112.011, -69.6306, 1.4 ) }
    dend_73 { pt3dadd( 61.1307, 112.055, -69.6389, 1.4 ) }
    dend_73 { pt3dadd( 61.24, 112.126, -69.6524, 1.55 ) }
    dend_73 { pt3dadd( 62.635, 112.989, -69.8107, 0.22 ) }
    dend_73 { pt3dadd( 62.695, 113.023, -69.8187, 0.22 ) }
    dend_73 { pt3dadd( 62.9248, 113.152, -69.8514, 0.22 ) }
    dend_73 { pt3dadd( 63.4096, 113.41, -69.9434, 0.81 ) }
    dend_73 { pt3dadd( 63.4698, 113.442, -69.9571, 0.81 ) }
    dend_73 { pt3dadd( 63.7657, 113.616, -70.0432, 0.81 ) }
    dend_73 { pt3dadd( 65.1792, 114.478, -70.5081, 0.22 ) }
    dend_73 { pt3dadd( 65.663, 114.769, -70.6721, 0.22 ) }
    dend_73 { pt3dadd( 66.7265, 115.395, -71.0389, 1.55 ) }
    dend_73 { pt3dadd( 66.7828, 115.429, -71.0608, 1.55 ) }
    dend_73 { pt3dadd( 68.1702, 116.316, -71.6331, 0.22 ) }
    dend_73 { pt3dadd( 68.6983, 116.66, -71.8637, 0.22 ) }
    dend_73 { pt3dadd( 69.6204, 117.264, -72.2754, 1.62 ) }
    dend_73 { pt3dadd( 69.7955, 117.379, -72.3507, 1.99 ) }
    dend_73 { pt3dadd( 71.6087, 118.585, -73.0911, 0.22 ) }
    dend_73 { pt3dadd( 71.6717, 118.627, -73.1165, 0.22 ) }
    dend_73 { pt3dadd( 72.3543, 119.072, -73.3841, 0.74 ) }
    dend_73 { pt3dadd( 72.7689, 119.348, -73.5497, 0.74 ) }
    dend_73 { pt3dadd( 74.8276, 120.717, -74.3534, 0.15 ) }
    dend_73 { pt3dadd( 75.5916, 121.214, -74.6349, 1.55 ) }
    dend_73 { pt3dadd( 75.6511, 121.25, -74.6531, 1.55 ) }
    dend_73 { pt3dadd( 75.9888, 121.459, -74.7568, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 7.67333, 57.6982, -22.0947, 0.29 ) }
    dend_72 { pt3dadd( 7.24058, 59.6912, -22.3402, 0.29 ) }
    dend_72 { pt3dadd( 7.14351, 60.1716, -22.4025, 0.44 ) }
    dend_72 { pt3dadd( 6.94115, 61.1479, -22.5198, 0.22 ) }
    dend_72 { pt3dadd( 6.67573, 62.4385, -22.6682, 1.55 ) }
    dend_72 { pt3dadd( 6.59189, 62.8566, -22.712, 2.21 ) }
    dend_72 { pt3dadd( 6.47132, 63.4665, -22.7704, 1.84 ) }
    dend_72 { pt3dadd( 6.34703, 64.239, -22.8361, 0.96 ) }
    dend_72 { pt3dadd( 6.26526, 64.738, -22.8634, 0.44 ) }
    dend_72 { pt3dadd( 6.25178, 64.8135, -22.8642, 0.44 ) }
    dend_72 { pt3dadd( 6.09625, 65.7887, -22.866, 0.29 ) }
    dend_72 { pt3dadd( 6.08153, 65.927, -22.8658, 0.29 ) }
    dend_72 { pt3dadd( 6.0396, 66.632, -22.8657, 0.29 ) }
    dend_72 { pt3dadd( 6.01592, 67.3284, -22.8674, 0.81 ) }
    dend_72 { pt3dadd( 6.01112, 67.6748, -22.8833, 1.11 ) }
    dend_72 { pt3dadd( 5.99318, 68.3749, -22.947, 0.88 ) }
    dend_72 { pt3dadd( 5.97255, 69.8052, -23.1183, 0.22 ) }
    dend_72 { pt3dadd( 5.96845, 70.5041, -23.2251, 0.81 ) }
    dend_72 { pt3dadd( 5.96964, 71.0581, -23.3287, 0.81 ) }
    dend_72 { pt3dadd( 5.97069, 72.7191, -23.6722, 0.22 ) }
    dend_72 { pt3dadd( 5.96125, 73.9387, -23.9417, 1.84 ) }
    dend_72 { pt3dadd( 5.94617, 74.5758, -24.0906, 2.21 ) }
    dend_72 { pt3dadd( 5.92173, 75.1316, -24.225, 2.21 ) }
    dend_72 { pt3dadd( 5.84566, 77.2605, -24.703, 0.22 ) }
    dend_72 { pt3dadd( 5.83011, 78.0018, -24.8529, 0.81 ) }
    dend_72 { pt3dadd( 5.82759, 78.3523, -24.9113, 0.88 ) }
    dend_72 { pt3dadd( 5.82494, 78.7074, -24.9603, 0.66 ) }
    dend_72 { pt3dadd( 5.79635, 79.7628, -25.0867, 0.22 ) }
    dend_72 { pt3dadd( 5.74493, 81.2367, -25.2262, 1.84 ) }
    dend_72 { pt3dadd( 5.73882, 81.6872, -25.26, 2.21 ) }
    dend_72 { pt3dadd( 5.7428, 82.1377, -25.2897, 2.21 ) }
    dend_72 { pt3dadd( 5.79739, 84.09, -25.4015, 0.22 ) }
    dend_72 { pt3dadd( 5.82765, 84.7852, -25.4399, 0.88 ) }
    dend_72 { pt3dadd( 5.83822, 84.9972, -25.4507, 0.88 ) }
    dend_72 { pt3dadd( 5.91267, 86.4327, -25.5261, 0.22 ) }
    dend_72 { pt3dadd( 5.98826, 87.7004, -25.6291, 0.22 ) }
    dend_72 { pt3dadd( 6.04095, 88.3663, -25.6963, 1.33 ) }
    dend_72 { pt3dadd( 6.09926, 88.8908, -25.7585, 1.62 ) }
    dend_72 { pt3dadd( 6.12178, 89.0931, -25.7859, 1.62 ) }
    dend_72 { pt3dadd( 6.12942, 89.2071, -25.8067, 1.62 ) }
    dend_72 { pt3dadd( 6.1651, 91.0653, -26.2043, 0.22 ) }
    dend_72 { pt3dadd( 6.16072, 92.4293, -26.5188, 0.22 ) }
    dend_72 { pt3dadd( 6.13848, 93.3673, -26.738, 1.4 ) }
    dend_72 { pt3dadd( 6.12508, 93.8595, -26.8496, 1.69 ) }
    dend_72 { pt3dadd( 6.0606, 95.9438, -27.3146, 0.22 ) }
    dend_72 { pt3dadd( 6.02857, 96.6474, -27.4508, 0.96 ) }
    dend_72 { pt3dadd( 6.02375, 96.7138, -27.4601, 0.96 ) }
    dend_72 { pt3dadd( 5.99401, 97.0015, -27.4923, 0.81 ) }
    dend_72 { pt3dadd( 5.83062, 98.335, -27.5785, 0.22 ) }
    dend_72 { pt3dadd( 5.81258, 98.4939, -27.5808, 0.22 ) }
    dend_72 { pt3dadd( 5.72484, 99.4217, -27.5611, 0.22 ) }
    dend_72 { pt3dadd( 5.6212, 100.521, -27.5503, 1.69 ) }
    dend_72 { pt3dadd( 5.58784, 100.882, -27.5504, 2.43 ) }
    dend_72 { pt3dadd( 5.51622, 101.643, -27.5564, 2.36 ) }
    dend_72 { pt3dadd( 5.30973, 104.091, -27.592, 0.22 ) }
    dend_72 { pt3dadd( 5.26181, 105.028, -27.6333, 0.22 ) }
    dend_72 { pt3dadd( 5.25905, 105.173, -27.6444, 0.22 ) }
    dend_72 { pt3dadd( 5.26846, 106.367, -27.7522, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( 5.29386, 107.27, -27.8454, 1.11 ) }
    dend_72 { pt3dadd( 5.32702, 107.813, -27.9087, 1.4 ) }
    dend_72 { pt3dadd( 5.47648, 109.359, -28.1118, 0.22 ) }
    dend_72 { pt3dadd( 5.48312, 109.418, -28.1196, 0.22 ) }
    dend_72 { pt3dadd( 5.53841, 109.828, -28.1641, 0.22 ) }
    dend_72 { pt3dadd( 5.65642, 110.683, -28.2302, 1.55 ) }
    dend_72 { pt3dadd( 5.70985, 111.124, -28.2485, 1.77 ) }
    dend_72 { pt3dadd( 5.7176, 111.191, -28.2491, 1.77 ) }
    dend_72 { pt3dadd( 5.7553, 111.493, -28.242, 1.77 ) }
    dend_72 { pt3dadd( 5.92569, 112.791, -28.2137, 0.22 ) }
    dend_72 { pt3dadd( 6.02891, 113.687, -28.1944, 0.66 ) }
    dend_72 { pt3dadd( 6.07248, 114.171, -28.1836, 0.66 ) }
    dend_72 { pt3dadd( 6.1687, 115.762, -28.1596, 0.22 ) }
    dend_72 { pt3dadd( 6.17343, 115.907, -28.1574, 0.22 ) }
    dend_72 { pt3dadd( 6.18828, 117.441, -28.1271, 0.22 ) }
    dend_72 { pt3dadd( 6.15734, 118.488, -28.0867, 1.11 ) }
    dend_72 { pt3dadd( 6.11669, 119.116, -28.0438, 1.99 ) }
    dend_72 { pt3dadd( 6.05431, 119.652, -27.992, 1.55 ) }
    dend_72 { pt3dadd( 5.81514, 120.969, -27.8186, 0.22 ) }
    dend_72 { pt3dadd( 5.77825, 121.144, -27.7923, 0.22 ) }
    dend_72 { pt3dadd( 5.50422, 122.217, -27.5994, 0.22 ) }
    dend_72 { pt3dadd( 5.35797, 122.832, -27.4724, 0.88 ) }
    dend_72 { pt3dadd( 5.31553, 123.025, -27.4323, 1.18 ) }
    dend_72 { pt3dadd( 5.30494, 123.089, -27.414, 1.18 ) }
    dend_72 { pt3dadd( 5.24918, 123.691, -27.2287, 0.66 ) }
    dend_72 { pt3dadd( 5.2278, 124.029, -27.1274, 0.37 ) }
    dend_72 { pt3dadd( 5.16007, 124.913, -26.8761, 0.22 ) }
    dend_72 { pt3dadd( 5.08677, 125.565, -26.695, 0.59 ) }
    dend_72 { pt3dadd( 4.93529, 126.733, -26.4635, 0.52 ) }
    dend_72 { pt3dadd( 4.84122, 127.385, -26.3617, 0.66 ) }
    dend_72 { pt3dadd( 4.76952, 127.88, -26.2996, 0.22 ) }
    dend_72 { pt3dadd( 4.65421, 128.635, -26.2316, 1.47 ) }
    dend_72 { pt3dadd( 4.5967, 128.997, -26.2164, 2.14 ) }
    dend_72 { pt3dadd( 4.26659, 131.193, -26.1965, 0.22 ) }
    dend_72 { pt3dadd( 4.25852, 131.253, -26.1985, 0.22 ) }
    dend_72 { pt3dadd( 4.20066, 131.941, -26.2074, 1.11 ) }
    dend_72 { pt3dadd( 4.198, 132.086, -26.2096, 1.47 ) }
    dend_72 { pt3dadd( 4.20063, 132.189, -26.211, 1.47 ) }
    dend_72 { pt3dadd( 4.21697, 132.82, -26.2271, 0.81 ) }
    dend_72 { pt3dadd( 4.22502, 133.343, -26.2554, 0.29 ) }
    dend_72 { pt3dadd( 4.24736, 134.893, -26.3737, 0.22 ) }
    dend_72 { pt3dadd( 4.25161, 135.61, -26.4437, 0.96 ) }
    dend_72 { pt3dadd( 4.25319, 135.745, -26.4576, 0.96 ) }
    dend_72 { pt3dadd( 4.25563, 135.89, -26.4708, 0.96 ) }
    dend_72 { pt3dadd( 4.29419, 137.011, -26.556, 0.22 ) }
    dend_72 { pt3dadd( 4.29785, 137.077, -26.5598, 0.22 ) }
    dend_72 { pt3dadd( 4.3534, 137.762, -26.5825, 0.81 ) }
    dend_72 { pt3dadd( 4.38249, 138.109, -26.5904, 0.81 ) }
    dend_72 { pt3dadd( 4.50944, 139.731, -26.6062, 0.15 ) }
    dend_72 { pt3dadd( 4.57576, 140.831, -26.623, 1.18 ) }
    dend_72 { pt3dadd( 4.59023, 141.139, -26.6277, 1.47 ) }
    dend_72 { pt3dadd( 4.59353, 141.197, -26.6328, 1.47 ) }
    dend_72 { pt3dadd( 4.61349, 141.474, -26.6804, 1.47 ) }
    dend_72 { pt3dadd( 4.72337, 142.982, -27.0357, 0.22 ) }
    dend_72 { pt3dadd( 4.79511, 143.828, -27.2901, 1.11 ) }
    dend_72 { pt3dadd( 4.82719, 144.184, -27.4118, 1.47 ) }
    dend_72 { pt3dadd( 5.04478, 146.147, -28.1888, 0.15 ) }
    dend_72 { pt3dadd( 5.14575, 146.912, -28.521, 0.81 ) }
    dend_72 { pt3dadd( 5.15541, 146.972, -28.5498, 0.81 ) }
    dend_72 { pt3dadd( 5.22163, 147.321, -28.7307, 0.81 ) }
    dend_72 { pt3dadd( 5.23213, 147.372, -28.7556, 0.81 ) }
    dend_72 { pt3dadd( 5.42729, 148.585, -29.2844, 0.22 ) }
    dend_72 { pt3dadd( 5.47222, 148.99, -29.4248, 0.37 ) }
    dend_72 { pt3dadd( 5.52293, 149.615, -29.6169, 0.22 ) }
    dend_72 { pt3dadd( 5.56698, 150.388, -29.834, 1.18 ) }
    dend_72 { pt3dadd( 5.58072, 150.849, -29.9532, 1.47 ) }
    dend_72 { pt3dadd( 5.60198, 152.601, -30.3695, 0.22 ) }
    dend_72 { pt3dadd( 5.59715, 153.375, -30.5279, 1.03 ) }
    dend_72 { pt3dadd( 5.59443, 153.642, -30.5823, 1.03 ) }
    dend_72 { pt3dadd( 5.5903, 155.356, -30.9486, 0.22 ) }
    dend_72 { pt3dadd( 5.59344, 155.974, -31.0793, 0.22 ) }
    dend_72 { pt3dadd( 5.59442, 156.039, -31.0929, 0.22 ) }
    dend_72 { pt3dadd( 5.62549, 156.821, -31.2145, 0.81 ) }
    dend_72 { pt3dadd( 5.65151, 157.303, -31.2757, 0.81 ) }
    dend_72 { pt3dadd( 5.72627, 158.735, -31.4106, 0.22 ) }
    dend_72 { pt3dadd( 5.76953, 159.715, -31.4331, 1.11 ) }
    dend_72 { pt3dadd( 5.77652, 159.926, -31.4291, 1.11 ) }
    dend_72 { pt3dadd( 5.80417, 161.689, -31.3115, 0.22 ) }
    dend_72 { pt3dadd( 5.8033, 162.466, -31.2291, 0.59 ) }
    dend_72 { pt3dadd( 5.77873, 163.722, -31.0513, 0.22 ) }
    dend_72 { pt3dadd( 5.73013, 164.785, -30.8572, 1.18 ) }
    dend_72 { pt3dadd( 5.70828, 165.195, -30.7787, 1.62 ) }
    dend_72 { pt3dadd( 5.60358, 166.75, -30.4565, 0.22 ) }
    dend_72 { pt3dadd( 5.55833, 167.232, -30.3501, 0.22 ) }
    dend_72 { pt3dadd( 5.50011, 167.768, -30.2232, 0.59 ) }
    dend_72 { pt3dadd( 5.46928, 168.039, -30.1573, 0.59 ) }
    dend_72 { pt3dadd( 5.45997, 168.115, -30.1409, 0.59 ) }
    dend_72 { pt3dadd( 5.34883, 168.965, -29.9431, 0.22 ) }
    dend_72 { pt3dadd( 5.28885, 169.43, -29.817, 0.52 ) }
    dend_72 { pt3dadd( 5.27492, 169.569, -29.7752, 0.52 ) }
    dend_72 { pt3dadd( 5.27095, 169.634, -29.7546, 0.52 ) }
    dend_72 { pt3dadd( 5.27369, 170.777, -29.4466, 0.22 ) }
    dend_72 { pt3dadd( 5.30974, 171.657, -29.25, 1.11 ) }
    dend_72 { pt3dadd( 5.36003, 172.072, -29.1841, 1.47 ) }
    dend_72 { pt3dadd( 5.38358, 172.205, -29.1645, 1.47 ) }
    dend_72 { pt3dadd( 5.48033, 172.67, -29.1035, 1.47 ) }
    dend_72 { pt3dadd( 5.827, 174.115, -28.9389, 0.22 ) }
    dend_72 { pt3dadd( 5.84231, 174.17, -28.9344, 0.22 ) }
    dend_72 { pt3dadd( 6.1379, 175.246, -28.8637, 0.22 ) }
    dend_72 { pt3dadd( 6.36925, 176.165, -28.8164, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( 6.46686, 176.587, -28.7865, 1.55 ) }
    dend_72 { pt3dadd( 6.55742, 176.997, -28.7521, 1.55 ) }
    dend_72 { pt3dadd( 6.88346, 178.418, -28.6062, 0.22 ) }
    dend_72 { pt3dadd( 7.00757, 178.954, -28.5461, 0.74 ) }
    dend_72 { pt3dadd( 7.05406, 179.162, -28.5181, 0.74 ) }
    dend_72 { pt3dadd( 7.46509, 180.956, -28.257, 0.22 ) }
    dend_72 { pt3dadd( 7.58499, 181.47, -28.174, 0.74 ) }
    dend_72 { pt3dadd( 7.93403, 183.005, -27.8448, 0.22 ) }
    dend_72 { pt3dadd( 7.97161, 183.167, -27.8017, 0.22 ) }
    dend_72 { pt3dadd( 8.1856, 184.058, -27.5516, 0.74 ) }
    dend_72 { pt3dadd( 8.20997, 184.162, -27.5203, 0.74 ) }
    dend_72 { pt3dadd( 8.33197, 184.715, -27.3441, 1.03 ) }
    dend_72 { pt3dadd( 8.73009, 186.599, -26.7511, 0.15 ) }
    dend_72 { pt3dadd( 8.74246, 186.664, -26.7319, 0.15 ) }
    dend_72 { pt3dadd( 8.95778, 187.823, -26.443, 0.15 ) }
    dend_72 { pt3dadd( 9.06243, 188.388, -26.3218, 1.03 ) }
    dend_72 { pt3dadd( 9.11741, 188.696, -26.2723, 1.03 ) }
    dend_72 { pt3dadd( 9.25663, 189.621, -26.1832, 0.15 ) }
    dend_72 { pt3dadd( 9.34827, 190.376, -26.1766, 1.11 ) }
    dend_72 { pt3dadd( 9.38208, 190.745, -26.1802, 1.4 ) }
    dend_72 { pt3dadd( 9.38502, 190.802, -26.1822, 1.4 ) }
    dend_72 { pt3dadd( 9.41279, 192.173, -26.273, 0.22 ) }
    dend_72 { pt3dadd( 9.39591, 192.882, -26.3237, 0.59 ) }
    dend_72 { pt3dadd( 9.39176, 192.942, -26.3282, 0.59 ) }
    dend_72 { pt3dadd( 9.36865, 193.151, -26.3415, 0.59 ) }
    dend_72 { pt3dadd( 9.25816, 193.999, -26.3949, 0.22 ) }
    dend_72 { pt3dadd( 9.1686, 194.613, -26.434, 1.18 ) }
    dend_72 { pt3dadd( 9.05615, 195.23, -26.4752, 1.84 ) }
    dend_72 { pt3dadd( 8.98523, 195.581, -26.5033, 1.47 ) }
    dend_72 { pt3dadd( 8.55818, 197.338, -26.6564, 0.22 ) }
    dend_72 { pt3dadd( 8.36969, 198.0, -26.7204, 0.22 ) }
    dend_72 { pt3dadd( 8.35093, 198.054, -26.7262, 0.22 ) }
    dend_72 { pt3dadd( 8.09087, 198.681, -26.8163, 0.81 ) }
    dend_72 { pt3dadd( 7.88672, 199.144, -26.8951, 1.62 ) }
    dend_72 { pt3dadd( 7.62644, 199.699, -27.0004, 2.28 ) }
    dend_72 { pt3dadd( 7.52829, 199.908, -27.0425, 2.5 ) }
    dend_72 { pt3dadd( 7.25613, 200.532, -27.1584, 2.14 ) }
    dend_72 { pt3dadd( 6.58342, 202.256, -27.4613, 0.22 ) }
    dend_72 { pt3dadd( 6.38789, 202.838, -27.5602, 0.59 ) }
    dend_72 { pt3dadd( 6.36846, 202.913, -27.5716, 0.59 ) }
    dend_72 { pt3dadd( 6.22557, 203.65, -27.6664, 0.22 ) }
    dend_72 { pt3dadd( 6.14776, 204.205, -27.7151, 0.81 ) }
    dend_72 { pt3dadd( 6.13942, 204.294, -27.7195, 0.81 ) }
    dend_72 { pt3dadd( 6.11346, 204.646, -27.7183, 0.81 ) }
    dend_72 { pt3dadd( 6.00761, 205.729, -27.703, 0.22 ) }
    dend_72 { pt3dadd( 5.94202, 206.354, -27.6918, 0.44 ) }
    dend_72 { pt3dadd( 5.76307, 207.863, -27.6552, 0.15 ) }
    dend_72 { pt3dadd( 5.69795, 208.42, -27.6372, 0.15 ) }
    dend_72 { pt3dadd( 5.64003, 208.877, -27.6205, 0.59 ) }
    dend_72 { pt3dadd( 5.6003, 209.163, -27.6073, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.98412, 37.5465, -7.24931, 1.55 ) }
    dend_27 { pt3dadd( -8.59343, 39.3264, -8.95773, 1.55 ) }
    dend_27 { pt3dadd( -8.57322, 39.4139, -9.03198, 1.55 ) }
    dend_27 { pt3dadd( -8.28156, 40.5947, -9.87001, 1.47 ) }
    dend_27 { pt3dadd( -8.26693, 40.6514, -9.9034, 1.47 ) }
    dend_27 { pt3dadd( -8.05659, 41.4456, -10.3247, 1.25 ) }
    dend_27 { pt3dadd( -7.70905, 42.7611, -10.9208, 1.25 ) }
    dend_27 { pt3dadd( -7.66818, 42.9178, -10.9613, 1.25 ) }
    dend_27 { pt3dadd( -7.3988, 43.8942, -11.1632, 0.81 ) }
    dend_27 { pt3dadd( -7.094, 44.9989, -11.3266, 1.18 ) }
    dend_27 { pt3dadd( -7.06594, 45.1057, -11.3399, 1.18 ) }
    dend_27 { pt3dadd( -6.75252, 46.3983, -11.4711, 1.84 ) }
    dend_27 { pt3dadd( -6.54555, 47.3734, -11.552, 2.14 ) }
    dend_27 { pt3dadd( -6.3644, 48.3548, -11.6337, 2.14 ) }
    dend_27 { pt3dadd( -6.21241, 49.4811, -11.7401, 2.14 ) }
    dend_27 { pt3dadd( -6.20851, 49.5377, -11.7455, 2.14 ) }
    dend_27 { pt3dadd( -6.20276, 50.1959, -11.8192, 1.77 ) }
    dend_27 { pt3dadd( -6.26613, 51.4162, -11.9753, 1.77 ) }
    dend_27 { pt3dadd( -6.37683, 52.2491, -12.0852, 1.47 ) }
    dend_27 { pt3dadd( -6.6094, 53.2992, -12.2143, 1.25 ) }
    dend_27 { pt3dadd( -6.93884, 54.3715, -12.3594, 1.62 ) }
    dend_27 { pt3dadd( -7.22909, 55.1445, -12.473, 1.84 ) }
    dend_27 { pt3dadd( -7.25739, 55.2075, -12.4832, 1.84 ) }
    dend_27 { pt3dadd( -7.74588, 56.1133, -12.6672, 1.99 ) }
    dend_27 { pt3dadd( -8.309, 57.1256, -12.8915, 1.69 ) }
    dend_27 { pt3dadd( -8.79592, 58.0849, -13.1037, 1.47 ) }
    dend_27 { pt3dadd( -9.06367, 58.7739, -13.2942, 1.33 ) }
    dend_27 { pt3dadd( -9.07825, 58.8269, -13.3107, 1.33 ) }
    dend_27 { pt3dadd( -9.19195, 59.7657, -13.6411, 1.11 ) }
    dend_27 { pt3dadd( -9.11669, 60.729, -14.0429, 0.88 ) }
    dend_27 { pt3dadd( -8.89174, 61.5138, -14.4038, 0.96 ) }
    dend_27 { pt3dadd( -8.40832, 62.694, -14.9248, 0.81 ) }
    dend_27 { pt3dadd( -8.37005, 62.7838, -14.9607, 0.81 ) }
    dend_27 { pt3dadd( -8.15091, 63.3461, -15.1633, 0.66 ) }
    dend_27 { pt3dadd( -8.09653, 63.5022, -15.2129, 0.66 ) }
    dend_27 { pt3dadd( -7.96625, 64.4188, -15.4544, 0.66 ) }
    dend_27 { pt3dadd( -8.0154, 65.1702, -15.5909, 0.96 ) }
    dend_27 { pt3dadd( -8.21733, 65.9864, -15.6733, 1.69 ) }
    dend_27 { pt3dadd( -8.34093, 66.3569, -15.7059, 1.99 ) }
    dend_27 { pt3dadd( -8.50452, 66.735, -15.7422, 1.99 ) }
    dend_27 { pt3dadd( -8.91354, 67.5808, -15.8337, 1.84 ) }
    dend_27 { pt3dadd( -8.94596, 67.6401, -15.8408, 1.84 ) }
    dend_27 { pt3dadd( -9.52091, 68.6647, -15.9921, 2.06 ) }
    dend_27 { pt3dadd( -9.71549, 69.0315, -16.0524, 2.21 ) }
    dend_27 { pt3dadd( -10.0258, 69.6813, -16.1585, 2.14 ) }
    dend_27 { pt3dadd( -10.4486, 70.6501, -16.3103, 1.18 ) }
    dend_27 { pt3dadd( -10.8974, 71.7908, -16.4762, 1.03 ) }
    dend_27 { pt3dadd( -11.2091, 72.6517, -16.5846, 1.03 ) }
    dend_27 { pt3dadd( -11.4741, 73.453, -16.6699, 1.33 ) }
    dend_27 { pt3dadd( -11.7547, 74.3909, -16.7516, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -11.9267, 75.0768, -16.7918, 2.65 ) }
    dend_27 { pt3dadd( -12.0813, 75.8244, -16.8328, 2.65 ) }
    dend_27 { pt3dadd( -12.2252, 76.7236, -16.8884, 2.65 ) }
    dend_27 { pt3dadd( -12.2408, 76.8493, -16.8957, 2.65 ) }
    dend_27 { pt3dadd( -12.3011, 77.4738, -16.9329, 2.36 ) }
    dend_27 { pt3dadd( -12.3281, 78.1967, -16.986, 2.06 ) }
    dend_27 { pt3dadd( -12.3307, 79.123, -17.0612, 1.4 ) }
    dend_27 { pt3dadd( -12.3026, 80.1221, -17.1451, 0.81 ) }
    dend_27 { pt3dadd( -12.1945, 81.7387, -17.2775, 0.66 ) }
    dend_27 { pt3dadd( -12.0513, 83.0899, -17.3754, 0.66 ) }
    dend_27 { pt3dadd( -11.8395, 84.5482, -17.4676, 1.11 ) }
    dend_27 { pt3dadd( -11.8271, 84.6162, -17.4718, 1.11 ) }
    dend_27 { pt3dadd( -11.6275, 85.5082, -17.5199, 1.55 ) }
    dend_27 { pt3dadd( -11.3563, 86.5393, -17.5732, 1.84 ) }
    dend_27 { pt3dadd( -11.0165, 87.7096, -17.6382, 2.28 ) }
    dend_27 { pt3dadd( -10.8572, 88.2532, -17.6677, 2.58 ) }
    dend_27 { pt3dadd( -10.6656, 88.9517, -17.7218, 2.58 ) }
    dend_27 { pt3dadd( -10.5415, 89.4593, -17.7743, 2.58 ) }
    dend_27 { pt3dadd( -10.3896, 90.2823, -17.8945, 2.36 ) }
    dend_27 { pt3dadd( -10.3065, 90.9922, -18.0311, 1.92 ) }
    dend_27 { pt3dadd( -10.302, 91.0689, -18.0477, 1.92 ) }
    dend_27 { pt3dadd( -10.2635, 92.2005, -18.2908, 0.88 ) }
    dend_27 { pt3dadd( -10.2503, 93.3041, -18.5124, 0.66 ) }
    dend_27 { pt3dadd( -10.2496, 94.4487, -18.7493, 0.66 ) }
    dend_27 { pt3dadd( -10.2499, 95.1886, -18.9148, 0.81 ) }
    dend_27 { pt3dadd( -10.2339, 95.9993, -19.1058, 0.74 ) }
    dend_27 { pt3dadd( -10.2033, 96.8185, -19.3035, 0.59 ) }
    dend_27 { pt3dadd( -10.168, 97.64, -19.4918, 1.25 ) }
    dend_27 { pt3dadd( -10.1098, 98.4218, -19.6844, 1.84 ) }
    dend_27 { pt3dadd( -9.98211, 99.5192, -19.9548, 2.5 ) }
    dend_27 { pt3dadd( -9.88555, 100.177, -20.127, 2.65 ) }
    dend_27 { pt3dadd( -9.86611, 100.285, -20.1616, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.98412, 37.5465, -7.24931, 0.52 ) }
    dend_26 { pt3dadd( -8.62803, 38.8845, -7.18887, 0.52 ) }
    dend_26 { pt3dadd( -8.61499, 38.9504, -7.18413, 0.52 ) }
    dend_26 { pt3dadd( -8.5729, 39.5986, -7.1252, 0.52 ) }
    dend_26 { pt3dadd( -8.66323, 40.808, -7.00631, 0.52 ) }
    dend_26 { pt3dadd( -8.67334, 40.8736, -6.99981, 0.52 ) }
    dend_26 { pt3dadd( -8.74716, 41.1701, -6.97124, 0.66 ) }
    dend_26 { pt3dadd( -8.79778, 41.2581, -6.9497, 0.66 ) }
    dend_26 { pt3dadd( -9.1541, 41.7386, -6.83453, 0.52 ) }
    dend_26 { pt3dadd( -9.47187, 42.0859, -6.74815, 0.66 ) }
    dend_26 { pt3dadd( -9.52712, 42.1419, -6.73175, 0.66 ) }
    dend_26 { pt3dadd( -9.86531, 42.4931, -6.60723, 0.59 ) }
    dend_26 { pt3dadd( -10.3833, 43.0425, -6.38848, 0.29 ) }
    dend_26 { pt3dadd( -10.8122, 43.5236, -6.17117, 0.29 ) }
    dend_26 { pt3dadd( -10.8886, 43.6133, -6.12479, 0.29 ) }
    dend_26 { pt3dadd( -11.3816, 44.2253, -5.78354, 0.59 ) }
    dend_26 { pt3dadd( -11.7141, 44.6402, -5.56184, 0.81 ) }
    dend_26 { pt3dadd( -11.7568, 44.6909, -5.53676, 0.81 ) }
    dend_26 { pt3dadd( -12.0643, 45.0165, -5.40047, 0.81 ) }
    dend_26 { pt3dadd( -12.1076, 45.0536, -5.38611, 0.81 ) }
    dend_26 { pt3dadd( -12.5476, 45.3737, -5.27505, 0.81 ) }
    dend_26 { pt3dadd( -13.3188, 45.9231, -5.10983, 0.37 ) }
    dend_26 { pt3dadd( -13.8445, 46.3366, -4.95372, 0.37 ) }
    dend_26 { pt3dadd( -14.2631, 46.6976, -4.79145, 0.59 ) }
    dend_26 { pt3dadd( -14.6076, 47.03, -4.61909, 0.81 ) }
    dend_26 { pt3dadd( -15.1543, 47.6065, -4.27743, 0.29 ) }
    dend_26 { pt3dadd( -15.6767, 48.2004, -3.89325, 0.52 ) }
    dend_26 { pt3dadd( -16.2331, 48.8983, -3.40729, 1.33 ) }
    dend_26 { pt3dadd( -16.4755, 49.2266, -3.17053, 1.55 ) }
    dend_26 { pt3dadd( -17.1734, 50.2236, -2.43384, 0.29 ) }
    dend_26 { pt3dadd( -17.7237, 51.0149, -1.8487, 1.55 ) }
    dend_26 { pt3dadd( -17.8592, 51.1941, -1.72813, 1.84 ) }
    dend_26 { pt3dadd( -17.935, 51.277, -1.68406, 1.84 ) }
    dend_26 { pt3dadd( -18.1631, 51.4953, -1.62509, 1.84 ) }
    dend_26 { pt3dadd( -18.2057, 51.5354, -1.62396, 1.84 ) }
    dend_26 { pt3dadd( -18.5359, 51.8412, -1.69323, 1.62 ) }
    dend_26 { pt3dadd( -19.206, 52.4488, -1.91998, 0.37 ) }
    dend_26 { pt3dadd( -19.7605, 52.9701, -2.15402, 0.29 ) }
    dend_26 { pt3dadd( -20.1757, 53.4012, -2.37892, 0.59 ) }
    dend_26 { pt3dadd( -20.4404, 53.6926, -2.55692, 0.59 ) }
    dend_26 { pt3dadd( -20.6255, 53.903, -2.69394, 0.59 ) }
    dend_26 { pt3dadd( -20.8684, 54.1949, -2.89539, 0.52 ) }
    dend_26 { pt3dadd( -21.315, 54.8216, -3.2949, 0.29 ) }
    dend_26 { pt3dadd( -21.6095, 55.2952, -3.59348, 0.74 ) }
    dend_26 { pt3dadd( -21.9555, 55.8599, -3.91999, 0.66 ) }
    dend_26 { pt3dadd( -22.148, 56.1684, -4.08114, 0.88 ) }
    dend_26 { pt3dadd( -22.4917, 56.7078, -4.33174, 0.66 ) }
    dend_26 { pt3dadd( -23.4388, 58.1241, -4.899, 2.14 ) }
    dend_26 { pt3dadd( -23.8099, 58.6396, -5.07335, 2.14 ) }
    dend_26 { pt3dadd( -24.5921, 59.6703, -5.37397, 0.22 ) }
    dend_26 { pt3dadd( -25.0154, 60.212, -5.50412, 0.22 ) }
    dend_26 { pt3dadd( -25.4684, 60.7823, -5.61819, 0.22 ) }
    dend_26 { pt3dadd( -25.9199, 61.3198, -5.67197, 0.88 ) }
    dend_26 { pt3dadd( -26.1601, 61.5846, -5.66727, 1.03 ) }
    dend_26 { pt3dadd( -26.4612, 61.9017, -5.63006, 0.74 ) }
    dend_26 { pt3dadd( -27.1903, 62.6693, -5.49156, 0.22 ) }
    dend_26 { pt3dadd( -27.6311, 63.1277, -5.38173, 0.22 ) }
    dend_26 { pt3dadd( -28.2201, 63.747, -5.23506, 0.22 ) }
    dend_26 { pt3dadd( -28.2988, 63.8311, -5.21592, 0.22 ) }
    dend_26 { pt3dadd( -28.8557, 64.4539, -5.08477, 0.22 ) }
    dend_26 { pt3dadd( -29.6806, 65.3676, -4.91211, 1.69 ) }
    dend_26 { pt3dadd( -29.9567, 65.7042, -4.86824, 2.21 ) }
    dend_26 { pt3dadd( -30.4043, 66.2825, -4.82294, 2.21 ) }
    dend_26 { pt3dadd( -30.4365, 66.3305, -4.81987, 2.21 ) }
    dend_26 { pt3dadd( -31.0675, 67.4141, -4.73325, 0.22 ) }
    dend_26 { pt3dadd( -31.4271, 68.1331, -4.66451, 0.22 ) }
    dend_26 { pt3dadd( -31.988, 69.3438, -4.48192, 0.22 ) }
    dend_26 { pt3dadd( -32.0294, 69.4355, -4.46515, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -32.426, 70.2959, -4.26785, 1.11 ) }
    dend_26 { pt3dadd( -32.7173, 70.9289, -4.12852, 1.11 ) }
    dend_26 { pt3dadd( -32.975, 71.4949, -3.98857, 0.59 ) }
    dend_26 { pt3dadd( -33.4661, 72.5627, -3.70511, 1.69 ) }
    dend_26 { pt3dadd( -33.6007, 72.8377, -3.6297, 1.77 ) }
    dend_26 { pt3dadd( -34.4834, 74.6032, -3.1821, 0.22 ) }
    dend_26 { pt3dadd( -35.2119, 76.0208, -2.8119, 0.22 ) }
    dend_26 { pt3dadd( -35.4871, 76.5587, -2.65673, 1.03 ) }
    dend_26 { pt3dadd( -35.6933, 76.9653, -2.53255, 1.03 ) }
    dend_26 { pt3dadd( -35.8778, 77.3282, -2.41816, 0.81 ) }
    dend_26 { pt3dadd( -36.4232, 78.2876, -2.04255, 0.22 ) }
    dend_26 { pt3dadd( -37.0993, 79.3357, -1.55355, 1.11 ) }
    dend_26 { pt3dadd( -37.2377, 79.5249, -1.45874, 1.62 ) }
    dend_26 { pt3dadd( -37.4352, 79.782, -1.31102, 1.62 ) }
    dend_26 { pt3dadd( -37.4676, 79.8225, -1.28393, 1.62 ) }
    dend_26 { pt3dadd( -38.6617, 81.2704, -0.18621, 0.22 ) }
    dend_26 { pt3dadd( -39.1056, 81.7958, 0.240017, 0.81 ) }
    dend_26 { pt3dadd( -39.305, 82.0284, 0.428918, 0.81 ) }
    dend_26 { pt3dadd( -40.2612, 83.1506, 1.35907, 0.22 ) }
    dend_26 { pt3dadd( -40.2976, 83.1947, 1.3967, 0.22 ) }
    dend_26 { pt3dadd( -40.893, 83.9512, 2.05921, 1.18 ) }
    dend_26 { pt3dadd( -41.1378, 84.3274, 2.43059, 1.55 ) }
    dend_26 { pt3dadd( -45.7834, 92.718, 3.06955, 1.55 ) }
    dend_26 { pt3dadd( -50.4832, 101.015, 4.34492, 1.55 ) }
    dend_26 { pt3dadd( -56.5061, 108.458, 5.87853, 1.55 ) }
    dend_26 { pt3dadd( -62.3383, 115.72, 8.62476, 1.55 ) }
    dend_26 { pt3dadd( -68.7306, 121.643, 13.1269, 1.55 ) }
    dend_26 { pt3dadd( -74.8528, 128.066, 17.2264, 1.55 ) }
    dend_26 { pt3dadd( -78.8764, 135.437, 22.0852, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -2.04411, 48.9052, -0.0762192, 0.88 ) }
    dend_24 { pt3dadd( -2.58321, 49.3821, 1.94948, 0.88 ) }
    dend_24 { pt3dadd( -2.61693, 49.4002, 2.07358, 0.88 ) }
    dend_24 { pt3dadd( -3.04519, 49.4881, 3.49208, 0.88 ) }
    dend_24 { pt3dadd( -3.06329, 49.4892, 3.54927, 0.88 ) }
    dend_24 { pt3dadd( -3.60094, 49.5461, 6.71451, 0.59 ) }
    dend_24 { pt3dadd( -3.61038, 49.5485, 6.78382, 0.59 ) }
    dend_24 { pt3dadd( -3.71298, 49.5789, 7.80414, 1.18 ) }
    dend_24 { pt3dadd( -3.82919, 49.6433, 9.19554, 1.18 ) }
    dend_24 { pt3dadd( -3.83208, 49.6473, 9.25532, 1.18 ) }
    dend_24 { pt3dadd( -3.86199, 50.386, 14.2577, 0.22 ) }
    dend_24 { pt3dadd( -3.82936, 50.5408, 14.8308, 0.29 ) }
    dend_24 { pt3dadd( -3.73829, 50.9138, 15.9219, 1.11 ) }
    dend_24 { pt3dadd( -3.73071, 50.9426, 15.9876, 1.11 ) }
    dend_24 { pt3dadd( -3.61815, 51.2998, 16.694, 1.11 ) }
    dend_24 { pt3dadd( -3.4079, 52.0486, 17.978, 0.22 ) }
    dend_24 { pt3dadd( -3.29733, 52.6652, 18.5746, 0.59 ) }
    dend_24 { pt3dadd( -3.2857, 52.7057, 18.6151, 0.59 ) }
    dend_24 { pt3dadd( -3.18994, 52.955, 18.85, 1.11 ) }
    dend_24 { pt3dadd( -4.72737, 55.246, 28.4323, 1.11 ) }
    dend_24 { pt3dadd( -8.66331, 57.6626, 37.2662, 1.11 ) }
    dend_24 { pt3dadd( -10.4976, 61.1074, 46.4033, 1.11 ) }
    dend_24 { pt3dadd( -13.3165, 64.7732, 55.1876, 1.11 ) }
    dend_24 { pt3dadd( -15.9853, 68.9201, 63.7797, 1.11 ) }
    dend_24 { pt3dadd( -18.3252, 73.57, 72.1801, 1.11 ) }
    dend_24 { pt3dadd( -21.1811, 78.5439, 80.207, 1.11 ) }
    dend_24 { pt3dadd( -23.5226, 82.6922, 88.8932, 1.11 ) }
    dend_24 { pt3dadd( -24.7188, 86.7989, 97.8309, 1.11 ) }
    dend_24 { pt3dadd( -26.2013, 90.7824, 106.788, 1.11 ) }
    dend_24 { pt3dadd( -27.0224, 95.9179, 115.161, 1.11 ) }
    dend_24 { pt3dadd( -28.0988, 101.475, 123.2, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -2.04411, 48.9052, -0.0762192, 0.52 ) }
    dend_23 { pt3dadd( -1.73786, 50.1239, 0.64964, 0.52 ) }
    dend_23 { pt3dadd( -1.5768, 51.1821, 1.22036, 0.52 ) }
    dend_23 { pt3dadd( -1.57628, 51.2344, 1.24427, 0.44 ) }
    dend_23 { pt3dadd( -1.65031, 52.1208, 1.57698, 0.44 ) }
    dend_23 { pt3dadd( -1.65937, 52.1941, 1.59849, 0.44 ) }
    dend_23 { pt3dadd( -1.74824, 52.8867, 1.75832, 0.66 ) }
    dend_23 { pt3dadd( -1.76359, 52.9514, 1.76951, 0.66 ) }
    dend_23 { pt3dadd( -1.93516, 53.6148, 1.89598, 0.66 ) }
    dend_23 { pt3dadd( -2.06243, 54.1558, 2.03863, 0.44 ) }
    dend_23 { pt3dadd( -2.21803, 54.9463, 2.34835, 0.44 ) }
    dend_23 { pt3dadd( -2.33093, 55.6501, 2.68649, 0.96 ) }
    dend_23 { pt3dadd( -2.40716, 56.6533, 3.22955, 0.81 ) }
    dend_23 { pt3dadd( -2.40819, 56.8034, 3.31564, 0.81 ) }
    dend_23 { pt3dadd( -2.29898, 57.8337, 3.93737, 0.66 ) }
    dend_23 { pt3dadd( -2.08585, 58.7817, 4.57657, 0.44 ) }
    dend_23 { pt3dadd( -2.04352, 58.8975, 4.65869, 0.44 ) }
    dend_23 { pt3dadd( -1.68413, 59.6159, 5.16421, 0.29 ) }
    dend_23 { pt3dadd( -1.44208, 59.9788, 5.41819, 0.29 ) }
    dend_23 { pt3dadd( -1.02529, 60.5407, 5.80814, 1.11 ) }
    dend_23 { pt3dadd( -0.40974, 61.2697, 6.31883, 1.47 ) }
    dend_23 { pt3dadd( -0.0631508, 61.6851, 6.62254, 1.47 ) }
    dend_23 { pt3dadd( -0.0325762, 61.724, 6.65405, 1.47 ) }
    dend_23 { pt3dadd( 0.633144, 62.607, 7.45666, 0.88 ) }
    dend_23 { pt3dadd( 1.10756, 63.2689, 8.09202, 0.52 ) }
    dend_23 { pt3dadd( 1.13323, 63.3069, 8.12868, 0.52 ) }
    dend_23 { pt3dadd( 1.50659, 63.8667, 8.63861, 0.74 ) }
    dend_23 { pt3dadd( 1.53315, 63.9052, 8.67399, 0.74 ) }
    dend_23 { pt3dadd( 1.81244, 64.2767, 8.98088, 0.74 ) }
    dend_23 { pt3dadd( 1.84623, 64.3159, 9.0083, 0.74 ) }
    dend_23 { pt3dadd( 2.15452, 64.6418, 9.19815, 0.74 ) }
    dend_23 { pt3dadd( 2.86987, 65.4366, 9.56015, 0.37 ) }
    dend_23 { pt3dadd( 3.24273, 65.892, 9.71556, 0.37 ) }
    dend_23 { pt3dadd( 3.6958, 66.5372, 9.88633, 0.52 ) }
    dend_23 { pt3dadd( 4.01719, 67.1028, 10.02, 0.37 ) }
    dend_23 { pt3dadd( 4.43893, 68.0399, 10.217, 0.74 ) }
    dend_23 { pt3dadd( 4.6502, 68.7505, 10.3421, 1.11 ) }
    dend_23 { pt3dadd( 4.76081, 69.4333, 10.4365, 0.96 ) }
    dend_23 { pt3dadd( 4.78099, 70.2919, 10.5525, 0.44 ) }
    dend_23 { pt3dadd( 4.68394, 71.2992, 10.691, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 4.60338, 71.7854, 10.7644, 0.29 ) }
    dend_23 { pt3dadd( 4.46126, 72.5172, 10.8806, 0.29 ) }
    dend_23 { pt3dadd( 4.45041, 72.5829, 10.8907, 0.29 ) }
    dend_23 { pt3dadd( 4.37496, 73.2805, 10.9935, 0.37 ) }
    dend_23 { pt3dadd( 4.34608, 74.1459, 11.1022, 0.52 ) }
    dend_23 { pt3dadd( 4.39434, 74.9448, 11.1733, 1.11 ) }
    dend_23 { pt3dadd( 4.47087, 75.4967, 11.2245, 1.69 ) }
    dend_23 { pt3dadd( 4.53826, 75.8961, 11.259, 1.77 ) }
    dend_23 { pt3dadd( 4.59665, 76.3622, 11.2945, 1.69 ) }
    dend_23 { pt3dadd( 4.63834, 76.8321, 11.3256, 1.47 ) }
    dend_23 { pt3dadd( 4.63773, 77.1476, 11.3405, 1.47 ) }
    dend_23 { pt3dadd( 4.62771, 77.2161, 11.3415, 1.47 ) }
    dend_23 { pt3dadd( 4.32085, 78.4183, 11.3548, 0.29 ) }
    dend_23 { pt3dadd( 4.14495, 78.9588, 11.3582, 0.66 ) }
    dend_23 { pt3dadd( 4.12294, 79.0226, 11.3611, 0.66 ) }
    dend_23 { pt3dadd( 4.02586, 79.3235, 11.3878, 0.37 ) }
    dend_23 { pt3dadd( 3.85803, 79.9638, 11.4777, 0.29 ) }
    dend_23 { pt3dadd( 3.71038, 80.7318, 11.6135, 0.29 ) }
    dend_23 { pt3dadd( 3.70387, 80.7974, 11.6272, 0.29 ) }
    dend_23 { pt3dadd( 3.69285, 81.6206, 11.7968, 1.03 ) }
    dend_23 { pt3dadd( 3.72112, 82.3136, 11.9318, 1.69 ) }
    dend_23 { pt3dadd( 3.79708, 83.0516, 12.0579, 2.14 ) }
    dend_23 { pt3dadd( 3.83805, 83.3881, 12.1084, 2.28 ) }
    dend_23 { pt3dadd( 3.87751, 83.927, 12.157, 1.77 ) }
    dend_23 { pt3dadd( 3.89388, 84.5517, 12.1761, 1.18 ) }
    dend_23 { pt3dadd( 3.87321, 85.2038, 12.1492, 0.52 ) }
    dend_23 { pt3dadd( 3.82181, 85.8331, 12.1018, 0.37 ) }
    dend_23 { pt3dadd( 3.76385, 86.2693, 12.0351, 0.37 ) }
    dend_23 { pt3dadd( 3.63248, 87.1789, 11.8702, 0.74 ) }
    dend_23 { pt3dadd( 3.59102, 87.5113, 11.8015, 1.25 ) }
    dend_23 { pt3dadd( 3.52892, 88.0568, 11.6745, 1.4 ) }
    dend_23 { pt3dadd( 3.4648, 88.8077, 11.4908, 0.81 ) }
    dend_23 { pt3dadd( 3.38987, 90.321, 11.1265, 0.37 ) }
    dend_23 { pt3dadd( 3.39121, 91.1488, 10.9322, 0.37 ) }
    dend_23 { pt3dadd( 3.44232, 92.487, 10.638, 0.29 ) }
    dend_23 { pt3dadd( 3.50864, 93.5071, 10.4213, 1.84 ) }
    dend_23 { pt3dadd( 3.54909, 93.8884, 10.3453, 2.28 ) }
    dend_23 { pt3dadd( 3.63937, 94.4628, 10.243, 2.14 ) }
    dend_23 { pt3dadd( 3.89137, 95.6941, 10.0899, 0.52 ) }
    dend_23 { pt3dadd( 4.04866, 96.3877, 10.0205, 0.74 ) }
    dend_23 { pt3dadd( 4.15953, 96.8697, 9.99342, 0.74 ) }
    dend_23 { pt3dadd( 4.30677, 97.5456, 9.97925, 0.22 ) }
    dend_23 { pt3dadd( 4.37219, 97.968, 9.97554, 0.22 ) }
    dend_23 { pt3dadd( 4.42325, 98.8211, 9.95518, 0.74 ) }
    dend_23 { pt3dadd( 4.40847, 99.0406, 9.94148, 0.74 ) }
    dend_23 { pt3dadd( 4.31184, 99.7625, 9.86891, 0.22 ) }
    dend_23 { pt3dadd( 4.21807, 100.301, 9.80168, 0.74 ) }
    dend_23 { pt3dadd( 4.13144, 100.749, 9.7369, 0.96 ) }
    dend_23 { pt3dadd( 3.95535, 101.795, 9.57595, 0.37 ) }
    dend_23 { pt3dadd( 3.8037, 103.068, 9.36826, 1.25 ) }
    dend_23 { pt3dadd( 3.78321, 103.513, 9.30088, 1.55 ) }
    dend_23 { pt3dadd( 3.79066, 103.864, 9.26274, 1.77 ) }
    dend_23 { pt3dadd( 3.82157, 104.453, 9.23289, 1.77 ) }
    dend_23 { pt3dadd( 3.87469, 105.233, 9.23327, 0.88 ) }
    dend_23 { pt3dadd( 3.91392, 105.745, 9.26143, 0.52 ) }
    dend_23 { pt3dadd( 3.96571, 106.548, 9.34121, 0.44 ) }
    dend_23 { pt3dadd( 4.01294, 107.575, 9.41995, 0.29 ) }
    dend_23 { pt3dadd( 4.03239, 108.834, 9.49383, 1.25 ) }
    dend_23 { pt3dadd( 4.0256, 109.385, 9.51904, 2.21 ) }
    dend_23 { pt3dadd( 4.01175, 109.761, 9.53001, 2.5 ) }
    dend_23 { pt3dadd( 3.97403, 110.544, 9.53788, 2.28 ) }
    dend_23 { pt3dadd( 3.86963, 111.866, 9.47053, 0.66 ) }
    dend_23 { pt3dadd( 3.80956, 112.579, 9.39606, 0.52 ) }
    dend_23 { pt3dadd( 3.74713, 113.348, 9.29478, 0.66 ) }
    dend_23 { pt3dadd( 3.70525, 113.902, 9.21634, 0.96 ) }
    dend_23 { pt3dadd( 3.65578, 114.606, 9.10613, 0.96 ) }
    dend_23 { pt3dadd( 3.54872, 116.301, 8.81399, 0.22 ) }
    dend_23 { pt3dadd( 3.52403, 117.005, 8.70319, 1.18 ) }
    dend_23 { pt3dadd( 3.53049, 117.395, 8.63593, 0.88 ) }
    dend_23 { pt3dadd( 3.56798, 117.921, 8.53871, 0.74 ) }
    dend_23 { pt3dadd( 3.66173, 118.598, 8.41472, 0.29 ) }
    dend_23 { pt3dadd( 3.67712, 118.663, 8.40417, 0.29 ) }
    dend_23 { pt3dadd( 3.90424, 119.224, 8.34709, 0.81 ) }
    dend_23 { pt3dadd( 3.92723, 119.287, 8.33737, 0.81 ) }
    dend_23 { pt3dadd( 4.02634, 119.681, 8.26983, 1.03 ) }
    dend_23 { pt3dadd( 4.06054, 119.881, 8.23406, 1.03 ) }
    dend_23 { pt3dadd( 4.07539, 120.153, 8.1863, 1.03 ) }
    dend_23 { pt3dadd( 3.97292, 121.38, 7.91157, 0.29 ) }
    dend_23 { pt3dadd( 3.7947, 122.277, 7.67609, 0.29 ) }
    dend_23 { pt3dadd( 3.65868, 122.839, 7.52235, 0.59 ) }
    dend_23 { pt3dadd( 3.62166, 122.974, 7.48501, 0.59 ) }
    dend_23 { pt3dadd( 3.49148, 123.488, 7.34805, 0.37 ) }
    dend_23 { pt3dadd( 3.31828, 124.39, 7.13471, 0.29 ) }
    dend_23 { pt3dadd( 3.21043, 125.373, 6.95208, 1.11 ) }
    dend_23 { pt3dadd( 3.20784, 125.775, 6.89442, 1.69 ) }
    dend_23 { pt3dadd( 3.23469, 126.212, 6.84351, 1.84 ) }
    dend_23 { pt3dadd( 3.30213, 126.908, 6.78073, 1.62 ) }
    dend_23 { pt3dadd( 3.44192, 127.893, 6.72424, 0.74 ) }
    dend_23 { pt3dadd( 3.60797, 128.826, 6.71281, 0.52 ) }
    dend_23 { pt3dadd( 3.621, 128.894, 6.71281, 0.52 ) }
    dend_23 { pt3dadd( 3.79279, 129.915, 6.71281, 0.37 ) }
    dend_23 { pt3dadd( 3.80276, 129.991, 6.71182, 0.37 ) }
    dend_23 { pt3dadd( 3.83858, 130.632, 6.69473, 1.25 ) }
    dend_23 { pt3dadd( 3.82508, 131.081, 6.64115, 0.96 ) }
    dend_23 { pt3dadd( 3.82067, 131.147, 6.62937, 0.96 ) }
    dend_23 { pt3dadd( 3.77204, 131.757, 6.50854, 0.74 ) }
    dend_23 { pt3dadd( 3.7186, 132.385, 6.35575, 0.59 ) }
    dend_23 { pt3dadd( 3.67005, 132.903, 6.22533, 0.74 ) }
    dend_23 { pt3dadd( 3.51099, 134.272, 5.87662, 0.37 ) }
    dend_23 { pt3dadd( 3.40132, 135.114, 5.66348, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 3.30375, 135.839, 5.48409, 0.52 ) }
    dend_23 { pt3dadd( 3.1511, 136.77, 5.24257, 0.29 ) }
    dend_23 { pt3dadd( 2.99983, 137.496, 5.03867, 0.81 ) }
    dend_23 { pt3dadd( 2.87078, 137.978, 4.88727, 1.18 ) }
    dend_23 { pt3dadd( 2.85092, 138.033, 4.86894, 1.18 ) }
    dend_23 { pt3dadd( 2.74446, 138.297, 4.76854, 1.18 ) }
    dend_23 { pt3dadd( 2.45664, 139.111, 4.47935, 1.18 ) }
    dend_23 { pt3dadd( 2.25449, 139.808, 4.26413, 0.44 ) }
    dend_23 { pt3dadd( 2.08689, 140.578, 4.04827, 0.29 ) }
    dend_23 { pt3dadd( 2.0635, 140.731, 4.01148, 0.29 ) }
    dend_23 { pt3dadd( 1.97138, 141.795, 3.80522, 0.29 ) }
    dend_23 { pt3dadd( 1.95386, 143.261, 3.60452, 1.62 ) }
    dend_23 { pt3dadd( 1.97488, 143.765, 3.56545, 2.65 ) }
    dend_23 { pt3dadd( 2.00224, 144.269, 3.54637, 2.87 ) }
    dend_23 { pt3dadd( 2.03738, 144.83, 3.53781, 2.36 ) }
    dend_23 { pt3dadd( 2.08071, 145.61, 3.53319, 1.69 ) }
    dend_23 { pt3dadd( 2.13382, 146.84, 3.52292, 0.52 ) }
    dend_23 { pt3dadd( 2.17789, 147.805, 3.515, 0.52 ) }
    dend_23 { pt3dadd( 2.19286, 148.289, 3.50585, 0.81 ) }
    dend_23 { pt3dadd( 2.20601, 148.983, 3.48262, 0.44 ) }
    dend_23 { pt3dadd( 2.22073, 149.97, 3.43524, 0.44 ) }
    dend_23 { pt3dadd( 2.22415, 150.703, 3.3894, 0.37 ) }
    dend_23 { pt3dadd( 2.22565, 150.77, 3.38428, 0.37 ) }
    dend_23 { pt3dadd( 2.28713, 151.614, 3.30674, 0.37 ) }
    dend_23 { pt3dadd( 2.30212, 151.736, 3.29505, 0.37 ) }
    dend_23 { pt3dadd( 2.43498, 152.616, 3.20862, 1.62 ) }
    dend_23 { pt3dadd( 2.53421, 153.187, 3.15879, 2.36 ) }
    dend_23 { pt3dadd( 2.6165, 153.625, 3.12713, 2.36 ) }
    dend_23 { pt3dadd( 2.89565, 155.045, 3.03637, 0.29 ) }
    dend_23 { pt3dadd( 3.03899, 155.727, 2.9972, 0.29 ) }
    dend_23 { pt3dadd( 3.18963, 156.428, 2.96732, 0.37 ) }
    dend_23 { pt3dadd( 3.39308, 157.329, 2.93971, 0.37 ) }
    dend_23 { pt3dadd( 3.47136, 157.688, 2.91759, 0.59 ) }
    dend_23 { pt3dadd( 3.54217, 158.06, 2.87566, 0.59 ) }
    dend_23 { pt3dadd( 3.55085, 158.115, 2.86577, 0.59 ) }
    dend_23 { pt3dadd( 3.70189, 159.508, 2.54508, 0.29 ) }
    dend_23 { pt3dadd( 3.84667, 161.222, 2.07528, 0.29 ) }
    dend_23 { pt3dadd( 3.89787, 162.047, 1.8079, 0.96 ) }
    dend_23 { pt3dadd( 3.927, 162.782, 1.54078, 1.18 ) }
    dend_23 { pt3dadd( 3.92636, 163.35, 1.31979, 0.66 ) }
    dend_23 { pt3dadd( 3.90113, 163.911, 1.09328, 0.44 ) }
    dend_23 { pt3dadd( 3.89305, 163.972, 1.06565, 0.44 ) }
    dend_23 { pt3dadd( 3.76717, 164.65, 0.789174, 0.22 ) }
    dend_23 { pt3dadd( 3.73963, 164.798, 0.746082, 0.22 ) }
    dend_23 { pt3dadd( 3.571, 165.889, 0.533036, 1.47 ) }
    dend_23 { pt3dadd( 3.50873, 166.366, 0.468489, 2.28 ) }
    dend_23 { pt3dadd( 3.46435, 166.792, 0.427194, 2.58 ) }
    dend_23 { pt3dadd( 3.35628, 168.005, 0.350173, 0.29 ) }
    dend_23 { pt3dadd( 3.3029, 168.671, 0.333569, 0.22 ) }
    dend_23 { pt3dadd( 3.26066, 169.352, 0.333336, 0.22 ) }
    dend_23 { pt3dadd( 3.23195, 169.923, 0.341622, 0.22 ) }
    dend_23 { pt3dadd( 3.17477, 170.867, 0.361499, 1.33 ) }
    dend_23 { pt3dadd( 3.15547, 171.122, 0.369464, 1.62 ) }
    dend_23 { pt3dadd( 3.11912, 171.461, 0.369803, 1.62 ) }
    dend_23 { pt3dadd( 3.00084, 172.223, 0.325873, 0.37 ) }
    dend_23 { pt3dadd( 2.85447, 172.927, 0.255387, 0.22 ) }
    dend_23 { pt3dadd( 2.77139, 173.285, 0.216702, 0.22 ) }
    dend_23 { pt3dadd( 2.68061, 173.645, 0.176309, 0.52 ) }
    dend_23 { pt3dadd( 2.49347, 174.433, 0.0899631, 0.29 ) }
    dend_23 { pt3dadd( 2.21368, 175.793, -0.0502361, 0.29 ) }
    dend_23 { pt3dadd( 2.08689, 176.544, -0.119954, 1.03 ) }
    dend_23 { pt3dadd( 2.03934, 177.025, -0.154995, 1.33 ) }
    dend_23 { pt3dadd( 2.0338, 177.238, -0.166517, 1.33 ) }
    dend_23 { pt3dadd( 2.05136, 177.679, -0.180018, 1.18 ) }
    dend_23 { pt3dadd( 2.11416, 178.315, -0.177506, 0.96 ) }
    dend_23 { pt3dadd( 2.18856, 178.795, -0.173864, 0.37 ) }
    dend_23 { pt3dadd( 2.34041, 179.637, -0.165287, 0.22 ) }
    dend_23 { pt3dadd( 2.47971, 180.396, -0.156189, 0.22 ) }
    dend_23 { pt3dadd( 2.61569, 181.186, -0.145791, 1.11 ) }
    dend_23 { pt3dadd( 2.68452, 181.625, -0.152426, 1.92 ) }
    dend_23 { pt3dadd( 2.73665, 181.988, -0.176525, 2.5 ) }
    dend_23 { pt3dadd( 2.74472, 182.055, -0.184167, 2.5 ) }
    dend_23 { pt3dadd( 2.78039, 182.465, -0.256892, 2.5 ) }
    dend_23 { pt3dadd( 2.80728, 183.032, -0.384463, 2.36 ) }
    dend_23 { pt3dadd( 2.83845, 184.37, -0.735775, 0.29 ) }
    dend_23 { pt3dadd( 2.84009, 185.079, -0.934339, 0.29 ) }
    dend_23 { pt3dadd( 2.83738, 185.189, -0.964707, 0.29 ) }
    dend_23 { pt3dadd( 2.80534, 185.924, -1.17834, 1.33 ) }
    dend_23 { pt3dadd( 2.78234, 186.352, -1.30171, 1.55 ) }
    dend_23 { pt3dadd( 2.77854, 186.41, -1.31748, 1.55 ) }
    dend_23 { pt3dadd( 2.7508, 186.827, -1.41189, 1.25 ) }
    dend_23 { pt3dadd( 2.75669, 187.505, -1.52939, 0.66 ) }
    dend_23 { pt3dadd( 2.81615, 188.773, -1.6968, 0.29 ) }
    dend_23 { pt3dadd( 2.87726, 189.502, -1.76872, 0.88 ) }
    dend_23 { pt3dadd( 2.91806, 189.878, -1.79848, 1.11 ) }
    dend_23 { pt3dadd( 2.98142, 190.525, -1.83831, 0.96 ) }
    dend_23 { pt3dadd( 3.05887, 191.819, -1.8483, 0.29 ) }
    dend_23 { pt3dadd( 3.08498, 193.211, -1.79924, 0.29 ) }
    dend_23 { pt3dadd( 3.06203, 194.112, -1.73576, 1.33 ) }
    dend_23 { pt3dadd( 3.02613, 194.822, -1.68664, 1.92 ) }
    dend_23 { pt3dadd( 2.96597, 195.604, -1.62652, 2.21 ) }
    dend_23 { pt3dadd( 2.73962, 197.761, -1.44633, 0.37 ) }
    dend_23 { pt3dadd( 2.5711, 198.994, -1.33604, 0.37 ) }
    dend_23 { pt3dadd( 2.39982, 200.168, -1.22982, 0.37 ) }
    dend_23 { pt3dadd( 2.26919, 201.028, -1.15695, 0.22 ) }
    dend_23 { pt3dadd( 2.13164, 201.974, -1.08504, 1.33 ) }
    dend_23 { pt3dadd( 2.08581, 202.319, -1.06401, 2.06 ) }
    dend_23 { pt3dadd( 2.03209, 202.662, -1.05338, 2.21 ) }
    dend_23 { pt3dadd( 1.87533, 203.481, -1.0264, 1.69 ) }
    dend_23 { pt3dadd( 1.58248, 204.778, -0.983177, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 1.4127, 205.456, -0.962207, 0.81 ) }
    dend_23 { pt3dadd( 1.31505, 205.86, -0.956967, 0.81 ) }
    dend_23 { pt3dadd( 1.11311, 206.902, -0.959365, 0.22 ) }
    dend_23 { pt3dadd( 1.01701, 207.593, -0.974239, 0.81 ) }
    dend_23 { pt3dadd( 1.00526, 207.749, -0.980076, 0.81 ) }
    dend_23 { pt3dadd( 1.00162, 208.244, -1.00675, 0.81 ) }
    dend_23 { pt3dadd( 1.02173, 208.667, -1.03028, 0.74 ) }
    dend_23 { pt3dadd( 1.12098, 209.717, -1.08547, 0.22 ) }
    dend_23 { pt3dadd( 1.21913, 210.501, -1.13505, 0.81 ) }
    dend_23 { pt3dadd( 1.25999, 210.871, -1.15991, 1.03 ) }
    dend_23 { pt3dadd( 1.3091, 211.43, -1.19779, 0.44 ) }
    dend_23 { pt3dadd( 1.37205, 212.473, -1.26711, 0.29 ) }
    dend_23 { pt3dadd( 1.4047, 213.352, -1.32837, 0.29 ) }
    dend_23 { pt3dadd( 1.41124, 214.44, -1.39956, 1.55 ) }
    dend_23 { pt3dadd( 1.41606, 214.779, -1.42326, 1.92 ) }
    dend_23 { pt3dadd( 1.41795, 214.857, -1.42905, 1.92 ) }
    dend_23 { pt3dadd( 1.42491, 215.203, -1.45431, 1.92 ) }
    dend_23 { pt3dadd( 1.44105, 217.314, -1.61222, 0.22 ) }
    dend_23 { pt3dadd( 1.42421, 218.297, -1.68213, 0.66 ) }
    dend_23 { pt3dadd( 1.40536, 218.686, -1.70583, 1.03 ) }
    dend_23 { pt3dadd( 1.35399, 219.269, -1.74344, 1.03 ) }
    dend_23 { pt3dadd( 1.26514, 219.921, -1.78502, 0.81 ) }
    dend_23 { pt3dadd( 1.13284, 220.607, -1.82772, 0.37 ) }
    dend_23 { pt3dadd( 1.05781, 220.902, -1.84309, 0.37 ) }
    dend_23 { pt3dadd( 0.922209, 221.434, -1.87156, 0.37 ) }
    dend_23 { pt3dadd( 0.736234, 222.185, -1.91209, 0.29 ) }
    dend_23 { pt3dadd( 0.542207, 223.065, -1.95912, 0.29 ) }
    dend_23 { pt3dadd( 0.531237, 223.131, -1.96306, 0.29 ) }
    dend_23 { pt3dadd( 0.380486, 224.314, -2.02871, 0.22 ) }
    dend_23 { pt3dadd( 0.373708, 224.39, -2.03342, 0.22 ) }
    dend_23 { pt3dadd( 0.336637, 225.079, -2.07872, 0.22 ) }
    dend_23 { pt3dadd( 0.336731, 225.157, -2.08658, 0.22 ) }
    dend_23 { pt3dadd( 0.382566, 225.999, -2.19406, 1.47 ) }
    dend_23 { pt3dadd( 0.415229, 226.414, -2.25879, 1.84 ) }
    dend_23 { pt3dadd( 0.420125, 226.47, -2.26865, 1.84 ) }
    dend_23 { pt3dadd( 0.457628, 226.879, -2.34021, 1.84 ) }
    dend_23 { pt3dadd( 0.580748, 228.12, -2.55811, 0.22 ) }
    dend_23 { pt3dadd( 0.686128, 229.307, -2.75648, 0.22 ) }
    dend_23 { pt3dadd( 0.732758, 229.86, -2.83265, 0.88 ) }
    dend_23 { pt3dadd( 0.75466, 230.273, -2.87828, 1.18 ) }
    dend_23 { pt3dadd( 0.760011, 230.698, -2.91022, 0.96 ) }
    dend_23 { pt3dadd( 0.756597, 230.767, -2.91229, 0.96 ) }
    dend_23 { pt3dadd( 0.6529, 231.379, -2.88639, 0.37 ) }
    dend_23 { pt3dadd( 0.534995, 231.888, -2.85099, 0.37 ) }
    dend_23 { pt3dadd( 0.425361, 232.433, -2.80537, 0.37 ) }
    dend_23 { pt3dadd( 0.381547, 232.719, -2.78498, 0.29 ) }
    dend_23 { pt3dadd( 0.319362, 233.333, -2.74996, 0.22 ) }
    dend_23 { pt3dadd( 0.295447, 233.715, -2.73369, 0.52 ) }
    dend_23 { pt3dadd( 0.283414, 234.505, -2.71474, 0.22 ) }
    dend_23 { pt3dadd( 0.302035, 235.121, -2.71474, 0.22 ) }
    dend_23 { pt3dadd( 0.352385, 235.68, -2.73977, 1.11 ) }
    dend_23 { pt3dadd( 0.405261, 236.2, -2.80209, 1.47 ) }
    dend_23 { pt3dadd( 0.410558, 236.275, -2.81561, 1.47 ) }
    dend_23 { pt3dadd( 0.422854, 236.632, -2.89657, 1.33 ) }
    dend_23 { pt3dadd( 0.419008, 236.732, -2.92338, 1.33 ) }
    dend_23 { pt3dadd( 0.329624, 237.606, -3.16557, 0.74 ) }
    dend_23 { pt3dadd( 0.221099, 238.616, -3.45297, 0.29 ) }
    dend_23 { pt3dadd( 0.163756, 239.186, -3.60752, 0.37 ) }
    dend_23 { pt3dadd( 0.159966, 239.245, -3.62191, 0.37 ) }
    dend_23 { pt3dadd( 0.143471, 239.727, -3.72384, 0.37 ) }
    dend_23 { pt3dadd( 0.140952, 240.429, -3.85064, 0.22 ) }
    dend_23 { pt3dadd( 0.172738, 241.262, -3.97478, 1.11 ) }
    dend_23 { pt3dadd( 0.214966, 241.762, -4.04674, 1.4 ) }
    dend_23 { pt3dadd( 0.267425, 242.232, -4.1202, 1.18 ) }
    dend_23 { pt3dadd( 0.342995, 242.865, -4.22861, 0.44 ) }
    dend_23 { pt3dadd( 0.479291, 243.862, -4.43098, 0.22 ) }
    dend_23 { pt3dadd( 0.599479, 244.525, -4.5712, 0.74 ) }
    dend_23 { pt3dadd( 0.678764, 244.931, -4.64899, 1.33 ) }
    dend_23 { pt3dadd( 0.690252, 244.986, -4.65938, 1.33 ) }
    dend_23 { pt3dadd( 0.833771, 245.683, -4.77585, 1.62 ) }
    dend_23 { pt3dadd( 0.912038, 246.062, -4.82915, 1.62 ) }
    dend_23 { pt3dadd( 1.24132, 247.618, -5.00023, 0.29 ) }
    dend_23 { pt3dadd( 1.44472, 248.651, -5.0904, 0.29 ) }
    dend_23 { pt3dadd( 1.45557, 248.718, -5.09577, 0.29 ) }
    dend_23 { pt3dadd( 1.58468, 249.859, -5.17288, 0.29 ) }
    dend_23 { pt3dadd( 1.60972, 250.419, -5.19758, 1.03 ) }
    dend_23 { pt3dadd( 1.60799, 250.497, -5.1998, 1.03 ) }
    dend_23 { pt3dadd( 1.54561, 251.131, -5.21907, 1.18 ) }
    dend_23 { pt3dadd( 1.3941, 252.261, -5.25242, 0.29 ) }
    dend_23 { pt3dadd( 1.26983, 253.161, -5.27488, 0.29 ) }
    dend_23 { pt3dadd( 1.14617, 253.99, -5.29258, 1.18 ) }
    dend_23 { pt3dadd( 1.09832, 254.349, -5.29796, 1.47 ) }
    dend_23 { pt3dadd( 1.03283, 254.888, -5.30252, 1.25 ) }
    dend_23 { pt3dadd( 0.992274, 255.328, -5.30203, 1.33 ) }
    dend_23 { pt3dadd( 0.933705, 256.512, -5.28429, 0.22 ) }
    dend_23 { pt3dadd( 0.936304, 256.657, -5.28304, 0.22 ) }
    dend_23 { pt3dadd( 1.05457, 257.727, -5.2574, 0.22 ) }
    dend_23 { pt3dadd( 1.06733, 257.803, -5.25428, 0.22 ) }
    dend_23 { pt3dadd( 1.21915, 258.541, -5.21287, 0.74 ) }
    dend_23 { pt3dadd( 1.29806, 258.893, -5.1888, 1.18 ) }
    dend_23 { pt3dadd( 1.37208, 259.317, -5.15721, 1.18 ) }
    dend_23 { pt3dadd( 1.51965, 260.575, -5.0682, 0.22 ) }
    dend_23 { pt3dadd( 1.52522, 260.642, -5.06347, 0.22 ) }
    dend_23 { pt3dadd( 1.56783, 261.327, -5.01969, 0.66 ) }
    dend_23 { pt3dadd( 1.58857, 261.684, -5.0197, 0.66 ) }
    dend_23 { pt3dadd( 1.6794, 262.933, -5.08155, 0.22 ) }
    dend_23 { pt3dadd( 1.73418, 263.626, -5.14003, 1.25 ) }
    dend_23 { pt3dadd( 1.78669, 264.235, -5.21037, 1.55 ) }
    dend_23 { pt3dadd( 1.86119, 264.911, -5.29466, 1.69 ) }
    dend_23 { pt3dadd( 2.04672, 266.277, -5.48185, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( 2.24284, 267.617, -5.67048, 0.22 ) }
    dend_23 { pt3dadd( 2.33321, 268.192, -5.75432, 0.66 ) }
    dend_23 { pt3dadd( 2.40297, 268.609, -5.80993, 0.81 ) }
    dend_23 { pt3dadd( 2.41309, 268.675, -5.81751, 0.81 ) }
    dend_23 { pt3dadd( 2.60824, 270.097, -5.93587, 0.22 ) }
    dend_23 { pt3dadd( 2.71468, 270.932, -5.96567, 1.03 ) }
    dend_23 { pt3dadd( 2.73816, 271.145, -5.97667, 1.33 ) }
    dend_23 { pt3dadd( 2.8689, 272.428, -6.04755, 0.22 ) }
    dend_23 { pt3dadd( 2.92286, 272.987, -6.07782, 0.81 ) }
    dend_23 { pt3dadd( 2.96281, 273.469, -6.10187, 1.03 ) }
    dend_23 { pt3dadd( 2.98989, 273.865, -6.11939, 0.74 ) }
    dend_23 { pt3dadd( 3.06406, 275.366, -6.18653, 0.22 ) }
    dend_23 { pt3dadd( 3.07622, 276.08, -6.21666, 0.44 ) }
    dend_23 { pt3dadd( 3.04714, 276.945, -6.25045, 0.22 ) }
    dend_23 { pt3dadd( 3.01299, 277.713, -6.27679, 1.11 ) }
    dend_23 { pt3dadd( 2.98857, 278.128, -6.28813, 1.33 ) }
    dend_23 { pt3dadd( 2.94908, 278.766, -6.30244, 0.37 ) }
    dend_23 { pt3dadd( 2.90123, 279.595, -6.3114, 0.15 ) }
    dend_23 { pt3dadd( 2.88041, 280.22, -6.32475, 0.74 ) }
    dend_23 { pt3dadd( 2.88477, 280.289, -6.32742, 0.74 ) }
    dend_23 { pt3dadd( 2.91868, 280.568, -6.34082, 0.74 ) }
    dend_23 { pt3dadd( 3.09493, 281.658, -6.39943, 0.22 ) }
    dend_23 { pt3dadd( 3.20877, 282.268, -6.43368, 1.18 ) }
    dend_23 { pt3dadd( 3.29635, 282.704, -6.46076, 1.62 ) }
    dend_23 { pt3dadd( 3.67775, 284.662, -6.59089, 0.22 ) }
    dend_23 { pt3dadd( 3.79073, 285.281, -6.63298, 0.29 ) }
    dend_23 { pt3dadd( 3.80182, 285.349, -6.63758, 0.29 ) }
    dend_23 { pt3dadd( 3.9174, 286.177, -6.69019, 0.29 ) }
    dend_23 { pt3dadd( 4.01681, 286.98, -6.74442, 0.59 ) }
    dend_23 { pt3dadd( 4.05955, 287.531, -6.79309, 1.11 ) }
    dend_23 { pt3dadd( 4.06342, 287.626, -6.80228, 1.11 ) }
    dend_23 { pt3dadd( 4.09581, 288.175, -6.85541, 1.55 ) }
    dend_23 { pt3dadd( 4.13094, 288.775, -6.91208, 1.55 ) }
    dend_23 { pt3dadd( 4.13401, 288.832, -6.91719, 1.55 ) }
    dend_23 { pt3dadd( 4.21277, 290.704, -7.06673, 0.22 ) }
    dend_23 { pt3dadd( 4.2729, 292.059, -7.16197, 0.22 ) }
    dend_23 { pt3dadd( 4.35619, 292.999, -7.21935, 1.4 ) }
    dend_23 { pt3dadd( 4.3823, 293.215, -7.23049, 1.77 ) }
    dend_23 { pt3dadd( 4.46807, 293.838, -7.25637, 1.4 ) }
    dend_23 { pt3dadd( 4.60129, 294.591, -7.27692, 0.74 ) }
    dend_23 { pt3dadd( 4.82474, 295.575, -7.28657, 0.29 ) }
    dend_23 { pt3dadd( 5.2924, 297.336, -7.3057, 0.22 ) }
    dend_23 { pt3dadd( 5.49539, 298.036, -7.31364, 0.66 ) }
    dend_23 { pt3dadd( 5.60086, 298.372, -7.31828, 0.66 ) }
    dend_23 { pt3dadd( 5.9009, 299.222, -7.32979, 0.22 ) }
    dend_23 { pt3dadd( 5.92474, 299.287, -7.32877, 0.22 ) }
    dend_23 { pt3dadd( 6.11205, 299.848, -7.29857, 0.52 ) }
    dend_23 { pt3dadd( 6.13175, 299.922, -7.29106, 0.52 ) }
    dend_23 { pt3dadd( 6.21973, 300.263, -7.25011, 0.52 ) }
    dend_23 { pt3dadd( 6.35595, 300.738, -7.15617, 0.22 ) }
    dend_23 { pt3dadd( 6.63931, 301.616, -6.92774, 1.03 ) }
    dend_23 { pt3dadd( 6.81894, 302.073, -6.78357, 1.62 ) }
    dend_23 { pt3dadd( 6.9847, 302.474, -6.64697, 1.47 ) }
    dend_23 { pt3dadd( 7.22267, 303.05, -6.43343, 1.33 ) }
    dend_23 { pt3dadd( 7.78117, 304.435, -5.85945, 0.22 ) }
    dend_23 { pt3dadd( 8.14397, 305.331, -5.46376, 1.18 ) }
    dend_23 { pt3dadd( 8.61908, 306.452, -4.953, 0.22 ) }
    dend_23 { pt3dadd( 8.82172, 306.923, -4.72843, 0.22 ) }
    dend_23 { pt3dadd( 9.09819, 307.56, -4.41677, 0.81 ) }
    dend_23 { pt3dadd( 9.69451, 308.919, -3.75362, 0.22 ) }
    dend_23 { pt3dadd( 9.71759, 308.977, -3.72645, 0.22 ) }
    dend_23 { pt3dadd( 9.8727, 309.411, -3.52198, 0.81 ) }
    dend_23 { pt3dadd( 9.89209, 309.47, -3.49483, 0.81 ) }
    dend_23 { pt3dadd( 9.99784, 309.729, -3.37348, 1.11 ) }
    dend_23 { pt3dadd( 10.204, 310.131, -3.23126, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -23.554, -35.5908, 18.5651, 0.29 ) }
    dend_18 { pt3dadd( -24.6461, -35.6289, 19.2742, 0.29 ) }
    dend_18 { pt3dadd( -25.8711, -35.6835, 20.2932, 0.29 ) }
    dend_18 { pt3dadd( -26.4737, -35.7663, 20.762, 0.59 ) }
    dend_18 { pt3dadd( -27.4542, -36.0222, 21.4325, 0.59 ) }
    dend_18 { pt3dadd( -27.5543, -36.0571, 21.4876, 0.59 ) }
    dend_18 { pt3dadd( -29.2199, -36.7164, 22.2802, 0.59 ) }
    dend_18 { pt3dadd( -29.2759, -36.7426, 22.312, 0.59 ) }
    dend_18 { pt3dadd( -30.0327, -37.1794, 22.8648, 0.37 ) }
    dend_18 { pt3dadd( -30.644, -37.5986, 23.3297, 0.29 ) }
    dend_18 { pt3dadd( -31.1889, -38.0005, 23.7234, 0.29 ) }
    dend_18 { pt3dadd( -31.2294, -38.0318, 23.7529, 0.29 ) }
    dend_18 { pt3dadd( -32.2314, -38.8993, 24.5093, 0.74 ) }
    dend_18 { pt3dadd( -32.4733, -39.1321, 24.7516, 1.03 ) }
    dend_18 { pt3dadd( -33.0187, -39.7644, 25.4872, 0.29 ) }
    dend_18 { pt3dadd( -33.0765, -39.84, 25.5721, 0.29 ) }
    dend_18 { pt3dadd( -33.42, -40.3314, 26.0656, 0.37 ) }
    dend_18 { pt3dadd( -33.6789, -40.6994, 26.3747, 0.52 ) }
    dend_18 { pt3dadd( -33.8983, -41.0118, 26.5581, 0.52 ) }
    dend_18 { pt3dadd( -34.4223, -41.5296, 26.8087, 0.29 ) }
    dend_18 { pt3dadd( -35.1111, -41.933, 26.9766, 0.29 ) }
    dend_18 { pt3dadd( -35.5289, -42.0865, 27.0502, 0.59 ) }
    dend_18 { pt3dadd( -35.8281, -42.1562, 27.0907, 0.88 ) }
    dend_18 { pt3dadd( -36.1305, -42.2148, 27.1255, 1.03 ) }
    dend_18 { pt3dadd( -37.5426, -42.4849, 27.3491, 0.29 ) }
    dend_18 { pt3dadd( -38.4001, -42.6453, 27.5302, 0.44 ) }
    dend_18 { pt3dadd( -38.8957, -42.775, 27.674, 0.74 ) }
    dend_18 { pt3dadd( -38.986, -42.8116, 27.7049, 0.74 ) }
    dend_18 { pt3dadd( -39.5112, -43.0631, 27.9062, 0.66 ) }
    dend_18 { pt3dadd( -40.3771, -43.5709, 28.2981, 0.66 ) }
    dend_18 { pt3dadd( -40.4251, -43.6107, 28.3272, 0.66 ) }
    dend_18 { pt3dadd( -40.7959, -43.9635, 28.5586, 0.29 ) }
    dend_18 { pt3dadd( -41.5452, -44.7446, 29.0686, 0.22 ) }
    dend_18 { pt3dadd( -48.4004, -49.1427, 34.6876, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -23.554, -35.5908, 18.5651, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -24.1395, -34.9263, 20.0313, 0.74 ) }
    dend_15 { pt3dadd( -24.9365, -34.0648, 21.7144, 0.66 ) }
    dend_15 { pt3dadd( -24.9871, -34.0101, 21.8213, 0.66 ) }
    dend_15 { pt3dadd( -25.223, -33.755, 22.3196, 0.66 ) }
    dend_15 { pt3dadd( -25.2511, -33.7248, 22.3787, 0.66 ) }
    dend_15 { pt3dadd( -25.4314, -33.5299, 22.7595, 0.52 ) }
    dend_15 { pt3dadd( -25.6, -33.2769, 22.9996, 0.52 ) }
    dend_15 { pt3dadd( -30.2053, -29.5198, 30.9464, 0.52 ) }
    dend_15 { pt3dadd( -33.9893, -24.9653, 38.8646, 0.52 ) }
    dend_15 { pt3dadd( -37.3037, -22.1041, 47.8057, 0.52 ) }
    dend_15 { pt3dadd( -38.7293, -18.3752, 56.892, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.05654, -21.9708, 0.911928, 0.96 ) }
    dend_7 { pt3dadd( -7.64862, -23.3135, 0.941366, 0.96 ) }
    dend_7 { pt3dadd( -8.1724, -24.6523, 0.965416, 0.96 ) }
    dend_7 { pt3dadd( -8.22002, -24.8049, 0.967467, 0.96 ) }
    dend_7 { pt3dadd( -8.41841, -25.5909, 0.949369, 0.96 ) }
    dend_7 { pt3dadd( -8.71988, -26.9406, 0.895459, 1.11 ) }
    dend_7 { pt3dadd( -9.03448, -28.5554, 0.763651, 1.11 ) }
    dend_7 { pt3dadd( -9.04332, -28.633, 0.75572, 1.11 ) }
    dend_7 { pt3dadd( -9.16043, -30.2435, 0.562934, 1.03 ) }
    dend_7 { pt3dadd( -9.22704, -31.4059, 0.406186, 1.99 ) }
    dend_7 { pt3dadd( -9.22913, -31.4832, 0.393248, 1.99 ) }
    dend_7 { pt3dadd( -9.22658, -32.5487, 0.146408, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.05654, -21.9708, 0.911928, 1.92 ) }
    dend_2 { pt3dadd( -6.67402, -23.8764, 1.01778, 1.92 ) }
    dend_2 { pt3dadd( -6.31778, -25.5913, 1.10283, 1.92 ) }
    dend_2 { pt3dadd( -5.98775, -27.151, 1.17186, 1.92 ) }
    dend_2 { pt3dadd( -5.69088, -28.596, 1.22862, 2.14 ) }
    dend_2 { pt3dadd( -5.40109, -29.9515, 1.27518, 1.62 ) }
    dend_2 { pt3dadd( -5.08769, -31.3105, 1.31218, 1.99 ) }
    dend_2 { pt3dadd( -4.84774, -32.2231, 1.31225, 2.73 ) }
    dend_2 { pt3dadd( -4.53774, -33.2376, 1.31129, 2.36 ) }
    dend_2 { pt3dadd( -4.1431, -34.3641, 1.34495, 1.99 ) }
    dend_2 { pt3dadd( -3.56684, -35.8325, 1.432, 1.92 ) }
    dend_2 { pt3dadd( -3.18225, -36.7069, 1.50849, 2.28 ) }
    dend_2 { pt3dadd( -2.77634, -37.5841, 1.62674, 2.5 ) }
    dend_2 { pt3dadd( -2.38636, -38.4228, 1.78452, 2.58 ) }
    dend_2 { pt3dadd( -1.77358, -39.7862, 2.14644, 1.69 ) }
    dend_2 { pt3dadd( -1.75204, -39.8371, 2.16281, 1.69 ) }
    dend_2 { pt3dadd( -1.33507, -41.0502, 2.58482, 1.47 ) }
    dend_2 { pt3dadd( -0.901075, -42.7542, 3.18809, 1.25 ) }
    dend_2 { pt3dadd( -0.742817, -43.7103, 3.51652, 1.62 ) }
    dend_2 { pt3dadd( -0.663468, -44.722, 3.83507, 1.62 ) }
    dend_2 { pt3dadd( -0.669462, -45.8074, 4.12814, 1.25 ) }
    dend_2 { pt3dadd( -0.776952, -47.0487, 4.43, 1.25 ) }
    dend_2 { pt3dadd( -1.03204, -48.2521, 4.67632, 1.77 ) }
    dend_2 { pt3dadd( -1.26065, -48.9203, 4.76711, 1.92 ) }
    dend_2 { pt3dadd( -1.57332, -49.6737, 4.82541, 1.92 ) }
    dend_2 { pt3dadd( -1.91814, -50.4017, 4.85168, 2.06 ) }
    dend_2 { pt3dadd( -2.37863, -51.2757, 4.87419, 1.92 ) }
    dend_2 { pt3dadd( -2.98302, -52.3765, 4.88926, 1.77 ) }
    dend_2 { pt3dadd( -3.6302, -53.5573, 4.88926, 1.55 ) }
    dend_2 { pt3dadd( -4.39991, -54.9951, 4.88926, 1.4 ) }
    dend_2 { pt3dadd( -4.99192, -56.1455, 4.91903, 1.4 ) }
    dend_2 { pt3dadd( -5.4626, -57.1414, 4.96659, 1.84 ) }
    dend_2 { pt3dadd( -5.77277, -57.9238, 5.04086, 1.77 ) }
    dend_2 { pt3dadd( -6.08763, -58.9912, 5.19166, 1.25 ) }
    dend_2 { pt3dadd( -6.10075, -59.0656, 5.2052, 1.25 ) }
    dend_2 { pt3dadd( -6.20471, -60.4619, 5.51132, 0.88 ) }
    dend_2 { pt3dadd( -6.17716, -61.1396, 5.66772, 1.62 ) }
    dend_2 { pt3dadd( -6.01797, -62.3623, 5.93648, 1.92 ) }
    dend_2 { pt3dadd( -5.8238, -63.4318, 6.14342, 1.92 ) }
    dend_2 { pt3dadd( -5.63134, -64.4401, 6.30345, 1.77 ) }
    dend_2 { pt3dadd( -5.62005, -64.506, 6.31098, 1.77 ) }
    dend_2 { pt3dadd( -5.40549, -65.885, 6.40181, 1.62 ) }
    dend_2 { pt3dadd( -5.27231, -66.9952, 6.41478, 1.33 ) }
    dend_2 { pt3dadd( -5.17499, -68.037, 6.37382, 1.18 ) }
    dend_2 { pt3dadd( -5.1029, -69.0308, 6.31726, 1.18 ) }
    dend_2 { pt3dadd( -5.04116, -70.1572, 6.23606, 1.55 ) }
    dend_2 { pt3dadd( -5.01764, -71.5422, 6.10432, 1.62 ) }
    dend_2 { pt3dadd( -5.05966, -72.7467, 5.96552, 2.14 ) }
    dend_2 { pt3dadd( -5.12806, -73.6586, 5.85403, 2.36 ) }
    dend_2 { pt3dadd( -5.21349, -74.5221, 5.74674, 2.58 ) }
    dend_2 { pt3dadd( -5.28095, -75.1639, 5.67264, 3.02 ) }
    dend_2 { pt3dadd( -5.43897, -76.7011, 5.54171, 2.21 ) }
    dend_2 { pt3dadd( -5.55196, -78.0593, 5.46732, 1.77 ) }
    dend_2 { pt3dadd( -5.62546, -79.2888, 5.4382, 1.77 ) }
    dend_2 { pt3dadd( -5.65947, -80.6549, 5.455, 1.84 ) }
    dend_2 { pt3dadd( -5.61823, -82.2592, 5.57578, 1.84 ) }
    dend_2 { pt3dadd( -5.4925, -83.8835, 5.79741, 1.18 ) }
    dend_2 { pt3dadd( -5.25067, -85.5696, 6.13584, 0.96 ) }
    dend_2 { pt3dadd( -5.2378, -85.635, 6.15579, 0.96 ) }
    dend_2 { pt3dadd( -4.95436, -86.7563, 6.66666, 1.33 ) }
    dend_2 { pt3dadd( -4.61536, -87.8764, 7.31978, 1.84 ) }
    dend_2 { pt3dadd( -4.34996, -88.7441, 7.89522, 1.84 ) }
    dend_2 { pt3dadd( -4.11057, -89.5935, 8.4571, 1.77 ) }
    dend_2 { pt3dadd( -3.73999, -91.1579, 9.39825, 1.69 ) }
    dend_2 { pt3dadd( -3.46, -92.6571, 10.1153, 0.74 ) }
    dend_2 { pt3dadd( -3.3526, -93.5273, 10.409, 0.74 ) }
    dend_2 { pt3dadd( -3.26486, -94.6176, 10.6528, 1.18 ) }
    dend_2 { pt3dadd( -3.21838, -95.6497, 10.7712, 1.47 ) }
    dend_2 { pt3dadd( -3.22264, -96.6607, 10.7271, 1.62 ) }
    dend_2 { pt3dadd( -3.26676, -97.4131, 10.5559, 1.92 ) }
    dend_2 { pt3dadd( -3.33257, -98.0112, 10.376, 1.92 ) }
    dend_2 { pt3dadd( -3.33994, -98.0658, 10.3604, 1.92 ) }
    dend_2 { pt3dadd( -3.44571, -98.7877, 10.1838, 1.92 ) }
    dend_2 { pt3dadd( -3.61664, -99.8336, 9.99542, 1.33 ) }
    dend_2 { pt3dadd( -3.82164, -100.866, 9.84065, 1.47 ) }
    dend_2 { pt3dadd( -4.03846, -101.915, 9.70058, 1.92 ) }
    dend_2 { pt3dadd( -4.18474, -102.687, 9.60581, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -4.35871, -103.726, 9.49588, 1.99 ) }
    dend_2 { pt3dadd( -4.51641, -105.021, 9.38502, 1.99 ) }
    dend_2 { pt3dadd( -4.61871, -106.516, 9.2778, 1.99 ) }
    dend_2 { pt3dadd( -4.62255, -106.872, 9.26028, 2.36 ) }
    dend_2 { pt3dadd( -4.60194, -107.72, 9.21761, 1.62 ) }
    dend_2 { pt3dadd( -4.5532, -108.618, 9.17508, 1.25 ) }
    dend_2 { pt3dadd( -4.46381, -109.734, 9.12388, 1.11 ) }
    dend_2 { pt3dadd( -4.39647, -110.677, 9.08293, 0.81 ) }
    dend_2 { pt3dadd( -4.33612, -111.906, 9.04688, 0.66 ) }
    dend_2 { pt3dadd( -4.34585, -112.969, 9.02321, 1.55 ) }
    dend_2 { pt3dadd( -4.3497, -113.038, 9.02219, 1.55 ) }
    dend_2 { pt3dadd( -4.39989, -113.606, 9.06069, 2.21 ) }
    dend_2 { pt3dadd( -4.49231, -114.402, 9.16667, 1.92 ) }
    dend_2 { pt3dadd( -4.61178, -115.451, 9.35323, 1.62 ) }
    dend_2 { pt3dadd( -4.71668, -116.423, 9.56295, 1.4 ) }
    dend_2 { pt3dadd( -4.80088, -117.501, 9.88628, 1.4 ) }
    dend_2 { pt3dadd( -4.90906, -119.198, 10.482, 1.33 ) }
    dend_2 { pt3dadd( -4.93273, -120.033, 10.8058, 0.96 ) }
    dend_2 { pt3dadd( -4.90421, -121.293, 11.323, 0.74 ) }
    dend_2 { pt3dadd( -4.89824, -121.369, 11.3573, 0.74 ) }
    dend_2 { pt3dadd( -4.63574, -123.095, 12.1874, 0.66 ) }
    dend_2 { pt3dadd( -4.61793, -123.152, 12.2186, 0.66 ) }
    dend_2 { pt3dadd( -4.10484, -124.296, 12.8481, 1.69 ) }
    dend_2 { pt3dadd( -3.78899, -124.932, 13.2075, 2.21 ) }
    dend_2 { pt3dadd( -3.3055, -125.927, 13.7493, 3.02 ) }
    dend_2 { pt3dadd( -3.02449, -126.579, 14.0676, 3.02 ) }
    dend_2 { pt3dadd( -2.26929, -128.666, 14.9294, 0.52 ) }
    dend_2 { pt3dadd( -2.08072, -129.45, 15.1857, 0.52 ) }
    dend_2 { pt3dadd( -1.96916, -130.429, 15.4199, 2.36 ) }
    dend_2 { pt3dadd( -1.96172, -131.354, 15.5516, 3.09 ) }
    dend_2 { pt3dadd( -2.00051, -131.799, 15.571, 3.24 ) }
    dend_2 { pt3dadd( -2.14098, -132.702, 15.56, 3.02 ) }
    dend_2 { pt3dadd( -2.5703, -134.696, 15.419, 1.11 ) }
    dend_2 { pt3dadd( -2.77566, -135.739, 15.3471, 0.96 ) }
    dend_2 { pt3dadd( -2.8993, -136.508, 15.2944, 1.25 ) }
    dend_2 { pt3dadd( -3.01673, -137.564, 15.2508, 1.18 ) }
    dend_2 { pt3dadd( -3.06427, -138.361, 15.2447, 0.52 ) }
    dend_2 { pt3dadd( -3.06357, -138.43, 15.2475, 0.52 ) }
    dend_2 { pt3dadd( -2.95607, -139.175, 15.3401, 1.4 ) }
    dend_2 { pt3dadd( -2.94045, -139.229, 15.3476, 1.4 ) }
    dend_2 { pt3dadd( -2.54972, -140.143, 15.4645, 2.14 ) }
    dend_2 { pt3dadd( -2.24129, -140.778, 15.5302, 2.14 ) }
    dend_2 { pt3dadd( -2.02529, -141.239, 15.5613, 2.36 ) }
    dend_2 { pt3dadd( -1.6571, -142.106, 15.6007, 1.33 ) }
    dend_2 { pt3dadd( -1.26387, -143.156, 15.6072, 0.81 ) }
    dend_2 { pt3dadd( -0.849228, -144.484, 15.5547, 0.81 ) }
    dend_2 { pt3dadd( -0.53875, -145.772, 15.4506, 0.81 ) }
    dend_2 { pt3dadd( -0.277865, -147.143, 15.3407, 1.62 ) }
    dend_2 { pt3dadd( -0.16242, -147.878, 15.2844, 1.92 ) }
    dend_2 { pt3dadd( -0.0102291, -149.011, 15.2475, 1.25 ) }
    dend_2 { pt3dadd( 0.120993, -150.099, 15.2539, 0.96 ) }
    dend_2 { pt3dadd( 0.292397, -151.571, 15.3139, 0.96 ) }
    dend_2 { pt3dadd( 0.483278, -152.846, 15.4142, 0.88 ) }
    dend_2 { pt3dadd( 0.72332, -154.148, 15.579, 1.62 ) }
    dend_2 { pt3dadd( 1.06035, -155.641, 15.819, 1.84 ) }
    dend_2 { pt3dadd( 1.25988, -156.447, 16.023, 1.92 ) }
    dend_2 { pt3dadd( 1.27784, -156.518, 16.0466, 1.92 ) }
    dend_2 { pt3dadd( 1.54191, -157.581, 16.4466, 1.62 ) }
    dend_2 { pt3dadd( 1.83939, -158.898, 16.958, 0.59 ) }
    dend_2 { pt3dadd( 2.04976, -159.926, 17.3518, 0.59 ) }
    dend_2 { pt3dadd( 2.35473, -161.47, 17.8727, 0.52 ) }
    dend_2 { pt3dadd( 2.55453, -162.493, 18.2381, 1.69 ) }
    dend_2 { pt3dadd( 2.6787, -163.154, 18.4825, 2.5 ) }
    dend_2 { pt3dadd( 2.77264, -163.738, 18.7139, 2.5 ) }
    dend_2 { pt3dadd( 2.88708, -164.438, 18.9924, 2.5 ) }
    dend_2 { pt3dadd( 3.06297, -165.494, 19.3573, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.86611, 100.285, -20.1616, 0.59 ) }
    dend_67 { pt3dadd( -10.7343, 101.107, -20.6365, 0.59 ) }
    dend_67 { pt3dadd( -11.3972, 101.857, -21.0996, 0.44 ) }
    dend_67 { pt3dadd( -11.4198, 101.977, -21.7381, 0.74 ) }
    dend_67 { pt3dadd( -11.4437, 102.178, -22.7382, 0.74 ) }
    dend_67 { pt3dadd( -11.4526, 102.209, -22.8897, 0.74 ) }
    dend_67 { pt3dadd( -11.5293, 102.384, -23.6535, 0.88 ) }
    dend_67 { pt3dadd( -11.5355, 102.398, -23.7215, 0.88 ) }
    dend_67 { pt3dadd( -12.1012, 103.589, -29.1514, 1.62 ) }
    dend_67 { pt3dadd( -12.3209, 103.924, -30.6819, 1.4 ) }
    dend_67 { pt3dadd( -12.627, 104.254, -32.2593, 0.37 ) }
    dend_67 { pt3dadd( -12.8349, 104.431, -33.1087, 0.74 ) }
    dend_67 { pt3dadd( -13.3766, 104.816, -34.865, 0.29 ) }
    dend_67 { pt3dadd( -13.6309, 104.992, -35.4907, 1.4 ) }
    dend_67 { pt3dadd( -13.9402, 105.197, -35.991, 1.84 ) }
    dend_67 { pt3dadd( -15.0178, 105.872, -37.8648, 0.44 ) }
    dend_67 { pt3dadd( -15.189, 105.993, -38.187, 0.29 ) }
    dend_67 { pt3dadd( -15.4673, 106.184, -38.7269, 0.29 ) }
    dend_67 { pt3dadd( -15.7379, 106.371, -39.2301, 0.59 ) }
    dend_67 { pt3dadd( -16.6677, 107.055, -41.0327, 0.44 ) }
    dend_67 { pt3dadd( -16.9853, 107.324, -41.6148, 0.22 ) }
    dend_67 { pt3dadd( -17.2355, 107.566, -42.0197, 0.74 ) }
    dend_67 { pt3dadd( -17.6487, 108.002, -42.7558, 0.15 ) }
    dend_67 { pt3dadd( -17.7138, 108.071, -42.8732, 0.15 ) }
    dend_67 { pt3dadd( -17.8689, 108.246, -43.1369, 0.15 ) }
    dend_67 { pt3dadd( -18.4524, 108.944, -43.9947, 1.47 ) }
    dend_67 { pt3dadd( -18.7551, 109.307, -44.4187, 1.62 ) }
    dend_67 { pt3dadd( -19.8906, 110.626, -46.0608, 0.22 ) }
    dend_67 { pt3dadd( -19.9239, 110.665, -46.1106, 0.22 ) }
    dend_67 { pt3dadd( -20.3405, 111.122, -46.722, 0.22 ) }
    dend_67 { pt3dadd( -20.8928, 111.69, -47.5183, 1.25 ) }
    dend_67 { pt3dadd( -21.1506, 111.961, -47.9366, 1.4 ) }
    dend_67 { pt3dadd( -21.9308, 112.818, -49.2647, 0.22 ) }
    dend_67 { pt3dadd( -21.9788, 112.877, -49.3556, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -22.5786, 113.702, -50.6547, 1.47 ) }
    dend_67 { pt3dadd( -22.7486, 113.962, -51.0523, 1.99 ) }
    dend_67 { pt3dadd( -23.5828, 115.436, -53.1394, 0.37 ) }
    dend_67 { pt3dadd( -23.7799, 115.833, -53.6512, 0.29 ) }
    dend_67 { pt3dadd( -24.0891, 116.524, -54.453, 1.18 ) }
    dend_67 { pt3dadd( -24.4235, 117.326, -55.3133, 0.52 ) }
    dend_67 { pt3dadd( -24.6984, 118.099, -56.0466, 1.55 ) }
    dend_67 { pt3dadd( -24.7891, 118.379, -56.2823, 1.84 ) }
    dend_67 { pt3dadd( -25.2916, 120.069, -57.4202, 0.22 ) }
    dend_67 { pt3dadd( -25.3047, 120.125, -57.4563, 0.22 ) }
    dend_67 { pt3dadd( -25.3884, 120.627, -57.7446, 0.22 ) }
    dend_67 { pt3dadd( -25.4028, 121.232, -58.0555, 1.4 ) }
    dend_67 { pt3dadd( -25.3983, 121.301, -58.0897, 1.4 ) }
    dend_67 { pt3dadd( -25.3583, 121.693, -58.2639, 1.4 ) }
    dend_67 { pt3dadd( -25.12, 123.176, -58.8971, 0.15 ) }
    dend_67 { pt3dadd( -25.0166, 123.799, -59.1873, 0.74 ) }
    dend_67 { pt3dadd( -24.7613, 125.243, -59.9063, 0.15 ) }
    dend_67 { pt3dadd( -24.6649, 125.748, -60.1687, 0.74 ) }
    dend_67 { pt3dadd( -24.6081, 125.999, -60.3, 0.88 ) }
    dend_67 { pt3dadd( -24.258, 127.258, -60.9413, 0.15 ) }
    dend_67 { pt3dadd( -24.2404, 127.306, -60.9685, 0.15 ) }
    dend_67 { pt3dadd( -24.0817, 127.669, -61.2084, 0.37 ) }
    dend_67 { pt3dadd( -24.0251, 127.75, -61.3089, 0.37 ) }
    dend_67 { pt3dadd( -23.6524, 128.099, -62.002, 0.22 ) }
    dend_67 { pt3dadd( -23.3343, 128.354, -62.599, 0.59 ) }
    dend_67 { pt3dadd( -22.474, 128.896, -64.2315, 1.69 ) }
    dend_67 { pt3dadd( -22.3807, 128.948, -64.4161, 1.69 ) }
    dend_67 { pt3dadd( -20.9387, 129.552, -67.4622, 0.22 ) }
    dend_67 { pt3dadd( -20.6694, 129.623, -68.0653, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.86611, 100.285, -20.1616, 2.65 ) }
    dend_28 { pt3dadd( -9.74065, 101.132, -19.6738, 2.65 ) }
    dend_28 { pt3dadd( -9.67061, 102.096, -19.2302, 2.06 ) }
    dend_28 { pt3dadd( -9.63021, 103.808, -18.5645, 1.92 ) }
    dend_28 { pt3dadd( -9.63065, 103.862, -18.5456, 1.92 ) }
    dend_28 { pt3dadd( -9.67781, 104.847, -18.2379, 0.74 ) }
    dend_28 { pt3dadd( -9.77519, 106.278, -17.8232, 0.52 ) }
    dend_28 { pt3dadd( -9.92968, 107.408, -17.5361, 0.52 ) }
    dend_28 { pt3dadd( -10.0257, 107.946, -17.4441, 0.52 ) }
    dend_28 { pt3dadd( -10.067, 108.172, -17.436, 0.52 ) }
    dend_28 { pt3dadd( -10.1753, 108.883, -17.426, 0.52 ) }
    dend_28 { pt3dadd( -10.1872, 108.993, -17.4272, 0.52 ) }
    dend_28 { pt3dadd( -10.2197, 109.807, -17.4593, 0.44 ) }
    dend_28 { pt3dadd( -10.2169, 110.453, -17.4577, 0.44 ) }
    dend_28 { pt3dadd( -10.1643, 111.685, -17.4446, 1.84 ) }
    dend_28 { pt3dadd( -10.1055, 112.694, -17.3991, 2.73 ) }
    dend_28 { pt3dadd( -10.0696, 113.231, -17.3596, 3.54 ) }
    dend_28 { pt3dadd( -10.0279, 113.94, -17.2921, 3.9 ) }
    dend_28 { pt3dadd( -10.0023, 114.506, -17.2244, 4.05 ) }
    dend_28 { pt3dadd( -9.99401, 115.04, -17.1626, 3.9 ) }
    dend_28 { pt3dadd( -10.0201, 116.024, -17.0586, 3.61 ) }
    dend_28 { pt3dadd( -10.0769, 116.714, -16.9847, 2.8 ) }
    dend_28 { pt3dadd( -10.1693, 117.488, -16.9085, 1.69 ) }
    dend_28 { pt3dadd( -10.2913, 118.398, -16.8206, 1.11 ) }
    dend_28 { pt3dadd( -10.444, 119.42, -16.7294, 0.81 ) }
    dend_28 { pt3dadd( -10.5369, 119.977, -16.6892, 0.66 ) }
    dend_28 { pt3dadd( -10.7423, 121.153, -16.6488, 0.52 ) }
    dend_28 { pt3dadd( -10.9434, 122.181, -16.6091, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -48.4004, -49.1427, 34.6876, 0.37 ) }
    dend_20 { pt3dadd( -55.9473, -53.263, 39.6105, 0.37 ) }
    dend_20 { pt3dadd( -61.9103, -59.0775, 44.8048, 0.37 ) }
    dend_20 { pt3dadd( -68.5852, -63.4706, 50.641, 0.37 ) }
    dend_20 { pt3dadd( -73.7833, -67.7149, 57.9224, 0.37 ) }
    dend_20 { pt3dadd( -80.6755, -72.022, 63.5742, 0.37 ) }
    dend_20 { pt3dadd( -87.5742, -75.8383, 69.5967, 0.37 ) }
    dend_20 { pt3dadd( -93.8262, -81.5875, 74.525, 0.37 ) }
    dend_20 { pt3dadd( -101.833, -86.0592, 78.2302, 0.37 ) }
    dend_20 { pt3dadd( -111.242, -88.8032, 80.0002, 0.37 ) }
    dend_20 { pt3dadd( -120.693, -91.7959, 80.8647, 0.37 ) }
    dend_20 { pt3dadd( -130.369, -93.126, 82.9658, 0.37 ) }
    dend_20 { pt3dadd( -140.109, -94.1902, 84.9372, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -48.4004, -49.1427, 34.6876, 0.29 ) }
    dend_19 { pt3dadd( -55.9772, -53.2684, 39.5592, 0.37 ) }
    dend_19 { pt3dadd( -62.6385, -57.8929, 45.2099, 0.37 ) }
    dend_19 { pt3dadd( -69.4583, -63.5289, 49.4872, 0.37 ) }
    dend_19 { pt3dadd( -76.3561, -69.7513, 52.5724, 0.37 ) }
    dend_19 { pt3dadd( -83.3092, -76.1491, 55.0823, 0.37 ) }
    dend_19 { pt3dadd( -89.6908, -82.4481, 58.9954, 0.37 ) }
    dend_19 { pt3dadd( -95.3836, -89.6059, 62.2851, 0.37 ) }
    dend_19 { pt3dadd( -100.613, -97.5265, 64.0582, 0.37 ) }
    dend_19 { pt3dadd( -107.503, -104.399, 64.51, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -38.7293, -18.3752, 56.892, 0.37 ) }
    dend_17 { pt3dadd( -42.3386, -14.442, 65.2485, 0.37 ) }
    dend_17 { pt3dadd( -46.7107, -10.5199, 73.2385, 0.37 ) }
    dend_17 { pt3dadd( -51.8516, -5.5758, 80.0566, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -38.7293, -18.3752, 56.892, 0.29 ) }
    dend_16 { pt3dadd( -40.6556, -15.2589, 66.1401, 0.37 ) }
    dend_16 { pt3dadd( -42.1093, -11.6719, 75.2851, 0.37 ) }
    dend_16 { pt3dadd( -42.0065, -9.66172, 85.0581, 0.37 ) }
    dend_16 { pt3dadd( -41.4226, -8.74091, 94.9939, 0.37 ) }
    dend_16 { pt3dadd( -41.5451, -8.85988, 104.993, 0.37 ) }
    dend_16 { pt3dadd( -42.7575, -8.40609, 114.908, 0.37 ) }
    dend_16 { pt3dadd( -44.6551, -7.83333, 124.707, 0.37 ) }
    dend_16 { pt3dadd( -46.3598, -7.04925, 134.526, 0.37 ) }
    dend_16 { pt3dadd( -48.6991, -4.94459, 143.993, 0.37 ) }
    dend_16 { pt3dadd( -51.2655, -2.78966, 153.388, 0.37 ) }
    dend_16 { pt3dadd( -53.1759, -0.647103, 162.941, 0.37 ) }
    dend_16 { pt3dadd( -54.2242, 0.292264, 172.837, 0.37 ) }
    dend_16 { pt3dadd( -55.5088, 1.84884, 182.618, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.22658, -32.5487, 0.146408, 0.59 ) }
    dend_13 { pt3dadd( -9.59948, -32.9649, -0.172241, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -10.2649, -33.4943, -0.647218, 0.44 ) }
    dend_13 { pt3dadd( -11.0174, -33.8906, -1.18298, 0.29 ) }
    dend_13 { pt3dadd( -11.4344, -34.0519, -1.44969, 0.22 ) }
    dend_13 { pt3dadd( -11.9547, -34.2369, -1.76139, 0.29 ) }
    dend_13 { pt3dadd( -12.5837, -34.4577, -2.11918, 0.29 ) }
    dend_13 { pt3dadd( -13.3881, -34.6977, -2.51984, 0.29 ) }
    dend_13 { pt3dadd( -14.3067, -34.9607, -2.96687, 0.29 ) }
    dend_13 { pt3dadd( -15.0139, -35.1913, -3.31553, 0.29 ) }
    dend_13 { pt3dadd( -15.9267, -35.5639, -3.7914, 1.25 ) }
    dend_13 { pt3dadd( -16.1986, -35.7127, -3.94255, 1.77 ) }
    dend_13 { pt3dadd( -16.6073, -36.0111, -4.18683, 1.77 ) }
    dend_13 { pt3dadd( -17.7328, -37.0089, -4.88119, 1.11 ) }
    dend_13 { pt3dadd( -18.3437, -37.6533, -5.28377, 0.52 ) }
    dend_13 { pt3dadd( -18.7541, -38.1549, -5.61345, 0.37 ) }
    dend_13 { pt3dadd( -19.2595, -38.857, -6.11398, 0.37 ) }
    dend_13 { pt3dadd( -19.6024, -39.3864, -6.5072, 0.37 ) }
    dend_13 { pt3dadd( -19.6582, -39.4766, -6.57617, 0.37 ) }
    dend_13 { pt3dadd( -20.1168, -40.2243, -7.14213, 1.25 ) }
    dend_13 { pt3dadd( -20.4247, -40.6723, -7.53389, 1.18 ) }
    dend_13 { pt3dadd( -21.0179, -41.3612, -8.21051, 0.29 ) }
    dend_13 { pt3dadd( -21.3206, -41.611, -8.47911, 0.22 ) }
    dend_13 { pt3dadd( -21.7582, -41.9116, -8.77999, 0.22 ) }
    dend_13 { pt3dadd( -22.1115, -42.1435, -8.96987, 0.44 ) }
    dend_13 { pt3dadd( -22.4844, -42.3696, -9.11402, 0.44 ) }
    dend_13 { pt3dadd( -22.8759, -42.6038, -9.21646, 0.29 ) }
    dend_13 { pt3dadd( -23.2825, -42.8365, -9.31165, 0.29 ) }
    dend_13 { pt3dadd( -23.8782, -43.1844, -9.53301, 0.37 ) }
    dend_13 { pt3dadd( -24.3409, -43.4681, -9.74586, 0.37 ) }
    dend_13 { pt3dadd( -24.8676, -43.7696, -10.0213, 0.29 ) }
    dend_13 { pt3dadd( -25.82, -44.2583, -10.577, 1.18 ) }
    dend_13 { pt3dadd( -26.5228, -44.5989, -10.9976, 1.99 ) }
    dend_13 { pt3dadd( -27.2131, -44.9062, -11.4123, 2.28 ) }
    dend_13 { pt3dadd( -27.6416, -45.0881, -11.6619, 1.99 ) }
    dend_13 { pt3dadd( -28.7218, -45.5807, -12.2742, 0.59 ) }
    dend_13 { pt3dadd( -29.4343, -45.9772, -12.6642, 0.37 ) }
    dend_13 { pt3dadd( -29.9566, -46.3727, -12.9574, 0.37 ) }
    dend_13 { pt3dadd( -30.5189, -46.8565, -13.2689, 1.11 ) }
    dend_13 { pt3dadd( -30.9086, -47.206, -13.4718, 1.69 ) }
    dend_13 { pt3dadd( -31.3255, -47.5992, -13.6938, 1.84 ) }
    dend_13 { pt3dadd( -31.8798, -48.138, -13.9722, 1.4 ) }
    dend_13 { pt3dadd( -32.8246, -48.9879, -14.3998, 0.44 ) }
    dend_13 { pt3dadd( -33.3304, -49.3973, -14.6231, 0.44 ) }
    dend_13 { pt3dadd( -33.9675, -49.8721, -14.8841, 0.37 ) }
    dend_13 { pt3dadd( -34.5329, -50.2512, -15.1066, 1.18 ) }
    dend_13 { pt3dadd( -35.0253, -50.5699, -15.2931, 1.62 ) }
    dend_13 { pt3dadd( -35.5373, -50.9292, -15.4779, 1.03 ) }
    dend_13 { pt3dadd( -35.5874, -50.9725, -15.4984, 1.03 ) }
    dend_13 { pt3dadd( -35.8384, -51.2534, -15.6327, 0.88 ) }
    dend_13 { pt3dadd( -36.2438, -51.776, -15.9094, 0.44 ) }
    dend_13 { pt3dadd( -36.6617, -52.3349, -16.2235, 0.29 ) }
    dend_13 { pt3dadd( -37.0312, -52.8499, -16.5247, 0.29 ) }
    dend_13 { pt3dadd( -37.6972, -53.7908, -17.0873, 1.92 ) }
    dend_13 { pt3dadd( -38.1506, -54.4382, -17.4702, 2.73 ) }
    dend_13 { pt3dadd( -38.6081, -55.1004, -17.8684, 2.65 ) }
    dend_13 { pt3dadd( -39.5024, -56.3442, -18.6285, 0.66 ) }
    dend_13 { pt3dadd( -39.5453, -56.3997, -18.6639, 0.66 ) }
    dend_13 { pt3dadd( -40.2102, -57.214, -19.1921, 0.29 ) }
    dend_13 { pt3dadd( -40.5072, -57.5664, -19.407, 0.29 ) }
    dend_13 { pt3dadd( -40.875, -57.9946, -19.6748, 0.29 ) }
    dend_13 { pt3dadd( -41.2989, -58.5072, -20.0349, 0.29 ) }
    dend_13 { pt3dadd( -41.6881, -58.9799, -20.4086, 1.11 ) }
    dend_13 { pt3dadd( -41.7301, -59.0323, -20.4498, 1.11 ) }
    dend_13 { pt3dadd( -42.0764, -59.4695, -20.7868, 1.25 ) }
    dend_13 { pt3dadd( -42.5215, -60.0314, -21.2052, 0.96 ) }
    dend_13 { pt3dadd( -43.2833, -61.0979, -21.8637, 0.37 ) }
    dend_13 { pt3dadd( -43.3159, -61.1504, -21.8936, 0.37 ) }
    dend_13 { pt3dadd( -43.6706, -61.7414, -22.205, 0.22 ) }
    dend_13 { pt3dadd( -43.9102, -62.1433, -22.3984, 0.22 ) }
    dend_13 { pt3dadd( -43.9813, -62.2564, -22.4556, 0.66 ) }
    dend_13 { pt3dadd( -44.4842, -63.0285, -22.822, 0.52 ) }
    dend_13 { pt3dadd( -45.313, -64.2743, -23.3948, 1.77 ) }
    dend_13 { pt3dadd( -45.9089, -65.159, -23.8033, 2.58 ) }
    dend_13 { pt3dadd( -46.4185, -65.8971, -24.149, 2.58 ) }
    dend_13 { pt3dadd( -47.4076, -67.306, -24.8008, 0.44 ) }
    dend_13 { pt3dadd( -47.9346, -68.0326, -25.1215, 0.29 ) }
    dend_13 { pt3dadd( -47.9813, -68.093, -25.1458, 0.29 ) }
    dend_13 { pt3dadd( -48.3401, -68.5465, -25.2853, 0.29 ) }
    dend_13 { pt3dadd( -48.8869, -69.2518, -25.4677, 1.47 ) }
    dend_13 { pt3dadd( -49.1809, -69.6477, -25.5474, 1.84 ) }
    dend_13 { pt3dadd( -49.5356, -70.1984, -25.61, 1.47 ) }
    dend_13 { pt3dadd( -50.3878, -71.653, -25.7626, 0.29 ) }
    dend_13 { pt3dadd( -50.6835, -72.2079, -25.8134, 1.11 ) }
    dend_13 { pt3dadd( -50.8817, -72.6053, -25.8438, 1.25 ) }
    dend_13 { pt3dadd( -51.1576, -73.2023, -25.8763, 1.03 ) }
    dend_13 { pt3dadd( -51.5344, -74.0486, -25.9132, 0.22 ) }
    dend_13 { pt3dadd( -51.7815, -74.5957, -25.927, 0.22 ) }
    dend_13 { pt3dadd( -51.9373, -74.9336, -25.9254, 0.59 ) }
    dend_13 { pt3dadd( -52.1799, -75.3988, -25.9254, 0.74 ) }
    dend_13 { pt3dadd( -52.3472, -75.6755, -25.9365, 0.37 ) }
    dend_13 { pt3dadd( -52.689, -76.1845, -25.9713, 0.22 ) }
    dend_13 { pt3dadd( -53.1944, -76.8714, -26.0299, 1.55 ) }
    dend_13 { pt3dadd( -53.6642, -77.5073, -26.0898, 2.21 ) }
    dend_13 { pt3dadd( -53.9314, -77.8678, -26.1237, 1.84 ) }
    dend_13 { pt3dadd( -54.7739, -78.9985, -26.2263, 0.22 ) }
    dend_13 { pt3dadd( -55.2081, -79.5697, -26.2756, 0.22 ) }
    dend_13 { pt3dadd( -55.7115, -80.1933, -26.3265, 1.11 ) }
    dend_13 { pt3dadd( -56.0101, -80.5436, -26.3518, 1.62 ) }
    dend_13 { pt3dadd( -56.3841, -80.9557, -26.3734, 1.84 ) }
    dend_13 { pt3dadd( -56.9535, -81.5652, -26.3925, 1.11 ) }
    dend_13 { pt3dadd( -57.2762, -81.9062, -26.3962, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -58.1248, -82.803, -26.4133, 0.29 ) }
    dend_13 { pt3dadd( -58.5834, -83.2922, -26.4259, 0.59 ) }
    dend_13 { pt3dadd( -59.6592, -84.5076, -26.443, 0.29 ) }
    dend_13 { pt3dadd( -59.7046, -84.5617, -26.4432, 0.29 ) }
    dend_13 { pt3dadd( -60.4302, -85.4673, -26.4375, 1.18 ) }
    dend_13 { pt3dadd( -60.707, -85.8265, -26.4314, 1.55 ) }
    dend_13 { pt3dadd( -60.9638, -86.1901, -26.4197, 1.55 ) }
    dend_13 { pt3dadd( -61.6448, -87.22, -26.4336, 0.52 ) }
    dend_13 { pt3dadd( -62.2206, -88.1631, -26.5038, 0.37 ) }
    dend_13 { pt3dadd( -62.255, -88.2236, -26.5119, 0.37 ) }
    dend_13 { pt3dadd( -62.6551, -89.0009, -26.6479, 0.37 ) }
    dend_13 { pt3dadd( -62.9777, -89.6596, -26.782, 0.29 ) }
    dend_13 { pt3dadd( -63.5736, -90.9294, -27.0768, 1.99 ) }
    dend_13 { pt3dadd( -63.8349, -91.5119, -27.2289, 2.28 ) }
    dend_13 { pt3dadd( -64.4282, -92.9145, -27.5826, 0.22 ) }
    dend_13 { pt3dadd( -64.7848, -93.7312, -27.7691, 0.22 ) }
    dend_13 { pt3dadd( -64.9486, -94.1049, -27.8277, 0.74 ) }
    dend_13 { pt3dadd( -64.9766, -94.1685, -27.8329, 0.74 ) }
    dend_13 { pt3dadd( -65.2225, -94.7427, -27.8306, 0.74 ) }
    dend_13 { pt3dadd( -65.5454, -95.5253, -27.7998, 0.22 ) }
    dend_13 { pt3dadd( -65.9227, -96.4105, -27.7557, 0.22 ) }
    dend_13 { pt3dadd( -66.5491, -97.8276, -27.6871, 2.14 ) }
    dend_13 { pt3dadd( -66.691, -98.1485, -27.6727, 2.36 ) }
    dend_13 { pt3dadd( -67.2267, -99.311, -27.6233, 0.29 ) }
    dend_13 { pt3dadd( -67.4754, -99.8194, -27.5958, 0.22 ) }
    dend_13 { pt3dadd( -67.8216, -100.464, -27.5568, 0.22 ) }
    dend_13 { pt3dadd( -68.2522, -101.217, -27.5055, 1.4 ) }
    dend_13 { pt3dadd( -68.4924, -101.623, -27.4797, 1.77 ) }
    dend_13 { pt3dadd( -68.8293, -102.207, -27.4298, 1.33 ) }
    dend_13 { pt3dadd( -69.3861, -103.288, -27.3118, 0.37 ) }
    dend_13 { pt3dadd( -69.7469, -104.066, -27.2293, 0.22 ) }
    dend_13 { pt3dadd( -69.9592, -104.6, -27.1768, 0.22 ) }
    dend_13 { pt3dadd( -70.2066, -105.295, -27.1245, 0.81 ) }
    dend_13 { pt3dadd( -70.3416, -105.702, -27.1004, 0.81 ) }
    dend_13 { pt3dadd( -70.6343, -106.571, -27.0854, 0.22 ) }
    dend_13 { pt3dadd( -70.8331, -107.069, -27.111, 0.22 ) }
    dend_13 { pt3dadd( -71.0933, -107.609, -27.1569, 1.25 ) }
    dend_13 { pt3dadd( -71.3232, -108.001, -27.1996, 1.77 ) }
    dend_13 { pt3dadd( -71.5975, -108.422, -27.251, 1.77 ) }
    dend_13 { pt3dadd( -72.2026, -109.339, -27.372, 0.44 ) }
    dend_13 { pt3dadd( -72.7615, -110.171, -27.4838, 0.29 ) }
    dend_13 { pt3dadd( -73.2332, -110.887, -27.5883, 1.4 ) }
    dend_13 { pt3dadd( -73.5116, -111.309, -27.6506, 1.77 ) }
    dend_13 { pt3dadd( -73.7422, -111.672, -27.7045, 1.77 ) }
    dend_13 { pt3dadd( -74.3688, -112.7, -27.8517, 0.37 ) }
    dend_13 { pt3dadd( -74.8135, -113.485, -27.951, 0.29 ) }
    dend_13 { pt3dadd( -75.2801, -114.31, -28.0694, 0.22 ) }
    dend_13 { pt3dadd( -75.6948, -114.982, -28.1867, 0.22 ) }
    dend_13 { pt3dadd( -76.2164, -115.757, -28.3355, 1.11 ) }
    dend_13 { pt3dadd( -76.4169, -116.034, -28.3919, 1.4 ) }
    dend_13 { pt3dadd( -76.8281, -116.591, -28.5078, 0.59 ) }
    dend_13 { pt3dadd( -77.2865, -117.237, -28.6424, 0.22 ) }
    dend_13 { pt3dadd( -77.7349, -117.898, -28.7753, 0.22 ) }
    dend_13 { pt3dadd( -78.1922, -118.557, -28.9154, 1.11 ) }
    dend_13 { pt3dadd( -78.4007, -118.838, -28.9753, 1.55 ) }
    dend_13 { pt3dadd( -78.7092, -119.241, -29.0613, 1.33 ) }
    dend_13 { pt3dadd( -79.2349, -119.908, -29.1988, 0.59 ) }
    dend_13 { pt3dadd( -79.6412, -120.454, -29.2885, 0.22 ) }
    dend_13 { pt3dadd( -79.8935, -120.799, -29.3284, 0.66 ) }
    dend_13 { pt3dadd( -80.0259, -120.969, -29.3408, 0.66 ) }
    dend_13 { pt3dadd( -80.1625, -121.137, -29.345, 0.66 ) }
    dend_13 { pt3dadd( -80.58, -121.646, -29.3495, 0.22 ) }
    dend_13 { pt3dadd( -81.0475, -122.198, -29.2999, 0.22 ) }
    dend_13 { pt3dadd( -81.6352, -122.879, -29.1934, 1.33 ) }
    dend_13 { pt3dadd( -81.8951, -123.176, -29.1362, 1.62 ) }
    dend_13 { pt3dadd( -82.1743, -123.489, -29.0696, 1.33 ) }
    dend_13 { pt3dadd( -83.0624, -124.463, -28.8471, 0.29 ) }
    dend_13 { pt3dadd( -83.6297, -125.048, -28.7134, 0.29 ) }
    dend_13 { pt3dadd( -84.1116, -125.478, -28.6272, 0.29 ) }
    dend_13 { pt3dadd( -84.5789, -125.844, -28.573, 0.88 ) }
    dend_13 { pt3dadd( -84.9055, -126.083, -28.542, 0.88 ) }
    dend_13 { pt3dadd( -85.2875, -126.342, -28.5146, 0.66 ) }
    dend_13 { pt3dadd( -85.9627, -126.788, -28.4886, 0.15 ) }
    dend_13 { pt3dadd( -86.5487, -127.223, -28.526, 0.15 ) }
    dend_13 { pt3dadd( -87.0962, -127.657, -28.5825, 0.15 ) }
    dend_13 { pt3dadd( -87.3708, -127.871, -28.6214, 0.59 ) }
    dend_13 { pt3dadd( -87.4295, -127.912, -28.6237, 0.59 ) }
    dend_13 { pt3dadd( -87.737, -128.124, -28.613, 0.59 ) }
    dend_13 { pt3dadd( -88.2462, -128.5, -28.5641, 0.22 ) }
    dend_13 { pt3dadd( -88.3102, -128.556, -28.5562, 0.22 ) }
    dend_13 { pt3dadd( -89.0207, -129.185, -28.4658, 0.22 ) }
    dend_13 { pt3dadd( -90.0913, -130.167, -28.3283, 1.77 ) }
    dend_13 { pt3dadd( -90.4691, -130.521, -28.2793, 2.14 ) }
    dend_13 { pt3dadd( -90.953, -130.978, -28.2258, 1.47 ) }
    dend_13 { pt3dadd( -91.8491, -131.893, -28.1672, 0.37 ) }
    dend_13 { pt3dadd( -92.5772, -132.708, -28.1585, 0.22 ) }
    dend_13 { pt3dadd( -92.9526, -133.207, -28.1849, 0.81 ) }
    dend_13 { pt3dadd( -93.1515, -133.502, -28.2256, 0.96 ) }
    dend_13 { pt3dadd( -93.4648, -133.982, -28.3137, 0.96 ) }
    dend_13 { pt3dadd( -93.9937, -134.848, -28.5093, 0.22 ) }
    dend_13 { pt3dadd( -94.0271, -134.906, -28.5244, 0.22 ) }
    dend_13 { pt3dadd( -94.3493, -135.517, -28.6973, 0.22 ) }
    dend_13 { pt3dadd( -94.6967, -136.209, -28.8859, 0.22 ) }
    dend_13 { pt3dadd( -94.9095, -136.688, -29.0288, 0.96 ) }
    dend_13 { pt3dadd( -95.0931, -137.111, -29.1534, 1.33 ) }
    dend_13 { pt3dadd( -95.3407, -137.64, -29.3105, 1.11 ) }
    dend_13 { pt3dadd( -95.7445, -138.413, -29.5944, 0.22 ) }
    dend_13 { pt3dadd( -95.9516, -138.763, -29.7401, 0.59 ) }
    dend_13 { pt3dadd( -96.5387, -139.716, -30.1241, 0.22 ) }
    dend_13 { pt3dadd( -96.9832, -140.412, -30.3912, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -97.2866, -140.86, -30.573, 1.4 ) }
    dend_13 { pt3dadd( -98.0373, -141.895, -30.9911, 0.22 ) }
    dend_13 { pt3dadd( -98.4822, -142.453, -31.2043, 0.22 ) }
    dend_13 { pt3dadd( -98.9922, -143.069, -31.4155, 1.99 ) }
    dend_13 { pt3dadd( -99.3903, -143.526, -31.5494, 2.5 ) }
    dend_13 { pt3dadd( -99.8074, -144.011, -31.6829, 2.43 ) }
    dend_13 { pt3dadd( -100.891, -145.275, -31.9729, 0.22 ) }
    dend_13 { pt3dadd( -101.297, -145.76, -32.05, 0.29 ) }
    dend_13 { pt3dadd( -101.861, -146.436, -32.1498, 0.22 ) }
    dend_13 { pt3dadd( -102.182, -146.833, -32.2003, 0.74 ) }
    dend_13 { pt3dadd( -102.333, -147.035, -32.2071, 0.74 ) }
    dend_13 { pt3dadd( -102.843, -147.802, -32.1621, 0.15 ) }
    dend_13 { pt3dadd( -103.175, -148.438, -32.1052, 0.15 ) }
    dend_13 { pt3dadd( -103.262, -148.638, -32.0944, 0.81 ) }
    dend_13 { pt3dadd( -103.526, -149.29, -32.0937, 1.33 ) }
    dend_13 { pt3dadd( -103.779, -149.944, -32.1173, 1.33 ) }
    dend_13 { pt3dadd( -103.803, -150.006, -32.1214, 1.33 ) }
    dend_13 { pt3dadd( -104.17, -150.971, -32.2777, 0.22 ) }
    dend_13 { pt3dadd( -104.56, -152.032, -32.5142, 0.22 ) }
    dend_13 { pt3dadd( -104.851, -152.868, -32.7405, 1.62 ) }
    dend_13 { pt3dadd( -105.045, -153.411, -32.9081, 1.92 ) }
    dend_13 { pt3dadd( -105.209, -153.87, -33.0611, 1.92 ) }
    dend_13 { pt3dadd( -105.632, -155.1, -33.4578, 0.22 ) }
    dend_13 { pt3dadd( -105.867, -155.804, -33.6768, 0.22 ) }
    dend_13 { pt3dadd( -106.117, -156.655, -33.9565, 0.22 ) }
    dend_13 { pt3dadd( -106.322, -157.392, -34.2079, 1.25 ) }
    dend_13 { pt3dadd( -106.438, -157.746, -34.332, 1.62 ) }
    dend_13 { pt3dadd( -106.616, -158.19, -34.4745, 1.62 ) }
    dend_13 { pt3dadd( -106.678, -158.318, -34.5122, 1.62 ) }
    dend_13 { pt3dadd( -107.462, -159.709, -34.9788, 0.22 ) }
    dend_13 { pt3dadd( -107.531, -159.831, -35.0274, 0.22 ) }
    dend_13 { pt3dadd( -107.906, -160.559, -35.3424, 0.22 ) }
    dend_13 { pt3dadd( -108.304, -161.371, -35.7038, 0.22 ) }
    dend_13 { pt3dadd( -108.612, -161.98, -35.9742, 1.03 ) }
    dend_13 { pt3dadd( -108.767, -162.28, -36.1055, 1.03 ) }
    dend_13 { pt3dadd( -109.257, -163.213, -36.4993, 0.22 ) }
    dend_13 { pt3dadd( -109.474, -163.64, -36.6801, 0.59 ) }
    dend_13 { pt3dadd( -109.77, -164.291, -36.9484, 0.22 ) }
    dend_13 { pt3dadd( -109.983, -164.772, -37.1255, 0.22 ) }
    dend_13 { pt3dadd( -110.248, -165.411, -37.3133, 1.25 ) }
    dend_13 { pt3dadd( -110.398, -165.78, -37.408, 1.62 ) }
    dend_13 { pt3dadd( -110.443, -165.893, -37.4329, 1.62 ) }
    dend_13 { pt3dadd( -110.91, -167.057, -37.7041, 0.15 ) }
    dend_13 { pt3dadd( -111.196, -167.834, -37.8855, 1.25 ) }
    dend_13 { pt3dadd( -111.301, -168.153, -37.9594, 1.25 ) }
    dend_13 { pt3dadd( -111.651, -169.165, -38.2101, 0.22 ) }
    dend_13 { pt3dadd( -111.677, -169.226, -38.2275, 0.22 ) }
    dend_13 { pt3dadd( -111.949, -169.737, -38.3925, 0.74 ) }
    dend_13 { pt3dadd( -111.981, -169.785, -38.4114, 0.74 ) }
    dend_13 { pt3dadd( -112.149, -170.014, -38.4918, 0.74 ) }
    dend_13 { pt3dadd( -112.801, -170.889, -38.7418, 0.15 ) }
    dend_13 { pt3dadd( -113.314, -171.603, -38.8937, 1.11 ) }
    dend_13 { pt3dadd( -113.403, -171.731, -38.9204, 1.11 ) }
    dend_13 { pt3dadd( -113.447, -171.797, -38.9333, 1.11 ) }
    dend_13 { pt3dadd( -114.581, -173.43, -39.2603, 0.22 ) }
    dend_13 { pt3dadd( -114.934, -173.922, -39.3631, 1.03 ) }
    dend_13 { pt3dadd( -115.22, -174.313, -39.4439, 1.11 ) }
    dend_13 { pt3dadd( -116.104, -175.467, -39.7078, 0.22 ) }
    dend_13 { pt3dadd( -116.248, -175.647, -39.7535, 0.59 ) }
    dend_13 { pt3dadd( -116.94, -176.456, -39.96, 0.22 ) }
    dend_13 { pt3dadd( -117.29, -176.831, -40.0591, 1.33 ) }
    dend_13 { pt3dadd( -117.59, -177.138, -40.1253, 1.55 ) }
    dend_13 { pt3dadd( -118.066, -177.588, -40.1925, 0.88 ) }
    dend_13 { pt3dadd( -119.041, -178.503, -40.2688, 0.22 ) }
    dend_13 { pt3dadd( -119.477, -178.918, -40.2945, 0.66 ) }
    dend_13 { pt3dadd( -119.683, -179.109, -40.33, 0.66 ) }
    dend_13 { pt3dadd( -120.464, -179.812, -40.5232, 0.22 ) }
    dend_13 { pt3dadd( -121.21, -180.476, -40.7612, 1.62 ) }
    dend_13 { pt3dadd( -121.767, -180.966, -40.9876, 2.06 ) }
    dend_13 { pt3dadd( -122.251, -181.375, -41.2165, 2.06 ) }
    dend_13 { pt3dadd( -123.935, -182.81, -42.072, 0.22 ) }
    dend_13 { pt3dadd( -123.935, -182.81, -42.072, 0.59 ) }
    dend_13 { pt3dadd( -124.045, -182.897, -42.1252, 0.59 ) }
    dend_13 { pt3dadd( -124.75, -183.411, -42.4202, 0.22 ) }
    dend_13 { pt3dadd( -125.455, -183.868, -42.652, 0.22 ) }
    dend_13 { pt3dadd( -126.227, -184.326, -42.818, 1.77 ) }
    dend_13 { pt3dadd( -126.664, -184.569, -42.8481, 2.06 ) }
    dend_13 { pt3dadd( -128.352, -185.492, -42.8608, 0.15 ) }
    dend_13 { pt3dadd( -128.692, -185.667, -42.8459, 0.74 ) }
    dend_13 { pt3dadd( -129.076, -185.841, -42.7873, 0.74 ) }
    dend_13 { pt3dadd( -129.906, -186.192, -42.5756, 0.22 ) }
    dend_13 { pt3dadd( -130.618, -186.47, -42.3351, 0.22 ) }
    dend_13 { pt3dadd( -131.401, -186.758, -42.0133, 1.18 ) }
    dend_13 { pt3dadd( -131.778, -186.897, -41.8164, 1.55 ) }
    dend_13 { pt3dadd( -132.979, -187.333, -41.1458, 0.29 ) }
    dend_13 { pt3dadd( -133.865, -187.648, -40.6299, 0.22 ) }
    dend_13 { pt3dadd( -134.256, -187.764, -40.4139, 0.74 ) }
    dend_13 { pt3dadd( -134.578, -187.839, -40.2561, 1.03 ) }
    dend_13 { pt3dadd( -135.629, -188.01, -39.8215, 0.15 ) }
    dend_13 { pt3dadd( -135.961, -188.046, -39.7247, 0.37 ) }
    dend_13 { pt3dadd( -136.033, -188.05, -39.7139, 0.37 ) }
    dend_13 { pt3dadd( -137.181, -188.046, -39.6336, 0.22 ) }
    dend_13 { pt3dadd( -137.987, -188.026, -39.6156, 1.18 ) }
    dend_13 { pt3dadd( -138.56, -188.013, -39.6291, 1.55 ) }
    dend_13 { pt3dadd( -139.953, -187.992, -39.7237, 0.22 ) }
    dend_13 { pt3dadd( -140.615, -187.99, -39.7494, 0.22 ) }
    dend_13 { pt3dadd( -141.431, -188.004, -39.7557, 0.96 ) }
    dend_13 { pt3dadd( -141.717, -188.012, -39.7399, 1.33 ) }
    dend_13 { pt3dadd( -143.123, -188.044, -39.5962, 0.22 ) }
    dend_13 { pt3dadd( -143.703, -188.064, -39.5023, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -144.758, -188.102, -39.2779, 0.96 ) }
    dend_13 { pt3dadd( -145.035, -188.112, -39.2044, 1.25 ) }
    dend_13 { pt3dadd( -146.831, -188.196, -38.6688, 0.22 ) }
    dend_13 { pt3dadd( -147.548, -188.238, -38.4513, 0.22 ) }
    dend_13 { pt3dadd( -148.914, -188.328, -38.0216, 1.84 ) }
    dend_13 { pt3dadd( -149.196, -188.357, -37.9359, 2.36 ) }
    dend_13 { pt3dadd( -151.048, -188.612, -37.4185, 0.22 ) }
    dend_13 { pt3dadd( -151.541, -188.694, -37.28, 0.66 ) }
    dend_13 { pt3dadd( -152.291, -188.858, -37.0921, 0.22 ) }
    dend_13 { pt3dadd( -152.347, -188.872, -37.0796, 0.22 ) }
    dend_13 { pt3dadd( -153.118, -189.058, -36.9753, 0.96 ) }
    dend_13 { pt3dadd( -153.482, -189.143, -36.9481, 0.96 ) }
    dend_13 { pt3dadd( -153.55, -189.16, -36.9499, 0.96 ) }
    dend_13 { pt3dadd( -154.584, -189.408, -36.9795, 0.22 ) }
    dend_13 { pt3dadd( -154.653, -189.423, -36.9814, 0.22 ) }
    dend_13 { pt3dadd( -155.724, -189.668, -37.0185, 0.22 ) }
    dend_13 { pt3dadd( -155.801, -189.686, -37.0216, 0.22 ) }
    dend_13 { pt3dadd( -156.898, -189.983, -37.0393, 0.22 ) }
    dend_13 { pt3dadd( -156.975, -190.005, -37.0392, 0.22 ) }
    dend_13 { pt3dadd( -157.461, -190.153, -37.0288, 1.11 ) }
    dend_13 { pt3dadd( -157.957, -190.306, -37.0169, 1.4 ) }
    dend_13 { pt3dadd( -158.158, -190.369, -37.0112, 1.69 ) }
    dend_13 { pt3dadd( -160.09, -190.969, -36.9509, 0.22 ) }
    dend_13 { pt3dadd( -160.581, -191.116, -36.9328, 0.66 ) }
    dend_13 { pt3dadd( -160.81, -191.187, -36.9239, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.22658, -32.5487, 0.146408, 2.58 ) }
    dend_8 { pt3dadd( -8.75473, -33.7777, -0.288673, 2.58 ) }
    dend_8 { pt3dadd( -8.41746, -35.1702, -0.815484, 1.11 ) }
    dend_8 { pt3dadd( -8.18776, -36.3581, -1.24344, 0.66 ) }
    dend_8 { pt3dadd( -8.02583, -37.2822, -1.57515, 0.59 ) }
    dend_8 { pt3dadd( -7.76799, -38.7624, -2.12612, 1.25 ) }
    dend_8 { pt3dadd( -7.65124, -39.3837, -2.36423, 1.62 ) }
    dend_8 { pt3dadd( -7.32292, -41.3295, -3.09802, 1.11 ) }
    dend_8 { pt3dadd( -7.10631, -42.4857, -3.5578, 1.33 ) }
    dend_8 { pt3dadd( -6.87034, -43.5277, -4.01517, 1.92 ) }
    dend_8 { pt3dadd( -6.55724, -44.6304, -4.53481, 1.99 ) }
    dend_8 { pt3dadd( -6.17088, -45.7643, -5.12357, 1.33 ) }
    dend_8 { pt3dadd( -5.74373, -46.9742, -5.78649, 0.96 ) }
    dend_8 { pt3dadd( -5.25509, -48.2987, -6.53579, 0.96 ) }
    dend_8 { pt3dadd( -5.23977, -48.3462, -6.56517, 0.96 ) }
    dend_8 { pt3dadd( -5.0492, -49.1635, -7.11087, 0.74 ) }
    dend_8 { pt3dadd( -4.94805, -50.3753, -8.08035, 0.52 ) }
    dend_8 { pt3dadd( -5.02054, -51.1968, -8.85482, 0.52 ) }
    dend_8 { pt3dadd( -5.03117, -51.2431, -8.90394, 0.52 ) }
    dend_8 { pt3dadd( -5.22454, -51.8861, -9.62359, 0.88 ) }
    dend_8 { pt3dadd( -5.47342, -52.707, -10.5227, 1.18 ) }
    dend_8 { pt3dadd( -5.88776, -54.045, -11.9456, 0.59 ) }
    dend_8 { pt3dadd( -6.13137, -54.8487, -12.7215, 0.59 ) }
    dend_8 { pt3dadd( -6.14281, -54.8914, -12.7597, 0.59 ) }
    dend_8 { pt3dadd( -6.30444, -55.6193, -13.3286, 0.59 ) }
    dend_8 { pt3dadd( -6.51662, -56.8594, -14.1054, 1.55 ) }
    dend_8 { pt3dadd( -6.63861, -57.783, -14.514, 2.14 ) }
    dend_8 { pt3dadd( -6.71396, -58.319, -14.6858, 2.36 ) }
    dend_8 { pt3dadd( -6.7246, -58.3738, -14.702, 2.36 ) }
    dend_8 { pt3dadd( -6.89463, -58.956, -14.8886, 2.36 ) }
    dend_8 { pt3dadd( -7.18301, -59.6096, -15.1462, 2.06 ) }
    dend_8 { pt3dadd( -7.72767, -60.5417, -15.5675, 1.77 ) }
    dend_8 { pt3dadd( -8.34433, -61.4928, -16.0335, 0.74 ) }
    dend_8 { pt3dadd( -8.66102, -61.9483, -16.2777, 0.52 ) }
    dend_8 { pt3dadd( -9.23339, -62.7095, -16.7191, 0.44 ) }
    dend_8 { pt3dadd( -9.98461, -63.5759, -17.2995, 0.44 ) }
    dend_8 { pt3dadd( -10.776, -64.3659, -17.9223, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 3.06297, -165.494, 19.3573, 0.88 ) }
    dend_4 { pt3dadd( 2.9216, -166.76, 19.204, 0.88 ) }
    dend_4 { pt3dadd( 2.82434, -167.967, 18.9685, 0.88 ) }
    dend_4 { pt3dadd( 2.79097, -168.809, 18.7826, 1.18 ) }
    dend_4 { pt3dadd( 2.77556, -169.354, 18.645, 1.18 ) }
    dend_4 { pt3dadd( 2.74273, -170.831, 18.2641, 0.52 ) }
    dend_4 { pt3dadd( 2.72785, -171.5, 18.0914, 0.52 ) }
    dend_4 { pt3dadd( 2.72882, -172.813, 17.7104, 1.99 ) }
    dend_4 { pt3dadd( 2.75296, -174.072, 17.2914, 3.09 ) }
    dend_4 { pt3dadd( 2.78166, -174.864, 17.001, 3.61 ) }
    dend_4 { pt3dadd( 2.81883, -175.795, 16.6542, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.06297, -165.494, 19.3573, 0.74 ) }
    dend_3 { pt3dadd( 3.74887, -166.431, 18.8933, 0.74 ) }
    dend_3 { pt3dadd( 4.49429, -167.607, 18.3888, 0.66 ) }
    dend_3 { pt3dadd( 4.86581, -168.193, 18.1373, 1.11 ) }
    dend_3 { pt3dadd( 5.10465, -168.57, 17.9756, 1.25 ) }
    dend_3 { pt3dadd( 6.1971, -170.293, 17.2362, 0.29 ) }
    dend_3 { pt3dadd( 6.66141, -171.026, 16.9219, 0.29 ) }
    dend_3 { pt3dadd( 7.20178, -172.005, 16.4829, 0.29 ) }
    dend_3 { pt3dadd( 12.1581, -179.88, 13.8914, 0.29 ) }
    dend_3 { pt3dadd( 18.0868, -187.453, 12.7531, 0.29 ) }
    dend_3 { pt3dadd( 24.591, -194.503, 11.1296, 0.29 ) }
    dend_3 { pt3dadd( 30.3568, -202.254, 10.716, 0.29 ) }
    dend_3 { pt3dadd( 35.6226, -210.32, 10.2815, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -20.6694, 129.623, -68.0653, 0.22 ) }
    dend_69 { pt3dadd( -21.3977, 128.94, -69.3978, 0.22 ) }
    dend_69 { pt3dadd( -21.6864, 128.708, -69.9703, 1.18 ) }
    dend_69 { pt3dadd( -21.787, 128.634, -70.1567, 1.18 ) }
    dend_69 { pt3dadd( -23.1584, 127.698, -72.5956, 0.22 ) }
    dend_69 { pt3dadd( -23.4565, 127.502, -73.1184, 0.22 ) }
    dend_69 { pt3dadd( -24.4313, 126.863, -74.8284, 0.74 ) }
    dend_69 { pt3dadd( -25.7005, 126.176, -77.0303, 0.22 ) }
    dend_69 { pt3dadd( -26.1085, 125.977, -77.7404, 1.03 ) }
    dend_69 { pt3dadd( -26.2704, 125.901, -78.0199, 1.25 ) }
    dend_69 { pt3dadd( -26.4015, 125.848, -78.2253, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -20.6694, 129.623, -68.0653, 0.52 ) }
    dend_68 { pt3dadd( -20.3793, 130.768, -69.6656, 0.52 ) }
    dend_68 { pt3dadd( -20.2266, 131.476, -70.6133, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -20.0517, 132.59, -71.9232, 0.88 ) }
    dend_68 { pt3dadd( -20.0298, 132.782, -72.1247, 1.03 ) }
    dend_68 { pt3dadd( -19.8961, 134.481, -73.7816, 0.15 ) }
    dend_68 { pt3dadd( -19.8711, 134.903, -74.1747, 0.52 ) }
    dend_68 { pt3dadd( -19.8783, 135.069, -74.3025, 0.52 ) }
    dend_68 { pt3dadd( -19.9681, 136.278, -75.107, 0.15 ) }
    dend_68 { pt3dadd( -20.0139, 136.83, -75.4188, 0.81 ) }
    dend_68 { pt3dadd( -20.0838, 137.561, -75.8045, 1.11 ) }
    dend_68 { pt3dadd( -20.0917, 137.622, -75.8306, 1.11 ) }
    dend_68 { pt3dadd( -20.269, 139.037, -76.4503, 0.22 ) }
    dend_68 { pt3dadd( -20.3451, 139.66, -76.7452, 0.96 ) }
    dend_68 { pt3dadd( -20.3925, 140.053, -76.9623, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -10.9434, 122.181, -16.6091, 0.96 ) }
    dend_66 { pt3dadd( -11.4484, 123.051, -17.7904, 0.96 ) }
    dend_66 { pt3dadd( -11.9563, 123.932, -18.9706, 1.03 ) }
    dend_66 { pt3dadd( -12.0608, 124.138, -19.247, 1.03 ) }
    dend_66 { pt3dadd( -12.4012, 124.859, -20.2001, 0.29 ) }
    dend_66 { pt3dadd( -12.6218, 125.424, -20.8731, 1.25 ) }
    dend_66 { pt3dadd( -12.7514, 125.816, -21.2992, 1.47 ) }
    dend_66 { pt3dadd( -12.7825, 125.952, -21.4201, 1.47 ) }
    dend_66 { pt3dadd( -13.0239, 127.208, -22.3316, 0.29 ) }
    dend_66 { pt3dadd( -13.0423, 127.322, -22.4116, 0.29 ) }
    dend_66 { pt3dadd( -13.1579, 128.287, -23.0254, 0.29 ) }
    dend_66 { pt3dadd( -13.1886, 128.65, -23.2696, 0.59 ) }
    dend_66 { pt3dadd( -13.2398, 129.458, -23.821, 0.44 ) }
    dend_66 { pt3dadd( -13.2948, 130.482, -24.5183, 2.28 ) }
    dend_66 { pt3dadd( -13.326, 131.096, -24.9301, 2.65 ) }
    dend_66 { pt3dadd( -13.3406, 131.389, -25.1342, 2.65 ) }
    dend_66 { pt3dadd( -13.4522, 133.301, -26.5251, 0.37 ) }
    dend_66 { pt3dadd( -13.4806, 133.909, -26.9425, 0.29 ) }
    dend_66 { pt3dadd( -13.482, 133.986, -26.9907, 0.29 ) }
    dend_66 { pt3dadd( -13.4811, 134.424, -27.225, 0.44 ) }
    dend_66 { pt3dadd( -13.4824, 134.686, -27.3345, 0.44 ) }
    dend_66 { pt3dadd( -13.4959, 135.467, -27.5912, 0.15 ) }
    dend_66 { pt3dadd( -13.524, 136.152, -27.7167, 0.74 ) }
    dend_66 { pt3dadd( -13.5266, 136.218, -27.7309, 0.74 ) }
    dend_66 { pt3dadd( -13.5526, 136.619, -27.8548, 0.74 ) }
    dend_66 { pt3dadd( -13.5802, 136.953, -27.9722, 0.52 ) }
    dend_66 { pt3dadd( -13.6744, 137.731, -28.2594, 0.29 ) }
    dend_66 { pt3dadd( -13.8179, 138.695, -28.6197, 1.18 ) }
    dend_66 { pt3dadd( -13.8963, 139.148, -28.7912, 1.69 ) }
    dend_66 { pt3dadd( -14.1966, 140.756, -29.4763, 0.29 ) }
    dend_66 { pt3dadd( -14.3227, 141.379, -29.7543, 0.29 ) }
    dend_66 { pt3dadd( -14.5877, 142.558, -30.2888, 1.77 ) }
    dend_66 { pt3dadd( -14.6709, 142.869, -30.4363, 2.73 ) }
    dend_66 { pt3dadd( -14.7479, 143.113, -30.5566, 2.73 ) }
    dend_66 { pt3dadd( -15.449, 145.134, -31.5721, 0.29 ) }
    dend_66 { pt3dadd( -15.6737, 145.724, -31.8679, 0.29 ) }
    dend_66 { pt3dadd( -15.7659, 145.937, -31.9828, 0.59 ) }
    dend_66 { pt3dadd( -16.111, 146.645, -32.3887, 0.22 ) }
    dend_66 { pt3dadd( -16.3764, 147.131, -32.6756, 0.74 ) }
    dend_66 { pt3dadd( -16.4918, 147.299, -32.7742, 1.03 ) }
    dend_66 { pt3dadd( -16.538, 147.344, -32.7996, 1.03 ) }
    dend_66 { pt3dadd( -16.8397, 147.613, -32.9727, 0.81 ) }
    dend_66 { pt3dadd( -16.9241, 147.694, -33.022, 0.81 ) }
    dend_66 { pt3dadd( -17.7039, 148.53, -33.4486, 0.22 ) }
    dend_66 { pt3dadd( -18.0639, 148.948, -33.6427, 0.59 ) }
    dend_66 { pt3dadd( -18.6545, 149.649, -33.9483, 0.22 ) }
    dend_66 { pt3dadd( -18.7466, 149.76, -33.9922, 0.22 ) }
    dend_66 { pt3dadd( -19.1344, 150.247, -34.155, 0.22 ) }
    dend_66 { pt3dadd( -19.5843, 150.841, -34.3187, 0.22 ) }
    dend_66 { pt3dadd( -20.2025, 151.711, -34.5241, 1.62 ) }
    dend_66 { pt3dadd( -20.6309, 152.343, -34.6622, 2.14 ) }
    dend_66 { pt3dadd( -20.9982, 152.892, -34.7734, 2.14 ) }
    dend_66 { pt3dadd( -21.9489, 154.27, -35.053, 0.29 ) }
    dend_66 { pt3dadd( -22.2544, 154.702, -35.1405, 0.44 ) }
    dend_66 { pt3dadd( -22.5958, 155.193, -35.2408, 0.22 ) }
    dend_66 { pt3dadd( -23.1197, 155.979, -35.3988, 0.22 ) }
    dend_66 { pt3dadd( -23.5935, 156.736, -35.5545, 1.25 ) }
    dend_66 { pt3dadd( -23.7871, 157.061, -35.6254, 1.62 ) }
    dend_66 { pt3dadd( -23.8862, 157.248, -35.6726, 1.84 ) }
    dend_66 { pt3dadd( -24.5466, 158.657, -36.0837, 0.29 ) }
    dend_66 { pt3dadd( -25.0105, 159.788, -36.4369, 0.29 ) }
    dend_66 { pt3dadd( -25.2708, 160.569, -36.7154, 0.74 ) }
    dend_66 { pt3dadd( -25.3629, 160.882, -36.8478, 0.74 ) }
    dend_66 { pt3dadd( -25.6537, 161.968, -37.3561, 0.22 ) }
    dend_66 { pt3dadd( -25.8831, 162.928, -37.8362, 1.62 ) }
    dend_66 { pt3dadd( -25.8928, 162.979, -37.8621, 1.62 ) }
    dend_66 { pt3dadd( -26.0103, 163.674, -38.2164, 1.99 ) }
    dend_66 { pt3dadd( -26.2666, 165.348, -39.0406, 0.22 ) }
    dend_66 { pt3dadd( -26.2745, 165.4, -39.0649, 0.22 ) }
    dend_66 { pt3dadd( -26.408, 166.182, -39.3945, 0.22 ) }
    dend_66 { pt3dadd( -26.554, 167.039, -39.7214, 0.96 ) }
    dend_66 { pt3dadd( -26.6137, 167.367, -39.84, 1.25 ) }
    dend_66 { pt3dadd( -26.877, 168.87, -40.2987, 0.22 ) }
    dend_66 { pt3dadd( -26.8855, 168.925, -40.3128, 0.22 ) }
    dend_66 { pt3dadd( -27.0128, 169.682, -40.5052, 0.74 ) }
    dend_66 { pt3dadd( -27.0502, 169.886, -40.5555, 0.88 ) }
    dend_66 { pt3dadd( -27.1595, 170.425, -40.6873, 0.29 ) }
    dend_66 { pt3dadd( -27.38, 171.47, -40.9162, 0.22 ) }
    dend_66 { pt3dadd( -27.5211, 172.147, -41.0344, 0.22 ) }
    dend_66 { pt3dadd( -27.6689, 173.104, -41.1551, 1.33 ) }
    dend_66 { pt3dadd( -27.7045, 173.459, -41.1831, 1.92 ) }
    dend_66 { pt3dadd( -27.709, 173.516, -41.1854, 1.92 ) }
    dend_66 { pt3dadd( -27.7365, 173.943, -41.1911, 1.77 ) }
    dend_66 { pt3dadd( -27.7668, 174.387, -41.1926, 1.69 ) }
    dend_66 { pt3dadd( -27.8676, 175.905, -41.1862, 0.22 ) }
    dend_66 { pt3dadd( -27.9828, 177.158, -41.1533, 0.22 ) }
    dend_66 { pt3dadd( -28.1196, 178.333, -41.1132, 1.47 ) }
    dend_66 { pt3dadd( -28.1924, 178.837, -41.0932, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -28.2545, 179.173, -41.0793, 1.92 ) }
    dend_66 { pt3dadd( -28.366, 179.645, -41.0603, 1.47 ) }
    dend_66 { pt3dadd( -28.8534, 181.287, -41.0061, 0.22 ) }
    dend_66 { pt3dadd( -29.0781, 181.948, -40.979, 0.44 ) }
    dend_66 { pt3dadd( -29.1831, 182.257, -40.9715, 0.44 ) }
    dend_66 { pt3dadd( -29.4754, 183.128, -40.9628, 0.22 ) }
    dend_66 { pt3dadd( -29.7954, 184.138, -40.9729, 1.18 ) }
    dend_66 { pt3dadd( -29.937, 184.621, -40.9868, 2.14 ) }
    dend_66 { pt3dadd( -30.0905, 185.179, -41.0204, 1.62 ) }
    dend_66 { pt3dadd( -30.5568, 186.956, -41.1426, 0.22 ) }
    dend_66 { pt3dadd( -30.5728, 187.021, -41.1475, 0.22 ) }
    dend_66 { pt3dadd( -30.8855, 188.449, -41.2446, 0.22 ) }
    dend_66 { pt3dadd( -31.132, 189.673, -41.3175, 0.22 ) }
    dend_66 { pt3dadd( -31.2811, 190.475, -41.3422, 1.03 ) }
    dend_66 { pt3dadd( -31.3301, 190.751, -41.343, 1.62 ) }
    dend_66 { pt3dadd( -31.3803, 191.028, -41.3332, 1.11 ) }
    dend_66 { pt3dadd( -31.5623, 192.356, -41.2209, 0.22 ) }
    dend_66 { pt3dadd( -31.5675, 192.412, -41.2132, 0.22 ) }
    dend_66 { pt3dadd( -31.6192, 193.482, -41.0259, 1.47 ) }
    dend_66 { pt3dadd( -31.6284, 193.831, -40.9568, 2.06 ) }
    dend_66 { pt3dadd( -31.6304, 193.906, -40.9419, 2.06 ) }
    dend_66 { pt3dadd( -31.6973, 195.53, -40.6681, 0.22 ) }
    dend_66 { pt3dadd( -31.7488, 196.432, -40.5415, 0.52 ) }
    dend_66 { pt3dadd( -31.8511, 197.631, -40.4053, 0.22 ) }
    dend_66 { pt3dadd( -31.9387, 198.427, -40.3349, 1.33 ) }
    dend_66 { pt3dadd( -31.994, 198.838, -40.3139, 1.33 ) }
    dend_66 { pt3dadd( -32.221, 200.235, -40.2971, 0.22 ) }
    dend_66 { pt3dadd( -32.3256, 200.769, -40.3207, 0.22 ) }
    dend_66 { pt3dadd( -32.4643, 201.499, -40.3766, 0.66 ) }
    dend_66 { pt3dadd( -32.5171, 201.784, -40.4076, 0.66 ) }
    dend_66 { pt3dadd( -32.7308, 203.131, -40.5724, 0.22 ) }
    dend_66 { pt3dadd( -32.7369, 203.199, -40.5819, 0.22 ) }
    dend_66 { pt3dadd( -32.7643, 204.112, -40.7166, 0.22 ) }
    dend_66 { pt3dadd( -32.7551, 204.974, -40.8675, 0.96 ) }
    dend_66 { pt3dadd( -32.7343, 205.45, -40.959, 1.62 ) }
    dend_66 { pt3dadd( -32.7087, 205.946, -41.0574, 1.4 ) }
    dend_66 { pt3dadd( -32.6725, 207.521, -41.3858, 0.22 ) }
    dend_66 { pt3dadd( -32.6774, 207.93, -41.4782, 0.22 ) }
    dend_66 { pt3dadd( -32.7235, 208.908, -41.711, 1.11 ) }
    dend_66 { pt3dadd( -32.7347, 209.05, -41.7445, 1.33 ) }
    dend_66 { pt3dadd( -32.7785, 209.453, -41.8503, 1.18 ) }
    dend_66 { pt3dadd( -33.007, 211.234, -42.3244, 0.22 ) }
    dend_66 { pt3dadd( -33.134, 212.062, -42.5543, 1.03 ) }
    dend_66 { pt3dadd( -33.2079, 212.525, -42.6845, 1.18 ) }
    dend_66 { pt3dadd( -33.262, 212.857, -42.792, 1.03 ) }
    dend_66 { pt3dadd( -33.4441, 213.99, -43.2024, 0.15 ) }
    dend_66 { pt3dadd( -33.587, 214.938, -43.5736, 0.15 ) }
    dend_66 { pt3dadd( -33.7128, 215.827, -43.9296, 1.33 ) }
    dend_66 { pt3dadd( -33.7855, 216.321, -44.1234, 1.55 ) }
    dend_66 { pt3dadd( -34.0499, 218.064, -44.8228, 0.15 ) }
    dend_66 { pt3dadd( -34.0602, 218.128, -44.8476, 0.15 ) }
    dend_66 { pt3dadd( -34.2, 218.93, -45.1264, 0.15 ) }
    dend_66 { pt3dadd( -34.3678, 219.848, -45.4325, 1.11 ) }
    dend_66 { pt3dadd( -34.421, 220.165, -45.5238, 1.55 ) }
    dend_66 { pt3dadd( -34.6296, 221.537, -45.8599, 0.15 ) }
    dend_66 { pt3dadd( -34.7405, 222.276, -45.9898, 0.74 ) }
    dend_66 { pt3dadd( -34.9129, 223.37, -46.1651, 0.15 ) }
    dend_66 { pt3dadd( -34.9245, 223.435, -46.1743, 0.15 ) }
    dend_66 { pt3dadd( -35.043, 224.058, -46.2513, 0.15 ) }
    dend_66 { pt3dadd( -35.1858, 224.807, -46.3182, 0.96 ) }
    dend_66 { pt3dadd( -35.2494, 225.15, -46.337, 0.96 ) }
    dend_66 { pt3dadd( -35.5215, 226.67, -46.4344, 0.15 ) }
    dend_66 { pt3dadd( -35.6273, 227.316, -46.4783, 0.44 ) }
    dend_66 { pt3dadd( -35.6396, 227.392, -46.4857, 0.44 ) }
    dend_66 { pt3dadd( -35.7914, 228.361, -46.6151, 0.15 ) }
    dend_66 { pt3dadd( -35.9269, 229.295, -46.7624, 1.03 ) }
    dend_66 { pt3dadd( -35.9793, 229.702, -46.8324, 1.33 ) }
    dend_66 { pt3dadd( -36.0401, 230.34, -46.9585, 0.59 ) }
    dend_66 { pt3dadd( -36.1179, 231.409, -47.1895, 0.15 ) }
    dend_66 { pt3dadd( -36.1746, 232.212, -47.3697, 0.88 ) }
    dend_66 { pt3dadd( -36.2047, 232.676, -47.4761, 1.03 ) }
    dend_66 { pt3dadd( -36.2344, 233.16, -47.5833, 0.66 ) }
    dend_66 { pt3dadd( -36.2762, 234.266, -47.8917, 0.15 ) }
    dend_66 { pt3dadd( -36.3034, 235.426, -48.2566, 0.15 ) }
    dend_66 { pt3dadd( -36.3099, 236.173, -48.467, 0.96 ) }
    dend_66 { pt3dadd( -36.3177, 236.602, -48.5787, 1.25 ) }
    dend_66 { pt3dadd( -36.325, 236.888, -48.6472, 1.25 ) }
    dend_66 { pt3dadd( -36.4039, 238.674, -49.031, 0.15 ) }
    dend_66 { pt3dadd( -36.44, 239.152, -49.111, 0.44 ) }
    dend_66 { pt3dadd( -36.5449, 240.193, -49.2438, 0.15 ) }
    dend_66 { pt3dadd( -36.5993, 240.681, -49.2808, 0.74 ) }
    dend_66 { pt3dadd( -36.6563, 241.172, -49.2969, 0.74 ) }
    dend_66 { pt3dadd( -36.7483, 242.098, -49.2859, 0.15 ) }
    dend_66 { pt3dadd( -36.8274, 242.868, -49.2394, 0.88 ) }
    dend_66 { pt3dadd( -36.8687, 243.351, -49.2262, 0.96 ) }
    dend_66 { pt3dadd( -36.9501, 244.551, -49.2369, 0.15 ) }
    dend_66 { pt3dadd( -36.9924, 245.186, -49.2362, 0.29 ) }
    dend_66 { pt3dadd( -37.0734, 246.35, -49.2242, 0.15 ) }
    dend_66 { pt3dadd( -37.1166, 246.986, -49.2107, 0.96 ) }
    dend_66 { pt3dadd( -37.1468, 247.537, -49.1999, 1.18 ) }
    dend_66 { pt3dadd( -37.2461, 249.417, -49.1438, 0.22 ) }
    dend_66 { pt3dadd( -37.288, 250.264, -49.1122, 0.22 ) }
    dend_66 { pt3dadd( -37.298, 250.476, -49.1018, 0.22 ) }
    dend_66 { pt3dadd( -37.3039, 250.623, -49.0928, 0.22 ) }
    dend_66 { pt3dadd( -37.3161, 251.612, -49.0762, 0.15 ) }
    dend_66 { pt3dadd( -37.32, 252.44, -49.0999, 1.11 ) }
    dend_66 { pt3dadd( -37.3173, 252.896, -49.1317, 1.77 ) }
    dend_66 { pt3dadd( -37.3119, 253.252, -49.1664, 1.77 ) }
    dend_66 { pt3dadd( -37.3114, 253.33, -49.1755, 1.77 ) }
    dend_66 { pt3dadd( -37.3066, 255.419, -49.4149, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -37.3217, 256.105, -49.49, 0.15 ) }
    dend_66 { pt3dadd( -37.3231, 256.161, -49.4958, 0.15 ) }
    dend_66 { pt3dadd( -37.3468, 256.822, -49.5469, 0.52 ) }
    dend_66 { pt3dadd( -37.3658, 257.108, -49.5632, 0.59 ) }
    dend_66 { pt3dadd( -37.5276, 258.69, -49.6165, 0.15 ) }
    dend_66 { pt3dadd( -37.6226, 259.521, -49.6154, 1.03 ) }
    dend_66 { pt3dadd( -37.6715, 259.959, -49.6176, 1.77 ) }
    dend_66 { pt3dadd( -37.7202, 260.382, -49.623, 1.55 ) }
    dend_66 { pt3dadd( -37.9729, 262.195, -49.6629, 0.15 ) }
    dend_66 { pt3dadd( -38.0424, 262.628, -49.6813, 0.29 ) }
    dend_66 { pt3dadd( -38.1756, 263.365, -49.7309, 0.15 ) }
    dend_66 { pt3dadd( -38.3313, 264.186, -49.7935, 0.15 ) }
    dend_66 { pt3dadd( -38.3593, 264.328, -49.8044, 0.15 ) }
    dend_66 { pt3dadd( -38.6491, 265.78, -49.9319, 0.15 ) }
    dend_66 { pt3dadd( -38.861, 266.823, -50.0283, 1.11 ) }
    dend_66 { pt3dadd( -38.8749, 266.889, -50.0347, 1.11 ) }
    dend_66 { pt3dadd( -39.0074, 267.471, -50.092, 1.4 ) }
    dend_66 { pt3dadd( -39.1373, 268.128, -50.1661, 0.59 ) }
    dend_66 { pt3dadd( -39.3191, 269.18, -50.2905, 0.22 ) }
    dend_66 { pt3dadd( -39.4327, 270.01, -50.3892, 0.22 ) }
    dend_66 { pt3dadd( -39.5419, 270.898, -50.4901, 1.03 ) }
    dend_66 { pt3dadd( -39.5973, 271.445, -50.556, 1.55 ) }
    dend_66 { pt3dadd( -39.7876, 273.86, -50.8403, 0.15 ) }
    dend_66 { pt3dadd( -39.7927, 273.929, -50.848, 0.15 ) }
    dend_66 { pt3dadd( -39.8355, 274.514, -50.8962, 0.44 ) }
    dend_66 { pt3dadd( -39.8586, 274.871, -50.9167, 0.44 ) }
    dend_66 { pt3dadd( -39.9552, 276.339, -50.977, 0.15 ) }
    dend_66 { pt3dadd( -40.0158, 277.185, -51.004, 1.03 ) }
    dend_66 { pt3dadd( -40.0582, 277.752, -51.0141, 1.62 ) }
    dend_66 { pt3dadd( -40.2139, 279.56, -51.1406, 0.15 ) }
    dend_66 { pt3dadd( -40.4433, 281.888, -51.3838, 0.15 ) }
    dend_66 { pt3dadd( -40.5447, 282.832, -51.5078, 0.15 ) }
    dend_66 { pt3dadd( -40.6204, 283.476, -51.6092, 1.11 ) }
    dend_66 { pt3dadd( -40.7004, 284.173, -51.7424, 1.4 ) }
    dend_66 { pt3dadd( -40.9358, 286.483, -52.2499, 0.15 ) }
    dend_66 { pt3dadd( -41.0018, 287.158, -52.4188, 0.15 ) }
    dend_66 { pt3dadd( -41.0799, 287.974, -52.6239, 0.74 ) }
    dend_66 { pt3dadd( -41.1008, 288.338, -52.7005, 0.74 ) }
    dend_66 { pt3dadd( -41.1023, 288.404, -52.7116, 0.74 ) }
    dend_66 { pt3dadd( -41.0916, 290.253, -52.948, 0.15 ) }
    dend_66 { pt3dadd( -41.0522, 291.363, -53.0254, 1.55 ) }
    dend_66 { pt3dadd( -41.0116, 292.051, -53.0756, 1.92 ) }
    dend_66 { pt3dadd( -40.8732, 294.079, -53.2214, 0.15 ) }
    dend_66 { pt3dadd( -40.8252, 294.747, -53.2676, 0.88 ) }
    dend_66 { pt3dadd( -40.8137, 294.89, -53.2775, 0.88 ) }
    dend_66 { pt3dadd( -40.7665, 295.373, -53.312, 0.88 ) }
    dend_66 { pt3dadd( -40.6088, 296.836, -53.4244, 0.15 ) }
    dend_66 { pt3dadd( -40.5555, 297.395, -53.4584, 0.15 ) }
    dend_66 { pt3dadd( -40.5037, 297.991, -53.4802, 0.74 ) }
    dend_66 { pt3dadd( -40.3892, 299.37, -53.515, 0.15 ) }
    dend_66 { pt3dadd( -40.3849, 299.436, -53.5151, 0.15 ) }
    dend_66 { pt3dadd( -40.3689, 299.775, -53.5069, 0.37 ) }
    dend_66 { pt3dadd( -40.3564, 300.557, -53.4645, 0.22 ) }
    dend_66 { pt3dadd( -40.3571, 301.061, -53.4223, 0.88 ) }
    dend_66 { pt3dadd( -40.3588, 301.119, -53.4161, 0.88 ) }
    dend_66 { pt3dadd( -40.4346, 302.652, -53.3101, 0.15 ) }
    dend_66 { pt3dadd( -40.4688, 303.303, -53.2868, 0.15 ) }
    dend_66 { pt3dadd( -40.4725, 303.379, -53.2866, 0.15 ) }
    dend_66 { pt3dadd( -40.5265, 304.454, -53.3209, 1.25 ) }
    dend_66 { pt3dadd( -40.5401, 304.724, -53.3422, 1.25 ) }
    dend_66 { pt3dadd( -40.658, 306.51, -53.5448, 0.15 ) }
    dend_66 { pt3dadd( -40.6635, 306.578, -53.555, 0.15 ) }
    dend_66 { pt3dadd( -40.7218, 307.228, -53.6781, 1.18 ) }
    dend_66 { pt3dadd( -40.7434, 307.428, -53.7184, 1.18 ) }
    dend_66 { pt3dadd( -40.9169, 308.883, -54.0821, 0.15 ) }
    dend_66 { pt3dadd( -41.0886, 309.949, -54.4026, 0.15 ) }
    dend_66 { pt3dadd( -41.1429, 310.212, -54.4899, 0.44 ) }
    dend_66 { pt3dadd( -41.5489, 312.023, -55.124, 0.15 ) }
    dend_66 { pt3dadd( -41.8651, 313.319, -55.607, 1.77 ) }
    dend_66 { pt3dadd( -42.0634, 314.086, -55.9135, 1.55 ) }
    dend_66 { pt3dadd( -42.4004, 315.303, -56.4327, 0.22 ) }
    dend_66 { pt3dadd( -42.5518, 315.809, -56.6731, 0.37 ) }
    dend_66 { pt3dadd( -42.816, 316.614, -57.0705, 0.15 ) }
    dend_66 { pt3dadd( -42.8352, 316.663, -57.0953, 0.15 ) }
    dend_66 { pt3dadd( -43.0651, 317.212, -57.3869, 0.74 ) }
    dend_66 { pt3dadd( -43.1923, 317.513, -57.5298, 0.74 ) }
    dend_66 { pt3dadd( -43.4708, 318.219, -57.8386, 0.15 ) }
    dend_66 { pt3dadd( -43.6528, 318.649, -58.024, 0.66 ) }
    dend_66 { pt3dadd( -43.7959, 318.969, -58.1541, 1.25 ) }
    dend_66 { pt3dadd( -44.451, 320.358, -58.7185, 0.15 ) }
    dend_66 { pt3dadd( -44.4837, 320.425, -58.7453, 0.15 ) }
    dend_66 { pt3dadd( -44.8876, 321.271, -59.068, 0.15 ) }
    dend_66 { pt3dadd( -45.2488, 322.068, -59.3457, 0.96 ) }
    dend_66 { pt3dadd( -45.4117, 322.434, -59.4742, 1.55 ) }
    dend_66 { pt3dadd( -46.2237, 324.342, -60.1208, 0.15 ) }
    dend_66 { pt3dadd( -46.2438, 324.393, -60.1364, 0.15 ) }
    dend_66 { pt3dadd( -46.59, 325.351, -60.4159, 1.18 ) }
    dend_66 { pt3dadd( -46.7823, 325.933, -60.5798, 0.52 ) }
    dend_66 { pt3dadd( -47.0823, 326.962, -60.8446, 0.15 ) }
    dend_66 { pt3dadd( -47.2406, 327.561, -60.9803, 0.52 ) }
    dend_66 { pt3dadd( -47.677, 329.312, -61.2935, 0.15 ) }
    dend_66 { pt3dadd( -47.8434, 329.906, -61.3829, 0.15 ) }
    dend_66 { pt3dadd( -48.1244, 330.778, -61.4901, 0.66 ) }
    dend_66 { pt3dadd( -48.3176, 331.306, -61.5361, 0.96 ) }
    dend_66 { pt3dadd( -48.478, 331.694, -61.5504, 0.96 ) }
    dend_66 { pt3dadd( -49.1769, 333.085, -61.5103, 0.15 ) }
    dend_66 { pt3dadd( -49.7149, 333.982, -61.4312, 0.52 ) }
    dend_66 { pt3dadd( -49.9607, 334.364, -61.3868, 0.52 ) }
    dend_66 { pt3dadd( -50.3699, 334.968, -61.3022, 0.15 ) }
    dend_66 { pt3dadd( -50.8681, 335.677, -61.1918, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -52.1205, 337.41, -60.8873, 0.15 ) }
    dend_66 { pt3dadd( -52.5689, 338.018, -60.7596, 1.18 ) }
    dend_66 { pt3dadd( -52.9027, 338.475, -60.6689, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.9434, 122.181, -16.6091, 0.59 ) }
    dend_29 { pt3dadd( -10.8168, 123.039, -16.6312, 0.59 ) }
    dend_29 { pt3dadd( -10.7364, 123.807, -16.6652, 1.18 ) }
    dend_29 { pt3dadd( -10.6861, 124.549, -16.7182, 1.84 ) }
    dend_29 { pt3dadd( -10.6679, 124.988, -16.753, 2.06 ) }
    dend_29 { pt3dadd( -10.6626, 125.412, -16.7861, 2.06 ) }
    dend_29 { pt3dadd( -10.6701, 125.952, -16.826, 1.84 ) }
    dend_29 { pt3dadd( -10.7075, 126.546, -16.8676, 1.55 ) }
    dend_29 { pt3dadd( -10.8161, 127.609, -16.9415, 0.37 ) }
    dend_29 { pt3dadd( -10.9056, 128.289, -16.9859, 0.37 ) }
    dend_29 { pt3dadd( -11.0329, 129.12, -17.0507, 0.96 ) }
    dend_29 { pt3dadd( -11.1732, 129.947, -17.1195, 1.47 ) }
    dend_29 { pt3dadd( -11.2487, 130.357, -17.1525, 1.69 ) }
    dend_29 { pt3dadd( -11.3603, 130.965, -17.1952, 1.55 ) }
    dend_29 { pt3dadd( -11.4627, 131.517, -17.2326, 1.33 ) }
    dend_29 { pt3dadd( -11.5645, 132.234, -17.2806, 0.66 ) }
    dend_29 { pt3dadd( -11.6434, 133.137, -17.3563, 0.37 ) }
    dend_29 { pt3dadd( -11.6808, 134.167, -17.4518, 0.29 ) }
    dend_29 { pt3dadd( -11.6756, 135.046, -17.5368, 0.29 ) }
    dend_29 { pt3dadd( -11.6718, 135.115, -17.5434, 0.29 ) }
    dend_29 { pt3dadd( -11.5147, 136.611, -17.6739, 0.29 ) }
    dend_29 { pt3dadd( -11.4125, 137.328, -17.7238, 0.81 ) }
    dend_29 { pt3dadd( -11.3269, 137.855, -17.761, 0.96 ) }
    dend_29 { pt3dadd( -11.3173, 137.921, -17.765, 0.96 ) }
    dend_29 { pt3dadd( -11.2733, 138.342, -17.787, 0.96 ) }
    dend_29 { pt3dadd( -11.2115, 139.406, -17.8284, 0.29 ) }
    dend_29 { pt3dadd( -11.21, 140.034, -17.8461, 0.29 ) }
    dend_29 { pt3dadd( -11.2319, 140.889, -17.8572, 1.47 ) }
    dend_29 { pt3dadd( -11.2688, 141.712, -17.8882, 2.06 ) }
    dend_29 { pt3dadd( -11.279, 142.014, -17.9049, 2.5 ) }
    dend_29 { pt3dadd( -11.2941, 142.497, -17.9377, 2.43 ) }
    dend_29 { pt3dadd( -11.3056, 143.017, -17.977, 2.14 ) }
    dend_29 { pt3dadd( -11.314, 143.612, -18.0259, 1.77 ) }
    dend_29 { pt3dadd( -11.3232, 144.419, -18.0927, 0.66 ) }
    dend_29 { pt3dadd( -11.3417, 145.644, -18.1884, 0.44 ) }
    dend_29 { pt3dadd( -11.3659, 146.619, -18.255, 0.37 ) }
    dend_29 { pt3dadd( -11.4025, 147.529, -18.3092, 0.37 ) }
    dend_29 { pt3dadd( -11.4663, 148.442, -18.3523, 1.33 ) }
    dend_29 { pt3dadd( -11.5491, 149.259, -18.3823, 1.77 ) }
    dend_29 { pt3dadd( -11.6514, 150.028, -18.3978, 2.28 ) }
    dend_29 { pt3dadd( -11.7351, 150.504, -18.4118, 2.65 ) }
    dend_29 { pt3dadd( -11.8116, 150.913, -18.4266, 2.8 ) }
    dend_29 { pt3dadd( -11.9219, 151.481, -18.4484, 2.5 ) }
    dend_29 { pt3dadd( -12.0061, 151.958, -18.4656, 1.99 ) }
    dend_29 { pt3dadd( -12.0706, 152.361, -18.4812, 1.77 ) }
    dend_29 { pt3dadd( -12.1565, 153.019, -18.5069, 0.81 ) }
    dend_29 { pt3dadd( -12.2317, 153.914, -18.5345, 0.44 ) }
    dend_29 { pt3dadd( -12.2773, 154.822, -18.5603, 0.37 ) }
    dend_29 { pt3dadd( -12.2817, 155.623, -18.5767, 0.74 ) }
    dend_29 { pt3dadd( -12.2755, 156.029, -18.5814, 0.74 ) }
    dend_29 { pt3dadd( -12.2663, 156.624, -18.5822, 0.74 ) }
    dend_29 { pt3dadd( -12.2653, 157.822, -18.5851, 0.52 ) }
    dend_29 { pt3dadd( -12.2661, 157.879, -18.5856, 0.44 ) }
    dend_29 { pt3dadd( -12.2933, 158.782, -18.5999, 0.44 ) }
    dend_29 { pt3dadd( -12.3297, 159.537, -18.6147, 0.44 ) }
    dend_29 { pt3dadd( -12.4126, 160.858, -18.6444, 0.44 ) }
    dend_29 { pt3dadd( -12.5509, 162.458, -18.684, 1.55 ) }
    dend_29 { pt3dadd( -12.6309, 163.227, -18.7048, 2.43 ) }
    dend_29 { pt3dadd( -12.6879, 163.786, -18.7184, 2.65 ) }
    dend_29 { pt3dadd( -12.7377, 164.268, -18.7369, 2.87 ) }
    dend_29 { pt3dadd( -12.8097, 164.97, -18.7693, 2.36 ) }
    dend_29 { pt3dadd( -12.888, 165.72, -18.8219, 1.47 ) }
    dend_29 { pt3dadd( -12.9405, 166.221, -18.8561, 0.96 ) }
    dend_29 { pt3dadd( -13.0543, 167.211, -18.9263, 0.37 ) }
    dend_29 { pt3dadd( -13.1613, 168.093, -18.987, 0.37 ) }
    dend_29 { pt3dadd( -13.2949, 169.184, -19.0575, 0.29 ) }
    dend_29 { pt3dadd( -13.3889, 170.027, -19.1164, 1.69 ) }
    dend_29 { pt3dadd( -13.4769, 170.862, -19.2022, 2.28 ) }
    dend_29 { pt3dadd( -13.5216, 171.234, -19.2513, 2.73 ) }
    dend_29 { pt3dadd( -13.5718, 171.583, -19.3054, 2.8 ) }
    dend_29 { pt3dadd( -13.6697, 172.215, -19.4097, 1.99 ) }
    dend_29 { pt3dadd( -13.8137, 173.103, -19.579, 0.88 ) }
    dend_29 { pt3dadd( -14.0184, 174.142, -19.7898, 0.29 ) }
    dend_29 { pt3dadd( -14.187, 174.841, -19.9497, 0.37 ) }
    dend_29 { pt3dadd( -14.3189, 175.336, -20.0613, 0.44 ) }
    dend_29 { pt3dadd( -14.399, 175.602, -20.1132, 0.59 ) }
    dend_29 { pt3dadd( -14.4403, 175.734, -20.1311, 0.59 ) }
    dend_29 { pt3dadd( -14.5688, 176.163, -20.1566, 0.44 ) }
    dend_29 { pt3dadd( -14.7331, 176.853, -20.1566, 0.37 ) }
    dend_29 { pt3dadd( -14.745, 176.919, -20.1558, 0.37 ) }
    dend_29 { pt3dadd( -14.8775, 177.957, -20.147, 0.52 ) }
    dend_29 { pt3dadd( -14.957, 178.866, -20.1386, 0.81 ) }
    dend_29 { pt3dadd( -14.9763, 179.297, -20.1386, 0.81 ) }
    dend_29 { pt3dadd( -14.9789, 179.741, -20.1434, 0.66 ) }
    dend_29 { pt3dadd( -14.9777, 179.798, -20.146, 0.66 ) }
    dend_29 { pt3dadd( -14.9756, 180.325, -20.193, 0.44 ) }
    dend_29 { pt3dadd( -14.974, 181.308, -20.3192, 0.37 ) }
    dend_29 { pt3dadd( -14.9719, 182.229, -20.4515, 0.37 ) }
    dend_29 { pt3dadd( -14.9714, 182.285, -20.4623, 0.37 ) }
    dend_29 { pt3dadd( -14.9579, 183.188, -20.6885, 1.62 ) }
    dend_29 { pt3dadd( -14.9471, 183.956, -20.9135, 2.65 ) }
    dend_29 { pt3dadd( -14.9413, 184.399, -21.0577, 2.65 ) }
    dend_29 { pt3dadd( -14.9259, 185.321, -21.3883, 1.92 ) }
    dend_29 { pt3dadd( -14.9077, 186.439, -21.8002, 0.74 ) }
    dend_29 { pt3dadd( -14.9051, 187.448, -22.1569, 0.37 ) }
    dend_29 { pt3dadd( -14.9253, 188.343, -22.425, 0.37 ) }
    dend_29 { pt3dadd( -14.9284, 188.398, -22.4383, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -14.9942, 188.974, -22.5396, 0.37 ) }
    dend_29 { pt3dadd( -15.0191, 189.117, -22.5527, 0.37 ) }
    dend_29 { pt3dadd( -15.2056, 189.939, -22.5338, 0.37 ) }
    dend_29 { pt3dadd( -15.4605, 190.932, -22.4457, 1.03 ) }
    dend_29 { pt3dadd( -15.6696, 191.735, -22.3597, 1.77 ) }
    dend_29 { pt3dadd( -15.7857, 192.204, -22.3116, 2.06 ) }
    dend_29 { pt3dadd( -15.8972, 192.675, -22.263, 1.92 ) }
    dend_29 { pt3dadd( -16.0475, 193.367, -22.2012, 1.33 ) }
    dend_29 { pt3dadd( -16.1404, 193.855, -22.1689, 0.59 ) }
    dend_29 { pt3dadd( -16.2778, 194.677, -22.146, 0.37 ) }
    dend_29 { pt3dadd( -16.3375, 195.179, -22.1335, 0.59 ) }
    dend_29 { pt3dadd( -16.3559, 195.527, -22.127, 0.66 ) }
    dend_29 { pt3dadd( -16.3569, 195.739, -22.1245, 0.66 ) }
    dend_29 { pt3dadd( -16.3518, 196.233, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.3498, 196.728, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.3726, 197.654, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.4147, 198.557, -22.1228, 0.37 ) }
    dend_29 { pt3dadd( -16.4664, 199.397, -22.1228, 0.59 ) }
    dend_29 { pt3dadd( -16.5537, 200.648, -22.1228, 0.52 ) }
    dend_29 { pt3dadd( -16.6116, 201.41, -22.1228, 1.33 ) }
    dend_29 { pt3dadd( -16.6707, 202.13, -22.1331, 2.14 ) }
    dend_29 { pt3dadd( -16.7383, 202.839, -22.1663, 2.36 ) }
    dend_29 { pt3dadd( -16.787, 203.465, -22.2173, 2.58 ) }
    dend_29 { pt3dadd( -16.8006, 203.987, -22.2741, 2.36 ) }
    dend_29 { pt3dadd( -16.7874, 204.77, -22.3709, 1.62 ) }
    dend_29 { pt3dadd( -16.7574, 205.539, -22.4742, 0.81 ) }
    dend_29 { pt3dadd( -16.7058, 206.508, -22.6055, 0.52 ) }
    dend_29 { pt3dadd( -16.6501, 207.543, -22.733, 0.52 ) }
    dend_29 { pt3dadd( -16.6121, 208.283, -22.815, 0.44 ) }
    dend_29 { pt3dadd( -16.5566, 209.668, -22.9462, 0.44 ) }
    dend_29 { pt3dadd( -16.5222, 211.044, -23.0465, 1.11 ) }
    dend_29 { pt3dadd( -16.5223, 211.813, -23.0768, 1.84 ) }
    dend_29 { pt3dadd( -16.5495, 212.569, -23.0872, 2.36 ) }
    dend_29 { pt3dadd( -16.5747, 212.838, -23.088, 2.5 ) }
    dend_29 { pt3dadd( -16.67, 213.461, -23.086, 2.21 ) }
    dend_29 { pt3dadd( -16.7888, 214.07, -23.0787, 1.55 ) }
    dend_29 { pt3dadd( -16.9139, 214.622, -23.0669, 0.96 ) }
    dend_29 { pt3dadd( -17.0377, 215.146, -23.0572, 0.66 ) }
    dend_29 { pt3dadd( -17.2107, 215.97, -23.047, 0.37 ) }
    dend_29 { pt3dadd( -17.3351, 216.708, -23.0356, 0.66 ) }
    dend_29 { pt3dadd( -17.412, 217.274, -23.0239, 0.88 ) }
    dend_29 { pt3dadd( -17.4991, 218.183, -23.0019, 0.37 ) }
    dend_29 { pt3dadd( -17.5316, 218.745, -22.9872, 0.37 ) }
    dend_29 { pt3dadd( -17.5544, 219.658, -22.9589, 0.37 ) }
    dend_29 { pt3dadd( -17.5362, 220.781, -22.9243, 1.11 ) }
    dend_29 { pt3dadd( -17.533, 220.838, -22.9227, 1.11 ) }
    dend_29 { pt3dadd( -17.4531, 221.615, -22.9163, 1.99 ) }
    dend_29 { pt3dadd( -17.3727, 222.191, -22.9225, 2.21 ) }
    dend_29 { pt3dadd( -17.3068, 222.604, -22.9345, 2.36 ) }
    dend_29 { pt3dadd( -17.1533, 223.563, -22.9726, 1.33 ) }
    dend_29 { pt3dadd( -17.0475, 224.228, -23.0042, 0.52 ) }
    dend_29 { pt3dadd( -16.9101, 225.223, -23.0542, 0.29 ) }
    dend_29 { pt3dadd( -16.8632, 225.638, -23.0744, 0.59 ) }
    dend_29 { pt3dadd( -16.8315, 225.987, -23.0899, 0.59 ) }
    dend_29 { pt3dadd( -16.7797, 226.682, -23.1159, 0.44 ) }
    dend_29 { pt3dadd( -16.743, 227.318, -23.1339, 0.37 ) }
    dend_29 { pt3dadd( -16.7065, 228.02, -23.145, 0.37 ) }
    dend_29 { pt3dadd( -16.6665, 228.808, -23.1576, 1.18 ) }
    dend_29 { pt3dadd( -16.6257, 229.386, -23.1759, 1.77 ) }
    dend_29 { pt3dadd( -16.5682, 230.012, -23.203, 2.06 ) }
    dend_29 { pt3dadd( -16.508, 230.573, -23.2331, 1.92 ) }
    dend_29 { pt3dadd( -16.4452, 231.121, -23.2675, 1.55 ) }
    dend_29 { pt3dadd( -16.3695, 231.977, -23.3235, 0.37 ) }
    dend_29 { pt3dadd( -16.3133, 232.911, -23.3866, 0.37 ) }
    dend_29 { pt3dadd( -16.3126, 232.98, -23.3925, 0.37 ) }
    dend_29 { pt3dadd( -16.3377, 233.68, -23.4594, 0.37 ) }
    dend_29 { pt3dadd( -16.3423, 233.748, -23.4661, 0.37 ) }
    dend_29 { pt3dadd( -16.4476, 235.064, -23.5867, 0.37 ) }
    dend_29 { pt3dadd( -16.4545, 235.133, -23.5921, 0.37 ) }
    dend_29 { pt3dadd( -16.5897, 236.359, -23.7025, 1.18 ) }
    dend_29 { pt3dadd( -16.6738, 237.117, -23.7729, 1.62 ) }
    dend_29 { pt3dadd( -16.7132, 237.532, -23.8113, 1.84 ) }
    dend_29 { pt3dadd( -16.759, 238.241, -23.8713, 1.55 ) }
    dend_29 { pt3dadd( -16.7734, 238.935, -23.936, 1.11 ) }
    dend_29 { pt3dadd( -16.7741, 239.62, -23.9988, 0.52 ) }
    dend_29 { pt3dadd( -16.7525, 240.661, -24.0887, 0.44 ) }
    dend_29 { pt3dadd( -16.7253, 241.468, -24.1636, 0.37 ) }
    dend_29 { pt3dadd( -16.6818, 242.49, -24.2584, 0.37 ) }
    dend_29 { pt3dadd( -16.6036, 243.853, -24.3933, 1.33 ) }
    dend_29 { pt3dadd( -16.5767, 244.266, -24.4333, 1.84 ) }
    dend_29 { pt3dadd( -16.5669, 244.413, -24.4461, 1.84 ) }
    dend_29 { pt3dadd( -16.5378, 244.829, -24.482, 1.84 ) }
    dend_29 { pt3dadd( -16.4952, 245.757, -24.5517, 1.25 ) }
    dend_29 { pt3dadd( -16.4781, 246.313, -24.5959, 0.74 ) }
    dend_29 { pt3dadd( -16.4669, 247.219, -24.662, 0.37 ) }
    dend_29 { pt3dadd( -16.4595, 247.877, -24.7132, 0.44 ) }
    dend_29 { pt3dadd( -16.4531, 248.6, -24.7794, 0.44 ) }
    dend_29 { pt3dadd( -16.4498, 249.638, -24.8835, 0.44 ) }
    dend_29 { pt3dadd( -16.454, 250.5, -24.976, 1.03 ) }
    dend_29 { pt3dadd( -16.4674, 251.271, -25.058, 1.18 ) }
    dend_29 { pt3dadd( -16.4784, 251.928, -25.1414, 0.74 ) }
    dend_29 { pt3dadd( -16.4914, 252.415, -25.2077, 0.74 ) }
    dend_29 { pt3dadd( -16.5192, 253.172, -25.3116, 0.59 ) }
    dend_29 { pt3dadd( -16.5223, 253.241, -25.3204, 0.59 ) }
    dend_29 { pt3dadd( -16.5517, 253.799, -25.3767, 0.59 ) }
    dend_29 { pt3dadd( -16.605, 254.907, -25.5035, 1.47 ) }
    dend_29 { pt3dadd( -16.6312, 255.6, -25.5811, 2.21 ) }
    dend_29 { pt3dadd( -16.6462, 256.158, -25.6398, 2.5 ) }
    dend_29 { pt3dadd( -16.6469, 256.64, -25.69, 2.65 ) }
    dend_29 { pt3dadd( -16.6206, 257.558, -25.7754, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -16.5603, 258.491, -25.8496, 0.74 ) }
    dend_29 { pt3dadd( -16.4551, 259.577, -25.9333, 0.52 ) }
    dend_29 { pt3dadd( -16.4458, 259.653, -25.9405, 0.52 ) }
    dend_29 { pt3dadd( -16.3148, 260.534, -26.0346, 0.52 ) }
    dend_29 { pt3dadd( -16.1113, 261.704, -26.1759, 1.33 ) }
    dend_29 { pt3dadd( -15.9534, 262.525, -26.2812, 1.4 ) }
    dend_29 { pt3dadd( -15.7764, 263.393, -26.3945, 1.18 ) }
    dend_29 { pt3dadd( -15.6497, 264.064, -26.4961, 0.52 ) }
    dend_29 { pt3dadd( -15.629, 264.197, -26.5189, 0.52 ) }
    dend_29 { pt3dadd( -15.5313, 264.981, -26.6666, 0.52 ) }
    dend_29 { pt3dadd( -15.4685, 265.629, -26.7922, 0.52 ) }
    dend_29 { pt3dadd( -15.3826, 266.807, -27.0073, 0.74 ) }
    dend_29 { pt3dadd( -15.3292, 267.844, -27.1681, 0.96 ) }
    dend_29 { pt3dadd( -15.2894, 268.928, -27.3245, 1.99 ) }
    dend_29 { pt3dadd( -15.2796, 269.286, -27.3723, 2.58 ) }
    dend_29 { pt3dadd( -15.2622, 269.789, -27.4304, 2.36 ) }
    dend_29 { pt3dadd( -15.2341, 270.357, -27.4879, 2.14 ) }
    dend_29 { pt3dadd( -15.1713, 271.188, -27.554, 1.03 ) }
    dend_29 { pt3dadd( -15.071, 272.079, -27.6139, 0.52 ) }
    dend_29 { pt3dadd( -14.9363, 273.099, -27.682, 0.52 ) }
    dend_29 { pt3dadd( -14.7954, 274.172, -27.744, 0.52 ) }
    dend_29 { pt3dadd( -14.7222, 274.747, -27.7723, 0.88 ) }
    dend_29 { pt3dadd( -14.6533, 275.299, -27.7943, 0.52 ) }
    dend_29 { pt3dadd( -14.5481, 276.2, -27.8197, 0.52 ) }
    dend_29 { pt3dadd( -14.4775, 276.923, -27.8278, 0.52 ) }
    dend_29 { pt3dadd( -14.3988, 278.089, -27.8353, 1.4 ) }
    dend_29 { pt3dadd( -14.3714, 278.734, -27.8377, 1.77 ) }
    dend_29 { pt3dadd( -14.3605, 279.164, -27.8365, 1.92 ) }
    dend_29 { pt3dadd( -14.3534, 279.58, -27.8328, 1.62 ) }
    dend_29 { pt3dadd( -14.3452, 280.292, -27.822, 1.11 ) }
    dend_29 { pt3dadd( -14.3331, 281.138, -27.8111, 0.74 ) }
    dend_29 { pt3dadd( -14.3133, 282.369, -27.8113, 0.59 ) }
    dend_29 { pt3dadd( -14.2971, 283.844, -27.8108, 0.59 ) }
    dend_29 { pt3dadd( -14.2881, 285.0, -27.8099, 0.44 ) }
    dend_29 { pt3dadd( -14.2828, 285.492, -27.8093, 0.66 ) }
    dend_29 { pt3dadd( -14.2819, 285.561, -27.8092, 0.66 ) }
    dend_29 { pt3dadd( -14.2637, 286.682, -27.8062, 1.33 ) }
    dend_29 { pt3dadd( -14.2497, 287.591, -27.8027, 2.21 ) }
    dend_29 { pt3dadd( -14.2356, 288.294, -27.7878, 2.73 ) }
    dend_29 { pt3dadd( -14.2336, 288.955, -27.7688, 2.87 ) }
    dend_29 { pt3dadd( -14.2352, 289.261, -27.7625, 3.09 ) }
    dend_29 { pt3dadd( -14.25, 289.907, -27.7577, 2.36 ) }
    dend_29 { pt3dadd( -14.2835, 290.676, -27.7606, 1.25 ) }
    dend_29 { pt3dadd( -14.3205, 291.228, -27.7707, 0.66 ) }
    dend_29 { pt3dadd( -14.4276, 292.351, -27.8215, 0.37 ) }
    dend_29 { pt3dadd( -14.5349, 293.208, -27.8779, 0.66 ) }
    dend_29 { pt3dadd( -14.6197, 293.839, -27.9289, 0.52 ) }
    dend_29 { pt3dadd( -14.6651, 294.188, -27.9623, 0.66 ) }
    dend_29 { pt3dadd( -14.7449, 294.878, -28.0363, 0.74 ) }
    dend_29 { pt3dadd( -14.818, 295.669, -28.1419, 0.81 ) }
    dend_29 { pt3dadd( -14.8689, 296.502, -28.2736, 1.25 ) }
    dend_29 { pt3dadd( -14.8821, 297.03, -28.3643, 1.69 ) }
    dend_29 { pt3dadd( -14.8777, 297.421, -28.4368, 1.69 ) }
    dend_29 { pt3dadd( -14.8466, 298.187, -28.5834, 1.4 ) }
    dend_29 { pt3dadd( -14.7932, 299.025, -28.7481, 1.11 ) }
    dend_29 { pt3dadd( -14.7339, 299.706, -28.8713, 0.74 ) }
    dend_29 { pt3dadd( -14.644, 300.718, -29.0444, 0.59 ) }
    dend_29 { pt3dadd( -14.6382, 300.794, -29.0566, 0.59 ) }
    dend_29 { pt3dadd( -14.5934, 301.565, -29.1655, 0.59 ) }
    dend_29 { pt3dadd( -14.59, 301.632, -29.1727, 0.59 ) }
    dend_29 { pt3dadd( -14.5493, 302.954, -29.252, 0.59 ) }
    dend_29 { pt3dadd( -14.5496, 303.788, -29.2755, 1.11 ) }
    dend_29 { pt3dadd( -14.5524, 303.855, -29.2774, 1.11 ) }
    dend_29 { pt3dadd( -14.5937, 304.472, -29.2942, 1.77 ) }
    dend_29 { pt3dadd( -14.6456, 305.05, -29.313, 2.06 ) }
    dend_29 { pt3dadd( -14.6966, 305.532, -29.3333, 2.06 ) }
    dend_29 { pt3dadd( -14.7778, 306.154, -29.3631, 1.77 ) }
    dend_29 { pt3dadd( -14.8321, 306.581, -29.3832, 1.4 ) }
    dend_29 { pt3dadd( -14.8898, 307.072, -29.4063, 0.81 ) }
    dend_29 { pt3dadd( -15.0206, 308.184, -29.4627, 0.59 ) }
    dend_29 { pt3dadd( -15.1453, 309.307, -29.521, 0.59 ) }
    dend_29 { pt3dadd( -15.2108, 309.999, -29.5651, 0.96 ) }
    dend_29 { pt3dadd( -15.2577, 310.482, -29.5984, 0.96 ) }
    dend_29 { pt3dadd( -15.2724, 310.631, -29.6086, 0.96 ) }
    dend_29 { pt3dadd( -15.3094, 311.008, -29.6364, 0.81 ) }
    dend_29 { pt3dadd( -15.37, 311.666, -29.6847, 0.81 ) }
    dend_29 { pt3dadd( -15.4562, 312.734, -29.7625, 0.37 ) }
    dend_29 { pt3dadd( -15.5309, 313.781, -29.8392, 0.37 ) }
    dend_29 { pt3dadd( -15.5899, 314.758, -29.8899, 0.37 ) }
    dend_29 { pt3dadd( -15.6256, 315.44, -29.9119, 1.25 ) }
    dend_29 { pt3dadd( -15.6474, 316.143, -29.9119, 1.77 ) }
    dend_29 { pt3dadd( -15.6576, 316.723, -29.8918, 2.28 ) }
    dend_29 { pt3dadd( -15.6506, 317.275, -29.8516, 2.58 ) }
    dend_29 { pt3dadd( -15.6225, 317.973, -29.7886, 2.36 ) }
    dend_29 { pt3dadd( -15.5965, 318.589, -29.7256, 1.92 ) }
    dend_29 { pt3dadd( -15.5641, 319.349, -29.6465, 0.96 ) }
    dend_29 { pt3dadd( -15.5343, 320.058, -29.5797, 0.37 ) }
    dend_29 { pt3dadd( -15.5026, 321.066, -29.5016, 0.37 ) }
    dend_29 { pt3dadd( -15.4899, 321.777, -29.4713, 0.74 ) }
    dend_29 { pt3dadd( -15.4896, 322.196, -29.4699, 0.74 ) }
    dend_29 { pt3dadd( -15.4987, 322.804, -29.4815, 0.74 ) }
    dend_29 { pt3dadd( -15.5184, 323.434, -29.5258, 0.37 ) }
    dend_29 { pt3dadd( -15.5452, 324.125, -29.6134, 0.29 ) }
    dend_29 { pt3dadd( -15.5691, 324.656, -29.7101, 0.29 ) }
    dend_29 { pt3dadd( -15.572, 324.722, -29.7249, 0.29 ) }
    dend_29 { pt3dadd( -15.621, 326.021, -30.0713, 0.29 ) }
    dend_29 { pt3dadd( -15.6327, 326.693, -30.2759, 0.74 ) }
    dend_29 { pt3dadd( -15.6284, 327.717, -30.5996, 1.84 ) }
    dend_29 { pt3dadd( -15.6213, 328.097, -30.7154, 2.28 ) }
    dend_29 { pt3dadd( -15.6204, 328.152, -30.7302, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -15.6121, 328.764, -30.8776, 2.06 ) }
    dend_29 { pt3dadd( -15.6049, 329.606, -31.0509, 1.25 ) }
    dend_29 { pt3dadd( -15.6123, 330.589, -31.1914, 0.15 ) }
    dend_29 { pt3dadd( -15.6204, 331.15, -31.2435, 0.15 ) }
    dend_29 { pt3dadd( -15.6416, 331.999, -31.2959, 0.74 ) }
    dend_29 { pt3dadd( -15.6538, 332.342, -31.3081, 1.03 ) }
    dend_29 { pt3dadd( -15.6743, 332.769, -31.3128, 1.03 ) }
    dend_29 { pt3dadd( -15.7039, 333.245, -31.3128, 0.74 ) }
    dend_29 { pt3dadd( -15.7424, 333.915, -31.3445, 0.22 ) }
    dend_29 { pt3dadd( -15.7815, 334.745, -31.4104, 0.22 ) }
    dend_29 { pt3dadd( -15.8314, 336.145, -31.547, 0.88 ) }
    dend_29 { pt3dadd( -15.8478, 336.704, -31.604, 1.47 ) }
    dend_29 { pt3dadd( -15.8593, 337.185, -31.6577, 1.69 ) }
    dend_29 { pt3dadd( -15.8767, 338.228, -31.7793, 1.03 ) }
    dend_29 { pt3dadd( -15.8927, 339.289, -31.9054, 0.37 ) }
    dend_29 { pt3dadd( -15.8923, 340.705, -32.0702, 0.37 ) }
    dend_29 { pt3dadd( -15.8711, 341.961, -32.2214, 0.29 ) }
    dend_29 { pt3dadd( -15.8428, 343.249, -32.3647, 1.4 ) }
    dend_29 { pt3dadd( -15.8324, 343.753, -32.4131, 1.84 ) }
    dend_29 { pt3dadd( -15.8231, 344.313, -32.4533, 1.69 ) }
    dend_29 { pt3dadd( -15.8103, 345.081, -32.5148, 0.81 ) }
    dend_29 { pt3dadd( -15.7894, 346.369, -32.6211, 0.29 ) }
    dend_29 { pt3dadd( -15.7679, 347.544, -32.7146, 0.29 ) }
    dend_29 { pt3dadd( -15.7551, 348.163, -32.7547, 0.96 ) }
    dend_29 { pt3dadd( -15.7443, 348.733, -32.7864, 1.33 ) }
    dend_29 { pt3dadd( -15.7314, 349.267, -32.8083, 1.33 ) }
    dend_29 { pt3dadd( -15.7174, 349.74, -32.826, 1.03 ) }
    dend_29 { pt3dadd( -15.7145, 349.8, -32.8276, 1.03 ) }
    dend_29 { pt3dadd( -15.6372, 350.883, -32.8665, 0.29 ) }
    dend_29 { pt3dadd( -15.5561, 351.868, -32.9067, 0.29 ) }
    dend_29 { pt3dadd( -15.4584, 353.102, -32.9829, 0.88 ) }
    dend_29 { pt3dadd( -15.3994, 354.002, -33.0492, 1.69 ) }
    dend_29 { pt3dadd( -15.3723, 354.515, -33.0896, 2.36 ) }
    dend_29 { pt3dadd( -15.3642, 354.799, -33.1123, 2.58 ) }
    dend_29 { pt3dadd( -15.3587, 355.523, -33.1728, 2.06 ) }
    dend_29 { pt3dadd( -15.3623, 356.978, -33.2848, 0.37 ) }
    dend_29 { pt3dadd( -15.3766, 357.943, -33.3507, 0.37 ) }
    dend_29 { pt3dadd( -15.4037, 358.998, -33.4063, 0.37 ) }
    dend_29 { pt3dadd( -15.4257, 359.829, -33.4438, 0.37 ) }
    dend_29 { pt3dadd( -15.427, 359.898, -33.4462, 0.37 ) }
    dend_29 { pt3dadd( -15.4281, 361.505, -33.4793, 0.37 ) }
    dend_29 { pt3dadd( -15.426, 361.575, -33.4814, 0.37 ) }
    dend_29 { pt3dadd( -15.3689, 362.479, -33.5303, 0.37 ) }
    dend_29 { pt3dadd( -15.3091, 363.192, -33.5825, 0.96 ) }
    dend_29 { pt3dadd( -15.2328, 364.003, -33.6517, 1.25 ) }
    dend_29 { pt3dadd( -15.152, 364.828, -33.7282, 0.88 ) }
    dend_29 { pt3dadd( -15.0108, 366.164, -33.8651, 0.29 ) }
    dend_29 { pt3dadd( -14.999, 366.266, -33.8754, 0.29 ) }
    dend_29 { pt3dadd( -14.891, 367.1, -33.9804, 0.88 ) }
    dend_29 { pt3dadd( -14.7917, 367.867, -34.0819, 1.62 ) }
    dend_29 { pt3dadd( -14.7333, 368.326, -34.1404, 1.99 ) }
    dend_29 { pt3dadd( -14.6715, 368.792, -34.1923, 1.99 ) }
    dend_29 { pt3dadd( -14.6059, 369.218, -34.2276, 1.69 ) }
    dend_29 { pt3dadd( -14.4461, 370.138, -34.3237, 0.59 ) }
    dend_29 { pt3dadd( -14.2225, 371.289, -34.4559, 0.29 ) }
    dend_29 { pt3dadd( -14.0894, 371.988, -34.5506, 0.81 ) }
    dend_29 { pt3dadd( -13.9775, 372.599, -34.6376, 0.81 ) }
    dend_29 { pt3dadd( -13.8293, 373.454, -34.7606, 0.29 ) }
    dend_29 { pt3dadd( -13.684, 374.369, -34.8868, 0.29 ) }
    dend_29 { pt3dadd( -13.4829, 375.755, -35.1089, 0.29 ) }
    dend_29 { pt3dadd( -13.3093, 377.126, -35.3736, 1.25 ) }
    dend_29 { pt3dadd( -13.2503, 377.646, -35.48, 1.69 ) }
    dend_29 { pt3dadd( -13.2069, 378.061, -35.5662, 1.92 ) }
    dend_29 { pt3dadd( -13.1356, 378.799, -35.716, 1.47 ) }
    dend_29 { pt3dadd( -12.9971, 380.092, -35.9564, 0.29 ) }
    dend_29 { pt3dadd( -12.8957, 380.863, -36.1004, 0.29 ) }
    dend_29 { pt3dadd( -12.7282, 381.89, -36.2763, 0.88 ) }
    dend_29 { pt3dadd( -12.6364, 382.383, -36.3553, 1.18 ) }
    dend_29 { pt3dadd( -12.5323, 382.874, -36.4261, 0.96 ) }
    dend_29 { pt3dadd( -12.3711, 383.561, -36.5044, 0.44 ) }
    dend_29 { pt3dadd( -12.1629, 384.45, -36.555, 0.29 ) }
    dend_29 { pt3dadd( -12.1417, 384.546, -36.564, 0.29 ) }
    dend_29 { pt3dadd( -12.0044, 385.35, -36.6637, 0.29 ) }
    dend_29 { pt3dadd( -11.9962, 385.418, -36.6728, 0.29 ) }
    dend_29 { pt3dadd( -11.9505, 385.908, -36.7449, 0.81 ) }
    dend_29 { pt3dadd( -11.9209, 386.32, -36.8057, 0.81 ) }
    dend_29 { pt3dadd( -11.8594, 387.061, -36.9108, 0.66 ) }
    dend_29 { pt3dadd( -11.7545, 388.102, -37.0545, 0.29 ) }
    dend_29 { pt3dadd( -11.6444, 388.955, -37.1624, 0.29 ) }
    dend_29 { pt3dadd( -11.5221, 389.793, -37.2702, 1.11 ) }
    dend_29 { pt3dadd( -11.4112, 390.535, -37.3606, 1.69 ) }
    dend_29 { pt3dadd( -11.3422, 391.056, -37.4218, 1.92 ) }
    dend_29 { pt3dadd( -11.2908, 391.514, -37.4696, 1.92 ) }
    dend_29 { pt3dadd( -11.193, 392.67, -37.5962, 0.74 ) }
    dend_29 { pt3dadd( -11.1441, 393.584, -37.6948, 0.37 ) }
    dend_29 { pt3dadd( -11.1203, 394.616, -37.798, 0.37 ) }
    dend_29 { pt3dadd( -11.1212, 395.825, -37.9233, 0.29 ) }
    dend_29 { pt3dadd( -11.1341, 396.533, -38.0014, 0.29 ) }
    dend_29 { pt3dadd( -11.1461, 397.159, -38.0762, 0.88 ) }
    dend_29 { pt3dadd( -11.1512, 397.565, -38.1254, 0.88 ) }
    dend_29 { pt3dadd( -11.1412, 398.079, -38.1795, 0.52 ) }
    dend_29 { pt3dadd( -11.1083, 398.674, -38.2431, 0.29 ) }
    dend_29 { pt3dadd( -11.0603, 399.302, -38.3061, 0.29 ) }
    dend_29 { pt3dadd( -11.0084, 400.126, -38.3863, 0.29 ) }
    dend_29 { pt3dadd( -10.9748, 400.904, -38.4547, 1.55 ) }
    dend_29 { pt3dadd( -10.9367, 401.823, -38.522, 2.58 ) }
    dend_29 { pt3dadd( -10.918, 402.262, -38.5447, 2.65 ) }
    dend_29 { pt3dadd( -10.8772, 402.958, -38.5647, 2.21 ) }
    dend_29 { pt3dadd( -10.8053, 403.864, -38.5878, 1.11 ) }
    dend_29 { pt3dadd( -10.7251, 404.692, -38.6118, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -10.614, 405.696, -38.648, 0.52 ) }
    dend_29 { pt3dadd( -10.4759, 406.717, -38.6907, 0.74 ) }
    dend_29 { pt3dadd( -10.3235, 407.682, -38.7348, 0.88 ) }
    dend_29 { pt3dadd( -10.1414, 408.614, -38.7811, 1.33 ) }
    dend_29 { pt3dadd( -10.1277, 408.669, -38.785, 1.33 ) }
    dend_29 { pt3dadd( -9.97201, 409.201, -38.832, 1.62 ) }
    dend_29 { pt3dadd( -9.85088, 409.572, -38.8691, 1.62 ) }
    dend_29 { pt3dadd( -9.82406, 409.644, -38.8762, 1.62 ) }
    dend_29 { pt3dadd( -9.75528, 409.822, -38.8906, 1.62 ) }
    dend_29 { pt3dadd( -9.33635, 410.875, -38.9535, 0.52 ) }
    dend_29 { pt3dadd( -9.02211, 411.684, -38.9982, 0.29 ) }
    dend_29 { pt3dadd( -8.73895, 412.412, -39.0392, 0.29 ) }
    dend_29 { pt3dadd( -8.47484, 413.152, -39.0421, 0.96 ) }
    dend_29 { pt3dadd( -8.32162, 413.645, -39.0125, 1.4 ) }
    dend_29 { pt3dadd( -8.30617, 413.71, -39.0049, 1.4 ) }
    dend_29 { pt3dadd( -8.24118, 414.128, -38.9348, 1.4 ) }
    dend_29 { pt3dadd( -8.23337, 414.208, -38.9181, 1.4 ) }
    dend_29 { pt3dadd( -8.17496, 415.233, -38.686, 1.03 ) }
    dend_29 { pt3dadd( -8.14236, 416.169, -38.4727, 0.44 ) }
    dend_29 { pt3dadd( -8.10285, 417.341, -38.2187, 0.29 ) }
    dend_29 { pt3dadd( -8.07841, 418.166, -38.0253, 0.29 ) }
    dend_29 { pt3dadd( -8.04924, 419.187, -37.7891, 1.33 ) }
    dend_29 { pt3dadd( -8.03583, 419.726, -37.6694, 1.84 ) }
    dend_29 { pt3dadd( -8.02505, 420.278, -37.5597, 1.84 ) }
    dend_29 { pt3dadd( -8.01622, 420.899, -37.4385, 1.25 ) }
    dend_29 { pt3dadd( -8.01259, 422.068, -37.2223, 0.37 ) }
    dend_29 { pt3dadd( -8.03204, 423.36, -37.0264, 0.29 ) }
    dend_29 { pt3dadd( -8.0346, 423.426, -37.0181, 0.29 ) }
    dend_29 { pt3dadd( -8.07761, 424.19, -36.9291, 0.44 ) }
    dend_29 { pt3dadd( -8.14739, 425.168, -36.8288, 0.52 ) }
    dend_29 { pt3dadd( -8.23469, 426.128, -36.7494, 0.44 ) }
    dend_29 { pt3dadd( -8.35671, 427.378, -36.6995, 0.44 ) }
    dend_29 { pt3dadd( -8.49578, 428.731, -36.6587, 1.11 ) }
    dend_29 { pt3dadd( -8.57261, 429.502, -36.6422, 1.69 ) }
    dend_29 { pt3dadd( -8.62076, 430.005, -36.6365, 1.84 ) }
    dend_29 { pt3dadd( -8.66562, 430.545, -36.6368, 1.84 ) }
    dend_29 { pt3dadd( -8.74178, 431.592, -36.6509, 0.66 ) }
    dend_29 { pt3dadd( -8.81238, 432.704, -36.6838, 0.37 ) }
    dend_29 { pt3dadd( -8.81983, 432.84, -36.6901, 0.37 ) }
    dend_29 { pt3dadd( -8.88593, 434.172, -36.7466, 0.37 ) }
    dend_29 { pt3dadd( -8.91847, 435.235, -36.783, 0.96 ) }
    dend_29 { pt3dadd( -8.91814, 435.373, -36.7873, 0.96 ) }
    dend_29 { pt3dadd( -8.89051, 436.079, -36.8043, 1.55 ) }
    dend_29 { pt3dadd( -8.83005, 436.713, -36.8272, 1.84 ) }
    dend_29 { pt3dadd( -8.82119, 436.779, -36.8302, 1.84 ) }
    dend_29 { pt3dadd( -8.72797, 437.36, -36.8607, 1.69 ) }
    dend_29 { pt3dadd( -8.58908, 438.194, -36.9074, 0.74 ) }
    dend_29 { pt3dadd( -8.44976, 439.084, -36.926, 0.29 ) }
    dend_29 { pt3dadd( -8.31267, 440.078, -36.9174, 0.29 ) }
    dend_29 { pt3dadd( -8.30567, 440.146, -36.9151, 0.29 ) }
    dend_29 { pt3dadd( -8.23816, 441.12, -36.8611, 0.29 ) }
    dend_29 { pt3dadd( -8.23642, 441.187, -36.8556, 0.29 ) }
    dend_29 { pt3dadd( -8.24015, 442.168, -36.7409, 0.81 ) }
    dend_29 { pt3dadd( -8.25862, 442.782, -36.6602, 1.47 ) }
    dend_29 { pt3dadd( -8.28178, 443.272, -36.5993, 1.77 ) }
    dend_29 { pt3dadd( -8.28784, 443.38, -36.5899, 1.77 ) }
    dend_29 { pt3dadd( -8.31428, 443.931, -36.5613, 1.55 ) }
    dend_29 { pt3dadd( -8.3209, 444.067, -36.5583, 1.55 ) }
    dend_29 { pt3dadd( -8.35351, 444.712, -36.5663, 0.96 ) }
    dend_29 { pt3dadd( -8.37101, 445.425, -36.5752, 0.59 ) }
    dend_29 { pt3dadd( -8.38051, 446.743, -36.5659, 0.29 ) }
    dend_29 { pt3dadd( -8.37697, 447.615, -36.5483, 0.29 ) }
    dend_29 { pt3dadd( -8.376, 447.684, -36.5462, 0.29 ) }
    dend_29 { pt3dadd( -8.35044, 448.738, -36.5043, 0.59 ) }
    dend_29 { pt3dadd( -8.32433, 449.434, -36.4692, 0.81 ) }
    dend_29 { pt3dadd( -8.26911, 450.327, -36.4184, 1.25 ) }
    dend_29 { pt3dadd( -8.23121, 450.764, -36.3918, 1.62 ) }
    dend_29 { pt3dadd( -8.2045, 451.11, -36.3745, 1.69 ) }
    dend_29 { pt3dadd( -8.19228, 451.259, -36.3694, 1.69 ) }
    dend_29 { pt3dadd( -8.15326, 451.764, -36.36, 1.25 ) }
    dend_29 { pt3dadd( -8.10155, 452.581, -36.3439, 0.66 ) }
    dend_29 { pt3dadd( -8.05063, 453.425, -36.3304, 0.66 ) }
    dend_29 { pt3dadd( -7.99254, 454.411, -36.3077, 0.66 ) }
    dend_29 { pt3dadd( -7.9263, 455.604, -36.2743, 0.37 ) }
    dend_29 { pt3dadd( -7.89041, 456.449, -36.2476, 0.37 ) }
    dend_29 { pt3dadd( -7.8478, 457.464, -36.2122, 1.62 ) }
    dend_29 { pt3dadd( -7.81949, 458.025, -36.1915, 2.06 ) }
    dend_29 { pt3dadd( -7.79502, 458.405, -36.1779, 2.06 ) }
    dend_29 { pt3dadd( -7.73627, 459.248, -36.1503, 1.47 ) }
    dend_29 { pt3dadd( -7.67414, 460.079, -36.1278, 0.81 ) }
    dend_29 { pt3dadd( -7.58631, 461.013, -36.1154, 0.37 ) }
    dend_29 { pt3dadd( -7.46054, 462.13, -36.122, 0.88 ) }
    dend_29 { pt3dadd( -7.45151, 462.197, -36.1226, 0.88 ) }
    dend_29 { pt3dadd( -7.37917, 462.675, -36.1281, 0.88 ) }
    dend_29 { pt3dadd( -7.36908, 462.734, -36.129, 0.88 ) }
    dend_29 { pt3dadd( -7.27686, 463.319, -36.1441, 1.11 ) }
    dend_29 { pt3dadd( -7.25343, 463.486, -36.1509, 1.11 ) }
    dend_29 { pt3dadd( -7.21352, 463.823, -36.1451, 1.11 ) }
    dend_29 { pt3dadd( -7.20556, 463.892, -36.1418, 1.11 ) }
    dend_29 { pt3dadd( -7.14093, 464.448, -36.1011, 0.81 ) }
    dend_29 { pt3dadd( -7.0476, 465.289, -36.0252, 0.66 ) }
    dend_29 { pt3dadd( -6.96062, 466.073, -35.9444, 0.44 ) }
    dend_29 { pt3dadd( -6.83638, 467.15, -35.8283, 0.29 ) }
    dend_29 { pt3dadd( -6.8233, 467.255, -35.8168, 0.29 ) }
    dend_29 { pt3dadd( -6.73999, 467.811, -35.755, 0.29 ) }
    dend_29 { pt3dadd( -6.72245, 467.911, -35.7444, 0.29 ) }
    dend_29 { pt3dadd( -6.59755, 468.718, -35.6852, 0.81 ) }
    dend_29 { pt3dadd( -6.58676, 468.805, -35.682, 0.81 ) }
    dend_29 { pt3dadd( -6.52879, 469.336, -35.6599, 0.81 ) }
    dend_29 { pt3dadd( -6.50939, 469.541, -35.6468, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( -6.40808, 470.609, -35.5644, 0.59 ) }
    dend_29 { pt3dadd( -6.29428, 471.922, -35.453, 0.88 ) }
    dend_29 { pt3dadd( -6.2846, 472.058, -35.4414, 0.88 ) }
    dend_29 { pt3dadd( -6.21632, 473.237, -35.2945, 1.62 ) }
    dend_29 { pt3dadd( -6.19466, 473.746, -35.2181, 1.77 ) }
    dend_29 { pt3dadd( -6.1649, 474.527, -35.0893, 1.4 ) }
    dend_29 { pt3dadd( -6.13839, 475.295, -34.9517, 0.88 ) }
    dend_29 { pt3dadd( -6.10204, 476.614, -34.7118, 0.52 ) }
    dend_29 { pt3dadd( -6.09143, 477.744, -34.5264, 0.74 ) }
    dend_29 { pt3dadd( -6.109, 478.444, -34.4317, 1.33 ) }
    dend_29 { pt3dadd( -6.15615, 479.18, -34.3324, 1.84 ) }
    dend_29 { pt3dadd( -6.18948, 479.582, -34.2823, 1.99 ) }
    dend_29 { pt3dadd( -6.236, 480.148, -34.2224, 1.99 ) }
    dend_29 { pt3dadd( -6.29114, 480.891, -34.1627, 1.18 ) }
    dend_29 { pt3dadd( -6.35723, 481.879, -34.1142, 0.52 ) }
    dend_29 { pt3dadd( -6.43699, 483.356, -34.0391, 0.44 ) }
    dend_29 { pt3dadd( -6.48785, 484.464, -33.9836, 1.03 ) }
    dend_29 { pt3dadd( -6.50943, 485.32, -33.9442, 1.25 ) }
    dend_29 { pt3dadd( -6.4971, 485.91, -33.9219, 1.55 ) }
    dend_29 { pt3dadd( -6.49302, 485.979, -33.9198, 1.55 ) }
    dend_29 { pt3dadd( -6.43595, 486.638, -33.9092, 1.55 ) }
    dend_29 { pt3dadd( -6.36105, 487.476, -33.9092, 1.25 ) }
    dend_29 { pt3dadd( -6.29698, 488.396, -33.9092, 0.74 ) }
    dend_29 { pt3dadd( -6.19435, 490.108, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.191, 490.175, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.12453, 491.722, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.09166, 492.986, -33.9092, 0.29 ) }
    dend_29 { pt3dadd( -6.08701, 494.177, -33.9092, 1.47 ) }
    dend_29 { pt3dadd( -6.10165, 494.913, -33.9092, 2.06 ) }
    dend_29 { pt3dadd( -6.12656, 495.398, -33.9092, 2.36 ) }
    dend_29 { pt3dadd( -6.17538, 496.252, -33.9092, 2.06 ) }
    dend_29 { pt3dadd( -6.26482, 497.701, -33.9092, 0.81 ) }
    dend_29 { pt3dadd( -6.36167, 499.03, -33.8794, 0.81 ) }
    dend_29 { pt3dadd( -6.43007, 499.883, -33.8436, 0.52 ) }
    dend_29 { pt3dadd( -6.51535, 500.915, -33.7822, 0.81 ) }
    dend_29 { pt3dadd( -6.59164, 501.907, -33.7063, 1.03 ) }
    dend_29 { pt3dadd( -6.59591, 501.974, -33.6997, 1.03 ) }
    dend_29 { pt3dadd( -6.6223, 502.875, -33.5929, 1.03 ) }
    dend_29 { pt3dadd( -6.62024, 503.041, -33.5666, 1.03 ) }
    dend_29 { pt3dadd( -6.58182, 503.965, -33.4101, 0.88 ) }
    dend_29 { pt3dadd( -6.57349, 504.071, -33.3923, 0.88 ) }
    dend_29 { pt3dadd( -6.4789, 505.047, -33.243, 0.74 ) }
    dend_29 { pt3dadd( -6.34814, 506.134, -33.1045, 0.37 ) }
    dend_29 { pt3dadd( -6.15413, 507.526, -32.9697, 1.18 ) }
    dend_29 { pt3dadd( -6.02901, 508.461, -32.8886, 1.92 ) }
    dend_29 { pt3dadd( -5.9605, 509.02, -32.8467, 1.92 ) }
    dend_29 { pt3dadd( -5.88799, 509.667, -32.806, 1.62 ) }
    dend_29 { pt3dadd( -5.78832, 510.687, -32.759, 0.96 ) }
    dend_29 { pt3dadd( -5.70392, 511.681, -32.7318, 0.74 ) }
    dend_29 { pt3dadd( -5.61904, 512.875, -32.7388, 0.74 ) }
    dend_29 { pt3dadd( -5.56911, 513.93, -32.7503, 0.74 ) }
    dend_29 { pt3dadd( -5.56456, 514.066, -32.7523, 0.74 ) }
    dend_29 { pt3dadd( -5.54459, 515.103, -32.7706, 0.74 ) }
    dend_29 { pt3dadd( -5.54303, 515.264, -32.7753, 0.74 ) }
    dend_29 { pt3dadd( -5.52689, 516.412, -32.8189, 0.74 ) }
    dend_29 { pt3dadd( -5.50187, 517.679, -32.8752, 0.96 ) }
    dend_29 { pt3dadd( -5.49422, 517.965, -32.889, 0.96 ) }
    dend_29 { pt3dadd( -5.45934, 519.154, -32.9431, 0.96 ) }
    dend_29 { pt3dadd( -5.44111, 519.89, -32.9726, 1.47 ) }
    dend_29 { pt3dadd( -5.43772, 520.103, -32.9794, 1.47 ) }
    dend_29 { pt3dadd( -5.42936, 521.11, -33.0006, 1.69 ) }
    dend_29 { pt3dadd( -5.42944, 521.205, -33.002, 1.69 ) }
    dend_29 { pt3dadd( -5.43034, 521.844, -33.0224, 1.69 ) }
    dend_29 { pt3dadd( -5.40543, 522.965, -33.0671, 1.11 ) }
    dend_29 { pt3dadd( -5.38497, 523.469, -33.0974, 1.03 ) }
    dend_29 { pt3dadd( -5.36087, 523.949, -33.1333, 1.03 ) }
    dend_29 { pt3dadd( -5.29994, 525.058, -33.227, 0.59 ) }
    dend_29 { pt3dadd( -5.20628, 526.634, -33.3667, 0.44 ) }
    dend_29 { pt3dadd( -5.09486, 528.323, -33.5271, 0.44 ) }
    dend_29 { pt3dadd( -5.01011, 529.352, -33.6252, 1.11 ) }
    dend_29 { pt3dadd( -4.90993, 530.313, -33.7252, 1.69 ) }
    dend_29 { pt3dadd( -4.81436, 531.007, -33.7968, 1.99 ) }
    dend_29 { pt3dadd( -4.69607, 531.73, -33.8694, 1.62 ) }
    dend_29 { pt3dadd( -4.68364, 531.798, -33.8753, 1.62 ) }
    dend_29 { pt3dadd( -4.47793, 532.866, -33.9575, 0.88 ) }
    dend_29 { pt3dadd( -4.20184, 534.292, -34.0657, 0.74 ) }
    dend_29 { pt3dadd( -3.85089, 536.076, -34.2161, 0.74 ) }
    dend_29 { pt3dadd( -3.83796, 536.142, -34.2218, 0.74 ) }
    dend_29 { pt3dadd( -3.62267, 537.25, -34.323, 0.74 ) }
    dend_29 { pt3dadd( -3.35292, 538.652, -34.4059, 0.88 ) }
    dend_29 { pt3dadd( -3.08879, 540.123, -34.4448, 0.66 ) }
    dend_29 { pt3dadd( -3.07587, 540.201, -34.444, 0.66 ) }
    dend_29 { pt3dadd( -2.87439, 541.49, -34.4051, 0.66 ) }
    dend_29 { pt3dadd( -2.71888, 542.506, -34.357, 0.66 ) }
    dend_29 { pt3dadd( -2.53551, 543.906, -34.2579, 1.25 ) }
    dend_29 { pt3dadd( -2.47644, 544.533, -34.1975, 1.99 ) }
    dend_29 { pt3dadd( -2.45766, 544.948, -34.1494, 1.99 ) }
    dend_29 { pt3dadd( -2.4575, 545.658, -34.077, 1.55 ) }
    dend_29 { pt3dadd( -2.4661, 545.801, -34.0644, 1.55 ) }
    dend_29 { pt3dadd( -2.56026, 546.697, -34.0104, 1.33 ) }
    dend_29 { pt3dadd( -2.67145, 547.669, -34.0181, 1.18 ) }
    dend_29 { pt3dadd( -2.74135, 548.512, -34.0343, 0.96 ) }
    dend_29 { pt3dadd( -2.7663, 549.224, -34.0257, 0.96 ) }
    dend_29 { pt3dadd( -2.76282, 549.369, -34.0206, 0.96 ) }
    dend_29 { pt3dadd( -2.70654, 550.196, -33.9791, 0.66 ) }
    dend_29 { pt3dadd( -2.58589, 551.176, -33.9165, 0.52 ) }
    dend_29 { pt3dadd( -2.44655, 552.056, -33.8511, 0.52 ) }
    dend_29 { pt3dadd( -2.21528, 553.332, -33.7452, 0.81 ) }
    dend_29 { pt3dadd( -1.99627, 554.396, -33.6517, 1.33 ) }
    dend_29 { pt3dadd( -1.96439, 554.538, -33.6377, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( -1.76743, 555.343, -33.5728, 1.77 ) }
    dend_29 { pt3dadd( -1.64185, 555.843, -33.5428, 2.28 ) }
    dend_29 { pt3dadd( -1.62609, 555.908, -33.545, 2.28 ) }
    dend_29 { pt3dadd( -1.50407, 556.548, -33.642, 2.28 ) }
    dend_29 { pt3dadd( -1.43698, 556.964, -33.7201, 2.28 ) }
    dend_29 { pt3dadd( -1.31472, 557.833, -33.8928, 1.92 ) }
    dend_29 { pt3dadd( -1.30652, 557.898, -33.9066, 1.92 ) }
    dend_29 { pt3dadd( -1.14756, 559.296, -34.2017, 0.81 ) }
    dend_29 { pt3dadd( -1.00577, 560.705, -34.4019, 0.81 ) }
    dend_29 { pt3dadd( -0.99306, 560.851, -34.4153, 0.81 ) }
    dend_29 { pt3dadd( -0.928942, 561.707, -34.446, 0.66 ) }
    dend_29 { pt3dadd( -0.923921, 561.785, -34.4431, 0.66 ) }
    dend_29 { pt3dadd( -0.87553, 562.799, -34.3603, 0.66 ) }
    dend_29 { pt3dadd( -0.836058, 564.134, -34.1541, 0.66 ) }
    dend_29 { pt3dadd( -0.835419, 564.266, -34.1287, 0.66 ) }
    dend_29 { pt3dadd( -0.860501, 565.03, -33.9493, 1.18 ) }
    dend_29 { pt3dadd( -0.869705, 565.153, -33.9184, 1.18 ) }
    dend_29 { pt3dadd( -0.93154, 565.841, -33.764, 1.4 ) }
    dend_29 { pt3dadd( -0.95285, 566.042, -33.7265, 1.4 ) }
    dend_29 { pt3dadd( -1.00802, 566.541, -33.6556, 1.4 ) }
    dend_29 { pt3dadd( -1.10708, 567.525, -33.5202, 1.11 ) }
    dend_29 { pt3dadd( -1.23819, 569.099, -33.3224, 0.88 ) }
    dend_29 { pt3dadd( -1.32715, 570.298, -33.197, 1.03 ) }
    dend_29 { pt3dadd( -1.40097, 571.481, -33.1013, 1.33 ) }
    dend_29 { pt3dadd( -1.40857, 571.615, -33.0939, 1.33 ) }
    dend_29 { pt3dadd( -1.43431, 572.055, -33.0736, 1.33 ) }
    dend_29 { pt3dadd( -1.51683, 573.345, -33.0414, 0.88 ) }
    dend_29 { pt3dadd( -1.56343, 574.04, -33.0144, 0.88 ) }
    dend_29 { pt3dadd( -1.63343, 575.167, -32.9541, 0.74 ) }
    dend_29 { pt3dadd( -1.66877, 575.996, -32.9004, 0.74 ) }
    dend_29 { pt3dadd( -1.69166, 576.903, -32.8366, 1.33 ) }
    dend_29 { pt3dadd( -1.6924, 576.979, -32.8309, 1.33 ) }
    dend_29 { pt3dadd( -1.68557, 577.77, -32.8026, 1.92 ) }
    dend_29 { pt3dadd( -1.67659, 578.387, -32.8092, 2.21 ) }
    dend_29 { pt3dadd( -1.68248, 578.851, -32.8507, 2.21 ) }
    dend_29 { pt3dadd( -1.72075, 579.569, -32.9594, 1.77 ) }
    dend_29 { pt3dadd( -1.78976, 580.464, -33.1311, 1.18 ) }
    dend_29 { pt3dadd( -1.88305, 581.407, -33.32, 0.81 ) }
    dend_29 { pt3dadd( -2.05145, 582.829, -33.621, 0.74 ) }
    dend_29 { pt3dadd( -2.24021, 584.385, -33.9417, 0.66 ) }
    dend_29 { pt3dadd( -2.3846, 585.714, -34.1917, 0.66 ) }
    dend_29 { pt3dadd( -2.39094, 585.782, -34.2033, 0.66 ) }
    dend_29 { pt3dadd( -2.44317, 586.762, -34.3384, 0.66 ) }
    dend_29 { pt3dadd( -2.4412, 586.873, -34.3474, 0.66 ) }
    dend_29 { pt3dadd( -2.31528, 588.308, -34.4266, 0.66 ) }
    dend_29 { pt3dadd( -2.12357, 589.591, -34.4519, 0.66 ) }
    dend_29 { pt3dadd( -2.10543, 589.688, -34.4523, 0.66 ) }
    dend_29 { pt3dadd( -1.87127, 590.886, -34.4557, 0.66 ) }
    dend_29 { pt3dadd( -1.49389, 592.68, -34.4557, 0.66 ) }
    dend_29 { pt3dadd( -1.47172, 592.781, -34.4557, 0.66 ) }
    dend_29 { pt3dadd( -1.35167, 593.301, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -1.33423, 593.376, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -1.08254, 594.507, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -1.06221, 594.608, -34.4557, 1.25 ) }
    dend_29 { pt3dadd( -0.864105, 595.59, -34.4379, 1.25 ) }
    dend_29 { pt3dadd( -0.69771, 596.431, -34.4077, 0.96 ) }
    dend_29 { pt3dadd( -0.538353, 597.268, -34.3539, 0.96 ) }
    dend_29 { pt3dadd( -0.528013, 597.327, -34.3491, 0.96 ) }
    dend_29 { pt3dadd( -0.392568, 598.18, -34.2682, 1.11 ) }
    dend_29 { pt3dadd( -0.181013, 599.643, -34.1173, 0.52 ) }
    dend_29 { pt3dadd( -0.0494398, 600.607, -34.0141, 1.18 ) }
    dend_29 { pt3dadd( 0.101927, 601.635, -33.9093, 1.92 ) }
    dend_29 { pt3dadd( 0.208805, 602.323, -33.8576, 2.43 ) }
    dend_29 { pt3dadd( 0.311076, 602.943, -33.8262, 2.43 ) }
    dend_29 { pt3dadd( 0.439163, 603.691, -33.8059, 2.43 ) }
    dend_29 { pt3dadd( 0.657313, 604.945, -33.809, 1.25 ) }
    dend_29 { pt3dadd( 0.886368, 606.144, -33.8495, 0.59 ) }
    dend_29 { pt3dadd( 1.1333, 607.425, -33.9676, 0.74 ) }
    dend_29 { pt3dadd( 1.29084, 608.232, -34.0759, 1.03 ) }
    dend_29 { pt3dadd( 1.32483, 608.428, -34.1113, 1.03 ) }
    dend_29 { pt3dadd( 1.39799, 608.956, -34.2318, 1.03 ) }
    dend_29 { pt3dadd( 1.47002, 609.693, -34.4283, 0.59 ) }
    dend_29 { pt3dadd( 1.52486, 610.8, -34.7431, 0.59 ) }
    dend_29 { pt3dadd( 1.52734, 610.91, -34.7724, 0.59 ) }
    dend_29 { pt3dadd( 1.57886, 611.939, -35.0285, 0.59 ) }
    dend_29 { pt3dadd( 1.61208, 612.227, -35.0825, 1.03 ) }
    dend_29 { pt3dadd( 1.73339, 612.962, -35.1804, 0.66 ) }
    dend_29 { pt3dadd( 1.83231, 613.437, -35.2165, 0.66 ) }
    dend_29 { pt3dadd( 2.03689, 614.281, -35.2089, 0.66 ) }
    dend_29 { pt3dadd( 2.31815, 615.438, -35.1562, 0.59 ) }
    dend_29 { pt3dadd( 2.6456, 616.805, -35.0589, 1.03 ) }
    dend_29 { pt3dadd( 2.76402, 617.317, -35.0155, 1.84 ) }
    dend_29 { pt3dadd( 2.87005, 617.811, -34.9694, 1.84 ) }
    dend_29 { pt3dadd( 3.1176, 619.111, -34.8448, 1.18 ) }
    dend_29 { pt3dadd( 3.28491, 620.15, -34.7437, 0.66 ) }
    dend_29 { pt3dadd( 3.38847, 621.139, -34.6522, 0.66 ) }
    dend_29 { pt3dadd( 3.39808, 621.311, -34.6407, 0.66 ) }
    dend_29 { pt3dadd( 3.43749, 622.686, -34.5754, 0.66 ) }
    dend_29 { pt3dadd( 3.44202, 623.76, -34.5479, 1.18 ) }
    dend_29 { pt3dadd( 3.42695, 624.496, -34.5495, 1.18 ) }
    dend_29 { pt3dadd( 3.38802, 625.675, -34.5532, 0.66 ) }
    dend_29 { pt3dadd( 3.34271, 626.643, -34.5575, 0.66 ) }
    dend_29 { pt3dadd( 3.28322, 627.559, -34.5635, 1.25 ) }
    dend_29 { pt3dadd( 3.21514, 628.311, -34.5669, 1.99 ) }
    dend_29 { pt3dadd( 3.156, 628.87, -34.5669, 2.21 ) }
    dend_29 { pt3dadd( 3.01202, 630.089, -34.5669, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.776, -64.3659, -17.9223, 0.44 ) }
    dend_12 { pt3dadd( -11.3059, -64.7567, -17.8765, 0.44 ) }
    dend_12 { pt3dadd( -11.3532, -64.7926, -17.8717, 0.44 ) }
    dend_12 { pt3dadd( -12.0513, -65.3487, -17.7911, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -12.7229, -65.8709, -17.7151, 1.18 ) }
    dend_12 { pt3dadd( -13.1957, -66.2314, -17.664, 0.59 ) }
    dend_12 { pt3dadd( -13.2424, -66.2668, -17.6592, 0.59 ) }
    dend_12 { pt3dadd( -13.6926, -66.6299, -17.6162, 0.22 ) }
    dend_12 { pt3dadd( -14.1421, -66.9837, -17.5686, 0.22 ) }
    dend_12 { pt3dadd( -14.6012, -67.3295, -17.5164, 0.59 ) }
    dend_12 { pt3dadd( -14.9086, -67.5648, -17.4781, 0.59 ) }
    dend_12 { pt3dadd( -14.9778, -67.6246, -17.4654, 0.59 ) }
    dend_12 { pt3dadd( -15.4531, -68.0729, -17.3616, 0.22 ) }
    dend_12 { pt3dadd( -15.8217, -68.4574, -17.2717, 1.18 ) }
    dend_12 { pt3dadd( -16.1743, -68.9042, -17.1764, 1.25 ) }
    dend_12 { pt3dadd( -16.2078, -68.9543, -17.1664, 1.25 ) }
    dend_12 { pt3dadd( -16.7716, -69.9123, -16.9385, 0.22 ) }
    dend_12 { pt3dadd( -16.9297, -70.2091, -16.8651, 0.37 ) }
    dend_12 { pt3dadd( -17.0192, -70.4141, -16.8064, 0.37 ) }
    dend_12 { pt3dadd( -17.445, -71.5585, -16.4367, 0.22 ) }
    dend_12 { pt3dadd( -17.5751, -71.9529, -16.3009, 0.22 ) }
    dend_12 { pt3dadd( -17.8519, -72.839, -15.9834, 1.47 ) }
    dend_12 { pt3dadd( -18.0473, -73.5492, -15.7533, 2.21 ) }
    dend_12 { pt3dadd( -18.2304, -74.2706, -15.5316, 2.21 ) }
    dend_12 { pt3dadd( -18.2441, -74.3236, -15.5143, 2.21 ) }
    dend_12 { pt3dadd( -18.4541, -75.3374, -15.1861, 0.74 ) }
    dend_12 { pt3dadd( -18.4629, -75.3917, -15.17, 0.74 ) }
    dend_12 { pt3dadd( -18.6057, -76.4966, -14.8975, 0.22 ) }
    dend_12 { pt3dadd( -18.6333, -76.733, -14.8425, 0.59 ) }
    dend_12 { pt3dadd( -18.7818, -77.8808, -14.6041, 0.22 ) }
    dend_12 { pt3dadd( -18.8697, -78.6161, -14.4544, 0.22 ) }
    dend_12 { pt3dadd( -18.9354, -79.2727, -14.3136, 0.22 ) }
    dend_12 { pt3dadd( -18.9948, -79.8296, -14.1934, 0.52 ) }
    dend_12 { pt3dadd( -19.0238, -80.0831, -14.143, 0.52 ) }
    dend_12 { pt3dadd( -19.1423, -81.1401, -13.97, 0.22 ) }
    dend_12 { pt3dadd( -19.2061, -81.817, -13.8863, 0.22 ) }
    dend_12 { pt3dadd( -19.296, -82.7848, -13.7755, 1.55 ) }
    dend_12 { pt3dadd( -19.3228, -83.3395, -13.7094, 1.69 ) }
    dend_12 { pt3dadd( -19.3086, -84.86, -13.4856, 0.22 ) }
    dend_12 { pt3dadd( -19.2521, -85.6326, -13.3515, 0.22 ) }
    dend_12 { pt3dadd( -19.1705, -86.1579, -13.2475, 0.52 ) }
    dend_12 { pt3dadd( -19.0388, -86.6974, -13.1482, 0.52 ) }
    dend_12 { pt3dadd( -18.7705, -87.5229, -13.0205, 0.22 ) }
    dend_12 { pt3dadd( -18.5236, -88.1714, -12.933, 1.4 ) }
    dend_12 { pt3dadd( -18.2897, -88.7119, -12.8727, 1.69 ) }
    dend_12 { pt3dadd( -18.1043, -89.1467, -12.8298, 1.77 ) }
    dend_12 { pt3dadd( -17.5217, -90.583, -12.7005, 0.15 ) }
    dend_12 { pt3dadd( -17.1395, -91.5675, -12.6302, 0.22 ) }
    dend_12 { pt3dadd( -16.8987, -92.2252, -12.6045, 0.74 ) }
    dend_12 { pt3dadd( -16.7117, -92.7994, -12.5912, 0.74 ) }
    dend_12 { pt3dadd( -16.5048, -93.5209, -12.5678, 0.22 ) }
    dend_12 { pt3dadd( -16.456, -93.7248, -12.5548, 0.59 ) }
    dend_12 { pt3dadd( -16.3875, -94.0763, -12.5142, 0.59 ) }
    dend_12 { pt3dadd( -16.3742, -94.142, -12.508, 0.59 ) }
    dend_12 { pt3dadd( -16.1648, -95.1686, -12.4198, 0.22 ) }
    dend_12 { pt3dadd( -16.0485, -95.7882, -12.3924, 0.74 ) }
    dend_12 { pt3dadd( -15.9023, -96.4803, -12.3834, 0.96 ) }
    dend_12 { pt3dadd( -15.7944, -96.9558, -12.3807, 0.66 ) }
    dend_12 { pt3dadd( -15.4229, -98.4809, -12.3964, 0.29 ) }
    dend_12 { pt3dadd( -15.2015, -99.3242, -12.413, 0.22 ) }
    dend_12 { pt3dadd( -14.9442, -100.23, -12.4362, 0.22 ) }
    dend_12 { pt3dadd( -14.6306, -101.353, -12.474, 1.55 ) }
    dend_12 { pt3dadd( -14.5365, -101.689, -12.4895, 1.92 ) }
    dend_12 { pt3dadd( -14.3022, -102.531, -12.539, 0.96 ) }
    dend_12 { pt3dadd( -14.1728, -103.014, -12.5822, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.776, -64.3659, -17.9223, 2.43 ) }
    dend_9 { pt3dadd( -11.082, -65.8372, -18.7247, 2.43 ) }
    dend_9 { pt3dadd( -11.3652, -67.2106, -19.3676, 0.96 ) }
    dend_9 { pt3dadd( -11.5938, -68.2546, -19.7848, 0.52 ) }
    dend_9 { pt3dadd( -11.8069, -69.2159, -20.133, 0.52 ) }
    dend_9 { pt3dadd( -12.0697, -70.4197, -20.542, 0.52 ) }
    dend_9 { pt3dadd( -12.3186, -71.596, -20.9235, 0.52 ) }
    dend_9 { pt3dadd( -12.5337, -72.6712, -21.1824, 0.52 ) }
    dend_9 { pt3dadd( -12.7532, -73.7951, -21.3955, 0.52 ) }
    dend_9 { pt3dadd( -12.9595, -74.9157, -21.5841, 2.58 ) }
    dend_9 { pt3dadd( -13.1891, -76.2604, -21.8397, 3.68 ) }
    dend_9 { pt3dadd( -13.2494, -76.597, -21.9127, 3.68 ) }
    dend_9 { pt3dadd( -13.4161, -77.4079, -22.103, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 2.81883, -175.795, 16.6542, 0.59 ) }
    dend_6 { pt3dadd( 2.43872, -177.635, 16.352, 0.59 ) }
    dend_6 { pt3dadd( 2.22425, -178.517, 16.223, 0.37 ) }
    dend_6 { pt3dadd( 1.94566, -179.389, 16.1273, 0.37 ) }
    dend_6 { pt3dadd( 1.69208, -179.974, 16.0831, 0.74 ) }
    dend_6 { pt3dadd( 1.36162, -180.618, 16.0489, 0.74 ) }
    dend_6 { pt3dadd( 1.05767, -181.136, 16.0331, 0.96 ) }
    dend_6 { pt3dadd( 1.01708, -181.19, 16.0382, 0.96 ) }
    dend_6 { pt3dadd( 0.52012, -181.767, 16.1025, 1.25 ) }
    dend_6 { pt3dadd( -0.012179, -182.384, 16.233, 0.81 ) }
    dend_6 { pt3dadd( -0.0497908, -182.439, 16.2473, 0.81 ) }
    dend_6 { pt3dadd( -0.479356, -183.206, 16.4633, 0.59 ) }
    dend_6 { pt3dadd( -0.901355, -184.143, 16.7018, 0.59 ) }
    dend_6 { pt3dadd( -0.921483, -184.196, 16.7135, 0.59 ) }
    dend_6 { pt3dadd( -1.27428, -185.273, 16.923, 0.44 ) }
    dend_6 { pt3dadd( -1.64543, -186.46, 17.1368, 0.44 ) }
    dend_6 { pt3dadd( -1.66531, -186.523, 17.1482, 0.44 ) }
    dend_6 { pt3dadd( -2.02492, -187.612, 17.3457, 2.14 ) }
    dend_6 { pt3dadd( -2.25436, -188.219, 17.4455, 3.09 ) }
    dend_6 { pt3dadd( -2.46785, -188.776, 17.5135, 3.61 ) }
    dend_6 { pt3dadd( -2.72553, -189.419, 17.5135, 3.61 ) }
    dend_6 { pt3dadd( -6.11354, -198.324, 16.7003, 3.61 ) }
    dend_6 { pt3dadd( -10.5394, -206.606, 14.6019, 3.61 ) }
    dend_6 { pt3dadd( -15.6039, -214.19, 11.3433, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 2.81883, -175.795, 16.6542, 0.59 ) }
    dend_5 { pt3dadd( 3.7137, -176.868, 16.4344, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 4.57938, -177.854, 16.2902, 0.37 ) }
    dend_5 { pt3dadd( 5.30166, -178.516, 16.4543, 0.37 ) }
    dend_5 { pt3dadd( 6.26819, -179.238, 16.9775, 0.37 ) }
    dend_5 { pt3dadd( 6.33369, -179.28, 17.0262, 0.37 ) }
    dend_5 { pt3dadd( 7.24021, -179.845, 17.7749, 0.74 ) }
    dend_5 { pt3dadd( 7.28705, -179.873, 17.8363, 0.74 ) }
    dend_5 { pt3dadd( 8.59021, -180.675, 19.9191, 0.74 ) }
    dend_5 { pt3dadd( 8.6184, -180.695, 19.9678, 0.74 ) }
    dend_5 { pt3dadd( 9.01624, -181.018, 20.6362, 0.74 ) }
    dend_5 { pt3dadd( 9.34943, -181.359, 21.1457, 0.29 ) }
    dend_5 { pt3dadd( 9.84764, -181.996, 21.7611, 0.29 ) }
    dend_5 { pt3dadd( 10.2542, -182.557, 22.1452, 0.29 ) }
    dend_5 { pt3dadd( 10.6295, -183.123, 22.3389, 0.29 ) }
    dend_5 { pt3dadd( 10.9705, -183.628, 22.4959, 0.81 ) }
    dend_5 { pt3dadd( 11.0089, -183.682, 22.5096, 0.81 ) }
    dend_5 { pt3dadd( 11.3756, -184.117, 22.5827, 1.25 ) }
    dend_5 { pt3dadd( 11.7128, -184.415, 22.5864, 1.25 ) }
    dend_5 { pt3dadd( 12.2136, -184.767, 22.5786, 0.59 ) }
    dend_5 { pt3dadd( 19.1394, -190.818, 25.9649, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 3.01202, 630.089, -34.5669, 0.44 ) }
    dend_61 { pt3dadd( 1.15087, 632.058, -36.9789, 0.44 ) }
    dend_61 { pt3dadd( 0.440917, 632.909, -37.9223, 0.44 ) }
    dend_61 { pt3dadd( -1.64732E-5, 633.482, -38.5174, 0.74 ) }
    dend_61 { pt3dadd( -0.025243, 633.521, -38.5547, 0.74 ) }
    dend_61 { pt3dadd( -0.35477, 634.162, -39.108, 0.74 ) }
    dend_61 { pt3dadd( -0.373221, 634.205, -39.1419, 0.74 ) }
    dend_61 { pt3dadd( -0.489198, 634.984, -39.4822, 0.44 ) }
    dend_61 { pt3dadd( -0.487818, 635.044, -39.5152, 0.44 ) }
    dend_61 { pt3dadd( -0.435013, 635.761, -39.962, 0.88 ) }
    dend_61 { pt3dadd( -0.407627, 636.499, -40.4106, 0.96 ) }
    dend_61 { pt3dadd( -0.409606, 636.922, -40.6593, 1.25 ) }
    dend_61 { pt3dadd( -0.411315, 636.971, -40.6904, 1.25 ) }
    dend_61 { pt3dadd( -0.517227, 637.977, -41.3388, 0.66 ) }
    dend_61 { pt3dadd( -0.671258, 638.767, -41.8482, 0.37 ) }
    dend_61 { pt3dadd( -0.831151, 639.309, -42.1912, 0.74 ) }
    dend_61 { pt3dadd( -1.01093, 639.831, -42.5274, 0.74 ) }
    dend_61 { pt3dadd( -1.24009, 640.426, -42.9036, 0.74 ) }
    dend_61 { pt3dadd( -1.61414, 641.324, -43.4432, 0.29 ) }
    dend_61 { pt3dadd( -2.09243, 642.349, -44.0017, 0.29 ) }
    dend_61 { pt3dadd( -2.43205, 643.045, -44.3732, 0.29 ) }
    dend_61 { pt3dadd( -2.91751, 644.057, -44.9183, 1.47 ) }
    dend_61 { pt3dadd( -3.0957, 644.442, -45.1108, 1.69 ) }
    dend_61 { pt3dadd( -3.12356, 644.499, -45.1361, 1.69 ) }
    dend_61 { pt3dadd( -3.41959, 645.066, -45.4192, 1.47 ) }
    dend_61 { pt3dadd( -3.44989, 645.121, -45.4467, 1.47 ) }
    dend_61 { pt3dadd( -4.27334, 646.632, -46.333, 0.22 ) }
    dend_61 { pt3dadd( -4.55852, 647.175, -46.6731, 0.22 ) }
    dend_61 { pt3dadd( -4.99538, 648.084, -47.2663, 0.22 ) }
    dend_61 { pt3dadd( -5.4537, 649.24, -48.0127, 1.03 ) }
    dend_61 { pt3dadd( -5.61495, 649.704, -48.3352, 1.4 ) }
    dend_61 { pt3dadd( -6.07909, 651.152, -49.3826, 0.22 ) }
    dend_61 { pt3dadd( -6.20358, 651.557, -49.686, 0.59 ) }
    dend_61 { pt3dadd( -6.33581, 652.015, -50.0368, 0.74 ) }
    dend_61 { pt3dadd( -6.72457, 653.5, -51.1368, 0.29 ) }
    dend_61 { pt3dadd( -7.04681, 654.569, -51.863, 0.29 ) }
    dend_61 { pt3dadd( -7.06868, 654.624, -51.9012, 0.29 ) }
    dend_61 { pt3dadd( -7.37356, 655.208, -52.2955, 0.44 ) }
    dend_61 { pt3dadd( -7.4037, 655.264, -52.3414, 0.44 ) }
    dend_61 { pt3dadd( -7.64565, 655.713, -52.737, 0.44 ) }
    dend_61 { pt3dadd( -8.00312, 656.395, -53.3454, 0.22 ) }
    dend_61 { pt3dadd( -8.49106, 657.444, -54.2357, 1.92 ) }
    dend_61 { pt3dadd( -8.58204, 657.654, -54.4295, 2.5 ) }
    dend_61 { pt3dadd( -9.35757, 659.779, -56.4776, 0.15 ) }
    dend_61 { pt3dadd( -9.45606, 660.083, -56.7745, 0.15 ) }
    dend_61 { pt3dadd( -9.68033, 660.879, -57.5757, 1.4 ) }
    dend_61 { pt3dadd( -9.72836, 661.062, -57.7573, 1.69 ) }
    dend_61 { pt3dadd( -10.191, 662.8, -59.4598, 0.15 ) }
    dend_61 { pt3dadd( -10.3598, 663.387, -60.0063, 0.15 ) }
    dend_61 { pt3dadd( -10.4116, 663.544, -60.1287, 0.15 ) }
    dend_61 { pt3dadd( -10.4594, 663.683, -60.2223, 0.15 ) }
    dend_61 { pt3dadd( -10.6932, 664.364, -60.5806, 0.96 ) }
    dend_61 { pt3dadd( -10.8537, 664.835, -60.7878, 1.47 ) }
    dend_61 { pt3dadd( -10.9736, 665.173, -60.8954, 1.62 ) }
    dend_61 { pt3dadd( -11.256, 665.931, -61.1392, 0.88 ) }
    dend_61 { pt3dadd( -11.7848, 667.44, -61.6329, 0.22 ) }
    dend_61 { pt3dadd( -11.958, 668.013, -61.8461, 0.22 ) }
    dend_61 { pt3dadd( -12.1086, 668.606, -62.0981, 0.74 ) }
    dend_61 { pt3dadd( -12.1216, 668.669, -62.1252, 0.74 ) }
    dend_61 { pt3dadd( -12.2123, 669.189, -62.3254, 0.74 ) }
    dend_61 { pt3dadd( -12.2543, 669.46, -62.4111, 0.74 ) }
    dend_61 { pt3dadd( -12.4537, 670.878, -62.7691, 0.29 ) }
    dend_61 { pt3dadd( -12.4639, 670.945, -62.784, 0.29 ) }
    dend_61 { pt3dadd( -12.6736, 672.222, -63.0239, 0.29 ) }
    dend_61 { pt3dadd( -12.8971, 673.515, -63.2451, 0.29 ) }
    dend_61 { pt3dadd( -13.0807, 674.527, -63.3905, 0.29 ) }
    dend_61 { pt3dadd( -13.2252, 675.279, -63.4696, 1.47 ) }
    dend_61 { pt3dadd( -13.3111, 675.7, -63.5031, 2.06 ) }
    dend_61 { pt3dadd( -13.3248, 675.766, -63.509, 2.06 ) }
    dend_61 { pt3dadd( -13.4831, 676.512, -63.6021, 1.18 ) }
    dend_61 { pt3dadd( -13.9233, 678.468, -63.9356, 0.22 ) }
    dend_61 { pt3dadd( -14.2359, 679.876, -64.2095, 0.22 ) }
    dend_61 { pt3dadd( -14.4687, 680.992, -64.4881, 1.47 ) }
    dend_61 { pt3dadd( -14.5481, 681.395, -64.6059, 1.18 ) }
    dend_61 { pt3dadd( -14.8339, 683.021, -65.1485, 0.22 ) }
    dend_61 { pt3dadd( -15.0044, 684.105, -65.5583, 1.11 ) }
    dend_61 { pt3dadd( -15.0776, 684.679, -65.8012, 1.33 ) }
    dend_61 { pt3dadd( -15.2869, 686.784, -66.7474, 0.22 ) }
    dend_61 { pt3dadd( -15.2914, 686.846, -66.7747, 0.22 ) }
    dend_61 { pt3dadd( -15.3741, 688.322, -67.4126, 0.22 ) }
    dend_61 { pt3dadd( -15.3761, 688.385, -67.4377, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( -15.4044, 689.979, -68.0367, 0.22 ) }
    dend_61 { pt3dadd( -15.4068, 690.042, -68.0592, 0.22 ) }
    dend_61 { pt3dadd( -15.4604, 690.925, -68.2997, 1.55 ) }
    dend_61 { pt3dadd( -15.477, 691.066, -68.3321, 2.14 ) }
    dend_61 { pt3dadd( -15.568, 691.552, -68.4188, 2.36 ) }
    dend_61 { pt3dadd( -15.581, 691.607, -68.427, 2.36 ) }
    dend_61 { pt3dadd( -15.9178, 692.58, -68.5592, 1.11 ) }
    dend_61 { pt3dadd( -16.4503, 693.865, -68.7301, 0.22 ) }
    dend_61 { pt3dadd( -16.9555, 694.956, -68.8699, 0.22 ) }
    dend_61 { pt3dadd( -17.3281, 695.715, -68.9649, 1.4 ) }
    dend_61 { pt3dadd( -17.5333, 696.104, -69.0114, 1.4 ) }
    dend_61 { pt3dadd( -18.5581, 697.939, -69.2473, 0.22 ) }
    dend_61 { pt3dadd( -18.9603, 698.604, -69.3373, 0.88 ) }
    dend_61 { pt3dadd( -19.1901, 698.967, -69.392, 0.59 ) }
    dend_61 { pt3dadd( -19.2309, 699.034, -69.4024, 0.59 ) }
    dend_61 { pt3dadd( -19.3276, 699.202, -69.4259, 0.59 ) }
    dend_61 { pt3dadd( -19.9657, 700.469, -69.5578, 0.22 ) }
    dend_61 { pt3dadd( -20.3125, 701.26, -69.6076, 0.22 ) }
    dend_61 { pt3dadd( -20.6333, 702.074, -69.6509, 1.03 ) }
    dend_61 { pt3dadd( -20.7808, 702.468, -69.6684, 1.4 ) }
    dend_61 { pt3dadd( -20.9489, 702.97, -69.6597, 1.4 ) }
    dend_61 { pt3dadd( -21.3302, 704.307, -69.5713, 0.22 ) }
    dend_61 { pt3dadd( -21.3466, 704.374, -69.5638, 0.22 ) }
    dend_61 { pt3dadd( -21.6686, 705.87, -69.3746, 0.22 ) }
    dend_61 { pt3dadd( -21.693, 706.004, -69.358, 0.22 ) }
    dend_61 { pt3dadd( -21.9622, 707.711, -69.1545, 0.22 ) }
    dend_61 { pt3dadd( -22.0985, 708.684, -69.031, 1.33 ) }
    dend_61 { pt3dadd( -22.14, 709.01, -68.9863, 1.62 ) }
    dend_61 { pt3dadd( -22.2146, 709.631, -68.9012, 0.81 ) }
    dend_61 { pt3dadd( -22.3903, 711.284, -68.6743, 0.22 ) }
    dend_61 { pt3dadd( -22.4969, 712.347, -68.5641, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.01202, 630.089, -34.5669, 0.59 ) }
    dend_30 { pt3dadd( 2.93191, 631.138, -34.4907, 0.59 ) }
    dend_30 { pt3dadd( 2.83952, 632.249, -34.3325, 0.59 ) }
    dend_30 { pt3dadd( 2.76154, 633.294, -34.1524, 0.81 ) }
    dend_30 { pt3dadd( 2.70562, 634.115, -34.0083, 1.25 ) }
    dend_30 { pt3dadd( 2.70043, 634.192, -33.9948, 1.25 ) }
    dend_30 { pt3dadd( 2.66565, 634.671, -33.9152, 1.11 ) }
    dend_30 { pt3dadd( 2.58083, 635.665, -33.7407, 0.88 ) }
    dend_30 { pt3dadd( 2.52225, 636.382, -33.6299, 0.44 ) }
    dend_30 { pt3dadd( 2.44398, 637.428, -33.5007, 0.37 ) }
    dend_30 { pt3dadd( 2.42405, 637.707, -33.4717, 0.37 ) }
    dend_30 { pt3dadd( 2.36673, 638.469, -33.4118, 0.37 ) }
    dend_30 { pt3dadd( 2.27203, 639.616, -33.3616, 1.47 ) }
    dend_30 { pt3dadd( 2.19563, 640.306, -33.3557, 1.84 ) }
    dend_30 { pt3dadd( 2.16099, 640.58, -33.3533, 1.84 ) }
    dend_30 { pt3dadd( 2.09759, 641.131, -33.3482, 1.84 ) }
    dend_30 { pt3dadd( 2.00389, 642.049, -33.3401, 1.25 ) }
    dend_30 { pt3dadd( 1.8683, 643.58, -33.3275, 0.66 ) }
    dend_30 { pt3dadd( 1.75418, 644.967, -33.3172, 0.66 ) }
    dend_30 { pt3dadd( 1.74753, 645.065, -33.3166, 0.66 ) }
    dend_30 { pt3dadd( 1.69134, 646.066, -33.3131, 0.66 ) }
    dend_30 { pt3dadd( 1.68579, 646.213, -33.3135, 0.66 ) }
    dend_30 { pt3dadd( 1.65958, 647.125, -33.3194, 0.66 ) }
    dend_30 { pt3dadd( 1.65865, 647.204, -33.3202, 0.66 ) }
    dend_30 { pt3dadd( 1.65722, 648.036, -33.3311, 0.66 ) }
    dend_30 { pt3dadd( 1.65055, 648.286, -33.3347, 0.66 ) }
    dend_30 { pt3dadd( 1.62128, 649.076, -33.3464, 0.66 ) }
    dend_30 { pt3dadd( 1.6036, 649.701, -33.3554, 0.66 ) }
    dend_30 { pt3dadd( 1.60336, 649.77, -33.3563, 0.66 ) }
    dend_30 { pt3dadd( 1.62186, 650.768, -33.3677, 0.66 ) }
    dend_30 { pt3dadd( 1.62479, 650.828, -33.3682, 0.66 ) }
    dend_30 { pt3dadd( 1.69081, 651.802, -33.3812, 1.18 ) }
    dend_30 { pt3dadd( 1.69911, 651.871, -33.3758, 1.18 ) }
    dend_30 { pt3dadd( 1.84179, 652.743, -33.2416, 1.33 ) }
    dend_30 { pt3dadd( 1.8568, 652.822, -33.2247, 1.33 ) }
    dend_30 { pt3dadd( 1.91044, 653.068, -33.154, 1.33 ) }
    dend_30 { pt3dadd( 1.93364, 653.175, -33.1208, 1.33 ) }
    dend_30 { pt3dadd( 2.23199, 654.537, -32.6481, 0.81 ) }
    dend_30 { pt3dadd( 2.24349, 654.594, -32.6314, 0.81 ) }
    dend_30 { pt3dadd( 2.37377, 655.135, -32.5045, 0.81 ) }
    dend_30 { pt3dadd( 2.38893, 655.2, -32.4918, 0.81 ) }
    dend_30 { pt3dadd( 2.57238, 655.953, -32.3729, 0.96 ) }
    dend_30 { pt3dadd( 2.60121, 656.065, -32.3596, 0.96 ) }
    dend_30 { pt3dadd( 2.92113, 657.255, -32.2869, 0.37 ) }
    dend_30 { pt3dadd( 3.18822, 658.26, -32.2368, 0.37 ) }
    dend_30 { pt3dadd( 3.38392, 659.055, -32.1757, 1.33 ) }
    dend_30 { pt3dadd( 3.56256, 659.781, -32.0889, 2.06 ) }
    dend_30 { pt3dadd( 3.63854, 660.107, -32.022, 2.36 ) }
    dend_30 { pt3dadd( 3.75575, 660.624, -31.8893, 2.36 ) }
    dend_30 { pt3dadd( 3.92799, 661.447, -31.6237, 1.62 ) }
    dend_30 { pt3dadd( 4.1687, 662.715, -31.1796, 0.52 ) }
    dend_30 { pt3dadd( 4.44404, 664.142, -30.6484, 0.37 ) }
    dend_30 { pt3dadd( 4.67262, 665.405, -30.1328, 1.55 ) }
    dend_30 { pt3dadd( 4.78428, 666.036, -29.8537, 2.21 ) }
    dend_30 { pt3dadd( 4.90365, 666.693, -29.5283, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -13.4161, -77.4079, -22.103, 0.44 ) }
    dend_11 { pt3dadd( -12.9457, -78.6161, -21.6542, 0.44 ) }
    dend_11 { pt3dadd( -12.4645, -79.7886, -21.1704, 0.22 ) }
    dend_11 { pt3dadd( -12.4369, -79.8467, -21.142, 0.22 ) }
    dend_11 { pt3dadd( -11.9953, -80.6917, -20.601, 0.22 ) }
    dend_11 { pt3dadd( -11.3333, -81.8775, -19.8313, 1.47 ) }
    dend_11 { pt3dadd( -11.131, -82.2301, -19.6147, 1.99 ) }
    dend_11 { pt3dadd( -11.06, -82.3487, -19.5354, 1.99 ) }
    dend_11 { pt3dadd( -10.5006, -83.2062, -18.9729, 1.77 ) }
    dend_11 { pt3dadd( -9.59412, -84.5552, -18.1328, 0.52 ) }
    dend_11 { pt3dadd( -8.89605, -85.57, -17.5283, 0.29 ) }
    dend_11 { pt3dadd( -8.36352, -86.3443, -17.1209, 0.29 ) }
    dend_11 { pt3dadd( -8.32854, -86.397, -17.0944, 0.29 ) }
    dend_11 { pt3dadd( -7.80562, -87.2055, -16.7138, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -7.30711, -88.0552, -16.3755, 1.03 ) }
    dend_11 { pt3dadd( -6.63185, -89.3232, -15.9665, 0.22 ) }
    dend_11 { pt3dadd( -6.60878, -89.3735, -15.9504, 0.22 ) }
    dend_11 { pt3dadd( -6.39614, -89.8825, -15.8032, 0.44 ) }
    dend_11 { pt3dadd( -6.37534, -89.9338, -15.7876, 0.44 ) }
    dend_11 { pt3dadd( -6.09229, -90.614, -15.5619, 0.44 ) }
    dend_11 { pt3dadd( -5.89514, -91.1239, -15.4149, 0.29 ) }
    dend_11 { pt3dadd( -5.56747, -91.9864, -15.1743, 1.55 ) }
    dend_11 { pt3dadd( -5.47694, -92.2145, -15.1054, 2.21 ) }
    dend_11 { pt3dadd( -5.00917, -93.2654, -14.7553, 2.21 ) }
    dend_11 { pt3dadd( -4.55755, -94.1939, -14.4311, 0.44 ) }
    dend_11 { pt3dadd( -3.99162, -95.1904, -14.0538, 0.29 ) }
    dend_11 { pt3dadd( -3.73716, -95.5936, -13.8928, 0.52 ) }
    dend_11 { pt3dadd( -3.69581, -95.655, -13.8679, 0.52 ) }
    dend_11 { pt3dadd( -3.39166, -96.0564, -13.7344, 0.22 ) }
    dend_11 { pt3dadd( -3.33962, -96.1041, -13.7262, 0.22 ) }
    dend_11 { pt3dadd( -2.96481, -96.3391, -13.6909, 0.22 ) }
    dend_11 { pt3dadd( -2.5891, -96.5502, -13.632, 0.74 ) }
    dend_11 { pt3dadd( -2.52128, -96.5931, -13.6191, 0.74 ) }
    dend_11 { pt3dadd( -2.03187, -96.9513, -13.5151, 0.74 ) }
    dend_11 { pt3dadd( -1.17216, -97.6811, -13.3201, 0.29 ) }
    dend_11 { pt3dadd( -0.642227, -98.2033, -13.1601, 0.29 ) }
    dend_11 { pt3dadd( -0.0927408, -98.8491, -12.959, 1.33 ) }
    dend_11 { pt3dadd( 0.220184, -99.2528, -12.839, 1.92 ) }
    dend_11 { pt3dadd( 0.381383, -99.4702, -12.7788, 1.99 ) }
    dend_11 { pt3dadd( 0.720433, -99.9537, -12.6519, 1.55 ) }
    dend_11 { pt3dadd( 1.34599, -100.859, -12.4626, 0.66 ) }
    dend_11 { pt3dadd( 1.7559, -101.443, -12.3836, 0.29 ) }
    dend_11 { pt3dadd( 2.40959, -102.38, -12.3606, 0.22 ) }
    dend_11 { pt3dadd( 2.81086, -102.992, -12.3862, 1.03 ) }
    dend_11 { pt3dadd( 3.10978, -103.479, -12.4329, 1.55 ) }
    dend_11 { pt3dadd( 3.57841, -104.3, -12.5583, 0.88 ) }
    dend_11 { pt3dadd( 3.95712, -105.033, -12.7159, 0.29 ) }
    dend_11 { pt3dadd( 4.33196, -105.844, -12.9054, 0.29 ) }
    dend_11 { pt3dadd( 4.71244, -106.811, -13.1427, 0.22 ) }
    dend_11 { pt3dadd( 4.87611, -107.258, -13.2505, 0.52 ) }
    dend_11 { pt3dadd( 4.89915, -107.32, -13.2624, 0.52 ) }
    dend_11 { pt3dadd( 5.1222, -107.911, -13.3145, 0.52 ) }
    dend_11 { pt3dadd( 5.38727, -108.542, -13.3107, 0.44 ) }
    dend_11 { pt3dadd( 5.4677, -108.727, -13.2885, 0.66 ) }
    dend_11 { pt3dadd( 5.67324, -109.209, -13.2045, 0.37 ) }
    dend_11 { pt3dadd( 5.94402, -109.92, -13.0572, 0.29 ) }
    dend_11 { pt3dadd( 6.21094, -110.779, -12.8705, 0.29 ) }
    dend_11 { pt3dadd( 6.22249, -110.834, -12.8565, 0.29 ) }
    dend_11 { pt3dadd( 6.34478, -111.679, -12.636, 1.25 ) }
    dend_11 { pt3dadd( 6.38329, -112.079, -12.5393, 1.84 ) }
    dend_11 { pt3dadd( 6.39711, -112.448, -12.4626, 1.84 ) }
    dend_11 { pt3dadd( 6.39652, -113.296, -12.3411, 0.81 ) }
    dend_11 { pt3dadd( 6.38114, -114.285, -12.2355, 0.29 ) }
    dend_11 { pt3dadd( 6.3698, -114.991, -12.1843, 0.22 ) }
    dend_11 { pt3dadd( 6.36771, -115.087, -12.1809, 0.22 ) }
    dend_11 { pt3dadd( 6.33007, -115.903, -12.1965, 0.22 ) }
    dend_11 { pt3dadd( 6.23274, -117.015, -12.2911, 1.33 ) }
    dend_11 { pt3dadd( 6.16449, -117.539, -12.3672, 1.99 ) }
    dend_11 { pt3dadd( 6.10213, -117.879, -12.4352, 2.28 ) }
    dend_11 { pt3dadd( 5.98364, -118.394, -12.5326, 2.28 ) }
    dend_11 { pt3dadd( 5.64936, -119.715, -12.769, 0.66 ) }
    dend_11 { pt3dadd( 5.42643, -120.501, -12.9091, 0.22 ) }
    dend_11 { pt3dadd( 5.40627, -120.566, -12.9197, 0.22 ) }
    dend_11 { pt3dadd( 5.26274, -121.085, -12.984, 0.22 ) }
    dend_11 { pt3dadd( 5.12623, -121.621, -13.0289, 0.74 ) }
    dend_11 { pt3dadd( 5.04238, -121.99, -13.0375, 1.03 ) }
    dend_11 { pt3dadd( 4.98386, -122.266, -13.0202, 1.11 ) }
    dend_11 { pt3dadd( 4.87716, -122.817, -12.9753, 0.44 ) }
    dend_11 { pt3dadd( 4.69942, -123.722, -12.9233, 0.22 ) }
    dend_11 { pt3dadd( 4.68615, -123.788, -12.9213, 0.22 ) }
    dend_11 { pt3dadd( 4.57443, -124.283, -12.9213, 0.44 ) }
    dend_11 { pt3dadd( 4.44224, -125.017, -12.9213, 0.29 ) }
    dend_11 { pt3dadd( 4.42962, -125.083, -12.9213, 0.29 ) }
    dend_11 { pt3dadd( 4.18565, -125.868, -12.8925, 0.29 ) }
    dend_11 { pt3dadd( 3.99281, -126.359, -12.8575, 0.22 ) }
    dend_11 { pt3dadd( 3.96714, -126.423, -12.8515, 0.22 ) }
    dend_11 { pt3dadd( 3.64522, -127.296, -12.718, 0.22 ) }
    dend_11 { pt3dadd( 3.49124, -127.822, -12.5787, 0.22 ) }
    dend_11 { pt3dadd( 3.18577, -129.309, -12.1022, 2.14 ) }
    dend_11 { pt3dadd( 3.17828, -129.363, -12.0835, 2.14 ) }
    dend_11 { pt3dadd( 3.13715, -129.949, -11.8778, 1.99 ) }
    dend_11 { pt3dadd( 3.1343, -130.81, -11.576, 1.69 ) }
    dend_11 { pt3dadd( 3.20329, -132.094, -11.1196, 0.59 ) }
    dend_11 { pt3dadd( 3.3869, -133.289, -10.7121, 0.22 ) }
    dend_11 { pt3dadd( 3.53161, -133.881, -10.5401, 0.37 ) }
    dend_11 { pt3dadd( 3.69629, -134.505, -10.4187, 0.37 ) }
    dend_11 { pt3dadd( 3.8968, -135.224, -10.3571, 0.74 ) }
    dend_11 { pt3dadd( 3.91592, -135.289, -10.36, 0.74 ) }
    dend_11 { pt3dadd( 4.05689, -135.774, -10.4433, 1.11 ) }
    dend_11 { pt3dadd( 4.32105, -136.735, -10.6695, 0.59 ) }
    dend_11 { pt3dadd( 4.61058, -137.81, -10.9462, 0.29 ) }
    dend_11 { pt3dadd( 4.81192, -138.537, -11.1399, 0.29 ) }
    dend_11 { pt3dadd( 4.84261, -138.638, -11.1677, 0.29 ) }
    dend_11 { pt3dadd( 5.07118, -139.331, -11.3447, 0.29 ) }
    dend_11 { pt3dadd( 5.13955, -139.512, -11.3823, 0.29 ) }
    dend_11 { pt3dadd( 5.46343, -140.231, -11.4694, 0.29 ) }
    dend_11 { pt3dadd( 5.75735, -140.827, -11.4981, 1.18 ) }
    dend_11 { pt3dadd( 5.93805, -141.174, -11.5148, 1.47 ) }
    dend_11 { pt3dadd( 5.96955, -141.234, -11.5171, 1.47 ) }
    dend_11 { pt3dadd( 6.4597, -142.212, -11.5478, 0.44 ) }
    dend_11 { pt3dadd( 6.78736, -143.017, -11.5645, 0.37 ) }
    dend_11 { pt3dadd( 6.94882, -143.626, -11.5699, 0.81 ) }
    dend_11 { pt3dadd( 7.02277, -144.038, -11.576, 0.81 ) }
    dend_11 { pt3dadd( 7.1016, -144.678, -11.586, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( 7.13726, -145.123, -11.597, 0.29 ) }
    dend_11 { pt3dadd( 7.1776, -146.111, -11.6269, 0.22 ) }
    dend_11 { pt3dadd( 7.21466, -147.169, -11.6875, 0.22 ) }
    dend_11 { pt3dadd( 7.24824, -147.788, -11.7353, 0.44 ) }
    dend_11 { pt3dadd( 7.26623, -147.999, -11.7546, 0.44 ) }
    dend_11 { pt3dadd( 7.32512, -148.41, -11.7965, 0.44 ) }
    dend_11 { pt3dadd( 7.48731, -149.189, -11.8801, 0.29 ) }
    dend_11 { pt3dadd( 7.69532, -150.008, -11.9659, 1.4 ) }
    dend_11 { pt3dadd( 7.8585, -150.614, -12.0272, 1.69 ) }
    dend_11 { pt3dadd( 7.99177, -151.148, -12.0748, 1.92 ) }
    dend_11 { pt3dadd( 8.16877, -151.898, -12.1488, 0.74 ) }
    dend_11 { pt3dadd( 8.32421, -152.811, -12.2477, 0.22 ) }
    dend_11 { pt3dadd( 8.42372, -153.709, -12.35, 0.22 ) }
    dend_11 { pt3dadd( 8.4618, -154.354, -12.4173, 0.88 ) }
    dend_11 { pt3dadd( 8.46222, -154.845, -12.4725, 0.88 ) }
    dend_11 { pt3dadd( 8.42101, -155.639, -12.5638, 0.22 ) }
    dend_11 { pt3dadd( 8.31962, -156.629, -12.6767, 0.22 ) }
    dend_11 { pt3dadd( 8.31003, -156.705, -12.6848, 0.22 ) }
    dend_11 { pt3dadd( 8.19784, -157.407, -12.7516, 0.22 ) }
    dend_11 { pt3dadd( 8.03338, -158.341, -12.7958, 1.03 ) }
    dend_11 { pt3dadd( 7.95248, -158.752, -12.7997, 1.33 ) }
    dend_11 { pt3dadd( 7.89585, -159.028, -12.7915, 1.33 ) }
    dend_11 { pt3dadd( 7.65536, -160.26, -12.7666, 0.22 ) }
    dend_11 { pt3dadd( 7.46672, -161.154, -12.8012, 0.22 ) }
    dend_11 { pt3dadd( 7.33412, -161.701, -12.8595, 0.88 ) }
    dend_11 { pt3dadd( 7.23509, -162.08, -12.9213, 1.11 ) }
    dend_11 { pt3dadd( 7.15241, -162.381, -12.9834, 0.88 ) }
    dend_11 { pt3dadd( 6.83815, -163.552, -13.2732, 0.22 ) }
    dend_11 { pt3dadd( 6.56319, -164.503, -13.5409, 0.22 ) }
    dend_11 { pt3dadd( 6.40677, -165.036, -13.7018, 1.55 ) }
    dend_11 { pt3dadd( 6.26911, -165.506, -13.84, 1.77 ) }
    dend_11 { pt3dadd( 6.12053, -166.025, -13.9763, 1.25 ) }
    dend_11 { pt3dadd( 5.84648, -167.061, -14.2041, 0.22 ) }
    dend_11 { pt3dadd( 5.60802, -168.114, -14.3612, 0.22 ) }
    dend_11 { pt3dadd( 5.59853, -168.17, -14.3673, 0.22 ) }
    dend_11 { pt3dadd( 5.51481, -169.108, -14.467, 0.22 ) }
    dend_11 { pt3dadd( 5.5125, -169.186, -14.4786, 0.22 ) }
    dend_11 { pt3dadd( 5.5469, -170.038, -14.6307, 0.96 ) }
    dend_11 { pt3dadd( 5.5762, -170.578, -14.7351, 1.47 ) }
    dend_11 { pt3dadd( 5.61752, -171.162, -14.873, 0.88 ) }
    dend_11 { pt3dadd( 5.64034, -171.696, -15.0155, 0.66 ) }
    dend_11 { pt3dadd( 5.67642, -172.915, -15.3821, 0.29 ) }
    dend_11 { pt3dadd( 5.67952, -173.393, -15.5306, 0.59 ) }
    dend_11 { pt3dadd( 5.66918, -174.201, -15.7972, 0.59 ) }
    dend_11 { pt3dadd( 5.65849, -175.036, -16.0755, 0.29 ) }
    dend_11 { pt3dadd( 5.66045, -175.12, -16.1021, 0.29 ) }
    dend_11 { pt3dadd( 5.73356, -176.165, -16.4101, 0.29 ) }
    dend_11 { pt3dadd( 5.7426, -176.229, -16.4273, 0.29 ) }
    dend_11 { pt3dadd( 5.8425, -176.753, -16.5697, 0.74 ) }
    dend_11 { pt3dadd( 5.95725, -177.353, -16.7271, 0.88 ) }
    dend_11 { pt3dadd( 6.09619, -178.311, -16.9645, 0.22 ) }
    dend_11 { pt3dadd( 6.17026, -179.089, -17.15, 0.22 ) }
    dend_11 { pt3dadd( 6.18139, -179.955, -17.3615, 1.99 ) }
    dend_11 { pt3dadd( 6.15259, -180.581, -17.5242, 2.43 ) }
    dend_11 { pt3dadd( 5.99844, -181.965, -17.8934, 0.22 ) }
    dend_11 { pt3dadd( 5.8669, -182.709, -18.0983, 0.44 ) }
    dend_11 { pt3dadd( 5.66278, -183.623, -18.3602, 0.37 ) }
    dend_11 { pt3dadd( 5.42177, -184.573, -18.6317, 0.22 ) }
    dend_11 { pt3dadd( 5.24636, -185.203, -18.7991, 1.03 ) }
    dend_11 { pt3dadd( 5.14979, -185.573, -18.9085, 1.25 ) }
    dend_11 { pt3dadd( 5.03667, -186.099, -19.0825, 0.96 ) }
    dend_11 { pt3dadd( 4.84567, -187.294, -19.4986, 0.15 ) }
    dend_11 { pt3dadd( 4.78073, -187.919, -19.7184, 0.74 ) }
    dend_11 { pt3dadd( 4.75784, -188.38, -19.8744, 0.96 ) }
    dend_11 { pt3dadd( 4.72986, -189.812, -20.3429, 0.22 ) }
    dend_11 { pt3dadd( 4.73151, -189.949, -20.3865, 0.22 ) }
    dend_11 { pt3dadd( 4.78381, -190.546, -20.584, 0.22 ) }
    dend_11 { pt3dadd( 4.89677, -191.343, -20.8341, 0.22 ) }
    dend_11 { pt3dadd( 4.90678, -191.4, -20.851, 0.22 ) }
    dend_11 { pt3dadd( 5.11194, -192.415, -21.1464, 2.5 ) }
    dend_11 { pt3dadd( 5.20013, -192.811, -21.2534, 2.73 ) }
    dend_11 { pt3dadd( 5.68126, -194.72, -21.7992, 0.22 ) }
    dend_11 { pt3dadd( 5.85768, -195.293, -21.9772, 0.52 ) }
    dend_11 { pt3dadd( 6.05367, -195.827, -22.15, 0.52 ) }
    dend_11 { pt3dadd( 6.49261, -196.925, -22.4923, 0.22 ) }
    dend_11 { pt3dadd( 6.52026, -196.984, -22.5117, 0.22 ) }
    dend_11 { pt3dadd( 6.75928, -197.459, -22.6724, 0.22 ) }
    dend_11 { pt3dadd( 7.1925, -198.253, -22.9202, 1.18 ) }
    dend_11 { pt3dadd( 7.37065, -198.571, -23.0171, 1.69 ) }
    dend_11 { pt3dadd( 7.73684, -199.228, -23.1985, 1.33 ) }
    dend_11 { pt3dadd( 8.23636, -200.138, -23.3913, 0.22 ) }
    dend_11 { pt3dadd( 8.43472, -200.538, -23.4632, 0.22 ) }
    dend_11 { pt3dadd( 8.6837, -201.148, -23.5591, 1.47 ) }
    dend_11 { pt3dadd( 8.84063, -201.607, -23.6186, 1.69 ) }
    dend_11 { pt3dadd( 8.97945, -202.079, -23.6824, 1.69 ) }
    dend_11 { pt3dadd( 9.33476, -203.452, -23.8592, 0.29 ) }
    dend_11 { pt3dadd( 9.48328, -204.114, -23.9338, 0.29 ) }
    dend_11 { pt3dadd( 9.64294, -204.836, -24.0256, 1.03 ) }
    dend_11 { pt3dadd( 9.66774, -204.981, -24.0438, 1.33 ) }
    dend_11 { pt3dadd( 9.82359, -206.23, -24.1823, 0.22 ) }
    dend_11 { pt3dadd( 9.85733, -206.71, -24.2283, 0.22 ) }
    dend_11 { pt3dadd( 9.85649, -207.055, -24.249, 1.03 ) }
    dend_11 { pt3dadd( 9.85055, -207.48, -24.2517, 1.03 ) }
    dend_11 { pt3dadd( 9.7946, -208.832, -24.1989, 0.22 ) }
    dend_11 { pt3dadd( 9.72196, -209.618, -24.1445, 1.33 ) }
    dend_11 { pt3dadd( 9.67478, -209.923, -24.1132, 1.47 ) }
    dend_11 { pt3dadd( 9.56092, -210.525, -24.0775, 1.55 ) }
    dend_11 { pt3dadd( 9.27654, -211.859, -24.0396, 0.22 ) }
    dend_11 { pt3dadd( 9.16793, -212.297, -24.0438, 0.22 ) }
    dend_11 { pt3dadd( 8.96918, -213.026, -24.0793, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( 8.81404, -213.563, -24.1187, 1.25 ) }
    dend_11 { pt3dadd( 8.42356, -214.917, -24.2714, 0.22 ) }
    dend_11 { pt3dadd( 8.40275, -214.99, -24.282, 0.22 ) }
    dend_11 { pt3dadd( 8.04826, -216.347, -24.4822, 0.22 ) }
    dend_11 { pt3dadd( 7.97475, -216.653, -24.5234, 0.74 ) }
    dend_11 { pt3dadd( 7.91353, -216.921, -24.5579, 0.74 ) }
    dend_11 { pt3dadd( 7.61626, -218.274, -24.7106, 0.22 ) }
    dend_11 { pt3dadd( 7.37052, -219.444, -24.8035, 0.22 ) }
    dend_11 { pt3dadd( 7.07807, -220.973, -24.9306, 0.22 ) }
    dend_11 { pt3dadd( 6.99865, -221.469, -24.9759, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.4161, -77.4079, -22.103, 0.66 ) }
    dend_10 { pt3dadd( -14.2137, -79.0324, -22.015, 0.66 ) }
    dend_10 { pt3dadd( -14.5276, -79.6245, -21.956, 0.52 ) }
    dend_10 { pt3dadd( -14.8896, -80.2368, -21.8829, 0.88 ) }
    dend_10 { pt3dadd( -15.1243, -80.6236, -21.8207, 1.03 ) }
    dend_10 { pt3dadd( -15.4444, -81.1502, -21.7168, 0.96 ) }
    dend_10 { pt3dadd( -15.9378, -81.9658, -21.5363, 0.37 ) }
    dend_10 { pt3dadd( -16.4237, -82.7645, -21.2795, 0.29 ) }
    dend_10 { pt3dadd( -16.6513, -83.1774, -21.1407, 0.29 ) }
    dend_10 { pt3dadd( -17.0556, -84.0663, -20.8072, 0.29 ) }
    dend_10 { pt3dadd( -17.1599, -84.3563, -20.6965, 0.74 ) }
    dend_10 { pt3dadd( -17.1823, -84.4375, -20.6685, 0.74 ) }
    dend_10 { pt3dadd( -17.2479, -84.7607, -20.5826, 0.74 ) }
    dend_10 { pt3dadd( -17.3424, -85.384, -20.4442, 0.59 ) }
    dend_10 { pt3dadd( -17.4897, -86.421, -20.2501, 0.29 ) }
    dend_10 { pt3dadd( -17.6559, -87.4878, -20.0966, 0.29 ) }
    dend_10 { pt3dadd( -17.8237, -88.4936, -19.9779, 0.29 ) }
    dend_10 { pt3dadd( -18.0211, -89.6295, -19.8604, 0.29 ) }
    dend_10 { pt3dadd( -18.1653, -90.5416, -19.8079, 1.33 ) }
    dend_10 { pt3dadd( -18.1765, -90.6192, -19.8074, 1.33 ) }
    dend_10 { pt3dadd( -18.2717, -91.413, -19.8444, 1.99 ) }
    dend_10 { pt3dadd( -18.3018, -91.9068, -19.8744, 2.21 ) }
    dend_10 { pt3dadd( -18.3148, -92.3342, -19.9065, 2.21 ) }
    dend_10 { pt3dadd( -18.3265, -93.7631, -20.0291, 0.29 ) }
    dend_10 { pt3dadd( -18.32, -94.9448, -20.1281, 0.29 ) }
    dend_10 { pt3dadd( -18.3088, -95.6324, -20.1793, 0.29 ) }
    dend_10 { pt3dadd( -18.2904, -96.1138, -20.2097, 0.96 ) }
    dend_10 { pt3dadd( -18.275, -96.6872, -20.236, 1.47 ) }
    dend_10 { pt3dadd( -18.2694, -97.0374, -20.2435, 1.84 ) }
    dend_10 { pt3dadd( -18.2547, -97.7413, -20.2215, 0.88 ) }
    dend_10 { pt3dadd( -18.2486, -97.8075, -20.2212, 0.88 ) }
    dend_10 { pt3dadd( -18.1542, -98.5036, -20.2495, 0.29 ) }
    dend_10 { pt3dadd( -18.0507, -99.185, -20.3031, 0.29 ) }
    dend_10 { pt3dadd( -18.0373, -99.2602, -20.3108, 0.29 ) }
    dend_10 { pt3dadd( -17.8543, -100.215, -20.4249, 0.52 ) }
    dend_10 { pt3dadd( -17.6388, -101.291, -20.5667, 0.52 ) }
    dend_10 { pt3dadd( -17.4608, -102.201, -20.6814, 0.22 ) }
    dend_10 { pt3dadd( -17.3227, -102.957, -20.7729, 1.47 ) }
    dend_10 { pt3dadd( -17.2211, -103.589, -20.841, 2.06 ) }
    dend_10 { pt3dadd( -17.1862, -103.925, -20.8719, 2.36 ) }
    dend_10 { pt3dadd( -17.1707, -104.639, -20.9212, 1.69 ) }
    dend_10 { pt3dadd( -17.2405, -105.748, -20.9671, 0.74 ) }
    dend_10 { pt3dadd( -17.3696, -106.745, -20.9929, 0.44 ) }
    dend_10 { pt3dadd( -17.5585, -107.79, -21.0312, 0.44 ) }
    dend_10 { pt3dadd( -17.7008, -108.417, -21.0616, 0.44 ) }
    dend_10 { pt3dadd( -17.9981, -109.627, -21.1312, 0.29 ) }
    dend_10 { pt3dadd( -18.1429, -110.245, -21.1727, 0.59 ) }
    dend_10 { pt3dadd( -18.2834, -110.891, -21.2213, 0.59 ) }
    dend_10 { pt3dadd( -18.4032, -111.574, -21.2745, 0.29 ) }
    dend_10 { pt3dadd( -18.4118, -111.65, -21.2813, 0.29 ) }
    dend_10 { pt3dadd( -18.4863, -112.628, -21.3877, 0.29 ) }
    dend_10 { pt3dadd( -18.5246, -113.732, -21.532, 0.29 ) }
    dend_10 { pt3dadd( -18.5317, -113.865, -21.5515, 0.29 ) }
    dend_10 { pt3dadd( -18.6026, -114.349, -21.6326, 0.29 ) }
    dend_10 { pt3dadd( -18.6224, -114.411, -21.6473, 0.29 ) }
    dend_10 { pt3dadd( -18.8774, -114.996, -21.8896, 0.29 ) }
    dend_10 { pt3dadd( -18.9033, -115.051, -21.9182, 0.29 ) }
    dend_10 { pt3dadd( -19.1861, -115.675, -22.2805, 0.29 ) }
    dend_10 { pt3dadd( -19.5782, -116.62, -22.8444, 2.28 ) }
    dend_10 { pt3dadd( -20.0718, -117.81, -23.5642, 2.65 ) }
    dend_10 { pt3dadd( -20.7517, -119.494, -24.5777, 0.29 ) }
    dend_10 { pt3dadd( -21.0956, -120.357, -25.0825, 0.29 ) }
    dend_10 { pt3dadd( -21.3493, -120.951, -25.4265, 0.59 ) }
    dend_10 { pt3dadd( -21.4786, -121.24, -25.5948, 0.22 ) }
    dend_10 { pt3dadd( -21.8068, -121.868, -25.9728, 0.22 ) }
    dend_10 { pt3dadd( -22.0944, -122.298, -26.2685, 0.22 ) }
    dend_10 { pt3dadd( -22.6466, -122.992, -26.789, 1.03 ) }
    dend_10 { pt3dadd( -23.1647, -123.589, -27.2792, 1.92 ) }
    dend_10 { pt3dadd( -23.6002, -124.104, -27.7104, 2.06 ) }
    dend_10 { pt3dadd( -24.0088, -124.646, -28.1757, 1.92 ) }
    dend_10 { pt3dadd( -25.0799, -126.373, -29.6314, 0.29 ) }
    dend_10 { pt3dadd( -25.3858, -126.973, -30.1098, 0.52 ) }
    dend_10 { pt3dadd( -25.4046, -127.018, -30.1431, 0.52 ) }
    dend_10 { pt3dadd( -25.5679, -127.494, -30.4435, 0.52 ) }
    dend_10 { pt3dadd( -25.8148, -128.326, -30.8555, 0.37 ) }
    dend_10 { pt3dadd( -25.9824, -129.048, -31.098, 0.29 ) }
    dend_10 { pt3dadd( -26.1239, -129.87, -31.261, 0.29 ) }
    dend_10 { pt3dadd( -26.2442, -130.524, -31.3742, 0.88 ) }
    dend_10 { pt3dadd( -26.3195, -130.955, -31.4442, 0.88 ) }
    dend_10 { pt3dadd( -26.4734, -132.065, -31.6059, 0.22 ) }
    dend_10 { pt3dadd( -26.5575, -132.988, -31.7158, 1.55 ) }
    dend_10 { pt3dadd( -26.5722, -133.557, -31.7797, 1.84 ) }
    dend_10 { pt3dadd( -26.5509, -134.07, -31.8302, 1.62 ) }
    dend_10 { pt3dadd( -26.4368, -135.31, -31.9735, 0.22 ) }
    dend_10 { pt3dadd( -26.3319, -136.169, -32.079, 0.22 ) }
    dend_10 { pt3dadd( -26.2591, -136.713, -32.1432, 0.22 ) }
    dend_10 { pt3dadd( -26.2136, -137.27, -32.2042, 0.74 ) }
    dend_10 { pt3dadd( -26.2024, -137.762, -32.2506, 0.74 ) }
    dend_10 { pt3dadd( -26.2408, -138.844, -32.3403, 0.29 ) }
    dend_10 { pt3dadd( -26.3154, -139.468, -32.3767, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -26.5033, -140.473, -32.4004, 0.29 ) }
    dend_10 { pt3dadd( -26.7135, -141.44, -32.3923, 1.77 ) }
    dend_10 { pt3dadd( -26.8474, -142.013, -32.3718, 2.21 ) }
    dend_10 { pt3dadd( -26.9832, -142.556, -32.3375, 2.21 ) }
    dend_10 { pt3dadd( -27.2384, -143.499, -32.2465, 0.74 ) }
    dend_10 { pt3dadd( -27.4961, -144.38, -32.1816, 0.22 ) }
    dend_10 { pt3dadd( -27.8297, -145.455, -32.1315, 0.22 ) }
    dend_10 { pt3dadd( -28.0053, -146.018, -32.1224, 0.88 ) }
    dend_10 { pt3dadd( -28.1634, -146.55, -32.1263, 1.03 ) }
    dend_10 { pt3dadd( -28.2021, -146.69, -32.1311, 1.03 ) }
    dend_10 { pt3dadd( -28.4574, -147.704, -32.2055, 0.22 ) }
    dend_10 { pt3dadd( -28.6244, -148.376, -32.2747, 0.22 ) }
    dend_10 { pt3dadd( -28.6582, -148.505, -32.2877, 0.22 ) }
    dend_10 { pt3dadd( -28.8501, -149.253, -32.3619, 0.22 ) }
    dend_10 { pt3dadd( -28.9866, -149.75, -32.4027, 0.22 ) }
    dend_10 { pt3dadd( -29.2313, -150.57, -32.4647, 1.33 ) }
    dend_10 { pt3dadd( -29.3837, -151.041, -32.4934, 1.77 ) }
    dend_10 { pt3dadd( -29.6267, -151.753, -32.52, 1.77 ) }
    dend_10 { pt3dadd( -29.8172, -152.321, -32.5309, 0.88 ) }
    dend_10 { pt3dadd( -30.2015, -153.456, -32.5392, 0.29 ) }
    dend_10 { pt3dadd( -30.3188, -153.886, -32.5362, 0.74 ) }
    dend_10 { pt3dadd( -30.4385, -154.352, -32.544, 0.74 ) }
    dend_10 { pt3dadd( -30.6975, -155.453, -32.588, 0.22 ) }
    dend_10 { pt3dadd( -30.8034, -155.939, -32.6146, 0.22 ) }
    dend_10 { pt3dadd( -30.822, -156.025, -32.621, 0.22 ) }
    dend_10 { pt3dadd( -31.0123, -156.906, -32.7154, 0.96 ) }
    dend_10 { pt3dadd( -31.317, -158.182, -32.8678, 1.18 ) }
    dend_10 { pt3dadd( -31.4154, -158.545, -32.9195, 1.47 ) }
    dend_10 { pt3dadd( -31.4415, -158.629, -32.9334, 1.47 ) }
    dend_10 { pt3dadd( -31.5888, -159.063, -32.9967, 1.47 ) }
    dend_10 { pt3dadd( -31.9834, -160.274, -33.1361, 0.22 ) }
    dend_10 { pt3dadd( -32.1053, -160.673, -33.1774, 0.22 ) }
    dend_10 { pt3dadd( -32.2294, -161.221, -33.2172, 0.74 ) }
    dend_10 { pt3dadd( -32.2975, -161.485, -33.2403, 0.96 ) }
    dend_10 { pt3dadd( -32.3379, -161.624, -33.2537, 0.96 ) }
    dend_10 { pt3dadd( -32.4429, -161.954, -33.292, 0.96 ) }
    dend_10 { pt3dadd( -32.7404, -162.876, -33.4192, 0.22 ) }
    dend_10 { pt3dadd( -32.9114, -163.436, -33.4981, 0.29 ) }
    dend_10 { pt3dadd( -33.0899, -164.107, -33.6453, 0.29 ) }
    dend_10 { pt3dadd( -33.2092, -164.568, -33.8018, 0.29 ) }
    dend_10 { pt3dadd( -33.4175, -165.392, -34.1387, 1.25 ) }
    dend_10 { pt3dadd( -33.54, -165.893, -34.37, 1.69 ) }
    dend_10 { pt3dadd( -33.6282, -166.277, -34.5725, 1.69 ) }
    dend_10 { pt3dadd( -33.8704, -167.407, -35.2464, 1.03 ) }
    dend_10 { pt3dadd( -34.1395, -168.571, -35.97, 0.22 ) }
    dend_10 { pt3dadd( -34.2585, -169.039, -36.2565, 0.22 ) }
    dend_10 { pt3dadd( -34.5808, -170.201, -36.9465, 1.99 ) }
    dend_10 { pt3dadd( -34.8036, -170.935, -37.3568, 2.5 ) }
    dend_10 { pt3dadd( -35.2844, -172.475, -38.1158, 0.29 ) }
    dend_10 { pt3dadd( -35.518, -173.18, -38.4045, 0.22 ) }
    dend_10 { pt3dadd( -35.7666, -173.928, -38.6525, 0.52 ) }
    dend_10 { pt3dadd( -35.8797, -174.251, -38.7435, 0.59 ) }
    dend_10 { pt3dadd( -36.2628, -175.33, -38.9635, 0.22 ) }
    dend_10 { pt3dadd( -36.5653, -176.226, -39.0707, 0.22 ) }
    dend_10 { pt3dadd( -36.7418, -176.771, -39.0971, 0.22 ) }
    dend_10 { pt3dadd( -37.091, -177.882, -39.1366, 1.33 ) }
    dend_10 { pt3dadd( -37.2705, -178.402, -39.1572, 1.69 ) }
    dend_10 { pt3dadd( -37.4672, -178.92, -39.1767, 1.47 ) }
    dend_10 { pt3dadd( -37.7756, -179.627, -39.2159, 0.52 ) }
    dend_10 { pt3dadd( -38.039, -180.175, -39.2623, 0.29 ) }
    dend_10 { pt3dadd( -38.7648, -181.548, -39.4076, 0.29 ) }
    dend_10 { pt3dadd( -39.2951, -182.443, -39.5326, 1.11 ) }
    dend_10 { pt3dadd( -39.6051, -182.949, -39.6191, 1.47 ) }
    dend_10 { pt3dadd( -40.4422, -184.252, -39.8713, 0.22 ) }
    dend_10 { pt3dadd( -40.7609, -184.755, -39.9771, 1.77 ) }
    dend_10 { pt3dadd( -41.1913, -185.448, -40.1341, 2.14 ) }
    dend_10 { pt3dadd( -41.4464, -185.873, -40.2373, 1.69 ) }
    dend_10 { pt3dadd( -42.0155, -186.942, -40.4801, 0.22 ) }
    dend_10 { pt3dadd( -42.0437, -187.004, -40.4934, 0.22 ) }
    dend_10 { pt3dadd( -42.2533, -187.562, -40.6048, 0.22 ) }
    dend_10 { pt3dadd( -42.4541, -188.152, -40.7421, 0.52 ) }
    dend_10 { pt3dadd( -42.5087, -188.332, -40.7883, 0.52 ) }
    dend_10 { pt3dadd( -42.7595, -189.23, -41.0256, 0.22 ) }
    dend_10 { pt3dadd( -42.9053, -189.781, -41.181, 0.22 ) }
    dend_10 { pt3dadd( -43.0858, -190.573, -41.4141, 1.99 ) }
    dend_10 { pt3dadd( -43.2286, -191.304, -41.6426, 2.5 ) }
    dend_10 { pt3dadd( -43.347, -192.319, -42.0119, 0.81 ) }
    dend_10 { pt3dadd( -43.4083, -192.986, -42.2707, 0.22 ) }
    dend_10 { pt3dadd( -43.4133, -193.039, -42.2914, 0.22 ) }
    dend_10 { pt3dadd( -43.4557, -193.399, -42.4279, 0.52 ) }
    dend_10 { pt3dadd( -43.4635, -193.452, -42.4472, 0.52 ) }
    dend_10 { pt3dadd( -43.73, -194.501, -42.8226, 0.22 ) }
    dend_10 { pt3dadd( -44.0564, -195.468, -43.1555, 0.22 ) }
    dend_10 { pt3dadd( -44.3756, -196.277, -43.4251, 0.22 ) }
    dend_10 { pt3dadd( -44.706, -196.987, -43.654, 1.33 ) }
    dend_10 { pt3dadd( -44.8684, -197.289, -43.7475, 1.33 ) }
    dend_10 { pt3dadd( -45.5551, -198.439, -44.0922, 0.22 ) }
    dend_10 { pt3dadd( -46.1046, -199.153, -44.2893, 0.22 ) }
    dend_10 { pt3dadd( -46.1457, -199.197, -44.3025, 0.22 ) }
    dend_10 { pt3dadd( -47.2318, -200.182, -44.6011, 2.28 ) }
    dend_10 { pt3dadd( -47.5691, -200.439, -44.6784, 2.73 ) }
    dend_10 { pt3dadd( -47.9046, -200.665, -44.7486, 2.73 ) }
    dend_10 { pt3dadd( -49.5572, -201.6, -45.0624, 0.22 ) }
    dend_10 { pt3dadd( -49.8861, -201.75, -45.1334, 0.74 ) }
    dend_10 { pt3dadd( -50.2238, -201.886, -45.2114, 0.96 ) }
    dend_10 { pt3dadd( -51.3277, -202.238, -45.5135, 0.22 ) }
    dend_10 { pt3dadd( -51.8346, -202.374, -45.678, 1.03 ) }
    dend_10 { pt3dadd( -52.1466, -202.462, -45.8469, 1.03 ) }
    dend_10 { pt3dadd( -53.3287, -202.836, -46.8035, 0.22 ) }
    dend_10 { pt3dadd( -53.376, -202.853, -46.8529, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -54.0115, -203.1, -47.5964, 1.4 ) }
    dend_10 { pt3dadd( -54.18, -203.169, -47.813, 1.4 ) }
    dend_10 { pt3dadd( -55.8204, -203.891, -49.9724, 0.59 ) }
    dend_10 { pt3dadd( -56.1969, -204.071, -50.4716, 1.03 ) }
    dend_10 { pt3dadd( -57.3614, -204.69, -51.9363, 0.22 ) }
    dend_10 { pt3dadd( -57.9462, -205.003, -52.5843, 0.22 ) }
    dend_10 { pt3dadd( -57.9856, -205.025, -52.623, 0.22 ) }
    dend_10 { pt3dadd( -58.4832, -205.301, -53.0471, 1.11 ) }
    dend_10 { pt3dadd( -58.8632, -205.496, -53.3023, 1.25 ) }
    dend_10 { pt3dadd( -60.2251, -206.216, -54.1452, 0.22 ) }
    dend_10 { pt3dadd( -60.6749, -206.461, -54.4017, 0.66 ) }
    dend_10 { pt3dadd( -61.9097, -207.151, -55.1323, 0.22 ) }
    dend_10 { pt3dadd( -61.966, -207.182, -55.1647, 0.22 ) }
    dend_10 { pt3dadd( -62.3471, -207.389, -55.3776, 0.96 ) }
    dend_10 { pt3dadd( -62.7065, -207.569, -55.5616, 1.4 ) }
    dend_10 { pt3dadd( -63.2676, -207.831, -55.813, 0.96 ) }
    dend_10 { pt3dadd( -64.2829, -208.3, -56.2099, 0.22 ) }
    dend_10 { pt3dadd( -64.8527, -208.571, -56.3969, 1.62 ) }
    dend_10 { pt3dadd( -65.3177, -208.801, -56.5441, 1.99 ) }
    dend_10 { pt3dadd( -66.794, -209.579, -56.9717, 0.22 ) }
    dend_10 { pt3dadd( -67.2195, -209.828, -57.0891, 0.37 ) }
    dend_10 { pt3dadd( -67.4395, -209.967, -57.1401, 0.37 ) }
    dend_10 { pt3dadd( -68.0087, -210.343, -57.259, 0.22 ) }
    dend_10 { pt3dadd( -68.4727, -210.675, -57.3646, 0.22 ) }
    dend_10 { pt3dadd( -69.1409, -211.173, -57.5256, 0.52 ) }
    dend_10 { pt3dadd( -69.9105, -211.764, -57.7269, 0.22 ) }
    dend_10 { pt3dadd( -70.3384, -212.081, -57.8525, 0.96 ) }
    dend_10 { pt3dadd( -70.758, -212.378, -58.012, 0.96 ) }
    dend_10 { pt3dadd( -71.7888, -213.128, -58.4739, 0.22 ) }
    dend_10 { pt3dadd( -72.5498, -213.695, -58.931, 1.18 ) }
    dend_10 { pt3dadd( -72.8791, -213.954, -59.2126, 1.55 ) }
    dend_10 { pt3dadd( -72.9152, -213.983, -59.2494, 1.55 ) }
    dend_10 { pt3dadd( -73.9211, -214.838, -60.3988, 0.29 ) }
    dend_10 { pt3dadd( -74.3973, -215.244, -60.9787, 0.29 ) }
    dend_10 { pt3dadd( -75.3464, -216.02, -62.1693, 1.55 ) }
    dend_10 { pt3dadd( -76.7962, -217.158, -63.9972, 0.29 ) }
    dend_10 { pt3dadd( -76.8419, -217.192, -64.053, 0.29 ) }
    dend_10 { pt3dadd( -77.2513, -217.495, -64.5343, 1.18 ) }
    dend_10 { pt3dadd( -77.9783, -218.021, -65.3611, 0.22 ) }
    dend_10 { pt3dadd( -78.5744, -218.442, -66.0116, 1.25 ) }
    dend_10 { pt3dadd( -79.5111, -219.151, -66.9771, 0.22 ) }
    dend_10 { pt3dadd( -79.6599, -219.264, -67.1177, 0.74 ) }
    dend_10 { pt3dadd( -80.3027, -219.782, -67.7226, 0.22 ) }
    dend_10 { pt3dadd( -80.3386, -219.814, -67.7566, 0.22 ) }
    dend_10 { pt3dadd( -80.8696, -220.361, -68.2666, 1.11 ) }
    dend_10 { pt3dadd( -81.2426, -220.783, -68.6171, 1.47 ) }
    dend_10 { pt3dadd( -82.0574, -221.765, -69.3254, 0.22 ) }
    dend_10 { pt3dadd( -82.2744, -222.029, -69.5067, 0.59 ) }
    dend_10 { pt3dadd( -82.7777, -222.645, -69.8971, 1.18 ) }
    dend_10 { pt3dadd( -82.8179, -222.695, -69.928, 1.18 ) }
    dend_10 { pt3dadd( -83.3073, -223.315, -70.2883, 1.18 ) }
    dend_10 { pt3dadd( -84.2011, -224.443, -70.9128, 0.22 ) }
    dend_10 { pt3dadd( -84.6592, -225.064, -71.2296, 1.25 ) }
    dend_10 { pt3dadd( -84.8432, -225.309, -71.3526, 1.25 ) }
    dend_10 { pt3dadd( -85.5248, -226.14, -71.7934, 0.29 ) }
    dend_10 { pt3dadd( -85.9196, -226.594, -72.049, 0.96 ) }
    dend_10 { pt3dadd( -86.9115, -227.753, -72.6166, 0.29 ) }
    dend_10 { pt3dadd( -87.6047, -228.545, -72.947, 0.44 ) }
    dend_10 { pt3dadd( -88.3711, -229.386, -73.2456, 0.22 ) }
    dend_10 { pt3dadd( -89.1162, -230.152, -73.4755, 1.18 ) }
    dend_10 { pt3dadd( -89.6432, -230.631, -73.5618, 1.77 ) }
    dend_10 { pt3dadd( -90.9626, -231.679, -73.6129, 0.29 ) }
    dend_10 { pt3dadd( -91.5068, -232.049, -73.552, 0.29 ) }
    dend_10 { pt3dadd( -91.92, -232.276, -73.4521, 0.29 ) }
    dend_10 { pt3dadd( -92.3046, -232.442, -73.3322, 0.88 ) }
    dend_10 { pt3dadd( -93.5061, -232.887, -72.9333, 0.22 ) }
    dend_10 { pt3dadd( -94.2849, -233.113, -72.7175, 1.03 ) }
    dend_10 { pt3dadd( -94.7022, -233.206, -72.6303, 1.03 ) }
    dend_10 { pt3dadd( -95.5435, -233.359, -72.4512, 0.22 ) }
    dend_10 { pt3dadd( -97.7602, -233.654, -72.0031, 0.22 ) }
    dend_10 { pt3dadd( -97.8295, -233.66, -71.9902, 0.22 ) }
    dend_10 { pt3dadd( -99.2188, -233.643, -71.7746, 0.81 ) }
    dend_10 { pt3dadd( -99.4845, -233.62, -71.7432, 1.03 ) }
    dend_10 { pt3dadd( -100.262, -233.483, -71.6347, 0.22 ) }
    dend_10 { pt3dadd( -101.204, -233.234, -71.4966, 0.22 ) }
    dend_10 { pt3dadd( -101.269, -233.211, -71.4822, 0.22 ) }
    dend_10 { pt3dadd( -102.39, -232.83, -71.235, 1.33 ) }
    dend_10 { pt3dadd( -102.888, -232.677, -71.1398, 1.55 ) }
    dend_10 { pt3dadd( -104.586, -232.256, -70.9128, 0.22 ) }
    dend_10 { pt3dadd( -105.074, -232.161, -70.8713, 0.59 ) }
    dend_10 { pt3dadd( -105.837, -232.049, -70.8648, 0.59 ) }
    dend_10 { pt3dadd( -106.652, -231.963, -70.9156, 0.44 ) }
    dend_10 { pt3dadd( -107.941, -231.888, -71.0958, 0.22 ) }
    dend_10 { pt3dadd( -108.75, -231.849, -71.2486, 1.03 ) }
    dend_10 { pt3dadd( -109.043, -231.844, -71.3165, 1.03 ) }
    dend_10 { pt3dadd( -110.28, -231.814, -71.5776, 0.22 ) }
    dend_10 { pt3dadd( -110.813, -231.778, -71.6753, 0.22 ) }
    dend_10 { pt3dadd( -110.873, -231.77, -71.6809, 0.22 ) }
    dend_10 { pt3dadd( -111.985, -231.533, -71.7531, 0.22 ) }
    dend_10 { pt3dadd( -112.99, -231.267, -71.8018, 0.22 ) }
    dend_10 { pt3dadd( -113.047, -231.25, -71.8043, 0.22 ) }
    dend_10 { pt3dadd( -114.094, -230.907, -71.9099, 1.11 ) }
    dend_10 { pt3dadd( -114.487, -230.782, -72.0035, 1.55 ) }
    dend_10 { pt3dadd( -115.563, -230.457, -72.3645, 0.22 ) }
    dend_10 { pt3dadd( -116.357, -230.257, -72.727, 0.22 ) }
    dend_10 { pt3dadd( -116.756, -230.162, -72.9369, 0.66 ) }
    dend_10 { pt3dadd( -117.91, -229.931, -73.5886, 0.22 ) }
    dend_10 { pt3dadd( -118.932, -229.755, -74.1921, 1.25 ) }
    dend_10 { pt3dadd( -119.317, -229.7, -74.4466, 1.47 ) }
    dend_10 { pt3dadd( -120.56, -229.615, -75.2677, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -120.619, -229.616, -75.3052, 0.22 ) }
    dend_10 { pt3dadd( -121.087, -229.66, -75.584, 1.03 ) }
    dend_10 { pt3dadd( -121.811, -229.785, -75.9656, 1.33 ) }
    dend_10 { pt3dadd( -123.67, -230.172, -76.9047, 0.22 ) }
    dend_10 { pt3dadd( -125.069, -230.501, -77.6152, 0.22 ) }
    dend_10 { pt3dadd( -126.137, -230.786, -78.1376, 0.22 ) }
    dend_10 { pt3dadd( -126.529, -230.903, -78.3269, 1.03 ) }
    dend_10 { pt3dadd( -127.024, -231.081, -78.5562, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -22.4969, 712.347, -68.5641, 0.88 ) }
    dend_63 { pt3dadd( -22.8974, 713.507, -68.4432, 0.88 ) }
    dend_63 { pt3dadd( -23.5114, 715.29, -68.2864, 0.15 ) }
    dend_63 { pt3dadd( -23.8605, 716.442, -68.2849, 0.15 ) }
    dend_63 { pt3dadd( -23.8971, 716.56, -68.2889, 0.15 ) }
    dend_63 { pt3dadd( -24.0881, 717.179, -68.3098, 1.03 ) }
    dend_63 { pt3dadd( -24.1741, 717.458, -68.3192, 1.4 ) }
    dend_63 { pt3dadd( -24.252, 717.718, -68.3496, 1.4 ) }
    dend_63 { pt3dadd( -24.9405, 720.015, -68.6498, 0.22 ) }
    dend_63 { pt3dadd( -25.4183, 721.728, -68.8835, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -22.4969, 712.347, -68.5641, 0.22 ) }
    dend_62 { pt3dadd( -21.5643, 714.269, -68.0556, 0.22 ) }
    dend_62 { pt3dadd( -21.1434, 715.149, -67.7824, 0.81 ) }
    dend_62 { pt3dadd( -21.0121, 715.426, -67.6896, 1.03 ) }
    dend_62 { pt3dadd( -20.8005, 715.898, -67.5287, 0.81 ) }
    dend_62 { pt3dadd( -19.8917, 717.999, -66.8117, 0.22 ) }
    dend_62 { pt3dadd( -19.7575, 718.329, -66.7105, 0.44 ) }
    dend_62 { pt3dadd( -19.5164, 719.066, -66.4931, 0.15 ) }
    dend_62 { pt3dadd( -19.5007, 719.12, -66.4798, 0.15 ) }
    dend_62 { pt3dadd( -19.303, 719.929, -66.3023, 1.03 ) }
    dend_62 { pt3dadd( -19.2837, 720.029, -66.2839, 1.03 ) }
    dend_62 { pt3dadd( -19.0367, 721.447, -66.1125, 0.15 ) }
    dend_62 { pt3dadd( -18.9786, 721.79, -66.0746, 0.29 ) }
    dend_62 { pt3dadd( -18.7095, 723.373, -65.9141, 0.15 ) }
    dend_62 { pt3dadd( -18.6097, 723.927, -65.8532, 0.66 ) }
    dend_62 { pt3dadd( -18.5957, 724.002, -65.8416, 0.66 ) }
    dend_62 { pt3dadd( -18.3544, 725.335, -65.5782, 0.15 ) }
    dend_62 { pt3dadd( -18.1842, 726.269, -65.3426, 0.66 ) }
    dend_62 { pt3dadd( -18.0305, 727.076, -65.1291, 0.22 ) }
    dend_62 { pt3dadd( -18.0138, 727.15, -65.1084, 0.22 ) }
    dend_62 { pt3dadd( -17.8214, 727.959, -64.8621, 0.74 ) }
    dend_62 { pt3dadd( -17.7789, 728.158, -64.7951, 0.74 ) }
    dend_62 { pt3dadd( -17.7617, 728.331, -64.7144, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 4.90365, 666.693, -29.5283, 0.37 ) }
    dend_52 { pt3dadd( 3.36602, 667.585, -29.5569, 0.37 ) }
    dend_52 { pt3dadd( 2.69999, 667.978, -29.5747, 0.37 ) }
    dend_52 { pt3dadd( 2.63304, 668.02, -29.5699, 0.37 ) }
    dend_52 { pt3dadd( 2.07386, 668.387, -29.4979, 0.37 ) }
    dend_52 { pt3dadd( 1.36299, 668.881, -29.3638, 0.88 ) }
    dend_52 { pt3dadd( 0.967727, 669.166, -29.2719, 0.88 ) }
    dend_52 { pt3dadd( 0.908163, 669.215, -29.248, 0.88 ) }
    dend_52 { pt3dadd( 0.0755657, 669.995, -28.7974, 0.88 ) }
    dend_52 { pt3dadd( 0.0392481, 670.034, -28.7734, 0.88 ) }
    dend_52 { pt3dadd( -0.239397, 670.399, -28.5418, 1.03 ) }
    dend_52 { pt3dadd( -0.292983, 670.47, -28.4998, 1.03 ) }
    dend_52 { pt3dadd( -0.569514, 670.792, -28.3191, 1.03 ) }
    dend_52 { pt3dadd( -0.653681, 670.882, -28.2714, 1.03 ) }
    dend_52 { pt3dadd( -1.16279, 671.386, -28.0295, 0.74 ) }
    dend_52 { pt3dadd( -1.83988, 672.02, -27.7229, 0.29 ) }
    dend_52 { pt3dadd( -2.52218, 672.633, -27.4059, 0.29 ) }
    dend_52 { pt3dadd( -3.21685, 673.278, -27.06, 0.29 ) }
    dend_52 { pt3dadd( -3.29972, 673.362, -27.0123, 0.29 ) }
    dend_52 { pt3dadd( -3.7004, 673.812, -26.74, 0.22 ) }
    dend_52 { pt3dadd( -3.7476, 673.875, -26.6972, 0.22 ) }
    dend_52 { pt3dadd( -4.03445, 674.396, -26.3086, 0.52 ) }
    dend_52 { pt3dadd( -4.15559, 675.027, -25.8061, 1.18 ) }
    dend_52 { pt3dadd( -4.16627, 675.545, -25.4026, 1.18 ) }
    dend_52 { pt3dadd( -4.16299, 675.599, -25.3615, 1.18 ) }
    dend_52 { pt3dadd( -4.10184, 675.88, -25.1441, 1.18 ) }
    dend_52 { pt3dadd( -4.08782, 675.924, -25.1093, 1.18 ) }
    dend_52 { pt3dadd( -3.69068, 676.614, -24.5582, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 4.90365, 666.693, -29.5283, 0.52 ) }
    dend_31 { pt3dadd( 5.74218, 667.89, -29.3911, 0.52 ) }
    dend_31 { pt3dadd( 6.47906, 668.96, -29.2379, 0.37 ) }
    dend_31 { pt3dadd( 6.51714, 669.016, -29.2293, 0.37 ) }
    dend_31 { pt3dadd( 7.01431, 669.768, -29.1028, 0.37 ) }
    dend_31 { pt3dadd( 7.36737, 670.309, -29.0075, 0.74 ) }
    dend_31 { pt3dadd( 7.89466, 671.147, -28.8541, 0.44 ) }
    dend_31 { pt3dadd( 8.50132, 672.281, -28.6241, 0.37 ) }
    dend_31 { pt3dadd( 8.52774, 672.332, -28.6129, 0.37 ) }
    dend_31 { pt3dadd( 8.72203, 672.708, -28.5273, 0.37 ) }
    dend_31 { pt3dadd( 8.75302, 672.769, -28.5126, 0.37 ) }
    dend_31 { pt3dadd( 9.22567, 673.78, -28.285, 0.88 ) }
    dend_31 { pt3dadd( 9.51021, 674.517, -28.1835, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -25.4183, 721.728, -68.8835, 0.22 ) }
    dend_65 { pt3dadd( -26.4804, 720.727, -70.0672, 0.22 ) }
    dend_65 { pt3dadd( -26.7623, 720.455, -70.4045, 1.25 ) }
    dend_65 { pt3dadd( -27.7892, 719.457, -71.6788, 0.22 ) }
    dend_65 { pt3dadd( -28.1556, 719.108, -72.1345, 0.96 ) }
    dend_65 { pt3dadd( -29.2128, 718.133, -73.4252, 0.22 ) }
    dend_65 { pt3dadd( -29.2563, 718.092, -73.4807, 0.22 ) }
    dend_65 { pt3dadd( -29.9718, 717.389, -74.475, 0.22 ) }
    dend_65 { pt3dadd( -29.9994, 717.359, -74.5179, 0.22 ) }
    dend_65 { pt3dadd( -30.2546, 717.047, -74.9747, 0.74 ) }
    dend_65 { pt3dadd( -30.3665, 716.905, -75.189, 0.88 ) }
    dend_65 { pt3dadd( -31.1447, 715.983, -76.4954, 0.22 ) }
    dend_65 { pt3dadd( -31.1733, 715.952, -76.5368, 0.22 ) }
    dend_65 { pt3dadd( -31.7629, 715.268, -77.4035, 0.22 ) }
    dend_65 { pt3dadd( -32.1235, 714.826, -77.9496, 0.22 ) }
    dend_65 { pt3dadd( -32.1483, 714.791, -77.9906, 0.22 ) }
    dend_65 { pt3dadd( -32.612, 714.112, -78.7759, 1.11 ) }
    dend_65 { pt3dadd( -33.1076, 713.622, -79.1825, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -25.4183, 721.728, -68.8835, 0.96 ) }
    dend_64 { pt3dadd( -25.617, 722.318, -69.0079, 0.96 ) }
    dend_64 { pt3dadd( -25.6384, 722.381, -69.0192, 0.96 ) }
    dend_64 { pt3dadd( -25.7476, 722.708, -69.0723, 1.18 ) }
    dend_64 { pt3dadd( -25.9613, 723.358, -69.1729, 0.88 ) }
    dend_64 { pt3dadd( -26.8764, 726.191, -69.6004, 0.15 ) }
    dend_64 { pt3dadd( -26.8973, 726.257, -69.61, 0.15 ) }
    dend_64 { pt3dadd( -27.3907, 727.853, -69.8517, 0.15 ) }
    dend_64 { pt3dadd( -27.7025, 728.915, -70.043, 0.96 ) }
    dend_64 { pt3dadd( -27.8287, 729.379, -70.1378, 1.33 ) }
    dend_64 { pt3dadd( -27.8461, 729.452, -70.1543, 1.33 ) }
    dend_64 { pt3dadd( -27.8807, 729.656, -70.2048, 1.33 ) }
    dend_64 { pt3dadd( -27.898, 729.775, -70.2373, 1.33 ) }
    dend_64 { pt3dadd( -28.1005, 731.533, -70.7502, 0.15 ) }
    dend_64 { pt3dadd( -28.1443, 731.946, -70.8617, 0.44 ) }
    dend_64 { pt3dadd( -28.1879, 732.35, -70.9658, 0.44 ) }
    dend_64 { pt3dadd( -28.3674, 733.799, -71.305, 0.22 ) }
    dend_64 { pt3dadd( -28.3885, 733.94, -71.3344, 0.22 ) }
    dend_64 { pt3dadd( -28.6101, 735.017, -71.514, 0.81 ) }
    dend_64 { pt3dadd( -28.8576, 735.977, -71.633, 0.22 ) }
    dend_64 { pt3dadd( -28.8932, 736.095, -71.6474, 0.22 ) }
    dend_64 { pt3dadd( -29.1504, 736.831, -71.7331, 1.18 ) }
    dend_64 { pt3dadd( -29.2959, 737.202, -71.7712, 1.33 ) }
    dend_64 { pt3dadd( -30.1689, 739.069, -72.0101, 0.22 ) }
    dend_64 { pt3dadd( -30.235, 739.186, -72.0271, 0.22 ) }
    dend_64 { pt3dadd( -30.5198, 739.646, -72.0958, 0.22 ) }
    dend_64 { pt3dadd( -30.9334, 740.244, -72.1867, 1.03 ) }
    dend_64 { pt3dadd( -31.2774, 740.694, -72.2611, 1.33 ) }
    dend_64 { pt3dadd( -32.2986, 741.929, -72.4963, 0.15 ) }
    dend_64 { pt3dadd( -32.8729, 742.519, -72.628, 0.15 ) }
    dend_64 { pt3dadd( -32.9211, 742.567, -72.6392, 0.15 ) }
    dend_64 { pt3dadd( -33.7024, 743.301, -72.8259, 0.15 ) }
    dend_64 { pt3dadd( -33.7539, 743.345, -72.8381, 0.15 ) }
    dend_64 { pt3dadd( -34.5108, 743.942, -73.0084, 1.03 ) }
    dend_64 { pt3dadd( -34.9713, 744.291, -73.089, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -3.69068, 676.614, -24.5582, 0.52 ) }
    dend_60 { pt3dadd( -3.83018, 678.325, -25.5867, 0.52 ) }
    dend_60 { pt3dadd( -3.86065, 678.698, -25.7754, 0.52 ) }
    dend_60 { pt3dadd( -3.864, 678.761, -25.806, 0.52 ) }
    dend_60 { pt3dadd( -3.89389, 679.641, -26.2274, 0.37 ) }
    dend_60 { pt3dadd( -3.89382, 679.704, -26.2574, 0.37 ) }
    dend_60 { pt3dadd( -3.83803, 680.611, -26.6997, 0.37 ) }
    dend_60 { pt3dadd( -3.72927, 681.383, -27.0103, 1.03 ) }
    dend_60 { pt3dadd( -3.61235, 682.025, -27.2726, 0.88 ) }
    dend_60 { pt3dadd( -3.59767, 682.096, -27.3026, 0.88 ) }
    dend_60 { pt3dadd( -3.44036, 682.822, -27.6041, 0.59 ) }
    dend_60 { pt3dadd( -3.14195, 684.472, -28.3618, 0.22 ) }
    dend_60 { pt3dadd( -2.98499, 685.545, -28.8658, 0.22 ) }
    dend_60 { pt3dadd( -2.97741, 685.605, -28.897, 0.22 ) }
    dend_60 { pt3dadd( -2.89439, 686.473, -29.3652, 0.88 ) }
    dend_60 { pt3dadd( -2.84726, 687.032, -29.6626, 1.11 ) }
    dend_60 { pt3dadd( -2.71177, 688.809, -30.5613, 0.29 ) }
    dend_60 { pt3dadd( -2.66113, 689.388, -30.8411, 0.22 ) }
    dend_60 { pt3dadd( -2.51342, 690.356, -31.3495, 0.22 ) }
    dend_60 { pt3dadd( -2.5006, 690.417, -31.3818, 0.22 ) }
    dend_60 { pt3dadd( -2.15586, 691.745, -32.0389, 0.22 ) }
    dend_60 { pt3dadd( -1.89778, 692.632, -32.4396, 1.33 ) }
    dend_60 { pt3dadd( -1.75836, 693.05, -32.6095, 1.33 ) }
    dend_60 { pt3dadd( -1.15227, 694.867, -33.3698, 0.22 ) }
    dend_60 { pt3dadd( -1.13231, 694.928, -33.3955, 0.22 ) }
    dend_60 { pt3dadd( -0.78612, 696.047, -33.8834, 0.22 ) }
    dend_60 { pt3dadd( -0.562542, 696.817, -34.2564, 0.81 ) }
    dend_60 { pt3dadd( -0.11854, 698.431, -35.0297, 0.22 ) }
    dend_60 { pt3dadd( 0.0939008, 699.202, -35.3713, 0.81 ) }
    dend_60 { pt3dadd( 0.11361, 699.265, -35.3948, 0.81 ) }
    dend_60 { pt3dadd( 0.210648, 699.549, -35.5058, 0.81 ) }
    dend_60 { pt3dadd( 0.67916, 700.72, -36.0022, 0.22 ) }
    dend_60 { pt3dadd( 1.0508, 701.555, -36.348, 1.4 ) }
    dend_60 { pt3dadd( 1.29728, 702.08, -36.5317, 1.77 ) }
    dend_60 { pt3dadd( 1.696, 702.834, -36.7827, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -3.69068, 676.614, -24.5582, 0.52 ) }
    dend_53 { pt3dadd( -4.28953, 677.629, -24.1779, 0.52 ) }
    dend_53 { pt3dadd( -4.34801, 677.736, -24.1467, 0.52 ) }
    dend_53 { pt3dadd( -4.60766, 678.232, -24.0328, 0.81 ) }
    dend_53 { pt3dadd( -4.64281, 678.302, -24.02, 0.81 ) }
    dend_53 { pt3dadd( -4.79673, 678.628, -23.9703, 0.59 ) }
    dend_53 { pt3dadd( -5.43631, 680.056, -23.7505, 0.29 ) }
    dend_53 { pt3dadd( -5.49137, 680.19, -23.7361, 0.29 ) }
    dend_53 { pt3dadd( -5.75606, 680.847, -23.6306, 1.03 ) }
    dend_53 { pt3dadd( -6.00751, 681.502, -23.4812, 0.96 ) }
    dend_53 { pt3dadd( -6.26744, 682.189, -23.2803, 0.59 ) }
    dend_53 { pt3dadd( -6.5113, 682.871, -23.0178, 0.59 ) }
    dend_53 { pt3dadd( -6.54738, 682.978, -22.962, 0.59 ) }
    dend_53 { pt3dadd( -6.74611, 683.684, -22.5428, 0.59 ) }
    dend_53 { pt3dadd( -6.82968, 684.318, -22.1217, 0.29 ) }
    dend_53 { pt3dadd( -6.8302, 684.365, -22.0882, 0.29 ) }
    dend_53 { pt3dadd( -6.80527, 684.804, -21.7868, 0.29 ) }
    dend_53 { pt3dadd( -6.79688, 684.902, -21.7259, 0.29 ) }
    dend_53 { pt3dadd( -6.76839, 685.562, -21.3658, 0.59 ) }
    dend_53 { pt3dadd( -6.77945, 686.686, -20.8673, 0.22 ) }
    dend_53 { pt3dadd( -6.78474, 686.748, -20.8425, 0.22 ) }
    dend_53 { pt3dadd( -6.95987, 687.438, -20.5991, 0.22 ) }
    dend_53 { pt3dadd( -7.04377, 687.645, -20.536, 0.22 ) }
    dend_53 { pt3dadd( -7.39653, 688.125, -20.4163, 0.22 ) }
    dend_53 { pt3dadd( -7.91036, 688.375, -20.4001, 0.66 ) }
    dend_53 { pt3dadd( -8.05441, 688.404, -20.4149, 0.66 ) }
    dend_53 { pt3dadd( -8.87324, 688.499, -20.5445, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 9.51021, 674.517, -28.1835, 0.29 ) }
    dend_33 { pt3dadd( 10.0259, 675.571, -27.9088, 0.29 ) }
    dend_33 { pt3dadd( 10.0839, 675.703, -27.8821, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( 10.4061, 676.475, -27.7531, 0.88 ) }
    dend_33 { pt3dadd( 10.6737, 677.148, -27.6556, 1.25 ) }
    dend_33 { pt3dadd( 10.8848, 677.695, -27.5826, 1.25 ) }
    dend_33 { pt3dadd( 11.2054, 678.52, -27.4816, 0.44 ) }
    dend_33 { pt3dadd( 11.5478, 679.45, -27.3984, 0.29 ) }
    dend_33 { pt3dadd( 11.778, 680.073, -27.3537, 0.88 ) }
    dend_33 { pt3dadd( 11.9293, 680.489, -27.3384, 1.25 ) }
    dend_33 { pt3dadd( 11.9526, 680.553, -27.3388, 1.25 ) }
    dend_33 { pt3dadd( 12.1418, 681.062, -27.3496, 0.96 ) }
    dend_33 { pt3dadd( 12.1958, 681.203, -27.3516, 0.96 ) }
    dend_33 { pt3dadd( 12.4227, 681.776, -27.3615, 0.74 ) }
    dend_33 { pt3dadd( 12.8715, 682.905, -27.3837, 0.29 ) }
    dend_33 { pt3dadd( 13.1991, 683.722, -27.4012, 0.52 ) }
    dend_33 { pt3dadd( 13.2749, 683.917, -27.4057, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 9.51021, 674.517, -28.1835, 0.22 ) }
    dend_32 { pt3dadd( 8.60717, 675.343, -28.0607, 0.22 ) }
    dend_32 { pt3dadd( 8.55467, 675.388, -28.0558, 0.22 ) }
    dend_32 { pt3dadd( 7.95487, 675.884, -28.0133, 0.22 ) }
    dend_32 { pt3dadd( 7.90722, 675.923, -28.01, 0.22 ) }
    dend_32 { pt3dadd( 7.00991, 676.664, -27.9464, 0.22 ) }
    dend_32 { pt3dadd( 6.95663, 676.709, -27.9426, 0.22 ) }
    dend_32 { pt3dadd( 6.1722, 677.441, -27.9426, 0.22 ) }
    dend_32 { pt3dadd( 5.82884, 677.744, -27.9426, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -8.87324, 688.499, -20.5445, 0.22 ) }
    dend_55 { pt3dadd( -8.63866, 689.641, -20.6958, 0.22 ) }
    dend_55 { pt3dadd( -8.63314, 689.783, -20.6224, 0.22 ) }
    dend_55 { pt3dadd( -8.72391, 690.403, -20.1563, 0.22 ) }
    dend_55 { pt3dadd( -8.84724, 690.73, -19.8156, 0.37 ) }
    dend_55 { pt3dadd( -9.12427, 691.298, -19.1303, 0.37 ) }
    dend_55 { pt3dadd( -9.15123, 691.344, -19.0537, 0.37 ) }
    dend_55 { pt3dadd( -9.69235, 692.21, -17.2552, 1.18 ) }
    dend_55 { pt3dadd( -9.90055, 692.446, -16.6381, 1.18 ) }
    dend_55 { pt3dadd( -10.2755, 692.761, -15.6028, 0.96 ) }
    dend_55 { pt3dadd( -10.3742, 692.817, -15.3692, 0.96 ) }
    dend_55 { pt3dadd( -11.4217, 693.259, -13.1871, 0.52 ) }
    dend_55 { pt3dadd( -11.4762, 693.279, -13.0822, 0.52 ) }
    dend_55 { pt3dadd( -11.83, 693.409, -12.441, 0.52 ) }
    dend_55 { pt3dadd( -11.9115, 693.439, -12.2838, 0.52 ) }
    dend_55 { pt3dadd( -12.4002, 693.609, -11.394, 0.74 ) }
    dend_55 { pt3dadd( -12.8022, 693.742, -10.7595, 0.88 ) }
    dend_55 { pt3dadd( -12.8519, 693.754, -10.7081, 0.88 ) }
    dend_55 { pt3dadd( -13.6196, 694.007, -9.88789, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -8.87324, 688.499, -20.5445, 0.22 ) }
    dend_54 { pt3dadd( -9.72574, 687.924, -20.7222, 0.22 ) }
    dend_54 { pt3dadd( -9.80691, 687.869, -20.7391, 0.22 ) }
    dend_54 { pt3dadd( -10.83, 687.179, -20.9522, 0.22 ) }
    dend_54 { pt3dadd( -10.8948, 687.135, -20.9657, 0.22 ) }
    dend_54 { pt3dadd( -11.5426, 686.698, -21.1007, 0.66 ) }
    dend_54 { pt3dadd( -11.857, 686.485, -21.1662, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 13.2749, 683.917, -27.4057, 0.15 ) }
    dend_51 { pt3dadd( 14.5223, 683.781, -27.4374, 0.15 ) }
    dend_51 { pt3dadd( 15.2665, 683.535, -27.5007, 0.44 ) }
    dend_51 { pt3dadd( 15.3303, 683.507, -27.5094, 0.44 ) }
    dend_51 { pt3dadd( 15.9841, 683.177, -27.6483, 0.15 ) }
    dend_51 { pt3dadd( 16.4853, 682.921, -27.7671, 0.96 ) }
    dend_51 { pt3dadd( 17.0335, 682.649, -27.8954, 0.96 ) }
    dend_51 { pt3dadd( 18.0805, 682.066, -28.1761, 0.22 ) }
    dend_51 { pt3dadd( 18.2399, 681.978, -28.2217, 0.22 ) }
    dend_51 { pt3dadd( 19.0922, 681.538, -28.4705, 0.52 ) }
    dend_51 { pt3dadd( 19.6897, 681.246, -28.6468, 0.52 ) }
    dend_51 { pt3dadd( 20.4258, 680.943, -28.8582, 0.59 ) }
    dend_51 { pt3dadd( 20.6225, 680.883, -28.9208, 0.59 ) }
    dend_51 { pt3dadd( 21.53, 680.713, -29.2076, 0.15 ) }
    dend_51 { pt3dadd( 21.5966, 680.702, -29.2287, 0.15 ) }
    dend_51 { pt3dadd( 21.9564, 680.644, -29.4166, 0.15 ) }
    dend_51 { pt3dadd( 22.095, 680.619, -29.5131, 0.15 ) }
    dend_51 { pt3dadd( 22.9195, 680.488, -30.1768, 0.88 ) }
    dend_51 { pt3dadd( 23.2896, 680.434, -30.4935, 1.18 ) }
    dend_51 { pt3dadd( 23.7427, 680.391, -30.9237, 1.18 ) }
    dend_51 { pt3dadd( 25.2214, 680.296, -32.3861, 0.22 ) }
    dend_51 { pt3dadd( 25.2789, 680.292, -32.4424, 0.22 ) }
    dend_51 { pt3dadd( 25.5792, 680.263, -32.7206, 0.37 ) }
    dend_51 { pt3dadd( 25.641, 680.256, -32.7747, 0.37 ) }
    dend_51 { pt3dadd( 26.5444, 680.193, -33.5705, 0.22 ) }
    dend_51 { pt3dadd( 26.5918, 680.188, -33.6082, 0.22 ) }
    dend_51 { pt3dadd( 27.2577, 680.158, -34.0204, 0.22 ) }
    dend_51 { pt3dadd( 27.6102, 680.132, -34.2394, 0.74 ) }
    dend_51 { pt3dadd( 27.9866, 680.091, -34.4721, 1.03 ) }
    dend_51 { pt3dadd( 28.0658, 680.081, -34.5192, 1.03 ) }
    dend_51 { pt3dadd( 29.5907, 679.854, -35.3356, 0.37 ) }
    dend_51 { pt3dadd( 30.4349, 679.745, -35.8209, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 13.2749, 683.917, -27.4057, 0.29 ) }
    dend_34 { pt3dadd( 13.6432, 685.114, -27.4483, 0.29 ) }
    dend_34 { pt3dadd( 13.9058, 685.851, -27.475, 0.29 ) }
    dend_34 { pt3dadd( 13.9304, 685.913, -27.4772, 0.29 ) }
    dend_34 { pt3dadd( 14.2589, 686.744, -27.5063, 0.15 ) }
    dend_34 { pt3dadd( 14.6025, 687.614, -27.5367, 1.18 ) }
    dend_34 { pt3dadd( 14.7969, 688.105, -27.5539, 1.77 ) }
    dend_34 { pt3dadd( 15.1161, 688.785, -27.5838, 1.18 ) }
    dend_34 { pt3dadd( 15.3544, 689.243, -27.6062, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -13.6196, 694.007, -9.88789, 0.59 ) }
    dend_57 { pt3dadd( -13.6717, 694.776, -9.66712, 0.59 ) }
    dend_57 { pt3dadd( -13.677, 694.842, -9.65278, 0.59 ) }
    dend_57 { pt3dadd( -13.7139, 695.32, -9.57666, 0.59 ) }
    dend_57 { pt3dadd( -13.7157, 695.396, -9.56804, 0.59 ) }
    dend_57 { pt3dadd( -13.6944, 695.706, -9.55414, 0.59 ) }
    dend_57 { pt3dadd( -13.656, 695.89, -9.46559, 0.59 ) }
    dend_57 { pt3dadd( -13.59, 696.063, -9.19561, 0.29 ) }
    dend_57 { pt3dadd( -13.5207, 696.279, -8.82521, 0.22 ) }
    dend_57 { pt3dadd( -13.465, 696.565, -8.32326, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( -13.4487, 696.84, -7.84525, 0.74 ) }
    dend_57 { pt3dadd( -13.4841, 698.126, -5.57392, 0.74 ) }
    dend_57 { pt3dadd( -13.6371, 699.513, -3.13107, 0.88 ) }
    dend_57 { pt3dadd( -13.7363, 700.023, -2.22123, 0.22 ) }
    dend_57 { pt3dadd( -13.8601, 700.512, -1.3676, 0.22 ) }
    dend_57 { pt3dadd( -13.9823, 700.889, -0.778159, 0.22 ) }
    dend_57 { pt3dadd( -14.0016, 700.937, -0.716541, 0.22 ) }
    dend_57 { pt3dadd( -14.1572, 701.271, -0.521683, 0.22 ) }
    dend_57 { pt3dadd( -14.1871, 701.34, -0.503857, 0.22 ) }
    dend_57 { pt3dadd( -14.3953, 702.015, -0.287763, 0.22 ) }
    dend_57 { pt3dadd( -14.6195, 702.951, 0.0395053, 0.81 ) }
    dend_57 { pt3dadd( -14.6358, 703.003, 0.057693, 0.81 ) }
    dend_57 { pt3dadd( -14.8983, 703.596, 0.240303, 0.96 ) }
    dend_57 { pt3dadd( -14.9443, 703.687, 0.264456, 0.96 ) }
    dend_57 { pt3dadd( -15.1792, 704.125, 0.360588, 0.96 ) }
    dend_57 { pt3dadd( -15.54, 704.785, 0.47114, 0.44 ) }
    dend_57 { pt3dadd( -15.8031, 705.327, 0.53433, 0.44 ) }
    dend_57 { pt3dadd( -16.1757, 706.19, 0.621338, 0.22 ) }
    dend_57 { pt3dadd( -16.502, 707.056, 0.705996, 0.37 ) }
    dend_57 { pt3dadd( -16.7928, 707.909, 0.801489, 0.37 ) }
    dend_57 { pt3dadd( -17.0143, 708.646, 0.911057, 0.37 ) }
    dend_57 { pt3dadd( -17.2485, 709.52, 1.10133, 0.22 ) }
    dend_57 { pt3dadd( -17.2635, 709.583, 1.11969, 0.22 ) }
    dend_57 { pt3dadd( -17.389, 710.005, 1.34219, 0.22 ) }
    dend_57 { pt3dadd( -17.4249, 710.09, 1.42958, 0.22 ) }
    dend_57 { pt3dadd( -17.7272, 710.637, 2.3594, 0.15 ) }
    dend_57 { pt3dadd( -17.8709, 710.932, 2.92228, 0.44 ) }
    dend_57 { pt3dadd( -17.8829, 710.96, 2.9731, 0.44 ) }
    dend_57 { pt3dadd( -18.1953, 711.837, 4.26707, 0.88 ) }
    dend_57 { pt3dadd( -18.4013, 712.535, 5.09952, 0.88 ) }
    dend_57 { pt3dadd( -18.4417, 712.754, 5.31267, 0.88 ) }
    dend_57 { pt3dadd( -18.5384, 713.81, 6.15829, 0.37 ) }
    dend_57 { pt3dadd( -18.5431, 714.448, 6.54738, 0.22 ) }
    dend_57 { pt3dadd( -18.5135, 715.162, 6.89868, 0.22 ) }
    dend_57 { pt3dadd( -18.451, 715.56, 7.04352, 0.59 ) }
    dend_57 { pt3dadd( -18.2183, 716.629, 7.41138, 0.44 ) }
    dend_57 { pt3dadd( -18.1907, 716.707, 7.44468, 0.44 ) }
    dend_57 { pt3dadd( -17.7629, 717.402, 7.89511, 0.29 ) }
    dend_57 { pt3dadd( -17.6971, 717.46, 7.94387, 0.29 ) }
    dend_57 { pt3dadd( -16.832, 717.825, 8.32907, 0.29 ) }
    dend_57 { pt3dadd( -16.7781, 717.84, 8.35051, 0.29 ) }
    dend_57 { pt3dadd( -15.9492, 718.113, 8.71412, 0.81 ) }
    dend_57 { pt3dadd( -15.8614, 718.156, 8.75909, 0.81 ) }
    dend_57 { pt3dadd( -15.3624, 718.521, 9.07934, 0.81 ) }
    dend_57 { pt3dadd( -14.6604, 719.276, 9.62034, 0.29 ) }
    dend_57 { pt3dadd( -13.9864, 720.256, 10.2371, 0.29 ) }
    dend_57 { pt3dadd( -13.2125, 721.638, 10.9729, 0.52 ) }
    dend_57 { pt3dadd( -12.8285, 722.505, 11.3649, 1.33 ) }
    dend_57 { pt3dadd( -12.4069, 723.618, 11.8433, 0.22 ) }
    dend_57 { pt3dadd( -12.2384, 724.211, 12.0775, 0.74 ) }
    dend_57 { pt3dadd( -12.2108, 724.357, 12.1267, 0.74 ) }
    dend_57 { pt3dadd( -12.0722, 725.202, 12.2921, 0.37 ) }
    dend_57 { pt3dadd( -11.9637, 725.689, 12.3303, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -13.6196, 694.007, -9.88789, 0.22 ) }
    dend_56 { pt3dadd( -14.5399, 694.528, -9.66817, 0.22 ) }
    dend_56 { pt3dadd( -15.1336, 694.855, -9.53121, 0.15 ) }
    dend_56 { pt3dadd( -15.9151, 695.27, -9.37404, 0.15 ) }
    dend_56 { pt3dadd( -16.8552, 695.77, -9.18498, 0.52 ) }
    dend_56 { pt3dadd( -17.2661, 695.988, -9.10236, 0.52 ) }
    dend_56 { pt3dadd( -17.84, 696.293, -8.98693, 0.52 ) }
    dend_56 { pt3dadd( -18.0077, 696.38, -8.95099, 0.52 ) }
    dend_56 { pt3dadd( -18.968, 696.856, -8.73455, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 15.3544, 689.243, -27.6062, 0.22 ) }
    dend_50 { pt3dadd( 16.6617, 687.822, -27.9709, 0.22 ) }
    dend_50 { pt3dadd( 17.0396, 687.352, -28.0737, 0.29 ) }
    dend_50 { pt3dadd( 17.719, 686.379, -28.2613, 0.22 ) }
    dend_50 { pt3dadd( 18.2739, 685.584, -28.4146, 0.44 ) }
    dend_50 { pt3dadd( 18.8096, 684.817, -28.5626, 0.22 ) }
    dend_50 { pt3dadd( 18.8482, 684.762, -28.5733, 0.22 ) }
    dend_50 { pt3dadd( 19.0044, 684.392, -28.5733, 0.44 ) }
    dend_50 { pt3dadd( 19.1135, 684.002, -28.5733, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 15.3544, 689.243, -27.6062, 0.29 ) }
    dend_35 { pt3dadd( 15.4533, 689.702, -27.5514, 0.29 ) }
    dend_35 { pt3dadd( 15.7283, 690.76, -27.3282, 0.29 ) }
    dend_35 { pt3dadd( 16.0389, 691.841, -27.049, 0.29 ) }
    dend_35 { pt3dadd( 16.0708, 691.939, -27.0213, 0.29 ) }
    dend_35 { pt3dadd( 16.4503, 692.915, -26.7218, 0.29 ) }
    dend_35 { pt3dadd( 16.5305, 693.098, -26.6624, 0.81 ) }
    dend_35 { pt3dadd( 16.9763, 693.985, -26.3551, 0.66 ) }
    dend_35 { pt3dadd( 17.0001, 694.025, -26.341, 0.66 ) }
    dend_35 { pt3dadd( 17.31, 694.515, -26.1644, 0.52 ) }
    dend_35 { pt3dadd( 18.1175, 695.787, -25.7441, 0.29 ) }
    dend_35 { pt3dadd( 18.6265, 696.609, -25.4481, 0.29 ) }
    dend_35 { pt3dadd( 18.8818, 697.059, -25.2969, 1.33 ) }
    dend_35 { pt3dadd( 19.1758, 697.62, -25.128, 1.55 ) }
    dend_35 { pt3dadd( 19.2051, 697.681, -25.1099, 1.55 ) }
    dend_35 { pt3dadd( 19.516, 698.386, -24.8644, 1.25 ) }
    dend_35 { pt3dadd( 20.1179, 699.854, -24.332, 0.37 ) }
    dend_35 { pt3dadd( 20.4575, 700.729, -23.9995, 0.29 ) }
    dend_35 { pt3dadd( 20.4798, 700.788, -23.9753, 0.29 ) }
    dend_35 { pt3dadd( 20.8253, 701.734, -23.5675, 0.29 ) }
    dend_35 { pt3dadd( 21.4389, 703.419, -22.8265, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -11.9637, 725.689, 12.3303, 0.44 ) }
    dend_59 { pt3dadd( -11.7032, 724.456, 12.2113, 0.44 ) }
    dend_59 { pt3dadd( -11.4714, 723.36, 12.1054, 0.37 ) }
    dend_59 { pt3dadd( -11.3106, 722.598, 12.0318, 0.22 ) }
    dend_59 { pt3dadd( -11.2967, 722.533, 12.0255, 0.22 ) }
    dend_59 { pt3dadd( -11.0363, 721.3, 11.9064, 0.22 ) }
    dend_59 { pt3dadd( -11.0224, 721.235, 11.9001, 0.22 ) }
    dend_59 { pt3dadd( -9.58208, 711.873, 12.7999, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -11.9637, 725.689, 12.3303, 0.74 ) }
    dend_58 { pt3dadd( -12.1544, 726.286, 12.3008, 0.74 ) }
    dend_58 { pt3dadd( -12.3113, 727.111, 12.2638, 0.22 ) }
    dend_58 { pt3dadd( -12.3238, 727.177, 12.2596, 0.22 ) }
    dend_58 { pt3dadd( -12.4459, 727.875, 12.2371, 0.22 ) }
    dend_58 { pt3dadd( -12.4826, 728.092, 12.2341, 0.22 ) }
    dend_58 { pt3dadd( -12.5927, 728.787, 12.2408, 0.22 ) }
    dend_58 { pt3dadd( -12.7296, 729.708, 12.2782, 1.4 ) }
    dend_58 { pt3dadd( -12.8641, 730.939, 12.395, 0.29 ) }
    dend_58 { pt3dadd( -12.9329, 731.742, 12.5252, 0.29 ) }
    dend_58 { pt3dadd( -12.9387, 731.835, 12.546, 0.29 ) }
    dend_58 { pt3dadd( -13.0036, 732.731, 12.7945, 0.29 ) }
    dend_58 { pt3dadd( -13.0089, 732.794, 12.8167, 0.29 ) }
    dend_58 { pt3dadd( -13.1053, 733.822, 13.2836, 0.81 ) }
    dend_58 { pt3dadd( -13.1442, 734.43, 13.6179, 1.11 ) }
    dend_58 { pt3dadd( -13.1475, 734.488, 13.6505, 1.11 ) }
    dend_58 { pt3dadd( -13.203, 735.244, 14.043, 1.11 ) }
    dend_58 { pt3dadd( -13.2133, 735.346, 14.0943, 1.11 ) }
    dend_58 { pt3dadd( -13.2956, 735.846, 14.303, 1.11 ) }
    dend_58 { pt3dadd( -13.3079, 735.898, 14.3242, 1.11 ) }
    dend_58 { pt3dadd( -13.4704, 736.56, 14.576, 0.22 ) }
    dend_58 { pt3dadd( -13.6489, 737.254, 14.8441, 0.29 ) }
    dend_58 { pt3dadd( -13.6658, 737.315, 14.8681, 0.29 ) }
    dend_58 { pt3dadd( -13.8582, 737.968, 15.1074, 0.22 ) }
    dend_58 { pt3dadd( -14.2255, 739.078, 15.4903, 0.81 ) }
    dend_58 { pt3dadd( -16.5758, 748.115, 17.4851, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 21.4389, 703.419, -22.8265, 1.84 ) }
    dend_37 { pt3dadd( 22.3689, 704.008, -23.0065, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 21.4389, 703.419, -22.8265, 0.22 ) }
    dend_36 { pt3dadd( 21.4051, 705.228, -23.1898, 0.22 ) }
    dend_36 { pt3dadd( 21.4056, 706.203, -23.3544, 0.22 ) }
    dend_36 { pt3dadd( 21.406, 706.26, -23.363, 0.22 ) }
    dend_36 { pt3dadd( 21.4177, 707.418, -23.5118, 0.59 ) }
    dend_36 { pt3dadd( 21.4359, 708.603, -23.65, 0.22 ) }
    dend_36 { pt3dadd( 21.4576, 709.497, -23.7433, 0.66 ) }
    dend_36 { pt3dadd( 21.4665, 709.565, -23.7392, 0.66 ) }
    dend_36 { pt3dadd( 21.5071, 709.773, -23.7152, 0.66 ) }
    dend_36 { pt3dadd( 21.6949, 710.59, -23.5816, 0.15 ) }
    dend_36 { pt3dadd( 21.7119, 710.654, -23.5669, 0.15 ) }
    dend_36 { pt3dadd( 21.8752, 711.21, -23.403, 1.18 ) }
    dend_36 { pt3dadd( 22.3413, 712.509, -22.9537, 0.29 ) }
    dend_36 { pt3dadd( 22.4979, 712.91, -22.804, 0.52 ) }
    dend_36 { pt3dadd( 22.5236, 712.969, -22.7795, 0.52 ) }
    dend_36 { pt3dadd( 22.6494, 713.207, -22.6577, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 22.3689, 704.008, -23.0065, 0.15 ) }
    dend_39 { pt3dadd( 22.8747, 705.67, -22.5471, 0.15 ) }
    dend_39 { pt3dadd( 23.1122, 706.492, -22.3454, 0.15 ) }
    dend_39 { pt3dadd( 23.2745, 707.053, -22.2075, 0.29 ) }
    dend_39 { pt3dadd( 23.3319, 707.251, -22.1588, 0.29 ) }
    dend_39 { pt3dadd( 23.4768, 707.753, -22.0357, 0.15 ) }
    dend_39 { pt3dadd( 23.5905, 708.146, -21.9391, 0.29 ) }
    dend_39 { pt3dadd( 23.6063, 708.247, -21.9391, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 22.3689, 704.008, -23.0065, 0.29 ) }
    dend_38 { pt3dadd( 22.9575, 702.666, -22.19, 0.29 ) }
    dend_38 { pt3dadd( 23.1335, 702.216, -21.9072, 0.29 ) }
    dend_38 { pt3dadd( 23.4065, 701.456, -21.4353, 0.22 ) }
    dend_38 { pt3dadd( 23.5089, 701.198, -21.2732, 0.52 ) }
    dend_38 { pt3dadd( 23.9262, 700.17, -20.6255, 0.22 ) }
    dend_38 { pt3dadd( 23.9436, 700.123, -20.5958, 0.22 ) }
    dend_38 { pt3dadd( 24.0487, 699.767, -20.377, 0.88 ) }
    dend_38 { pt3dadd( 24.1171, 699.545, -20.2128, 1.03 ) }
    dend_38 { pt3dadd( 24.4089, 698.376, -19.2417, 0.22 ) }
    dend_38 { pt3dadd( 24.4181, 698.314, -19.192, 0.22 ) }
    dend_38 { pt3dadd( 24.5294, 697.19, -18.2792, 0.22 ) }
    dend_38 { pt3dadd( 24.5323, 697.146, -18.2417, 0.22 ) }
    dend_38 { pt3dadd( 24.6316, 696.145, -17.3798, 0.22 ) }
    dend_38 { pt3dadd( 24.7019, 695.499, -16.8077, 0.22 ) }
    dend_38 { pt3dadd( 24.7923, 694.749, -16.0676, 0.22 ) }
    dend_38 { pt3dadd( 24.9989, 693.837, -15.097, 0.29 ) }
    dend_38 { pt3dadd( 25.0263, 693.774, -15.026, 0.29 ) }
    dend_38 { pt3dadd( 25.672, 692.81, -13.9808, 0.15 ) }
    dend_38 { pt3dadd( 25.7034, 692.775, -13.9446, 0.15 ) }
    dend_38 { pt3dadd( 26.7055, 691.94, -13.0895, 0.96 ) }
    dend_38 { pt3dadd( 27.0229, 691.717, -12.865, 0.96 ) }
    dend_38 { pt3dadd( 28.1515, 690.943, -12.1573, 0.22 ) }
    dend_38 { pt3dadd( 29.0783, 690.322, -11.6044, 0.22 ) }
    dend_38 { pt3dadd( 29.1242, 690.292, -11.5792, 0.22 ) }
    dend_38 { pt3dadd( 30.0339, 689.719, -11.1371, 0.22 ) }
    dend_38 { pt3dadd( 31.4756, 688.836, -10.598, 0.22 ) }
    dend_38 { pt3dadd( 32.099, 688.439, -10.3507, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 23.6063, 708.247, -21.9391, 0.37 ) }
    dend_41 { pt3dadd( 23.8133, 709.402, -21.6797, 0.37 ) }
    dend_41 { pt3dadd( 23.825, 709.467, -21.6688, 0.37 ) }
    dend_41 { pt3dadd( 23.8859, 709.863, -21.6201, 0.22 ) }
    dend_41 { pt3dadd( 24.0024, 710.737, -21.5657, 0.22 ) }
    dend_41 { pt3dadd( 24.0501, 711.2, -21.5518, 0.66 ) }
    dend_41 { pt3dadd( 24.058, 711.277, -21.5495, 0.66 ) }
    dend_41 { pt3dadd( 24.1368, 712.08, -21.5881, 0.52 ) }
    dend_41 { pt3dadd( 24.1968, 712.772, -21.6249, 0.52 ) }
    dend_41 { pt3dadd( 24.2475, 713.603, -21.6775, 1.33 ) }
    dend_41 { pt3dadd( 24.2698, 714.296, -21.7326, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 23.6063, 708.247, -21.9391, 0.29 ) }
    dend_40 { pt3dadd( 24.6218, 708.277, -21.4833, 0.29 ) }
    dend_40 { pt3dadd( 24.6768, 708.283, -21.4605, 0.29 ) }
    dend_40 { pt3dadd( 26.2822, 708.537, -20.8144, 0.66 ) }
    dend_40 { pt3dadd( 27.3182, 708.725, -20.3972, 0.15 ) }
    dend_40 { pt3dadd( 27.8563, 708.826, -20.1852, 0.88 ) }
    dend_40 { pt3dadd( 28.4398, 708.926, -19.9818, 0.88 ) }
    dend_40 { pt3dadd( 29.3296, 709.083, -19.6846, 0.22 ) }
    dend_40 { pt3dadd( 29.3869, 709.092, -19.6699, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( 30.1282, 709.21, -19.5738, 0.81 ) }
    dend_40 { pt3dadd( 30.4449, 709.294, -19.5456, 0.81 ) }
    dend_40 { pt3dadd( 31.4778, 709.615, -19.4682, 0.22 ) }
    dend_40 { pt3dadd( 31.7602, 709.698, -19.4536, 0.96 ) }
    dend_40 { pt3dadd( 31.8274, 709.719, -19.4524, 0.96 ) }
    dend_40 { pt3dadd( 32.3828, 709.909, -19.4686, 0.52 ) }
    dend_40 { pt3dadd( 33.3189, 710.215, -19.4608, 0.22 ) }
    dend_40 { pt3dadd( 33.4146, 710.245, -19.4531, 0.22 ) }
    dend_40 { pt3dadd( 33.7114, 710.327, -19.404, 0.22 ) }
    dend_40 { pt3dadd( 33.802, 710.346, -19.3872, 0.22 ) }
    dend_40 { pt3dadd( 34.663, 710.489, -19.2176, 0.66 ) }
    dend_40 { pt3dadd( 35.9024, 710.651, -18.9647, 0.15 ) }
    dend_40 { pt3dadd( 35.9609, 710.656, -18.9528, 0.15 ) }
    dend_40 { pt3dadd( 36.761, 710.712, -18.8241, 0.15 ) }
    dend_40 { pt3dadd( 37.3414, 710.747, -18.7226, 0.74 ) }
    dend_40 { pt3dadd( 37.5088, 710.757, -18.6932, 0.74 ) }
    dend_40 { pt3dadd( 37.9995, 710.799, -18.6077, 0.74 ) }
    dend_40 { pt3dadd( 38.0687, 710.804, -18.5985, 0.74 ) }
    dend_40 { pt3dadd( 39.1355, 710.867, -18.4542, 0.22 ) }
    dend_40 { pt3dadd( 40.649, 710.908, -18.233, 0.66 ) }
    dend_40 { pt3dadd( 41.0226, 710.909, -18.1721, 0.66 ) }
    dend_40 { pt3dadd( 41.102, 710.908, -18.1581, 0.66 ) }
    dend_40 { pt3dadd( 41.7417, 710.88, -18.0316, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 24.2698, 714.296, -21.7326, 0.44 ) }
    dend_43 { pt3dadd( 24.1223, 715.462, -21.1859, 0.44 ) }
    dend_43 { pt3dadd( 24.0939, 716.276, -20.7588, 0.29 ) }
    dend_43 { pt3dadd( 24.1038, 717.077, -20.3223, 0.29 ) }
    dend_43 { pt3dadd( 24.1736, 718.336, -19.639, 0.81 ) }
    dend_43 { pt3dadd( 24.2163, 718.781, -19.4024, 1.18 ) }
    dend_43 { pt3dadd( 24.2419, 718.993, -19.292, 1.18 ) }
    dend_43 { pt3dadd( 24.5305, 720.174, -18.6937, 0.15 ) }
    dend_43 { pt3dadd( 24.577, 720.3, -18.6272, 0.15 ) }
    dend_43 { pt3dadd( 24.7628, 720.673, -18.4376, 0.66 ) }
    dend_43 { pt3dadd( 24.9471, 721.008, -18.3167, 0.96 ) }
    dend_43 { pt3dadd( 24.9733, 721.068, -18.2958, 0.96 ) }
    dend_43 { pt3dadd( 25.0317, 721.267, -18.2131, 0.96 ) }
    dend_43 { pt3dadd( 25.1909, 721.955, -17.8371, 0.29 ) }
    dend_43 { pt3dadd( 25.2188, 722.076, -17.7603, 0.29 ) }
    dend_43 { pt3dadd( 25.3425, 722.592, -17.4007, 0.29 ) }
    dend_43 { pt3dadd( 25.5655, 723.508, -16.7374, 0.37 ) }
    dend_43 { pt3dadd( 25.7399, 724.235, -16.2045, 0.52 ) }
    dend_43 { pt3dadd( 25.9991, 725.342, -15.3775, 0.96 ) }
    dend_43 { pt3dadd( 26.0147, 725.404, -15.3326, 0.96 ) }
    dend_43 { pt3dadd( 26.1979, 726.018, -14.9124, 1.18 ) }
    dend_43 { pt3dadd( 26.2658, 726.21, -14.7981, 1.18 ) }
    dend_43 { pt3dadd( 26.3931, 726.539, -14.6809, 1.18 ) }
    dend_43 { pt3dadd( 26.428, 726.633, -14.6626, 1.18 ) }
    dend_43 { pt3dadd( 26.6981, 727.493, -14.5676, 1.33 ) }
    dend_43 { pt3dadd( 26.7206, 727.566, -14.5609, 1.33 ) }
    dend_43 { pt3dadd( 26.8851, 728.114, -14.5231, 1.25 ) }
    dend_43 { pt3dadd( 27.3364, 729.62, -14.4328, 0.22 ) }
    dend_43 { pt3dadd( 27.59, 730.536, -14.3885, 0.22 ) }
    dend_43 { pt3dadd( 27.7034, 731.019, -14.3686, 0.59 ) }
    dend_43 { pt3dadd( 27.7264, 731.124, -14.3647, 0.59 ) }
    dend_43 { pt3dadd( 27.7849, 731.404, -14.355, 0.59 ) }
    dend_43 { pt3dadd( 27.9375, 732.232, -14.3324, 0.22 ) }
    dend_43 { pt3dadd( 27.9918, 732.867, -14.3324, 0.96 ) }
    dend_43 { pt3dadd( 28.0074, 733.636, -14.3324, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 24.2698, 714.296, -21.7326, 0.15 ) }
    dend_42 { pt3dadd( 25.0609, 716.636, -22.1509, 0.15 ) }
    dend_42 { pt3dadd( 25.0838, 716.731, -22.165, 0.15 ) }
    dend_42 { pt3dadd( 25.2008, 717.213, -22.227, 0.15 ) }
    dend_42 { pt3dadd( 25.2168, 717.289, -22.2358, 0.15 ) }
    dend_42 { pt3dadd( 25.3038, 717.807, -22.3013, 0.59 ) }
    dend_42 { pt3dadd( 25.3524, 718.143, -22.3429, 0.59 ) }
    dend_42 { pt3dadd( 25.5487, 720.242, -22.5686, 0.22 ) }
    dend_42 { pt3dadd( 25.6068, 721.074, -22.6588, 1.25 ) }
    dend_42 { pt3dadd( 25.6459, 721.664, -22.7114, 0.88 ) }
    dend_42 { pt3dadd( 25.7365, 723.198, -22.822, 0.15 ) }
    dend_42 { pt3dadd( 25.7638, 723.846, -22.8574, 0.15 ) }
    dend_42 { pt3dadd( 25.7746, 724.561, -22.8861, 0.74 ) }
    dend_42 { pt3dadd( 25.7673, 725.046, -22.8946, 1.11 ) }
    dend_42 { pt3dadd( 25.7247, 726.142, -22.9138, 0.15 ) }
    dend_42 { pt3dadd( 25.7037, 726.716, -22.9197, 0.96 ) }
    dend_42 { pt3dadd( 25.6642, 727.412, -22.9177, 1.18 ) }
    dend_42 { pt3dadd( 25.5201, 729.376, -22.9354, 0.15 ) }
    dend_42 { pt3dadd( 25.512, 729.464, -22.9368, 0.15 ) }
    dend_42 { pt3dadd( 25.4101, 730.375, -22.9696, 0.15 ) }
    dend_42 { pt3dadd( 25.4011, 730.441, -22.9736, 0.15 ) }
    dend_42 { pt3dadd( 25.3384, 731.0, -23.0017, 0.52 ) }
    dend_42 { pt3dadd( 25.3247, 731.134, -23.0056, 0.52 ) }
    dend_42 { pt3dadd( 25.2982, 731.42, -23.0143, 0.52 ) }
    dend_42 { pt3dadd( 25.2945, 731.476, -23.0165, 0.52 ) }
    dend_42 { pt3dadd( 25.2543, 732.422, -23.0532, 0.22 ) }
    dend_42 { pt3dadd( 25.2282, 733.109, -23.0822, 1.11 ) }
    dend_42 { pt3dadd( 25.2071, 733.75, -23.0893, 0.81 ) }
    dend_42 { pt3dadd( 25.1538, 735.442, -23.0743, 0.15 ) }
    dend_42 { pt3dadd( 25.0979, 737.238, -23.0264, 0.15 ) }
    dend_42 { pt3dadd( 25.0853, 737.842, -22.9894, 1.03 ) }
    dend_42 { pt3dadd( 25.0743, 738.516, -22.915, 0.81 ) }
    dend_42 { pt3dadd( 25.0627, 739.97, -22.6709, 0.22 ) }
    dend_42 { pt3dadd( 25.0625, 740.026, -22.658, 0.22 ) }
    dend_42 { pt3dadd( 25.0622, 740.952, -22.3468, 0.52 ) }
    dend_42 { pt3dadd( 25.0573, 741.826, -21.9883, 0.22 ) }
    dend_42 { pt3dadd( 25.0507, 742.608, -21.6562, 0.74 ) }
    dend_42 { pt3dadd( 25.0476, 743.051, -21.466, 0.74 ) }
    dend_42 { pt3dadd( 25.0467, 743.113, -21.4398, 0.74 ) }
    dend_42 { pt3dadd( 25.0436, 744.401, -20.9267, 0.22 ) }
    dend_42 { pt3dadd( 25.0442, 744.455, -20.9064, 0.22 ) }
    dend_42 { pt3dadd( 25.0832, 745.467, -20.6037, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( 25.1094, 745.818, -20.5166, 0.66 ) }
    dend_42 { pt3dadd( 25.1157, 745.873, -20.5048, 0.66 ) }
    dend_42 { pt3dadd( 25.2267, 746.504, -20.4001, 0.22 ) }
    dend_42 { pt3dadd( 25.5116, 747.522, -20.205, 1.4 ) }
    dend_42 { pt3dadd( 25.911, 748.712, -19.9606, 0.15 ) }
    dend_42 { pt3dadd( 25.9626, 748.846, -19.9321, 0.15 ) }
    dend_42 { pt3dadd( 26.2431, 749.529, -19.7745, 0.15 ) }
    dend_42 { pt3dadd( 26.6818, 750.57, -19.5269, 0.15 ) }
    dend_42 { pt3dadd( 27.4787, 752.397, -19.0753, 0.15 ) }
    dend_42 { pt3dadd( 27.9281, 753.355, -18.8084, 1.33 ) }
    dend_42 { pt3dadd( 28.1138, 753.743, -18.6698, 1.47 ) }
    dend_42 { pt3dadd( 28.8031, 755.214, -18.1831, 0.22 ) }
    dend_42 { pt3dadd( 28.8793, 755.383, -18.131, 0.44 ) }
    dend_42 { pt3dadd( 28.9007, 755.435, -18.1197, 0.44 ) }
    dend_42 { pt3dadd( 29.2137, 756.308, -18.1717, 0.22 ) }
    dend_42 { pt3dadd( 29.5809, 757.43, -18.0969, 0.88 ) }
    dend_42 { pt3dadd( 30.0414, 759.175, -17.7804, 0.59 ) }
    dend_42 { pt3dadd( 30.1294, 759.5, -17.6795, 0.37 ) }
    dend_42 { pt3dadd( 30.3837, 760.365, -17.3316, 0.15 ) }
    dend_42 { pt3dadd( 30.7645, 761.603, -16.7563, 1.62 ) }
    dend_42 { pt3dadd( 31.7076, 764.395, -15.3111, 0.88 ) }
    dend_42 { pt3dadd( 31.9209, 764.968, -14.9691, 1.25 ) }
    dend_42 { pt3dadd( 32.3279, 765.992, -14.2475, 0.15 ) }
    dend_42 { pt3dadd( 32.4753, 766.338, -13.9915, 0.66 ) }
    dend_42 { pt3dadd( 32.504, 766.398, -13.9475, 0.66 ) }
    dend_42 { pt3dadd( 33.0443, 767.448, -13.3053, 0.22 ) }
    dend_42 { pt3dadd( 33.3227, 768.003, -13.1295, 0.88 ) }
    dend_42 { pt3dadd( 33.4294, 768.23, -13.0662, 0.88 ) }
    dend_42 { pt3dadd( 33.4619, 768.31, -13.0459, 0.88 ) }
    dend_42 { pt3dadd( 34.0437, 769.859, -12.6577, 0.22 ) }
    dend_42 { pt3dadd( 34.2433, 770.416, -12.524, 0.66 ) }
    dend_42 { pt3dadd( 34.7087, 771.849, -12.203, 0.15 ) }
    dend_42 { pt3dadd( 34.9283, 772.564, -12.0508, 0.15 ) }
    dend_42 { pt3dadd( 34.9442, 772.621, -12.0394, 0.15 ) }
    dend_42 { pt3dadd( 35.0537, 773.095, -11.953, 0.44 ) }
    dend_42 { pt3dadd( 35.1451, 773.718, -11.8636, 0.22 ) }
    dend_42 { pt3dadd( 35.179, 774.266, -11.8107, 0.52 ) }
    dend_42 { pt3dadd( 35.1666, 774.344, -11.8107, 0.52 ) }
    dend_42 { pt3dadd( 35.086, 774.627, -11.8107, 0.52 ) }
    dend_42 { pt3dadd( 34.9674, 774.96, -11.8107, 0.37 ) }
    dend_42 { pt3dadd( 34.9289, 775.029, -11.8107, 0.37 ) }
    dend_42 { pt3dadd( 34.6641, 775.327, -11.8107, 0.22 ) }
    dend_42 { pt3dadd( 34.1733, 775.775, -11.8107, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 28.0074, 733.636, -14.3324, 0.22 ) }
    dend_45 { pt3dadd( 28.2336, 734.972, -13.8671, 0.22 ) }
    dend_45 { pt3dadd( 28.3456, 735.65, -13.6178, 0.52 ) }
    dend_45 { pt3dadd( 28.6229, 737.354, -12.9726, 0.29 ) }
    dend_45 { pt3dadd( 28.7508, 738.148, -12.6644, 0.88 ) }
    dend_45 { pt3dadd( 28.859, 738.745, -12.4468, 1.18 ) }
    dend_45 { pt3dadd( 28.9383, 739.171, -12.3052, 1.18 ) }
    dend_45 { pt3dadd( 28.9836, 739.39, -12.2444, 1.18 ) }
    dend_45 { pt3dadd( 28.9836, 739.39, -12.2444, 1.18 ) }
    dend_45 { pt3dadd( 28.9959, 739.445, -12.2359, 1.18 ) }
    dend_45 { pt3dadd( 29.2369, 740.531, -12.0942, 0.22 ) }
    dend_45 { pt3dadd( 29.4331, 741.191, -11.9679, 0.44 ) }
    dend_45 { pt3dadd( 29.7543, 742.145, -11.7352, 0.59 ) }
    dend_45 { pt3dadd( 29.9406, 742.596, -11.6045, 1.11 ) }
    dend_45 { pt3dadd( 30.1562, 743.052, -11.4569, 1.11 ) }
    dend_45 { pt3dadd( 30.1821, 743.101, -11.4391, 1.11 ) }
    dend_45 { pt3dadd( 31.1587, 744.595, -10.7717, 0.22 ) }
    dend_45 { pt3dadd( 31.1998, 744.644, -10.7478, 0.22 ) }
    dend_45 { pt3dadd( 31.7967, 745.283, -10.4471, 0.22 ) }
    dend_45 { pt3dadd( 32.122, 745.631, -10.2741, 0.74 ) }
    dend_45 { pt3dadd( 32.167, 745.68, -10.2498, 0.74 ) }
    dend_45 { pt3dadd( 32.5236, 746.102, -10.0487, 0.52 ) }
    dend_45 { pt3dadd( 33.0561, 746.845, -9.73025, 0.22 ) }
    dend_45 { pt3dadd( 33.4216, 747.481, -9.42016, 0.74 ) }
    dend_45 { pt3dadd( 33.931, 748.619, -8.79874, 1.25 ) }
    dend_45 { pt3dadd( 33.9575, 748.695, -8.75662, 1.25 ) }
    dend_45 { pt3dadd( 34.0277, 748.968, -8.60501, 1.11 ) }
    dend_45 { pt3dadd( 34.1456, 749.561, -8.22549, 0.52 ) }
    dend_45 { pt3dadd( 34.3299, 750.441, -7.59693, 0.15 ) }
    dend_45 { pt3dadd( 34.3452, 750.495, -7.55337, 0.15 ) }
    dend_45 { pt3dadd( 34.5903, 750.906, -7.11886, 0.15 ) }
    dend_45 { pt3dadd( 34.6488, 750.966, -7.03526, 0.15 ) }
    dend_45 { pt3dadd( 35.3956, 751.566, -5.93892, 0.44 ) }
    dend_45 { pt3dadd( 35.703, 751.772, -5.49281, 0.66 ) }
    dend_45 { pt3dadd( 35.7429, 751.793, -5.43997, 0.66 ) }
    dend_45 { pt3dadd( 36.7274, 752.272, -4.14424, 0.22 ) }
    dend_45 { pt3dadd( 36.7689, 752.289, -4.0899, 0.22 ) }
    dend_45 { pt3dadd( 37.789, 752.733, -2.71982, 1.33 ) }
    dend_45 { pt3dadd( 37.908, 752.794, -2.53914, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 28.0074, 733.636, -14.3324, 0.15 ) }
    dend_44 { pt3dadd( 29.5052, 734.8, -14.462, 0.15 ) }
    dend_44 { pt3dadd( 30.0353, 735.192, -14.4881, 0.15 ) }
    dend_44 { pt3dadd( 30.1587, 735.278, -14.4913, 0.15 ) }
    dend_44 { pt3dadd( 30.75, 735.675, -14.5004, 0.44 ) }
    dend_44 { pt3dadd( 30.881, 735.759, -14.5005, 0.44 ) }
    dend_44 { pt3dadd( 31.7398, 736.296, -14.4989, 0.22 ) }
    dend_44 { pt3dadd( 32.1806, 736.561, -14.483, 0.44 ) }
    dend_44 { pt3dadd( 32.7777, 736.871, -14.4668, 0.15 ) }
    dend_44 { pt3dadd( 32.841, 736.901, -14.4655, 0.15 ) }
    dend_44 { pt3dadd( 33.4706, 737.176, -14.4574, 0.66 ) }
    dend_44 { pt3dadd( 33.535, 737.202, -14.4571, 0.66 ) }
    dend_44 { pt3dadd( 34.3907, 737.519, -14.464, 0.22 ) }
    dend_44 { pt3dadd( 35.0872, 737.783, -14.4834, 0.88 ) }
    dend_44 { pt3dadd( 35.1624, 737.81, -14.486, 0.88 ) }
    dend_44 { pt3dadd( 35.3642, 737.883, -14.4939, 1.11 ) }
    dend_44 { pt3dadd( 35.4977, 737.927, -14.5009, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 37.908, 752.794, -2.53914, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( 38.2514, 754.117, -1.42122, 0.29 ) }
    dend_47 { pt3dadd( 38.2719, 754.171, -1.38106, 0.29 ) }
    dend_47 { pt3dadd( 38.6215, 754.933, -0.854232, 0.29 ) }
    dend_47 { pt3dadd( 38.6712, 755.019, -0.799718, 0.29 ) }
    dend_47 { pt3dadd( 39.0222, 755.604, -0.463701, 0.74 ) }
    dend_47 { pt3dadd( 39.0513, 755.651, -0.438143, 0.74 ) }
    dend_47 { pt3dadd( 39.3963, 756.238, -0.110414, 0.74 ) }
    dend_47 { pt3dadd( 39.4542, 756.342, -0.0368845, 0.74 ) }
    dend_47 { pt3dadd( 39.8291, 757.016, 0.484544, 0.15 ) }
    dend_47 { pt3dadd( 40.0093, 757.329, 0.730965, 0.15 ) }
    dend_47 { pt3dadd( 40.0318, 757.371, 0.764485, 0.15 ) }
    dend_47 { pt3dadd( 40.762, 758.8, 1.8893, 0.15 ) }
    dend_47 { pt3dadd( 40.9736, 759.277, 2.24998, 1.11 ) }
    dend_47 { pt3dadd( 41.1553, 759.75, 2.57645, 1.25 ) }
    dend_47 { pt3dadd( 41.5516, 760.861, 3.29921, 0.22 ) }
    dend_47 { pt3dadd( 41.7919, 761.52, 3.69929, 0.22 ) }
    dend_47 { pt3dadd( 41.8086, 761.57, 3.72501, 0.22 ) }
    dend_47 { pt3dadd( 42.0449, 762.287, 3.96827, 0.29 ) }
    dend_47 { pt3dadd( 42.2573, 763.01, 4.17255, 0.74 ) }
    dend_47 { pt3dadd( 42.4049, 763.518, 4.31821, 1.11 ) }
    dend_47 { pt3dadd( 42.4264, 763.582, 4.33592, 1.11 ) }
    dend_47 { pt3dadd( 42.7367, 764.272, 4.52577, 0.66 ) }
    dend_47 { pt3dadd( 43.1687, 765.12, 4.75421, 0.22 ) }
    dend_47 { pt3dadd( 43.4851, 765.619, 4.88755, 0.15 ) }
    dend_47 { pt3dadd( 43.9244, 766.214, 5.04268, 1.11 ) }
    dend_47 { pt3dadd( 44.3465, 766.762, 5.16948, 1.69 ) }
    dend_47 { pt3dadd( 44.3839, 766.806, 5.18107, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 37.908, 752.794, -2.53914, 0.29 ) }
    dend_46 { pt3dadd( 37.086, 753.632, -2.67628, 0.29 ) }
    dend_46 { pt3dadd( 36.867, 753.852, -2.71934, 0.29 ) }
    dend_46 { pt3dadd( 36.2469, 754.454, -2.83539, 0.15 ) }
    dend_46 { pt3dadd( 36.1136, 754.581, -2.85951, 0.15 ) }
    dend_46 { pt3dadd( 35.6849, 754.999, -2.93297, 0.29 ) }
    dend_46 { pt3dadd( 35.0244, 755.654, -3.04505, 0.15 ) }
    dend_46 { pt3dadd( 34.9453, 755.738, -3.06317, 0.15 ) }
    dend_46 { pt3dadd( 34.3134, 756.495, -3.2259, 0.15 ) }
    dend_46 { pt3dadd( 34.2601, 756.576, -3.24479, 0.15 ) }
    dend_46 { pt3dadd( 33.9481, 757.133, -3.37253, 0.15 ) }
    dend_46 { pt3dadd( 33.8801, 757.296, -3.41054, 0.15 ) }
    dend_46 { pt3dadd( 33.5157, 758.378, -3.68446, 0.15 ) }
    dend_46 { pt3dadd( 33.4919, 758.462, -3.70621, 0.15 ) }
    dend_46 { pt3dadd( 33.3122, 759.475, -3.99954, 0.15 ) }
    dend_46 { pt3dadd( 33.3032, 759.539, -4.01877, 0.15 ) }
    dend_46 { pt3dadd( 33.2605, 760.064, -4.19369, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 44.3839, 766.806, 5.18107, 0.52 ) }
    dend_49 { pt3dadd( 44.6861, 768.124, 6.45125, 0.52 ) }
    dend_49 { pt3dadd( 44.8467, 769.39, 7.61397, 0.29 ) }
    dend_49 { pt3dadd( 44.8585, 769.843, 7.96567, 0.96 ) }
    dend_49 { pt3dadd( 44.8502, 770.4, 8.3695, 1.11 ) }
    dend_49 { pt3dadd( 44.8459, 770.494, 8.43804, 1.11 ) }
    dend_49 { pt3dadd( 44.7973, 771.284, 9.02448, 0.81 ) }
    dend_49 { pt3dadd( 44.6875, 772.141, 9.60297, 1.11 ) }
    dend_49 { pt3dadd( 44.5584, 773.352, 10.33, 0.37 ) }
    dend_49 { pt3dadd( 44.5556, 773.401, 10.3597, 0.37 ) }
    dend_49 { pt3dadd( 44.5857, 774.525, 10.9865, 0.29 ) }
    dend_49 { pt3dadd( 44.594, 774.583, 11.019, 0.29 ) }
    dend_49 { pt3dadd( 44.8841, 775.316, 11.4939, 0.81 ) }
    dend_49 { pt3dadd( 45.1222, 775.691, 11.7778, 1.03 ) }
    dend_49 { pt3dadd( 45.1575, 775.736, 11.8163, 1.03 ) }
    dend_49 { pt3dadd( 45.4816, 776.138, 12.152, 0.96 ) }
    dend_49 { pt3dadd( 46.3277, 777.146, 12.9773, 0.66 ) }
    dend_49 { pt3dadd( 47.15, 778.149, 13.7675, 0.52 ) }
    dend_49 { pt3dadd( 47.7818, 778.972, 14.3896, 0.44 ) }
    dend_49 { pt3dadd( 48.0842, 779.41, 14.7007, 0.44 ) }
    dend_49 { pt3dadd( 48.3604, 779.791, 15.0056, 0.37 ) }
    dend_49 { pt3dadd( 48.4437, 779.895, 15.0964, 0.37 ) }
    dend_49 { pt3dadd( 49.075, 780.579, 15.7202, 0.37 ) }
    dend_49 { pt3dadd( 49.684, 781.256, 16.3207, 0.22 ) }
    dend_49 { pt3dadd( 50.5368, 782.138, 17.1469, 1.4 ) }
    dend_49 { pt3dadd( 51.7914, 783.343, 18.4024, 0.29 ) }
    dend_49 { pt3dadd( 52.1879, 783.69, 18.8168, 0.96 ) }
    dend_49 { pt3dadd( 52.5091, 783.939, 19.168, 0.96 ) }
    dend_49 { pt3dadd( 57.8048, 790.13, 24.5976, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 44.3839, 766.806, 5.18107, 0.22 ) }
    dend_48 { pt3dadd( 43.6602, 768.257, 5.31214, 0.22 ) }
    dend_48 { pt3dadd( 43.0185, 769.543, 5.42837, 0.22 ) }
    dend_48 { pt3dadd( 42.9532, 769.674, 5.4402, 0.22 ) }
    dend_48 { pt3dadd( 42.3909, 770.802, 5.54206, 0.22 ) }
    dend_48 { pt3dadd( 39.2514, 779.629, 7.49143, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 9
    dend_74 nseg = 3
    dend_73 nseg = 5
    dend_72 nseg = 7
    dend_27 nseg = 3
    dend_26 nseg = 7
    dend_24 nseg = 7
    dend_23 nseg = 13
    dend_15 nseg = 3
    dend_2 nseg = 7
    dend_67 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_16 nseg = 7
    dend_13 nseg = 13
    dend_3 nseg = 3
    dend_66 nseg = 11
    dend_29 nseg = 25
    dend_12 nseg = 3
    dend_6 nseg = 3
    dend_61 nseg = 5
    dend_11 nseg = 7
    dend_10 nseg = 11
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L6_DBC_166d3f579a_0_0


