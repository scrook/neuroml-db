// Cell: cNAC187_L4_LBC_0226c205f1_0_0
/*
{
  "id" : "cNAC187_L4_LBC_0226c205f1_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.0460118, 9.4193, 0.0420007, 3.85614", "-0.0586314, 8.45043, 0.0375696, 7.03826", "-0.0712511, 7.48157, 0.0331385, 8.2185", "-0.0838708, 6.51271, 0.0287073, 9.16918", "-0.0964904, 5.54385, 0.0242762, 10.0966", "-0.10911, 4.57499, 0.0198451, 11.2325", "-0.12173, 3.60613, 0.0154139, 12.296", "-0.134349, 2.63727, 0.0109828, 12.2546", "-0.146969, 1.66841, 0.00655169, 11.6979", "-0.159589, 0.69955, 0.00212056, 10.9264", "-0.172208, -0.26931, -0.00231057, 9.80041", "-0.184828, -1.23817, -0.0067417, 8.57664", "-0.197448, -2.20703, -0.0111728, 7.89172", "-0.210067, -3.17589, -0.015604, 7.62756", "-0.222687, -4.14475, -0.0200351, 7.36341", "-0.235307, -5.11361, -0.0244662, 7.04275", "-0.247926, -6.08247, -0.0288973, 6.5615", "-0.260546, -7.05133, -0.0333285, 5.89923", "-0.273166, -8.02019, -0.0377596, 4.92342", "-0.285785, -8.98905, -0.0421907, 3.8632", "-0.298405, -9.95792, -0.0466218, 2.78029" ]
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-0.117947, 6.62213, 10.3203, 0.55", "-0.0282322, 8.99583, 11.0077, 0.55", "0.434039, 11.621, 12.3594, 0.55", "0.957354, 13.6431, 13.6509, 0.55", "1.42759, 15.46, 14.8114, 0.55", "2.15725, 18.2794, 16.6121, 0.55", "3.08914, 21.8801, 18.9119, 0.55", "4.17029, 24.8163, 21.2448, 0.55", "5.0981, 26.5707, 22.9516, 2.49", "7.39014, 36.2559, 27.4832, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.57205, 2.30913, -8.5197, 0.55", "3.58803, 4.15117, -8.67383, 0.55", "5.4854, 5.70731, -8.84831, 0.55", "8.14544, 7.59509, -9.14492, 0.55", "9.72774, 8.62181, -9.34749, 0.28", "10.8839, 9.29797, -9.50553, 0.55", "12.9185, 10.385, -9.79554, 0.28", "13.9273, 10.7788, -9.92291, 0.55", "15.6688, 11.2876, -10.115, 0.28", "15.9965, 11.3613, -10.1434, 0.83", "17.2627, 11.6432, -10.18, 0.28", "18.5826, 11.9893, -10.1317, 0.28", "20.4027, 12.6454, -9.91978, 0.55", "21.6446, 13.2496, -9.72008, 0.28", "22.1522, 13.6149, -9.58814, 0.55", "23.3341, 14.7126, -9.20676, 0.28", "23.93, 15.3946, -9.00271, 0.55", "24.9845, 16.8068, -8.6439, 0.28", "25.4554, 17.5116, -8.49157, 0.55", "26.7749, 19.699, -8.0014, 0.28", "27.3346, 20.7365, -7.78689, 0.55", "27.9752, 22.0986, -7.53541, 0.28", "28.3631, 22.9225, -7.37571, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "3.89205, 5.82413, -1.4497, 0.55", "6.54667, 7.34872, -1.89863, 0.55", "8.94775, 8.74007, -2.40818, 0.55", "11.1533, 9.89567, -2.91676, 0.83", "14.2933, 11.4073, -3.59487, 0.83", "16.5788, 12.3924, -4.06941, 1.11", "19.2203, 13.3817, -4.56095, 0.55", "21.8765, 14.1432, -5.01723, 0.55", "23.955, 14.6415, -5.32307, 0.83", "26.3004, 15.0933, -5.60354, 0.55", "29.0518, 15.4797, -5.82616, 0.83", "31.2713, 15.7437, -5.90739, 0.55", "32.036, 15.8223, -5.9372, 0.55", "35.0806, 16.1944, -6.1472, 0.83", "38.0474, 16.7945, -6.52558, 0.83", "40.1447, 17.3625, -6.93118, 0.83", "42.4657, 18.2013, -7.48728, 0.83", "44.0944, 18.931, -7.95097, 0.83", "46.4453, 20.1958, -8.71161, 0.83", "48.542, 21.575, -9.48341, 0.55", "50.7203, 23.3179, -10.3372, 0.55", "51.8809, 24.3015, -10.8107, 0.55", "53.8602, 26.0752, -11.6721, 0.55", "55.6566, 27.6982, -12.4874, 0.83", "57.4498, 29.2509, -13.3352, 0.55", "58.57, 30.1493, -13.8721, 0.55", "60.6617, 31.7587, -14.9288, 0.55", "62.9252, 33.2694, -16.016, 0.83", "65.3098, 34.7105, -17.0539, 0.55", "66.3295, 35.2873, -17.4432, 0.55", "67.3552, 35.8682, -17.7965, 0.55", "68.1588, 36.3553, -18.0525, 0.55", "71.5564, 38.5891, -19.014, 0.55", "74.7467, 40.7584, -19.7977, 0.28", "75.822, 41.5334, -20.0583, 0.55", "77.9788, 43.1721, -20.6094, 0.28", "79.039, 43.9926, -20.8887, 0.83", "80.696, 45.2549, -21.3272, 0.28", "81.5692, 45.9225, -21.5565, 0.83", "83.0163, 46.9176, -21.9298, 0.28", "84.3389, 47.735, -22.2576, 0.55", "86.4538, 48.9368, -22.7383, 0.28", "89.0068, 50.2618, -23.2996, 0.55", "90.0015, 50.7669, -23.5088, 0.55", "92.1003, 51.8339, -23.9385, 0.28", "93.3149, 52.4823, -24.1841, 0.83", "94.8869, 53.3599, -24.5173, 0.28", "95.356, 53.6359, -24.6165, 0.55", "97.0358, 54.6218, -24.9943, 0.28", "97.8672, 55.1213, -25.1839, 0.83", "99.833, 56.3411, -25.7573, 0.28", "100.954, 57.0798, -26.1251, 0.55", "102.296, 58.054, -26.5702, 0.55", "104.565, 59.8555, -27.3278, 0.28", "105.471, 60.6054, -27.6313, 0.83", "108.284, 63.0435, -28.5625, 0.28", "110.188, 64.8065, -29.1919, 0.83", "113.238, 67.8058, -30.1835, 0.28", "114.566, 69.2149, -30.6037, 0.55", "115.675, 70.463, -30.9242, 0.28", "116.546, 71.4607, -31.155, 0.55", "117.33, 72.3517, -31.301, 0.28", "118.536, 73.5709, -31.5544, 0.55", "119.564, 74.4764, -31.7859, 0.28", "120.219, 75.0228, -31.9257, 0.55", "122.058, 76.5215, -32.3187, 0.28", "123.363, 77.6008, -32.5926, 0.83", "126.23, 80.1015, -33.2047, 0.28", "127.047, 80.8585, -33.3917, 0.55", "128.422, 82.2033, -33.7099, 0.55", "130.153, 84.0422, -34.0556, 0.28", "131.197, 85.2613, -34.2279, 0.83", "132.66, 87.1344, -34.3915, 0.28", "133.457, 88.2628, -34.3905, 0.83", "134.133, 89.2546, -34.3422, 0.83", "135.257, 90.8667, -34.1606, 0.28", "135.599, 91.3542, -34.0767, 0.55", "137.274, 93.6452, -33.6606, 0.28", "137.637, 94.1528, -33.5637, 0.28", "137.965, 94.6455, -33.5138, 0.83", "138.757, 95.8918, -33.5306, 0.28", "139.311, 96.774, -33.6249, 0.55", "140.327, 98.3114, -33.8467, 0.28", "140.761, 98.9423, -33.9368, 0.55", "142.058, 100.675, -34.1342, 0.28", "143.96, 103.017, -34.3352, 0.28", "144.579, 103.747, -34.3751, 0.83", "145.996, 105.369, -34.5412, 0.83", "148.316, 107.942, -34.8768, 0.28", "151.002, 110.853, -35.3348, 0.28", "154.39, 114.407, -35.9805, 0.28", "156.238, 116.332, -36.379, 0.83", "159.37, 119.581, -37.1419, 0.28", "159.764, 119.992, -37.2589, 0.55", "160.601, 120.839, -37.5957, 0.28", "161.396, 121.636, -38.043, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.60205, 3.93363, 8.8103, 0.83", "5.63252, 3.00664, 10.3287, 0.83", "6.95117, 2.2842, 11.2842, 0.83", "9.33765, 0.717547, 13.0599, 0.83", "12.6431, -1.83467, 15.6179, 0.83", "15.1297, -4.01575, 17.7358, 0.55", "16.6882, -5.51765, 19.1265, 0.55", "18.0667, -7.21769, 20.4988, 0.83", "20.056, -10.1681, 22.6012, 0.55", "20.9725, -11.7809, 23.6037, 0.83", "22.0527, -13.939, 24.6573, 0.83", "22.7867, -15.5475, 25.3628, 1.11", "23.484, -17.4393, 26.1621, 0.55", "23.9802, -18.9147, 26.7543, 0.83", "24.4231, -20.2236, 27.2945, 0.55", "25.4203, -22.9247, 28.4987, 0.55", "26.4127, -25.7697, 29.9201, 0.55", "26.9079, -27.3336, 30.7867, 0.55", "27.2031, -28.4411, 31.4488, 0.55", "27.8776, -31.1093, 33.082, 0.83", "28.7622, -34.1816, 35.0676, 0.83", "29.6998, -36.7873, 36.8359, 0.55", "30.6619, -38.9089, 38.4299, 0.55", "32.2617, -41.6478, 40.7242, 0.55", "33.2774, -43.306, 42.1466, 0.55", "34.6532, -45.2603, 43.8798, 0.55", "35.6155, -46.328, 44.9812, 0.55", "38.7736, -48.9175, 48.0618, 0.55", "40.8529, -50.118, 50.0192, 0.28", "45.8761, -57.3236, 56.3218, 0.28", "50.6401, -65.0342, 62.1541, 0.28", "54.8, -72.7576, 68.3931, 0.28", "58.1942, -80.2515, 75.3328, 0.28", "61.3593, -88.8151, 80.893, 0.28", "65.0294, -96.0753, 87.9692, 0.28", "69.1358, -104.62, 92.9585, 0.28", "71.2447, -114.394, 96.4129, 0.28", "74.4017, -123.5, 100.95, 0.28", "77.5813, -132.756, 105.134, 0.28", "80.753, -142.408, 108.214, 0.28", "81.2623, -152.013, 112.542, 0.28", "80.2294, -161.879, 115.948, 0.28", "81.4929, -171.793, 119.312, 0.28", "82.8446, -181.445, 123.392, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.497947, -3.35287, -10.1097, 0.83", "1.21133, -1.59658, -10.1673, 0.83", "2.87835, 0.116304, -10.2235, 1.11", "5.15544, 2.45604, -10.3003, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-4.93795, 5.09263, -5.2197, 0.83", "-6.38947, 7.64321, -4.93969, 0.83", "-8.05644, 10.5724, -4.61811, 1.38", "-9.84661, 13.7181, -4.27276, 0.83", "-11.5514, 16.7136, -3.94389, 1.11", "-12.9684, 19.2036, -3.67053, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.00795, -9.72737, -1.2597, 3.88", "-1.65768, -11.4696, -1.2597, 3.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999997358825
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.298405, -9.95792, -0.0466218, 0.55", "-0.493767, -24.9566, -0.0466218, 0.55", "-0.689129, -39.9554, -0.0466218, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "5.15544, 2.45604, -10.3003, 0.83", "7.6454, 2.7336, -10.8742, 0.83", "9.23855, 2.97398, -11.2832, 0.83", "11.1226, 3.30895, -11.7694, 1.11", "14.4406, 3.99638, -12.584, 0.83", "15.6914, 4.31755, -12.8633, 0.83", "18.4183, 5.13107, -13.4293, 1.11", "20.4061, 5.82513, -13.7721, 0.55", "21.688, 6.35229, -13.976, 0.55", "23.5713, 7.21579, -14.2437, 0.55", "26.0443, 8.42062, -14.5291, 0.55", "28.225, 9.49887, -14.7339, 0.83", "29.7893, 10.3028, -14.8342, 0.55", "31.7008, 11.3044, -14.9686, 0.83", "32.9341, 11.9047, -15.0834, 1.11", "35.2119, 12.9, -15.3388, 0.55", "37.0146, 13.6227, -15.584, 0.55", "41.1607, 15.2064, -16.2277, 0.83", "43.2011, 15.9471, -16.5729, 0.55", "46.381, 17.057, -17.1427, 0.55", "48.7555, 17.8647, -17.5854, 0.83", "50.6826, 18.5123, -17.9491, 0.55", "52.7882, 19.224, -18.3333, 0.55", "54.7311, 19.8965, -18.6644, 0.83", "56.8515, 20.7439, -18.9486, 0.28", "57.5368, 21.0924, -19.0301, 0.55", "58.5733, 21.6822, -19.1277, 0.28", "59.9008, 22.4873, -19.212, 0.55", "61.8085, 23.7454, -19.3217, 0.28", "63.5318, 24.9588, -19.4184, 0.83", "65.581, 26.4887, -19.6249, 0.28", "66.6536, 27.3078, -19.7638, 0.28", "67.9701, 28.3591, -20.0225, 0.83", "71.1065, 30.9117, -20.7976, 0.28", "72.4047, 31.9785, -21.1734, 0.83", "74.6655, 33.8815, -21.9258, 0.28", "75.402, 34.5017, -22.2462, 0.55", "77.8966, 36.6226, -23.6455, 0.28", "78.2228, 36.8978, -23.875, 0.83", "78.6952, 37.2827, -24.27, 0.83", "79.9075, 38.2204, -25.2955, 0.83", "82.4491, 40.176, -27.3696, 0.55", "85.1578, 42.2558, -29.4779, 0.28", "87.1559, 43.846, -30.9357, 0.83", "89.7289, 45.9691, -32.7178, 0.28", "90.9992, 47.0597, -33.5801, 0.83", "93.8426, 49.5086, -35.447, 0.28", "95.274, 50.7393, -36.316, 0.83", "98.216, 53.2037, -38.0244, 0.28", "98.9458, 53.7835, -38.4295, 0.55", "102.576, 56.521, -40.3998, 0.28", "103.259, 57.0127, -40.7883, 0.83", "105.113, 58.2634, -41.8464, 0.28", "105.842, 58.7494, -42.2788, 0.83", "108.453, 60.3763, -43.7698, 0.28", "109.604, 61.1801, -44.4159, 0.83", "111.557, 62.6985, -45.388, 0.28", "112.109, 63.1767, -45.6292, 0.83", "113.796, 64.7533, -46.2689, 0.28", "114.541, 65.4761, -46.5331, 0.55", "118.978, 69.8593, -47.952, 0.28", "120.682, 71.4762, -48.4388, 1.11", "123.102, 73.6142, -49.057, 0.28", "124.542, 74.775, -49.3775, 0.28", "125.645, 75.5938, -49.5696, 0.83", "128.004, 77.2746, -50.0576, 0.28", "129.431, 78.2236, -50.377, 1.11", "131.8, 79.8236, -51.0566, 0.28", "135.064, 82.128, -52.1671, 0.28", "136.033, 82.8842, -52.5276, 1.38", "139.125, 85.5665, -53.7171, 0.28", "139.612, 86.0439, -53.9332, 0.55", "140.472, 87.0056, -54.3551, 0.28", "141.39, 88.1118, -54.8351, 0.55", "143.617, 90.5898, -55.9238, 0.28", "144.362, 91.3123, -56.2167, 0.83", "145.352, 92.1028, -56.5342, 0.28", "146.17, 92.661, -56.7253, 0.55", "148.717, 94.1627, -57.4991, 0.28", "151.863, 95.7503, -58.6896, 0.28", "152.585, 96.0681, -59.0689, 0.55", "154.956, 97.0511, -60.6044, 0.28", "157.783, 98.2306, -63.0907, 0.55", "161.511, 99.8251, -67.3913, 0.28", "162.473, 100.247, -68.7602, 0.55", "164.31, 101.059, -71.9896, 0.28", "164.823, 101.284, -73.0141, 0.55", "166.613, 102.105, -77.3956, 0.28", "166.947, 102.273, -78.4177, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "5.15544, 2.45604, -10.3003, 0.55", "5.102, 1.79297, -11.7409, 0.55", "5.11378, 0.476507, -15.1704, 0.55", "5.46945, -0.862043, -18.7977, 0.83", "5.99416, -2.23312, -22.763, 0.55", "6.58258, -4.02312, -27.7105, 0.55", "6.76296, -4.64652, -29.4126, 0.55", "7.38806, -6.55032, -34.6656, 0.83", "7.76712, -7.81516, -38.0265, 0.83", "7.95552, -9.36678, -41.4914, 0.83", "7.9975, -10.7687, -44.0759, 1.11", "8.00043, -12.8266, -47.3823, 0.55", "7.88319, -14.4312, -49.7476, 0.55", "7.41317, -17.135, -53.4067, 1.11", "6.36913, -21.1493, -58.5927, 0.28", "6.08166, -22.0699, -59.7609, 0.55", "4.87595, -25.3176, -63.7868, 0.28", "4.29109, -26.6557, -65.3719, 1.11", "1.9035, -31.3073, -70.9063, 0.28", "0.828496, -33.211, -73.143, 0.28", "-0.730864, -35.5813, -75.9062, 1.11", "-2.52773, -37.9705, -78.7983, 0.28", "-3.46742, -39.0141, -80.1724, 0.55", "-6.87996, -42.4244, -84.9726, 0.28", "-8.09352, -43.536, -86.7216, 1.38", "-9.61942, -44.9248, -89.1405, 0.28", "-11.2632, -46.4488, -91.9929, 0.83", "-13.4955, -48.4896, -96.1256, 0.28", "-14.1047, -49.0738, -97.4046, 0.83", "-16.6389, -51.7227, -103.419, 0.28", "-17.1946, -52.3473, -105.094, 0.28", "-17.7745, -53.0007, -107.002, 0.55", "-18.3262, -53.6061, -109.032, 0.55", "-20.6344, -56.0501, -117.739, 0.28", "-20.8427, -56.2396, -118.479, 0.83", "-24.4119, -59.117, -130.146, 0.28", "-24.9964, -59.5398, -131.904, 0.83", "-27.7762, -61.4482, -139.439, 0.28", "-28.29, -61.8066, -140.762, 0.83", "-30.831, -63.6458, -146.63, 0.28", "-31.4006, -64.0687, -147.887, 0.83", "-34.0891, -66.2089, -153.158, 0.28", "-35.0516, -67.0028, -155.063, 0.83", "-38.8883, -70.2504, -161.819, 0.28", "-39.3575, -70.6642, -162.677, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-12.9684, 19.2036, -3.67053, 0.55", "-15.2228, 21.0395, -2.42642, 0.55", "-16.6504, 22.2641, -1.69829, 0.83", "-17.8523, 23.2834, -1.15608, 0.28", "-18.6341, 23.912, -0.854217, 0.83", "-20.3665, 25.3165, -0.279256, 0.55", "-21.7995, 26.4064, 0.133501, 1.11", "-23.0182, 27.2805, 0.456213, 0.83", "-24.244, 28.1267, 0.754791, 0.83", "-25.9605, 29.263, 1.09212, 0.83", "-27.934, 30.4924, 1.39136, 0.83", "-30.0287, 31.6925, 1.59016, 0.83", "-32.2014, 32.8598, 1.86525, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.65768, -11.4696, -1.2597, 1.11", "-0.661391, -13.1596, -1.52668, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.65768, -11.4696, -1.2597, 1.38", "-2.1022, -12.1107, -1.13355, 1.38", "-3.30067, -13.8394, -0.793453, 1.38", "-5.07212, -16.3946, -0.29075, 1.94" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.689129, -39.9554, -0.0466218, 0.28", "-0.884491, -54.9541, -0.0466218, 0.28", "-1.07985, -69.9528, -0.0466218, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-39.3575, -70.6642, -162.677, 0.28", "-40.8504, -72.4136, -163.876, 0.28", "-41.472, -73.142, -164.375, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-39.3575, -70.6642, -162.677, 0.28", "-39.6368, -73.8904, -161.364, 0.28", "-39.6953, -74.7213, -161.046, 0.83", "-39.9272, -77.0268, -160.117, 0.28", "-40.2049, -78.9966, -159.304, 0.28", "-40.33, -79.8229, -158.691, 0.83", "-40.5755, -81.4551, -157.308, 0.28", "-40.6412, -81.8812, -156.922, 0.83", "-40.9983, -84.3371, -154.552, 0.28", "-41.1474, -85.4408, -153.468, 0.83", "-42.2195, -92.0202, -146.81, 0.28", "-42.346, -92.8198, -145.962, 0.55", "-42.5472, -94.016, -144.629, 0.28", "-42.5731, -94.1885, -144.428, 0.55", "-42.6883, -95.4753, -142.841, 0.28", "-42.7093, -96.0643, -142.15, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-32.2014, 32.8598, 1.86525, 0.83", "-34.053, 34.8168, 1.99122, 0.83", "-35.3562, 36.1942, 2.07988, 0.83", "-36.7708, 37.6893, 2.17612, 0.28", "-37.5918, 38.5571, 2.23198, 0.83", "-45.545, 48.0825, 4.88427, 0.83", "-51.6271, 59.0701, 5.13584, 0.83", "-58.5727, 69.5146, 3.82825, 0.83", "-63.9858, 80.2724, 0.182868, 0.83", "-70.2903, 89.8648, -5.21356, 0.83", "-74.1581, 100.192, -11.3534, 0.83", "-78.1823, 110.868, -16.6767, 0.83", "-81.0956, 120.893, -23.8167, 0.83", "-81.7058, 132.167, -29.2585, 0.83", "-81.1145, 143.281, -35.0562, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-32.2014, 32.8598, 1.86525, 0.55", "-32.7265, 35.0936, 1.2326, 0.55", "-33.3104, 37.2402, 0.66278, 0.55", "-33.5877, 38.2243, 0.415559, 1.11", "-34.0197, 39.8772, 0.0365878, 0.28", "-34.3364, 41.0572, -0.249071, 0.83", "-34.9314, 43.1012, -0.860003, 0.55", "-35.8285, 45.6213, -1.7339, 0.83", "-37.2332, 48.4349, -3.00128, 0.28", "-38.3818, 50.2425, -3.99831, 0.28", "-39.1327, 51.1546, -4.57186, 0.55", "-41.3802, 53.1951, -6.02972, 0.55", "-43.905, 54.899, -7.42096, 0.83", "-47.8717, 56.9294, -9.3727, 0.55", "-49.8293, 57.7404, -10.1907, 0.28", "-52.423, 58.6823, -11.1075, 0.83", "-55.6741, 59.835, -12.0956, 0.55", "-57.557, 60.4928, -12.5623, 0.55", "-59.3465, 61.1852, -12.9517, 0.83", "-61.5737, 62.1687, -13.2463, 0.28", "-62.9295, 62.8067, -13.3982, 0.55", "-65.5816, 64.1495, -13.6595, 0.28", "-66.6394, 64.7479, -13.7608, 0.55", "-68.3485, 65.7249, -13.8926, 0.55", "-72.0707, 67.8329, -14.1245, 0.28", "-74.0537, 68.9457, -14.2517, 0.83", "-77.2623, 70.8433, -14.4476, 0.28", "-81.6186, 73.5416, -14.7393, 0.28", "-84.7457, 75.6245, -15.0188, 0.83", "-88.5916, 78.4115, -15.4414, 0.28", "-90.0399, 79.6011, -15.6303, 0.83", "-92.8134, 82.087, -15.991, 0.28", "-94.3627, 83.6271, -16.2532, 0.55", "-96.9785, 86.4613, -16.7869, 0.28", "-98.1893, 87.938, -17.095, 0.55", "-99.0189, 88.9768, -17.3253, 0.28", "-99.9013, 90.033, -17.5746, 0.55", "-102.548, 92.9397, -18.5519, 0.28", "-103.773, 94.1836, -19.0743, 0.55", "-104.999, 95.3155, -19.7479, 0.28", "-106.579, 96.6517, -20.6932, 0.28", "-108.144, 97.8712, -21.6891, 0.55", "-110.854, 99.9471, -23.5558, 0.28", "-111.464, 100.4, -23.9738, 0.55", "-113.819, 102.173, -25.5819, 0.28", "-115.34, 103.324, -26.6416, 0.83", "-119.116, 106.225, -29.3369, 0.28", "-120.844, 107.491, -30.5663, 0.83", "-123.889, 109.68, -32.6769, 0.28", "-125.801, 111.057, -33.9978, 0.28", "-126.262, 111.39, -34.2953, 0.55", "-127.668, 112.401, -35.1724, 0.28", "-130.07, 114.098, -36.5703, 1.11", "-134.665, 117.253, -39.0439, 0.28", "-135.034, 117.505, -39.2275, 0.55", "-137.664, 119.237, -40.3841, 0.28", "-138.205, 119.572, -40.5972, 0.55", "-139.654, 120.357, -41.1194, 0.28", "-140.581, 120.726, -41.5525, 0.55", "-141.97, 120.994, -42.3666, 0.28", "-142.87, 121.115, -42.9676, 0.55", "-145.567, 121.326, -44.9186, 0.28", "-147.75, 121.486, -46.4776, 0.83", "-152.333, 121.877, -49.7429, 0.28", "-153.327, 122.092, -50.4366, 0.55", "-155.247, 122.745, -51.7371, 0.28", "-156.064, 123.155, -52.1896, 0.55", "-157.486, 124.153, -52.7381, 0.28", "-158.907, 125.34, -53.1386, 0.83", "-163.324, 129.634, -53.8218, 0.28", "-164.042, 130.407, -53.927, 0.55", "-166.176, 132.947, -54.1855, 0.28", "-167.27, 134.364, -54.3051, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-0.661391, -13.1596, -1.52668, 0.83", "-0.800421, -14.7684, -1.62574, 0.83", "-0.879848, -16.0032, -1.63947, 0.28", "-0.951454, -18.149, -1.56564, 1.11", "-0.918709, -20.812, -1.36216, 0.55", "-0.83704, -24.0729, -1.04025, 0.55", "-0.7084, -26.3617, -0.78206, 1.11", "-0.293514, -30.4498, -0.0956539, 1.11", "0.0302461, -32.9596, 0.445652, 0.83", "0.48027, -35.6035, 1.1489, 0.83", "0.6424, -36.3909, 1.38779, 0.83", "1.27987, -39.366, 2.32059, 0.83", "1.9269, -42.2776, 3.33198, 0.83", "2.32492, -44.2713, 4.0436, 0.83", "2.69652, -46.5272, 4.9222, 0.83", "2.99398, -48.9768, 5.93685, 0.83", "3.27904, -51.7191, 7.18963, 0.83", "3.66206, -55.529, 9.03659, 0.83", "4.07008, -58.6031, 10.5784, 0.83", "4.72455, -62.037, 12.4937, 0.83", "5.47848, -65.1828, 14.3414, 0.83", "6.26506, -67.6081, 15.8119, 0.83", "6.84778, -69.092, 16.6782, 0.83", "7.56054, -70.6642, 17.5628, 0.83", "8.24466, -71.8555, 18.2758, 0.55", "9.82213, -74.1711, 19.4093, 0.83", "11.438, -76.1939, 20.3253, 0.55", "12.8474, -78.179, 21.0384, 0.83", "13.8199, -87.618, 26.0731, 0.83", "14.4505, -96.6084, 31.9994, 0.83", "16.1569, -104.708, 39.0331, 0.83", "19.43, -112.026, 46.4466, 0.83", "24.0403, -117.981, 54.4696, 0.83", "27.6742, -122.007, 64.1509, 0.83", "32.9656, -125.423, 73.3088, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-0.661391, -13.1596, -1.52668, 0.83", "1.26388, -14.1757, -1.97295, 0.83", "3.99154, -15.4354, -2.54514, 0.83", "5.09809, -15.9485, -2.72388, 0.83", "6.84159, -16.7554, -2.99862, 0.55", "7.8721, -17.2672, -3.16317, 1.11", "9.55115, -18.1215, -3.43793, 0.83", "11.9317, -19.3688, -3.86843, 0.83", "14.2695, -20.6681, -4.32741, 0.83", "16.7978, -22.2529, -4.98357, 0.83", "18.7771, -23.6722, -5.61392, 0.55", "19.6999, -24.4434, -5.98839, 0.83", "20.9693, -25.6558, -6.6572, 0.28", "21.8564, -26.5846, -7.25094, 0.55", "23.3936, -28.013, -8.42995, 0.28", "23.6697, -28.2252, -8.62633, 0.83", "25.1861, -29.1909, -9.52714, 0.28", "25.8772, -29.5798, -9.84242, 0.28", "27.6168, -30.4486, -10.4499, 0.83", "30.6093, -31.824, -11.2448, 0.83", "32.6773, -32.7497, -11.7445, 0.55", "34.9721, -33.7727, -12.3314, 0.83", "36.8492, -34.5168, -12.794, 0.28", "37.9574, -34.9326, -13.0361, 0.83", "40.3707, -35.7707, -13.5108, 0.28", "42.3729, -36.4144, -13.8377, 0.55", "44.5613, -36.9965, -14.1799, 0.55", "48.0446, -37.7252, -14.6594, 0.55", "49.9571, -38.1037, -14.8811, 0.28", "50.5152, -38.2171, -14.9259, 0.55", "53.059, -38.671, -15.0713, 0.28", "54.4707, -38.9284, -15.1182, 0.55", "55.7599, -39.1841, -15.1935, 0.28", "56.7894, -39.437, -15.3035, 0.83", "58.7791, -39.9944, -15.6291, 0.55", "61.5055, -40.8848, -16.151, 0.55", "63.4045, -41.5423, -16.5923, 0.55", "64.2534, -41.8336, -16.7943, 0.28", "64.7613, -42.022, -16.9211, 0.83", "66.4007, -42.6867, -17.322, 0.83", "67.9923, -43.4365, -17.7, 0.28", "68.9542, -43.9579, -17.9559, 0.55", "70.523, -44.7804, -18.4063, 0.28", "71.5811, -45.2774, -18.7375, 0.83", "73.3766, -46.0465, -19.3412, 0.28", "74.0787, -46.3449, -19.591, 0.55", "76.1401, -47.3321, -20.3676, 0.28", "77.3335, -47.9864, -20.8431, 0.83", "78.4359, -48.6231, -21.3097, 0.28", "79.9001, -49.4736, -21.9452, 0.83", "82.328, -50.9073, -23.0112, 0.28", "83.9544, -51.9073, -23.6945, 0.55", "86.0125, -53.2908, -24.4744, 0.55", "95.075, -56.9425, -27.5541, 0.55", "103.653, -61.7784, -30.166, 0.55", "111.985, -66.0484, -34.2521, 0.55", "121.358, -69.4642, -36.6293, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-5.07212, -16.3946, -0.29075, 1.11", "-6.28106, -19.1644, 0.283384, 1.11", "-6.996, -20.8024, 0.622915, 1.11", "-8.09401, -23.3181, 1.14437, 1.11", "-8.9102, -25.1881, 1.53199, 0.83", "-9.8703, -27.3878, 1.98795, 0.83", "-10.6015, -29.063, 2.33518, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.07212, -16.3946, -0.29075, 0.83", "-7.38805, -16.2668, -2.15751, 0.83", "-8.44326, -16.1182, -3.11246, 0.83", "-10.0879, -15.7562, -4.62679, 0.55", "-11.6283, -15.2652, -6.11244, 0.83", "-13.8478, -14.4694, -8.17212, 0.55", "-16.9277, -13.2637, -10.9004, 0.55", "-18.2662, -12.6193, -12.0576, 0.55", "-19.2985, -12.0591, -12.9947, 0.83", "-20.873, -11.055, -14.4412, 0.83", "-21.9871, -10.2653, -15.336, 0.55", "-23.0014, -9.49315, -16.0373, 0.83", "-24.8944, -7.99473, -16.7472, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-167.27, 134.364, -54.3051, 0.28", "-164.349, 137.172, -53.5298, 0.28", "-163.557, 137.747, -53.1897, 0.83", "-161.832, 138.679, -52.0765, 0.55", "-160.268, 139.383, -51.1497, 0.55", "-157.166, 140.53, -49.4739, 0.28", "-155.785, 140.976, -48.7264, 0.55", "-152.558, 141.638, -47.3057, 0.55", "-147.483, 142.427, -45.4516, 0.28", "-144.458, 142.784, -44.326, 0.55", "-141.578, 143.017, -43.3589, 0.28", "-139.565, 143.117, -42.9332, 0.55", "-133.702, 143.447, -42.4507, 0.28", "-132.255, 143.515, -42.6884, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-167.27, 134.364, -54.3051, 0.28", "-168.605, 136.151, -53.9375, 0.28", "-169.229, 136.998, -53.7602, 0.83", "-169.828, 137.788, -53.6012, 0.28", "-170.147, 138.203, -53.5052, 0.55", "-170.994, 139.273, -53.2435, 0.28", "-171.179, 139.484, -53.2093, 0.55", "-171.845, 140.18, -53.1542, 0.28", "-172.41, 140.735, -53.1294, 0.55", "-173.054, 141.333, -53.1573, 0.28", "-173.347, 141.595, -53.2109, 0.55", "-175.366, 143.297, -53.8477, 0.28", "-175.847, 143.699, -54.0765, 0.55", "-176.416, 144.167, -54.3973, 0.28", "-176.61, 144.338, -54.5202, 0.55", "-178.083, 145.728, -55.5883, 0.28", "-178.646, 146.306, -56.0537, 0.83", "-180.624, 148.49, -57.8643, 0.28", "-181.018, 148.934, -58.2462, 0.55", "-181.705, 149.726, -58.9429, 0.28", "-182.356, 150.497, -59.5865, 0.55", "-182.936, 151.211, -60.1296, 0.28", "-183.285, 151.646, -60.4087, 0.55", "-184.091, 152.625, -60.92, 0.28", "-184.458, 153.015, -61.086, 1.38", "-186.531, 154.962, -61.741, 0.28", "-187.077, 155.448, -61.8152, 0.55", "-187.926, 156.179, -61.8205, 0.28", "-188.535, 156.7, -61.7969, 1.94", "-190.714, 158.545, -61.5476, 0.28", "-191.114, 158.871, -61.4824, 0.55", "-192.999, 160.245, -60.9871, 0.28", "-193.671, 160.708, -60.8025, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.6015, -29.063, 2.33518, 0.83", "-11.2846, -31.0498, 2.3738, 0.83", "-11.8829, -32.7896, 2.40761, 0.83", "-12.3483, -34.1431, 2.43391, 1.11" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.6015, -29.063, 2.33518, 0.83", "-12.1123, -30.5149, 0.0783462, 0.83", "-13.1294, -31.7663, -2.22382, 0.55", "-13.8021, -32.851, -4.30465, 0.83", "-14.1732, -33.8308, -6.34907, 0.55", "-14.41, -34.6093, -7.97357, 0.55", "-14.6556, -35.9038, -10.7681, 0.83", "-14.5871, -36.7548, -12.674, 0.83", "-14.385, -37.6572, -14.685, 0.55", "-13.9125, -39.3662, -18.4489, 0.28", "-13.8013, -39.8549, -19.4293, 0.28", "-13.6809, -40.9414, -21.3972, 0.83", "-13.6531, -41.9282, -22.8683, 0.55", "-13.5944, -42.8745, -24.1411, 0.83", "-13.5324, -43.6421, -25.1384, 0.83", "-13.3842, -45.4985, -27.3482, 0.28", "-13.2871, -46.2762, -28.3193, 0.83", "-13.0838, -47.3223, -29.6544, 0.83", "-12.504, -48.9373, -31.8409, 0.28", "-11.9738, -50.0725, -33.5067, 0.83", "-11.5627, -50.8631, -34.8384, 0.83", "-10.9336, -52.1103, -37.2044, 0.28", "-10.6361, -52.8901, -38.7645, 0.28", "-10.5765, -53.3003, -39.6494, 0.55", "-10.5906, -54.0116, -41.1881, 0.55", "-10.6726, -55.3163, -44.0815, 0.83", "-10.8285, -56.2, -45.9795, 0.28", "-10.9394, -56.6136, -46.7794, 0.55", "-11.3092, -57.8789, -49.0192, 0.28", "-11.4139, -58.2938, -49.6888, 0.83", "-11.5941, -59.3891, -51.2987, 0.28", "-11.6565, -59.7908, -51.8561, 0.55", "-11.8357, -60.8415, -53.3198, 0.28", "-11.9164, -61.2732, -53.9206, 0.83", "-12.3927, -63.2978, -56.7002, 0.28", "-12.7491, -64.5914, -58.4552, 0.83", "-13.3874, -66.5007, -61.0559, 0.28", "-13.484, -66.7552, -61.446, 0.55", "-13.9987, -68.0307, -63.4915, 0.28", "-14.1212, -68.3336, -63.9781, 0.55", "-14.5636, -69.5816, -65.9602, 0.28", "-14.8057, -70.3383, -67.1203, 1.11", "-15.5052, -73.2013, -71.3061, 0.28", "-15.5848, -73.6958, -72.0071, 0.28", "-15.6609, -74.5105, -73.0748, 0.83", "-15.7614, -76.8443, -75.7875, 0.28", "-15.7521, -77.2874, -76.2065, 0.55", "-15.597, -79.3621, -77.7759, 0.28", "-15.5018, -80.4423, -78.3274, 0.83", "-15.419, -81.7461, -78.9065, 0.83", "-15.3809, -83.5257, -79.5065, 0.28", "-15.397, -85.841, -80.009, 0.28", "-15.4074, -86.2467, -80.0892, 0.83", "-15.5265, -89.0088, -80.6276, 0.28", "-15.5591, -89.6476, -80.7601, 0.55", "-15.6075, -91.4884, -81.1551, 0.28", "-15.6877, -94.0282, -81.6931, 0.28", "-15.7114, -95.2821, -81.9673, 1.11", "-15.6517, -98.4682, -82.6324, 0.28", "-15.5856, -100.577, -83.0643, 0.28", "-15.5607, -101.492, -83.2263, 0.55", "-15.539, -102.533, -83.3868, 0.83", "-15.5621, -103.748, -83.5717, 0.83", "-15.7346, -107.097, -84.0562, 0.28", "-15.8041, -107.953, -84.2056, 0.83", "-15.9779, -110.095, -84.686, 0.28", "-15.9922, -110.302, -84.7419, 0.83", "-16.1691, -113.252, -85.6506, 0.28", "-16.2175, -114.068, -85.9774, 0.83", "-16.3605, -117.13, -87.4423, 0.28", "-16.3838, -117.94, -87.835, 1.11", "-16.4293, -119.645, -88.6616, 0.28", "-16.4594, -120.511, -89.0808, 0.83", "-16.5506, -123.689, -90.5789, 0.28", "-16.5717, -124.222, -90.8566, 0.55", "-16.6795, -125.516, -91.5415, 0.28", "-16.7648, -126.495, -92.0381, 0.55", "-17.0038, -129.521, -93.5155, 0.28", "-17.057, -130.517, -93.9757, 0.55", "-17.0918, -132.545, -94.8878, 0.28", "-17.0527, -133.83, -95.4874, 0.55", "-16.9416, -135.206, -96.1254, 0.55", "-16.4779, -138.832, -97.681, 0.28", "-16.3363, -139.604, -97.9869, 0.55", "-15.6765, -142.554, -99.1311, 0.28", "-15.3995, -143.586, -99.5458, 0.55", "-14.7843, -145.706, -100.452, 0.28", "-14.5955, -146.374, -100.753, 0.55", "-13.9202, -148.736, -101.826, 0.28", "-13.7275, -149.506, -102.196, 0.55", "-13.0631, -152.788, -103.8, 0.28", "-12.8743, -154.108, -104.5, 0.83", "-12.7782, -155.459, -105.241, 0.28", "-12.7695, -156.138, -105.611, 0.55", "-12.8724, -157.873, -106.545, 0.28", "-12.9271, -158.462, -106.867, 0.55", "-13.2019, -160.204, -107.922, 0.28", "-13.3696, -161.252, -108.588, 0.28", "-13.4436, -161.767, -108.9, 0.83", "-13.6778, -164.241, -110.361, 0.28", "-13.7234, -165.252, -110.945, 0.83", "-13.6704, -167.53, -112.296, 0.28", "-13.4957, -169.37, -113.374, 0.28", "-13.294, -170.637, -114.117, 0.55", "-12.7734, -173.115, -115.516, 0.28", "-12.504, -174.056, -116.031, 0.83", "-11.8555, -175.974, -117.018, 0.28", "-11.5895, -176.63, -117.317, 0.55", "-11.4223, -177.042, -117.512, 0.28", "-11.2744, -177.422, -117.676, 0.55", "-10.9736, -178.4, -118.0, 0.55", "-10.6211, -179.975, -118.6, 0.83", "-10.3316, -181.601, -119.233, 0.28", "-10.2216, -182.308, -119.51, 0.55", "-9.96791, -184.23, -120.229, 0.28", "-9.79683, -185.927, -120.83, 0.83", "-9.57795, -189.084, -121.914, 0.28", "-9.53317, -190.28, -122.339, 0.28", "-9.53265, -192.682, -123.169, 0.83", "-9.58973, -194.544, -123.761, 0.28", "-9.69648, -195.562, -124.061, 0.28", "-9.73378, -195.799, -124.121, 0.55", "-9.98659, -196.861, -124.269, 0.28", "-10.43, -198.204, -124.45, 0.83", "-11.303, -200.396, -124.733, 0.28", "-11.8434, -201.713, -124.896, 0.83", "-12.4391, -203.208, -125.064, 0.28", "-13.246, -205.344, -125.26, 0.83", "-13.85, -206.956, -125.364, 0.28", "-13.9573, -207.241, -125.381, 0.55", "-14.3755, -208.334, -125.422, 0.28", "-14.6481, -209.167, -125.433, 0.55", "-15.0663, -210.593, -125.504, 0.28", "-15.2767, -211.624, -125.659, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-24.8944, -7.99473, -16.7472, 0.55", "-26.5646, -8.71774, -18.0399, 0.55", "-29.3948, -9.36883, -21.0727, 0.55", "-31.4178, -9.70304, -24.1905, 0.55", "-32.4901, -9.90342, -25.9773, 0.83", "-34.7481, -10.4648, -29.9603, 0.55", "-35.5966, -10.6929, -31.4357, 0.55", "-38.6415, -11.8632, -37.5438, 0.55", "-41.2624, -13.1412, -43.4963, 0.28", "-41.8854, -13.4451, -44.8865, 0.83", "-43.9656, -14.4839, -49.2659, 0.28", "-44.6055, -14.8649, -50.5071, 0.55", "-46.5595, -16.331, -53.9363, 0.28", "-47.5013, -17.1593, -55.2883, 0.55", "-48.4116, -17.8288, -56.3697, 0.55", "-49.5308, -18.4655, -57.8204, 0.55", "-52.5103, -19.6118, -61.7964, 0.28", "-52.7168, -19.6453, -62.0948, 0.55", "-55.6055, -19.4099, -66.3305, 0.28", "-56.6695, -19.036, -68.0015, 0.55", "-58.9083, -17.6518, -71.5445, 0.28", "-59.737, -16.881, -72.865, 0.55", "-61.325, -14.9813, -75.1227, 0.28", "-61.8385, -14.2751, -75.7008, 0.55", "-63.9348, -11.0096, -77.9082, 0.28", "-65.4946, -8.48727, -79.4719, 0.55", "-66.9947, -6.13116, -80.7674, 0.28", "-67.7909, -4.97122, -81.4286, 0.55", "-70.9707, -0.764509, -83.6066, 0.28", "-74.9537, 3.42728, -86.2964, 0.55", "-78.6334, 6.52127, -88.5552, 0.28", "-79.8015, 7.27494, -89.1926, 0.55", "-81.778, 8.30947, -90.1489, 0.28", "-84.7296, 9.64947, -91.5784, 0.55", "-92.5304, 12.6114, -95.2197, 0.28", "-94.2071, 13.1898, -95.9443, 0.83", "-97.6258, 14.2319, -97.5646, 0.28", "-99.9361, 14.9077, -98.7481, 0.28", "-102.221, 15.5817, -99.9695, 0.83", "-103.42, 16.0103, -100.452, 0.83", "-109.35, 18.5664, -101.64, 0.28", "-110.751, 19.1055, -102.015, 0.55", "-115.798, 20.6864, -103.06, 0.28", "-118.191, 21.2714, -103.352, 1.11", "-130.106, 23.5553, -104.584, 0.28", "-132.741, 23.9445, -104.898, 0.83", "-142.937, 24.9642, -106.058, 0.28", "-148.264, 25.2244, -107.513, 0.83", "-152.247, 25.2403, -109.263, 0.28", "-156.087, 25.0701, -111.548, 0.55", "-158.185, 24.9031, -113.281, 0.28", "-159.487, 24.8698, -114.445, 0.55", "-163.7, 25.0669, -119.07, 0.28", "-164.113, 25.067, -119.724, 0.55", "-164.91, 25.0277, -121.246, 0.55", "-167.118, 24.8725, -125.663, 0.55", "-167.933, 24.8158, -127.534, 0.28", "-169.714, 24.7352, -132.023, 0.55", "-171.94, 24.4886, -138.004, 0.55", "-173.019, 24.3148, -141.075, 0.28", "-173.357, 24.2643, -142.058, 0.83", "-175.848, 23.9438, -148.963, 0.28", "-176.199, 23.8856, -149.956, 0.83", "-178.323, 23.5712, -155.71, 0.28", "-178.517, 23.5073, -156.23, 0.55", "-179.248, 23.0826, -158.192, 0.28", "-179.53, 22.8621, -158.919, 0.55", "-181.382, 21.25, -163.014, 0.28", "-181.892, 20.825, -164.256, 0.55", "-184.048, 19.2485, -169.708, 0.28", "-184.641, 18.8472, -171.333, 0.83", "-186.735, 17.5506, -177.232, 0.28", "-186.956, 17.4024, -177.942, 0.55", "-188.699, 16.2247, -183.916, 0.28", "-188.95, 15.9755, -184.945, 0.83", "-189.684, 15.0241, -188.31, 0.28", "-189.867, 14.6476, -189.329, 0.83", "-190.802, 10.0689, -198.16, 0.28", "-190.838, 9.45817, -199.081, 0.55", "-190.823, 6.89949, -202.061, 0.28", "-190.804, 6.56347, -202.415, 0.83", "-190.582, 3.90018, -204.808, 0.28", "-190.219, 0.398787, -207.547, 0.55", "-190.061, -1.15216, -208.488, 0.28", "-189.95, -2.41563, -209.299, 0.55", "-189.764, -6.01534, -211.599, 0.28", "-189.701, -7.50524, -212.651, 0.55", "-189.726, -8.97882, -213.717, 0.28", "-189.822, -9.8529, -214.331, 0.55", "-190.356, -12.9229, -216.956, 0.28", "-190.571, -13.7581, -217.82, 0.55", "-192.077, -17.52, -222.232, 0.28", "-192.631, -18.541, -223.833, 0.55", "-193.15, -19.2594, -225.284, 0.55", "-194.657, -20.7274, -229.184, 0.55", "-196.226, -21.5503, -232.758, 0.28", "-196.841, -21.7564, -234.137, 0.55", "-199.276, -21.8199, -239.083, 0.28", "-199.834, -21.718, -240.354, 0.55", "-200.895, -21.2111, -243.001, 0.28", "-201.514, -20.4828, -244.42, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-24.8944, -7.99473, -16.7472, 0.55", "-28.1285, -8.15585, -16.5264, 0.55", "-30.9263, -8.37859, -16.243, 0.83", "-34.1835, -8.69552, -15.9842, 0.55", "-36.0803, -8.91677, -15.6154, 0.28", "-38.4747, -9.26476, -14.9764, 0.55", "-42.154, -9.97859, -13.7905, 0.28", "-43.3345, -10.2893, -13.3449, 0.55", "-46.3986, -11.3205, -12.1735, 0.55", "-51.0377, -13.1235, -10.2971, 0.55", "-53.7115, -14.1968, -9.21777, 0.28", "-57.3639, -15.6602, -7.74523, 0.55", "-59.3676, -16.4824, -6.99676, 0.55", "-62.5, -17.7622, -5.74747, 0.55", "-63.5065, -18.1764, -5.34378, 0.83", "-65.4167, -18.9401, -4.8012, 0.28", "-65.9814, -19.1421, -4.64478, 0.55", "-67.7083, -19.6501, -4.16972, 0.28", "-68.7904, -19.9064, -3.82523, 0.55", "-70.4513, -20.2751, -3.23496, 0.28", "-72.0895, -20.6502, -2.66041, 0.55", "-73.9839, -21.1345, -1.9727, 0.28", "-75.3674, -21.4826, -1.46103, 0.55", "-77.9732, -22.1144, -0.43453, 0.28", "-79.779, -22.5341, 0.318111, 0.28", "-81.0596, -22.8057, 0.891379, 0.28", "-82.7079, -23.1344, 1.65325, 0.55", "-84.5712, -23.4927, 2.42521, 0.55", "-86.3583, -23.883, 3.12673, 0.28", "-87.8625, -24.2572, 3.66688, 0.55", "-90.2513, -24.9337, 4.38115, 0.55", "-91.7216, -25.4113, 4.72004, 0.55", "-93.5704, -26.0083, 5.04638, 0.55", "-94.7668, -26.3834, 5.20814, 0.55", "-98.4532, -27.5297, 5.67696, 0.55", "-100.888, -28.2536, 6.01171, 0.55", "-104.0, -29.1556, 6.4432, 0.55", "-107.208, -30.0838, 6.90921, 0.28", "-109.996, -30.8929, 7.3168, 0.55", "-113.093, -31.7577, 7.75123, 0.55", "-116.583, -32.7425, 8.22816, 0.55", "-119.135, -33.4797, 8.60925, 0.28", "-123.904, -34.9488, 9.32362, 0.55", "-125.769, -35.586, 9.55108, 0.83", "-127.371, -36.1441, 9.71694, 0.28", "-128.311, -36.4773, 9.76723, 0.55", "-130.579, -37.3292, 9.83205, 0.28", "-131.356, -37.6361, 9.84741, 0.28", "-133.185, -38.3983, 9.89758, 0.55", "-142.001, -41.5463, 13.7247, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-12.3483, -34.1431, 2.43391, 0.83", "-11.1961, -35.6073, 3.70067, 0.83", "-10.2296, -37.0427, 5.02127, 0.83", "-8.11471, -40.8197, 8.34318, 0.83", "-4.74737, -47.9448, 14.2473, 0.55", "-3.72931, -50.4273, 16.1564, 0.55", "-2.78825, -53.1003, 18.1514, 0.83", "-1.85978, -56.8042, 20.9706, 0.55", "-1.34609, -59.8608, 23.2381, 0.83", "-1.20006, -61.7268, 24.4683, 0.83", "-1.19284, -64.1383, 25.5634, 0.83", "-1.29636, -66.7623, 26.6462, 0.83", "-1.43464, -69.3474, 27.5194, 0.55", "-1.66179, -71.4077, 28.2384, 0.55", "-2.15792, -74.4479, 29.4584, 0.55", "-3.06303, -77.9583, 31.1479, 0.55", "-3.99508, -80.3489, 32.4167, 0.55", "-5.45059, -83.3409, 34.0253, 0.83", "-7.49915, -86.8407, 36.0101, 0.28", "-8.18014, -87.8443, 36.6021, 0.55", "-10.8808, -91.301, 38.6561, 0.55", "-12.853, -93.4636, 39.908, 0.55", "-14.0193, -94.5999, 40.4543, 0.55", "-15.4633, -95.8056, 40.9366, 0.28", "-18.1566, -97.8471, 41.5534, 0.55", "-20.9599, -99.8331, 42.1496, 0.55", "-23.573, -101.478, 42.6295, 0.55", "-27.137, -103.526, 43.3028, 0.55", "-29.8362, -104.991, 43.8285, 0.55", "-31.9579, -106.055, 44.2494, 0.55", "-34.1772, -107.099, 44.7442, 0.28", "-35.6741, -107.822, 45.0933, 0.55", "-38.7943, -109.528, 45.8447, 0.28", "-40.1246, -110.254, 46.168, 0.55", "-41.828, -121.215, 50.5246, 0.55", "-43.141, -132.049, 55.3497, 0.55", "-44.1826, -141.632, 62.5917, 0.55", "-44.1083, -151.62, 69.2813, 0.55", "-44.9102, -161.383, 76.2825, 0.55", "-46.4773, -172.274, 80.881, 0.55", "-48.9725, -182.362, 86.892, 0.55", "-52.4973, -191.934, 93.3068, 0.55", "-53.4413, -201.783, 100.154, 0.55" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.3483, -34.1431, 2.43391, 0.83", "-13.2287, -37.6259, 1.63347, 0.83", "-13.803, -40.2219, 1.02679, 0.83", "-14.5533, -43.8885, 0.379468, 0.83", "-15.0507, -46.4022, 0.027597, 0.83", "-15.7247, -49.7082, -0.283673, 0.83", "-16.3248, -52.403, -0.450007, 0.83", "-17.009, -55.1371, -0.407041, 0.83", "-17.8042, -58.0522, -0.224286, 0.55", "-18.3353, -59.8948, 0.0442276, 1.11", "-18.9859, -62.2975, 0.548749, 0.55", "-19.5491, -64.401, 1.05227, 0.55", "-20.0771, -66.5767, 1.60939, 0.55", "-20.3249, -67.6945, 1.8837, 0.55", "-20.7947, -70.3155, 2.3944, 0.83", "-21.3551, -74.5256, 3.08968, 0.83", "-21.5702, -76.5361, 3.35185, 0.83", "-21.8109, -78.9824, 3.6156, 0.83", "-22.0048, -80.9437, 3.77538, 0.83", "-22.2768, -83.2209, 3.89819, 0.83", "-22.6582, -85.9413, 3.97112, 0.83", "-23.1169, -89.0608, 4.04692, 0.83", "-23.5911, -92.3852, 4.10156, 0.83", "-23.9272, -94.8506, 4.11221, 0.83", "-24.3191, -98.1824, 4.15129, 0.83", "-24.6629, -101.81, 4.21611, 0.83", "-24.8572, -104.744, 4.28124, 0.83", "-24.9012, -106.82, 4.31615, 0.83", "-24.8357, -110.552, 4.37251, 0.83", "-24.7145, -112.84, 4.36435, 0.55", "-24.572, -114.191, 4.3182, 0.55", "-24.4626, -114.896, 4.2571, 0.83", "-24.2238, -116.045, 4.08135, 0.28", "-23.9757, -117.123, 3.77367, 0.83", "-23.5437, -118.859, 3.03105, 0.28", "-23.2043, -120.474, 2.22609, 0.83", "-23.0261, -121.635, 1.65925, 0.28", "-22.9026, -122.919, 1.10236, 0.83", "-22.8048, -125.884, -0.10986, 0.28", "-22.8332, -127.132, -0.589896, 0.28", "-22.9549, -128.411, -1.0919, 0.55", "-23.2605, -130.471, -1.91682, 0.55", "-23.8448, -133.183, -2.94336, 0.55", "-24.2656, -134.615, -3.44007, 0.28", "-24.6624, -135.645, -3.75607, 0.55", "-25.8864, -138.305, -4.59434, 0.28", "-26.2882, -139.085, -4.84096, 0.55", "-27.3354, -141.03, -5.4342, 0.55", "-28.4318, -142.932, -5.98869, 0.55", "-29.7701, -145.373, -6.63005, 0.28", "-30.3586, -146.506, -6.91364, 0.28", "-31.2705, -148.415, -7.31812, 0.55", "-31.9642, -150.082, -7.68303, 0.28", "-32.3556, -151.229, -7.93581, 0.55", "-32.9427, -153.519, -8.36293, 0.28", "-33.2962, -155.443, -8.62494, 0.55", "-33.5978, -157.781, -8.87485, 0.28", "-33.7734, -160.486, -9.06912, 0.28", "-33.7807, -160.869, -9.08359, 0.55", "-33.7336, -162.373, -9.10338, 0.83", "-33.5805, -164.73, -9.10287, 0.83", "-33.3621, -167.262, -9.07474, 0.28", "-33.2197, -168.959, -9.07257, 0.83", "-33.087, -171.22, -9.08423, 0.83", "-33.019, -173.704, -9.12964, 0.28", "-33.0234, -175.515, -9.19091, 0.83", "-33.1038, -178.142, -9.25806, 0.28", "-33.2162, -179.406, -9.26239, 0.55", "-33.3899, -180.509, -9.25393, 0.55", "-33.5848, -181.5, -9.21767, 0.28", "-33.6912, -181.997, -9.1923, 0.55", "-33.9468, -183.323, -9.25313, 0.28", "-34.0593, -184.198, -9.39696, 0.55", "-34.1525, -185.428, -9.75575, 0.28", "-34.2112, -186.837, -10.2966, 0.28", "-34.2583, -188.298, -10.9599, 0.55", "-34.3134, -191.104, -12.3405, 0.28", "-34.2968, -193.012, -13.2193, 0.83", "-34.242, -195.96, -14.5058, 0.28", "-34.2195, -196.932, -14.8944, 0.55", "-34.2084, -198.877, -15.5464, 0.28", "-34.2097, -201.575, -16.2139, 0.55", "-34.1848, -204.349, -16.4946, 0.28", "-34.1763, -205.284, -16.4943, 0.55", "-34.1628, -206.869, -16.3294, 0.28", "-34.1929, -207.968, -16.1721, 0.55", "-34.2737, -209.383, -15.9108, 0.55", "-34.5054, -211.723, -15.4484, 0.28", "-34.6822, -213.066, -15.2249, 0.55", "-34.9296, -214.694, -14.9709, 0.28", "-35.3553, -217.162, -14.6261, 0.28", "-35.6763, -218.706, -14.4531, 0.55", "-36.1613, -220.555, -14.2496, 0.28", "-36.3937, -221.222, -14.2023, 0.55", "-36.8812, -222.355, -14.1691, 0.28", "-37.3117, -223.181, -14.2563, 0.55", "-38.6056, -225.372, -14.7037, 0.28", "-39.221, -226.327, -14.977, 0.55", "-40.5509, -228.293, -15.6112, 0.28", "-41.4851, -229.651, -16.0743, 0.83", "-43.7004, -232.841, -17.2491, 0.28", "-44.3267, -233.728, -17.624, 0.55", "-45.4205, -235.313, -18.4388, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-15.2767, -211.624, -125.659, 0.28", "-14.873, -214.718, -126.176, 0.28", "-14.7146, -215.925, -126.408, 0.83", "-14.0778, -220.721, -127.386, 0.28", "-13.9019, -222.227, -127.726, 0.83", "-13.355, -226.543, -128.786, 0.28", "-13.215, -227.714, -129.103, 0.83", "-12.8559, -231.037, -130.127, 0.28", "-12.7971, -231.621, -130.33, 0.55", "-12.5088, -234.84, -131.566, 0.28", "-12.374, -237.022, -132.472, 0.83", "-12.2841, -240.275, -133.89, 0.28", "-12.2994, -240.908, -134.192, 0.55", "-12.4346, -242.805, -135.132, 0.28", "-12.6378, -244.206, -135.806, 0.83", "-13.0002, -246.016, -136.69, 0.28", "-13.2806, -247.171, -137.265, 0.55", "-13.6594, -248.905, -138.177, 0.28", "-13.9496, -250.519, -139.054, 0.28", "-14.2811, -252.822, -140.399, 0.55", "-14.4363, -255.925, -142.307, 0.28", "-14.4133, -256.599, -142.729, 0.55", "-13.9892, -259.931, -144.953, 0.28", "-13.7253, -260.997, -145.689, 0.83", "-12.7182, -263.93, -147.872, 0.28", "-11.7599, -266.028, -149.521, 0.28", "-11.4614, -266.588, -149.962, 0.55", "-9.71001, -269.559, -152.255, 0.28", "-8.55304, -271.256, -153.518, 0.28", "-8.25592, -271.684, -153.824, 0.83", "-6.56475, -274.118, -155.378, 0.28", "-6.05537, -274.973, -155.851, 0.55", "-5.25911, -276.548, -156.551, 0.28", "-4.58676, -278.376, -157.106, 0.28", "-4.32776, -279.433, -157.321, 0.55", "-3.88235, -281.832, -157.63, 0.28", "-3.6504, -283.752, -157.824, 0.83", "-3.40431, -286.256, -158.077, 0.28", "-3.17853, -288.444, -158.336, 0.28", "-2.87127, -291.216, -158.699, 0.28", "-2.58685, -293.0, -158.957, 0.83", "-1.63348, -298.042, -159.784, 0.28", "-1.33629, -299.249, -159.995, 0.55", "-0.631348, -301.565, -160.407, 0.28", "-0.433411, -302.125, -160.52, 0.55", "0.61801, -304.778, -161.086, 0.28", "1.0028, -305.65, -161.251, 0.55", "2.09962, -307.642, -161.446, 0.28", "2.52515, -308.445, -161.496, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-15.2767, -211.624, -125.659, 0.28", "-16.3059, -214.099, -125.915, 0.28", "-17.1742, -216.243, -125.979, 0.55", "-18.4738, -219.369, -125.991, 0.28", "-18.6448, -219.778, -125.995, 0.55", "-19.3279, -221.35, -126.037, 0.28", "-19.6274, -221.99, -126.07, 0.55", "-20.8968, -224.594, -126.248, 0.28", "-21.252, -225.3, -126.322, 0.55", "-22.5123, -227.654, -126.655, 0.28", "-23.0966, -228.828, -126.901, 0.55", "-24.4295, -231.548, -127.576, 0.28", "-24.7939, -232.333, -127.8, 1.11", "-25.978, -235.294, -128.927, 0.28", "-26.4203, -236.684, -129.5, 0.55", "-27.122, -239.436, -131.049, 0.28", "-27.3682, -240.84, -131.952, 0.55", "-27.4825, -241.862, -132.685, 0.55", "-27.7588, -244.998, -135.243, 0.28", "-27.8374, -245.945, -136.085, 0.55", "-28.2399, -249.741, -139.601, 0.28", "-28.5534, -251.866, -141.612, 0.28", "-28.703, -252.62, -142.366, 0.55", "-29.451, -255.209, -144.888, 0.28", "-29.7657, -256.044, -145.64, 0.83", "-30.4954, -257.825, -147.124, 0.28", "-30.6266, -258.17, -147.364, 0.55", "-31.4867, -260.493, -148.976, 0.28", "-32.0357, -262.262, -150.06, 0.83", "-32.6542, -264.817, -151.392, 0.28", "-32.828, -265.819, -151.876, 0.55", "-33.1854, -268.982, -153.253, 0.28", "-33.2182, -269.56, -153.479, 0.55", "-33.2205, -271.404, -153.983, 0.28", "-33.1964, -271.893, -154.098, 0.55", "-32.9839, -274.376, -154.57, 0.28", "-32.9215, -274.977, -154.682, 0.83", "-32.7141, -277.536, -155.084, 0.28", "-32.625, -279.898, -155.509, 0.55", "-32.6772, -281.593, -155.812, 0.55", "-33.0266, -285.109, -156.423, 0.28", "-33.1945, -286.037, -156.605, 0.83", "-33.5921, -287.247, -156.856, 0.83", "-35.0777, -290.132, -157.488, 0.28", "-36.2562, -291.845, -157.885, 0.28", "-37.0178, -292.731, -158.036, 0.55", "-38.6605, -294.324, -158.278, 0.28", "-40.8238, -296.257, -158.555, 0.28", "-41.9609, -297.194, -158.681, 0.55", "-43.1719, -297.99, -158.726, 0.28", "-43.9451, -298.466, -158.756, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-45.4205, -235.313, -18.4388, 0.28", "-44.0891, -236.622, -18.9766, 0.28", "-42.556, -238.13, -19.5958, 0.28", "-41.4355, -239.232, -20.0484, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-45.4205, -235.313, -18.4388, 0.55", "-48.6684, -238.439, -15.612, 0.55", "-50.4636, -240.662, -13.5743, 0.28", "-50.9821, -241.68, -12.6399, 0.55", "-52.026, -244.921, -9.73807, 0.28", "-52.205, -245.992, -8.88218, 0.83", "-52.4824, -249.458, -6.30014, 0.28", "-52.4085, -249.958, -6.00816, 0.55", "-51.7378, -253.031, -4.67531, 0.28", "-51.4303, -254.321, -4.20604, 0.55", "-50.8547, -257.118, -3.53975, 0.28", "-50.6894, -258.469, -3.29822, 0.55", "-50.7537, -262.986, -2.73111, 0.28", "-51.0769, -266.214, -2.37477, 0.28", "-51.2884, -267.36, -2.25342, 0.83", "-52.3658, -271.831, -1.69863, 0.28", "-52.9444, -273.765, -1.40724, 0.55", "-54.7834, -279.194, -0.52488, 0.28", "-55.4859, -281.051, -0.150205, 0.55", "-56.2734, -283.017, 0.115491, 0.28", "-56.8885, -284.554, 0.222301, 0.55", "-57.5958, -286.306, 0.31332, 0.28", "-58.4309, -288.582, 0.333132, 0.28", "-58.828, -289.779, 0.224649, 0.55", "-60.4001, -294.674, -0.606015, 0.28", "-60.6387, -295.51, -0.86414, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-41.4355, -239.232, -20.0484, 0.28", "-39.546, -240.144, -22.0901, 0.28", "-38.1805, -240.821, -23.6276, 0.28", "-37.5438, -241.078, -24.3276, 0.55", "-36.0232, -241.64, -25.9685, 0.28", "-35.276, -241.854, -26.6612, 0.55", "-33.2521, -242.326, -28.3387, 0.28", "-32.7368, -242.414, -28.6834, 0.55", "-30.4433, -242.651, -29.914, 0.28", "-30.1081, -242.669, -30.0652, 0.55", "-27.4565, -242.752, -31.1067, 0.28", "-26.4713, -242.799, -31.478, 0.55", "-22.5465, -243.121, -32.9104, 0.28", "-21.6943, -243.242, -33.2303, 0.55", "-19.0572, -243.802, -34.2673, 0.28", "-17.1491, -244.359, -35.1157, 0.28", "-15.9679, -244.831, -35.7468, 0.55", "-14.1988, -245.757, -36.945, 0.28", "-13.3563, -246.339, -37.6723, 0.28", "-12.9004, -246.708, -38.1624, 0.55", "-11.5229, -248.037, -39.9909, 0.28", "-11.0441, -248.533, -40.6666, 0.83", "-9.21975, -250.475, -43.4142, 0.28", "-9.05266, -250.658, -43.6915, 0.55", "-7.77929, -252.029, -45.9179, 0.28", "-7.65659, -252.157, -46.1377, 0.55", "-6.56813, -253.326, -48.2035, 0.28", "-6.05319, -253.833, -49.0035, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-41.4355, -239.232, -20.0484, 0.28", "-39.5906, -244.622, -22.2727, 0.28", "-39.2395, -245.626, -22.5757, 0.55", "-38.5654, -247.717, -23.1299, 0.28", "-38.4448, -248.112, -23.1882, 0.55", "-38.0924, -249.429, -23.3109, 0.28", "-37.9372, -250.058, -23.3545, 0.55", "-37.515, -252.04, -23.1604, 0.28", "-37.3885, -252.694, -23.1337, 0.55", "-36.86, -255.577, -23.1213, 0.28", "-36.5273, -257.201, -23.1095, 0.28", "-36.4243, -257.734, -23.1035, 0.55", "-36.0094, -260.059, -23.0231, 0.28", "-35.9354, -260.563, -22.9806, 0.55", "-35.768, -262.147, -22.8306, 0.28", "-35.7604, -263.364, -22.6573, 0.55", "-35.9513, -265.823, -22.1599, 0.28", "-36.0234, -266.42, -22.0242, 0.55", "-36.5205, -268.95, -21.3508, 0.28", "-36.7717, -269.901, -21.0665, 0.83", "-37.5551, -271.937, -20.391, 0.28", "-37.8385, -272.502, -20.1766, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_33", "dend_32", "dend_31", "dend_30", "dend_25", "dend_19", "dend_0", "dend_29", "dend_26", "dend_20", "dend_16", "dend_1", "dend_28", "dend_27", "dend_24", "dend_21", "dend_18", "dend_17", "dend_5", "dend_2", "dend_23", "dend_22", "dend_9", "dend_6", "dend_4", "dend_3", "dend_15", "dend_10", "dend_8", "dend_7", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_25", "dend_25", "dend_25", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_0", "axon_0", "axon_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_LBC_0226c205f1_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_15, id: dend_15, parent: dend_9
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_37
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_33(0), soma_0(0.4999999997358825)
    connect dend_32(0), soma_0(0.4999999997358825)
    connect dend_31(0), soma_0(0.4999999997358825)
    connect dend_30(0), soma_0(0.4999999997358825)
    connect dend_25(0), soma_0(0.4999999997358825)
    connect dend_19(0), soma_0(0.4999999997358825)
    connect dend_0(0), soma_0(0.4999999997358825)
    connect axon_0(0), soma_0(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_15(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.0460118, 9.4193, 0.0420007, 3.85614 ) }
    soma_0 { pt3dadd( -0.0586314, 8.45043, 0.0375696, 7.03826 ) }
    soma_0 { pt3dadd( -0.0712511, 7.48157, 0.0331385, 8.2185 ) }
    soma_0 { pt3dadd( -0.0838708, 6.51271, 0.0287073, 9.16918 ) }
    soma_0 { pt3dadd( -0.0964904, 5.54385, 0.0242762, 10.0966 ) }
    soma_0 { pt3dadd( -0.10911, 4.57499, 0.0198451, 11.2325 ) }
    soma_0 { pt3dadd( -0.12173, 3.60613, 0.0154139, 12.296 ) }
    soma_0 { pt3dadd( -0.134349, 2.63727, 0.0109828, 12.2546 ) }
    soma_0 { pt3dadd( -0.146969, 1.66841, 0.00655169, 11.6979 ) }
    soma_0 { pt3dadd( -0.159589, 0.69955, 0.00212056, 10.9264 ) }
    soma_0 { pt3dadd( -0.172208, -0.26931, -0.00231057, 9.80041 ) }
    soma_0 { pt3dadd( -0.184828, -1.23817, -0.0067417, 8.57664 ) }
    soma_0 { pt3dadd( -0.197448, -2.20703, -0.0111728, 7.89172 ) }
    soma_0 { pt3dadd( -0.210067, -3.17589, -0.015604, 7.62756 ) }
    soma_0 { pt3dadd( -0.222687, -4.14475, -0.0200351, 7.36341 ) }
    soma_0 { pt3dadd( -0.235307, -5.11361, -0.0244662, 7.04275 ) }
    soma_0 { pt3dadd( -0.247926, -6.08247, -0.0288973, 6.5615 ) }
    soma_0 { pt3dadd( -0.260546, -7.05133, -0.0333285, 5.89923 ) }
    soma_0 { pt3dadd( -0.273166, -8.02019, -0.0377596, 4.92342 ) }
    soma_0 { pt3dadd( -0.285785, -8.98905, -0.0421907, 3.8632 ) }
    soma_0 { pt3dadd( -0.298405, -9.95792, -0.0466218, 2.78029 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 21/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -0.117947, 6.62213, 10.3203, 0.55 ) }
    dend_33 { pt3dadd( -0.0282322, 8.99583, 11.0077, 0.55 ) }
    dend_33 { pt3dadd( 0.434039, 11.621, 12.3594, 0.55 ) }
    dend_33 { pt3dadd( 0.957354, 13.6431, 13.6509, 0.55 ) }
    dend_33 { pt3dadd( 1.42759, 15.46, 14.8114, 0.55 ) }
    dend_33 { pt3dadd( 2.15725, 18.2794, 16.6121, 0.55 ) }
    dend_33 { pt3dadd( 3.08914, 21.8801, 18.9119, 0.55 ) }
    dend_33 { pt3dadd( 4.17029, 24.8163, 21.2448, 0.55 ) }
    dend_33 { pt3dadd( 5.0981, 26.5707, 22.9516, 2.49 ) }
    dend_33 { pt3dadd( 7.39014, 36.2559, 27.4832, 2.49 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 31/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.57205, 2.30913, -8.5197, 0.55 ) }
    dend_32 { pt3dadd( 3.58803, 4.15117, -8.67383, 0.55 ) }
    dend_32 { pt3dadd( 5.4854, 5.70731, -8.84831, 0.55 ) }
    dend_32 { pt3dadd( 8.14544, 7.59509, -9.14492, 0.55 ) }
    dend_32 { pt3dadd( 9.72774, 8.62181, -9.34749, 0.28 ) }
    dend_32 { pt3dadd( 10.8839, 9.29797, -9.50553, 0.55 ) }
    dend_32 { pt3dadd( 12.9185, 10.385, -9.79554, 0.28 ) }
    dend_32 { pt3dadd( 13.9273, 10.7788, -9.92291, 0.55 ) }
    dend_32 { pt3dadd( 15.6688, 11.2876, -10.115, 0.28 ) }
    dend_32 { pt3dadd( 15.9965, 11.3613, -10.1434, 0.83 ) }
    dend_32 { pt3dadd( 17.2627, 11.6432, -10.18, 0.28 ) }
    dend_32 { pt3dadd( 18.5826, 11.9893, -10.1317, 0.28 ) }
    dend_32 { pt3dadd( 20.4027, 12.6454, -9.91978, 0.55 ) }
    dend_32 { pt3dadd( 21.6446, 13.2496, -9.72008, 0.28 ) }
    dend_32 { pt3dadd( 22.1522, 13.6149, -9.58814, 0.55 ) }
    dend_32 { pt3dadd( 23.3341, 14.7126, -9.20676, 0.28 ) }
    dend_32 { pt3dadd( 23.93, 15.3946, -9.00271, 0.55 ) }
    dend_32 { pt3dadd( 24.9845, 16.8068, -8.6439, 0.28 ) }
    dend_32 { pt3dadd( 25.4554, 17.5116, -8.49157, 0.55 ) }
    dend_32 { pt3dadd( 26.7749, 19.699, -8.0014, 0.28 ) }
    dend_32 { pt3dadd( 27.3346, 20.7365, -7.78689, 0.55 ) }
    dend_32 { pt3dadd( 27.9752, 22.0986, -7.53541, 0.28 ) }
    dend_32 { pt3dadd( 28.3631, 22.9225, -7.37571, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 3.89205, 5.82413, -1.4497, 0.55 ) }
    dend_31 { pt3dadd( 6.54667, 7.34872, -1.89863, 0.55 ) }
    dend_31 { pt3dadd( 8.94775, 8.74007, -2.40818, 0.55 ) }
    dend_31 { pt3dadd( 11.1533, 9.89567, -2.91676, 0.83 ) }
    dend_31 { pt3dadd( 14.2933, 11.4073, -3.59487, 0.83 ) }
    dend_31 { pt3dadd( 16.5788, 12.3924, -4.06941, 1.11 ) }
    dend_31 { pt3dadd( 19.2203, 13.3817, -4.56095, 0.55 ) }
    dend_31 { pt3dadd( 21.8765, 14.1432, -5.01723, 0.55 ) }
    dend_31 { pt3dadd( 23.955, 14.6415, -5.32307, 0.83 ) }
    dend_31 { pt3dadd( 26.3004, 15.0933, -5.60354, 0.55 ) }
    dend_31 { pt3dadd( 29.0518, 15.4797, -5.82616, 0.83 ) }
    dend_31 { pt3dadd( 31.2713, 15.7437, -5.90739, 0.55 ) }
    dend_31 { pt3dadd( 32.036, 15.8223, -5.9372, 0.55 ) }
    dend_31 { pt3dadd( 35.0806, 16.1944, -6.1472, 0.83 ) }
    dend_31 { pt3dadd( 38.0474, 16.7945, -6.52558, 0.83 ) }
    dend_31 { pt3dadd( 40.1447, 17.3625, -6.93118, 0.83 ) }
    dend_31 { pt3dadd( 42.4657, 18.2013, -7.48728, 0.83 ) }
    dend_31 { pt3dadd( 44.0944, 18.931, -7.95097, 0.83 ) }
    dend_31 { pt3dadd( 46.4453, 20.1958, -8.71161, 0.83 ) }
    dend_31 { pt3dadd( 48.542, 21.575, -9.48341, 0.55 ) }
    dend_31 { pt3dadd( 50.7203, 23.3179, -10.3372, 0.55 ) }
    dend_31 { pt3dadd( 51.8809, 24.3015, -10.8107, 0.55 ) }
    dend_31 { pt3dadd( 53.8602, 26.0752, -11.6721, 0.55 ) }
    dend_31 { pt3dadd( 55.6566, 27.6982, -12.4874, 0.83 ) }
    dend_31 { pt3dadd( 57.4498, 29.2509, -13.3352, 0.55 ) }
    dend_31 { pt3dadd( 58.57, 30.1493, -13.8721, 0.55 ) }
    dend_31 { pt3dadd( 60.6617, 31.7587, -14.9288, 0.55 ) }
    dend_31 { pt3dadd( 62.9252, 33.2694, -16.016, 0.83 ) }
    dend_31 { pt3dadd( 65.3098, 34.7105, -17.0539, 0.55 ) }
    dend_31 { pt3dadd( 66.3295, 35.2873, -17.4432, 0.55 ) }
    dend_31 { pt3dadd( 67.3552, 35.8682, -17.7965, 0.55 ) }
    dend_31 { pt3dadd( 68.1588, 36.3553, -18.0525, 0.55 ) }
    dend_31 { pt3dadd( 71.5564, 38.5891, -19.014, 0.55 ) }
    dend_31 { pt3dadd( 74.7467, 40.7584, -19.7977, 0.28 ) }
    dend_31 { pt3dadd( 75.822, 41.5334, -20.0583, 0.55 ) }
    dend_31 { pt3dadd( 77.9788, 43.1721, -20.6094, 0.28 ) }
    dend_31 { pt3dadd( 79.039, 43.9926, -20.8887, 0.83 ) }
    dend_31 { pt3dadd( 80.696, 45.2549, -21.3272, 0.28 ) }
    dend_31 { pt3dadd( 81.5692, 45.9225, -21.5565, 0.83 ) }
    dend_31 { pt3dadd( 83.0163, 46.9176, -21.9298, 0.28 ) }
    dend_31 { pt3dadd( 84.3389, 47.735, -22.2576, 0.55 ) }
    dend_31 { pt3dadd( 86.4538, 48.9368, -22.7383, 0.28 ) }
    dend_31 { pt3dadd( 89.0068, 50.2618, -23.2996, 0.55 ) }
    dend_31 { pt3dadd( 90.0015, 50.7669, -23.5088, 0.55 ) }
    dend_31 { pt3dadd( 92.1003, 51.8339, -23.9385, 0.28 ) }
    dend_31 { pt3dadd( 93.3149, 52.4823, -24.1841, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_31 { pt3dadd( 94.8869, 53.3599, -24.5173, 0.28 ) }
    dend_31 { pt3dadd( 95.356, 53.6359, -24.6165, 0.55 ) }
    dend_31 { pt3dadd( 97.0358, 54.6218, -24.9943, 0.28 ) }
    dend_31 { pt3dadd( 97.8672, 55.1213, -25.1839, 0.83 ) }
    dend_31 { pt3dadd( 99.833, 56.3411, -25.7573, 0.28 ) }
    dend_31 { pt3dadd( 100.954, 57.0798, -26.1251, 0.55 ) }
    dend_31 { pt3dadd( 102.296, 58.054, -26.5702, 0.55 ) }
    dend_31 { pt3dadd( 104.565, 59.8555, -27.3278, 0.28 ) }
    dend_31 { pt3dadd( 105.471, 60.6054, -27.6313, 0.83 ) }
    dend_31 { pt3dadd( 108.284, 63.0435, -28.5625, 0.28 ) }
    dend_31 { pt3dadd( 110.188, 64.8065, -29.1919, 0.83 ) }
    dend_31 { pt3dadd( 113.238, 67.8058, -30.1835, 0.28 ) }
    dend_31 { pt3dadd( 114.566, 69.2149, -30.6037, 0.55 ) }
    dend_31 { pt3dadd( 115.675, 70.463, -30.9242, 0.28 ) }
    dend_31 { pt3dadd( 116.546, 71.4607, -31.155, 0.55 ) }
    dend_31 { pt3dadd( 117.33, 72.3517, -31.301, 0.28 ) }
    dend_31 { pt3dadd( 118.536, 73.5709, -31.5544, 0.55 ) }
    dend_31 { pt3dadd( 119.564, 74.4764, -31.7859, 0.28 ) }
    dend_31 { pt3dadd( 120.219, 75.0228, -31.9257, 0.55 ) }
    dend_31 { pt3dadd( 122.058, 76.5215, -32.3187, 0.28 ) }
    dend_31 { pt3dadd( 123.363, 77.6008, -32.5926, 0.83 ) }
    dend_31 { pt3dadd( 126.23, 80.1015, -33.2047, 0.28 ) }
    dend_31 { pt3dadd( 127.047, 80.8585, -33.3917, 0.55 ) }
    dend_31 { pt3dadd( 128.422, 82.2033, -33.7099, 0.55 ) }
    dend_31 { pt3dadd( 130.153, 84.0422, -34.0556, 0.28 ) }
    dend_31 { pt3dadd( 131.197, 85.2613, -34.2279, 0.83 ) }
    dend_31 { pt3dadd( 132.66, 87.1344, -34.3915, 0.28 ) }
    dend_31 { pt3dadd( 133.457, 88.2628, -34.3905, 0.83 ) }
    dend_31 { pt3dadd( 134.133, 89.2546, -34.3422, 0.83 ) }
    dend_31 { pt3dadd( 135.257, 90.8667, -34.1606, 0.28 ) }
    dend_31 { pt3dadd( 135.599, 91.3542, -34.0767, 0.55 ) }
    dend_31 { pt3dadd( 137.274, 93.6452, -33.6606, 0.28 ) }
    dend_31 { pt3dadd( 137.637, 94.1528, -33.5637, 0.28 ) }
    dend_31 { pt3dadd( 137.965, 94.6455, -33.5138, 0.83 ) }
    dend_31 { pt3dadd( 138.757, 95.8918, -33.5306, 0.28 ) }
    dend_31 { pt3dadd( 139.311, 96.774, -33.6249, 0.55 ) }
    dend_31 { pt3dadd( 140.327, 98.3114, -33.8467, 0.28 ) }
    dend_31 { pt3dadd( 140.761, 98.9423, -33.9368, 0.55 ) }
    dend_31 { pt3dadd( 142.058, 100.675, -34.1342, 0.28 ) }
    dend_31 { pt3dadd( 143.96, 103.017, -34.3352, 0.28 ) }
    dend_31 { pt3dadd( 144.579, 103.747, -34.3751, 0.83 ) }
    dend_31 { pt3dadd( 145.996, 105.369, -34.5412, 0.83 ) }
    dend_31 { pt3dadd( 148.316, 107.942, -34.8768, 0.28 ) }
    dend_31 { pt3dadd( 151.002, 110.853, -35.3348, 0.28 ) }
    dend_31 { pt3dadd( 154.39, 114.407, -35.9805, 0.28 ) }
    dend_31 { pt3dadd( 156.238, 116.332, -36.379, 0.83 ) }
    dend_31 { pt3dadd( 159.37, 119.581, -37.1419, 0.28 ) }
    dend_31 { pt3dadd( 159.764, 119.992, -37.2589, 0.55 ) }
    dend_31 { pt3dadd( 160.601, 120.839, -37.5957, 0.28 ) }
    dend_31 { pt3dadd( 161.396, 121.636, -38.043, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 50/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.60205, 3.93363, 8.8103, 0.83 ) }
    dend_30 { pt3dadd( 5.63252, 3.00664, 10.3287, 0.83 ) }
    dend_30 { pt3dadd( 6.95117, 2.2842, 11.2842, 0.83 ) }
    dend_30 { pt3dadd( 9.33765, 0.717547, 13.0599, 0.83 ) }
    dend_30 { pt3dadd( 12.6431, -1.83467, 15.6179, 0.83 ) }
    dend_30 { pt3dadd( 15.1297, -4.01575, 17.7358, 0.55 ) }
    dend_30 { pt3dadd( 16.6882, -5.51765, 19.1265, 0.55 ) }
    dend_30 { pt3dadd( 18.0667, -7.21769, 20.4988, 0.83 ) }
    dend_30 { pt3dadd( 20.056, -10.1681, 22.6012, 0.55 ) }
    dend_30 { pt3dadd( 20.9725, -11.7809, 23.6037, 0.83 ) }
    dend_30 { pt3dadd( 22.0527, -13.939, 24.6573, 0.83 ) }
    dend_30 { pt3dadd( 22.7867, -15.5475, 25.3628, 1.11 ) }
    dend_30 { pt3dadd( 23.484, -17.4393, 26.1621, 0.55 ) }
    dend_30 { pt3dadd( 23.9802, -18.9147, 26.7543, 0.83 ) }
    dend_30 { pt3dadd( 24.4231, -20.2236, 27.2945, 0.55 ) }
    dend_30 { pt3dadd( 25.4203, -22.9247, 28.4987, 0.55 ) }
    dend_30 { pt3dadd( 26.4127, -25.7697, 29.9201, 0.55 ) }
    dend_30 { pt3dadd( 26.9079, -27.3336, 30.7867, 0.55 ) }
    dend_30 { pt3dadd( 27.2031, -28.4411, 31.4488, 0.55 ) }
    dend_30 { pt3dadd( 27.8776, -31.1093, 33.082, 0.83 ) }
    dend_30 { pt3dadd( 28.7622, -34.1816, 35.0676, 0.83 ) }
    dend_30 { pt3dadd( 29.6998, -36.7873, 36.8359, 0.55 ) }
    dend_30 { pt3dadd( 30.6619, -38.9089, 38.4299, 0.55 ) }
    dend_30 { pt3dadd( 32.2617, -41.6478, 40.7242, 0.55 ) }
    dend_30 { pt3dadd( 33.2774, -43.306, 42.1466, 0.55 ) }
    dend_30 { pt3dadd( 34.6532, -45.2603, 43.8798, 0.55 ) }
    dend_30 { pt3dadd( 35.6155, -46.328, 44.9812, 0.55 ) }
    dend_30 { pt3dadd( 38.7736, -48.9175, 48.0618, 0.55 ) }
    dend_30 { pt3dadd( 40.8529, -50.118, 50.0192, 0.28 ) }
    dend_30 { pt3dadd( 45.8761, -57.3236, 56.3218, 0.28 ) }
    dend_30 { pt3dadd( 50.6401, -65.0342, 62.1541, 0.28 ) }
    dend_30 { pt3dadd( 54.8, -72.7576, 68.3931, 0.28 ) }
    dend_30 { pt3dadd( 58.1942, -80.2515, 75.3328, 0.28 ) }
    dend_30 { pt3dadd( 61.3593, -88.8151, 80.893, 0.28 ) }
    dend_30 { pt3dadd( 65.0294, -96.0753, 87.9692, 0.28 ) }
    dend_30 { pt3dadd( 69.1358, -104.62, 92.9585, 0.28 ) }
    dend_30 { pt3dadd( 71.2447, -114.394, 96.4129, 0.28 ) }
    dend_30 { pt3dadd( 74.4017, -123.5, 100.95, 0.28 ) }
    dend_30 { pt3dadd( 77.5813, -132.756, 105.134, 0.28 ) }
    dend_30 { pt3dadd( 80.753, -142.408, 108.214, 0.28 ) }
    dend_30 { pt3dadd( 81.2623, -152.013, 112.542, 0.28 ) }
    dend_30 { pt3dadd( 80.2294, -161.879, 115.948, 0.28 ) }
    dend_30 { pt3dadd( 81.4929, -171.793, 119.312, 0.28 ) }
    dend_30 { pt3dadd( 82.8446, -181.445, 123.392, 0.28 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 94/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.497947, -3.35287, -10.1097, 0.83 ) }
    dend_25 { pt3dadd( 1.21133, -1.59658, -10.1673, 0.83 ) }
    dend_25 { pt3dadd( 2.87835, 0.116304, -10.2235, 1.11 ) }
    dend_25 { pt3dadd( 5.15544, 2.45604, -10.3003, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 98/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -4.93795, 5.09263, -5.2197, 0.83 ) }
    dend_19 { pt3dadd( -6.38947, 7.64321, -4.93969, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_19 { pt3dadd( -8.05644, 10.5724, -4.61811, 1.38 ) }
    dend_19 { pt3dadd( -9.84661, 13.7181, -4.27276, 0.83 ) }
    dend_19 { pt3dadd( -11.5514, 16.7136, -3.94389, 1.11 ) }
    dend_19 { pt3dadd( -12.9684, 19.2036, -3.67053, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.00795, -9.72737, -1.2597, 3.88 ) }
    dend_0 { pt3dadd( -1.65768, -11.4696, -1.2597, 3.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 6/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.298405, -9.95792, -0.0466218, 0.55 ) }
    axon_0 { pt3dadd( -0.493767, -24.9566, -0.0466218, 0.55 ) }
    axon_0 { pt3dadd( -0.689129, -39.9554, -0.0466218, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 9/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 5.15544, 2.45604, -10.3003, 0.83 ) }
    dend_29 { pt3dadd( 7.6454, 2.7336, -10.8742, 0.83 ) }
    dend_29 { pt3dadd( 9.23855, 2.97398, -11.2832, 0.83 ) }
    dend_29 { pt3dadd( 11.1226, 3.30895, -11.7694, 1.11 ) }
    dend_29 { pt3dadd( 14.4406, 3.99638, -12.584, 0.83 ) }
    dend_29 { pt3dadd( 15.6914, 4.31755, -12.8633, 0.83 ) }
    dend_29 { pt3dadd( 18.4183, 5.13107, -13.4293, 1.11 ) }
    dend_29 { pt3dadd( 20.4061, 5.82513, -13.7721, 0.55 ) }
    dend_29 { pt3dadd( 21.688, 6.35229, -13.976, 0.55 ) }
    dend_29 { pt3dadd( 23.5713, 7.21579, -14.2437, 0.55 ) }
    dend_29 { pt3dadd( 26.0443, 8.42062, -14.5291, 0.55 ) }
    dend_29 { pt3dadd( 28.225, 9.49887, -14.7339, 0.83 ) }
    dend_29 { pt3dadd( 29.7893, 10.3028, -14.8342, 0.55 ) }
    dend_29 { pt3dadd( 31.7008, 11.3044, -14.9686, 0.83 ) }
    dend_29 { pt3dadd( 32.9341, 11.9047, -15.0834, 1.11 ) }
    dend_29 { pt3dadd( 35.2119, 12.9, -15.3388, 0.55 ) }
    dend_29 { pt3dadd( 37.0146, 13.6227, -15.584, 0.55 ) }
    dend_29 { pt3dadd( 41.1607, 15.2064, -16.2277, 0.83 ) }
    dend_29 { pt3dadd( 43.2011, 15.9471, -16.5729, 0.55 ) }
    dend_29 { pt3dadd( 46.381, 17.057, -17.1427, 0.55 ) }
    dend_29 { pt3dadd( 48.7555, 17.8647, -17.5854, 0.83 ) }
    dend_29 { pt3dadd( 50.6826, 18.5123, -17.9491, 0.55 ) }
    dend_29 { pt3dadd( 52.7882, 19.224, -18.3333, 0.55 ) }
    dend_29 { pt3dadd( 54.7311, 19.8965, -18.6644, 0.83 ) }
    dend_29 { pt3dadd( 56.8515, 20.7439, -18.9486, 0.28 ) }
    dend_29 { pt3dadd( 57.5368, 21.0924, -19.0301, 0.55 ) }
    dend_29 { pt3dadd( 58.5733, 21.6822, -19.1277, 0.28 ) }
    dend_29 { pt3dadd( 59.9008, 22.4873, -19.212, 0.55 ) }
    dend_29 { pt3dadd( 61.8085, 23.7454, -19.3217, 0.28 ) }
    dend_29 { pt3dadd( 63.5318, 24.9588, -19.4184, 0.83 ) }
    dend_29 { pt3dadd( 65.581, 26.4887, -19.6249, 0.28 ) }
    dend_29 { pt3dadd( 66.6536, 27.3078, -19.7638, 0.28 ) }
    dend_29 { pt3dadd( 67.9701, 28.3591, -20.0225, 0.83 ) }
    dend_29 { pt3dadd( 71.1065, 30.9117, -20.7976, 0.28 ) }
    dend_29 { pt3dadd( 72.4047, 31.9785, -21.1734, 0.83 ) }
    dend_29 { pt3dadd( 74.6655, 33.8815, -21.9258, 0.28 ) }
    dend_29 { pt3dadd( 75.402, 34.5017, -22.2462, 0.55 ) }
    dend_29 { pt3dadd( 77.8966, 36.6226, -23.6455, 0.28 ) }
    dend_29 { pt3dadd( 78.2228, 36.8978, -23.875, 0.83 ) }
    dend_29 { pt3dadd( 78.6952, 37.2827, -24.27, 0.83 ) }
    dend_29 { pt3dadd( 79.9075, 38.2204, -25.2955, 0.83 ) }
    dend_29 { pt3dadd( 82.4491, 40.176, -27.3696, 0.55 ) }
    dend_29 { pt3dadd( 85.1578, 42.2558, -29.4779, 0.28 ) }
    dend_29 { pt3dadd( 87.1559, 43.846, -30.9357, 0.83 ) }
    dend_29 { pt3dadd( 89.7289, 45.9691, -32.7178, 0.28 ) }
    dend_29 { pt3dadd( 90.9992, 47.0597, -33.5801, 0.83 ) }
    dend_29 { pt3dadd( 93.8426, 49.5086, -35.447, 0.28 ) }
    dend_29 { pt3dadd( 95.274, 50.7393, -36.316, 0.83 ) }
    dend_29 { pt3dadd( 98.216, 53.2037, -38.0244, 0.28 ) }
    dend_29 { pt3dadd( 98.9458, 53.7835, -38.4295, 0.55 ) }
    dend_29 { pt3dadd( 102.576, 56.521, -40.3998, 0.28 ) }
    dend_29 { pt3dadd( 103.259, 57.0127, -40.7883, 0.83 ) }
    dend_29 { pt3dadd( 105.113, 58.2634, -41.8464, 0.28 ) }
    dend_29 { pt3dadd( 105.842, 58.7494, -42.2788, 0.83 ) }
    dend_29 { pt3dadd( 108.453, 60.3763, -43.7698, 0.28 ) }
    dend_29 { pt3dadd( 109.604, 61.1801, -44.4159, 0.83 ) }
    dend_29 { pt3dadd( 111.557, 62.6985, -45.388, 0.28 ) }
    dend_29 { pt3dadd( 112.109, 63.1767, -45.6292, 0.83 ) }
    dend_29 { pt3dadd( 113.796, 64.7533, -46.2689, 0.28 ) }
    dend_29 { pt3dadd( 114.541, 65.4761, -46.5331, 0.55 ) }
    dend_29 { pt3dadd( 118.978, 69.8593, -47.952, 0.28 ) }
    dend_29 { pt3dadd( 120.682, 71.4762, -48.4388, 1.11 ) }
    dend_29 { pt3dadd( 123.102, 73.6142, -49.057, 0.28 ) }
    dend_29 { pt3dadd( 124.542, 74.775, -49.3775, 0.28 ) }
    dend_29 { pt3dadd( 125.645, 75.5938, -49.5696, 0.83 ) }
    dend_29 { pt3dadd( 128.004, 77.2746, -50.0576, 0.28 ) }
    dend_29 { pt3dadd( 129.431, 78.2236, -50.377, 1.11 ) }
    dend_29 { pt3dadd( 131.8, 79.8236, -51.0566, 0.28 ) }
    dend_29 { pt3dadd( 135.064, 82.128, -52.1671, 0.28 ) }
    dend_29 { pt3dadd( 136.033, 82.8842, -52.5276, 1.38 ) }
    dend_29 { pt3dadd( 139.125, 85.5665, -53.7171, 0.28 ) }
    dend_29 { pt3dadd( 139.612, 86.0439, -53.9332, 0.55 ) }
    dend_29 { pt3dadd( 140.472, 87.0056, -54.3551, 0.28 ) }
    dend_29 { pt3dadd( 141.39, 88.1118, -54.8351, 0.55 ) }
    dend_29 { pt3dadd( 143.617, 90.5898, -55.9238, 0.28 ) }
    dend_29 { pt3dadd( 144.362, 91.3123, -56.2167, 0.83 ) }
    dend_29 { pt3dadd( 145.352, 92.1028, -56.5342, 0.28 ) }
    dend_29 { pt3dadd( 146.17, 92.661, -56.7253, 0.55 ) }
    dend_29 { pt3dadd( 148.717, 94.1627, -57.4991, 0.28 ) }
    dend_29 { pt3dadd( 151.863, 95.7503, -58.6896, 0.28 ) }
    dend_29 { pt3dadd( 152.585, 96.0681, -59.0689, 0.55 ) }
    dend_29 { pt3dadd( 154.956, 97.0511, -60.6044, 0.28 ) }
    dend_29 { pt3dadd( 157.783, 98.2306, -63.0907, 0.55 ) }
    dend_29 { pt3dadd( 161.511, 99.8251, -67.3913, 0.28 ) }
    dend_29 { pt3dadd( 162.473, 100.247, -68.7602, 0.55 ) }
    dend_29 { pt3dadd( 164.31, 101.059, -71.9896, 0.28 ) }
    dend_29 { pt3dadd( 164.823, 101.284, -73.0141, 0.55 ) }
    dend_29 { pt3dadd( 166.613, 102.105, -77.3956, 0.28 ) }
    dend_29 { pt3dadd( 166.947, 102.273, -78.4177, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 98/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 5.15544, 2.45604, -10.3003, 0.55 ) }
    dend_26 { pt3dadd( 5.102, 1.79297, -11.7409, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( 5.11378, 0.476507, -15.1704, 0.55 ) }
    dend_26 { pt3dadd( 5.46945, -0.862043, -18.7977, 0.83 ) }
    dend_26 { pt3dadd( 5.99416, -2.23312, -22.763, 0.55 ) }
    dend_26 { pt3dadd( 6.58258, -4.02312, -27.7105, 0.55 ) }
    dend_26 { pt3dadd( 6.76296, -4.64652, -29.4126, 0.55 ) }
    dend_26 { pt3dadd( 7.38806, -6.55032, -34.6656, 0.83 ) }
    dend_26 { pt3dadd( 7.76712, -7.81516, -38.0265, 0.83 ) }
    dend_26 { pt3dadd( 7.95552, -9.36678, -41.4914, 0.83 ) }
    dend_26 { pt3dadd( 7.9975, -10.7687, -44.0759, 1.11 ) }
    dend_26 { pt3dadd( 8.00043, -12.8266, -47.3823, 0.55 ) }
    dend_26 { pt3dadd( 7.88319, -14.4312, -49.7476, 0.55 ) }
    dend_26 { pt3dadd( 7.41317, -17.135, -53.4067, 1.11 ) }
    dend_26 { pt3dadd( 6.36913, -21.1493, -58.5927, 0.28 ) }
    dend_26 { pt3dadd( 6.08166, -22.0699, -59.7609, 0.55 ) }
    dend_26 { pt3dadd( 4.87595, -25.3176, -63.7868, 0.28 ) }
    dend_26 { pt3dadd( 4.29109, -26.6557, -65.3719, 1.11 ) }
    dend_26 { pt3dadd( 1.9035, -31.3073, -70.9063, 0.28 ) }
    dend_26 { pt3dadd( 0.828496, -33.211, -73.143, 0.28 ) }
    dend_26 { pt3dadd( -0.730864, -35.5813, -75.9062, 1.11 ) }
    dend_26 { pt3dadd( -2.52773, -37.9705, -78.7983, 0.28 ) }
    dend_26 { pt3dadd( -3.46742, -39.0141, -80.1724, 0.55 ) }
    dend_26 { pt3dadd( -6.87996, -42.4244, -84.9726, 0.28 ) }
    dend_26 { pt3dadd( -8.09352, -43.536, -86.7216, 1.38 ) }
    dend_26 { pt3dadd( -9.61942, -44.9248, -89.1405, 0.28 ) }
    dend_26 { pt3dadd( -11.2632, -46.4488, -91.9929, 0.83 ) }
    dend_26 { pt3dadd( -13.4955, -48.4896, -96.1256, 0.28 ) }
    dend_26 { pt3dadd( -14.1047, -49.0738, -97.4046, 0.83 ) }
    dend_26 { pt3dadd( -16.6389, -51.7227, -103.419, 0.28 ) }
    dend_26 { pt3dadd( -17.1946, -52.3473, -105.094, 0.28 ) }
    dend_26 { pt3dadd( -17.7745, -53.0007, -107.002, 0.55 ) }
    dend_26 { pt3dadd( -18.3262, -53.6061, -109.032, 0.55 ) }
    dend_26 { pt3dadd( -20.6344, -56.0501, -117.739, 0.28 ) }
    dend_26 { pt3dadd( -20.8427, -56.2396, -118.479, 0.83 ) }
    dend_26 { pt3dadd( -24.4119, -59.117, -130.146, 0.28 ) }
    dend_26 { pt3dadd( -24.9964, -59.5398, -131.904, 0.83 ) }
    dend_26 { pt3dadd( -27.7762, -61.4482, -139.439, 0.28 ) }
    dend_26 { pt3dadd( -28.29, -61.8066, -140.762, 0.83 ) }
    dend_26 { pt3dadd( -30.831, -63.6458, -146.63, 0.28 ) }
    dend_26 { pt3dadd( -31.4006, -64.0687, -147.887, 0.83 ) }
    dend_26 { pt3dadd( -34.0891, -66.2089, -153.158, 0.28 ) }
    dend_26 { pt3dadd( -35.0516, -67.0028, -155.063, 0.83 ) }
    dend_26 { pt3dadd( -38.8883, -70.2504, -161.819, 0.28 ) }
    dend_26 { pt3dadd( -39.3575, -70.6642, -162.677, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -12.9684, 19.2036, -3.67053, 0.55 ) }
    dend_20 { pt3dadd( -15.2228, 21.0395, -2.42642, 0.55 ) }
    dend_20 { pt3dadd( -16.6504, 22.2641, -1.69829, 0.83 ) }
    dend_20 { pt3dadd( -17.8523, 23.2834, -1.15608, 0.28 ) }
    dend_20 { pt3dadd( -18.6341, 23.912, -0.854217, 0.83 ) }
    dend_20 { pt3dadd( -20.3665, 25.3165, -0.279256, 0.55 ) }
    dend_20 { pt3dadd( -21.7995, 26.4064, 0.133501, 1.11 ) }
    dend_20 { pt3dadd( -23.0182, 27.2805, 0.456213, 0.83 ) }
    dend_20 { pt3dadd( -24.244, 28.1267, 0.754791, 0.83 ) }
    dend_20 { pt3dadd( -25.9605, 29.263, 1.09212, 0.83 ) }
    dend_20 { pt3dadd( -27.934, 30.4924, 1.39136, 0.83 ) }
    dend_20 { pt3dadd( -30.0287, 31.6925, 1.59016, 0.83 ) }
    dend_20 { pt3dadd( -32.2014, 32.8598, 1.86525, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.65768, -11.4696, -1.2597, 1.11 ) }
    dend_16 { pt3dadd( -0.661391, -13.1596, -1.52668, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 58/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.65768, -11.4696, -1.2597, 1.38 ) }
    dend_1 { pt3dadd( -2.1022, -12.1107, -1.13355, 1.38 ) }
    dend_1 { pt3dadd( -3.30067, -13.8394, -0.793453, 1.38 ) }
    dend_1 { pt3dadd( -5.07212, -16.3946, -0.29075, 1.94 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.689129, -39.9554, -0.0466218, 0.28 ) }
    axon_1 { pt3dadd( -0.884491, -54.9541, -0.0466218, 0.28 ) }
    axon_1 { pt3dadd( -1.07985, -69.9528, -0.0466218, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 65/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -39.3575, -70.6642, -162.677, 0.28 ) }
    dend_28 { pt3dadd( -40.8504, -72.4136, -163.876, 0.28 ) }
    dend_28 { pt3dadd( -41.472, -73.142, -164.375, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 68/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -39.3575, -70.6642, -162.677, 0.28 ) }
    dend_27 { pt3dadd( -39.6368, -73.8904, -161.364, 0.28 ) }
    dend_27 { pt3dadd( -39.6953, -74.7213, -161.046, 0.83 ) }
    dend_27 { pt3dadd( -39.9272, -77.0268, -160.117, 0.28 ) }
    dend_27 { pt3dadd( -40.2049, -78.9966, -159.304, 0.28 ) }
    dend_27 { pt3dadd( -40.33, -79.8229, -158.691, 0.83 ) }
    dend_27 { pt3dadd( -40.5755, -81.4551, -157.308, 0.28 ) }
    dend_27 { pt3dadd( -40.6412, -81.8812, -156.922, 0.83 ) }
    dend_27 { pt3dadd( -40.9983, -84.3371, -154.552, 0.28 ) }
    dend_27 { pt3dadd( -41.1474, -85.4408, -153.468, 0.83 ) }
    dend_27 { pt3dadd( -42.2195, -92.0202, -146.81, 0.28 ) }
    dend_27 { pt3dadd( -42.346, -92.8198, -145.962, 0.55 ) }
    dend_27 { pt3dadd( -42.5472, -94.016, -144.629, 0.28 ) }
    dend_27 { pt3dadd( -42.5731, -94.1885, -144.428, 0.55 ) }
    dend_27 { pt3dadd( -42.6883, -95.4753, -142.841, 0.28 ) }
    dend_27 { pt3dadd( -42.7093, -96.0643, -142.15, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 84/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -32.2014, 32.8598, 1.86525, 0.83 ) }
    dend_24 { pt3dadd( -34.053, 34.8168, 1.99122, 0.83 ) }
    dend_24 { pt3dadd( -35.3562, 36.1942, 2.07988, 0.83 ) }
    dend_24 { pt3dadd( -36.7708, 37.6893, 2.17612, 0.28 ) }
    dend_24 { pt3dadd( -37.5918, 38.5571, 2.23198, 0.83 ) }
    dend_24 { pt3dadd( -45.545, 48.0825, 4.88427, 0.83 ) }
    dend_24 { pt3dadd( -51.6271, 59.0701, 5.13584, 0.83 ) }
    dend_24 { pt3dadd( -58.5727, 69.5146, 3.82825, 0.83 ) }
    dend_24 { pt3dadd( -63.9858, 80.2724, 0.182868, 0.83 ) }
    dend_24 { pt3dadd( -70.2903, 89.8648, -5.21356, 0.83 ) }
    dend_24 { pt3dadd( -74.1581, 100.192, -11.3534, 0.83 ) }
    dend_24 { pt3dadd( -78.1823, 110.868, -16.6767, 0.83 ) }
    dend_24 { pt3dadd( -81.0956, 120.893, -23.8167, 0.83 ) }
    dend_24 { pt3dadd( -81.7058, 132.167, -29.2585, 0.83 ) }
    dend_24 { pt3dadd( -81.1145, 143.281, -35.0562, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 99/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -32.2014, 32.8598, 1.86525, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_21 { pt3dadd( -32.7265, 35.0936, 1.2326, 0.55 ) }
    dend_21 { pt3dadd( -33.3104, 37.2402, 0.66278, 0.55 ) }
    dend_21 { pt3dadd( -33.5877, 38.2243, 0.415559, 1.11 ) }
    dend_21 { pt3dadd( -34.0197, 39.8772, 0.0365878, 0.28 ) }
    dend_21 { pt3dadd( -34.3364, 41.0572, -0.249071, 0.83 ) }
    dend_21 { pt3dadd( -34.9314, 43.1012, -0.860003, 0.55 ) }
    dend_21 { pt3dadd( -35.8285, 45.6213, -1.7339, 0.83 ) }
    dend_21 { pt3dadd( -37.2332, 48.4349, -3.00128, 0.28 ) }
    dend_21 { pt3dadd( -38.3818, 50.2425, -3.99831, 0.28 ) }
    dend_21 { pt3dadd( -39.1327, 51.1546, -4.57186, 0.55 ) }
    dend_21 { pt3dadd( -41.3802, 53.1951, -6.02972, 0.55 ) }
    dend_21 { pt3dadd( -43.905, 54.899, -7.42096, 0.83 ) }
    dend_21 { pt3dadd( -47.8717, 56.9294, -9.3727, 0.55 ) }
    dend_21 { pt3dadd( -49.8293, 57.7404, -10.1907, 0.28 ) }
    dend_21 { pt3dadd( -52.423, 58.6823, -11.1075, 0.83 ) }
    dend_21 { pt3dadd( -55.6741, 59.835, -12.0956, 0.55 ) }
    dend_21 { pt3dadd( -57.557, 60.4928, -12.5623, 0.55 ) }
    dend_21 { pt3dadd( -59.3465, 61.1852, -12.9517, 0.83 ) }
    dend_21 { pt3dadd( -61.5737, 62.1687, -13.2463, 0.28 ) }
    dend_21 { pt3dadd( -62.9295, 62.8067, -13.3982, 0.55 ) }
    dend_21 { pt3dadd( -65.5816, 64.1495, -13.6595, 0.28 ) }
    dend_21 { pt3dadd( -66.6394, 64.7479, -13.7608, 0.55 ) }
    dend_21 { pt3dadd( -68.3485, 65.7249, -13.8926, 0.55 ) }
    dend_21 { pt3dadd( -72.0707, 67.8329, -14.1245, 0.28 ) }
    dend_21 { pt3dadd( -74.0537, 68.9457, -14.2517, 0.83 ) }
    dend_21 { pt3dadd( -77.2623, 70.8433, -14.4476, 0.28 ) }
    dend_21 { pt3dadd( -81.6186, 73.5416, -14.7393, 0.28 ) }
    dend_21 { pt3dadd( -84.7457, 75.6245, -15.0188, 0.83 ) }
    dend_21 { pt3dadd( -88.5916, 78.4115, -15.4414, 0.28 ) }
    dend_21 { pt3dadd( -90.0399, 79.6011, -15.6303, 0.83 ) }
    dend_21 { pt3dadd( -92.8134, 82.087, -15.991, 0.28 ) }
    dend_21 { pt3dadd( -94.3627, 83.6271, -16.2532, 0.55 ) }
    dend_21 { pt3dadd( -96.9785, 86.4613, -16.7869, 0.28 ) }
    dend_21 { pt3dadd( -98.1893, 87.938, -17.095, 0.55 ) }
    dend_21 { pt3dadd( -99.0189, 88.9768, -17.3253, 0.28 ) }
    dend_21 { pt3dadd( -99.9013, 90.033, -17.5746, 0.55 ) }
    dend_21 { pt3dadd( -102.548, 92.9397, -18.5519, 0.28 ) }
    dend_21 { pt3dadd( -103.773, 94.1836, -19.0743, 0.55 ) }
    dend_21 { pt3dadd( -104.999, 95.3155, -19.7479, 0.28 ) }
    dend_21 { pt3dadd( -106.579, 96.6517, -20.6932, 0.28 ) }
    dend_21 { pt3dadd( -108.144, 97.8712, -21.6891, 0.55 ) }
    dend_21 { pt3dadd( -110.854, 99.9471, -23.5558, 0.28 ) }
    dend_21 { pt3dadd( -111.464, 100.4, -23.9738, 0.55 ) }
    dend_21 { pt3dadd( -113.819, 102.173, -25.5819, 0.28 ) }
    dend_21 { pt3dadd( -115.34, 103.324, -26.6416, 0.83 ) }
    dend_21 { pt3dadd( -119.116, 106.225, -29.3369, 0.28 ) }
    dend_21 { pt3dadd( -120.844, 107.491, -30.5663, 0.83 ) }
    dend_21 { pt3dadd( -123.889, 109.68, -32.6769, 0.28 ) }
    dend_21 { pt3dadd( -125.801, 111.057, -33.9978, 0.28 ) }
    dend_21 { pt3dadd( -126.262, 111.39, -34.2953, 0.55 ) }
    dend_21 { pt3dadd( -127.668, 112.401, -35.1724, 0.28 ) }
    dend_21 { pt3dadd( -130.07, 114.098, -36.5703, 1.11 ) }
    dend_21 { pt3dadd( -134.665, 117.253, -39.0439, 0.28 ) }
    dend_21 { pt3dadd( -135.034, 117.505, -39.2275, 0.55 ) }
    dend_21 { pt3dadd( -137.664, 119.237, -40.3841, 0.28 ) }
    dend_21 { pt3dadd( -138.205, 119.572, -40.5972, 0.55 ) }
    dend_21 { pt3dadd( -139.654, 120.357, -41.1194, 0.28 ) }
    dend_21 { pt3dadd( -140.581, 120.726, -41.5525, 0.55 ) }
    dend_21 { pt3dadd( -141.97, 120.994, -42.3666, 0.28 ) }
    dend_21 { pt3dadd( -142.87, 121.115, -42.9676, 0.55 ) }
    dend_21 { pt3dadd( -145.567, 121.326, -44.9186, 0.28 ) }
    dend_21 { pt3dadd( -147.75, 121.486, -46.4776, 0.83 ) }
    dend_21 { pt3dadd( -152.333, 121.877, -49.7429, 0.28 ) }
    dend_21 { pt3dadd( -153.327, 122.092, -50.4366, 0.55 ) }
    dend_21 { pt3dadd( -155.247, 122.745, -51.7371, 0.28 ) }
    dend_21 { pt3dadd( -156.064, 123.155, -52.1896, 0.55 ) }
    dend_21 { pt3dadd( -157.486, 124.153, -52.7381, 0.28 ) }
    dend_21 { pt3dadd( -158.907, 125.34, -53.1386, 0.83 ) }
    dend_21 { pt3dadd( -163.324, 129.634, -53.8218, 0.28 ) }
    dend_21 { pt3dadd( -164.042, 130.407, -53.927, 0.55 ) }
    dend_21 { pt3dadd( -166.176, 132.947, -54.1855, 0.28 ) }
    dend_21 { pt3dadd( -167.27, 134.364, -54.3051, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 72/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -0.661391, -13.1596, -1.52668, 0.83 ) }
    dend_18 { pt3dadd( -0.800421, -14.7684, -1.62574, 0.83 ) }
    dend_18 { pt3dadd( -0.879848, -16.0032, -1.63947, 0.28 ) }
    dend_18 { pt3dadd( -0.951454, -18.149, -1.56564, 1.11 ) }
    dend_18 { pt3dadd( -0.918709, -20.812, -1.36216, 0.55 ) }
    dend_18 { pt3dadd( -0.83704, -24.0729, -1.04025, 0.55 ) }
    dend_18 { pt3dadd( -0.7084, -26.3617, -0.78206, 1.11 ) }
    dend_18 { pt3dadd( -0.293514, -30.4498, -0.0956539, 1.11 ) }
    dend_18 { pt3dadd( 0.0302461, -32.9596, 0.445652, 0.83 ) }
    dend_18 { pt3dadd( 0.48027, -35.6035, 1.1489, 0.83 ) }
    dend_18 { pt3dadd( 0.6424, -36.3909, 1.38779, 0.83 ) }
    dend_18 { pt3dadd( 1.27987, -39.366, 2.32059, 0.83 ) }
    dend_18 { pt3dadd( 1.9269, -42.2776, 3.33198, 0.83 ) }
    dend_18 { pt3dadd( 2.32492, -44.2713, 4.0436, 0.83 ) }
    dend_18 { pt3dadd( 2.69652, -46.5272, 4.9222, 0.83 ) }
    dend_18 { pt3dadd( 2.99398, -48.9768, 5.93685, 0.83 ) }
    dend_18 { pt3dadd( 3.27904, -51.7191, 7.18963, 0.83 ) }
    dend_18 { pt3dadd( 3.66206, -55.529, 9.03659, 0.83 ) }
    dend_18 { pt3dadd( 4.07008, -58.6031, 10.5784, 0.83 ) }
    dend_18 { pt3dadd( 4.72455, -62.037, 12.4937, 0.83 ) }
    dend_18 { pt3dadd( 5.47848, -65.1828, 14.3414, 0.83 ) }
    dend_18 { pt3dadd( 6.26506, -67.6081, 15.8119, 0.83 ) }
    dend_18 { pt3dadd( 6.84778, -69.092, 16.6782, 0.83 ) }
    dend_18 { pt3dadd( 7.56054, -70.6642, 17.5628, 0.83 ) }
    dend_18 { pt3dadd( 8.24466, -71.8555, 18.2758, 0.55 ) }
    dend_18 { pt3dadd( 9.82213, -74.1711, 19.4093, 0.83 ) }
    dend_18 { pt3dadd( 11.438, -76.1939, 20.3253, 0.55 ) }
    dend_18 { pt3dadd( 12.8474, -78.179, 21.0384, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_18 { pt3dadd( 13.8199, -87.618, 26.0731, 0.83 ) }
    dend_18 { pt3dadd( 14.4505, -96.6084, 31.9994, 0.83 ) }
    dend_18 { pt3dadd( 16.1569, -104.708, 39.0331, 0.83 ) }
    dend_18 { pt3dadd( 19.43, -112.026, 46.4466, 0.83 ) }
    dend_18 { pt3dadd( 24.0403, -117.981, 54.4696, 0.83 ) }
    dend_18 { pt3dadd( 27.6742, -122.007, 64.1509, 0.83 ) }
    dend_18 { pt3dadd( 32.9656, -125.423, 73.3088, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 7/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -0.661391, -13.1596, -1.52668, 0.83 ) }
    dend_17 { pt3dadd( 1.26388, -14.1757, -1.97295, 0.83 ) }
    dend_17 { pt3dadd( 3.99154, -15.4354, -2.54514, 0.83 ) }
    dend_17 { pt3dadd( 5.09809, -15.9485, -2.72388, 0.83 ) }
    dend_17 { pt3dadd( 6.84159, -16.7554, -2.99862, 0.55 ) }
    dend_17 { pt3dadd( 7.8721, -17.2672, -3.16317, 1.11 ) }
    dend_17 { pt3dadd( 9.55115, -18.1215, -3.43793, 0.83 ) }
    dend_17 { pt3dadd( 11.9317, -19.3688, -3.86843, 0.83 ) }
    dend_17 { pt3dadd( 14.2695, -20.6681, -4.32741, 0.83 ) }
    dend_17 { pt3dadd( 16.7978, -22.2529, -4.98357, 0.83 ) }
    dend_17 { pt3dadd( 18.7771, -23.6722, -5.61392, 0.55 ) }
    dend_17 { pt3dadd( 19.6999, -24.4434, -5.98839, 0.83 ) }
    dend_17 { pt3dadd( 20.9693, -25.6558, -6.6572, 0.28 ) }
    dend_17 { pt3dadd( 21.8564, -26.5846, -7.25094, 0.55 ) }
    dend_17 { pt3dadd( 23.3936, -28.013, -8.42995, 0.28 ) }
    dend_17 { pt3dadd( 23.6697, -28.2252, -8.62633, 0.83 ) }
    dend_17 { pt3dadd( 25.1861, -29.1909, -9.52714, 0.28 ) }
    dend_17 { pt3dadd( 25.8772, -29.5798, -9.84242, 0.28 ) }
    dend_17 { pt3dadd( 27.6168, -30.4486, -10.4499, 0.83 ) }
    dend_17 { pt3dadd( 30.6093, -31.824, -11.2448, 0.83 ) }
    dend_17 { pt3dadd( 32.6773, -32.7497, -11.7445, 0.55 ) }
    dend_17 { pt3dadd( 34.9721, -33.7727, -12.3314, 0.83 ) }
    dend_17 { pt3dadd( 36.8492, -34.5168, -12.794, 0.28 ) }
    dend_17 { pt3dadd( 37.9574, -34.9326, -13.0361, 0.83 ) }
    dend_17 { pt3dadd( 40.3707, -35.7707, -13.5108, 0.28 ) }
    dend_17 { pt3dadd( 42.3729, -36.4144, -13.8377, 0.55 ) }
    dend_17 { pt3dadd( 44.5613, -36.9965, -14.1799, 0.55 ) }
    dend_17 { pt3dadd( 48.0446, -37.7252, -14.6594, 0.55 ) }
    dend_17 { pt3dadd( 49.9571, -38.1037, -14.8811, 0.28 ) }
    dend_17 { pt3dadd( 50.5152, -38.2171, -14.9259, 0.55 ) }
    dend_17 { pt3dadd( 53.059, -38.671, -15.0713, 0.28 ) }
    dend_17 { pt3dadd( 54.4707, -38.9284, -15.1182, 0.55 ) }
    dend_17 { pt3dadd( 55.7599, -39.1841, -15.1935, 0.28 ) }
    dend_17 { pt3dadd( 56.7894, -39.437, -15.3035, 0.83 ) }
    dend_17 { pt3dadd( 58.7791, -39.9944, -15.6291, 0.55 ) }
    dend_17 { pt3dadd( 61.5055, -40.8848, -16.151, 0.55 ) }
    dend_17 { pt3dadd( 63.4045, -41.5423, -16.5923, 0.55 ) }
    dend_17 { pt3dadd( 64.2534, -41.8336, -16.7943, 0.28 ) }
    dend_17 { pt3dadd( 64.7613, -42.022, -16.9211, 0.83 ) }
    dend_17 { pt3dadd( 66.4007, -42.6867, -17.322, 0.83 ) }
    dend_17 { pt3dadd( 67.9923, -43.4365, -17.7, 0.28 ) }
    dend_17 { pt3dadd( 68.9542, -43.9579, -17.9559, 0.55 ) }
    dend_17 { pt3dadd( 70.523, -44.7804, -18.4063, 0.28 ) }
    dend_17 { pt3dadd( 71.5811, -45.2774, -18.7375, 0.83 ) }
    dend_17 { pt3dadd( 73.3766, -46.0465, -19.3412, 0.28 ) }
    dend_17 { pt3dadd( 74.0787, -46.3449, -19.591, 0.55 ) }
    dend_17 { pt3dadd( 76.1401, -47.3321, -20.3676, 0.28 ) }
    dend_17 { pt3dadd( 77.3335, -47.9864, -20.8431, 0.83 ) }
    dend_17 { pt3dadd( 78.4359, -48.6231, -21.3097, 0.28 ) }
    dend_17 { pt3dadd( 79.9001, -49.4736, -21.9452, 0.83 ) }
    dend_17 { pt3dadd( 82.328, -50.9073, -23.0112, 0.28 ) }
    dend_17 { pt3dadd( 83.9544, -51.9073, -23.6945, 0.55 ) }
    dend_17 { pt3dadd( 86.0125, -53.2908, -24.4744, 0.55 ) }
    dend_17 { pt3dadd( 95.075, -56.9425, -27.5541, 0.55 ) }
    dend_17 { pt3dadd( 103.653, -61.7784, -30.166, 0.55 ) }
    dend_17 { pt3dadd( 111.985, -66.0484, -34.2521, 0.55 ) }
    dend_17 { pt3dadd( 121.358, -69.4642, -36.6293, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -5.07212, -16.3946, -0.29075, 1.11 ) }
    dend_5 { pt3dadd( -6.28106, -19.1644, 0.283384, 1.11 ) }
    dend_5 { pt3dadd( -6.996, -20.8024, 0.622915, 1.11 ) }
    dend_5 { pt3dadd( -8.09401, -23.3181, 1.14437, 1.11 ) }
    dend_5 { pt3dadd( -8.9102, -25.1881, 1.53199, 0.83 ) }
    dend_5 { pt3dadd( -9.8703, -27.3878, 1.98795, 0.83 ) }
    dend_5 { pt3dadd( -10.6015, -29.063, 2.33518, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.07212, -16.3946, -0.29075, 0.83 ) }
    dend_2 { pt3dadd( -7.38805, -16.2668, -2.15751, 0.83 ) }
    dend_2 { pt3dadd( -8.44326, -16.1182, -3.11246, 0.83 ) }
    dend_2 { pt3dadd( -10.0879, -15.7562, -4.62679, 0.55 ) }
    dend_2 { pt3dadd( -11.6283, -15.2652, -6.11244, 0.83 ) }
    dend_2 { pt3dadd( -13.8478, -14.4694, -8.17212, 0.55 ) }
    dend_2 { pt3dadd( -16.9277, -13.2637, -10.9004, 0.55 ) }
    dend_2 { pt3dadd( -18.2662, -12.6193, -12.0576, 0.55 ) }
    dend_2 { pt3dadd( -19.2985, -12.0591, -12.9947, 0.83 ) }
    dend_2 { pt3dadd( -20.873, -11.055, -14.4412, 0.83 ) }
    dend_2 { pt3dadd( -21.9871, -10.2653, -15.336, 0.55 ) }
    dend_2 { pt3dadd( -23.0014, -9.49315, -16.0373, 0.83 ) }
    dend_2 { pt3dadd( -24.8944, -7.99473, -16.7472, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 84/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -167.27, 134.364, -54.3051, 0.28 ) }
    dend_23 { pt3dadd( -164.349, 137.172, -53.5298, 0.28 ) }
    dend_23 { pt3dadd( -163.557, 137.747, -53.1897, 0.83 ) }
    dend_23 { pt3dadd( -161.832, 138.679, -52.0765, 0.55 ) }
    dend_23 { pt3dadd( -160.268, 139.383, -51.1497, 0.55 ) }
    dend_23 { pt3dadd( -157.166, 140.53, -49.4739, 0.28 ) }
    dend_23 { pt3dadd( -155.785, 140.976, -48.7264, 0.55 ) }
    dend_23 { pt3dadd( -152.558, 141.638, -47.3057, 0.55 ) }
    dend_23 { pt3dadd( -147.483, 142.427, -45.4516, 0.28 ) }
    dend_23 { pt3dadd( -144.458, 142.784, -44.326, 0.55 ) }
    dend_23 { pt3dadd( -141.578, 143.017, -43.3589, 0.28 ) }
    dend_23 { pt3dadd( -139.565, 143.117, -42.9332, 0.55 ) }
    dend_23 { pt3dadd( -133.702, 143.447, -42.4507, 0.28 ) }
    dend_23 { pt3dadd( -132.255, 143.515, -42.6884, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 98/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -167.27, 134.364, -54.3051, 0.28 ) }
    dend_22 { pt3dadd( -168.605, 136.151, -53.9375, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -169.229, 136.998, -53.7602, 0.83 ) }
    dend_22 { pt3dadd( -169.828, 137.788, -53.6012, 0.28 ) }
    dend_22 { pt3dadd( -170.147, 138.203, -53.5052, 0.55 ) }
    dend_22 { pt3dadd( -170.994, 139.273, -53.2435, 0.28 ) }
    dend_22 { pt3dadd( -171.179, 139.484, -53.2093, 0.55 ) }
    dend_22 { pt3dadd( -171.845, 140.18, -53.1542, 0.28 ) }
    dend_22 { pt3dadd( -172.41, 140.735, -53.1294, 0.55 ) }
    dend_22 { pt3dadd( -173.054, 141.333, -53.1573, 0.28 ) }
    dend_22 { pt3dadd( -173.347, 141.595, -53.2109, 0.55 ) }
    dend_22 { pt3dadd( -175.366, 143.297, -53.8477, 0.28 ) }
    dend_22 { pt3dadd( -175.847, 143.699, -54.0765, 0.55 ) }
    dend_22 { pt3dadd( -176.416, 144.167, -54.3973, 0.28 ) }
    dend_22 { pt3dadd( -176.61, 144.338, -54.5202, 0.55 ) }
    dend_22 { pt3dadd( -178.083, 145.728, -55.5883, 0.28 ) }
    dend_22 { pt3dadd( -178.646, 146.306, -56.0537, 0.83 ) }
    dend_22 { pt3dadd( -180.624, 148.49, -57.8643, 0.28 ) }
    dend_22 { pt3dadd( -181.018, 148.934, -58.2462, 0.55 ) }
    dend_22 { pt3dadd( -181.705, 149.726, -58.9429, 0.28 ) }
    dend_22 { pt3dadd( -182.356, 150.497, -59.5865, 0.55 ) }
    dend_22 { pt3dadd( -182.936, 151.211, -60.1296, 0.28 ) }
    dend_22 { pt3dadd( -183.285, 151.646, -60.4087, 0.55 ) }
    dend_22 { pt3dadd( -184.091, 152.625, -60.92, 0.28 ) }
    dend_22 { pt3dadd( -184.458, 153.015, -61.086, 1.38 ) }
    dend_22 { pt3dadd( -186.531, 154.962, -61.741, 0.28 ) }
    dend_22 { pt3dadd( -187.077, 155.448, -61.8152, 0.55 ) }
    dend_22 { pt3dadd( -187.926, 156.179, -61.8205, 0.28 ) }
    dend_22 { pt3dadd( -188.535, 156.7, -61.7969, 1.94 ) }
    dend_22 { pt3dadd( -190.714, 158.545, -61.5476, 0.28 ) }
    dend_22 { pt3dadd( -191.114, 158.871, -61.4824, 0.55 ) }
    dend_22 { pt3dadd( -192.999, 160.245, -60.9871, 0.28 ) }
    dend_22 { pt3dadd( -193.671, 160.708, -60.8025, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.6015, -29.063, 2.33518, 0.83 ) }
    dend_9 { pt3dadd( -11.2846, -31.0498, 2.3738, 0.83 ) }
    dend_9 { pt3dadd( -11.8829, -32.7896, 2.40761, 0.83 ) }
    dend_9 { pt3dadd( -12.3483, -34.1431, 2.43391, 1.11 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 35/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.6015, -29.063, 2.33518, 0.83 ) }
    dend_6 { pt3dadd( -12.1123, -30.5149, 0.0783462, 0.83 ) }
    dend_6 { pt3dadd( -13.1294, -31.7663, -2.22382, 0.55 ) }
    dend_6 { pt3dadd( -13.8021, -32.851, -4.30465, 0.83 ) }
    dend_6 { pt3dadd( -14.1732, -33.8308, -6.34907, 0.55 ) }
    dend_6 { pt3dadd( -14.41, -34.6093, -7.97357, 0.55 ) }
    dend_6 { pt3dadd( -14.6556, -35.9038, -10.7681, 0.83 ) }
    dend_6 { pt3dadd( -14.5871, -36.7548, -12.674, 0.83 ) }
    dend_6 { pt3dadd( -14.385, -37.6572, -14.685, 0.55 ) }
    dend_6 { pt3dadd( -13.9125, -39.3662, -18.4489, 0.28 ) }
    dend_6 { pt3dadd( -13.8013, -39.8549, -19.4293, 0.28 ) }
    dend_6 { pt3dadd( -13.6809, -40.9414, -21.3972, 0.83 ) }
    dend_6 { pt3dadd( -13.6531, -41.9282, -22.8683, 0.55 ) }
    dend_6 { pt3dadd( -13.5944, -42.8745, -24.1411, 0.83 ) }
    dend_6 { pt3dadd( -13.5324, -43.6421, -25.1384, 0.83 ) }
    dend_6 { pt3dadd( -13.3842, -45.4985, -27.3482, 0.28 ) }
    dend_6 { pt3dadd( -13.2871, -46.2762, -28.3193, 0.83 ) }
    dend_6 { pt3dadd( -13.0838, -47.3223, -29.6544, 0.83 ) }
    dend_6 { pt3dadd( -12.504, -48.9373, -31.8409, 0.28 ) }
    dend_6 { pt3dadd( -11.9738, -50.0725, -33.5067, 0.83 ) }
    dend_6 { pt3dadd( -11.5627, -50.8631, -34.8384, 0.83 ) }
    dend_6 { pt3dadd( -10.9336, -52.1103, -37.2044, 0.28 ) }
    dend_6 { pt3dadd( -10.6361, -52.8901, -38.7645, 0.28 ) }
    dend_6 { pt3dadd( -10.5765, -53.3003, -39.6494, 0.55 ) }
    dend_6 { pt3dadd( -10.5906, -54.0116, -41.1881, 0.55 ) }
    dend_6 { pt3dadd( -10.6726, -55.3163, -44.0815, 0.83 ) }
    dend_6 { pt3dadd( -10.8285, -56.2, -45.9795, 0.28 ) }
    dend_6 { pt3dadd( -10.9394, -56.6136, -46.7794, 0.55 ) }
    dend_6 { pt3dadd( -11.3092, -57.8789, -49.0192, 0.28 ) }
    dend_6 { pt3dadd( -11.4139, -58.2938, -49.6888, 0.83 ) }
    dend_6 { pt3dadd( -11.5941, -59.3891, -51.2987, 0.28 ) }
    dend_6 { pt3dadd( -11.6565, -59.7908, -51.8561, 0.55 ) }
    dend_6 { pt3dadd( -11.8357, -60.8415, -53.3198, 0.28 ) }
    dend_6 { pt3dadd( -11.9164, -61.2732, -53.9206, 0.83 ) }
    dend_6 { pt3dadd( -12.3927, -63.2978, -56.7002, 0.28 ) }
    dend_6 { pt3dadd( -12.7491, -64.5914, -58.4552, 0.83 ) }
    dend_6 { pt3dadd( -13.3874, -66.5007, -61.0559, 0.28 ) }
    dend_6 { pt3dadd( -13.484, -66.7552, -61.446, 0.55 ) }
    dend_6 { pt3dadd( -13.9987, -68.0307, -63.4915, 0.28 ) }
    dend_6 { pt3dadd( -14.1212, -68.3336, -63.9781, 0.55 ) }
    dend_6 { pt3dadd( -14.5636, -69.5816, -65.9602, 0.28 ) }
    dend_6 { pt3dadd( -14.8057, -70.3383, -67.1203, 1.11 ) }
    dend_6 { pt3dadd( -15.5052, -73.2013, -71.3061, 0.28 ) }
    dend_6 { pt3dadd( -15.5848, -73.6958, -72.0071, 0.28 ) }
    dend_6 { pt3dadd( -15.6609, -74.5105, -73.0748, 0.83 ) }
    dend_6 { pt3dadd( -15.7614, -76.8443, -75.7875, 0.28 ) }
    dend_6 { pt3dadd( -15.7521, -77.2874, -76.2065, 0.55 ) }
    dend_6 { pt3dadd( -15.597, -79.3621, -77.7759, 0.28 ) }
    dend_6 { pt3dadd( -15.5018, -80.4423, -78.3274, 0.83 ) }
    dend_6 { pt3dadd( -15.419, -81.7461, -78.9065, 0.83 ) }
    dend_6 { pt3dadd( -15.3809, -83.5257, -79.5065, 0.28 ) }
    dend_6 { pt3dadd( -15.397, -85.841, -80.009, 0.28 ) }
    dend_6 { pt3dadd( -15.4074, -86.2467, -80.0892, 0.83 ) }
    dend_6 { pt3dadd( -15.5265, -89.0088, -80.6276, 0.28 ) }
    dend_6 { pt3dadd( -15.5591, -89.6476, -80.7601, 0.55 ) }
    dend_6 { pt3dadd( -15.6075, -91.4884, -81.1551, 0.28 ) }
    dend_6 { pt3dadd( -15.6877, -94.0282, -81.6931, 0.28 ) }
    dend_6 { pt3dadd( -15.7114, -95.2821, -81.9673, 1.11 ) }
    dend_6 { pt3dadd( -15.6517, -98.4682, -82.6324, 0.28 ) }
    dend_6 { pt3dadd( -15.5856, -100.577, -83.0643, 0.28 ) }
    dend_6 { pt3dadd( -15.5607, -101.492, -83.2263, 0.55 ) }
    dend_6 { pt3dadd( -15.539, -102.533, -83.3868, 0.83 ) }
    dend_6 { pt3dadd( -15.5621, -103.748, -83.5717, 0.83 ) }
    dend_6 { pt3dadd( -15.7346, -107.097, -84.0562, 0.28 ) }
    dend_6 { pt3dadd( -15.8041, -107.953, -84.2056, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_6 { pt3dadd( -15.9779, -110.095, -84.686, 0.28 ) }
    dend_6 { pt3dadd( -15.9922, -110.302, -84.7419, 0.83 ) }
    dend_6 { pt3dadd( -16.1691, -113.252, -85.6506, 0.28 ) }
    dend_6 { pt3dadd( -16.2175, -114.068, -85.9774, 0.83 ) }
    dend_6 { pt3dadd( -16.3605, -117.13, -87.4423, 0.28 ) }
    dend_6 { pt3dadd( -16.3838, -117.94, -87.835, 1.11 ) }
    dend_6 { pt3dadd( -16.4293, -119.645, -88.6616, 0.28 ) }
    dend_6 { pt3dadd( -16.4594, -120.511, -89.0808, 0.83 ) }
    dend_6 { pt3dadd( -16.5506, -123.689, -90.5789, 0.28 ) }
    dend_6 { pt3dadd( -16.5717, -124.222, -90.8566, 0.55 ) }
    dend_6 { pt3dadd( -16.6795, -125.516, -91.5415, 0.28 ) }
    dend_6 { pt3dadd( -16.7648, -126.495, -92.0381, 0.55 ) }
    dend_6 { pt3dadd( -17.0038, -129.521, -93.5155, 0.28 ) }
    dend_6 { pt3dadd( -17.057, -130.517, -93.9757, 0.55 ) }
    dend_6 { pt3dadd( -17.0918, -132.545, -94.8878, 0.28 ) }
    dend_6 { pt3dadd( -17.0527, -133.83, -95.4874, 0.55 ) }
    dend_6 { pt3dadd( -16.9416, -135.206, -96.1254, 0.55 ) }
    dend_6 { pt3dadd( -16.4779, -138.832, -97.681, 0.28 ) }
    dend_6 { pt3dadd( -16.3363, -139.604, -97.9869, 0.55 ) }
    dend_6 { pt3dadd( -15.6765, -142.554, -99.1311, 0.28 ) }
    dend_6 { pt3dadd( -15.3995, -143.586, -99.5458, 0.55 ) }
    dend_6 { pt3dadd( -14.7843, -145.706, -100.452, 0.28 ) }
    dend_6 { pt3dadd( -14.5955, -146.374, -100.753, 0.55 ) }
    dend_6 { pt3dadd( -13.9202, -148.736, -101.826, 0.28 ) }
    dend_6 { pt3dadd( -13.7275, -149.506, -102.196, 0.55 ) }
    dend_6 { pt3dadd( -13.0631, -152.788, -103.8, 0.28 ) }
    dend_6 { pt3dadd( -12.8743, -154.108, -104.5, 0.83 ) }
    dend_6 { pt3dadd( -12.7782, -155.459, -105.241, 0.28 ) }
    dend_6 { pt3dadd( -12.7695, -156.138, -105.611, 0.55 ) }
    dend_6 { pt3dadd( -12.8724, -157.873, -106.545, 0.28 ) }
    dend_6 { pt3dadd( -12.9271, -158.462, -106.867, 0.55 ) }
    dend_6 { pt3dadd( -13.2019, -160.204, -107.922, 0.28 ) }
    dend_6 { pt3dadd( -13.3696, -161.252, -108.588, 0.28 ) }
    dend_6 { pt3dadd( -13.4436, -161.767, -108.9, 0.83 ) }
    dend_6 { pt3dadd( -13.6778, -164.241, -110.361, 0.28 ) }
    dend_6 { pt3dadd( -13.7234, -165.252, -110.945, 0.83 ) }
    dend_6 { pt3dadd( -13.6704, -167.53, -112.296, 0.28 ) }
    dend_6 { pt3dadd( -13.4957, -169.37, -113.374, 0.28 ) }
    dend_6 { pt3dadd( -13.294, -170.637, -114.117, 0.55 ) }
    dend_6 { pt3dadd( -12.7734, -173.115, -115.516, 0.28 ) }
    dend_6 { pt3dadd( -12.504, -174.056, -116.031, 0.83 ) }
    dend_6 { pt3dadd( -11.8555, -175.974, -117.018, 0.28 ) }
    dend_6 { pt3dadd( -11.5895, -176.63, -117.317, 0.55 ) }
    dend_6 { pt3dadd( -11.4223, -177.042, -117.512, 0.28 ) }
    dend_6 { pt3dadd( -11.2744, -177.422, -117.676, 0.55 ) }
    dend_6 { pt3dadd( -10.9736, -178.4, -118.0, 0.55 ) }
    dend_6 { pt3dadd( -10.6211, -179.975, -118.6, 0.83 ) }
    dend_6 { pt3dadd( -10.3316, -181.601, -119.233, 0.28 ) }
    dend_6 { pt3dadd( -10.2216, -182.308, -119.51, 0.55 ) }
    dend_6 { pt3dadd( -9.96791, -184.23, -120.229, 0.28 ) }
    dend_6 { pt3dadd( -9.79683, -185.927, -120.83, 0.83 ) }
    dend_6 { pt3dadd( -9.57795, -189.084, -121.914, 0.28 ) }
    dend_6 { pt3dadd( -9.53317, -190.28, -122.339, 0.28 ) }
    dend_6 { pt3dadd( -9.53265, -192.682, -123.169, 0.83 ) }
    dend_6 { pt3dadd( -9.58973, -194.544, -123.761, 0.28 ) }
    dend_6 { pt3dadd( -9.69648, -195.562, -124.061, 0.28 ) }
    dend_6 { pt3dadd( -9.73378, -195.799, -124.121, 0.55 ) }
    dend_6 { pt3dadd( -9.98659, -196.861, -124.269, 0.28 ) }
    dend_6 { pt3dadd( -10.43, -198.204, -124.45, 0.83 ) }
    dend_6 { pt3dadd( -11.303, -200.396, -124.733, 0.28 ) }
    dend_6 { pt3dadd( -11.8434, -201.713, -124.896, 0.83 ) }
    dend_6 { pt3dadd( -12.4391, -203.208, -125.064, 0.28 ) }
    dend_6 { pt3dadd( -13.246, -205.344, -125.26, 0.83 ) }
    dend_6 { pt3dadd( -13.85, -206.956, -125.364, 0.28 ) }
    dend_6 { pt3dadd( -13.9573, -207.241, -125.381, 0.55 ) }
    dend_6 { pt3dadd( -14.3755, -208.334, -125.422, 0.28 ) }
    dend_6 { pt3dadd( -14.6481, -209.167, -125.433, 0.55 ) }
    dend_6 { pt3dadd( -15.0663, -210.593, -125.504, 0.28 ) }
    dend_6 { pt3dadd( -15.2767, -211.624, -125.659, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 69/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -24.8944, -7.99473, -16.7472, 0.55 ) }
    dend_4 { pt3dadd( -26.5646, -8.71774, -18.0399, 0.55 ) }
    dend_4 { pt3dadd( -29.3948, -9.36883, -21.0727, 0.55 ) }
    dend_4 { pt3dadd( -31.4178, -9.70304, -24.1905, 0.55 ) }
    dend_4 { pt3dadd( -32.4901, -9.90342, -25.9773, 0.83 ) }
    dend_4 { pt3dadd( -34.7481, -10.4648, -29.9603, 0.55 ) }
    dend_4 { pt3dadd( -35.5966, -10.6929, -31.4357, 0.55 ) }
    dend_4 { pt3dadd( -38.6415, -11.8632, -37.5438, 0.55 ) }
    dend_4 { pt3dadd( -41.2624, -13.1412, -43.4963, 0.28 ) }
    dend_4 { pt3dadd( -41.8854, -13.4451, -44.8865, 0.83 ) }
    dend_4 { pt3dadd( -43.9656, -14.4839, -49.2659, 0.28 ) }
    dend_4 { pt3dadd( -44.6055, -14.8649, -50.5071, 0.55 ) }
    dend_4 { pt3dadd( -46.5595, -16.331, -53.9363, 0.28 ) }
    dend_4 { pt3dadd( -47.5013, -17.1593, -55.2883, 0.55 ) }
    dend_4 { pt3dadd( -48.4116, -17.8288, -56.3697, 0.55 ) }
    dend_4 { pt3dadd( -49.5308, -18.4655, -57.8204, 0.55 ) }
    dend_4 { pt3dadd( -52.5103, -19.6118, -61.7964, 0.28 ) }
    dend_4 { pt3dadd( -52.7168, -19.6453, -62.0948, 0.55 ) }
    dend_4 { pt3dadd( -55.6055, -19.4099, -66.3305, 0.28 ) }
    dend_4 { pt3dadd( -56.6695, -19.036, -68.0015, 0.55 ) }
    dend_4 { pt3dadd( -58.9083, -17.6518, -71.5445, 0.28 ) }
    dend_4 { pt3dadd( -59.737, -16.881, -72.865, 0.55 ) }
    dend_4 { pt3dadd( -61.325, -14.9813, -75.1227, 0.28 ) }
    dend_4 { pt3dadd( -61.8385, -14.2751, -75.7008, 0.55 ) }
    dend_4 { pt3dadd( -63.9348, -11.0096, -77.9082, 0.28 ) }
    dend_4 { pt3dadd( -65.4946, -8.48727, -79.4719, 0.55 ) }
    dend_4 { pt3dadd( -66.9947, -6.13116, -80.7674, 0.28 ) }
    dend_4 { pt3dadd( -67.7909, -4.97122, -81.4286, 0.55 ) }
    dend_4 { pt3dadd( -70.9707, -0.764509, -83.6066, 0.28 ) }
    dend_4 { pt3dadd( -74.9537, 3.42728, -86.2964, 0.55 ) }
    dend_4 { pt3dadd( -78.6334, 6.52127, -88.5552, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -79.8015, 7.27494, -89.1926, 0.55 ) }
    dend_4 { pt3dadd( -81.778, 8.30947, -90.1489, 0.28 ) }
    dend_4 { pt3dadd( -84.7296, 9.64947, -91.5784, 0.55 ) }
    dend_4 { pt3dadd( -92.5304, 12.6114, -95.2197, 0.28 ) }
    dend_4 { pt3dadd( -94.2071, 13.1898, -95.9443, 0.83 ) }
    dend_4 { pt3dadd( -97.6258, 14.2319, -97.5646, 0.28 ) }
    dend_4 { pt3dadd( -99.9361, 14.9077, -98.7481, 0.28 ) }
    dend_4 { pt3dadd( -102.221, 15.5817, -99.9695, 0.83 ) }
    dend_4 { pt3dadd( -103.42, 16.0103, -100.452, 0.83 ) }
    dend_4 { pt3dadd( -109.35, 18.5664, -101.64, 0.28 ) }
    dend_4 { pt3dadd( -110.751, 19.1055, -102.015, 0.55 ) }
    dend_4 { pt3dadd( -115.798, 20.6864, -103.06, 0.28 ) }
    dend_4 { pt3dadd( -118.191, 21.2714, -103.352, 1.11 ) }
    dend_4 { pt3dadd( -130.106, 23.5553, -104.584, 0.28 ) }
    dend_4 { pt3dadd( -132.741, 23.9445, -104.898, 0.83 ) }
    dend_4 { pt3dadd( -142.937, 24.9642, -106.058, 0.28 ) }
    dend_4 { pt3dadd( -148.264, 25.2244, -107.513, 0.83 ) }
    dend_4 { pt3dadd( -152.247, 25.2403, -109.263, 0.28 ) }
    dend_4 { pt3dadd( -156.087, 25.0701, -111.548, 0.55 ) }
    dend_4 { pt3dadd( -158.185, 24.9031, -113.281, 0.28 ) }
    dend_4 { pt3dadd( -159.487, 24.8698, -114.445, 0.55 ) }
    dend_4 { pt3dadd( -163.7, 25.0669, -119.07, 0.28 ) }
    dend_4 { pt3dadd( -164.113, 25.067, -119.724, 0.55 ) }
    dend_4 { pt3dadd( -164.91, 25.0277, -121.246, 0.55 ) }
    dend_4 { pt3dadd( -167.118, 24.8725, -125.663, 0.55 ) }
    dend_4 { pt3dadd( -167.933, 24.8158, -127.534, 0.28 ) }
    dend_4 { pt3dadd( -169.714, 24.7352, -132.023, 0.55 ) }
    dend_4 { pt3dadd( -171.94, 24.4886, -138.004, 0.55 ) }
    dend_4 { pt3dadd( -173.019, 24.3148, -141.075, 0.28 ) }
    dend_4 { pt3dadd( -173.357, 24.2643, -142.058, 0.83 ) }
    dend_4 { pt3dadd( -175.848, 23.9438, -148.963, 0.28 ) }
    dend_4 { pt3dadd( -176.199, 23.8856, -149.956, 0.83 ) }
    dend_4 { pt3dadd( -178.323, 23.5712, -155.71, 0.28 ) }
    dend_4 { pt3dadd( -178.517, 23.5073, -156.23, 0.55 ) }
    dend_4 { pt3dadd( -179.248, 23.0826, -158.192, 0.28 ) }
    dend_4 { pt3dadd( -179.53, 22.8621, -158.919, 0.55 ) }
    dend_4 { pt3dadd( -181.382, 21.25, -163.014, 0.28 ) }
    dend_4 { pt3dadd( -181.892, 20.825, -164.256, 0.55 ) }
    dend_4 { pt3dadd( -184.048, 19.2485, -169.708, 0.28 ) }
    dend_4 { pt3dadd( -184.641, 18.8472, -171.333, 0.83 ) }
    dend_4 { pt3dadd( -186.735, 17.5506, -177.232, 0.28 ) }
    dend_4 { pt3dadd( -186.956, 17.4024, -177.942, 0.55 ) }
    dend_4 { pt3dadd( -188.699, 16.2247, -183.916, 0.28 ) }
    dend_4 { pt3dadd( -188.95, 15.9755, -184.945, 0.83 ) }
    dend_4 { pt3dadd( -189.684, 15.0241, -188.31, 0.28 ) }
    dend_4 { pt3dadd( -189.867, 14.6476, -189.329, 0.83 ) }
    dend_4 { pt3dadd( -190.802, 10.0689, -198.16, 0.28 ) }
    dend_4 { pt3dadd( -190.838, 9.45817, -199.081, 0.55 ) }
    dend_4 { pt3dadd( -190.823, 6.89949, -202.061, 0.28 ) }
    dend_4 { pt3dadd( -190.804, 6.56347, -202.415, 0.83 ) }
    dend_4 { pt3dadd( -190.582, 3.90018, -204.808, 0.28 ) }
    dend_4 { pt3dadd( -190.219, 0.398787, -207.547, 0.55 ) }
    dend_4 { pt3dadd( -190.061, -1.15216, -208.488, 0.28 ) }
    dend_4 { pt3dadd( -189.95, -2.41563, -209.299, 0.55 ) }
    dend_4 { pt3dadd( -189.764, -6.01534, -211.599, 0.28 ) }
    dend_4 { pt3dadd( -189.701, -7.50524, -212.651, 0.55 ) }
    dend_4 { pt3dadd( -189.726, -8.97882, -213.717, 0.28 ) }
    dend_4 { pt3dadd( -189.822, -9.8529, -214.331, 0.55 ) }
    dend_4 { pt3dadd( -190.356, -12.9229, -216.956, 0.28 ) }
    dend_4 { pt3dadd( -190.571, -13.7581, -217.82, 0.55 ) }
    dend_4 { pt3dadd( -192.077, -17.52, -222.232, 0.28 ) }
    dend_4 { pt3dadd( -192.631, -18.541, -223.833, 0.55 ) }
    dend_4 { pt3dadd( -193.15, -19.2594, -225.284, 0.55 ) }
    dend_4 { pt3dadd( -194.657, -20.7274, -229.184, 0.55 ) }
    dend_4 { pt3dadd( -196.226, -21.5503, -232.758, 0.28 ) }
    dend_4 { pt3dadd( -196.841, -21.7564, -234.137, 0.55 ) }
    dend_4 { pt3dadd( -199.276, -21.8199, -239.083, 0.28 ) }
    dend_4 { pt3dadd( -199.834, -21.718, -240.354, 0.55 ) }
    dend_4 { pt3dadd( -200.895, -21.2111, -243.001, 0.28 ) }
    dend_4 { pt3dadd( -201.514, -20.4828, -244.42, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -24.8944, -7.99473, -16.7472, 0.55 ) }
    dend_3 { pt3dadd( -28.1285, -8.15585, -16.5264, 0.55 ) }
    dend_3 { pt3dadd( -30.9263, -8.37859, -16.243, 0.83 ) }
    dend_3 { pt3dadd( -34.1835, -8.69552, -15.9842, 0.55 ) }
    dend_3 { pt3dadd( -36.0803, -8.91677, -15.6154, 0.28 ) }
    dend_3 { pt3dadd( -38.4747, -9.26476, -14.9764, 0.55 ) }
    dend_3 { pt3dadd( -42.154, -9.97859, -13.7905, 0.28 ) }
    dend_3 { pt3dadd( -43.3345, -10.2893, -13.3449, 0.55 ) }
    dend_3 { pt3dadd( -46.3986, -11.3205, -12.1735, 0.55 ) }
    dend_3 { pt3dadd( -51.0377, -13.1235, -10.2971, 0.55 ) }
    dend_3 { pt3dadd( -53.7115, -14.1968, -9.21777, 0.28 ) }
    dend_3 { pt3dadd( -57.3639, -15.6602, -7.74523, 0.55 ) }
    dend_3 { pt3dadd( -59.3676, -16.4824, -6.99676, 0.55 ) }
    dend_3 { pt3dadd( -62.5, -17.7622, -5.74747, 0.55 ) }
    dend_3 { pt3dadd( -63.5065, -18.1764, -5.34378, 0.83 ) }
    dend_3 { pt3dadd( -65.4167, -18.9401, -4.8012, 0.28 ) }
    dend_3 { pt3dadd( -65.9814, -19.1421, -4.64478, 0.55 ) }
    dend_3 { pt3dadd( -67.7083, -19.6501, -4.16972, 0.28 ) }
    dend_3 { pt3dadd( -68.7904, -19.9064, -3.82523, 0.55 ) }
    dend_3 { pt3dadd( -70.4513, -20.2751, -3.23496, 0.28 ) }
    dend_3 { pt3dadd( -72.0895, -20.6502, -2.66041, 0.55 ) }
    dend_3 { pt3dadd( -73.9839, -21.1345, -1.9727, 0.28 ) }
    dend_3 { pt3dadd( -75.3674, -21.4826, -1.46103, 0.55 ) }
    dend_3 { pt3dadd( -77.9732, -22.1144, -0.43453, 0.28 ) }
    dend_3 { pt3dadd( -79.779, -22.5341, 0.318111, 0.28 ) }
    dend_3 { pt3dadd( -81.0596, -22.8057, 0.891379, 0.28 ) }
    dend_3 { pt3dadd( -82.7079, -23.1344, 1.65325, 0.55 ) }
    dend_3 { pt3dadd( -84.5712, -23.4927, 2.42521, 0.55 ) }
    dend_3 { pt3dadd( -86.3583, -23.883, 3.12673, 0.28 ) }
    dend_3 { pt3dadd( -87.8625, -24.2572, 3.66688, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_3 { pt3dadd( -90.2513, -24.9337, 4.38115, 0.55 ) }
    dend_3 { pt3dadd( -91.7216, -25.4113, 4.72004, 0.55 ) }
    dend_3 { pt3dadd( -93.5704, -26.0083, 5.04638, 0.55 ) }
    dend_3 { pt3dadd( -94.7668, -26.3834, 5.20814, 0.55 ) }
    dend_3 { pt3dadd( -98.4532, -27.5297, 5.67696, 0.55 ) }
    dend_3 { pt3dadd( -100.888, -28.2536, 6.01171, 0.55 ) }
    dend_3 { pt3dadd( -104.0, -29.1556, 6.4432, 0.55 ) }
    dend_3 { pt3dadd( -107.208, -30.0838, 6.90921, 0.28 ) }
    dend_3 { pt3dadd( -109.996, -30.8929, 7.3168, 0.55 ) }
    dend_3 { pt3dadd( -113.093, -31.7577, 7.75123, 0.55 ) }
    dend_3 { pt3dadd( -116.583, -32.7425, 8.22816, 0.55 ) }
    dend_3 { pt3dadd( -119.135, -33.4797, 8.60925, 0.28 ) }
    dend_3 { pt3dadd( -123.904, -34.9488, 9.32362, 0.55 ) }
    dend_3 { pt3dadd( -125.769, -35.586, 9.55108, 0.83 ) }
    dend_3 { pt3dadd( -127.371, -36.1441, 9.71694, 0.28 ) }
    dend_3 { pt3dadd( -128.311, -36.4773, 9.76723, 0.55 ) }
    dend_3 { pt3dadd( -130.579, -37.3292, 9.83205, 0.28 ) }
    dend_3 { pt3dadd( -131.356, -37.6361, 9.84741, 0.28 ) }
    dend_3 { pt3dadd( -133.185, -38.3983, 9.89758, 0.55 ) }
    dend_3 { pt3dadd( -142.001, -41.5463, 13.7247, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_9 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -12.3483, -34.1431, 2.43391, 0.83 ) }
    dend_15 { pt3dadd( -11.1961, -35.6073, 3.70067, 0.83 ) }
    dend_15 { pt3dadd( -10.2296, -37.0427, 5.02127, 0.83 ) }
    dend_15 { pt3dadd( -8.11471, -40.8197, 8.34318, 0.83 ) }
    dend_15 { pt3dadd( -4.74737, -47.9448, 14.2473, 0.55 ) }
    dend_15 { pt3dadd( -3.72931, -50.4273, 16.1564, 0.55 ) }
    dend_15 { pt3dadd( -2.78825, -53.1003, 18.1514, 0.83 ) }
    dend_15 { pt3dadd( -1.85978, -56.8042, 20.9706, 0.55 ) }
    dend_15 { pt3dadd( -1.34609, -59.8608, 23.2381, 0.83 ) }
    dend_15 { pt3dadd( -1.20006, -61.7268, 24.4683, 0.83 ) }
    dend_15 { pt3dadd( -1.19284, -64.1383, 25.5634, 0.83 ) }
    dend_15 { pt3dadd( -1.29636, -66.7623, 26.6462, 0.83 ) }
    dend_15 { pt3dadd( -1.43464, -69.3474, 27.5194, 0.55 ) }
    dend_15 { pt3dadd( -1.66179, -71.4077, 28.2384, 0.55 ) }
    dend_15 { pt3dadd( -2.15792, -74.4479, 29.4584, 0.55 ) }
    dend_15 { pt3dadd( -3.06303, -77.9583, 31.1479, 0.55 ) }
    dend_15 { pt3dadd( -3.99508, -80.3489, 32.4167, 0.55 ) }
    dend_15 { pt3dadd( -5.45059, -83.3409, 34.0253, 0.83 ) }
    dend_15 { pt3dadd( -7.49915, -86.8407, 36.0101, 0.28 ) }
    dend_15 { pt3dadd( -8.18014, -87.8443, 36.6021, 0.55 ) }
    dend_15 { pt3dadd( -10.8808, -91.301, 38.6561, 0.55 ) }
    dend_15 { pt3dadd( -12.853, -93.4636, 39.908, 0.55 ) }
    dend_15 { pt3dadd( -14.0193, -94.5999, 40.4543, 0.55 ) }
    dend_15 { pt3dadd( -15.4633, -95.8056, 40.9366, 0.28 ) }
    dend_15 { pt3dadd( -18.1566, -97.8471, 41.5534, 0.55 ) }
    dend_15 { pt3dadd( -20.9599, -99.8331, 42.1496, 0.55 ) }
    dend_15 { pt3dadd( -23.573, -101.478, 42.6295, 0.55 ) }
    dend_15 { pt3dadd( -27.137, -103.526, 43.3028, 0.55 ) }
    dend_15 { pt3dadd( -29.8362, -104.991, 43.8285, 0.55 ) }
    dend_15 { pt3dadd( -31.9579, -106.055, 44.2494, 0.55 ) }
    dend_15 { pt3dadd( -34.1772, -107.099, 44.7442, 0.28 ) }
    dend_15 { pt3dadd( -35.6741, -107.822, 45.0933, 0.55 ) }
    dend_15 { pt3dadd( -38.7943, -109.528, 45.8447, 0.28 ) }
    dend_15 { pt3dadd( -40.1246, -110.254, 46.168, 0.55 ) }
    dend_15 { pt3dadd( -41.828, -121.215, 50.5246, 0.55 ) }
    dend_15 { pt3dadd( -43.141, -132.049, 55.3497, 0.55 ) }
    dend_15 { pt3dadd( -44.1826, -141.632, 62.5917, 0.55 ) }
    dend_15 { pt3dadd( -44.1083, -151.62, 69.2813, 0.55 ) }
    dend_15 { pt3dadd( -44.9102, -161.383, 76.2825, 0.55 ) }
    dend_15 { pt3dadd( -46.4773, -172.274, 80.881, 0.55 ) }
    dend_15 { pt3dadd( -48.9725, -182.362, 86.892, 0.55 ) }
    dend_15 { pt3dadd( -52.4973, -191.934, 93.3068, 0.55 ) }
    dend_15 { pt3dadd( -53.4413, -201.783, 100.154, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 63/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.3483, -34.1431, 2.43391, 0.83 ) }
    dend_10 { pt3dadd( -13.2287, -37.6259, 1.63347, 0.83 ) }
    dend_10 { pt3dadd( -13.803, -40.2219, 1.02679, 0.83 ) }
    dend_10 { pt3dadd( -14.5533, -43.8885, 0.379468, 0.83 ) }
    dend_10 { pt3dadd( -15.0507, -46.4022, 0.027597, 0.83 ) }
    dend_10 { pt3dadd( -15.7247, -49.7082, -0.283673, 0.83 ) }
    dend_10 { pt3dadd( -16.3248, -52.403, -0.450007, 0.83 ) }
    dend_10 { pt3dadd( -17.009, -55.1371, -0.407041, 0.83 ) }
    dend_10 { pt3dadd( -17.8042, -58.0522, -0.224286, 0.55 ) }
    dend_10 { pt3dadd( -18.3353, -59.8948, 0.0442276, 1.11 ) }
    dend_10 { pt3dadd( -18.9859, -62.2975, 0.548749, 0.55 ) }
    dend_10 { pt3dadd( -19.5491, -64.401, 1.05227, 0.55 ) }
    dend_10 { pt3dadd( -20.0771, -66.5767, 1.60939, 0.55 ) }
    dend_10 { pt3dadd( -20.3249, -67.6945, 1.8837, 0.55 ) }
    dend_10 { pt3dadd( -20.7947, -70.3155, 2.3944, 0.83 ) }
    dend_10 { pt3dadd( -21.3551, -74.5256, 3.08968, 0.83 ) }
    dend_10 { pt3dadd( -21.5702, -76.5361, 3.35185, 0.83 ) }
    dend_10 { pt3dadd( -21.8109, -78.9824, 3.6156, 0.83 ) }
    dend_10 { pt3dadd( -22.0048, -80.9437, 3.77538, 0.83 ) }
    dend_10 { pt3dadd( -22.2768, -83.2209, 3.89819, 0.83 ) }
    dend_10 { pt3dadd( -22.6582, -85.9413, 3.97112, 0.83 ) }
    dend_10 { pt3dadd( -23.1169, -89.0608, 4.04692, 0.83 ) }
    dend_10 { pt3dadd( -23.5911, -92.3852, 4.10156, 0.83 ) }
    dend_10 { pt3dadd( -23.9272, -94.8506, 4.11221, 0.83 ) }
    dend_10 { pt3dadd( -24.3191, -98.1824, 4.15129, 0.83 ) }
    dend_10 { pt3dadd( -24.6629, -101.81, 4.21611, 0.83 ) }
    dend_10 { pt3dadd( -24.8572, -104.744, 4.28124, 0.83 ) }
    dend_10 { pt3dadd( -24.9012, -106.82, 4.31615, 0.83 ) }
    dend_10 { pt3dadd( -24.8357, -110.552, 4.37251, 0.83 ) }
    dend_10 { pt3dadd( -24.7145, -112.84, 4.36435, 0.55 ) }
    dend_10 { pt3dadd( -24.572, -114.191, 4.3182, 0.55 ) }
    dend_10 { pt3dadd( -24.4626, -114.896, 4.2571, 0.83 ) }
    dend_10 { pt3dadd( -24.2238, -116.045, 4.08135, 0.28 ) }
    dend_10 { pt3dadd( -23.9757, -117.123, 3.77367, 0.83 ) }
    dend_10 { pt3dadd( -23.5437, -118.859, 3.03105, 0.28 ) }
    dend_10 { pt3dadd( -23.2043, -120.474, 2.22609, 0.83 ) }
    dend_10 { pt3dadd( -23.0261, -121.635, 1.65925, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -22.9026, -122.919, 1.10236, 0.83 ) }
    dend_10 { pt3dadd( -22.8048, -125.884, -0.10986, 0.28 ) }
    dend_10 { pt3dadd( -22.8332, -127.132, -0.589896, 0.28 ) }
    dend_10 { pt3dadd( -22.9549, -128.411, -1.0919, 0.55 ) }
    dend_10 { pt3dadd( -23.2605, -130.471, -1.91682, 0.55 ) }
    dend_10 { pt3dadd( -23.8448, -133.183, -2.94336, 0.55 ) }
    dend_10 { pt3dadd( -24.2656, -134.615, -3.44007, 0.28 ) }
    dend_10 { pt3dadd( -24.6624, -135.645, -3.75607, 0.55 ) }
    dend_10 { pt3dadd( -25.8864, -138.305, -4.59434, 0.28 ) }
    dend_10 { pt3dadd( -26.2882, -139.085, -4.84096, 0.55 ) }
    dend_10 { pt3dadd( -27.3354, -141.03, -5.4342, 0.55 ) }
    dend_10 { pt3dadd( -28.4318, -142.932, -5.98869, 0.55 ) }
    dend_10 { pt3dadd( -29.7701, -145.373, -6.63005, 0.28 ) }
    dend_10 { pt3dadd( -30.3586, -146.506, -6.91364, 0.28 ) }
    dend_10 { pt3dadd( -31.2705, -148.415, -7.31812, 0.55 ) }
    dend_10 { pt3dadd( -31.9642, -150.082, -7.68303, 0.28 ) }
    dend_10 { pt3dadd( -32.3556, -151.229, -7.93581, 0.55 ) }
    dend_10 { pt3dadd( -32.9427, -153.519, -8.36293, 0.28 ) }
    dend_10 { pt3dadd( -33.2962, -155.443, -8.62494, 0.55 ) }
    dend_10 { pt3dadd( -33.5978, -157.781, -8.87485, 0.28 ) }
    dend_10 { pt3dadd( -33.7734, -160.486, -9.06912, 0.28 ) }
    dend_10 { pt3dadd( -33.7807, -160.869, -9.08359, 0.55 ) }
    dend_10 { pt3dadd( -33.7336, -162.373, -9.10338, 0.83 ) }
    dend_10 { pt3dadd( -33.5805, -164.73, -9.10287, 0.83 ) }
    dend_10 { pt3dadd( -33.3621, -167.262, -9.07474, 0.28 ) }
    dend_10 { pt3dadd( -33.2197, -168.959, -9.07257, 0.83 ) }
    dend_10 { pt3dadd( -33.087, -171.22, -9.08423, 0.83 ) }
    dend_10 { pt3dadd( -33.019, -173.704, -9.12964, 0.28 ) }
    dend_10 { pt3dadd( -33.0234, -175.515, -9.19091, 0.83 ) }
    dend_10 { pt3dadd( -33.1038, -178.142, -9.25806, 0.28 ) }
    dend_10 { pt3dadd( -33.2162, -179.406, -9.26239, 0.55 ) }
    dend_10 { pt3dadd( -33.3899, -180.509, -9.25393, 0.55 ) }
    dend_10 { pt3dadd( -33.5848, -181.5, -9.21767, 0.28 ) }
    dend_10 { pt3dadd( -33.6912, -181.997, -9.1923, 0.55 ) }
    dend_10 { pt3dadd( -33.9468, -183.323, -9.25313, 0.28 ) }
    dend_10 { pt3dadd( -34.0593, -184.198, -9.39696, 0.55 ) }
    dend_10 { pt3dadd( -34.1525, -185.428, -9.75575, 0.28 ) }
    dend_10 { pt3dadd( -34.2112, -186.837, -10.2966, 0.28 ) }
    dend_10 { pt3dadd( -34.2583, -188.298, -10.9599, 0.55 ) }
    dend_10 { pt3dadd( -34.3134, -191.104, -12.3405, 0.28 ) }
    dend_10 { pt3dadd( -34.2968, -193.012, -13.2193, 0.83 ) }
    dend_10 { pt3dadd( -34.242, -195.96, -14.5058, 0.28 ) }
    dend_10 { pt3dadd( -34.2195, -196.932, -14.8944, 0.55 ) }
    dend_10 { pt3dadd( -34.2084, -198.877, -15.5464, 0.28 ) }
    dend_10 { pt3dadd( -34.2097, -201.575, -16.2139, 0.55 ) }
    dend_10 { pt3dadd( -34.1848, -204.349, -16.4946, 0.28 ) }
    dend_10 { pt3dadd( -34.1763, -205.284, -16.4943, 0.55 ) }
    dend_10 { pt3dadd( -34.1628, -206.869, -16.3294, 0.28 ) }
    dend_10 { pt3dadd( -34.1929, -207.968, -16.1721, 0.55 ) }
    dend_10 { pt3dadd( -34.2737, -209.383, -15.9108, 0.55 ) }
    dend_10 { pt3dadd( -34.5054, -211.723, -15.4484, 0.28 ) }
    dend_10 { pt3dadd( -34.6822, -213.066, -15.2249, 0.55 ) }
    dend_10 { pt3dadd( -34.9296, -214.694, -14.9709, 0.28 ) }
    dend_10 { pt3dadd( -35.3553, -217.162, -14.6261, 0.28 ) }
    dend_10 { pt3dadd( -35.6763, -218.706, -14.4531, 0.55 ) }
    dend_10 { pt3dadd( -36.1613, -220.555, -14.2496, 0.28 ) }
    dend_10 { pt3dadd( -36.3937, -221.222, -14.2023, 0.55 ) }
    dend_10 { pt3dadd( -36.8812, -222.355, -14.1691, 0.28 ) }
    dend_10 { pt3dadd( -37.3117, -223.181, -14.2563, 0.55 ) }
    dend_10 { pt3dadd( -38.6056, -225.372, -14.7037, 0.28 ) }
    dend_10 { pt3dadd( -39.221, -226.327, -14.977, 0.55 ) }
    dend_10 { pt3dadd( -40.5509, -228.293, -15.6112, 0.28 ) }
    dend_10 { pt3dadd( -41.4851, -229.651, -16.0743, 0.83 ) }
    dend_10 { pt3dadd( -43.7004, -232.841, -17.2491, 0.28 ) }
    dend_10 { pt3dadd( -44.3267, -233.728, -17.624, 0.55 ) }
    dend_10 { pt3dadd( -45.4205, -235.313, -18.4388, 0.28 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 66/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -15.2767, -211.624, -125.659, 0.28 ) }
    dend_8 { pt3dadd( -14.873, -214.718, -126.176, 0.28 ) }
    dend_8 { pt3dadd( -14.7146, -215.925, -126.408, 0.83 ) }
    dend_8 { pt3dadd( -14.0778, -220.721, -127.386, 0.28 ) }
    dend_8 { pt3dadd( -13.9019, -222.227, -127.726, 0.83 ) }
    dend_8 { pt3dadd( -13.355, -226.543, -128.786, 0.28 ) }
    dend_8 { pt3dadd( -13.215, -227.714, -129.103, 0.83 ) }
    dend_8 { pt3dadd( -12.8559, -231.037, -130.127, 0.28 ) }
    dend_8 { pt3dadd( -12.7971, -231.621, -130.33, 0.55 ) }
    dend_8 { pt3dadd( -12.5088, -234.84, -131.566, 0.28 ) }
    dend_8 { pt3dadd( -12.374, -237.022, -132.472, 0.83 ) }
    dend_8 { pt3dadd( -12.2841, -240.275, -133.89, 0.28 ) }
    dend_8 { pt3dadd( -12.2994, -240.908, -134.192, 0.55 ) }
    dend_8 { pt3dadd( -12.4346, -242.805, -135.132, 0.28 ) }
    dend_8 { pt3dadd( -12.6378, -244.206, -135.806, 0.83 ) }
    dend_8 { pt3dadd( -13.0002, -246.016, -136.69, 0.28 ) }
    dend_8 { pt3dadd( -13.2806, -247.171, -137.265, 0.55 ) }
    dend_8 { pt3dadd( -13.6594, -248.905, -138.177, 0.28 ) }
    dend_8 { pt3dadd( -13.9496, -250.519, -139.054, 0.28 ) }
    dend_8 { pt3dadd( -14.2811, -252.822, -140.399, 0.55 ) }
    dend_8 { pt3dadd( -14.4363, -255.925, -142.307, 0.28 ) }
    dend_8 { pt3dadd( -14.4133, -256.599, -142.729, 0.55 ) }
    dend_8 { pt3dadd( -13.9892, -259.931, -144.953, 0.28 ) }
    dend_8 { pt3dadd( -13.7253, -260.997, -145.689, 0.83 ) }
    dend_8 { pt3dadd( -12.7182, -263.93, -147.872, 0.28 ) }
    dend_8 { pt3dadd( -11.7599, -266.028, -149.521, 0.28 ) }
    dend_8 { pt3dadd( -11.4614, -266.588, -149.962, 0.55 ) }
    dend_8 { pt3dadd( -9.71001, -269.559, -152.255, 0.28 ) }
    dend_8 { pt3dadd( -8.55304, -271.256, -153.518, 0.28 ) }
    dend_8 { pt3dadd( -8.25592, -271.684, -153.824, 0.83 ) }
    dend_8 { pt3dadd( -6.56475, -274.118, -155.378, 0.28 ) }
    dend_8 { pt3dadd( -6.05537, -274.973, -155.851, 0.55 ) }
    dend_8 { pt3dadd( -5.25911, -276.548, -156.551, 0.28 ) }
    dend_8 { pt3dadd( -4.58676, -278.376, -157.106, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_8 { pt3dadd( -4.32776, -279.433, -157.321, 0.55 ) }
    dend_8 { pt3dadd( -3.88235, -281.832, -157.63, 0.28 ) }
    dend_8 { pt3dadd( -3.6504, -283.752, -157.824, 0.83 ) }
    dend_8 { pt3dadd( -3.40431, -286.256, -158.077, 0.28 ) }
    dend_8 { pt3dadd( -3.17853, -288.444, -158.336, 0.28 ) }
    dend_8 { pt3dadd( -2.87127, -291.216, -158.699, 0.28 ) }
    dend_8 { pt3dadd( -2.58685, -293.0, -158.957, 0.83 ) }
    dend_8 { pt3dadd( -1.63348, -298.042, -159.784, 0.28 ) }
    dend_8 { pt3dadd( -1.33629, -299.249, -159.995, 0.55 ) }
    dend_8 { pt3dadd( -0.631348, -301.565, -160.407, 0.28 ) }
    dend_8 { pt3dadd( -0.433411, -302.125, -160.52, 0.55 ) }
    dend_8 { pt3dadd( 0.61801, -304.778, -161.086, 0.28 ) }
    dend_8 { pt3dadd( 1.0028, -305.65, -161.251, 0.55 ) }
    dend_8 { pt3dadd( 2.09962, -307.642, -161.446, 0.28 ) }
    dend_8 { pt3dadd( 2.52515, -308.445, -161.496, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -15.2767, -211.624, -125.659, 0.28 ) }
    dend_7 { pt3dadd( -16.3059, -214.099, -125.915, 0.28 ) }
    dend_7 { pt3dadd( -17.1742, -216.243, -125.979, 0.55 ) }
    dend_7 { pt3dadd( -18.4738, -219.369, -125.991, 0.28 ) }
    dend_7 { pt3dadd( -18.6448, -219.778, -125.995, 0.55 ) }
    dend_7 { pt3dadd( -19.3279, -221.35, -126.037, 0.28 ) }
    dend_7 { pt3dadd( -19.6274, -221.99, -126.07, 0.55 ) }
    dend_7 { pt3dadd( -20.8968, -224.594, -126.248, 0.28 ) }
    dend_7 { pt3dadd( -21.252, -225.3, -126.322, 0.55 ) }
    dend_7 { pt3dadd( -22.5123, -227.654, -126.655, 0.28 ) }
    dend_7 { pt3dadd( -23.0966, -228.828, -126.901, 0.55 ) }
    dend_7 { pt3dadd( -24.4295, -231.548, -127.576, 0.28 ) }
    dend_7 { pt3dadd( -24.7939, -232.333, -127.8, 1.11 ) }
    dend_7 { pt3dadd( -25.978, -235.294, -128.927, 0.28 ) }
    dend_7 { pt3dadd( -26.4203, -236.684, -129.5, 0.55 ) }
    dend_7 { pt3dadd( -27.122, -239.436, -131.049, 0.28 ) }
    dend_7 { pt3dadd( -27.3682, -240.84, -131.952, 0.55 ) }
    dend_7 { pt3dadd( -27.4825, -241.862, -132.685, 0.55 ) }
    dend_7 { pt3dadd( -27.7588, -244.998, -135.243, 0.28 ) }
    dend_7 { pt3dadd( -27.8374, -245.945, -136.085, 0.55 ) }
    dend_7 { pt3dadd( -28.2399, -249.741, -139.601, 0.28 ) }
    dend_7 { pt3dadd( -28.5534, -251.866, -141.612, 0.28 ) }
    dend_7 { pt3dadd( -28.703, -252.62, -142.366, 0.55 ) }
    dend_7 { pt3dadd( -29.451, -255.209, -144.888, 0.28 ) }
    dend_7 { pt3dadd( -29.7657, -256.044, -145.64, 0.83 ) }
    dend_7 { pt3dadd( -30.4954, -257.825, -147.124, 0.28 ) }
    dend_7 { pt3dadd( -30.6266, -258.17, -147.364, 0.55 ) }
    dend_7 { pt3dadd( -31.4867, -260.493, -148.976, 0.28 ) }
    dend_7 { pt3dadd( -32.0357, -262.262, -150.06, 0.83 ) }
    dend_7 { pt3dadd( -32.6542, -264.817, -151.392, 0.28 ) }
    dend_7 { pt3dadd( -32.828, -265.819, -151.876, 0.55 ) }
    dend_7 { pt3dadd( -33.1854, -268.982, -153.253, 0.28 ) }
    dend_7 { pt3dadd( -33.2182, -269.56, -153.479, 0.55 ) }
    dend_7 { pt3dadd( -33.2205, -271.404, -153.983, 0.28 ) }
    dend_7 { pt3dadd( -33.1964, -271.893, -154.098, 0.55 ) }
    dend_7 { pt3dadd( -32.9839, -274.376, -154.57, 0.28 ) }
    dend_7 { pt3dadd( -32.9215, -274.977, -154.682, 0.83 ) }
    dend_7 { pt3dadd( -32.7141, -277.536, -155.084, 0.28 ) }
    dend_7 { pt3dadd( -32.625, -279.898, -155.509, 0.55 ) }
    dend_7 { pt3dadd( -32.6772, -281.593, -155.812, 0.55 ) }
    dend_7 { pt3dadd( -33.0266, -285.109, -156.423, 0.28 ) }
    dend_7 { pt3dadd( -33.1945, -286.037, -156.605, 0.83 ) }
    dend_7 { pt3dadd( -33.5921, -287.247, -156.856, 0.83 ) }
    dend_7 { pt3dadd( -35.0777, -290.132, -157.488, 0.28 ) }
    dend_7 { pt3dadd( -36.2562, -291.845, -157.885, 0.28 ) }
    dend_7 { pt3dadd( -37.0178, -292.731, -158.036, 0.55 ) }
    dend_7 { pt3dadd( -38.6605, -294.324, -158.278, 0.28 ) }
    dend_7 { pt3dadd( -40.8238, -296.257, -158.555, 0.28 ) }
    dend_7 { pt3dadd( -41.9609, -297.194, -158.681, 0.55 ) }
    dend_7 { pt3dadd( -43.1719, -297.99, -158.726, 0.28 ) }
    dend_7 { pt3dadd( -43.9451, -298.466, -158.756, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 66/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -45.4205, -235.313, -18.4388, 0.28 ) }
    dend_12 { pt3dadd( -44.0891, -236.622, -18.9766, 0.28 ) }
    dend_12 { pt3dadd( -42.556, -238.13, -19.5958, 0.28 ) }
    dend_12 { pt3dadd( -41.4355, -239.232, -20.0484, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -45.4205, -235.313, -18.4388, 0.55 ) }
    dend_11 { pt3dadd( -48.6684, -238.439, -15.612, 0.55 ) }
    dend_11 { pt3dadd( -50.4636, -240.662, -13.5743, 0.28 ) }
    dend_11 { pt3dadd( -50.9821, -241.68, -12.6399, 0.55 ) }
    dend_11 { pt3dadd( -52.026, -244.921, -9.73807, 0.28 ) }
    dend_11 { pt3dadd( -52.205, -245.992, -8.88218, 0.83 ) }
    dend_11 { pt3dadd( -52.4824, -249.458, -6.30014, 0.28 ) }
    dend_11 { pt3dadd( -52.4085, -249.958, -6.00816, 0.55 ) }
    dend_11 { pt3dadd( -51.7378, -253.031, -4.67531, 0.28 ) }
    dend_11 { pt3dadd( -51.4303, -254.321, -4.20604, 0.55 ) }
    dend_11 { pt3dadd( -50.8547, -257.118, -3.53975, 0.28 ) }
    dend_11 { pt3dadd( -50.6894, -258.469, -3.29822, 0.55 ) }
    dend_11 { pt3dadd( -50.7537, -262.986, -2.73111, 0.28 ) }
    dend_11 { pt3dadd( -51.0769, -266.214, -2.37477, 0.28 ) }
    dend_11 { pt3dadd( -51.2884, -267.36, -2.25342, 0.83 ) }
    dend_11 { pt3dadd( -52.3658, -271.831, -1.69863, 0.28 ) }
    dend_11 { pt3dadd( -52.9444, -273.765, -1.40724, 0.55 ) }
    dend_11 { pt3dadd( -54.7834, -279.194, -0.52488, 0.28 ) }
    dend_11 { pt3dadd( -55.4859, -281.051, -0.150205, 0.55 ) }
    dend_11 { pt3dadd( -56.2734, -283.017, 0.115491, 0.28 ) }
    dend_11 { pt3dadd( -56.8885, -284.554, 0.222301, 0.55 ) }
    dend_11 { pt3dadd( -57.5958, -286.306, 0.31332, 0.28 ) }
    dend_11 { pt3dadd( -58.4309, -288.582, 0.333132, 0.28 ) }
    dend_11 { pt3dadd( -58.828, -289.779, 0.224649, 0.55 ) }
    dend_11 { pt3dadd( -60.4001, -294.674, -0.606015, 0.28 ) }
    dend_11 { pt3dadd( -60.6387, -295.51, -0.86414, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -41.4355, -239.232, -20.0484, 0.28 ) }
    dend_14 { pt3dadd( -39.546, -240.144, -22.0901, 0.28 ) }
    dend_14 { pt3dadd( -38.1805, -240.821, -23.6276, 0.28 ) }
    dend_14 { pt3dadd( -37.5438, -241.078, -24.3276, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( -36.0232, -241.64, -25.9685, 0.28 ) }
    dend_14 { pt3dadd( -35.276, -241.854, -26.6612, 0.55 ) }
    dend_14 { pt3dadd( -33.2521, -242.326, -28.3387, 0.28 ) }
    dend_14 { pt3dadd( -32.7368, -242.414, -28.6834, 0.55 ) }
    dend_14 { pt3dadd( -30.4433, -242.651, -29.914, 0.28 ) }
    dend_14 { pt3dadd( -30.1081, -242.669, -30.0652, 0.55 ) }
    dend_14 { pt3dadd( -27.4565, -242.752, -31.1067, 0.28 ) }
    dend_14 { pt3dadd( -26.4713, -242.799, -31.478, 0.55 ) }
    dend_14 { pt3dadd( -22.5465, -243.121, -32.9104, 0.28 ) }
    dend_14 { pt3dadd( -21.6943, -243.242, -33.2303, 0.55 ) }
    dend_14 { pt3dadd( -19.0572, -243.802, -34.2673, 0.28 ) }
    dend_14 { pt3dadd( -17.1491, -244.359, -35.1157, 0.28 ) }
    dend_14 { pt3dadd( -15.9679, -244.831, -35.7468, 0.55 ) }
    dend_14 { pt3dadd( -14.1988, -245.757, -36.945, 0.28 ) }
    dend_14 { pt3dadd( -13.3563, -246.339, -37.6723, 0.28 ) }
    dend_14 { pt3dadd( -12.9004, -246.708, -38.1624, 0.55 ) }
    dend_14 { pt3dadd( -11.5229, -248.037, -39.9909, 0.28 ) }
    dend_14 { pt3dadd( -11.0441, -248.533, -40.6666, 0.83 ) }
    dend_14 { pt3dadd( -9.21975, -250.475, -43.4142, 0.28 ) }
    dend_14 { pt3dadd( -9.05266, -250.658, -43.6915, 0.55 ) }
    dend_14 { pt3dadd( -7.77929, -252.029, -45.9179, 0.28 ) }
    dend_14 { pt3dadd( -7.65659, -252.157, -46.1377, 0.55 ) }
    dend_14 { pt3dadd( -6.56813, -253.326, -48.2035, 0.28 ) }
    dend_14 { pt3dadd( -6.05319, -253.833, -49.0035, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 24/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -41.4355, -239.232, -20.0484, 0.28 ) }
    dend_13 { pt3dadd( -39.5906, -244.622, -22.2727, 0.28 ) }
    dend_13 { pt3dadd( -39.2395, -245.626, -22.5757, 0.55 ) }
    dend_13 { pt3dadd( -38.5654, -247.717, -23.1299, 0.28 ) }
    dend_13 { pt3dadd( -38.4448, -248.112, -23.1882, 0.55 ) }
    dend_13 { pt3dadd( -38.0924, -249.429, -23.3109, 0.28 ) }
    dend_13 { pt3dadd( -37.9372, -250.058, -23.3545, 0.55 ) }
    dend_13 { pt3dadd( -37.515, -252.04, -23.1604, 0.28 ) }
    dend_13 { pt3dadd( -37.3885, -252.694, -23.1337, 0.55 ) }
    dend_13 { pt3dadd( -36.86, -255.577, -23.1213, 0.28 ) }
    dend_13 { pt3dadd( -36.5273, -257.201, -23.1095, 0.28 ) }
    dend_13 { pt3dadd( -36.4243, -257.734, -23.1035, 0.55 ) }
    dend_13 { pt3dadd( -36.0094, -260.059, -23.0231, 0.28 ) }
    dend_13 { pt3dadd( -35.9354, -260.563, -22.9806, 0.55 ) }
    dend_13 { pt3dadd( -35.768, -262.147, -22.8306, 0.28 ) }
    dend_13 { pt3dadd( -35.7604, -263.364, -22.6573, 0.55 ) }
    dend_13 { pt3dadd( -35.9513, -265.823, -22.1599, 0.28 ) }
    dend_13 { pt3dadd( -36.0234, -266.42, -22.0242, 0.55 ) }
    dend_13 { pt3dadd( -36.5205, -268.95, -21.3508, 0.28 ) }
    dend_13 { pt3dadd( -36.7717, -269.901, -21.0665, 0.83 ) }
    dend_13 { pt3dadd( -37.5551, -271.937, -20.391, 0.28 ) }
    dend_13 { pt3dadd( -37.8385, -272.502, -20.1766, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_33, dend_32, dend_31, dend_30, dend_25, dend_19, dend_0, dend_29, dend_26, dend_20, dend_16, dend_1, dend_28, dend_27, dend_24, dend_21, dend_18, dend_17, dend_5, dend_2, dend_23, dend_22, dend_9, dend_6, dend_4, dend_3, dend_15, dend_10, dend_8, dend_7, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_31 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_30 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_21 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_15 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_10 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_8 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_11 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_16 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_25 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_19 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_33 OneSecGrp_SectionRef_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_32 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_20 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_27 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_23 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_22 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_13 OneSecGrp_SectionRef_37.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_25, dend_25, dend_25, dend_19, dend_19, dend_19, dend_19, dend_19, dend_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_31 nseg = 11
    dend_30 nseg = 11
    dend_29 nseg = 11
    dend_26 nseg = 9
    dend_24 nseg = 7
    dend_21 nseg = 9
    dend_18 nseg = 7
    dend_17 nseg = 7
    dend_6 nseg = 13
    dend_4 nseg = 17
    dend_3 nseg = 7
    dend_15 nseg = 11
    dend_10 nseg = 11
    dend_8 nseg = 5
    dend_7 nseg = 5
    dend_11 nseg = 3
    dend_14 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_LBC_0226c205f1_0_0


